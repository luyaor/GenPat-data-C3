{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c746f4723baf7f179103757a03ceb109", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9646596ab03e05c9757ac7680fc40e7f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 34, "signatureBeforeChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidBlockWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"22: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 7, 8),", "-            \"23: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "-            \"25: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 7, 8),", "-            \"28: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "-            \"30: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "-            \"31: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "-            \"34: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "-            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "-            \"35: \" + getCheckMessage(MSG_ERROR, \"member def type\", 13, 12),", "-            \"37: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "-            \"38: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 9, 8),", "-            \"41: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "-            \"42: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "-            \"42: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "-            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "-            \"45: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "-            \"48: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "-            \"51: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "-            \"55: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "-            \"59: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"64: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "-            \"66: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "-            \"67: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"67: \" + getCheckMessage(MSG_ERROR, \"member def type\", 14, 16),", "-            \"82: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"91: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "-            \"92: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "-            \"96: \" + getCheckMessage(MSG_ERROR, \"member def type\", 7, 8),", "-            \"96: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 7, 8),", "-            \"99: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "-            \"101: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "-            \"103: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "-            \"105: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 7, 8),", "+            \"27: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"29: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 7, 8),", "+            \"32: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"34: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "+            \"35: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"38: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 9, 8),", "+            \"39: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "+            \"39: \" + getCheckMessage(MSG_ERROR, \"member def type\", 13, 12),", "+            \"41: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 13, 12),", "+            \"42: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 9, 8),", "+            \"45: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"46: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"46: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"48: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"49: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 8),", "+            \"52: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 8),", "+            \"55: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"member def type\", 10, 12),", "+            \"59: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"63: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"68: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 10, 12),", "+            \"70: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"71: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"71: \" + getCheckMessage(MSG_ERROR, \"member def type\", 14, 16),", "+            \"86: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"95: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "+            \"96: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "+            \"100: \" + getCheckMessage(MSG_ERROR, \"member def type\", 7, 8),", "+            \"100: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 7, 8),", "+            \"103: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 6, 4),", "+            \"105: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "-            \"109: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "-            \"109: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "-            \"112: \" + getCheckMessage(MSG_ERROR, \"static initialization lcurly\", 2, 4),", "+            \"109: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"111: \" + getCheckMessage(MSG_ERROR, \"static initialization\", 2, 4),", "-            \"114: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "-            \"119: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "-            \"119: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "-            \"124: \" + getCheckMessage(MSG_ERROR, \"member def type\", 4, 8),", "-            \"124: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 4, 8),", "-            \"125: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "-            \"130: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "-            \"133: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 2, 4),", "-            \"134: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "+            \"116: \" + getCheckMessage(MSG_ERROR, \"static initialization lcurly\", 2, 4),", "+            \"117: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"117: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "+            \"118: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "+            \"123: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"123: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 6, 8),", "+            \"128: \" + getCheckMessage(MSG_ERROR, \"member def type\", 4, 8),", "+            \"128: \" + getCheckMessage(MSG_CHILD_ERROR, \"static initialization\", 4, 8),", "+            \"129: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 2, 4),", "+            \"134: \" + getCheckMessage(MSG_ERROR, \"static initialization rcurly\", 6, 4),", "-            \"139: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 4),", "-            \"141: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "-            \"143: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 2, 4),", "-            \"146: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 6, 8),", "-            \"146: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "+            \"138: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "+            \"141: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 2, 4),", "+            \"143: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 6, 4),", "+            \"145: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 6, 4),", "+            \"147: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 2, 4),", "+            \"150: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 6, 8),", "+            \"150: \" + getCheckMessage(MSG_ERROR, \"member def type\", 6, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 10);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dff7fd9ecca4ae471cb484b43cb621a1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 35, "signatureBeforeChange": "      @Test     public void testInvalidIfWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidIfWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"50: \" + getCheckMessage(MSG_ERROR, \"if\", 1, 8),", "-            \"55: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "-            \"56: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 9, 8),", "-            \"57: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "-            \"59: \" + getCheckMessage(MSG_ERROR, \"if\", 6, 8),", "-            \"60: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 5, 8),", "-            \"61: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 5, 8),", "-            \"65: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "-            \"66: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 7, 8),", "-            \"69: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "-            \"70: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 7, 8),", "-            \"72: \" + getCheckMessage(MSG_ERROR, \"else\", 9, 8),", "-            \"74: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 9, 8),", "-            \"77: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 8),", "-            \"78: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "-            \"79: \" + getCheckMessage(MSG_ERROR, \"else\", 9, 8),", "-            \"80: \" + getCheckMessage(MSG_ERROR, \"else lcurly\", 7, 8),", "-            \"81: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 9, 8),", "-            \"85: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "-            \"86: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 9, 8),", "-            \"87: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 9, 8),", "-            \"88: \" + getCheckMessage(MSG_ERROR, \"else lcurly\", 7, 8),", "-            \"89: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 10, 8),", "-            \"92: \" + getCheckMessage(MSG_ERROR, \"if\", 6, 8),", "-            \"93: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 10, 8),", "-            \"94: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "-            \"95: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 7, 8),", "-            \"98: \" + getCheckMessage(MSG_ERROR, \"if\", 5, 8),", "-            \"99: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 11, 8),", "-            \"100: \" + getCheckMessage(MSG_ERROR, \"else\", 5, 8),", "-            \"101: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 11, 8),", "-            \"121: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "-            \"126: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 10, 8),", "-            \"127: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "-            \"127: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"132: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "-            \"133: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"135: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 10, 12),", "-            \"135: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"136: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "-            \"143: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 16, 12),", "-            \"144: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 9, 8),", "-            \"147: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 16, 12),", "-            \"153: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 0, 12),", "-            \"153: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 0, 12),", "-            \"157: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 40, 12),", "-            \"164: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "-            \"167: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 14, 12),", "-            \"173: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "-            \"173: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"175: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 10, 12),", "-            \"175: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"179: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 8),", "-            \"180: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "-            \"181: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "-            \"182: \" + getCheckMessage(MSG_ERROR, \"else\", 10, 8),", "-            \"183: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 14, 12),", "-            \"184: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 10, 8),", "-            \"187: \" + getCheckMessage(MSG_ERROR, \"&&\", 9, 12),", "-            \"187: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 9, 12),", "-            \"188: \" + getCheckMessage(MSG_ERROR, \"&&\", 11, 12),", "-            \"188: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 11, 12),", "-            \"192: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "-            \"195: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "-            \"202: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "-            \"202: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"204: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "-            \"204: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"220: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 12),", "-            \"224: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 20),", "-            \"224: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 18, 20),", "-            \"228: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 40, 8),", "-            \"235: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 10, 8),", "-            \"240: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 6, 8),", "-            \"246: \" + getCheckMessage(MSG_ERROR, \"(\", 6, 12),", "-            \"246: \" + getCheckMessage(MSG_ERROR, \"if lparen\", 6, 8),", "-            \"248: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 6, 8),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"if\", 1, 8),", "+            \"60: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "+            \"61: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 9, 8),", "+            \"62: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "+            \"64: \" + getCheckMessage(MSG_ERROR, \"if\", 6, 8),", "+            \"65: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 5, 8),", "+            \"66: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 5, 8),", "+            \"70: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "+            \"71: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 7, 8),", "+            \"74: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "+", "+            \"75: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 7, 8),", "+            \"77: \" + getCheckMessage(MSG_ERROR, \"else\", 9, 8),", "+            \"79: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 9, 8),", "+            \"82: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 8),", "+            \"83: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "+            \"84: \" + getCheckMessage(MSG_ERROR, \"else\", 9, 8),", "+            \"85: \" + getCheckMessage(MSG_ERROR, \"else lcurly\", 7, 8),", "+            \"86: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 9, 8),", "+", "+            \"90: \" + getCheckMessage(MSG_ERROR, \"if\", 9, 8),", "+            \"91: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 9, 8),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 9, 8),", "+            \"93: \" + getCheckMessage(MSG_ERROR, \"else lcurly\", 7, 8),", "+            \"94: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 10, 8),", "+            \"97: \" + getCheckMessage(MSG_ERROR, \"if\", 6, 8),", "+            \"98: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 10, 8),", "+            \"99: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "+            \"100: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 7, 8),", "+            \"103: \" + getCheckMessage(MSG_ERROR, \"if\", 5, 8),", "+            \"104: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 11, 8),", "+            \"105: \" + getCheckMessage(MSG_ERROR, \"else\", 5, 8),", "+            \"106: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 11, 8),", "+", "+            \"126: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "+            \"131: \" + getCheckMessage(MSG_ERROR, \"if lcurly\", 10, 8),", "+            \"132: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "+            \"132: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"137: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "+            \"138: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"140: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 10, 12),", "+            \"140: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"141: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "+", "+            \"148: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 16, 12),", "+            \"149: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 9, 8),", "+            \"152: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 16, 12),", "+            \"158: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 0, 12),", "+            \"158: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 0, 12),", "+            \"162: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 40, 12),", "+            \"169: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "+", "+            \"172: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 14, 12),", "+            \"178: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "+            \"178: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"180: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 10, 12),", "+            \"180: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"184: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 8),", "+            \"185: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 14, 12),", "+            \"186: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 10, 8),", "+            \"187: \" + getCheckMessage(MSG_ERROR, \"else\", 10, 8),", "+", "+            \"188: \" + getCheckMessage(MSG_CHILD_ERROR, \"else\", 14, 12),", "+            \"189: \" + getCheckMessage(MSG_ERROR, \"else rcurly\", 10, 8),", "+            \"192: \" + getCheckMessage(MSG_ERROR, \"&&\", 9, 12),", "+            \"192: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 9, 12),", "+            \"193: \" + getCheckMessage(MSG_ERROR, \"&&\", 11, 12),", "+            \"193: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 11, 12),", "+            \"197: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "+            \"200: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 7, 8),", "+            \"207: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "+            \"207: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"209: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 10, 12),", "+            \"209: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+", "+            \"225: \" + getCheckMessage(MSG_ERROR, \"if\", 10, 12),", "+            \"229: \" + getCheckMessage(MSG_CHILD_ERROR, \"if\", 18, 20),", "+            \"229: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 18, 20),", "+            \"233: \" + getCheckMessage(MSG_ERROR, \"if rcurly\", 40, 8),", "+            \"240: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 10, 8),", "+            \"245: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 6, 8),", "+            \"251: \" + getCheckMessage(MSG_ERROR, \"(\", 6, 12),", "+            \"251: \" + getCheckMessage(MSG_ERROR, \"if lparen\", 6, 8),", "+            \"253: \" + getCheckMessage(MSG_ERROR, \"if rparen\", 6, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 11);"]}]}