{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce4bbac7e19a405b5af21b4f2762db86", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57aa22dff52d1bb084c7acf43fc70012", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "38c44ee0e91230d52f7eda98404049fec8456d7b", "commitAfterChange": "a4222b86ea273554e5f42c834dd81a029a069ac1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "signatureAfterChange": "     protected void setupChild(Configuration aChildConf)         throws CheckstyleException", "diff": ["+            if (child instanceof AutomaticBean) {", "+                final AutomaticBean bean = (AutomaticBean) child;", "+                bean.contextualize(mChildContext);", "+                bean.configure(aChildConf);", "+            }", "-                fsc.contextualize(mChildContext);", "-                fsc.configure(aChildConf);", "-                addFileSetCheck(fsc);", "+                 addFileSetCheck(fsc);", "-                filter.contextualize(mChildContext);", "-                filter.configure(aChildConf);", "+            else if (child instanceof AuditListener) {", "+                final AuditListener listener = (AuditListener) child;", "+                addListener(listener);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5975e7430d14b52cf43d4f85af9b98a4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "e21177aefee3694a53edd75b41c6c1760bf1301a", "commitAfterChange": "3bee3800f4c10f34f2bd0736cc09830a7f9eb6ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public JTreeTable(TreeTableModel treeTableModel)", "signatureAfterChange": "      public JTreeTable(TreeTableModel treeTableModel)", "diff": ["+", "+        Action expand = new AbstractAction() {", "+                public void actionPerformed(ActionEvent e) {", "+                    TreePath selected = tree.getSelectionPath();", "+                    if (tree.isExpanded(selected)) {", "+                        tree.collapsePath(selected);", "+                    }", "+                    else {", "+                        tree.expandPath(selected);", "+                    }", "+                    tree.setSelectionPath(selected);", "+                }", "+            };", "+        KeyStroke stroke = KeyStroke.getKeyStroke(\"ENTER\");", "+        String command = \"expand/collapse\";", "+        getInputMap().put(stroke, command);", "+        getActionMap().put(command, expand);"]}]}