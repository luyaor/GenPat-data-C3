{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a9cd0a5c40979d52f0d1f774e3f210d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8219363fa871dd6551e99c9ff12914ac", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d0e8581e9ce7dd420b94cb837b4331ec0baa9e4d", "commitAfterChange": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public final void setCustomImportOrderRules(final String inputCustoimportOrder)", "signatureAfterChange": "     public final void setCustomImportOrderRules(final String inputCustomImportOrder)", "diff": ["-    public final void setCustomImportOrderRules(final String inputCustoimportOrder) {", "+    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {", "-        try {", "-            for (String currentState : inputCustoimportOrder", "-                    .split(\"\\\\s*###\\\\s*\")) {", "-                addRuleastoList(currentState);", "-            }", "-            customImportOrderRules.add(NON_GROUP_RULE_GROUP);", "+        for (String currentState : inputCustomImportOrder", "+                .split(\"\\\\s*###\\\\s*\")) {", "+            addRuleastoList(currentState);", "-        catch (StringIndexOutOfBoundsException exp) {", "-            //if the structure of the input rule isn't correct", "-            throw new RuntimeException(\"Unable to parse input rule: \" + exp);", "-        }", "+        customImportOrderRules.add(NON_GROUP_RULE_GROUP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871e39c1087287ead0c9cdeb1f008f32", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeInfoPanel.java", "commitBeforeChange": "290ae38a14021785018fbfa7c2651200534a88ca", "commitAfterChange": "1dacd5303bfe94b9d5476059b6a5676146d96708", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public void openFile(File file, final Component parent)", "signatureAfterChange": "       public void openFile(File file, final Component parent)", "diff": ["-            catch (final IOException ex) {", "+            catch (final IOException | ANTLRException ex) {", "-                        \"Could not open \" + file + \": \" + ex.getMessage());", "-            }", "-            catch (final ANTLRException ex) {", "-                showErrorDialog(", "-                        parent,", "-                        \"Could not parse \" + file + \": \" + ex.getMessage());", "+                        \"Could not parse\" + file + \": \" + ex.getMessage());"]}]}