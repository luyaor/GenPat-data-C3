{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0aa03ada0739d99868a2e175d107ab78", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd859d18854e1e3218d895d29d4b74c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheckTest.java", "commitBeforeChange": "a49a54133714df69aaad1c0730f0d01b24318dbe", "commitAfterChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "signatureAfterChange": "      @Test     public void testTypeNamesForFivePermittedCapitalLetters() throws Exception", "diff": ["-        warningMessage = getCheckMessage(MSG_KEY, expectedCapitalCount);", "-            \"32: \" + warningMessage,", "-            \"37: \" + warningMessage,", "+            \"32: \" + getWarningMessage(\"AbstractINNERRClass\", expectedCapitalCount),", "+            \"37: \" + getWarningMessage(\"WellNamedFACTORY\", expectedCapitalCount),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d999fa1004b6f60b1e8893c8aa925869", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "     private void setIntProperty(Properties aProps, PrintStream aLog,                                 String aName, int aDefault)", "signatureAfterChange": "     private void setIntProperty(Properties aProps,                                 PrintStream aLog,                                 String aName)", "diff": ["-    private void setIntProperty(Properties aProps, PrintStream aLog,", "-                                String aName, int aDefault)", "+    private void setIntProperty(Properties aProps,", "+                                PrintStream aLog,", "+                                String aName)", "-        int val = aDefault;", "-                val = Integer.parseInt(strRep);", "+                final int val = Integer.parseInt(strRep);", "+                setIntProperty(aName, val);", "-                aLog.println(\"Unable to parse \" + aName", "-                             + \" property with value \" + strRep", "-                             + \", defaulting to \" + aDefault + \".\");", "+                aLog.println(", "+                    \"Unable to parse \"", "+                        + aName", "+                        + \" property with value \"", "+                        + strRep", "+                        + \", defaulting to \"", "+                        + getIntProperty(aName)", "+                        + \".\");", "-        setIntProperty(aName, val);"]}]}