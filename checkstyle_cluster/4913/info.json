{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2285748ea97c5dfb20fd2892abdbbf6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a13571c4d576861985ad9f565e7581a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java", "commitBeforeChange": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94", "commitAfterChange": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private String getTagId(String[] aText, Point aTagStart)", "signatureAfterChange": "     private String getTagId(String[] aText, Point aTagStart)", "diff": ["-                       && text.charAt(column) <= 'z')))", "+                       && text.charAt(column) <= 'z')", "+                   || (text.charAt(column) >= '0'", "+                       && text.charAt(column) <= '9')))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ea5d6aa220e12e6033fb8392a79f48e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "0fdfc2f36086a108407fc7d51edc5b8c934b658a", "commitAfterChange": "8313819dcbf3e9cc0700120014c78a99706d88bb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public void visitToken(DetailAST aAST)", "signatureAfterChange": "      public void visitToken(DetailAST aAST)", "diff": ["-            && !Character.isWhitespace(line.charAt(after)))", "+            && !Character.isWhitespace(line.charAt(after))", "+            && !(aAST.getType() == LITERAL_return && aAST.getFirstChild() == null))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8b27c090cc59a89eadfa66af635f123", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "4a5ccfb6fe4d4d2cf9d74419b3292bbb46ad4149", "commitAfterChange": "59378eb655ad45ca3f6e32b050882c85156d62ff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+            // Check for \"return;\"", "-                 && (aAST.getFirstChild().getType() == TokenTypes.SEMI)))", "+                && (aAST.getFirstChild().getType() == TokenTypes.SEMI))", "+            // Check for \"})\". Happens with anon-inners", "+            && !((aAST.getType() == TokenTypes.RCURLY)", "+                && (line.charAt(after) == ')')))"]}]}