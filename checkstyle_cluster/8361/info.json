{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67b61be95167c5b94d51c5e2b019e7ef", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563939dec0ba54c49f2d238365d6ab87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "0868085098dfde138eee8817c66cd4d214633403", "commitAfterChange": "ae0e7def779cddabf1e93ee744b9b341ef27647f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "signatureAfterChange": "     private void verifyBrace(final DetailAST brace,                              final DetailAST startToken)", "diff": ["-                // not on the same line", "-                if (startToken.getLineNo() + 1 == brace.getLineNo()) {", "-                    if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                        log(brace.getLineNo(), brace.getColumnNo(),", "-                                MSG_KEY_LINE_NEW, \"{\");", "-                    }", "-                    else if (prevLineLen + 2 <= maxLineLength) {", "-                        log(brace.getLineNo(), brace.getColumnNo(),", "-                                MSG_KEY_LINE_PREVIOUS, \"{\");", "-                    }", "-                }", "-                else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {", "-                    log(brace.getLineNo(), brace.getColumnNo(),", "-                            MSG_KEY_LINE_NEW, \"{\");", "-                }", "+", "+                validateNewLinePosion(brace, startToken, braceLine, prevLineLen);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e459387e7a5de85d550ff977e65b49", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "51941dcf2475545cee7b754acd5e2494c53acf9c", "commitAfterChange": "b1cfd257eb46dba42033984145134eae5880f657", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "signatureAfterChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "diff": ["-        // check surrounded by whitespace", "-        verifyWSAroundBegin(aBrace.getLineNo(),", "-                            aBrace.getColumnNo() + 1,", "-                            aBrace.getText());", "-", "-        // Check the actual brace", "-        if ((mConfig.getRCurly() == RightCurlyOption.SAME)", "-            && (aBrace.getLineNo() != aStartLine))", "-        {", "-            mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                          \"line.same\", \"}\");", "-        }", "-        else if ((mConfig.getRCurly() == RightCurlyOption.ALONE)", "-                   && (aBrace.getLineNo() == aStartLine))", "-        {", "-            mMessages.add(aBrace.getLineNo(), aBrace.getColumnNo(),", "-                          \"line.alone\", \"}\");", "-        }"]}]}