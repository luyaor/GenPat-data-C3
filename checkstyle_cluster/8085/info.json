{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c9279073aea26df1867af5b7597c10f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4cce649347d117418b909a5ea52080", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 32, "signatureBeforeChange": "      @Test     public void testInvalidTryWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidTryWithChecker()         throws Exception", "diff": ["-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"21: \" + getCheckMessage(MSG_ERROR, \"try\", 9, 8),", "-            \"22: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 7, 8),", "-            \"24: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 7, 8),", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"try\", 4, 8),", "-            \"27: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "-            \"27: \" + getCheckMessage(MSG_CHILD_ERROR, \"try\", 8, 12),", "-            \"28: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 4, 8),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"finally\", 8, 12),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "-            \"34: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 8, 12),", "-            \"34: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "-            \"39: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 10, 8),", "-            \"41: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 6, 8),", "-            \"48: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 5, 8),", "-            \"55: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "-            \"55: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"56: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 14, 12),", "-            \"57: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "-            \"57: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-            \"59: \" + getCheckMessage(MSG_ERROR, \"catch\", 6, 8),", "-            \"66: \" + getCheckMessage(MSG_ERROR, \"try lcurly\", 10, 8),", "-            \"68: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 10, 8),", "-            \"70: \" + getCheckMessage(MSG_ERROR, \"catch lcurly\", 6, 8),", "-            \"73: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 10, 8),", "-            \"76: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "-            \"76: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"25: \" + getCheckMessage(MSG_ERROR, \"try\", 9, 8),", "+            \"26: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 7, 8),", "+            \"28: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 7, 8),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"try\", 4, 8),", "+            \"31: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "+            \"31: \" + getCheckMessage(MSG_CHILD_ERROR, \"try\", 8, 12),", "+            \"32: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 4, 8),", "+            \"33: \" + getCheckMessage(MSG_CHILD_ERROR, \"finally\", 8, 12),", "+            \"33: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "+            \"38: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 8, 12),", "+            \"38: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 8, 12),", "+            \"43: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 10, 8),", "+            \"45: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 6, 8),", "+            \"52: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 5, 8),", "+            \"59: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "+            \"59: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"60: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 14, 12),", "+            \"61: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "+            \"61: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "+            \"63: \" + getCheckMessage(MSG_ERROR, \"catch\", 6, 8),", "+            \"70: \" + getCheckMessage(MSG_ERROR, \"try lcurly\", 10, 8),", "+            \"72: \" + getCheckMessage(MSG_ERROR, \"try rcurly\", 10, 8),", "+            \"74: \" + getCheckMessage(MSG_ERROR, \"catch lcurly\", 6, 8),", "+            \"77: \" + getCheckMessage(MSG_ERROR, \"catch rcurly\", 10, 8),", "+            \"80: \" + getCheckMessage(MSG_CHILD_ERROR, \"catch\", 10, 12),", "+            \"80: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 10, 12),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d6d19650cfa1531c49da83981b548dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheckTest.java", "commitBeforeChange": "69976b5365b7c33a602dd814337e2db1136288fc", "commitAfterChange": "ac8eadea0b1fb183d56cd809a34a7b9047b47d47", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 26, "signatureBeforeChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "signatureAfterChange": "      @Test     public void testInvalidSwitchWithChecker()         throws Exception", "diff": ["+", "-        final Checker c = createChecker(checkConfig);", "+", "+        checkConfig.addAttribute(\"arrayInitIndent\", \"4\");", "+        checkConfig.addAttribute(\"basicOffset\", \"4\");", "+        checkConfig.addAttribute(\"braceAdjustment\", \"0\");", "+        checkConfig.addAttribute(\"caseIndent\", \"4\");", "+        checkConfig.addAttribute(\"forceStrictCondition\", \"false\");", "+        checkConfig.addAttribute(\"lineWrappingIndentation\", \"4\");", "+        checkConfig.addAttribute(\"tabWidth\", \"4\");", "+        checkConfig.addAttribute(\"throwsIndent\", \"4\");", "-            \"26: \" + getCheckMessage(MSG_ERROR, \"switch\", 6, 8),", "-            \"28: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"29: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"30: \" + getCheckMessage(MSG_ERROR, \"switch\", 6, 8),", "+            \"32: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"35: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 12),", "-            \"36: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"39: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "-            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "-            \"41: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"49: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "-            \"49: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "-            \"50: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 18, 16),", "-            \"51: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"55: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "-            \"58: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 14, 12),", "-            \"62: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 14, 12),", "-            \"65: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "-            \"72: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "-            \"77: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "-            \"85: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "-            \"88: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 6, 8),", "-            \"89: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 10, 8),", "-            \"91: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 10, 8),", "-            \"92: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "+            \"33: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"37: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"39: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 12),", "+            \"40: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "+            \"43: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 10, 12),", "+            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"44: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"45: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"53: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 14, 16),", "+            \"53: \" + getCheckMessage(MSG_CHILD_ERROR, \"method call\", 14, 16),", "+            \"54: \" + getCheckMessage(MSG_CHILD_ERROR, \"block\", 18, 16),", "+            \"55: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"59: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 10, 12),", "+            \"62: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 14, 12),", "+            \"66: \" + getCheckMessage(MSG_ERROR, \"block lcurly\", 14, 12),", "+            \"69: \" + getCheckMessage(MSG_ERROR, \"block rcurly\", 10, 12),", "+            \"76: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "+            \"81: \" + getCheckMessage(MSG_CHILD_ERROR, \"case\", 14, 16),", "+            \"89: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "+            \"92: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 6, 8),", "+            \"93: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 10, 8),", "+            \"95: \" + getCheckMessage(MSG_ERROR, \"switch lcurly\", 10, 8),", "+            \"96: \" + getCheckMessage(MSG_ERROR, \"switch rcurly\", 6, 8),", "-        verify(c, fname, expected);", "+        verifyWarns(checkConfig, fname, expected, 3);"]}]}