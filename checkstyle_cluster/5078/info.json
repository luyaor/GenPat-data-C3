{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "631ddadf7eb5cd54b4f716825d164d91", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30c437dbd77d5c07d1dffb0624079aea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java", "commitBeforeChange": "6db0b3effd48f02d741b2202338d710b1b254910", "commitAfterChange": "59de966a7e8a2225da2b1e12624ca24beab509ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (aAST.getParent().getType() == TokenTypes.SLIST) {", "+        final DetailAST parent = aAST.getParent();", "+        if (parent.getType() == TokenTypes.SLIST) {", "+            if (mAllowInSwitchCase", "+                    && parent.getParent().getType() == TokenTypes.CASE_GROUP", "+                    && parent.getNumberOfChildren() == 1)", "+            {", "+                return;", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c9b53693715775c71a7527e7f137ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/AssignHandler.java", "commitBeforeChange": "2c8f014f31a0e32d3c92e7e0659c27ce30a72bf0", "commitAfterChange": "7dd31794bcc6258ffaa1ed5533a3b5a7c2f2af1a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void checkIndentation()", "signatureAfterChange": "     public void checkIndentation()", "diff": ["-        if (assign.getParent() != null", "-            && assign.getParent().getType() == TokenTypes.EXPR)", "-        {", "+        final DetailAST parent = assign.getParent();", "+        if (parent != null && parent.getType() == TokenTypes.EXPR) {", "+        if (parent != null", "+            && parent.getType() == TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)", "+        {", "+            child = (DetailAST) assign.getNextSibling();", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0f4be5eeb08ae68a663f100a6a2c45", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/OperatorWrapCheck.java", "commitBeforeChange": "4f2f342589c710d31ad0ac93b56755c41dd73f73", "commitAfterChange": "865ba5284aace7651f93dc81b0c196d1316a9fdd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        if (aAST.getType() == TokenTypes.COLON) {", "+            DetailAST parent = aAST.getParent();", "+            if (parent.getType() == TokenTypes.LITERAL_DEFAULT", "+                || parent.getType() == TokenTypes.LITERAL_CASE)", "+            {", "+                //we do not want to check colon for cases and defaults", "+                return;", "+            }", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8493d9db35627033d098f0ef10b636c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "1c2c822688b560351d016f29946fd6697f3fa9b8", "commitAfterChange": "9c3b17b9db6c0884d4d456b4d6219abc03a453d4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            case TokenTypes.SLIST:", "-", "+            case TokenTypes.SLIST:", "+                if (ast.getParent().getType() != TokenTypes.CASE_GROUP", "+                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)", "+                    == ast.getParent()) {", "+                    scopeStack.push(new ScopeData());", "+                }", "+                break;"]}]}