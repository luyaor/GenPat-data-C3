{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4d31804d270565292cc324be085b360", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c70c84fa6a8e36106c805a29fff49df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "1c8180d74fbed939e5de56ee87760032f42f8df6", "commitAfterChange": "04ceb4b91f4e66439479406834f42014c5be62ed", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "signatureAfterChange": "     private DetailAST getFirstNodeInsideForWhileDoWhileBlocks(             DetailAST block, DetailAST variable)", "diff": ["-                else if (currentNodeType == TokenTypes.VARIABLE_DEF", "-                        || currentNodeType == TokenTypes.EXPR)", "+                else if (currentNodeType != TokenTypes.VARIABLE_DEF", "+                        && currentNodeType != TokenTypes.EXPR)", "-                    // no code", "-                }", "-                else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b07bd1e3cd19e56e2680511f7ed5a2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "a69a0461d2125ceac1e5a123c3ff24a94a784d50", "commitAfterChange": "fcbd40f3ce04fe3011bf0e1b2642ac1fd049f5de", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public final void leaveToken(DetailAST aAST)", "signatureAfterChange": "     public final void leaveToken(DetailAST aAST)", "diff": ["-        if (aAST.getType() == TokenTypes.CLASS_DEF) {", "+        if (aAST.getType() == TokenTypes.CLASS_DEF", "+            || aAST.getType() == TokenTypes.ENUM_DEF)", "+        {", "+        else if (aAST.getType() != TokenTypes.PACKAGE_DEF", "+                 && aAST.getType() != TokenTypes.IMPORT)", "+        {", "+            leaveAST(aAST);", "+        }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576aaad7cb16acab5f81e0bb70455df5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "6e775898e7d1ac179bcb6550f3023ee9b9d70bc3", "commitAfterChange": "8607274a9205c5f15c33820b0efa6dc4c5ea9a23", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private boolean isSuperCallInOverridingMethod(DetailAST ast)", "signatureAfterChange": "     private boolean isSuperCallInOverridingMethod(DetailAST ast)", "diff": ["-        while (dotAst != null) {", "+        while (dotAst != null", "+                && dotAst.getType() != TokenTypes.CTOR_DEF", "+                && dotAst.getType() != TokenTypes.INSTANCE_INIT) {", "+", "-            if (dotAst.getType() == TokenTypes.CTOR_DEF", "-                || dotAst.getType() == TokenTypes.INSTANCE_INIT) {", "-                break;", "-            }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54f0351fe5b1e6c9afaf8ee6e5c6a02", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java", "commitBeforeChange": "5d31b9e6ef9b950a2f04535d2bba6eac446949bc", "commitAfterChange": "c75c77dff73b803284ea152105cd64b0fc55d58b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST aAST)", "diff": ["-        else if ((aAST.getType() == TokenTypes.CLASS_DEF)", "-            || (aAST.getType() == TokenTypes.INTERFACE_DEF)", "-            || (aAST.getType() == TokenTypes.ENUM_DEF)", "-            || (aAST.getType() == TokenTypes.ANNOTATION_DEF)", "-            || (aAST.getType() == TokenTypes.PACKAGE_DEF))", "-        {", "+        else {", "+            if (mProcessJavadoc) {", "+                processJavadoc(aAST);", "+            }"]}]}