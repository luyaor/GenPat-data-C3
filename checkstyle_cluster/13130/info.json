{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82ffc8a833c158339bcda054564050c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25aa7c541d5e0d5ee68bc6918b24faf0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "d67d10e9f2b480f7f56fe7cda2a908cd5fe770c7", "commitAfterChange": "f65b17cbc30795247fef3077cce16a8bb53e9ffc", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "      @Test     public void testLoadPropertiesIoException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadPropertiesIoException() throws Exception", "diff": ["-        catch (InvocationTargetException e) {", "-            assertTrue(e.getCause() instanceof CheckstyleException);", "+        catch (InvocationTargetException ex) {", "+            assertTrue(ex.getCause() instanceof CheckstyleException);", "-            assertTrue(e.getCause().getMessage()", "+            assertTrue(ex.getCause().getMessage()", "-            assertTrue(e.getCause().getMessage().endsWith(\":invalid'.\"));", "+            assertTrue(ex.getCause().getMessage().endsWith(\":invalid'.\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7d42e76da2599a467837711650232e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/MainTest.java", "commitBeforeChange": "61dcaf5f512b026e4aad1d61946e48905d6016d4", "commitAfterChange": "88f75f5413914bea5b39ba318edf912ee706226d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "      @Ignore     @Test     public void testLoadProperties_IOException() throws Exception", "signatureAfterChange": "      @Test     public void testLoadProperties_IOException() throws Exception", "diff": ["-    @Ignore", "-            assertEquals(\"Unable to load properties from file '\" + File.separator + \"invalid'.\",", "-                    e.getCause().getMessage());", "+            // We do separate validation for message as in Windows", "+            // disk drive letter appear in message,", "+            // so we skip that drive letter for compatibility issues", "+            assertTrue(e.getCause().getMessage().startsWith(\"Unable to load properties from file '\"));", "+            assertTrue(e.getCause().getMessage().endsWith(\"invalid'.\"));"]}]}