{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cab3d09cb00f8edec826f723d3bcbaf5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004eaf43f4316a75842a53952c4a1044", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "03f8352479400cd2c80511bfe0242932a4f00f11", "commitAfterChange": "7e570084e62eda58f3c4fa7e75e26a1a41d255cf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void notifyBegin(String[] aLines, String aFilename)", "signatureAfterChange": "     private void notifyBegin(String[] aLines, String aFilename)", "diff": ["-            check.setFilename(aFilename);", "+            check.setFilename(aFilename);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd4ae4cabc89b38b92c4f78907df117", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheckTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Test     public void testIllegalFailAboveErrorLimit() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalFailAboveErrorLimit() throws Exception", "diff": ["-        final String error = \"The error limit has been exceeded, \"", "-            + \"the check is aborting, there may be more unreported errors.\";", "+        final String error = \"The error limit has been exceeded, \"", "+                + \"the check is aborting, there may be more unreported errors.\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a0fc9d8cec32a6d03c2dcae166c3774", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "signatureAfterChange": "      @Test     @SuppressWarnings(\"unchecked\")     public void testloadSuppressionsURISyntaxException() throws Exception", "diff": ["-        String fileName = \"suppressions_none.xml\";", "+        String fileName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218c7afd38cb6a6ef63532930542fcc7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected boolean hasText(final DetailAST slistAST)", "signatureAfterChange": "     protected boolean hasText(final DetailAST slistAST)", "diff": ["-        boolean retVal = false;", "-", "+        boolean retVal = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b597f6ea1370b7d2eea391d9938356f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "signatureAfterChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "diff": ["-        final int startLineNo = currentCase.getLineNo();", "+        final int startLineNo = currentCase.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "384e7a4c5b47196b49037d059c1a374a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpMultilineCheckTest.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMessageProperty()         throws Exception", "signatureAfterChange": "      @Test     public void testMessageProperty()         throws Exception", "diff": ["-        final String message = \"Bad line :(\";", "+        final String message = \"Bad line :(\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f19e087b61a0675fdcca0f27f6f56a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/HideUtilityClassConstructorCheck.java", "commitBeforeChange": "3b6beec969a5a9f560c1ddf1142a1693f562e7d7", "commitAfterChange": "39f752cd88cee4ff894846a6c58469e363f65175", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         public void invoke()", "signatureAfterChange": "         public void invoke()", "diff": ["-            DetailAST child = objBlock.getFirstChild();", "+            DetailAST child = objBlock.getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495b51b3994618477f03d2ea09e18674", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final DetailAST lcurly = details.lcurly;", "-        final DetailAST nextToken = details.nextToken;", "-        final boolean shouldCheckLastRcurly = details.shouldCheckLastRcurly;", "+        final DetailAST lcurly = details.lcurly;", "+        final DetailAST nextToken = details.nextToken;", "+        final boolean shouldCheckLastRcurly = details.shouldCheckLastRcurly;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afd3bf323f33495ec7e4ba66e8725db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "signatureAfterChange": "     private void checkHtml(final DetailAST ast, final TextBlock comment)", "diff": ["-        final List<String> typeParameters =", "-            CheckUtils.getTypeParameterNames(ast);", "+        final List<String> typeParameters = CheckUtils.getTypeParameterNames(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e368044953df3c19ae4dd3e36a3cb1f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "signatureAfterChange": "         public Tag(String text, int line, SuppressWithNearbyCommentFilter filter)", "diff": ["-                int influence = 0;", "+                int influence = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5871ed1a6ee2caed8672d955bca50be1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessageTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testBundleReload_UrlNotNull() throws IOException", "signatureAfterChange": "      @Test     public void testBundleReload_UrlNotNull() throws IOException", "diff": ["-        String resource = \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";", "+        String resource = \"com/puppycrawl/tools/checkstyle/checks/coding/messages_en.properties\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65eb67042fc2479fa6d8691753d56eee", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "3b6beec969a5a9f560c1ddf1142a1693f562e7d7", "commitAfterChange": "39f752cd88cee4ff894846a6c58469e363f65175", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testImproperToken()", "signatureAfterChange": "      @Test     public void testImproperToken()", "diff": ["-        DeclarationOrderCheck check = new DeclarationOrderCheck();", "+        DeclarationOrderCheck check = new DeclarationOrderCheck();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "690869463d3c9f13a69c927614047fca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/testinputs/com/puppycrawl/tools/checkstyle/InputBraces.java", "commitBeforeChange": "2debda611fe487021711aa4acce56651799a778f", "commitAfterChange": "cb475adb81d2c3242b38ea5cf44fc7c9b9fa09e3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "          void whitespaceAfterSemi()", "signatureAfterChange": "          void whitespaceAfterSemi()", "diff": ["+        //reject", "+        int i = 1;int j = 2;", "+", "-        //reject", "-        int i = 1;int j = 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "820d13c15a629d0e53eb8301a73c9845", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoaderTest.java", "commitBeforeChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "commitAfterChange": "16512bb1e7e31bedece4a745dad9c5960f141fca", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "signatureAfterChange": "      @Test     public void testUnableToReadSuppressions() throws Exception", "diff": ["-        String sourceName = \"suppressions_none.xml\";", "+        String sourceName = \"suppressions_none.xml\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b2d049f395624ad30f42d41346819ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineCheckTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMessageProperty()         throws Exception", "signatureAfterChange": "      @Test     public void testMessageProperty()         throws Exception", "diff": ["-        final String message = \"Bad line :(\";", "+        final String message = \"Bad line :(\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931975d58949f4a8310848c79820af16", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "signatureAfterChange": "         @Override         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,                  ClassLoader aLoader, boolean aReload) throws IOException", "diff": ["-            ResourceBundle bundle = null;", "+            ResourceBundle bundle = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d8b9bc168f6493bb8d0ca78d5f2cf9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "ba9639e5decde52e38fbc1a048be7501dc701ac3", "commitAfterChange": "c4928f486c67afa62e7e8fbd5d8f731be7186985", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private static DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "signatureAfterChange": "     private static DetailAST getFirstNodeInsideSwitchBlock(             DetailAST block, DetailAST variable)", "diff": ["-        DetailAST firstNodeInsideBlock = null;", "+        DetailAST firstNodeInsideBlock = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "986d0892157845173c3c1847099e1a99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "signatureAfterChange": "          @Override         public void startElement(String namespaceURI,                                  String localName,                                  String qName,                                  Attributes atts)             throws SAXException", "diff": ["-                //extract name and value", "-                final String name = atts.getValue(NAME);", "+                //extract value and name", "+                final String name = atts.getValue(NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cdeb6779f2d0b1912f6862245fce10", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LocalVariableNameCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "signatureAfterChange": "      @Override     protected final boolean mustCheckName(DetailAST ast)", "diff": ["-        final DetailAST modifiersAST =", "-            ast.findFirstToken(TokenTypes.MODIFIERS);", "-        final boolean isFinal = modifiersAST != null", "-            && modifiersAST.branchContains(TokenTypes.FINAL);", "+        final DetailAST modifiersAST =", "+            ast.findFirstToken(TokenTypes.MODIFIERS);", "+        final boolean isFinal = modifiersAST != null", "+            && modifiersAST.branchContains(TokenTypes.FINAL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f08338edb18a6f73d3f01b100d58ec", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpCheckTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "signatureAfterChange": "      @Test     public void testMessagePropertyGood()         throws Exception", "diff": ["-        final String message = \"Bad line :(\";", "+        final String message = \"Bad line :(\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec7243bc7bbdcf1fce220bfc7460d95", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test \tpublic void testIllegalClassType() throws Exception", "signatureAfterChange": "      @Test     public void testIllegalClassType() throws Exception", "diff": ["-    // ^Abstract.*$|^.*Factory$ --> abstract", "-\tpublic void testIllegalClassType() throws Exception {", "-\t\tfinal DefaultConfiguration checkConfig = createCheckConfig(AbstractClassNameCheck.class);", "-        final String[] expected = {", "-                \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-                \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-                \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-                \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "-                };", "+    public void testIllegalClassType() throws Exception", "+    {", "+        final DefaultConfiguration checkConfig = createCheckConfig(AbstractClassNameCheck.class);", "-\t\tverify(checkConfig, getPath(\"naming\" + File.separator + \"InputAbstractClassName.java\"), expected);", "+", "+        final String[] expected = {", "+            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "+            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "+            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "+            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "+        };", "+", "+        verify(checkConfig, getPath(\"naming\" + File.separator + \"InputAbstractClassName.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c18f86514658daacba5287e45f8a70ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "signatureAfterChange": "     @Test     public void testIllegalAbstractClassName() throws Exception", "diff": ["-    // abstract --> ^Abstract.*$|^.*Factory$", "+        checkConfig.addAttribute(\"checkName\", \"true\");", "+        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+", "-        checkConfig.addAttribute(\"checkName\", \"true\");", "-        checkConfig.addAttribute(\"checkModifier\", \"false\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d611aaf22e9493728096bbb649013003", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AvoidEscapedUnicodeCharactersCheck.java", "commitBeforeChange": "d49eaaf2e42538bc7f01510eb3ca2812b253c98a", "commitAfterChange": "2880edd6554400955fb950bf8127311c436d2a7a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private boolean hasTrailComment(DetailAST ast)", "signatureAfterChange": "     private boolean hasTrailComment(DetailAST ast)", "diff": ["-        boolean result = false;", "+        boolean result = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8970ab33f1d0a16873822955cc56e99", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "signatureAfterChange": "      @Override     public void visitJavadocToken(DetailNode ast)", "diff": ["-        final List<DetailNode> textNodes = getAllNewlineNodes(ast);", "+        final List<DetailNode> textNodes = getAllNewlineNodes(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c310d468d9d5cdca957064ee123dbe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/naming/AbstractClassNameCheckTest.java", "commitBeforeChange": "fe07d99333284482aad4729ffd17bb94030a3ab4", "commitAfterChange": "3c0c72f96477afb542ee37b3336f4b7b7613ff29", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllVariants() throws Exception", "signatureAfterChange": "      @Test     public void testAllVariants() throws Exception", "diff": ["-    //all variants", "-    public void testAllVariants() throws Exception {", "+    public void testAllVariants() throws Exception", "+    {", "-        final String[] expected = {", "-                \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "-                \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "-                \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "-                \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "-                \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",", "-        };", "+", "+        final String[] expected = {", "+            \"3:1: Name 'InputAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"6:1: Name 'NonAbstractClassName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"9:1: Name 'FactoryWithBadName' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"13:5: Name 'NonAbstractInnerClass' must match pattern '^Abstract.*$|^.*Factory$'.\",", "+            \"26:1: Class 'AbstractClass' must has abstract modifier.\",", "+            \"29:1: Class 'Class1Factory' must has abstract modifier.\",", "+            \"33:5: Class 'AbstractInnerClass' must has abstract modifier.\",", "+            \"38:5: Class 'WellNamedFactory' must has abstract modifier.\",};", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63faa715ca49ae7d7dfd0ef3c344da8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "5ff1834a224cefac74b80a47efff15d113f76a1e", "commitAfterChange": "dba746ba9387bee04ed362254abb5d9ed35169cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        final boolean surrounded = isSurrounded(ast);", "+        final boolean surrounded = isSurrounded(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea988301ea5f78fdff377846cce6fe8c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/regexp/RegexpSinglelineJavaCheckTest.java", "commitBeforeChange": "0da1e4d980420f6abb465af441e5ced254698273", "commitAfterChange": "4a56989f8ea633b6dfacd1f1ef0a12f5ef6358ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testMessageProperty()         throws Exception", "signatureAfterChange": "      @Test     public void testMessageProperty()         throws Exception", "diff": ["-        final String message = \"Bad line :(\";", "+        final String message = \"Bad line :(\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f65ea804fbff48676503614860390b4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheckTest.java", "commitBeforeChange": "2085758156c3ac70621a95df46a2c89432bce56e", "commitAfterChange": "dd7935491a4d88781a8d95e642324f7c9c0ef7eb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testWrongFile() throws Exception", "signatureAfterChange": "      @Test     public void testWrongFile() throws Exception", "diff": ["-        File impossibleFile = new File(\"\");", "+        File impossibleFile = new File(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd8fde03f7f1b2bbd21e8f5ca970f9f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "3b6beec969a5a9f560c1ddf1142a1693f562e7d7", "commitAfterChange": "39f752cd88cee4ff894846a6c58469e363f65175", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testParents()", "signatureAfterChange": "      @Test     public void testParents()", "diff": ["-        DeclarationOrderCheck check = new DeclarationOrderCheck();", "+        DeclarationOrderCheck check = new DeclarationOrderCheck();"]}]}