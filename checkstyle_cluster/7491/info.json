{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d4b685bb813acc808c7932e855317c8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af62c244b7108af39314de22e50a96f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (mIgnoreAnnotation && isInAnnotation(aAST)) {", "+        if (ignoreAnnotation && isInAnnotation(ast)) {", "-        if (inIgnoreList(aAST)", "-            || (mIgnoreHashCodeMethod && isInHashCodeMethod(aAST)))", "+        if (inIgnoreList(ast)", "+            || (ignoreHashCodeMethod && isInHashCodeMethod(ast)))", "-        final DetailAST constantDefAST = findContainingConstantDef(aAST);", "+        final DetailAST constantDefAST = findContainingConstantDef(ast);", "-            reportMagicNumber(aAST);", "+            reportMagicNumber(ast);", "-            DetailAST ast = aAST.getParent();", "-            while (ast != constantDefAST) {", "-                final int type = ast.getType();", "+            DetailAST astNode = ast.getParent();", "+            while (astNode != constantDefAST) {", "+                final int type = astNode.getType();", "-                    reportMagicNumber(aAST);", "+                    reportMagicNumber(ast);", "-                ast = ast.getParent();", "+                astNode = astNode.getParent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e21cf4f80bd68f61c8a1c44016fc9d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java", "commitBeforeChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "commitAfterChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        DetailAST ast = aAST;", "-        if (aAST.getType() == TokenTypes.ARRAY_DECLARATOR", "-                 || aAST.getType() == TokenTypes.TYPECAST)", "+        DetailAST astNode = ast;", "+        if (ast.getType() == TokenTypes.ARRAY_DECLARATOR", "+                 || ast.getType() == TokenTypes.TYPECAST)", "-            ast = getPreceded(aAST);", "+            astNode = getPreceded(ast);", "-        final String line = getLine(aAST.getLineNo() - 1);", "-        final int after = getPositionAfter(ast);", "+        final String line = getLine(ast.getLineNo() - 1);", "+        final int after = getPositionAfter(astNode);", "-            log(ast.getLineNo(), after,", "-                \"ws.followed\", ast.getText());", "+            log(astNode.getLineNo(), after,", "+                \"ws.followed\", astNode.getText());"]}]}