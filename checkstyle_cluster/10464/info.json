{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f79f55681dd0beccce8705f74d20982", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34292461abfe7080bc148ff6e475b408", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public void setLegalAbstractClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setLegalAbstractClassNames(String[] classNames)", "diff": ["-    public void setLegalAbstractClassNames(String[] aClassNames)", "+    public void setLegalAbstractClassNames(String[] classNames)", "-        mLegalAbstractClassNames.clear();", "-        for (String element : aClassNames) {", "-            mLegalAbstractClassNames.add(element);", "+        legalAbstractClassNames.clear();", "+        for (String element : classNames) {", "+            legalAbstractClassNames.add(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04a599fa5a8f652640d20f4ec6d1014", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public void setIllegalClassNames(String[] aClassNames)", "signatureAfterChange": "     public void setIllegalClassNames(String[] classNames)", "diff": ["-    public void setIllegalClassNames(String[] aClassNames)", "+    public void setIllegalClassNames(String[] classNames)", "-        mIllegalClassNames.clear();", "-        for (String name : aClassNames) {", "-            mIllegalClassNames.add(name);", "+        illegalClassNames.clear();", "+        for (String name : classNames) {", "+            illegalClassNames.add(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a370e7389d3b7ab7b2c5993b9f7310", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private void setConfigLocation(String aLocation)", "signatureAfterChange": "     private void setConfigLocation(String location)", "diff": ["-    private void setConfigLocation(String aLocation)", "+    private void setConfigLocation(String location)", "-        if (mConfigLocation != null) {", "+        if (configLocation != null) {", "-        mConfigLocation = aLocation;", "+        configLocation = location;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bf6dba3dc8a6f62d92b1e525f859e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     private ParseTree parseJavadocAsParseTree(String aBlockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)         throws IOException", "diff": ["-    private ParseTree parseJavadocAsParseTree(String aBlockComment)", "+    private ParseTree parseJavadocAsParseTree(String blockComment)", "-        final InputStream in = new ByteArrayInputStream(aBlockComment.getBytes(utf8Charset));", "+        final InputStream in = new ByteArrayInputStream(blockComment.getBytes(utf8Charset));", "-        lexer.addErrorListener(mErrorListener);", "+        lexer.addErrorListener(errorListener);", "-        parser.addErrorListener(mErrorListener);", "+        parser.addErrorListener(errorListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9de5bc8639d309aa4100096f1f16cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "91aa6578321ceb08f4b0d715f994b7a9f4abe9d7", "commitAfterChange": "3430721be200cbe2acf55c3b3d52a528638123b3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private Set loadKeys(File file)", "signatureAfterChange": "     private Set loadKeys(File aFile)", "diff": ["-    private Set loadKeys(File file)", "+    private Set loadKeys(File aFile)", "-            inputStream = new FileInputStream(file);", "+            inputStream = new FileInputStream(aFile);", "-            logIOException(e, file);", "+            logIOException(e, aFile);", "-                logIOException(e, file);", "+                logIOException(e, aFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c1164e224ef2d9c9a041d35d6bc5d7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "e8a4ab77aba5f63527b5b64973ab3117e9807908", "commitAfterChange": "5cd16d56a2ef2a3daaf1674666a9a5e6f2ddfe78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                if (state.scopeState > STATE_CTOR_DEF) {", "+                if (state.currentScopeState > STATE_CTOR_DEF) {", "-                    state.scopeState = STATE_CTOR_DEF;", "+                    state.currentScopeState = STATE_CTOR_DEF;", "-                if (state.scopeState > STATE_METHOD_DEF) {", "+                if (state.currentScopeState > STATE_METHOD_DEF) {", "-                    state.scopeState = STATE_METHOD_DEF;", "+                    state.currentScopeState = STATE_METHOD_DEF;", "-                    if (state.scopeState > STATE_STATIC_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_STATIC_VARIABLE_DEF) {", "-                            || state.scopeState > STATE_INSTANCE_VARIABLE_DEF)", "+                            || state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF)", "-                        state.scopeState = STATE_STATIC_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_STATIC_VARIABLE_DEF;", "-                    if (state.scopeState > STATE_INSTANCE_VARIABLE_DEF) {", "+                    if (state.currentScopeState > STATE_INSTANCE_VARIABLE_DEF) {", "-                    else if (state.scopeState == STATE_STATIC_VARIABLE_DEF) {", "+                    else if (state.currentScopeState == STATE_STATIC_VARIABLE_DEF) {", "-                        state.scopeState = STATE_INSTANCE_VARIABLE_DEF;", "+                        state.currentScopeState = STATE_INSTANCE_VARIABLE_DEF;"]}]}