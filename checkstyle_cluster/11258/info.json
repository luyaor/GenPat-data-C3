{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed41cdaff8f297ac1e6ddc293b769279", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231e11133570fc7c88a4a1f0f566b3be", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-        if ((mFileName == null) && mFileSets.isEmpty()) {", "+        if ((fileName == null) && fileSets.isEmpty()) {", "-        if (mConfigLocation == null) {", "+        if (configLocation == null) {", "-            log(\"Using configuration \" + mConfigLocation, Project.MSG_VERBOSE);", "+            log(\"Using configuration \" + configLocation, Project.MSG_VERBOSE);", "-            final boolean ok = (numErrs <= mMaxErrors)", "-                    && (numWarnings <= mMaxWarnings);", "+            final boolean ok = (numErrs <= maxErrors)", "+                    && (numWarnings <= maxWarnings);", "-                if (mFailureProperty != null) {", "-                    getProject().setProperty(mFailureProperty, failureMsg);", "+                if (failureProperty != null) {", "+                    getProject().setProperty(failureProperty, failureMsg);", "-                if (mFailOnViolation) {", "+                if (failOnViolation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29b6e8c4cac78d18174cbcb70092a103", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "c59a39378f51ec63c3dc9421446ddd7904c4cfce", "commitAfterChange": "02da493e64154d6bbac09a64d67a025f0e72cad1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private void realExecute()", "signatureAfterChange": "     private void realExecute()", "diff": ["-            if (!ok && (mFailureProperty != null)) {", "-                getProject().setProperty(mFailureProperty, \"true\");", "-            }", "+            if (!ok) {", "+                final String failureMsg =", "+                        \"Got \" + numErrs + \" errors and \" + numWarnings", "+                                + \" warnings.\";", "+                if (mFailureProperty != null) {", "+                    getProject().setProperty(mFailureProperty, failureMsg);", "+                }", "-            if (!ok && mFailOnViolation) {", "-                throw new BuildException(\"Got \" + numErrs + \" errors and \"", "-                        + numWarnings + \" warnings.\", getLocation());", "+                if (mFailOnViolation) {", "+                    throw new BuildException(failureMsg, getLocation());", "+                }"]}]}