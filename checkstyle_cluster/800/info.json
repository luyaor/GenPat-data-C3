{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaa2c5142c4ee2511529d62930c5d2be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b30abb3969bb87711ab23097dbe137c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java", "commitBeforeChange": "93c68168f3b6ef88cfdcd31e059fd22dda7eaeb9", "commitAfterChange": "0ff261c5acaae68262f9083b15b4c0db4f72af90", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "signatureAfterChange": "     DetailAST checkOrderSuggestedByJLS(List<DetailAST> modifiers)", "diff": ["-        while (i < JLS_ORDER.length) {", "+        while (modifier != null) {", "-            else if (!it.hasNext()) {", "-                //Reached end of modifiers without problem", "-                return null;", "+            else if (it.hasNext()) {", "+                modifier = it.next();", "-                modifier = it.next();", "+                //Reached end of modifiers without problem", "+                modifier = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83f8262d0dd615583bd6a52dc59ebfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "8ad4aebb66a1b90ac135e05f8062423028e3be8e", "commitAfterChange": "0b98c0389e2cf745cb125a89dece57538fc672b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());", "-                            \"redundantModifier\", modifier.getText());", "+                            MSG_KEY, modifier.getText());", "-                                \"redundantModifier\", modifier.getText());", "+                                MSG_KEY, modifier.getText());"]}]}