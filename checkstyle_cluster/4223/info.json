{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2996a110c66de1bcf82e21f240c4ecce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33930fb79d8936fadb5f617c2cc9671a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/Main.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static void displayAst(DetailAST ast)", "signatureAfterChange": "     public static void displayAst(DetailAST ast)", "diff": ["-        final JFrame frame = new JFrame(\"CheckStyle\");", "+        final JFrame testFrame = new JFrame(\"CheckStyle\");", "-        frame.getContentPane().add(panel);", "-        panel.openAst(ast, frame);", "-        frame.setSize(1500, 800);", "-        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);", "-        frame.setVisible(true);", "+        testFrame.getContentPane().add(panel);", "+        panel.openAst(ast, testFrame);", "+        testFrame.setSize(1500, 800);", "+        testFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);", "+        testFrame.setVisible(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541f281c2f1dfdb3d340faa6c5841db8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "6839ac4fd83dde7060c8f6f28e75aa3d6ff2456b", "commitAfterChange": "31f6765fdcf2233ca6c53730c2fc196576557f66", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "signatureAfterChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "diff": ["-        boolean isVarInOperatorDeclr = false;", "+        boolean isVarInOperatorDeclaration = false;", "-                isVarInOperatorDeclr = true;", "+                isVarInOperatorDeclaration = true;", "-        if (!isVarInOperatorDeclr && operator.getType() == TokenTypes.LITERAL_IF) {", "+        if (!isVarInOperatorDeclaration && operator.getType() == TokenTypes.LITERAL_IF) {", "-                    isVarInOperatorDeclr =", "+                    isVarInOperatorDeclaration =", "-        return isVarInOperatorDeclr;", "+        return isVarInOperatorDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a50b7f1095e6adc9d95eabdc0db6a88", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      @Test     public void testGetFullImportIdent()", "signatureAfterChange": "      @Test     public void testGetFullImportIdent()", "diff": ["-            Class<?> c = Class.forName(", "+            Class<?> clazz = Class.forName(", "-            Object t = c.newInstance();", "-            Method m = c.getDeclaredMethod(\"getFullImportIdent\", DetailAST.class);", "-            m.setAccessible(true);", "-            actual = m.invoke(t, (DetailAST) null);", "+            Object t = clazz.newInstance();", "+            Method method = clazz.getDeclaredMethod(\"getFullImportIdent\", DetailAST.class);", "+            method.setAccessible(true);", "+            actual = method.invoke(t, (DetailAST) null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716fdc8926b3d3360f2979a7d511249a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java", "commitBeforeChange": "58b28a75e171b7a0f0186a8f1161824a82cc5c8e", "commitAfterChange": "30c3a362d45721e6925fe89ba71f0fe69d0fc471", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "signatureAfterChange": "      @Override     public void startElement(final String namespaceURI,                              final String localName,                              final String qName,                              final Attributes attributes)         throws SAXException", "diff": ["-            final Guard g;", "+            final Guard guard;", "-                g = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "+                guard = new Guard(isAllow, isLocalOnly, pkg, exactMatch, regex);", "-                g = new Guard(isAllow, isLocalOnly, clazz, regex);", "+                guard = new Guard(isAllow, isLocalOnly, clazz, regex);", "-            final PkgControl pc = stack.peek();", "-            pc.addGuard(g);", "+            final PkgControl pkgControl = stack.peek();", "+            pkgControl.addGuard(guard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a67262dbd5daa209bbd9095c74a4bb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileContents.java", "commitBeforeChange": "bf529ef600fa9ef2034d0412c198b2121f2b94f2", "commitAfterChange": "ce196814d857a4244a80c51d5151cc35e90b6749", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private String[] extractCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "signatureAfterChange": "     private String[] extractCComment(int startLineNo, int startColNo,             int endLineNo, int endColNo)", "diff": ["-        String[] retVal;", "+        String[] returnValue;", "-            retVal = new String[1];", "-            retVal[0] = line(startLineNo - 1).substring(startColNo,", "+            returnValue = new String[1];", "+            returnValue[0] = line(startLineNo - 1).substring(startColNo,", "-            retVal = new String[endLineNo - startLineNo + 1];", "-            retVal[0] = line(startLineNo - 1).substring(startColNo);", "+            returnValue = new String[endLineNo - startLineNo + 1];", "+            returnValue[0] = line(startLineNo - 1).substring(startColNo);", "-                retVal[i - startLineNo + 1] = line(i);", "+                returnValue[i - startLineNo + 1] = line(i);", "-            retVal[retVal.length - 1] = line(endLineNo - 1).substring(0,", "+            returnValue[returnValue.length - 1] = line(endLineNo - 1).substring(0,", "-        return retVal;", "+        return returnValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5189d471816fb33d9cbc145eabb8ffa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/DetailAST.java", "commitBeforeChange": "546f336e25b26d072f96e2cda139b885858ed5b0", "commitAfterChange": "f1e80e4ecae727087ca135dfd02f72e2d6213efb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public DetailAST findFirstToken(int type)", "signatureAfterChange": "     public DetailAST findFirstToken(int type)", "diff": ["-        for (DetailAST i = getFirstChild(); i != null; i = i.getNextSibling()) {", "-            if (i.getType() == type) {", "-                retVal = i;", "+        for (DetailAST ast = getFirstChild(); ast != null; ast = ast.getNextSibling()) {", "+            if (ast.getType() == type) {", "+                retVal = ast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87cff20a9a644f58beeb790e1e63c67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigValidationTest.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     @Test     public void testGoogleChecks() throws Exception", "signatureAfterChange": "     @Test     public void testGoogleChecks() throws Exception", "diff": ["-        final Checker c = new Checker();", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(checkerConfig);", "-        c.addListener(new BriefLogger(stream));", "+        final Checker checker = new Checker();", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(checkerConfig);", "+        checker.addListener(new BriefLogger(stream));", "-        verify(c, files.toArray(new File[files.size()]), \"\", new String[0], null);", "+        verify(checker, files.toArray(new File[files.size()]), \"\", new String[0], null);"]}]}