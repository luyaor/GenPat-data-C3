{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d1aeb4574afbde29d2f90a5ec58319a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14642e3a455617abff9a1e8655b43349", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java", "commitBeforeChange": "79404974eff1458f4243f8acd6a08b6a8b869342", "commitAfterChange": "fe9057366308642868c25d427c3ee94411b37170", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     PackageObjectFactory()", "signatureAfterChange": "     public PackageObjectFactory(Set<String> aPackageNames,             ClassLoader aModuleClassLoader)", "diff": ["-    PackageObjectFactory()", "+    public PackageObjectFactory(Set<String> aPackageNames,", "+            ClassLoader aModuleClassLoader)", "-    }", "+        if (aModuleClassLoader == null) {", "+            throw new IllegalArgumentException(", "+                    \"aModuleClassLoader must not be null\");", "+        }", "+        //create a copy of the given set, but retain ordering", "+        mPackages = new LinkedHashSet<String>(aPackageNames);", "+        mModuleClassLoader = aModuleClassLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be821cb1a4d9ffb35f1963ba5a1f7ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java", "commitBeforeChange": "d6272b70eb5ad61fd8ab34091e970c50b1f67386", "commitAfterChange": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static AuditListener createListener(String format,                                                 OutputStream out,                                                 boolean closeOut)             throws UnsupportedEncodingException, CheckstyleException", "signatureAfterChange": "     private static AuditListener createListener(String format,                                                 String outputLocation)             throws UnsupportedEncodingException, FileNotFoundException", "diff": ["-                                                OutputStream out,", "-                                                boolean closeOut)", "-            throws UnsupportedEncodingException, CheckstyleException", "+                                                String outputLocation)", "+            throws UnsupportedEncodingException, FileNotFoundException", "+", "+        // setup the output stream", "+        OutputStream out = null;", "+        boolean closeOut = false;", "+        if (outputLocation != null) {", "+            out = new FileOutputStream(outputLocation);", "+            closeOut = true;", "+        }", "+        else {", "+            out = System.out;", "+            closeOut = false;", "+        }", "+", "+        // setup a listener", "-                throw new CheckstyleException(\"Invalid output format. Found '\" + format", "+                throw new IllegalStateException(\"Invalid output format. Found '\" + format"]}]}