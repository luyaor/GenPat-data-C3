{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c5a1a32d40d3571d1cdb34a2e40fdb8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23369226f9de7bde5d835029bf75e81e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":1: file length is 190 lines (max allowed is 20).\",", "+            filepath + \":1: file length is 198 lines (max allowed is 20).\",", "-            filepath + \":25:29: variable 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "-            filepath + \":30:24: variable 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":35:17: variable 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":25:29: variable name 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":30:24: variable name 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":35:17: variable name 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":42:40: ',' needs to be followed by whitespace.\",", "+            filepath + \":42:40: ',' is not followed by whitespace.\",", "-            filepath + \":71:19: parameter 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":71:30: ',' needs to be followed by whitespace.\",", "-            filepath + \":71:34: parameter 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":72:25: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":71:19: parameter name 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":71:30: ',' is not followed by whitespace.\",", "+            filepath + \":71:34: parameter name 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "+            filepath + \":72:25: parameter name 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.\",", "-            filepath + \":119:13: variable 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":123:19: variable 'CDE' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":119:13: variable name 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":123:19: variable name 'CDE' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":130:18: variable 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":130:18: variable name 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":132:20: variable 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "+            filepath + \":132:20: variable name 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.\",", "-            filepath + \":142:30: variable 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":142:30: variable name 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.\",", "+            filepath + \":194:5: More than 7 parameters.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7924159417af6acb1a47d678c01632e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "d92ceb81a67bb10b98f5ce305f839ba535a1c6ee", "commitAfterChange": "9aa8268e473071cbe26aa9d3a8631f1902e3fef0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testSimple()         throws Exception", "signatureAfterChange": "      public void testSimple()         throws Exception", "diff": ["-            filepath + \":1: file length is 198 lines (max allowed is 20).\",", "+            filepath + \":1: File length is 198 lines (max allowed is 20).\",", "-            filepath + \":18: line longer than 80 characters\",", "-            filepath + \":19:25: line contains a tab character\",", "+            filepath + \":18: Line is longer than 80 characters.\",", "+            filepath + \":19:25: Line contains a tab character.\",", "-            filepath + \":39:19: variable 'mNumCreated2' must be private and have accessor methods.\",", "+            filepath + \":39:19: Variable 'mNumCreated2' must be private and have accessor methods.\",", "-            filepath + \":49:23: variable 'sTest1' must be private and have accessor methods.\",", "-            filepath + \":51:26: variable 'sTest3' must be private and have accessor methods.\",", "-            filepath + \":53:16: variable 'sTest2' must be private and have accessor methods.\",", "-            filepath + \":56:9: variable 'mTest1' must be private and have accessor methods.\",", "-            filepath + \":58:16: variable 'mTest2' must be private and have accessor methods.\",", "+            filepath + \":49:23: Variable 'sTest1' must be private and have accessor methods.\",", "+            filepath + \":51:26: Variable 'sTest3' must be private and have accessor methods.\",", "+            filepath + \":53:16: Variable 'sTest2' must be private and have accessor methods.\",", "+            filepath + \":56:9: Variable 'mTest1' must be private and have accessor methods.\",", "+            filepath + \":58:16: Variable 'mTest2' must be private and have accessor methods.\",", "-            filepath + \":80: method length is 20 lines (max allowed is 19).\",", "-            filepath + \":103: constructor length is 10 lines (max allowed is 9).\",", "+            filepath + \":80: Method length is 20 lines (max allowed is 19).\",", "+            filepath + \":103: Constructor length is 10 lines (max allowed is 9).\",", "-            filepath + \":145: line longer than 80 characters\",", "-            filepath + \":145:35: line contains a tab character\",", "-            filepath + \":146:64: line contains a tab character\",", "+            filepath + \":145: Line is longer than 80 characters.\",", "+            filepath + \":145:35: Line contains a tab character.\",", "+            filepath + \":146:64: Line contains a tab character.\",", "-            filepath + \":154:9: line contains a tab character\",", "+            filepath + \":154:9: Line contains a tab character.\",", "-            filepath + \":155:10: line contains a tab character\",", "+            filepath + \":155:10: Line contains a tab character.\",", "-            filepath + \":156:1: line contains a tab character\",", "+            filepath + \":156:1: Line contains a tab character.\",", "-            filepath + \":157:3: line contains a tab character\",", "+            filepath + \":157:3: Line contains a tab character.\",", "-            filepath + \":158:3: line contains a tab character\",", "+            filepath + \":158:3: Line contains a tab character.\","]}]}