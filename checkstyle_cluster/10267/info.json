{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fff2e10b31b7f048a7c154435604c87", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d973a36c9b0c929a59022b81f8f372", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "907a19906f790ce8faea7aa74e12608538dca1b6", "commitAfterChange": "53d1722bdb579b2e58666bd48b8015d36719996b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private void collectDeclarations(FrameStack aFrameStack, DetailAST aAST)", "signatureAfterChange": "     private void collectDeclarations(Deque<LexicalFrame> aFrameStack,         DetailAST aAST)", "diff": ["-    private void collectDeclarations(FrameStack aFrameStack, DetailAST aAST)", "+    private void collectDeclarations(Deque<LexicalFrame> aFrameStack,", "+        DetailAST aAST)", "-        final LexicalFrame frame = aFrameStack.current();", "+        final LexicalFrame frame = aFrameStack.peek();", "-            aFrameStack.enter(new ClassFrame(aFrameStack.current()));", "+            aFrameStack.addFirst(new ClassFrame(frame));", "-            aFrameStack.enter(new BlockFrame(aFrameStack.current()));", "+            aFrameStack.addFirst(new BlockFrame(frame));", "-            aFrameStack.enter(new MethodFrame(aFrameStack.current()));", "+            aFrameStack.addFirst(new MethodFrame(frame));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b532693e8a4c19816e547ce4dab77c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "c0dfe4f3f2e4f88c12cce0fe595abb2e4081a4a0", "commitAfterChange": "29469b29d57869b0421bfb0e16439dd2767ed424", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r     private void tagSuppressions()", "signatureAfterChange": "\r     private void tagSuppressions()", "diff": ["-            final Collection cComments = contents.getCComments().values();\r", "-            final Iterator iter = cComments.iterator();\r", "-            while (iter.hasNext()) {\r", "-                final Collection element = (Collection) iter.next();\r", "+            final Collection<List<TextBlock>> cComments =\r", "+                contents.getCComments().values();\r", "+            for (List<TextBlock> element : cComments) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7dd91d7ce4ae615e09df6a3abe7ec92", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "262209477f39964a63103613f3e2c985da083371", "commitAfterChange": "08638b5f739d9929698860048c052da2d5f80209", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void leaveToken(DetailAST aAST)", "signatureAfterChange": "     @Override     public void leaveToken(DetailAST aAST)", "diff": ["+    @Override", "-            final HashMap state = (HashMap) mScopeStack.pop();", "-            final Iterator finalVars = state.values().iterator();", "-", "-            while (finalVars.hasNext()) {", "-                final DetailAST var = (DetailAST) finalVars.next();", "-                log(var.getLineNo(), var.getColumnNo(),", "-                    \"final.variable\", var.getText());", "+            final Map<String, DetailAST> state = mScopeStack.pop();", "+            for (DetailAST var : state.values()) {", "+                log(var.getLineNo(), var.getColumnNo(), \"final.variable\", var", "+                        .getText());"]}]}