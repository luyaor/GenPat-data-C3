{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aab99c270acdbc50968171581b2b2b1b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16601075e0d947027b7c5803423d6de0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setValidateBetweenScopes(boolean aValidateBetweenScopes)", "signatureAfterChange": "     public void setValidateBetweenScopes(boolean validateBetweenScopes)", "diff": ["-    public void setValidateBetweenScopes(boolean aValidateBetweenScopes)", "+    public void setValidateBetweenScopes(boolean validateBetweenScopes)", "-        this.mValidateBetweenScopes = aValidateBetweenScopes;", "+        this.validateBetweenScopes = validateBetweenScopes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfe6c5c511cd6a6161db43ae86cc2ea", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStarImportCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private boolean isStaredImport(FullIdent aImportIdent)", "signatureAfterChange": "     private boolean isStaredImport(FullIdent importIdent)", "diff": ["-    private boolean isStaredImport(FullIdent aImportIdent)", "+    private boolean isStaredImport(FullIdent importIdent)", "-        return (null != aImportIdent) && aImportIdent.getText().endsWith(\".*\");", "+        return (null != importIdent) && importIdent.getText().endsWith(\".*\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23089e90ea53b4300e29a8f876e9f8d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setThrowsIndent(int aThrowsIndent)", "signatureAfterChange": "     public void setThrowsIndent(int throwsIndent)", "diff": ["-    public void setThrowsIndent(int aThrowsIndent)", "+    public void setThrowsIndent(int throwsIndent)", "-        mThrowsIndentationAmount = aThrowsIndent;", "+        throwsIndentationAmount = throwsIndent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db162bee78feca15be988b09675d974", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setAllowedDistance(int aAllowedDistance)", "signatureAfterChange": "     public void setAllowedDistance(int allowedDistance)", "diff": ["-    public void setAllowedDistance(int aAllowedDistance)", "+    public void setAllowedDistance(int allowedDistance)", "-        this.mAllowedDistance = aAllowedDistance;", "+        this.allowedDistance = allowedDistance;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d0872910ad0ad20790c73293abf3e4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java", "commitBeforeChange": "075b3084de3934dbf73f108110b36e01dcf10d1e", "commitAfterChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setIgnoreStatic(boolean aIgnoreStatic)", "signatureAfterChange": "     public void setIgnoreStatic(boolean ignoreStatic)", "diff": ["-    public void setIgnoreStatic(boolean aIgnoreStatic)", "+    public void setIgnoreStatic(boolean ignoreStatic)", "-        this.mIgnoreStatic = aIgnoreStatic;", "+        this.ignoreStatic = ignoreStatic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4117ef43dc9a334f9bb9cf6a4ec58ac1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractIllegalCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected AbstractIllegalCheck(final String[] aInitialNames)", "signatureAfterChange": "     protected AbstractIllegalCheck(final String[] initialNames)", "diff": ["-    protected AbstractIllegalCheck(final String[] aInitialNames)", "+    protected AbstractIllegalCheck(final String[] initialNames)", "-        assert aInitialNames != null;", "-        setIllegalClassNames(aInitialNames);", "+        assert initialNames != null;", "+        setIllegalClassNames(initialNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47074e0054c303cdbefce34ed68aac2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocNodeImpl.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public void setColumnNumber(int aColumnNumber)", "signatureAfterChange": "      public void setColumnNumber(int columnNumber)", "diff": ["-    public void setColumnNumber(int aColumnNumber)", "+    public void setColumnNumber(int columnNumber)", "-        this.mColumnNumber = aColumnNumber;", "+        this.columnNumber = columnNumber;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b21591c540fccbe4d6fe3946f2f3162", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/AnnotationUseStyleCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setElementStyle(final String aStyle)", "signatureAfterChange": "     public void setElementStyle(final String style)", "diff": ["-    public void setElementStyle(final String aStyle)", "+    public void setElementStyle(final String style)", "-        this.mStyle = this.getOption(ElementStyle.class, aStyle);", "+        this.style = this.getOption(ElementStyle.class, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "586ebc4c047e182038ead4d6763470ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public FieldFrame(boolean aStaticClass)", "signatureAfterChange": "         public FieldFrame(boolean aStaticType)", "diff": ["-        public FieldFrame(boolean aStaticClass)", "+        public FieldFrame(boolean aStaticType)", "-            mStaticClass = aStaticClass;", "+            mStaticType = aStaticType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7b8a0f724849a547db3f0281a6ef67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private static String hexEncode(byte[] aByteArray)", "signatureAfterChange": "     private static String hexEncode(byte[] byteArray)", "diff": ["-    private static String hexEncode(byte[] aByteArray)", "+    private static String hexEncode(byte[] byteArray)", "-        final StringBuffer buf = new StringBuffer(2 * aByteArray.length);", "-        for (final byte b : aByteArray) {", "+        final StringBuffer buf = new StringBuffer(2 * byteArray.length);", "+        for (final byte b : byteArray) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6172b2bef488680a26cfbe021950870c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void setTagOrder(String aOrder)", "signatureAfterChange": "     public void setTagOrder(String order)", "diff": ["-    public void setTagOrder(String aOrder)", "+    public void setTagOrder(String order)", "-        for (String type : aOrder.split(\", \")) {", "+        for (String type : order.split(\", \")) {", "-        mTagOrder = customOrder;", "+        tagOrder = customOrder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d18d85259cc25df1e8617e34cb533b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/Guard.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private AccessResult calculateResult(final boolean aMatched)", "signatureAfterChange": "     private AccessResult calculateResult(final boolean matched)", "diff": ["-    private AccessResult calculateResult(final boolean aMatched)", "+    private AccessResult calculateResult(final boolean matched)", "-        if (aMatched) {", "-            return mAllowed ? AccessResult.ALLOWED : AccessResult.DISALLOWED;", "+        if (matched) {", "+            return allowed ? AccessResult.ALLOWED : AccessResult.DISALLOWED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e48bed910b70ac776b108f147b0416", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "         public void setImportFullPath(String aImportFullPath)", "signatureAfterChange": "         public void setImportFullPath(String importFullPath)", "diff": ["-        public void setImportFullPath(String aImportFullPath)", "+        public void setImportFullPath(String importFullPath)", "-            this.mImportFullPath = aImportFullPath;", "+            this.importFullPath = importFullPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816f75ff96e1f619db10b56608ef4975", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "          public void setParseErrorMessage(ParseErrorMessage aParseErrorMessage)", "signatureAfterChange": "          public void setParseErrorMessage(ParseErrorMessage parseErrorMessage)", "diff": ["-        public void setParseErrorMessage(ParseErrorMessage aParseErrorMessage)", "+        public void setParseErrorMessage(ParseErrorMessage parseErrorMessage)", "-            this.mParseErrorMessage = aParseErrorMessage;", "+            this.parseErrorMessage = parseErrorMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c827fda880c737ca0d61bdb6d954cb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java", "commitBeforeChange": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e", "commitAfterChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setJavaFiveCompatibility(final boolean aCompatibility)", "signatureAfterChange": "     public void setJavaFiveCompatibility(final boolean compatibility)", "diff": ["-    public void setJavaFiveCompatibility(final boolean aCompatibility)", "+    public void setJavaFiveCompatibility(final boolean compatibility)", "-        this.mJavaFiveCompatibility = aCompatibility;", "+        this.javaFiveCompatibility = compatibility;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d877df48ece120d9f44e2a127d05b1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public static void closeQuietly(Closeable aShutting)", "signatureAfterChange": "     public static void closeQuietly(Closeable shutting)", "diff": ["-    public static void closeQuietly(Closeable aShutting)", "+    public static void closeQuietly(Closeable shutting)", "-        if (null != aShutting) {", "+        if (null != shutting) {", "-                aShutting.close();", "+                shutting.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7ce412ecb570978f15d2a6a0d782d4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/PackageNamesLoaderTest.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      private void validatePackageNames(Set<String> aPkgNames)", "signatureAfterChange": "      private void validatePackageNames(Set<String> pkgNames)", "diff": ["-    private void validatePackageNames(Set<String> aPkgNames)", "+    private void validatePackageNames(Set<String> pkgNames)", "-            aPkgNames.size());", "+            pkgNames.size());", "-        assertEquals(\"names set.\", checkstylePackagesSet, aPkgNames);", "+        assertEquals(\"names set.\", checkstylePackagesSet, pkgNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab604e53d3920b340ce583c5c702ab2b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static boolean isJavadocComment(String aCommentContent)", "signatureAfterChange": "     public static boolean isJavadocComment(String commentContent)", "diff": ["-    public static boolean isJavadocComment(String aCommentContent)", "+    public static boolean isJavadocComment(String commentContent)", "-        if (!aCommentContent.isEmpty()) {", "-            final char docCommentIdentificator = aCommentContent.charAt(0);", "+        if (!commentContent.isEmpty()) {", "+            final char docCommentIdentificator = commentContent.charAt(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9e0542d115defee3a9503cc9a1c3ff", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/LineWrappingHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private DetailAST getNextCurNode(DetailAST aCurNode)", "signatureAfterChange": "     private DetailAST getNextCurNode(DetailAST curNode)", "diff": ["-    private DetailAST getNextCurNode(DetailAST aCurNode)", "+    private DetailAST getNextCurNode(DetailAST curNode)", "-        DetailAST nodeToVisit = aCurNode.getFirstChild();", "-        DetailAST currentNode = aCurNode;", "+        DetailAST nodeToVisit = curNode.getFirstChild();", "+        DetailAST currentNode = curNode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b116f86ce9998a06e95d6851ddd64c5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void addProperty(Property aProperty)", "signatureAfterChange": "     public void addProperty(Property property)", "diff": ["-    public void addProperty(Property aProperty)", "+    public void addProperty(Property property)", "-        mOverrideProps.add(aProperty);", "+        overrideProps.add(property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f19937e62a9e249bbad2561578d673", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public void setBraceAdjustment(int aAdjustmentAmount)", "signatureAfterChange": "     public void setBraceAdjustment(int adjustmentAmount)", "diff": ["-    public void setBraceAdjustment(int aAdjustmentAmount)", "+    public void setBraceAdjustment(int adjustmentAmount)", "-        mBraceAdjustment = aAdjustmentAmount;", "+        braceAdjustment = adjustmentAmount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3837a19bad712853e41089c297abe84", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java", "commitBeforeChange": "fca2fd4d07ad057664ec43b83a3835693a1b1c88", "commitAfterChange": "3bd699bd593414d63c7139aa410f13ec8341a027", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public void setLinePositionMap(List<Integer> lines2position)", "signatureAfterChange": "      public void setLinePositionMap(List<Integer> linePositionMap)", "diff": ["-    public void setLinePositionMap(List<Integer> lines2position) {", "-        this.lines2position = ImmutableList.copyOf(lines2position);", "+    public void setLinePositionMap(List<Integer> linePositionMap) {", "+        this.linePositionMap = ImmutableList.copyOf(linePositionMap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f610eb0afc2d76040bbba0ecf2cd1741", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/DeclarationCollector.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "         void addName(String aNameToAdd)", "signatureAfterChange": "         void addName(String nameToAdd)", "diff": ["-        void addName(String aNameToAdd)", "+        void addName(String nameToAdd)", "-            mVarNames.add(aNameToAdd);", "+            varNames.add(nameToAdd);"]}]}