{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "842c5bb09ab35ef403152a0aaf8158cb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50d1c485598351feb40b9b71b1d0472", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "6125beffc437f970eae276b4a6542265c6547784", "commitAfterChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public Class resolve(String aName) throws ClassNotFoundException", "signatureAfterChange": "     public Class resolve(String aName, String aCurrentClass)         throws ClassNotFoundException", "diff": ["-    public Class resolve(String aName) throws ClassNotFoundException", "+    public Class resolve(String aName, String aCurrentClass)", "+        throws ClassNotFoundException", "+        }", "+        //Perhaps it's fullyqualified inner class", "+        int dotIdx = aName.lastIndexOf(\".\");", "+        if (dotIdx != -1) {", "+            final String cn = aName.substring(0, dotIdx) + \"$\"", "+                + aName.substring(dotIdx + 1);", "+            if (isLoadable(cn)) {", "+                return safeLoad(cn);", "+            }", "+        //inner class of this class???", "+        if (!\"\".equals(aCurrentClass)) {", "+            final String innerClass = ((mPkg != null) ? (mPkg + \".\") : \"\")", "+                + aCurrentClass + \"$\" + aName;", "+            if (isLoadable(innerClass)) {", "+                return safeLoad(innerClass);", "+            }", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f894d3b6b9c58c9e67577b1803c0c92f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "commitAfterChange": "0da1e4d980420f6abb465af441e5ced254698273", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Class<?> resolveQualifiedName(final String name)", "signatureAfterChange": "     private Class<?> resolveQualifiedName(final String name)", "diff": ["+        Class<?> classObj = null;", "-                return safeLoad(name);", "+                classObj = safeLoad(name);", "-            //Perhaps it's fully-qualified inner class", "-            final int dot = name.lastIndexOf('.');", "-            if (dot != -1) {", "-                final String innerName =", "-                    name.substring(0, dot) + \"$\" + name.substring(dot + 1);", "-                if (isLoadable(innerName)) {", "-                    return safeLoad(innerName);", "+            else {", "+                //Perhaps it's fully-qualified inner class", "+                final int dot = name.lastIndexOf('.');", "+                if (dot != -1) {", "+                    final String innerName =", "+                        name.substring(0, dot) + \"$\" + name.substring(dot + 1);", "+                    if (isLoadable(innerName)) {", "+                        classObj = safeLoad(innerName);", "+                    }", "-", "-        return null;", "+        return classObj;"]}]}