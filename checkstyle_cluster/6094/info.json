{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "461a89f74277774154dec9989cf5aebf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e13b593652dd36fa1a060a834865149", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testSamePackageDepth2() throws Exception", "signatureAfterChange": "      @Test     public void testSamePackageDepth2() throws Exception", "diff": ["+    @Test", "-            \"7: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"8: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"9: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"10: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"11: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"12: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"13: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"14: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "+            \"7: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.*\"),", "+            \"8: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.List\"),", "+            \"9: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.StringTokenizer\"),", "+            \"10: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.*\"),", "+            \"11: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"12: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.locks.LockSupport\"),", "+            \"13: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.regex.Pattern\"),", "+            \"14: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.regex.Matcher\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf52f1929204b456eedaaebc807655b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testOrderRuleWithOneGroup() throws Exception", "signatureAfterChange": "      @Test     public void testOrderRuleWithOneGroup() throws Exception", "diff": ["-            \"7: \" + getCheckMessage(MSG_ORDER, \"STANDARD_JAVA_PACKAGE\"),", "-            \"8: \" + getCheckMessage(MSG_ORDER, \"STANDARD_JAVA_PACKAGE\"),", "-            \"9: \" + getCheckMessage(MSG_ORDER, \"STANDARD_JAVA_PACKAGE\"),", "-            \"10: \" + getCheckMessage(MSG_ORDER, \"STANDARD_JAVA_PACKAGE\"),", "-            \"11: \" + getCheckMessage(MSG_ORDER, \"STANDARD_JAVA_PACKAGE\"),", "+            \"7: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STD, \"java.util.List\"),", "+            \"8: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STD, \"java.util.StringTokenizer\"),", "+            \"9: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STD, \"java.util.*\"),", "+            \"10: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STD, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"11: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STD, \"java.util.concurrent.*\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c20a26f4c722a58f549019fb189548c7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testSamePackageAndStatic() throws Exception", "signatureAfterChange": "      @Test     public void testStaticSamePackage() throws Exception", "diff": ["-    public void testSamePackageAndStatic() throws Exception {", "+    public void testStaticSamePackage() throws Exception {", "-            \"6: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"7: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "-            \"8: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "-            \"10: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"11: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "+            \"6: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.*\"),", "+            \"7: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"java.awt.Button.ABORT\"),", "+            \"8: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"javax.swing.WindowConstants.*\"),", "+            \"10: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"11: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"java.io.File.createTempFile\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe03dba4ab9e57fb44777dff68ead8f0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "accb0bf5bcca0213c55996af02cc42bbc22f313c", "commitAfterChange": "cd12de2a24713a494393912e2277b67770eb79fe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testWithoutLineSeparator() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutLineSeparator() throws Exception", "diff": ["-            \"6: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"7: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "-            \"8: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "-            \"10: \" + getCheckMessage(MSG_ORDER, \"SAME_PACKAGE\"),", "-            \"11: \" + getCheckMessage(MSG_ORDER, \"STATIC\"),", "+            \"6: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.*\"),", "+            \"7: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"java.awt.Button.ABORT\"),", "+            \"8: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"javax.swing.WindowConstants.*\"),", "+            \"10: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, SAME, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"11: \" + getCheckMessage(MSG_NONGROUP_EXPECTED, STATIC, \"java.io.File.createTempFile\"),"]}]}