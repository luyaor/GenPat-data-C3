{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ac42fd743aa00ac74d93fede319ff15", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "199dceb48b245d21da4d4ec46cca2aa2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/TreeWalkerTest.java", "commitBeforeChange": "2c74879481a3b5d0a8951b0ec028cea44684bbd9", "commitAfterChange": "0bff657f61fcc60186e3800f5dc5d1b69652c246", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      @Test     public void testForInvalidCheckImplementation() throws Exception", "signatureAfterChange": "      @Test     public void testForInvalidCheckImplementation() throws Exception", "diff": ["-        // nothing is expected", "-        verify(checkConfig, pathToEmptyFile, expected);", "+        try {", "+            verify(checkConfig, pathToEmptyFile, expected);", "+        }", "+        catch (CheckstyleException ex) {", "+            assertTrue(ex.getMessage().contains(\"isCommentNodesRequired\"));", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9350132dd49015ac52cff7107663c429", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "18ce1a9f667788fe10875f4ed0775500285c15cc", "commitAfterChange": "4880b50a3a89db93e7e7c1b8bae8036ec06e186b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public String getMessage()", "signatureAfterChange": "     public String getMessage()", "diff": ["-        // Very simple approach - wait for performance problems.", "-        // Important to use the default class loader, and not the one in the", "-        // Configuration object. This is because the class loader in the", "-        // Configuration is specified by the user for resolving custom classes.", "-        final ResourceBundle bundle =", "-            ResourceBundle.getBundle(MESSAGE_BUNDLE, sLocale);", "-        final String pattern = bundle.getString(mKey);", "-        return MessageFormat.format(pattern, mArgs);", "+        try {", "+            // PERF: Very simple approach - wait for performance problems.", "+            // Important to use the default class loader, and not the one in the", "+            // Configuration object. This is because the class loader in the", "+            // Configuration is specified by the user for resolving custom", "+            // classes.", "+            final ResourceBundle bundle =", "+                    ResourceBundle.getBundle(mBundle, sLocale);", "+            final String pattern = bundle.getString(mKey);", "+            return MessageFormat.format(pattern, mArgs);", "+        }", "+        catch (MissingResourceException ex) {", "+            // If the Check author didn't provide i18n resource bundles", "+            // and logs error messages directly, this will return", "+            // the author's original message", "+            return MessageFormat.format(mKey, mArgs);", "+        }"]}]}