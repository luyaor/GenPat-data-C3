{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da5d11c1734ca73c1474cb940323ae5d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "194b41fdb8436a281460890feadee969", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "0a70130d577d392c0100fee2807986bc6c811b02", "commitAfterChange": "303d7cc6182e72f5472c8bcd9aa37432986793d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void checkUnclosedTags(FastStack<HtmlTag> htmlStack, String token)", "signatureAfterChange": "     private void checkUnclosedTags(Deque<HtmlTag> htmlStack, String token)", "diff": ["-    private void checkUnclosedTags(FastStack<HtmlTag> htmlStack, String token)", "+    private void checkUnclosedTags(Deque<HtmlTag> htmlStack, String token)", "-        final FastStack<HtmlTag> unclosedTags = FastStack.newInstance();", "+        final Deque<HtmlTag> unclosedTags = new ArrayDeque<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af098b850fbf72039b0aee6cb76e30a6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheck.java", "commitBeforeChange": "4ebf621616e3c9ea2284e7109d19abbbe1a94efc", "commitAfterChange": "85a9c1f13f06baf70c00e62d8bb91507aeb3a72d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void checkUnclosedTags(Stack aHtmlStack, String aToken)", "signatureAfterChange": "     private void checkUnclosedTags(Stack<HtmlTag> aHtmlStack, String aToken)", "diff": ["-    private void checkUnclosedTags(Stack aHtmlStack, String aToken)", "+    private void checkUnclosedTags(Stack<HtmlTag> aHtmlStack, String aToken)", "-        final Stack unclosedTags = new Stack();", "-        HtmlTag lastOpenTag = (HtmlTag) aHtmlStack.pop();", "+        final Stack<HtmlTag> unclosedTags = new Stack<HtmlTag>();", "+        HtmlTag lastOpenTag = aHtmlStack.pop();", "-                lastOpenTag = (HtmlTag) aHtmlStack.pop();", "+                lastOpenTag = aHtmlStack.pop();", "-                lastOpenTag = (HtmlTag) aHtmlStack.pop();", "+                lastOpenTag = aHtmlStack.pop();", "-            lastOpenTag = (HtmlTag) unclosedTags.get(i);", "+            lastOpenTag = unclosedTags.get(i);"]}]}