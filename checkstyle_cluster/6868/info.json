{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "feefd4288a1f21005d9ccf96e7924fed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2038ee2e5f3baebd0806c73e18010b4b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void customImportTest2() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest2() throws Exception", "diff": ["-            \"4: \" + getCheckMessage(clazz, MSG_LEX, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+            \"4: \" + getCheckMessage(clazz, MSG_LEX, \"java.awt.Button.ABORT\",", "+                \"java.io.File.createTempFile\"),", "-            \"10: \" + getCheckMessage(clazz, MSG_ORDER, STD, SPECIAL, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"10: \" + getCheckMessage(clazz, MSG_ORDER, STD, SPECIAL,", "+                \"java.util.concurrent.AbstractExecutorService\"),", "-            \"14: \" + getCheckMessage(clazz, MSG_SEPARATOR, \"com.sun.xml.internal.xsom.impl.scd.Iterators\"),", "-            \"16: \" + getCheckMessage(clazz, MSG_ORDER, SPECIAL, STD, \"com.google.common.reflect.*\"),", "+            \"14: \" + getCheckMessage(clazz, MSG_SEPARATOR,", "+                \"com.sun.xml.internal.xsom.impl.scd.Iterators\"),", "+            \"16: \" + getCheckMessage(clazz, MSG_ORDER, SPECIAL, STD,", "+                \"com.google.common.reflect.*\"),", "-        Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        String filePath = builder.getFilePath(\"CustomImportOrderInput_2\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = builder.getFilePath(\"CustomImportOrderInput_2\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f0cbd712450124e418871fe26d20e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule333orderingandsoacing/CustomImportOrderTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void customImportTest3() throws Exception", "signatureAfterChange": "      @Test     public void customImportTest3() throws Exception", "diff": ["-            \"4: \" + getCheckMessage(clazz, MSG_LEX, \"java.awt.Button.ABORT\", \"java.io.File.createTempFile\"),", "+            \"4: \" + getCheckMessage(clazz, MSG_LEX, \"java.awt.Button.ABORT\",", "+                \"java.io.File.createTempFile\"),", "-            \"10: \" + getCheckMessage(clazz, MSG_ORDER, STD, SPECIAL, \"java.util.concurrent.AbstractExecutorService\"),", "+            \"10: \" + getCheckMessage(clazz, MSG_ORDER, STD, SPECIAL,", "+                \"java.util.concurrent.AbstractExecutorService\"),", "-            \"14: \" + getCheckMessage(clazz, MSG_SEPARATOR, \"com.sun.xml.internal.xsom.impl.scd.Iterators\"),", "-            \"16: \" + getCheckMessage(clazz, MSG_ORDER, SPECIAL, STD, \"com.google.common.reflect.*\"),", "+            \"14: \" + getCheckMessage(clazz, MSG_SEPARATOR,", "+                \"com.sun.xml.internal.xsom.impl.scd.Iterators\"),", "+            \"16: \" + getCheckMessage(clazz, MSG_ORDER, SPECIAL, STD,", "+                \"com.google.common.reflect.*\"),", "-        Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "-        String filePath = builder.getFilePath(\"CustomImportOrderInput_3\");", "+        final Configuration checkConfig = builder.getCheckConfig(\"CustomImportOrder\");", "+        final String filePath = builder.getFilePath(\"CustomImportOrderInput_3\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}]}