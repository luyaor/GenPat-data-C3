{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6822944ac965d00fac918f6087780cde", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "827ce624b43b29481af29aadec8dfcfc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java", "commitBeforeChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "commitAfterChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public LocalizedMessage(int aLineNo,                             int aColNo,                             String aBundle,                             String aKey,                             Object[] aArgs,                             SeverityLevel aSeverityLevel,                             String aModuleId,                             Class<?> aSourceClass,                             String aCustomMessage)", "signatureAfterChange": "     public LocalizedMessage(int lineNo,                             int colNo,                             String bundle,                             String key,                             Object[] args,                             SeverityLevel severityLevel,                             String moduleId,                             Class<?> sourceClass,                             String customMessage)", "diff": ["-    public LocalizedMessage(int aLineNo,", "-                            int aColNo,", "-                            String aBundle,", "-                            String aKey,", "-                            Object[] aArgs,", "-                            SeverityLevel aSeverityLevel,", "-                            String aModuleId,", "-                            Class<?> aSourceClass,", "-                            String aCustomMessage)", "+    public LocalizedMessage(int lineNo,", "+                            int colNo,", "+                            String bundle,", "+                            String key,", "+                            Object[] args,", "+                            SeverityLevel severityLevel,", "+                            String moduleId,", "+                            Class<?> sourceClass,", "+                            String customMessage)", "-        mLineNo = aLineNo;", "-        mColNo = aColNo;", "-        mKey = aKey;", "-        mArgs = (null == aArgs) ? null : aArgs.clone();", "-        mBundle = aBundle;", "-        mSeverityLevel = aSeverityLevel;", "-        mModuleId = aModuleId;", "-        mSourceClass = aSourceClass;", "-        mCustomMessage = aCustomMessage;", "+        this.lineNo = lineNo;", "+        this.colNo = colNo;", "+        this.key = key;", "+        this.args = (null == args) ? null : args.clone();", "+        this.bundle = bundle;", "+        this.severityLevel = severityLevel;", "+        this.moduleId = moduleId;", "+        this.sourceClass = sourceClass;", "+        this.customMessage = customMessage;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6446de2bb8999c51cd854260461683", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/HtmlTag.java", "commitBeforeChange": "d97a2df674716efb7deda50180ae933bdc46d68a", "commitAfterChange": "89a51ba032fd9126651fa9efad31baf10c006ddf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     HtmlTag(String aId, int aLineNo, int aPosition, boolean aClosedTag,             boolean aIncomplete, String aText)", "signatureAfterChange": "     HtmlTag(String id, int lineNo, int position, boolean closedTag,             boolean incomplete, String text)", "diff": ["-    HtmlTag(String aId, int aLineNo, int aPosition, boolean aClosedTag,", "-            boolean aIncomplete, String aText)", "+    HtmlTag(String id, int lineNo, int position, boolean closedTag,", "+            boolean incomplete, String text)", "-        mId = (!\"\".equals(aId) && (aId.charAt(0) == '/'))", "-            ? aId.substring(1) : aId;", "-        mLineNo = aLineNo;", "-        mPosition = aPosition;", "-        mText = aText;", "-        mClosedTag = aClosedTag;", "-        mIncomplete = aIncomplete;", "+        this.id = (!\"\".equals(id) && (id.charAt(0) == '/'))", "+            ? id.substring(1) : id;", "+        this.lineNo = lineNo;", "+        this.position = position;", "+        this.text = text;", "+        this.closedTag = closedTag;", "+        this.incomplete = incomplete;"]}]}