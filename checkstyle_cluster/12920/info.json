{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92a499262f2d8b6d70afd017f3e81aae", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4899ed19c318ef1c86f31550c31c969f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/InnerAssignmentCheck.java", "commitBeforeChange": "dba2da926c7a35cc1c68a739934b846c14d9b7ae", "commitAfterChange": "779d30b7599259bb25f5178cbb28f2a038992553", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static boolean isInNoBraceControlStatement(DetailAST ast)", "signatureAfterChange": "     private static boolean isInNoBraceControlStatement(DetailAST ast)", "diff": ["-        return exprNext != null && exprNext.getType() == TokenTypes.SEMI;", "+        return exprNext.getType() == TokenTypes.SEMI;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89af55796e6ec39c0e290cba022e70ba", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/BlockParentHandler.java", "commitBeforeChange": "d4a862ea091fc7b74f34a13fcae8143239d9d4b9", "commitAfterChange": "0516374351fea9810a25f941e35b6914da82990f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     protected boolean hasLabelBefore()", "signatureAfterChange": "     protected boolean hasLabelBefore()", "diff": ["-        return parent != null && parent.getType() == TokenTypes.LABELED_STAT", "+        return parent.getType() == TokenTypes.LABELED_STAT"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d15cbdaeb9c38cad34d4007346f703a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java", "commitBeforeChange": "d53fc277c6947761992e6ca3016110d6ed59b042", "commitAfterChange": "bd55b4598158c500333dae2e2194de08a643a3d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private static boolean isBooleanLiteralReturnStatement(AST ast)", "signatureAfterChange": "     private static boolean isBooleanLiteralReturnStatement(AST ast)", "diff": ["-        if (expr == null || expr.getType() == TokenTypes.SEMI) {", "+        if (expr.getType() == TokenTypes.SEMI) {"]}]}