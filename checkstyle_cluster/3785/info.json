{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e581b3efeb1ebf801c6f1fea5704e7da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d2110e1961666735278a074da5b008", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,         DetailAST aAst, ExpressionHandler aParent)", "signatureAfterChange": "     ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,         DetailAST ast, ExpressionHandler parent)", "diff": ["-    ExpressionHandler createMethodCallHandler(IndentationCheck aIndentCheck,", "-        DetailAST aAst, ExpressionHandler aParent)", "+    ExpressionHandler createMethodCallHandler(IndentationCheck indentCheck,", "+        DetailAST ast, ExpressionHandler parent)", "-        ExpressionHandler theParent = aParent;", "-        DetailAST ast = aAst.getFirstChild();", "-        while ((ast != null) && (ast.getType() == TokenTypes.DOT)) {", "-            ast = ast.getFirstChild();", "+        ExpressionHandler theParent = parent;", "+        DetailAST astNode = ast.getFirstChild();", "+        while ((astNode != null) && (astNode.getType() == TokenTypes.DOT)) {", "+            astNode = astNode.getFirstChild();", "-        if ((ast != null) && isHandledType(ast.getType())) {", "-            theParent = getHandler(aIndentCheck, ast, theParent);", "-            mCreatedHandlers.put(ast, theParent);", "+        if ((astNode != null) && isHandledType(astNode.getType())) {", "+            theParent = getHandler(indentCheck, astNode, theParent);", "+            createdHandlers.put(astNode, theParent);", "-        return new MethodCallHandler(aIndentCheck, aAst, theParent);", "+        return new MethodCallHandler(indentCheck, ast, theParent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6c248b2be6556222855bf56008e6d90", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java", "commitBeforeChange": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9", "commitAfterChange": "35d1673788bbbac8263fdb69275dc6a63b095a24", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     protected IndentLevel getLevelImpl()", "signatureAfterChange": "     protected IndentLevel getLevelImpl()", "diff": ["-            MethodCallHandler container = ((MethodCallHandler) getParent());", "+            final MethodCallHandler container =", "+                ((MethodCallHandler) getParent());", "-                DetailAST main = getMainAst();", "-                DetailAST dot = (DetailAST) main.getFirstChild();", "-                DetailAST target = (DetailAST) dot.getFirstChild();", "+                final DetailAST main = getMainAst();", "+                final DetailAST dot = (DetailAST) main.getFirstChild();", "+                final DetailAST target = (DetailAST) dot.getFirstChild();", "-                    DetailAST dot1 = (DetailAST) target.getFirstChild();", "-                    DetailAST target1 = (DetailAST) dot1.getFirstChild();", "+                    final DetailAST dot1 = (DetailAST) target.getFirstChild();", "+                    final DetailAST target1 = (DetailAST) dot1.getFirstChild();", "-        LineSet lines = new LineSet();", "+        final LineSet lines = new LineSet();", "-        int firstCol = lines.firstLineCol();", "-        int lineStart = getLineStart(getFirstAst(getMainAst()));", "+        final int firstCol = lines.firstLineCol();", "+        final int lineStart = getLineStart(getFirstAst(getMainAst()));"]}]}