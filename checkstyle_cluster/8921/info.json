{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb18587b2892c8f34f843ebd3a31d23a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0bfa10d1b84a489adf0e6030fcf67f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 42, "signatureBeforeChange": "     public void setHeaderFile(File aName)", "signatureAfterChange": "     public void setHeaderFile(final File aName)", "diff": ["-    public void setHeaderFile(File aName)", "+    public void setHeaderFile(final File aName)", "-        try {", "-            mConfig.setHeaderFile(aName.getAbsolutePath());", "-        }", "-        catch (IOException ex) {", "-            throw new BuildException(\"Unable to read headerfile - \", ex);", "-        }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    try {", "+                        mConfig.setHeaderFile(aName.getAbsolutePath());", "+                    }", "+                    catch (IOException ex) {", "+                        throw new BuildException(", "+                            \"Unable to read headerfile - \", ex);", "+                    }", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "745838240f62156a75b40c8c1471ea50", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 46, "signatureBeforeChange": "     public void setHeaderIgnoreLine(String aList)", "signatureAfterChange": "     public void setHeaderIgnoreLine(final String aList)", "diff": ["-    public void setHeaderIgnoreLine(String aList)", "+    public void setHeaderIgnoreLine(final String aList)", "-        mConfig.setHeaderIgnoreLines(aList);", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setHeaderIgnoreLines(aList);", "+                }", "+            });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf042c0a0557f16b2ef8d4b33cc703b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "7a9a4c2045552032b51a9ad7bd821b64ce3197f6", "commitAfterChange": "ff08629ef8d0623ef77edd32877da1992cf0ea18", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 44, "signatureBeforeChange": "     public void setHeaderLinesRegexp(boolean aIsRegexp)", "signatureAfterChange": "     public void setHeaderLinesRegexp(final boolean aIsRegexp)", "diff": ["-    public void setHeaderLinesRegexp(boolean aIsRegexp)", "+    public void setHeaderLinesRegexp(final boolean aIsRegexp)", "-        mConfig.setHeaderLinesRegexp(aIsRegexp);", "-    }", "+        mOptionMemory.add(new Runnable()", "+            {", "+                public void run()", "+                {", "+                    mConfig.setHeaderLinesRegexp(aIsRegexp);", "+                }", "+            });"]}]}