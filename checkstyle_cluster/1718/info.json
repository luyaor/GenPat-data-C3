{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3c5bc347fa4c7c8a0514dea505bb453", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1049020eaeab6230156ed9c27cbf117e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "104e69edd63edb8d35b6ae63a17934fc5cf49267", "commitAfterChange": "81b52e27c5077f9a4f426d32b0e39a785052c715", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public static Pattern getPattern(String aPattern)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String aPattern)         throws PatternSyntaxException", "diff": ["-        Pattern retVal = (Pattern) CREATED_RES.get(aPattern);", "+        return getPattern(aPattern, 0);", "+    }", "-            retVal = Pattern.compile(aPattern);", "-            CREATED_RES.put(aPattern, retVal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b9eb170af458cd4249b29d7c0dad5d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "commitAfterChange": "1efd41aa924264e0899f5819e1b30a55d715f98b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "     void reportInstantiation(MyCommonAST aNewAST, LineText aTypeName)", "signatureAfterChange": "     void reportInstantiation(MyCommonAST aNewAST, LineText aTypeName)", "diff": ["-        final String typeName = aTypeName.getText();", "-        final int lineNo = aNewAST.getLineNo();", "-        final int colNo = aNewAST.getColumnNo();", "-        final String fqClassName = getIllegalInstantiation(typeName);", "-        if (fqClassName != null) {", "-            mMessages.add(lineNo, colNo, \"instantiation.avoid\", fqClassName);", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21f6fe2dbeefc7d2a5636b3e4f796348", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "7514320e04e4d35a4317172876e5f11e69a2c891", "commitAfterChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     void reportCPPComment(int aStartLineNo, int aStartColNo)", "signatureAfterChange": "     void reportCPPComment(int aStartLineNo, int aStartColNo)", "diff": ["-        final String cmt = mLines[aStartLineNo - 1].substring(aStartColNo);", "-        if (mConfig.getTodoRegexp().match(cmt)) {", "-            mMessages.add(aStartLineNo, \"todo.match\", mConfig.getTodoPat());", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d63b06a862651143007c36e0c3ed0b9", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "7514320e04e4d35a4317172876e5f11e69a2c891", "commitAfterChange": "01d27913a71c29d6a769ed98ca7dd4ba01fe31eb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                         int aEndLineNo, int aEndColNo)", "signatureAfterChange": "     void reportCComment(int aStartLineNo, int aStartColNo,                         int aEndLineNo, int aEndColNo)", "diff": ["-        final String[] cc = extractCComment(aStartLineNo, aStartColNo,", "-                                            aEndLineNo, aEndColNo);", "-", "-        // Check for to-do comments", "-        for (int i = 0; i < cc.length; i++) {", "-            if (mConfig.getTodoRegexp().match(cc[i])) {", "-                mMessages.add(aStartLineNo + i, \"todo.match\",", "-                              mConfig.getTodoPat());", "-            }", "-        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e15d2fd7a793b4f0b67d949475fd5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java", "commitBeforeChange": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec", "commitAfterChange": "a2b8be14bb1230f1b184701bae8bcc7af102bb25", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "signatureAfterChange": "     private void checkParamTags(final List<JavadocTag> tags,             final DetailAST parent, boolean reportExpectedTags)", "diff": ["+            final String arg1 = tag.getArg1();", "-                if (param.getText().equals(tag.getArg1())) {", "+                if (param.getText().equals(arg1)) {", "-            if (tag.getArg1().startsWith(\"<\") && tag.getArg1().endsWith(\">\")) {", "+            if (Utils.startsWithChar(arg1, '<') && Utils.endsWithChar(arg1, '>')) {", "-                                    tag.getArg1().substring(1,", "-                                            tag.getArg1().length() - 1)))", "+                                    arg1.substring(1,", "+                                        arg1.length() - 1)))", "-                        \"@param\", tag.getArg1());", "+                        \"@param\", arg1);"]}]}