{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf3f67f86cb10d5271c7d1a2023ae67d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bc27461956313cd4ee7c73daa69a127", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "ab1e3089135d74b0d8c3296d0074244ca89a55e2", "commitAfterChange": "9d8134f4e8f2400519d4097a96a87c1b533dc9d2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            if (!isLastGroup) {", "-                log(nextGroup, \"fall.through\");", "-            }", "-            else {", "-                log(aAST, \"fall.through.last\");", "+            if (!hasFallTruComment(aAST, nextGroup)) {", "+                if (!isLastGroup) {", "+                    log(nextGroup, \"fall.through\");", "+                }", "+                else {", "+                    log(aAST, \"fall.through.last\");", "+                }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d5ddbc47289d15169cb7b9f9567f43", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "73e2e24fca9eceba5c8c2720bec963dbf76a1132", "commitAfterChange": "d46dc44e79ea9151e594e02a0ab3bec69786593c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (nextGroup == null || nextGroup.getType() != TokenTypes.CASE_GROUP) {", "-            // last group we shouldn't check it", "+        final boolean isLastGroup =", "+            (nextGroup == null || nextGroup.getType() != TokenTypes.CASE_GROUP);", "+        if (isLastGroup && !mCheckLastGroup) {", "+            // we do not need to check last group", "-            log(nextGroup, \"fall.through\");", "+            if (!isLastGroup) {", "+                log(nextGroup, \"fall.through\");", "+            }", "+            else {", "+                log(aAST, \"fall.through.last\");", "+            }"]}]}