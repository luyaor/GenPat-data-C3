{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22de2e61b29b64e617c1879187ed6aed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac2efaef44223f90d377597829968dc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/usage/transmogrify/TableMaker.java", "commitBeforeChange": "0bef5991348beca2e84a2b711d734b689c494f15", "commitAfterChange": "3f09770c89ed82c8157fbb11047a52e4c5c2a75e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void processConstructorDef(SymTabAST tree)", "signatureAfterChange": "   public void processConstructorDef(SymTabAST tree)", "diff": ["-    String name = tree.findFirstToken(TokenTypes.IDENT).getText();", "-    MethodDef constructor = new MethodDef(name, symbolTable.getCurrentScope(),", "-                                          tree);", "-    symbolTable.defineMethod( constructor );", "-", "-    symbolTable.pushScope( constructor );", "-    walkTree(tree.findFirstToken(TokenTypes.SLIST), false);", "-    symbolTable.popScope();", "+    processMethodDef(tree);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f0fe886518c89d332252ca5326bed0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/AbstractJ2eeCheck.java", "commitBeforeChange": "5bfd76b4dea016ce70bdfab740520fe148d0ecdb", "commitAfterChange": "88b72c3df7214b3cb4f4fcb73b92883007caab17", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected void log(DetailAST aAST, String aKey, Object[] aArgs)", "signatureAfterChange": "     protected void log(DetailAST aAST, String aKey, Object[] aArgs)", "diff": ["-        final DetailAST nameAST =", "-            (DetailAST) aAST.findFirstToken(TokenTypes.IDENT);", "-        log(", "-            nameAST.getLineNo(),", "-            nameAST.getColumnNo(),", "-            aKey,", "-            aArgs);", "+        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        log(nameAST.getLineNo(), nameAST.getColumnNo(), aKey, aArgs);"]}]}