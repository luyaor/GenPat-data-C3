{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a68cc6904dd16098537e9f41676c2a27", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc2f49cd91b9305507209f26e1ff7d0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd", "commitAfterChange": "083ab98e4a451f1a982db89616535d9c0388b50b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     public static DetailAST parse(         FileContents aContents)         throws RecognitionException, TokenStreamException", "signatureAfterChange": "     public static DetailAST parse(         FileContents aContents)         throws RecognitionException, TokenStreamException", "diff": ["-        DetailAST rootAST;", "+        DetailAST rootAST = null;", "-            rootAST = parse(", "-                GeneratedJava15Lexer.class, SilentJava15Recognizer.class,", "-                aContents);", "+            rootAST = parse(aContents, true, true, true);", "-            rootAST = parse(", "-                GeneratedJavaLexer.class, GeneratedJavaRecognizer.class,", "-                aContents);", "+            try {", "+                rootAST = parse(aContents, true, true, false);", "+            }", "+            catch (RecognitionException exception2) {", "+                rootAST = parse(aContents, false, false, false);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ba2b3bf833191b5f3c844a0b2b3ca4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java", "commitBeforeChange": "17fe0633fdc7ecf2a34171c1f103c0eca1fead4a", "commitAfterChange": "237dbc6866249f18545d695d75b4577b1f2dfed6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     protected void leaveTokenHook(DetailAST ast)", "signatureAfterChange": "     private void leaveMethodDef(DetailAST ast)", "diff": ["-    @Override", "-    protected void leaveTokenHook(DetailAST ast) {", "-        // no code", "+     */", "+    private void leaveMethodDef(DetailAST ast) {", "+        final BigInteger bigIntegerMax = BigInteger.valueOf(max);", "+        if (currentValue.compareTo(bigIntegerMax) > 0) {", "+            log(ast, MSG_KEY, currentValue, bigIntegerMax);", "+        }", "+        popValue();"]}]}