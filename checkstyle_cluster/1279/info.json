{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb1bfc82dc89f02a4b5fd72f5637de5d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561e43050811ee9f93ac59d378497ec6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AvoidStaticImportCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.STATIC_IMPORT};", "+        return getAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8758696122fbf9f36b50b5bdcb47483b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java", "commitBeforeChange": "eeb20e6c8cc86d2d283c254ddcddf89f46aa5190", "commitAfterChange": "d56a2a366c6f9e3e8639d492d548ae562b75dc81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.STRING_LITERAL};", "+        return getAcceptableTokens();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dec048390004a8cc10f08a6df92aaf6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/NestedTryDepthCheck.java", "commitBeforeChange": "7503098309bf341eaea789595fa71a7ab740b49b", "commitAfterChange": "284c72cc83dfdc780545e667f5eb13982bf502e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Override     public int[] getDefaultTokens()", "signatureAfterChange": "      @Override     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.LITERAL_TRY};", "+        return getAcceptableTokens();"]}]}