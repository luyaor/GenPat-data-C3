{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "305944c50cf599a3a17b90c94b462b67", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57dc0bbad9cbb69c728e0b649f6a313d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration aCheckConfig)         throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-        c.setLocaleCountry(locale.getCountry());", "-        c.setLocaleLanguage(locale.getLanguage());", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(dc);", "-        c.addListener(new BriefLogger(stream));", "-        return c;", "+        checker.setLocaleCountry(locale.getCountry());", "+        checker.setLocaleLanguage(locale.getLanguage());", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(dc);", "+        checker.addListener(new BriefLogger(stream));", "+        return checker;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f32b73fb109a2bc1251017ee783296", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/CheckerTest.java", "commitBeforeChange": "a13ebd482ce5dd891ba99d4c22a7cd5ff7d8e2dc", "commitAfterChange": "dad4fa599aa3570980fcaff4cb5f37941847a7a1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testAddListener() throws Exception", "signatureAfterChange": "      @Test     public void testAddListener() throws Exception", "diff": ["-        final DebugChecker c = new DebugChecker();", "+        final DebugChecker checker = new DebugChecker();", "-        c.addListener(auditAdapter);", "+        checker.addListener(auditAdapter);", "-        c.fireAuditStarted();", "+        checker.fireAuditStarted();", "-        c.fireAuditFinished();", "+        checker.fireAuditFinished();", "-        c.fireFileStarted(\"Some File Name\");", "+        checker.fireFileStarted(\"Some File Name\");", "-        c.fireFileFinished(\"Some File Name\");", "+        checker.fireFileFinished(\"Some File Name\");", "-        c.fireErrors(\"Some File Name\", msgs);", "+        checker.fireErrors(\"Some File Name\", msgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d64a9dc480a3b6a7c4ba871c8ece2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java", "commitBeforeChange": "97956e1ae5d6842401ea0bfab121e8fb8d51c14d", "commitAfterChange": "d4ef19e679f276411a0de3b07e579c217d15f098", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "signatureAfterChange": "      protected Checker createChecker(Configuration checkConfig)             throws Exception", "diff": ["-        final Checker c = new Checker();", "+        final Checker checker = new Checker();", "-        c.setLocaleCountry(locale.getCountry());", "-        c.setLocaleLanguage(locale.getLanguage());", "-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "-        c.configure(dc);", "-        c.addListener(new BriefLogger(stream));", "-        return c;", "+        checker.setLocaleCountry(locale.getCountry());", "+        checker.setLocaleLanguage(locale.getLanguage());", "+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());", "+        checker.configure(dc);", "+        checker.addListener(new BriefLogger(stream));", "+        return checker;"]}]}