{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5d877c30defda901441cbe6764cab07", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b58544d356ac797e6ff3d29765be10e5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "signatureAfterChange": "     public static Configuration loadConfiguration(InputSource configSource,         PropertyResolver overridePropsResolver, boolean omitIgnoredModules)         throws CheckstyleException", "diff": ["-            throw new CheckstyleException(UNABLE_TO_PARSE_EXCEPTION_PREFIX", "-                    + \" - \" + e.getMessage() + \":\" + e.getLineNumber()", "-                    + \":\" + e.getColumnNumber(), e);", "+            final String message = String.format(\"%s - %s:%s:%s\", UNABLE_TO_PARSE_EXCEPTION_PREFIX,", "+                    e.getMessage(), e.getLineNumber(), e.getColumnNumber());", "+            throw new CheckstyleException(message, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e3db0bd817be4b60b4be4d572c32b0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java", "commitBeforeChange": "7f93a77882df3f78d35899fbce3f59581671f1cb", "commitAfterChange": "5e0f360e7b7745a362bd7a655e98654a2ad36443", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void verify(Checker checker,             File[] processedFiles,             String messageFileName,             String[] expected,             Integer... warnsExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker checker,             File[] processedFiles,             String messageFileName,             String[] expected,             Integer... warnsExpected)         throws Exception", "diff": ["+            int previousLineNumber = 0;", "-                assertNotNull(\"expected input file to have warning comment on line number \"", "-                        + lineNumber, theWarnings.remove((Integer) lineNumber));", "+                assertTrue(\"input file is expected to have a warning comment on line number \"", "+                        + lineNumber, theWarnings.remove((Integer) lineNumber)", "+                            || previousLineNumber == lineNumber);", "+                previousLineNumber = lineNumber;"]}]}