{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2095e487643e21bffef13f9c6bd4d20", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d19d58a394fa1f3be77a48110895b5a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            visitMethodDef(aAST);", "+            visitMethodDef(ast);", "-            visitVariableDef(aAST);", "+            visitVariableDef(ast);", "-            visitParameterDef(aAST);", "+            visitParameterDef(ast);", "-            visitImport(aAST);", "+            visitImport(ast);", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b2113e8374741318ec2ed870b213f7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java", "commitBeforeChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "commitAfterChange": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        switch (aAST.getType()) {", "+        switch (ast.getType()) {", "-            visitPackageDef(aAST);", "+            visitPackageDef(ast);", "-            visitClassDef(aAST);", "+            visitClassDef(ast);", "-            mContext.visitType(aAST);", "+            context.visitType(ast);", "-            mContext.visitLiteralNew(aAST);", "+            context.visitLiteralNew(ast);", "-            mContext.visitLiteralThrows(aAST);", "+            context.visitLiteralThrows(ast);", "-            throw new IllegalStateException(aAST.toString());", "+            throw new IllegalStateException(ast.toString());"]}]}