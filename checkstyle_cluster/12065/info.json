{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c595dbf80dbae6323750a6fa5b0cef0d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f98950d0769c096a9b9c9caa388ec80", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheck.java", "commitBeforeChange": "51628343a32cba177fa9b831997f99ebde701dee", "commitAfterChange": "89f764baad352e57f18a9a0220fc5a7c28d9911b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if ((aAST.getType() == TokenTypes.METHOD_CALL)", "-            || (aAST.getType() == TokenTypes.SUPER_CTOR_CALL))", "-        {", "+        if ((aAST.getType() == TokenTypes.METHOD_CALL)) {", "-        if (aAST.getType() == TokenTypes.SUPER_CTOR_CALL) {", "-            identText = \"super\";", "-            final String parenLine = lines[parenAST.getLineNo() - 1];", "-            final int superIndex =", "-                parenLine.lastIndexOf(\"super\", parenAST.getColumnNo());", "-            if (superIndex != -1) {", "-                identLineNo = aAST.getLineNo();", "-                identColumnNo = superIndex;", "-            }", "+        final DetailAST identAST;", "+        final DetailAST dotAST = aAST.findFirstToken(TokenTypes.DOT);", "+        if (dotAST != null) {", "+            identAST = dotAST.getLastChild();", "+        }", "+        else if (aAST.getType() == TokenTypes.SUPER_CTOR_CALL) {", "+            identAST = aAST;", "-            final DetailAST identAST;", "-            final DetailAST dotAST = aAST.findFirstToken(TokenTypes.DOT);", "-            if (dotAST != null) {", "-                identAST = dotAST.getLastChild();", "-            }", "-            else {", "-                identAST = aAST.findFirstToken(TokenTypes.IDENT);", "-            }", "-            identLineNo = identAST.getLineNo();", "-            identColumnNo = identAST.getColumnNo();", "-            identText = identAST.getText();", "+            identAST = aAST.findFirstToken(TokenTypes.IDENT);", "+        identLineNo = identAST.getLineNo();", "+        identColumnNo = identAST.getColumnNo();", "+        identText = identAST.getText();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5129d66c474d0751e9f577280f43589", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "9a8acc01fdfd4cea9891b0da6e01ff41226900ff", "commitAfterChange": "2b8786f133631d37cb7b9c6f334fe0ebb5f4017a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     void verifyWSAfter(int aLineNo, int aColNo, MyToken aConstruct)", "signatureAfterChange": "     void verifyWSAfter(int aLineNo, int aColNo, MyToken aConstruct)", "diff": ["-        if (mConfig.isIgnoreWhitespace() ||", "-            ((MyToken.CAST == aConstruct) && mConfig.isIgnoreCastWhitespace()))", "-        {", "-            return;", "-        }", "+        verifyWSAfter(aLineNo, aColNo, aConstruct, \"\");", "+    }", "-        final String line = mLines[aLineNo - 1];", "-        if ((aColNo < line.length()) &&", "-            !Character.isWhitespace(line.charAt(aColNo)))", "-        {", "-            log(aLineNo,", "-                aConstruct.getText() + \" needs to be followed by whitespace.\");", "-        }"]}]}