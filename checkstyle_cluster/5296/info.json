{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa9a6efd0cb323b16ce3c37b9832f363", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c1086ef228927b5b214e9515eda8d8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817", "commitAfterChange": "1bd30555eac039d0486dffb3fc43b7a34117909b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "signatureAfterChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "diff": ["-                (mods.contains(\"static\") && mods.contains(\"final\"))", "-                || (isPackageAllowed() && \"package\".equals(variableScope))", "-                || (isProtectedAllowed() && \"protected\".equals(variableScope))", "-                || (\"public\".equals(variableScope)", "+                mods.contains(\"static\") && mods.contains(\"final\")", "+                || isPackageAllowed() && \"package\".equals(variableScope)", "+                || isProtectedAllowed() && \"protected\".equals(variableScope)", "+                || \"public\".equals(variableScope)", "-                   || (allowPublicImmutableFields", "-                      && classModifiers.contains(\"final\") && isImmutableField(variableDef)));", "+                   || allowPublicImmutableFields", "+                      && classModifiers.contains(\"final\") && isImmutableField(variableDef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a1e23adb340c236caaeca96a343f9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java", "commitBeforeChange": "bd55b4598158c500333dae2e2194de08a643a3d5", "commitAfterChange": "f8ba0d727928aaa1275758fa09114155faab0b9e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "signatureAfterChange": "     private boolean hasProperAccessModifier(DetailAST variableDef, String variableName)", "diff": ["-        final Set<String> mods = getModifiers(variableDef);", "-        final String variableScope = getVisibilityScope(mods);", "+", "+        final String variableScope = getVisibilityScope(variableDef);", "-            final DetailAST classDef = variableDef.getParent().getParent();", "-            final Set<String> classModifiers = getModifiers(classDef);", "-", "-                mods.contains(\"static\") && mods.contains(\"final\")", "+                isStaticFinalVariable(variableDef)", "-                || \"public\".equals(variableScope)", "-                   && getPublicMemberRegexp().matcher(variableName).find()", "+                || isIgnoredPublicMember(variableName, variableScope)", "-                      && classModifiers.contains(\"final\") && isImmutableField(variableDef);", "+                      && isImmutableFieldDefinedInFinalClass(variableDef);", "+    }"]}]}