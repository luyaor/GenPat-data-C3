{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "913d9f5831ad5caa0c4251484e4e7b6b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989c706e88377ede4419b5bd3ed6b7e0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "8dc1a8ab994076f3fc10bab9248a2439ee54b443", "commitAfterChange": "21f0b07bd031f022d14106150af66ceddb4c06b8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "     protected void fireAuditStarted()", "signatureAfterChange": "     protected void fireAuditStarted()", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            listener.auditStarted(evt);", "+        if (mFilterChain.decide(evt) != Filter.DENY) {", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.auditStarted(evt);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5020c566c7f1d6b15543dede8f1407", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "04bca2e0435d598918603ce5a457ddc99e6ae5a5", "commitAfterChange": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public void fireFileStarted(String aFileName)", "signatureAfterChange": "     public void fireFileStarted(String aFileName)", "diff": ["-        final Iterator it = mListeners.iterator();", "-        while (it.hasNext()) {", "-            final AuditListener listener = (AuditListener) it.next();", "-            listener.fileStarted(evt);", "+        if (accept(evt)) {", "+            final Iterator it = mListeners.iterator();", "+            while (it.hasNext()) {", "+                final AuditListener listener = (AuditListener) it.next();", "+                listener.fileStarted(evt);", "+            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb1c49901c61dba9bfbc3af22e9f015", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/CheckStyleTask.java", "commitBeforeChange": "1846dacad6c2a3a04b3350b45bb8b05835192296", "commitAfterChange": "dd477210aefeabb265e105a9fe8120c8310605e8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "signatureAfterChange": "     protected AuditListener[] getListeners()         throws ClassNotFoundException, InstantiationException,         IllegalAccessException, IOException", "diff": ["-        final int listenerCount = mCustomListeners.size();", "-            new AuditListener[formatterCount + listenerCount];", "+            new AuditListener[formatterCount];", "-        //custom listeners", "-        for (int i = 0; i < listenerCount; i++) {", "-            final Listener listener = (Listener) mCustomListeners.get(i);", "-            listeners[formatterCount + i] = createCustomListener(listener);", "-        }", "-    }"]}]}