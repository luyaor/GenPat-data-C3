{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27bf00c4e53572945885ca455e73066e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4781cfd9ad3345cded7563bc131cbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/CheckUtils.java", "commitBeforeChange": "ddff555c2df8c132d70e4e2fa4dce7e7c8335e29", "commitAfterChange": "a7bede3cb47427c4853b0375b873d541b99a38f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public static float parseFloat(String aText, int aType)", "signatureAfterChange": "     public static double parseFloat(String aText, int aType)", "diff": ["-    public static float parseFloat(String aText, int aType)", "-        float result = 0;", "-            result = (float) Double.parseDouble(aText);", "-            // Long.parseLong requires that the text ends with neither 'L'", "-            // nor 'l'.", "-                result = (float) Long.parseLong(aText, radix);", "+     */", "+    public static double parseFloat(String aText, int aType)", "+    {", "+        return (float) parseDouble(aText, aType);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f154deb803a4c1f8ce1f1e63d1320c6c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java", "commitBeforeChange": "bb1646fbcc6a1f882adcb8b4e299447a5a9f6f98", "commitAfterChange": "7f65ac9c09d4e0ae5afa5b4709c7a8a136b6bd7f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-            // get target of annotation", "-            DetailAST targetAST = null;", "-            DetailAST parentAST = ast.getParent();", "-            if (parentAST != null) {", "-                switch (parentAST.getType()) {", "-                    case TokenTypes.MODIFIERS:", "-                    case TokenTypes.ANNOTATIONS:", "-                        parentAST = parentAST.getParent();", "-                        if (parentAST != null) {", "-                            switch (parentAST.getType()) {", "-                                case TokenTypes.ANNOTATION_DEF:", "-                                case TokenTypes.PACKAGE_DEF:", "-                                case TokenTypes.CLASS_DEF:", "-                                case TokenTypes.INTERFACE_DEF:", "-                                case TokenTypes.ENUM_DEF:", "-                                case TokenTypes.ENUM_CONSTANT_DEF:", "-                                case TokenTypes.CTOR_DEF:", "-                                case TokenTypes.METHOD_DEF:", "-                                case TokenTypes.PARAMETER_DEF:", "-                                case TokenTypes.VARIABLE_DEF:", "-                                    targetAST = parentAST;", "-                                    break;", "+            final DetailAST targetAST = getAnnotationTarget(ast);", "-                                default:", "-                                    // unexpected target type", "-                            }", "-                        }", "-                        break;", "-                    default:", "-                        // unexpected container type", "-                }", "-            }"]}]}