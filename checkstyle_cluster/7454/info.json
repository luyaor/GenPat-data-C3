{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06110c22995229e5df43157bee5c7e15", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2796d7b411be8c7cef608f662b9b79", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4822variabledistance/VariableDeclarationUsageDistanceTest.java", "commitBeforeChange": "6b902e2af6ba7ae90e95a3f126d2a1e685c9c64d", "commitAfterChange": "344ea5c012d1814441b5758013a2b035c6e1613a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "signatureAfterChange": "      @Test     public void arrayTypeStyleTest() throws Exception", "diff": ["-        String msgExt = \"variable.declaration.usage.distance.extend\";", "-        Class<VariableDeclarationUsageDistanceCheck> clazz = VariableDeclarationUsageDistanceCheck.class;", "+        final String msgExt = \"variable.declaration.usage.distance.extend\";", "+        final Class<VariableDeclarationUsageDistanceCheck> clazz =", "+                VariableDeclarationUsageDistanceCheck.class;", "-        Configuration checkConfig = builder.getCheckConfig(\"VariableDeclarationUsageDistance\");", "-        String filePath = builder.getFilePath(\"InputVariableDeclarationUsageDistanceCheck\");", "+        final Configuration checkConfig =", "+            builder.getCheckConfig(\"VariableDeclarationUsageDistance\");", "+        final String filePath = builder.getFilePath(\"InputVariableDeclarationUsageDistanceCheck\");", "-        Integer[] warnList = builder.getLinesWithWarn(filePath);", "+        final Integer[] warnList = builder.getLinesWithWarn(filePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a68709a5267514c63999b959d37712", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/DetailASTTest.java", "commitBeforeChange": "9316d20698a52bd68060947b8567577e47351b9a", "commitAfterChange": "3a2cb4d787e3c626bb0e2e02915cc1c37deb9d0b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "signatureAfterChange": "      private static void checkTree(final DetailAST node,                            final DetailAST parent,                            final DetailAST prev,                            final String filename,                            final DetailAST root)", "diff": ["-        Object[] params = {", "+        final Object[] params = {", "-        MessageFormat badParentFormatter = new MessageFormat(", "+        final MessageFormat badParentFormatter = new MessageFormat(", "-        String badParentMsg = badParentFormatter.format(params);", "+        final String badParentMsg = badParentFormatter.format(params);", "-        MessageFormat badPrevFormatter = new MessageFormat(", "+        final MessageFormat badPrevFormatter = new MessageFormat(", "-        String badPrevMsg = badPrevFormatter.format(params);", "+        final String badPrevMsg = badPrevFormatter.format(params);"]}]}