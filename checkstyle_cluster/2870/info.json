{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc02524ae1b33415616d93f853ef9f93", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efcf10f95316d2e5c0409e35edec293", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "a1706551793b62548d9dcc93731b656f07b125a4", "commitAfterChange": "00fb7f0c1852eb015933c7c121284597de29caad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     private static Map arrangePropertyFiles(Set aPropFiles)", "signatureAfterChange": "     private static Map arrangePropertyFiles(File[] aPropFiles)", "diff": ["-    private static Map arrangePropertyFiles(Set aPropFiles)", "+    private static Map arrangePropertyFiles(File[] aPropFiles)", "-        for (Iterator iterator = aPropFiles.iterator(); iterator.hasNext();) {", "-            File file = (File) iterator.next();", "+        for (int i = 0; i < aPropFiles.length; i++) {", "+            File file = aPropFiles[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "def19d93656d8b69e8a21603e028f1dd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalImportCheck.java", "commitBeforeChange": "e52c0ac5417459612b64b564150bb6487d5ce504", "commitAfterChange": "9118f376bee8c9281c4458b96fbda8f3ff49bbdc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     private boolean isIllegalImport(String aImportText)", "signatureAfterChange": "     private boolean isIllegalImport(String aImportText)", "diff": ["-        for (Iterator it = mIllegalPkgs.iterator(); it.hasNext();) {", "-            final String illegalPkg = (String) it.next();", "-            if (aImportText.startsWith(illegalPkg + \".\")) {", "+        for (int i = 0; i < mIllegalPkgs.length; i++) {", "+            if (aImportText.startsWith(mIllegalPkgs[i] + \".\")) {"]}]}