{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2da8732b809da6c7c823f20de77b04e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c369131fbbcca36f62f35ecd8e84161", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java", "commitBeforeChange": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154", "commitAfterChange": "911065320fb39299f442ea08f775cfe08ba2a2ed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkCppComments(FileContents aContents)", "signatureAfterChange": "     private void checkCppComments(FileContents aContents)", "diff": ["-        for (Integer key : comments.keySet()) {", "-            final String cmt = (comments.get(key)).getText()[0];", "+        for (Map.Entry<Integer, TextBlock> entry : comments.entrySet()) {", "+            final String cmt = entry.getValue().getText()[0];", "-                log(key.intValue(), \"todo.match\", getFormat());", "+                log(entry.getKey().intValue(), \"todo.match\", getFormat());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12c4c45e267da1c75c382ecd206c82a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java", "commitBeforeChange": "898b05afda02cf917cad7182ed9b37e8032dd4c4", "commitAfterChange": "18f4f7efe927bef2c50ce97c860a64b8198cbb07", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void checkPropertyFileSets(Map aPropFiles)", "signatureAfterChange": "     private void checkPropertyFileSets(Map aPropFiles)", "diff": ["-        final Set keySet = aPropFiles.keySet();", "+        final Set entrySet = aPropFiles.entrySet();", "-        for (Iterator iterator = keySet.iterator(); iterator.hasNext();) {", "-            final String baseName = (String) iterator.next();", "-            final Set files = (Set) aPropFiles.get(baseName);", "+        for (Iterator iterator = entrySet.iterator(); iterator.hasNext();) {", "+            final Map.Entry entry = (Map.Entry) iterator.next();", "+            final Set files = (Set) entry.getValue();"]}]}