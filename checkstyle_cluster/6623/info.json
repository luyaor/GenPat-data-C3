{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebfdb1f5b7a09dca01122e3fd0e26635", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d7a5d35e4ac72164faaa2115dac2b5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTokenCheckTest.java", "commitBeforeChange": "fee4ea98984da7b06b33d8a7cd64d7ec79c3db10", "commitAfterChange": "dd47d21b9eb0d254016315790db9be5db2c28ea4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     @Test     public void testDefault()         throws Exception", "signatureAfterChange": "      @Test     public void testPreviouslyIllegalTokens()         throws Exception", "diff": ["-    public void testDefault()", "+", "+    @Test", "+    public void testPreviouslyIllegalTokens()", "+        throws Exception {", "+        final DefaultConfiguration checkConfig =", "+            createCheckConfig(IllegalTokenCheck.class);", "+        checkConfig.addAttribute(\"tokens\", \"LITERAL_SWITCH,POST_INC,POST_DEC\");", "+        final String[] expected = {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bb172e22e307f39be9423f21f2b14c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheckTest.java", "commitBeforeChange": "8f5317d1349ae006bfd26af2279cc2ca986df6e3", "commitAfterChange": "afbb944fe23b1be090ed69bfb97641be9dc2842c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testWithoutProcessJavadoc() throws Exception", "diff": ["-    public void testDefault() throws Exception {", "+    public void testWithoutProcessJavadoc() throws Exception {", "+        checkConfig.addAttribute(\"processJavadoc\", \"false\");"]}]}