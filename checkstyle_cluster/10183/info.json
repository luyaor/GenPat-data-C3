{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "791ea7301d1e0069097953013eda175f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8b13929da0957170975005d1ea501f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void walk(DetailAST aAST, FileContents aContents)", "signatureAfterChange": "     private void walk(DetailAST aAST, FileContents aContents             , AstState aAstState)", "diff": ["-    private void walk(DetailAST aAST, FileContents aContents)", "+    private void walk(DetailAST aAST, FileContents aContents", "+            , AstState aAstState)", "-        getMessageCollector().reset();", "-        notifyBegin(aAST, aContents);", "+        notifyBegin(aAST, aContents, aAstState);", "-            if (useRecursiveAlgorithm()) {", "-                processRec(aAST);", "-            }", "-            else {", "-                processIter(aAST);", "-            }", "+            processIter(aAST, aAstState);", "-        notifyEnd(aAST);", "+        notifyEnd(aAST, aAstState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c23983b150b31fa11b7193078809db", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "commitAfterChange": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private void walk(DetailAST aAST, FileContents aContents             , AstState aAstState)", "signatureAfterChange": "     private void walk(DetailAST ast, FileContents contents             , AstState astState)", "diff": ["-    private void walk(DetailAST aAST, FileContents aContents", "-            , AstState aAstState)", "+    private void walk(DetailAST ast, FileContents contents", "+            , AstState astState)", "-        notifyBegin(aAST, aContents, aAstState);", "+        notifyBegin(ast, contents, astState);", "-        // empty files are not flagged by javac, will yield aAST == null", "-        if (aAST != null) {", "-            processIter(aAST, aAstState);", "+        // empty files are not flagged by javac, will yield ast == null", "+        if (ast != null) {", "+            processIter(ast, astState);", "-        notifyEnd(aAST, aAstState);", "+        notifyEnd(ast, astState);"]}]}