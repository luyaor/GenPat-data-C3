{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afaec0174799a5a2e77c6a990983ce4d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec15e1113dce21688f131124b71f7804", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java", "commitBeforeChange": "9241c0a692ed65fab3b3fdb3c4ff1c118794337c", "commitAfterChange": "4ee4d60e07a763be669173c3f45ed9b29eedca7c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean hasFallTruComment(DetailAST currentCase,             DetailAST nextCase)", "signatureAfterChange": "     private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase)", "diff": ["-    private boolean hasFallTruComment(DetailAST currentCase,", "-            DetailAST nextCase) {", "-", "+    private boolean hasFallThroughComment(DetailAST currentCase, DetailAST nextCase) {", "+        boolean allThroughComment = false;", "-            return true;", "+            allThroughComment = true;", "-", "-        /*", "-         * Handle:", "-         *    case 1:", "-         *    .....", "-         *    // FALLTHRU", "-         *    case 2:", "-         *    ....", "-         * and", "-         *    switch(i) {", "-         *    default:", "-         *    // FALLTHRU", "-         *    }", "-         */", "-        final int startLineNo = currentCase.getLineNo();", "-        for (int i = endLineNo - 2; i > startLineNo - 1; i--) {", "-            if (!lines[i].trim().isEmpty()) {", "-                return commentMatch(regExp, lines[i], i + 1);", "+        else {", "+            /*", "+             * Handle:", "+             *    case 1:", "+             *    .....", "+             *    // FALLTHRU", "+             *    case 2:", "+             *    ....", "+             * and", "+             *    switch(i) {", "+             *    default:", "+             *    // FALLTHRU", "+             *    }", "+             */", "+            final int startLineNo = currentCase.getLineNo();", "+            for (int i = endLineNo - 2; i > startLineNo - 1; i--) {", "+                if (!lines[i].trim().isEmpty()) {", "+                    allThroughComment = commentMatch(regExp, lines[i], i + 1);", "+                    break;", "+                }", "-", "-        // Well -- no relief comment found.", "-        return false;", "+        return allThroughComment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f894d3b6b9c58c9e67577b1803c0c92f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ClassResolver.java", "commitBeforeChange": "03f41815802b1ce6a0ca906c9f28c5a98344a932", "commitAfterChange": "0da1e4d980420f6abb465af441e5ced254698273", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private Class<?> resolveQualifiedName(final String name)", "signatureAfterChange": "     private Class<?> resolveQualifiedName(final String name)", "diff": ["+        Class<?> classObj = null;", "-                return safeLoad(name);", "+                classObj = safeLoad(name);", "-            //Perhaps it's fully-qualified inner class", "-            final int dot = name.lastIndexOf('.');", "-            if (dot != -1) {", "-                final String innerName =", "-                    name.substring(0, dot) + \"$\" + name.substring(dot + 1);", "-                if (isLoadable(innerName)) {", "-                    return safeLoad(innerName);", "+            else {", "+                //Perhaps it's fully-qualified inner class", "+                final int dot = name.lastIndexOf('.');", "+                if (dot != -1) {", "+                    final String innerName =", "+                        name.substring(0, dot) + \"$\" + name.substring(dot + 1);", "+                    if (isLoadable(innerName)) {", "+                        classObj = safeLoad(innerName);", "+                    }", "-", "-        return null;", "+        return classObj;"]}]}