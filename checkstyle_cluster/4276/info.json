{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b76c79ecfb5adc344f9865858970c0f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e3f0b4dfb89f8dc96ef0bb1fd21c4e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheckTest.java", "commitBeforeChange": "27149f3504a2f350b74f456a9bffbae76a460060", "commitAfterChange": "5ede09997c283b4c418f0f540848e006be04fa87", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testMethodToken() throws Exception", "signatureAfterChange": "      @Test     public void testMethodToken() throws Exception", "diff": ["-            \"53:17: Parameter s should be final.\",", "-            \"69:17: Parameter s should be final.\",", "-            \"75:17: Parameter s should be final.\",", "-            \"90:45: Parameter e should be final.\",", "-            \"93:36: Parameter e should be final.\",", "-            \"110:18: Parameter aParam should be final.\",", "-            \"113:18: Parameter args should be final.\",", "-            \"116:18: Parameter args should be final.\",", "+            \"53:17: \" + getCheckMessage(MSG_KEY, \"s\"),", "+            \"69:17: \" + getCheckMessage(MSG_KEY, \"s\"),", "+            \"75:17: \" + getCheckMessage(MSG_KEY, \"s\"),", "+            \"90:45: \" + getCheckMessage(MSG_KEY, \"e\"),", "+            \"93:36: \" + getCheckMessage(MSG_KEY, \"e\"),", "+            \"110:18: \" + getCheckMessage(MSG_KEY, \"aParam\"),", "+            \"113:18: \" + getCheckMessage(MSG_KEY, \"args\"),", "+            \"116:18: \" + getCheckMessage(MSG_KEY, \"args\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e68390b284f81ff904a55cd34bc82fe", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/MethodParamPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testAllowLineBreaks() throws Exception", "signatureAfterChange": "      @Test     public void testAllowLineBreaks() throws Exception", "diff": ["-            \"11:32: '(' is preceded with whitespace.\",", "-            \"13:15: '(' is preceded with whitespace.\",", "-            \"27:24: '(' is preceded with whitespace.\",", "-            \"36:39: '(' is preceded with whitespace.\",", "-            \"42:16: '(' is preceded with whitespace.\",", "-            \"50:21: '(' is preceded with whitespace.\",", "-            \"56:18: '(' is preceded with whitespace.\",", "-            \"61:36: '(' is preceded with whitespace.\",", "+            \"11:32: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"13:15: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"27:24: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"36:39: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"42:16: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"50:21: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"56:18: \" + getCheckMessage(WS_PRECEDED, \"(\"),", "+            \"61:36: \" + getCheckMessage(WS_PRECEDED, \"(\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36028dadb64f5943470d3cae8e54c21f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/TypecastParenPadCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSpace()         throws Exception", "signatureAfterChange": "      @Test     public void testSpace()         throws Exception", "diff": ["-            \"87:21: '(' is not followed by whitespace.\",", "-            \"87:27: ')' is not preceded with whitespace.\",", "-            \"88:14: '(' is not followed by whitespace.\",", "-            \"88:20: ')' is not preceded with whitespace.\",", "-            \"90:14: '(' is not followed by whitespace.\",", "-            \"90:20: ')' is not preceded with whitespace.\",", "-            \"241:18: '(' is not followed by whitespace.\",", "-            \"241:21: ')' is not preceded with whitespace.\",", "+            \"87:21: \" + getCheckMessage(WS_NOT_FOLLOWED, \"(\"),", "+            \"87:27: \" + getCheckMessage(WS_NOT_PRECEDED, \")\"),", "+            \"88:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"(\"),", "+            \"88:20: \" + getCheckMessage(WS_NOT_PRECEDED, \")\"),", "+            \"90:14: \" + getCheckMessage(WS_NOT_FOLLOWED, \"(\"),", "+            \"90:20: \" + getCheckMessage(WS_NOT_PRECEDED, \")\"),", "+            \"241:18: \" + getCheckMessage(WS_NOT_FOLLOWED, \"(\"),", "+            \"241:21: \" + getCheckMessage(WS_NOT_PRECEDED, \")\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511a90b9698561d252e1ec7c7a2b1e74", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"25:17: '}' should be on the same line.\",", "-            \"28:17: '}' should be on the same line.\",", "-            \"40:13: '}' should be on the same line.\",", "-            \"44:13: '}' should be on the same line.\",", "-            \"93:27: '}' should be alone on a line.\",", "-            \"93:27: '}' should be on a new line.\",", "-            \"93:27: '}' should have line break before.\",", "-            \"97:54: '}' should have line break before.\",", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7737cdc92b1f33a89326b15f79ee83a0", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testSame() throws Exception", "signatureAfterChange": "     @Test     public void testSame() throws Exception", "diff": ["-            \"25:17: '}' should be on the same line.\",", "-            \"28:17: '}' should be on the same line.\",", "-            \"40:13: '}' should be on the same line.\",", "-            \"44:13: '}' should be on the same line.\",", "-            \"93:27: '}' should be alone on a line.\",", "-            \"93:27: '}' should be on a new line.\",", "-            \"93:27: '}' should have line break before.\",", "-            \"97:54: '}' should have line break before.\",", "+            \"25:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"28:17: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"40:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"44:13: \" + getCheckMessage(MSG_KEY_LINE_SAME, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_ALONE, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"}\"),", "+            \"93:27: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),", "+            \"97:54: \" + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, \"}\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78be8f5468b001d2a67d2c133a762734", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "f0326fd4c85c3779c47013d2800ef6daf28721b1", "commitAfterChange": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testNL2() throws Exception", "signatureAfterChange": "      @Test     public void testNL2() throws Exception", "diff": ["-            \"14:39: '{' should be on a new line.\",", "-            \"21:20: '{' should be on a new line.\",", "-            \"34:31: '{' should be on a new line.\",", "-            \"43:24: '{' should be on a new line.\",", "-            \"56:35: '{' should be on a new line.\",", "-            \"60:24: '{' should be on a new line.\",", "-            \"74:20: '{' should be on a new line.\",", "-            \"87:31: '{' should be on a new line.\",", "+            \"14:39: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"21:20: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"34:31: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"43:24: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"56:35: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"60:24: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"74:20: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),", "+            \"87:31: \" + getCheckMessage(MSG_KEY_LINE_NEW, \"{\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d03e72a4f6d6ac626d4217617e4ed1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceBeforeCheckTest.java", "commitBeforeChange": "2935730a7a7a703f9923c3a6b31fed3a3b589fe2", "commitAfterChange": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefault() throws Exception", "signatureAfterChange": "      @Test     public void testDefault() throws Exception", "diff": ["-            \"30:14: '++' is preceded with whitespace.\",", "-            \"30:21: '--' is preceded with whitespace.\",", "-            \"176:18: ';' is preceded with whitespace.\",", "-            \"178:23: ';' is preceded with whitespace.\",", "-            \"185:18: ';' is preceded with whitespace.\",", "-            \"187:27: ';' is preceded with whitespace.\",", "-            \"195:26: ';' is preceded with whitespace.\",", "-            \"211:15: ';' is preceded with whitespace.\",", "+            \"30:14: \" + getCheckMessage(MSG_KEY, \"++\"),", "+            \"30:21: \" + getCheckMessage(MSG_KEY, \"--\"),", "+            \"176:18: \" + getCheckMessage(MSG_KEY, \";\"),", "+            \"178:23: \" + getCheckMessage(MSG_KEY, \";\"),", "+            \"185:18: \" + getCheckMessage(MSG_KEY, \";\"),", "+            \"187:27: \" + getCheckMessage(MSG_KEY, \";\"),", "+            \"195:26: \" + getCheckMessage(MSG_KEY, \";\"),", "+            \"211:15: \" + getCheckMessage(MSG_KEY, \";\"),"]}]}