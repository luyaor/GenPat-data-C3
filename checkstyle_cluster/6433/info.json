{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3a04d9453233ee99e103959f6c5649f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51af8c41b82eda2e80e72e3db4c6e80c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "624f82b556974bf15cafee6a057acca3dac5eec5", "commitAfterChange": "6125beffc437f970eae276b4a6542265c6547784", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        case TokenTypes.ANNOTATION_DEF :", "+        case TokenTypes.ENUM_DEF :", "+        case TokenTypes.ENUM_CONSTANT_DEF :", "-            brace = (DetailAST) aAST.getLastChild().getFirstChild();", "+            brace = (DetailAST) aAST.findFirstToken(TokenTypes.OBJBLOCK)", "+                .getFirstChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73564172faf4512d862131e20844a310", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java", "commitBeforeChange": "69ccfd3fa90239f676941f098176d5b2e8b72869", "commitAfterChange": "ed79281fff9b62deeed7b359c7fceedb6adb46c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Override     protected void leaveTokenHook(DetailAST ast)", "signatureAfterChange": "      @Override     public void leaveToken(DetailAST ast)", "diff": ["+", "+    @Override", "+    public void leaveToken(DetailAST ast) {", "+        switch (ast.getType()) {", "+            case TokenTypes.CTOR_DEF:", "+            case TokenTypes.METHOD_DEF:", "+            case TokenTypes.INSTANCE_INIT:", "+            case TokenTypes.STATIC_INIT:", "+                leaveMethodDef(ast);", "+                break;", "+            default:", "+                break;", "+        }", "+    }", "-    @Override", "-    protected void leaveTokenHook(DetailAST ast) {", "-        // no code"]}]}