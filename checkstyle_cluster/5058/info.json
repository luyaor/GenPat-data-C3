{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "353a5c752a61618f398bacd829074a6c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a9c9312476eca99cdc70cb0ba24d714", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void testDefault()         throws Exception", "signatureAfterChange": "      public void testDefault() throws Exception", "diff": ["-    public void testDefault()", "-        throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(RightCurlyCheck.class);", "+", "+    public void testDefault() throws Exception", "+    {", "+            \"93:27: '}' should be alone on a line.\",", "+            \"93:27: '}' should be on a new line.\",", "-        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8180f4b822553bf7bcfa5a4cc315a444", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testMissingBraces()         throws Exception", "signatureAfterChange": "      public void testMissingBraces() throws Exception", "diff": ["-    public void testMissingBraces()", "-        throws Exception", "+    public void testMissingBraces() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(LeftCurlyCheck.class);", "-        verify(checkConfig, getPath(\"InputBraces.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputBraces.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4420a1ba181b6b2ed4173bdafe57f67", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "          public void testDefault2()         throws Exception", "signatureAfterChange": "      public void testDefault2() throws Exception", "diff": ["-    ", "-    public void testDefault2()", "-        throws Exception", "+", "+    public void testDefault2() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(LeftCurlyCheck.class);", "-        verify(checkConfig, getPath(\"InputLeftCurlyMethod.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputLeftCurlyMethod.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da024a8e2146bb9dca023c911d7ada9a", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheckTest.java", "commitBeforeChange": "dfbaeedf8bc0d68b55699b79ed0d8ff094e444f0", "commitAfterChange": "78e9ce870170ca3ef88fd78f8e0af0681c958eb3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void testDefault3()         throws Exception", "signatureAfterChange": "     public void testDefault3() throws Exception", "diff": ["-    public void testDefault3()", "-        throws Exception", "+    public void testDefault3() throws Exception", "-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(LeftCurlyCheck.class);", "+            \"89:5: '{' should be on the previous line.\",", "-        verify(checkConfig, getPath(\"InputLeftCurlyOther.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputLeftCurlyOther.java\"), expected);"]}]}