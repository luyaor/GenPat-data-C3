{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "891630a2c5f5272c0c179df06f1dd023", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2409e218097386b5b06464f76410d92b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java", "commitBeforeChange": "be08323f8a58f992bc61171bf53e0e51dbd21f29", "commitAfterChange": "cc355f7e108fe222d957f1dbc8c3ba4eeb7ed941", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isSingleLineIf(DetailAST literalIf)", "signatureAfterChange": "     private static boolean isSingleLineIf(DetailAST literalIf)", "diff": ["-            DetailAST block = literalIf.getLastChild();", "-            if (block.getType() != TokenTypes.LITERAL_RETURN) {", "-                block = literalIf.getLastChild().getPreviousSibling();", "+            final DetailAST literalIfLastChild = literalIf.getLastChild();", "+            final DetailAST block;", "+            if (literalIfLastChild.getType() == TokenTypes.LITERAL_ELSE) {", "+                block = literalIfLastChild.getPreviousSibling();", "+            }", "+            else {", "+                block = literalIfLastChild;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d74e503874d22c4948a9a7d2945634", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java", "commitBeforeChange": "9f93c2258ef0512b743f5927be201ff55a9d5c57", "commitAfterChange": "23c8774d2e2fd245de1e5df02758fd23702c565e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "signatureAfterChange": "     private static boolean isInterfaceOrAnnotationMember(DetailAST ast)", "diff": ["-        final DetailAST parentTypeDef =", "-                ast.getParent() != null ? ast.getParent().getParent() : null;", "+        DetailAST parentTypeDef = ast.getParent();", "+", "+        if (parentTypeDef != null) {", "+            parentTypeDef = parentTypeDef.getParent();", "+        }"]}]}