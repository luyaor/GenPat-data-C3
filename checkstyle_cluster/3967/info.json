{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9728e476dd6423751e69a6426867f18", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dadd62447ec89a5c5f06e4c352d374d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractImportCheck.java", "commitBeforeChange": "59af65d194da001d34a48da91ba296e6c5d439cb", "commitAfterChange": "9074e6953f601352d6e0829ea67d194a1fdf4a1a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     protected FullIdent getImportText(DetailAST aAST)", "signatureAfterChange": "     protected FullIdent getImportText(DetailAST aAST)", "diff": ["-        FullIdent text = (FullIdent) getTokenContext().get(TEXT_KEY);", "-        if (text != null) {", "-            return text;", "-        }", "-", "-        text = FullIdent.createFullIdent((DetailAST) aAST.getFirstChild());", "-        getTokenContext().put(TEXT_KEY, text);", "-        return text;", "+        return FullIdent.createFullIdent((DetailAST) aAST.getFirstChild());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d0f6956b4a533f0fb9dc81781e5ca6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "098124a60184d272c580db0dbeb71a8181cf4127", "commitAfterChange": "7552a0b72e07c9a0070e84789b5abe6d293de6e0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private void registerCheck(String aToken, Check aCheck)", "signatureAfterChange": "     private void registerCheck(String aToken, Check aCheck)", "diff": ["-        List<Check> visitors = mTokenToChecks.get(aToken);", "-        if (visitors == null) {", "-            visitors = new ArrayList<Check>();", "-            mTokenToChecks.put(aToken, visitors);", "-        }", "-", "-        visitors.add(aCheck);", "+        mTokenToChecks.put(aToken, aCheck);"]}]}