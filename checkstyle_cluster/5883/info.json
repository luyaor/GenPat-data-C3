{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62a870f98fb3885d5128929c631bf74b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77533fe28541dfd660344a0018de1ec7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Test     public void testSetterGetterOn() throws Exception", "signatureAfterChange": "      @Test     public void testSetterGetterOn() throws Exception", "diff": ["-            \"17:5: Missing a Javadoc comment.\",", "-            \"22:5: Missing a Javadoc comment.\",", "-            \"28:5: Missing a Javadoc comment.\",", "-            \"32:5: Missing a Javadoc comment.\",", "-            \"37:5: Missing a Javadoc comment.\",", "-            \"43:5: Missing a Javadoc comment.\",", "-            \"53:5: Missing a Javadoc comment.\", };", "+            \"17:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"22:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"28:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"32:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"37:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"43:5: \" + getCheckMessage(MSG_JAVADOC_MISSING),", "+            \"53:5: \" + getCheckMessage(MSG_JAVADOC_MISSING), };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9750f5f55068f7b4a862cd09f8efde7b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheckTest.java", "commitBeforeChange": "e912c46b5bb5c085323930bd1e500b180c1bea8d", "commitAfterChange": "27149f3504a2f350b74f456a9bffbae76a460060", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testOnlyConstructors() throws Exception", "signatureAfterChange": "      @Test     public void testOnlyConstructors() throws Exception", "diff": ["-            \"45:9: Static variable definition in wrong order.\",", "-            \"54:5: Constructor definition in wrong order.\",", "-            \"80:5: Instance variable definition in wrong order.\",", "-            \"100:9: Static variable definition in wrong order.\",", "-            \"143:9: Static variable definition in wrong order.\",", "-            \"152:5: Constructor definition in wrong order.\",", "-            \"178:5: Instance variable definition in wrong order.\",", "+            \"45:9: \" + getCheckMessage(MSG_STATIC),", "+            \"54:5: \" + getCheckMessage(MSG_CONSTRUCTOR),", "+            \"80:5: \" + getCheckMessage(MSG_INSTANCE),", "+            \"100:9: \" + getCheckMessage(MSG_STATIC),", "+            \"143:9: \" + getCheckMessage(MSG_STATIC),", "+            \"152:5: \" + getCheckMessage(MSG_CONSTRUCTOR),", "+            \"178:5: \" + getCheckMessage(MSG_INSTANCE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9870f8d4be26558fd36997d5b8dfae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testIncorrect() throws Exception", "signatureAfterChange": "      @Test     public void testIncorrect() throws Exception", "diff": ["-            \"14: First sentence should be present.\",", "-            \"37: First sentence should be present.\",", "-            \"47: Forbidden summary fragment.\",", "-            \"58: Forbidden summary fragment.\",", "-            \"69: First sentence should be present.\",", "-            \"83: Forbidden summary fragment.\",", "-            \"103: First sentence should be present.\",", "+            \"14: \" + getCheckMessage(SUMMARY_FIRST_SENTENCE),", "+            \"37: \" + getCheckMessage(SUMMARY_FIRST_SENTENCE),", "+            \"47: \" + getCheckMessage(SUMMARY_JAVADOC),", "+            \"58: \" + getCheckMessage(SUMMARY_JAVADOC),", "+            \"69: \" + getCheckMessage(SUMMARY_FIRST_SENTENCE),", "+            \"83: \" + getCheckMessage(SUMMARY_JAVADOC),", "+            \"103: \" + getCheckMessage(SUMMARY_FIRST_SENTENCE),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bf4f2dacfeebe86aadb53c48aff0c3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocStyleCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testFirstSentence() throws Exception", "signatureAfterChange": "      @Test     public void testFirstSentence() throws Exception", "diff": ["-            \"20: First sentence should end with a period.\",", "-            \"53: First sentence should end with a period.\",", "-            \"74: First sentence should end with a period.\",", "-            \"81: First sentence should end with a period.\",", "-            \"88: First sentence should end with a period.\",", "-            \"193: First sentence should end with a period.\",", "-            \"238: First sentence should end with a period.\",", "+            \"20: \" + getCheckMessage(NO_PERIOD),", "+            \"53: \" + getCheckMessage(NO_PERIOD),", "+            \"74: \" + getCheckMessage(NO_PERIOD),", "+            \"81: \" + getCheckMessage(NO_PERIOD),", "+            \"88: \" + getCheckMessage(NO_PERIOD),", "+            \"193: \" + getCheckMessage(NO_PERIOD),", "+            \"238: \" + getCheckMessage(NO_PERIOD),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fe2eeec79895f3b6ef79105c4ff072", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheckTest.java", "commitBeforeChange": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9", "commitAfterChange": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void testAnother3()         throws Exception", "signatureAfterChange": "      @Test     public void testAnother3()         throws Exception", "diff": ["-            \"11:9: Missing a Javadoc comment.\",", "-            \"16:13: Missing a Javadoc comment.\",", "-            \"36:9: Missing a Javadoc comment.\",", "-            \"43:5: Missing a Javadoc comment.\",", "-            \"44:5: Missing a Javadoc comment.\",", "-            \"45:5: Missing a Javadoc comment.\",", "-            \"46:5: Missing a Javadoc comment.\",", "+            \"11:9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"16:13: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"36:9: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"43:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"44:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"45:5: \" + getCheckMessage(JAVADOC_MISSING),", "+            \"46:5: \" + getCheckMessage(JAVADOC_MISSING),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f433bdba32b2a2890142fedba4ed9ad5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheckTest.java", "commitBeforeChange": "df5e519a3d2d6a468558161e1e61ff4634e7b533", "commitAfterChange": "09a7ca60414ea04b64f45bb190eaa26c767086be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "signatureAfterChange": "     @Test     public void testBadOverrideFromOther() throws Exception", "diff": ["-            \"10: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"26: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"34: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"40: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"47: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"53: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "-            \"63: Must include @java.lang.Override annotation when {@inheritDoc} Javadoc tag exists.\",", "+            \"10: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"26: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"34: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"40: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"47: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"53: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),", "+            \"63: \" + getCheckMessage(MSG_KEY_ANNOTATION_MISSING_OVERRIDE),"]}]}