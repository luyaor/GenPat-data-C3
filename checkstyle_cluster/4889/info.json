{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d53a01da26574442e9b3cfcbcabdfc0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23416569c84df25c09d180b36d9b0bbc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "2da168644500c915660b7cfac9668b44317d81fc", "commitAfterChange": "70c83141b4983d3c6073fb645158fc2755d5a6f0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     private static String createSamePackageRegexp(int firstPackageDomainsCount,              DetailAST packageNode)", "signatureAfterChange": "     private static String createSamePackageRegexp(int firstPackageDomainsCount,              DetailAST packageNode)", "diff": ["-        final StringBuilder builder = new StringBuilder();", "+        return getFirstNDomainsFromIdent(firstPackageDomainsCount, packageFullPath);", "+    }", "-        return builder.append(\"*\").toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e493d88847dcdb06a2b5a32b6b91fc6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java", "commitBeforeChange": "3fca3c9250864912e36783302ebe8f04f17ec262", "commitAfterChange": "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FileText(File file, String charsetName) throws IOException", "signatureAfterChange": "     public FileText(File file, String charsetName) throws IOException", "diff": ["-        final StringBuilder buf = new StringBuilder();", "-        final FileInputStream stream = new FileInputStream(file);", "-        final Reader reader = new InputStreamReader(stream, decoder);", "-        try {", "-            final char[] chars = new char[READ_BUFFER_SIZE];", "-            while (true) {", "-                final int len = reader.read(chars);", "-                if (len < 0) {", "-                    break;", "-                }", "-                buf.append(chars, 0, len);", "-            }", "-        }", "-        finally {", "-            Closeables.closeQuietly(reader);", "-        }", "-        // buf.trimToSize(); // could be used instead of toString().", "-        fullText = buf.toString();", "+        fullText = readFile(file, decoder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd2936f6db0e6a09433b417a2248ac7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "4981978ee20649f39244d3f2003580dad28770eb", "commitAfterChange": "4409b0f2432b479bd43ca274f91d1aabd6060575", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         int aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "signatureAfterChange": "     protected final void checkExpressionSubtree(         DetailAST aTree,         int aLevel,         boolean aFirstLineMatches,         boolean aAllowNesting     )", "diff": ["+        checkExpressionSubtree(aTree, new IndentLevel(aLevel),", "+                               aFirstLineMatches, aAllowNesting);", "+    }", "-        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches,", "-                         firstLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3147b736deb8a062a6c77451ffdbf64", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "75ede62d22a7cc9119844c038c3961f25f65ccb1", "commitAfterChange": "915c6568cf2cde57c3e92ee9786acb4808562671", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static String[] getLines(String aFileName)         throws IOException", "signatureAfterChange": "     public static String[] getLines(String aFileName)         throws IOException", "diff": ["+        return getLines(", "+            aFileName,", "+            System.getProperty(\"file.encoding\", \"UTF-8\"));", "+    }", "-            new LineNumberReader(new FileReader(aFileName));"]}]}