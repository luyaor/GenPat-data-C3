{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a22d2447561bc62da4c6b36a7e36c311", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003e031a938a3b75834b53904875a3c6", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            //Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"coding/InputVariableDeclarationUsageDistanceCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "013b7a5d5f9e84476b6b895f073549df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            // Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"ComplexityCheckTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f74c5333946f4421e82c7aed0e15740", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            //Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"javadoc/InputIncorrectSummaryJavaDocCheck.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1196675c36162e258356e0637f8e3cc4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassDataAbstractionCouplingCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig,", "-                getPath(\"metrics\" + File.separator + \"ClassCouplingCheckTestInput.java\"),", "-                expected);", "-        }", "-        catch (Exception ex) {", "-            //Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig,", "+            getPath(\"metrics\" + File.separator + \"ClassCouplingCheckTestInput.java\"),", "+            expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "362bf59b9e1472ccb69925cb259b60de", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheckTest.java", "commitBeforeChange": "cdcddbe49e985fccf170f6bb90e4251ea07952d7", "commitAfterChange": "01750d8a49a33bcc057729d6190fa60b135d47b0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig,", "-                getPath(\"coding\" + File.separator + \"InputMultipleStringLiterals.java\"),", "-                expected);", "-        }", "-        catch (Exception ex) {", "-            // Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig,", "+            getPath(\"coding\" + File.separator + \"InputMultipleStringLiterals.java\"),", "+            expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d7dd85181e37e11f2ddaa0c908896c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/sizes/ExecutableStatementCountCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            //Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"ExecutableStatementCountInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9e5674c413298526c547be3f50565d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "-            verify(checkConfig, getPath(\"InputRegexpHeader1.java\"), expected);", "-        }", "-        catch (CheckstyleException ex) {", "-            // Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        final String[] expected = ArrayUtils.EMPTY_STRING_ARRAY;", "+        verify(checkConfig, getPath(\"InputRegexpHeader1.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f12cad2ce134a9648d28b49b58b0f94", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"metrics\" + File.separator", "-                + \"JavaNCSSCheckTestInput.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            // Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"metrics\" + File.separator", "+            + \"JavaNCSSCheckTestInput.java\"), expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43bf7c157ad37939ca5e10e22233b62", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/metrics/ClassFanOutComplexityCheckTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig,", "-                getPath(\"metrics\" + File.separator + \"ClassCouplingCheckTestInput.java\"),", "-                expected);", "-        }", "-        catch (Exception ex) {", "-            //Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig,", "+            getPath(\"metrics\" + File.separator + \"ClassCouplingCheckTestInput.java\"),", "+            expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84e5117b48fe845eeb68409462ca664", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheckTest.java", "commitBeforeChange": "4913b287c0739f88eed8bea42e63d416c3e1cf7c", "commitAfterChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "      @Test     public void testDefaultConfiguration() throws Exception", "signatureAfterChange": "      @Test     public void testDefaultConfiguration() throws Exception", "diff": ["-        try {", "-            createChecker(checkConfig);", "-            verify(checkConfig, getPath(\"imports\" + File.separator", "-                + \"InputCustomImportOrder.java\"), expected);", "-        }", "-        catch (Exception ex) {", "-            // Exception is not expected", "-            fail();", "-        }", "+        createChecker(checkConfig);", "+        verify(checkConfig, getPath(\"imports\" + File.separator", "+            + \"InputCustomImportOrder.java\"), expected);"]}]}