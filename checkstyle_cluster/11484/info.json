{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5042b0d31e6e54b0419821bb85165398", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d82651b1b11c82c48e141437556c100c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/VerifierImpl.java", "commitBeforeChange": "20caaeb1488a4dacc770f22d463228eeb213d9ad", "commitAfterChange": "3ded7a11556a6258bcddd3ebe2d69a2058675601", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "signatureAfterChange": "     public void verifyVariable(MyVariable aVar, boolean aInInterface)", "diff": ["-            if (!mRelaxJavadoc || inInterfaceBlock() ||", "+            if (!mConfig.isRelaxJavadoc() || inInterfaceBlock() ||", "-                          mStaticFinalRegexp,", "-                          mStaticFinalPat);", "+                          mConfig.getStaticFinalRegexp(),", "+                          mConfig.getStaticFinalPat());", "-                                      mStaticFinalRegexp,", "-                                      mStaticFinalPat);", "+                                      mConfig.getStaticFinalRegexp(),", "+                                      mConfig.getStaticFinalPat());", "-                        checkVariable(aVar, mStaticRegexp, mStaticPat);", "+                        checkVariable(aVar,", "+                                      mConfig.getStaticRegexp(),", "+                                      mConfig.getStaticPat());", "-                    (mAllowProtected && mods.containsProtected()))", "+                    (mConfig.isAllowProtected() && mods.containsProtected()))", "-                    checkVariable(aVar, mMemberRegexp, mMemberPat);", "+                    checkVariable(aVar,", "+                                  mConfig.getMemberRegexp(),", "+                                  mConfig.getMemberPat());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbcd5fba3fccd68f1e4a0b938eba2e5f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "dcf0d774fa59e2131e4bb2f50523da10ce3305af", "commitAfterChange": "7af9e82fc16545a8153b529fba91df0fb310e2e6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static DetailAST parse(             final String[] aLines, String aFileName, final CommentManager aCmgr)             throws TokenStreamException, RecognitionException", "signatureAfterChange": "     public static DetailAST parse(FileContents aContents)         throws TokenStreamException, RecognitionException", "diff": ["-    public static DetailAST parse(", "-            final String[] aLines, String aFileName, final CommentManager aCmgr)", "-            throws TokenStreamException, RecognitionException", "+    public static DetailAST parse(FileContents aContents)", "+        throws TokenStreamException, RecognitionException", "-            final Reader sar = new StringArrayReader(aLines);", "+            final Reader sar = new StringArrayReader(aContents.getLines());", "-            jl.setFilename(aFileName);", "-            jl.setCommentManager(aCmgr);", "+            jl.setFilename(aContents.getFilename());", "+            jl.setFileContents(aContents);", "-            jr.setFilename(aFileName);", "+            jr.setFilename(aContents.getFilename());", "-            final Reader sar = new StringArrayReader(aLines);", "+            final Reader sar = new StringArrayReader(aContents.getLines());", "-            jl.setFilename(aFileName);", "-            jl.setCommentManager(aCmgr);", "+            jl.setFilename(aContents.getFilename());", "+            jl.setFileContents(aContents);", "-            jr.setFilename(aFileName);", "+            jr.setFilename(aContents.getFilename());"]}]}