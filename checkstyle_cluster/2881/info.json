{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6cc8165da2d2660a76144d7d6c3eb285", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19a32f5cd60f879dd1d10feee2613f0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "8aec5bba7ea5d9c702db9a116d005ad81afbf1ad", "commitAfterChange": "085ce12db0983590844ccc24ea49f91686a30ed8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "signatureAfterChange": "     private static void parsePropertyString(String value,                                            List<String> fragments,                                            List<String> propertyRefs)         throws CheckstyleException", "diff": ["-        int pos = value.indexOf('$', prev);", "+        int pos = value.indexOf(DOLLAR_SIGN, prev);", "-                fragments.add(\"$\");", "+                fragments.add(String.valueOf(DOLLAR_SIGN));", "-                if (value.charAt(pos + 1) == '$') {", "+                if (value.charAt(pos + 1) == DOLLAR_SIGN) {", "-                    fragments.add(\"$\");", "+                    fragments.add(String.valueOf(DOLLAR_SIGN));", "-            pos = value.indexOf('$', prev);", "+            pos = value.indexOf(DOLLAR_SIGN, prev);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e7c122dfc1701964298c97cc54a604", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "6fc4ae2d4f85288769cdb13e9cd9ee39fba74143", "commitAfterChange": "31a9795d84272acee8e5a124e67c416c427813a5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     private void processVariable(DetailAST aAST)", "signatureAfterChange": "     private void processVariable(DetailAST aAST)", "diff": ["-                final boolean inStatic = inStatic(aAST);", "-                final Iterator it = mFieldsStack.iterator();", "-                while (it.hasNext()) {", "-                    final FieldFrame frame = (FieldFrame) it.next();", "+                boolean inStatic = inStatic(aAST);", "+                final ListIterator it =", "+                    mFieldsStack.listIterator(mFieldsStack.size());", "+                while (it.hasPrevious()) {", "+                    final FieldFrame frame = (FieldFrame) it.previous();", "+                    inStatic |= frame.isStaticClass();"]}]}