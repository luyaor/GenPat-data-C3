{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98c9c9e65d386f3732b2ff6e52c6fd24", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234ef9f20333359576831e590a192f37", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/MethodParamPadTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"MethodParamPadInput\");", "+        final String filePath = builder.getFilePath(\"InputMethodParamPad\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb2e1d7b7e7f0bc9242147bc8d66528", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule4842fallthrough/FallThroughTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void fallThroughTest() throws Exception", "signatureAfterChange": "      @Test     public void fallThroughTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"FallThroughInput\");", "+        final String filePath = builder.getFilePath(\"InputFallThrough\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dd2b9fe4d03899f3f448c0e5b0fe2f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      @Test     public void badPackageName3Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName3Test() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageBadNameInput3\");", "+        final String filePath = builder.getFilePath(\"InputPackageBadName3\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d181ca427058370114c27168e3c0f39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void operatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OperatorWrapInput\");", "+        final String filePath = builder.getFilePath(\"InputOperatorWrap\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1d7ce7f980202e37d74bd924367ee5", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "commitAfterChange": "2a52c00d5de8a6b56df0b9678f831e5814170ca6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerExtendedTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoFinalizeExtendInput\");", "+        final String filePath = builder.getFilePath(\"InputNoFinalizeExtend\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675865187fd21726e63ec4f98ba3790c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule487modifiers/ModifierOrderTest.java", "commitBeforeChange": "4346d41010a729e14991e30706bdb16ff18ff39a", "commitAfterChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void modifierOrderTest() throws Exception", "signatureAfterChange": "      @Test     public void modifierOrderTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"ModifierOrderInput\");", "+        final String filePath = builder.getFilePath(\"InputModifierOrder\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6df27f3f20a885306f1753e077a3cc9e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule233nonascii/AvoidEscapedUnicodeCharactersCheckTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void unicodeEscapesTest() throws Exception", "signatureAfterChange": "      @Test     public void unicodeEscapesTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"AvoidEscapedUnicodeCharactersInput\");", "+        final String filePath = builder.getFilePath(\"InputAvoidEscapedUnicodeCharacters\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5a4e5a997bc66aef03a8464c6137c4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter6programpractice/rule64finalizers/NoFinalizerTest.java", "commitBeforeChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "commitAfterChange": "2a52c00d5de8a6b56df0b9678f831e5814170ca6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "signatureAfterChange": "      @Test     public void noFinalizerBasicTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"NoFinalizerInput\");", "+        final String filePath = builder.getFilePath(\"InputNoFinalizer\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8069001e85207e5f86d089392b5af5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/OperatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "signatureAfterChange": "      @Test     public void operatorWrapTestAssign() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"OperatorWrapAssignInput\");", "+        final String filePath = builder.getFilePath(\"InputOperatorWrapAssign\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd5191260e9393ab71fb04de38f02787", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter3filestructure/rule331nowildcard/AvoidStarImportTest.java", "commitBeforeChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "commitAfterChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void starImportTest() throws Exception", "signatureAfterChange": "      @Test     public void starImportTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"AvoidStarImportInput\");", "+        final String filePath = builder.getFilePath(\"InputAvoidStarImport\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e29e363c174739cd66814ff340a22f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void goodPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void goodPackageNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageNameInputGood\");", "+        final String filePath = builder.getFilePath(\"InputPackageNameGood\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5ee781991ba163faed4fedac75557c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void badPackageNameTest() throws Exception", "signatureAfterChange": "      @Test     public void badPackageNameTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"PackageNameInputBad\");", "+        final String filePath = builder.getFilePath(\"InputPackageNameBad\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eec44ba1a7463e213ab2b9217e5c33e8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter5naming/rule521packagenames/PackageNameTest.java", "commitBeforeChange": "662cb2e20e296d1546bb7c845e4661dcdcc77855", "commitAfterChange": "701d2a690766fa7c3775aabce3c6b5ce90918a75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Test     public void badPackageName2Test() throws Exception", "signatureAfterChange": "      @Test     public void badPackageName2Test() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"BadPackageNameInput2\");", "+        final String filePath = builder.getFilePath(\"InputBadPackageName2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69235ab37a9307604ad3e6a27e5c07c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter2filebasic/rule231filetab/FileTabCharacterTest.java", "commitBeforeChange": "fbd3d53641368f6bcacc7b8015d434625fda116b", "commitAfterChange": "7f76672448a66ab2b25bae0d499e72dd0554be04", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Test     public void fileTabTest() throws Exception", "signatureAfterChange": "      @Test     public void fileTabTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"FileTabCharacterInput\");", "+        final String filePath = builder.getFilePath(\"InputFileTabCharacter\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3283e492ff451e3d3c37bba27eb0f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreack/SeparatorWrapTest.java", "commitBeforeChange": "21c8c76f930874dd6556ac5ad059c69a2c32642f", "commitAfterChange": "339e0ff9a6694e2724027c5e41028d2cd7b138cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void separatorWrapTest() throws Exception", "signatureAfterChange": "      @Test     public void separatorWrapTest() throws Exception", "diff": ["-        final String filePath = builder.getFilePath(\"SeparatorWrapInput\");", "+        final String filePath = builder.getFilePath(\"InputSeparatorWrap\");"]}]}