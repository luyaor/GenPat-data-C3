{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59ebd1d2434f9630c3f5d12b30d75d01", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "175cd0c110a6ca3b91fa26d98d0eda34", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "96abec9ddf3ce448d75c32e7826eddb3c857408b", "commitAfterChange": "cbce85c08c1f792b01082ffaf2e15bf433a093b9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     void verifyVariable(MyVariable aVar)", "signatureAfterChange": "     void verifyVariable(MyVariable aVar)", "diff": ["-            else {", "-                // These are the non-static variables", "-                if (Scope.PRIVATE.equals(variableScope)", "-                    || (mConfig.isAllowPackage() && isPckg)", "-                    || (mConfig.isAllowProtected() && isProt))", "-                {", "-//                    checkVariable(aVar,", "-//                                  mConfig.getMemberRegexp(),", "-//                                  mConfig.getMemberPat());", "-                }", "-            }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c675a3573bd4ad3588166a872dae214", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java", "commitBeforeChange": "e936c4c6fae73ec4c53aa8f2f9db302d064e1b8e", "commitAfterChange": "931af7ec1411aa04b3f0b5d94373a3da43ce7e27", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "signatureAfterChange": "     private static boolean isVariableInOperatorExpr(             DetailAST operator, DetailAST variable)", "diff": ["-                    isVarInOperatorDeclr |=", "-                            isVariableInOperatorExpr(", "-                                firstNodeInsideElseBlock,", "-                                    variable);", "+                    isVarInOperatorDeclr =", "+                        isVariableInOperatorExpr(firstNodeInsideElseBlock, variable);"]}]}