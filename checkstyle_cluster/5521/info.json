{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07a4669343ab7bea8c97d28e23b6aa5c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f585ad92936d814c13dcbc5d0d805ab", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "65ca7775ba7d0b649c16cfdc8a1447f41867c870", "commitAfterChange": "6ffc8dd26075456b055ffcd35d3915c23049bfbb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Checker(GlobalProperties aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "signatureAfterChange": "      private ClassLoader getClassLoader()", "diff": ["-    public Checker(GlobalProperties aConfig, CheckConfiguration[] aConfigs)", "-        mConfig = aConfig;", "-        LocalizedMessage.setLocale(new Locale(mConfig.getLocaleLanguage(),", "-                                              mConfig.getLocaleCountry()));", "-", "-        // TODO: create, configure and register the FileSetChecks from config", "-        // file instead of hardcoding it here in the Checker constructor.", "-        // Probably the addFileSetCheck mthod must be called from outside", "-        // the checker, just like the TreeWalker is not concerned with", "-        // finding all the checks it has to execute (IOC principle).", "-", "-        // TODO: uncommenting the addFileSetCheck calls breaks the tests", "-        // because the packageHtml check is always executed and yields", "-        // additional errors that are not expected in the current test code", "-        // (which should stay like it currently is!)", "-", "-        //FileSetCheck translationCheck = new TranslationCheck();", "-        // addFileSetCheck(translationCheck);", "-", "-        //FileSetCheck packageHtmlCheck = new PackageHtmlCheck();", "-        // addFileSetCheck(packageHtmlCheck);", "-", "-        final TreeWalker walker = new TreeWalker(mConfig);", "-        // TODO: improve the error handing", "-        for (int i = 0; i < aConfigs.length; i++) {", "-            final CheckConfiguration config = aConfigs[i];", "-            // IMPORTANT! Need to use the same class loader that created this", "-            // class. Otherwise can get ClassCastException problems.", "-            walker.registerCheck(", "-                config.createInstance(this.getClass().getClassLoader()),", "-                config);", "-        }", "-        addFileSetCheck(walker);", "-", "+", "+    private ClassLoader getClassLoader()", "+    {", "+        return mLoader;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87ca7894b3d647d830c803f8a53ca83", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java", "commitBeforeChange": "3296ba06ac6ae5ad8c864ada15cec91d058785d4", "commitAfterChange": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     protected final File[] filter(File[] aFiles)", "signatureAfterChange": "     protected final File[] filter(File[] aFiles)", "diff": ["-        if ((mFileExtensions == null) || (mFileExtensions.length == 0)) {", "-            return aFiles;", "-        }", "-", "-        final ArrayList files = new ArrayList(aFiles.length);", "-        for (int i = 0; i < aFiles.length; i++) {", "-            final File f = aFiles[i];", "-            final String fileName = f.getName();", "-            for (int j = 0; j < mFileExtensions.length; j++) {", "-                final String fileExtension = mFileExtensions[j];", "-                if (fileName.endsWith(fileExtension)) {", "-                    files.add(f);", "-                }", "-            }", "-        }", "-        return (File[]) files.toArray(new File[files.size()]);", "+        return Utils.filterFilesByExtension(aFiles, mFileExtensions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77653260936eee7fac67a2dd1db4a69", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java", "commitBeforeChange": "f8f6ded7b447d5136ae01ad878966e2955ca730a", "commitAfterChange": "3c0608f33a6c41cf96056c52ae99070cbe5062d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Checker(GlobalProperties aConfig, CheckConfiguration[] aConfigs)         throws CheckstyleException", "signatureAfterChange": "     public Checker(Configuration aConfig)         throws CheckstyleException", "diff": ["+     */", "+    public Checker(Configuration aConfig)", "+        throws CheckstyleException", "+    {", "+        this(aConfig.getGlobalProperties(), aConfig.getCheckConfigurations());", "+    }"]}]}