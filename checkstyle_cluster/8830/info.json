{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d818f1ef2c12b33b28a0256bd6a7f228", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7095d66b3a928b7a38569b4182b90b4c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java", "commitBeforeChange": "aa581847fe5e1c7ff4ded4387fa3dbc781fac513", "commitAfterChange": "d693562ab7d124a1a71332e2c234ac0efcd0620e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["+            case TokenTypes.MODIFIERS:", "+                if (parentType == TokenTypes.VARIABLE_DEF", "+                    && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "+                    processModifiers(ast);", "+                }", "+                break;", "-                }", "-                break;", "-            case TokenTypes.MODIFIERS:", "-                if (parentType == TokenTypes.VARIABLE_DEF", "-                        && ast.getParent().getParent().getType() == TokenTypes.OBJBLOCK) {", "-                    processModifiers(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e26abc2d7e8dc9004000ac5a018e39", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OuterTypeFilenameCheck.java", "commitBeforeChange": "d0939d3bc93819ebc1f42642806c0265fc7908b3", "commitAfterChange": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST ast)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-        if (!seenFirstToken) {", "+        if (seenFirstToken) {", "+            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "+            if (modifiers.findFirstToken(TokenTypes.LITERAL_PUBLIC) != null", "+                    && ast.getParent() == null) {", "+                hasPublic = true;", "+            }", "+        }", "+        else {", "-            }", "-        }", "-        else {", "-            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);", "-            if (modifiers.findFirstToken(TokenTypes.LITERAL_PUBLIC) != null", "-                    && ast.getParent() == null) {", "-                hasPublic = true;"]}]}