{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c56e8e3678a2c0baec8e3990af59946b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06afa91384d956572cfebad08021935d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST ast)", "diff": ["-    public final void visitToken(DetailAST aAST)", "+    public final void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.PACKAGE_DEF) {", "-            processPackage(aAST);", "+        if (ast.getType() == TokenTypes.PACKAGE_DEF) {", "+            processPackage(ast);", "-        else if (aAST.getType() == TokenTypes.IMPORT) {", "-            processImport(aAST);", "+        else if (ast.getType() == TokenTypes.IMPORT) {", "+            processImport(ast);", "-        else if ((aAST.getType() == TokenTypes.CLASS_DEF)", "-                 || (aAST.getType() == TokenTypes.INTERFACE_DEF)", "-                 || (aAST.getType() == TokenTypes.ENUM_DEF))", "+        else if ((ast.getType() == TokenTypes.CLASS_DEF)", "+                 || (ast.getType() == TokenTypes.INTERFACE_DEF)", "+                 || (ast.getType() == TokenTypes.ENUM_DEF))", "-            processClass(aAST);", "+            processClass(ast);", "-            if (aAST.getType() == TokenTypes.METHOD_DEF) {", "-                processTypeParams(aAST);", "+            if (ast.getType() == TokenTypes.METHOD_DEF) {", "+                processTypeParams(ast);", "-            processAST(aAST);", "+            processAST(ast);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ccdc51daaca73683c16e923b9afa0f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "commitAfterChange": "16dac636b246c658cad31ee9b2e45c53b851d4f2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        if (aAST.getType() == TokenTypes.PACKAGE_DEF) {", "-            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)", "-                    && mSamePackageMatchingDepth != -1)", "+        if (ast.getType() == TokenTypes.PACKAGE_DEF) {", "+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)", "+                    && samePackageMatchingDepth != -1)", "-                mSamePackageDomainsRegExp = createSamePackageRegexp(", "-                        mSamePackageMatchingDepth, aAST);", "+                samePackageDomainsRegExp = createSamePackageRegexp(", "+                        samePackageMatchingDepth, ast);", "-            final String importFullPath = getFullImportIdent(aAST);", "-            final int lineNo = aAST.getLineNo();", "-            final boolean isStatic = aAST.getType() == TokenTypes.STATIC_IMPORT;", "-            mImportToGroupList.add(new ImportDetails(importFullPath,", "+            final String importFullPath = getFullImportIdent(ast);", "+            final int lineNo = ast.getLineNo();", "+            final boolean isStatic = ast.getType() == TokenTypes.STATIC_IMPORT;", "+            importToGroupList.add(new ImportDetails(importFullPath,"]}]}