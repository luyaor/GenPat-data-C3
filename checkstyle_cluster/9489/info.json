{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caf61e9ab8c51405782a5a6c4625eabb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4140d405c9f828fb86c046e7f698f8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocVariableCheck.java", "commitBeforeChange": "192a2eecfeb8dcc5e8dd000599c72758ad46868f", "commitAfterChange": "21c0a8197a468bc23c537c5ddc17f9861bb0f3b0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public void setIgnoreNamePattern(String regexp)", "signatureAfterChange": "     public void setIgnoreNamePattern(String regexp)", "diff": ["-        if (!(regexp == null || regexp.length() == 0)) {", "-            ignoreNamePattern = Utils.createPattern(regexp);", "-        }", "-        else {", "-            ignoreNamePattern = null;", "-        }", "+        ignoreNamePattern = Utils.createPattern(regexp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438d2907bb23ab648c4df5bb8bfa269e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "signatureAfterChange": "     private boolean hasLineBreakAfter(DetailAST leftCurly)", "diff": ["-        if (nextToken != null && nextToken.getType() != TokenTypes.RCURLY", "-                && leftCurly.getLineNo() == nextToken.getLineNo()) {", "-            return false;", "-        }", "-        return true;", "+        return nextToken == null", "+                || nextToken.getType() == TokenTypes.RCURLY", "+                || leftCurly.getLineNo() != nextToken.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f55a509be6645f801645636a769a87", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java", "commitBeforeChange": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca", "commitAfterChange": "7088d5c3c244721db87ecee91949acc895d5ff62", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private void checkEmptyLine(DetailNode newline)", "signatureAfterChange": "     private void checkEmptyLine(DetailNode newline)", "diff": ["-        if (!isLastEmptyLine(newline) && nearestToken != null", "-                && nearestToken.getType() == JavadocTokenTypes.TEXT", "-                && nearestToken.getChildren().length > 1) {", "+        if (!isLastEmptyLine(newline) && nearestToken.getChildren().length > 1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aceb7130cb13b79c169c4ea2c3a5c3d3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/WhitespaceAfterCheck.java", "commitBeforeChange": "dce9c0687bdf0e40982e2afc49186626367beadb", "commitAfterChange": "0e02e3565f37776783e6711ca46f1715af415ed3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "     private static boolean isFollowedByWhitespace(DetailAST targetAST, String line)", "signatureAfterChange": "     private static boolean isFollowedByWhitespace(DetailAST targetAST, String line)", "diff": ["-", "-            if (targetAST.getType() == TokenTypes.SEMI", "-                && (charAfter == ';' || charAfter == ')')) {", "-                followedByWhitespace = true;", "-            }", "-            else if (!Character.isWhitespace(charAfter) && !isEmptyForIterator(targetAST)) {", "-                followedByWhitespace = false;", "-            }", "+            followedByWhitespace = Character.isWhitespace(charAfter)", "+                || targetAST.getType() == TokenTypes.SEMI", "+                    && (charAfter == ';' || charAfter == ')');", "-", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92444b77fe3c0b0d13d94a1c597fe04", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java", "commitBeforeChange": "2282f82cb7fd2055245d3bcb4b76c6c27fdd5455", "commitAfterChange": "f1dc9b205d1ccdba85e34f4cb7adf9ffd4af2361", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private static boolean hasLineBreakBefore(DetailAST rightCurly)", "signatureAfterChange": "     private static boolean hasLineBreakBefore(DetailAST rightCurly)", "diff": ["-        if (rightCurly != null) {", "-            final DetailAST previousToken = rightCurly.getPreviousSibling();", "-            if (previousToken != null", "-                    && rightCurly.getLineNo() == previousToken.getLineNo()) {", "-                return false;", "-            }", "-        }", "-        return true;", "+        final DetailAST previousToken = rightCurly.getPreviousSibling();", "+        return previousToken == null", "+                || rightCurly.getLineNo() != previousToken.getLineNo();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87d9016286360b19ddff2be457a59ca", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "e0471bb7f2840ebfa4adaa5fea697b4b3c31f782", "commitAfterChange": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     @Override     public boolean accept(AuditEvent event)", "signatureAfterChange": "     @Override     public boolean accept(AuditEvent event)", "diff": ["-        if (matchTag != null && !matchTag.isOn()) {", "-            return false;", "-        }", "-        return true;", "+        return matchTag == null || matchTag.isOn();"]}]}