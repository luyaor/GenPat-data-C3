{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0e28b214cf2f2ae2c543a7242f4c32b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f611268464f441886fbbf716e2f09c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "a1706551793b62548d9dcc93731b656f07b125a4", "commitAfterChange": "00fb7f0c1852eb015933c7c121284597de29caad", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      protected void verify(Checker aC,                           String aProcessedFilename,                           String aMessageFileName,                           String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC,                           String aProcessedFilename,                           String aMessageFileName,                           String[] aExpected)         throws Exception", "diff": ["+        verify(aC,", "+            new File[] {new File(aProcessedFilename)},", "+            aMessageFileName, aExpected);", "+    }", "-        final int errs = aC.process(new File[] {new File(aProcessedFilename)});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5c896e9266e57e368fc4a515347171", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/BaseCheckTestCase.java", "commitBeforeChange": "6568a9b88220366da3fc9e58fc9de93af9a6520d", "commitAfterChange": "f116754656b534e1a44e797e21b06290dfcf8ad8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      protected void verify(Checker aC, String aFilename, String[] aExpected)         throws Exception", "signatureAfterChange": "      protected void verify(Checker aC, String aFileName, String[] aExpected)             throws Exception", "diff": ["-    protected void verify(Checker aC, String aFilename, String[] aExpected)", "+    protected void verify(Checker aC, String aFileName, String[] aExpected)", "+            throws Exception", "+    {", "+        verify(aC, aFileName, aFileName, aExpected);", "+    }", "-        final int errs = aC.process(new File[] {new File(aFilename)});", "-            assertEquals(aFilename + \":\" + aExpected[i], lnr.readLine());"]}]}