{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9978247076ecd0f405f6d16ff164227", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe516893dfe6d3b547d73f03038ea7c", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public void testIgnoreCommentsNoSpaces()             throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsNoSpaces()             throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca3e3016c0b191a7bc110ce64eaaef4", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/checks/GenericIllegalRegexpCheckTest.java", "commitBeforeChange": "c5dfb268770999ece0efcab2f47f007dec339264", "commitAfterChange": "5f0f6d3929dc2c7f1570c03f24a652bffe61db6f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void testIgnoreCommentsInlineMiddle() throws Exception", "signatureAfterChange": "      public void testIgnoreCommentsInlineMiddle() throws Exception", "diff": ["-        final DefaultConfiguration checkConfig =", "-            createCheckConfig(GenericIllegalRegexpCheck.class);", "-        checkConfig.addAttribute(\"format\", illegal);", "-        checkConfig.addAttribute(\"ignoreComments\", \"true\");", "+        mCheckConfig.addAttribute(\"format\", illegal);", "+        mCheckConfig.addAttribute(\"ignoreComments\", \"true\");", "-        verify(checkConfig, getPath(\"InputTrailingComment.java\"), expected);", "+        verify(mCheckConfig, getPath(\"InputTrailingComment.java\"), expected);"]}]}