{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ab55b207ad4b7f0557e65d30df667cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba74bbb186434cc6c221a2f7a45ccc70", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      @Override     public void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public void visitToken(DetailAST ast)", "diff": ["-    public void visitToken(DetailAST aAST)", "+    public void visitToken(DetailAST ast)", "-        final ExpressionHandler handler = mHandlerFactory.getHandler(this, aAST,", "-            mHandlers.peek());", "-        mHandlers.push(handler);", "+        final ExpressionHandler handler = handlerFactory.getHandler(this, ast,", "+            handlers.peek());", "+        handlers.push(handler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73b5b3c9e7958e1bbff8c25f4e5bdad", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/IndentationCheck.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      @Override     public void beginTree(DetailAST aAst)", "signatureAfterChange": "      @Override     public void beginTree(DetailAST ast)", "diff": ["-    public void beginTree(DetailAST aAst)", "+    public void beginTree(DetailAST ast)", "-        mHandlerFactory.clearCreatedHandlers();", "-        mHandlers.clear();", "-        mHandlers.push(new PrimordialHandler(this));", "+        handlerFactory.clearCreatedHandlers();", "+        handlers.clear();", "+        handlers.push(new PrimordialHandler(this));"]}]}