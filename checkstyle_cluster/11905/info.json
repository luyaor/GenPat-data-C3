{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e486b4605b46f95f2bdf3beafe971327", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ec51031695fc6bdc7947d1b2c15150", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RightCurlyCheck.java", "commitBeforeChange": "4bbe4acd319fa60dac09d28aaa9f7b18f18dee1f", "commitAfterChange": "eecd476fa8c6dba62f919a5ff1740d108848c867", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-            rcurly = Utils.getLastSibling(", "-                aAST.getParent().getFirstChild().getNextSibling()", "-                .getNextSibling().getNextSibling().getFirstChild());", "+            DetailAST thenAST = aAST.getPreviousSibling();", "+            rcurly = thenAST.getLastChild();", "-            rcurly = Utils.getLastSibling(", "-                Utils.getLastSibling(aAST.getFirstChild()).getFirstChild());", "+            rcurly = aAST.getLastChild().getLastChild();", "-            nextToken = (DetailAST) aAST.getFirstChild().getNextSibling();", "-            rcurly = Utils.getLastSibling(aAST.getFirstChild().getFirstChild());", "+            DetailAST firstChild = (DetailAST) aAST.getFirstChild();", "+            nextToken = (DetailAST) firstChild.getNextSibling();", "+            rcurly = firstChild.getLastChild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df96089a118b26ed2caa69a0c3e8a2bf", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ForHandler.java", "commitBeforeChange": "113ea8405c8b753540ee3423d7e37e383f269155", "commitAfterChange": "7f7db38a097a95c264307123924779380fb40077", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     private void checkForParams()", "signatureAfterChange": "     private void checkForParams()", "diff": ["-        checkExpressionSubtree(", "-            getMainAst().findFirstToken(TokenTypes.FOR_INIT),", "-            getLevel() + getIndentCheck().getBasicOffset(),", "-            false,", "-            false);", "-        checkExpressionSubtree(", "-            getMainAst().findFirstToken(TokenTypes.FOR_CONDITION),", "-            getLevel() + getIndentCheck().getBasicOffset(),", "-            false,", "-            false);", "-        checkExpressionSubtree(", "-            getMainAst().findFirstToken(TokenTypes.FOR_ITERATOR),", "-            getLevel() + getIndentCheck().getBasicOffset(),", "-            false,", "-            false);", "+        IndentLevel expected = new IndentLevel(getLevel(), getBasicOffset());", "+", "+        DetailAST init = getMainAst().findFirstToken(TokenTypes.FOR_INIT);", "+        checkExpressionSubtree(init, expected, false, false);", "+", "+        DetailAST cond = getMainAst().findFirstToken(TokenTypes.FOR_CONDITION);", "+        checkExpressionSubtree(cond, expected, false, false);", "+", "+        DetailAST iter = getMainAst().findFirstToken(TokenTypes.FOR_ITERATOR);", "+        checkExpressionSubtree(iter, expected, false, false);"]}]}