{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2db5a3c1c352b376d94f0e4e1f1c0d2b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c11b62cd6088d4d4bd040b80bf61ae", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java", "commitBeforeChange": "104e69edd63edb8d35b6ae63a17934fc5cf49267", "commitAfterChange": "81b52e27c5077f9a4f426d32b0e39a785052c715", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static Pattern getPattern(String aPattern)         throws PatternSyntaxException", "signatureAfterChange": "     public static Pattern getPattern(String aPattern, int aCompileFlags)         throws PatternSyntaxException", "diff": ["-        Pattern retVal = (Pattern) CREATED_RES.get(aPattern);", "+     **/", "+    public static Pattern getPattern(String aPattern, int aCompileFlags)", "+        throws PatternSyntaxException", "+    {", "+        final String key = aPattern + \":flags-\" + aCompileFlags;", "+        Pattern retVal = (Pattern) CREATED_RES.get(key);", "-            retVal = Pattern.compile(aPattern);", "-            CREATED_RES.put(aPattern, retVal);", "+            retVal = Pattern.compile(aPattern, aCompileFlags);", "+            CREATED_RES.put(key, retVal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97aa018cbb71a8e021cccae1c8d6e5f3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "contrib/j2ee/src/checkstyle/com/puppycrawl/tools/checkstyle/checks/j2ee/EntityBeanEjbSelectCheck.java", "commitBeforeChange": "cb72198165086caf36293c23521c2ad418d1eb3c", "commitAfterChange": "9089e7a210285af0b2f539c0bf03525d20fdf611", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["+        final String nameMessage = \"Method \" + name;", "-            checkMethod(aAST);", "-            if (Utils.isVoid(aAST)) {", "+            if (!Utils.isPublic(aAST)) {", "-                    \"voidmethod.bean\", name);", "+                    \"nonpublic.bean\", nameMessage);", "+"]}]}