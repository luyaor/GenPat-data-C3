{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c4cf296d9bb606d583ac73cf5d41eea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acfad0d699cf2b62aac6d15f35139020", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java", "commitBeforeChange": "e2329c7a98dadb9e2717aae92216964a6ab40329", "commitAfterChange": "073d09569f471061fd82899efac4f823269dd265", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private void parseInputStream(InputStream aStream)         throws IOException, SAXException", "signatureAfterChange": "     private void parseInputSource(InputSource aSource)         throws IOException, SAXException", "diff": ["-    private void parseInputStream(InputStream aStream)", "+    private void parseInputSource(InputSource aSource)", "-        final InputStream configStream =", "-            new BufferedInputStream(aStream, TWO_KB);", "-        final InputSource inputSource = new InputSource(configStream);", "-        mSaxHandler.parseInputSource(inputSource);", "+        mSaxHandler.parseInputSource(aSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da737a905559141395bb0d5381eeb8cd", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java", "commitBeforeChange": "6a977155274fa6ff7e3055ca3701c206d9e0d34d", "commitAfterChange": "2c41aaf844d3206775c0a8c9e78aabf3a6d85a36", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)         throws IOException", "signatureAfterChange": "     private ParseTree parseJavadocAsParseTree(String blockComment)", "diff": ["-    private ParseTree parseJavadocAsParseTree(String blockComment)", "-        throws IOException {", "-        final Charset utf8Charset = Charset.forName(\"UTF-8\");", "-        final InputStream in = new ByteArrayInputStream(blockComment.getBytes(utf8Charset));", "-", "-        final ANTLRInputStream input = new ANTLRInputStream(in);", "+    private ParseTree parseJavadocAsParseTree(String blockComment) {", "+        final ANTLRInputStream input = new ANTLRInputStream(blockComment);"]}]}