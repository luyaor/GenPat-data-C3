{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c9e95a55e1db61793744fbd1984ea4e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6f41e384984bb8a3906fcbdfc286af", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     void verifyDot(MyCommonAST aAST)", "signatureAfterChange": "     void verifyDot(MyCommonAST aAST)", "diff": ["-                    log(aAST.getLineNo(),", "-                        aAST.getColumnNo() - 1,", "-                        \"'.' is preceeded with whitespace.\");", "+                    log(aAST.getLineNo(), aAST.getColumnNo() - 1,", "+                        \"ws.preceeded\", \".\");", "-                    log(aAST.getLineNo(),", "-                        after,", "-                        \"'.' is followed by whitespace.\");", "+                    log(aAST.getLineNo(), after, \"ws.followed\", \".\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4e12acb845f2e7c0305307c9915768b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Verifier.java", "commitBeforeChange": "d499f72239cec254d620ab1619ac936e233e2033", "commitAfterChange": "c682b5725d22afc38bf19d9667b23a7deab6d8c3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "signatureAfterChange": "     void verifyRCurly(MyCommonAST aBrace, int aStartLine)", "diff": ["-            log(aBrace.getLineNo(),", "-                aBrace.getColumnNo(),", "-                \"'}' should be on the same line.\");", "+            log(aBrace.getLineNo(), aBrace.getColumnNo(), \"line.same\", \"}\");", "-            log(aBrace.getLineNo(),", "-                aBrace.getColumnNo(),", "-                \"'}' should be alone on a line.\");", "+            log(aBrace.getLineNo(), aBrace.getColumnNo(), \"line.alone\", \"}\");"]}]}