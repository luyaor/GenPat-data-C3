{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8650bbafca59c5c9054279fada3f290", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5188aeeb81bc5d8b3671d19b8bf5d437", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/Configuration.java", "commitBeforeChange": "1818ae8ab189515f24a711aa3fc520377bd71380", "commitAfterChange": "7b7eea6e9a4d4053912f83cda41c46c0f4474607", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "signatureAfterChange": "     public Configuration(Properties aProps, PrintStream aLog)         throws RESyntaxException, FileNotFoundException, IOException", "diff": ["-        setPatternProperty(aProps, Defn.TODO_PATTERN_PROP, TODO_PATTERN);", "-        setPatternProperty(aProps, Defn.PARAMETER_PATTERN_PROP,", "-                           PARAMETER_PATTERN);", "-        setPatternProperty(aProps, Defn.STATIC_PATTERN_PROP, STATIC_PATTERN);", "-        setPatternProperty(aProps, Defn.CONST_PATTERN_PROP, CONST_PATTERN);", "-        setPatternProperty(aProps, Defn.MEMBER_PATTERN_PROP, MEMBER_PATTERN);", "-        setPatternProperty(aProps, Defn.PUBLIC_MEMBER_PATTERN_PROP,", "-                           PUBLIC_MEMBER_PATTERN);", "-        setPatternProperty(aProps, Defn.TYPE_PATTERN_PROP, TYPE_PATTERN);", "-        setPatternProperty(aProps, Defn.LOCAL_VAR_PATTERN_PROP,", "-                           LOCAL_VAR_PATTERN);", "-        setPatternProperty(aProps, Defn.LOCAL_FINAL_VAR_PATTERN_PROP,", "-                           LOCAL_FINAL_VAR_PATTERN);", "-        setPatternProperty(aProps, Defn.METHOD_PATTERN_PROP, METHOD_PATTERN);", "-        setPatternProperty(aProps, Defn.IGNORE_LINE_LENGTH_PATTERN_PROP,", "-                           IGNORE_LINE_LENGTH_PATTERN);", "-        setIntProperty(aProps, aLog, Defn.MAX_LINE_LENGTH_PROP,", "-                       MAX_LINE_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_METHOD_LENGTH_PROP,", "-                       MAX_METHOD_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_CONSTRUCTOR_LENGTH_PROP,", "-                       MAX_CONSTRUCTOR_LENGTH);", "-        setIntProperty(aProps, aLog, Defn.MAX_FILE_LENGTH_PROP,", "-                       MAX_FILE_LENGTH);", "-", "-        setBooleanProperty(aProps, Defn.ALLOW_TABS_PROP);", "-        setIntProperty(aProps, aLog, Defn.TAB_WIDTH_PROP, TAB_WIDTH);", "-        setBooleanProperty(aProps, Defn.ALLOW_PROTECTED_PROP);", "-        setBooleanProperty(aProps, Defn.ALLOW_PACKAGE_PROP);", "-        setBooleanProperty(aProps, Defn.ALLOW_NO_AUTHOR_PROP);", "-        setBooleanProperty(aProps, Defn.REQUIRE_VERSION_PROP);", "+        // Init the special properties", "+        setHeaderIgnoreLines(aProps.getProperty(Defn.HEADER_IGNORE_LINE_PROP));", "+        setRCurly(getRightCurlyOptionProperty(", "+                      aProps, Defn.RCURLY_PROP, RightCurlyOption.SAME, aLog));", "-        setBooleanProperty(aProps, Defn.REQUIRE_PACKAGE_HTML_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_IMPORTS_PROP);", "-        setIllegalImports(", "-            aProps.getProperty(Defn.ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));", "-        setIllegalInstantiations(", "-            aProps.getProperty(Defn.ILLEGAL_INSTANTIATIONS_PROP,", "-                               ILLEGAL_INSTANTIATIONS));", "-        setBooleanProperty(aProps, Defn.IGNORE_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_CAST_WHITESPACE_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_BRACES_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_LONG_ELL_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_PUBLIC_IN_INTERFACE_PROP);", "-        setStringProperty(aProps, Defn.CACHE_FILE_PROP);", "-        setStringProperty(aProps, Defn.LOCALE_LANGUAGE_PROP);", "-        setStringProperty(aProps, Defn.LOCALE_COUNTRY_PROP);", "-        setBooleanProperty(aProps, Defn.IGNORE_IMPORT_LENGTH_PROP);", "-        setHeaderIgnoreLines(aProps.getProperty(Defn.HEADER_IGNORE_LINE_PROP));", "-        setBooleanProperty(aProps, Defn.HEADER_LINES_REGEXP_PROP);", "-        setBooleanProperty(aProps, Defn.JAVADOC_CHECK_UNUSED_THROWS_PROP);", "-", "-        final String fname = aProps.getProperty(Defn.HEADER_FILE_PROP);", "-        if (fname != null) {", "-            setHeaderFile(fname);", "-        }", "-", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_METHOD_PROP, aLog);", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_TYPE_PROP, aLog);", "-        setLeftCurlyOptionProperty(aProps, Defn.LCURLY_OTHER_PROP, aLog);", "-        setRCurly(getRightCurlyOptionProperty(", "-                      aProps, Defn.RCURLY_PROP, RightCurlyOption.SAME, aLog));", "-        setBlockOptionProperty(aProps, Defn.TRY_BLOCK_PROP, aLog);", "-        setBlockOptionProperty(aProps, Defn.CATCH_BLOCK_PROP, aLog);", "-        setBlockOptionProperty(aProps, Defn.FINALLY_BLOCK_PROP, aLog);", "-        setStringProperty(aProps, Defn.BASEDIR_PROP);", "+        setHeaderFile(aProps.getProperty(Defn.HEADER_FILE_PROP));", "+", "+        // Initialise the general properties", "+        for (int i = 0; i < Defn.ALL_BOOLEAN_PROPS.length; i++) {", "+            setBooleanProperty(aProps, Defn.ALL_BOOLEAN_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_PATTERN_PROPS.length; i++) {", "+            setPatternProperty(aProps, Defn.ALL_PATTERN_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_INT_PROPS.length; i++) {", "+            setIntProperty(aProps, aLog, Defn.ALL_INT_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_BLOCK_PROPS.length; i++) {", "+            setBlockOptionProperty(aProps, Defn.ALL_BLOCK_PROPS[i], aLog);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_STRING_PROPS.length; i++) {", "+            setStringProperty(aProps, Defn.ALL_STRING_PROPS[i]);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_LCURLY_PROPS.length; i++) {", "+            setLeftCurlyOptionProperty(aProps, Defn.ALL_LCURLY_PROPS[i], aLog);", "+        }", "+", "+        for (int i = 0; i < Defn.ALL_STRING_SET_PROPS.length; i++) {", "+            setStringSetProperty(aProps, Defn.ALL_STRING_SET_PROPS[i]);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8872257ac1992c0ff64cfdeaf913dd15", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/tests/com/puppycrawl/tools/checkstyle/AllTests.java", "commitBeforeChange": "c044038c3b932586c0d384b614254cc2d1838838", "commitAfterChange": "4701ec1304fba478198544064a305e98a7bfe3fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static Test suite()", "signatureAfterChange": "      public static Test suite()", "diff": ["-        //$JUnit-BEGIN$", "-        suite.addTest(new TestSuite(AbstractClassNameCheckTest.class));", "-        suite.addTest(new TestSuite(AbstractViolationReporterTest.class));", "-        suite.addTest(new TestSuite(AnonInnerLengthCheckTest.class));", "-        suite.addTest(new TestSuite(ArrayTrailingCommaCheckTest.class));", "-        suite.addTest(new TestSuite(ArrayTypeStyleCheckTest.class));", "-        suite.addTest(new TestSuite(AvoidInlineConditionalsCheckTest.class));", "-        suite.addTest(new TestSuite(AvoidNestedBlocksCheckTest.class));", "-        suite.addTest(new TestSuite(AvoidStarImportTest.class));", "-        suite.addTest(new TestSuite(BooleanExpressionComplexityCheckTest.class));", "+", "+        // test from this package", "-        suite.addTest(new TestSuite(ClassFanOutComplexityCheckTest.class));", "-        suite.addTest(new TestSuite(ClassDataAbstractionCouplingCheckTest.class));", "-        suite.addTest(new TestSuite(ConstantNameCheckTest.class));", "-        suite.addTest(new TestSuite(CovariantEqualsCheckTest.class));", "-        suite.addTest(new TestSuite(CyclomaticComplexityCheckTest.class));", "-        suite.addTest(new TestSuite(DescendantTokenCheckTest.class));", "-        suite.addTest(new TestSuite(DesignForExtensionCheckTest.class));", "-        suite.addTest(new TestSuite(DetailASTTest.class));", "-        suite.addTest(new TestSuite(DeclarationOrderCheckTest.class));", "-        suite.addTest(new TestSuite(DoubleCheckedLockingCheckTest.class));", "-        suite.addTest(new TestSuite(EmptyBlockCheckTest.class));", "-        suite.addTest(new TestSuite(EmptyForIteratorPadCheckTest.class));", "-        suite.addTest(new TestSuite(EmptyStatementCheckTest.class));", "-        suite.addTest(new TestSuite(EqualsHashCodeCheckTest.class));", "-        suite.addTest(new TestSuite(ExplicitInitializationCheckTest.class));", "-        suite.addTest(new TestSuite(FileLengthCheckTest.class));", "-        suite.addTest(new TestSuite(FileSetCheckLifecycleTest.class));", "-        suite.addTest(new TestSuite(FinalClassCheckTest.class));", "-        suite.addTest(new TestSuite(FinalLocalVariableCheckTest.class));", "-        suite.addTest(new TestSuite(FinalParametersCheckTest.class));", "-        suite.addTest(new TestSuite(GenericIllegalRegexpCheckTest.class));", "-        suite.addTest(new TestSuite(HeaderCheckTest.class));", "-        suite.addTest(new TestSuite(HiddenFieldCheckTest.class));", "-        suite.addTest(new TestSuite(HideUtilityClassConstructorCheckTest.class));", "-        suite.addTest(new TestSuite(ImportOrderCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalCatchCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalImportCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalInstantiationCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalTokenCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalTokenTextCheckTest.class));", "-        suite.addTest(new TestSuite(IllegalTypeCheckTest.class));", "-        suite.addTest(new TestSuite(IndentationCheckTest.class));", "-        suite.addTest(new TestSuite(InnerAssignmentCheckTest.class));", "-        suite.addTest(new TestSuite(InterfaceIsTypeCheckTest.class));", "-        suite.addTest(new TestSuite(JUnitTestCaseCheckTest.class));", "-        suite.addTest(new TestSuite(JavadocMethodCheckTest.class));", "-        suite.addTest(new TestSuite(JavadocStyleCheckTest.class));", "-        suite.addTest(new TestSuite(JavadocTypeCheckTest.class));", "-        suite.addTest(new TestSuite(JavadocVariableCheckTest.class));", "-        suite.addTest(new TestSuite(LeftCurlyCheckTest.class));", "-        suite.addTest(new TestSuite(LineLengthCheckTest.class));", "-        suite.addTest(new TestSuite(LocalFinalVariableNameCheckTest.class));", "-        suite.addTest(new TestSuite(LocalVariableNameCheckTest.class));", "-        suite.addTest(new TestSuite(MagicNumberCheckTest.class));", "-        suite.addTest(new TestSuite(MemberNameCheckTest.class));", "-        suite.addTest(new TestSuite(MethodLengthCheckTest.class));", "-        suite.addTest(new TestSuite(MethodNameCheckTest.class));", "-        suite.addTest(new TestSuite(MissingSwitchDefaultCheckTest.class));", "-        suite.addTest(new TestSuite(ModifierOrderCheckTest.class));", "-        suite.addTest(new TestSuite(MutableExceptionCheckTest.class));", "-        suite.addTest(new TestSuite(NeedBracesCheckTest.class));", "-        suite.addTest(new TestSuite(NestedIfDepthCheckTest.class));", "-        suite.addTest(new TestSuite(NestedTryDepthCheckTest.class));", "-        suite.addTest(new TestSuite(NewlineAtEndOfFileCheckTest.class));", "-        suite.addTest(new TestSuite(NoWhitespaceAfterCheckTest.class));", "-        suite.addTest(new TestSuite(NoWhitespaceBeforeCheckTest.class));", "-        suite.addTest(new TestSuite(NPathComplexityCheckTest.class));", "-        suite.addTest(new TestSuite(OperatorWrapCheckTest.class));", "-        suite.addTest(new TestSuite(PackageDeclarationCheckTest.class));", "-        suite.addTest(new TestSuite(PackageHtmlCheckTest.class));", "-        suite.addTest(new TestSuite(PackageNameCheckTest.class));", "-        suite.addTest(new TestSuite(ParameterAssignmentCheckTest.class));", "-        suite.addTest(new TestSuite(ParameterNameCheckTest.class));", "-        suite.addTest(new TestSuite(ParameterNumberCheckTest.class));", "-        suite.addTest(new TestSuite(ParenPadCheckTest.class));", "-        suite.addTest(new TestSuite(RedundantImportCheckTest.class));", "-        suite.addTest(new TestSuite(RedundantModifierTest.class));", "-        suite.addTest(new TestSuite(RedundantThrowsCheckTest.class));", "-        suite.addTest(new TestSuite(ReturnCountCheckTest.class));", "-        suite.addTest(new TestSuite(RightCurlyCheckTest.class));", "-        suite.addTest(new TestSuite(SimplifyBooleanExpressionCheckTest.class));", "-        suite.addTest(new TestSuite(SimplifyBooleanReturnCheckTest.class));", "-        suite.addTest(new TestSuite(ExecutableStatementCountCheckTest.class));", "-        suite.addTest(new TestSuite(StaticVariableNameCheckTest.class));", "-        suite.addTest(new TestSuite(StringLiteralEqualityCheckTest.class));", "-        suite.addTest(new TestSuite(SuperCloneCheckTest.class));", "-        suite.addTest(new TestSuite(SuperFinalizeCheckTest.class));", "-        suite.addTest(new TestSuite(TabCharacterCheckTest.class));", "-        suite.addTest(new TestSuite(ThrowsCountCheckTest.class));", "-        suite.addTest(new TestSuite(TodoCommentCheckTest.class));", "-        suite.addTest(new TestSuite(TranslationCheckTest.class));", "-        suite.addTest(new TestSuite(TypeNameCheckTest.class));", "-        suite.addTest(new TestSuite(TypecastParenPadCheckTest.class));", "-        suite.addTest(new TestSuite(UncommentedMainCheckTest.class));", "-        suite.addTest(new TestSuite(UnusedImportsCheckTest.class));", "-        suite.addTest(new TestSuite(UpperEllCheckTest.class));", "-        suite.addTest(new TestSuite(VisibilityModifierCheckTest.class));", "-        suite.addTest(new TestSuite(WhitespaceAfterCheckTest.class));", "-        suite.addTest(new TestSuite(WhitespaceAroundTest.class));", "-        // j2ee tests-BEGIN", "-        suite.addTest(new TestSuite(EntityBeanCheckTest.class));", "-        suite.addTest(new TestSuite(FinalStaticCheckTest.class));", "-        suite.addTest(new TestSuite(LocalHomeInterfaceCheckTest.class));", "-        suite.addTest(new TestSuite(LocalInterfaceCheckTest.class));", "-        suite.addTest(new TestSuite(MessageBeanCheckTest.class));", "-        suite.addTest(new TestSuite(RemoteHomeInterfaceCheckTest.class));", "-        suite.addTest(new TestSuite(RemoteInterfaceCheckTest.class));", "-        suite.addTest(new TestSuite(SessionBeanCheckTest.class));", "-        suite.addTest(new TestSuite(ThisParameterCheckTest.class));", "-        suite.addTest(new TestSuite(ThisReturnCheckTest.class));", "-        // j2ee tests-END", "-        ", "-        // usage tests-BEGIN", "-        suite.addTest(new TestSuite(OneMethodPrivateFieldCheckTest.class));", "-        suite.addTest(new TestSuite(UnusedLocalVariableCheckTest.class));", "-        suite.addTest(new TestSuite(UnusedParameterCheckTest.class));", "-        suite.addTest(new TestSuite(UnusedPrivateFieldCheckTest.class));", "-        suite.addTest(new TestSuite(UnusedPrivateMethodCheckTest.class));", "-        // usage tests-END", "+        // tests from sub-packages", "+        suite.addTest(com.puppycrawl.tools.checkstyle.api.AllTests.suite());", "+        suite.addTest(com.puppycrawl.tools.checkstyle.checks.AllTests.suite());", "+        suite.addTest(com.puppycrawl.tools.checkstyle.filters.AllTests.suite());"]}]}