{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1db73f4d1dad9edd07324b99e9e44b9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160aac7351da9e76bda176bab2cb97b8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/UnnecessaryParenthesesCheck.java", "commitBeforeChange": "ce59d6abb3385213248b188f5b80f9e9a2ca3507", "commitAfterChange": "b433c987fa86905ffa686d6b45180508d759d450", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "     private boolean isSurrounded(DetailAST ast)", "signatureAfterChange": "     private boolean isSurrounded(DetailAST ast)", "diff": ["+        // if previous sibling is left parenthesis,", "+        // next sibling can't be other than right parenthesis", "-        final DetailAST next = ast.getNextSibling();", "-", "-        return prev != null && prev.getType() == TokenTypes.LPAREN", "-            && next != null && next.getType() == TokenTypes.RPAREN;", "+        return prev != null && prev.getType() == TokenTypes.LPAREN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1f178881b882d1822aedb25ca925cc8", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/AbstractSuperCheck.java", "commitBeforeChange": "068a1b4533bbefbb78c51181ff0971fb92c1ef29", "commitAfterChange": "3bd39984f24378e4b01148bd02423e3d04c0c851", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private boolean isOverridingMethod(DetailAST ast)", "signatureAfterChange": "     private boolean isOverridingMethod(DetailAST ast)", "diff": ["-        final DetailAST modifiersAST = ast.findFirstToken(TokenTypes.MODIFIERS);", "-        if (!getMethodName().equals(name)", "-                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {", "+        if (!getMethodName().equals(name)) {"]}]}