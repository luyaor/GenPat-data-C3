{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8169e4c82ed3a7422f8084c289fc7bfc", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e135ba6d6e00c527a567af3fb18825e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TrailingCommentCheck.java", "commitBeforeChange": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7", "commitAfterChange": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void setLegalComment(final String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setLegalComment(final String format)         throws ConversionException", "diff": ["-    public void setLegalComment(final String aFormat)", "+    public void setLegalComment(final String format)", "-            mLegalComment = Utils.getPattern(aFormat);", "+            legalComment = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f6c61cc820c110b4612784c2144d199", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/LineLengthCheck.java", "commitBeforeChange": "750b733bd124eaea34d4692a1bb8d0fd0fe90976", "commitAfterChange": "3fec4a92e39afc5b68b03c5fd023cb8d13408385", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public void setIgnorePattern(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnorePattern(String format)         throws ConversionException", "diff": ["-    public void setIgnorePattern(String aFormat)", "+    public void setIgnorePattern(String format)", "-            mIgnorePattern = Utils.getPattern(aFormat);", "+            ignorePattern = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fbbc0414ebe4451185bf7cdc1927d76", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java", "commitBeforeChange": "b94bac0719851b65b59b4aafc5bd3ef029321ed7", "commitAfterChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public void setIgnoreFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setIgnoreFormat(String format)         throws ConversionException", "diff": ["-    public void setIgnoreFormat(String aFormat)", "+    public void setIgnoreFormat(String format)", "-            mRegexp = Utils.getPattern(aFormat);", "+            regexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633c99ee2db71473a5be9009073ab585", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void setOffCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOffCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOffCommentFormat(String aFormat)", "+    public void setOffCommentFormat(String format)", "-            mOffRegexp = Utils.getPattern(aFormat);", "+            offRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b101c34d225bf395d035463af71aeb", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressWithNearbyCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void setCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setCommentFormat(String aFormat)", "+    public void setCommentFormat(String format)", "-            mCommentRegexp = Utils.getPattern(aFormat);", "+            commentRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969469b6401b4e1fa8eb346e5ef60baa", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionCommentFilter.java", "commitBeforeChange": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000", "commitAfterChange": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public void setOnCommentFormat(String aFormat)         throws ConversionException", "signatureAfterChange": "     public void setOnCommentFormat(String format)         throws ConversionException", "diff": ["-    public void setOnCommentFormat(String aFormat)", "+    public void setOnCommentFormat(String format)", "-            mOnRegexp = Utils.getPattern(aFormat);", "+            onRegexp = Utils.getPattern(format);", "-            throw new ConversionException(\"unable to parse \" + aFormat, e);", "+            throw new ConversionException(\"unable to parse \" + format, e);"]}]}