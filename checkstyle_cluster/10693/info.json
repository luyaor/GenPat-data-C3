{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a9bf129c49b17b628964533c63c0ba0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d8a91c5b88a0bc9f18222cf23335210", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public static ParseTree treeCustomJavadocTags()", "signatureAfterChange": "      public static ParseTree treeCustomJavadocTags()", "diff": ["-    }", "-    public static ParseTree treeCustomJavadocTags() {", "-        JavadocContext vqeRv = new JavadocContext(null, 0);", "-        CommonToken kUYEj = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        vqeRv.addChild(kUYEj);", "-        CommonToken VOJHC = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        vqeRv.addChild(VOJHC);", "-        JavadocTagContext DYThx = new JavadocTagContext(vqeRv, 0);", "-        CommonToken ctenR = new CommonToken(JavadocTokenTypes.CUSTOM_NAME, \"@myTag\");", "-        DYThx.addChild(ctenR);", "-        CommonToken ObxYB = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        DYThx.addChild(ObxYB);", "-        DescriptionContext WuoxQ = new DescriptionContext(DYThx, 0);", "-        TextContext FaQUX = new TextContext(WuoxQ, 0);", "-        CommonToken fpyzz = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "-        FaQUX.addChild(fpyzz);", "-        CommonToken lbwtC = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        FaQUX.addChild(lbwtC);", "-        CommonToken xCpJd = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        FaQUX.addChild(xCpJd);", "-        CommonToken OOdfd = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        FaQUX.addChild(OOdfd);", "-        CommonToken jTWwf = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        FaQUX.addChild(jTWwf);", "-        CommonToken tYuft = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        FaQUX.addChild(tYuft);", "-        CommonToken Rjpiw = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        FaQUX.addChild(Rjpiw);", "-        CommonToken eumTC = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        FaQUX.addChild(eumTC);", "-        CommonToken SUdyR = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        FaQUX.addChild(SUdyR);", "-        WuoxQ.addChild(FaQUX);", "-        CommonToken ZcIzE = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        WuoxQ.addChild(ZcIzE);", "-        DYThx.addChild(WuoxQ);", "-        vqeRv.addChild(DYThx);", "-        CommonToken kMCCR = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        vqeRv.addChild(kMCCR);", "-        CommonToken pFtfc = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        vqeRv.addChild(pFtfc);", "-        JavadocTagContext mYbvf = new JavadocTagContext(vqeRv, 0);", "-        CommonToken JUVPH = new CommonToken(JavadocTokenTypes.CUSTOM_NAME, \"@anotherTagWithoutParameter\");", "-        mYbvf.addChild(JUVPH);", "-        CommonToken mDykX = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        mYbvf.addChild(mDykX);", "-        vqeRv.addChild(mYbvf);", "-        CommonToken oHnTB = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        vqeRv.addChild(oHnTB);", "-        CommonToken aLlHU = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        vqeRv.addChild(aLlHU);", "-        JavadocTagContext MVTCW = new JavadocTagContext(vqeRv, 0);", "-        CommonToken ipxcL = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "-        MVTCW.addChild(ipxcL);", "-        CommonToken AfLyL = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        MVTCW.addChild(AfLyL);", "-        DescriptionContext ZXuuK = new DescriptionContext(MVTCW, 0);", "-        TextContext uXOoV = new TextContext(ZXuuK, 0);", "-        CommonToken PzlFR = new CommonToken(JavadocTokenTypes.CHAR, \"I\");", "-        uXOoV.addChild(PzlFR);", "-        ZXuuK.addChild(uXOoV);", "-        CommonToken VNXPi = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        ZXuuK.addChild(VNXPi);", "-        TextContext vUStO = new TextContext(ZXuuK, 0);", "-        CommonToken yLjDi = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        vUStO.addChild(yLjDi);", "-        ZXuuK.addChild(vUStO);", "-        MVTCW.addChild(ZXuuK);", "-        vqeRv.addChild(MVTCW);", "-        CommonToken QNmAS = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        vqeRv.addChild(QNmAS);", "-        return vqeRv;", "-    }", "+", "+    public static ParseTree treeCustomJavadocTags()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken customName0 = new CommonToken(JavadocTokenTypes.CUSTOM_NAME, \"@myTag\");", "+        javadocTagContext0.addChild(customName0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"y\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char2);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char4);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws3);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char6);", "+        descriptionContext0.addChild(textContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        descriptionContext0.addChild(newline0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        CommonToken ws4 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws4);", "+        JavadocTagContext javadocTagContext1 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken customName1 = new CommonToken(JavadocTokenTypes.CUSTOM_NAME, \"@anotherTagWithoutParameter\");", "+        javadocTagContext1.addChild(customName1);", "+        CommonToken newline1 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocTagContext1.addChild(newline1);", "+        javadocContext0.addChild(javadocTagContext1);", "+        CommonToken leadingAsterisk2 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk2);", "+        CommonToken ws5 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws5);", "+        JavadocTagContext javadocTagContext2 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken authorLiteral0 = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "+        javadocTagContext2.addChild(authorLiteral0);", "+        CommonToken ws6 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext2.addChild(ws6);", "+        DescriptionContext descriptionContext1 = new DescriptionContext(javadocTagContext2, 0);", "+        TextContext textContext1 = new TextContext(descriptionContext1, 0);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"I\");", "+        textContext1.addChild(char7);", "+        descriptionContext1.addChild(textContext1);", "+        CommonToken newline2 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        descriptionContext1.addChild(newline2);", "+        TextContext textContext2 = new TextContext(descriptionContext1, 0);", "+        CommonToken ws7 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext2.addChild(ws7);", "+        descriptionContext1.addChild(textContext2);", "+        javadocTagContext2.addChild(descriptionContext1);", "+        javadocContext0.addChild(javadocTagContext2);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5faa04ca4e4b92118329219df7d42b5e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public static ParseTree treeUnclosedParagraphFollowedByJavadocTag()", "signatureAfterChange": "      public static ParseTree treeUnclosedParagraphFollowedByJavadocTag()", "diff": ["-    public static ParseTree treeUnclosedParagraphFollowedByJavadocTag() {", "-        JavadocContext toAar = new JavadocContext(null, 0);", "-        HtmlElementContext FmXNr = new HtmlElementContext(toAar, 0);", "-        PTagOpenContext ryFvE = new PTagOpenContext(FmXNr, 0);", "-        CommonToken HdDOX = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        ryFvE.addChild(HdDOX);", "-        CommonToken nYJUI = new CommonToken(JavadocTokenTypes.P_HTML_TAG_NAME, \"p\");", "-        ryFvE.addChild(nYJUI);", "-        CommonToken KDRaQ = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        ryFvE.addChild(KDRaQ);", "-        AttributeContext gTKLk = new AttributeContext(ryFvE, 0);", "-        CommonToken cqEmn = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"style\");", "-        gTKLk.addChild(cqEmn);", "-        CommonToken ltvVB = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "-        gTKLk.addChild(ltvVB);", "-        CommonToken VMpFN = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"\\\"color: red;\\\"\");", "-        gTKLk.addChild(VMpFN);", "-        ryFvE.addChild(gTKLk);", "-        CommonToken DqXAR = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        ryFvE.addChild(DqXAR);", "-        FmXNr.addChild(ryFvE);", "-        toAar.addChild(FmXNr);", "-        CommonToken gDtSy = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        toAar.addChild(gDtSy);", "-        TextContext AUKAx = new TextContext(toAar, 0);", "-        CommonToken yvWdA = new CommonToken(JavadocTokenTypes.WS, \"\\t\");", "-        AUKAx.addChild(yvWdA);", "-        CommonToken OYedt = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        AUKAx.addChild(OYedt);", "-        CommonToken JzDTB = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        AUKAx.addChild(JzDTB);", "-        CommonToken oDIJN = new CommonToken(JavadocTokenTypes.CHAR, \"x\");", "-        AUKAx.addChild(oDIJN);", "-        CommonToken Rqlbw = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        AUKAx.addChild(Rqlbw);", "-        CommonToken tCDRR = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        AUKAx.addChild(tCDRR);", "-        CommonToken pffyu = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        AUKAx.addChild(pffyu);", "-        CommonToken NYaCv = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        AUKAx.addChild(NYaCv);", "-        CommonToken hqUjd = new CommonToken(JavadocTokenTypes.CHAR, \"x\");", "-        AUKAx.addChild(hqUjd);", "-        CommonToken KRkis = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        AUKAx.addChild(KRkis);", "-        toAar.addChild(AUKAx);", "-        CommonToken HqAee = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        toAar.addChild(HqAee);", "-        JavadocTagContext XFxtS = new JavadocTagContext(toAar, 0);", "-        CommonToken yXsKP = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "-        XFxtS.addChild(yXsKP);", "-        CommonToken RmrHi = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        XFxtS.addChild(RmrHi);", "-        DescriptionContext SAUHr = new DescriptionContext(XFxtS, 0);", "-        TextContext mKYlo = new TextContext(SAUHr, 0);", "-        CommonToken zoqVb = new CommonToken(JavadocTokenTypes.CHAR, \"B\");", "-        mKYlo.addChild(zoqVb);", "-        CommonToken qltjj = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mKYlo.addChild(qltjj);", "-        CommonToken FtRxi = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        mKYlo.addChild(FtRxi);", "-        CommonToken IJzqI = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mKYlo.addChild(IJzqI);", "-        CommonToken FcrDM = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        mKYlo.addChild(FcrDM);", "-        CommonToken QNyou = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mKYlo.addChild(QNyou);", "-        CommonToken qasHc = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        mKYlo.addChild(qasHc);", "-        CommonToken acnQH = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        mKYlo.addChild(acnQH);", "-        SAUHr.addChild(mKYlo);", "-        XFxtS.addChild(SAUHr);", "-        toAar.addChild(XFxtS);", "-        CommonToken tONCM = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        toAar.addChild(tONCM);", "-        return toAar;", "+", "+    public static ParseTree treeUnclosedParagraphFollowedByJavadocTag()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        HtmlElementContext htmlElementContext0 = new HtmlElementContext(javadocContext0, 0);", "+        PTagOpenContext pTagOpenContext0 = new PTagOpenContext(htmlElementContext0, 0);", "+        CommonToken open0 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        pTagOpenContext0.addChild(open0);", "+        CommonToken pHtmlTagName0 = new CommonToken(JavadocTokenTypes.P_HTML_TAG_NAME, \"p\");", "+        pTagOpenContext0.addChild(pHtmlTagName0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        pTagOpenContext0.addChild(ws0);", "+        AttributeContext attributeContext0 = new AttributeContext(pTagOpenContext0, 0);", "+        CommonToken htmlTagName0 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"style\");", "+        attributeContext0.addChild(htmlTagName0);", "+        CommonToken equals0 = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "+        attributeContext0.addChild(equals0);", "+        CommonToken attrValue0 = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"\\\"color: red;\\\"\");", "+        attributeContext0.addChild(attrValue0);", "+        pTagOpenContext0.addChild(attributeContext0);", "+        CommonToken close0 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        pTagOpenContext0.addChild(close0);", "+        htmlElementContext0.addChild(pTagOpenContext0);", "+        javadocContext0.addChild(htmlElementContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline0);", "+        TextContext textContext0 = new TextContext(javadocContext0, 0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \"\\t\");", "+        textContext0.addChild(ws1);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"x\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char3);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"x\");", "+        textContext0.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char7);", "+        javadocContext0.addChild(textContext0);", "+        CommonToken newline1 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline1);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken authorLiteral0 = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "+        javadocTagContext0.addChild(authorLiteral0);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws3);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext1 = new TextContext(descriptionContext0, 0);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"B\");", "+        textContext1.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char9);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext1.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext1.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext1.addChild(char14);", "+        CommonToken char15 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext1.addChild(char15);", "+        descriptionContext0.addChild(textContext1);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a44db714d739dcf7e5b950b19ca1f2d", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public static ParseTree treeAuthorWithMailto()", "signatureAfterChange": "      public static ParseTree treeAuthorWithMailto()", "diff": ["-    }", "-    public static ParseTree treeAuthorWithMailto() {", "-        JavadocContext TGTbm = new JavadocContext(null, 0);", "-        JavadocTagContext dzPuU = new JavadocTagContext(TGTbm, 0);", "-        CommonToken KeavR = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "-        dzPuU.addChild(KeavR);", "-        CommonToken czLfR = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        dzPuU.addChild(czLfR);", "-        DescriptionContext bTGWe = new DescriptionContext(dzPuU, 0);", "-        HtmlElementContext aoBuh = new HtmlElementContext(bTGWe, 0);", "-        HtmlTagContext vFKpv = new HtmlTagContext(aoBuh, 0);", "-        HtmlElementOpenContext HMTTi = new HtmlElementOpenContext(vFKpv, 0);", "-        CommonToken SSVZC = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        HMTTi.addChild(SSVZC);", "-        CommonToken NnpgO = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"a\");", "-        HMTTi.addChild(NnpgO);", "-        CommonToken iyonf = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        HMTTi.addChild(iyonf);", "-        AttributeContext vxDGj = new AttributeContext(HMTTi, 0);", "-        CommonToken OEFMv = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"href\");", "-        vxDGj.addChild(OEFMv);", "-        CommonToken HrHJF = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "-        vxDGj.addChild(HrHJF);", "-        CommonToken ntbkP = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"\\\"mailto:barataliba@gmail.com\\\"\");", "-        vxDGj.addChild(ntbkP);", "-        HMTTi.addChild(vxDGj);", "-        CommonToken xPeiD = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        HMTTi.addChild(xPeiD);", "-        vFKpv.addChild(HMTTi);", "-        TextContext Auskd = new TextContext(vFKpv, 0);", "-        CommonToken QZOWF = new CommonToken(JavadocTokenTypes.CHAR, \"B\");", "-        Auskd.addChild(QZOWF);", "-        CommonToken aHoKe = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        Auskd.addChild(aHoKe);", "-        CommonToken KmPGt = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        Auskd.addChild(KmPGt);", "-        CommonToken IkYYT = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        Auskd.addChild(IkYYT);", "-        CommonToken qHAgD = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        Auskd.addChild(qHAgD);", "-        CommonToken hzsoO = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        Auskd.addChild(hzsoO);", "-        CommonToken Ypeux = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        Auskd.addChild(Ypeux);", "-        CommonToken jjUpd = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        Auskd.addChild(jjUpd);", "-        CommonToken KgHqO = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        Auskd.addChild(KgHqO);", "-        CommonToken fwvwj = new CommonToken(JavadocTokenTypes.CHAR, \"I\");", "-        Auskd.addChild(fwvwj);", "-        CommonToken uPhgY = new CommonToken(JavadocTokenTypes.CHAR, \"z\");", "-        Auskd.addChild(uPhgY);", "-        CommonToken xTCuL = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "-        Auskd.addChild(xTCuL);", "-        CommonToken BwdLV = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        Auskd.addChild(BwdLV);", "-        CommonToken AdkMH = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        Auskd.addChild(AdkMH);", "-        CommonToken qNtQc = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        Auskd.addChild(qNtQc);", "-        CommonToken PFiZu = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        Auskd.addChild(PFiZu);", "-        CommonToken ZQZPQ = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "-        Auskd.addChild(ZQZPQ);", "-        vFKpv.addChild(Auskd);", "-        HtmlElementCloseContext SgyXZ = new HtmlElementCloseContext(vFKpv, 0);", "-        CommonToken KfwXW = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "-        SgyXZ.addChild(KfwXW);", "-        CommonToken FjjTR = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "-        SgyXZ.addChild(FjjTR);", "-        CommonToken RjDMC = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"a\");", "-        SgyXZ.addChild(RjDMC);", "-        CommonToken bxeIt = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "-        SgyXZ.addChild(bxeIt);", "-        vFKpv.addChild(SgyXZ);", "-        aoBuh.addChild(vFKpv);", "-        bTGWe.addChild(aoBuh);", "-        dzPuU.addChild(bTGWe);", "-        TGTbm.addChild(dzPuU);", "-        CommonToken OPdHU = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        TGTbm.addChild(OPdHU);", "-        return TGTbm;", "-    }", "+", "+    public static ParseTree treeAuthorWithMailto()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken authorLiteral0 = new CommonToken(JavadocTokenTypes.AUTHOR_LITERAL, \"@author\");", "+        javadocTagContext0.addChild(authorLiteral0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws0);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        HtmlElementContext htmlElementContext0 = new HtmlElementContext(descriptionContext0, 0);", "+        HtmlTagContext htmlTagContext0 = new HtmlTagContext(htmlElementContext0, 0);", "+        HtmlElementOpenContext htmlElementOpenContext0 = new HtmlElementOpenContext(htmlTagContext0, 0);", "+        CommonToken open0 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementOpenContext0.addChild(open0);", "+        CommonToken htmlTagName0 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"a\");", "+        htmlElementOpenContext0.addChild(htmlTagName0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        htmlElementOpenContext0.addChild(ws1);", "+        AttributeContext attributeContext0 = new AttributeContext(htmlElementOpenContext0, 0);", "+        CommonToken htmlTagName1 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"href\");", "+        attributeContext0.addChild(htmlTagName1);", "+        CommonToken equals0 = new CommonToken(JavadocTokenTypes.EQUALS, \"=\");", "+        attributeContext0.addChild(equals0);", "+        CommonToken attrValue0 = new CommonToken(JavadocTokenTypes.ATTR_VALUE, \"\\\"mailto:barataliba@gmail.com\\\"\");", "+        attributeContext0.addChild(attrValue0);", "+        htmlElementOpenContext0.addChild(attributeContext0);", "+        CommonToken close0 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementOpenContext0.addChild(close0);", "+        htmlTagContext0.addChild(htmlElementOpenContext0);", "+        TextContext textContext0 = new TextContext(htmlTagContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"B\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext0.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char7);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"I\");", "+        textContext0.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"z\");", "+        textContext0.addChild(char9);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"m\");", "+        textContext0.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext0.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext0.addChild(char14);", "+        CommonToken char15 = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "+        textContext0.addChild(char15);", "+        htmlTagContext0.addChild(textContext0);", "+        HtmlElementCloseContext htmlElementCloseContext0 = new HtmlElementCloseContext(htmlTagContext0, 0);", "+        CommonToken open1 = new CommonToken(JavadocTokenTypes.OPEN, \"<\");", "+        htmlElementCloseContext0.addChild(open1);", "+        CommonToken slash0 = new CommonToken(JavadocTokenTypes.SLASH, \"/\");", "+        htmlElementCloseContext0.addChild(slash0);", "+        CommonToken htmlTagName2 = new CommonToken(JavadocTokenTypes.HTML_TAG_NAME, \"a\");", "+        htmlElementCloseContext0.addChild(htmlTagName2);", "+        CommonToken close1 = new CommonToken(JavadocTokenTypes.CLOSE, \">\");", "+        htmlElementCloseContext0.addChild(close1);", "+        htmlTagContext0.addChild(htmlElementCloseContext0);", "+        htmlElementContext0.addChild(htmlTagContext0);", "+        descriptionContext0.addChild(htmlElementContext0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7efbc3af68c94e5de20590e08b9088f2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static ParseTree treeLeadingAsterisks()", "signatureAfterChange": "      public static ParseTree treeLeadingAsterisks()", "diff": ["-    }", "-    public static ParseTree treeLeadingAsterisks() {", "-        JavadocContext ESHfJ = new JavadocContext(null, 0);", "-        CommonToken avwXT = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        ESHfJ.addChild(avwXT);", "-        CommonToken RlzJr = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"  *\");", "-        ESHfJ.addChild(RlzJr);", "-        TextContext mDTfc = new TextContext(ESHfJ, 0);", "-        CommonToken TCVnz = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        mDTfc.addChild(TCVnz);", "-        CommonToken Eecil = new CommonToken(JavadocTokenTypes.CHAR, \"L\");", "-        mDTfc.addChild(Eecil);", "-        CommonToken jiYGz = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        mDTfc.addChild(jiYGz);", "-        CommonToken dJXCd = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mDTfc.addChild(dJXCd);", "-        CommonToken hcsGh = new CommonToken(JavadocTokenTypes.CHAR, \"d\");", "-        mDTfc.addChild(hcsGh);", "-        CommonToken HDIpw = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        mDTfc.addChild(HDIpw);", "-        CommonToken rIybq = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        mDTfc.addChild(rIybq);", "-        CommonToken vxdRh = new CommonToken(JavadocTokenTypes.CHAR, \"g\");", "-        mDTfc.addChild(vxdRh);", "-        CommonToken WMJXY = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        mDTfc.addChild(WMJXY);", "-        CommonToken zqREY = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        mDTfc.addChild(zqREY);", "-        CommonToken PdPMn = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        mDTfc.addChild(PdPMn);", "-        CommonToken nHhZd = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        mDTfc.addChild(nHhZd);", "-        CommonToken YACET = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        mDTfc.addChild(YACET);", "-        CommonToken GPryT = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        mDTfc.addChild(GPryT);", "-        CommonToken RMGmz = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "-        mDTfc.addChild(RMGmz);", "-        CommonToken pktyX = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        mDTfc.addChild(pktyX);", "-        CommonToken ihpJN = new CommonToken(JavadocTokenTypes.CHAR, \"k\");", "-        mDTfc.addChild(ihpJN);", "-        ESHfJ.addChild(mDTfc);", "-        CommonToken nuxOz = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        ESHfJ.addChild(nuxOz);", "-        CommonToken jqMyc = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"    *\");", "-        ESHfJ.addChild(jqMyc);", "-        TextContext wkaXz = new TextContext(ESHfJ, 0);", "-        CommonToken qwSBF = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        wkaXz.addChild(qwSBF);", "-        CommonToken Nkbgp = new CommonToken(JavadocTokenTypes.CHAR, \"A\");", "-        wkaXz.addChild(Nkbgp);", "-        CommonToken rDueW = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        wkaXz.addChild(rDueW);", "-        CommonToken tojhr = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        wkaXz.addChild(tojhr);", "-        CommonToken kuktV = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "-        wkaXz.addChild(kuktV);", "-        CommonToken SvKGl = new CommonToken(JavadocTokenTypes.CHAR, \"h\");", "-        wkaXz.addChild(SvKGl);", "-        CommonToken CRGcP = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        wkaXz.addChild(CRGcP);", "-        CommonToken laMGd = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "-        wkaXz.addChild(laMGd);", "-        CommonToken QIVBU = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        wkaXz.addChild(QIVBU);", "-        CommonToken inUyg = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "-        wkaXz.addChild(inUyg);", "-        CommonToken MrCDK = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "-        wkaXz.addChild(MrCDK);", "-        CommonToken ibqGj = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        wkaXz.addChild(ibqGj);", "-        ESHfJ.addChild(wkaXz);", "-        CommonToken CvXeG = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        ESHfJ.addChild(CvXeG);", "-        return ESHfJ;", "-    }", "+    public static ParseTree treeLeadingAsterisks()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"  *\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        TextContext textContext0 = new TextContext(javadocContext0, 0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"L\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"d\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"g\");", "+        textContext0.addChild(char6);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws1);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext0.addChild(char9);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext0.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"i\");", "+        textContext0.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext0.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"k\");", "+        textContext0.addChild(char14);", "+        javadocContext0.addChild(textContext0);", "+        CommonToken newline1 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline1);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"    *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        TextContext textContext1 = new TextContext(javadocContext0, 0);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws2);", "+        CommonToken char15 = new CommonToken(JavadocTokenTypes.CHAR, \"A\");", "+        textContext1.addChild(char15);", "+        CommonToken char16 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext1.addChild(char16);", "+        CommonToken char17 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext1.addChild(char17);", "+        CommonToken char18 = new CommonToken(JavadocTokenTypes.CHAR, \"t\");", "+        textContext1.addChild(char18);", "+        CommonToken char19 = new CommonToken(JavadocTokenTypes.CHAR, \"h\");", "+        textContext1.addChild(char19);", "+        CommonToken char20 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char20);", "+        CommonToken char21 = new CommonToken(JavadocTokenTypes.CHAR, \"r\");", "+        textContext1.addChild(char21);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws3);", "+        CommonToken char22 = new CommonToken(JavadocTokenTypes.CHAR, \"o\");", "+        textContext1.addChild(char22);", "+        CommonToken char23 = new CommonToken(JavadocTokenTypes.CHAR, \"n\");", "+        textContext1.addChild(char23);", "+        CommonToken char24 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char24);", "+        javadocContext0.addChild(textContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd13b7d799b649a69f7a6478678c39bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public static ParseTree treeSince()", "signatureAfterChange": "      public static ParseTree treeSince()", "diff": ["-    }", "-    public static ParseTree treeSince() {", "-        JavadocContext KzwtL = new JavadocContext(null, 0);", "-        CommonToken KBdjc = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "-        KzwtL.addChild(KBdjc);", "-        CommonToken bumXm = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(bumXm);", "-        JavadocTagContext yxgFX = new JavadocTagContext(KzwtL, 0);", "-        CommonToken YHnJx = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        yxgFX.addChild(YHnJx);", "-        CommonToken VnMhH = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        yxgFX.addChild(VnMhH);", "-        DescriptionContext hfUJs = new DescriptionContext(yxgFX, 0);", "-        TextContext KDFKH = new TextContext(hfUJs, 0);", "-        CommonToken HzQdJ = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "-        KDFKH.addChild(HzQdJ);", "-        CommonToken dQvjG = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KDFKH.addChild(dQvjG);", "-        CommonToken xEdyg = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KDFKH.addChild(xEdyg);", "-        hfUJs.addChild(KDFKH);", "-        CommonToken IXuHo = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        hfUJs.addChild(IXuHo);", "-        yxgFX.addChild(hfUJs);", "-        KzwtL.addChild(yxgFX);", "-        CommonToken PkBux = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "-        KzwtL.addChild(PkBux);", "-        CommonToken KpMIW = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KzwtL.addChild(KpMIW);", "-        JavadocTagContext OcuEn = new JavadocTagContext(KzwtL, 0);", "-        CommonToken SehKa = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "-        OcuEn.addChild(SehKa);", "-        CommonToken JURQC = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        OcuEn.addChild(JURQC);", "-        DescriptionContext NYzVK = new DescriptionContext(OcuEn, 0);", "-        TextContext KYmTj = new TextContext(NYzVK, 0);", "-        CommonToken XeINZ = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "-        KYmTj.addChild(XeINZ);", "-        CommonToken yaphV = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(yaphV);", "-        CommonToken fWGhu = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        KYmTj.addChild(fWGhu);", "-        CommonToken kWDEz = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(kWDEz);", "-        CommonToken xrhZk = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        KYmTj.addChild(xrhZk);", "-        CommonToken rrnjf = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "-        KYmTj.addChild(rrnjf);", "-        CommonToken hMbVu = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        KYmTj.addChild(hMbVu);", "-        CommonToken WEbWM = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        KYmTj.addChild(WEbWM);", "-        CommonToken NFvZb = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "-        KYmTj.addChild(NFvZb);", "-        CommonToken rWLUe = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(rWLUe);", "-        CommonToken sZzJq = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "-        KYmTj.addChild(sZzJq);", "-        CommonToken fpHMf = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "-        KYmTj.addChild(fpHMf);", "-        CommonToken ukVDH = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "-        KYmTj.addChild(ukVDH);", "-        NYzVK.addChild(KYmTj);", "-        OcuEn.addChild(NYzVK);", "-        KzwtL.addChild(OcuEn);", "-        CommonToken lWOPi = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        KzwtL.addChild(lWOPi);", "-        return KzwtL;", "-    }", "+", "+    public static ParseTree treeSince()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \"*\");", "+        javadocContext0.addChild(leadingAsterisk0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws0);", "+        JavadocTagContext javadocTagContext0 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral0 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext0.addChild(sinceLiteral0);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext0.addChild(ws1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocTagContext0, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"1\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext0.addChild(char2);", "+        descriptionContext0.addChild(textContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        descriptionContext0.addChild(newline0);", "+        javadocTagContext0.addChild(descriptionContext0);", "+        javadocContext0.addChild(javadocTagContext0);", "+        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, \" *\");", "+        javadocContext0.addChild(leadingAsterisk1);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocContext0.addChild(ws2);", "+        JavadocTagContext javadocTagContext1 = new JavadocTagContext(javadocContext0, 0);", "+        CommonToken sinceLiteral1 = new CommonToken(JavadocTokenTypes.SINCE_LITERAL, \"@since\");", "+        javadocTagContext1.addChild(sinceLiteral1);", "+        CommonToken ws3 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocTagContext1.addChild(ws3);", "+        DescriptionContext descriptionContext1 = new DescriptionContext(javadocTagContext1, 0);", "+        TextContext textContext1 = new TextContext(descriptionContext1, 0);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"R\");", "+        textContext1.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext1.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char6);", "+        CommonToken char7 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext1.addChild(char7);", "+        CommonToken char8 = new CommonToken(JavadocTokenTypes.CHAR, \"s\");", "+        textContext1.addChild(char8);", "+        CommonToken char9 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext1.addChild(char9);", "+        CommonToken ws4 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext1.addChild(ws4);", "+        CommonToken char10 = new CommonToken(JavadocTokenTypes.CHAR, \"3\");", "+        textContext1.addChild(char10);", "+        CommonToken char11 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char11);", "+        CommonToken char12 = new CommonToken(JavadocTokenTypes.CHAR, \"4\");", "+        textContext1.addChild(char12);", "+        CommonToken char13 = new CommonToken(JavadocTokenTypes.CHAR, \".\");", "+        textContext1.addChild(char13);", "+        CommonToken char14 = new CommonToken(JavadocTokenTypes.CHAR, \"5\");", "+        textContext1.addChild(char14);", "+        descriptionContext1.addChild(textContext1);", "+        javadocTagContext1.addChild(descriptionContext1);", "+        javadocContext0.addChild(javadocTagContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5deac4b31b8f966f3f9e8a54fc9ca3", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/grammars/javadoc/ParseTreeBuilder.java", "commitBeforeChange": "65865d1adcf6e1579b7323d56117186db1ad96eb", "commitAfterChange": "b4c351b03d4a9d7dffc9a3502d17a41fb3e440b4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public static ParseTree treeLinkInlineTags()", "signatureAfterChange": "      public static ParseTree treeLinkInlineTags()", "diff": ["-    }", "-    public static ParseTree treeLinkInlineTags() {", "-        JavadocContext qUDSi = new JavadocContext(null, 0);", "-        JavadocInlineTagContext qrmKv = new JavadocInlineTagContext(qUDSi, 0);", "-        CommonToken nyjfF = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "-        qrmKv.addChild(nyjfF);", "-        CommonToken HXSDY = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "-        qrmKv.addChild(HXSDY);", "-        CommonToken LbsbA = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        qrmKv.addChild(LbsbA);", "-        ReferenceContext qNvtx = new ReferenceContext(qrmKv, 0);", "-        CommonToken cPKhb = new CommonToken(JavadocTokenTypes.PACKAGE, \"java.lang\");", "-        qNvtx.addChild(cPKhb);", "-        CommonToken FXimU = new CommonToken(JavadocTokenTypes.DOT, \".\");", "-        qNvtx.addChild(FXimU);", "-        CommonToken VmBeR = new CommonToken(JavadocTokenTypes.CLASS, \"Integer\");", "-        qNvtx.addChild(VmBeR);", "-        CommonToken ZQmZl = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "-        qNvtx.addChild(ZQmZl);", "-        CommonToken LqBEr = new CommonToken(JavadocTokenTypes.MEMBER, \"valueOf\");", "-        qNvtx.addChild(LqBEr);", "-        qrmKv.addChild(qNvtx);", "-        CommonToken AMFgL = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "-        qrmKv.addChild(AMFgL);", "-        qUDSi.addChild(qrmKv);", "-        CommonToken Soygb = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "-        qUDSi.addChild(Soygb);", "-        JavadocInlineTagContext TkOkF = new JavadocInlineTagContext(qUDSi, 0);", "-        CommonToken PkzAI = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "-        TkOkF.addChild(PkzAI);", "-        CommonToken kFrQb = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "-        TkOkF.addChild(kFrQb);", "-        CommonToken fVQnP = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        TkOkF.addChild(fVQnP);", "-        ReferenceContext Mwbat = new ReferenceContext(TkOkF, 0);", "-        CommonToken oHQua = new CommonToken(JavadocTokenTypes.PACKAGE, \"java.lang\");", "-        Mwbat.addChild(oHQua);", "-        CommonToken YvNhB = new CommonToken(JavadocTokenTypes.DOT, \".\");", "-        Mwbat.addChild(YvNhB);", "-        CommonToken dsmbF = new CommonToken(JavadocTokenTypes.CLASS, \"Integer\");", "-        Mwbat.addChild(dsmbF);", "-        CommonToken HZVQi = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "-        Mwbat.addChild(HZVQi);", "-        CommonToken FUOOd = new CommonToken(JavadocTokenTypes.MEMBER, \"valueOf\");", "-        Mwbat.addChild(FUOOd);", "-        TkOkF.addChild(Mwbat);", "-        DescriptionContext WchCg = new DescriptionContext(TkOkF, 0);", "-        TextContext fcThJ = new TextContext(WchCg, 0);", "-        CommonToken aDhfF = new CommonToken(JavadocTokenTypes.WS, \" \");", "-        fcThJ.addChild(aDhfF);", "-        CommonToken vdvFW = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "-        fcThJ.addChild(vdvFW);", "-        CommonToken IHqck = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "-        fcThJ.addChild(IHqck);", "-        CommonToken xHjyx = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "-        fcThJ.addChild(xHjyx);", "-        CommonToken oKzoC = new CommonToken(JavadocTokenTypes.CHAR, \"u\");", "-        fcThJ.addChild(oKzoC);", "-        CommonToken wnkTX = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "-        fcThJ.addChild(wnkTX);", "-        CommonToken WAjRZ = new CommonToken(JavadocTokenTypes.CHAR, \"O\");", "-        fcThJ.addChild(WAjRZ);", "-        CommonToken mFsnr = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "-        fcThJ.addChild(mFsnr);", "-        WchCg.addChild(fcThJ);", "-        TkOkF.addChild(WchCg);", "-        CommonToken vtWLP = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "-        TkOkF.addChild(vtWLP);", "-        qUDSi.addChild(TkOkF);", "-        CommonToken NyyJM = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "-        qUDSi.addChild(NyyJM);", "-        return qUDSi;", "-    }", "+", "+    public static ParseTree treeLinkInlineTags()", "+    {", "+        JavadocContext javadocContext0 = new JavadocContext(null, 0);", "+        JavadocInlineTagContext javadocInlineTagContext0 = new JavadocInlineTagContext(javadocContext0, 0);", "+        CommonToken javadocInlineTagStart0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "+        javadocInlineTagContext0.addChild(javadocInlineTagStart0);", "+        CommonToken linkLiteral0 = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "+        javadocInlineTagContext0.addChild(linkLiteral0);", "+        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocInlineTagContext0.addChild(ws0);", "+        ReferenceContext referenceContext0 = new ReferenceContext(javadocInlineTagContext0, 0);", "+        CommonToken package0 = new CommonToken(JavadocTokenTypes.PACKAGE, \"java.lang\");", "+        referenceContext0.addChild(package0);", "+        CommonToken dot0 = new CommonToken(JavadocTokenTypes.DOT, \".\");", "+        referenceContext0.addChild(dot0);", "+        CommonToken class0 = new CommonToken(JavadocTokenTypes.CLASS, \"Integer\");", "+        referenceContext0.addChild(class0);", "+        CommonToken hash0 = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "+        referenceContext0.addChild(hash0);", "+        CommonToken member0 = new CommonToken(JavadocTokenTypes.MEMBER, \"valueOf\");", "+        referenceContext0.addChild(member0);", "+        javadocInlineTagContext0.addChild(referenceContext0);", "+        CommonToken javadocInlineTagEnd0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "+        javadocInlineTagContext0.addChild(javadocInlineTagEnd0);", "+        javadocContext0.addChild(javadocInlineTagContext0);", "+        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);", "+        javadocContext0.addChild(newline0);", "+        JavadocInlineTagContext javadocInlineTagContext1 = new JavadocInlineTagContext(javadocContext0, 0);", "+        CommonToken javadocInlineTagStart1 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, \"{\");", "+        javadocInlineTagContext1.addChild(javadocInlineTagStart1);", "+        CommonToken linkLiteral1 = new CommonToken(JavadocTokenTypes.LINK_LITERAL, \"@link\");", "+        javadocInlineTagContext1.addChild(linkLiteral1);", "+        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        javadocInlineTagContext1.addChild(ws1);", "+        ReferenceContext referenceContext1 = new ReferenceContext(javadocInlineTagContext1, 0);", "+        CommonToken package1 = new CommonToken(JavadocTokenTypes.PACKAGE, \"java.lang\");", "+        referenceContext1.addChild(package1);", "+        CommonToken dot1 = new CommonToken(JavadocTokenTypes.DOT, \".\");", "+        referenceContext1.addChild(dot1);", "+        CommonToken class1 = new CommonToken(JavadocTokenTypes.CLASS, \"Integer\");", "+        referenceContext1.addChild(class1);", "+        CommonToken hash1 = new CommonToken(JavadocTokenTypes.HASH, \"#\");", "+        referenceContext1.addChild(hash1);", "+        CommonToken member1 = new CommonToken(JavadocTokenTypes.MEMBER, \"valueOf\");", "+        referenceContext1.addChild(member1);", "+        javadocInlineTagContext1.addChild(referenceContext1);", "+        DescriptionContext descriptionContext0 = new DescriptionContext(javadocInlineTagContext1, 0);", "+        TextContext textContext0 = new TextContext(descriptionContext0, 0);", "+        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, \" \");", "+        textContext0.addChild(ws2);", "+        CommonToken char0 = new CommonToken(JavadocTokenTypes.CHAR, \"v\");", "+        textContext0.addChild(char0);", "+        CommonToken char1 = new CommonToken(JavadocTokenTypes.CHAR, \"a\");", "+        textContext0.addChild(char1);", "+        CommonToken char2 = new CommonToken(JavadocTokenTypes.CHAR, \"l\");", "+        textContext0.addChild(char2);", "+        CommonToken char3 = new CommonToken(JavadocTokenTypes.CHAR, \"u\");", "+        textContext0.addChild(char3);", "+        CommonToken char4 = new CommonToken(JavadocTokenTypes.CHAR, \"e\");", "+        textContext0.addChild(char4);", "+        CommonToken char5 = new CommonToken(JavadocTokenTypes.CHAR, \"O\");", "+        textContext0.addChild(char5);", "+        CommonToken char6 = new CommonToken(JavadocTokenTypes.CHAR, \"f\");", "+        textContext0.addChild(char6);", "+        descriptionContext0.addChild(textContext0);", "+        javadocInlineTagContext1.addChild(descriptionContext0);", "+        CommonToken javadocInlineTagEnd1 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, \"}\");", "+        javadocInlineTagContext1.addChild(javadocInlineTagEnd1);", "+        javadocContext0.addChild(javadocInlineTagContext1);", "+        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, \"<EOF>\");", "+        javadocContext0.addChild(eof0);", "+        return javadocContext0;", "+    }"]}]}