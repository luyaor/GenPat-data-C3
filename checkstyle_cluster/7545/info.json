{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d69e4bd0109ad7de827b3d30b81537dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59aeaf90fe62b580beaa0d54c3f4820b", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private void notifyLeave(DetailAST aAST)", "signatureAfterChange": "     private void notifyLeave(DetailAST aAST, AstState aAstState)", "diff": ["-    private void notifyLeave(DetailAST aAST)", "+    private void notifyLeave(DetailAST aAST, AstState aAstState)", "-        final Collection<Check> visitors =", "-            mTokenToChecks.get(TokenTypes.getTokenName(aAST.getType()));", "+        Collection<Check> visitors;", "+        final String tokenType = TokenTypes.getTokenName(aAST.getType());", "+", "+        if (aAstState == AstState.WITH_COMMENTS) {", "+            visitors = mTokenToCommentChecks.get(tokenType);", "+        }", "+        else {", "+            visitors = mTokenToOrdinaryChecks.get(tokenType);", "+        }", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce89823e4ae9900e6eeb1170c44b25d2", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java", "commitBeforeChange": "59aa66c3cc43db0a7cd8bb0ea3a39b6f4339fe88", "commitAfterChange": "a24df47cafeab03fd65cf72b460aad3d2fafce3d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "     private void notifyVisit(DetailAST aAST)", "signatureAfterChange": "     private void notifyVisit(DetailAST aAST, AstState aAstState)", "diff": ["+    private void notifyVisit(DetailAST aAST, AstState aAstState)", "+        Collection<Check> visitors;", "+        final String tokenType = TokenTypes.getTokenName(aAST.getType());", "+", "+        if (aAstState == AstState.WITH_COMMENTS) {", "+            visitors = mTokenToCommentChecks.get(tokenType);", "+        }", "+        else {", "+            visitors = mTokenToOrdinaryChecks.get(tokenType);", "-     */", "-    private void notifyVisit(DetailAST aAST)", "-    {", "-        final Collection<Check> visitors =", "-            mTokenToChecks.get(TokenTypes.getTokenName(aAST.getType()));"]}]}