{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9416ac455db3f97dac8807990e16c0bb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a71b5f6753068b256a554c7af5e959e", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/WhitespaceAroundCheck.java", "commitBeforeChange": "81dab0c14131c72066f28cf8dbbddd1db3ea3a38", "commitAfterChange": "eb7b7bfd3e63a926c3f3b2801d519caa0e1fffc3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-            // COLON,             // ':' TODO: dont flag after \"case\"", "+            COLON,             // ':' TODO: dont flag after \"case\"", "-            LITERAL_if,", "-            LITERAL_else,", "-            LITERAL_for,", "-            LITERAL_do,", "-            LITERAL_return,", "-            LITERAL_try,", "+            LITERAL_do,", "+            LITERAL_else,", "+            LITERAL_for,", "+            LITERAL_if,", "+            LITERAL_return,", "+            LITERAL_try,", "+            LITERAL_while,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3615e6e4c69e4e0eaa25c14664b0a627", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EmptyBlockCheck.java", "commitBeforeChange": "d471c9cd5437242b7d9e3f3c19409854fc74e50c", "commitAfterChange": "982b3963ca007c6101f69cf50c010f07292dab0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public int[] getDefaultTokens()", "signatureAfterChange": "     public int[] getDefaultTokens()", "diff": ["-        return new int[] {TokenTypes.SLIST};", "+        return new int[] {", "+            TokenTypes.LITERAL_WHILE,", "+            TokenTypes.LITERAL_TRY,", "+            TokenTypes.LITERAL_CATCH,", "+            TokenTypes.LITERAL_FINALLY,", "+            TokenTypes.LITERAL_SYNCHRONIZED,", "+            TokenTypes.LITERAL_DO,", "+            TokenTypes.LITERAL_IF,", "+            TokenTypes.LITERAL_ELSE,", "+            TokenTypes.LITERAL_FOR,", "+            TokenTypes.STATIC_INIT,", "+            // TODO: need to handle....", "+            //TokenTypes.LITERAL_SWITCH,      ", "+        };"]}]}