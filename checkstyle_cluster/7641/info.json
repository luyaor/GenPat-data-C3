{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "647c7f84c9da48fe189903334a3e2517", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e254e13ae863eeac8dba78b41809c60f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/it/java/com/google/checkstyle/test/base/ConfigurationBuilder.java", "commitBeforeChange": "02aaa1b7f653e25c34ef7f186fa1d940079384e8", "commitAfterChange": "52ac2776d7f128ff812b73b54dcc12210661f98b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "signatureAfterChange": "  \tpublic Configuration getCheckConfig(String aCheckName)", "diff": ["-\t\tfor (Configuration config : mConfig.getChildren()) {", "-\t\t\tif (\"TreeWalker\".equals(config.getName())) {", "-\t\t\t\tfor (Configuration checkConfig : config.getChildren()) {", "+\t\tfor (Configuration currentConfig : config.getChildren()) {", "+\t\t\tif (\"TreeWalker\".equals(currentConfig.getName())) {", "+\t\t\t\tfor (Configuration checkConfig : currentConfig.getChildren()) {", "-\t\t\t} else if (aCheckName.equals(config.getName())) {", "-\t\t\t\treturn config;", "+\t\t\t} else if (aCheckName.equals(currentConfig.getName())) {", "+\t\t\t\treturn currentConfig;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d19005fcde5a332ede8aec3b16cba7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java", "commitBeforeChange": "8b43ebdbf7ff1abe9fb858fd5d0dbc2c903a4485", "commitAfterChange": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "     protected final void checkRParen(DetailAST aLparen, DetailAST aRparen)", "signatureAfterChange": "     protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "diff": ["-    protected final void checkRParen(DetailAST aLparen, DetailAST aRparen)", "+    protected final void checkRParen(DetailAST lparen, DetailAST rparen)", "-        if (aRparen == null) {", "+        if (rparen == null) {", "-        final int rparenLevel = expandedTabsColumnNo(aRparen);", "-        if (getLevel().accept(rparenLevel) || !startsLine(aRparen)) {", "+        final int rparenLevel = expandedTabsColumnNo(rparen);", "+        if (getLevel().accept(rparenLevel) || !startsLine(rparen)) {", "-        final int lparenLevel = expandedTabsColumnNo(aLparen);", "+        final int lparenLevel = expandedTabsColumnNo(lparen);", "-        logError(aRparen, \"rparen\", rparenLevel);", "+        logError(rparen, \"rparen\", rparenLevel);"]}]}