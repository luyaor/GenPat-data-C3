{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa016c84839f49878749a750f6dd8ac2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b05da02adc20a89aff67a9f334e660f", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/test/java/com/puppycrawl/tools/checkstyle/api/FileTextTest.java", "commitBeforeChange": "f3ab3071425e32bdf4083cb00924b21e01ba721a", "commitAfterChange": "531327f8c7789d60c937d0f320bbf7e29abe0e27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      @Test     public void testSupportedCharset() throws IOException", "signatureAfterChange": "      @Test     public void testSupportedCharset() throws IOException", "diff": ["-        // just to make UT coverage 100%", "-        try {", "-            String charsetName = \"ISO-8859-1\";", "-            FileText o = new FileText(new File(\"src/test/resources/com/puppycrawl/tools/\"", "-                     + \"checkstyle/imports/import-control_complete.xml\"), charsetName);", "-            assertEquals(o.getCharset().name(), charsetName);", "-        }", "-        catch (UnsupportedEncodingException e) {", "-            fail();", "-        }", "-", "+        String charsetName = \"ISO-8859-1\";", "+        FileText o = new FileText(new File(\"src/test/resources/com/puppycrawl/tools/\"", "+                 + \"checkstyle/imports/import-control_complete.xml\"), charsetName);", "+        assertEquals(o.getCharset().name(), charsetName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb585f3b0b1fd3dc4a7add5550182c1", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java", "commitBeforeChange": "d0e8581e9ce7dd420b94cb837b4331ec0baa9e4d", "commitAfterChange": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "     private void addRuleastoList(String ruleStr)", "signatureAfterChange": "     private void addRuleastoList(String ruleStr)", "diff": ["-            try {", "-                samePackageMatchingDepth = Integer.parseInt(rule);", "-            }", "-            catch (NumberFormatException e) {", "-                samePackageDomainsRegExp = rule;", "-            }", "+            samePackageMatchingDepth = Integer.parseInt(rule);"]}]}