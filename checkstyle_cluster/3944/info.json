{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d2a90d46513bc4636559a1d9a1c18fe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28440fd1c4cdaf5fcce3f85827b175df", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "ad7c6fbf2f51bf82c7ee6d88b4930eb11771cd86", "commitAfterChange": "fbd04a537a209f84407fd3695171213f4e011e33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast)", "signatureAfterChange": "     private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast)", "diff": ["+                || astTraverse.getType() == TokenTypes.ENUM_DEF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80cf5f84280efcc85fd3b617cd9824bc", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java", "commitBeforeChange": "55c2560774f0624afeae9e6c29fd19ae59e8c24b", "commitAfterChange": "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      @Override     public final void visitToken(DetailAST aAST)", "signatureAfterChange": "      @Override     public final void visitToken(DetailAST aAST)", "diff": ["+                 || (aAST.getType() == TokenTypes.INTERFACE_DEF)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897d2fda1b48d60159f81a873e74e930", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java", "commitBeforeChange": "29e611bd879a5a16749eb280764799e09ed4e17a", "commitAfterChange": "0c3c817b224c6fa50db166c0d1edb2b5d3f4162a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public void visitToken(DetailAST aAST)", "signatureAfterChange": "     public void visitToken(DetailAST aAST)", "diff": ["-        if (classMods.branchContains(TokenTypes.FINAL)) {", "+        if (classDef.getType() == TokenTypes.ENUM_DEF", "+            || classMods.branchContains(TokenTypes.FINAL))", "+        {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca52bf8fef7aa01fc76d329951edfa7", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbstractTypeParameterNameCheck.java", "commitBeforeChange": "63faa15d677d34478f9697c6c175395a53662182", "commitAfterChange": "f39f224203de4c8cef23a4e8e9695e838f6e6e19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      @Override     public final void init()", "signatureAfterChange": "      @Override     public final void init()", "diff": ["-            || (this.mLocation == TokenTypes.METHOD_DEF);", "+            || (this.mLocation == TokenTypes.METHOD_DEF)", "+            || (this.mLocation == TokenTypes.INTERFACE_DEF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed56b2ea88e91e5ead9e959cfa9c130", "repository": "https://github.com/checkstyle/checkstyle.git", "fileName": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java", "commitBeforeChange": "ec414646eaf9ceb7de4b6e75b6c11d446cd0971f", "commitAfterChange": "90178ab2e4bfac216cf861188006818ebce10293", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     private static DetailAST findClassOrMethodInWhichItIsDefined(DetailAST ast)", "signatureAfterChange": "     private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast)", "diff": ["-    private static DetailAST findClassOrMethodInWhichItIsDefined(DetailAST ast) {", "+    private static DetailAST findClassOrConstructorOrMethodInWhichItIsDefined(DetailAST ast) {", "-                || astTraverse.getType() == TokenTypes.CLASS_DEF)) {", "+                || astTraverse.getType() == TokenTypes.CLASS_DEF", "+                || astTraverse.getType() == TokenTypes.CTOR_DEF)) {"]}]}