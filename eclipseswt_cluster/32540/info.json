{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d02f59716943cc89c09e14094988d02", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73651eda5b1a35fde488d11bbfa84c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f027e65f362a4197ce516f6998da11767ff4ed6f", "commitAfterChange": "9d80fa41aebed8140fd6eb7eab6449cb2fe17efe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  NSAttributedString createString(String string, int flags)", "signatureAfterChange": "  NSAttributedString createString(String string, int flags)", "diff": ["-//\tint breakCount = 0;", "-//\tint[] breaks = null;", "-//\tif ((flags & (SWT.DRAW_MNEMONIC | SWT.DRAW_DELIMITER)) != 0) {", "-//\t\tint i=0, j=0;", "-//\t\twhile (i < chars.length) {", "-//\t\t\tchar c = chars [j++] = chars [i++];", "-//\t\t\tswitch (c) {", "-//\t\t\t\tcase '&': {", "-//\t\t\t\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0) {", "-//\t\t\t\t\t\tif (i == chars.length) {continue;}", "-//\t\t\t\t\t\tif (chars [i] == '&') {i++; continue;}", "-//\t\t\t\t\t\tj--;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-//\t\t\t\tcase '\\r':", "-//\t\t\t\tcase '\\n': {", "-//\t\t\t\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {", "-//\t\t\t\t\t\tif (c == '\\r' && i != chars.length && chars[i] == '\\n') i++;", "-//\t\t\t\t\t\tj--;", "-//\t\t\t\t\t\tif (breaks == null) {", "-//\t\t\t\t\t\t\tbreaks = new int[4];", "-//\t\t\t\t\t\t} else if (breakCount == breaks.length) {", "-//\t\t\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "-//\t\t\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "-//\t\t\t\t\t\t\tbreaks = newBreaks;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tbreaks[breakCount++] = j;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t}", "-//\t\tlength = j;", "-//\t}", "+\tint breakCount = 0;", "+\tint[] breaks = null;", "+\tif ((flags & (SWT.DRAW_MNEMONIC | SWT.DRAW_DELIMITER)) != 0) {", "+\t\tint i=0, j=0;", "+\t\twhile (i < chars.length) {", "+\t\t\tchar c = chars [j++] = chars [i++];", "+\t\t\tswitch (c) {", "+\t\t\t\tcase '&': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0) {", "+\t\t\t\t\t\tif (i == chars.length) {continue;}", "+\t\t\t\t\t\tif (chars [i] == '&') {i++; continue;}", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase '\\r':", "+\t\t\t\tcase '\\n': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {", "+\t\t\t\t\t\tif (c == '\\r' && i != chars.length && chars[i] == '\\n') i++;", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t\tif (breaks == null) {", "+\t\t\t\t\t\t\tbreaks = new int[4];", "+\t\t\t\t\t\t} else if (breakCount == breaks.length) {", "+\t\t\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "+\t\t\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "+\t\t\t\t\t\t\tbreaks = newBreaks;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreaks[breakCount++] = j;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tlength = j;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b98ef431b78aeb37937a9ce063f7b65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "+\tif ((style & SWT.ARROW) != 0) return;", "-\t//getParent().updateCarbon(index);", "-\tgetParent().setTabText(index, string);", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "+\t\t}", "+\t}", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);\t", "+\tControlTabInfoRecV1 tab = new ControlTabInfoRecV1 ();", "+\ttab.version= (short) OS.kControlTabInfoVersionOne;", "+\ttab.iconSuiteID = 0;", "+\ttab.name = ptr;", "+\tOS.SetControlData (parent.handle, index+1, OS.kControlTabInfoTag, ControlTabInfoRecV1.sizeof, tab);", "+\tOS.CFRelease (ptr);"]}], "num": 32540}