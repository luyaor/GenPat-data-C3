{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c9112ef53409178b74e7233709f215b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af298304e2fc1eaa790f6c5fcf3fd0ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "eca9561f00e8f6869c3f064d2cc210213e7961a5", "commitAfterChange": "7b035d7945e49f32511c350507eda7aad65fec22", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public int getCaretPosition(int logicalOffset, int direction)", "signatureAfterChange": "\r public int getCaretPosition(int logicalOffset, int direction)", "diff": ["-\t\treturn StyledText.xInset;\r", "+\t\treturn StyledText.XINSET;\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "-\r", "+\telse\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "-\t}\t\r", "-\r", "-\tif (direction == ST.COLUMN_NEXT) {\r", "-\t\tif (isRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t// moving between segments\r", "-\t\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t\t// moving from RtoL to LtoR\r", "-\t\t\t\tint visualOffset = order[logicalOffset-1];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset];\r", "-\t\t\t}\r", "-\t\t\telse {\r", "-\t\t\t\t// moving from LtoR to RtoL\r", "-\t\t\t\tint visualOffset = order[logicalOffset-1];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\t\t\t}\r", "-\t\tsetKeyboardLanguage(logicalOffset-1);\r", "-\t\treturn caretX;\r", "+\t}\r", "+\telse\r", "+\tif (direction == ST.COLUMN_NEXT &&\r", "+\t\tisRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "+\t\tint visualOffset = order[logicalOffset-1];\r", "+\t\t// moving between segments\r", "+\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "+\t\t\t// moving from RtoL to LtoR\r", "+\t\t\tcaretX = renderPositions[visualOffset];\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\t// moving from LtoR to RtoL\r", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\r", "-\tif (direction == ST.COLUMN_PREVIOUS) {\r", "-\t\tif (isRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t// moving between segments\r", "-\t\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t\t// moving from LtoR to RtoL\r", "-\t\t\t\tint visualOffset = order[logicalOffset];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset];\r", "-\t\t\t}\r", "-\t\t\telse {\r", "-\t\t\t\t// moving from RtoL to LtoR\r", "-\t\t\t\tint visualOffset = order[logicalOffset];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\t\t\t}\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "+\telse\r", "+\tif (direction == ST.COLUMN_PREVIOUS &&\r", "+\t\tisRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "+\t\tint visualOffset = order[logicalOffset];\r", "+\t\t// moving between segments\r", "+\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "+\t\t\t// moving from LtoR to RtoL\r", "+\t\t\tcaretX = renderPositions[visualOffset];\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\t// moving from RtoL to LtoR\r", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\r", "+\telse\r", "-\tsetKeyboardLanguage(logicalOffset);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a3fd3affcc1f809697d7bfbd17c81b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "5ba9287f6caa82e9989a01a562fc97d015948ef7", "commitAfterChange": "8c259c2fdd0bffd2ea76820f5d04cd4a52c2e4a7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " int getTextPosition(int logicalOffset, int direction)", "signatureAfterChange": " int getTextPosition(int logicalOffset, int direction)", "diff": ["+", "+\tboolean isRightToLeft = isRightToLeft(logicalOffset);", "+\t\tisRightToLeft = isRightToLeft(logicalOffset);", "-\t\tif (isRightToLeft(logicalOffset)) {", "-\t\t\tcaretX = renderPositions[visualOffset];", "+\t\tif ((!isRightOriented && !isRightToLeft) || (isRightOriented && isRightToLeft)) {", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "-\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "+\t\t\tcaretX = renderPositions[visualOffset];", "-\t\tif (isRightToLeft(logicalOffset)) {", "-\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "+\t\tif ((!isRightOriented && !isRightToLeft) || (isRightOriented && isRightToLeft)) {", "+\t\t\tcaretX = renderPositions[visualOffset];", "-\t\t\tcaretX = renderPositions[visualOffset];", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "-\t\tif (isRightToLeft(logicalOffset - 1)) {", "-\t\t\t// moving from RtoL to LtoR", "-\t\t\tcaretX = renderPositions[visualOffset];", "-\t\t}", "-\t\telse {", "-\t\t\t// moving from LtoR to RtoL", "+\t\tisRightToLeft = isRightToLeft(logicalOffset - 1);", "+\t\tif ((!isRightOriented && !isRightToLeft) || (isRightOriented && isRightToLeft)) {", "-\t\t}", "+\t\t} else {", "+\t\t\tcaretX = renderPositions[visualOffset];", "+\t\t}\t\t\t\t", "-\t\tif (isRightToLeftInput(logicalOffset - 1)) {", "-\t\t\t// moving from LtoR to RtoL", "+\t\tisRightToLeft = isRightToLeft(logicalOffset - 1);", "+\t\tif ((!isRightOriented && !isRightToLeft) || (isRightOriented && isRightToLeft)) {", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "+\t\t} else {", "+\t\t\tcaretX = renderPositions[visualOffset];", "+\t\t}\t\t\t\t", "+\t}", "+\telse {", "+\t\tint visualOffset = order[logicalOffset];", "+\t\tif ((!isRightOriented && !isRightToLeft) || (isRightOriented && isRightToLeft)) {", "-\t\t\t// moving from RtoL to LtoR", "-\t}", "-\telse", "-\tif (isRightToLeft(logicalOffset)) {", "-\t\tint visualOffset = order[logicalOffset];", "-\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];", "-\t}", "-\telse {", "-\t\tcaretX = renderPositions[order[logicalOffset]];"]}], "num": 24908}