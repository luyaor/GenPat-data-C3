{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4811842ad6f958046915c688e683e961", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5416e642df8fe2ff10e876c1608041b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 49, "signatureBeforeChange": " static String convertToLf(String text)", "signatureAfterChange": "  Menu [] getMenus (Decorations shell)", "diff": ["+", "+Menu [] getMenus (Decorations shell) {", "+\tif (menus == null) return new Menu [0];", "+\tint count = 0;", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) count++;", "+\t}", "+\tint index = 0;", "+\tMenu[] result = new Menu[count];", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) {", "+\t\t\tresult[index++] = menu;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-}", "-static String convertToLf(String text) {", "-\tchar Cr = '\\r';", "-\tchar Lf = '\\n';", "-\tint length = text.length ();", "-\tif (length == 0) return text;", "-\t", "-\t/* Check for an LF or CR/LF.  Assume the rest of the string ", "-\t * is formatted that way.  This will not work if the string ", "-\t * contains mixed delimiters. */", "-\tint i = text.indexOf (Lf, 0);", "-\tif (i == -1 || i == 0) return text;", "-\tif (text.charAt (i - 1) != Cr) return text;", "-", "-\t/* The string is formatted with CR/LF.", "-\t * Create a new string with the LF line delimiter. */", "-\ti = 0;", "-\tStringBuffer result = new StringBuffer ();", "-\twhile (i < length) {", "-\t\tint j = text.indexOf (Cr, i);", "-\t\tif (j == -1) j = length;", "-\t\tString s = text.substring (i, j);", "-\t\tresult.append (s);", "-\t\ti = j + 2;", "-\t\tresult.append (Lf);", "-\t}", "-\treturn result.toString ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac015716c27db27e5419546f81c7971", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "3f33e2ee9272fba6be3a63b7b75ef498c2473100", "commitAfterChange": "b4868533def1ddff0d2225e5c0ba417b8720cc48", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " StyleItem[] reorder (StyleItem[] runs)", "signatureAfterChange": " StyleItem[] reorder (StyleItem[] runs)", "diff": ["-\tbyte[] bidiLevels = new byte[runs.length];", "-\tfor (int i=0; i<runs.length; i++) {", "+\tint length = runs.length;", "+\tif (length <= 1) return runs;", "+\tbyte[] bidiLevels = new byte[length];", "+\tfor (int i=0; i<length; i++) {", "-\tint[] log2vis = new int[runs.length];", "-\tOS.ScriptLayout(runs.length, bidiLevels, null, log2vis);", "-\tStyleItem[] result = new StyleItem[runs.length];", "-\tfor (int i=0; i<runs.length; i++) {", "+\t/*", "+\t* Feature in Windows.  If the orientation is RTL Uniscribe will", "+\t* resolve the level of line breaks to 1, this can cause the line ", "+\t* break to be reorder to the middle of the line. The fix is to set", "+\t* the level to zero to prevent it to be reordered.", "+\t*/", "+\tStyleItem lastRun = runs[length - 1];", "+\tif (lastRun.lineBreak && !lastRun.softBreak) {", "+\t\tbidiLevels[length - 1] = 0;", "+\t}", "+\tint[] log2vis = new int[length];", "+\tOS.ScriptLayout(length, bidiLevels, null, log2vis);", "+\tStyleItem[] result = new StyleItem[length];", "+\tfor (int i=0; i<length; i++) {", "-\t\tfor (int i = 0; i < (result.length - 1) / 2 ; i++) {", "+\t\tfor (int i = 0; i < (length - 1) / 2 ; i++) {", "-\t\t\tresult[i] = result[result.length - i - 2];", "-\t\t\tresult[result.length - i - 2] = tmp;", "+\t\t\tresult[i] = result[length - i - 2];", "+\t\t\tresult[length - i - 2] = tmp;"]}], "num": 43033}