{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efede267ac90b5368435278f1012376b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3bbd0ea8b113016e8ae5f38a03774f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "cd1cc037b1168f84b19a92aa831a5521ef1002b1", "commitAfterChange": "85174ac8bb4fb0238065cc23ba99cf50babde940", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tRECT oldRect = new RECT ();", "-\tOS.GetWindowRect (handle, oldRect);", "-\tint oldWidth = oldRect.right - oldRect.left;", "-\tint oldHeight = oldRect.bottom - oldRect.top;", "-\tint border = getBorderWidth ();", "-\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + (border * 2);", "-\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + (border * 2);", "-\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);", "-\tignoreResize = true;", "-\tif (redraw) OS.UpdateWindow (handle);", "-\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;", "-\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);", "-\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "-\tif (count != 0) {", "+\tif ((style & SWT.VERTICAL) != 0) {", "-\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, count - 1, rect);", "-\t\twidth = Math.max (width, rect.right);", "-\t\theight = Math.max (height, rect.bottom);", "+\t\tTBBUTTON lpButton = new TBBUTTON ();", "+\t\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, i, rect);", "+\t\t\theight = Math.max (height, rect.bottom);", "+\t\t\tOS.SendMessage (handle, OS.TB_GETBUTTON, i, lpButton);", "+\t\t\tif ((lpButton.fsStyle & OS.BTNS_SEP) == 0) {", "+\t\t\t\twidth = Math.max (width, rect.right);", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tRECT oldRect = new RECT ();", "+\t\tOS.GetWindowRect (handle, oldRect);", "+\t\tint oldWidth = oldRect.right - oldRect.left;", "+\t\tint oldHeight = oldRect.bottom - oldRect.top;", "+\t\tint border = getBorderWidth ();", "+\t\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + border * 2;", "+\t\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + border * 2;", "+\t\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\tignoreResize = true;", "+\t\tif (redraw) OS.UpdateWindow (handle);", "+\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);", "+\t\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "+\t\tif (count != 0) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, count - 1, rect);", "+\t\t\twidth = Math.max (width, rect.right);", "+\t\t\theight = Math.max (height, rect.bottom);", "+\t\t}", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);", "+\t\tif (redraw) OS.ValidateRect (handle, null);", "+\t\tignoreResize = false;", "-\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);", "-\tif (redraw) OS.ValidateRect (handle, null);", "-\tignoreResize = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9fb41a6adb759062d3e9952ebe2a238", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "0690cabb735f29fbc35f75fe533577794b17677c", "commitAfterChange": "ae9e98c8e8526c82af1f71a5f0555f17cf846db6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 0, rowWidth = 0, height = 0, rowHeight = 0;\r", "-\tRECT rect = new RECT ();\r", "-\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "-\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "-\trbBand.fMask = OS.RBBIM_IDEALSIZE | OS.RBBIM_CHILDSIZE | OS.RBBIM_STYLE;\r", "+\tint width = 0, height = 0;\r", "+\tint border = getBorderWidth ();\r", "+\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + (border * 2);\r", "+\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + (border * 2);\r", "-\tfor (int i=0; i<count; i++) {\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, i, rect);\r", "-\t\tif ((rbBand.fStyle & OS.RBBS_BREAK) != 0) {\r", "-\t\t\twidth = Math.max (width, rowWidth);\r", "-\t\t\theight += rowHeight;\r", "-\t\t\trowWidth = rowHeight = 0;\r", "+\tif (count != 0) {\r", "+\t\tignoreResize = true;\r", "+\t\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);\r", "+\t\tif (redraw) {\r", "+\t\t\tOS.UpdateWindow (handle);\t\r", "+\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "-\t\trowWidth += rbBand.cxIdeal + rect.left + rect.right + 2;\r", "-\t\trowHeight = Math.max (rowHeight, rbBand.cyMinChild + rect.top + rect.bottom);\r", "+\t\tRECT oldRect = new RECT ();\r", "+\t\tOS.GetWindowRect (handle, oldRect);\r", "+\t\tint oldWidth = oldRect.right - oldRect.left;\r", "+\t\tint oldHeight = oldRect.bottom - oldRect.top;\r", "+\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;\t\r", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tOS.SendMessage (handle, OS.RB_GETRECT, count - 1, rect);\r", "+\t\theight = Math.max (height, rect.bottom - rect.top);\r", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);\r", "+\t\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "+\t\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "+\t\trbBand.fMask = OS.RBBIM_IDEALSIZE | OS.RBBIM_STYLE;\r", "+\t\tint rowWidth = 0;\r", "+\t\tfor (int i = 0; i < count; i++) {\r", "+\t\t\tOS.SendMessage(handle, OS.RB_GETBANDINFO, i, rbBand);\r", "+\t\t\tOS.SendMessage(handle, OS.RB_GETBANDBORDERS, i, rect);\r", "+\t\t\tif ((rbBand.fStyle & OS.RBBS_BREAK) != 0) {\r", "+\t\t\t\twidth = Math.max(width, rowWidth);\r", "+\t\t\t\trowWidth = 0;\r", "+\t\t\t}\r", "+\t\t\trowWidth += rbBand.cxIdeal + rect.left + rect.right + 2;\r", "+\t\t}\r", "+\t\twidth = Math.max(width, rowWidth);\r", "+\t\t\r", "+\t\tif (redraw) {\r", "+\t\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);\r", "+\t\t\tOS.ValidateRect (handle, null);\r", "+\t\t}\t\t\r", "+\t\tignoreResize = false;\r", "-\twidth = Math.max (width, rowWidth);\r", "-\theight += rowHeight - rect.top - rect.bottom;\r", "-\tint border = getBorderWidth ();\r", "-\twidth += border * 2;\r", "+\twidth += border * 2;\t\r"]}], "num": 29998}