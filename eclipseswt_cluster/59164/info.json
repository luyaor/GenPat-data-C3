{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc8505e331092f6b24f92634cb5f2462", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71da417c87a356c2bf7b352d846f0d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857431fb0346569b270d2d64d87a0d49ee554249", "commitAfterChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean dragDetect (int button, int stateMask, int x, int y)", "signatureAfterChange": " public boolean dragDetect (int button, int stateMask, int x, int y)", "diff": ["-\tboolean dragging = dragDetect (x, y);", "-\tif (display.dragMouseUp != 0) {", "-\t\tsendMouseEvent (SWT.MouseUp, display.dragMouseUp, false);\t", "-\t\tOS.GCHandle_Free (display.dragMouseUp);", "-\t\tdisplay.dragMouseUp = 0;", "-\t}", "-\tif (dragging) return sendDragEvent (button, x, y);", "+\tboolean dragging = dragDetect (x, y, false);", "+\tif (dragging) return sendDragEvent (button, stateMask, x, y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46c4ef5a06119fac6d4bda062ba8f53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857431fb0346569b270d2d64d87a0d49ee554249", "commitAfterChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["-\tboolean dragging = false;", "-\t\t\tdragging = dragDetect (x, y);", "+\t\t\tdisplay.dragMouseDown = OS.GCHandle_Alloc (e);", "+\t\t\tdragDetect (x, y, true);", "+\t", "-\t", "-\tif (dragging) {", "-\t\tsendDragEvent (e);", "-\t}", "-\t", "-\tif (display.dragMouseUp != 0) {", "-\t\tsendMouseEvent (SWT.MouseUp, display.dragMouseUp, false);\t", "-\t\tOS.GCHandle_Free (display.dragMouseUp);", "-\t\tdisplay.dragMouseUp = 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e332dea54ff5066229a36d16448922", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e19b8929298db4194771a475b4b9ef56a8238374", "commitAfterChange": "ca0c5209be7fe694c5578ad160491b05c77a1894", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["+\t", "+\tboolean dragging = false;", "+\tif (OS.MouseButtonEventArgs_ChangedButton (e) == 0) {", "+\t\tif ((state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect)) {", "+\t\t\tint point = OS.MouseEventArgs_GetPosition (e, handle);", "+\t\t\tdouble x = OS.Point_X (point);", "+\t\t\tdouble y = OS.Point_Y (point);", "+\t\t\tOS.GCHandle_Free (point);", "+\t\t\tdragging = dragDetect (x, y);", "+\t\t}", "+\t}", "+\t", "+\tif (dragging) {", "+\t\tsendDragEvent (e);", "+\t}", "+\t", "+\tif (display.dragMouseUp != 0) {", "+\t\tsendMouseEvent (SWT.MouseUp, display.dragMouseUp, false);\t", "+\t\tOS.GCHandle_Free (display.dragMouseUp);", "+\t\tdisplay.dragMouseUp = 0;", "+\t}"]}], "num": 59164}