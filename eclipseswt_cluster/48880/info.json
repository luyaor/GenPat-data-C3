{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8a5012e3a8aa3fba8972b79974015a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98cd3c2c79e2e1575958fe4466db7d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "d0c3def3c272326b223c16d9ee781437fa47dfea", "commitAfterChange": "44f4d2e58cfc39923e1bdf065af332dedb6d340a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\tshell.setData(BROWSER_COCOA_BUTTON, \"true\");", "+\t\t\tshell.setData(BROWSER_COCOA_BUTTON, \"true\"); //$NON-NLS-1$", "-\t* Note that when reparent the browser is reparented, the web view has to", "-\t* be reparent by hand by hooking kEventControlOwningWindowChanged.", "+\t* Note that when the browser is reparented, the web view has to", "+\t* be reparented by hand by hooking kEventControlOwningWindowChanged.", "+\t\t\t\tcase SWT.Activate: {", "+\t\t\t\t\tCocoa.objc_msgSend(Cocoa.objc_msgSend(Cocoa.HIWebViewGetWebView(webViewHandle), Cocoa.S_window), Cocoa.S_makeKeyWindow);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.FocusIn: {", "+\t\t\t\t\tOS.SetKeyboardFocus(OS.GetControlOwner(browser.handle), webViewHandle, (short)-1);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\tbrowser.addListener(SWT.FocusIn, listener);", "+\tbrowser.addListener(SWT.KeyDown, listener); /* needed to make browser traversable */", "+\tbrowser.getShell().addListener(SWT.Activate, listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1390dbc5030fd8fc53ebea116c87a391", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/carbon/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "691f406eeea3d9b240a090b56dfcf7531d34f7b9", "commitAfterChange": "cade21b4efe3c8203481589250b84fcb7216e7cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void handleFocus ()", "signatureAfterChange": "  void handleFocus ()", "diff": ["-\t// TODO", "+\tif (hasFocus) return;", "+\thasFocus = true;", "+\t((Mozilla)browser.webBrowser).Activate ();", "+\tbrowser.setFocus ();", "+\tListener listener = new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\tif (event.widget == browser) return;", "+\t\t\t((Mozilla)browser.webBrowser).Deactivate ();", "+\t\t\thasFocus = false;", "+\t\t\tbrowser.getDisplay ().removeFilter (SWT.FocusIn, this);", "+\t\t\tbrowser.getShell ().removeListener (SWT.Deactivate, this);", "+\t\t}", "+\t", "+\t};", "+\tbrowser.getDisplay ().addFilter (SWT.FocusIn, listener);", "+\tbrowser.getShell ().addListener (SWT.Deactivate, listener);"]}], "num": 48880}