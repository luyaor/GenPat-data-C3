{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "968c605d48322a120228ac62126cd877", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fedb0b85c5fadae726a9f0d304ac0acd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "22f88e975bc6bad0418b74e15a41c2b096697df8", "commitAfterChange": "0bb7f6c8c4bfb7f31f2639fdcb19ab84654502dc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t\t\t\t} else {", "+\t\t\t\t\tFont font = getFont ();", "+\t\t\t\t\tFontInfo info = new FontInfo ();", "+\t\t\t\t\tOS.FetchFontInfo (font.id, font.size, font.style, info);", "+\t\t\t\t\tint fontHeight = info.ascent + info.descent;", "+\t\t\t\t\theight = fontHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b0b4c0bac469925eede283f7682b74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "a0a914aabdd6c9ea4ba2f1675deb8ba2ef639121", "commitAfterChange": "2fb2c5cc4e74544222c9d75539a0e1b05af67819", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tint [] ptr = new int [1];", "-\t\t\tint [] actualSize = new int [1];", "-\t\t\tOS.GetControlData (handle, (short)0 , OS.kControlStaticTextCFStringTag, 4, ptr, actualSize);", "-\t\t\tif (ptr [0] != 0) {", "-\t\t\t\torg.eclipse.swt.internal.carbon.Point bounds = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\tshort [] baseLine = new short [1];", "-\t\t\t\tboolean wrap = false;", "-\t\t\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "-\t\t\t\t\twrap = true;", "-\t\t\t\t\tbounds.h = (short) wHint;", "+\t\t\twidth = DEFAULT_WIDTH;", "+\t\t\theight = DEFAULT_HEIGHT;", "+\t\t\tif (text.length () != 0) {", "+\t\t\t\tint [] ptr = new int [1];", "+\t\t\t\tint [] actualSize = new int [1];", "+\t\t\t\tOS.GetControlData (handle, (short)0 , OS.kControlStaticTextCFStringTag, 4, ptr, actualSize);", "+\t\t\t\tif (ptr [0] != 0) {", "+\t\t\t\t\torg.eclipse.swt.internal.carbon.Point bounds = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\t\t\tshort [] baseLine = new short [1];", "+\t\t\t\t\tboolean wrap = false;", "+\t\t\t\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "+\t\t\t\t\t\twrap = true;", "+\t\t\t\t\t\tbounds.h = (short) wHint;", "+\t\t\t\t\t}", "+\t\t\t\t\t// NEEDS work - only works for default font", "+\t\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short)OS.kThemeSystemFont, OS.kThemeStateActive, wrap, bounds, baseLine);", "+\t\t\t\t\twidth = bounds.h;", "+\t\t\t\t\theight = bounds.v;", "+\t\t\t\t\tOS.CFRelease (ptr [0]);", "-\t\t\t\t// NEEDS work - only works for default font", "-\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short)OS.kThemeSystemFont, OS.kThemeStateActive, wrap, bounds, baseLine);", "-\t\t\t\twidth = bounds.h;", "-\t\t\t\theight = bounds.v;", "-\t\t\t\tOS.CFRelease (ptr [0]);", "-\t\t\t\twidth = DEFAULT_WIDTH;", "-\t\t\t\theight = DEFAULT_HEIGHT;", "+\t\t\t\tFont font = getFont ();", "+\t\t\t\tFontInfo info = new FontInfo ();", "+\t\t\t\tOS.FetchFontInfo(font.id, font.size, font.style, info);", "+\t\t\t\theight = info.ascent + info.descent;"]}], "num": 55648}