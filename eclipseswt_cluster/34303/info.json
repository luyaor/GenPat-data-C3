{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "706fe6b2fe4cd88ed8cc0b7ea3f3ad7c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e9d0fa7d13694e08b75af276f61d77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "7e81b84a2c12e711d885a4cd4a47a7eab239d8f4", "commitAfterChange": "edcf7c0e3595e65e30021cf83de1448eadf495c1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 21, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.SHADOW_NONE) != 0) return null;", "-\tRECT rect = new RECT ();", "-\tint lineWidth = OS.GetSystemMetrics (OS.SM_CXBORDER);", "-\tint flags = OS.EDGE_ETCHED;", "-\tif ((style & SWT.SHADOW_IN) != 0) flags = OS.EDGE_SUNKEN;", "-\tif ((style & SWT.HORIZONTAL) != 0) {", "-\t\tint bottom = struct.top + Math.max (lineWidth * 2, (struct.bottom - struct.top) / 2);", "-\t\tOS.SetRect (rect, struct.left, struct.top, struct.right, bottom);", "-\t\tOS.DrawEdge (struct.hDC, rect, flags, OS.BF_BOTTOM);", "+\tif ((style & SWT.SEPARATOR) != 0) {", "+\t\tif ((style & SWT.SHADOW_NONE) != 0) return null;", "+\t\tRECT rect = new RECT ();", "+\t\tint lineWidth = OS.GetSystemMetrics (OS.SM_CXBORDER);", "+\t\tint flags = (style & SWT.SHADOW_IN) != 0 ? OS.EDGE_SUNKEN : OS.EDGE_ETCHED;", "+\t\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\t\tint bottom = struct.top + Math.max (lineWidth * 2, (struct.bottom - struct.top) / 2);", "+\t\t\tOS.SetRect (rect, struct.left, struct.top, struct.right, bottom);", "+\t\t\tOS.DrawEdge (struct.hDC, rect, flags, OS.BF_BOTTOM);", "+\t\t} else {", "+\t\t\tint right = struct.left + Math.max (lineWidth * 2, (struct.right - struct.left) / 2);", "+\t\t\tOS.SetRect (rect, struct.left, struct.top, right, struct.bottom);", "+\t\t\tOS.DrawEdge (struct.hDC, rect, flags, OS.BF_RIGHT);", "+\t\t}", "-\t\tint right = struct.left + Math.max (lineWidth * 2, (struct.right - struct.left) / 2);", "-\t\tOS.SetRect (rect, struct.left, struct.top, right, struct.bottom);", "-\t\tOS.DrawEdge (struct.hDC, rect, flags, OS.BF_RIGHT);", "+\t\tif (image != null) {", "+\t\t\tGCData data = new GCData();", "+\t\t\tdata.device = display;", "+\t\t\tGC gc = GC.win32_new (struct.hDC, data);", "+\t\t\tint width = struct.right - struct.left;", "+\t\t\tint height = struct.bottom - struct.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tint x = 0, y = 0;", "+\t\t\t\tif ((style & SWT.CENTER) != 0) {", "+\t\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\t\tx = Math.max (0, (width - rect.width) / 2);", "+\t\t\t\t} else {", "+\t\t\t\t\tif ((style & SWT.RIGHT) != 0) {", "+\t\t\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\t\t\tx = width - rect.width;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tImage drawnImage = getEnabled () ? image : new Image (display, image, SWT.IMAGE_DISABLE);", "+\t\t\t\tgc.drawImage (drawnImage, x, y);", "+\t\t\t\tif (drawnImage != image) drawnImage.dispose ();", "+\t\t\t}", "+\t\t\tgc.dispose ();", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba17caf472fe95ef33d26d1c186e580a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "1f898d2e9733961742e6d789a21fee16deeb7844", "commitAfterChange": "3da6a13dd6d49dcf37373141989f34303810102c", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  LRESULT wmPaint (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmPaint (int hwnd, int wParam, int lParam)", "diff": ["-", "-\t/* Get the damage */", "+\t", "+\t/* Issue a paint event */", "-\t\tresult = callWindowProc (hwnd, OS.WM_PAINT, wParam, lParam);", "-\t\tOS.InvalidateRect (hwnd, rect, false);", "-\t} else {", "-\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tOS.GetUpdateRgn (hwnd, rgn, false);", "-\t\tOS.InvalidateRgn (hwnd, rgn, false);", "+\t\tOS.InvalidateRect (hwnd, rect, false);", "-\t\tOS.DeleteObject (rgn);", "-\t}", "-\t", "-\t/* Send the paint event */", "-\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "-\tGCData data = new GCData ();", "-\tdata.ps = ps;", "-\tdata.hwnd = hwnd;", "-\tGC gc = new_GC (data);", "-\tif (gc != null) {", "-\t\tint width = ps.right - ps.left;", "-\t\tint height = ps.bottom - ps.top;", "-\t\tif (width != 0 && height != 0) {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.gc = gc;", "-\t\t\tevent.x = ps.left;", "-\t\t\tevent.y = ps.top;", "-\t\t\tevent.width = width;", "-\t\t\tevent.height = height;", "-\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t// widget could be disposed at this point", "-\t\t\tevent.gc = null;", "+\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\tGCData data = new GCData ();", "+\t\tdata.ps = ps;", "+\t\tdata.hwnd = hwnd;", "+\t\tGC gc = new_GC (data);", "+\t\tif (gc != null) {", "+\t\t\tint width = ps.right - ps.left;", "+\t\t\tint height = ps.bottom - ps.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t}", "+\t\t\tgc.dispose ();", "-\t\tgc.dispose ();", "+\t} else {", "+\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\tOS.GetUpdateRgn (hwnd, rgn, false);", "+\t\tresult = callWindowProc (hwnd, OS.WM_PAINT, wParam, lParam);", "+\t\tGCData data = new GCData ();", "+\t\tdata.hwnd = hwnd;", "+\t\tGC gc = new_GC (data);", "+\t\tif (gc != null) {", "+\t\t\tOS.HideCaret (hwnd);", "+\t\t\tRECT rect = new RECT();", "+\t\t\tOS.GetRgnBox (rgn, rect);", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tint height = rect.bottom - rect.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tint hDC = gc.handle;", "+\t\t\t\tOS.SelectClipRgn (hDC, rgn);", "+\t\t\t\tOS.SetMetaRgn (hDC);", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = rect.left;", "+\t\t\t\tevent.y = rect.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t}", "+\t\t\tgc.dispose ();", "+\t\t\tOS.ShowCaret (hwnd);", "+\t\t}", "+\t\tOS.DeleteObject (rgn);"]}], "num": 34303}