{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e37f342618199a985d0ed788750f888d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88ed9201ee17fc94038e0392c862b4df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "28f166fa20c7ba5aa3886efdb6cf282aa0351b06", "commitAfterChange": "7fc7871e24ec3be7fae077dad68fc11eac2d3876", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r Point layout (int width, boolean resize)", "signatureAfterChange": "\r Point layout (int width, boolean resize)", "diff": ["-}\r", "-\t\tif (row.size() > 0) {\r", "+\t\tint count = row.size();\r", "+\t\tif (count > 0) {\r", "+\t\t\tint available = width - count * CoolItem.MINIMUM_WIDTH;\r", "+\t\t\tif (available < 0) available = count * CoolItem.MINIMUM_WIDTH;\r", "-\t\t\tfor (int j = 0; j < row.size(); j++) {\r", "+\t\t\tfor (int j = 0; j < count; j++) {\r", "-\t\t\t\tint childWidth = child.getSize().x;\r", "-\t\t\t\tif (resize) child.setBounds(x, y, childWidth, rowHeight);\r", "-\t\t\t\tx += childWidth;\r", "+\t\t\t\tint newWidth = available + CoolItem.MINIMUM_WIDTH;\r", "+\t\t\t\tif (j + 1 < count) {\r", "+\t\t\t\t\tnewWidth = Math.min(newWidth, child.requestedWidth);\r", "+\t\t\t\t\tavailable -= (newWidth - CoolItem.MINIMUM_WIDTH);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (resize) child.setBounds(x, y, newWidth, rowHeight);\r", "+\t\t\t\tx += resize ? newWidth : child.requestedWidth;\r", "-\t\t\tif (resize) adjustItemWidths(row, width);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e0abeea5f04809519905e7814f296c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "9fedd0db5879e16f4217a567123278513c1d3514", "commitAfterChange": "ad54d6ff2f098b77d6355da5d3e4463a8c93f824", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r Point layout (int widthHint)", "signatureAfterChange": "\r Point layout (int widthHint)", "diff": ["-\t\ty += ROW_SPACING;\r", "-\t\tint x = 0, rowHeight = getRowHeight(i);\r", "-\t\tfor (int j = 0; j < row.size(); j++) {\r", "-\t\t\tCoolItem child = (CoolItem) row.elementAt(j);\r", "-\t\t\tint childWidth = child.getSize().x;\r", "-\t\t\tif (resize) child.setBounds(x, y, childWidth, rowHeight);\r", "-\t\t\tx += childWidth;\r", "-\t\t}\r", "-\t\tmaxWidth = Math.max(maxWidth, x);\r", "-\t\tif (resize) adjustItemWidths(row, widthHint);\r", "-\t\ty += rowHeight;\t\r", "+\t\tif (row.size() > 0) {\r", "+\t\t\ty += ROW_SPACING;\r", "+\t\t\tint x = 0, rowHeight = getRowHeight(i);\r", "+\t\t\tfor (int j = 0; j < row.size(); j++) {\r", "+\t\t\t\tCoolItem child = (CoolItem) row.elementAt(j);\r", "+\t\t\t\tint childWidth = child.getSize().x;\r", "+\t\t\t\tif (resize) child.setBounds(x, y, childWidth, rowHeight);\r", "+\t\t\t\tx += childWidth;\r", "+\t\t\t}\r", "+\t\t\tmaxWidth = Math.max(maxWidth, x);\r", "+\t\t\tif (resize) adjustItemWidths(row, widthHint);\r", "+\t\t\ty += rowHeight;\r", "+\t\t}\t\r"]}], "num": 55097}