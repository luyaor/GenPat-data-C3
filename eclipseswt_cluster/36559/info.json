{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49d632b192e8d3b46ee8edb5f4c78582", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f113930f3fad9c5438599e15225f43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 291, "signatureBeforeChange": " boolean showLocation(int x, int line)", "signatureAfterChange": " boolean showLocation(Point point)", "diff": ["-boolean showLocation(int x, int line) {", "-\tint clientAreaWidth = getClientArea().width - leftMargin;", "+boolean showLocation(Point point) {", "+\tRectangle clientArea = getClientArea(); ", "+\tint clientAreaWidth = clientArea.width - leftMargin;", "-\tif (x < leftMargin) {", "+\tif (point.x < leftMargin) {", "-\t\tx = Math.max(horizontalScrollOffset * -1, x - horizontalIncrement);\t", "-\t\tscrolled = scrollHorizontalBar(x);", "-\t} else if (x >= clientAreaWidth) {", "+\t\tpoint.x = Math.max(horizontalScrollOffset * -1, point.x - horizontalIncrement);\t", "+\t\tscrolled = scrollHorizontalBar(point.x);", "+\t} else if (point.x >= clientAreaWidth) {", "-\t\tx = Math.min(lineCache.getWidth() - horizontalScrollOffset, x + horizontalIncrement);", "-\t\tscrolled = scrollHorizontalBar(x - clientAreaWidth);", "+\t\tpoint.x = Math.min(lineCache.getWidth() - horizontalScrollOffset, point.x + horizontalIncrement);", "+\t\tscrolled = scrollHorizontalBar(point.x - clientAreaWidth);", "-\tint verticalIncrement = getVerticalIncrement();", "-\tif (line < topIndex) {", "-\t\tscrolled = setVerticalScrollOffset(line * verticalIncrement, true);", "-\t} else if (line > getBottomIndex()) {", "-\t\tscrolled = setVerticalScrollOffset((line + 1) * verticalIncrement - getClientArea().height, true);", "+\tif (point.y < topMargin) {", "+\t\tscrolled = setVerticalScrollOffset(point.y + verticalScrollOffset, true);", "+\t} else if (point.y >= clientArea.height - bottomMargin) {", "+\t\t//TODO -lineHeight isn't right", "+\t\tint y = point.y + verticalScrollOffset - clientArea.height - lineHeight;", "+\t\tscrolled = setVerticalScrollOffset(y, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99de08a4a5d27aeaa98084f508926ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 434, "methodNumberAfterChange": 304, "signatureBeforeChange": " boolean showLocation(int x, int line)", "signatureAfterChange": " boolean showLocation(Point point)", "diff": ["-boolean showLocation(int x, int line) {", "-\tint clientAreaWidth = getClientArea().width - leftMargin;", "-\tint verticalIncrement = getVerticalIncrement();", "+boolean showLocation(Point point) {", "+\tRectangle clientArea = getClientArea(); ", "+\tint clientAreaWidth = clientArea.width - leftMargin;", "-\tboolean scrolled = false;\t\t", "-\t", "-\tif (x < leftMargin) {", "+\tboolean scrolled = false;", "+\tif (point.x < leftMargin) {", "-\t\tx = Math.max(horizontalScrollOffset * -1, x - horizontalIncrement);\t", "-\t\tscrolled = scrollHorizontalBar(x);", "-\t}", "-\telse ", "-\tif (x >= clientAreaWidth) {", "+\t\tpoint.x = Math.max(-horizontalScrollOffset, point.x - horizontalIncrement);\t", "+\t\tscrolled = scrollHorizontal(point.x, true);", "+\t} else if (point.x >= clientAreaWidth) {", "-\t\tx = Math.min(lineCache.getWidth() - horizontalScrollOffset, x + horizontalIncrement);", "-\t\tscrolled = scrollHorizontalBar(x - clientAreaWidth);", "+\t\tpoint.x = Math.min(renderer.getWidth() - horizontalScrollOffset, point.x + horizontalIncrement);", "+\t\tscrolled = scrollHorizontal(point.x - clientAreaWidth, true);", "-\tif (line < topIndex) {", "-\t\tscrolled = setVerticalScrollOffset(line * verticalIncrement, true);", "-\t}", "-\telse", "-\tif (line > getBottomIndex()) {", "-\t\tscrolled = setVerticalScrollOffset((line + 1) * verticalIncrement - getClientArea().height, true);", "+\tif (point.y < topMargin) {", "+\t\tscrolled = scrollVertical(point.y - topMargin, true);", "+\t} else if (point.y >= clientArea.height - bottomMargin) {", "+\t\tscrolled = scrollVertical(point.y - clientArea.height + bottomMargin, true);"]}], "num": 36559}