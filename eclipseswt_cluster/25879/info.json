{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cd1a4044b9929e3c42c0c2e2d689260", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c58981272f2a183198d5d971404809", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "613386a136aed7f7be85acd46a7cab744bbae94d", "commitAfterChange": "e144c0287be1ac0d08cd8310d65398d20b566a1f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r void initializeWidgets()", "signatureAfterChange": "\r void initializeWidgets ()", "diff": ["-void initializeWidgets() {\r", "-\tCombo characterSetCombo = getCharacterSetCombo();\r", "-\tDisplay display = getDialogShell().getDisplay();\r", "-\tFontData initialFontData = getFontData();\r", "-\tFont initialFont;\r", "+void initializeWidgets () {\r", "+\tfinal Display display = shell.getDisplay ();\r", "-\taddFonts(display.getFontList(null, false));\t\t// get all fonts availabe on the current display\r", "-\taddFonts(display.getFontList(null, true));\r", "-\tsetItemsSorted(characterSetCombo, getFonts());\r", "+\tshowBusyWhile (display, new Runnable () {\r", "+\t\tpublic void run () {\r", "+\t\t\taddFonts (display.getFontList (null, false));\t\t// get all fonts availabe on the current display\r", "+\t\t\taddFonts (display.getFontList (null, true));\r", "+\t\t}\r", "+\t});\r", "+\t\r", "+\tsetItemsSorted (charSetCombo, getFonts ());\r", "-\t\tinitialFont = new Font(display, initialFontData);\t// verify that the initial font data is a valid font\r", "-\t\tsetFontCombos(initialFont.getFontData()[0]);\r", "-\t\tinitialFont.dispose();\r", "-\t\tupdateSample();\r", "+\t\tFont initialFont = new Font (display, initialFontData);\t// verify that the initial font data is a valid font\r", "+\t\tinitialFontData = null;\r", "+\t\tignoreEvents = true;\r", "+\t\tsetFontCombos (initialFont.getFontData ()[0]);\r", "+\t\tignoreEvents = false;\r", "+\t\tinitialFont.dispose ();\r", "+\t\tupdateSample ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fc71581aa8d7520c019d3baa851fd0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "1c620522c51a270f40c2d23df3c326f48275d8bd", "commitAfterChange": "58c80ff0565eaf7cdcac1e8ac1379b16f9b58992", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 25, "signatureBeforeChange": " void initializeWidgets ()", "signatureAfterChange": " void initFonts ()", "diff": ["-void initializeWidgets () {", "+void initFonts () {", "-\taddFonts (display.getFontList (null, false));\t\t// get all fonts availabe on the current display", "+\t// get all fonts available on the current display", "+\taddFonts (display.getFontList (null, false));", "-\tsetItemsSorted (charSetCombo, getFonts ());", "+\tsetItemsSorted (charSetList, getFonts ());", "-\t\tFont font = new Font (display, fontData);\t// verify that the initial font data is a valid font", "-\t\tignoreEvents = true;", "-\t\tsetFontCombos (font.getFontData ()[0]);", "-\t\tignoreEvents = false;", "+\t\t// verify that the initial font data is a valid font", "+\t\tFont font = new Font (display, fontData);", "+\t\tfontData = font.getFontData ();", "+\t\tcurrentFontData = fontData [0];", "+\t} else {", "+\t\tfontData = display.textFont.getFontData ();", "+\t\tcurrentFontData = fontData [0];", "-\tupdateSampleFont ();", "-\tupdateSampleColor ();"]}], "num": 25879}