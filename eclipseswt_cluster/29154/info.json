{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f66d9c7a719b19935f93939edf93e067", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158fd944f990f77233a00d6a696fa6c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 66, "signatureBeforeChange": "  void setInputState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setKeyState (Event event, MacEvent mEvent)", "diff": ["-", "-void setInputState (Event event, MacEvent mEvent) {", "-\tevent.stateMask= mEvent.getStateMask();", "-\tswitch (event.type) {", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.Traverse: {", "-\t\t\tif (event.keyCode != 0 || event.character != 0) return;", "-\t\t\tint modifiers = mEvent.getModifiers();", "-\t\t\tint fLastModifiers = getDisplay().fLastModifiers;", "-\t\t\tif ((modifiers & OS.shiftKey) != 0 && (fLastModifiers & OS.shiftKey) == 0) {", "-\t\t\t\tevent.stateMask &= ~SWT.SHIFT;", "-\t\t\t\tevent.keyCode = SWT.SHIFT;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif ((modifiers & OS.controlKey) != 0 && (fLastModifiers & OS.controlKey) == 0) {", "-\t\t\t\tevent.stateMask &= ~SWT.CONTROL;", "-\t\t\t\tevent.keyCode = SWT.CONTROL;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif ((modifiers & OS.cmdKey) != 0 && (fLastModifiers & OS.cmdKey) == 0) {", "-\t\t\t\tevent.stateMask &= ~SWT.COMMAND;", "-\t\t\t\tevent.keyCode = SWT.COMMAND;", "-\t\t\t\treturn;", "-\t\t\t}\t", "-\t\t\tif ((modifiers & OS.optionKey) != 0 && (fLastModifiers & OS.optionKey) == 0) {", "-\t\t\t\tevent.stateMask &= ~SWT.ALT;", "-\t\t\t\tevent.keyCode = SWT.ALT;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.KeyUp: {", "-\t\t\tif (event.keyCode != 0 || event.character != 0) return;", "-\t\t\tint modifiers = mEvent.getModifiers();", "-\t\t\tint fLastModifiers = getDisplay().fLastModifiers;", "-\t\t\tif ((modifiers & OS.shiftKey) == 0 && (fLastModifiers & OS.shiftKey) != 0) {", "-\t\t\t\tevent.stateMask |= SWT.SHIFT;", "-\t\t\t\tevent.keyCode = SWT.SHIFT;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif ((modifiers & OS.controlKey) == 0 && (fLastModifiers & OS.controlKey) != 0) {", "-\t\t\t\tevent.stateMask |= SWT.CONTROL;", "-\t\t\t\tevent.keyCode = SWT.CONTROL;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif ((modifiers & OS.cmdKey) == 0 && (fLastModifiers & OS.cmdKey) != 0) {", "-\t\t\t\tevent.stateMask |= SWT.COMMAND;", "-\t\t\t\tevent.keyCode = SWT.COMMAND;", "-\t\t\t\treturn;", "-\t\t\t}\t", "-\t\t\tif ((modifiers & OS.optionKey) != 0 && (fLastModifiers & OS.optionKey) == 0) {", "-\t\t\t\tevent.stateMask |= SWT.ALT;", "-\t\t\t\tevent.keyCode = SWT.ALT;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-}", "+*/", "+void setKeyState (Event event, MacEvent mEvent) {", "+\tint kc= Display.translateKey(mEvent.getKeyCode());", "+\tif (kc != 0) {", "+\t\tevent.keyCode = kc;", "+\t} else {", "+\t\t//event.keyCode = 0;", "+\t\tevent.character = (char) mEvent.getMacCharCodes();", "+\t}\t", "+\t// AW setInputState (event, mEvent);", "+\tevent.stateMask= mEvent.getStateMask();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5697fae86ca0b56105429551ac8b4877", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "79227b5a49c00b963ad602edd42ff8b19e607168", "commitAfterChange": "2e59efd73e90759ed48636b0f81f17f1c8202cfa", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 98, "signatureBeforeChange": "\r byte [] sendKeyEvent (int type, XKeyEvent xEvent)", "signatureAfterChange": "\r void sendKeyEvent (int type, XKeyEvent xEvent)", "diff": ["-byte [] sendKeyEvent (int type, XKeyEvent xEvent) {\r", "-\t\r", "-\t/* Look up the keysym and character(s) */\r", "-\tbyte [] buffer;\r", "-\tboolean isVirtual = false;\r", "-\tint [] keysym = new int [1];\r", "-\tif (xEvent.keycode != 0) {\r", "-\t\tbuffer = new byte [1];\r", "-\t\tisVirtual = OS.XLookupString (xEvent, buffer, buffer.length, keysym, null) == 0;\r", "-\t} else {\r", "-\t\t/*\r", "-\t\t* Bug in Motif. On Linux only, XmImMbLookupString() does not return \r", "-\t\t* XBufferOverflow as the status if the buffer is too small. The fix is\r", "-\t\t* to pass a bigger buffer.\r", "-\t\t*/\r", "-\t\tbuffer = new byte [512];\r", "-\t\tint [] status = new int [1];\r", "-\t\tint size = OS.XmImMbLookupString (handle, xEvent, buffer, buffer.length, keysym, status);\r", "-\t\tif (status [0] == OS.XBufferOverflow) {\r", "-\t\t\tbuffer = new byte [size];\r", "-\t\t\tsize = OS.XmImMbLookupString (handle, xEvent, buffer, size, keysym, status);\r", "-\t\t}\r", "-\t\tif (size == 0) return null;\r", "-\t}\r", "-\r", "-\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not\r", "-\t* translated correctly by XLookupString().  They are mapped\r", "-\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to\r", "-\t* look for these values explicitly and correct them.\r", "-\tif (OS.IsSunOS) {\r", "-\t\tif ((keysym [0] == 0x1005FF10) || (keysym [0] == 0x1005FF11)) {\r", "-\t\t\tif (keysym [0] == 0x1005FF10) keysym [0] = OS.XK_F11;\r", "-\t\t\tif (keysym [0] == 0x1005FF11) keysym [0] = OS.XK_F12;\r", "-\t\t}\r", "-\t/*\r", "-\t* Bug in MOTIF.  On Solaris only, their is garbage in the\r", "-\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms\r", "-\t* must be 16-bits to fit into a Character, mask away the\r", "-\t* high 16-bits on all platforms.\r", "-\t*/\r", "-\tkeysym [0] &= 0xFFFF;\r", "-\r", "-\t\tif (isVirtual) event.keyCode = Display.translateKey (keysym [0]);\r", "-\t\tif ((xEvent.state & OS.Mod1Mask) != 0) event.stateMask |= SWT.ALT;\r", "-\t\tif ((xEvent.state & OS.ShiftMask) != 0) event.stateMask |= SWT.SHIFT;\r", "-\t\tif ((xEvent.state & OS.ControlMask) != 0) event.stateMask |= SWT.CONTROL;\r", "-\t\tif ((xEvent.state & OS.Button1Mask) != 0) event.stateMask |= SWT.BUTTON1;\r", "-\t\tif ((xEvent.state & OS.Button2Mask) != 0) event.stateMask |= SWT.BUTTON2;\r", "-\t\tif ((xEvent.state & OS.Button3Mask) != 0) event.stateMask |= SWT.BUTTON3;\r", "-\t\r", "+void sendKeyEvent (int type, XKeyEvent xEvent) {\r", "+\tEvent event = new Event ();\r", "+\tevent.time = xEvent.time;\r", "+\tsetKeyState (event, xEvent);\r", "+\tpostEvent (type, event);\r", "+}\r"]}], "num": 29154}