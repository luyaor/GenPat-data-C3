{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3f1ec69adad2d9e4f535919982aa01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f72fc6783f9d11509c599c823e6a1aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "1cafb9b13b36075eb1d31bd71ad3febbf37de5b5", "commitAfterChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 196, "signatureBeforeChange": " void handleCompositionHittest (Event event)", "signatureAfterChange": " void handleCompositionHittest (Event event)", "diff": ["-\tint offset = getOffsetAtPoint(event.x, event.y, trailing, true);", "-\tif (offset != -1) {", "-\t\tif (compositionStart <= offset && offset < compositionStart + compositionLength) {", "-\t\t\tevent.hitTest = SWT.HITTEST_INSIDE_COMPOSITION;", "-\t\t\tevent.index = offset - compositionStart;", "-\t\t} else {", "-\t\t\tevent.hitTest = SWT.HITTEST_INSIDE_TEXT;", "-\t\t\tevent.index = offset;", "-\t\t}", "-\t\tevent.trailing = trailing[0];", "-\t} else {", "-\t\tevent.hitTest = SWT.HITTEST_OUTSIDE_TEXT;", "-\t}", "+\tevent.index = getOffsetAtPoint(event.x, event.y, trailing, true);", "+\tevent.count = trailing[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3065cfdcf9ba754976e03b81264deb68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "a468c687dcba880c146bec5dd5e891061d1d4404", "commitAfterChange": "f0a158d3a988994d1a2e2fe59dae1b7f4644e4a3", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " void setInputState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setInputState (Event event, MacEvent mEvent)", "diff": ["-\t", "-\tevent.stateMask= getDisplay().fMouseButtonState;", "-\t", "-\tint modifiers= mEvent.getModifiers();", "-\t", "-\tif ((modifiers & OS.shiftKey) != 0)", "-\t\tevent.stateMask |= SWT.SHIFT;", "-\t\t", "-\tif ((modifiers & OS.controlKey) != 0)", "-\t\tevent.stateMask |= SWT.CONTROL;", "-\t\t", "-\tif ((modifiers & OS.cmdKey) != 0) {", "-\t\t// if the Command modifier is pressed we report the Option modifier as 'ALT'", "-\t\tif ((modifiers & OS.optionKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t} else {", "-\t\t// we don't report the option modifier as 'ALT'", "-\t}", "-\t", "-\t/*", "-\tif (false) {", "-\t\t// map option modifier to ALT modifier", "-\t\tif ((modifiers & OS.optionKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t} else {", "-\t\t// map control modifier to ALT modifier", "-\t\tif ((modifiers & OS.controlKey) != 0)", "-\t\t\tevent.stateMask |= SWT.ALT;", "-\t}", "-\t*/", "+\tevent.stateMask= mEvent.getStateMask();"]}], "num": 32614}