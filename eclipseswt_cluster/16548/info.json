{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "879cb252f3f01cac08008e79a50b71a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a2e41fda9792b69cb5f5c24e770292", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "9c2d8eacbf826b8337d794c1104e7d0a00923c56", "commitAfterChange": "7ac71e5e8617289c583802351980024c5ff54468", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  static String getTypeSignature(Field field)", "signatureAfterChange": "  static String getTypeSignature(Class clazz)", "diff": ["-static String getTypeSignature(Field field) {", "-\tClass clazz = field.getType();", "-\treturn getTypeSignature(clazz);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc242bad9a1e598eda526ab254c7d66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common_j2me/org/eclipse/swt/internal/Compatibility.java", "commitBeforeChange": "8c81baad0f9a6e597909adf00ffe50786337ee47", "commitAfterChange": "d9d35d1dbc4ee7bdceb9b30c2314c53468f5e371", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public static String getMessage(String key)", "signatureAfterChange": " public static String getMessage(String key)", "diff": ["-\tif (key.equals(\"SWT_Character_set\")) return \"Character set\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Color\")) return \"Color\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_FontSet\")) return \"Font Set\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_NewFont\")) return \"New Font\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Remove\")) return \"Remove\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Up\")) return \"Up\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Down\")) return \"Down\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Close\")) return \"Close\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Minimize\")) return \"Minimize\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Maximize\")) return \"Maximize\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_Restore\")) return \"Restore\"; //$NON-NLS-1$", "+\tif (key.equals(\"SWT_ShowList\")) return \"Show List\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ce6f6f73691af382ba2d77ea124277", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "5ab4bbd2b2a659e828a0a23d83a478e16962424c", "commitAfterChange": "860ade9c29c01eb7608cac1ab96cd5b3cf659e00", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 254, "signatureBeforeChange": " \tString guidString(GUID guid)", "signatureAfterChange": " \tString guidString(GUID guid)", "diff": ["+\t\tfinal GUID IIDIdentityUnmarshal = IIDFromString(\"{0000001b-0000-0000-c000-000000000046}\"); //$NON-NLS-1$", "+\t\tfinal GUID IIDInternalMSMarshaller = IIDFromString(\"{4c1e39e1-e3e3-4296-aa86-ec938d896e92}\"); //$NON-NLS-1$", "+\t\tfinal GUID IIDIAccIdentity = IIDFromString(\"{7852B78D-1CFD-41C1-A615-9C0C85960B5F}\"); //$NON-NLS-1$", "+\t\tfinal GUID IIDIAccPropServer = IIDFromString(\"{76C0DBBB-15E0-4E7B-B61B-20EEEA2001E0}\"); //$NON-NLS-1$", "+\t\tfinal GUID IIDIAccPropServices = IIDFromString(\"{6E26E776-04F0-495D-80E4-3330352E3169}\"); //$NON-NLS-1$", "+\t\tif (COM.IsEqualGUID(guid, IIDIdentityUnmarshal)) return \"IIDIdentityUnmarshal\";", "+\t\tif (COM.IsEqualGUID(guid, IIDInternalMSMarshaller)) return \"IIDInternalMSMarshaller\";", "+\t\tif (COM.IsEqualGUID(guid, IIDIAccIdentity)) return \"IIDIAccIdentity\";", "+\t\tif (COM.IsEqualGUID(guid, IIDIAccPropServer)) return \"IIDIAccPropServer\";", "+\t\tif (COM.IsEqualGUID(guid, IIDIAccPropServices)) return \"IIDIAccPropServices\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f902ca460d9be3d6bae3c37f9a11e2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "baf03a98205c806baa2c108817acc3ad55036318", "commitAfterChange": "9022b0c87576382c8b2fca8ae1a8f53567b5217b", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 77, "signatureBeforeChange": "  boolean sendGestureEvent (NSEvent nsEvent, int detail, boolean send)", "signatureAfterChange": "  boolean gestureEvent(int id, int eventPtr, int detail)", "diff": ["+boolean gestureEvent(int /*long*/ id, int /*long*/ eventPtr, int detail) {", "+\t// For cross-platform compatibility, touch events and gestures are mutually exclusive.", "+\t// Don't send a gesture if touch events are enabled for this control.", "+\tif (touchEnabled) return true;", "+\tif (!hooks(SWT.Gesture) && !filters(SWT.Gesture)) return true;", "+\tNSEvent nsEvent = new NSEvent(eventPtr);", "+\tEvent event = new Event();", "+\tNSPoint windowPoint;", "+\tNSView view = eventView ();", "+\twindowPoint = nsEvent.locationInWindow();", "+\tNSPoint point = view.convertPoint_fromView_(windowPoint, null);", "+\tif (!view.isFlipped ()) {", "+\t\tpoint.y = view.bounds().height - point.y;", "+\t}", "+\tevent.x = (int) point.x;", "+\tevent.y = (int) point.y;", "+\tsetInputState (event, nsEvent, SWT.Gesture);", "+\tevent.detail = detail;", "+", "+\tif (detail == SWT.GESTURE_BEGIN) {", "+\t\tdisplay.rotation = 0.0;", "+\t\tdisplay.magnification = 1.0;", "+\t\tdisplay.gestureActive = true;", "+\t} else {", "+\t\tdisplay.gestureActive = false;", "+\t}", "+\t", "+\tswitch (detail) {\t", "+\tcase SWT.GESTURE_SWIPE:", "+\t\tevent.xDirection = (int) -nsEvent.deltaX();", "+\t\tevent.yDirection = (int) -nsEvent.deltaY();", "+\t\tbreak;", "+\tcase SWT.GESTURE_ROTATE: {\t", "+\t\tdisplay.rotation += nsEvent.rotation();", "+\t\tevent.rotation = display.rotation;", "+\t\tbreak;", "+\t}", "+\tcase SWT.GESTURE_MAGNIFY:", "+\t\tdisplay.magnification += nsEvent.magnification();", "+\t\tevent.magnification = display.magnification;", "+\t\tbreak;", "+\tcase SWT.GESTURE_PAN:", "+\t\t// Panning increment is expressed in terms of the direction of movement,", "+\t\t// not in terms of scrolling increment.", "+\t\tif (display.gestureActive) {", "+\t\t\tevent.xDirection = (int) -nsEvent.deltaX();", "+\t\t\tevent.yDirection = (int) -nsEvent.deltaY();", "+\t\t\tif (event.xDirection == 0 && event.yDirection == 0) return true;", "+\t\t}", "+\t\tbreak;", "+\t}", "+", "+\tsendEvent (SWT.Gesture, event);", "+\treturn event.doit;", "-", "-boolean sendGestureEvent (NSEvent nsEvent, int detail, boolean send) {", "-\tEvent event = new Event ();", "-\tNSPoint windowPoint;", "-\tNSView view = eventView ();", "-\twindowPoint = nsEvent.locationInWindow();", "-\tNSPoint point = view.convertPoint_fromView_(windowPoint, null);", "-\tif (!view.isFlipped ()) {", "-\t\tpoint.y = view.bounds().height - point.y;", "-\t}", "-\tevent.x = (int) point.x;", "-\tevent.y = (int) point.y;", "-\tsetInputState (event, nsEvent, SWT.Gesture);", "-\tevent.detail = detail;", "-", "-\tif (detail == SWT.GESTURE_BEGIN) {", "-\t\tdisplay.gestureStarted = true;", "-\t\tdisplay.rotation = 0.0;", "-\t\tdisplay.magnification = 1.0;", "-\t} else if (detail == SWT.GESTURE_END) {", "-\t\tdisplay.gestureStarted = false;", "-\t}", "-\t", "-\tswitch (detail) {\t", "-\tcase SWT.GESTURE_SWIPE:", "-\t\tevent.xDirection = (int) -nsEvent.deltaX();", "-\t\tevent.yDirection = (int) -nsEvent.deltaY();", "-\t\tbreak;", "-\tcase SWT.GESTURE_ROTATE: {\t", "-\t\tdisplay.rotation += nsEvent.rotation();", "-\t\tevent.rotation = display.rotation;", "-\t\tbreak;", "-\t}", "-\tcase SWT.GESTURE_MAGNIFY:", "-\t\tdisplay.magnification += nsEvent.magnification();", "-\t\tevent.magnification = display.magnification;", "-\t\tbreak;", "-\tcase SWT.GESTURE_PAN:", "-\t\t// Panning increment is expressed in terms of the direction of movement,", "-\t\t// not in terms of scrolling increment.", "-\t\tevent.xDirection = (int) -nsEvent.deltaX();", "-\t\tevent.yDirection = (int) -nsEvent.deltaY();", "-\t\tbreak;", "-\t}", "-", "-\tevent.doit = true;", "-\tsendEvent (SWT.Gesture, event);", "-\tif (isDisposed ()) return false;", "-\treturn event.doit;"]}], "num": 16548}