{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eab44358ac3fe8fd9b1cc3b8a533714b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87f69f2aa46cfbdef4a86002f7f2b54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8549b1db39ac8fd4bb7564c61e5b9a04b5efde6f", "commitAfterChange": "2b3120470b46968368044df3f94129d586bc41d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["-\tif (customDraw && count != 0) {", "+\tif (count != 0) {", "+\t\t\tTableItem item = items [i];", "+\t\t\tString [] strings = item.strings;", "+\t\t\tif (strings != null) {", "+\t\t\t\tString [] temp = new String [columnCount];", "+\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (strings, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = \"\";", "+\t\t\t\titems [i].strings = temp;", "+\t\t\t}", "+\t\t\tif (index == 0) items [i].text = \"\";", "+\t\t\tImage [] images = item.images;", "+\t\t\tif (images != null) {", "+\t\t\t\tImage [] temp = new Image [columnCount];", "+\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (images, index, temp, index+1, columnCount-index-1);", "+\t\t\t\titems [i].images = temp;", "+\t\t\t}", "+\t\t\tif (index == 0) items [i].image = null;", "-\t\t\tLVITEM lvItem = new LVITEM ();", "-\t\t\tlvItem.mask = OS.LVIF_TEXT | OS.LVIF_IMAGE | OS.LVIF_STATE;", "-\t\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\t\tlvItem.iItem = i;", "-\t\t\t\tlvItem.iSubItem = 0;", "-\t\t\t\tlvItem.pszText = pszText;", "-\t\t\t\tlvItem.cchTextMax = cchTextMax;", "-\t\t\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "-\t\t\t\tlvItem.iSubItem = 1;", "-\t\t\t\tOS.SendMessage (handle, OS.LVM_SETITEM, 0, lvItem);", "-\t\t\t\tlvItem.iSubItem = 0;", "-\t\t\t\tlvItem.pszText = lvItem.cchTextMax = 0;", "-\t\t\t\tlvItem.iImage = OS.I_IMAGENONE;", "-\t\t\t\tOS.SendMessage (handle, OS.LVM_SETITEM, 0, lvItem);", "-\t\t\t\titems [i].text = \"\"; //$NON-NLS-1$", "-\t\t\t\titems [i].image = null;", "-\t\t\t}", "+\t\tif ((parent.style & SWT.VIRTUAL) == 0) {", "+\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\tlvItem.mask = OS.LVIF_TEXT | OS.LVIF_IMAGE;", "+\t\t\tlvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\tlvItem.iImage = OS.I_IMAGECALLBACK;", "+\t\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\t\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\t\tlvItem.iItem = i;", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETITEM, 0, lvItem);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aacb07dd984a983235942bf68e48bc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 34, "signatureBeforeChange": " void fgColor(Color fg)", "signatureAfterChange": "  \tvoid addImage(Image image)", "diff": ["- */", "-void fgColor(Color fg) {", "-\tPoint sel = text.getSelectionRange();", "-\tif ((sel == null) || (sel.y == 0)) return;", "-\tStyleRange style, range;", "-\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\trange = text.getStyleRangeAtOffset(i);", "-\t\tif (range != null) {", "-\t\t\tstyle = (StyleRange)range.clone();", "-\t\t\tstyle.start = i;", "-\t\t\tstyle.length = 1;", "-\t\t\tstyle.foreground = fg;", "-\t\t} else {", "-\t\t\tstyle = new StyleRange (i, 1, fg, null, SWT.NORMAL);", "-\t\t}", "-\t\ttext.setStyleRange(style);", "-\t}", "-\ttext.setSelectionRange(sel.x + sel.y, 0);", "-}", "+", "+\tvoid addImage(Image image) {", "+\t\tint offset = styledText.getCaretOffset();", "+\t\tstyledText.replaceTextRange(offset, 0, \"\\uFFFC\"); //$NON-NLS-1$", "+\t\tint index = 0;\t\t", "+\t\twhile (index < images.length) {", "+\t\t\tif (imageOffsets[index] == -1 && images[index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == imageOffsets.length) {", "+\t\t\tint[] tmpOffsets = new int[index + 1];", "+\t\t\tSystem.arraycopy(imageOffsets, 0, tmpOffsets, 0, imageOffsets.length);", "+\t\t\timageOffsets = tmpOffsets;\t\t", "+\t\t\tImage[] tmpImages = new Image[index + 1];", "+\t\t\tSystem.arraycopy(images, 0, tmpImages, 0, images.length);", "+\t\t\timages = tmpImages;", "+\t\t}", "+\t\timageOffsets[index] = offset;", "+\t\timages[index] = image;", "+\t\tStyleRange style = new StyleRange();", "+\t\tRectangle rect = image.getBounds();", "+\t\tstyle.metrics = new GlyphMetrics(rect.height, 0, rect.width);", "+\t\tint[] ranges = {offset, 1};", "+\t\tStyleRange[] styles = {style};", "+\t\tstyledText.setStyleRanges(0,0, ranges, styles);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc905992493db790092834554ee69f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8549b1db39ac8fd4bb7564c61e5b9a04b5efde6f", "commitAfterChange": "2b3120470b46968368044df3f94129d586bc41d5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["-\tint hwndHeader =  OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\twhile (index < count) {", "+\twhile (index < columnCount) {", "-\tif (index == count) return;", "-\t\tif (count > 1) {", "+\t\tif (columnCount > 1) {", "-\t\t\tLVITEM lvItem = new LVITEM ();", "-\t\t\tlvItem.mask = OS.LVIF_TEXT | OS.LVIF_IMAGE | OS.LVIF_STATE;", "-\t\t\tlvItem.pszText = pszText;", "-\t\t\tlvItem.cchTextMax = cchTextMax;", "-\t\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\t\tlvItem.iItem = i;", "-\t\t\t\tlvItem.iSubItem = 1;", "-\t\t\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "-\t\t\t\tlvItem.iSubItem = 0;", "-\t\t\t\tOS.SendMessage (handle, OS.LVM_SETITEM, 0, lvItem);", "-\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), cchTextMax);", "-\t\t\t\tOS.MoveMemory (buffer, pszText, byteCount);", "-\t\t\t\titems [i].text = buffer.toString (0, buffer.strlen ());", "-\t\t\t\tif (imageList != null && lvItem.iImage != -1) {", "-\t\t\t\t\titems [i].image = imageList.get (lvItem.iImage);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETCOLUMNWIDTH, 0, OS.LVSCW_AUTOSIZE);", "+\t\t}", "+\t\tif ((parent.style & SWT.VIRTUAL) == 0) {", "+\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\tlvItem.mask = OS.LVIF_TEXT | OS.LVIF_IMAGE;", "+\t\t\tlvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\tlvItem.iImage = OS.I_IMAGECALLBACK;", "+\t\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\t\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\t\tlvItem.iItem = i;", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETITEM, 0, lvItem);", "+\t\t\t}", "-\tif (count > 1) {", "+\tif (columnCount > 1) {", "-\tSystem.arraycopy (columns, index + 1, columns, index, --count - index);", "-\tcolumns [count] = null;", "-\tif (customDraw && getColumnCount () != 0) {", "-\t\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\tif (items [i].cellBackground != null) {", "+\tSystem.arraycopy (columns, index + 1, columns, index, --columnCount - index);", "+\tcolumns [columnCount] = null;", "+\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\tfor (int i=0; i<itemCount; i++) {", "+\t\tString [] strings = items [i].strings;", "+\t\tif (strings != null) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titems [i].strings = null;", "+\t\t\t} else {", "+\t\t\t\tif (index == 0) items [i].text = strings [1];", "+\t\t\t\tString [] temp = new String [columnCount];", "+\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - index);", "+\t\t\t\titems [i].strings = temp;", "+\t\t\t}", "+\t\t}", "+\t\tImage [] images = items [i].images;", "+\t\tif (images != null) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titems [i].images = null;", "+\t\t\t} else {", "+\t\t\t\tif (index == 0) items [i].image = images [1];", "+\t\t\t\tImage [] temp = new Image [columnCount];", "+\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - index);", "+\t\t\t\titems [i].images = temp;", "+\t\t\t}", "+\t\t}", "+\t\tif (items [i].cellBackground != null) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titems [i].cellBackground = null;", "+\t\t\t} else {", "-\t\t\tif (items [i].cellForeground != null) {", "+\t\t}", "+\t\tif (items [i].cellForeground != null) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titems [i].cellForeground = null;", "+\t\t\t} else {", "-\t\t\tif (items [i].cellFont != null) {", "+\t\t}", "+\t\tif (items [i].cellFont != null) {", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\titems [i].cellFont = null;", "+\t\t\t} else {", "+\tif (columnCount == 0) setScrollWidth (null, true);"]}], "num": 20341}