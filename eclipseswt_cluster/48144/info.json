{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34a57902685d1e63f91efa9d73e880d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1104e16c7a9f5e43919191e75251a8bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "63402932f4d7a2fe6eda19dc05c2a513ed8a0519", "commitAfterChange": "da97dbe5133d08e305a00a80c45d4dd608fb5936", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void setDragUnderEffect(int effect, TableItem item)", "signatureAfterChange": " private int checkEffect(int effect)", "diff": ["+private int checkEffect(int effect) {", "+\t// Some effects are mutually exclusive.  Make sure that only one of the mutually exclusive effects has been specified.", "+\tif ((effect & DND.FEEDBACK_SELECT) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER & ~DND.FEEDBACK_INSERT_BEFORE;", "+\tif ((effect & DND.FEEDBACK_INSERT_BEFORE) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER;", "+\treturn effect;", "-}", "-private void setDragUnderEffect(int effect, TableItem item) {\t", "-\tif ((effect & DND.FEEDBACK_SELECT) != 0) {", "-\t\tsetDropSelection(item);", "-\t\treturn;", "-\t}", "-\tif ((currentEffect & DND.FEEDBACK_SELECT) != 0) {", "-\t\tsetDropSelection(null);", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319454b59712084a69a7e9cb930aef7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "bcbb67364ca132ab020802341c67102fbef2e499", "commitAfterChange": "78f0c776d53220a44bdf02b852c9a928a5d226ab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": " int checkEffect(int effect)", "signatureAfterChange": " int checkEffect(int effect)", "diff": ["+}", "+int checkEffect(int effect) {", "+\t// Some effects are mutually exclusive.  Make sure that only one of the mutually exclusive effects has been specified.", "+\tif ((effect & DND.FEEDBACK_SELECT) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER & ~DND.FEEDBACK_INSERT_BEFORE;", "+\tif ((effect & DND.FEEDBACK_INSERT_BEFORE) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER;", "+\treturn effect;", "-int checkEffect(int effect) {", "-\t// Some effects are mutually exclusive.  Make sure that only one of the mutually exclusive effects has been specified.", "-\tint mask = DND.FEEDBACK_INSERT_AFTER | DND.FEEDBACK_INSERT_BEFORE | DND.FEEDBACK_SELECT;", "-\tint bits = effect & mask;", "-\tif (bits == DND.FEEDBACK_INSERT_AFTER || bits == DND.FEEDBACK_INSERT_BEFORE || bits == DND.FEEDBACK_SELECT) return effect;", "-\treturn (effect & ~mask);", "-}"]}], "num": 48144}