{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95996936519a5e4a7ae71a02e38fc123", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81e28f893e6eaef2104b0ba855a8dbdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/SashForm.java", "commitBeforeChange": "3097f3b8049c340fc8abb316d7bbff2d96b0dd0a", "commitAfterChange": "2a90d0b0e63aedeeee1feb15755bc97136630323", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void layout(boolean changed)", "signatureAfterChange": " public void layout(boolean changed)", "diff": ["+\tint sashwidth = sashes.length > 0 ? SASH_WIDTH + sashes [0].getBorderWidth() * 2 : SASH_WIDTH;", "-\t\ttotal += (((long)(sashes.length * SASH_WIDTH) << 16) + area.width - 1) / area.width;", "+\t\ttotal += (((long)(sashes.length * sashwidth) << 16) + area.width - 1) / area.width;", "-\t\ttotal += (((long)(sashes.length * SASH_WIDTH) << 16) + area.height - 1) / area.height;", "+\t\ttotal += (((long)(sashes.length * sashwidth) << 16) + area.height - 1) / area.height;", "-\t\t\tsashes[i - 1].setBounds(x, area.y, SASH_WIDTH, area.height);", "-\t\t\tx += SASH_WIDTH;", "+\t\t\tsashes[i - 1].setBounds(x, area.y, sashwidth, area.height);", "+\t\t\tx += sashwidth;", "-\t\t\tsashes[sashes.length - 1].setBounds(x, area.y, SASH_WIDTH, area.height);", "-\t\t\tx += SASH_WIDTH;", "+\t\t\tsashes[sashes.length - 1].setBounds(x, area.y, sashwidth, area.height);", "+\t\t\tx += sashwidth;", "-\t\t\tsashes[i - 1].setBounds(area.x, y, area.width, SASH_WIDTH);", "-\t\t\ty += SASH_WIDTH;", "+\t\t\tsashes[i - 1].setBounds(area.x, y, area.width, sashwidth);", "+\t\t\ty += sashwidth;", "-\t\t\tsashes[sashes.length - 1].setBounds(area.x, y, area.width, SASH_WIDTH);", "-\t\t\ty += SASH_WIDTH;", "+\t\t\tsashes[sashes.length - 1].setBounds(area.x, y, area.width, sashwidth);", "+\t\t\ty += sashwidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab91139d4c9b16849d9b230dd53a9c3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/SashForm.java", "commitBeforeChange": "3097f3b8049c340fc8abb316d7bbff2d96b0dd0a", "commitAfterChange": "2a90d0b0e63aedeeee1feb15755bc97136630323", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint sashwidth = sashes.length > 0 ? SASH_WIDTH + sashes [0].getBorderWidth() * 2 : SASH_WIDTH;", "-\t\theight += (controls.length - 1) * SASH_WIDTH;", "+\t\theight += (controls.length - 1) * sashwidth;", "-\t\twidth += (controls.length - 1) * SASH_WIDTH;", "+\t\twidth += (controls.length - 1) * sashwidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d83a1dcf790f16f74560b7f16bf0c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/ImageData.java", "commitBeforeChange": "7f3d866c4140cd4f8ccd06beca69339b6dfdde1e", "commitAfterChange": "b9424a5bc4808483b5f0287d91bb9a21a656b499", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " ImageData( \tint width, int height, int depth, PaletteData palette, \tint scanlinePad, byte[] data, int maskPad, byte[] maskData, \tbyte[] alphaData, int alpha, int transparentPixel, int type, \tint x, int y, int disposalMethod, int delayTime)", "signatureAfterChange": " ImageData( \tint width, int height, int depth, PaletteData palette, \tint scanlinePad, byte[] data, int maskPad, byte[] maskData, \tbyte[] alphaData, int alpha, int transparentPixel, int type, \tint x, int y, int disposalMethod, int delayTime)", "diff": ["-\tif (data != null && data.length < bytesPerLine * height) {", "+\t/*", "+\t * When the image is being loaded from a PNG, we need to use the theoretical minimum", "+\t * number of bytes per line to check whether there is enough data, because the actual", "+\t * number of bytes per line is calculated based on the given depth, which may be larger", "+\t * than the actual depth of the PNG.", "+\t */", "+\tint minBytesPerLine = type == SWT.IMAGE_PNG ? ((((width + 7) / 8) + 3) / 4) * 4 : bytesPerLine;", "+\tif (data != null && data.length < minBytesPerLine * height) {"]}], "num": 60900}