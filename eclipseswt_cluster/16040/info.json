{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c642617aa40a0223fdb2508b40791a15", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078a28254b1ec40a91263fa36b3a494f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "25e0a88282a8f52572829023c99494b77782afb9", "commitAfterChange": "4492e7490e450a65a8ceed26e7c2cb00d8b99b49", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\tboolean quote = true;", "+\tint index = 0;", "+\tboolean append = true;", "-\tint index = command.indexOf (\"%1\"); //$NON-NLS-1$", "-\tif (index != -1) {", "-\t\tint count=0;", "-\t\tint i=index + 2, length = command.length ();", "-\t\twhile (i < length) {", "-\t\t\tif (command.charAt (i) == '\"') count++;", "-\t\t\ti++;", "+\twhile (index < ARGUMENTS.length) {", "+\t\tint i = command.indexOf (ARGUMENTS [index]);", "+\t\tif (i != -1) {", "+\t\t\tappend = false;", "+\t\t\tprefix = command.substring (0, i);", "+\t\t\tsuffix = command.substring (i + ARGUMENTS [index].length (), command.length ());", "+\t\t\tbreak;", "-\t\tquote = count % 2 == 0;", "-\t\tprefix = command.substring (0, index);", "-\t\tsuffix = command.substring (index + 2, length);", "+\t\tindex++;", "-\tif (quote) fileName = \" \\\"\" + fileName + \"\\\"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\tif (append) fileName = \" \\\"\" + fileName + \"\\\"\";", "-\t\tCompatibility.exec(prefix + fileName + suffix);", "+\t\tString commandLine = prefix + fileName + suffix;", "+\t\tCompatibility.exec (commandLine);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8babafe87a8356bcf3f72abfc862004", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "99e437fa580702168e537f4a5d7239ece222d7cb", "commitAfterChange": "9a60b6b1565fd42d06cf1fac650c2f6dd44612e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\tboolean quote = true;", "+\tint index = 0;", "-\tint index = command.indexOf (\"%1\"); //$NON-NLS-1$", "-\tif (index != -1) {", "-\t\tint count=0;", "-\t\tint i=index + 2, length = command.length ();", "-\t\twhile (i < length) {", "-\t\t\tif (command.charAt (i) == '\"') count++;", "-\t\t\ti++;", "+\twhile (index < ARGUMENTS.length) {", "+\t\tint i = command.indexOf (ARGUMENTS [index]);", "+\t\tif (i != -1) {", "+\t\t\tprefix = command.substring (0, i);", "+\t\t\tsuffix = command.substring (i + ARGUMENTS [index].length (), command.length ());", "+\t\t\tbreak;", "-\t\tquote = count % 2 == 0;", "-\t\tprefix = command.substring (0, index);", "-\t\tsuffix = command.substring (index + 2, length);", "+\t\tindex++;", "-\tif (quote) fileName = \" \\\"\" + fileName + \"\\\"\"; //$NON-NLS-1$ //$NON-NLS-2$", "-\ttry {", "-\t\tCompatibility.exec(prefix + fileName + suffix);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tString commandLine = prefix + fileName + suffix;", "+\tint hHeap = OS.GetProcessHeap ();", "+\t/* Use the character encoding for the default locale */", "+\tTCHAR buffer = new TCHAR (0, commandLine, true);", "+\tint byteCount = buffer.length () * TCHAR.sizeof;", "+\tint lpCommandLine = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tOS.MoveMemory (lpCommandLine, buffer, byteCount);", "+\tSTARTUPINFO lpStartupInfo = new STARTUPINFO ();", "+\tlpStartupInfo.cb = STARTUPINFO.sizeof;", "+\tPROCESS_INFORMATION lpProcessInformation = new PROCESS_INFORMATION ();", "+\tboolean success = OS.CreateProcess (0, lpCommandLine, 0, 0, false, 0, 0, 0, lpStartupInfo, lpProcessInformation);", "+\tif (lpCommandLine != 0) OS.HeapFree (hHeap, 0, lpCommandLine);", "+\tif (lpProcessInformation.hProcess != 0) OS.CloseHandle (lpProcessInformation.hProcess);", "+\tif (lpProcessInformation.hThread != 0) OS.CloseHandle (lpProcessInformation.hThread);", "+\treturn success;"]}], "num": 16040}