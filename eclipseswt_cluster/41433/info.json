{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "702f5ffd98b5b0e55e8b57586674a417", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cde2b4e202b6deeaf04fc43eb54faf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebPolicyDelegate.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int decidePolicyForNavigationAction (int webView, int actionInformation, int request, int frame, \t\tint listener)", "signatureAfterChange": "  int decidePolicyForNavigationAction (int webView, int actionInformation, int request, int frame, int listener)", "diff": ["-int decidePolicyForNavigationAction (int /*long*/ webView, int /*long*/ actionInformation, int /*long*/ request, int /*long*/ frame,", "-\t\tint /*long*/ listener) {", "+int decidePolicyForNavigationAction (int /*long*/ webView, int /*long*/ actionInformation, int /*long*/ request, int /*long*/ frame, int /*long*/ listener) {", "-\tint /*long*/[] result = new int /*long*/ [1];", "+\tint /*long*/[] result = new int /*long*/[1];", "-\tif (((WebKit)browser.webBrowser).loadingText) {", "+\tWebKit webKit = (WebKit)browser.webBrowser;", "+\tif (webKit.loadingText) {", "-\tif (url.startsWith (\"file://\") && browser.webBrowser.getUrl ().startsWith (WebKit.ABOUT_BLANK) && ((WebKit)browser.webBrowser).untrustedText) {", "+\tif (url.startsWith (WebKit.PROTOCOL_FILE) && webKit.getUrl ().startsWith (WebKit.ABOUT_BLANK) && webKit.untrustedText) {", "-\tLocationListener[] locationListeners = browser.webBrowser.locationListeners;", "+\tLocationListener[] locationListeners = webKit.locationListeners;", "-\t\tif (browser.webBrowser.jsEnabledChanged) {", "-\t\t\tbrowser.webBrowser.jsEnabledChanged = false;", "+\t\tif (webKit.jsEnabledChanged) {", "+\t\t\twebKit.jsEnabledChanged = false;", "-\t\t\t\thr = preferences.setJavaScriptEnabled (browser.webBrowser.jsEnabled ? 1 : 0);", "+\t\t\t\thr = preferences.setJavaScriptEnabled (webKit.jsEnabled ? 1 : 0);", "-\t\t((WebKit)browser.webBrowser).lastNavigateURL = url;", "+\t\twebKit.lastNavigateURL = url;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "352e1acd7002e9339ab9ea8dd1247f39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolderRenderer.java", "commitBeforeChange": "021c9ffb1f03bab865a8755698d6a0a3d739b6cc", "commitAfterChange": "a22dc50286ff5b97c74cd0b12653f08fe95a1ee7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tvoid createAntialiasColors()", "signatureAfterChange": " \t \tvoid createAntialiasColors()", "diff": ["-\t    Display display = parent.getDisplay();", "-\t    lastBorderColor = display.getSystemColor(BORDER1_COLOR);", "+\t    lastBorderColor = parent.getDisplay().getSystemColor(BORDER1_COLOR);", "-\t\t\tselectedOuterColor = getColor(display, new RGB(red, green, blue));", "+\t\t\tselectedOuterColor = new Color(parent.getDisplay(), red, green, blue);", "-\t\t\tselectedInnerColor = getColor(display, new RGB(red, green, blue));", "+\t\t\tselectedInnerColor = new Color(parent.getDisplay(), red, green, blue);", "-\t\t\ttabAreaColor = getColor(display, new RGB(red, green, blue));", "+\t\t\ttabAreaColor = new Color(parent.getDisplay(), red, green, blue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e03cc25d04b370a2c123f2641b11119", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "a920e4e81433a14cac9186d61a1339fba3f843d1", "commitAfterChange": "2088c72a675b93be5d6e21e8d86b1403e92dccb3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "\t  int dragGetData(int widget, int context, int selection_data,  int info, int time, int data)", "signatureAfterChange": "\t  int dragGetData(int widget, int context, int selection_data,  int info, int time, int data)", "diff": ["-\tTransferData tdata = new TransferData();", "-\ttdata.type = gtkSelectionData.target;", "-\ttdata.pValue = gtkSelectionData.data;", "-\ttdata.length = gtkSelectionData.length;", "-\ttdata.format = gtkSelectionData.format;", "+\t", "+\tTransferData transferData = new TransferData();", "+\ttransferData.type = gtkSelectionData.target;", "+\ttransferData.pValue = gtkSelectionData.data;", "+\ttransferData.length = gtkSelectionData.length;", "+\ttransferData.format = gtkSelectionData.format;", "-\tevent.dataType = tdata; ", "+\tevent.dataType = transferData; ", "-\t\ttransfer = transferAgents[i];", "-\t\tif (transfer.isSupportedType(event.dataType)) break;", "+\t\tif (transferAgents[i].isSupportedType(transferData)) {", "+\t\t\ttransfer = transferAgents[i];", "+\t\t\tbreak;", "+\t\t}", "-\ttransfer.javaToNative(event.data, event.dataType);", "-\tif (event.dataType.result == 0) return 0;", "-\t", "-\tOS.gtk_selection_data_set(selection_data, event.dataType.type, event.dataType.format, event.dataType.pValue, event.dataType.length);", "-\treturn 1;\t", "+\ttransfer.javaToNative(event.data, transferData);", "+\tif (transferData.result != 1) return transferData.result;", "+\tOS.gtk_selection_data_set(selection_data, transferData.type, transferData.format, transferData.pValue, transferData.length);", "+\treturn transferData.result;\t"]}], "num": 41433}