{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6965a0758075ee7f663643908844d1da", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baac5e766412a39d2f523143cc48dac7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8bdc7452496d997678c005f282bcd2cc736b0512", "commitAfterChange": "1c443a30987f7f81d39bfdc3e6e4198bffa3e9a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tif (clippingRgn == 0) return;", "-\tOS.gdk_region_union(region.handle, clippingRgn);", "+\tint hRegion = region.handle;", "+\tOS.gdk_region_subtract (hRegion, hRegion);", "+\tif (clippingRgn != 0) {", "+\t\tOS.gdk_region_union(hRegion, clippingRgn);", "+\t} else {", "+\t\tint width = OS.GTK_WIDGET_WIDTH (scrolledHandle) + trimWidth ();", "+\t\tint height = OS.GTK_WIDGET_HEIGHT (scrolledHandle) + trimHeight ();", "+\t\tif (menuBar != null)  {", "+\t\t\tint barHandle = menuBar.handle;", "+\t\t\theight += OS.GTK_WIDGET_HEIGHT (barHandle);", "+\t\t}", "+\t\tGdkRectangle gdkRect = new GdkRectangle();", "+\t\tgdkRect.width = width;", "+\t\tgdkRect.height = height;", "+\t\tOS.gdk_region_union_with_rect(hRegion, gdkRect);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced66aa0cd5e4cb9042f239d6bbfbe8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "7f9dc8104b76a609a5e67f58367b8050b088975e", "commitAfterChange": "ccd621274ed9e97d00a3d7cf47210de6e1daa05c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\t//NOT DONE - transparency", "- \t\tOS.CGContextDrawImage(handle, rect, data.image.handle);", "+\t\tint h = OS.CGImageGetHeight(data.image.handle);", "+\t\tint bpr = OS.CGImageGetBytesPerRow(data.image.handle);", "+\t\tint provider = OS.CGDataProviderCreateWithData(0, data.image.data, bpr * h, 0);", "+\t\tif (provider != 0) {", "+\t\t\tint colorspace = device.colorspace;", "+\t\t\tint img = OS.CGImageCreate(width, height, 8, 32, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst, provider, null, true, 0);", "+\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\tOS.CGContextDrawImage(handle, rect, img);", "+\t\t\tOS.CGImageRelease(img);", "+\t\t}"]}], "num": 36156}