{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bcae975ad63e9761ae8f1898495edf2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd7ccbb51d76c715a0a7687a7dc1273", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t}", "-\t\tcase OS.WM_MOUSEWHEEL: {", "-\t\t\tint code = OS.CallWindowProc (TreeProc, hwnd, msg, wParam, lParam);", "-\t\t\tupdateScrollBar ();", "-\t\t\treturn code;", "+\t\t}\t", "+\t}", "+\tint hItem = 0;", "+\tswitch (msg) {", "+\t\t/* Keyboard messages */", "+\t\tcase OS.WM_KEYDOWN:", "+\t\t\tif (wParam == OS.VK_CONTROL || wParam == OS.VK_SHIFT) break;", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+\t\t\t", "+\t\t/* Scroll messages */", "+\t\tcase OS.WM_HSCROLL:", "+\t\tcase OS.WM_VSCROLL:", "+", "+\t\t/* Resize messages */", "+\t\tcase OS.WM_SIZE:", "+\t\t\tif (backgroundImage != null && drawCount == 0) {", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t\t}", "+\t\t\t//FALL THROUGH", "+\t\t\t", "+\t\t/* Mouse messages */", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONDOWN:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONDOWN:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONDOWN:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\tcase OS.WM_XBUTTONUP:", "+\t\t\t", "+\t\t/* Other messages */", "+\t\tcase OS.WM_SETFONT:", "+\t\tcase OS.WM_TIMER: {", "+\t\t\tif (backgroundImage != null) {", "+\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\t\t\t}", "-\treturn OS.CallWindowProc (TreeProc, hwnd, msg, wParam, lParam);", "+\tint code = OS.CallWindowProc (TreeProc, hwnd, msg, wParam, lParam);", "+\tswitch (msg) {", "+\t\t/* Keyboard messages */", "+\t\tcase OS.WM_KEYDOWN:", "+\t\t\tif (wParam == OS.VK_CONTROL || wParam == OS.VK_SHIFT) break;", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+", "+\t\t/* Scroll messages */", "+\t\tcase OS.WM_HSCROLL:", "+\t\tcase OS.WM_VSCROLL:", "+\t\t\t", "+\t\t/* Resize messages */", "+\t\tcase OS.WM_SIZE:", "+\t\t\tif (backgroundImage != null && drawCount == 0) {", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\tif (hwndHeader != 0) OS.InvalidateRect (hwndHeader, null, true);", "+\t\t\t}", "+\t\t\t//FALL THROUGH", "+\t\t\t", "+\t\t/* Mouse messages */", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONDOWN:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONDOWN:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONDOWN:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\tcase OS.WM_XBUTTONUP:", "+\t\t\t", "+\t\t/* Other messages */", "+\t\tcase OS.WM_SETFONT:", "+\t\tcase OS.WM_TIMER: {", "+\t\t\tif (backgroundImage != null) {", "+\t\t\t\tif (hItem != OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0)) {", "+\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tupdateScrollBar ();", "+\t\t}", "+\t}", "+\treturn code;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6acf32d945cde4da27b7a99729adabd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "f664172a0e735d142051b2da26600fbd256e07a6", "commitAfterChange": "894e6297387f95786ffea31acd399cd5951b0afc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  Point adjustResizeCursor (int xDisplay, int xWindow)", "signatureAfterChange": "  Point adjustResizeCursor ()", "diff": ["-Point adjustResizeCursor (int xDisplay, int xWindow) {", "-\treturn new Point (0, 0);", "+Point adjustResizeCursor () {", "+\tint newX, newY;", "+\tRectangle bounds = computeBounds ();", "+", "+\tif ((cursorOrientation & SWT.LEFT) != 0) {", "+\t\tnewX = bounds.x;", "+\t} else if ((cursorOrientation & SWT.RIGHT) != 0) {", "+\t\tnewX = bounds.x + bounds.width;", "+\t} else {", "+\t\tnewX = bounds.x + bounds.width / 2;", "+\t}", "+", "+\tif ((cursorOrientation & SWT.UP) != 0) {", "+\t\tnewY = bounds.y;", "+\t} else if ((cursorOrientation & SWT.DOWN) != 0) {", "+\t\tnewY = bounds.y + bounds.height;", "+\t} else {", "+\t\tnewY = bounds.y + bounds.height / 2;", "+\t}", "+", "+\t/*", "+\t * Convert to screen coordinates iff needed", "+ \t */", "+\tif (parent != null) {", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\tnewX += rect.left; ", "+\t\tnewY += rect.top; ", "+\t\tint window = OS.GetControlOwner (parent.handle);", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tnewX += rect.left; ", "+\t\tnewY += rect.top; ", "+\t}", "+\tCGPoint pt = new CGPoint ();", "+\tpt.x = newX;  pt.y = newY;", "+\tOS.CGWarpMouseCursorPosition (pt);", "+", "+\t/*", "+\t* If the client has not provided a custom cursor then determine", "+\t* the appropriate resize cursor.", "+\t*/", "+\tif (clientCursor == null) {", "+\t\tCursor newCursor = null;", "+\t\tswitch (cursorOrientation) {", "+\t\t\tcase SWT.UP:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENS);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.DOWN:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENS);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.LEFT:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZEWE);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.RIGHT:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZEWE);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.LEFT | SWT.UP:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENWSE);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.RIGHT | SWT.DOWN:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENWSE);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.LEFT | SWT.DOWN:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENESW);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.RIGHT | SWT.UP:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZENESW);", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tnewCursor = new Cursor(display, SWT.CURSOR_SIZEALL);", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tdisplay.setCursor (newCursor.handle);", "+\t\tif (resizeCursor != null) {", "+\t\t\tresizeCursor.dispose ();", "+\t\t}", "+\t\tresizeCursor = newCursor;", "+\t}", "+\t\t", "+\treturn new Point ((int) pt.x, (int) pt.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4557985a919809792e2cddf7154c224", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "b1485e2673a8d445f26b5f678b1f17e3f2a01622", "commitAfterChange": "17d5bcbf142c35cae2dbd838d742b3d14d3d4742", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["+\tCallback borderCallback = null;", "-\t\tif (style == null || !style.underline) continue;", "-\t\tif (style.underlineStyle == SWT.UNDERLINE_SINGLE || style.underlineStyle == SWT.UNDERLINE_DOUBLE) continue;", "+\t\tif (style == null) continue;", "+\t\tboolean drawUnderline = style.underline && style.underlineStyle != SWT.UNDERLINE_SINGLE && style.underlineStyle != SWT.UNDERLINE_DOUBLE;", "+\t\tboolean drawBorder = style.borderStyle != SWT.NONE;", "+\t\tif (!drawUnderline && !drawBorder) continue;", "-\t\t\t\t\tfloat underlineY = y + lineY;", "-\t\t\t\t\tfloat[] foreground = gc.data.foreground;", "-\t\t\t\t\tfloat lineWidth = 0;", "-\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "-\t\t\t\t\tswitch (style.underlineStyle) {", "-\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\t\t\t\tlineWidth = 2;", "-\t\t\t\t\t\t\tunderlineY += 2 * lineAscent [i] + lineWidth;", "-\t\t\t\t\t\t\tif (style.underlineColor != null) {", "-\t\t\t\t\t\t\t\tforeground = style.underlineColor.handle;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tif (style.foreground != null) {", "-\t\t\t\t\t\t\t\t\tforeground = style.foreground.handle;", "+\t\t\t\t\tif (drawUnderline) {", "+\t\t\t\t\t\tfloat underlineY = y + lineY;", "+\t\t\t\t\t\tfloat[] foreground = gc.data.foreground;", "+\t\t\t\t\t\tfloat lineWidth = 0;", "+\t\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "+\t\t\t\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "+\t\t\t\t\t\t\t\tlineWidth = 2;", "+\t\t\t\t\t\t\t\tunderlineY += 2 * lineAscent [i] + lineWidth;", "+\t\t\t\t\t\t\t\tif (style.underlineColor != null) {", "+\t\t\t\t\t\t\t\t\tforeground = style.underlineColor.handle;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (style.foreground != null) {", "+\t\t\t\t\t\t\t\t\t\tforeground = style.foreground.handle;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, new float[]{1f,3}, 2);", "+\t\t\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapRound);", "+\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, new float[]{1f,3}, 2);", "-\t\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapRound);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase UNDERLINE_IME_INPUT:", "+\t\t\t\t\t\t\tcase UNDERLINE_IME_TARGET_CONVERTED:", "+\t\t\t\t\t\t\tcase UNDERLINE_IME_CONVERTED:", "+\t\t\t\t\t\t\t\tlineWidth = 1.5f;", "+\t\t\t\t\t\t\t\tforeground = style.underlineStyle == UNDERLINE_IME_CONVERTED ? new float[]{0.5f, 0.5f, 0.5f, 1} : new float[]{0, 0, 0, 1};", "+\t\t\t\t\t\t\t\tFont font = style.font;", "+\t\t\t\t\t\t\t\tif (font == null) font = this.font != null ? this.font : device.systemFont;", "+\t\t\t\t\t\t\t\tATSFontMetrics metrics = new ATSFontMetrics();", "+\t\t\t\t\t\t\t\tOS.ATSFontGetHorizontalMetrics(font.handle, OS.kATSOptionFlagsDefault, metrics);", "+\t\t\t\t\t\t\t\tunderlineY += lineAscent [i] + lineHeight [i] + (metrics.descent * font.size);", "+\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase UNDERLINE_IME_INPUT:", "-\t\t\t\t\t\tcase UNDERLINE_IME_TARGET_CONVERTED:", "-\t\t\t\t\t\tcase UNDERLINE_IME_CONVERTED:", "-\t\t\t\t\t\t\tlineWidth = 1.5f;", "-\t\t\t\t\t\t\tforeground = style.underlineStyle == UNDERLINE_IME_CONVERTED ? new float[]{0.5f, 0.5f, 0.5f, 1} : new float[]{0, 0, 0, 1};", "-\t\t\t\t\t\t\tFont font = style.font;", "-\t\t\t\t\t\t\tif (font == null) font = this.font != null ? this.font : device.systemFont;", "-\t\t\t\t\t\t\tATSFontMetrics metrics = new ATSFontMetrics();", "-\t\t\t\t\t\t\tOS.ATSFontGetHorizontalMetrics(font.handle, OS.kATSOptionFlagsDefault, metrics);", "-\t\t\t\t\t\t\tunderlineY += lineAscent [i] + lineHeight [i] + (metrics.descent * font.size);", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tOS.CGContextSetStrokeColorSpace(gc.handle, device.colorspace);", "+\t\t\t\t\t\tOS.CGContextSetStrokeColor(gc.handle, foreground);", "+\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapButt);", "+\t\t\t\t\t\tOS.CGContextSetLineJoin(gc.handle, OS.kCGLineJoinMiter);", "+\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, null, 0);", "+\t\t\t\t\t\tOS.CGContextSetLineWidth(gc.handle, lineWidth);", "+\t\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.X2Fix(underlineY), highStart, highLen, rgn);", "+\t\t\t\t\t\tif (callback == null) {", "+\t\t\t\t\t\t\tcallback = new Callback(this, \"drawUnderline\", 4);", "+\t\t\t\t\t\t\tif (callback.getAddress() == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdrawStyle = run;", "+\t\t\t\t\t\tOS.CGContextTranslateCTM (gc.handle, 0.5f, 0.5f);", "+\t\t\t\t\t\tOS.QDRegionToRects(rgn, OS.kQDParseRegionFromTopLeft, callback.getAddress(), gc.handle);", "+\t\t\t\t\t\tOS.CGContextStrokePath(gc.handle);", "+\t\t\t\t\t\tOS.CGContextRestoreGState(gc.handle);", "-\t\t\t\t\tOS.CGContextSetStrokeColorSpace(gc.handle, device.colorspace);", "-\t\t\t\t\tOS.CGContextSetStrokeColor(gc.handle, foreground);", "-\t\t\t\t\tOS.CGContextSetLineWidth(gc.handle, lineWidth);", "-\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.X2Fix(underlineY), highStart, highLen, rgn);", "-\t\t\t\t\tif (callback == null) {", "-\t\t\t\t\t\tcallback = new Callback(this, \"drawUnderline\", 4);", "-\t\t\t\t\t\tif (callback.getAddress() == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\tif (drawBorder) {", "+\t\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.Long2Fix(y + lineY + lineAscent[i]), highStart, highLen, rgn);", "+\t\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "+\t\t\t\t\t\tif (borderCallback == null) {", "+\t\t\t\t\t\t\tborderCallback = new Callback(this, \"drawBorder\", 4);", "+\t\t\t\t\t\t\tif (borderCallback.getAddress() == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.CGContextTranslateCTM(gc.handle, 0.5f, 0.5f);", "+\t\t\t\t\t\tOS.QDRegionToRects(rgn, OS.kQDParseRegionFromTopLeft, borderCallback.getAddress(), gc.handle);", "+\t\t\t\t\t\tint width = 1;", "+\t\t\t\t\t\tOS.CGContextSetShouldAntialias(gc.handle, false);", "+\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapButt);", "+\t\t\t\t\t\tOS.CGContextSetLineJoin(gc.handle, OS.kCGLineJoinMiter);", "+\t\t\t\t\t\tOS.CGContextSetLineWidth(gc.handle, width);", "+\t\t\t\t\t\tfloat[] dashes = null;", "+\t\t\t\t\t\tswitch (style.borderStyle) {", "+\t\t\t\t\t\t\tcase SWT.BORDER_SOLID:\tbreak;", "+\t\t\t\t\t\t\tcase SWT.BORDER_DASH: dashes = width != 0 ? GC.LINE_DASH : GC.LINE_DASH_ZERO; break;", "+\t\t\t\t\t\t\tcase SWT.BORDER_DOT: dashes = width != 0 ? GC.LINE_DOT : GC.LINE_DOT_ZERO; break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, dashes, dashes != null ? dashes.length : 0);", "+\t\t\t\t\t\tfloat[] color = null;", "+\t\t\t\t\t\tif (style.borderColor != null) color = style.borderColor.handle;", "+\t\t\t\t\t\tif (color == null && style.foreground != null) color = style.foreground.handle;", "+\t\t\t\t\t\tif (color != null) {", "+\t\t\t\t\t\t\tOS.CGContextSetStrokeColorSpace(gc.handle, device.colorspace);", "+\t\t\t\t\t\t\tOS.CGContextSetStrokeColor(gc.handle, color);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.CGContextStrokePath(gc.handle);", "+\t\t\t\t\t\tOS.CGContextRestoreGState(gc.handle);", "-\t\t\t\t\tdrawStyle = run;", "-\t\t\t\t\tOS.CGContextTranslateCTM (gc.handle, 0.5f, 0.5f);", "-\t\t\t\t\tOS.QDRegionToRects(rgn, OS.kQDParseRegionFromTopLeft, callback.getAddress(), gc.handle);", "-\t\t\t\t\tOS.CGContextStrokePath(gc.handle);", "-\t\t\t\t\tOS.CGContextRestoreGState(gc.handle);", "+\tcallback = null;", "+\tif (borderCallback != null) borderCallback.dispose();", "+\tborderCallback = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ef9432c28066c46ff7082f5e67e85a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "diff": ["+\tint topIndex = 0;", "-\t\tcase OS.WM_CHAR:", "-\t\tcase OS.WM_IME_CHAR:", "-\t\tcase OS.WM_KEYUP:", "-\t\tcase OS.WM_SYSCHAR:", "-\t\tcase OS.WM_SYSKEYDOWN:", "-\t\tcase OS.WM_SYSKEYUP:", "-\t\tcase OS.WM_LBUTTONDBLCLK:", "-\t\tcase OS.WM_LBUTTONUP:", "-\t\tcase OS.WM_MBUTTONDBLCLK:", "-\t\tcase OS.WM_MBUTTONUP:", "-\t\tcase OS.WM_MOUSEHOVER:", "-\t\tcase OS.WM_MOUSELEAVE:", "-\t\tcase OS.WM_MOUSEMOVE:", "-//\t\tcase OS.WM_MOUSEWHEEL:", "-\t\tcase OS.WM_RBUTTONDBLCLK:", "-\t\tcase OS.WM_RBUTTONUP:", "-\t\tcase OS.WM_XBUTTONDBLCLK:", "-\t\tcase OS.WM_XBUTTONUP:", "-\t\tcase OS.WM_LBUTTONDOWN:", "-\t\tcase OS.WM_MBUTTONDOWN:", "-\t\tcase OS.WM_RBUTTONDOWN:", "-\t\tcase OS.WM_XBUTTONDOWN:", "-\t\t\tcheckSelection = true;", "-\t\t\tbreak;", "+\t\t/* Keyboard messages */", "-\t\t\tbreak;", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+\t\t\tcheckSelection = true;", "+\t\t\t//FALL THROUGH", "+\t\t\t", "+\t\t/* Scroll messages */", "+\t\tcase OS.WM_HSCROLL:", "+\t\tcase OS.WM_VSCROLL:", "+\t\t\t", "+\t\t/* Resize messages */", "+\t\tcase OS.WM_WINDOWPOSCHANGED:", "+\t\t\tif (backgroundImage != null && drawCount == 0) {", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t\t}", "+\t\t\t//FALL THROUGH", "+\t\t\t", "+\t\t/* Mouse messages */", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONDOWN:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONDOWN:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONDOWN:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\tcase OS.WM_XBUTTONUP:", "+\t\t\t", "+\t\t/* Other messages */", "+\t\tcase OS.WM_SETFONT:", "+\t\tcase OS.WM_TIMER: {", "+\t\t\tif (backgroundImage != null) {", "+\t\t\t\ttopIndex = OS.SendMessage (handle, OS.LVM_GETTOPINDEX, 0, 0);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tswitch (msg) {", "+\t\t/* Keyboard messages */", "+\t\tcase OS.WM_KEYDOWN:", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+", "+\t\t/* Scroll messages */", "+\t\tcase OS.WM_HSCROLL:", "+\t\tcase OS.WM_VSCROLL:", "+\t\t\t", "+\t\t/* Resize messages */", "+\t\tcase OS.WM_WINDOWPOSCHANGED:", "+\t\t\tif (backgroundImage != null && drawCount == 0) {", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+\t\t\t\tif (hwndHeader != 0) OS.InvalidateRect (hwndHeader, null, true);", "+\t\t\t}", "+\t\t\t//FALL THROUGH", "+\t\t\t", "+\t\t/* Mouse messages */", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONDOWN:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONDOWN:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONDOWN:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\tcase OS.WM_XBUTTONUP:", "+", "+\t\t/* Other messages */", "+\t\tcase OS.WM_SETFONT:", "+\t\tcase OS.WM_TIMER: {", "+\t\t\tif (backgroundImage != null) {", "+\t\t\t\tif (topIndex != OS.SendMessage (handle, OS.LVM_GETTOPINDEX, 0, 0)) {", "+\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 12706}