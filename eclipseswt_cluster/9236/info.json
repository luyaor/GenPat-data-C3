{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "166e0071685d79a7ac8f2a4e5b1cf356", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84254c08f1e9c2aa5de937bbd758061", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "1b66399dbbf2051dfb4cf848c776cda64c551d38", "commitAfterChange": "35912387a1904d7c91e3925da740c3925d02c157", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getContentX (int columnIndex)", "diff": ["+", "-\treturn getHconnectorEndpoints () [1].x + Tree.MARGIN_IMAGE;", "+\t", "+\tint x = parent.getCellPadding () - parent.horizontalOffset;", "+\tif (!isRoot ()) {", "+\t\tint expanderWidth = parent.expanderBounds.width + INDENT_HIERARCHY;", "+\t\tx += expanderWidth * getDepth ();", "+\t}", "+\tx += parent.expanderBounds.width;", "+\tif (items.length == 0) {", "+\t\tx += Compatibility.floor (parent.expanderBounds.width, 2);", "+\t}", "+\treturn x + Tree.MARGIN_IMAGE + INDENT_HIERARCHY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e0d83ef1a29b757d2105b91928ce947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 30, "signatureBeforeChange": " Point getSelectionExtent()", "signatureAfterChange": " Point[] getHconnectorEndpoints ()", "diff": ["+Point[] getHconnectorEndpoints () {", "+\tRectangle expanderBounds = getExpanderBounds ();", "+\tint x, width;", "+\tif (getItemCount () == 0) {", "+\t\tx = expanderBounds.x + Compatibility.ceil (expanderBounds.width, 2);", "+\t\twidth = Compatibility.floor (expanderBounds.width, 2) + INDENT_HIERARCHY;", "+\t} else {", "+\t\tx = expanderBounds.x + expanderBounds.width;", "+\t\twidth = INDENT_HIERARCHY;", "+\t}", "+\tint y = expanderBounds.y + expanderBounds.height / 2;", "+\treturn new Point[] {", "+\t\tnew Point (x, y),", "+\t\tnew Point (x + width, y)", "+\t};", "+}", "-Point getSelectionExtent() {", "-\tPoint selectionExtent = getItemExtent();", "-\tPoint imageExtent = getParent().getImageExtent();", "-\tint x = selectionExtent.x;", "-", "-\tif (imageExtent != null) {", "-\t\tx -= imageExtent.x + IMAGE_PADDING;", "-\t}", "-\treturn new Point(x, selectionExtent.y);"]}], "num": 9236}