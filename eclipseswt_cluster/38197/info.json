{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aacbd023a28ef7e5adb7acb42b049658", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cbc27cb2fbacc5024e5f107d5996f5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2ef6e4fc0f94a18262893aedff96a27b9f89d5fa", "commitAfterChange": "d0b3b06b87cdacfce998efd05f4c64a2bcf1116c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createScrolledHandle (int topHandle)", "signatureAfterChange": " void createHandle (int index, int parentHandle, boolean scroll)", "diff": ["-void createScrolledHandle (int topHandle) {", "-\tint [] argList = {OS.XmNancestorSensitive, 1};", "-\tscrolledHandle = OS.XmCreateMainWindow (topHandle, null, argList, argList.length / 2);", "-\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER)) != 0) {", "+void createHandle (int index, int parentHandle, boolean scroll) {", "+\tif (scroll) {", "+\t\tint [] argList = {OS.XmNancestorSensitive, 1};", "+\t\tscrolledHandle = OS.XmCreateMainWindow (parentHandle, null, argList, argList.length / 2);", "+\t\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t}", "+\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) != 0) {", "-\t\t\tOS.XmNshadowThickness, (style & SWT.BORDER) != 0 ? display.buttonShadowThickness : 0,", "+\t\t\tOS.XmNshadowThickness, hasBorder () ? display.buttonShadowThickness : 0,", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tint [] argList3 = {", "+\t\tint border = hasBorder () ? 1 : 0;", "+\t\tint [] argList = {", "+\t\t\tOS.XmNancestorSensitive, 1,", "+\t\t\tOS.XmNborderWidth, border,", "-\t\thandle = OS.XmCreateDrawingArea (scrolledHandle, null, argList3, argList3.length / 2);", "+\t\tif (scrolledHandle != 0) parentHandle = scrolledHandle;", "+\t\thandle = OS.XmCreateDrawingArea (parentHandle, null, argList, argList.length / 2);", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.NO_FOCUS) == 0) {", "+\t\tint [] argList = {OS.XmNtraversalOn, 0};", "+\t\tfocusHandle = OS.XmCreateDrawingArea (handle, null, argList, argList.length / 2);", "+\t\tif (focusHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbcddb477615155ef341e526733053b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 46, "signatureBeforeChange": " void error(int code)", "signatureAfterChange": "  void init(Drawable drawable, GCData data, int gdkGC)", "diff": ["-void error(int code) {", "-\tthrow new SWTError(code);", "+", "+void init(Drawable drawable, GCData data, int gdkGC) {", "+\tGdkColor foreground = data.foreground;", "+\tif (foreground != null) OS.gdk_gc_set_foreground(gdkGC, foreground);", "+\tGdkColor background = data.background;", "+\tif (background != null) OS.gdk_gc_set_background (gdkGC, background);", "+\tImage image = data.image;", "+\tif (image != null) {", "+\t\timage.memGC = this;", "+\t\t/*", "+\t\t * The transparent pixel mask might change when drawing on", "+\t\t * the image.  Destroy it so that it is regenerated when", "+\t\t * necessary.", "+\t\t */", "+\t\tif (image.transparentPixel != -1) image.destroyMask();", "+\t}", "+\tthis.drawable = drawable;", "+\tthis.data = data;", "+\thandle = gdkGC;"]}], "num": 38197}