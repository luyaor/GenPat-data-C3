{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71adb26d836f46fc5609229f8708e6b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47a56a4e31c125d1a683c1d1309b745e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": " static Hashtable gnome_getMimeInfo(Display display)", "signatureAfterChange": " static Hashtable gnome_getMimeInfo()", "diff": ["+ */", "+static Hashtable gnome_getMimeInfo() {", "+\tHashtable mimeInfo = new Hashtable();", "+\tint /*long*/[] mimeData = new int /*long*/[1];", "+\tint /*long*/[] extensionData = new int /*long*/[1];", "+\tint /*long*/ mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "+\tint /*long*/ mimeElement = mimeList;", "+\twhile (mimeElement != 0) {", "+\t\tOS.memmove (mimeData, mimeElement, OS.PTR_SIZEOF);", "+\t\tint /*long*/ mimePtr = mimeData[0];", "+\t\tint mimeLength = OS.strlen(mimePtr);", "+\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "+\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "+\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "+\t\tint /*long*/ extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "+\t\tif (extensionList != 0) {", "+\t\t\tVector extensions = new Vector();", "+\t\t\tint /*long*/ extensionElement = extensionList;", "+\t\t\twhile (extensionElement != 0) {", "+\t\t\t\tOS.memmove(extensionData, extensionElement, OS.PTR_SIZEOF);", "+\t\t\t\tint /*long*/ extensionPtr = extensionData[0];", "+\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "+\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "+\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "+\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "+\t\t\t\textension = '.' + extension;", "+\t\t\t\textensions.addElement(extension);", "+\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "+\t\t\t}", "+\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "+\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "+\t\t}", "+\t\tmimeElement = GNOME.g_list_next(mimeElement);", "+\t}", "+\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "+\treturn mimeInfo;", "+}", "- */", "-static Hashtable gnome_getMimeInfo(Display display) {", "-\tHashtable mimeInfo = new Hashtable();", "-\tint /*long*/[] mimeData = new int /*long*/[1];", "-\tint /*long*/[] extensionData = new int /*long*/[1];", "-\tint /*long*/ mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "-\tint /*long*/ mimeElement = mimeList;", "-\twhile (mimeElement != 0) {", "-\t\tOS.memmove (mimeData, mimeElement, OS.PTR_SIZEOF);", "-\t\tint /*long*/ mimePtr = mimeData[0];", "-\t\tint mimeLength = OS.strlen(mimePtr);", "-\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "-\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "-\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "-\t\tint /*long*/ extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "-\t\tif (extensionList != 0) {", "-\t\t\tVector extensions = new Vector();", "-\t\t\tint /*long*/ extensionElement = extensionList;", "-\t\t\twhile (extensionElement != 0) {", "-\t\t\t\tOS.memmove(extensionData, extensionElement, OS.PTR_SIZEOF);", "-\t\t\t\tint /*long*/ extensionPtr = extensionData[0];", "-\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "-\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "-\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "-\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "-\t\t\t\textension = '.' + extension;", "-\t\t\t\textensions.addElement(extension);", "-\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "-\t\t\t}", "-\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "-\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "-\t\t}", "-\t\tmimeElement = GNOME.g_list_next(mimeElement);", "-\t}", "-\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "-\treturn mimeInfo;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17636fc7ef419bcb0e7aacf6be28a266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " static Hashtable gnome_getMimeInfo()", "signatureAfterChange": " static Hashtable gnome_getMimeInfo()", "diff": ["+ */", "+static Hashtable gnome_getMimeInfo() {", "+\tHashtable mimeInfo = new Hashtable();", "+\tint /*long*/[] mimeData = new int /*long*/[1];", "+\tint /*long*/[] extensionData = new int /*long*/[1];", "+\tint /*long*/ mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "+\tint /*long*/ mimeElement = mimeList;", "+\twhile (mimeElement != 0) {", "+\t\tOS.memmove (mimeData, mimeElement, OS.PTR_SIZEOF);", "+\t\tint /*long*/ mimePtr = mimeData[0];", "+\t\tint mimeLength = OS.strlen(mimePtr);", "+\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "+\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "+\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "+\t\tint /*long*/ extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "+\t\tif (extensionList != 0) {", "+\t\t\tVector extensions = new Vector();", "+\t\t\tint /*long*/ extensionElement = extensionList;", "+\t\t\twhile (extensionElement != 0) {", "+\t\t\t\tOS.memmove(extensionData, extensionElement, OS.PTR_SIZEOF);", "+\t\t\t\tint /*long*/ extensionPtr = extensionData[0];", "+\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "+\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "+\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "+\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "+\t\t\t\textension = '.' + extension;", "+\t\t\t\textensions.addElement(extension);", "+\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "+\t\t\t}", "+\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "+\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "+\t\t}", "+\t\tmimeElement = GNOME.g_list_next(mimeElement);", "+\t}", "+\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "+\treturn mimeInfo;", "+}", "- */", "-static Hashtable gnome_getMimeInfo() {", "-\tHashtable mimeInfo = new Hashtable();", "-\tint[] mimeData = new int[1];", "-\tint[] extensionData = new int[1];", "-\tint mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "-\tint mimeElement = mimeList;", "-\twhile (mimeElement != 0) {", "-\t\tOS.memmove (mimeData, mimeElement, 4);", "-\t\tint mimePtr = mimeData[0];", "-\t\tint mimeLength = OS.strlen(mimePtr);", "-\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "-\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "-\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "-\t\tint extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "-\t\tif (extensionList != 0) {", "-\t\t\tVector extensions = new Vector();", "-\t\t\tint extensionElement = extensionList;", "-\t\t\twhile (extensionElement != 0) {", "-\t\t\t\tOS.memmove(extensionData, extensionElement, 4);", "-\t\t\t\tint extensionPtr = extensionData[0];", "-\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "-\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "-\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "-\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "-\t\t\t\textension = '.' + extension;", "-\t\t\t\textensions.addElement(extension);", "-\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "-\t\t\t}", "-\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "-\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "-\t\t}", "-\t\tmimeElement = GNOME.g_list_next(mimeElement);", "-\t}", "-\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "-\treturn mimeInfo;", "-}"]}], "num": 56851}