{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f221482c4ac22f3589677ed60718d4c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cfa77155763d5fd17fc7552d0e95ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "f33c93a3b6199f2d2878231f007f05c03517addf", "commitAfterChange": "6be7a535ba88fce3aa3fabbf2e7ed19a03e18cd3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tint getColumnFor(String attribute)", "signatureAfterChange": " \t \tvoid selectChild(TreeItem item)", "diff": ["+\t", "+\tvoid selectChild(TreeItem item) {", "+\t\tattribTable.removeAll();", "+\t\tif (!(item.getData() instanceof Node)) return;", "+\t\tNode node = (Node)item.getData();", "+\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\tString[] extraAttribs = gen.getExtraAttributeNames(node);", "+\t\tfor (int i = 0; i < extraAttribs.length; i++) {", "+\t\t\tTableItem attribItem = new TableItem(attribTable, SWT.NONE);", "+\t\t\tattribItem.setText(extraAttribs[i]);", "+\t\t\tattribItem.setData(node);", "+\t\t\tattribItem.setForeground(display.getSystemColor(SWT.COLOR_BLUE));", "+\t\t\tNode attrib = attributes.getNamedItem(extraAttribs[i]);", "+\t\t\tif (attrib != null) {", "+\t\t\t\tattribItem.setText(1, attrib.getNodeValue());", "+\t\t\t}", "+\t\t\t", "+\t\t}", "+\t\tcheckItem(node, item);", "+\t\tfor (int i = 0, length = attributes.getLength(); i < length; i++) {", "+\t\t\tNode attrib = attributes.item(i);", "+\t\t\tString attribName = attrib.getNodeName();", "+\t\t\tif (attribName.startsWith(\"swt_\")) continue;", "+\t\t\tTableItem attribItem = new TableItem(attribTable, SWT.NONE);", "+\t\t\tattribItem.setText(attribName);", "+\t\t\tattribItem.setText(1, attrib.getNodeValue());", "+\t\t}", "+\t\tattribTable.getColumn(0).pack();", "+\t\tattribTable.getColumn(1).setWidth(500);", "-\t", "-\tint getColumnFor(String attribute) {", "-\t\tTreeColumn[] columns = nodesTree.getColumns();", "-\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\tif (columns[i].getText().equals(attribute)) return i;", "-\t\t}", "-\t\tTreeColumn column = new TreeColumn(nodesTree, SWT.NONE);", "-\t\tcolumn.setText(attribute);", "-\t\treturn columns.length;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d2cda59012308ed3a9bc3c2cee829c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "95a4750889ac9c2206710060effebd293c1da26a", "commitAfterChange": "8094c5620da45f5980d8d011643b26514020dd87", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void tableMouseDown(Event event)", "signatureAfterChange": "  void tableMouseDown(Event event)", "diff": ["-\tRectangle clientRect = table.getClientArea();", "-\tint columnCount = table.getColumnCount();", "-\tint maxColumnIndex =  columnCount == 0 ? 0 : columnCount - 1;", "-\tint start = table.getTopIndex();", "-\tint end = table.getItemCount();", "-\tfor (int i = start; i < end; i++) {", "-\t\tTableItem item = table.getItem(i);", "-\t\tfor (int j = 0; j <= maxColumnIndex; j++) {", "-\t\t\tRectangle rect = item.getBounds(j);", "+\tint lineWidth = table.getLinesVisible() ? table.getGridLineWidth() : 0;", "+\tTableItem item = table.getItem(pt);", "+\tif ((table.getStyle() & SWT.FULL_SELECTION) != 0) {", "+\t\tif (item == null) return;", "+\t} else {", "+\t\tint start = item != null ? table.indexOf(item) : table.getTopIndex();", "+\t\tint end = table.getItemCount();", "+\t\tRectangle clientRect = table.getClientArea();", "+\t\tfor (int i = start; i < end; i++) {", "+\t\t\tTableItem nextItem = table.getItem(i);", "+\t\t\tRectangle rect = nextItem.getBounds(0);", "+\t\t\tif (pt.y >= rect.y && pt.y < rect.y + rect.height) {", "+\t\t\t\titem = nextItem;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tif (item == null) return;", "+\t}", "+\tTableColumn newColumn = null;", "+\tint columnCount = table.getColumnCount();", "+\tif (columnCount > 0) {", "+\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\tRectangle rect = item.getBounds(i);", "+\t\t\trect.width += lineWidth;", "-\t\t\t\tsetRowColumn(i, j, true);", "-\t\t\t\tsetFocus();", "-\t\t\t\treturn;", "+\t\t\t\tnewColumn = table.getColumn(i);", "+\t\t\t\tbreak;", "+\t\tif (newColumn == null) {", "+\t\t\tnewColumn = table.getColumn(0);", "+\t\t}", "+\tsetRowColumn(item, newColumn, true);", "+\tsetFocus();", "+\treturn;"]}], "num": 3067}