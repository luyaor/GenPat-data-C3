{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "451a0d8c4f31b5b3687d3db83ade96df", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb63d7cac77f0ad4acb26912f766745", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tint get_text(int startOffset, int endOffset, int pbstrText)", "signatureAfterChange": " \tint get_text(int startOffset, int endOffset, int pbstrText)", "diff": ["-\t\tevent.start = startOffset;", "-\t\tevent.end = endOffset;", "+\t\tevent.start = startOffset == COM.IA2_TEXT_OFFSET_LENGTH ? getCharacterCount() : startOffset;", "+\t\tevent.end = endOffset == COM.IA2_TEXT_OFFSET_LENGTH ? getCharacterCount() : endOffset;", "+\t\tif (event.start > event.end) {", "+\t\t\t/* IA2 spec says that indices can be exchanged. */", "+\t\t\tint temp = event.start;", "+\t\t\tevent.start = event.end;", "+\t\t\tevent.end = temp;", "+\t\t}", "-\t\tif (DEBUG) print(\"IAccessibleText::get_text(\" + startOffset + \", \" + endOffset + \") returning \" + event.result);", "+\t\tif (DEBUG) print(this + \".IAccessibleText::get_text(\" + startOffset + \", \" + endOffset + \") returning \" + event.result + hresult(event.result == null ? COM.E_INVALIDARG : COM.S_OK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5428e0b15322bbb01d2687050a1f424c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 321, "signatureBeforeChange": " \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "signatureAfterChange": "  \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "diff": ["-\t/* IAccessibleText::get_characterExtents([in] offset, [in] coordType, [out] pX, [out] pY, [out] pWidth, [out] pHeight) */", "+\t\tint length = getCharacterCount();", "-\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\tlistener.getCharacterCount(event);", "-\t\t}", "-\t\tint length = event.count;", "-\t\tevent.count = 0;", "-\t\tevent.start = offset < 0 ? 0 : offset;", "-\t\tevent.end = offset >= length ? length : offset + 1;", "+\t\tevent.start = offset == COM.IA2_TEXT_OFFSET_LENGTH ? length : offset < 0 ? 0 : offset;", "+\t\tevent.end = offset == COM.IA2_TEXT_OFFSET_LENGTH || offset >= length ? length : offset + 1;", "+\t\tif (DEBUG) print(this + \".IAccessibleText::get_characterExtents(\" + offset + \") returning \" + event.x + \", \" + event.y + \", \" + event.width + \", \" + event.height);"]}], "num": 20506}