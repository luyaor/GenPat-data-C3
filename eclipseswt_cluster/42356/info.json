{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1a574ed6860235a043a1fc5bcc56de7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2499661f46c76e58e186ddde8ae859e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/DisplayRenderer.java", "commitBeforeChange": "4f80632d3c9f0f3b61f05a10f8211568274c96c0", "commitAfterChange": "535ac732920d418749bd2080fa88339f64ab582c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "signatureAfterChange": " protected void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "diff": ["-\t\tpaintX = bidiTextWidth(line, 0, selectionStart, 0, bidi);", "+\t\tpaintX = parent.bidiTextWidth(line, 0, selectionStart, 0, bidi);", "-\t\t\tselectionBackgroundWidth = bidiTextWidth(line, selectionStart, selectionLength, paintX, bidi);", "+\t\t\tselectionBackgroundWidth = parent.bidiTextWidth(line, selectionStart, selectionLength, paintX, bidi);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8345f2f114196a507af35c8bff2038ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ec7edbaede68f4fd7608786e759e23fd6dbe2200", "commitAfterChange": "b206c3d5f3a448a2b6dfbc2c13ed7e271cef1597", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 248, "signatureBeforeChange": "\r void showBidiCaret()", "signatureAfterChange": "\r void showBidiCaret()", "diff": ["-\r", "-\txAtOffset = bidiTextWidth(lineText, 0, offsetInLine, 0, bidi);\r", "+\txAtOffset = renderer.bidiTextWidth(lineText, 0, offsetInLine, 0, bidi) + leftMargin;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c38d409b3a7e181a78a29101b5cb5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "d56d045948c34667cb1c7bea75fec511d1dee619", "commitAfterChange": "02854f44ae57f76eb8db099af59e2ecf0d9d200c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  boolean setFocus ()", "signatureAfterChange": "  boolean setFocus ()", "diff": ["-\tgtk_widget_set_can_focus (handle, true);", "+\tOS.gtk_widget_set_can_focus (handle, true);", "-\tif (!result) gtk_widget_set_can_focus (handle, false);", "+\tif (!result) OS.gtk_widget_set_can_focus (handle, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad251ce8c23e137ea297c71d7df440f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "590049b1c4ac04aa64ca715ed658fd3ccc2fbef2", "commitAfterChange": "5f3ccf02874811271ad4cfe014a12bc8fee3d363", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  @Override long gtk_motion_notify_event (long widget, long eventPtr)", "signatureAfterChange": "  @Override long gtk_motion_notify_event (long widget, long eventPtr)", "diff": ["-\tgtk_widget_get_allocation (handle, allocation);", "+\tOS.gtk_widget_get_allocation (handle, allocation);", "-\tgtk_widget_get_allocation (parent.handle, allocation);", "+\tOS.gtk_widget_get_allocation (parent.handle, allocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e02d039734694155c0f0abe9601cf7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "4510458698a44cfe0ebb614544242955fbc20f7a", "commitAfterChange": "d07e719160ad9b5428874b3929f88d189e7c89ac", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r int getLineNumber (int position)", "signatureAfterChange": "\r int getLineNumber (int position)", "diff": ["-\tif (IsLinux) buffer1 = new byte [page + 1];\r", "+\tif (OS.IsLinux) buffer1 = new byte [page + 1];\r", "-\t\t\tif (IsLinux) {\r", "+\t\t\tif (OS.IsLinux) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "255ee94b535f0f3fd5e3b0d2c6e2cb19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 73, "signatureBeforeChange": "  void setTextField(int fieldName, int value, boolean commit, boolean adjust)", "signatureAfterChange": "  void setTextField(int fieldName, int value, boolean commit, boolean adjust)", "diff": ["+", "+void setTextField(int fieldName, int value, boolean commit, boolean adjust) {", "+\tif (commit) {", "+\t\tint max = calendar.getActualMaximum(fieldName);", "+\t\tint min = calendar.getActualMinimum(fieldName);", "+\t\tif (fieldName == Calendar.YEAR) {", "+\t\t\tmax = MAX_YEAR;", "+\t\t\tmin = MIN_YEAR;", "+\t\t\t/* Special case: convert 1 or 2-digit years into reasonable 4-digit years. */", "+\t\t\tint currentYear = Calendar.getInstance().get(Calendar.YEAR);", "+\t\t\tint currentCentury = (currentYear / 100) * 100;", "+\t\t\tif (value < (currentYear + 30) % 100) value += currentCentury;", "+\t\t\telse if (value < 100) value += currentCentury - 100;", "+\t\t}", "+\t\tif (value > max) value = min; // wrap", "+\t\tif (value < min) value = max; // wrap", "+\t}", "+\tint start = fieldIndices[currentField].x;", "+\tint end = fieldIndices[currentField].y;", "+\ttext.setSelection(start, end);", "+\tString newValue = formattedStringValue(fieldName, value, adjust);", "+\tStringBuffer buffer = new StringBuffer(newValue);", "+\t/* Convert leading 0's into spaces. */", "+\tint prependCount = end - start - buffer.length();", "+\tfor (int i = 0; i < prependCount; i++) {", "+\t\tswitch (fieldName) {", "+\t\t\tcase Calendar.MINUTE:", "+\t\t\tcase Calendar.SECOND:", "+\t\t\t\tbuffer.insert(0, 0);", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tbuffer.insert(0, ' ');", "+\t\t\t\tbreak;", "+\t\t}", "+\t}\t\t", "+\tnewValue = buffer.toString();", "+\tignoreVerify = true;", "+\ttext.insert(newValue);", "+\tignoreVerify = false;", "+\tselectField(currentField);", "+\tif (commit) setField(fieldName, value);", "-", "-void setTextField(int fieldName, int value, boolean commit, boolean adjust) {", "-\tif (commit) {", "-\t\tint max = calendar.getActualMaximum(fieldName);", "-\t\tint min = calendar.getActualMinimum(fieldName);", "-\t\tif (fieldName == Calendar.YEAR) {", "-\t\t\tmax = MAX_YEAR;", "-\t\t\tmin = MIN_YEAR;", "-\t\t\t/* Special case: convert 1 or 2-digit years into reasonable 4-digit years. */", "-\t\t\tint currentYear = Calendar.getInstance().get(Calendar.YEAR);", "-\t\t\tint currentCentury = (currentYear / 100) * 100;", "-\t\t\tif (value < (currentYear + 30) % 100) value += currentCentury;", "-\t\t\telse if (value < 100) value += currentCentury - 100;", "-\t\t}", "-\t\tif (value > max) value = min; // wrap", "-\t\tif (value < min) value = max; // wrap", "-\t}", "-\tint start = fieldIndices[currentField].x;", "-\tint end = fieldIndices[currentField].y;", "-\tsetSelection(start, end);", "-\tString newValue = formattedStringValue(fieldName, value, adjust);", "-\tStringBuffer buffer = new StringBuffer(newValue);", "-\t/* Convert leading 0's into spaces. */", "-\tint prependCount = end - start - buffer.length();", "-\tfor (int i = 0; i < prependCount; i++) {", "-\t\tswitch (fieldName) {", "-\t\t\tcase Calendar.MINUTE:", "-\t\t\tcase Calendar.SECOND:", "-\t\t\t\tbuffer.insert(0, 0);", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tbuffer.insert(0, ' ');", "-\t\t\t\tbreak;", "-\t\t}", "-\t}\t\t", "-\tnewValue = buffer.toString();", "-\tignoreVerify = true;", "-\tinsert(newValue);", "-\tignoreVerify = false;", "-\tselectField(currentField);", "-\tif (commit) setField(fieldName, value);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abadc07a292b2106810a35d71521cad7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ef97fe54dc22960e591264f9a40821c6e605bd48", "commitAfterChange": "90874dd0f318ad72c86947cdc4c25287bab952a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint xborder = INNER_BORDER, yborder = INNER_BORDER;", "+\tint xborder = Display.INNER_BORDER, yborder = Display.INNER_BORDER;"]}], "num": 42356}