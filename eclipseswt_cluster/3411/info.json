{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ecfe7c99832def164708cfd7d5d5af6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "125bb904c2bd1118c57461b34c8b69cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "876ed09a49de9fd074ee75d74aaa5be9ca7961f3", "commitAfterChange": "ddffafae4e896b2e9ec78e332a5997a3daf99c21", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["-\tint hwnd = parent.handle;", "-\tint hHeap = OS.GetProcessHeap ();", "-\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, true);", "-\tint byteCount = buffer.length () * TCHAR.sizeof;", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tOS.MoveMemory (pszText, buffer, byteCount); ", "-\tTVITEM tvItem = new TVITEM ();", "-\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "-\ttvItem.hItem = handle;", "-\ttvItem.pszText = pszText;", "-\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "-\tOS.HeapFree (hHeap, 0, pszText);", "+\t_setText (string);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fef11cabd39ea4e2358aff6f77db9c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "523d99c206ac8f0072c134360cbddbddfbc8127f", "commitAfterChange": "67be5a4b1dc9f7a17fb0a66377cab5860e80d1bd", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tOS.SetWindowText (handle, buffer);", "+\t/*", "+\t* Ensure that the title appears in the task bar.", "+\t*/", "+\tif ((state & FOREIGN_HANDLE) != 0) {", "+\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\t\tint byteCount = buffer.length () * TCHAR.sizeof;", "+\t\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\t\tOS.MoveMemory (pszText, buffer, byteCount);", "+\t\tOS.DefWindowProc (handle, OS.WM_SETTEXT, 0, pszText);", "+\t\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);", "+\t} else {", "+\t\tOS.SetWindowText (handle, buffer);", "+\t}"]}], "num": 3411}