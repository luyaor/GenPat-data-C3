{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "203d1ba532e5f4f302127a2e5bc4506a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3830db6fd91864936bf1a17268a7e591", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 91, "signatureBeforeChange": "\r int drawLineSelection(String line, int lineOffset, int selectionStartOffset, int selectionLength, StyleRange[] styles, int paintY, GC gc)", "signatureAfterChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, StyledTextBidi bidi)", "diff": ["-int drawLineSelection(String line, int lineOffset, int selectionStartOffset, int selectionLength, StyleRange[] styles, int paintY, GC gc) {\r", "+void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, StyledTextBidi bidi) {\r", "-\tint selectionBackgroundWidth;\r", "+\tint selectionBackgroundWidth = -1;\r", "+\tint selectionStart = Math.max(0, selection.x - lineOffset);\r", "+\tint selectionEnd = selection.y - lineOffset;\r", "+\tint selectionLength = selectionEnd - selectionStart;\r", "-\tstyles = filterLineStyles(styles);\r", "-\tpaintX = textWidth(line, lineOffset, 0, selectionStartOffset, styles, 0, gc);\r", "-\tif (selectionStartOffset + selectionLength > lineLength) {\r", "-\t\tselectionLength = lineLength - selectionStartOffset;\r", "+\tif (selectionEnd == selectionStart || selectionEnd < 0 || selectionStart > lineLength) {\r", "+\t\treturn;\r", "+\t}\r", "+\tpaintX = textWidth(line, lineOffset, 0, selectionStart, filterLineStyles(styles), 0, gc, bidi);\t\r", "+\t// selection extends past end of line?\r", "+\tif (selectionEnd > lineLength) {\r", "-\t\t\t// if the selection extends beyond this line, render an \r", "-\t\t\t// additional whitespace to represent the selected line break\r", "-\t\t\tselectionBackgroundWidth = textWidth(line + \" \", lineOffset, selectionStartOffset, selectionLength + 1, styles, paintX, gc);\r", "+\t\t\tselectionLength = lineLength - selectionStart;\r", "-\telse {\r", "-\t\tselectionBackgroundWidth = textWidth(line, lineOffset, selectionStartOffset, selectionLength, styles, paintX, gc);\r", "-\t}\t\r", "+\tif (selectionBackgroundWidth == -1) {\r", "+\t\tselectionBackgroundWidth = textWidth(line, lineOffset, selectionStart, selectionLength, styles, paintX, gc, bidi);\r", "+\t\tif (selectionBackgroundWidth < 0) {\r", "+\t\t\t// width can be negative when in R2L bidi segment\r", "+\t\t\tpaintX += selectionBackgroundWidth;\r", "+\t\t\tselectionBackgroundWidth *= -1;\r", "+\t\t}\r", "+\t\tif (selectionEnd > lineLength) {\r", "+\t\t\tselectionEnd = selectionStart + selectionLength;\r", "+\t\t\t// if the selection extends past this line, render an additional whitespace\r", "+\t\t\t// background at the end of the line to represent the selected line break\r", "+\t\t\tif (bidi != null && selectionEnd > 0 && bidi.isRightToLeft(selectionEnd - 1)) {\r", "+\t\t\t\tint lineEndX = bidi.getTextWidth();\r", "+\t\t\t\tgc.fillRectangle(lineEndX - horizontalScrollOffset, paintY, lineEndSpaceWidth, lineHeight);\r", "+\t\t\t}\r", "+\t\t\telse {\r", "+\t\t\t\tselectionBackgroundWidth += lineEndSpaceWidth;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\t\r", "+\t// handle empty line case\r", "+\tif (bidi != null && (paintX == 0)) {\r", "+\t\tpaintX = xInset;\t\r", "+\t}\r", "-\tdrawText(line, lineOffset, selectionStartOffset, selectionLength, styles, paintX, paintY, gc);\r", "-\treturn paintX + selectionBackgroundWidth;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeee3cd0b71beb40558f219f0f05280a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "3920b0ae4cabde10e6bb2fe1ce197bc5b92ff701", "commitAfterChange": "2fd9bd44ec83b17b8d74fbafe31bc388d7d446bb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r void onTraverse(Event e)", "signatureAfterChange": "\r \r void onKeyDown (Event e)", "diff": ["-void onTraverse(Event e) {\r", "-\tif (e.detail == SWT.TRAVERSE_ARROW_PREVIOUS || e.detail == SWT.TRAVERSE_ARROW_NEXT) {\r", "-\t\tTableTreeItem[] selection = getSelection();\r", "-\t\tif (selection.length > 0) {\r", "-\t\t\tTableTreeItem item = selection[0];\r", "-\t\t\tif (item.getItemCount() == 0) return;\r", "-\t\t\tint type;\r", "-\t\t\tif (e.detail == SWT.TRAVERSE_ARROW_NEXT) {\r", "-\t\t\t\tif (item.getExpanded()) return;\r", "-\t\t\t\titem.setExpanded(true);\r", "-\t\t\t\ttable.setTopIndex(table.indexOf(item.tableItem));\r", "-\t\t\t\ttype = SWT.Expand;\r", "-\t\t\t} else {\r", "-\t\t\t\tif (!item.getExpanded()) return;\r", "-\t\t\t\titem.setExpanded(false);\r", "-\t\t\t\ttype = SWT.Collapse;\r", "-\t\t\t}\r", "-\t\t\tEvent event = new Event();\r", "-\t\t\tevent.item = item;\r", "-\t\t\tnotifyListeners(type, event);\r", "-\t\t}\r", "-\t}\r", "-}\r", "+void onKeyDown (Event e) {\r", "+\tTableTreeItem[] selection = getSelection();\r", "+\tif (selection.length == 0) return;\r", "+\tTableTreeItem item = selection[0];\r", "+\tint type = 0;\r", "+\tif (e.keyCode == SWT.ARROW_RIGHT || e.keyCode == SWT.ARROW_LEFT) {\r", "+\t\tif (e.keyCode == SWT.ARROW_RIGHT) {\r", "+\t\t\tif (item.getItemCount() == 0) return;\r", "+\t\t\tif (item.getExpanded()) {\r", "+\t\t\t\tTableTreeItem newSelection = item.getItems()[0];\r", "+\t\t\t\ttable.setSelection(new TableItem[]{newSelection.tableItem});\r", "+\t\t\t\tshowItem(newSelection);\r", "+\t\t\t\ttype = SWT.Selection;\r", "+\t\t\t} else {\r", "+\t\t\t\titem.setExpanded(true);\r", "+\t\t\t\ttype = SWT.Expand;\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tif (item.getExpanded()) {\r", "+\t\t\t\titem.setExpanded(false);\r", "+\t\t\t\ttype = SWT.Collapse;\r", "+\t\t\t} else {\r", "+\t\t\t\tTableTreeItem parent = item.getParentItem();\r", "+\t\t\t\tif (parent != null) {\r", "+\t\t\t\t\tint index = parent.indexOf(item);\r", "+\t\t\t\t\tif (index != 0) return;\r", "+\t\t\t\t\ttable.setSelection(new TableItem[]{parent.tableItem});\r", "+\t\t\t\t\ttype = SWT.Selection;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\tif (e.character == '*') {\r", "+\t\titem.expandAll(true);\r", "+\t}\r", "+\tif (e.character == '-') {\r", "+\t\tif (item.getExpanded()) {\r", "+\t\t\titem.setExpanded(false);\r", "+\t\t\ttype = SWT.Collapse;\r", "+\t\t}\r", "+\t}\r", "+\tif (e.character == '+') {\r", "+\t\tif (item.getItemCount() > 0 && !item.getExpanded()) {\r", "+\t\t\titem.setExpanded(true);\r", "+\t\t\ttype = SWT.Expand;\r", "+\t\t}\r", "+\t} \r", "+\tif (type == 0) return;\r", "+\tEvent event = new Event();\r", "+\tnotifyListeners(type, event);\r", "+}\r"]}], "num": 6703}