{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "627595cd1e02a8d30f4da3bfcec0c960", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a268bae6c860473f5418bd8e2038aa4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0ad0a601d34f9b89eab0eb65f5e8c1953894af48", "commitAfterChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 136, "signatureBeforeChange": " boolean traverseGroup (boolean next)", "signatureAfterChange": "  boolean traverseGroup (boolean next)", "diff": ["+", "-\t/* AW", "-\treturn OS.XmProcessTraversal (handle, next ? OS.XmTRAVERSE_NEXT_TAB_GROUP : OS.XmTRAVERSE_PREV_TAB_GROUP);", "+\tControl root = computeTabRoot ();", "+\tControl group = computeTabGroup ();", "+\tControl [] list = root.computeTabList ();", "+\tint length = list.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (list [index] == group) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "-\treturn false;", "+\tif (index == length) return false;", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = ((index + offset + length) % length)) != start) {", "+\t\tControl control = list [index];", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;", "+\t\t}", "+\t}", "+\tif (group.isDisposed ()) return false;", "+\treturn group.setTabGroupFocus ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25888403046534c002f079a54eafacdd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d583df28ef4521b9f2420fbe05835676e837d84f", "commitAfterChange": "94e68629e2b5131cc8ba557c59631c2dea710775", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 141, "signatureBeforeChange": "\r boolean traverseGroup (boolean next)", "signatureAfterChange": "\r boolean traverseGroup (boolean next)", "diff": ["-\treturn OS.XmProcessTraversal (handle, next ? OS.XmTRAVERSE_NEXT_TAB_GROUP : OS.XmTRAVERSE_PREV_TAB_GROUP);\r", "+\tControl root = computeTabRoot ();\r", "+\tControl group = computeTabGroup ();\r", "+\tControl [] list = root.computeTabList ();\r", "+\tint length = list.length;\r", "+\tint index = 0;\r", "+\twhile (index < length) {\r", "+\t\tif (list [index] == group) break;\r", "+\t\tindex++;\r", "+\t}\r", "+\t/*\r", "+\t* It is possible (but unlikely), that application\r", "+\t* code could have disposed the widget in focus in\r", "+\t* or out events.  Ensure that a disposed widget is\r", "+\t* not accessed.\r", "+\t*/\r", "+\tif (index == length) return false;\r", "+\tint start = index, offset = (next) ? 1 : -1;\r", "+\twhile ((index = ((index + offset + length) % length)) != start) {\r", "+\t\tControl control = list [index];\r", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {\r", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;\r", "+\t\t}\r", "+\t}\r", "+\tif (group.isDisposed ()) return false;\r", "+\treturn group.setTabGroupFocus ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60e76664a4f15de78a9ce79a2dd013e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "commitAfterChange": "43cccb7c09eeeeb743e40d795384af951511f59c", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 140, "signatureBeforeChange": "  boolean traverseGroup (boolean next)", "signatureAfterChange": "  boolean traverseGroup (boolean next)", "diff": ["-\treturn false;", "+\tControl root = computeTabRoot ();", "+\tControl group = computeTabGroup ();", "+\tControl [] list = root.computeTabList ();", "+\tint length = list.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (list [index] == group) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\t*/", "+\tif (index == length) return false;", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = ((index + offset + length) % length)) != start) {", "+\t\tControl control = list [index];", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;", "+\t\t}", "+\t}", "+\tif (group.isDisposed ()) return false;", "+\treturn group.setTabGroupFocus ();"]}], "num": 23281}