{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bd1a5268f79e791cc56c123ac6adf6c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e70e675c8d85ec2198db5239ac2c38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 377, "methodNumberAfterChange": 234, "signatureBeforeChange": " void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground)", "signatureAfterChange": " void redrawLines(int startLine, int lineCount)", "diff": ["- */", "-void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground) {", "-\tString line = content.getLine(firstLine);", "-\tint lineCount = lastLine - firstLine + 1;", "-\tint redrawY, redrawWidth;", "-\tint lineOffset = content.getOffsetAtLine(firstLine);", "-\tboolean fullLineRedraw;", "-\tRectangle clientArea = getClientArea();", "-\t", "-\tfullLineRedraw = ((getStyle() & SWT.FULL_SELECTION) != 0 && lastLine > firstLine);", "-\t// if redraw range includes last character on the first line, ", "-\t// clear background to right widget border. fixes bug 19595.", "-\tif (clearBackground && endOffset - lineOffset >= line.length()) {", "-\t\tfullLineRedraw = true;", "-\t}\t", "-\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "-\tRectangle rect = layout.getBounds(offsetInFirstLine, Math.min(endOffset, line.length()) - 1);", "-\trenderer.disposeTextLayout(layout);", "-\trect.x -= horizontalScrollOffset;", "-\trect.intersect(clientArea);", "-\tredrawY = firstLine * lineHeight - verticalScrollOffset;", "-\tredrawWidth = fullLineRedraw ? clientArea.width - leftMargin - rightMargin : rect.width;", "-\tdraw(rect.x, redrawY, redrawWidth, lineHeight, clearBackground);", "-\t", "-\t// redraw last line if more than one line needs redrawing ", "-\tif (lineCount > 1) {", "-\t\tlineOffset = content.getOffsetAtLine(lastLine);", "-\t\tint offsetInLastLine = endOffset - lineOffset;\t", "-\t\t// no redraw necessary if redraw offset is 0", "-\t\tif (offsetInLastLine > 0) {", "-\t\t\tline = content.getLine(lastLine);", "-\t\t\t// if redraw range includes last character on the last line, ", "-\t\t\t// clear background to right widget border. fixes bug 19595.", "-\t\t\tif (clearBackground && offsetInLastLine >= line.length()) {", "-\t\t\t\tfullLineRedraw = true;", "-\t\t\t}", "-\t\t\tline = content.getLine(lastLine);", "-\t\t\tlayout = renderer.getTextLayout(line, lineOffset);", "-\t\t\trect = layout.getBounds(0, offsetInLastLine - 1);", "-\t\t\trenderer.disposeTextLayout(layout);", "-\t\t\trect.x -= horizontalScrollOffset;", "-\t\t\trect.intersect(clientArea);", "-\t\t\tredrawY = lastLine * lineHeight - verticalScrollOffset;", "-\t\t\tredrawWidth = fullLineRedraw ? clientArea.width - leftMargin - rightMargin : rect.width;", "-\t\t\tdraw(rect.x, redrawY, redrawWidth, lineHeight, clearBackground);", "-\t\t}", "+void redrawLines(int startLine, int lineCount) {", "+\t// do nothing if redraw range is completely invisible\t", "+\tint partialBottomIndex = getPartialBottomIndex();", "+\tif (startLine > partialBottomIndex || startLine + lineCount - 1 < topIndex) {", "+\t\treturn;", "-}", "+\t// only redraw visible lines", "+\tif (startLine < topIndex) {", "+\t\tlineCount -= topIndex - startLine;", "+\t\tstartLine = topIndex;", "+\tif (startLine + lineCount - 1 > partialBottomIndex) {", "+\t\tlineCount = partialBottomIndex - startLine + 1;", "+\tstartLine -= topIndex;", "+\tint redrawTop = getLinePixel(startLine);", "+\tint redrawBottom = getLinePixel(startLine + lineCount);", "+\tint redrawWidth = getClientArea().width - leftMargin - rightMargin; ", "+\tsuper.redraw(leftMargin, redrawTop, redrawWidth, redrawBottom - redrawTop, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7302170538e071e6d5c6fa7e6c8fe2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "cbf30c52abe87cec4ed52641898abf66edc0ae82", "commitAfterChange": "73867f2cffacd6bfd26b673a67b443e1dc346e33", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void handleDOMEvent (OleEvent e)", "signatureAfterChange": "  void handleDOMEvent (OleEvent e)", "diff": ["-\t\tboolean consume = false;", "-\t\tOleAutomation document = null;", "-\t\tOleAutomation htmlWindow2 = null;", "-\t\tOleAutomation htmlEvent = null;", "-\t\t/* get IHTMLDocument2 */", "-\t\trgdispid = auto.getIDsOfNames (new String[] {\"Document\"}); //$NON-NLS-1$", "-\t\tpVarResult = auto.getProperty (rgdispid[0]);", "-\t\tif (pVarResult == null || pVarResult.getType() == COM.VT_EMPTY) {", "-\t\t\tif (pVarResult != null) pVarResult.dispose ();", "-\t\t} else {", "-\t\t\tdocument = pVarResult.getAutomation ();", "-\t\t\tpVarResult.dispose ();", "-\t\t\t/* get IHTMLWindow2 */", "-\t\t\trgdispid = document.getIDsOfNames (new String[] {\"parentWindow\"}); //$NON-NLS-1$", "-\t\t\tpVarResult = document.getProperty (rgdispid[0]);", "-\t\t\tif (pVarResult == null || pVarResult.getType () == COM.VT_EMPTY) {", "-\t\t\t\tif (pVarResult != null) pVarResult.dispose ();", "-\t\t\t} else {", "-\t\t\t\thtmlWindow2 = pVarResult.getAutomation ();", "-\t\t\t\tpVarResult.dispose ();", "-\t\t\t\t/* get IHTMLEventObj */", "-\t\t\t\trgdispid = htmlWindow2.getIDsOfNames (new String[] {\"event\"}); //$NON-NLS-1$", "-\t\t\t\tpVarResult = htmlWindow2.getProperty (rgdispid[0]);", "-\t\t\t\tif (pVarResult == null || pVarResult.getType () == COM.VT_EMPTY) {", "-\t\t\t\t\tif (pVarResult != null) pVarResult.dispose ();", "-\t\t\t\t} else {", "-\t\t\t\t\thtmlEvent = pVarResult.getAutomation ();", "-\t\t\t\t\tpVarResult.dispose ();", "-\t\t\t\t\t/* check event's returnValue property */", "-\t\t\t\t\trgdispid = htmlEvent.getIDsOfNames (new String[] {\"returnValue\"}); //$NON-NLS-1$", "-\t\t\t\t\tpVarResult = htmlEvent.getProperty (rgdispid[0]);", "-\t\t\t\t\tconsume = pVarResult != null && pVarResult.getType () == OLE.VT_BOOL && !pVarResult.getBoolean ();", "-\t\t\t\t\tpVarResult.dispose ();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (htmlEvent != null) htmlEvent.dispose ();", "-\t\tif (htmlWindow2 != null) htmlWindow2.dispose ();", "-\t\tif (document != null) document.dispose ();", "+\t\trgdispid = event.getIDsOfNames (new String[] {PROPERTY_RETURNVALUE});", "+\t\tpVarResult = event.getProperty (rgdispid[0]);", "+\t\tboolean consume = pVarResult != null && pVarResult.getType () == OLE.VT_BOOL && !pVarResult.getBoolean ();", "+\t\tpVarResult.dispose ();"]}], "num": 2195}