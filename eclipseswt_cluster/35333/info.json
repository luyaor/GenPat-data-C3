{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "312d412466d2fdece60b646b69d892df", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c344263b378328061e0a87849e6ed14d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b19c3dd8147612fd76c3b6c16abbc1b6a8b4ef63", "commitAfterChange": "ed547c78f3e3a58841df447bce216dbfb4c38b12", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  public boolean execute (String script)", "signatureAfterChange": "  public boolean execute (String script)", "diff": ["-\t\t\t\t\t\t\t\tString mozillaPath = LocationProvider.mozillaPath + delegate.getJSLibraryName () + '\\0';", "-\t\t\t\t\t\t\t\tbyte[] pathBytes = null;", "-\t\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t\tpathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\t\t\t\t\tpathBytes = mozillaPath.getBytes ();", "+\t\t\t\t\t\t\t\tif (pathBytes_JSEvaluateUCScriptForPrincipals == null) {", "+\t\t\t\t\t\t\t\t\tString mozillaPath = getMozillaPath () + delegate.getJSLibraryName () + '\\0';", "+\t\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\t\tpathBytes_JSEvaluateUCScriptForPrincipals = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\t\t\t\t\tpathBytes_JSEvaluateUCScriptForPrincipals = mozillaPath.getBytes ();", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals (pathBytes, nativeContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, result) != 0;", "+\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals (pathBytes_JSEvaluateUCScriptForPrincipals, nativeContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, result) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565e74837e5fd0846c894e999b380ab1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "47b58e6cc96857ee61ff9133445cdd7d818dda98", "commitAfterChange": "ca982392e30f7e92b4d9c90a0826b6836388f5e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in Internet Explorer.  If the NewWindow2 event", "-\t\t\t\t\t* is not handled, Internet Explorer opens a new standalone", "-\t\t\t\t\t* instance, as documented in MSDN.  The workaround is to", "-\t\t\t\t\t* default to Cancel true before dispatching the WindowEvent ", "-\t\t\t\t\t* to the application since the application handler could", "-\t\t\t\t\t* throw an exception.", "-\t\t\t\t\t*/", "-\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{COM.VARIANT_TRUE}, 2);", "+\t\t\t\t\tnewEvent.required = false;", "-\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{doit ? COM.VARIANT_FALSE : COM.VARIANT_TRUE}, 2);", "+\t\t\t\t\tif (newEvent.required) {", "+\t\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{doit ? COM.VARIANT_FALSE : COM.VARIANT_TRUE}, 2);", "+\t\t\t\t\t}"]}], "num": 35333}