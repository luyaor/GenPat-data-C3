{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7257e28d277d9b7e04dfe6881c07d3b3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f74964fdfa8e89bc8b315d5d03a31f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint code = OS.eventNotHandledErr;", "-\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\tif (stringRef [0] != 0) {", "+\t\t\tif (stringRef [0] != 0) {", "+\t\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\t\treturn OS.noErr;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (attributeName.equals (OS.kAXRoleDescriptionAttribute)) {", "-\t\t\t\tif (stringRef [0] != 0) {", "+\t\t\t\t} else { // kAXRoleDescriptionAttribute", "-\t\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\t\treturn OS.noErr;", "+\t\t\t\tOS.CFRelease(stringRef [0]);", "+\t\t\t\tcode = OS.noErr;", "-\t\treturn accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "+\t\tcode = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a656142c560073f09928d07a73089570", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint code = OS.eventNotHandledErr;", "-\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\tif (stringRef [0] != 0) {", "+\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\tcode = OS.noErr;", "-\t\t\t}", "-\t\t}", "-\t\tif (attributeName.equals (OS.kAXRoleDescriptionAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\t\t} else { // kAXRoleDescriptionAttribute", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\tcode = OS.noErr;", "+\t\t\tOS.CFRelease(stringRef [0]);", "+\t\t\tcode = OS.noErr;", "-\t\tint err = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "-\t\tif (err != OS.eventNotHandledErr) return err;", "+\t\tcode = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1eeda3510c47d941bd22269cac246f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint code = OS.eventNotHandledErr;", "-\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\tif (stringRef [0] != 0) {", "+\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\treturn OS.noErr;", "-\t\t\t}", "-\t\t}", "-\t\tif (attributeName.equals (OS.kAXRoleDescriptionAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\t\t} else { // kAXRoleDescriptionAttribute", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\treturn OS.noErr;", "+\t\t\tOS.CFRelease(stringRef [0]);", "+\t\t\tcode = OS.noErr;", "-\t\treturn accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "+\t\tcode = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, code);"]}], "num": 41111}