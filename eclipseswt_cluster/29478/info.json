{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa1a18ca750487a7f646e67d60a68f0a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7777ffc7a146eb603aafcc4f0a8dca5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "1c0b56740ef43e34c3cd026e786b32fc7a44d230", "commitAfterChange": "800f0db681dd224b4823f551f85cc352d9839ab0", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \r public void setVisible (boolean visible)", "signatureAfterChange": "\r \r public void setVisible (boolean visible)", "diff": ["-\tsuper.setVisible (visible);\r", "+\r", "+\tint flags = visible ? 0 : OS.Pt_DELAY_REALIZE;\r", "+\tOS.PtSetResource (shellHandle, OS.Pt_ARG_FLAGS, flags, OS.Pt_DELAY_REALIZE);\r", "+\tif (visible) {\r", "+\t\tsendEvent (SWT.Show);\r", "+\t\tOS.PtRealizeWidget (shellHandle);\r", "+\t} else {\r", "+\t\tOS.PtUnrealizeWidget (shellHandle);\r", "+\t\tsendEvent(SWT.Hide);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c01f71774f2c94429fc38f16aec8d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void selectAll ()", "signatureAfterChange": "  public boolean isFocusControl ()", "diff": ["+", "+public boolean isFocusControl () {", "+\tcheckWidget();", "+\tif ((style & SWT.DROP_DOWN) != 0 && (text.isFocusControl () || popupShell.isFocusControl () || popupCalendar.isFocusControl())) {", "+\t\treturn true;", "+\t} ", "+\treturn super.isFocusControl ();", "-", "-public void selectAll () {", "-\tcheckWidget ();", "-\tif (handle != 0)", "-\t\tOS.gtk_editable_select_region (handle, 0, -1);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da562003df10e9bb86180be6f734a9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "6a31a88c4dd02044117260b4697f4f85ff7a38d7", "commitAfterChange": "0a57f6cd4bb33b35d17bc0a2658b39e7e1339990", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void setOrientation (int orientation)", "signatureAfterChange": "  void setOrientation()", "diff": ["+void setOrientation() {", "+\tsuper.setOrientation();", "+\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+\t\tOS.gtk_widget_set_direction (listHandle, OS.GTK_TEXT_DIR_RTL);", "+\t\tOS.gtk_widget_set_direction (entryHandle, OS.GTK_TEXT_DIR_RTL);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa1cd3a9868e5064e45161ecbbfbd9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2d8fb880970ff4bb0878d1a56ffec6f088c9d493", "commitAfterChange": "bae278f5f9ff6c79b79331f037b2e24e2349ad2e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void redraw ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+void hookEvents () {", "+\tsuper.hookEvents ();", "+\tif ((state & CANVAS) != 0) {", "+\t\tif ((style & SWT.NO_MERGE_MOUSE) == 0) {", "+\t\t\tOS.gtk_widget_add_events (handle, OS.GDK_POINTER_MOTION_HINT_MASK);", "-public void redraw () {", "-\tcheckWidget();", "-\tOS.gtk_widget_queue_draw(paintHandle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4016ba0bb9df7ff42846c8dd1aab5214", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7480e483a25333f4d017908303b9ace306912f3e", "commitAfterChange": "3f05b17933308a28797bc3f60127d46ecf4e7bd9", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t} else {\t", "+\t} else {", "+\t\t/*", "+\t\t* Bug in GTK.  Invoking gtk_widget_hide() on a widget that has", "+\t\t* focus causes a focus_out_event to be sent. If the client disposes", "+\t\t* the widget inside the event, GTK GP's.  The fix is to reassign focus", "+\t\t* before hiding the widget.", "+\t\t* ", "+\t\t* NOTE: In order to stop the same widget from taking focus,", "+\t\t* temporarily clear and set the GTK_VISIBLE flag.", "+\t\t*/", "+\t\tif (!visible && isFocusAncestor ()) {", "+\t\t\tint flags = OS.GTK_WIDGET_FLAGS (topHandle);", "+\t\t\tOS.GTK_WIDGET_UNSET_FLAGS (topHandle, OS.GTK_VISIBLE);", "+\t\t\tfixFocus ();", "+\t\t\tif (isDisposed ()) return;", "+\t\t\tif ((flags & OS.GTK_VISIBLE) != 0) {", "+\t\t\t\tOS.GTK_WIDGET_SET_FLAGS (topHandle, OS.GTK_VISIBLE);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9208d64f3c690aff8e65b14b1cb02865", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "91ca9b8718f2b061952edf08ad752d3a1aa6ef26", "commitAfterChange": "68f0b2e8cff5a7017114b74b4351a0580279181c", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t//NOT DONE", "-\tif (keyCode [0] == 114) {", "-\t\t//HELP KEY", "+\tif (keyCode [0] == 114) { /* Help */", "+\t\tControl control = this;", "+\t\twhile (control != null) {", "+\t\t\tif (control.hooks (SWT.Help)) {", "+\t\t\t\tcontrol.postEvent (SWT.Help);", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcontrol = control.parent;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eead1dd53c15ea35eb4346b8ad63d3e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "726f6fe3056b38f83242bb17980b51fa78f5e9cd", "commitAfterChange": "0e121bf1dc645ba655e2df35d7d88e044d43e4cf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void moveHandle (int x, int y)", "signatureAfterChange": "  void moveHandle (int x, int y)", "diff": ["+\t/*", "+\t* Feature in GTK.  Calling gtk_fixed_move() to move a child causes", "+\t* the whole parent to redraw.  This is a performance problem. The", "+\t* fix is temporarily make the parent not visible during the move.", "+\t* ", "+\t* NOTE: Because every widget in SWT has an X window, the new and", "+\t* old bounds of the child are correctly redrawn.", "+\t*/", "+\tint flags = OS.GTK_WIDGET_FLAGS (parentHandle);", "+\tOS.GTK_WIDGET_UNSET_FLAGS (parentHandle, OS.GTK_VISIBLE);", "+\tif ((flags & OS.GTK_VISIBLE) != 0) {", "+\t\tOS.GTK_WIDGET_SET_FLAGS (parentHandle, OS.GTK_VISIBLE);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88cb9931dcf0cb7796cac213353fa4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e8e493855b8ddec0750bbef659c207127da52a1f", "commitAfterChange": "2d35717052f8ce80bad026f4256657d10ab618ef", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r void sendHelpEvent (int helpType)", "signatureAfterChange": "\r \r boolean sendHelpEvent (int helpType)", "diff": ["-void sendHelpEvent (int helpType) {\r", "+boolean sendHelpEvent (int helpType) {\r", "+\tif (selectedItem != null && !selectedItem.isDisposed()) {\r", "+\t\tif (selectedItem.hooks (SWT.Help)) {\r", "+\t\t\tselectedItem.postEvent (SWT.Help);\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "-\t\treturn;\r", "+\t\treturn true;\r", "-\tparent.sendHelpEvent (helpType);\r", "+\treturn parent.sendHelpEvent (helpType);\r"]}], "num": 29478}