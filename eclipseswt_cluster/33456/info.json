{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d0d5b07231d742c893596b599086222", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78be5469909e27b0ccfc2f4ff6094383", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 49, "signatureBeforeChange": " final int processEvent (int eventNumber, MacControlEvent mcEvent)", "signatureAfterChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventControlDraw (int nextHandler, int theEvent, int userData) {", "+\tint [] theControl = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeControlRef, null, 4, null, theControl);", "+\tint [] region = new int [1];\t", "+\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, region);", "+\tint visibleRgn = getVisibleRegion (theControl [0]);", "+\tint oldClip = OS.NewRgn ();", "+\tOS.GetClip (oldClip);", "+\tOS.SectRgn(region [0], visibleRgn, visibleRgn);", "+\tOS.SetClip (visibleRgn);", "+\tdrawWidget (theControl [0]);", "+\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tOS.SetClip (oldClip);", "+\tOS.DisposeRgn (visibleRgn);", "+\tOS.DisposeRgn (oldClip);", "+\treturn result;", "+}", "-}", "-final int processEvent (int eventNumber, MacControlEvent mcEvent) {", "-\tswitch (eventNumber) {", "-\tcase SWT.Selection:\treturn processSelection (mcEvent);", "-\tcase SWT.Paint:\t\treturn processPaint (mcEvent);", "-\tdefault:", "-\t\tSystem.out.println(\"Widget.processEvent(MacMouseEvent): unexpected event\");", "-\t\tbreak;", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30bf21e6c461787d1024aecea8fc76c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " void hookEvents ()", "signatureAfterChange": " void hookEvents ()", "diff": ["-\t/* AW", "-\tint windowProc = getDisplay ().windowProc;", "-\tOS.XtAddEventHandler (handle, OS.KeyPressMask, false, windowProc, SWT.KeyDown);", "-\tOS.XtAddEventHandler (handle, OS.KeyReleaseMask, false, windowProc, SWT.KeyUp);", "-\tOS.XtAddEventHandler (handle, OS.ButtonPressMask, false, windowProc, SWT.MouseDown);", "-\tOS.XtAddEventHandler (handle, OS.ButtonReleaseMask, false, windowProc, SWT.MouseUp);", "-\tOS.XtAddEventHandler (handle, OS.PointerMotionMask, false, windowProc, SWT.MouseMove);", "-\tOS.XtAddEventHandler (handle, OS.EnterWindowMask, false, windowProc, SWT.MouseEnter);", "-\tOS.XtAddEventHandler (handle, OS.LeaveWindowMask, false, windowProc, SWT.MouseExit);", "-\tOS.XtAddCallback (handle, OS.XmNexposeCallback, windowProc, SWT.Paint);", "-\t*/", "-\tDisplay display= getDisplay();\t\t", "-\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneDrawProcTag, display.fUserPaneDrawProc);", "-\tif ((style & SWT.SEPARATOR) != 0) return;", "-\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneHitTestProcTag, display.fUserPaneHitTestProc);", "+\tDisplay display = getDisplay ();", "+\tint controlProc = display.controlProc;", "+\tint [] mask1 = new int [] {", "+\t\tOS.kEventClassControl, OS.kEventControlDraw,", "+\t\tOS.kEventClassControl, OS.kEventControlHit,", "+\t};", "+\tint controlTarget = OS.GetControlEventTarget (handle);", "+\tOS.InstallEventHandler (controlTarget, controlProc, mask1.length / 2, mask1, handle, null);", "+\tint [] mask2 = new int [] {", "+\t\tOS.kEventClassControl, OS.kEventControlDraw,", "+\t};", "+\tif (iconHandle != 0) {", "+\t\tcontrolTarget = OS.GetControlEventTarget (iconHandle);", "+\t\tOS.InstallEventHandler (controlTarget, controlProc, mask2.length / 2, mask2, iconHandle, null);", "+\t}", "+\tif (labelHandle != 0) {", "+\t\tcontrolTarget = OS.GetControlEventTarget (labelHandle);", "+\t\tOS.InstallEventHandler (controlTarget, controlProc, mask2.length / 2, mask2, labelHandle, null);", "+\t}", "+\tif (arrowHandle != 0) {", "+\t\tcontrolTarget = OS.GetControlEventTarget (arrowHandle);", "+\t\tOS.InstallEventHandler (controlTarget, controlProc, mask2.length / 2, mask2, arrowHandle, null);", "+\t}", "+\tint helpProc = display.helpProc;", "+\tOS.HMInstallControlContentCallback (handle, helpProc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0769f81400e1160f544d6d0df2b48a24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/carbon/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "2291cc53864300688c3a58c6df5ee259c93044d9", "commitAfterChange": "05a8cbba5a9312a46e3a6b81585ac0edaa21107d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static int eventProc3 (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  static int eventProc3 (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t\t\tint result = OS.noErr;", "-\t\t\t\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "+", "+\t\t\t\t/*", "+\t\t\t\t* Pressing the OSX shortcut to put focus into the menu bar does not work in", "+\t\t\t\t* embedded mozilla.  If this shortcut is not handled here then it falls through", "+\t\t\t\t* all of the key handlers for some reason.  The workaround is to detect this", "+\t\t\t\t* shortcut here and put focus into the menu bar.", "+\t\t\t\t*/", "+\t\t\t\tint [] modifiers = new int [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, modifiers.length * 4, null, modifiers);", "+\t\t\t\tint [] keyCode = new int [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\t\t\tif (keyCode [0] == 120 /* F2 */ && (modifiers[0] & (OS.controlKey | OS.cmdKey | OS.optionKey)) == OS.controlKey) {", "+\t\t\t\t\tint[] event = new int[1];", "+\t\t\t\t\tOS.CreateEvent (0, OS.kEventClassApplication, OS.kEventAppFocusMenuBar, 0.0, 0, event);", "+\t\t\t\t\tif (event [0] != 0) {", "+\t\t\t\t\t\tOS.SetEventParameter (event [0], OS.kEventParamKeyModifiers, OS.typeUInt32, 4, modifiers);", "+\t\t\t\t\t\tresult = OS.SendEventToEventTarget (event [0], OS.GetApplicationEventTarget ());", "+\t\t\t\t\t\tOS.ReleaseEvent (event [0]);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t\t}", "+"]}], "num": 33456}