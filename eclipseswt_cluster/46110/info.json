{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ece378431a3bc3dd0648079d85fe552f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d316d8542362833be7bc0dc0ddf1f68d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "e983d4a13eb008de83ecbad342d94b6462cebe78", "commitAfterChange": "314fe3eaa680cd637146bed36cfd41bc773b01ef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \t\tvoid createStyle(Font defaultFont)", "signatureAfterChange": "  \t\tvoid createStyle(Font defaultFont)", "diff": ["+\t\t\tboolean synthesize = false;", "+\t\t\t\tshort[] realStyle = new short[1];", "+\t\t\t\tOS.FMGetFontFromFontFamilyInstance(font.id, font.style, buffer, realStyle);", "+\t\t\t\tsynthesize = font.style != realStyle[0];", "+\t\t\t\tif (synthesize) {", "+\t\t\t\t\tlength += 2;", "+\t\t\t\t\tptrLength += 8;", "+\t\t\t\t}", "+", "+\t\t\t\tif (synthesize) {", "+\t\t\t\t\tbyte[] buffer1 = new byte[1];", "+\t\t\t\t\tbuffer1[0] = (font.style & OS.italic) != 0 ? (byte)1 : 0;", "+\t\t\t\t\ttags[index] = OS.kATSUQDItalicTag;", "+\t\t\t\t\tsizes[index] = 1;", "+\t\t\t\t\tvalues[index] = ptr1;", "+\t\t\t\t\tOS.memcpy(values[index], buffer1, sizes[index]);", "+\t\t\t\t\tptr1 += sizes[index];", "+\t\t\t\t\tindex++;\t", "+", "+\t\t\t\t\tbuffer1[0] = (font.style & OS.bold) != 0 ? (byte)1 : 0;", "+\t\t\t\t\ttags[index] = OS.kATSUQDBoldfaceTag;", "+\t\t\t\t\tsizes[index] = 1;", "+\t\t\t\t\tvalues[index] = ptr1;", "+\t\t\t\t\tOS.memcpy(values[index], buffer1, sizes[index]);", "+\t\t\t\t\tptr1 += sizes[index];", "+\t\t\t\t\tindex++;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54078e90c7505f4b9a29070c0df0551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "b6e1dfbb6c67b65776d109a1647ed8268f4264ac", "commitAfterChange": "8942ba8a9d79dd34f979163ed220689a24ee99c0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) {", "+\t\t\t\tx -= w - 36;", "+\t\t\t\tpolyline[12] = w-36; ", "+\t\t\t\tpolyline[14] = w-16; ", "+\t\t\t\tpolyline[16] = w-15; ", "+\t\t\t\tborderPolygon[12] = w-35;", "+\t\t\t\tborderPolygon[14] = borderPolygon[16]  = w-16;", "+\t\t\t}", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) {", "+\t\t\t\tx -= w - 36;", "+\t\t\t\tpolyline [42] =  polyline [44] =  w-16;", "+\t\t\t\tpolyline [46] = w-35;", "+\t\t\t\tborderPolygon[36] = borderPolygon[38] = w-17;", "+\t\t\t\tborderPolygon [40] = w-35;", "+\t\t\t}", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) {", "+\t\t\t\tx += w - 35;", "+\t\t\t\tpolyline [12] = polyline [14] = 16;", "+\t\t\t\tpolyline [16] = 35;", "+\t\t\t\tborderPolygon[12] =  borderPolygon[14] = 16;", "+\t\t\t\tborderPolygon [16] = 35;", "+\t\t\t}", "+\t\t\tif ((parent.style & SWT.MIRRORED) != 0) {", "+\t\t\t\tx += w - 35;", "+\t\t\t\tpolyline [42] =  35;", "+\t\t\t\tpolyline [44] = polyline [46] = 16;", "+\t\t\t\tborderPolygon[36] = 35;", "+\t\t\t\tborderPolygon[38] = borderPolygon [40] = 17;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00f57cbba19ea2630acf37667d7b895", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "73b51de8c84174e0e99b4c04bc9fd87166a96cec", "commitAfterChange": "7df940ae424cbd3c79310d7b9bc5d657b5781f6f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t \tpublic static int carbon_createCIcon(Image image)", "signatureAfterChange": " \t \tpublic static int carbon_createCIcon(Image image)", "diff": ["-\t\t\tshort[] reds= new short[256];", "-\t\t\tshort[] greens= new short[256];", "-\t\t\tshort[] blues= new short[256];", "+\t\t\tbyte[] reds= new byte[256];", "+\t\t\tbyte[] greens= new byte[256];", "+\t\t\tbyte[] blues= new byte[256];", "+\t\t\t", "+\t\t\tboolean d16= id.depth == 16;", "-\t\t\t\t\t\treds[index]= (short)((value >> 16) & 0xFF);", "-\t\t\t\t\t\tgreens[index]= (short)((value >> 8) & 0xFF); ", "-\t\t\t\t\t\tblues[index]= (short)(value & 0xFF); ", "+\t\t\t\t\t\tif (!d16) {", "+\t\t\t\t\t\t\treds[index]= (byte)((value >> 16) & 0xFF);", "+\t\t\t\t\t\t\tgreens[index]= (byte)((value >> 8) & 0xFF); ", "+\t\t\t\t\t\t\tblues[index]= (byte)((value) & 0xFF);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\treds[index]= (byte)(((value >> 10) & 0x1F) << 3);", "+\t\t\t\t\t\t\tgreens[index]= (byte)(((value >> 5) & 0x1F) << 3); ", "+\t\t\t\t\t\t\tblues[index]= (byte)(((value) & 0x1F) << 3);", "+\t\t\t\t\t\t}", "-\t\t\tSystem.out.println(\"---> CIcon: can use pixmap\");", "+\t\t\t//System.out.println(\"---> CIcon: can use pixmap\");"]}], "num": 46110}