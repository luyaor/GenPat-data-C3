{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d54d8dd4b3c3125f8a67d2be5186ff08", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b8be7079ed46381287020d32323b48f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "8101f7f5f44566cf81f38ba85390fc7bfab964fe", "commitAfterChange": "400bebb2a46a56d23a0e63f638771142001b2d2f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void add (String string)", "signatureAfterChange": " public void add (String string)", "diff": ["+\t\t/*", "+\t\t* Feature in the Macintosh.  Setting text that starts with \"-\" makes the", "+\t\t* menu item a separator.  The fix is to clear the separator attribute. ", "+\t\t*/", "+\t\tif (string.startsWith (\"-\")) {", "+\t\t\tOS.ChangeMenuItemAttributes (menuHandle, (short)OS.CountMenuItems (menuHandle), 0, OS.kMenuItemAttrSeparator);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ede206175d286aa5df70a378d482ec0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3e7c054ba02f8b95e224747901288e722797da62", "commitAfterChange": "7a99d68eb1843778f277a07c7a0e4a12a15b3672", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "diff": ["+\t/*", "+\t* Feature in the Macintosh.  If the focus target is changed", "+\t* before the default handler for the widget has run, the key", "+\t* goes to the new focus widget.  The fix is to explicitly", "+\t* send the event to the original focus widget and stop", "+\t* the chain of handlers.", "+\t*/", "+\tif (!isDisposed () && !hasFocus ()) {", "+\t\tOS.SendEventToEventTarget (theEvent, OS.GetControlEventTarget (handle));", "+\t\treturn OS.noErr;", "+\t}"]}], "num": 31001}