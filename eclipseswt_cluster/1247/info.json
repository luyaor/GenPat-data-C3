{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "364f215a462d4413eb5ad4744c61cef9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675b36ac1e42dd56e55d7bd5777ab337", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "37dd5b45c717603ed638fff2257cc13bcbb77f6a", "commitAfterChange": "8eba6ff70d96340be32539fddaffb1fea3259678", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 114, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight, boolean force)", "signatureAfterChange": " boolean updateTabHeight(int oldHeight, boolean force)", "diff": ["-\tif (onBottom) {", "-\t\tcurve = bezier(0, tabHeight + 2,", "-\t\t               CURVE_LEFT, tabHeight + 2,", "-\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "-\t\t               CURVE_WIDTH, 1,", "-\t\t               CURVE_WIDTH);", "-\t\t// workaround to get rid of blip at end of bezier", "-\t\tint index = -1;", "-\t\tfor (int i = 0; i < curve.length/2; i++) {", "-\t\t\tif (curve[2*i+1] > tabHeight) {", "-\t\t\t\tindex = i;", "-\t\t\t} else {", "-\t\t\t\tbreak;", "+\tif (!simple) {", "+\t\tif (onBottom) {", "+\t\t\tcurve = bezier(0, tabHeight + 2,", "+\t\t\t               CURVE_LEFT, tabHeight + 2,", "+\t\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "+\t\t\t               CURVE_WIDTH, 1,", "+\t\t\t               CURVE_WIDTH);", "+\t\t\t// workaround to get rid of blip at end of bezier", "+\t\t\tint index = -1;", "+\t\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\t\tif (curve[2*i+1] > tabHeight) {", "+\t\t\t\t\tindex = i;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\tif (index > 0) {", "+\t\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "+\t\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "+\t\t\t\tcurve = newCurve;", "+\t\t\t}\t", "+\t\t} else {", "+\t\t\tcurve = bezier(0, 0,", "+\t\t\t               CURVE_LEFT, 0, ", "+\t\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "+\t\t\t               CURVE_WIDTH, tabHeight + 1,", "+\t\t\t               CURVE_WIDTH);", "-\t\tif (index > 0) {", "-\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "-\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "-\t\t\tcurve = newCurve;", "-\t\t}\t", "-\t} else {", "-\t\tcurve = bezier(0, 0,", "-\t\t               CURVE_LEFT, 0, ", "-\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "-\t\t               CURVE_WIDTH, tabHeight + 1,", "-\t\t               CURVE_WIDTH);", "-\t\t// workaround to get rid of blip at end of bezier", "-//\t\tint index = -1;", "-//\t\tfor (int i = 0; i < curve.length/2; i++) {", "-//\t\t\tif (curve[2*i+1] > tabHeight+1) {", "-//\t\t\t\tindex = i;", "-//\t\t\t\tbreak;", "-//\t\t\t}", "-//\t\t}", "-//\t\tif (index > 0) {", "-//\t\t\tint[] newCurve = new int[2*(index-1)];", "-//\t\t\tSystem.arraycopy(curve, 0, newCurve, 0, newCurve.length);", "-//\t\t\tcurve = newCurve;", "-//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7b23c44c2c47845f7b1dbeb0897cf53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3467472aa67908051e1d9e3a69c4bb746a4bdceb", "commitAfterChange": "54a28706dd7a2d1a569470ebdec501aa24da7500", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  int msgFilterProc (int code, int wParam, int lParam)", "signatureAfterChange": "  int msgFilterProc (int code, int wParam, int lParam)", "diff": ["-\tif (code >= 0) {", "-\t\tOS.MoveMemory (hookMsg, lParam, MSG.sizeof);", "-\t\tif (hookMsg.message == OS.WM_NULL) {", "-\t\t\tif (runAsyncMessages ()) wakeThread ();", "+\tif (!ignoreMsgFilter) {", "+\t\tif (code >= 0) {", "+\t\t\tOS.MoveMemory (hookMsg, lParam, MSG.sizeof);", "+\t\t\tif (hookMsg.message == OS.WM_NULL) {", "+\t\t\t\tif (runAsyncMessages ()) wakeThread ();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eeb4930ad22d9c8d06a90a5c6ee9159", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "30e1956424be7abcaa0e780fd7c2fa960d50ebff", "commitAfterChange": "53ea4503362f7c2c8444634c8fc92aef195d321a", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 220, "signatureBeforeChange": " void handleTextChanged(TextChangedEvent event)", "signatureAfterChange": " void handleTextChanged(TextChangedEvent event)", "diff": ["-\tupdateSelection(lastTextChangeStart, lastTextChangeReplaceCharCount, lastTextChangeNewCharCount);", "+\tif (!blockSelection) {", "+\t\tupdateSelection(lastTextChangeStart, lastTextChangeReplaceCharCount, lastTextChangeNewCharCount);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb948f7131d17b9ba2f5d2e532f56311", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "e68f6dd7961c12937e9660a6a57b980c17ed895a", "commitAfterChange": "6c6dfbde54f73e110515be4b620f4ab18c1f4c84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static Browser FindBrowser (long webView)", "signatureAfterChange": "  static Browser FindBrowser (long webView)", "diff": ["+", "-\tparent = OS.gtk_widget_get_parent (parent);", "+\tif (!WEBKIT2){", "+\t\tparent = OS.gtk_widget_get_parent (parent);", "+\t}"]}], "num": 1247}