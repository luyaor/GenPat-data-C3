{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d9766aaaeccdd0b42786b3a7684bdf2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dd61da95423b6a5c5d3a4ae1e6f4708", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "ed1c238f5a90c715845161c91b31d4b1ab96340b", "commitAfterChange": "bcca31454b9302731fd14aa50436025950657f5a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \r LRESULT WM_SETREDRAW (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SETREDRAW (int wParam, int lParam)", "diff": ["-\t* \r", "+\t*\r", "+\t* \r", "+\t* NOTE:  In version 6.00 of COMCTL32.DLL, when WM_SETREDRAW\r", "+\t* is off, we cannot detect that the size has changed causing\r", "+\t* pixel corruption.  The fix is to disallow WM_SETREDRAW by\r", "+\t* by not running the default window proc or the rebar window\r", "+\t* proc.\r", "-\tRectangle rect = getBounds ();\r", "+\tif (COMCTL32_MAJOR >= 6) return LRESULT.ZERO;\r", "+\tRectangle rect = getBounds ();\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c02f3395793cf8070f66e5d8e7a2c71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "e9a0a8a473f19cbb5f3b647036f0938863649fb4", "commitAfterChange": "aec7bef7b910798d977e991d3426c01cdb0e564c", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "diff": ["+\t*  Bug in Windows.  Somehow, the widget is becoming disposed after", "+\t*  calling PeekMessage().  In rare cirucmstances, it seems that", "+\t*  PeekMessage() can allow SWT listeners to run that might contain", "+\t*  application code that disposes the widget.  It is not exactly", "+\t*  clear how this can happen.  PeekMessage() is only looking for", "+\t*  WM_DEADCHAR.  It is not dispatching any message that it finds", "+\t*  or removing any message from the queue.  Cross-thread messages", "+\t*  are disabled.  The fix is to check for a disposed widget and", "+\t*  return without calling the window proc.", "+\t*/", "+\tif (isDisposed ()) return LRESULT.ONE;", "+\t", "+\t/*"]}], "num": 7073}