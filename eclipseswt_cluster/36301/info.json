{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ef7ec62eb3e60b6980a188a5b23d747", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f381c5f9856089982e34102458596a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " void paint (GC gc, TableColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint (GC gc, TableColumn column, boolean paintCellContent)", "diff": ["-\t\tif (columnIndex == 0) {", "+\t\tTableColumn[] orderedColumns = parent.orderedColumns;", "+\t\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "-\t\t\t\tgc.fillRectangle (focusBounds.x + 1, focusBounds.y + 1, fillWidth, focusBounds.height - 2);", "+\t\t\t\tif (fillWidth > 0) {", "+\t\t\t\t\tgc.fillRectangle (focusBounds.x + 1, focusBounds.y + 1, fillWidth, focusBounds.height - 2);", "+\t\t\t\t}", "-\t\t\t\tgc.fillRectangle (column.getX (), y + 2, fillWidth, itemHeight - 3);", "+\t\t\t\tif (fillWidth > 0) {", "+\t\t\t\t\tgc.fillRectangle (column.getX (), y + 2, fillWidth, itemHeight - 3);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea4fb531f922dceee7d3f3b3844f34b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "06f4740293e90e57bff4533048824d8ea3910bfe", "commitAfterChange": "3ec53a36badea8b67ca02e730657468177200562", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "signatureAfterChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "diff": ["+\tString[] oldItems = this.items;", "-\t\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t/*", "+\t\t * A call to gtk_combo_set_popdown_strings will result in the top item being selected", "+\t\t * and a SELECT_CHILD and CHANGED event will be sent.  In the case where there", "+\t\t * are no entires in the Combo widget and the first item is added, it is neccessary", "+\t\t * to inform the application that a selection has occurred.  However, in all other cases,", "+\t\t * the previous selection should be maintained and the application should not", "+\t\t * be notified of a selection change.", "+\t\t */", "+\t\tboolean block = oldItems != null && oldItems.length > 0;", "+\t\tif (block) {", "+\t\t\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t}", "-\t\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\tif (block) {", "+\t\t\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t}"]}], "num": 36301}