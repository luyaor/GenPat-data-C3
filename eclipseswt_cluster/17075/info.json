{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa56b977bd3ddd4f3ff1d7099c7b4be2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72efe5a9781649ed4e83d11613dbf27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "447dc13aedb5b734fa5967d09039d0879d387091", "commitAfterChange": "55b1424764e39b9136b8d04de6c87a5aea15c2ba", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void setItemSizes (Point [] sizes)", "signatureAfterChange": "\r void setItemSizes (Point [] sizes)", "diff": ["-\tif (sizes.length != count) error (SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (sizes.length != count) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\tRECT rect = new RECT ();\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, i, rect);\r", "-\t\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "-\t\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "-\t\r", "-\t\t/* Get the child size fields first so we don't overwrite them. */\r", "-\t\trbBand.fMask = OS.RBBIM_CHILDSIZE;\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "-\t\t\r", "-\t\t/* Set the size fields we are currently modifying. */\r", "-\t\trbBand.fMask = OS.RBBIM_CHILDSIZE | OS.RBBIM_SIZE | OS.RBBIM_IDEALSIZE;\r", "-\t\tint width = sizes [i].x, height = sizes [i].y;\r", "-\t\trbBand.cx = width;\r", "-\t\trbBand.cxIdeal = width - rect.left - rect.right;\r", "-\t\trbBand.cyChild = rbBand.cyMinChild = rbBand.cyMaxChild = height;\r", "-\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, i, rbBand);\r", "+\t\titems [i].setSize (sizes [i].x, sizes [i].y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "433c4ff407621d794813765fbb047e00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "\r public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\r", "-\t/* Get the size of the trimmings */\r", "-\tboolean hasMenu = ((bits & OS.WS_CHILD) == 0) && (OS.GetMenu (handle) != 0);\r", "-\tOS.AdjustWindowRectEx (rect, bits, hasMenu, OS.GetWindowLong (handle, OS.GWL_EXSTYLE));\r", "-\r", "-\t/* Get the size of the scroll bars */\r", "+\tOS.AdjustWindowRectEx (rect, bits, false, OS.GetWindowLong (handle, OS.GWL_EXSTYLE));\r", "-\r", "-\t/* Get the height of the menu bar */\r", "-\tif (hasMenu) {\r", "-\t\tRECT testRect = new RECT ();\r", "-\t\tOS.SetRect (testRect, 0, 0, rect.right - rect.left, rect.bottom - rect.top);\r", "-\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, testRect);\r", "-\t\twhile ((testRect.bottom - testRect.top) < height) {\r", "-\t\t\trect.top -= OS.GetSystemMetrics (OS.SM_CYMENU) - OS.GetSystemMetrics (OS.SM_CYBORDER);\r", "-\t\t\tOS.SetRect(testRect, 0, 0, rect.right - rect.left, rect.bottom - rect.top);\r", "-\t\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, testRect);\r", "-\t\t}\r", "-\t}\r", "-\treturn new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\r", "+\tint nWidth = rect.right - rect.left, nHeight = rect.bottom - rect.top;\r", "+\treturn new Rectangle (rect.left, rect.top, nWidth, nHeight);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6d05cd58e197d3c2ab034cbb6dc1c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "7797431085f381781603127c1f820e618e643d20", "commitAfterChange": "81787cd27e32af892df033b20e65ebc1ed6c38e6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r void setItemOrder (int [] itemOrder)", "signatureAfterChange": "\r void setItemOrder (int [] itemOrder)", "diff": ["-\t\t\t/*\r", "-\t\t\t* If the item that is about to be moved is the last item\r", "-\t\t\t* on the row, resize it to the ideal size.  Force the next\r", "-\t\t\t* to last item on the same row to be the maximum size.\r", "-\t\t\t*/\r", "-\t\t\tint lastItemDstRow = getLastIndexOfRow (i);\t\t\t\r", "+\t\t\tint lastItemDstRow = getLastIndexOfRow (i);\t\t\t\t\t\t\t\t\t\r", "-\t\t\t\trbBand.fMask = OS.RBBIM_IDEALSIZE;\r", "-\t\t\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, index, rbBand);\r", "-\t\t\t\t//TEMPORARY CODE\r", "-//\t\t\t\tRECT rect = new RECT ();\r", "-//\t\t\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, index, rect);\r", "-//\t\t\t\trbBand.cx = rbBand.cxIdeal + rect.left + rect.right;\r", "-\t\t\t\trbBand.cx = rbBand.cxIdeal; \r", "-\t\t\t\trbBand.fMask = OS.RBBIM_SIZE;\r", "-\t\t\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, index, rbBand);\r", "-\t\t\t\tif (index - 1 >= 0) {\r", "-\t\t\t\t\trbBand.cx = MAX_WIDTH;\r", "-\t\t\t\t\trbBand.fMask = OS.RBBIM_SIZE;\r", "-\t\t\t\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, index - 1, rbBand);\r", "-\t\t\t\t}\t\t\t\r", "+\t\t\t\tresizeToPreferredWidth (index);\r", "+\t\t\tif (i == lastItemDstRow) {\r", "+\t\t\t\tresizeToPreferredWidth (i);\r", "+\t\t\t}\t\r", "-\t\t\t\r", "-\t\t\t/*\r", "-\t\t\t* If the item that has just been moved now the last item\r", "-\t\t\t* on the row, resize it to the maximum size.\r", "-\t\t\t*/\r", "+\r", "+\t\t\tif (index == lastItemSrcRow && index - 1 >= 0) {\r", "+\t\t\t\tresizeToMaximumWidth (index - 1);\r", "+\t\t\t}\r", "-\t\t\t\trbBand.cx = MAX_WIDTH;\r", "-\t\t\t\trbBand.fMask = OS.RBBIM_SIZE;\r", "-\t\t\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, i, rbBand);\r", "+\t\t\t\tresizeToMaximumWidth (i);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca919b68a0d8bbda9331dfdbd75deec4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tpublic int internal_kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tpublic int internal_kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\tint length = OS.CFArrayGetCount(stringArrayRef);", "-\t\t\tString [] osAllAttributes = new String [length];", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tint stringRef = OS.CFArrayGetValueAtIndex(stringArrayRef, i);", "-\t\t\t\tosAllAttributes[i] = stringRefToString (stringRef);", "-\t\t\t}", "+\t\t\t// TODO make sure each attribute name is not a dup before appending?", "+//\t\t\tint length = OS.CFArrayGetCount(stringArrayRef);", "+//\t\t\tString [] osAllAttributes = new String [length];", "+//\t\t\tfor (int i = 0; i < length; i++) {", "+//\t\t\t\tint stringRef = OS.CFArrayGetValueAtIndex(stringArrayRef, i);", "+//\t\t\t\tosAllAttributes[i] = stringRefToString (stringRef);", "+//\t\t\t}", "-\t\t\tString [] requiredAttributes = {", "-\t\t\t\tOS.kAXRoleAttribute,", "-\t\t\t\tOS.kAXSubroleAttribute,", "-\t\t\t\tOS.kAXRoleDescriptionAttribute,", "-\t\t\t\tOS.kAXHelpAttribute,", "-\t\t\t\tOS.kAXTitleAttribute,", "-\t\t\t\tOS.kAXValueAttribute,", "-\t\t\t\tOS.kAXEnabledAttribute,", "-\t\t\t\tOS.kAXFocusedAttribute,", "-\t\t\t\tOS.kAXParentAttribute,", "-\t\t\t\tOS.kAXChildrenAttribute,", "-\t\t\t\tOS.kAXSelectedChildrenAttribute,", "-\t\t\t\tOS.kAXVisibleChildrenAttribute,", "-\t\t\t\tOS.kAXWindowAttribute,", "-\t\t\t\tOS.kAXTopLevelUIElementAttribute,", "-\t\t\t\tOS.kAXPositionAttribute,", "-\t\t\t\tOS.kAXSizeAttribute,", "-\t\t\t\tOS.kAXDescriptionAttribute,", "-\t\t\t};", "-\t\t\t\tOS.CFArrayAppendValue(stringArrayRef, stringToStringRef(requiredAttributes[i]));", "+\t\t\t\tint stringRef = stringToStringRef(requiredAttributes[i]);", "+\t\t\t\tOS.CFArrayAppendValue(stringArrayRef, stringRef);", "+\t\t\t\tOS.CFRelease(stringRef);", "+\t\t\t}", "+\t\t\tif (accessibleTextListeners.size() > 0) {", "+\t\t\t\tfor (int i = 0; i < textAttributes.length; i++) {", "+\t\t\t\t\tint stringRef = stringToStringRef(textAttributes[i]);", "+\t\t\t\t\tOS.CFArrayAppendValue(stringArrayRef, stringRef);", "+\t\t\t\t\tOS.CFRelease(stringRef);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970502ed5a2e55a078c908391102cce2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "7797431085f381781603127c1f820e618e643d20", "commitAfterChange": "81787cd27e32af892df033b20e65ebc1ed6c38e6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["-\tint lastIndex = getLastIndexOfRow (index);\r", "-\tif (lastIndex != -1 && index == lastIndex + 1) {  \t\r", "-\t\tREBARBANDINFO rbBand2 = new REBARBANDINFO ();\r", "-\t\trbBand2.cbSize = REBARBANDINFO.sizeof;\r", "-\t\trbBand2.fMask = OS.RBBIM_IDEALSIZE;\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, lastIndex, rbBand2);\r", "-\t\trbBand2.fMask = OS.RBBIM_SIZE;\r", "-\t\tRECT rect = new RECT ();\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, lastIndex, rect);\r", "-\t\trbBand2.cx = rbBand2.cxIdeal + rect.left + rect.right;\r", "-\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, lastIndex, rbBand2);\r", "+\tint lastIndex = getLastIndexOfRow (index - 1);\r", "+\tif (index == lastIndex + 1) {  \t\r", "+\t\tresizeToPreferredWidth (lastIndex);\r", "-\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ad06dc4a1f87cbcd088081f7f90a80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds ()", "diff": ["-    if (MacUtil.USE_FRAME) {", "-\t\tRect bounds= new Rect();", "-\t\tinternalGetControlBounds(topHandle, bounds);", "-\t\tint width = bounds.right - bounds.left;", "-\t\tint height = bounds.bottom - bounds.top;", "-\t\treturn new Rectangle(bounds.left, bounds.top, width, height);", "-   } else {", "-\t    Rect bounds= new Rect();", "-\t\tRect pbounds= new Rect();", "-\t\tinternalGetControlBounds(topHandle, bounds);", "-\t\tOS.GetControlBounds(parent.handle, pbounds);", "-\t\tint width = bounds.right - bounds.left;", "-\t\tint height = bounds.bottom - bounds.top;", "-\t\treturn new Rectangle(bounds.left-pbounds.left, bounds.top-pbounds.top, width, height);", "-    }", "+\tRect bounds= new Rect();", "+\tinternalGetControlBounds(topHandle, bounds);", "+\tint width = bounds.right - bounds.left;", "+\tint height = bounds.bottom - bounds.top;", "+\treturn new Rectangle(bounds.left, bounds.top, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fbdb68f361db8044faa9772e58050b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7062e8fe1522be954953abe736d74a670f61f8b5", "commitAfterChange": "84b2f7384099fd4b35f3cdd74a78ca15b410fdfe", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public Monitor[] getMonitors()", "signatureAfterChange": " public Monitor [] getMonitors ()", "diff": ["-public Monitor[] getMonitors() {", "+public Monitor [] getMonitors () {", "-\t\tMonitor monitor = new Monitor();", "-\t\tmonitor.handle = 0;", "-\t\tint width = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "-\t\tint height = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\tmonitor.bounds = new Rectangle (0, 0, width, height);", "-\t\tRECT rect = new RECT ();", "-\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "-\t\tmonitor.clientArea = new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);", "-\t\treturn new Monitor[] { monitor };", "+\t\treturn new Monitor [] {getPrimaryMonitor ()};", "-\tmonitors = new Monitor[4];", "+\tmonitors = new Monitor [4];", "-\tOS.EnumDisplayMonitors(0, null, lpfnEnum, 0);", "-\tcallback.dispose();", "-\tMonitor[] result = new Monitor[monitorCount];", "-\tSystem.arraycopy(monitors, 0, result, 0, monitorCount);", "+\tOS.EnumDisplayMonitors (0, null, lpfnEnum, 0);", "+\tcallback.dispose ();", "+\tMonitor [] result = new Monitor [monitorCount];", "+\tSystem.arraycopy (monitors, 0, result, 0, monitorCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bb99585bb1aca50c5669c9cc28a0dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "fbb292af69fce7799a14de7c3256ae3196bbbc23", "commitAfterChange": "d3b70aad7149876ba42093794d2909bb52409b12", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\tint maxWidth = 0;", "-\t\tif (OS.IsWinCE || OS.WIN32_VERSION < OS.VERSION (4, 10)) {", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "-\t\t\tmaxWidth = (rect.right - rect.left) / 4;", "-\t\t} else {", "-\t\t\tlong /*int*/ hmonitor = OS.MonitorFromWindow (hwnd, OS.MONITOR_DEFAULTTONEAREST);", "-\t\t\tMONITORINFO lpmi = new MONITORINFO ();", "-\t\t\tlpmi.cbSize = MONITORINFO.sizeof;", "-\t\t\tOS.GetMonitorInfo (hmonitor, lpmi);", "-\t\t\tmaxWidth = (lpmi.rcWork_right - lpmi.rcWork_left) / 4;", "-\t\t}", "-\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, maxWidth);", "+\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, getWidth ());"]}], "num": 17075}