{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcff291fbe030d95e85f94044f71d3bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fbcaf447d1bdd6542d5fea4a165a75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": "  void updateArrow ()", "diff": ["-}", "-int processPaint (Object callData) {", "-", "-\tif ((style & SWT.SEPARATOR) != 0 && control != null)", "-\t\treturn 0;", "-\t\t", "-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(handle, bounds.getData());", "-\tbounds.setLocation(0, 0);", "-\t", "-\tint width= bounds.getWidth();", "-\tint height= bounds.getHeight();", "-\t", "-\tfinal Display display = getDisplay ();", "-", "-\tDrawable drawable= new Drawable() {", "-\t\tpublic int internal_new_GC (GCData data) {", "-\t\t\tdata.device = display;", "-\t\t\tdata.foreground = parent.getForegroundPixel();", "-\t\t\tdata.background = parent.getBackgroundPixel();", "-\t\t\tdata.font = parent.font.handle;", "-\t\t\tdata.controlHandle = handle;", "-\t\t\treturn OS.GetWindowPort(OS.GetControlOwner(handle));", "-\t\t}", "-\t\tpublic void internal_dispose_GC (int xGC, GCData data) {", "-\t\t}", "-\t};", "-\t", "-\tboolean hasCursor= hasCursor ();", "-", "-\tGC gc= new GC(drawable);", "-\t", "-\tMacControlEvent me= (MacControlEvent) callData;", "-\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "-\tif (!r.isEmpty()) {", "-\t\t", "-\t\t// erase background", "-\t\tgc.fillRectangle(0, 0, width, height);", "-\t\t", "-\t\tif ((style & SWT.SEPARATOR) != 0) {", "-\t\t", "-\t\t\tOS.DrawThemeSeparator(bounds.getData(), OS.kThemeStateActive);", "-\t\t\t", "-\t\t\t\t\t", "-\t\t\tif ((parent.style & SWT.FLAT) != 0 && set) {", "-\t\t\t\tgc.setBackground(Color.carbon_new(display, 0xE0E0E0, false));", "-\t\t\t\tgc.fillRoundRectangle(1, 1, width-2, height-2, 8, 8);", "-\t\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_GRAY));", "-\t\t\t\tgc.drawRoundRectangle(1, 1, width-3, height-3, 8, 8);", "-\t\t\t}", "-\t\t", "-\t\t\tImage currentImage = image;", "-\t\t\tboolean enabled = getEnabled();", "-\t\t", "-\t\t\tshort[] newInfo= new short[3];", "-\t\t\t\t\t", "-\t\t\tnewInfo[1]= set ? OS.kThemeButtonOn : OS.kThemeButtonOff;", "-\t\t\t", "-\t\t\tif ((parent.style & SWT.FLAT) != 0) {", "-\t\t\t\t", "-\t\t\t\tif (hasCursor && enabled) {", "-\t\t\t\t\tif (OS.StillDown())", "-\t\t\t\t\t\tnewInfo[0]= OS.kThemeStatePressed;", "-\t\t\t\t\telse", "-\t\t\t\t\t\tnewInfo[0]= OS.kThemeStateActive;", "-\t\t\t\t} else", "-\t\t\t\t\tnewInfo= null;", "-\t\t\t\t", "-\t\t\t\t/* Determine if hot image should be used */", "-\t\t\t\tif (enabled && hasCursor && hotImage != null) {", "-\t\t\t\t\tcurrentImage = hotImage;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tnewInfo[0]= (hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive;", "-\t\t\t}", "-\t", "-\t\t\tif (newInfo != null) {", "-\t\t\t\tMacRect b= new MacRect(1, 1, width-2, height-2);", "-\t\t\t\tOS.DrawThemeButton(b.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "-\t\t\t}", "-\t\t\tfPrevInfo= newInfo;", "-\t\t\t\t", "-\t\t\tif (enabled) {", "-\t\t\t\tgc.setForeground (parent.getForeground());", "-\t\t\t} else {", "-\t\t\t\tcurrentImage = disabledImage;", "-\t\t\t\tif (currentImage == null && image != null) {", "-\t\t\t\t\tcurrentImage = new Image (display, image, SWT.IMAGE_DISABLE);", "-\t\t\t\t}", "-\t\t\t\tColor disabledColor = display.getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW);", "-\t\t\t\tgc.setForeground (disabledColor);", "-\t\t\t}", "-\t\t\t", "-\t\t\tint textX = 0, textY = 0, textWidth = 0, textHeight = 0;", "-\t\t\tif (text.length() > 0) {", "-\t\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "-\t\t\t\tPoint textExtent = gc.textExtent (text, flags);", "-\t\t\t\ttextWidth = textExtent.x;", "-\t\t\t\ttextHeight = textExtent.y;", "-\t\t\t}\t", "-\t\t\tint imageX = 0, imageY = 0, imageWidth = 0, imageHeight = 0;", "-\t\t\tif (currentImage != null) {", "-\t\t\t\ttry { // AW FIXME", "-\t\t\t\t\tRectangle imageBounds = currentImage.getBounds ();", "-\t\t\t\t\timageWidth = imageBounds.width;", "-\t\t\t\t\timageHeight = imageBounds.height;", "-\t\t\t\t} catch (SWTError e) {", "-\t\t\t\t\tSystem.out.println(\"ToolItem.processPaint: error in image.getBounds: \" + e);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "-\t\t\tint spacing = 0;", "-\t\t\tif (textWidth != 0 && imageWidth != 0) spacing = 2;", "-\t\t\tif ((parent.style & SWT.RIGHT) != 0) {", "-\t\t\t\timageX = (width - imageWidth - textWidth - spacing) / 2;", "-\t\t\t\timageY = (height - imageHeight) / 2;", "-\t\t\t\ttextX = spacing + imageX + imageWidth;", "-\t\t\t\ttextY = (height - textHeight) / 2;", "-\t\t\t} else {\t\t", "-\t\t\t\timageX = (width - imageWidth) / 2;", "-\t\t\t\timageY = (height - imageHeight - textHeight - spacing) / 2;", "-\t\t\t\ttextX = (width - textWidth) / 2;", "-\t\t\t\ttextY = spacing + imageY + imageHeight;", "-\t\t\t}", "-\t\t\t", "-\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\t\ttextX -= 6;  imageX -=6;", "-\t\t\t}", "-\t\t\tif (textWidth > 0) {", "-\t\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT;", "-\t\t\t\tgc.drawText(text, textX, textY, flags);", "-\t\t\t}", "-\t\t\tif (imageWidth > 0)", "-\t\t\t\tgc.drawImage(currentImage, imageX, imageY);", "-\t\t\t\t", "-\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\t\tint startX = width - 12, startY = (height - 2) / 2;", "-\t\t\t\tint [] arrow = {startX, startY, startX + 3, startY + 3, startX + 6, startY};", "-\t\t\t\tgc.setBackground (gc.getForeground ());", "-\t\t\t\tgc.fillPolygon (arrow);", "-\t\t\t\tgc.drawPolygon (arrow);", "-\t\t\t}", "-\t\t\tif (!enabled && disabledImage == null) {", "-\t\t\t\tif (currentImage != null) currentImage.dispose ();", "-\t\t\t}", "-\tgc.carbon_unfocus();", "+", "+void updateArrow () {", "+\tif (arrowCIcon != 0) destroyCIcon (arrowCIcon);", "+\tarrowCIcon = 0;", "+\tDisplay display = getDisplay ();", "+\tImage image = new Image (display, 6, 4);", "+\tGC gc = new GC (image);", "+\tint startX = 0, startY = 0;", "+\tint [] arrow = {startX, startY, startX + 3, startY + 3, startX + 6, startY};", "+\tgc.setBackground (parent.getForeground ());", "+\tgc.fillPolygon (arrow);", "+\tgc.drawPolygon (arrow);", "-\t", "-\treturn 0;", "+\tImageData data = image.getImageData ();", "+\tdata.transparentPixel = 0xFFFFFFFF;", "+\timage.dispose ();", "+\timage = new Image (getDisplay (), data, data.getTransparencyMask());", "+\tarrowCIcon = createCIcon (image);", "+\timage.dispose ();", "+\tControlButtonContentInfo inContent = new ControlButtonContentInfo ();", "+\tinContent.contentType = (short) OS.kControlContentCIconHandle;", "+\tinContent.iconRef = arrowCIcon;", "+\tOS.SetBevelButtonContentInfo (arrowHandle, inContent);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15a9f16b35885818943d113ba847704", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "e0c241d61fe08c3037dc1d4d21455eb9593736a1", "commitAfterChange": "a84ad0c351349df1804e73408de9beb15c76ea23", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["+\tbounds.setLocation(0, 0);", "+\t", "+\tboolean hasCursor= hasCursor ();", "-\tgc.carbon_focus();", "-\t", "-\t// erase background", "-\tgc.fillRectangle(0, 0, width, height);", "-\t", "-\tif ((parent.style & SWT.FLAT) != 0 && set) {", "-\t\tgc.setBackground(Color.carbon_new(display, 0xE0E0E0));", "-\t\tgc.fillRoundRectangle(1, 1, width-2, height-2, 8, 8);", "-\t\tgc.setForeground(display.getSystemColor (SWT.COLOR_GRAY));", "-\t\tgc.drawRoundRectangle(1, 1, width-3, height-3, 8, 8);", "-\t}", "-\t", "-\tif ((style & SWT.SEPARATOR) != 0) {", "-\t", "-\t\tOS.DrawThemeSeparator(bounds.getData(), OS.kThemeStateActive);", "+\tMacControlEvent me= (MacControlEvent) callData;", "+\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "+\tif (!r.isEmpty()) {", "-\t} else {", "-\t\t\t\t", "-\t\tImage currentImage = image;", "-\t\tboolean enabled = getEnabled();", "-\t", "-\t\tshort[] newInfo= new short[3];", "-\t\t\t\t", "-\t\tnewInfo[1]= set ? OS.kThemeButtonOn : OS.kThemeButtonOff;", "+\t\t// erase background", "+\t\tgc.fillRectangle(0, 0, width, height);", "-\t\tif ((parent.style & SWT.FLAT) != 0) {", "-\t\t\tboolean hasCursor = hasCursor ();", "+\t\tif ((parent.style & SWT.FLAT) != 0 && set) {", "+\t\t\tgc.setBackground(Color.carbon_new(display, 0xE0E0E0));", "+\t\t\tgc.fillRoundRectangle(1, 1, width-2, height-2, 8, 8);", "+\t\t\tgc.setForeground(display.getSystemColor (SWT.COLOR_GRAY));", "+\t\t\tgc.drawRoundRectangle(1, 1, width-3, height-3, 8, 8);", "+\t\t}", "+\t\t", "+\t\tif ((style & SWT.SEPARATOR) != 0) {", "+\t\t", "+\t\t\tOS.DrawThemeSeparator(bounds.getData(), OS.kThemeStateActive);", "-\t\t\tif (hasCursor && enabled) {", "-\t\t\t\tif (OS.StillDown())", "-\t\t\t\t\tnewInfo[0]= OS.kThemeStatePressed;", "-\t\t\t\telse", "-\t\t\t\t\tnewInfo[0]= OS.kThemeStateActive;", "-\t\t\t} else", "-\t\t\t\tnewInfo= null;", "-\t\t\t", "-\t\t\t/* Determine if hot image should be used */", "-\t\t\tif (enabled && hasCursor && hotImage != null) {", "-\t\t\t\tcurrentImage = hotImage;", "-\t\t\t}", "-\t\t\tnewInfo[0]= (hasCursor() && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive;", "-\t\t}", "-", "-\t\tif (newInfo != null) {", "-\t\t\tMacRect b= new MacRect(bounds.getX()+1, bounds.getY()+1, width-2, height-2);", "-\t\t\t//OS.DrawThemeButton(bounds.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "-\t\t\tOS.DrawThemeButton(b.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "-\t\t}", "-\t\tfPrevInfo= newInfo;", "+\t\t\t\t\t", "+\t\t\tImage currentImage = image;", "+\t\t\tboolean enabled = getEnabled();", "+\t\t", "+\t\t\tshort[] newInfo= new short[3];", "+\t\t\t\t\t", "+\t\t\tnewInfo[1]= set ? OS.kThemeButtonOn : OS.kThemeButtonOff;", "-\t\tif (enabled) {", "-\t\t\tgc.setForeground (parent.getForeground());", "-\t\t} else {", "-\t\t\tcurrentImage = disabledImage;", "-\t\t\tif (currentImage == null && image != null) {", "-\t\t\t\tcurrentImage = new Image (display, image, SWT.IMAGE_DISABLE);", "+\t\t\tif ((parent.style & SWT.FLAT) != 0) {", "+\t\t\t\t", "+\t\t\t\tif (hasCursor && enabled) {", "+\t\t\t\t\tif (OS.StillDown())", "+\t\t\t\t\t\tnewInfo[0]= OS.kThemeStatePressed;", "+\t\t\t\t\telse", "+\t\t\t\t\t\tnewInfo[0]= OS.kThemeStateActive;", "+\t\t\t\t} else", "+\t\t\t\t\tnewInfo= null;", "+\t\t\t\t", "+\t\t\t\t/* Determine if hot image should be used */", "+\t\t\t\tif (enabled && hasCursor && hotImage != null) {", "+\t\t\t\t\tcurrentImage = hotImage;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tnewInfo[0]= (hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive;", "-\t\t\tColor disabledColor = display.getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW);", "-\t\t\tgc.setForeground (disabledColor);", "-\t\t}", "-\t\t", "-\t\tint textX = 0, textY = 0, textWidth = 0, textHeight = 0;", "-\t\tif (text.length () != 0) {", "-\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "-\t\t\tPoint textExtent = gc.textExtent (text, flags);", "-\t\t\ttextWidth = textExtent.x;", "-\t\t\ttextHeight = textExtent.y;", "-\t\t}\t", "-\t\tint imageX = 0, imageY = 0, imageWidth = 0, imageHeight = 0;", "-\t\tif (currentImage != null) {", "-\t\t\tRectangle imageBounds = currentImage.getBounds ();", "-\t\t\timageWidth = imageBounds.width;", "-\t\t\timageHeight = imageBounds.height;", "-\t\t}", "-\t\t", "-\t\tint spacing = 0;", "-\t\tif (textWidth != 0 && imageWidth != 0) spacing = 2;", "-\t\tif ((parent.style & SWT.RIGHT) != 0) {", "-\t\t\timageX = (width - imageWidth - textWidth - spacing) / 2;", "-\t\t\timageY = (height - imageHeight) / 2;", "-\t\t\ttextX = spacing + imageX + imageWidth;", "-\t\t\ttextY = (height - textHeight) / 2;", "-\t\t} else {\t\t", "-\t\t\timageX = (width - imageWidth) / 2;", "-\t\t\timageY = (height - imageHeight - textHeight - spacing) / 2;", "-\t\t\ttextX = (width - textWidth) / 2;", "-\t\t\ttextY = spacing + imageY + imageHeight;", "-\t\t}", "-\t\t", "-\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\ttextX -= 6;  imageX -=6;", "-\t\t}", "-\t\tif (textWidth > 0) {", "-\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT;", "-\t\t\tgc.drawText(text, textX, textY, flags);", "-\t\t}", "-\t\tif (imageWidth > 0)", "-\t\t\tgc.drawImage(currentImage, imageX, imageY);", "+\t", "+\t\t\tif (newInfo != null) {", "+\t\t\t\tMacRect b= new MacRect(1, 1, width-2, height-2);", "+\t\t\t\tOS.DrawThemeButton(b.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "+\t\t\t}", "+\t\t\tfPrevInfo= newInfo;", "+\t\t\t\t", "+\t\t\tif (enabled) {", "+\t\t\t\tgc.setForeground (parent.getForeground());", "+\t\t\t} else {", "+\t\t\t\tcurrentImage = disabledImage;", "+\t\t\t\tif (currentImage == null && image != null) {", "+\t\t\t\t\tcurrentImage = new Image (display, image, SWT.IMAGE_DISABLE);", "+\t\t\t\t}", "+\t\t\t\tColor disabledColor = display.getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW);", "+\t\t\t\tgc.setForeground (disabledColor);", "+\t\t\t}", "-\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\tint startX = width - 12, startY = (height - 2) / 2;", "-\t\t\tint [] arrow = {startX, startY, startX + 3, startY + 3, startX + 6, startY};", "-\t\t\tgc.setBackground (gc.getForeground ());", "-\t\t\tgc.fillPolygon (arrow);", "-\t\t\tgc.drawPolygon (arrow);", "-\t\t}", "-\t\tif (!enabled && disabledImage == null) {", "-\t\t\tif (currentImage != null) currentImage.dispose ();", "+\t\t\tint textX = 0, textY = 0, textWidth = 0, textHeight = 0;", "+\t\t\tif (text.length() > 0) {", "+\t\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "+\t\t\t\tPoint textExtent = gc.textExtent (text, flags);", "+\t\t\t\ttextWidth = textExtent.x;", "+\t\t\t\ttextHeight = textExtent.y;", "+\t\t\t}\t", "+\t\t\tint imageX = 0, imageY = 0, imageWidth = 0, imageHeight = 0;", "+\t\t\tif (currentImage != null) {", "+\t\t\t\tRectangle imageBounds = currentImage.getBounds ();", "+\t\t\t\timageWidth = imageBounds.width;", "+\t\t\t\timageHeight = imageBounds.height;", "+\t\t\t}", "+\t\t\t", "+\t\t\tint spacing = 0;", "+\t\t\tif (textWidth != 0 && imageWidth != 0) spacing = 2;", "+\t\t\tif ((parent.style & SWT.RIGHT) != 0) {", "+\t\t\t\timageX = (width - imageWidth - textWidth - spacing) / 2;", "+\t\t\t\timageY = (height - imageHeight) / 2;", "+\t\t\t\ttextX = spacing + imageX + imageWidth;", "+\t\t\t\ttextY = (height - textHeight) / 2;", "+\t\t\t} else {\t\t", "+\t\t\t\timageX = (width - imageWidth) / 2;", "+\t\t\t\timageY = (height - imageHeight - textHeight - spacing) / 2;", "+\t\t\t\ttextX = (width - textWidth) / 2;", "+\t\t\t\ttextY = spacing + imageY + imageHeight;", "+\t\t\t}", "+\t\t\t", "+\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\t\ttextX -= 6;  imageX -=6;", "+\t\t\t}", "+\t\t\tif (textWidth > 0) {", "+\t\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT;", "+\t\t\t\tgc.drawText(text, textX, textY, flags);", "+\t\t\t}", "+\t\t\tif (imageWidth > 0)", "+\t\t\t\tgc.drawImage(currentImage, imageX, imageY);", "+\t\t\t\t", "+\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\t\tint startX = width - 12, startY = (height - 2) / 2;", "+\t\t\t\tint [] arrow = {startX, startY, startX + 3, startY + 3, startX + 6, startY};", "+\t\t\t\tgc.setBackground (gc.getForeground ());", "+\t\t\t\tgc.fillPolygon (arrow);", "+\t\t\t\tgc.drawPolygon (arrow);", "+\t\t\t}", "+\t\t\tif (!enabled && disabledImage == null) {", "+\t\t\t\tif (currentImage != null) currentImage.dispose ();", "+\t\t\t}", "-\t\t"]}], "num": 50089}