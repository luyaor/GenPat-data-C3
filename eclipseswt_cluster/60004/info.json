{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "347c76477ce80db54c4f490db462ca11", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb781aa32c6c8bb21b7776fa2c9da8c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CTabFolderTab.java", "commitBeforeChange": "7fc94fecfd82d30750d27456737e5b38085b5e95", "commitAfterChange": "cd94e455c02dceeed218145f82b7a7763adea6c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorGroup ()", "diff": ["-\t\tnew Label (itemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Foreground_Color\"));", "-\t\titemForegroundButton = new Button (itemGroup, SWT.PUSH);", "-\t\tnew Label (itemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Background_Color\"));", "-\t\titemBackgroundButton = new Button (itemGroup, SWT.PUSH);", "-\t\tfinal ColorDialog foregroundDialog = new ColorDialog (shell);", "-\t\tfinal ColorDialog backgroundDialog = new ColorDialog (shell);", "-\t\tint imageSize = 12;", "-\t\tDisplay display = shell.getDisplay ();", "-\t\titemForegroundImage = new Image(display, imageSize, imageSize);", "-\t\titemBackgroundImage = new Image(display, imageSize, imageSize);", "-", "-\t\titemForegroundButton.setImage(itemForegroundImage);", "-\t\titemForegroundButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tColor oldColor = itemForegroundColor;", "-\t\t\t\tif (oldColor == null) oldColor = tabFolder1.getItem (0).getForeground ();", "-\t\t\t\tforegroundDialog.setRGB(oldColor.getRGB());", "-\t\t\t\tRGB rgb = foregroundDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = itemForegroundColor;", "-\t\t\t\titemForegroundColor = new Color (event.display, rgb);", "-\t\t\t\tsetItemForeground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\titemBackgroundButton.setImage(itemBackgroundImage);", "-\t\titemBackgroundButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tColor oldColor = itemBackgroundColor;", "-\t\t\t\tif (oldColor == null) oldColor = tabFolder1.getItem (0).getBackground ();", "-\t\t\t\tbackgroundDialog.setRGB(oldColor.getRGB());", "-\t\t\t\tRGB rgb = backgroundDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = itemBackgroundColor;", "-\t\t\t\titemBackgroundColor = new Color (event.display, rgb);", "-\t\t\t\tsetItemBackground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\t\t\tif (itemBackgroundImage != null) itemBackgroundImage.dispose();", "-\t\t\t\tif (itemForegroundImage != null) itemForegroundImage.dispose();", "-\t\t\t\tif (itemBackgroundColor != null) itemBackgroundColor.dispose();", "-\t\t\t\tif (itemForegroundColor != null) itemForegroundColor.dispose();", "-\t\t\t\titemBackgroundColor = null;", "-\t\t\t\titemForegroundColor = null;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdab0838ee95473184611671fa48a2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "35f24cd03add9337e8b68bfeb7beed6f47dde1d7", "commitAfterChange": "0a84e48780b862c804e190ba06d17878143631e6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorGroup ()", "diff": ["-\t\tShell shell = itemBackgroundButton.getShell ();", "-\t\tfinal ColorDialog backgroundDialog = new ColorDialog (shell);", "+\t\tShell shell = colorGroup.getShell ();", "+\t\tfinal ColorDialog backgroundDialog = new ColorDialog (shell);", "-\t\tfinal Image itemBackgroundImage = new Image(display, imageSize, imageSize);", "-\t\tfinal Image itemForegroundImage = new Image(display, imageSize, imageSize);", "+\t\titemForegroundImage = new Image(display, imageSize, imageSize);", "+\t\titemBackgroundImage = new Image(display, imageSize, imageSize);", "-\t\titemBackgroundButton.setImage(itemBackgroundImage);", "-\t\titemBackgroundButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tRGB rgb = backgroundDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\tColor oldColor = itemBackgroundColor;", "-\t\t\t\titemBackgroundColor = new Color (itemBackgroundButton.getDisplay(), rgb);", "-\t\t\t\tsetItemsBackground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\titemForegroundButton.setImage(itemForegroundImage);", "+\t\titemForegroundButton.setImage(itemForegroundImage); // sets the size of the button", "+\t\t\t\tColor oldColor = itemForegroundColor;", "+\t\t\t\tif (oldColor == null) oldColor = table1.getItem (0).getForeground ();", "+\t\t\t\tforegroundDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "-\t\t\t\tColor oldColor = itemForegroundColor;", "-\t\t\t\titemForegroundColor = new Color (itemForegroundButton.getDisplay(), rgb);", "-\t\t\t\tsetItemsForeground ();", "+\t\t\t\toldColor = itemForegroundColor; // save old foreground color to dispose when done", "+\t\t\t\titemForegroundColor = new Color (event.display, rgb);", "+\t\t\t\tsetItemForeground ();", "-\t\titemBackgroundButton.addDisposeListener(new DisposeListener() {", "+\t\titemBackgroundButton.setImage(itemBackgroundImage); // sets the size of the button", "+\t\titemBackgroundButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = itemBackgroundColor;", "+\t\t\t\tif (oldColor == null) oldColor = table1.getItem (0).getBackground ();", "+\t\t\t\tbackgroundDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "+\t\t\t\tRGB rgb = backgroundDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = itemBackgroundColor; // save old background color to dispose when done", "+\t\t\t\titemBackgroundColor = new Color (event.display, rgb);", "+\t\t\t\tsetItemBackground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tshell.addDisposeListener(new DisposeListener() {"]}], "num": 60004}