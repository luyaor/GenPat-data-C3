{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8161308974c3a4b92cd139eb97e1ad68", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17710ee94f2e2850714c93aaa0f84f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "8549b1db39ac8fd4bb7564c61e5b9a04b5efde6f", "commitAfterChange": "2b3120470b46968368044df3f94129d586bc41d5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void setText (int index, String string)", "signatureAfterChange": " public void setText (int index, String string)", "diff": ["-\tint itemIndex = parent.indexOf (this);", "-\tif (itemIndex == -1) return;", "-\tint hwnd = parent.handle;", "-\tint hHeap = OS.GetProcessHeap ();\t", "-\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, true);", "-\tint byteCount = buffer.length () * TCHAR.sizeof;", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tOS.MoveMemory (pszText, buffer, byteCount); ", "-\tLVITEM lvItem = new LVITEM ();", "-\tlvItem.mask = OS.LVIF_TEXT;", "-\tlvItem.iItem = itemIndex;", "-\tlvItem.pszText = pszText;", "-\tlvItem.iSubItem = index;", "-\tOS.SendMessage (hwnd, OS.LVM_SETITEM, 0, lvItem);", "-\tif (index == 0) parent.setScrollWidth (false);", "-\tOS.HeapFree (hHeap, 0, pszText);", "+\tint count = Math.max (1, parent.getColumnCount ());", "+\tif (0 <= index && index < count) {", "+\t\tif (strings == null) strings = new String [count];", "+\t\tstrings [index] = string;", "+\t}", "+\tif (parent.ignoreRedraw) return;", "+\tif (index == 0) {", "+\t\t/*", "+\t\t* Bug in Windows.  Despite the fact that every item in the", "+\t\t* table always has LPSTR_TEXTCALLBACK, Windows caches the", "+\t\t* bounds for the selected items.  This means that ", "+\t\t* when you change the string to be something else, Windows", "+\t\t* correctly asks you for the new string but when the item", "+\t\t* is selected, the selection draws using the bounds of the", "+\t\t* previous item.  The fix is to reset LPSTR_TEXTCALLBACK", "+\t\t* even though it has not changed, causing Windows to flush", "+\t\t* cached bounds.", "+\t\t*/", "+\t\tif (requested && (parent.style & SWT.VIRTUAL) == 0) {", "+\t\t\tint itemIndex = parent.indexOf (this);", "+\t\t\tif (itemIndex != -1) {", "+\t\t\t\tint hwnd = parent.handle;", "+\t\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\t\tlvItem.mask = OS.LVIF_TEXT;", "+\t\t\t\tlvItem.iItem = itemIndex;", "+\t\t\t\tlvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETITEM, 0, lvItem);", "+\t\t\t}", "+\t\t}", "+\t\tparent.setScrollWidth (this, false);", "+\t}", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54af98d07fbf99d81982d35ecd28b238", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "559381e6aebbbbe94fd89c518367406b7a1d9aac", "commitAfterChange": "95ac9fb91c3ddffa50ff43dafc84c86aaf5f1968", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void _setText (String string)", "signatureAfterChange": " public void setText (int index, String string)", "diff": ["-void _setText (String string) {", "-\tint hwnd = parent.handle;", "-\tint hHeap = OS.GetProcessHeap ();", "-\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, true);", "-\tint byteCount = buffer.length () * TCHAR.sizeof;", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tOS.MoveMemory (pszText, buffer, byteCount); ", "-\tTVITEM tvItem = new TVITEM ();", "-\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "-\ttvItem.hItem = handle;", "-\ttvItem.pszText = pszText;", "-\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "-\tOS.HeapFree (hHeap, 0, pszText);", "-}", "+ */", "+public void setText (int index, String string) {", "+\tcheckWidget();", "+\tif (string == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (index == 0) {", "+\t\tif (string.equals (text)) return;", "+\t\tsuper.setText (string);", "+\t}", "+\tint count = Math.max (1, parent.getColumnCount ());", "+\tif (0 > index || index > count - 1) return;", "+\tif (strings == null && index != 0) strings = new String [count];", "+\tif (strings != null) {", "+\t\tif (string.equals (strings [index])) return;", "+\t\tstrings [index] = string;", "+\t}", "+\tif (index == 0) {", "+\t\tint hwnd = parent.handle;", "+\t\tTVITEM tvItem = new TVITEM ();", "+\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "+\t\ttvItem.hItem = handle;", "+\t\ttvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "+\t} else {", "+\t\tredraw (index, true, false);", "+\t}"]}], "num": 14132}