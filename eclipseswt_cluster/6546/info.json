{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0baf5cb7ce02ea2c2471e0701f7bd4d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7142e1b97616f50aa402f0f8e14e6d2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7fcc91e6099f4c3255f26c10dbab47bde91a96c3", "commitAfterChange": "e1c2a8ee201d1582cd315713ea1eef093f129cd6", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\tboolean hooksPaint = hooks (SWT.Paint);", "+\t\t\t\tif (hooksPaint) {", "-\t\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\t\tcallWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\tif (hooksPaint) {", "-\t\t\t\t\t\tgc.dispose ();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.EndPaint (handle, ps);", "-\t\t\t\t\treturn new LRESULT (code);", "+\t\t\t\tif (hooksPaint) {", "+\t\t\t\t\tgc.dispose ();", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t\t}", "+\t\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f2177eef44f6400b07e4b49e91d73a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5fd4bfa1377c129093915acfce3927743f235276", "commitAfterChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["-\tint boundsRight = bounds.x + bounds.width;", "-\tif (bounds.x <= x && rightX <= boundsRight) return;\t /* column is fully visible */", "+\tif (0 <= x && rightX <= bounds.width) return;\t /* column is fully visible */", "-\t\thorizontalOffset = boundsRight - absX;", "+\t\thorizontalOffset = absX + column.width - bounds.width;", "+\tif (header.isVisible ()) header.redraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25342445e24d76df32bbf52ecc0eef3b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "075a49840c046c62dc7adb3fc54f6d6df5b0ad40", "commitAfterChange": "8eb3c5627dbf43c31a784f365fbe909f5c9d345a", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tint Next(int celt, int rgvar, int pceltFetched)", "signatureAfterChange": " \tint Next(int celt, int rgvar, int pceltFetched)", "diff": ["+\t */", "+\t\t\tienumvariant.Release();", "-\t\t\t\t\tint address = ((Accessible) nextItem).objIAccessible.getAddress();", "+\t\t\t\t\tAccessible accessible = (Accessible) nextItem;", "+\t\t\t\t\taccessible.AddRef();", "-\t\t\t\t\tCOM.MoveMemory(rgvar + i * 16 + 8, new int[] { address }, 4);", "+\t\t\t\t\tCOM.MoveMemory(rgvar + i * 16 + 8, new int[] { accessible.objIAccessible.getAddress() }, 4);"]}], "num": 6546}