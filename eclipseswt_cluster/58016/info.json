{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e6417747fa6aa759453400804d77c70", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a793536bb4f2e2827cad8a52abd269d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "efcc453b894c8ffd06a1768f8c800b7db7290290", "commitAfterChange": "8188a5d1f9bc4d3f53c8cfcac3571aea29ed7d71", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t/*", "-\t* Bug in the Macintosh.  Despite the that a window has scope", "-\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "-\t* events but does not get kEventWindowDeactivated events.  The", "-\t* fix is to ignore kEventWindowActivated events.", "-\t*/", "-\tint [] outScope = new int [1];", "-\tOS.GetWindowActivationScope (shellHandle, outScope); ", "-\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "-\tdisplay.setMenuBar (menuBar);", "-\tif (menuBar != null) OS.DrawMenuBar ();", "-\tactivate = true;", "-\tsendEvent (SWT.Activate);", "-\tif (isDisposed ()) return result;", "-\trestoreFocus ();", "-\tactivate = false;", "+\tif (!active) {", "+\t\tactive = true;", "+\t\t/*", "+\t\t* Bug in the Macintosh.  Despite the that a window has scope", "+\t\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "+\t\t* events but does not get kEventWindowDeactivated events.  The", "+\t\t* fix is to ignore kEventWindowActivated events.", "+\t\t*/", "+\t\tint [] outScope = new int [1];", "+\t\tOS.GetWindowActivationScope (shellHandle, outScope); ", "+\t\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "+\t\tdisplay.setMenuBar (menuBar);", "+\t\tif (menuBar != null) OS.DrawMenuBar ();", "+\t\tactivate = true;", "+\t\tsendEvent (SWT.Activate);", "+\t\tif (isDisposed ()) return result;", "+\t\trestoreFocus ();", "+\t\tactivate = false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b4ed2aa7c130a6c15a02d911aac21f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "efcc453b894c8ffd06a1768f8c800b7db7290290", "commitAfterChange": "8188a5d1f9bc4d3f53c8cfcac3571aea29ed7d71", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t//TEMPORARY CODE - should be send, but causes a GP", "-\tDisplay display = this.display;", "-\tpostEvent (SWT.Deactivate);", "-\tif (isDisposed ()) return result;", "-\tsaveFocus ();", "-\tif (savedFocus != null) {", "-\t\t/*", "-\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-\t\t* the control that has focus gets two kEventControlSetFocus", "-\t\t* events indicating that focus was lost.  The fix is to ignore", "-\t\t* both of these and send the focus lost event explicitly.", "-\t\t*/", "-\t\tdisplay.ignoreFocus = true;", "-\t\tOS.ClearKeyboardFocus (shellHandle);", "-\t\tdisplay.ignoreFocus = false;", "+\tif (active) {", "+\t\tactive = false;", "-\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t\tDisplay display = this.display;", "+\t\tpostEvent (SWT.Deactivate);", "+\t\tif (isDisposed ()) return result;", "+\t\tsaveFocus ();", "+\t\tif (savedFocus != null) {", "+\t\t\t/*", "+\t\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "+\t\t\t* the control that has focus gets two kEventControlSetFocus", "+\t\t\t* events indicating that focus was lost.  The fix is to ignore", "+\t\t\t* both of these and send the focus lost event explicitly.", "+\t\t\t*/", "+\t\t\tdisplay.ignoreFocus = true;", "+\t\t\tOS.ClearKeyboardFocus (shellHandle);", "+\t\t\tdisplay.ignoreFocus = false;", "+\t\t\t//TEMPORARY CODE - should be send, but causes a GP", "+\t\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t\t}", "+\t\tdisplay.setMenuBar (null);", "-\tdisplay.setMenuBar (null);"]}], "num": 58016}