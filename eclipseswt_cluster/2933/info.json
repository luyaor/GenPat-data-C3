{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2c17b742b0d5936f7b6e07faea1f2f7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eede369cab920ded98c531fc3f24799", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/internal/ImageList.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public static int createPixbuf(Image image)", "signatureAfterChange": "  public static long createPixbuf(Image image)", "diff": ["-public static int /*long*/ createPixbuf(Image image) {", "-\tint /*long*/ pixbuf;", "+public static long /*int*/ createPixbuf(Image image) {", "+\tlong /*int*/ pixbuf;", "-\t\tint /*long*/ surface = convertSurface(image);", "+\t\tlong /*int*/ surface = convertSurface(image);", "-\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "+\t\tlong /*int*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\tint /*long*/ surfaceData = Cairo.cairo_image_surface_get_data(surface);", "+\t\tlong /*int*/ surfaceData = Cairo.cairo_image_surface_get_data(surface);", "-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "+\t\tlong /*int*/ colormap = OS.gdk_colormap_get_system ();", "-\t\t\tint /*long*/ maskPixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, w [0], h [0]);", "+\t\t\tlong /*int*/ maskPixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, w [0], h [0]);", "-\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\tlong /*int*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\t\tint /*long*/ maskPixels = OS.gdk_pixbuf_get_pixels(maskPixbuf);", "+\t\t\tlong /*int*/ maskPixels = OS.gdk_pixbuf_get_pixels(maskPixbuf);", "-\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "+\t\t\t\tlong /*int*/ offset = pixels + (y * stride);", "-\t\t\t\tint /*long*/ maskOffset = maskPixels + (y * maskStride);", "+\t\t\t\tlong /*int*/ maskOffset = maskPixels + (y * maskStride);", "-\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "+\t\t\t\tlong /*int*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "+\t\t\t\t\tlong /*int*/ offset = pixels + (y * stride);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3faf135377aeedc0bccc83c7f3222de9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["-\tint /*long*/ drawable = data.drawable;", "-\tint /*long*/ colorPixmap = srcImage.pixmap;", "+\tlong /*int*/ drawable = data.drawable;", "+\tlong /*int*/ colorPixmap = srcImage.pixmap;", "-\tint /*long*/ maskPixmap = srcImage.mask;", "+\tlong /*int*/ maskPixmap = srcImage.mask;", "-\t\t\tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, true, 8, srcWidth, srcHeight);", "+\t\t\tlong /*int*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, true, 8, srcWidth, srcHeight);", "-\t\t\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\t\t\tlong /*int*/ colormap = OS.gdk_colormap_get_system();", "-\t\t\t\tint /*long*/ maskPixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, srcWidth, srcHeight);", "+\t\t\t\tlong /*int*/ maskPixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, srcWidth, srcHeight);", "-\t\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\t\t\tlong /*int*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\t\t\t\tint /*long*/ maskPixels = OS.gdk_pixbuf_get_pixels(maskPixbuf);", "+\t\t\t\t\tlong /*int*/ maskPixels = OS.gdk_pixbuf_get_pixels(maskPixbuf);", "-\t\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "+\t\t\t\t\t\tlong /*int*/ offset = pixels + (y * stride);", "-\t\t\t\t\t\tint /*long*/ maskOffset = maskPixels + (y * maskStride);", "+\t\t\t\t\t\tlong /*int*/ maskOffset = maskPixels + (y * maskStride);", "-\t\t\t\t\tint /*long*/ scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "+\t\t\t\t\tlong /*int*/ scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "-\t\t\t\t\t\tint /*long*/[] colorBuffer = new int /*long*/[1];", "-\t\t\t\t\t\tint /*long*/[] maskBuffer = new int /*long*/[1];", "+\t\t\t\t\t\tlong /*int*/[] colorBuffer = new long /*int*/[1];", "+\t\t\t\t\t\tlong /*int*/[] maskBuffer = new long /*int*/[1];", "-\t\t\tint /*long*/ mask = OS.gdk_bitmap_create_from_data(0, maskData, newWidth, newHeight);", "+\t\t\tlong /*int*/ mask = OS.gdk_bitmap_create_from_data(0, maskData, newWidth, newHeight);", "-\t\t\t\tint /*long*/ gc = OS.gdk_gc_new(mask);", "+\t\t\t\tlong /*int*/ gc = OS.gdk_gc_new(mask);"]}], "num": 2933}