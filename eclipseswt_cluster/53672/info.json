{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "234731b96ed27c31c9a0a8147be0f500", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14da9affa05679b1083d25d3d452c646", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "d36a760e6b66fcc16fa6686b7aca002e4f64430e", "commitAfterChange": "d6d065ae0f40b44bdee462fcdf2077b4fae1a0c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t\t/*", "+\t\t * Feature in Carbon: Separator control decides how to orient itself", "+\t\t * based on the width and height. If height >= width it orients", "+\t\t * vertically, else it orients horizontally. ", "+\t\t * Fix is to have two native controls to implement the separator label.", "+\t\t * The top control (userPaneControl) honors the bounds set by the", "+\t\t * user and the inner one (separatorControl) creates the separator", "+\t\t * with the correct orientation.", "+\t\t */", "+\t\tint features = OS.kControlSupportsEmbedding;", "+\t\tOS.CreateUserPaneControl (window, null, features, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\toutControl[0] = 0;", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tint separatorHandle = outControl [0];", "+\t\tOS.HIViewAddSubview (handle, separatorHandle);", "+\t\tCGRect r = new CGRect();", "+\t\tr.width = DEFAULT_WIDTH;", "+\t\tr.height = DEFAULT_HEIGHT;", "+\t\tOS.HIViewSetFrame (handle, r);", "+\t\tHILayoutInfo layout = new HILayoutInfo ();", "+\t\tlayout.version = 0;", "+\t\tOS.HIViewGetLayoutInfo (separatorHandle, layout);", "+\t\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\t\tr.height = 3;", "+\t\t\tlayout.scale.x.ratio = 1.0f;", "+\t\t\tlayout.position.y.kind = OS.kHILayoutPositionCenter;", "+\t\t} else {", "+\t\t\tr.width = 3;", "+\t\t\tlayout.position.x.kind = OS.kHILayoutPositionCenter;", "+\t\t\tlayout.scale.y.ratio = 1.0f;", "+\t\t}", "+\t\tOS.HIViewSetFrame (separatorHandle, r);", "+\t\tOS.HIViewSetLayoutInfo (separatorHandle, layout);", "-\t}", "-\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "-\thandle = outControl [0];", "-\tif ((style & SWT.WRAP) == 0) {", "-\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlStaticTextIsMultilineTag, 1, new byte[] {0});", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\tif ((style & SWT.WRAP) == 0) {", "+\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlStaticTextIsMultilineTag, 1, new byte[] {0});", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3eefdfebd3d01610aad9a61cecfb9c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "a58eb4a81b4e5691bc9999463d2239075c5e64e3", "commitAfterChange": "5b29a12fc8f54a16ee9d51ff6a6787120cdba944", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\twidget.init();", "-\twidget.setTitle(NSString.string());", "-\t\twidget.setBoxType(OS.NSBoxSeparator);", "+\t\t/*", "+\t\t * Feature in Cocoa: Separator control decides how to orient itself", "+\t\t * based on the width and height. If height > width it orients", "+\t\t * vertically, else it orients horizontally. ", "+\t\t * Fix is to have two native controls to implement the separator label.", "+\t\t * The top control (Custom NSBox) honors the bounds set by the", "+\t\t * user and the inner one (Separator NSBox) creates the separator", "+\t\t * with the correct orientation.", "+\t\t */", "+\t\tNSRect rect = new NSRect();", "+\t\trect.width = DEFAULT_WIDTH;", "+\t\trect.height = DEFAULT_HEIGHT;", "+\t\t", "+\t\twidget.initWithFrame(rect);", "+\t\twidget.setTitle(NSString.string());", "+\t\twidget.setBorderType(OS.NSNoBorder);", "+\t\twidget.setBoxType (OS.NSBoxCustom);", "+\t\twidget.setContentViewMargins (new NSSize());", "+", "+\t\tfloat /*double*/ lineWidth = widget.borderWidth ();", "+\t\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\t\trect.height = (int)Math.ceil (lineWidth * 2);", "+\t\t\trect.y = (DEFAULT_HEIGHT / 2) - (rect.height / 2);", "+\t\t} else {", "+\t\t\trect.width = (int)Math.ceil (lineWidth * 2);", "+\t\t\trect.x = (DEFAULT_WIDTH / 2) - (rect.width / 2);", "+\t\t}", "+\t\t", "+\t\tNSBox separator = (NSBox) new SWTBox().alloc();", "+\t\tseparator.initWithFrame(rect);", "+\t\tseparator.setBoxType(OS.NSBoxSeparator);", "+\t\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\t\tseparator.setAutoresizingMask(OS.NSViewWidthSizable | OS.NSViewMinYMargin | OS.NSViewMaxYMargin);", "+\t\t} else {", "+\t\t\tseparator.setAutoresizingMask(OS.NSViewHeightSizable| OS.NSViewMinXMargin | OS.NSViewMaxXMargin);", "+\t\t}", "+\t\t", "-\t\twidget.setContentView(child);", "+\t\tseparator.setContentView(child);", "-\t} else {", "+\t\t", "+\t\twidget.addSubview(separator);", "+\t\tthis.separator = separator;", "+\t} else {\t", "+\t\twidget.init();", "+\t\twidget.setTitle(NSString.string());"]}], "num": 53672}