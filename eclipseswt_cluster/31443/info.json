{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e89fd578f7a2dde360e53fdf9dde5b8a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b63f2e7988bca583193af91e0f5f66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "305b37f15f650c259a3bc4f70ff9d8984c10b80a", "commitAfterChange": "431655d547fbf99d9504878177592160d84a87e6", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  void windowSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void windowSendEvent (int id, int sel, int event)", "diff": ["-\t\t\t * Feature in cocoa.  Control+Tab and Ctrl+Shift+Tab are swallowed to handle native traversal.", "-\t\t\t * If we find that, force the key event to the first responder.", "+\t\t\t * Feature in cocoa.  Control+Tab, Ctrl+Shift+Tab, Ctrl+PageDown and Ctrl+PageUp are", "+\t\t\t * swallowed to handle native traversal. If we find that, force the key event to", "+\t\t\t * the first responder.", "-\t\t\t\t\tint /*long*/ firstChar = chars.characterAtIndex(0);", "+\t\t\t\t\tint firstChar = (int)/*64*/chars.characterAtIndex(0);", "-\t\t\t\t\tif (firstChar == '\\t' || firstChar == 25)\t{", "-\t\t\t\t\t\twindow.firstResponder().keyDown(nsEvent);", "+\t\t\t\t\tswitch (firstChar) {", "+\t\t\t\t\t\tcase '\\t':", "+\t\t\t\t\t\tcase 25:", "+\t\t\t\t\t\t\twindow.firstResponder().keyDown(nsEvent);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase OS.NSPageDownFunctionKey:", "+\t\t\t\t\t\tcase OS.NSPageUpFunctionKey:", "+\t\t\t\t\t\t\twindow.firstResponder().keyDown(nsEvent);", "+\t\t\t\t\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba2191e7860e2ed02cc61368461a2d65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0fb08e275829afe36ff8e083e6561d09821a6363", "commitAfterChange": "503e685d9a3034709bf447d201cab958d909794f", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\tcase OS.WM_DWMCOLORIZATIONCOLORCHANGED: {", "+\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "+\t\t\tbreak;", "+\t\t}", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6) {", "+\t\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "+\t\t\t\tbreak;", "+\t\t\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "573964bf9a87276d805f620c3bfe9145", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e293cd5ca9ec202629c2ce24590166a853a347b7", "commitAfterChange": "c9d60234b32c9420ae860fac88795cd3b6c22a04", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 85, "signatureBeforeChange": "\r \r boolean translateTraversal (MSG msg, Control control)", "signatureAfterChange": "\r \r boolean translateTraversal (MSG msg, Control control)", "diff": ["-\tif (msg.message == OS.WM_KEYDOWN) {\r", "-\t\tswitch (msg.wParam) {\r", "-\t\t\tcase OS.VK_RETURN:\r", "-\t\t\tcase OS.VK_ESCAPE:\r", "-\t\t\tcase OS.VK_TAB:\r", "-\t\t\tcase OS.VK_UP:\r", "-\t\t\tcase OS.VK_DOWN:\r", "-\t\t\tcase OS.VK_LEFT:\r", "-\t\t\tcase OS.VK_RIGHT:\r", "-\t\t\tcase OS.VK_PRIOR:\r", "-\t\t\tcase OS.VK_NEXT:\r", "-\t\t\t\treturn control.translateTraversal (msg);\r", "-\t\t}\r", "+\tswitch (msg.message) {\r", "+\t\tcase OS.WM_KEYDOWN:\r", "+\t\t\tswitch (msg.wParam) {\r", "+\t\t\t\tcase OS.VK_RETURN:\r", "+\t\t\t\tcase OS.VK_ESCAPE:\r", "+\t\t\t\tcase OS.VK_TAB:\r", "+\t\t\t\tcase OS.VK_UP:\r", "+\t\t\t\tcase OS.VK_DOWN:\r", "+\t\t\t\tcase OS.VK_LEFT:\r", "+\t\t\t\tcase OS.VK_RIGHT:\r", "+\t\t\t\tcase OS.VK_PRIOR:\r", "+\t\t\t\tcase OS.VK_NEXT:\r", "+\t\t\t\t\treturn control.translateTraversal (msg);\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tcase OS.WM_SYSKEYDOWN:\r", "+\t\t\tswitch (msg.wParam) {\r", "+\t\t\t\tcase OS.VK_MENU:\r", "+\t\t\t\t\treturn control.translateTraversal (msg);\r", "+\t\t\t}\r", "+\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "115c84338168e0d355810be132e459a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyleRange.java", "commitBeforeChange": "1858921405caded179dd7111900068e34dd8d7d6", "commitAfterChange": "1b94a1a879acc57b9e38982b2f488c6f76719a19", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\tif (fontStyle == SWT.NORMAL) {", "-\t\tbuf.append(\"normal\");", "-\t} else if (fontStyle == SWT.BOLD) {", "-\t\tbuf.append(\"bold\");", "+\tswitch (fontStyle) {", "+\t\tcase SWT.BOLD:", "+\t\t\tbuf.append(\"bold\");", "+\t\t\tbreak;", "+\t\tcase SWT.ITALIC:", "+\t\t\tbuf.append(\"italic\");", "+\t\t\tbreak;", "+\t\tcase SWT.BOLD | SWT.ITALIC:", "+\t\t\tbuf.append(\"bold-italic\");", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\tbuf.append(\"normal\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b08cf6f13b0302427b5d00c2f4518a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1b97219779eddef7457526ff0f8e1513cc522122", "commitAfterChange": "620fd884e9d76e050e80e8e75410dc128aa248f5", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\tif (wParam == 0 || wParam == 1) runSettings ();", "+\t\t\tswitch (wParam) {", "+\t\t\t\tcase 0:", "+\t\t\t\tcase 1:", "+\t\t\t\tcase OS.SPI_SETHIGHCONTRAST:", "+\t\t\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "+\t\t\t}", "-\t\t\trunTimer (wParam);", "+\t\t\tif (wParam == SETTINGS_ID) {", "+\t\t\t\tOS.KillTimer (hwndMessage, SETTINGS_ID);", "+\t\t\t\trunSettings ();", "+\t\t\t} else {", "+\t\t\t\trunTimer (wParam);", "+\t\t\t}"]}], "num": 31443}