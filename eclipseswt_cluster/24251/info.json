{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a0329f37205922f5d83139c5b4ca3c38", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e3c7083528a962941c5642c1d6b6638", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "98e192d43291fda4fd3ef0ea1b9ac46736826b70", "commitAfterChange": "2f4d1b2421c0beaef45f0224c0a7c70952862a33", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  void updateModal ()", "signatureAfterChange": "  void updateModal ()", "diff": ["+\tboolean isModalShell = false;", "-\t\t\tif ((style & mask) != 0) shell = this;", "+\t\t\tif ((style & mask) != 0) {", "+\t\t\t\tshell = this;", "+\t\t\t\t/*", "+\t\t\t\t* Feature in GTK. If a modal shell is reassigned to", "+\t\t\t\t* a different group, then it's modal state is not.", "+\t\t\t\t* persisted against the new group. ", "+\t\t\t\t* The fix is to reset the modality before it is changed", "+\t\t\t\t* into a different group and then, set back after it", "+\t\t\t\t* assigned into new group.", "+\t\t\t\t*/", "+\t\t\t\tisModalShell = OS.gtk_window_get_modal (shellHandle);", "+\t\t\t\tif (isModalShell) OS.gtk_window_set_modal (shellHandle, false);", "+\t\t\t}", "+\t\tif (isModalShell) OS.gtk_window_set_modal (shellHandle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b074354f687fbbb618e6f55a5ea1af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "66a95066be25462b501b7c1e51178de7cfbd6dfa", "commitAfterChange": "9d1439265256d4dc44e7ee7f2321b1596dcd5b6c", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\t* to detect the case when an item is mark it as selected.", "+\t* to detect the case when an item is reselected and mark", "+\t* it as selected.", "-\tdragStarted = false;", "+\tboolean dragDetect = (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect);", "+\tif (!dragDetect) display.runDragDrop = false;", "-\tif (dragStarted) {", "+\tif (!dragDetect) display.runDragDrop = true;", "+\tif (dragStarted || !dragDetect) {"]}], "num": 24251}