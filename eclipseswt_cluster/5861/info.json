{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b098d4827bc68771c99a84ce98b5995", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291dec0db40ce6785ca5c7eff1a28e13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "09a2847b5f635bf1aa46ff6e6b4bc58211f7cb59", "commitAfterChange": "bc4879e0146ee19910b8b47f9f683a73e2e2b1bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-", "-\t\t/*", "-\t\t* Feature on Mozilla.  On Windows, the mozilla libraries are split", "-\t\t* up into 2 locations indicated by the GRE and Mozilla paths.  The", "-\t\t* default nsIDirectoryServiceProvider only works when the libraries", "-\t\t* are in the same folder.  The workaround is to provide a custom", "-\t\t* nsIDirectoryServiceProvider on this platform.  It provides the ", "-\t\t* 2 locations set by Mozilla in the Windows registry.", "-\t\t*/", "-\t\tif (IsWindows) {", "-\t\t\tLocProvider = new AppFileLocProvider();", "-\t\t\tLocProvider.AddRef();", "-\t\t}", "-\t\trc = XPCOM.NS_InitEmbedding(localFile.getAddress(), IsWindows ? LocProvider.getAddress() : 0);", "+\t\trc = XPCOM.NS_InitEmbedding(localFile.getAddress(), 0);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\trc = XPCOM.NS_GetComponentManager(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\t", "-\t\tcomponentManager = new nsIComponentManager(result[0]);", "-\t\tresult[0] = 0;", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tcomponentRegistrar.Release();", "+\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory();", "+\t\tdialogFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Helper App Launcher Dialog\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdialogFactory.Release();", "+\t\t", "+\t\tDownloadFactory downloadFactory = new DownloadFactory();", "+\t\tdownloadFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_DOWNLOAD_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Download\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_DOWNLOAD_CID, aClassName, aContractID, downloadFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdownloadFactory.Release();", "+\t\t", "+\t\tcomponentRegistrar.Release();", "+\t\tcomponentManager.Release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0191087775c9623ee1067111c98841f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "773d560d56e0fb2a8261f91247485fb35dac011c", "commitAfterChange": "8a09c77b6e96b98f3254e99e24f131c8aaf14fe4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\trc = XPCOM.NS_GetComponentManager(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\t", "-\t\tcomponentManager = new nsIComponentManager(result[0]);", "-\t\tresult[0] = 0;", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tcomponentRegistrar.Release();", "+\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory();", "+\t\tdialogFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Helper App Launcher Dialog\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdialogFactory.Release();", "+\t\t", "+\t\tDownloadFactory downloadFactory = new DownloadFactory();", "+\t\tdownloadFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_DOWNLOAD_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Download\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_DOWNLOAD_CID, aClassName, aContractID, downloadFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdownloadFactory.Release();", "+\t\t", "+\t\tcomponentRegistrar.Release();", "+\t\tcomponentManager.Release();", "-\t/*", "-\t* Note. The following code compiles without warning on a ", "-\t* 64 bit platform but won't run. ", "-\t*/", "-\trc = baseWindow.InitWindow((int)/*64*/handle, 0, 0, 0, rect.width, rect.height);", "+\trc = baseWindow.InitWindow(handle, 0, 0, 0, rect.width, rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e031a4123c4a2d4fef7cd1837b23f08e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "d665122b16f11ea3b50bca7d906c35635cab24f0", "commitAfterChange": "09a2847b5f635bf1aa46ff6e6b4bc58211f7cb59", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\trc = XPCOM.NS_GetComponentManager(result);", "-\t\tif (rc != XPCOM.NS_OK) error(rc);", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\t", "-\t\tcomponentManager = new nsIComponentManager(result[0]);", "-\t\tresult[0] = 0;", "-\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\tcomponentManager.Release();", "+\t\tif (result[0] == 0) error(XPCOM.NS_NOINTERFACE);", "-\t\tcomponentRegistrar.Release();", "+\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory();", "+\t\tdialogFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Helper App Launcher Dialog\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdialogFactory.Release();", "+\t\t", "+\t\tDownloadFactory downloadFactory = new DownloadFactory();", "+\t\tdownloadFactory.AddRef();", "+\t\t", "+\t\tbuffer = XPCOM.NS_DOWNLOAD_CONTRACTID.getBytes();", "+\t\taContractID = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "+\t\tbuffer = \"Download\".getBytes();", "+\t\taClassName = new byte[buffer.length + 1];", "+\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "+\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_DOWNLOAD_CID, aClassName, aContractID, downloadFactory.getAddress());", "+\t\tif (rc != XPCOM.NS_OK) error(rc);", "+\t\tdownloadFactory.Release();", "+\t\t", "+\t\tcomponentRegistrar.Release();", "+\t\tcomponentManager.Release();"]}], "num": 5861}