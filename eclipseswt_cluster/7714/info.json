{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92f7b96c57fa74aa69a7e373a4cc748b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ba8c336ab5f13b87f7f2f6d7b2bf16c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r int processMouse (int info)", "signatureAfterChange": "\r \r void processMouse (int info)", "diff": ["-int processMouse (int info) {\r", "-\tint result = super.processMouse (info);\r", "-\t\r", "-\tif (info == 0) return OS.Pt_END;\r", "+\r", "+void processMouse (int info) {\t\r", "-\tif (cbinfo.event == 0) return OS.Pt_END;\r", "-\tif (data == 0) return OS.Pt_END;\r", "-\tif (pe.buttons != OS.Ph_BUTTON_SELECT) return result;\r", "+\tif (pe.buttons != OS.Ph_BUTTON_SELECT) return;\r", "-\t\t\tif (isDisposed ()) return OS.Pt_END;\r", "+\t\t\tif (isDisposed ()) return;\r", "-\t\t\t\treturn result;\r", "+\t\t\t\treturn;\r", "-\t\t\tif (!dragging) return result;\r", "+\t\t\tif (!dragging) return;\r", "-\t\t\t\treturn result;\r", "+\t\t\t\treturn;\r", "-\t\t\tif (!dragging) return result;\r", "+\t\t\tif (!dragging) return;\r", "-\t\t\tif ((newX == lastX) && (newY == lastY)) return result;\r", "+\t\t\tif ((newX == lastX) && (newY == lastY)) return;\r", "-\t\t\tif (isDisposed ()) return OS.Pt_END;\r", "+\t\t\tif (isDisposed ()) return;\r", "-\treturn result;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85aa72f77cb3f7e197f99365e82aa89e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "7e81b84a2c12e711d885a4cd4a47a7eab239d8f4", "commitAfterChange": "edcf7c0e3595e65e30021cf83de1448eadf495c1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["-", "-\t/*", "-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in the resize", "-\t* event.  If this happens, end the processing of the", "-\t* Windows message by returning the result of the", "-\t* WM_SIZE message.", "-\t*/", "-\t}", "-\t", "-\t/*", "-\t* Bug in Windows.  For some reason, a label with", "-\t* SS_BITMAP or SS_ICON and SS_CENTER does not redraw", "-\t* properly when resized.  Only the new area is drawn", "-\t* and the old area is not cleared.  The fix is to", "-\t* force the redraw.", "-\t*", "-\t* NOTE: SS_BITMAP and SS_ICON are not single bit", "-\t* masks so it is necessary to test for all of the", "-\t* bits in these masks.", "-\t*/", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tboolean isBitmap = (bits & OS.SS_BITMAP) == OS.SS_BITMAP;", "-\tboolean isIcon = (bits & OS.SS_ICON) == OS.SS_ICON;", "-\tif (isBitmap || isIcon) {", "-\t\tOS.InvalidateRect (handle, null, true);", "-\t\treturn result;", "-\t}", "-\t\t", "+\t}\t\t", "-\t", "-\treturn result;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76890f4f4572633c1797384fd49e0176", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "7e81b84a2c12e711d885a4cd4a47a7eab239d8f4", "commitAfterChange": "edcf7c0e3595e65e30021cf83de1448eadf495c1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "  LRESULT WM_ERASEBKGND (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_ERASEBKGND (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.SEPARATOR) != 0) return LRESULT.ONE;", "-\t/*", "-\t* Bug in Windows.  When a label has the SS_BITMAP", "-\t* or SS_ICON style, the label does not draw the", "-\t* background.  The fix is to draw the background", "-\t* when the label is showing a bitmap or icon.", "-\t*", "-\t* NOTE: SS_BITMAP and SS_ICON are not single bit", "-\t* masks so it is necessary to test for all of the", "-\t* bits in these masks.", "-\t*/", "-\tboolean isBitmap = (bits & OS.SS_BITMAP) == OS.SS_BITMAP;", "-\tboolean isIcon = (bits & OS.SS_ICON) == OS.SS_ICON;", "-\tif (isBitmap || isIcon) {", "-\t\tdrawBackground (wParam);", "+\tif ((bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6225055e7d4e048a75eee16c1c724f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7fccff985de1680cda4442339540104bad5d36a7", "commitAfterChange": "c25065768a620986e779f5bcf9bb953d36bdd77b", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["-\t\tint bits = OS.GetWindowLong (topHandle, OS.GWL_STYLE);", "-\t\tif ((bits & OS.WS_VISIBLE) == 0) {", "-\t\t\tOS.DefWindowProc (topHandle, OS.WM_SETREDRAW, 1, 0);", "-\t\t}", "-\t\tif ((bits & OS.WS_VISIBLE) == 0) {", "-\t\t\tOS.DefWindowProc (topHandle, OS.WM_SETREDRAW, 0, 0);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d3f60df445bc8a23f7d609d5000570", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "69c9dc30c2d9f89e40c3a9fbbbcb908b6b126bd9", "commitAfterChange": "15c6e77179119b16070ae399020d64e830dd08c5", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "diff": ["-\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tboolean firstColumn = nmcd.iSubItem == OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "-\t\tboolean fullText = (style & SWT.FULL_SELECTION) != 0 || !firstColumn;", "-\t\tRECT clipRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, true, fullText, false, hDC);", "+\t\tRECT clipRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, true, true, false, hDC);", "-\t\t\tRECT textRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, fullText, false, hDC);", "+\t\t\tRECT textRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, true, false, hDC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d0f0d323c2d6aad359d64efa890143b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "7d8300711cc32fd0228521379588493604671f10", "commitAfterChange": "0492caaa990e2a1e35c43057d7e9911c25655227", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  boolean SetScrollInfo (int hwnd, int flags, SCROLLINFO info, boolean fRedraw)", "signatureAfterChange": "  boolean SetScrollInfo (int hwnd, int flags, SCROLLINFO info, boolean fRedraw)", "diff": ["-\t* bar draws.  The fix is turn off redraw for the parent", "-\t* and hide both scroll bars.", "+\t* bar draws.  The fix is to hide both scroll bars.", "-\tboolean fixRedraw = false;", "-\tif ((state & (DISABLED | HIDDEN)) != 0) {", "-\t\tfRedraw = false;", "-\t\tfixRedraw = OS.IsWindowVisible (hwnd) && parent.drawCount == 0;", "-\t}", "-\tif (fixRedraw) OS.DefWindowProc (hwnd, OS.WM_SETREDRAW, 0, 0);\t", "+\tif ((state & (DISABLED | HIDDEN)) != 0) fRedraw = false;", "-", "-\tif (fixRedraw) OS.DefWindowProc (hwnd, OS.WM_SETREDRAW, 1, 0);"]}], "num": 7714}