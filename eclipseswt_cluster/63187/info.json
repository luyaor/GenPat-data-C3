{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e17d62a5204d3c061042d3b78428b076", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9a465a458f232c011933f721832b9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/widgets/Synchronizer.java", "commitBeforeChange": "cb7b8ee2a3c27e0f47e09479d16a5109a9a7baca", "commitAfterChange": "54a12a83f618c3be97f23ee7642fea31a005fe3f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r boolean runAsyncMessages ()", "signatureAfterChange": "\r \r boolean runAsyncMessages ()", "diff": ["-\r", "-\tif (messagesSize == 0) return false;\r", "-\tdo {\r", "-\t\tRunnableLock lock = removeFirst ();\r", "-\t\tif (lock == null) return true;\r", "+\tif (messageCount == 0) return false;\r", "+\tint listCount;\r", "+\tRunnableLock [] list;\r", "+\tsynchronized (messageLock) {\r", "+\t\tlistCount = messageCount;\r", "+\t\tlist = messages;\r", "+\t\tmessageCount = 0;\r", "+\t\tmessages = null;\r", "+\t}\r", "+\tint index = 0;\r", "+\twhile (index < listCount) {\r", "+\t\tRunnableLock lock = list [index];\r", "+\t\tif (lock == null) break;\r", "-\t} while (true);\r", "+\t\tindex++;\r", "+\t}\r", "+\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c081381d19235b4fbf9d6d604b0ecdf1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/widgets/Synchronizer.java", "commitBeforeChange": "f90c73f91a518cfbaf2465b010f57f06daaaeb98", "commitAfterChange": "2be9e13d76720c8ac383dbac01e6474ca4b95d97", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r boolean runAsyncMessages ()", "signatureAfterChange": "\r \r boolean runAsyncMessages ()", "diff": ["+\r", "-\tint listCount;\r", "-\tRunnableLock [] list;\r", "-\tsynchronized (messageLock) {\r", "-\t\tlistCount = messageCount;\r", "-\t\tlist = messages;\r", "-\t\tmessageCount = 0;\r", "-\t\tmessages = null;\r", "-\t}\r", "-\tint index = 0;\r", "-\twhile (index < listCount) {\r", "-\t\tRunnableLock lock = list [index];\r", "-\t\tif (lock == null) break;\r", "-\t\tsynchronized (lock) {\r", "-\t\t\tsyncThread = lock.thread;\r", "-\t\t\ttry {\r", "-\t\t\t\tlock.run ();\r", "-\t\t\t} catch (Throwable t) {\r", "-\t\t\t\tlock.throwable = t;\r", "-\t\t\t\tSWT.error (SWT.ERROR_FAILED_EXEC, t);\r", "-\t\t\t} finally {\r", "-\t\t\t\tsyncThread = null;\r", "-\t\t\t\tlock.notifyAll ();\r", "-\t\t\t}\r", "+\tRunnableLock lock = removeFirst ();\r", "+\tif (lock == null) return true;\r", "+\tsynchronized (lock) {\r", "+\t\tsyncThread = lock.thread;\r", "+\t\ttry {\r", "+\t\t\tlock.run ();\r", "+\t\t} catch (Throwable t) {\r", "+\t\t\tlock.throwable = t;\r", "+\t\t\tSWT.error (SWT.ERROR_FAILED_EXEC, t);\r", "+\t\t} finally {\r", "+\t\t\tsyncThread = null;\r", "+\t\t\tlock.notifyAll ();\r", "-\t\tindex++;\r"]}], "num": 63187}