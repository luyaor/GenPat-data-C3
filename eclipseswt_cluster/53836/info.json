{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "adecbce563fa54e20898e6d4cde3699f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "483b2dfa16fccfbabafc5371c48238c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "839e7aae626325bcc120e28136132e007b50784e", "commitAfterChange": "d77e1468652c0bf6dd5b34c4530c6c4a4033fb64", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tint oldBits = newBits;", "-\tnewBits &= ~(OS.BS_BITMAP | OS.BS_ICON);", "-\tif (newBits != oldBits) {", "-\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\tOS.SendMessage (handle, OS.BCM_SETIMAGELIST, 0, 0);", "+\t\tif (imageList != null) imageList.dispose ();", "+\t\timageList = null;", "+\t} else {", "+\t\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tint oldBits = newBits;", "+\t\tnewBits &= ~(OS.BS_BITMAP | OS.BS_ICON);", "+\t\tif (newBits != oldBits) {", "+\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\t\t}", "+\ttext = string;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7777ffc7a146eb603aafcc4f0a8dca5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "1c0b56740ef43e34c3cd026e786b32fc7a44d230", "commitAfterChange": "800f0db681dd224b4823f551f85cc352d9839ab0", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \r public void setVisible (boolean visible)", "signatureAfterChange": "\r \r public void setVisible (boolean visible)", "diff": ["-\tsuper.setVisible (visible);\r", "+\r", "+\tint flags = visible ? 0 : OS.Pt_DELAY_REALIZE;\r", "+\tOS.PtSetResource (shellHandle, OS.Pt_ARG_FLAGS, flags, OS.Pt_DELAY_REALIZE);\r", "+\tif (visible) {\r", "+\t\tsendEvent (SWT.Show);\r", "+\t\tOS.PtRealizeWidget (shellHandle);\r", "+\t} else {\r", "+\t\tOS.PtUnrealizeWidget (shellHandle);\r", "+\t\tsendEvent(SWT.Hide);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8afcf4c487ad9e71e03d6b1d66d84732", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "8e9705d93325d1390b1c14aa0ba55b9649457ef3", "commitAfterChange": "6bc2e4ca5332d0ed9c2e86c21bb2d52348bc9673", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public Clipboard(Display display)", "signatureAfterChange": "\r \r public Clipboard(Display display)", "diff": ["+\tbyte[] buffer = Converter.wcsToMbcs(null, \"PRIMARY\", true);\r", "+\tint primary = OS.gdk_atom_intern(buffer, false);\r", "+\tpGtkPrimary = OS.gtk_clipboard_get(primary);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddec6e0d0572497c92d22f5eb284b551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "31d0622ae5f0aaeab4f73c52677b1f743494c824", "commitAfterChange": "7a67a43071d4868b77d14e6e1a4a8b1c56cc6ca0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static boolean isGnomeDesktop(Display display)", "signatureAfterChange": "  private static boolean isGnomeDesktop()", "diff": ["-private static boolean isGnomeDesktop(Display display) {", "-\t/* disabled */", "-\treturn false;", "+private static boolean isGnomeDesktop() {", "-\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "-\tint atome_set = OS.gdk_atom_intern(name, true);", "-\treturn atome_set != 0;", "+\t* Bug in GTK.   gdk_atom_intern() ignores the only_if_exists", "+\t* argument.   It always creates a new atom if the requested", "+\t* one does not exist.  The workaround is to directly call", "+\t* XInternAtom(). ", "+\t* Note.  This introduces a dependency on X which is", "+\t* unwanted on GTK ports to non X platforms.  ", "+\tint display = OS.GDK_DISPLAY();", "+\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "+\tint atom = OS.XInternAtom(display, name, true);", "+\treturn atom != OS.None;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd1a8d1368a7db964e1a662b3fad6af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "ea0ebeef08ca260ed4d9d5fe438425a1c71cd3f3", "commitAfterChange": "3419da64f30eb2ccade1893132f4c879652065fb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (wHint != SWT.DEFAULT) width = wHint;", "-\tif (hHint != SWT.DEFAULT) height = hHint;", "-\tRectangle trim = computeTrim(0, 0, width, height);", "-\treturn fixPoint(trim.width, trim.height);", "+\tPoint size = fixPoint(width, height);", "+\tif (wHint != SWT.DEFAULT) size.x = wHint;", "+\tif (hHint != SWT.DEFAULT) size.y = hHint;", "+\tRectangle trim = computeTrim(0, 0, size.x, size.y);", "+\treturn new Point(trim.width, trim.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430e76d16beadde59db6524c129a7404", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "7eeaa0ad52301ec36c968db418c201118a4c22b8", "commitAfterChange": "531e8229a59b65591ccda6542e8ae228e79e8a41", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t} else if (OS.VERSION < 0x1050 && attributeName.equals (OS.kAXFocusedAttribute)) {", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus ()});", "+\t\t\tcode = OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da562003df10e9bb86180be6f734a9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "6a31a88c4dd02044117260b4697f4f85ff7a38d7", "commitAfterChange": "0a57f6cd4bb33b35d17bc0a2658b39e7e1339990", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void setOrientation (int orientation)", "signatureAfterChange": "  void setOrientation()", "diff": ["+void setOrientation() {", "+\tsuper.setOrientation();", "+\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+\t\tOS.gtk_widget_set_direction (listHandle, OS.GTK_TEXT_DIR_RTL);", "+\t\tOS.gtk_widget_set_direction (entryHandle, OS.GTK_TEXT_DIR_RTL);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a445695c0d6537c8c4d655f55b64095e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "70abad675e18e6f96105e62d46d0d65272701e3b", "commitAfterChange": "cc752587c0a9b0cc2bfe305686db96af1b7c7607", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-\tif (value < 0) return;", "+\tvalue = Math.max(value, getMinimum());", "+\tint maxSelection = getMaximum() - getThumb();", "+\tvalue = Math.min (value, maxSelection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66e0baef9dce1442e0e35be3a3d6d6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/gtk/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "0293729274c89c29bb031d302c05521e3cfc959f", "commitAfterChange": "149b1a96459c86d4d11c732555503b052ba6026e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["+\t\t", "+\t\tif (printerData.name != null) {", "+\t\t\tbyte [] nameBytes = Converter.wcsToMbcs (null, printerData.name, true);", "+\t\t\tOS.gtk_print_settings_set_printer(settings, nameBytes);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dfe50f4bab6c820124f444557d7047", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/textlayout/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9d94d6b83450f6d7c55e3c259dd2f8a36ead717d", "commitAfterChange": "62b114225776c09f8a6570dde053dd94358f28d9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void place (GC gc, StyleItem run)", "signatureAfterChange": "  void place (GC gc, StyleItem run)", "diff": ["+\tFontMetrics metrics = gc.getFontMetrics();", "-\trun.height = extent.y; ", "+\trun.ascent = metrics.getAscent() + metrics.getLeading();", "+\trun.descent = metrics.getDescent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0fbb7a2ef60ef700d621a576d0a7081", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4bd006be41519b55bc5ecd853136f9118e70859b", "commitAfterChange": "6c559b58fd83e01b879e5fdccb3347c420cef59e", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 99, "signatureBeforeChange": "  void releaseDisplay ()", "signatureAfterChange": "  void releaseDisplay ()", "diff": ["+\t", "+\tif (oldCursorSetProc != 0) {", "+\t\tint /*long*/ method = OS.class_getInstanceMethod(OS.class_NSCursor, OS.sel_set);", "+\t\tOS.method_setImplementation(method, oldCursorSetProc);", "+\t}", "+\tif (cursorSetCallback != null) cursorSetCallback.dispose();", "+\tcursorSetCallback = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffa1cd3a9868e5064e45161ecbbfbd9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2d8fb880970ff4bb0878d1a56ffec6f088c9d493", "commitAfterChange": "bae278f5f9ff6c79b79331f037b2e24e2349ad2e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void redraw ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+void hookEvents () {", "+\tsuper.hookEvents ();", "+\tif ((state & CANVAS) != 0) {", "+\t\tif ((style & SWT.NO_MERGE_MOUSE) == 0) {", "+\t\t\tOS.gtk_widget_add_events (handle, OS.GDK_POINTER_MOTION_HINT_MASK);", "-public void redraw () {", "-\tcheckWidget();", "-\tOS.gtk_widget_queue_draw(paintHandle());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4016ba0bb9df7ff42846c8dd1aab5214", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7480e483a25333f4d017908303b9ace306912f3e", "commitAfterChange": "3f05b17933308a28797bc3f60127d46ecf4e7bd9", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t} else {\t", "+\t} else {", "+\t\t/*", "+\t\t* Bug in GTK.  Invoking gtk_widget_hide() on a widget that has", "+\t\t* focus causes a focus_out_event to be sent. If the client disposes", "+\t\t* the widget inside the event, GTK GP's.  The fix is to reassign focus", "+\t\t* before hiding the widget.", "+\t\t* ", "+\t\t* NOTE: In order to stop the same widget from taking focus,", "+\t\t* temporarily clear and set the GTK_VISIBLE flag.", "+\t\t*/", "+\t\tif (!visible && isFocusAncestor ()) {", "+\t\t\tint flags = OS.GTK_WIDGET_FLAGS (topHandle);", "+\t\t\tOS.GTK_WIDGET_UNSET_FLAGS (topHandle, OS.GTK_VISIBLE);", "+\t\t\tfixFocus ();", "+\t\t\tif (isDisposed ()) return;", "+\t\t\tif ((flags & OS.GTK_VISIBLE) != 0) {", "+\t\t\t\tOS.GTK_WIDGET_SET_FLAGS (topHandle, OS.GTK_VISIBLE);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4741b000952da6a6c2f11ae649cad72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/MessageBox.java", "commitBeforeChange": "02bf802db1947fb46de52e4b9ebf3a1b9615f176", "commitAfterChange": "6a1c20fbd239eea2cac2cb22eeaa73d88b4489d6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " int createButton(String buttonName)", "signatureAfterChange": " int createButton(String buttonName, Callback callback)", "diff": ["-int createButton(String buttonName) {", "+int createButton(String buttonName, Callback callback) {", "-\thookSelection(buttonHandle);", "-\treturn buttonHandle;", "-}", "+\tint function = callback.getAddress ();", "+\tOS.gtk_signal_connect (buttonHandle, clicked, function, buttonHandle);", "+\treturn buttonHandle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84659e24541f4b0fb4dd2e5d358cc5cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "a6e920f83d5f71d4f4f77ffcbd6c96fdf5097d43", "commitAfterChange": "e9a78540d2d4096fcbcd1fd3d941a703ff6fd2d0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r void openDialog()", "signatureAfterChange": "\r void openDialog()", "diff": ["-\tPoint pt;\r", "-\tRectangle displayRect;\r", "-\tint widthLimit;\r", "-\tpt = dialog.computeSize(-1, -1, false);\r", "+\tPoint pt = dialog.computeSize(-1, -1, false);\r", "-\tdisplayRect = dialog.getDisplay().getBounds();\r", "-\twidthLimit = displayRect.width * 7 / 8;\r", "+\tRectangle displayRect = dialog.getDisplay().getBounds();\r", "+\tint widthLimit = displayRect.width * 7 / 8;\r", "+\tint heightLimit = displayRect.height * 7 / 8;\r", "+\t\r", "+\t// centre the dialog on its parent, and ensure that the\r", "+\t// whole dialog appears within the screen bounds\r", "-\toriginX = Math.max (0, originX);\r", "+\toriginX = Math.max (originX, 0);\r", "+\toriginX = Math.min (originX, widthLimit - pt.x);\r", "-\toriginY = Math.max (0, originY);\r", "-\t\r", "+\toriginY = Math.max (originY, 0);\r", "+\toriginY = Math.min (originY, heightLimit - pt.y);\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526b0ecb0652ca0cf610dfe4c67eeaab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8d77edb7ed635a933fa678ea9541f6d4becbd6ff", "commitAfterChange": "68d5b765dbe4fe8c510fc3b7fc73003498c0554a", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public Font getSystemFont ()", "signatureAfterChange": " public Font getSystemFont ()", "diff": ["-\treturn Font.gtk_new (this, defaultFont);", "+\tif (systemFont != null) return systemFont;", "+\tint /*long*/ style = OS.gtk_widget_get_style (shellHandle);\t", "+\tint /*long*/ defaultFont = OS.pango_font_description_copy (OS.gtk_style_get_font_desc (style));", "+\treturn systemFont = Font.gtk_new (this, defaultFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd13a8201914b388ff23acf25b958cc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8fcb69bd9ef5f3703415156d7ea495d1528c0bed", "commitAfterChange": "830f06eadee48db7328f257efefef81e6ded0f5e", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 96, "signatureBeforeChange": " \t\t \tpublic void updateWindow(int whichWindow)", "signatureAfterChange": " \t\t \tpublic void updateWindow(int whichWindow)", "diff": ["-\t\tupdateWindow2(whichWindow);", "+\t\tint updateRegion= OS.NewRgn();", "+\t\tOS.GetPortVisibleRegion(OS.GetWindowPort(whichWindow), updateRegion);", "+\t\tOS.EraseRgn(updateRegion);", "+\t\tOS.UpdateControls(whichWindow, updateRegion);\t\t\t", "+\t\tOS.DisposeRgn(updateRegion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db1a28f150f911a6084ea4626cd9dc8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "8ab2694b079d42238f2e3bb9154c6203d29b475b", "commitAfterChange": "bb20cc27247c1f1ac9a884571825af6f240e652e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["+\tbyte[] buffer = Converter.wcsToMbcs(null, getSegmentsText(), false);", "+\tOS.pango_layout_set_text (layout, buffer, buffer.length);", "-\t\tint start = styleItem.start;", "-\t\tint end = styles[i+1].start - 1;", "+\t\tint start = translateOffset(styleItem.start);", "+\t\tint end = translateOffset(styles[i+1].start - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eead1dd53c15ea35eb4346b8ad63d3e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "726f6fe3056b38f83242bb17980b51fa78f5e9cd", "commitAfterChange": "0e121bf1dc645ba655e2df35d7d88e044d43e4cf", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void moveHandle (int x, int y)", "signatureAfterChange": "  void moveHandle (int x, int y)", "diff": ["+\t/*", "+\t* Feature in GTK.  Calling gtk_fixed_move() to move a child causes", "+\t* the whole parent to redraw.  This is a performance problem. The", "+\t* fix is temporarily make the parent not visible during the move.", "+\t* ", "+\t* NOTE: Because every widget in SWT has an X window, the new and", "+\t* old bounds of the child are correctly redrawn.", "+\t*/", "+\tint flags = OS.GTK_WIDGET_FLAGS (parentHandle);", "+\tOS.GTK_WIDGET_UNSET_FLAGS (parentHandle, OS.GTK_VISIBLE);", "+\tif ((flags & OS.GTK_VISIBLE) != 0) {", "+\t\tOS.GTK_WIDGET_SET_FLAGS (parentHandle, OS.GTK_VISIBLE);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "228253e0400e61c066d0b2fe1a768b79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "66ba06815f9cd8d1981e6de1b6886e103901bde9", "commitAfterChange": "e55ec02f6620bafd13a57d29a43e4e88da3f51a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  boolean drawGripper (int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": "  boolean drawGripper (GC gc, int x, int y, int width, int height, boolean vertical)", "diff": ["-boolean drawGripper (int x, int y, int width, int height, boolean vertical) {", "+boolean drawGripper (GC gc, int x, int y, int width, int height, boolean vertical) {", "-\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "-\t\tlong /*int*/ context = OS.gtk_widget_get_style_context(paintHandle);", "-\t\tOS.gtk_render_handle(context, cairo, x, y, width, height);", "-\t\tCairo.cairo_destroy (cairo);", "+\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (paintHandle);", "+\t\tOS.gtk_style_context_save (context);", "+\t\tOS.gtk_style_context_add_class (context, OS.GTK_STYLE_CLASS_PANE_SEPARATOR);", "+\t\tOS.gtk_style_context_set_state (context, OS.GTK_STATE_FLAG_NORMAL);", "+\t\tOS.gtk_render_handle (context, gc.handle, x, y, width, height);", "+\t\tOS.gtk_style_context_restore (context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04bc26356848c0f68d3ad5ee9a7322cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3552a6be2588706e111472037103119150918ac8", "commitAfterChange": "9cea86a16ccc9fc4a3e1e95c0cde7fa4077ede2c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["+\tif (attributeName.equals (OS.kAXValueAttribute) && (style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeSInt32, 4, new int [] {selection ? 1 : 0});", "+\t\treturn OS.noErr;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecff8704a1ec2a507d81877bbc1a1a03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a0a9d258e4ba6447d350edb2b6535418f42f6638", "commitAfterChange": "5d553beb026a9c36ce49081735e3a236e6013699", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void mouseDidMoveOverElement (int elementInformation, int modifierFlags)", "signatureAfterChange": "  void mouseDidMoveOverElement (int elementInformation, int modifierFlags)", "diff": ["+\t\tint emptyString = Cocoa.objc_msgSend(Cocoa.C_NSString, Cocoa.S_string);", "+\t\tstringPtr = OS.CFURLCreateStringByReplacingPercentEscapes (0, stringPtr, emptyString);", "+\t\tOS.CFRelease(emptyString);", "+\t\tlength = OS.CFStringGetLength(stringPtr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56fd29a4555eeee8a734517062396c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "0a2378e11a5bb2cec04699b0bdfbb6c850d99b2f", "commitAfterChange": "c3f189f95d6ad2619e14f9a7a19cb3988d0e7c88", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  MozillaDelegate (Browser browser)", "signatureAfterChange": "  MozillaDelegate (Browser browser)", "diff": ["+", "+\t/*", "+\t* The mozilla libraries on SPARC need the C++ runtime library to be loaded, but they do not declare", "+\t* this dependency because they usually get it for free as a result of the mozilla executable pulling it", "+\t* in.  Load this library here and scope it globally so that the mozilla libraries can resolve.", "+\t*/", "+\tif (IsSparc) {", "+\t\tbyte[] buffer = Converter.wcsToMbcs (null, \"libCrun.so.1\", true); //$NON-NLS-1$", "+\t\tOS.dlopen (buffer, OS.RTLD_NOW | OS.RTLD_GLOBAL);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668c46d258eb77d2969a9953d249c226", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "67f8ea583a7420e07c21e339ec92e00d4716ec34", "commitAfterChange": "7a49c2532c531698882f59095fef03010fc9f5bc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void onPaint(GC gc)", "signatureAfterChange": " void onPaint(GC gc)", "diff": ["+\t} else {", "+\t\t// draw solid tail", "+\t\tint x1 = Math.max(0, curveStart - CURVE_TAIL);", "+\t\tgc.setForeground(border1);", "+\t\tgc.drawLine(x1, size.y - BORDER_STRIPE, curveStart+1, size.y - BORDER_STRIPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8faeceb9d475049b022880cae9b0004", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "01b53f04043d77e5b4a54bcfe36da2df748745a8", "commitAfterChange": "82656235b7ecb33ea4b71a4e4df18a0b5cab2acb", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\t\t\t\tcase OS.FocusIn: ", "+\t\t\t\tcase OS.FocusIn:", "+\t\t\t\t\tif (focusProxy != 0) {", "+\t\t\t\t\t\tint xWindow = OS.XtWindow (focusProxy);", "+\t\t\t\t\t\tint xDisplay = OS.XtDisplay (focusProxy);", "+\t\t\t\t\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0362f7d0f327cdd2f9522e05892efad6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "df0f80ff8a78c112a82532d9d0b7052a1a5c953a", "commitAfterChange": "23e8e8964dd4f5d4f3dad5c0108120b1e7e71698", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setSize (int width, int height)", "signatureAfterChange": " public void setSize (int width, int height)", "diff": ["-\twidth = Math.max(width, minimumWidth + MINIMUM_WIDTH);", "+\tPoint point = parent.fixPoint(width, height);", "+\twidth = Math.max(point.x, minimumWidth + MINIMUM_WIDTH);", "+\theight = point.y;", "-\t\tcontrol.setSize(controlWidth, height);", "+\t\tcontrol.setSize(parent.fixPoint(controlWidth, height));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab04599490ab2b74e3bb7b641c8abd16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet41.java", "commitBeforeChange": "99d72110db254e3009fcc7b70804d6cb1872ce28", "commitAfterChange": "90d5fa14dc67e3febe9ec3a714329ba911cc2acf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-\tfolder.setSize (200, 200);", "+\tRectangle clientArea = shell.getClientArea ();", "+\tfolder.setBounds (clientArea.x, clientArea.y, 200, 200);", "-\tbar.setBounds (0, 200, 200, 40);", "+\tbar.setBounds (clientArea.x, clientArea.y + 200, 200, 40);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26e4eb0a773cee6c73eae29756102aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "8a0a64cf86ef9d95ea87456cfa83bd98199a4f72", "commitAfterChange": "bc0c76af69c56f0736b8c5669412a4269f05901f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tint metrics = OS.pango_context_get_metrics(context, font, null);", "+\t//FIXME - figure out correct language", "+\tbyte[] buffer = Converter.wcsToMbcs(null, \"en_US\");", "+\tint lang = OS.pango_language_from_string(buffer);", "+//\tint lang = OS.pango_context_get_language(context);", "+\tint metrics = OS.pango_context_get_metrics(context, font, lang);", "-\tint scale = OS.PANGO_SCALE();", "-\tfm.ascent = OS.pango_font_metrics_get_ascent(metrics) / scale;", "-\tfm.descent = OS.pango_font_metrics_get_descent(metrics) / scale;", "-\tfm.averageCharWidth = OS.pango_font_metrics_get_approximate_char_width(metrics) / scale;", "-\t//TEMPORARY CODE - why do we have to subtract instead of add???", "-\tfm.height = fm.ascent - fm.descent;", "+\tfm.ascent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_ascent(metrics));", "+\tfm.descent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_descent(metrics));", "+\tfm.averageCharWidth = OS.PANGO_PIXELS(OS.pango_font_metrics_get_approximate_char_width(metrics));", "+\tfm.height = fm.ascent + fm.descent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "750fa479d0659be5473fa50e8b06bb53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r private void redrawTabArea(int index)", "signatureAfterChange": "\r private void redrawTabArea(int index)", "diff": ["-\t\twidth = item.width;\r", "-\t\theight = item.height;\r", "+\t\tRectangle area = super.getClientArea();\r", "+\t\twidth = area.x + area.width - x;\r", "+\t\theight = area.y + area.height - y;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f301e6b0644fe45ba5a8485103a5af42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2f96e7e202ac58f4ea29344893882d50b04d762c", "commitAfterChange": "7bae1452fd65c85c62d61b84f7c946bffc13c360", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void setCursorLocation (int x, int y)", "signatureAfterChange": " public void setCursorLocation (int x, int y)", "diff": ["-\t/* This is not supported on GTK */", "+\tif (OS.GDK_WINDOWING_X11 ()) {", "+\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\tint /*long*/ xWindow = OS.XDefaultRootWindow (xDisplay);", "+\t\tOS.XWarpPointer (xDisplay, OS.None, xWindow, 0, 0, 0, 0, x, y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "debb6c77a8f0638fb262dfe4f0715fc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet249.java", "commitBeforeChange": "21a85b41f5c1c26f952db6e604e4efdfcf4f2b15", "commitAfterChange": "bdf4f9615d196b856239c88f144a55022b23fb8b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-\tshell.setBounds (10, 10, 300, 200);", "+\tRectangle clientArea = shell.getClientArea();", "+\tshell.setBounds (clientArea.x + 10, clientArea.y + 10, 300, 200);", "-\tcontentPanel.setBounds (100, 10, 190, 90);", "+\tcontentPanel.setBounds (clientArea.x + 100, clientArea.y + 10, 190, 90);", "-\tpageButton.setBounds (10, 10, 80, 25);", "+\tpageButton.setBounds (clientArea.x + 10, clientArea.y + 10, 80, 25);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "286420386053993880eee0cb76a8d883", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "3052bbf79433f0643a49abe741971ee99e0116c2", "commitAfterChange": "6e9c8ca44cece95e36d0afd675d022053f6a0595", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r public void setControl (Control control)", "signatureAfterChange": "\r public void setControl (Control control)", "diff": ["+\t\tRectangle bounds = composite.getBounds();\r", "+\t\tcontrol.setBounds (\r", "+\t\t\tbounds.x + MINIMUM_WIDTH, \r", "+\t\t\tbounds.y + MARGIN_HEIGHT, \r", "+\t\t\tbounds.width - MINIMUM_WIDTH - MARGIN_WIDTH, \r", "+\t\t\tbounds.height - (2 * MARGIN_HEIGHT));\r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2de354fd5db94814518d3accb0edc9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "53bf555c9df4a93484137843f94aabb1d0196929", "commitAfterChange": "45277ac03e376d6677c11327ab12d6efe72ca07b", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  void onResize ()", "signatureAfterChange": "  void onResize ()", "diff": ["-\tdelegate.setSize (embedHandle, width, height);", "+\tPoint size = delegate.getNativeSize (width, height);", "+\tdelegate.setSize (embedHandle, size.x, size.y);", "-\trc = baseWindow.SetPositionAndSize (0, 0, width, height, 1);", "+\trc = baseWindow.SetPositionAndSize (0, 0, size.x, size.y, 1);"]}], "num": 53836}