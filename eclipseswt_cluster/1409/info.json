{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d029cf30e1c158b349d264820773748", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80b54b718a28941efc743473531c1c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "737b13eee8956d6fb70b0471ffb40fd8709bf274", "commitAfterChange": "c829ad7e77596aa2946c6bebe8a5dd77a29caf43", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": "  public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["+", "+\t/* ", "+\t* Draw the background of styles. There is no API to set a background attribute", "+\t* in an ATSU style.", "+\t*/", "+\tRectangle rect = null;", "+\tRegion clipping = null, region = null;", "+\tfor (int j = 0; j < styles.length; j++) {", "+\t\tStyleItem run = styles[j];", "+\t\tif (run.style == null || run.style.background == null) continue;", "+\t\tOS.CGContextSetFillColor(gc.handle, run.style.background.handle);", "+\t\tif (clipping == null) {", "+\t\t\tregion = new Region();", "+\t\t\tclipping = new Region();", "+\t\t\tgc.getClipping(clipping);", "+\t\t\trect = clipping.getBounds();", "+\t\t}", "+\t\tint start = run.start;", "+\t\tint end = j + 1 < styles.length ? styles[j + 1].start - 1 : length;", "+\t\tfor (int i=0, lineStart=0, lineY = 0; i<breaks.length; i++) {", "+\t\t\tint lineBreak = breaks[i];", "+\t\t\tint lineEnd = lineBreak - 1;", "+\t\t\tif (!(start > lineEnd || end < lineStart)) {", "+\t\t\t\tint highStart = Math.max(lineStart, start);", "+\t\t\t\tint highEnd = Math.min(lineEnd, end);", "+\t\t\t\tint highLen = skipHardBreak(highEnd) - highStart + 1;", "+\t\t\t\tif (highLen > 0) {", "+\t\t\t\t\tOS.ATSUGetTextHighlight(layout, lineX[i], lineY, highStart, highLen, region.handle);", "+\t\t\t\t\tOS.OffsetRgn(region.handle, (short)0, (short)(lineY + lineAscent[i]));", "+\t\t\t\t\tOS.OffsetRgn(region.handle, (short)x, (short)y);", "+\t\t\t\t\tregion.intersect(clipping);", "+\t\t\t\t\tgc.setClipping(region);", "+\t\t\t\t\tgc.fillRectangle(rect);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (lineEnd > end) break;", "+\t\t\tlineY += lineHeight[i];", "+\t\t\tlineStart = lineBreak;", "+\t\t}", "+\t}", "+\tif (clipping != null) {", "+\t\tOS.CGContextRestoreGState(gc.handle);", "+\t\tOS.CGContextSaveGState(gc.handle);", "+\t\tclipping.dispose();", "+\t\tregion.dispose();", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8363b72b9706ea0949bf1ee6a36febad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ee359c5255474db5647bd098f9e5599338f8c1aa", "commitAfterChange": "46b2808e803b0a1f72cf9e4d36b0adc76790e712", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["+\tgc.checkGC(GC.FOREGROUND_FILL);", "+\tif (gc.data.updateClip) gc.setCGClipping();", "+\tOS.CGContextSaveGState(gc.handle);", "-\tOS.CGContextSaveGState(gc.handle);", "-\tRectangle rect = null;", "-\tRegion clipping = null, region = null;", "+\tint rgn = 0;", "+\tCGRect rect = null;", "+\tCallback callback = null;", "-\t\tif (run.style == null || run.style.background == null) continue;", "-\t\tOS.CGContextSetFillColor(gc.handle, run.style.background.handle);", "-\t\tif (clipping == null) {", "-\t\t\tregion = new Region();", "-\t\t\tclipping = new Region();", "-\t\t\tgc.getClipping(clipping);", "-\t\t\trect = clipping.getBounds();", "-\t\t}", "+\t\tTextStyle style = run.style;", "+\t\tif (style == null || style.background == null) continue;", "-\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.Long2Fix(y + lineY + lineAscent[i]), highStart, highLen, region.handle);", "-\t\t\t\t\tregion.intersect(clipping);", "-\t\t\t\t\tgc.setClipping(region);", "-\t\t\t\t\tgc.fillRectangle(rect);", "+\t\t\t\t\tif (rgn == 0) rgn = OS.NewRgn();", "+\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.Long2Fix(y + lineY + lineAscent[i]), highStart, highLen, rgn);", "+\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "+\t\t\t\t\tif (callback == null) {", "+\t\t\t\t\t\tcallback = new Callback(this, \"regionToRects\", 4);", "+\t\t\t\t\t\tif (callback.getAddress() == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.QDRegionToRects(rgn, OS.kQDParseRegionFromTopLeft, callback.getAddress(), gc.handle);", "+\t\t\t\t\tif (rect == null) rect = new CGRect();", "+\t\t\t\t\tOS.CGContextGetPathBoundingBox(gc.handle, rect);", "+\t\t\t\t\tOS.CGContextEOClip(gc.handle);", "+\t\t\t\t\tOS.CGContextSetFillColorSpace(gc.handle, device.colorspace);", "+\t\t\t\t\tOS.CGContextSetFillColor(gc.handle, style.background.handle);", "+\t\t\t\t\tOS.CGContextFillRect(gc.handle, rect);", "+\t\t\t\t\tOS.CGContextRestoreGState(gc.handle);", "-\tif (clipping != null) {", "-\t\tgc.setClipping(clipping);", "-\t\tOS.CGContextRestoreGState(gc.handle);", "-\t\tOS.CGContextSaveGState(gc.handle);", "-\t\tclipping.dispose();", "-\t\tregion.dispose();", "-\t}", "+\tif (callback != null) callback.dispose();", "+\tif (rgn != 0) OS.DisposeRgn(rgn);", "-\tOS.CGContextSetFillColor(gc.handle, gc.data.foreground);"]}], "num": 1409}