{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b2fd141ff691b91a594a7517f2a400d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15cf0533458389b111b4bc47fcbde7af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "889f93f108ecb66ce26de4aca6ddff41efd04306", "commitAfterChange": "a016d09fe92fafd1dfc110f82a9b2cb8ff8c6200", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawWidget (int widget, int damage)", "signatureAfterChange": "  void drawWidget (int widget, int damage)", "diff": ["-\t\t\t/* Get the clipping tiles for children and siblings */", "-\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);", "-\t\t\tif (clip_tile == 0) return;", "-", "-\t\t\t/* Translate the clipping to the current GC coordinates */", "-\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];", "-\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);", "-\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];", "-\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);", "-\t\t\tPhPoint_t delta = new PhPoint_t ();", "-\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);", "-\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);", "-\t\t\tOS.PhTranslateTiles(clip_tile, delta);", "-", "-\t\t\t/* Set the clipping */", "-\t\t\tint[] clip_rects_count = new int [1];", "-\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);", "-\t\t\tOS.PhFreeTiles (clip_tile);\t", "-\t\t\tif (clip_rects_count [0] == 0) {", "-\t\t\t\tclip_rects_count [0] = 1;", "+\t\t\t/*", "+\t\t\t* Note that QNX 6.2.1 provides full widget hierarchy clipping in paint.", "+\t\t\t*/", "+\t\t\tif (!(OS.QNX_MAJOR > 6 || (OS.QNX_MAJOR == 6 && (OS.QNX_MINOR > 2 || (OS.QNX_MINOR == 2 && OS.QNX_MICRO >= 1))))) {", "+\t\t\t\t/* Get the clipping tiles for children and siblings */", "+\t\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);", "+\t\t\t\tif (clip_tile == 0) return;", "+\t", "+\t\t\t\t/* Translate the clipping to the current GC coordinates */", "+\t\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];", "+\t\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);", "+\t\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];", "+\t\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);", "+\t\t\t\tPhPoint_t delta = new PhPoint_t ();", "+\t\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);", "+\t\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);", "+\t\t\t\tOS.PhTranslateTiles(clip_tile, delta);", "+\t", "+\t\t\t\t/* Set the clipping */", "+\t\t\t\tint[] clip_rects_count = new int [1];", "+\t\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);", "+\t\t\t\tOS.PhFreeTiles (clip_tile);\t", "+\t\t\t\tif (clip_rects_count [0] == 0) {", "+\t\t\t\t\tclip_rects_count [0] = 1;", "+\t\t\t\t\tOS.free (clip_rects);", "+\t\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);", "+\t\t\t\t\tOS.memset(clip_rects, 0, PhRect_t.sizeof);", "+\t\t\t\t}", "+\t\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);", "-\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);", "-\t\t\t\tOS.memset(clip_rects, 0, PhRect_t.sizeof);", "-\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);", "-\t\t\tOS.free (clip_rects);", "-\t\t\t/* Reset the clipping */", "-\t\t\tOS.PgSetMultiClip (0, 0);", "+\t\t\tif (!(OS.QNX_MAJOR > 6 || (OS.QNX_MAJOR == 6 && (OS.QNX_MINOR > 2 || (OS.QNX_MINOR == 2 && OS.QNX_MICRO >= 1))))) {", "+\t\t\t\t/* Reset the clipping */", "+\t\t\t\tOS.PgSetMultiClip (0, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f348b79368b03d66102f075e35d03998", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "c06b35dd04813b2bc1a8ba60ab629a0b84a085d3", "commitAfterChange": "ef785e65c5666e705660b195ef7d2da7b6c1f35c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void init(Device device, ImageData image)", "signatureAfterChange": "  void init(Device device, ImageData image)", "diff": ["+\tPaletteData palette = image.palette;", "+\tif (!(((image.depth == 1 || image.depth == 2 || image.depth == 4 || image.depth == 8) && !palette.isDirect) ||", "+\t\t\t((image.depth == 8) || (image.depth == 16 || image.depth == 24 || image.depth == 32) && palette.isDirect)))", "+\t\t\t\tSWT.error(SWT.ERROR_UNSUPPORTED_DEPTH);", "+", "-\tPaletteData palette = image.palette;"]}], "num": 15242}