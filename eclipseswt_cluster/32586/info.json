{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eee1e56de7a93faa0fcdefec9ae474a7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "315633d64908a54d497c19d55e476d67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int processVerify (int int0, int int1, int int2)", "signatureAfterChange": "  int processVerify (int int0, int int1, int int2)", "diff": ["-\tif (int2 != 0) {", "-\t\t// Insert ", "-\t\tif (int0 == 0 || int1==0){", "-\t\t\t return 0;", "-\t\t}", "-//\t\tint length = OS.strlen (int0);", "-\t\tbyte [] buffer1 = new byte [int1];", "-\t\tOS.memmove (buffer1, int0, buffer1.length);", "-\t\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\t\tString oldText = new String (buffer2, 0, buffer2.length);", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif (int0 == 0 || int1==0) return 0;", "+\t\tbyte [] buffer = new byte [int1];", "+\t\tOS.memmove (buffer, int0, buffer.length);", "+\t\tString oldText = new String (Converter.mbcsToWcs (null, buffer));", "-\t\tif (position [0] == -1) position [0] = OS.gtk_text_get_length (handle);", "+\t\tif (position [0] == -1) position [0] = getCharCount ();", "-\t\t\tOS.gtk_signal_emit_stop_by_name (handle, OS.insert_text);", "+\t\t\tOS.g_signal_stop_emission_by_name (handle, OS.insert_text);", "-\t\t\tint windowProc5 = getDisplay ().windowProc5;", "-\t\t\tOS.gtk_signal_handler_block_by_func (handle, windowProc5, SWT.Verify);", "+\t\t\tblockSignal (bufferHandle, SWT.Verify);", "-\t\t\tOS.gtk_signal_handler_unblock_by_func (handle, windowProc5, SWT.Verify);", "-\t\t\tOS.gtk_signal_emit_stop_by_name (handle, OS.insert_text);", "+\t\t\tunblockSignal (bufferHandle, SWT.Verify);", "+\t\t\tOS.g_signal_stop_emission_by_name (handle, OS.insert_text);", "-\t\t// Delete ", "-\t\tint address = OS.gtk_editable_get_chars (handle, int0, int1);", "-\t\tint length = OS.strlen (address);", "-\t\tbyte [] buffer1 = new byte [length];", "-\t\tOS.memmove (buffer1, address, length);", "-\t\tOS.g_free (address);", "-\t\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\t\tString oldText = new String (buffer2, 0, buffer2.length);", "-\t\tString newText = verifyText (oldText, int0, int1);", "+\t\tbyte [] iter = new byte [ITER_SIZEOF];", "+\t\tOS.memmove (iter, int0, iter.length);", "+\t\tint start = OS.gtk_text_iter_get_offset (iter);", "+\t\tbyte [] buffer = new byte [int2];", "+\t\tOS.memmove (buffer, int1, buffer.length);", "+\t\tString oldText = new String (Converter.mbcsToWcs (null, buffer));", "+\t\tString newText = verifyText (oldText, start, start);", "-\t\t\tOS.gtk_signal_emit_stop_by_name (handle, OS.delete_text);", "+\t\t\tOS.g_signal_stop_emission_by_name (bufferHandle, OS.insert_text);", "+\t\t\treturn 0;", "+\t\t}", "+\t\tif (newText != oldText) {", "+\t\t\tbyte [] buffer1 = Converter.wcsToMbcs (null, newText);", "+\t\t\tblockSignal (bufferHandle, SWT.Verify);", "+\t\t\tOS.gtk_text_buffer_insert (bufferHandle, iter, buffer1, buffer1.length);", "+\t\t\tunblockSignal (bufferHandle, SWT.Verify);", "+\t\t\tOS.g_signal_stop_emission_by_name (bufferHandle, OS.insert_text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6339f24e72da84d56ecc6993cf2d2f8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString(String string, int x, int y, boolean isTransparent)", "diff": ["-public void drawString (String string, int x, int y, boolean isTransparent) {", "+public void drawString(String string, int x, int y, boolean isTransparent) {", "-\t/* AW", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreate (buffer, OS.XmFONTLIST_DEFAULT_TAG);", "-\tif (isTransparent) {", "-\t\tOS.XmStringDraw (data.display, data.drawable, data.fontList, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\t} else {", "-\t\tOS.XmStringDrawImage (data.display, data.drawable, data.fontList, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\t}\t\t\t", "-//\tOS.XmStringDrawUnderline (display, drawable, fontList, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, 0);", "-\tOS.XmStringFree (xmString);", "-\t*/", "-\ttry {", "-\t\tif (focus(true, null)) {", "-\t\t\tinstallFont();", "-\t\t\tMacUtil.RGBForeColor(data.foreground);", "-\t\t\tif (isTransparent) {", "-\t\t\t\tOS.TextMode(OS.srcOr);", "-\t\t\t} else {", "-\t\t\t\tif ((data.background & 0xff000000) == 0) {", "-\t\t\t\t\tMacUtil.RGBBackColor(data.background);", "-\t\t\t\t\tOS.TextMode(OS.srcCopy);", "-\t\t\t\t} else {", "-\t\t\t\t\t//System.out.println(\"GC.drawString: \" + Integer.toHexString(data.background));", "-\t\t\t\t\tOS.TextMode(OS.srcOr);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tshort[] fontInfo= new short[4];", "-\t\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\t\t\tOS.MoveTo((short)x, (short)(y+fontInfo[0]));", "-\t\t\tOS.DrawText(string, data.font.fID, data.font.fSize, data.font.fFace);", "-\t\t}", "-\t} finally {", "-\t\tunfocus(true);", "-\t}", "+\tint length = string.length();", "+\tif (length == 0) return;", "+\tOS.CGContextSaveGState(handle);", "+\tOS.CGContextScaleCTM(handle, 1, -1);", "+\tOS.CGContextTranslateCTM(handle, 0, -data.fontAscent);", "+\tOS.CGContextSetFillColor(handle, data.foreground);", "+\tchar[] buffer = new char[length];", "+\tstring.getChars(0, length, buffer, 0);", "+\tint ptr = OS.NewPtr(length * 2);", "+\tOS.memcpy(ptr, buffer, length * 2);", "+\tOS.ATSUSetTextPointerLocation(data.layout, ptr, 0, length, length);", "+\tOS.ATSUSetRunStyle(data.layout, data.style, 0, length);", "+\tOS.ATSUDrawText(data.layout, 0, length, x << 16, -y << 16);", "+\tOS.DisposePtr(ptr);", "+\tOS.CGContextRestoreGState(handle);"]}], "num": 32586}