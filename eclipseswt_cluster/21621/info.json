{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf00f2cbaf9da5d8a21285db9dcda614", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00a84b7de47ff8b1a82cc94baaae551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "a51a5c56cd66a0306adaaed3bd6b70f9e1c1a47f", "commitAfterChange": "a4935bc66ce08e7d2fe2bd7381ba534ed932f1ac", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void copyToClipboard (char [] buffer)", "signatureAfterChange": "  void copyToClipboard (char [] chars)", "diff": ["-void copyToClipboard (char [] buffer) {", "-\tif (buffer.length == 0) return;", "+void copyToClipboard (char [] chars) {", "+\tif (chars.length == 0) return;", "-\tOS.PutScrapFlavor (scrap [0], OS.kScrapFlavorTypeUTF16External, 0, buffer.length * 2, buffer);", "+\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tif (cfstring == 0) return;", "+\tbyte[] buffer = null;", "+\ttry {", "+\t\tCFRange range = new CFRange();", "+\t\trange.length = chars.length;", "+\t\tint[] size = new int[1];", "+\t\tint numChars = OS.CFStringGetBytes(cfstring, range, OS.kCFStringEncodingUnicode, (byte)'?', true, null, 0, size);", "+\t\tif (numChars == 0) return;", "+\t\tbuffer = new byte[size[0]];", "+\t\tnumChars = OS.CFStringGetBytes(cfstring, range, OS.kCFStringEncodingUnicode, (byte)'?', true, buffer, size [0], size);", "+\t\tif (numChars == 0) return;", "+\t} finally {", "+\t\tOS.CFRelease(cfstring);", "+\t}", "+\tOS.PutScrapFlavor (scrap [0], OS.kScrapFlavorTypeUTF16External, 0, buffer.length, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa7e36563093477b1d21b747e63bb72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "5c3ad82fdba22d2ac42c5302029d9be57da18ceb", "commitAfterChange": "1d84e951c31eea40f181c2d82c615630805955fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tint count = string.length();", "-\tchar[] chars = new char[count];", "-\tstring.getChars(0, count, chars, 0);", "-\tbyte[] buffer = new byte[chars.length * 2];", "-\tOS.memmove(buffer, chars, buffer.length);", "+\tchar[] chars = new char[string.length()];", "+\tstring.getChars (0, chars.length, chars, 0);", "+\ttransferData.result = -1;", "+", "+\tint encoding = OS.CFStringGetSystemEncoding();", "+\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tif (cfstring == 0) return;", "+\tbyte[] buffer = null;", "+\ttry {", "+\t\tCFRange range = new CFRange();", "+\t\trange.length = chars.length;", "+\t\tint[] size = new int[1];", "+\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', false, null, 0, size);", "+\t\tif (numChars == 0) return;", "+\t\tbuffer = new byte[size[0]];", "+\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', false, buffer, size [0], size);", "+\t\tif (numChars == 0) return;", "+\t} finally {", "+\t\tOS.CFRelease(cfstring);", "+\t}"]}], "num": 21621}