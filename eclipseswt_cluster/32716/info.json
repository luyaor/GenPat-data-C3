{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e70b822aa047d49e6a22a4dd43b932d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f65098514a42a26bd0e60cfad6b35a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r \r int processMouse (int info)", "signatureAfterChange": "\r \r int Ph_EV_BUT_PRESS (int widget, int info)", "diff": ["+int Ph_EV_BUT_PRESS (int widget, int info) {\r", "+\tif (info == 0) return OS.Pt_END;\r", "+\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "+\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "+\tif (cbinfo.event == 0) return OS.Pt_END;\r", "+\tPhEvent_t ev = new PhEvent_t ();\r", "+\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "+\tif ((ev.processing_flags & OS.Ph_FAKE_EVENT) != 0) {\r", "+\t\treturn OS.Pt_CONTINUE;\r", "+\t}\r", "+\tev.processing_flags |= OS.Ph_CONSUMED;\r", "+\tOS.memmove (cbinfo.event, ev, PhEvent_t.sizeof);\r", "+\tint data = OS.PhGetData (cbinfo.event);\r", "+\tif (data == 0) return OS.Pt_END;\r", "+\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\tEvent event = new Event ();\r", "+\tevent.time = ev.timestamp;\r", "+\tsetMouseState (event, pe, ev);\r", "+\tpostEvent (SWT.MouseDown, event);\r", "+\tif (pe.click_count == 2) {\r", "+\t\tEvent clickEvent = new Event ();\r", "+\t\tclickEvent.time = event.time;\r", "+\t\tclickEvent.x = event.x;\r", "+\t\tclickEvent.y = event.y;\r", "+\t\tclickEvent.button = event.button;\r", "+\t\tclickEvent.stateMask = event.stateMask;\r", "+\t\tpostEvent (SWT.MouseDoubleClick, clickEvent);\r", "+\t}\r", "+\tif (event.button == 3) {\r", "+\t\tif (menu != null && !menu.isDisposed ()) {\r", "+\t\t\tDisplay display = getDisplay ();\r", "+\t\t\tdisplay.runDeferredEvents ();\r", "+\t\t\tmenu.setVisible (true);\r", "+\t\t}\r", "+\t}\r", "+\t*/\r", "+\tShell shell = getShell ();\r", "-int processMouse (int info) {\r", "-\tif (ev.type != OS.Ph_EV_DRAG) {\r", "-\t\tev.processing_flags |= OS.Ph_CONSUMED;\r", "-\t\tOS.memmove (cbinfo.event, ev, PhEvent_t.sizeof);\r", "-\t}\r", "-\tint type = 0;\r", "-\tswitch (ev.type) {\r", "-\t\tcase OS.Ph_EV_BUT_PRESS:\r", "-\t\t\ttype = SWT.MouseDown;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_BUT_RELEASE:\r", "-\t\t\tif (ev.subtype != OS.Ph_EV_RELEASE_PHANTOM) {\r", "-\t\t\t\treturn OS.Pt_CONTINUE;\r", "-\t\t\t}\r", "-\t\t\ttype = SWT.MouseUp;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_PTR_MOTION_BUTTON:\r", "-\t\t\tif ((state & CANVAS) != 0) return OS.Pt_CONTINUE;\r", "-\t\tcase OS.Ph_EV_PTR_MOTION_NOBUTTON:\r", "-\t\t\ttype = SWT.MouseMove;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_DRAG:\r", "-\t\t\tif (ev.subtype != OS.Ph_EV_DRAG_MOTION_EVENT) {\r", "-\t\t\t\treturn OS.Pt_CONTINUE;\r", "-\t\t\t}\r", "-\t\t\ttype = SWT.MouseMove;\r", "-\t\t\tbreak;\r", "-\t\tdefault:\r", "-\t\t\treturn OS.Pt_CONTINUE;\r", "-\tpostEvent (type, event);\r", "-\tif (type == SWT.MouseDown) {\r", "-\t\tif (event.button == 3) {\r", "-\t\t\tif (menu != null && !menu.isDisposed ()) {\r", "-\t\t\t\tDisplay display = getDisplay ();\r", "-\t\t\t\tdisplay.runDeferredEvents ();\r", "-\t\t\t\tmenu.setVisible (true);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tif (pe.click_count == 2) {\r", "-\t\t\tEvent clickEvent = new Event ();\r", "-\t\t\tclickEvent.time = event.time;\r", "-\t\t\tclickEvent.x = event.x;\r", "-\t\t\tclickEvent.y = event.y;\r", "-\t\t\tclickEvent.button = event.button;\r", "-\t\t\tclickEvent.stateMask = event.stateMask;\r", "-\t\t\tpostEvent (SWT.MouseDoubleClick, clickEvent);\r", "-\t\t}\r", "-\t\t/*\r", "-\t\t* It is possible that the shell may be\r", "-\t\t* disposed at this point.  If this happens\r", "-\t\t* don't send the activate and deactivate\r", "-\t\t* events.\r", "-\t\t*/\r", "-\t\tShell shell = getShell ();\r", "-\t\tif (!shell.isDisposed ()) {\r", "-\t\t\tshell.setActiveControl (this);\r", "-\t\t}\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afeec97c225814a26c6329c1d126ba1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 58, "signatureBeforeChange": "\r \r int processMouseEnter (int info)", "signatureAfterChange": "\r \r int Ph_EV_BOUNDARY (int widget, int info)", "diff": ["+int Ph_EV_BOUNDARY (int widget, int info) {\r", "+\tif (info == 0) return OS.Pt_END;\r", "+\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "+\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "+\tif (cbinfo.event == 0) return OS.Pt_END;\r", "+\tPhEvent_t ev = new PhEvent_t ();\r", "+\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "+\tint data = OS.PhGetData (cbinfo.event);\r", "+\tif (data == 0) return OS.Pt_END;\r", "+\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\tEvent event = new Event ();\r", "+\tevent.time = ev.timestamp;\r", "+\tsetMouseState (event, pe, ev);\r", "+\tswitch ((int) ev.subtype) {\r", "+\t\tcase OS.Ph_EV_PTR_ENTER:\r", "+\t\tcase OS.Ph_EV_PTR_ENTER_FROM_CHILD:\r", "+\t\t\tsendEvent (SWT.MouseEnter, event);\r", "+\t\t\tbreak;\r", "+\t\tcase OS.Ph_EV_PTR_LEAVE:\r", "+\t\tcase OS.Ph_EV_PTR_LEAVE_TO_CHILD:\r", "+\t\t\tsendEvent (SWT.MouseExit, event);\r", "+\t\t\tbreak;\r", "+\t\tcase OS.Ph_EV_PTR_STEADY:\r", "+\t\t\tpostEvent (SWT.MouseHover, event);\r", "+\t\t\tdestroyToolTip (toolTipHandle);\r", "+\t\t\ttoolTipHandle = createToolTip (toolTipText, handle, getFont ().handle);\r", "+\t\t\tbreak;\r", "+\t\tcase OS.Ph_EV_PTR_UNSTEADY:\r", "+\t\t\tdestroyToolTip (toolTipHandle);\r", "+\t\t\ttoolTipHandle = 0;\r", "+\t\t\tbreak;\t\t\r", "+\t}\r", "+\treturn OS.Pt_END;\r", "-int processMouseEnter (int info) {\r", "-\tif (info == 0) return OS.Pt_END;\r", "-\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "-\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "-\tif (cbinfo.event == 0) return OS.Pt_END;\r", "-\tPhEvent_t ev = new PhEvent_t ();\r", "-\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "-\tint rects = OS.PhGetRects (cbinfo.event);\r", "-\tPhRect_t rect = new PhRect_t ();\r", "-\tOS.memmove (rect, rects, PhRect_t.sizeof);\r", "-\tEvent event = new Event ();\r", "-\tevent.time = ev.timestamp;\r", "-\tevent.x = rect.ul_x;\r", "-\tevent.y = rect.ul_y;\r", "-\tint data = OS.PhGetData (cbinfo.event);\r", "-\tif (data == 0) return OS.Pt_END;\r", "-\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "-\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "-\tsetMouseState (event, pe, ev);\r", "-\tswitch (ev.subtype) {\r", "-\t\tcase OS.Ph_EV_PTR_ENTER:\r", "-\t\tcase OS.Ph_EV_PTR_ENTER_FROM_CHILD:\r", "-\t\t\tsendEvent (SWT.MouseEnter, event);\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_PTR_LEAVE:\r", "-\t\tcase OS.Ph_EV_PTR_LEAVE_TO_CHILD:\r", "-\t\t\tsendEvent (SWT.MouseExit, event);\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_PTR_STEADY:\r", "-\t\t\tpostEvent (SWT.MouseHover, event);\r", "-\t\t\tdestroyToolTip (toolTipHandle);\r", "-\t\t\ttoolTipHandle = createToolTip (toolTipText, handle, getFont ().handle);\r", "-\t\t\tbreak;\r", "-\t\tcase OS.Ph_EV_PTR_UNSTEADY:\r", "-\t\t\tdestroyToolTip (toolTipHandle);\r", "-\t\t\ttoolTipHandle = 0;\r", "-\t\t\tbreak;\t\t\r", "-\treturn OS.Pt_END;\r"]}], "num": 32716}