{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "310fc7e03fec9373a201224683c1b31a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bf89c32de3ccf7cb8178708ba01757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When items are added or removed", "-\t* from a list, it may request and be granted, a new", "-\t* preferred size.  This behavior is unwanted.  The fix", "-\t* is to create a parent for the list that will disallow", "-\t* geometry requests.", "-\t*/", "-    /* AW", "-\tint [] argList1 = {OS.XmNancestorSensitive, 1};", "-\tformHandle = OS.XmCreateForm (parentHandle, null, argList1, argList1.length / 2);", "-\tif (formHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint selectionPolicy = OS.XmBROWSE_SELECT, listSizePolicy = OS.XmCONSTANT;", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\tselectionPolicy = OS.XmEXTENDED_SELECT;", "-\t\tif ((style & SWT.SIMPLE) != 0) selectionPolicy = OS.XmMULTIPLE_SELECT;", "-\t}", "-\tif ((style & SWT.H_SCROLL) == 0) listSizePolicy = OS.XmVARIABLE;", "-\tint [] argList2 = {", "-\t\tOS.XmNlistSizePolicy, listSizePolicy,", "-\t\tOS.XmNselectionPolicy, selectionPolicy,", "-\t\tOS.XmNtopAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNbottomAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNleftAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNrightAttachment, OS.XmATTACH_FORM,", "-\t\tOS.XmNresizable, 0,", "-//\t\tOS.XmNmatchBehavior, OS.XmNONE,", "-\t};", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) == 0) {", "-\t\thandle = OS.XmCreateList (formHandle, null, argList2, argList2.length / 2);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t} else {", "-\t\thandle = OS.XmCreateScrolledList (formHandle, null, argList2, argList2.length / 2);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tscrolledHandle = OS.XtParent (handle);", "-\t}", "-    */", "-\t//OS.SetDataBrowserSelectionFlags(handle, OS.kDataBrowserSelectOnlyOne + OS.kDataBrowserDragSelect);", "-\tOS.SetDataBrowserHasScrollBars(handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "+\t/* Single or Multiple Selection */", "+\tint mode= OS.kDataBrowserSelectOnlyOne;", "+\tif ((style & SWT.MULTI) != 0)", "+\t\tmode= OS.kDataBrowserDragSelect | OS.kDataBrowserCmdTogglesSelection;", "+\tOS.SetDataBrowserSelectionFlags(handle, mode);", "+\t", "+\t/* hide the neader */", "+\t", "+\t/* enable scrollbars */", "+\tOS.SetDataBrowserHasScrollBars(handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "+\tif ((style & SWT.H_SCROLL) == 0)", "+\t\tOS.AutoSizeDataBrowserListViewColumns(handle);", "-\tint columnDesc= OS.newColumnDesc(COL_ID, OS.kDataBrowserTextType, OS.kDataBrowserListViewSelectionColumn, (short)30, (short)200);", "+\tint columnDesc= OS.newColumnDesc(COL_ID, OS.kDataBrowserTextType,", "+\t\t\t\t\tOS.kDataBrowserListViewSelectionColumn | OS.kDataBrowserDefaultPropertyFlags,", "+\t\t\t\t\t(short)0, (short)2000);", "-\t//OS.SetDataBrowserActiveItems(handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ba4c69d52b34739eb4343f33d67777", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-", "-\t/*", "-\t* Feature in Motif.  When items are added or removed", "-\t* from a combo, it may request and be granted, a new", "-\t* preferred size.  This behavior is unwanted.  The fix", "-\t* is to create a parent for the list that will disallow", "-\t* geometry requests.", "-\t*/", "-\tint parentHandle = parent.handle;", "-    /* AW", "-\tint [] argList1 = {OS.XmNancestorSensitive, 1};", "-\tformHandle = OS.XmCreateForm (parentHandle, null, argList1, argList1.length / 2);", "-\tif (formHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint comboBoxType = OS.XmDROP_DOWN_COMBO_BOX;", "-\tif ((style & SWT.SIMPLE) != 0) {", "-\t\tcomboBoxType = OS.XmCOMBO_BOX;", "-\t} else if ((style & SWT.READ_ONLY) != 0) {", "-\t\tcomboBoxType = OS.XmDROP_DOWN_LIST;", "-\t}", "-    */", "-", "-\thandle= MacUtil.createDrawingArea(parentHandle, 0, 0, 0);\t\t", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-", "-\tfPopupButton= MacUtil.newControl(handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "-\tif (fPopupButton == 0) error (SWT.ERROR_NO_HANDLES);", "-\t", "-\tint[] menuRef= new int[1];", "-\tOS.CreateNewMenu(20000, 0, menuRef);", "-\tfMenuHandle= menuRef[0];", "-\tif (fMenuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.SetControlPopupMenuHandle(fPopupButton, fMenuHandle);", "-", "-\tif ((style & SWT.READ_ONLY) == 0) {", "-\t\tint frameOptions= OS.kTXNDontDrawCaretWhenInactiveMask;", "-\t\tframeOptions |= OS.kTXNSingleLineOnlyMask;", "-\t\t", "-\t\tint wHandle= OS.GetControlOwner(handle);", "-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetControlBounds(handle, bounds.getData());", "-\t\tint frameType= OS.kTXNTextEditStyleFrameType;", "-\t\tint iFileType= OS.kTXNUnicodeTextFile;", "-\t\tint iPermanentEncoding= OS.kTXNSystemDefaultEncoding;", "-\t\tint[] tnxObject= new int[1];", "-\t\tint[] frameID= new int[1];", "-\t\t\t\t", "-\t\tint status= OS.TXNNewObject(0, wHandle, bounds.getData(), frameOptions, frameType, iFileType, iPermanentEncoding,", "-\t\t\t\t\t\t\ttnxObject, frameID, 0);", "-\t\tif (status == 0) {\t\t ", "-\t\t\tfTX= tnxObject[0];", "-\t\t\tfFrameID= frameID[0];", "-\t\t\tOS.TXNActivate(fTX, fFrameID, OS.kScrollBarsSyncWithFocus);", "-\t\t}", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\thandle= MacUtil.newControl(parent.handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tint[] menuRef= new int[1];", "+\t\tOS.CreateNewMenu(20000, 0, menuRef);", "+\t\tfMenuHandle= menuRef[0];", "+\t\tif (fMenuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.SetControlPopupMenuHandle(handle, fMenuHandle);", "+\t} else {", "+\t    int[] outComboBox= new int[1];", "+\t\tOS.HIComboBoxCreate(outComboBox, OS.kHIComboBoxAutoSizeListAttribute);", "+\t\thandle= outComboBox[0];", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tMacUtil.addControl(handle, parent.handle);", "+\t\tOS.HIViewSetVisible(handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4bc9bd3d6839ed0475bd22fba5f0c02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " void createScrolledHandle (int topHandle)", "signatureAfterChange": "  void createScrolledHandle (int parentHandle)", "diff": ["-}", "-void createScrolledHandle (int topHandle) {", "-", "-    /* AW", "-\tint [] argList = {OS.XmNancestorSensitive, 1};", "-\tscrolledHandle = OS.XmCreateMainWindow (topHandle, null, argList, argList.length / 2);", "-    */", "-    scrolledHandle= createScrollView(topHandle, style);", "-\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) != 0) {", "-        /* AW", "-\t\tint thickness = display.buttonShadowThickness;", "-\t\tint [] argList1 = {", "-\t\t\tOS.XmNmarginWidth, 3,", "-\t\t\tOS.XmNmarginHeight, 3,", "-\t\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,", "-\t\t\tOS.XmNshadowType, OS.XmSHADOW_IN,", "-\t\t\tOS.XmNshadowThickness, thickness,", "-\t\t};", "-\t\tformHandle = OS.XmCreateForm (scrolledHandle, null, argList1, argList1.length / 2);", "-\t\tif (formHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tint [] argList2 = {", "-\t\t\tOS.XmNmarginWidth, 0,", "-\t\t\tOS.XmNmarginHeight, 0,", "-\t\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,", "-\t\t\tOS.XmNtopAttachment, OS.XmATTACH_FORM,", "-\t\t\tOS.XmNbottomAttachment, OS.XmATTACH_FORM,", "-\t\t\tOS.XmNleftAttachment, OS.XmATTACH_FORM,", "-\t\t\tOS.XmNrightAttachment, OS.XmATTACH_FORM,", "-\t\t\tOS.XmNresizable, 0,", "-\t\t\tOS.XmNtraversalOn, (style & SWT.NO_FOCUS) != 0 ? 0 : 1,", "-\t\t};", "-\t\thandle = OS.XmCreateDrawingArea (formHandle, null, argList2, argList2.length / 2);", "-        */", "-        handle= MacUtil.createDrawingArea (scrolledHandle, -1, true, 0, 0, 0);", "-        /* AW", "-\t\tint [] argList3 = {", "-\t\t\tOS.XmNmarginWidth, 0,", "-\t\t\tOS.XmNmarginHeight, 0,", "-\t\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,", "-\t\t\tOS.XmNtraversalOn, (style & SWT.NO_FOCUS) != 0 ? 0 : 1,", "-\t\t};", "-\t\thandle = OS.XmCreateDrawingArea (scrolledHandle, null, argList3, argList3.length / 2);", "-        */", "-        handle = MacUtil.createDrawingArea (scrolledHandle, -1, true, 0, 0, 0);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-    /* AW", "-\tOS.XtOverrideTranslations (handle, display.tabTranslations);", "-\tOS.XtOverrideTranslations (handle, display.arrowTranslations);", "-    */", "+", "+void createScrolledHandle (int parentHandle) {", "+\tint features = OS.kControlSupportsEmbedding;", "+\tint [] outControl = new int [1];", "+\tint window = OS.GetControlOwner (parentHandle);", "+\tOS.CreateUserPaneControl (window, null, features, outControl);", "+\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\tscrolledHandle = outControl [0];", "+\toutControl [0] = 0;", "+\tfeatures |= OS.kControlSupportsFocus | OS.kControlGetsFocusOnClick;", "+\tOS.CreateUserPaneControl (window, null, features, outControl);", "+\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = outControl [0];"]}], "num": 16900}