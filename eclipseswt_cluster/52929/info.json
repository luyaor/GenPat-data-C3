{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0075e1a29aaf316a7c36fafeb12b6594", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f5305777f25ebe5be71fcc1f8bd1b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["- */", "+", "-    if (this.visible != visible) {", "-\t    this.visible= visible;", "-\t\tint topHandle = topHandle ();", "-\t\tif (OS.IsControlVisible(topHandle) != visible) {", "-\t\t\tOS.HIViewSetVisible(topHandle, visible);", "-\t\t\tsendEvent (visible ? SWT.Show : SWT.Hide);", "-\t\t}", "-    }", "+\tif (visible) {", "+\t\tif ((state & HIDDEN) == 0) return;", "+\t\tstate &= ~HIDDEN;", "+\t} else {", "+\t\tif ((state & HIDDEN) != 0) return;", "+\t\tstate |= HIDDEN;", "+\t}", "+\tif (visible) {", "+\t\t/*", "+\t\t* It is possible (but unlikely), that application", "+\t\t* code could have disposed the widget in the show", "+\t\t* event.  If this happens, just return.", "+\t\t*/", "+\t\tsendEvent (SWT.Show);", "+\t\tif (isDisposed ()) return;", "+\t}", "+\t", "+\t/*", "+\t* Feature in the Macintosh.  If the receiver has focus, hiding", "+\t* the receiver causes no control to have focus.  Also, the focus", "+\t* needs to be cleared from any TXNObject so that it stops blinking", "+\t* the caret.  The fix is to assign focus to the first ancestor", "+\t* control that takes focus.  If no control will take focus, clear", "+\t* the focus control.", "+\t*/", "+\tboolean fixFocus = false;", "+\tif (!visible) fixFocus = isFocusAncestor ();", "+\tOS.HIViewSetVisible (topHandle (), visible);", "+\tif (!visible) {", "+\t\t/*", "+\t\t* It is possible (but unlikely), that application", "+\t\t* code could have disposed the widget in the show", "+\t\t* event.  If this happens, just return.", "+\t\t*/", "+\t\tsendEvent (SWT.Hide);", "+\t\tif (isDisposed ()) return;", "+\t}", "+\tif (fixFocus) fixFocus ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5340cae56ed41e1a58305556a9518a9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6f349c6ed1746550029bfbdeb220dfb88e980a72", "commitAfterChange": "c39c3e64f43d91fee0d586305de520da9ab1bea8", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 260, "signatureBeforeChange": "  LRESULT WM_MENUSELECT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_MENUSELECT (int wParam, int lParam)", "diff": ["-\t\t\t}", "-\t\t\tMenu oldMenu = shell.activeMenu;", "-\t\t\tif (oldMenu != null) {", "-\t\t\t\tMenu ancestor = oldMenu;", "-\t\t\t\twhile (ancestor != null && ancestor != newMenu) {", "-\t\t\t\t\tancestor = ancestor.getParentMenu ();", "-\t\t\t\t}", "-\t\t\t\tif (ancestor == newMenu) {", "-\t\t\t\t\tancestor = oldMenu;", "-\t\t\t\t\twhile (ancestor != newMenu) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t\t\t* code could have disposed the widget in the hide", "-\t\t\t\t\t\t* event or the item about to be armed.  If this", "-\t\t\t\t\t\t* happens, stop searching up the ancestor list", "-\t\t\t\t\t\t* because there is no longer a link to follow.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\tancestor.sendEvent (SWT.Hide);", "-\t\t\t\t\t\tif (ancestor.isDisposed ()) break;", "-\t\t\t\t\t\tancestor = ancestor.getParentMenu ();", "-\t\t\t\t\t\tif (ancestor == null) break;", "-\t\t\t\t\t}", "-\t\t\t\t\t/*", "-\t\t\t\t\t* The shell and/or the item could be disposed when", "-\t\t\t\t\t* processing hide events from above.  If this happens,", "-\t\t\t\t\t* ensure that the shell is not accessed and that no", "-\t\t\t\t\t* arm event is sent to the item.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\t\t\tif (newMenu != null && newMenu.isDisposed ()) {", "-\t\t\t\t\t\t\tnewMenu = null;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tshell.activeMenu = newMenu;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (item != null && item.isDisposed ()) item = null;", "-\t\t\t\t}"]}], "num": 52929}