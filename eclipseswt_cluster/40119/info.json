{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a066050549d072d44880c2899a09058f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fb18aec61327e53881f9a8823309e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "68ae3d639309450a37c4680ca715e80dae580df0", "commitAfterChange": "1c829e2b02e3c5c545a9adcc1f1772320bdb342d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tNSTextView widget = (NSTextView) view;", "-\t\tNSSize oldSize = null;", "-\t\tNSTextContainer textContainer = widget.textContainer ();", "+\t\tNSLayoutManager layoutManager = (NSLayoutManager)new NSLayoutManager ().alloc ().init ();", "+\t\tNSTextContainer textContainer = (NSTextContainer)new NSTextContainer ().alloc ();", "+\t\tNSSize size = new NSSize ();", "+\t\tsize.width = size.height = Float.MAX_VALUE;", "-\t\t\twidget.setHorizontallyResizable (true);", "-\t\t\ttextContainer.setWidthTracksTextView (false);", "-\t\t\toldSize = textContainer.containerSize ();", "-\t\t\tNSSize csize = new NSSize ();", "-\t\t\tcsize.width = wHint != SWT.DEFAULT ? wHint : Float.MAX_VALUE;", "-\t\t\tcsize.height = hHint != SWT.DEFAULT ? hHint : Float.MAX_VALUE;", "-\t\t\ttextContainer.setContainerSize (csize);", "+\t\t\tif (wHint != SWT.DEFAULT) size.width = wHint;", "+\t\t\tif (hHint != SWT.DEFAULT) size.height = hHint;", "-\t\tNSRect oldRect = widget.frame ();", "-\t\twidget.sizeToFit ();", "-\t\tNSRect newRect = widget.frame ();", "-\t\twidget.setFrame (oldRect);", "-\t\tif ((style & SWT.WRAP) != 0) {", "-\t\t\twidget.setHorizontallyResizable (false);", "-\t\t\ttextContainer.setWidthTracksTextView (true);", "-\t\t\ttextContainer.setContainerSize (oldSize);", "-\t\t}", "-\t\twidth = (int)(newRect.width + 1);", "-\t\theight = (int)(newRect.height + 1);", "+\t\ttextContainer.initWithContainerSize (size);", "+\t\tlayoutManager.addTextContainer (textContainer);", "+", "+\t\tNSTextStorage textStorage = (NSTextStorage)new NSTextStorage ().alloc ();", "+\t\tNSString string = ((NSTextView)view).textStorage ().string ();", "+\t\ttextStorage.initWithString (string);", "+\t\tNSRange range = new NSRange ();", "+\t\trange.length = string.length ();", "+\t\ttextStorage.addAttribute (OS.NSFontAttributeName, getFont ().handle, range);", "+\t\tlayoutManager.setTextStorage (textStorage);", "+\t\tlayoutManager.glyphRangeForTextContainer (textContainer);", "+", "+\t\tNSRect rect = layoutManager.usedRectForTextContainer (textContainer);", "+\t\twidth = layoutManager.numberOfGlyphs () == 0 ? DEFAULT_WIDTH : (int)Math.ceil (rect.width);", "+\t\theight = (int)Math.ceil (rect.height);", "+\t\ttextStorage.release ();", "+\t\ttextContainer.release ();", "+\t\tlayoutManager.release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b91384625c1f095c41e83842548f753", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 74, "signatureBeforeChange": " boolean isColumnResize(Event event)", "signatureAfterChange": " void onResize (Event event)", "diff": ["- */", "-boolean isColumnResize(Event event) {", "-\tTableColumn hotColumn = getColumnAtX(event.x);", "-\tif (hotColumn == null) return false;", "-\tRectangle bounds = hotColumn.getBounds();", "-\tint hotColumnIndex = hotColumn.getIndex();", "-\tint columnX = event.x - bounds.x;", "-\tboolean isColumnResize = false;", "-", "-\tif (columnX <= COLUMN_RESIZE_OFFSET && \t\t\t\t\t\t\t\t\t// mouse over left side of column? and", "-\t\thotColumnIndex != TableColumn.FIRST) {\t\t\t\t\t\t\t\t// it's not the first column)", "-\t\tif (hotColumnIndex == TableColumn.FILL) {", "-\t\t\thotColumn = (TableColumn) internalGetColumnVector().lastElement();", "-\t\t}", "-\t\telse {", "-\t\t\thotColumn = internalGetColumn(hotColumnIndex - 1);", "-\t\t}", "-\t\tisColumnResize = hotColumn.getResizable();\t\t\t\t\t\t\t// check whether left column can be resized", "-\t}", "-\telse", "-\tif (columnX >= bounds.width - COLUMN_RESIZE_OFFSET && \t\t\t\t\t// mouse over right side of column and", "-\t\thotColumn != getFillColumn()) {\t\t\t\t\t\t\t\t\t\t// column is a real one (not the right hand fill column)?", "-\t\tisColumnResize = hotColumn.getResizable();\t\t\t\t\t\t\t// check whether column under cursor can be resized", "-\t}", "-\treturn isColumnResize;", "-}", "+void onResize (Event event) {", "+\tRectangle clientArea = getClientArea ();", "+\t/* vertical scrollbar */", "+\tScrollBar vBar = getVerticalBar ();", "+\tint clientHeight = (clientArea.height - getHeaderHeight ()) / itemHeight;", "+\tint thumb = Math.min (clientHeight, items.length);", "+\tvBar.setThumb (thumb);", "+\tvBar.setPageIncrement (thumb);", "+\tint index = vBar.getSelection ();", "+\tif (index != topIndex) {", "+\t\ttopIndex = index;", "+\tboolean visible = clientHeight < items.length;", "+\tif (visible != vBar.getVisible ()) {", "+\t\tvBar.setVisible (visible);", "+\t\tclientArea = getClientArea ();", "+\t/* horizontal scrollbar */ ", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint hBarMaximum = hBar.getMaximum ();", "+\tthumb = Math.min (clientArea.width, hBarMaximum);", "+\thBar.setThumb (thumb);", "+\thBar.setPageIncrement (thumb);", "+\thorizontalOffset = hBar.getSelection ();", "+\tvisible = clientArea.width < hBarMaximum;", "+\tif (visible != hBar.getVisible ()) {", "+\t\thBar.setVisible (visible);", "+\t\tclientArea = getClientArea ();", "+\t/* header */", "+\tint headerHeight = Math.max (fontHeight, headerImageHeight) + 2 * getHeaderPadding ();", "+\theader.setSize (clientArea.width, headerHeight);"]}], "num": 40119}