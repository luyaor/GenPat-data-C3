{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "347955f2adb91f10d87fa949863f4248", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b5f0c1b4287772701c215b551bae96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["+\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\tCairo.cairo_save(cairo);", "+\t\t\tint[] width = new int[1], height = new int[1];", "+\t\t\tOS.pango_layout_get_size(data.layout, width, height);", "+\t\t\tCairo.cairo_scale(cairo, -1f,  1);", "+\t\t\tCairo.cairo_translate(cairo, -2 * x - OS.PANGO_PIXELS(width[0]), 0);", "+\t\t}", "+\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\tCairo.cairo_restore(cairo);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "940a3b9e3c26c4118eeddf077f8af08e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "074c9fdb53d66f4e9c2ec66add9bd04bd17ac5a2", "commitAfterChange": "ba44735a6bf0ad2cbdf916386c89e6286d4d5765", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["+\t\t\t\t\t\t\t\tif (rect.left > rect.right) {", "+\t\t\t\t\t\t\t\t\tint tmp = rect.left;", "+\t\t\t\t\t\t\t\t\trect.left = rect.right;", "+\t\t\t\t\t\t\t\t\trect.right = tmp;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\t\t\t\tgstate2 = Gdip.Graphics_Save(gdipGraphics);", "+\t\t\t\t\t\t\t\tGdip.Graphics_ScaleTransform(gdipGraphics, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\t\t\t\tGdip.Graphics_Restore(gdipGraphics, gstate2);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "021ee241eca23dab1bc033e3029102ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f7e5b6517c8145c41edb4cee11eaf48a485d125a", "commitAfterChange": "9cbd0cd7c02cc05e4296cf317d9160ca8585a1f1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["+\t\tint gstate = 0;", "+\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\tgstate = Gdip.Graphics_Save(data.gdipGraphics);", "+\t\t\tGdip.Graphics_ScaleTransform(data.gdipGraphics, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\tGdip.Graphics_TranslateTransform(data.gdipGraphics, - 2 * destX - destWidth, 0, Gdip.MatrixOrderPrepend);\t\t \t\t \t\t ", "+\t\t}", "+\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\tGdip.Graphics_Restore(data.gdipGraphics, gstate);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f09ada020560e030068308b19ebcd8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "46f8989ac64e00fcc6a9b24cf039634ec9a8e532", "commitAfterChange": "e5aa610c573a0602e56c33acd593d6f079b8fee6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void fillArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void fillArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\tif (data.gdipGraphics != 0) {", "+\tint gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "-\t\tGdip.Graphics_FillPie(data.gdipGraphics, data.gdipBrush, x, y, width, height, -startAngle, -arcAngle);", "+\t\tif (width == height) {", "+\t\t\tGdip.Graphics_FillPie(gdipGraphics, data.gdipBrush, x, y, width, height, -startAngle, -arcAngle);", "+\t\t} else {", "+\t\t\tint state = Gdip.Graphics_Save(gdipGraphics);", "+\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, x, y, Gdip.MatrixOrderPrepend);", "+\t\t\tGdip.Graphics_ScaleTransform(gdipGraphics, width, height, Gdip.MatrixOrderPrepend);", "+\t\t\tGdip.Graphics_FillPie(gdipGraphics, data.gdipBrush, 0, 0, 1, 1, -startAngle, -arcAngle);", "+\t\t\tGdip.Graphics_Restore(gdipGraphics, state);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea72480f7079abe8f1dce5226eeab4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "f7e5b6517c8145c41edb4cee11eaf48a485d125a", "commitAfterChange": "9cbd0cd7c02cc05e4296cf317d9160ca8585a1f1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\tint foregroundBrush = 0;", "-\tif (gdip) {", "-\t\tgc.checkGC(GC.FOREGROUND);", "-\t\tforegroundBrush = gc.getFgBrush();", "-\t}", "-\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);", "-\t\tint rgn = Gdip.Region_new();", "-\t\tGdip.Graphics_GetClip(gdipGraphics, rgn);", "-\t\tif (!Gdip.Region_IsInfinite(rgn, gdipGraphics)) {", "-\t\t\tclipRgn = Gdip.Region_GetHRGN(rgn, gdipGraphics);", "-\t\t}", "-\t\tGdip.Region_delete(rgn);", "-\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);", "+\t\tint identity = gc.identity();", "+\t\tGdip.Matrix_Invert(identity);", "+\t\tGdip.Matrix_Multiply(matrix, identity, Gdip.MatrixOrderAppend);", "+\t\tGdip.Matrix_delete(identity);", "-\t\thdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t\tif ((data.style & SWT.MIRRORED) != 0 && lpXform != null) {", "+\t\t\tgdip = true;", "+\t\t\tlpXform = null;", "+\t\t} else {", "+\t\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);", "+\t\t\tint rgn = Gdip.Region_new();", "+\t\t\tGdip.Graphics_GetClip(gdipGraphics, rgn);", "+\t\t\tif (!Gdip.Region_IsInfinite(rgn, gdipGraphics)) {", "+\t\t\t\tclipRgn = Gdip.Region_GetHRGN(rgn, gdipGraphics);", "+\t\t\t}", "+\t\t\tGdip.Region_delete(rgn);", "+\t\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);", "+\t\t\thdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t\t}", "+\t}", "+\tint foregroundBrush = 0;", "+\tif (gdip) {", "+\t\tgc.checkGC(GC.FOREGROUND);", "+\t\tforegroundBrush = gc.getFgBrush();", "+\tif (!gdip && (data.style & SWT.MIRRORED) != 0) {", "+\t\tOS.SetLayout(hdc, OS.GetLayout(hdc) |OS.LAYOUT_RTL);", "+\t}", "+\t\t\t\t\t\tint gstate2 = 0;", "+\t\t\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\t\t\tgstate2 = Gdip.Graphics_Save(gdipGraphics);", "+\t\t\t\t\t\t\tGdip.Graphics_ScaleTransform(gdipGraphics, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\t\t\tGdip.Graphics_Restore(gdipGraphics, gstate2);", "+\t\t\t\t\t\t}"]}], "num": 1125}