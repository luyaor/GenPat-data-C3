{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2bc3b32615facfcb98589256c1ebb87", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7defea8ce6106f34f87d82e96acc1da7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9897614cc57b96bb97451125093fad1bcc2e945a", "commitAfterChange": "856f6a008a0ed77a41d39123c5600a8b16c79156", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["+\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tint width = 0, height = 0;", "-\tif (data.control != 0) {", "-\t\tbounds = new Rect();", "-\t\tOS.GetControlBounds(data.control, bounds);", "-\t\twidth = bounds.right - bounds.left;", "-\t\theight = bounds.bottom - bounds.top;", "-\t} else {", "-\t\tif (data.image != null) {", "-\t\t\tint image = data.image.handle;", "-\t\t\twidth = OS.CGImageGetWidth(image);", "-\t\t\theight = OS.CGImageGetHeight(image);", "-\t\t}", "-\t}", "-\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "-\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "-\tif (data.visibleRgn != 0) {", "-\t\t// Note that bounds has the control bounds", "+\tif (data.clipRgn == 0) {", "+\t\tint width = 0, height = 0;", "+\t\tif (data.control != 0) {", "+\t\t\tif (bounds == null) bounds = new Rect();", "+\t\t\tOS.GetControlBounds(data.control, bounds);", "+\t\t\twidth = bounds.right - bounds.left;", "+\t\t\theight = bounds.bottom - bounds.top;", "+\t\t} else {", "+\t\t\tif (data.image != null) {", "+\t\t\t\tint image = data.image.handle;", "+\t\t\t\twidth = OS.CGImageGetWidth(image);", "+\t\t\t\theight = OS.CGImageGetHeight(image);", "+\t\t\t}", "+\t\t}", "+\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "+\t} else {", "+\t\tOS.CopyRgn(data.clipRgn, clipping);", "+\t}", "+\tif (data.paintEvent != 0 && data.visibleRgn != 0) {", "+\t\tif (bounds == null) bounds = new Rect();", "+\t\tOS.GetControlBounds(data.control, bounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d66cc729cd8e39820694b8c9a8af844", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "1ed6e017318ca3de09b2840c45fb2e4dc1dfd857", "commitAfterChange": "b275691532da102f2915bcf30497b07b907d6359", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void getTransform(Transform transform)", "signatureAfterChange": " public void getTransform(Transform transform)", "diff": ["-\tfloat[] xform = new float[6];", "-\tOS.GetWorldTransform(handle, xform);", "-\ttransform.setElements(xform[0], xform[1], xform[2], xform[3], xform[4], xform[5]);", "+\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tint gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\tGdip.Graphics_GetTransform(gdipGraphics, transform.handle);", "+\t} else {", "+\t\tfloat[] xform = new float[6];", "+\t\tif (OS.GetWorldTransform(handle, xform)) {", "+\t\t\ttransform.setElements(xform[0], xform[1], xform[2], xform[3], xform[4], xform[5]);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93230743fabdbcb2d03e9a5a69ffa7d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a2fc89617ae75619504de8e554dac0afe36ee9ea", "commitAfterChange": "22bf858acf3b0c5dae2bcf5b62d2abebb52a5a3f", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " void removeColumn(TreeColumn column)", "signatureAfterChange": " void removeColumn(TreeColumn column)", "diff": ["-\tTreeColumn lastColumn = columns[columns.length - 1];", "-\tgetHorizontalBar().setMaximum(lastColumn.getX() + lastColumn.width);", "+\t/* ensure that column 0 always has left-alignment */", "+\tif (index == 0 && columns.length > 0) {", "+\t\tcolumns [0].style |= SWT.LEFT;", "+\t\tcolumns [0].style &= ~(SWT.CENTER | SWT.RIGHT);", "+\t}", "+\t", "+\tint lastColumnIndex = columns.length - 1;", "+\tif (lastColumnIndex < 0) {\t/* no more columns */", "+\t\tupdateHorizontalBar ();", "+\t} else {", "+\t\tTreeColumn lastColumn = columns[lastColumnIndex];", "+\t\tgetHorizontalBar().setMaximum(lastColumn.getX() + lastColumn.width);", "+\t}"]}], "num": 8889}