{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ee534b3f97fe42101fd05251b8ccdee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8508648c129984c34dba60736e676148", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "ab3a0e2212badb4230b4950583046c2765ca9b1b", "commitAfterChange": "7a333f8cd621c7ce81ccebdf86504138fdd1f158", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r void destroyItem (TabItem item)", "signatureAfterChange": "\r \r void destroyItem (TabItem item)", "diff": ["+\tint oldIndex = OS.gtk_notebook_get_current_page (handle);\r", "+\tOS.gtk_signal_handler_block_by_data (handle, SWT.Selection);\r", "+\tOS.gtk_signal_handler_unblock_by_data (handle, SWT.Selection);\r", "+\tif (index == oldIndex) {\r", "+\t\tfixPage ();\r", "+\t\tint newIndex = OS.gtk_notebook_get_current_page (handle);\r", "+\t\tif (newIndex != -1) {\r", "+\t\t\tControl control = items [newIndex].getControl ();\r", "+\t\t\tif (control != null && !control.isDisposed ()) {\r", "+\t\t\t\tcontrol.setBounds (getClientArea());\r", "+\t\t\t\tcontrol.setVisible (true);\r", "+\t\t\t}\r", "+\t\t\tEvent event = new Event ();\r", "+\t\t\tevent.item = items [newIndex];\r", "+\t\t\tsendEvent (SWT.Selection, event);\t\r", "+\t\t\t// the widget could be destroyed at this point\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4504fd22bd5d659c55457a96fcf9fcf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "91b5711660ae70726404d0e8ee0d181a6a391652", "commitAfterChange": "030b9a0697828459778791517f2c0b080cc21fa6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": "  boolean makeFirstResponder (int id, int sel, int notification)", "signatureAfterChange": "  boolean makeFirstResponder (int id, int sel, int responder)", "diff": ["-boolean makeFirstResponder (int /*long*/ id, int /*long*/ sel, int /*long*/ notification) {", "-\tif (display.focusControl == null) display.focusControl = display.getFocusControl ();", "-\tboolean result = super.makeFirstResponder(id, sel, notification);", "-\tif (result) {", "-\t\tControl newFocus = display.getFocusControl ();", "-\t\tif (newFocus != null && newFocus != display.focusControl) {", "-\t\t\tControl oldFocus = display.focusControl;", "-\t\t\tdisplay.focusControl = newFocus;", "-\t\t\tif (oldFocus != null && !oldFocus.isDisposed ()) oldFocus.sendFocusEvent (SWT.FocusOut, false);", "-\t\t\tif (newFocus != null && !newFocus.isDisposed ()) newFocus.sendFocusEvent (SWT.FocusIn, false);", "-\t\t}", "-\t}", "+boolean makeFirstResponder (int /*long*/ id, int /*long*/ sel, int /*long*/ responder) {", "+\tDisplay display = this.display;", "+\tboolean result = super.makeFirstResponder(id, sel, responder);", "+\tdisplay.checkFocus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5532af1a02a6807c3cbef5241309b057", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9626630f4e5971d7a1e3160c27bbd8c991bca093", "commitAfterChange": "ec8960d36877aff58d08e83377fabc6a66250574", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  int gtk_focus_in_event (int widget, int event)", "signatureAfterChange": "  int gtk_focus_in_event (int widget, int event)", "diff": ["+\tShell shell = _getShell ();", "-\tif (handle == 0) return 0;", "-\tControl oldControl = display.imControl;", "-\tif (oldControl != this)  {", "-\t\tif (oldControl != null && !oldControl.isDisposed ()) {", "-\t\t\tint oldIMHandle = oldControl.imHandle ();", "-\t\t\tif (oldIMHandle != 0) OS.gtk_im_context_reset (oldIMHandle);", "+\tif (handle != 0) {", "+\t\tControl oldControl = display.imControl;", "+\t\tif (oldControl != this)  {", "+\t\t\tif (oldControl != null && !oldControl.isDisposed ()) {", "+\t\t\t\tint oldIMHandle = oldControl.imHandle ();", "+\t\t\t\tif (oldIMHandle != 0) OS.gtk_im_context_reset (oldIMHandle);", "+\t\t\t}", "-\t}", "-\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {", "-\t\tint imHandle = imHandle ();", "-\t\tif (imHandle != 0) OS.gtk_im_context_focus_in (imHandle);", "+\t\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {", "+\t\t\tint imHandle = imHandle ();", "+\t\t\tif (imHandle != 0) OS.gtk_im_context_focus_in (imHandle);", "+\t\t}", "-\t*/\t", "-\tShell shell = _getShell ();", "+\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87c74ead20e33127f9b85ab69b44c83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TrayIcon.java", "commitBeforeChange": "ffdbe24dcc336496de6439b80150541a12e54b6f", "commitAfterChange": "278d5a1aeb64bc2ed373a7a17dd553423d4a9bf2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+", "+int messageProc (int hwnd, int msg, int wParam, int lParam) {", "+\tswitch (lParam) {", "+\t\tcase OS.WM_LBUTTONDOWN:", "+\t\t\tpostEvent (SWT.Selection);", "+\t\t\tbreak;", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\tbreak;", "+\t\tcase OS.WM_RBUTTONDOWN: {", "+\t\t\tPOINT pos = new POINT ();", "+\t\t\tOS.GetCursorPos (pos);", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.x = pos.x;", "+\t\t\tevent.y = pos.y;", "+\t\t\tsendEvent (SWT.MenuDetect, event);", "+\t\t\tif (event.doit) {", "+\t\t\t\tif (menu != null && !menu.isDisposed ()) {", "+\t\t\t\t\tif (pos.x != event.x || pos.y != event.y) {", "+\t\t\t\t\t\tmenu.setLocation (event.x, event.y);", "+\t\t\t\t\t}", "+\t\t\t\t\tmenu.setVisible (true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn 0;", "-\t", "-LRESULT WM_LBUTTONDOWN (int wParam, int lParam) {", "-\tEvent event = new Event ();", "-\tPOINT pos = new POINT ();", "-\tOS.GetCursorPos (pos);", "-\tevent.x = pos.x;", "-\tevent.y = pos.y;", "-\tsendEvent (SWT.Selection, event);", "-\treturn null;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "debf1efe7deac8d942636dc4d4eaceef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b736b4300b016cc6528af9f62c30fdfee607e20c", "commitAfterChange": "ca083c1ee82acb16a5435cb7041be6d577024f30", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "  void windowSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void windowSendEvent (int id, int sel, int event)", "diff": ["+\t\t\t", "+\t\t\t// Tooltip updating: Find the widget under the cursor. If it changed, clear the tooltip from", "+\t\t\t// the last tracked item and send a tooltip event to make it visible on the new widget. ", "-\t\t\tif (control != null) target = control.findTooltip (nsEvent.locationInWindow());", "+\t\t\tif (control != null) {", "+\t\t\t\tNSPoint eventPoint = nsEvent.locationInWindow();", "+\t\t\t\tif (hitView[0] != null) {", "+\t\t\t\t\tNSWindow eventWindow = nsEvent.window();", "+", "+\t\t\t\t\t// If a NSMouseMoved happens on an inactive window, convert the", "+\t\t\t\t\t// event coordinates to the window of the target view.", "+\t\t\t\t\tif (eventWindow != null && eventWindow != hitView[0].window()) {", "+\t\t\t\t\t\teventPoint = eventWindow.convertBaseToScreen(eventPoint);", "+\t\t\t\t\t\teventPoint = hitView[0].window().convertScreenToBase(eventPoint);", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t\t", "+\t\t\t\ttarget = control.findTooltip (eventPoint);", "+\t\t\t}", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f00cd3459f3d791f18dbb4937266c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "9a0be943cea7cba8243763477cfb7e527a3be869", "commitAfterChange": "817d020b7e5b06625624b398b21d44141fefd021", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void setSelection (int index, boolean notify)", "signatureAfterChange": "  void setSelection (int index, boolean notify)", "diff": ["-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setVisible (false);", "+\t\tif (item != null) {", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null && !control.isDisposed ()) {", "+\t\t\t\tcontrol.setVisible (false);", "+\t\t\t}", "-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setBounds (getClientArea ());", "-\t\t\tcontrol.setVisible (true);", "-\t\t}", "-\t\tif (notify) {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.item = item;", "-\t\t\tsendEvent (SWT.Selection, event);", "-\t\t}", "+\t\tif (item != null) {", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null && !control.isDisposed ()) {", "+\t\t\t\tcontrol.setBounds (getClientArea ());", "+\t\t\t\tcontrol.setVisible (true);", "+\t\t\t}", "+\t\t\tif (notify) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t}", "+\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d28489999b3685772898f6f57ff7f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 82, "signatureBeforeChange": "  void selectField(int index)", "signatureAfterChange": "  void selectField (int index)", "diff": ["-void selectField(int index) {", "+void selectField (int index) {", "-\t\tcommitCurrentField();", "+\t\tcommitCurrentField ();", "-\tPoint pt = text.getSelection();", "-\tif (index == currentField && start == pt.x && end == pt.y) return;", "+\tPoint pt = getSelection ();", "+\tif (index == currentField && start == pt.x && end == pt.y) {", "+\t\treturn;", "+\t}", "-\tdisplay.asyncExec(new Runnable() {", "-\t\tpublic void run() {", "-\t\t\tif (!text.isDisposed()) {", "-\t\t\t\tString value = text.getText(start, end - 1);", "-\t\t\t\tint s = value.lastIndexOf(' ');", "-\t\t\t\tif (s == -1) s = start;", "-\t\t\t\telse s = start + s + 1;", "-\t\t\t\ttext.setSelection(s, end);", "+\tdisplay.syncExec (new Runnable () {", "+\t\tpublic void run () {", "+\t\t\tif (textEntryHandle != 0) {", "+\t\t\t\tString value = getText (getText (),start, end - 1);", "+\t\t\t\tint s = value.lastIndexOf (' ');", "+\t\t\t\ts = (s == -1) ? start : start + s + 1;", "+\t\t\t\tsetSelection (s, end);", "-\t});\t", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba513d23d4fd8ed4f7bc5b1a1ffe7cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 61, "signatureBeforeChange": "  LRESULT WM_ACTIVATE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_ACTIVATE (int wParam, int lParam)", "diff": ["-\t\tsendEvent (SWT.Activate);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\tControl control = display.findControl (lParam);", "+\t\tif (control == null || control instanceof Shell) {", "+\t\t\tif (this instanceof Shell) {", "+\t\t\t\tsendEvent (SWT.Activate);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t}", "+\t\t}", "-\t\tif (traverseGroup (true)) return LRESULT.ZERO;", "-\t", "-\t\tShell shell = getShell ();", "-\t\tshell.setActiveControl (null);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "-\t\tsendEvent (SWT.Deactivate);", "-\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\tControl control = display.findControl (lParam);", "+\t\tif (control == null || control instanceof Shell) {", "+\t\t\tif (this instanceof Shell) {", "+\t\t\t\tShell shell = getShell ();", "+\t\t\t\tshell.setActiveControl (null);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t\tsendEvent (SWT.Deactivate);", "+\t\t\t\tif (isDisposed ()) return LRESULT.ZERO;", "+\t\t\t}", "+\t\t}"]}], "num": 30659}