{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96a5e439e4395038536fbe05d675032e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6e34fcd2be97caa0a401430af74c0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a3eda06a7a4c290420b73156206fa1800c9178ee", "commitAfterChange": "9837bb695405327b535c2924659cef1a3a71f994", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void didFinishLoadForFrame(int frame)", "signatureAfterChange": "  void didFinishLoadForFrame(int frame)", "diff": ["-\t\t/* re-install registered functions */", "-\t\tEnumeration elements = functions.elements ();", "-\t\twhile (elements.hasMoreElements ()) {", "-\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "-\t\t\texecute (function.functionString);", "+\t\t/*", "+\t\t * If html is not null then there is html from a previous setText() call", "+\t\t * waiting to be set into the about:blank page once it has completed loading. ", "+\t\t */", "+\t\tif (html != null) {", "+\t\t\tif (url.startsWith(ABOUT_BLANK)) {", "+\t\t\t\tloadingText = true;", "+\t\t\t\tint htmlString = createNSString(html);", "+\t\t\t\tint urlString;", "+\t\t\t\tif (untrustedText) {", "+\t\t\t\t\turlString = createNSString(ABOUT_BLANK);", "+\t\t\t\t} else {", "+\t\t\t\t\turlString = createNSString(URI_FILEROOT);", "+\t\t\t\t}", "+\t\t\t\tint url = Cocoa.objc_msgSend(Cocoa.C_NSURL, Cocoa.S_URLWithString, urlString); /* autoreleased */", "+\t\t\t\tint mainFrame = Cocoa.objc_msgSend(webView, Cocoa.S_mainFrame);", "+\t\t\t\tCocoa.objc_msgSend(mainFrame, Cocoa.S_loadHTMLStringBaseURL, htmlString, url);", "+\t\t\t\tOS.CFRelease(urlString);", "+\t\t\t\tOS.CFRelease(htmlString);", "+\t\t\t\thtml = null;", "+\t\t\t}", "-", "-\t\tProgressEvent progress = new ProgressEvent(browser);", "-\t\tprogress.display = display;", "-\t\tprogress.widget = browser;", "-\t\tprogress.current = MAX_PROGRESS;", "-\t\tprogress.total = MAX_PROGRESS;", "-\t\tfor (int i = 0; i < progressListeners.length; i++) {", "-\t\t\tprogressListeners[i].completed(progress);", "+\t\t/*", "+\t\t* The loadHTMLString() invocation above will trigger a second didFinishLoadForFrame", "+\t\t* callback when it is completed.  Wait for this second callback to come before sending", "+\t\t* the completed event.", "+\t\t*/", "+\t\tif (!loadingText) {", "+\t\t\tProgressEvent progress = new ProgressEvent(browser);", "+\t\t\tprogress.display = display;", "+\t\t\tprogress.widget = browser;", "+\t\t\tprogress.current = MAX_PROGRESS;", "+\t\t\tprogress.total = MAX_PROGRESS;", "+\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\tprogressListeners[i].completed(progress);", "+\t\t\t}", "+\t\tloadingText = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc08bc9c0494a8b6d0dd62acd0ef707", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a3eda06a7a4c290420b73156206fa1800c9178ee", "commitAfterChange": "9837bb695405327b535c2924659cef1a3a71f994", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "signatureAfterChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "diff": ["-\t\tProgressEvent progress = new ProgressEvent(browser);", "-\t\tprogress.display = display;", "-\t\tprogress.widget = browser;", "-\t\tprogress.current = MAX_PROGRESS;", "-\t\tprogress.total = MAX_PROGRESS;", "-\t\tfor (int i = 0; i < progressListeners.length; i++) {", "-\t\t\tprogressListeners[i].completed(progress);", "+", "+\t\t/*", "+\t\t * If html is not null then there is html from a previous setText() call", "+\t\t * waiting to be set into the about:blank page once it has completed loading. ", "+\t\t */", "+\t\tif (html != null) {", "+\t\t\tif (url.startsWith(ABOUT_BLANK)) {", "+\t\t\t\tloadingText = true;", "+\t\t\t\tNSString string = NSString.stringWith(html);", "+\t\t\t\tNSString URLString;", "+\t\t\t\tif (untrustedText) {", "+\t\t\t\t\tURLString = NSString.stringWith(ABOUT_BLANK);", "+\t\t\t\t} else {", "+\t\t\t\t\tURLString = NSString.stringWith(URI_FILEROOT);", "+\t\t\t\t}", "+\t\t\t\tNSURL URL = NSURL.URLWithString(URLString);", "+\t\t\t\tWebFrame mainFrame = webView.mainFrame();", "+\t\t\t\tmainFrame.loadHTMLString(string, URL);", "+\t\t\t\thtml = null;", "+\t\t\t}", "+\t\t/*", "+\t\t* The loadHTMLString() invocation above will trigger a second webView_didFinishLoadForFrame", "+\t\t* callback when it is completed.  Wait for this second callback to come before sending the", "+\t\t* completed event.", "+\t\t*/", "+\t\tif (!loadingText) {", "+\t\t\tProgressEvent progress = new ProgressEvent(browser);", "+\t\t\tprogress.display = display;", "+\t\t\tprogress.widget = browser;", "+\t\t\tprogress.current = MAX_PROGRESS;", "+\t\t\tprogress.total = MAX_PROGRESS;", "+\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\tprogressListeners[i].completed(progress);", "+\t\t\t}", "+\t\t}", "+\t\tloadingText = false;"]}], "num": 30196}