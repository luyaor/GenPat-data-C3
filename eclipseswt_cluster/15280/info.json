{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7687515b3a6ce5dac46d2369e8e40ac6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4442555fec702ff8d8ddba75246f1966", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "690c4a8c2a13525287177e0c1fa0a4966fed59bd", "commitAfterChange": "45c17a900337f4050992d636939c2338936e1499", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void drawString(String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString(String string, int x, int y, boolean isTransparent)", "diff": ["-\tif (data.layout == 0) createLayout ();", "-\tif (string != data.string) {", "-\t\tif (data.stringPtr != 0) OS.DisposePtr(data.stringPtr);", "-\t\tFont font = data.font;", "-\t\tint atsuiStyle = font.atsuiStyle != 0 ? font.atsuiStyle : data.atsuiStyle;", "-\t\tint ptr = OS.NewPtr(length * 2);", "-\t\tOS.memcpy(ptr, string, length * 2);", "-\t\tOS.ATSUSetTextPointerLocation(data.layout, ptr, 0, length, length);", "-\t\tOS.ATSUSetRunStyle(data.layout, atsuiStyle, 0, length);", "-\t\tdata.string = string;", "-\t\tdata.stringPtr = ptr;", "+\tif (Font.USE_ATSUI) {", "+\t\tif (data.layout == 0) createLayout ();", "+\t\tif (string != data.string) {", "+\t\t\tif (data.stringPtr != 0) OS.DisposePtr(data.stringPtr);", "+\t\t\tFont font = data.font;", "+\t\t\tint atsuiStyle = font.atsuiStyle != 0 ? font.atsuiStyle : data.atsuiStyle;", "+\t\t\tint ptr = OS.NewPtr(length * 2);", "+\t\t\tOS.memcpy(ptr, string, length * 2);", "+\t\t\tOS.ATSUSetTextPointerLocation(data.layout, ptr, 0, length, length);", "+\t\t\tOS.ATSUSetRunStyle(data.layout, atsuiStyle, 0, length);", "+\t\t\tdata.string = string;", "+\t\t\tdata.stringPtr = ptr;", "+\t\t}", "+\t\tOS.ATSUDrawText(data.layout, 0, length, OS.X2Fix(x), OS.X2Fix(-(y + data.fontAscent)));", "+\t} else {", "+\t\tOS.CGContextSetTextDrawingMode(handle, OS.kCGTextFill);", "+\t\tbyte[] buffer = string.getBytes();", "+\t\tOS.CGContextShowTextAtPoint(handle, x, -(y + data.fontAscent), buffer, buffer.length);", "-\tOS.ATSUDrawText(data.layout, 0, length, OS.X2Fix(x), OS.X2Fix(-(y + data.fontAscent)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e3f8da91455befe0ec48669982c933", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "7f1555a570e0630345de4a3befbd9ab7828e99f7", "commitAfterChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " Point drawImage(GC gc, Point destinationPosition, int index)", "signatureAfterChange": " Point drawImage(GC gc, Point destinationPosition, int index)", "diff": ["+\tint itemHeight = parent.getItemHeight();", "-\t\t// full row select would obscure transparent images in all but the first column", "-\t\t// so always clear the image area in this case. Fixes 1FYNITC", "-\t\tif ((parent.getStyle() & SWT.FULL_SELECTION) != 0 && index != TableColumn.FIRST) {", "+\t\tif (index == TableColumn.FIRST){", "+\t\t\tgc.setBackground(getBackground(index));", "-\t\t\t\tdestinationImageExtent.x, destinationImageExtent.y);", "+\t\t\t\tdestinationImageExtent.x, itemHeight);", "+\t\t} else {", "+\t\t\t// full row select would obscure transparent images in all but the first column", "+\t\t\t// so always clear the image area in this case. Fixes 1FYNITC", "+\t\t\tif ((parent.getStyle() & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tgc.fillRectangle(", "+\t\t\t\t\tdestinationPosition.x, destinationPosition.y,\t\t\t", "+\t\t\t\t\tdestinationImageExtent.x, destinationImageExtent.y);", "+\t\t\t}", "-\t\timageOffset = (parent.getItemHeight() - destinationImageExtent.y) / 2;", "+\t\timageOffset = (itemHeight - destinationImageExtent.y) / 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262356b32eeec397880bb98af6bccb1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "b342ee5d6aad586106f7626c54ef8e5fbeb06deb", "commitAfterChange": "31431427273f0c80a023438b9fb412e64b3d4226", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Cursor(Device device, int style)", "signatureAfterChange": " public Cursor(Device device, int style)", "diff": ["-\t\t\torg.eclipse.swt.internal.carbon.Cursor cursor = new org.eclipse.swt.internal.carbon.Cursor();", "-\t\t\tcursor.data = SIZENS_SOURCE;", "-\t\t\tcursor.mask = SIZENS_MASK;", "-\t\t\tcursor.hotSpot_h = 7;", "-\t\t\tcursor.hotSpot_v = 7;", "-\t\t\thandle = OS.NewPtr(org.eclipse.swt.internal.carbon.Cursor.sizeof);", "-\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.memcpy(handle, cursor, org.eclipse.swt.internal.carbon.Cursor.sizeof);\t", "+\t\t\tif (OS.VERSION >= 0x1030) {", "+\t\t\t\thandle = OS.kThemeResizeUpDownCursor; break;", "+\t\t\t} else {", "+\t\t\t\torg.eclipse.swt.internal.carbon.Cursor cursor = new org.eclipse.swt.internal.carbon.Cursor();", "+\t\t\t\tcursor.data = SIZENS_SOURCE;", "+\t\t\t\tcursor.mask = SIZENS_MASK;", "+\t\t\t\tcursor.hotSpot_h = 7;", "+\t\t\t\tcursor.hotSpot_v = 7;", "+\t\t\t\thandle = OS.NewPtr(org.eclipse.swt.internal.carbon.Cursor.sizeof);", "+\t\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\tOS.memcpy(handle, cursor, org.eclipse.swt.internal.carbon.Cursor.sizeof);", "+\t\t\t}", "-\t\tcase SWT.CURSOR_SIZEN: \t\thandle = OS.kThemeCrossCursor; break;", "-\t\tcase SWT.CURSOR_SIZES: \t\thandle = OS.kThemeCrossCursor; break;", "+\t\tcase SWT.CURSOR_SIZEN: \t\thandle = OS.VERSION >= 0x1030 ? OS.kThemeResizeUpCursor : OS.kThemeCrossCursor; break;", "+\t\tcase SWT.CURSOR_SIZES: \t\thandle = OS.VERSION >= 0x1030 ? OS.kThemeResizeDownCursor : OS.kThemeCrossCursor; break;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99615ebbe063bee9eda98b07db7c19a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/photon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "c0e47047fb12b4ad6c1cd291125c302ee4573df0", "commitAfterChange": "772f59dfc148ceb100936d7357b9a0b9d85ab236", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t/* select server */", "-\tbyte[] serverBuffer = Converter.wcsToMbcs(null, server, true);", "-\tint serverPtr = OS.malloc(serverBuffer.length);", "-\tOS.memmove(serverPtr, serverBuffer, serverBuffer.length);", "-\tOS.PtSetResource(webHandle, OS.Pt_ARG_WEB_SERVER, serverPtr, 0);", "-\tOS.free(serverPtr);", "+\t/**", "+\t * Feature in Photon PtWebClient.  If you give a server name", "+\t * when the widget is created it will attempt to start a new server", "+\t * rather then attaching a new window context to the existing server.", "+\t * If you don't connect to the existing one then javascript window", "+\t * creation will fail.", "+\t */", "+\tif (instanceCount == 0) {", "+\t\t/* select server */", "+\t\tbyte[] serverBuffer = Converter.wcsToMbcs(null, server, true);", "+\t\tint serverPtr = OS.malloc(serverBuffer.length);", "+\t\tOS.memmove(serverPtr, serverBuffer, serverBuffer.length);", "+\t\tOS.PtSetResource(webHandle, OS.Pt_ARG_WEB_SERVER, serverPtr, 0);", "+\t\tOS.free(serverPtr);", "+\t} ", "+\tinstanceCount++;", "+\tOS.PtAddCallback(webHandle,OS.Pt_CB_WEB_CLOSE_WINDOW, webProc, OS.Pt_CB_WEB_CLOSE_WINDOW);", "+\tOS.PtAddCallback(webHandle,OS.Pt_CB_WEB_NEW_WINDOW, webProc, OS.Pt_CB_WEB_NEW_WINDOW);", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c93f329cf97c02cc8590e4cd4d4dfe5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "6c23fe12fa52a868bd662bb2210990749c396125", "commitAfterChange": "bfc24124b9a37337134bc489e618940b95fe4ed5", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void sendEvent(int event, Object eventData)", "signatureAfterChange": " \tpublic void sendEvent(int event, Object eventData)", "diff": ["-\t\tcase ACC.EVENT_TABLE_CHANGED:", "-", "+\t\tcase ACC.EVENT_TABLE_CHANGED:", "+\t\t\tif (tableDelegate != null) {", "+\t\t\t\ttableDelegate.reset();", "+\t\t\t\tgetRowsAttribute(ACC.CHILDID_SELF);", "+\t\t\t\tgetColumnsAttribute(ACC.CHILDID_SELF);", "+\t\t\t}", "+\t\t\tOS.NSAccessibilityPostNotification(eventSource.id, OS.NSAccessibilityRowCountChangedNotification.id); break;", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0928a374cb6d2b1c35e6c9c8f0d2b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void calculateVisibleRegion (int control, int visibleRgn, boolean clipChildren)", "signatureAfterChange": "  void calculateVisibleRegion (int control, int visibleRgn, boolean clipChildren)", "diff": ["+\t\t\tif (OS.HIVIEW) OS.HIViewConvertRegion (tempRgn, tempControl, root);", "-\t\t\t\t\tOS.GetIndexedSubControl (tempControl, (short)(i + 1), outControl);", "+\t\t\t\t\tOS.GetIndexedSubControl (tempControl, (short)(OS.HIVIEW ? count [0] - i : i + 1), outControl);", "+\t\t\t\t\tif (OS.HIVIEW) OS.HIViewConvertRegion (tempRgn, child, root);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d9054f3bf085797576ce0efdf3533f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "71e082670a2e587e99ba9f0683312b9a404c65b8", "commitAfterChange": "2c2409b91eac452fa03efa9c9e69da66618d6519", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\trect.left = item.handle;", "-\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\tif (hItem == item.handle) {", "-\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.right, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\t\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\t\t\t\t\t\t\ttvItem.hItem = item.handle;", "-\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trect.left = item.handle;", "+\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "+\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\t\t\t\t\tif (hItem == item.handle || OS.COMCTL32_MAJOR < 6) {", "-\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\t\t\t\t\ttvItem.mask = OS.TVIF_STATE;", "+\t\t\t\t\t\t\t\t\ttvItem.hItem = item.handle;", "+\t\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.right, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\trect.left = 0;", "-\t\t\t\t\t\t\tOS.DrawEdge (hDC, rect, OS.BDR_SUNKENINNER, OS.BF_BOTTOM);", "-\t\t\t\t\t\t} ", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.DrawEdge (hDC, rect, OS.BDR_SUNKENINNER, OS.BF_BOTTOM);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07018c01c6077ce870b7094f52bc4f52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "670729bfb4582fa29fa221faed226712a0baf256", "commitAfterChange": "6384119f0991b9686159e4c1ab4031958e1a87bf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "diff": ["-\t\t\t\tcornerRect.right = windowRect.right - windowRect.left - trimRect.right;", "-\t\t\t\tcornerRect.left = cornerRect.right - (hVisible ? OS.GetSystemMetrics (OS.SM_CXVSCROLL) : 0);", "+\t\t\t\tif ((bits2 & OS.WS_EX_LEFTSCROLLBAR) != 0) {", "+\t\t\t\t\tcornerRect.left = trimRect.left;", "+\t\t\t\t\tcornerRect.right = cornerRect.left + (hVisible ? OS.GetSystemMetrics (OS.SM_CXVSCROLL) : 0);", "+\t\t\t\t} else {", "+\t\t\t\t\tcornerRect.right = windowRect.right - windowRect.left - trimRect.right;", "+\t\t\t\t\tcornerRect.left = cornerRect.right - (hVisible ? OS.GetSystemMetrics (OS.SM_CXVSCROLL) : 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38941f95047c11d751cd7b129d3457a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "bd21f3765c0c3d8551e66cecb7910c23ee2a020c", "commitAfterChange": "0299941c68a463c97176c9da97b333292c2da0fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\t\tsize = NSScrollView.frameSizeForContentSize(size, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0, border);", "+\t\tif (OS.VERSION >= 0x1070) {", "+\t\t\t// Always include the scroll bar in the trim even when the scroll style is overlay", "+\t\t\tOS.objc_msgSend_stret(size, OS.class_NSScrollView,", "+\t\t\t\tOS.sel_frameSizeForContentSize_horizontalScrollerClass_verticalScrollerClass_borderType_controlSize_scrollerStyle_,", "+\t\t\t\tsize, OS.class_NSScroller, OS.class_NSScroller, border, OS.NSRegularControlSize, OS.NSScrollerStyleLegacy);", "+\t\t} else {", "+\t\t\tsize = NSScrollView.frameSizeForContentSize(size, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0, border);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c14b8d58b6fe566959e930fcbced13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "cea7ad4f53311c6e11b8d036e80114124cd5665a", "commitAfterChange": "4baec444e45ab33965633f8f784e1288b4592361", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\t\t\tOS.GetThemeMetric (OS.kThemeMetricRoundTextFieldContentInsetWithIconLeft, left);", "+\t\t\tOS.GetThemeMetric (display.smallFonts ? OS.kThemeMetricRoundTextFieldSmallContentInsetWithIconLeft : OS.kThemeMetricRoundTextFieldContentInsetWithIconLeft, left);", "-\t\t\tOS.GetThemeMetric (OS.kThemeMetricRoundTextFieldContentInsetLeft, left);\t\t\t", "+\t\t\tOS.GetThemeMetric (display.smallFonts ? OS.kThemeMetricRoundTextFieldSmallContentInsetLeft : OS.kThemeMetricRoundTextFieldContentInsetLeft, left);\t\t\t", "-\t\t\tOS.GetThemeMetric (OS.kThemeMetricRoundTextFieldContentInsetWithIconRight, right);", "+\t\t\tOS.GetThemeMetric (display.smallFonts ? OS.kThemeMetricRoundTextFieldSmallContentInsetWithIconRight : OS.kThemeMetricRoundTextFieldContentInsetWithIconRight, right);", "-\t\t\tOS.GetThemeMetric (OS.kThemeMetricRoundTextFieldContentInsetRight, right);\t\t\t", "+\t\t\tOS.GetThemeMetric (display.smallFonts ? OS.kThemeMetricRoundTextFieldSmallContentInsetRight : OS.kThemeMetricRoundTextFieldContentInsetRight, right);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b866de5c027f2997b2ae3c9af507300", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "e69373b213e8626294a43ab53d920e312699c693", "commitAfterChange": "02f95eacfdded39651c1ac1ac9f4a4858e930540", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+\t\tOS.kEventClassControl, OS.kEventControlHitTest,", "+\t\tif (OS.HIVIEW) OS.SetControlAction (iconHandle, display.actionProc);", "+\t\tif (OS.HIVIEW) OS.SetControlAction (labelHandle, display.actionProc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744e0c942174c241d059f963445e5435", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "a137c5853ab0ae7afcd3da9d3d83b4bdd3098087", "commitAfterChange": "a0843f74d4e12fd014b36423a42de3c3ddd5e16b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void updateText (boolean layout)", "signatureAfterChange": "  void updateText (boolean layout)", "diff": ["-\t\tColor foreground = parent.getForeground();", "-\t\tgc.setForeground(foreground);", "+\t\tColor foreground = parent.getForeground ();", "+\t\tgc.setForeground (foreground);", "+\t\tif (parent.background != null) {", "+\t\t\tgc.setBackground (parent.getBackground ());", "+\t\t\tgc.fillRectangle (0, 0, size.x, size.y);", "+\t\t}", "-\t\tImageData data = image.getImageData ();", "-\t\tdata.transparentPixel = 0xFFFFFF;", "-\t\timage.dispose ();", "-\t\timage = new Image (display, data, data.getTransparencyMask());", "+\t\tif (parent.background == null) {", "+\t\t\tImageData data = image.getImageData ();", "+\t\t\tdata.transparentPixel = 0xFFFFFF;", "+\t\t\timage.dispose ();", "+\t\t\timage = new Image (display, data, data.getTransparencyMask ());", "+\t\t}"]}], "num": 15280}