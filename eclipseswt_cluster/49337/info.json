{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ed2dcd7df2ba54523ef20a570f6b2fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "652bb956b372e686da97077f6ab2c8da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/wpf/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "8e746dffcecf23a840e3dfc0bae71b16f86cd38f", "commitAfterChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": "  public Object nativeToJava(TransferData transferData)", "diff": ["+", "-\treturn null;", "-}", "+\tif (!isSupportedType(transferData) || transferData.pValue == 0)  return null;", "+\t", "+\tint pStringArray = transferData.pValue;", "+\tint length = OS.Array_GetLength(pStringArray, 0);", "+\tString[] fileNames = new String [length];", "+\tfor (int i = 0; i < length; i++) {", "+\t\tint pString = OS.Array_GetValue(pStringArray, i);", "+\t\tfileNames[i] = createJavaString(pString);", "+\t\tOS.GCHandle_Free(pString);", "+\t}", "+\treturn fileNames;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a862cd7e8d2633bdd98caaff1cbb7e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "e31d17ab01c6499c992488bb2508d677cae42d4c", "commitAfterChange": "96ead799b163f69c971718d08e432a475bbcdbbc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-//\tGC gc = new GC (parent);", "-//\tint width = gc.stringExtent (text).x;", "-\t//TODO extra header", "-//\tint index = parent.indexOf (this);", "-//\twidth = Math.max (width, calculateWidth (parent.childIds, index, gc, width));", "-//", "-//\tgc.dispose ();", "-//\tsetWidth (width + parent.getInsetWidth (id, true));", "-\t//TODO this only takes care of the header", "-\tnsColumn.sizeToFit();", "+\tGC gc = new GC (parent);", "+\tint width = gc.stringExtent (text).x;", "+\t//TODO header extra", "+\tint index = parent.indexOf (this);", "+\tfor (int i=0; i<parent.itemCount; i++) {", "+\t\tTreeItem item = parent.items [i];", "+\t\tif (item != null && item.cached) {", "+\t\t\twidth = Math.max (width, item.calculateWidth (index, gc, true));", "+\t\t}", "+\t}", "+\tgc.dispose ();", "+\tsetWidth (width + parent.getInsetWidth ());"]}], "num": 49337}