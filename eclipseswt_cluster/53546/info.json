{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c9ae4a00e186f57c2849a1b17db6ed3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a0a9d6c97f23f6c1601154f4114e62f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "f208b51c5168285826cce0c0f828f130c8b96679", "commitAfterChange": "c1a47d4a74210ad64a138d934c78f751ddd197ef", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\tif (view != null) {", "-\t\tOS.objc_msgSend(view.id, OS.sel_setTag_1, -1);", "-\t\tview.release();", "-\t}", "-\tif (button != null) {", "-\t\tOS.objc_msgSend(button.id, OS.sel_setTag_1, -1);", "-\t\tbutton.release();", "-\t}", "-\tif (arrow != null) {", "-\t\tOS.objc_msgSend(arrow.id, OS.sel_setTag_1, -1);", "-\t\tarrow.release();", "-\t}", "+\tif (view != null) view.release();", "+\tif (button != null) button.release();", "+\tif (arrow != null) arrow.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70acf55b95272723b53bc53307703dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "757d177b23363507324ca0f643ffc3b5e7a5cb99", "commitAfterChange": "4f3068b65fc08b3e999a3e1f0379cb967ed16dd4", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void setSelection (String [] items)", "signatureAfterChange": " public void setSelection (String [] items)", "diff": ["-\tint focusIndex = -1;", "-\t\t\tint localFocus = -1;", "-\t\t\t\tif (localFocus == -1) localFocus = index;", "-\t\t\tif (localFocus  >= 0) focusIndex = localFocus;", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\tif (focusIndex != -1) setFocusIndex (focusIndex);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07934e649cb28b3362a06710ce6dadad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c6e846c2a1f2f65f82baf98b5937ac087d800678", "commitAfterChange": "e20456e4917934e3819ddfffb95073320e334578", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  int fixedMapProc (int widget)", "signatureAfterChange": "  int fixedMapProc (int widget)", "diff": ["-\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 20, 0)) {", "-\t\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !OS.gtk_widget_get_mapped (child)) {", "-\t\t\t\t\tOS.gtk_widget_map (child);", "-\t\t\t\t}", "-\t\t\t}else{", "-\t\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !OS.GTK_WIDGET_MAPPED (child)) {", "-\t\t\t\t\tOS.gtk_widget_map (child);", "-\t\t\t\t}", "+\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !gtk_widget_get_mapped (child)) {", "+\t\t\t\tOS.gtk_widget_map (child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8488d8c77d894c06edbc828dabcc803a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "942ec679a976f688d77e8b46890c2911dc6ed10b", "commitAfterChange": "57d6c7e9ace75c6a8c830dacb23ac34a3a74ccbc", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["-\tif (OS.GTK3) {", "-\t\t/*", "-\t\t* Bug 454936 (see also other 454936 references in TabFolder)", "-\t\t* Architecture Fix:", "-\t\t*  We reparent the child to be a child of the 'tab' rather than tabfolder's parent swtFixed container.", "-\t\t*  Note, this reparenting is only on the GTK side, not on the SWT side.", "-\t\t*", "-\t\t*  Note, GTK2 and GTK3 child nesting behaviour is different now.", "-\t\t*  GTK2:", "-\t\t*    swtFixed", "-\t\t*    |-- GtkNoteBook", "-\t\t*    |   |-- tabLabel1", "-\t\t*    |   |-- tabLabel2", "-\t\t*    |-- swtFixed (child1)  //child is sibling of Notebook", "-\t\t*    |-- swtFixed (child2)", "-\t\t*", "-\t\t*  GTK3+:", "-\t\t*  \tswtFixed", "-\t\t*  \t|--\tGtkNoteBook", "-\t\t*  \t\t|-- tabLabel1", "-\t\t*  \t\t|-- tabLabel2", "-\t\t*  \t\t|-- swtFixed (child1) //child now child of Notebook.", "-\t\t*  \t\t|-- swtFixed (child2)", "-\t\t*", "-\t\t*  This corrects the hierarchy so that children are beneath gtkNotebook (as oppose to", "-\t\t*  being siblings) and thus fixes DND and background color issues.", "-\t\t*  In gtk2, reparenting doesn't function properly (tab content appear blank),", "-\t\t*  so this is a gtk3-specific behavior.", "-\t\t*", "-\t\t*  Note about the reason for reparenting:", "-\t\t*   Reparenting (as oppose to adding widget to a tab in the first place) is neccessary", "-\t\t*   because you can have a situation where you create a widget before you create a tab. e.g", "-\t\t*     TabFolder tabFolder = new TabFolder(shell, 0);", "-\t\t*     Composite composite = new Composite(tabFolder, 0);", "-\t\t*     TabItem tabItem = new TabItem(tabFolder, 0);", "-\t\t*     tabitem.setControl(composite);", "-\t\t*/", "-\t\tOS.g_object_ref (control.topHandle ()); //so that it won't get destroyed due to lack of references.", "-\t\tOS.gtk_container_remove (control.parent.topHandle (), control.topHandle ());", "-\t\tOS.gtk_container_add (pageHandle, control.topHandle ());", "-\t\tOS.g_object_unref (control.topHandle ());", "-\t}", "+\t\tif (control != null && OS.GTK3) {", "+\t\t\t/*", "+\t\t\t* Bug 454936 (see also other 454936 references in TabFolder)", "+\t\t\t* Architecture Fix:", "+\t\t\t*  We reparent the child to be a child of the 'tab' rather than tabfolder's parent swtFixed container.", "+\t\t\t*  Note, this reparenting is only on the GTK side, not on the SWT side.", "+\t\t\t*", "+\t\t\t*  Note, GTK2 and GTK3 child nesting behaviour is different now.", "+\t\t\t*  GTK2:", "+\t\t\t*    swtFixed", "+\t\t\t*    |-- GtkNoteBook", "+\t\t\t*    |   |-- tabLabel1", "+\t\t\t*    |   |-- tabLabel2", "+\t\t\t*    |-- swtFixed (child1)  //child is sibling of Notebook", "+\t\t\t*    |-- swtFixed (child2)", "+\t\t\t*", "+\t\t\t*  GTK3+:", "+\t\t\t*  \tswtFixed", "+\t\t\t*  \t|--\tGtkNoteBook", "+\t\t\t*  \t\t|-- tabLabel1", "+\t\t\t*  \t\t|-- tabLabel2", "+\t\t\t*  \t\t|-- swtFixed (child1) //child now child of Notebook.", "+\t\t\t*  \t\t|-- swtFixed (child2)", "+\t\t\t*", "+\t\t\t*  This corrects the hierarchy so that children are beneath gtkNotebook (as oppose to", "+\t\t\t*  being siblings) and thus fixes DND and background color issues.", "+\t\t\t*  In gtk2, reparenting doesn't function properly (tab content appear blank),", "+\t\t\t*  so this is a gtk3-specific behavior.", "+\t\t\t*", "+\t\t\t*  Note about the reason for reparenting:", "+\t\t\t*   Reparenting (as oppose to adding widget to a tab in the first place) is neccessary", "+\t\t\t*   because you can have a situation where you create a widget before you create a tab. e.g", "+\t\t\t*     TabFolder tabFolder = new TabFolder(shell, 0);", "+\t\t\t*     Composite composite = new Composite(tabFolder, 0);", "+\t\t\t*     TabItem tabItem = new TabItem(tabFolder, 0);", "+\t\t\t*     tabitem.setControl(composite);", "+\t\t\t*/", "+\t\t\tgtk_widget_reparent (control, pageHandle);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3b5da1d934987b5dcd07a5481bb839d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a56f8f599aaa1c8fdb28f85142db5eee5b0707f4", "commitAfterChange": "5a0d106dbe31583de549b9590dedebd87d738c84", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["-\tif (!(0 < id && id <= items.length)) return OS.noErr;", "-\t\t\tTreeItem item = _getItem (id, true);", "-\t\t\tint [] ids = item.childIds;", "+\t\t\tTreeItem parentItem = _getItem (id, true);", "+\t\t\tif (parentItem == null) break; // can happen when removing all items", "+\t\t\tint [] ids = parentItem.childIds;", "-\t\t\t\tfor (int i=0; i<item.itemCount; i++) {", "-\t\t\t\t\tint childId = ids [i];", "-\t\t\t\t\tif (childId != 0) {", "-\t\t\t\t\t\tif (childId > items.length || items [childId - 1] == null) ids [i] = 0;", "-\t\t\t\t\t}", "+\t\t\t\tfor (int i=0; i<parentItem.itemCount; i++) {", "+\t\t\t\t\tTreeItem item = _getItem (ids [i], false); ", "+\t\t\t\t\tif (item == null) ids [i] = 0;", "-\t\t\t\tevent.item = item;", "+\t\t\t\tevent.item = parentItem;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4377524d7fef53b7b481f59bc1b0cd24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OpenGL/gtk/org/eclipse/swt/opengl/GLCanvas.java", "commitBeforeChange": "b9f7831e7bdf04474ffdab87efb437511a67f97b", "commitAfterChange": "8de1ac9db91bb43b6bd0099ed55c1ebbf15558ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public GLCanvas (Composite parent, int style, GLData data)", "signatureAfterChange": " public GLCanvas (Composite parent, int style, GLData data)", "diff": ["-\tlong /*int*/ window;", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 14, 0)){", "-\t\twindow = OS.gtk_widget_get_window (handle);", "-\t} else {", "-\t\twindow = OS.GTK_WIDGET_WINDOW (handle);", "-\t}", "+\tlong /*int*/ window = OS.gtk_widget_get_window (handle);", "-\t\t\t\tlong /*int*/ window;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 14, 0)){", "-\t\t\t\t\twindow = OS.gtk_widget_get_window (handle);", "-\t\t\t\t} else {", "-\t\t\t\t\twindow = OS.GTK_WIDGET_WINDOW (handle);", "-\t\t\t\t}", "+\t\t\t\tlong /*int*/ window = OS.gtk_widget_get_window (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53232ffedf040c5ef1c6bd3f2fd4f8d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "a93fce3f5105854eeb8341437779e5e3e2bb72f1", "commitAfterChange": "599e467b0978b4d9b759eab92e551eb3c58a6f09", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  ScrollBar createScrollBar (int style)", "signatureAfterChange": "  ScrollBar createScrollBar (int style)", "diff": ["-\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "-\t\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_HSCROLLBAR (scrolledHandle);", "-\t\t} else {", "-\t\t\tbar.handle = OS.gtk_scrolled_window_get_hscrollbar (scrolledHandle);", "-\t\t}", "+\t\tbar.handle = OS.gtk_scrolled_window_get_hscrollbar (scrolledHandle);", "-\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "-\t\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_VSCROLLBAR (scrolledHandle);", "-\t\t} else {", "-\t\t\tbar.handle = OS.gtk_scrolled_window_get_vscrollbar (scrolledHandle);", "-\t\t}", "+\t\tbar.handle = OS.gtk_scrolled_window_get_vscrollbar (scrolledHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dcd015470397e9020bac8a100cc408f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a56f8f599aaa1c8fdb28f85142db5eee5b0707f4", "commitAfterChange": "5a0d106dbe31583de549b9590dedebd87d738c84", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  int itemCompareProc (int browser, int itemOne, int itemTwo, int sortProperty)", "signatureAfterChange": "  int itemCompareProc (int browser, int itemOne, int itemTwo, int sortProperty)", "diff": ["-\tif (!(0 < itemOne && itemOne <= items.length)) return OS.noErr;", "-\tif (!(0 < itemTwo && itemTwo <= items.length)) return OS.noErr;", "-\tTreeItem item1 = items [itemOne - 1];", "-\tTreeItem item2 = items [itemTwo - 1];", "+\tTreeItem item1 = _getItem (itemOne, false);", "+\tTreeItem item2 = _getItem (itemTwo, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d03631dfa517dc5515b9b2ec28d2fa1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void setInsertMark(int index, boolean after)", "signatureAfterChange": " public void setInsertMark(int index, boolean after)", "diff": ["-\tif (index == -1) {", "-\t\tindex = -2;", "+//\tif (index == -1) {", "+//\t\tindex = -2;", "+//\t} else {", "+//\t\tindex = after ? index : --index;", "+//\t}", "+//\t", "+//\tif (insertionIndex == index) return;", "+//\tint oldIndex = insertionIndex;", "+//\tinsertionIndex = index;", "+//\tif (index > -1)\tredrawTabArea(index);", "+//\tif (oldIndex > 1) redrawTabArea(oldIndex);", "+}", "-\t\tindex = after ? index : --index;", "-\tif (insertionIndex == index) return;", "-\tint oldIndex = insertionIndex;", "-\tinsertionIndex = index;", "-\tif (index > -1)\tredrawTabArea(index);", "-\tif (oldIndex > 1) redrawTabArea(oldIndex);"]}], "num": 53546}