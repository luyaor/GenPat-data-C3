{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "377e0706f058978f12e2cfdc1d6c0428", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc703235f26b7c0af2cee20291bf2ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "eb4c77681838ea183c756eed2733c0acab28cd20", "commitAfterChange": "a3635cd9e0dd7879bc3b3bd73040e191dbd7da50", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\t/*\r", "-\t* Feature in Windows.  Because TrackPopupMenu() runs a\r", "-\t* modal menu loop and does not return until an item is\r", "-\t* selected or the user cancels the menu and SWT.Selection\r", "-\t* events are posted, they won't run until execution returns\r", "-\t* to the event loop.  While this is not strictly incorrect,\r", "-\t* it means that code that relies on the modal menu loop\r", "-\t* to decide when to destroy the menu will destroy the menu\r", "-\t* before the SWT.Selection event is delivered.  The fix is\r", "-\t* to run the deferred events after the menu is hidden. \r", "-\t*/\r", "-\tMSG msg = new MSG ();\r", "-\tif (OS.PeekMessage (msg, hwndParent, OS.WM_COMMAND, OS.WM_COMMAND, OS.PM_REMOVE)) {\r", "-\t\tOS.DispatchMessage (msg);\r", "-\t}\r", "-\tDisplay display = getDisplay ();\r", "-\tdisplay.runDeferredEvents ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86bfa078d290b55d03b3a8adc381fa90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "972ecf6c883823afea3358c3622c60ce827b910b", "commitAfterChange": "da27e97e7a9749f7031a30ade16c918b981d1528", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public void open ()", "signatureAfterChange": "\r public void open ()", "diff": ["+\t/*\r", "+\t* Bug in Windows XP.  The task bar displays the wrong icon\r", "+\t* for a visible window when a certain delay has elapsed \r", "+\t* between the call to ShowWindow() and the moment the \r", "+\t* event queue is first accessed.  The icon displayed is the\r", "+\t* one displayed in the Windows Explorer for the executable \r", "+\t* running the application.  The icon in the window's frame \r", "+\t* is correct.  The workaround is to call PeekMessage() with \r", "+\t* the flag PM_NOREMOVE after the calls to BringWindowToTop()\r", "+\t* and ShowWindow() to touch the event queue.\r", "+\t*/\r", "+\tMSG msg = new MSG ();\r", "+\tOS.PeekMessage (msg, 0, 0, 0, OS.PM_NOREMOVE);\r"]}], "num": 8530}