{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d34a82de8e7affc22ea59b0661024a46", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "772fe5f1f10cb24593143aa984ec44d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "89dd18f56416766e9f25e99fa93a3cfdf736ff7e", "commitAfterChange": "0333c3cd6e1227d0185cdb60c13b053083d72b21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof String)) {", "-\t\ttransferData.result = -1;", "-\t\treturn;", "-\t}", "+\ttransferData.result = -1;", "+\tif (object == null || !(object instanceof String) || !isSupportedType(transferData)) return;", "+", "-\t\t\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "-\t\t\tif (ptr == 0) {", "-\t\t\t\ttransferData.result = -1;", "-\t\t\t\treturn;", "+\t\t\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\t\t\tif (cfstring == 0) return;", "+\t\t\tbyte[] buffer = null;", "+\t\t\ttry {", "+\t\t\t\tCFRange range = new CFRange();", "+\t\t\t\trange.length = chars.length;", "+\t\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "+\t\t\t\tint[] size = new int[1];", "+\t\t\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);", "+\t\t\t\tif (numChars == 0) return;", "+\t\t\t\tbuffer = new byte[size[0]];", "+\t\t\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);", "+\t\t\t\tif (numChars == 0) return;", "+\t\t\t} finally {", "+\t\t\t\tOS.CFRelease(cfstring);", "-\t\t\tCFRange range = new CFRange();", "-\t\t\trange.length = chars.length;", "-\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "-\t\t\tint[] size = new int[1];", "-\t\t\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, null, 0, size);", "-\t\t\tbyte[] buffer = new byte[size[0]];", "-\t\t\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\t\t\tOS.CFRelease(ptr);", "-\t\t\tsuper.javaToNative(buffer, transferData);", "+\t\t\ttransferData.data = new byte[1][];", "+\t\t\ttransferData.data[0] = buffer;", "+\t\t\ttransferData.result = OS.noErr;", "-\t\t\tsuper.javaToNative(buffer, transferData);", "+\t\t\ttransferData.data = new byte[1][];", "+\t\t\ttransferData.data[0] = buffer;", "+\t\t\ttransferData.result = OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37e2c09f3131c9e399dae54b4412b5c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "bd377d5ede28b82ea37a0902d7d539f96218e9fe", "commitAfterChange": "c03f2bbcabd697f87ad83444a1e4e58283e6ab32", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "-\tif (ptr == 0) {", "-\t\ttransferData.result = -1;", "-\t\treturn;", "+\tswitch (transferData.type) {", "+\t\tcase TEXTID: {", "+\t\t\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\t\t\tif (ptr == 0) {", "+\t\t\t\ttransferData.result = -1;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tCFRange range = new CFRange();", "+\t\t\trange.length = chars.length;", "+\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "+\t\t\tint[] size = new int[1];", "+\t\t\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, null, 0, size);", "+\t\t\tbyte[] buffer = new byte[size[0]];", "+\t\t\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, buffer, size [0], size);", "+\t\t\tOS.CFRelease(ptr);", "+\t\t\tsuper.javaToNative(buffer, transferData);", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase UTEXTID: {", "+\t\t\tbyte[] buffer = new byte[chars.length * 2];", "+\t\t\tOS.memcpy(buffer, chars, buffer.length);", "+\t\t\tsuper.javaToNative(buffer, transferData);", "+\t\t\tbreak;", "+\t\t}", "-\tCFRange range = new CFRange();", "-\trange.length = chars.length;", "-\tint encoding = OS.CFStringGetSystemEncoding();", "-\tint[] size = new int[1];", "-\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, null, 0, size);", "-\tbyte[] buffer = new byte[size[0]];", "-\tOS.CFStringGetBytes(ptr, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\tOS.CFRelease(ptr);", "-\tsuper.javaToNative(buffer, transferData);"]}], "num": 25811}