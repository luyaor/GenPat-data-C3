{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "722e6353e969b47702420185437dd021", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e18696c196742ff9d4177ec9d71c5607", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TreeEditor.java", "commitBeforeChange": "76c26a9d62b45485432ac316c623d26313f2dab3", "commitAfterChange": "32f745f166ca3f555ac0c5b5405a19c39b921edc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " Rectangle computeBounds ()", "signatureAfterChange": " Rectangle computeBounds ()", "diff": ["-\t", "-\tRectangle editorRect = new Rectangle(cell.x, cell.y, minimumWidth, cell.height);", "-\t", "+\tRectangle editorRect = new Rectangle(cell.x, cell.y, minimumWidth, minimumHeight);", "+", "-\t\teditorRect.width = Math.max(area.x + area.width - cell.x, minimumWidth);", "+\t\t// Bounds of tree item only include the text area - stretch out to include ", "+\t\t// entire client area", "+\t\tcell.width = area.x + area.width - cell.x;", "+\t\teditorRect.width = Math.max(cell.width, minimumWidth);", "+\t}", "+\t", "+\tif (grabVertical) {", "+\t\teditorRect.height = Math.max(cell.height, minimumHeight);", "-\t\teditorRect.x = Math.max(cell.x, cell.x + cell.width - editorRect.width);", "+\t\teditorRect.x += cell.width - editorRect.width;", "-\t\teditorRect.x = Math.max(cell.x, cell.x + (cell.width - editorRect.width)/2);", "+\t\teditorRect.x += (cell.width - editorRect.width)/2;", "+\t// don't let the editor overlap with the +/- of the tree", "+\teditorRect.x = Math.max(cell.x, editorRect.x);", "+\tif (verticalAlignment == SWT.BOTTOM) {", "+\t\teditorRect.y += cell.height - editorRect.height;", "+\t} else if (verticalAlignment == SWT.TOP) {", "+\t\t// do nothing - cell.y is the right answer", "+\t} else { // default is CENTER", "+\t\teditorRect.y += (cell.height - editorRect.height)/2;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179f9c2e5f2f8d7d1c71108b36ea3866", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "bd8a992246bc8f71b4d5e7e6b3cdcc570d484b1c", "commitAfterChange": "c645a2d18424af0c76c95dfae0c01c4ed867b1ef", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void drawSelected(GC gc )", "signatureAfterChange": "  void drawSelected(GC gc )", "diff": ["-\t\tint imageHeight = Math.min(height - 2*TOP_MARGIN, imageBounds.height);", "+\t\tint imageHeight = imageBounds.height;", "-\t\timageY += TOP_MARGIN + (height - 2*TOP_MARGIN - imageHeight) / 2;", "+\t\tif (parent.onBottom) {", "+\t\t\timageY+= BOTTOM_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - imageHeight) / 2;", "+\t\t} else {", "+\t\t\timageY+= TOP_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - imageHeight) / 2;", "+\t\t}", "-\tPoint extent = gc.textExtent(shortenedText, FLAGS);", "-\tint textY = y + TOP_MARGIN + (height - 2*TOP_MARGIN - extent.y) / 2;\t", "+\tPoint extent = gc.textExtent(shortenedText, FLAGS);\t", "+\tint textY = y;", "+\tif (parent.onBottom) {", "+\t\ttextY+= BOTTOM_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "+\t} else {", "+\t\ttextY+= TOP_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "+\t}", "+\t"]}], "num": 41180}