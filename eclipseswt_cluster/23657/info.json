{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d53923d074fff17cd04fd1c73e8b4e73", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6c10e33097663ab84b80a5f57282a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "6fbc2de9040893804e21b633e2de9a88dfb463d2", "commitAfterChange": "3504a95f409668afb07f780caf2e63d25af9da6a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  String getCustomShortDateFormat ()", "signatureAfterChange": "  String getCustomShortDateFormat ()", "diff": ["-\tif (true) {", "-\t\tTCHAR tchar = new TCHAR (getCodePage (), 80);", "-\t\tint size = OS.GetLocaleInfo (OS.LOCALE_USER_DEFAULT, OS.LOCALE_SYEARMONTH, tchar, 80);", "-\t\treturn size != 0 ? tchar.toString (0, size - 1) : \"M/yyyy\"; //$NON-NLS-1$", "-\t}", "+\tTCHAR tchar = new TCHAR (getCodePage (), 80);", "+\tint size = OS.GetLocaleInfo (OS.LOCALE_USER_DEFAULT, OS.LOCALE_SYEARMONTH, tchar, 80);", "+\treturn size != 0 ? tchar.toString (0, size - 1) : \"M/yyyy\"; //$NON-NLS-1$", "-\tStringBuffer buffer = new StringBuffer (getShortDateFormat ());", "-\tint length = buffer.length ();", "-\tboolean inQuotes = false;", "-\tint start = 0, end = 0;", "-\twhile (start < length) {", "-\t\tchar ch = buffer.charAt (start);", "-\t\tif (ch == SINGLE_QUOTE) inQuotes = !inQuotes;", "-\t\telse if (ch == DAY_FORMAT_CONSTANT && !inQuotes) {", "-\t\t\tend = start + 1;", "-\t\t\twhile (end < length && buffer.charAt (end) == DAY_FORMAT_CONSTANT) end++;", "-\t\t\tint ordering = getShortDateFormatOrdering ();", "-\t\t\tswitch (ordering) {", "-\t\t\tcase MONTH_DAY_YEAR:", "-\t\t\t\t// skip the following separator", "-\t\t\t\twhile (end < length && buffer.charAt (end) != YEAR_FORMAT_CONSTANT) end++;", "-\t\t\t\tbreak;", "-\t\t\tcase DAY_MONTH_YEAR:", "-\t\t\t\t// skip the following separator", "-\t\t\t\twhile (end < length && buffer.charAt (end) != MONTH_FORMAT_CONSTANT) end++;", "-\t\t\t\tbreak;", "-\t\t\tcase YEAR_MONTH_DAY:", "-\t\t\t\t// skip the preceding separator", "-\t\t\t\twhile (start > 0 && buffer.charAt (start) != MONTH_FORMAT_CONSTANT) start--;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tbreak;", "-\t\t}", "-\t\tstart++;", "-\t}", "-\tif (start < end) buffer.delete (start, end);", "-\treturn buffer.toString ();", "+//\tStringBuffer buffer = new StringBuffer (getShortDateFormat ());", "+//\tint length = buffer.length ();", "+//\tboolean inQuotes = false;", "+//\tint start = 0, end = 0;", "+//\twhile (start < length) {", "+//\t\tchar ch = buffer.charAt (start);", "+//\t\tif (ch == SINGLE_QUOTE) inQuotes = !inQuotes;", "+//\t\telse if (ch == DAY_FORMAT_CONSTANT && !inQuotes) {", "+//\t\t\tend = start + 1;", "+//\t\t\twhile (end < length && buffer.charAt (end) == DAY_FORMAT_CONSTANT) end++;", "+//\t\t\tint ordering = getShortDateFormatOrdering ();", "+//\t\t\tswitch (ordering) {", "+//\t\t\tcase MONTH_DAY_YEAR:", "+//\t\t\t\t// skip the following separator", "+//\t\t\t\twhile (end < length && buffer.charAt (end) != YEAR_FORMAT_CONSTANT) end++;", "+//\t\t\t\tbreak;", "+//\t\t\tcase DAY_MONTH_YEAR:", "+//\t\t\t\t// skip the following separator", "+//\t\t\t\twhile (end < length && buffer.charAt (end) != MONTH_FORMAT_CONSTANT) end++;", "+//\t\t\t\tbreak;", "+//\t\t\tcase YEAR_MONTH_DAY:", "+//\t\t\t\t// skip the preceding separator", "+//\t\t\t\twhile (start > 0 && buffer.charAt (start) != MONTH_FORMAT_CONSTANT) start--;", "+//\t\t\t\tbreak;", "+//\t\t\t}", "+//\t\t\tbreak;", "+//\t\t}", "+//\t\tstart++;", "+//\t}", "+//\tif (start < end) buffer.delete (start, end);", "+//\treturn buffer.toString ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f966962b2e486d761762d8ab1e7d9f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "95c43aebe2b20c414d9c7747858feae6b17f1039", "commitAfterChange": "fe27ba892c69a8ec67cf5a69235a590d5b9fe51e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\tdrawItem = 0;", "-\t\t\tRectangle rect = getClientArea ();", "-\t\t\tint headerHeight = getHeaderHeight ();", "-\t\t\trect.y += headerHeight;", "-\t\t\trect.height -= headerHeight;", "-\t\t\tif (drawItem != 0) {", "-\t\t\t\tint clientX = rect.x, clientWidth = rect.width; ", "-\t\t\t\tRect itemRect = new Rect();", "-\t\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "-\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, itemRect) == OS.noErr) {", "-\t\t\t\t\trect.width = rect.x + rect.width - itemRect.right;", "-\t\t\t\t\trect.x = itemRect.right;", "-\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "-\t\t\t\t}", "-\t\t\t\tint [] ids = childIds, state = new int [1];", "-\t\t\t\tint index = ids.length - 1;", "-\t\t\t\twhile (true) {", "-\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "-\t\t\t\t\tif (index < 0) break;", "-\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "-\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "-\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "-\t\t\t\t\t\tif (item != null) {", "-\t\t\t\t\t\t\tids = item.childIds;", "-\t\t\t\t\t\t\tindex = ids.length - 1;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\tint [] ids = childIds, state = new int [1];", "+\t\t\tint index = ids.length - 1;", "+\t\t\twhile (true) {", "+\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "+\t\t\t\tif (index < 0) break;", "+\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "+\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "+\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "+\t\t\t\t\tif (item != null) {", "+\t\t\t\t\t\tids = item.childIds;", "+\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "-\t\t\t\tif (index >= 0 && ids [index] != 0) {", "-\t\t\t\t\tint rc = -1;", "-\t\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "-\t\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (rc == OS.noErr) {", "-\t\t\t\t\t\trect.width = clientWidth;", "-\t\t\t\t\t\trect.x = clientX;", "-\t\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "-\t\t\t\t\t\trect.y = itemRect.bottom;", "-\t\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t}", "+\t\t\tif (index >= 0 && ids [index] != 0) {", "+\t\t\t\tint rc = -1;", "+\t\t\t\tRect itemRect = new Rect();", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t\tif (rc == OS.noErr) {", "+\t\t\t\t\tRectangle rect = getClientArea ();", "+\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "+\t\t\t\t\trect.y = itemRect.bottom;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t\t}", "-\tdrawItem = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f5db184a93f5757517aeb26a9122ddc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "31cd6ab709bd12e0a040b5f3cf2da696eefbaf45", "commitAfterChange": "828ba16598ffe05117d7e7850c0ff70351e02de8", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tvoid handleVerifyText(VerifyEvent event)", "signatureAfterChange": "  \tvoid handleVerifyText(VerifyEvent event)", "diff": ["-", "-\t\t// move/dispose images and controls", "-\t\tfor (int i = 0; i < imageOffsets.length; i++) {", "-\t\t\tint offset = imageOffsets[i];", "-", "-\t\t\tif (start <= offset && offset < start + replaceCharCount) {", "-\t\t\t\tif (images[i] != null && !images[i].isDisposed()) {", "-\t\t\t\t\timages[i].dispose();", "-\t\t\t\t\timages[i] = null;", "-\t\t\t\t}", "-\t\t\t\toffset = -1;", "-\t\t\t}", "-\t\t\tif (offset != -1 && offset >= start) offset += newCharCount - replaceCharCount;", "-\t\t\timageOffsets[i] = offset;", "-\t\t}", "-\t\tfor (int i = 0; i < controlOffsets.length; i++) {", "-\t\t\tint offset = controlOffsets[i];", "-\t\t\tif (start <= offset && offset < start + replaceCharCount) {", "-\t\t\t\tif (controls[i] != null && !controls[i].isDisposed()) {", "-\t\t\t\t\tcontrols[i].dispose();", "-\t\t\t\t\tcontrols[i] = null;", "-\t\t\t\t}", "-\t\t\t\toffset = -1;", "-\t\t\t}", "-\t\t\tif (offset != -1 && offset >= start) offset += newCharCount - replaceCharCount;", "-\t\t\tcontrolOffsets[i] = offset;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90eb0961547d2f8b8ec7c2b2bc383505", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "95c43aebe2b20c414d9c7747858feae6b17f1039", "commitAfterChange": "fe27ba892c69a8ec67cf5a69235a590d5b9fe51e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\tdrawItem = 0;", "-\t\t\tRectangle rect = getClientArea ();", "-\t\t\tint headerHeight = getHeaderHeight ();", "-\t\t\trect.y += headerHeight;", "-\t\t\trect.height -= headerHeight;", "-\t\t\tif (drawItem != 0) {", "-\t\t\t\tint clientX = rect.x, clientWidth = rect.width; ", "-\t\t\t\tRect itemRect = new Rect();", "-\t\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "-\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, itemRect) == OS.noErr) {", "-\t\t\t\t\trect.width = rect.x + rect.width - itemRect.right;", "-\t\t\t\t\trect.x = itemRect.right;", "-\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);\t", "-\t\t\t\t}", "-\t\t\t\tint rc = -1;", "-\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, columnId, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "-\t\t\t\t} else {", "-\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "-\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (rc == OS.noErr) {", "-\t\t\t\t\trect.width = clientWidth;", "-\t\t\t\t\trect.x = clientX;", "-\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "-\t\t\t\t\trect.y = itemRect.bottom;", "-\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "-\t\t\t\t}", "+\t\t\tint rc = -1;", "+\t\t\tRect itemRect = new Rect();", "+\t\t\tif (columnCount == 0) {", "+\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "+\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (rc == OS.noErr) {", "+\t\t\t\tRectangle rect = getClientArea ();", "+\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "+\t\t\t\trect.y = itemRect.bottom;", "-\tdrawItem = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c612ce04e2fd7be0fd5eee72831cd4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5f75e2dae2083c0061842ac6356ab5d489381754", "commitAfterChange": "528027af0b27ada34be52afa13892d4c48dca57c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public TableItem getItem (Point point)", "signatureAfterChange": " public TableItem getItem (Point point)", "diff": ["-\t//TODO - optimize", "-\tfor (int i=0; i<itemCount; i++) {", "-\t\tint columnId = columnCount == 0 ? column_id : columns [0].id;", "-\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (i), columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\t\trect.bottom = (short)(rect.top + height [0]);", "-\t\t\tif (rect.top <= pt.v && pt.v < rect.bottom) {", "-\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (i);", "-\t\t\t\t} else {", "-\t\t\t\t\tfor (int j = 0; j < columnCount; j++) {", "-\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (i), columns [j].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\t\t\t\t\t\trect.bottom = (short)(rect.top + height [0]);", "-\t\t\t\t\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (i);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t}", "-\t}"]}], "num": 23657}