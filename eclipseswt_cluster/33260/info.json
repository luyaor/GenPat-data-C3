{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec13a8bdf760c9106cc92522727e953f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78eeba1c6de69c171cd04329599cf656", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "c4a9a7312682b25a6ce13e8bdc5d2382c2ab3ee9", "commitAfterChange": "88d75ad2bbe8971f6d86a38530d074943cf76c9b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\treturn new Point (width, height);\t", "+\tif (wHint != SWT.DEFAULT || hHint != SWT.DEFAULT) {", "+\t\tif ((OS.GTK_WIDGET_FLAGS (handle) & OS.GTK_CAN_DEFAULT) != 0) {", "+\t\t\tint /*long*/ [] buffer = new int /*long*/ [1];", "+\t\t\tGtkBorder border = new GtkBorder ();", "+\t\t\tOS.gtk_widget_style_get (handle, OS.default_border, buffer, 0);", "+\t\t\tif (buffer[0] != 0) {", "+\t\t\t\tOS.memmove (border, buffer[0], GtkBorder.sizeof);", "+\t\t\t} else {", "+\t\t\t\t/* Use the GTK+ default value of 1 for each. */", "+\t\t\t\tborder.left = border.right = border.top = border.bottom = 1;", "+\t\t\t}", "+\t\t\tif (wHint != SWT.DEFAULT) width += border.left + border.right;", "+\t\t\tif (hHint != SWT.DEFAULT) height += border.top + border.bottom;", "+\t\t}", "+\t}", "+\treturn new Point (width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c830e08b7bd6a45cce1aa4efa92bd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "045071fcdac47057b951289364c1190503389fc4", "commitAfterChange": "659d841b033b864efe4f5fce4abb5b8822188e47", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tcheckWidget ();", "-\t// We are interested in the preferred size.", "-\t// The native widget gives us what it thinks the minimum reasonable", "-\t// size; we'll say we prefer to be twice that long, and exactly", "-\t// that wide.", "-\tint x,y;", "-\tPoint size = super.computeSize (wHint, hHint, changed);", "-\tif (hHint==SWT.DEFAULT) {", "-\t\tx = size.x;", "-\t\tif ((style & SWT.HORIZONTAL) != 0) x = 2*x;", "-\t} else x = hHint;", "-\tif (wHint==SWT.DEFAULT) {", "-\t\ty = size.y;", "-\t\tif ((style & SWT.VERTICAL) != 0) y = 2*y;", "-\t} else y = wHint;", "-\t", "-\treturn new Point(x,y);", "+\tcheckWidget();", "+\tPoint size = computeNativeSize(handle, wHint, hHint, changed);", "+\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\tif (wHint == SWT.DEFAULT) size.x = 2 * size.x;", "+\t} else {", "+\t\tif (hHint == SWT.DEFAULT) size.y = 2 * size.y;", "+\t}", "+\treturn size;"]}], "num": 33260}