{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96e2593623563e6a993bb42582a1bbcf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ac9f9c42a77a3c64f5fe84edad0666", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 21, "signatureBeforeChange": "  Menu createEditMenu()", "signatureAfterChange": " \t\t\tpublic void menuShown(MenuEvent e)", "diff": ["-Menu createEditMenu() {", "-\tMenu bar = shell.getMenuBar ();", "-\tMenu menu = new Menu (bar);", "-\tMenuItem item = new MenuItem (menu, SWT.PUSH);", "-\titem.setText (resources.getString(\"Cut_menuitem\"));", "-\titem.setAccelerator(SWT.MOD1 + 'X');", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\thandleCutCopy();", "-\t\t\ttext.cut();", "-\t\t}", "-\t});", "-\titem = new MenuItem (menu, SWT.PUSH);", "-\titem.setText (resources.getString(\"Copy_menuitem\"));", "-\titem.setAccelerator(SWT.MOD1 + 'C');", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\thandleCutCopy();", "-\t\t\ttext.copy();", "-\t\t}", "-\t});", "-\titem = new MenuItem (menu, SWT.PUSH);", "-\titem.setText (resources.getString(\"Paste_menuitem\"));", "-\titem.setAccelerator(SWT.MOD1 + 'V');", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\ttext.paste();", "-\t\t}", "-\t});", "-\tnew MenuItem (menu, SWT.SEPARATOR);\t", "-\titem = new MenuItem (menu, SWT.PUSH);", "-\titem.setText (resources.getString(\"Font_menuitem\"));", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tsetFont();", "-\t\t}", "-\t});", "-\treturn menu;", "-}", "+\t\teditMenu.addMenuListener(new MenuAdapter() {", "+\t\t\tpublic void menuShown(MenuEvent e) {", "+\t\t\t\tint selectionCount = styledText.getSelectionCount();", "+\t\t\t\tcutItem.setEnabled(selectionCount > 0);", "+\t\t\t\tcopyItem.setEnabled(selectionCount > 0);", "+\t\t\t\tselectAllItem.setEnabled(selectionCount < styledText.getCharCount());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "863e317f12c219124892f5dedaca2d72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "6350427271e30cbd3731a00deddf1a1c7533abaf", "commitAfterChange": "2527982ac068176e33d2c5edefd4e2394a3a98cc", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void test_LongEventWatchdog()", "signatureAfterChange": "  public void test_LongEventWatchdog()", "diff": ["-\t\tfinal boolean[] eventSent = {false};", "-\t\tILongEventWatchdog callback = new ILongEventWatchdog() {", "-\t\t\tpublic void beginEvent(int depth) {", "+\t\tListener preListener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "-", "-\t\t\tpublic void onLongEvent(LongEventInfo event) {", "-\t\t\t\teventSent[0] = true;", "-\t\t\t}", "-", "-\t\t\tpublic void endEvent(int depth) {", "+\t\t};", "+\t\t", "+\t\tListener postListener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "-", "-\t\tdisplay.getSynchronizer().registerLongDispatchWatchdogCallback(callback, DURATION_MILLIS);", "-", "+\t\t", "+\t\tdisplay.addListener(SWT.PreEvent, preListener);", "+\t\tdisplay.addListener(SWT.PostEvent, postListener);", "+\t\t", "-\t\t// Detect falling edge of readAndDispatch's return value. It must always go high at least", "-\t\t// once for the runnable this test asyncExec'd.", "-\t\tboolean prevMoreToDispatch = false;", "-\t\tboolean moreToDispatch = false;", "-", "-\t\twhile (!eventHasRun[0] && !(prevMoreToDispatch && !moreToDispatch)) {", "-\t\t\tprevMoreToDispatch = moreToDispatch;", "-\t\t\tmoreToDispatch = display.readAndDispatch();", "-\t\t\tassertTrue(beginCalled[0] == endCalled[0]);", "-\t\t\tassertTrue(!eventHasRun[0] || eventSent[0]); // eventHasRun[0] -> eventSent[0]", "+\t\twhile (display.readAndDispatch()) {", "-", "-\t\tdisplay.getSynchronizer().unregisterLongDispatchWatchdogCallback(callback);", "+\t\t", "+\t\tdisplay.removeListener(SWT.PreEvent, preListener);", "+\t\tdisplay.removeListener(SWT.PostEvent, preListener);", "+\t\t", "+\t\t"]}], "num": 32161}