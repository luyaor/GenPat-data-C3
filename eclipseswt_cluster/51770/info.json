{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32ef703a8ce8c7e4540aa068416ee211", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c008332c06189aed727efd0072ec997d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " \tpublic void textChanged (int type, int startIndex, int length)", "signatureAfterChange": " \tpublic void textChanged (int type, int startIndex, int length)", "diff": ["+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.start = startIndex;", "+\t\tevent.end = startIndex + length;", "+\t\tevent.count = 0;", "+\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getText(event);", "+\t\t}", "+\t\tif (event.result != null) {", "+\t\t\tObject[] eventData = new Object[] {", "+\t\t\t\t\tnew Integer(type),", "+\t\t\t\t\tnew Integer(startIndex),", "+\t\t\t\t\tnew Integer(startIndex + length),", "+\t\t\t\t\tevent.result};", "+\t\t\tsendEvent(ACC.EVENT_TEXT_CHANGED, eventData);", "+\t\t\treturn;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "447b627c4bf07cec9016cf6dc047cbf6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "d8d3e8f612b1662e51aaeb1aba1b797cad6504c1", "commitAfterChange": "a2a2b61ca97ad1454fa39c9d961ae445a63a1a20", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tid getDescriptionAttribute (int childID)", "signatureAfterChange": " \t \tid getDescriptionAttribute (int childID)", "diff": ["-\t\t\tfor (int i = 0; i < accessibleListeners.size(); i++) {", "-\t\t\t\tAccessibleListener listener = (AccessibleListener) accessibleListeners.elementAt(i);", "-\t\t\t\tlistener.getName(event);", "-\t\t\t}", "-", "-\t\t\treturnValue = (event.result != null ? NSString.stringWith(event.result) : null);", "-", "-\t\t\t// If that failed and we are a composite or a canvas return a blank string -- otherwise, let the", "-\t\t\t// Cocoa control handle it.", "-\t\t\tif (returnValue == null) {", "-\t\t\t\tif (control instanceof Composite) returnValue = NSString.stringWith(\"\");", "-\t\t\t}", "+\t\t\tif (control instanceof Composite) returnValue = NSString.stringWith(\"\");"]}], "num": 51770}