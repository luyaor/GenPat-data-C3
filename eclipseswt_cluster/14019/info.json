{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d4fbfefc441734fa20d7bc67439de10", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fe49a3c3ec1cba2a74eb79765f2d244", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d5cf1c396dd6fc70c2ff1691fe757ac2af91424f", "commitAfterChange": "6d82b41e49943a9b4edcc7793f7d74b1be0c636a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void init(Device device, ImageData image)", "signatureAfterChange": "  void init(Device device, ImageData image)", "diff": ["-\t\tif (device.useXRender && (alpha != -1 || alphaData != null)) {", "-\t\t\tmask = OS.gdk_pixmap_new(0, alpha != -1 ? 1 : width, alpha != -1 ? 1 : height, 8);", "-\t\t\tif (mask == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tint /*long*/ gc = OS.gdk_gc_new(mask);", "-\t\t\tif (alpha != -1) {", "-\t\t\t\tGdkColor color = new GdkColor();", "-\t\t\t\tcolor.pixel = (alpha & 0xFF) << 8 | (alpha & 0xFF);", "-\t\t\t\tOS.gdk_gc_set_foreground(gc, color);", "-\t\t\t\tOS.gdk_draw_rectangle(mask, gc, 1, 0, 0, 1, 1);", "-\t\t\t} else {", "-\t\t\t\tint /*long*/ imagePtr = OS.gdk_drawable_get_image(mask, 0, 0, width, height);", "-\t\t\t\tif (imagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\tGdkImage gdkImage = new GdkImage();", "-\t\t\t\tOS.memmove(gdkImage, imagePtr);", "-\t\t\t\tif (gdkImage.bpl == width) {", "-\t\t\t\t\tOS.memmove(gdkImage.mem, alphaData, alphaData.length);", "-\t\t\t\t} else {", "-\t\t\t\t\tbyte[] line = new byte[gdkImage.bpl];", "-\t\t\t\t\tfor (int y = 0; y < height; y++) {", "-\t\t\t\t\t\tSystem.arraycopy(alphaData, width * y, line, 0, width);", "-\t\t\t\t\t\tOS.memmove(gdkImage.mem + (gdkImage.bpl * y), line, gdkImage.bpl);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.gdk_draw_image(mask, gc, imagePtr, 0, 0, 0, 0, width, height);", "-\t\t\t\tOS.g_object_unref(imagePtr);", "-\t\t\t}\t\t", "-\t\t\tOS.g_object_unref(gc);", "-\t\t}", "+\t\tcreateAlphaMask(width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ed90f5c8f371c54ac3b98743869934", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d5cf1c396dd6fc70c2ff1691fe757ac2af91424f", "commitAfterChange": "6d82b41e49943a9b4edcc7793f7d74b1be0c636a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " void init(Device device, ImageData image)", "signatureAfterChange": " void init(Device device, ImageData image)", "diff": ["-\t\tif (device.useXRender && (alpha != -1 || alphaData != null)) {", "-\t\t\tmask = OS.XCreatePixmap(xDisplay, drawable, alpha != -1 ? 1 : image.width, alpha != -1 ? 1 : image.height, 8);", "-\t\t\tif (mask == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tgc = OS.XCreateGC(xDisplay, mask, 0, null);", "-\t\t\tif (alpha != -1) {", "-\t\t\t\tOS.XSetForeground(xDisplay, gc, (alpha & 0xFF) << 8 | (alpha & 0xFF));", "-\t\t\t\tOS.XFillRectangle(xDisplay, mask, gc, 0, 0, 1, 1);", "-\t\t\t} else {", "-\t\t\t\tint imagePtr = OS.XGetImage(xDisplay, mask, 0, 0, image.width, image.height, OS.AllPlanes, OS.ZPixmap);", "-\t\t\t\tXImage xImage = new XImage();", "-\t\t\t\tOS.memmove(xImage, imagePtr, XImage.sizeof);", "-\t\t\t\tif (xImage.bytes_per_line == image.width) {", "-\t\t\t\t\tOS.memmove(xImage.data, alphaData, alphaData.length);", "-\t\t\t\t} else {", "-\t\t\t\t\tbyte[] line = new byte[xImage.bytes_per_line];", "-\t\t\t\t\tfor (int y = 0; y < image.height; y++) {", "-\t\t\t\t\t\tSystem.arraycopy(alphaData, image.width * y, line, 0, image.width);", "-\t\t\t\t\t\tOS.memmove(xImage.data + (xImage.bytes_per_line * y), line, xImage.bytes_per_line);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.XPutImage(xDisplay, mask, gc, imagePtr, 0, 0, 0, 0, image.width, image.height);", "-\t\t\t\tOS.XDestroyImage(imagePtr);", "-\t\t\t}\t\t\t", "-\t\t\tOS.XFreeGC(xDisplay, gc);", "-\t\t}", "+\t\tcreateAlphaMask(image.width, image.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2424e25ac11be95987d7be5559a51773", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d5cf1c396dd6fc70c2ff1691fe757ac2af91424f", "commitAfterChange": "6d82b41e49943a9b4edcc7793f7d74b1be0c636a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Image(Device device, String filename)", "signatureAfterChange": " public Image(Device device, String filename)", "diff": ["-\t\t\t\tif (device.useXRender) {", "-\t\t\t\t\tmask = OS.gdk_pixmap_new(0, width, height, 8);", "-\t\t\t\t\tif (mask == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\t\tGdkImage gdkImage = new GdkImage();", "-\t\t\t\t\tint /*long*/ imagePtr = OS.gdk_drawable_get_image(mask, 0, 0, width, height);", "-\t\t\t\t\tif (imagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\t\tOS.memmove(gdkImage, imagePtr);", "-\t\t\t\t\tif (gdkImage.bpl == width) {", "-\t\t\t\t\t\tOS.memmove(gdkImage.mem, alphaData, alphaData.length);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tline = new byte[gdkImage.bpl];", "-\t\t\t\t\t\tfor (int y = 0; y < height; y++) {", "-\t\t\t\t\t\t\tSystem.arraycopy(alphaData, width * y, line, 0, width);", "-\t\t\t\t\t\t\tOS.memmove(gdkImage.mem + (gdkImage.bpl * y), line, gdkImage.bpl);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tint /*long*/ gc = OS.gdk_gc_new(mask);", "-\t\t\t\t\tif (gc == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\t\tOS.gdk_draw_image(mask, gc, imagePtr, 0, 0, 0, 0, width, height);", "-\t\t\t\t\tOS.g_object_unref(imagePtr);", "-\t\t\t\t\tOS.g_object_unref(gc);", "-\t\t\t\t}", "+\t\t\t\tcreateAlphaMask(width, height);", "+}"]}], "num": 14019}