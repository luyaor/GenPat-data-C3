{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29849d295900090ca599ff449258a63c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d263c2f71347daf3905ee71264d92b17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public void test_setSelectionI()", "signatureAfterChange": "  public void test_setSelectionI()", "diff": ["-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0963a4afe3abc507da807a2ffdc66fea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test_removeII()", "signatureAfterChange": "  public void test_removeII()", "diff": ["-\tassertEquals(new TableItem[]{items[0], items[1], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[4]}, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(new TableItem[] {items[0], items[1]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[0], items[1]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getItems());", "-\tassertEquals(new TableItem[] {}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {}, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(new TableItem[]{items[0], items[1], items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[]{items[1], items[2], items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[1], items[2], items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[]{items[0], items[1], items[2], items[3]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[2], items[3]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[3], items[4]}, table.getItems());"]}], "num": 43651}