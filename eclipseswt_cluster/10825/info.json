{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d3e72e658cf911333ddb8ec70f58508", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47d0300ad1fdf42440af0aec0bc40719", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Tree(Composite parent, int style)", "signatureAfterChange": "  public Tree (Composite parent, int style)", "diff": ["+", "+public Tree (Composite parent, int style) {", "+\tsuper (parent, checkStyle (style | SWT.H_SCROLL | SWT.V_SCROLL | SWT.NO_REDRAW_RESIZE));", "+\tDisplay display = getDisplay ();", "+\tsetForeground (display.getSystemColor (SWT.COLOR_LIST_FOREGROUND));", "+\tsetBackground (display.getSystemColor (SWT.COLOR_LIST_BACKGROUND));", "+\tGC gc = new GC (this);", "+\tfontHeight = gc.getFontMetrics ().getHeight ();", "+\tgc.dispose ();", "+\titemHeight = fontHeight + (2 * getCellPadding ());", "+\tif (LineColor == null) {", "+\t\tLineColor = display.getSystemColor (SWT.COLOR_BLACK);", "+\t\tHighlightShadowColor = display.getSystemColor (SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW);", "+\t\tNormalShadowColor = display.getSystemColor (SWT.COLOR_WIDGET_NORMAL_SHADOW);", "+\t\tResizeCursor = display.getSystemCursor (SWT.CURSOR_SIZEWE);", "+\t}", "+", "+\tListener listener = new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\thandleEvents (event);", "+\t\t}", "+\t};", "+\taddListener (SWT.Paint, listener);", "+\taddListener (SWT.MouseDown, listener);", "+\taddListener (SWT.MouseUp, listener);", "+\taddListener (SWT.MouseDoubleClick, listener);", "+\taddListener (SWT.Dispose, listener);\t", "+\taddListener (SWT.Resize, listener);", "+\taddListener (SWT.KeyDown, listener);", "+\taddListener (SWT.FocusOut, listener);", "+\taddListener (SWT.FocusIn, listener);", "+\taddListener (SWT.Traverse, listener);", "+\theader = new Canvas (this, SWT.NO_REDRAW_RESIZE | SWT.NO_FOCUS);", "+\theader.setVisible (false);", "+\theader.setLocation (0,0);", "+\theader.addListener (SWT.Paint, listener);", "+\theader.addListener (SWT.MouseDown, listener);", "+\theader.addListener (SWT.MouseUp, listener);", "+\theader.addListener (SWT.MouseMove, listener);", "+\theader.addListener (SWT.MouseExit, listener);", "+", "+\tScrollBar vBar = getVerticalBar ();", "+\tvBar.setMaximum (1);", "+\tvBar.addListener (SWT.Selection, listener);", "+\tScrollBar hBar = getHorizontalBar ();", "+\thBar.addListener (SWT.Selection, listener);", "+\thBar.setMaximum (1);", "+}", "- */", "-public Tree(Composite parent, int style) {", "-\tsuper(parent, checkStyle (style));", "-\tCONNECTOR_LINE_COLOR = new Color(display, 170, 170, 170);\t// Light gray;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43cb1bbe64d068d6a0312da495cc9e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Table(Composite parent, int style)", "signatureAfterChange": "  public Table (Composite parent, int style)", "diff": ["+", "+public Table (Composite parent, int style) {", "+\tsuper (parent, checkStyle (style | SWT.H_SCROLL | SWT.V_SCROLL | SWT.NO_REDRAW_RESIZE));", "+\tsetForeground (display.getSystemColor (SWT.COLOR_LIST_FOREGROUND));", "+\tsetBackground (display.getSystemColor (SWT.COLOR_LIST_BACKGROUND));", "+\tGC gc = new GC (this);", "+\tfontHeight = gc.getFontMetrics ().getHeight ();", "+\tgc.dispose ();", "+\titemHeight = fontHeight + (2 * getCellPadding ());", "+\tinitImages (display);", "+\tcheckboxBounds = getUncheckedImage ().getBounds ();", "- */", "-public Table(Composite parent, int style) {", "-\t// use NO_REDRAW_RESIZE to avoid flashing during widget resize redraw", "-\tsuper(parent, checkStyle(style| SWT.NO_REDRAW_RESIZE));", "-}", "+\tListener listener = new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\thandleEvents (event);", "+\t};", "+\taddListener (SWT.Paint, listener);", "+\taddListener (SWT.MouseDown, listener);", "+\taddListener (SWT.MouseUp, listener);", "+\taddListener (SWT.MouseDoubleClick, listener);", "+\taddListener (SWT.Dispose, listener);\t", "+\taddListener (SWT.Resize, listener);", "+\taddListener (SWT.KeyDown, listener);", "+\taddListener (SWT.FocusOut, listener);", "+\taddListener (SWT.FocusIn, listener);", "+\taddListener (SWT.Traverse, listener);", "+\theader = new Canvas (this, SWT.NO_REDRAW_RESIZE | SWT.NO_FOCUS);", "+\theader.setVisible (false);", "+\theader.setLocation (0,0);", "+\theader.addListener (SWT.Paint, listener);", "+\theader.addListener (SWT.MouseDown, listener);", "+\theader.addListener (SWT.MouseUp, listener);", "+\theader.addListener (SWT.MouseMove, listener);", "+\theader.addListener (SWT.MouseExit, listener);", "+\tScrollBar vBar = getVerticalBar ();", "+\tScrollBar hBar = getHorizontalBar ();", "+\tvBar.setValues (0, 0, 1, 1, 1, 1);", "+\thBar.setValues (0, 0, 1, 1, 1, 1);", "+\tvBar.setVisible (false);", "+\thBar.setVisible (false);", "+\tvBar.addListener (SWT.Selection, listener);", "+\thBar.addListener (SWT.Selection, listener);"]}], "num": 10825}