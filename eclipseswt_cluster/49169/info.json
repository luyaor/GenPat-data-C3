{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e76ae35a179b81cc56c9c58646adb462", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb57d915404182be9ead4ec910382637", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tvoid resetEditors (boolean tab)", "signatureAfterChange": " \t \tvoid resetEditors(boolean tab)", "diff": ["-\tvoid resetEditors (boolean tab) {", "-\t\tTableItem oldItem = comboEditor.getItem ();", "-\t\tif (oldItem != null) {", "-\t\t\tint row = table.indexOf (oldItem);", "-\t\t\ttry {", "-\t\t\t\tnew Integer (widthText.getText ()).intValue ();", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\twidthText.setText (oldItem.getText (WIDTH_COL));", "+\tvoid resetEditors(boolean tab) {", "+\t\tTableItem oldItem = comboEditor.getItem();", "+\t\tif(oldItem != null) {", "+\t\t\tint row = table.indexOf(oldItem);", "+\t\t\t/** Make sure user enters a valid data*/", "+\t\t\ttry {\t\t\t\t", "+\t\t\t\tnew String(nameText.getText ());", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\tnameText.setText(oldItem.getText (NAME_COL));", "-\t\t\t\tnew Integer (heightText.getText ()).intValue ();", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\theightText.setText (oldItem.getText (HEIGHT_COL));", "+\t\t\t\tnew Integer(widthText.getText()).intValue();", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\twidthText.setText(oldItem.getText(WIDTH_COL));", "-\t\t\t\tnew Integer (hIndent.getText ()).intValue ();", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\thIndent.setText (oldItem.getText (HINDENT_COL));", "+\t\t\t\tnew Integer(heightText.getText()).intValue();", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\theightText.setText(oldItem.getText(HEIGHT_COL));", "-\t\t\t\tnew Integer (hSpan.getText ()).intValue ();", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\thSpan.setText (oldItem.getText (HSPAN_COL));", "+\t\t\t\tnew Integer(hIndent.getText()).intValue();", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\thIndent.setText(oldItem.getText(HINDENT_COL));", "-\t\t\t\tnew Integer (vSpan.getText ()).intValue ();", "-\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\tvSpan.setText (oldItem.getText (VSPAN_COL));", "+\t\t\t\tnew Integer(hSpan.getText()).intValue();", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\thSpan.setText(oldItem.getText(HSPAN_COL));", "-\t\t\tString [] insert = new String [] {", "-\t\t\t\tString.valueOf (row), combo.getText (), widthText.getText (), heightText.getText (),", "-\t\t\t\thAlign.getText (), vAlign.getText (), hIndent.getText (), ", "-\t\t\t\thSpan.getText (), vSpan.getText (), hGrab.getText (), vGrab.getText ()", "+\t\t\ttry {", "+\t\t\t\tnew Integer(vSpan.getText()).intValue();", "+\t\t\t} catch(NumberFormatException e) {", "+\t\t\t\tvSpan.setText(oldItem.getText(VSPAN_COL));", "+\t\t\t}", "+\t\t\tString[] insert = new String[] {", "+\t\t\t\tnameText.getText(), combo.getText(), widthText.getText(), heightText.getText(),", "+\t\t\t\thAlign.getText(), vAlign.getText(), hIndent.getText(), ", "+\t\t\t\thSpan.getText(), vSpan.getText(), hGrab.getText(), vGrab.getText()", "-\t\t\tdata.setElementAt (insert, row);", "-\t\t\tfor (int i = 0; i < TOTAL_COLS; i++) {", "-\t\t\t\toldItem.setText (i, ((String [])data.elementAt (row)) [i]);", "+\t\t\tdata.setElementAt(insert, row);", "+\t\t\tfor(int i = 0; i < TOTAL_COLS; i++) {", "+\t\t\t\toldItem.setText(i, ((String[])data.elementAt(row))[i]);", "-\t\t\tif (!tab) disposeEditors ();", "+\t\t\tif(!tab) disposeEditors();", "-\t\tsetLayoutState ();\t\t", "-\t\trefreshLayoutComposite ();", "-\t\tsetLayoutData ();", "-\t\tlayoutComposite.layout (true);", "-\t\tlayoutGroup.layout (true);", "+\t\tsetLayoutState();\t\t", "+\t\trefreshLayoutComposite();", "+\t\tsetLayoutData();", "+\t\tlayoutComposite.layout(true);", "+\t\tlayoutGroup.layout(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21d184f965d0f9a4e354a7ec8fe55dc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid setLayoutData ()", "signatureAfterChange": " \tvoid setLayoutData()", "diff": ["-\tvoid setLayoutData () {", "-\t\tControl [] children = layoutComposite.getChildren ();", "-\t\tTableItem [] items = table.getItems ();", "+\tvoid setLayoutData() {", "+\t\tControl[] children = layoutComposite.getChildren();", "+\t\tTableItem[] items = table.getItems();", "-\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\tdata = new GridData ();", "+\t\tfor(int i = 0; i < children.length; i++) {", "+\t\t\tdata = new GridData();", "-\t\t\tdata.widthHint = new Integer (items [i].getText (WIDTH_COL)).intValue ();", "-\t\t\tdata.heightHint = new Integer (items [i].getText (HEIGHT_COL)).intValue ();", "+\t\t\tdata.widthHint = new Integer(items [i].getText(WIDTH_COL)).intValue();", "+\t\t\tdata.heightHint = new Integer(items [i].getText(HEIGHT_COL)).intValue();", "-\t\t\thAlign = items [i].getText (HALIGN_COL);", "-\t\t\tif (hAlign.equals (\"CENTER\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.CENTER;", "-\t\t\t} else if (hAlign.equals (\"END\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.END;", "-\t\t\t} else if (hAlign.equals (\"FILL\")) {", "-\t\t\t\tdata.horizontalAlignment = GridData.FILL;", "+\t\t\thAlign = items[i].getText(HALIGN_COL);", "+\t\t\tif (hAlign.equals(\"CENTER\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.CENTER;", "+\t\t\t} else if(hAlign.equals(\"END\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.END;", "+\t\t\t} else if(hAlign.equals(\"FILL\")) {", "+\t\t\t\tdata.horizontalAlignment = SWT.FILL;", "-\t\t\t\tdata.horizontalAlignment = GridData.BEGINNING;", "+\t\t\t\tdata.horizontalAlignment = SWT.BEGINNING;", "-\t\t\tvAlign = items [i].getText (VALIGN_COL);", "-\t\t\tif (vAlign.equals (\"BEGINNING\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.BEGINNING;", "-\t\t\t} else if (vAlign.equals (\"END\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.END;", "-\t\t\t} else if (vAlign.equals (\"FILL\")) {", "-\t\t\t\tdata.verticalAlignment = GridData.FILL;", "+\t\t\tvAlign = items [i].getText(VALIGN_COL);", "+\t\t\tif (vAlign.equals(\"BEGINNING\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.BEGINNING;", "+\t\t\t} else if (vAlign.equals(\"END\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.END;", "+\t\t\t} else if (vAlign.equals(\"FILL\")) {", "+\t\t\t\tdata.verticalAlignment = SWT.FILL;", "-\t\t\t\tdata.verticalAlignment = GridData.CENTER;", "+\t\t\t\tdata.verticalAlignment = SWT.CENTER;", "-\t\t\thIndent = new Integer (items [i].getText (HINDENT_COL)).intValue ();", "+\t\t\thIndent = new Integer(items[i].getText(HINDENT_COL)).intValue();", "-\t\t\thSpan = new Integer (items [i].getText (HSPAN_COL)).intValue ();", "+\t\t\thSpan = new Integer(items [i].getText(HSPAN_COL)).intValue();", "-\t\t\tvSpan = new Integer (items [i].getText (VSPAN_COL)).intValue ();", "+\t\t\tvSpan = new Integer(items[i].getText(VSPAN_COL)).intValue();", "-\t\t\thGrab = items [i].getText (HGRAB_COL);", "-\t\t\tif (hGrab.equals (\"true\")) {", "+\t\t\thGrab = items[i].getText(HGRAB_COL);", "+\t\t\tif(hGrab.equals(\"true\")) {", "-\t\t\tvGrab = items [i].getText (VGRAB_COL);", "-\t\t\tif (vGrab.equals (\"true\")) {", "+\t\t\tvGrab = items [i].getText(VGRAB_COL);", "+\t\t\tif (vGrab.equals(\"true\")) {", "-\t\t\tchildren [i].setLayoutData (data);", "+\t\t\tchildren[i].setLayoutData (data);"]}], "num": 49169}