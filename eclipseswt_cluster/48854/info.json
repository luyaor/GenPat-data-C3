{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d31a1930f8e161b856fc3462f547cb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8621b9d00366418fe589813d6f16b03c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "f49332c775fa13aa2d8bdf58dbda00cc4dbee67f", "commitAfterChange": "e19f3ee2e5f1fa5577672314ef96ca3ab839cf03", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "signatureAfterChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "diff": ["-\t\tif (oldFile.isFile()) {\r", "+\t\tif (oldFile.isDirectory()) {\r", "+\t\t\t/*\r", "+\t\t\t * Copy a directory\r", "+\t\t\t */\r", "+\t\t\tif (simulateOnly) {\r", "+\t\t\t\tSystem.out.println(getResourceString(\"simulate.DirectoriesCreated.text\",\r", "+\t\t\t\t\tnew Object[] { newFile.getPath() }));\r", "+\t\t\t} else {\r", "+\t\t\t\tif (! newFile.mkdirs()) return false;\r", "+\t\t\t}\r", "+\t\t\tFile[] subFiles = oldFile.listFiles();\r", "+\t\t\tif (subFiles != null) {\r", "+\t\t\t\tfor (int i = 0; i < subFiles.length; i++) {\r", "+\t\t\t\t\tFile oldSubFile = subFiles[i];\r", "+\t\t\t\t\tFile newSubFile = new File(newFile, oldSubFile.getName());\r", "+\t\t\t\t\tif (! copyFileStructure(oldSubFile, newSubFile)) return false;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} else {\r", "-\t\t\treturn true;\r", "-\t\t} else if (oldFile.isDirectory()) {\r", "-\t\t\t/*\r", "-\t\t\t * Copy a directory\r", "-\t\t\t */\r", "-\t\t\tif (simulateOnly) {\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.DirectoriesCreated.text\",\r", "-\t\t\t\t\tnew Object[] { newFile.getPath() }));\r", "-\t\t\t} else {\r", "-\t\t\t\tif (! newFile.mkdirs()) return false;\r", "-\t\t\t}\r", "-\t\t\tFile[] subFiles = oldFile.listFiles();\r", "-\t\t\tif (subFiles != null) {\r", "-\t\t\t\tfor (int i = 0; i < subFiles.length; i++) {\r", "-\t\t\t\t\tFile oldSubFile = subFiles[i];\r", "-\t\t\t\t\tFile newSubFile = new File(newFile, oldSubFile.getName());\r", "-\t\t\t\t\tif (! copyFileStructure(oldSubFile, newSubFile)) return false;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\t/*\r", "-\t\t\t * Unknown type\r", "-\t\t\t */\r", "-\t\t\tif (simulateOnly) {\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.UnknownResource.text\",\r", "-\t\t\t\t\tnew Object[] { oldFile.getPath() }));\r", "-\t\t\t}\r", "-\t\t\treturn false; // error we don't know how to copy this\r", "+\t\treturn true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af196a0f96a6691534e0c72ba62e0fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "f49332c775fa13aa2d8bdf58dbda00cc4dbee67f", "commitAfterChange": "e19f3ee2e5f1fa5577672314ef96ca3ab839cf03", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "signatureAfterChange": "\r \tboolean copyFileStructure(File oldFile, File newFile)", "diff": ["-\t\tif (oldFile.isFile()) {\r", "+\t\tif (oldFile.isDirectory()) {\r", "+\t\t\t/*\r", "+\t\t\t * Copy a directory\r", "+\t\t\t */\r", "+\t\t\tif (simulateOnly) {\r", "+\t\t\t\tSystem.out.println(getResourceString(\"simulate.DirectoriesCreated.text\",\r", "+\t\t\t\t\tnew Object[] { newFile.getPath() }));\r", "+\t\t\t} else {\r", "+\t\t\t\tif (! newFile.mkdirs()) return false;\r", "+\t\t\t}\r", "+\t\t\tFile[] subFiles = oldFile.listFiles();\r", "+\t\t\tif (subFiles != null) {\r", "+\t\t\t\tfor (int i = 0; i < subFiles.length; i++) {\r", "+\t\t\t\t\tFile oldSubFile = subFiles[i];\r", "+\t\t\t\t\tFile newSubFile = new File(newFile, oldSubFile.getName());\r", "+\t\t\t\t\tif (! copyFileStructure(oldSubFile, newSubFile)) return false;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} else {\r", "-\t\t\treturn true;\r", "-\t\t} else if (oldFile.isDirectory()) {\r", "-\t\t\t/*\r", "-\t\t\t * Copy a directory\r", "-\t\t\t */\r", "-\t\t\tif (simulateOnly) {\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.DirectoriesCreated.text\",\r", "-\t\t\t\t\tnew Object[] { newFile.getPath() }));\r", "-\t\t\t} else {\r", "-\t\t\t\tif (! newFile.mkdirs()) return false;\r", "-\t\t\t}\r", "-\t\t\tFile[] subFiles = oldFile.listFiles();\r", "-\t\t\tif (subFiles != null) {\r", "-\t\t\t\tfor (int i = 0; i < subFiles.length; i++) {\r", "-\t\t\t\t\tFile oldSubFile = subFiles[i];\r", "-\t\t\t\t\tFile newSubFile = new File(newFile, oldSubFile.getName());\r", "-\t\t\t\t\tif (! copyFileStructure(oldSubFile, newSubFile)) return false;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\treturn true;\r", "-\t\t} else {\r", "-\t\t\t/*\r", "-\t\t\t * Unknown type\r", "-\t\t\t */\r", "-\t\t\tif (simulateOnly) {\r", "-\t\t\t\tSystem.out.println(getResourceString(\"simulate.UnknownResource.text\",\r", "-\t\t\t\t\tnew Object[] { oldFile.getPath() }));\r", "-\t\t\t}\r", "-\t\t\treturn false; // error we don't know how to copy this\r", "+\t\treturn true;\r"]}], "num": 48854}