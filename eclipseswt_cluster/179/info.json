{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7974e2517798e7cd386bb848fd5ff5b8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7c1d4a1e483222adbcc440341266d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "0317ba6a815f207c70e5fda4d9b59938d7524871", "commitAfterChange": "52cc9f66dc2d916f415347f67eda980737e233af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-\t// Limit drawing area of tab", "-\tRegion r = new Region();", "-\tr.subtract(r); //clear", "-\tRegion clipping = new Region();", "-\tgc.getClipping(clipping);", "-\tr.add(clipping);", "-\tr.intersect(new Rectangle(x, y, Math.min(width, rightTabEdge-x), height));", "-\tgc.setClipping(r);", "-", "-\t// draw Image", "-\tint xDraw = x + LEFT_MARGIN;", "-\tImage image = getImage();", "-\tif (image != null) {", "-\t\tRectangle imageBounds = image.getBounds();", "-\t\tint imageX = xDraw;", "-\t\tint imageHeight = imageBounds.height;", "-\t\tint imageY = y + (height - imageHeight) / 2;", "-\t\timageY += parent.onBottom ? -1 : 1;", "-\t\tint imageWidth = imageBounds.width * imageHeight / imageBounds.height;", "-\t\tgc.drawImage(image, ", "-\t\t\t         imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height,", "-\t\t\t         imageX, imageY, imageWidth, imageHeight);", "-\t\txDraw += imageWidth + INTERNAL_SPACING;", "+\tif (x < rightTabEdge) {", "+\t\t// Limit drawing area of tab", "+\t\tRegion r = new Region();", "+\t\tr.subtract(r); //clear", "+\t\tRegion clipping = new Region();", "+\t\tgc.getClipping(clipping);", "+\t\tr.add(clipping);", "+\t\tr.intersect(new Rectangle(x, y, Math.min(width, rightTabEdge-x), height));", "+\t\tgc.setClipping(r);", "+\t", "+\t\t// draw Image", "+\t\tint xDraw = x + LEFT_MARGIN;", "+\t\tImage image = getImage();", "+\t\tif (image != null) {", "+\t\t\tRectangle imageBounds = image.getBounds();", "+\t\t\tint imageX = xDraw;", "+\t\t\tint imageHeight = imageBounds.height;", "+\t\t\tint imageY = y + (height - imageHeight) / 2;", "+\t\t\timageY += parent.onBottom ? -1 : 1;", "+\t\t\tint imageWidth = imageBounds.width * imageHeight / imageBounds.height;", "+\t\t\tgc.drawImage(image, ", "+\t\t\t\t         imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height,", "+\t\t\t\t         imageX, imageY, imageWidth, imageHeight);", "+\t\t\txDraw += imageWidth + INTERNAL_SPACING;", "+\t\t}", "+\t\t", "+\t\t// draw Text", "+\t\tint textWidth = x + width - xDraw - RIGHT_MARGIN;", "+\t\tif (closeRect.width > 0) textWidth -= closeRect.width + INTERNAL_SPACING;", "+\t\tif (shortenedText == null || shortenedTextWidth != textWidth) {", "+\t\t\tshortenedText = shortenText(gc, getText(), textWidth);", "+\t\t\tshortenedTextWidth = textWidth;", "+\t\t}", "+\t\tPoint extent = gc.textExtent(shortenedText, FLAGS);\t", "+\t\tint textY = y + (height - extent.y) / 2;", "+\t\ttextY += parent.onBottom ? -1 : 1;", "+\t\t", "+\t\tgc.setForeground(parent.selectionForeground);", "+\t\tgc.drawText(shortenedText, xDraw, textY, FLAGS);", "+\t\t", "+\t\tif (parent.showClose || showClose) drawClose(gc);", "+\t\t", "+\t\t// draw a Focus rectangle", "+\t\tif (parent.isFocusControl()) {", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "+\t\t\tgc.drawFocus(xDraw-3, textY-2, extent.x+6, extent.y+4);", "+\t\t}", "+\t\t", "+\t\tgc.setClipping(clipping);", "+\t\tr.dispose();", "+\t\tclipping.dispose();", "-\t", "-\t// draw Text", "-\tint textWidth = x + width - xDraw - RIGHT_MARGIN;", "-\tif (closeRect.width > 0) textWidth -= closeRect.width + INTERNAL_SPACING;", "-\tif (shortenedText == null || shortenedTextWidth != textWidth) {", "-\t\tshortenedText = shortenText(gc, getText(), textWidth);", "-\t\tshortenedTextWidth = textWidth;", "-\t}", "-\tPoint extent = gc.textExtent(shortenedText, FLAGS);\t", "-\tint textY = y + (height - extent.y) / 2;", "-\ttextY += parent.onBottom ? -1 : 1;", "-\t", "-\tgc.setForeground(parent.selectionForeground);", "-\tgc.drawText(shortenedText, xDraw, textY, FLAGS);", "-\t", "-\tif (parent.showClose || showClose) drawClose(gc);", "-\t", "-\t// draw a Focus rectangle", "-\tif (parent.isFocusControl()) {", "-\t\tDisplay display = getDisplay();", "-\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "-\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "-\t\tgc.drawFocus(xDraw-3, textY-2, extent.x+6, extent.y+4);", "-\t}", "-\t", "-\tgc.setClipping(clipping);", "-\tr.dispose();", "-\tclipping.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e4a68c8c761b86c6f2a70479da169d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "0317ba6a815f207c70e5fda4d9b59938d7524871", "commitAfterChange": "52cc9f66dc2d916f415347f67eda980737e233af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-\t// Limit drawing area of tab", "-\tRegion r = new Region();", "-\tr.subtract(r); //clear", "-\tRegion clipping = new Region();", "-\tgc.getClipping(clipping);", "-\tr.add(clipping);", "-\tr.intersect(new Rectangle(x, y, Math.min(width, rightTabEdge-x), height));", "-\tgc.setClipping(r);", "-", "-\t// draw Image", "-\tint xDraw = x + LEFT_MARGIN;", "-\tImage image = getImage();", "-\tif (image != null) {", "-\t\tRectangle imageBounds = image.getBounds();", "-\t\tint imageX = xDraw;", "-\t\tint imageHeight = imageBounds.height;", "-\t\tint imageY = y + (height - imageHeight) / 2;", "-\t\timageY += parent.onBottom ? -1 : 1;", "-\t\tint imageWidth = imageBounds.width * imageHeight / imageBounds.height;", "-\t\tgc.drawImage(image, ", "-\t\t\t         imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height,", "-\t\t\t         imageX, imageY, imageWidth, imageHeight);", "-\t\txDraw += imageWidth + INTERNAL_SPACING;", "+\tif ( x < rightTabEdge) {", "+\t\t// Limit drawing area of tab", "+\t\tRegion r = new Region();", "+\t\tr.subtract(r); //clear", "+\t\tRegion clipping = new Region();", "+\t\tgc.getClipping(clipping);", "+\t\tr.add(clipping);", "+\t\tr.intersect(new Rectangle(x, y, Math.min(width, rightTabEdge-x), height));", "+\t\tgc.setClipping(r);", "+\t", "+\t\t// draw Image", "+\t\tint xDraw = x + LEFT_MARGIN;", "+\t\tImage image = getImage();", "+\t\tif (image != null) {", "+\t\t\tRectangle imageBounds = image.getBounds();", "+\t\t\tint imageX = xDraw;", "+\t\t\tint imageHeight = imageBounds.height;", "+\t\t\tint imageY = y + (height - imageHeight) / 2;", "+\t\t\timageY += parent.onBottom ? -1 : 1;", "+\t\t\tint imageWidth = imageBounds.width * imageHeight / imageBounds.height;", "+\t\t\tgc.drawImage(image, ", "+\t\t\t\t         imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height,", "+\t\t\t\t         imageX, imageY, imageWidth, imageHeight);", "+\t\t\txDraw += imageWidth + INTERNAL_SPACING;", "+\t\t}", "+\t\t", "+\t\t// draw Text", "+\t\tint textWidth = x + width - xDraw - RIGHT_MARGIN;", "+\t\tif (closeRect.width > 0) textWidth -= closeRect.width + INTERNAL_SPACING;", "+\t\tif (shortenedText == null || shortenedTextWidth != textWidth) {", "+\t\t\tshortenedText = shortenText(gc, getText(), textWidth);", "+\t\t\tshortenedTextWidth = textWidth;", "+\t\t}", "+\t\tPoint extent = gc.textExtent(shortenedText, FLAGS);\t", "+\t\tint textY = y + (height - extent.y) / 2;", "+\t\ttextY += parent.onBottom ? -1 : 1;", "+\t\t", "+\t\tgc.setForeground(parent.selectionForeground);", "+\t\tgc.drawText(shortenedText, xDraw, textY, FLAGS);", "+\t\t", "+\t\tif (parent.showClose || showClose) drawClose(gc);", "+\t\t", "+\t\t// draw a Focus rectangle", "+\t\tif (parent.isFocusControl()) {", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "+\t\t\tgc.drawFocus(xDraw-3, textY-2, extent.x+6, extent.y+4);", "+\t\t}", "+\t\t", "+\t\tgc.setClipping(clipping);", "+\t\tr.dispose();", "+\t\tclipping.dispose();", "-\t", "-\t// draw Text", "-\tint textWidth = x + width - xDraw - RIGHT_MARGIN;", "-\tif (closeRect.width > 0) textWidth -= closeRect.width + INTERNAL_SPACING;", "-\tif (shortenedText == null || shortenedTextWidth != textWidth) {", "-\t\tshortenedText = shortenText(gc, getText(), textWidth);", "-\t\tshortenedTextWidth = textWidth;", "-\t}", "-\tPoint extent = gc.textExtent(shortenedText, FLAGS);\t", "-\tint textY = y + (height - extent.y) / 2;", "-\ttextY += parent.onBottom ? -1 : 1;", "-\t", "-\tgc.setForeground(parent.selectionForeground);", "-\tgc.drawText(shortenedText, xDraw, textY, FLAGS);", "-\t", "-\tif (parent.showClose || showClose) drawClose(gc);", "-\t", "-\t// draw a Focus rectangle", "-\tif (parent.isFocusControl()) {", "-\t\tDisplay display = getDisplay();", "-\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "-\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "-\t\tgc.drawFocus(xDraw-3, textY-2, extent.x+6, extent.y+4);", "-\t}", "-\t", "-\tgc.setClipping(clipping);", "-\tr.dispose();", "-\tclipping.dispose();"]}], "num": 179}