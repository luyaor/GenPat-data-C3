{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da10fc9ca98bc39583626a9d444120d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b19f955bebf172d12a23abfdb6d70cda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "signatureAfterChange": "  void drawWidget (long id, NSGraphicsContext context, NSRect rect)", "diff": ["-void drawWidget (int /*long*/ id, NSGraphicsContext context, NSRect rect) {", "+void drawWidget (long /*int*/ id, NSGraphicsContext context, NSRect rect) {", "-\t\tint /*long*/ ctx = context.graphicsPort();", "+\t\tlong /*int*/ ctx = context.graphicsPort();", "-\t\t \tint /*long*/ data = rep.bitmapData();", "-\t\t\tint /*long*/ format = rep.bitmapFormat();", "-\t\t \tint /*long*/ bpr = rep.bytesPerRow();", "+\t\t \tlong /*int*/ data = rep.bitmapData();", "+\t\t\tlong /*int*/ format = rep.bitmapFormat();", "+\t\t \tlong /*int*/ bpr = rep.bytesPerRow();", "-\t\t \tint /*long*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "-\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\t\t\tint /*long*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "+\t\t \tlong /*int*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "+\t\t\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tlong /*int*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "-\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\t\t\tOS.CGContextSetFillColor(ctx, new float /*double*/ [] {1, 1, 1, 1});", "+\t\t\tOS.CGContextSetFillColor(ctx, new double /*float*/ [] {1, 1, 1, 1});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613d5fae2f063d187019102a4a8b035c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "f448e78b642c84da13844938e0d8c3d5867e5953", "commitAfterChange": "551ff14162e1317c79c5e3e93e63800d37cc8a72", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "signatureAfterChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "diff": ["-\t\t\tNSRect fromRect = new NSRect ();", "-\t\t\tNSSize size = image.handle.size();", "-\t\t\tfromRect.width = size.width;", "-\t\t\tfromRect.height = size.height;", "-\t\t\tNSPoint point = new NSPoint();", "-\t\t\tpoint.x = caret.x;", "-\t\t\tpoint.y = caret.y;", "-\t\t \timage.handle.drawAtPoint(point, rect, OS.NSCompositeXOR, 1);", "+\t\t\tNSImage imageHandle = image.handle;", "+\t\t\tNSImageRep imageRep = imageHandle.bestRepresentationForDevice(null);", "+\t\t\tif (!imageRep.isKindOfClass(OS.class_NSBitmapImageRep)) return;", "+\t\t\tNSBitmapImageRep rep = new NSBitmapImageRep(imageRep);", "+\t\t\tCGRect destRect = new CGRect ();", "+\t\t\tdestRect.origin.x = caret.x;", "+\t\t\tdestRect.origin.y = caret.y;", "+\t\t \tNSSize size = imageHandle.size();", "+\t\t\tdestRect.size.width = size.width;", "+\t\t\tdestRect.size.height = size.height;", "+\t\t \tint /*long*/ data = rep.bitmapData();", "+\t\t \tint /*long*/ bpr = rep.bytesPerRow();", "+\t\t\tint alphaInfo = rep.hasAlpha() ? OS.kCGImageAlphaFirst : OS.kCGImageAlphaNoneSkipFirst;", "+\t\t \tint /*long*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "+\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tint /*long*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "+\t\t\tOS.CGColorSpaceRelease(colorspace);", "+\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\tint /*long*/ ctx = context.graphicsPort();", "+\t\t\tOS.CGContextSaveGState(ctx);", "+\t\t \tOS.CGContextScaleCTM (ctx, 1, -1);", "+\t\t \tOS.CGContextTranslateCTM (ctx, 0, -(size.height + 2 * destRect.origin.y));", "+\t\t\tOS.CGContextSetBlendMode (ctx, OS.kCGBlendModeDifference);", "+\t\t\tOS.CGContextDrawImage (ctx, destRect, cgImage);", "+\t\t\tOS.CGContextRestoreGState(ctx);", "+\t\t \tOS.CGImageRelease(cgImage);\t\t\t"]}], "num": 12796}