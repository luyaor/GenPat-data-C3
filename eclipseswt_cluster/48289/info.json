{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52428f8ff285bd184be29a666c24a140", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1bc2cbfbc3fdd5469cc24a89b696bbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "afeea3334da867aace13a4de03456ef1cbac68d0", "commitAfterChange": "c9db4e5e716e9252aec6fdf41ef0f4150c0d4f19", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public void setSelection (boolean selected)", "signatureAfterChange": "\r public void setSelection (boolean selected)", "diff": ["-\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "-\t\r", "-\t/*\r", "-\t* Feature in Windows.  When a radio button gets focus, \r", "-\t* it selects the button in WM_SETFOCUS.  If the previous\r", "-\t* saved focus widget was a radio button, allowing the shell\r", "-\t* to automatically restore the focus to the previous radio\r", "-\t* button will unexpectedly check that button.  The fix is\r", "-\t* to set the saved focus widget for the shell to be the\r", "-\t* radio button so that when focus is restored, the focus\r", "-\t* widget will be the new radio button.\r", "-\t*/\r", "-\tif (!selected) return;\r", "-\tif ((style & SWT.RADIO) == 0) return;\r", "-\tmenuShell ().setSavedFocus (this);      \r", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);     \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22db28448599bf97a4ca9962b0ea8331", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5f03e7ea5c9fc385b4cee35c0ee6b3f49463ff24", "commitAfterChange": "dc1b8d5ff8d7ee8b7e3bfa00250ffc23a279557f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Windows.  Windows does not explicitly set the orientation of\r", "+\t* the header.  Instead, the orientation is inherited when WS_EX_LAYOUTRTL\r", "+\t* is specified for the table.  This means that when both WS_EX_LAYOUTRTL\r", "+\t* and WS_EX_NOINHERITLAYOUT are specified for the table, the header will\r", "+\t* not be oriented correctly.  The fix is to explicitly set the orientation\r", "+\t* for the header.\r", "+\t*/\r", "+\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {\r", "+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\r", "+\t\tint extStyle = OS.GetWindowLong (hwndHeader, OS.GWL_EXSTYLE);\r", "+\t\tOS.SetWindowLong (hwndHeader, OS.GWL_EXSTYLE, extStyle | OS.WS_EX_LAYOUTRTL);\r", "+\t}\r"]}], "num": 48289}