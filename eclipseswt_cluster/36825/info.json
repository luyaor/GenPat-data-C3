{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a56ab2a22fd8dc275621bfbcdf1a24c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da7bf17e84cc26aa2c51072d8a74f0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setText (int index, String value)", "signatureAfterChange": " public void setText (int columnIndex, String value)", "diff": ["-public void setText (int index, String value) {", "+}", "+public void setText (int columnIndex, String value) {", "-\tif (!(0 <= index && index < validColumnCount)) return;", "-\tif (index == 0) super.setText(value);\t// TODO can remove this", "-\tif (texts.length < index + 1) {", "-\t\tString[] newTexts = new String[index + 1];", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (columnIndex == 0) super.setText(value);\t// TODO can remove this", "+\tif (texts.length < columnIndex + 1) {", "+\t\tString[] newTexts = new String[columnIndex + 1];", "-\t\tint[] newTextWidths = new int[index + 1];", "+\t\tint[] newTextWidths = new int[columnIndex + 1];", "-\t\tif (value.equals(internalGetText(index))) return;\t/* same value */", "+\t\tif (value.equals(internalGetText(columnIndex))) return;\t/* same value */", "-\ttexts[index] = value;", "+\ttexts[columnIndex] = value;", "-\ttextWidths[index] = gc.textExtent(value).x;", "+\ttextWidths[columnIndex] = gc.textExtent(value).x;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5464fe3f7d95f5525e40bfb8ea806d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void setImage (int index, Image value)", "signatureAfterChange": " public void setImage (int columnIndex, Image value)", "diff": ["-public void setImage (int index, Image value) {", "+}", "+public void setImage (int columnIndex, Image value) {", "-\tif (!(0 <= index && index < validColumnCount)) return;", "-\tif (images.length < index + 1) {", "-\t\tImage[] newImages = new Image[index + 1];", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (images.length < columnIndex + 1) {", "+\t\tImage[] newImages = new Image[columnIndex + 1];", "-\t\tImage current = internalGetImage(index);", "+\t\tImage current = internalGetImage(columnIndex);", "-\timages[index] = value;", "+\timages[columnIndex] = value;", "-\t\t\tif (index == 0) {", "+\t\t\tif (columnIndex == 0) {", "-\tif (index == 0 && parent.col0ImageWidth == 0) {", "+\tif (columnIndex == 0 && parent.col0ImageWidth == 0) {"]}], "num": 36825}