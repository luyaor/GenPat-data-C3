{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60e34e96202c76345d2b74e3acd2d6de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b0d39af1c93ca3f51cf91ec471f3a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 286, "signatureBeforeChange": " public void setStyleRange(StyleRange range)", "signatureAfterChange": " public void setStyleRange(StyleRange range)", "diff": ["-\tdefaultLineStyler.setStyleRange(range);", "+\tdefaultLineStyler.setStyleRange(range);\t", "+\t\tif (range.font != null) {", "+\t\t\tif (!isFixedLineHeight()) {", "+\t\t\t\tlineCache.setAllLinesDefaultHeight();", "+\t\t\t}", "+\t\t\tsetLineHeightVariable();", "+\t\t}", "-\t\tlineCache.reset(firstLine, lastLine - firstLine + 1, true);", "-", "-\t\tsetFixedLineHeight(range.font == null);", "+\t\tresetCache(firstLine, lastLine - firstLine + 1);", "-\t\tif (!isFixedLineHeight()) {", "-\t\t\tint partialTopIndex = getLineIndex(topMargin);", "-\t\t\tif (partialTopIndex >= firstLine) {", "-\t\t\t\tlineCache.calculate(firstLine, partialTopIndex - firstLine + 1);", "-\t\t\t\t//TODO fix verticalScrollOffset", "+\t\tif (isFixedLineHeight()) {", "+\t\t\t// if the style is not visible, there is no need to redraw", "+\t\t\tif (isAreaVisible(firstLine, lastLine)) {", "+\t\t\t\tint redrawTop = getLinePixel(firstLine);", "+\t\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "+\t\t\t\tsuper.redraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, false);", "+\t\t} else {", "-\t\t\tdraw(0, redrawTop, clientArea.width, redrawBottom - redrawTop, true);\t\t\t", "-\t\t} else {\t\t\t", "-\t\t\t// if the style is not visible, there is no need to redraw", "-\t\t\tif (isAreaVisible(firstLine, lastLine)) {", "-\t\t\t\tint redrawTop = getLinePixel(firstLine);", "-\t\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "-\t\t\t\tdraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, true);", "-\t\t\t}", "+\t\t\tsuper.redraw(0, redrawTop, clientArea.width, redrawBottom - redrawTop, false);\t\t\t", "-\t\t// clearing all styles", "-\t\tlineCache.reset(0, content.getLineCount(), false);", "-\t\tredraw();", "+\t\tresetCache(0, content.getLineCount());", "+\t\tsuper.redraw();", "-\t", "-\t// make sure that the caret is positioned correctly.", "-\t// caret location may change if font style changes.", "-\t// fixes 1G8FODP"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5a5455a5817a800fe8226711c35a82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "abd107467b5837fa0581218bc9beec69bc66414f", "commitAfterChange": "23c2bc8468cd1d7c6b5e538683fc80265d48ca63", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 279, "signatureBeforeChange": " public void setStyleRange(StyleRange range)", "signatureAfterChange": " public void setStyleRange(StyleRange range)", "diff": ["-\t\t// if the style is not visible, there is no need to redraw", "-\t\tif (isAreaVisible(firstLine, lastLine)) {", "+\t\tsetFixedLineHeight(range.font == null);", "+\t\t", "+\t\tif (!isFixedLineHeight()) {", "+\t\t\tint partialTopIndex = getLineIndex(topMargin);", "+\t\t\tif (partialTopIndex >= firstLine) {", "+\t\t\t\tlineCache.calculate(firstLine, partialTopIndex - firstLine + 1);", "+\t\t\t\t//TODO fix verticalScrollOffset", "+\t\t\t}", "+\t\t\t// change the style can cause the line height to change forcing ", "+\t\t\t// all the lines bellow to redraw", "+\t\t\tRectangle clientArea = getClientArea();", "-\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "-\t\t\tdraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, true);", "+\t\t\tint redrawBottom = clientArea.height;", "+\t\t\tdraw(0, redrawTop, clientArea.width, redrawBottom - redrawTop, true);\t\t\t", "+\t\t} else {\t\t\t", "+\t\t\t// if the style is not visible, there is no need to redraw", "+\t\t\tif (isAreaVisible(firstLine, lastLine)) {", "+\t\t\t\tint redrawTop = getLinePixel(firstLine);", "+\t\t\t\tint redrawBottom = getLinePixel(lastLine + 1);", "+\t\t\t\tdraw(0, redrawTop, getClientArea().width, redrawBottom - redrawTop, true);", "+\t\t\t}"]}], "num": 11849}