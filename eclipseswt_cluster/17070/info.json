{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08ece43b3eeb60182470b34326083398", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c330315430d16626934dda82748cc510", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StatsGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void generateFunctionEnum(Method[] methods)", "signatureAfterChange": "  void generateFunctionEnum(JNIMethod[] methods)", "diff": ["-void generateFunctionEnum(Method[] methods) {", "+void generateFunctionEnum(JNIMethod[] methods) {", "-\t\tMethod method = methods[i];", "+\t\tJNIMethod method = methods[i];", "+\t\tString function = getFunctionName(method), function64 = getFunctionName(method, method.getParameterTypes64());", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutput(\"#ifndef \");", "+\t\t\toutput(JNI64);", "+\t\t\toutputln();", "+\t\t}", "-\t\toutput(getFunctionName(method));", "+\t\toutput(function);", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutputln(\"#else\");", "+\t\t\toutput(\"\\t\");", "+\t\t\toutput(function64);", "+\t\t\toutputln(\"_FUNC,\");", "+\t\t\toutputln(\"#endif\");", "+\t\t}", "-\tClass clazz = methods[0].getDeclaringClass();", "+\tJNIClass clazz = methods[0].getDeclaringClass();", "-\toutput(getClassName(clazz));", "+\toutput(clazz.getSimpleName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cdd9829ffd162f3e843539081fc855a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StatsGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void generateSourceFile(Class clazz)", "signatureAfterChange": "  void generateSourceFile(JNIClass clazz)", "diff": ["-void generateSourceFile(Class clazz) {", "+void generateSourceFile(JNIClass clazz) {", "-\tMethod[] methods = clazz.getDeclaredMethods();", "+\tJNIMethod[] methods = clazz.getDeclaredMethods();", "-\t\tMethod method = methods[i];", "+\t\tJNIMethod method = methods[i];", "-\tString className = getClassName(clazz);", "+\tString className = clazz.getSimpleName();", "-\t\tMethod method = methods[i];", "+\t\tJNIMethod method = methods[i];", "+\t\tString function = getFunctionName(method), function64 = getFunctionName(method, method.getParameterTypes64());", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutput(\"#ifndef \");", "+\t\t\toutput(JNI64);", "+\t\t\toutputln();", "+\t\t}", "-\t\toutput(getFunctionName(method));", "+\t\toutput(function);", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutputln(\"#else\");", "+\t\t\toutput(\"\\t\\\"\");", "+\t\t\toutput(function64);", "+\t\t\toutputln(\"\\\",\");", "+\t\t\toutputln(\"#endif\");", "+\t\t}"]}], "num": 17070}