{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68657648adc002d9f73a839bd2de1f7c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f631a092089a07bb88d7e5d6c175bfef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "\r \r LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\tDisplay display = getDisplay ();\t\r", "-\tif (IsDBLocale) {\r", "+\tDisplay display = getDisplay ();\r", "+\tif (!OS.IsUnicode && OS.IsDBLocale) {\r", "-\tif (IsWinNT) {\r", "+\tif (OS.IsWinNT) {\r", "-\t* If are going to get a WM_CHAR, ensure that last key has\r", "+\t* If we are going to get a WM_CHAR, ensure that last key has\r", "-\t\tif ((OS.VK_NUMPAD0 <= display.lastKey) && (display.lastKey <= OS.VK_DIVIDE)) {\r", "+\t\tif (OS.VK_NUMPAD0 <= display.lastKey && display.lastKey <= OS.VK_DIVIDE) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6635b4cd00706b395627acde70df46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "diff": ["-\tDisplay display = this.display;", "-\tdisplay.lastAscii = wParam;", "-\tdisplay.lastNull = wParam == 0;", "-", "-\t/* Do not issue a key down if a menu bar mnemonic was invoked */", "-\tif (!hooks (SWT.KeyDown) && !display.filters (SWT.KeyDown)) {", "-\t\treturn null;", "-\t}", "-\t", "-\t/* Call the window proc to determine whether it is a system key or mnemonic */", "-\tboolean oldKeyHit = display.mnemonicKeyHit;", "-\tdisplay.mnemonicKeyHit = true;", "-\tint result = callWindowProc (OS.WM_SYSCHAR, wParam, lParam);", "-\tboolean consumed = false;", "-\tif (!display.mnemonicKeyHit) {", "-\t\tconsumed = !sendKeyEvent (SWT.KeyDown, OS.WM_SYSCHAR, wParam, lParam);", "-\t\t// widget could be disposed at this point", "-\t}", "-\tconsumed |= display.mnemonicKeyHit;", "-\tdisplay.mnemonicKeyHit = oldKeyHit;", "-\treturn consumed ? LRESULT.ONE : new LRESULT (result);", "+\treturn wmSysChar (windowProc (), handle, wParam, lParam);"]}], "num": 45826}