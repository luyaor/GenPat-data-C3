{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5013c0ee133f5bf320bb39c08e92c81", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb76bdef3ecaca02d3ff4c02bc3e8952", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "61399ae1f619bad78843d2e41ce659427328a0fc", "commitAfterChange": "e1714b9ad320f339d5de5b49815ef409e12d7da1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);\r", "-\tif (OS.ShowScrollBar (hwnd, type, visible)) {\r", "+\tif (OS.IsWinCE) {\r", "-\t\t* Bug in Windows.  For some reason, when the widget\r", "-\t\t* is a standard scroll bar, and SetScrollInfo () is\r", "-\t\t* called with SIF_RANGE or SIF_PAGE while the widget\r", "-\t\t* is not visible, the widget is incorrectly disabled\r", "-\t\t* even though the values for SIF_RANGE and SIF_PAGE,\r", "-\t\t* when set for a visible scroll bar would not disable\r", "-\t\t* the scroll bar.  The fix is to enable the scroll bar\r", "-\t\t* when already enabled after showing the scroll bar.\r", "+\t\t* This line is intentionally commented.  Currently\r", "+\t\t* always show scrollbar as being enabled and visible.\r", "-\t\tif ((state & DISABLED) == 0) {\r", "-\t\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_ENABLE_BOTH);\r", "-\t\t}\r", "+\t\t// error (SWT.ERROR_NOT_IMPLEMENTED);\r", "+\t} else {\r", "+\t\tif (OS.ShowScrollBar (hwnd, type, visible)) {\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows.  For some reason, when the widget\r", "+\t\t\t* is a standard scroll bar, and SetScrollInfo () is\r", "+\t\t\t* called with SIF_RANGE or SIF_PAGE while the widget\r", "+\t\t\t* is not visible, the widget is incorrectly disabled\r", "+\t\t\t* even though the values for SIF_RANGE and SIF_PAGE,\r", "+\t\t\t* when set for a visible scroll bar would not disable\r", "+\t\t\t* the scroll bar.  The fix is to enable the scroll bar\r", "+\t\t\t* when already enabled after showing the scroll bar.\r", "+\t\t\t*/\r", "+\t\t\tif ((state & DISABLED) == 0) {\r", "+\t\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_ENABLE_BOTH);\r", "+\t\t\t}\r", "+\t\t\tstate &= ~HIDDEN;\r", "+\t\t\tif (!visible) state |= HIDDEN;\r", "+\t\t\tsendEvent (visible ? SWT.Show : SWT.Hide);\r", "+\t\t\t// widget could be disposed at this point\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4d99c29f4d903cacdb843059edbe723", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "3c68f9ee7dd41a39c53e65d62867c81be822c9a7", "commitAfterChange": "ce2f7e8c7b675d9102a257c05ce75d57b51070a2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  boolean SetScrollInfo (int hwnd, int flags, SCROLLINFO info, boolean fRedraw)", "signatureAfterChange": "  boolean SetScrollInfo (int hwnd, int flags, SCROLLINFO info, boolean fRedraw)", "diff": ["-\tboolean both = false;", "+\tboolean barVisible = false;", "-\tif (!visible) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tScrollBar bar = null;", "-\t\t\tswitch (flags) {", "-\t\t\t\tcase OS.SB_HORZ:", "-\t\t\t\t\tbar = parent.getVerticalBar ();", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase OS.SB_VERT:", "-\t\t\t\t\tbar = parent.getHorizontalBar ();", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tboth = bar != null && !bar.getVisible ();", "+\t", "+\t/*", "+\t* This line is intentionally commented.  Currently", "+\t* always show scrollbar as being enabled and visible.", "+\t*/", "+//\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "+\tScrollBar bar = null;", "+\tif (!OS.IsWinCE) {", "+\t\tswitch (flags) {", "+\t\t\tcase OS.SB_HORZ:", "+\t\t\t\tbar = parent.getVerticalBar ();", "+\t\t\t\tbreak;", "+\t\t\tcase OS.SB_VERT:", "+\t\t\t\tbar = parent.getHorizontalBar ();", "+\t\t\t\tbreak;", "+\t\tbarVisible = bar != null && bar.getVisible ();", "+\t", "-\t\t\tOS.ShowScrollBar (hwnd, both ? OS.SB_BOTH : flags, false);", "+\t\t\tOS.ShowScrollBar (hwnd, !barVisible ? OS.SB_BOTH : flags, false);", "+\t\t}", "+\t}", "+\t", "+\t/*", "+\t* Bug in Windows.  When only one scroll bar is visible,", "+\t* and the thumb changes using SIF_RANGE or SIF_PAGE", "+\t* from being visible to hidden, the opposite scroll", "+\t* bar is incorrectly made visible.  The next time the", "+\t* parent is resized (or another scroll bar operation", "+\t* is performed), the opposite scroll bar draws.  The", "+\t* fix is to hide the opposite scroll bar again. ", "+\t*  ", "+\t* NOTE: This problem only happens on Vista", "+\t*/", "+\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\tif (visible && !barVisible) {", "+\t\t\tOS.ShowScrollBar (hwnd, flags == OS.SB_HORZ ? OS.SB_VERT : OS.SB_HORZ, false);"]}], "num": 62366}