{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b4b80aec94a5e22a770c34b18457b0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d042fb02f6e22e648679124afc643f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "8136796db3d8484cb392a96b5dd6ff6574cfebd8", "commitAfterChange": "5774f905fede0ff1c282c0eb1d6ab008948e6804", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void onPaint(GC gc, boolean isSelected)", "signatureAfterChange": "\r void onPaint(GC gc, boolean isSelected)", "diff": ["-\t\t\r", "-\t\tif (parent.isFocusControl()) {\r", "-\t\t\t// draw a focus rectangle\r", "-\t\t\tgc.drawFocus(x + 2, y + 1, width - 3, height - 1);\r", "-\t\t}\r", "-\t\tfinal Rectangle bounds;\r", "-\t\tif (index == parent.topTabIndex) {\r", "-\t\t\tbounds = new Rectangle(x + 1, y, width - 2, height);\r", "+\r", "+\t\tRectangle bounds = null;\r", "+\t\tif (!parent.onBottom) {\r", "+\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\tbounds = new Rectangle(x + 1, y + 1, width - 2, height - 1);\r", "+\t\t\t} else {\r", "+\t\t\t\tbounds = new Rectangle(x + 2, y + 1, width - 3, height - 1);\r", "+\t\t\t}\r", "-\t\t\tbounds = new Rectangle(x + 2, y, width - 3, height);\r", "+\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\tbounds = new Rectangle(x + 1, y + 1, width - 2, height - 2);\r", "+\t\t\t} else {\r", "+\t\t\t\tbounds = new Rectangle(x + 2, y + 1, width - 3, height - 2);\r", "+\t\t\t}\r", "-\t\t\tfinal Color oldBackground = gc.getBackground();\r", "+\t\t\tColor oldBackground = gc.getBackground();\r", "-\t\t\t\tfinal Color oldForeground = gc.getForeground();\r", "+\t\t\t\tColor oldForeground = gc.getForeground();\r", "-\t\t\t\t\tfinal int gradientWidth = (parent.gradientPercents[i] * bounds.width / 100) - pos;\r", "+\t\t\t\t\tint gradientWidth = (parent.gradientPercents[i] * bounds.width / 100) - pos;\r", "+\t\tif (parent.isFocusControl()) {\r", "+\t\t\t// draw a focus rectangle\r", "+\t\t\tint x1, y1, width1, height1;\r", "+\t\t\tif (!parent.onBottom) {\r", "+\t\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\t\tx1 = x + 2; y1 = y + 2; width1 = width - 4; height1 = height - 3;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tx1 = x + 3; y1 = y + 2; width1 = width - 5; height1 = height - 3;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\t\tx1 = x + 2; y1 = y + 2; width1 = width - 4; height1 = height - 4;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tx1 = x + 3; y1 = y + 2; width1 = width - 5; height1 = height - 4;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));\r", "+\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));\r", "+\t\t\tgc.drawFocus(x1, y1, width1, height1);\r", "+\t\t}\r", "-\t//gc.drawText(text, xDraw, textY, true, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcebb5ad2a8cf618ba51377074c79a17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "38b8a6a828a29c7e5e6b7b893b0e958d82ba3067", "commitAfterChange": "ecc031c713c5abb824e94cc072ef357547d9a2ea", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public void drawRoundRectangle (int x, int y, int width, int height, int arcWidth, int arcHeight)", "signatureAfterChange": "\r public void drawRoundRectangle (int x, int y, int width, int height, int arcWidth, int arcHeight)", "diff": ["-\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\r", "-\tint oldBrush = OS.SelectObject(handle, nullBrush);\r", "-\tOS.RoundRect(handle, x,y,x+width,y+height, arcWidth, arcHeight);\r", "-\tOS.SelectObject(handle,oldBrush);\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/* \r", "+\t\t* Bug in WinCE PPC.  On certain devices, RoundRect does not draw\r", "+\t\t* all the pixels.  The workaround is to draw a round rectangle\r", "+\t\t* using lines and arcs.\r", "+\t\t*/\r", "+\t\tif (width == 0 || height == 0) return;\t\t\t\t\t\t\t\t\t\r", "+\t\tif (arcWidth == 0 || arcHeight == 0) {\r", "+\t\t\tdrawRectangle(x, y, width, height);\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\tif (width < 0) {\r", "+\t\t\tx += width;\r", "+\t\t\twidth = -width;\r", "+\t\t}\r", "+\t\tif (height < 0) {\r", "+\t\t\ty += height;\r", "+\t\t\theight = -height;\r", "+\t\t};\r", "+\t\tif (arcWidth < 0) arcWidth = -arcWidth;\r", "+\t\tif (arcHeight < 0) arcHeight = -arcHeight;\r", "+\t\tif (arcWidth > width) arcWidth = width;\r", "+\t\tif (arcHeight > height) arcHeight = height;\r", "+\t\t\t\t\r", "+\t\tif (arcWidth < width) {\r", "+\t\t\tdrawLine(x+arcWidth/2, y, x+width-arcWidth/2, y);\r", "+\t\t\tdrawLine(x+arcWidth/2, y+height-1, x+width-arcWidth/2, y+height-1);\r", "+\t\t}\r", "+\t\tif (arcHeight < height) {\r", "+\t\t\tdrawLine(x, y+arcHeight/2, x, y+height-arcHeight/2);\r", "+\t\t\tdrawLine(x+width-1, y+arcHeight/2, x+width-1, y+height-arcHeight/2);\r", "+\t\t}\t\t\t\r", "+\t\tif (arcWidth != 0 && arcHeight != 0) {\r", "+\t\t\tdrawArc(x, y, arcWidth, arcHeight, 90, 90);\t\t\t\t\r", "+\t\t\tdrawArc(x+width-arcWidth-1, y, arcWidth, arcHeight, 0, 90);\r", "+\t\t\tdrawArc(x+width-arcWidth-1, y+height-arcHeight-1, arcWidth, arcHeight, 0, -90);\r", "+\t\t\tdrawArc(x, y+height-arcHeight-1, arcWidth, arcHeight, 180, 90);\r", "+\t\t} \r", "+\t} else {\r", "+\t\tint nullBrush = OS.GetStockObject(OS.NULL_BRUSH);\r", "+\t\tint oldBrush = OS.SelectObject(handle, nullBrush);\r", "+\t\tOS.RoundRect(handle, x,y,x+width,y+height, arcWidth, arcHeight);\r", "+\t\tOS.SelectObject(handle,oldBrush);\r", "+\t}\r"]}], "num": 50478}