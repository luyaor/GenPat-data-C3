{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdb385da9bda4d4a352489a3c118ec1a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a26582b9eaafaacc3a6600a1c4e3e602", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 278, "signatureBeforeChange": " \t \tint put_accValue(int varChild, int szValue)", "signatureAfterChange": " \tint put_accValue(int varChild, int szValue)", "diff": ["+\t/* put_accValue([in] varChild, [in] szValue) */", "-\t\t// MSAA: this method is typically only used for edit controls", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-\t\t// We don't implement this. Forward to the proxy.", "-\t\tint code = iaccessible.put_accValue(varChild, szValue);", "-\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\t// TODO: Are we going to support this (in EditableText)?", "+\t\t/* MSAA: this method is typically only used for edit controls. */", "+\t\tint code = COM.DISP_E_MEMBERNOTFOUND;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Currently, we don't expose this as API. Forward to the proxy. */", "+\t\t\tcode = iaccessible.put_accValue(varChild, szValue);", "+\t\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3afe5ec5bc24f0626ebd45afb2edaa0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 262, "signatureBeforeChange": " \t \tint accSelect(int flagsSelect, int varChild)", "signatureAfterChange": " \tint accSelect(int flagsSelect, int varChild)", "diff": ["+\t/* accSelect([in] flagsSelect, [in] varChild) */", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-\t\t// Currently, we don't let the application override this. Forward to the proxy.", "-\t\tint code = iaccessible.accSelect(flagsSelect, varChild);", "-\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\t// TODO: Probably need to support this?", "+\t\tint code = COM.DISP_E_MEMBERNOTFOUND;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Currently, we don't expose this as API. Forward to the proxy. */", "+\t\t\tcode = iaccessible.accSelect(flagsSelect, varChild);", "+\t\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0322f26096ab0ae4410e3c99ca1bc0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 258, "signatureBeforeChange": "  \tint accDoDefaultAction(int varChild)", "signatureAfterChange": " \tint accDoDefaultAction(int varChild)", "diff": ["+\t/* accDoDefaultAction([in] varChild) */", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-\t\t// Currently, we don't let the application override this. Forward to the proxy.", "-\t\tint code = iaccessible.accDoDefaultAction(varChild);", "-\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\tVARIANT v = getVARIANT(varChild);", "+\t\t\tif (v.vt != COM.VT_I4) return COM.E_INVALIDARG;", "+\t\t\tif (v.lVal == COM.CHILDID_SELF) return doAction(0);", "+\t\t}", "+\t\tint code = COM.DISP_E_MEMBERNOTFOUND;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* If there were no action listeners, forward to the proxy. */", "+\t\t\tcode = iaccessible.accDoDefaultAction(varChild);", "+\t\t\tif (code == COM.E_INVALIDARG) code = COM.DISP_E_MEMBERNOTFOUND; // proxy doesn't know about app childID", "+\t\t}"]}], "num": 3321}