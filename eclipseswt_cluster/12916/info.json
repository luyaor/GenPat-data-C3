{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "099a3dfb74999c5f632390bde56b80da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6e029ad158578bc2b8ef130094109b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-", "-\t/* Columns:", "-\t * 0 - text", "-\t * 1 - pixmap", "-\t * 2 - foreground", "-\t * 3 - background", "-\t * 4 - id", "-\t * 5 - checked (if needed)", "-\t */", "-\tint COLUMN_NUM = (style&SWT.CHECK)!=0? 6:5;", "-\tint[] types = new int[COLUMN_NUM];", "-\ttypes[0] = OS.G_TYPE_STRING();", "-\ttypes[1] = OS.gdk_pixbuf_get_type();", "-\ttypes[2] = OS.GDK_TYPE_COLOR();", "-\ttypes[3] = OS.GDK_TYPE_COLOR();", "-\ttypes[4] = OS.G_TYPE_INT();", "-\tif ((style&SWT.CHECK) != 0) types[5] = OS.G_TYPE_BOOLEAN();", "-\tmodelHandle = OS.gtk_tree_store_newv(COLUMN_NUM, types);", "+\t/*", "+\t* Columns:", "+\t* 0 - text", "+\t* 1 - pixmap", "+\t* 2 - foreground", "+\t* 3 - background", "+\t* 4 - id", "+\t* 5 - checked (if needed)", "+\t*/", "+\tint [] types = new int [(style & SWT.CHECK) !=0 ? 6 : 5];", "+\ttypes [0] = OS.G_TYPE_STRING ();", "+\ttypes [1] = OS.GDK_TYPE_PIXBUF ();", "+\ttypes [2] = OS.GDK_TYPE_COLOR ();", "+\ttypes [3] = OS.GDK_TYPE_COLOR ();", "+\ttypes [4] = OS.G_TYPE_INT ();", "+\tif ((style & SWT.CHECK) != 0) types [5] = OS.G_TYPE_BOOLEAN ();", "+\tmodelHandle = OS.gtk_tree_store_newv (types.length, types);", "-\thandle = OS.gtk_tree_view_new_with_model(modelHandle);", "+\thandle = OS.gtk_tree_view_new_with_model (modelHandle);", "-\t", "+\tint columnHandle = OS.gtk_tree_view_column_new ();", "+\tif (columnHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tint checkRenderer = OS.gtk_cell_renderer_toggle_new ();", "+\t\tif (checkRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, checkRenderer, false);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", 5);", "+\t\tDisplay display = getDisplay ();", "+\t\tOS.g_signal_connect (checkRenderer, OS.toggled, display.treeToggleProc, handle);", "+\t}", "+\tint pixbufRenderer = OS.gtk_cell_renderer_pixbuf_new ();", "+\tif (pixbufRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, false);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", 1);", "+\tint textRenderer = OS.gtk_cell_renderer_text_new ();", "+\tif (textRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, true);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"text\", 0);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", 2);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", 3);", "+\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "-\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_EXTENDED : OS.GTK_SELECTION_BROWSE;", "-\tint selectionObject = OS.gtk_tree_view_get_selection(handle);", "-\tOS.gtk_tree_selection_set_mode(selectionObject, mode);", "-\tOS.gtk_tree_view_set_headers_visible(handle, false);\t", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (scrolledHandle);", "+\tOS.gtk_widget_show (handle);", "+", "+\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_MULTIPLE : OS.GTK_SELECTION_BROWSE;", "+\tint selectionHandle = OS.gtk_tree_view_get_selection (handle);", "+\tOS.gtk_tree_selection_set_mode (selectionHandle, mode);", "+\tOS.gtk_tree_view_set_headers_visible (handle, false);\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-\tcolumnHandle = OS.gtk_tree_view_column_new();", "-\tint renderer;", "-\trenderer = OS.gtk_cell_renderer_text_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, true);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"text\", 0);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"foreground-gdk\", 2);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"background-gdk\", 3);", "-\trenderer = OS.gtk_cell_renderer_pixbuf_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"pixbuf\", 1);", "-\tif ((style & SWT.CHECK) != 0) {", "-\t\trenderer = OS.gtk_cell_renderer_toggle_new();", "-\t\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"active\", 5);", "-\t\tOS.g_signal_connect(renderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "-\t}", "-\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "-\tOS.gtk_tree_view_set_headers_visible(handle, false);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f9398b2368aa141fbe1764a103a3767", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+", "-\t/*", "-\t* Columns:", "-\t* 0 - text", "-\t* 1 - pixmap", "-\t* 2 - foreground", "-\t* 3 - background", "-\t* 4 - font", "-\t* 5 - id", "-\t* 6 - checked (if needed)", "-\t* 7 - grayed (if needed)", "-\t*/", "-\tint /*long*/ [] types = new int /*long*/ [(style & SWT.CHECK) !=0 ? 8 : 6];", "-\ttypes [TEXT_COLUMN] = OS.G_TYPE_STRING ();", "-\ttypes [PIXBUF_COLUMN] = OS.GDK_TYPE_PIXBUF ();", "-\ttypes [FOREGROUND_COLUMN] = OS.GDK_TYPE_COLOR ();", "-\ttypes [BACKGROUND_COLUMN] = OS.GDK_TYPE_COLOR ();", "-\ttypes [FONT_COLUMN] = OS.PANGO_TYPE_FONT_DESCRIPTION ();", "-\ttypes [ID_COLUMN] = OS.G_TYPE_INT ();", "-\tif ((style & SWT.CHECK) != 0) {", "-\t\ttypes [CHECKED_COLUMN] = OS.G_TYPE_BOOLEAN (); ", "-\t\ttypes [GRAYED_COLUMN] = OS.G_TYPE_BOOLEAN ();", "-\t} ", "+\tint /*long*/ [] types = getColumnTypes (1);", "-\t", "-\t/*", "-\t* Bug in ATK. For some reason, ATK segments fault if ", "-\t* the GtkTreeView has a column and does not have items.", "-\t* The fix is to insert the column only when an item is ", "-\t* created.", "-\t*/", "-\tcolumnHandle = OS.gtk_tree_view_column_new ();", "-\tif (columnHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.g_object_ref (columnHandle);", "-\t", "-\t\tOS.gtk_tree_view_column_pack_start (columnHandle, checkRenderer, false);", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.active, CHECKED_COLUMN);", "-", "-\t\t/*", "-\t\t* Feature in GTK. The inconsistent property only exists in GTK 2.2.x.", "-\t\t*/", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 2, 0)) {", "-\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.inconsistent, GRAYED_COLUMN);", "-\t\t}", "+\t\tOS.g_object_ref (checkRenderer);", "-\tpixbufRenderer = OS.gtk_cell_renderer_pixbuf_new ();", "-\tif (pixbufRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, false);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, OS.pixbuf, PIXBUF_COLUMN);", "-\t/*", "-\t* Feature on GTK.  When a tree view column contains only one activatable", "-\t* cell renderer such as a toggle renderer, mouse clicks anywhere in a cell", "-\t* activate that renderer. The workaround is to set a second  cell renderer", "-\t* to be activatable.", "-\t*/", "-\tif ((style & SWT.CHECK) != 0) {", "-\t\tOS.g_object_set (pixbufRenderer, OS.mode, OS.GTK_CELL_RENDERER_MODE_ACTIVATABLE, 0);", "-\t}", "-\ttextRenderer = OS.gtk_cell_renderer_text_new ();", "-\tif (textRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, true);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.text, TEXT_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.foreground_gdk, FOREGROUND_COLUMN);", "-\t", "-\t/*", "-\t * Bug on GTK. Gtk renders the background of the text renderer on top of the pixbuf renderer.", "-\t * This only happens in version 2.2.1 and earlier. The fix is not to set the background.   ", "-\t */", "-\tif (OS.GTK_VERSION > OS.VERSION (2, 2, 1)) {", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.background_gdk, BACKGROUND_COLUMN);", "-\t}", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.font_desc, FONT_COLUMN);", "+\tcreateColumn (null, 0);", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t/*", "+\t\t* Feature in GTK. The fixed_height_mode property only exists in GTK 2.3.2 and greater.", "+\t\t*/", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2)) {", "+\t\t\tOS.g_object_set (handle, OS.fixed_height_mode, true, 0);", "+\t\t}", "+\t}", "+}"]}], "num": 12916}