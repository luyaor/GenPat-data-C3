{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8924f7a8d8f71ce579ccf524bb8d07a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ad2f96f2c6bfcd493d3f4827ff8914", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 81, "signatureBeforeChange": "  int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+int gtk_button_press_event (int widget, int event) {", "+\tShell shell = _getShell ();", "+\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "+\tDisplay display = getDisplay ();", "+\tdisplay.dragStartX = (int) gdkEvent.x;", "+\tdisplay.dragStartY = (int) gdkEvent.y;", "+\tdisplay.dragging = false;", "+\tint button = gdkEvent.button;", "+\tint type = gdkEvent.type != OS.GDK_2BUTTON_PRESS ? SWT.MouseDown : SWT.MouseDoubleClick;", "+\tsendMouseEvent (type, button, event);", "+\tif (button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {", "+\t\tif (menu != null) menu.setVisible (true);", "+\t}", "+\t", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tif (!shell.isDisposed ()) {", "+\t\tshell.setActiveControl (this);", "+\t}", "+\treturn 0;", "+}", "-", "-int processMouseDown (int callData, int arg1, int int2) {", "-\tShell shell = _getShell ();", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "-\tDisplay display = getDisplay ();", "-\tdisplay.dragStartX = (int) gdkEvent.x;", "-\tdisplay.dragStartY = (int) gdkEvent.y;", "-\tdisplay.dragging = false;", "-\tint button = gdkEvent.button;", "-\tint type = gdkEvent.type != OS.GDK_2BUTTON_PRESS ? SWT.MouseDown : SWT.MouseDoubleClick;", "-\tsendMouseEvent (type, button, callData);", "-\tif (button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {", "-\t\tif (menu != null) menu.setVisible (true);", "-\t}", "-\t", "-\t/*", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7893ffdae1aff5fd87dfcd566c39a42f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 90, "signatureBeforeChange": "  int processMouseExit (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_leave_notify_event (int widget, int event)", "diff": ["+", "+int gtk_leave_notify_event (int widget, int event) {", "+\tDisplay display = getDisplay ();", "+\tdisplay.removeMouseHoverTimeout (handle);", "+\tGdkEventCrossing gdkEvent = new GdkEventCrossing ();", "+\tOS.memmove (gdkEvent, event, GdkEventCrossing.sizeof);", "+\tif (gdkEvent.mode != OS.GDK_CROSSING_NORMAL) return 0;", "+\tif (gdkEvent.subwindow != 0) return 0;", "+\tsendMouseEvent (SWT.MouseExit, 0, event);", "+\treturn 0;", "+}", "-", "-int processMouseExit (int callData, int arg1, int int2) {", "-\tDisplay display = getDisplay ();", "-\tdisplay.removeMouseHoverTimeout (handle);", "-\tGdkEventCrossing gdkEvent = new GdkEventCrossing ();", "-\tOS.memmove (gdkEvent, callData, GdkEventCrossing.sizeof);", "-\tif (gdkEvent.mode != OS.GDK_CROSSING_NORMAL) return 0;", "-\tif (gdkEvent.subwindow != 0) return 0;", "-\tsendMouseEvent (SWT.MouseExit, 0, callData);", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7916c49f1a316c97a0d32d2dccbcaa8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 82, "signatureBeforeChange": "  int processMouseUp (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_button_release_event (int widget, int event)", "diff": ["+", "+int gtk_button_release_event (int widget, int event) {", "+\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "+\tsendMouseEvent (SWT.MouseUp, gdkEvent.button, event);", "+\treturn 0;", "+}", "-", "-int processMouseUp (int callData, int arg1, int int2) {", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "-\tsendMouseEvent (SWT.MouseUp, gdkEvent.button, callData);", "-\treturn 0;", "-}"]}], "num": 5595}