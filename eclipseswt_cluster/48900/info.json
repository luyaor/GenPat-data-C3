{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4b4897afaea4fb4759d22778f49478a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08660c195b7d958b3399c8791a4ee81e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1bced2273981366cf0c60c834a28e5edeb88ab86", "commitAfterChange": "3266b85e107b3bde8a8732e5279319e7f2cf152c", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t\t\tif (widget instanceof Control) {", "-\t\t\t\t\t\tControl control = (Control) widget;", "-\t\t\t\t\t\tif (control.isEnabled ()) break;", "-\t\t\t\t\t\tforward = true;", "-\t\t\t\t\t}", "+\t\t\t\t\tif (widget.isEnabled ()) break;", "+\t\t\t\t\tforward = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a5b7ea43f5733bb675d19bfd2410180", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f342bba67a6003213057bf5e4e8cc2cd93ed792f", "commitAfterChange": "ab7cae1f91bef22765dbad081d2b690620123495", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\r \t\r \tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole)", "signatureAfterChange": "\r \t\r \tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole)", "diff": ["-\t\t\t\t/* Currently our checkbox tree is emulated using state mask images,\r", "-\t\t\t\t * so we need to specify 'checkbox' role for the items here. */\r", "-\r", "-\t\t\t\tTree tree = (Tree) control;\r", "-\t\t\t\tif ((tree.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r", "+\t\t\t\t// TEMPORARY CODE\r", "+\t\t\t\t/* Currently our checkbox tree is emulated using state mask images,\r", "+\t\t\t\t * so we need to specify 'checkbox' role for the items here. */\r", "+\t\t\t\tif ((control.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r", "+\t\t\t\tevent.childID = varChild_lVal - 1;\r", "+\t\t\t\t\r", "+\t\t\t\t// TEMPORARY CODE\r", "-\t\t\t\tevent.childID = varChild_lVal - 1;\r", "-\t\t\t\tTable table = (Table) control;\r", "-\t\t\t\tif ((table.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r", "+\t\t\t\tif ((control.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r"]}], "num": 48900}