{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9151159adb1e8a7697a3b56facd05b29", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4af3b982decb5103fd2855632e1c90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "6de31d3123a8a42cd97dc6a937874bae99bc6464", "commitAfterChange": "171babc134a24ff1a3b09c194ff4f1b494378665", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public String open ()", "signatureAfterChange": "\r public String open ()", "diff": ["-\tint dialog = OS.XmCreateFileSelectionDialog (parentHandle, name, argList1, argList1.length / 2);\r", "+\tdialog = OS.XmCreateFileSelectionDialog (parentHandle, name, argList1, argList1.length / 2);\r", "-\tCallback callback = new Callback (this, \"activate\", 3);\r", "-\tint address = callback.getAddress ();\r", "-\tOS.XtAddCallback (dialog, OS.XmNokCallback, address, OS.XmDIALOG_OK_BUTTON);\r", "-\tOS.XtAddCallback (dialog, OS.XmNcancelCallback, address, OS.XmDIALOG_CANCEL_BUTTON);\r", "+\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3);\r", "+\tint cancelAddress = cancelCallback.getAddress ();\r", "+\tOS.XtAddCallback (dialog, OS.XmNcancelCallback, cancelAddress, OS.XmDIALOG_CANCEL_BUTTON);\r", "+\tCallback okCallback = new Callback (this, \"okPressed\", 3);\r", "+\tint okAddress = okCallback.getAddress ();\r", "+\tOS.XtAddCallback (dialog, OS.XmNokCallback, okAddress, OS.XmDIALOG_OK_BUTTON);\r", "-\t/* Open the dialog and dispatch events. */\r", "-\tcancel = true;\r", "-\t/* Set the new path, file name and filter. */\r", "-\tfullPath = \"\";\r", "-\tif (!cancel) {\r", "-\t\tfilterPath = fullPath = \"\";\r", "-\t\tint [] argList2 = {OS.XmNdirectory, 0, OS.XmNdirSpec, 0};\r", "-\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);\r", "-\t\tint xmString3 = argList2 [1];\r", "-\t\tint ptr = OS.XmStringUnparse (\r", "-\t\t\txmString3,\r", "-\t\t\tnull,\r", "-\t\t\tOS.XmCHARSET_TEXT,\r", "-\t\t\tOS.XmCHARSET_TEXT,\r", "-\t\t\tnull,\r", "-\t\t\t0,\r", "-\t\t\tOS.XmOUTPUT_ALL);\r", "-\t\tif (ptr != 0) {\r", "-\t\t\tint length = OS.strlen (ptr);\r", "-\t\t\tbyte [] buffer = new byte [length];\r", "-\t\t\tOS.memmove (buffer, ptr, length);\r", "-\t\t\tOS.XtFree (ptr);\r", "-\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\tfilterPath = new String (Converter.mbcsToWcs (null, buffer));\r", "-\t\t}\r", "-\t\tOS.XmStringFree (xmString3);\r", "-\t\tint xmString4 = argList2 [3];\r", "-\t\tptr = OS.XmStringUnparse (\r", "-\t\t\txmString4,\r", "-\t\t\tnull,\r", "-\t\t\tOS.XmCHARSET_TEXT,\r", "-\t\t\tOS.XmCHARSET_TEXT,\r", "-\t\t\tnull,\r", "-\t\t\t0,\r", "-\t\t\tOS.XmOUTPUT_ALL);\r", "-\t\tif (ptr != 0) {\r", "-\t\t\tint length = OS.strlen (ptr);\r", "-\t\t\tbyte [] buffer = new byte [length];\r", "-\t\t\tOS.memmove (buffer, ptr, length);\r", "-\t\t\tOS.XtFree (ptr);\r", "-\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\tfullPath = new String (Converter.mbcsToWcs (null, buffer));\r", "-\t\t}\r", "-\t\tOS.XmStringFree (xmString4);\r", "-\t\tint length = filterPath.length ();\r", "-\t\tif (length != 0 && filterPath.charAt (length - 1) == '/') {\r", "-\t\t\tfilterPath = filterPath.substring (0, length - 1);\r", "-\t\t\tint index = fullPath.lastIndexOf ('/');\r", "-\t\t\tfileName = fullPath.substring (index + 1, fullPath.length ());\r", "-\t\t}\r", "-\t}\r", "-\r", "-\tcallback.dispose ();\r", "+\tokCallback.dispose ();\r", "+\tcancelCallback.dispose ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82dfefa2fa9d861ead988f8e2004492a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "f13bd9400fedc174bad61b02e297f54dcefc8695", "commitAfterChange": "dc7272eeeee95074eb6b23ed3ac3ab956c23492c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void extractValues()", "signatureAfterChange": "\r void extractValues()", "diff": ["-\tint [] argList2 = {OS.XmNdirectory, 0, OS.XmNdirSpec, 0};\r", "-\tOS.XtGetValues (dialog, argList2, argList2.length / 2);\r", "+\tint [] argList = {OS.XmNdirectory, 0, OS.XmNdirSpec, 0};\r", "+\tOS.XtGetValues (dialog, argList, argList.length / 2);\r", "-\tint xmString3 = argList2 [1];\r", "+\tint xmString1 = argList [1];\r", "-\t\txmString3,\r", "+\t\txmString1,\r", "-\tOS.XmStringFree (xmString3);\r", "+\tOS.XmStringFree (xmString1);\r", "+\tif (filterPath.endsWith(\"/\")) {\r", "+\t\tfilterPath = filterPath.substring (0, filterPath.length() - 1);\r", "+\t}\r", "-\tint xmString4 = argList2 [3];\r", "+\tint xmString2 = argList [3];\r", "-\t\txmString4,\r", "+\t\txmString2,\r", "-\t\tfullPath = new String (Converter.mbcsToWcs (null, buffer));\r", "+\t\tfullPath = new String (Converter.mbcsToWcs (null, buffer)).trim();\r", "-\tOS.XmStringFree (xmString4);\r", "+\tOS.XmStringFree (xmString2);\r", "-\tint length = filterPath.length ();\r", "-\tif (length != 0 && filterPath.charAt (length - 1) == '/') {\r", "-\t\tfilterPath = filterPath.substring (0, length - 1);\r", "+\tif ((style & SWT.MULTI) != 0) {\r", "+\t\tint fileList = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_LIST);\r", "+\t\tif (fileList == 0) return;\r", "+\t\tint [] argList2 = {OS.XmNselectedItems, 0, OS.XmNselectedItemCount, 0};\r", "+\t\tOS.XtGetValues (fileList, argList2, argList2.length / 2);\r", "+\t\tint items = argList2 [1], itemCount = argList2 [3];\r", "+\t\tint [] buffer1 = new int [1];\r", "+\t\tfileNames = new String [itemCount];\r", "+\t\tboolean match = false;\r", "+\t\tfor (int i = 0; i < itemCount; i++) {\r", "+\t\t\tOS.memmove (buffer1, items, 4);\r", "+\t\t\tptr = buffer1 [0];\r", "+\t\t\tint address = OS.XmStringUnparse (\r", "+\t\t\t\tptr,\r", "+\t\t\t\tnull,\r", "+\t\t\t\tOS.XmCHARSET_TEXT,\r", "+\t\t\t\tOS.XmCHARSET_TEXT,\r", "+\t\t\t\tnull,\r", "+\t\t\t\t0,\r", "+\t\t\t\tOS.XmOUTPUT_ALL);\r", "+\t\t\tif (address == 0) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\t\t\tint length = OS.strlen (address);\r", "+\t\t\tbyte [] buffer = new byte [length];\r", "+\t\t\tOS.memmove (buffer, address, length);\r", "+\t\t\tOS.XtFree (address);\r", "+\t\t\t/* Use the character encoding for the default locale */\r", "+\t\t\tString fullFilename = new String (Converter.mbcsToWcs (null, buffer));\r", "+\t\t\tint index = fullFilename.lastIndexOf ('/');\r", "+\t\t\tfileNames [i] = fullFilename.substring (index + 1, fullFilename.length ());\r", "+\t\t\titems += 4;\r", "+\t\t\tif (fullFilename.equals(fullPath)) match = true;\r", "+\t\t}\r", "+\t\tif (!match) {\r", "+\t\t\t/* The user has modified the text field such that it doesn't match any\r", "+\t\t\t * of the selected files, so use this value instead\r", "+\t\t\t */\r", "+\t\t\tfileNames = new String [1];\r", "+\t\t\tint index = fullPath.lastIndexOf ('/');\r", "+\t\t\tfileNames [0] = fullPath.substring (index + 1, fullPath.length ());\r", "+\t\t}\r", "+\t} else {\r", "-\t\tfileName = fullPath.substring (index + 1, fullPath.length ());\r", "+\t\tfileNames [0] = fullPath.substring (index + 1, fullPath.length ());\r"]}], "num": 47048}