{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9cd6ba9ee74aa6d0ade528126621bb8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadc3a5432ddff8537d6a100cbbe8a18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "39d1ad0764cd845e3f67bc9896316fd5fef09a9a", "commitAfterChange": "1fb67f7beaf5e4a9683c7661a272dd0b3fab2e47", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["+\tint height = hHint;", "+\tint width = wHint;", "+\tPoint bottomSize = new Point(0, 0);", "+\tif (bottom != null) {", "+\t\tPoint trim = bottom.computeSize(width, hHint);", "+\t\ttrim.x = trim.x - width;", "+\t\tbottomSize = bottom.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, SWT.DEFAULT);", "+\t\tif (height != SWT.DEFAULT) {", "+\t\t\tbottomSize.y = Math.min(bottomSize.y, height);", "+\t\t\theight -= bottomSize.y + BORDER_TOP + BORDER_STRIPE + BORDER_BOTTOM;", "+\t\t}", "+\t}", "+\tif (curve == null) {", "+\t\tif (height == SWT.DEFAULT) {", "+\t\t\tif (left != null) {", "+\t\t\t\tPoint s = left.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\t\tupdateCurve(s.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tupdateCurve(height);", "+\t\t}", "+\t} else {", "+\t\tupdateCurve(getSize().y);", "+\t}", "+\tif (height != SWT.DEFAULT && left != null && right != null) {", "+\t\theight -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\t}", "-\t\tPoint trim = right.computeSize(rightWidth, hHint);", "+\t\tPoint trim = right.computeSize(rightWidth, height);", "-\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, hHint);", "+\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, height);", "+\t\tif (width != SWT.DEFAULT) {", "+\t\t\trightSize.x = Math.min(rightSize.x, width);", "+\t\t\twidth = Math.max(CURVE_TAIL, width - rightSize.x - curveWidth + 2* curveIndent);", "+\t\t}", "-\tint width = (wHint == SWT.DEFAULT) ? SWT.DEFAULT : (right == null ? wHint : wHint - rightSize.x - curveWidth + 2* curveIndent);", "-\tif (left != null) {", "-\t\tPoint trim = left.computeSize(width, hHint);", "+\tif (left != null && (width == SWT.DEFAULT || width > 0)) {", "+\t\tPoint trim = left.computeSize(width, height);", "-\t\tleftSize = left.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, hHint);", "+\t\tleftSize = left.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, height);", "-\tif (left != null && right != null) size.x += curveWidth - 2*curveIndent;", "+\tif (left != null && right!= null) size.x += curveWidth - 2*curveIndent;", "-\tsize.y = left != null ? leftSize.y : rightSize.y;", "-\t", "-\tsize.x += (left == null || right == null) ? 0 : BORDER_LEFT + BORDER_RIGHT;", "-\tsize.y += (left == null || right == null) ? 0 : BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\tsize.y = leftSize.y > 0 ? leftSize.y : rightSize.y;", "+\tif (left != null && right!= null) size.y +=  BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\tsize.y += bottomSize.y;", "+\tif (bottom != null && (left != null || right != null)) size.y += BORDER_TOP + BORDER_BOTTOM + BORDER_STRIPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73127a63cdc0a67006e09911e4fd0c94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "39d1ad0764cd845e3f67bc9896316fd5fef09a9a", "commitAfterChange": "1fb67f7beaf5e4a9683c7661a272dd0b3fab2e47", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void layout (boolean changed)", "signatureAfterChange": " public void layout (boolean changed)", "diff": ["-\tboolean noCurve = left == null || right == null;", "+\tboolean showCurve = left != null && right != null;", "+\tint width = size.x;", "+\tint height = size.y;", "+\t", "+\tPoint bottomSize = new Point(0, 0);", "+\tif (bottom != null) {", "+\t\tPoint trim = bottom.computeSize(width, SWT.DEFAULT);", "+\t\ttrim.x = trim.x - width;", "+\t\tbottomSize = bottom.computeSize(width, SWT.DEFAULT);", "+\t\tbottomSize.y = Math.min(bottomSize.y, height);", "+\t\theight -= bottomSize.y + BORDER_TOP + BORDER_BOTTOM + BORDER_STRIPE;", "+\t}", "+\t", "+\tif (showCurve) height -=  BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\t\tPoint trim = right.computeSize(rightWidth, SWT.DEFAULT);", "+\t\tPoint trim = right.computeSize(rightWidth, height);", "-\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, SWT.DEFAULT);", "-\t}", "-\tint width = noCurve ? size.x : size.x - curveWidth + 2* curveIndent - BORDER_LEFT - BORDER_RIGHT; ", "-\trightSize.x = Math.min(width, rightSize.x);", "-\twidth -= rightSize.x;", "-\tPoint leftSize = new Point(0, 0);", "-\tif (left != null) {", "-\t\tPoint trim = left.computeSize(width, SWT.DEFAULT);", "-\t\ttrim.x = trim.x - width;", "-\t\tleftSize = left.computeSize(width - trim.x, SWT.DEFAULT);", "+\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, height);", "+\t\trightSize.x = Math.min(rightSize.x, width);", "+\t\twidth -= rightSize.x + curveWidth - 2* curveIndent;", "+\t\twidth = Math.max(width, CURVE_TAIL); ", "-\tint x = noCurve ? 0 : BORDER_LEFT;", "+\tPoint leftSize = new Point(0, 0);", "+\tif (left != null) {", "+\t\tPoint trim = left.computeSize(width, height);", "+\t\ttrim.x = trim.x - width;", "+\t\tleftSize = left.computeSize(Math.max(0, width - trim.x), height);", "+\t\tleftSize.y = Math.min(leftSize.y, height);", "+\t}", "+", "+\tint x = 0;", "+\tint y = 0;", "-\tif(left != null) {", "-\t\tint height = Math.min(noCurve ? size.y : size.y - BORDER_TOP - BORDER_BOTTOM - 2*BORDER_STRIPE, leftSize.y);", "-\t\tint y = noCurve ? 0 : BORDER_TOP + BORDER_STRIPE;", "-\t\tleftRect = new Rectangle(x, y, leftSize.x, height);", "-\t\tx += leftSize.x;", "+\tRectangle bottomRect = null;", "+\tif (bottom != null) {", "+\t\tbottomRect = new Rectangle(x, y+size.y-bottomSize.y, bottomSize.x, bottomSize.y);", "-\tif (!noCurve) {", "-\t\tcurveStart = x - curveIndent;", "-\t\tx += curveWidth - 2*curveIndent;", "+\tif (showCurve) y += BORDER_TOP + BORDER_STRIPE;", "+\tif(left != null) {", "+\t\tif (leftSize.x > 0) {", "+\t\t\tleftRect = new Rectangle(x, y, leftSize.x, leftSize.y);", "+\t\t\tcurveStart = x + leftSize.x - curveIndent;", "+\t\t\tx += leftSize.x + curveWidth - 2*curveIndent;", "+\t\t} else {", "+\t\t\tleftRect = new Rectangle(0, 0, 0, 0);", "+\t\t\tcurveStart = 0;", "+\t\t\tx += curveWidth - curveIndent;", "+\t\t}", "-\t\tint height = noCurve ? size.y : size.y - BORDER_TOP - BORDER_BOTTOM - 2*BORDER_STRIPE;", "-\t\tint y = noCurve ? 0 : BORDER_TOP + BORDER_STRIPE;", "-\t\trightRect = new Rectangle(x, y, rightSize.x, height);", "+\t\trightRect = new Rectangle(x, y, rightSize.x, rightSize.y);", "+\tif (bottomRect != null) bottom.setBounds(bottomRect);"]}], "num": 54080}