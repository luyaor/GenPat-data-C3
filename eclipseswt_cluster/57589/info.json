{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "834cad6a9882e33432e83113cbcacde6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b22dda624a1561c6f35195ab5f599e96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public String [] getItems ()", "signatureAfterChange": " public String [] getItems ()", "diff": ["-\tint count = getItemCount ();", "+\tint count = OS.gtk_tree_model_iter_n_children (modelHandle, 0);", "+\tint [] ptr = new int [1];", "-\tfor (int i=0; i<count; i++) result [i] = getItem (i);", "+\tint iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\tfor (int index=0; index<count; index++) {", "+\t\tOS.gtk_tree_model_iter_nth_child (modelHandle, iter, 0, index);", "+\t\tOS.gtk_tree_model_get (modelHandle, iter, 0, ptr, -1);", "+\t\tif (ptr [0] != 0) {", "+\t\t\tint length = OS.strlen (ptr [0]);", "+\t\t\tbyte[] buffer = new byte [length];", "+\t\t\tOS.memmove (buffer, ptr [0], length);", "+\t\t\tOS.g_free (ptr [0]);", "+\t\t\tresult [index] = new String (Converter.mbcsToWcs (null, buffer));", "+\t\t}", "+\t}", "+\tOS.g_free (iter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed924fa57a572e0770a5fa1e943f38ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "de57119d4c2e8cc6936a64281ecb9753509b7457", "commitAfterChange": "66765d120ac73f3ebfa5089726061e6ce4afe259", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tString text = getText ();", "-\tint length = text.length ();", "-\tif (length <= end) error (SWT.ERROR_INVALID_RANGE);", "-\t/*", "-\t* NOTE: The current implementation uses substring ()", "-\t* which can reference a potentially large character", "-\t* array.", "-\t*/", "-\treturn text.substring (start, end + 1);", "+\tint address;", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\taddress = OS.gtk_editable_get_chars (handle, start, end + 1);", "+\t} else {", "+\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "+\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, startIter, start);", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, endIter, end + 1);", "+\t\taddress = OS.gtk_text_buffer_get_text (bufferHandle, startIter, endIter, true);", "+\t}", "+\tif (address == 0) return \"\";", "+\tint length = OS.strlen (address);", "+\tbyte [] buffer = new byte [length];", "+\tOS.memmove (buffer, address, length);", "+\tOS.g_free (address);", "+\treturn new String (Converter.mbcsToWcs (null, buffer));"]}], "num": 57589}