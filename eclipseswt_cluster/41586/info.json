{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d77efd04863270dd106f61a29c04a57", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc893cc783f20b39d295826c496eb7dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "252214e1ac298f0a0afcabaddbea343521d62472", "commitAfterChange": "2b385ebc26547316a8160b0ea7e137048ba66f40", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos)", "signatureAfterChange": " \tpublic static int newControl(int parentControlHandle, int pos, short init, short min, short max, short procID)", "diff": ["-\t */", "-\tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos) {", "-\t\tint n= countSubControls(parentControlHandle);", "-\t\t", "-\t\t// add at end", "-\t\tif (OSEmbedControl(controlHandle, parentControlHandle) != OS.kNoErr)", "-\t\t\tSystem.out.println(\"MacUtil.embedControl: could not embed control in parent\");", "-\t\t\t", "-\t\tif (pos < 0 || pos > n)", "-\t\t\tpos= n;", "-\t\t", "-\t\tint[] outControl= new int[1];", "-\t\tfor (int i= 0; i < pos; i++) {", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(n-pos+1), outControl) == 0)", "-\t\t\t\tif (OSEmbedControl(outControl[0], parentControlHandle) != OS.kNoErr)", "-\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: couldn't move control to end\");", "-\t\t}", "-\t\t", "-\t\t// verify correct position", "-\t\tn++;", "-\t\tfor (int i= 0; i < n; i++) {", "-\t\t\tint index= (n-i);", "-\t\t\tint[] outHandle= new int[1];", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)index, outHandle) == 0) {\t// indices are 1 based", "-\t\t\t\tif (outHandle[0] == controlHandle) {", "-\t\t\t\t\tif (i != pos)", "-\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: creation at position nyi (is: \"+i+\" should: \"+ pos+\")\");", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tSystem.out.println(\"MacUtil.embedControl: new child not found\");", "-\t}", "+\t\tint controlHandle;", "+\t\tif (HIVIEW) {", "+\t\t\tcontrolHandle= OS.NewControl(0, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t\tOS.HIViewSetNeedsDisplay(controlHandle, true);", "+\t\t} else {", "+\t\t\tint windowHandle= OS.GetControlOwner(parentControlHandle);", "+\t\t\tcontrolHandle= OS.NewControl(windowHandle, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tinitLocation(controlHandle);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebd3c2046b52c6009618a8328200004a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprivate void syncBounds()", "signatureAfterChange": " \t \tprivate void syncBounds(MacRect b)", "diff": ["-\t * Synchronize the size and visibilty of the MLTEtext with the underlying user pane.\r\t */", "-\tprivate void syncBounds() {", "+\tprivate void syncBounds(MacRect b) {", "-\t\tif (tx == 0)", "-\t\t\treturn;\t\t\t", "-\t\t", "-\t\tboolean isShowing= isShowing();", "-\t\tif (isShowing != txVisible) {", "-\t\t\ttxVisible= isShowing;", "-\t\t\tint[] tags= new int[] { OS.kTXNVisibilityTag };", "-\t\t\tint[] data= new int[] { txVisible ? 1 : 0 };", "-\t\t\tOS.TXNSetTXNObjectControls(tx, false, tags.length, tags, data);", "-\t\t}", "-\t\t", "-\t\tif (!isShowing)", "+\t\tif (fTX == 0)", "-\t\t\t\t", "-\t\tRect b= new Rect();", "-\t\tMacUtil.getControlBounds(handle, b);", "-", "-\t\t// this is just too hard to explain...", "-\t\tOS.HIViewSetBoundsOrigin(handle, b.left, b.top);", "-\t\t\t\t", "+\t", "+\t\tif (b == null) {", "+\t\t\tb= new MacRect();", "+\t\t\tOS.GetControlBounds(handle, b.getData());", "+\t\t}", "+\t", "+\t\tint x= b.getX();", "+\t\tint y= b.getY();", "+\t\tint w= b.getWidth();", "+\t\tint h= b.getHeight();", "+\t\t", "-\t\t\tb.left+= FOCUS_BORDER;", "-\t\t\tb.top+= FOCUS_BORDER;", "-\t\t\tb.right-= FOCUS_BORDER;", "-\t\t\tb.bottom-= FOCUS_BORDER;", "+\t\t\tx+= FOCUS_BORDER;", "+\t\t\ty+= FOCUS_BORDER;", "+\t\t\tw-= 2*FOCUS_BORDER;", "+\t\t\th-= 2*FOCUS_BORDER;", "-\t\tRectangle newBounds= new Rectangle(b.left, b.top, b.right-b.left, b.bottom-b.top);", "-\t\tif (txFrameBounds == null || !txFrameBounds.equals(newBounds)) {", "-\t\t\tOS.TXNSetFrameBounds(tx, b.top, b.left, b.bottom, b.right, txFrameID);", "-\t\t\tOS.HIViewSetNeedsDisplay(handle, true);", "-\t\t\ttxFrameBounds= newBounds;", "+\t\tRectangle oldRect= fFrameBounds;", "+\t\tfFrameBounds= new Rectangle(x, y, w, h);", "+\t\tif (oldRect == null || !oldRect.equals(fFrameBounds)) {", "+\t\t\tOS.TXNSetFrameBounds(fTX, y, x, y+h, x+w, fFrameID);", "-\t\tOS.TXNDraw(tx, 0);", "+\t\tOS.TXNDraw(fTX, 0);"]}], "num": 41586}