{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e65de091624a8eea3bc8f74aef4865d6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5270f1cd9d15869823497ae88e151f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tvoid relayout123()", "signatureAfterChange": "  Rect inset ()", "diff": ["+", "+Rect inset () {", "+\tif ((state & CANVAS) != 0) {", "+\t\tRect rect = new Rect ();", "+\t\tint [] outMetric = new int [1];", "+\t\tif ((style & SWT.NO_FOCUS) == 0 && hooksKeys ()) {", "+\t\t\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "+\t\t\trect.left += outMetric [0];", "+\t\t\trect.top += outMetric [0];", "+\t\t\trect.right += outMetric [0];", "+\t\t\trect.bottom += outMetric [0];", "+\t\t}", "+\t\tif (hasBorder ()) {", "+\t\t\tOS.GetThemeMetric (OS.kThemeMetricEditTextFrameOutset, outMetric);", "+\t\t\trect.left += outMetric [0];", "+\t\t\trect.top += outMetric [0];", "+\t\t\trect.right += outMetric [0];", "+\t\t\trect.bottom += outMetric [0];", "+\t\t}", "+\t\treturn rect;", "+\t}", "+\treturn EMPTY_RECT;", "+} ", "-\t", "-\tvoid relayout123() {", "-\t\tif (MacUtil.HIVIEW)", "-\t\t\tnewRelayout();", "-\t\telse", "-\t\t\toldRelayout();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2582be6667a7ec733447ac912ad78293", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 34, "signatureBeforeChange": " void hookEvents ()", "signatureAfterChange": "  Rect inset ()", "diff": ["-void hookEvents () {", "-\tsuper.hookEvents ();", "-    /* AW", "-\tint windowProc = getDisplay ().windowProc;", "-\tOS.XtAddCallback (handle, OS.XmNactivateCallback, windowProc, SWT.DefaultSelection);", "-\tOS.XtAddCallback (handle, OS.XmNvalueChangedCallback, windowProc, SWT.Modify);", "-\tOS.XtAddCallback (handle, OS.XmNmodifyVerifyCallback, windowProc, SWT.Verify);", "-    */", "-\tDisplay display= getDisplay();\t\t", "-\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneDrawProcTag, display.fUserPaneDrawProc);", "-\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneHitTestProcTag, display.fUserPaneHitTestProc);", "-}", "+", "+Rect inset () {", "+\tRect rect = new Rect ();", "+\tint [] outMetric = new int [1];", "+\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "+\trect.left += outMetric [0];", "+\trect.top += outMetric [0];", "+\trect.right += outMetric [0];", "+\trect.bottom += outMetric [0];", "+\tif (hasBorder ()) {", "+\t\tOS.GetThemeMetric (OS.kThemeMetricEditTextFrameOutset, outMetric);", "+\t\trect.left += outMetric [0];", "+\t\trect.top += outMetric [0];", "+\t\trect.right += outMetric [0];", "+\t\trect.bottom += outMetric [0];", "+\t}", "+\treturn rect;\t", "+} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8409098363c1c4be0b2bfbea229060", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 16, "signatureBeforeChange": " int processSetFocus (Object callData)", "signatureAfterChange": "  void destroyCIcon (int iconHandle)", "diff": ["+", "+void destroyCIcon (int iconHandle) {", "+\tOS.HLock(iconHandle);", "+\t", "+\t/* Dispose the ColorTable */", "+\tint[] iconPtr = new int[1];", "+\tOS.memcpy(iconPtr, iconHandle, 4);\t", "+\tPixMap iconPMap = new PixMap();", "+\tOS.memcpy(iconPMap, iconPtr[0], PixMap.sizeof);", "+\tif (iconPMap.pmTable != 0) OS.DisposeHandle(iconPMap.pmTable);", "+", "+\t/* Dispose the icon data */", "+\tint[] iconData = new int[1];", "+\tOS.memcpy(iconData, iconPtr[0] + PixMap.sizeof + 2 * BitMap.sizeof, 4);", "+\tif (iconData[0] != 0) OS.DisposeHandle(iconData[0]);", "+\t", "+\tOS.HUnlock(iconHandle);", "+\t", "+\t/* Dispose the icon */", "+\tOS.DisposeHandle(iconHandle);", "+}", "-}", "-int processSetFocus (Object callData) {", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d32ee2237717bf41f509df82c6e656", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "dff59987fa6ba2fd252fb03f30dca165928c101d", "commitAfterChange": "933544b6b38a99dd9f9b77f4340619bbc2c20893", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r void setCheckboxImageList ()", "signatureAfterChange": "\r \r void setCheckboxImageList (boolean force)", "diff": ["-void setCheckboxImageList () {\r", "+void setCheckboxImageList (boolean force) {\r", "+\tint height = 0, width = 0;\r", "+\tint hImageList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);\r", "+\tif (hImageList != 0) {\r", "+\t\tint [] cx = new int [1], cy = new int [1];\r", "+\t\tOS.ImageList_GetIconSize (hImageList, cx, cy);\r", "+\t\theight = width = cy [0];\r", "+\t} else {\r", "+\t\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);\r", "+\t\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);\r", "+\t\theight = width = (oneItem >> 16) - (empty >> 16);\r", "+\t}\r", "+\tint hOldStateList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);\r", "+\tif (!force && hOldStateList != 0) {\r", "+\t\tint [] cx = new int [1], cy = new int [1];\r", "+\t\tOS.ImageList_GetIconSize (hOldStateList, cx, cy);\r", "+\t\tif (height == cx [0] && width == cy [0]) return;\r", "+\t}\r", "-\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);\r", "-\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);\r", "-\tint height = (oneItem >> 16) - (empty >> 16), width = height;\r", "-\tint hImageList = OS.ImageList_Create (width, height, OS.ILC_COLOR, count, count);\r", "+\tint hStateList = OS.ImageList_Create (width, height, OS.ILC_COLOR, count, count);\r", "-\tOS.ImageList_AddMasked (hImageList, hBitmap, 0);\r", "+\tOS.ImageList_AddMasked (hStateList, hBitmap, 0);\r", "-\tint hOldList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);\r", "-\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_STATE, hImageList);\r", "-\tif (hOldList != 0) OS.ImageList_Destroy (hOldList);\r", "+\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_STATE, hStateList);\r", "+\tif (hOldStateList != 0) OS.ImageList_Destroy (hOldStateList);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad1bf2a8bedceef866164e3e97b6c7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d3d3d45b54fed76abd65ad76476530e48dc0d4e2", "commitAfterChange": "14133ff954794ae4fbfc12100bdaaac6c48bdf36", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  void sendMouseEvent (int type, int button, int gdkEvent)", "signatureAfterChange": "  void sendMouseEvent (int type, int button, int eventPtr)", "diff": ["-void sendMouseEvent (int type, int button, int /*long*/ gdkEvent) {", "+void sendMouseEvent (int type, int button, int /*long*/ eventPtr) {", "-\tevent.time = OS.gdk_event_get_time (gdkEvent);", "+\tevent.time = OS.gdk_event_get_time (eventPtr);", "-\tdouble [] root_x = new double [1], root_y = new double [1];", "-\tOS.gdk_event_get_root_coords (gdkEvent, root_x, root_y);\t", "-\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (eventHandle ());", "-\tint [] origin_x = new int [1], origin_y = new int [1];", "-\tOS.gdk_window_get_origin (window, origin_x, origin_y);", "-\tevent.x = (int)(root_x [0] - origin_x [0]);", "-\tevent.y = (int)(root_y [0] - origin_y [0]);", "+\tif (type == SWT.MouseMove) {", "+\t\tGdkEventMotion gdkEvent = new GdkEventMotion ();", "+\t\tOS.memmove (gdkEvent, eventPtr, GdkEventMotion.sizeof);", "+\t\tif (gdkEvent.is_hint != 0) {", "+\t\t\tint [] pointer_x = new int [1], pointer_y = new int [1];", "+\t\t\tOS.gdk_window_get_pointer (gdkEvent.window, pointer_x, pointer_y, null);", "+\t\t\tevent.x = pointer_x [0];", "+\t\t\tevent.y = pointer_y [0];", "+\t\t} else {", "+\t\t\tint [] origin_x = new int [1], origin_y = new int [1];", "+\t\t\tOS.gdk_window_get_origin (gdkEvent.window, origin_x, origin_y);\t", "+\t\t\tevent.x = (int) (gdkEvent.x_root - origin_x [0]);", "+\t\t\tevent.y = (int) (gdkEvent.y_root - origin_y [0]);", "+\t\t}", "+\t} else {", "+\t\tdouble [] root_x = new double [1], root_y = new double [1];", "+\t\tOS.gdk_event_get_root_coords (eventPtr, root_x, root_y);\t", "+\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (eventHandle ());", "+\t\tint [] origin_x = new int [1], origin_y = new int [1];", "+\t\tOS.gdk_window_get_origin (window, origin_x, origin_y);", "+\t\tevent.x = (int)(root_x [0] - origin_x [0]);", "+\t\tevent.y = (int)(root_y [0] - origin_y [0]);", "+\t}", "-\tOS.gdk_event_get_state (gdkEvent, state);", "+\tOS.gdk_event_get_state (eventPtr, state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76771f97278f1a83781957cd068b611", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3dfc8f3ec633310286d6764dac83cfe55f22b7e9", "commitAfterChange": "690ff1b3ef838cb6fbfea1439ae28ab810f251de", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!column.isDisposed ()) {", "+\t\t\t\tint [] position = new int[1];", "+\t\t\t\tOS.GetDataBrowserTableViewColumnPosition (handle, column.id, position);", "+\t\t\t\tif (position [0] != column.lastPosition) {", "+\t\t\t\t\tcolumn.lastPosition = position [0];", "+\t\t\t\t\tint order = (style & SWT.CHECK) != 0 ? position [0] - 1 : position [0];", "+\t\t\t\t\tif (order == 0) {", "+\t\t\t\t\t\tint [] disclosure = new int [1];", "+\t\t\t\t\t\tboolean [] expandableRows = new boolean [1];", "+\t\t\t\t\t\tOS.GetDataBrowserListViewDisclosureColumn (handle, disclosure, expandableRows);", "+\t\t\t\t\t\tif (disclosure [0] != column.id) {", "+\t\t\t\t\t\t\tOS.SetDataBrowserListViewDisclosureColumn (handle, column.id, expandableRows [0]);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcolumn.sendEvent (SWT.Move);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a3b3c4da8dad11c5f64fea28dba01b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "966068aaa7215bc84ab090be34f0ec9f9cebb06c", "commitAfterChange": "c599c5b678cf64680c86543b4f7a10205d3638e9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t\tif ((style & SWT.SEARCH) != 0) {", "+\t\t\tint [] ptr1 = new int [1];", "+\t\t\tOS.GetControlData (handle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr1, null);", "+\t\t\tPoint size1 = textExtent (ptr1 [0], 0);", "+\t\t\tif (ptr1 [0] != 0) OS.CFRelease (ptr1 [0]);", "+\t\t\twidth = size1.x;", "+\t\t\tint [] ptr2 = new int [1];", "+\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "+\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "+\t\t\twidth = Math.max (width, size2.x);", "+\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fcf448ddd74b1e3303b82fd5584e76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "34cc11d9be7c6799a286a4b7f0c7efe8288cddc9", "commitAfterChange": "c9e6ebd32564e7c38d92ed3bd14ecff35522294d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["+\tNSColor selectionColor = null;", "+\tif (hasSelection || (flags & SWT.LAST_LINE_SELECTION) != 0) {", "+\t\tif (selectionBackground == null) selectionBackground = device.getSystemColor(SWT.COLOR_LIST_SELECTION);", "+\t\tselectionColor = NSColor.colorWithDeviceRed(selectionBackground.handle[0], selectionBackground.handle[1], selectionBackground.handle[2], selectionBackground.handle[3]);", "+\t}", "-\t\tif (selectionBackground == null) selectionBackground = device.getSystemColor(SWT.COLOR_LIST_SELECTION);", "-\t\tNSColor selectionColor = NSColor.colorWithDeviceRed(selectionBackground.handle[0], selectionBackground.handle[1], selectionBackground.handle[2], selectionBackground.handle[3]);", "-\t//TODO draw selection for flags (LAST_LINE_SELECTION and FULL_SELECTION)", "+\t//TODO draw selection for flags (DELIMITER_SELECTION)", "+\tif ((flags & SWT.LAST_LINE_SELECTION) != 0) {", "+\t\tNSRect bounds = lineBounds[lineBounds.length - 1];", "+\t\tNSRect rect = new NSRect();", "+\t\trect.x = pt.x + bounds.x + bounds.width;", "+\t\trect.y = y + bounds.y;", "+\t\trect.width = (flags & SWT.FULL_SELECTION) != 0 ? 0x7fffffff : bounds.height / 3;", "+\t\trect.height = bounds.height;", "+\t\tselectionColor.setFill();", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tpath.appendBezierPathWithRect(rect);", "+\t\tpath.fill();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0eb585719ae81cc0871a2bb9f6ed4ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "cabce7a504b376ba4a2bbe191acc5449e828a45a", "commitAfterChange": "32ca2a35fc6b7ecbddd68d976476a4797d52ddb6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "  Rect inset ()", "signatureAfterChange": "  Rect inset ()", "diff": ["+\t}", "+\tif ((style & SWT.MULTI) != 0 && (style & SWT.BORDER) != 0) {", "+\t\tint [] outMetric = new int [1];", "+\t\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "+\t\tRect rect = new Rect ();", "+\t\trect.left += outMetric [0];", "+\t\trect.top += outMetric [0];", "+\t\trect.right += outMetric [0];", "+\t\trect.bottom += outMetric [0];", "+\t\tOS.GetThemeMetric (OS.kThemeMetricEditTextFrameOutset, outMetric);", "+\t\trect.left += outMetric [0];", "+\t\trect.top += outMetric [0];", "+\t\trect.right += outMetric [0];", "+\t\trect.bottom += outMetric [0];\t\t", "+\t\treturn rect;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de2541c7a52c25cc48205ccfd73c6b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4d9fbf05303a7824df9a584be26163b319e79621", "commitAfterChange": "a5a369c7bd82e9d09b8470c072222ae85e612988", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setTopItem (TreeItem item)", "signatureAfterChange": " public void setTopItem (TreeItem item)", "diff": ["-//\tRect rect = new Rect ();", "-//\tOS.GetControlBounds (handle, rect);", "-//\tint x = rect.left, y = rect.top;", "-//\tif (OS.GetDataBrowserItemPartBounds (handle, item.id, column_id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-//\t\tOS.SetDataBrowserScrollPosition (handle, rect.top - y - 3, 0);", "-//\t}", "+\tRect rect = new Rect ();", "+\tif (OS.GetDataBrowserItemPartBounds (handle, item.id, column_id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\tint border = 0;", "+\t\tbyte [] hasBorder = new byte [1];", "+\t\tOS.GetControlData (handle, (short) OS.kControlEntireControl, OS.kControlDataBrowserIncludesFrameAndFocusTag, 1, hasBorder, null);", "+\t\tif (hasBorder [0] != 0) {", "+\t\t\tint [] outMetric = new int [1];", "+\t\t\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "+\t\t\tborder += outMetric [0];", "+\t\t}", "+\t\tint [] top = new int [1], left = new int [1];", "+\t\tOS.GetDataBrowserScrollPosition (handle, top, left);", "+\t\tOS.SetDataBrowserScrollPosition (handle, top [0] + rect.top - border, left [0]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc697597a42e516d86d26eeff49bfb56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "79a568b5fdc1ca6bf2c553d9a3775288be090ca1", "commitAfterChange": "d45e70aae9b240b33f4f8f69514d8f1f3dcf1e1c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t\t\t\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "+\t\t\t\t\t\tflags = OS.DT_CALCRECT | OS.DT_WORDBREAK;", "+\t\t\t\t\t\trect.right = wHint - width - 2 * border;", "+\t\t\t\t\t\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\t\t\t\t\t\trect.right -= CHECK_WIDTH + 3; ", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trect.right -= 6;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\t\t\t\t\t\trect.right -= 2;", "+\t\t\t\t\t\t\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\t\t\t\t\t\t\trect.right -= 2;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 61664}