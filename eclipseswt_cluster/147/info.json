{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed475f1e87250aee05d0f61be303f593", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b1076f0f6a3adb7c589d040642e976", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void _connectChild (int h)", "signatureAfterChange": " public Point getSelection ()", "diff": ["-void _connectChild (int h) {", "-\tOS.gtk_fixed_put (fixedHandle, h, (short)0, (short)0);", "-}", "+/*\tGtkEditable editable = new GtkEditable();", "+\tOS.memmove (editable, entryHandle, GtkEditable.sizeof);*/", "+\t/* FIXME */", "+\treturn new Point (0,0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fc3cca60f41edc0eaeaeae29fee1e51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public Point getSelection ()", "signatureAfterChange": "  public Point getSelection ()", "diff": ["- */", "+", "-\tcheckWidget();", "- \tPoint selection= new Point(0, 0);", "-\tif (menuHandle == 0) {", "-\t\tshort[] s= new short[2];", "-\t\tOS.GetControlData(handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, s);", "-\t\tselection.x= (short) s[0];", "-\t\tselection.y= (short) s[1];", "+\tcheckWidget ();", "+\tPoint selection;", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t// NEEDS WORK", "+\t\tselection = new Point(0, 0);", "+\t} else {", "+\t\tshort [] s = new short [2];", "+\t\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "+\t\tselection = new Point (s[0], s[1]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29954cf83210da4dc2906024edd2eb00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/LEDataInputStream.java", "commitBeforeChange": "6c7d14f6d74c3a897920b14be3be676f49b65550", "commitAfterChange": "90f2dd3beed337dd1e3c587d4ba29070120f8f73", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tprivate void unread(int oneByte) throws IOException", "signatureAfterChange": "\r \tpublic int available() throws IOException", "diff": ["+\t */\r", "+\tpublic int available() throws IOException {\r", "+\t\tif (buf == null) throw new IOException();\r", "+\t\treturn (buf.length - pos) + in.available();\r", "-\t */\r", "-\tprivate void unread(int oneByte) throws IOException {\r", "-\t\tif (buf == null || pos == 0) throw new IOException();\r", "-\t\tbuf[--pos] = (byte)oneByte;\r", "-\t}\r"]}], "num": 147}