{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "daf6347b5c2c9575f39b811f7148f04a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a23d516004458eb1676ff2e0af4a8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d0a0e4889f0021021d098ac09c6a472b6e3cb782", "commitAfterChange": "9fee840a36620efd4bcba2113ec0105613a6189e", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-", "-\t\tif (!awaitingNavigate) {", "-\t\t\t/*", "-\t\t\t * Add the page's nsIDOMWindow to the collection of windows that will", "-\t\t\t * have DOM listeners added to them later on in the page loading", "-\t\t\t * process.  These listeners cannot be added yet because the", "-\t\t\t * nsIDOMWindow is not ready to take them at this stage.", "-\t\t\t */", "-\t\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "-\t\t\tint rc = progress.GetDOMWindow (result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\t\tunhookedDOMWindows.addElement (new LONG (result[0]));", "-\t\t}", "+\t\t/*", "+\t\t * Add the page's nsIDOMWindow to the collection of windows that will", "+\t\t * have DOM listeners added to them later on in the page loading", "+\t\t * process.  These listeners cannot be added yet because the", "+\t\t * nsIDOMWindow is not ready to take them at this stage.", "+\t\t */", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\tint rc = progress.GetDOMWindow (result);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\tunhookedDOMWindows.addElement (new LONG (result[0]));", "-\t\t\tif (!awaitingNavigate) {", "-\t\t\t\tStatusTextEvent event = new StatusTextEvent (browser);", "-\t\t\t\tevent.display = browser.getDisplay ();", "-\t\t\t\tevent.widget = browser;", "-\t\t\t\tevent.text = \"\"; //$NON-NLS-1$", "-\t\t\t\tfor (int i = 0; i < statusTextListeners.length; i++) {", "-\t\t\t\t\tstatusTextListeners[i].changed (event);", "-\t\t\t\t}", "+\t\t\tStatusTextEvent event = new StatusTextEvent (browser);", "+\t\t\tevent.display = browser.getDisplay ();", "+\t\t\tevent.widget = browser;", "+\t\t\tevent.text = \"\"; //$NON-NLS-1$", "+\t\t\tfor (int i = 0; i < statusTextListeners.length; i++) {", "+\t\t\t\tstatusTextListeners[i].changed (event);", "+\t\t\t}", "-\t\t\t\t/* re-install registered functions */", "-\t\t\t\tEnumeration elements = functions.elements ();", "-\t\t\t\twhile (elements.hasMoreElements ()) {", "-\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "-\t\t\t\t\texecute (function.functionString);", "-\t\t\t\t}", "+\t\t\t/* re-install registered functions */", "+\t\t\tEnumeration elements = functions.elements ();", "+\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\texecute (function.functionString);", "+\t\t\t}", "-\t\t\t\tProgressEvent event2 = new ProgressEvent (browser);", "-\t\t\t\tevent2.display = browser.getDisplay ();", "-\t\t\t\tevent2.widget = browser;", "-\t\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "-\t\t\t\t\tprogressListeners[i].completed (event2);", "-\t\t\t\t}", "+\t\t\tProgressEvent event2 = new ProgressEvent (browser);", "+\t\t\tevent2.display = browser.getDisplay ();", "+\t\t\tevent2.widget = browser;", "+\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\tprogressListeners[i].completed (event2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6df2274f4693836552a58dcffd44ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "caa84d2b9df2c3b9eedb5f86a4ec38796c3a6c51", "commitAfterChange": "1a91a0641b6efab2fd52bee03ca0dd6d01f80e4e", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 110, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t/*", "-\t\t * Add the page's nsIDOMWindow to the collection of windows that will", "-\t\t * have DOM listeners added to them later on in the page loading", "-\t\t * process.  These listeners cannot be added yet because the", "-\t\t * nsIDOMWindow is not ready to take them at this stage.", "-\t\t */", "-\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "-\t\tint rc = progress.GetDOMWindow (result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\tunhookedDOMWindows.addElement (new LONG (result[0]));", "+\t\tif (!awaitingNavigate) {", "+\t\t\t/*", "+\t\t\t * Add the page's nsIDOMWindow to the collection of windows that will", "+\t\t\t * have DOM listeners added to them later on in the page loading", "+\t\t\t * process.  These listeners cannot be added yet because the", "+\t\t\t * nsIDOMWindow is not ready to take them at this stage.", "+\t\t\t */", "+\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\t\tint rc = progress.GetDOMWindow (result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\tunhookedDOMWindows.addElement (new LONG (result[0]));", "+\t\t}", "-\t\t\tStatusTextEvent event = new StatusTextEvent (browser);", "-\t\t\tevent.display = browser.getDisplay ();", "-\t\t\tevent.widget = browser;", "-\t\t\tevent.text = \"\"; //$NON-NLS-1$", "-\t\t\tfor (int i = 0; i < statusTextListeners.length; i++) {", "-\t\t\t\tstatusTextListeners[i].changed (event);", "-\t\t\t}", "-\t\t\tProgressEvent event2 = new ProgressEvent (browser);", "-\t\t\tevent2.display = browser.getDisplay ();", "-\t\t\tevent2.widget = browser;", "-\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "-\t\t\t\tprogressListeners[i].completed (event2);", "+\t\t\tif (!awaitingNavigate) {", "+\t\t\t\tStatusTextEvent event = new StatusTextEvent (browser);", "+\t\t\t\tevent.display = browser.getDisplay ();", "+\t\t\t\tevent.widget = browser;", "+\t\t\t\tevent.text = \"\"; //$NON-NLS-1$", "+\t\t\t\tfor (int i = 0; i < statusTextListeners.length; i++) {", "+\t\t\t\t\tstatusTextListeners[i].changed (event);", "+\t\t\t\t}", "+\t\t\t\tProgressEvent event2 = new ProgressEvent (browser);", "+\t\t\t\tevent2.display = browser.getDisplay ();", "+\t\t\t\tevent2.widget = browser;", "+\t\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\t\tprogressListeners[i].completed (event2);", "+\t\t\t\t}"]}], "num": 45664}