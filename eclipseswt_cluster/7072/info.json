{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7305f507b9d2147cb73c82cfa964b129", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccc82fd2267b1c549de9cb576646d33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "9d4bb5b4ce77a05ecc0d7640bf75e1befec445c7", "commitAfterChange": "dbea67a910389ee7d738866aa8ecd95dd99f2aa1", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 80, "signatureBeforeChange": "  \tvoid loadProfile(int profile)", "signatureAfterChange": "  \tvoid loadProfile(int profile)", "diff": ["-\t\tswitch (profile) {", "-\t\t\tcase 1: {", "-\t\t\t\tString text = getText(TextEditor.class.getResourceAsStream(\"text.txt\"));  //$NON-NLS-1$", "-\t\t\t\tStyleRange[] styles = getStyles(TextEditor.class.getResourceAsStream(\"styles.txt\"));  //$NON-NLS-1$", "-\t\t\t\tstyledText.setText(text);", "-\t\t\t\tstyledText.setStyleRanges(styles);", "-\t\t\t\tbreak;", "+\t\ttry {", "+\t\t\tswitch (profile) {", "+\t\t\t\tcase 1: {", "+\t\t\t\t\tString text = openFile(TextEditor.class.getResourceAsStream(\"text.txt\"));  //$NON-NLS-1$", "+\t\t\t\t\tStyleRange[] styles = getStyles(TextEditor.class.getResourceAsStream(\"styles.txt\"));  //$NON-NLS-1$", "+\t\t\t\t\tstyledText.setText(text);", "+\t\t\t\t\tstyledText.setStyleRanges(styles);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase 2: {", "+\t\t\t\t\tstyledText.setText(getResourceString(\"Profile2\"));  //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase 3: {", "+\t\t\t\t\tString text = openFile(TextEditor.class.getResourceAsStream(\"text4.txt\"));  //$NON-NLS-1$", "+\t\t\t\t\tstyledText.setText(text);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase 4: {", "+\t\t\t\t\tstyledText.setText(getResourceString(\"Profile4\"));  //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\tcase 2: {", "-\t\t\t\tstyledText.setText(getResourceString(\"Profile2\"));  //$NON-NLS-1$", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase 3: {", "-\t\t\t\tString text = getText(TextEditor.class.getResourceAsStream(\"text4.txt\"));  //$NON-NLS-1$", "-\t\t\t\tstyledText.setText(text);", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase 4: {", "-\t\t\t\tstyledText.setText(getResourceString(\"Profile4\"));  //$NON-NLS-1$", "-\t\t\t\tbreak;", "-\t\t\t}", "+\t\t} catch (Exception e) {", "+\t\t\tstyledText.setText(e.getMessage());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c82e0236b649bd56897a0d0f8b57da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "3550033b997d0fa2bf95b0dc245702b98b5325bd", "commitAfterChange": "ff8ec8fc1484c7eedcc70981458ecc23d5a64f37", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static void loadAdditionalLibraries (String mozillaPath)", "signatureAfterChange": "  static void loadAdditionalLibraries (String mozillaPath)", "diff": ["-// the following is intentionally commented", "+\tif (Mozilla.IsPre_4) return;", "-//\tif (!Mozilla.IsPre_4) {", "-//\t\tSystem.loadLibrary (\"swt-xulrunner10\"); // get it extracted", "-//\t\tbyte[] bytes = Converter.wcsToMbcs (null, /* path to libswt-xulrunner10.so */ \"\", true); //$NON-NLS-1$", "-//\t\tOS.dlopen (bytes, OS.RTLD_NOW | OS.RTLD_GLOBAL);", "-//\t}", "+\t/*", "+\t* The use of the swt-xulrunner-fix library works around mozilla bug", "+\t* https://bugzilla.mozilla.org/show_bug.cgi?id=720682 (XULRunner 10).", "+\t*/", "+\tString libName = \"libswt-xulrunner-fix.so\"; //$NON-NLS-1$", "+\tFile libsDir = new File (getProfilePath () + \"/libs/\" + Mozilla.OS() + '/' + Mozilla.Arch ()); //$NON-NLS-1$", "+\tFile file = new File (libsDir, libName);", "+\tjava.io.InputStream is = Library.class.getResourceAsStream ('/' + libName);", "+\tif (is != null) {", "+\t\tif (!libsDir.exists ()) {", "+\t\t\tlibsDir.mkdirs ();", "+\t\t}", "+\t\tint read;", "+\t\tbyte [] buffer = new byte [4096];", "+\t\ttry {", "+\t\t\tFileOutputStream os = new FileOutputStream (file);", "+\t\t\twhile ((read = is.read (buffer)) != -1) {", "+\t\t\t\tos.write(buffer, 0, read);", "+\t\t\t}", "+\t\t\tos.close ();", "+\t\t\tis.close ();", "+\t\t} catch (FileNotFoundException e) {", "+\t\t} catch (IOException e) {", "+\t\t}", "+\t}", "+", "+\tif (file.exists ()) {", "+\t\tbyte[] bytes = Converter.wcsToMbcs (null, file.getAbsolutePath (), true);", "+\t\tOS.dlopen (bytes, OS.RTLD_NOW | OS.RTLD_GLOBAL);", "+\t}"]}], "num": 7072}