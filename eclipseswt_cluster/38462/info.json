{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc62af3f6a0aab6e5aeeded7862a9fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aa1dbe1737c1d3d168bbe07f7481a61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "966068aaa7215bc84ab090be34f0ec9f9cebb06c", "commitAfterChange": "c599c5b678cf64680c86543b4f7a10205d3638e9", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  void initializeInsets ()", "signatureAfterChange": "  void initializeInsets ()", "diff": ["-\t/* For some reason, this code calculates insets too big. */", "-//\tOS.CreateEditUnicodeTextControl (0, rect, 0, false, null, outControl);", "-//\teditTextInset = computeInset (outControl [0]);", "-//\tOS.DisposeControl (outControl [0]);\t", "-\teditTextInset = new Rect ();", "-\tint [] outMetric = new int [1];", "-\tOS.GetThemeMetric (OS.kThemeMetricFocusRectOutset, outMetric);", "-\tint inset = outMetric [0]; ", "-\tOS.GetThemeMetric (OS.kThemeMetricEditTextFrameOutset, outMetric);", "-\tinset += outMetric [0];", "-\teditTextInset.left = editTextInset.top = editTextInset.right = editTextInset.bottom = (short) inset;", "-", "+\tOS.CreateEditUnicodeTextControl (0, rect, 0, false, null, outControl);", "+\teditTextInset = computeInset (outControl [0]);", "+\tOS.DisposeControl (outControl [0]);", "+\t", "+\tint attributes = OS.kHISearchFieldAttributesSearchIcon | OS.kHISearchFieldAttributesCancel;", "+\tOS.HISearchFieldCreate (null, attributes, 0, 0, outControl);", "+\tsearchTextInset = computeInset (outControl [0]);", "+\t//FIXME - ", "+\teditTextInset.bottom = editTextInset.top;", "+\tOS.DisposeControl (outControl [0]);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81c70ec06a15ad0aa65c50c529d88978", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": "  void createHandle ()", "diff": ["-}", "-void createHandle (int index) {", "-\tstate |= HANDLE;", "-\t\thandle= MacUtil.newControl(parent.handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tint[] menuRef= new int[1];", "-\t\tOS.CreateNewMenu(20000, 0, menuRef);", "-\t\tmenuHandle= menuRef[0];", "-\t\tif (menuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.SetControlPopupMenuHandle(handle, menuHandle);", "-\t    int[] outComboBox= new int[1];", "-\t\tOS.HIComboBoxCreate(outComboBox, OS.kHIComboBoxAutoSizeListAttribute);", "-\t\thandle= outComboBox[0];", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tMacUtil.addControl(handle, parent.handle);", "-\t\tOS.HIViewSetVisible(handle, true);", "+", "+void createHandle () {", "+\t// NEEDS WORK - SIMPLE", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\tint [] outControl = new int [1];", "+\t\tint window = OS.GetControlOwner (parent.handle);", "+\t\t/* From ControlDefinitions.h:", "+\t\t * ", "+\t\t * Passing in a menu ID of -12345 causes the popup not to try and get the menu from a", "+\t\t * resource. Instead, you can build the menu and later stuff the MenuRef field in", "+\t\t * the popup data information.                                                                         ", "+\t\t */", "+\t\tOS.CreatePopupButtonControl(window, null, 0, (short)-12345, false, (short)0, (short)0, 0, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\tint[] menuRef= new int[1];", "+\t\tOS.CreateNewMenu ((short)0, 0, menuRef);", "+\t\tif (menuRef [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tmenuHandle = menuRef[0];", "+\t\tOS.SetControlPopupMenuHandle(handle, menuHandle);", "+\t\tOS.SetControl32BitMaximum(handle, 0x7FFF);", "+\t} else {", "+\t\tint [] outControl = new int [1];", "+\t\tCGRect rect = new CGRect ();", "+\t\tint inAttributes = OS.kHIComboBoxAutoCompletionAttribute | OS.kHIComboBoxAutoSizeListAttribute;", "+\t\tOS.HIComboBoxCreate(rect, 0, null, 0, inAttributes, outControl);", "+\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\thandle = outControl [0];", "+\t\tOS.HIViewSetVisible (handle, true);"]}], "num": 38462}