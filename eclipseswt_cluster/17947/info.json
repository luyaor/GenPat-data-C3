{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ce9e309afd5b679b9a95a187c4ca2ed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f41f2c852fce7ff63586d0f39816ce2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "43edc8526cd83c21442a0953e22b63d80dc5f862", "commitAfterChange": "105b5a42fd897b8ae6aa22075fae14da8947b7af", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  @Override public String getText ()", "signatureAfterChange": "  @Override public String getText ()", "diff": ["-\tchar[] chars = null;", "+\tString text = \"\";", "-\t\t\tlong /*int*/ string = XPCOM.nsEmbedString_new ();", "-\t\t\trc = serializer.SerializeToString (document, string);", "+\t\t\tnsEmbedString string = new nsEmbedString ();", "+\t\t\trc = serializer.SerializeToString (document, string.getAddress());", "-\t\t\t\tint length = XPCOM.nsEmbedString_Length (string);", "-\t\t\t\tlong /*int*/ buffer = XPCOM.nsEmbedString_get (string);", "-\t\t\t\tchars = new char[length];", "-\t\t\t\tXPCOM.memmove (chars, buffer, length * 2);", "+\t\t\t\ttext = string.toString();", "-\t\t\tXPCOM.nsEmbedString_delete (string);", "+\t\t\tstring.dispose ();", "-\t\t\t\tchars = new char[length];", "+\t\t\t\tchar[] chars = new char[length];", "+\t\t\t\ttext = new String (chars);", "-\treturn new String (chars);", "+\treturn text;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4488ecdf5b3322dacca8908a1a6b1d91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "b410e8153a654b114833e69eeef807b125e605e6", "commitAfterChange": "7203f644cd57836096a98ff5d2035a1b7d2e4966", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\t\t\t\t/* Ensure byteCount is a multiple of 2 bytes on UNICODE platforms */", "-\t\t\t\tint size = COM.GlobalSize(hMem) / TCHAR.sizeof * TCHAR.sizeof;", "+\t\t\t\t/* Ensure byteCount is a multiple of 2 bytes */", "+\t\t\t\tint size = COM.GlobalSize(hMem) / 2 * 2;", "-\t\t\t\tTCHAR buffer = new TCHAR(0, size / TCHAR.sizeof);", "+\t\t\t\tchar[] chars = new char[size/2];", "-\t\t\t\t\tCOM.MoveMemory(buffer, ptr, size);", "-\t\t\t\t\treturn buffer.toString(0, buffer.strlen());", "+\t\t\t\t\tCOM.MoveMemory(chars, ptr, size);", "+\t\t\t\t\tint length = chars.length;", "+\t\t\t\t\tfor (int i=0; i<chars.length; i++) {", "+\t\t\t\t\t\tif (chars [i] == '\\0') {", "+\t\t\t\t\t\t\tlength = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn new String (chars, 0, length);"]}], "num": 17947}