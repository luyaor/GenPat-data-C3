{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2e6e768dde7abaf5c1a2dbc8ff54fed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0363ade5d66763a2d1506eb15b4235f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "23a612fbbfb7f73f6d3140e05bfb655fcefc2862", "commitAfterChange": "1858f5fc3e7b84156bcd8bb517bf8b12f702a323", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public TableCursor(Table parent, int style)", "signatureAfterChange": " public TableCursor(Table parent, int style)", "diff": ["+\t\t\t\tcase SWT.FocusIn :", "+\t\t\t\tcase SWT.FocusOut :", "+\t\t\t\t\tredraw();", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase SWT.FocusIn :", "-\t\t\t\tcase SWT.FocusOut :", "-\t\t\t\t\tredraw();", "-\t\t\t\t\tbreak;", "-\taddListener(SWT.Dispose, listener);", "-\taddListener(SWT.KeyDown, listener);", "-\taddListener(SWT.Paint, listener);", "-\taddListener(SWT.Traverse, listener);", "-\taddListener(SWT.FocusIn, listener);", "-\taddListener(SWT.FocusOut, listener);", "+\tint[] events = new int[] {SWT.Dispose, SWT.FocusIn, SWT.FocusOut, SWT.KeyDown, SWT.Paint, SWT.Traverse};", "+\tfor (int i = 0; i < events.length; i++) {", "+\t\taddListener(events[i], listener);", "+\t}", "+\tdisposeItemListener = new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tdisplay.asyncExec(new Runnable() {", "+\t\t\t\tpublic void run() {", "+\t\t\t\t\tif (table.isDisposed()) return;", "+\t\t\t\t\tint oldRow = row;", "+\t\t\t\t\trow = -1;", "+\t\t\t\t\tint count = table.getItemCount();", "+\t\t\t\t\tif (count == 0) {", "+\t\t\t\t\t\tresize();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tsetRowColumn(oldRow == 0 ? 0 : oldRow -1, column, true);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t};", "+\tdisposeColumnListener = new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tdisplay.asyncExec(new Runnable() {", "+\t\t\t\tpublic void run() {", "+\t\t\t\t\tif (table.isDisposed()) return;", "+\t\t\t\t\tint oldColumn = column;", "+\t\t\t\t\tcolumn = -1;", "+\t\t\t\t\tsetRowColumn(row, oldColumn == 0 ? 0 : oldColumn-1, true);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t};", "-\tint columns = table.getColumnCount();", "-\tfor (int i = 0; i < columns; i++) {", "-\t\tTableColumn col = table.getColumn(i);", "-\t\tcol.addListener(SWT.Resize, resizeListener);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad00f92e71cd99520dfa58926ab954dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "a7f55348122e685e185be79f1e61c482f210f9b0", "commitAfterChange": "7b9bd176a3b0bcedf3e37bac78e4b0ee77698321", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public TableTree(Composite parent, int style)", "signatureAfterChange": "\r public TableTree(Composite parent, int style)", "diff": ["-\ttable.addListener(SWT.MouseDown, new Listener() {\r", "+\tListener tableListener = new Listener() {\r", "-\t\t\tonMouseDown(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.MouseDown: onMouseDown(e); break;\r", "+\t\t\tcase SWT.Selection: onSelection(e); break;\r", "+\t\t\tcase SWT.DefaultSelection: onSelection(e); break;\r", "+\t\t\tcase SWT.Traverse: onTraverse(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.Selection, new Listener() {\r", "+\t};\r", "+\tint[] tableEvents = new int[]{SWT.MouseDown, \r", "+\t\t                           SWT.Selection, \r", "+\t\t                           SWT.DefaultSelection, \r", "+\t\t                           SWT.Traverse};\r", "+\tfor (int i = 0; i < tableEvents.length; i++) {\r", "+\t\ttable.addListener(tableEvents[i], tableListener);\r", "+\t}\r", "+\t\r", "+\tListener listener = new Listener() {\r", "-\t\t\tonSelection(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.Dispose: onDispose(e); break;\r", "+\t\t\tcase SWT.Resize:  onResize(e); break;\r", "+\t\t\tcase SWT.FocusIn: onFocusIn(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.DefaultSelection, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonSelection(e);\r", "-\t\t}\r", "-\t});\r", "-\r", "-\taddListener(SWT.Dispose, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonDispose();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.Resize, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonResize();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.FocusIn, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonFocusIn();\r", "-\t\t}\r", "-\t});\r", "+\t};\r", "+\tint[] events = new int[]{SWT.Dispose, \r", "+\t\t                      SWT.Resize, \r", "+\t\t                      SWT.FocusIn};\r", "+\tfor (int i = 0; i < events.length; i++) {\r", "+\t\taddListener(events[i], listener);\r", "+\t}\t                      \r"]}], "num": 14511}