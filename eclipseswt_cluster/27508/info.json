{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ef59506f8694345bfb3d3ffae81cd95", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f894beddc16d9045e9226702cd13ed3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 275, "signatureBeforeChange": " \t \tint get_accState(int varChild, int pvarState)", "signatureAfterChange": " \tint get_accState(int varChild, int pvarState)", "diff": ["+\t/* get_accState([in] varChild, [out] pvarState) */", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-", "-\t\t/* Get the default state from the OS. */", "-\t\tint code = iaccessible.get_accState(varChild, pvarState);", "-\t\tif (code == COM.S_OK) {", "-\t\t\tVARIANT v2 = getVARIANT(pvarState);", "-\t\t\tif (v2.vt == COM.VT_I4) osState = v2.lVal;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Get the default state from the OS. */", "+\t\t\tint code = iaccessible.get_accState(varChild, pvarState);", "+\t\t\tif (code == COM.S_OK) {", "+\t\t\t\tVARIANT v2 = getVARIANT(pvarState);", "+\t\t\t\tif (v2.vt == COM.VT_I4) osState = v2.lVal;", "+\t\t\t}", "+\t\t", "-\t\tsetVARIANT(pvarState, COM.VT_I4, state);", "+\t\tsetIntVARIANT(pvarState, COM.VT_I4, state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155e14c860783d55f8f279ecfb796442", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 273, "signatureBeforeChange": " \t \tint get_accRole(int varChild, int pvarRole)", "signatureAfterChange": " \tint get_accRole(int varChild, int pvarRole)", "diff": ["+\t/* get_accRole([in] varChild, [out] pvarRole) */", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-", "-\t\t/* Get the default role from the OS. */", "-\t\tint code = iaccessible.get_accRole(varChild, pvarRole);", "-\t\tif (code == COM.S_OK) {", "-\t\t\tVARIANT v2 = getVARIANT(pvarRole);", "-\t\t\tif (v2.vt == COM.VT_I4) osRole = v2.lVal;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Get the default role from the OS. */", "+\t\t\tint code = iaccessible.get_accRole(varChild, pvarRole);", "+\t\t\tif (code == COM.S_OK) {", "+\t\t\t\tVARIANT v2 = getVARIANT(pvarRole);", "+\t\t\t\tif (v2.vt == COM.VT_I4) osRole = v2.lVal;", "+\t\t\t}", "-\t\tsetVARIANT(pvarRole, COM.VT_I4, roleToOs(event.detail));", "+\t\tsetIntVARIANT(pvarRole, COM.VT_I4, roleToOs(event.detail));"]}], "num": 27508}