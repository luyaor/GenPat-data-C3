{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8edc73b78b1e49e28e8008d43ade7d33", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955152877a51668d68dc80c009e2b5ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "dcb5b6438c44256a7129a57371b071347a181363", "commitAfterChange": "b143d7b976c65e3f6942581f889b75845a4e7417", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " static void initImages (final Display display)", "signatureAfterChange": " static void initImages (final Display display)", "diff": ["-\tif (display.getData (ID_CHECKMARK) != null) return;", "-\t", "-\t\tnew RGB (0, 0, 255), new RGB (255, 0, 255), new RGB (0, 255, 255), new RGB (255, 255, 255)});\t", "-\tImageData collapsed = new ImageData (", "-\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t/* width, height, depth */", "-\t\tfourBit, 4,", "-\t\tnew byte[] {", "-\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "-\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "-\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "-\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "-\tcollapsed.transparentPixel = 15;\t\t\t/* white for transparency */", "-\tImageData expanded = new ImageData (", "-\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t/* width, height, depth */", "-\t\tfourBit, 4,", "-\t\tnew byte[] {", "-\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "-\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "-\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "-\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "-\texpanded.transparentPixel = 15;\t\t\t/* use white for transparency */", "-\t\t", "-\tPaletteData uncheckedPalette = new PaletteData (\t", "-\t\tnew RGB[] {new RGB (128, 128, 128), new RGB (255, 255, 255)});", "-\tPaletteData grayUncheckedPalette = new PaletteData (\t", "-\t\tnew RGB[] {new RGB (128, 128, 128), new RGB (192, 192, 192)});", "+\t\tnew RGB (0, 0, 255), new RGB (255, 0, 255), new RGB (0, 255, 255), new RGB (255, 255, 255)});", "+", "+\tif (display.getData (ID_EXPANDED) == null) {", "+\t\tImageData expanded = new ImageData (", "+\t\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t/* width, height, depth */", "+\t\t\tfourBit, 4,", "+\t\t\tnew byte[] {", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "+\t\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "+\t\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "+\t\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "+\t\texpanded.transparentPixel = 15;\t\t\t/* use white for transparency */", "+\t\tdisplay.setData (ID_EXPANDED, new Image (display, expanded));", "+\t}", "+", "+\tif (display.getData (ID_COLLAPSED) == null) {", "+\t\tImageData collapsed = new ImageData (", "+\t\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t/* width, height, depth */", "+\t\t\tfourBit, 4,", "+\t\t\tnew byte[] {", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "+\t\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "+\t\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "+\t\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "+\t\tcollapsed.transparentPixel = 15;\t\t/* use white for transparency */", "+\t\tdisplay.setData (ID_COLLAPSED, new Image (display, collapsed));", "+\t}", "+", "-\tImageData unchecked = new ImageData (11, 11, 1, uncheckedPalette, 2, checkbox);", "-\tImageData grayUnchecked = new ImageData (11, 11, 1, grayUncheckedPalette, 2, checkbox);", "-", "-\tdisplay.setData (ID_EXPANDED, new Image (display, expanded));", "-\tdisplay.setData (ID_COLLAPSED, new Image (display, collapsed));", "-\tdisplay.setData (ID_UNCHECKED, new Image (display, unchecked));", "-\tdisplay.setData (ID_GRAYUNCHECKED, new Image (display, grayUnchecked));", "-\tdisplay.setData (ID_CHECKMARK, new Image (display, checkmark));", "-\tdisplay.setData (ID_CONNECTOR_COLOR, new Color (display, 170, 170, 170));", "+\tif (display.getData (ID_CHECKMARK) == null) {", "+\t\tdisplay.setData (ID_CHECKMARK, new Image (display, checkmark));", "+\t}", "+\tif (display.getData (ID_UNCHECKED) == null) {", "+\t\tPaletteData uncheckedPalette = new PaletteData (\t", "+\t\t\tnew RGB[] {new RGB (128, 128, 128), new RGB (255, 255, 255)});", "+\t\tImageData unchecked = new ImageData (11, 11, 1, uncheckedPalette, 2, checkbox);", "+\t\tdisplay.setData (ID_UNCHECKED, new Image (display, unchecked));", "+\t}", "+\t", "+\tif (display.getData (ID_GRAYUNCHECKED) == null) {", "+\t\tPaletteData grayUncheckedPalette = new PaletteData (\t", "+\t\t\tnew RGB[] {new RGB (128, 128, 128), new RGB (192, 192, 192)});", "+\t\tImageData grayUnchecked = new ImageData (11, 11, 1, grayUncheckedPalette, 2, checkbox);", "+\t\tdisplay.setData (ID_GRAYUNCHECKED, new Image (display, grayUnchecked));", "+\t}", "+\t", "+\tif (display.getData (ID_CONNECTOR_COLOR) == null) {", "+\t\tdisplay.setData (ID_CONNECTOR_COLOR, new Color (display, 170, 170, 170));", "+\t}", "+", "+\t\t\tColor connectorColor = (Color) display.getData (ID_CONNECTOR_COLOR);", "+\t\t\tif (connectorColor != null) connectorColor.dispose ();", "-\t\t\tColor connectorColor = (Color) display.getData (ID_CONNECTOR_COLOR);", "-\t\t\tif (connectorColor != null) connectorColor.dispose ();", "+\t\t\tdisplay.setData (ID_CONNECTOR_COLOR, null);", "-\t\t\tdisplay.setData (ID_CONNECTOR_COLOR, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87d6274bcdc94add00ffe98fdad5c724", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cec8d1f59cc30d6b9f2a9a3c74fa145c00429317", "commitAfterChange": "66e641150a4707102e1ffedd9b36b5e810501717", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 55, "signatureBeforeChange": " static void initImages (final Display display)", "signatureAfterChange": " static void initImages (final Display display)", "diff": ["-\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "-\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "-\t\t\t\t112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0,", "-\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "-\t\texpanded.transparentPixel = 15;\t\t\t/* use white for transparency */", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, 0, 0, 15, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0});", "+\t\texpanded.transparentPixel = 15;\t\t/* use white for transparency */", "-\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "-\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, 0, 0, 15,", "-\t\t\t\t112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0,", "-\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0, 127, -1, -1, -1,", "-\t\t\t\t112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "-\t\tcollapsed.transparentPixel = 15;\t\t/* use white for transparency */", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, 0, 0, 15, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, 15, -1, 112, 0, 0, 0,", "+\t\t\t\t127, -1, -1, -1, 112, 0, 0, 0,", "+\t\t\t\t119, 119, 119, 119, 112, 0, 0, 0});", "+\t\tcollapsed.transparentPixel = 15;\t/* use white for transparency */", "-\tPaletteData checkMarkPalette = new PaletteData (\t", "+\tPaletteData arrowPalette = new PaletteData (new RGB[] {", "+\t\tnew RGB (0, 0, 0), new RGB (255, 255, 255)});", "+\tif (display.getData (ID_ARROWDOWN) == null) {", "+\t\tImageData arrowDown = new ImageData (", "+\t\t\t7, 4, 1,", "+\t\t\tarrowPalette, 1,", "+\t\t\tnew byte[] {0x00, (byte)0x83, (byte)0xC7, (byte)0xEF});", "+\t\tarrowDown.transparentPixel = 0x1;\t/* use white for transparency */", "+\t\tdisplay.setData (ID_ARROWDOWN, new Image (display, arrowDown));", "+\t}", "+\tif (display.getData (ID_ARROWUP) == null) {", "+\t\tImageData arrowUp = new ImageData (", "+\t\t\t7, 4, 1,", "+\t\t\tarrowPalette, 1,", "+\t\t\tnew byte[] {(byte)0xEF, (byte)0xC7, (byte)0x83, 0x00});", "+\t\tarrowUp.transparentPixel = 0x1;\t\t/* use white for transparency */", "+\t\tdisplay.setData (ID_ARROWUP, new Image (display, arrowUp));", "+\t}", "+", "+\tPaletteData checkMarkPalette = new PaletteData (", "+\t\t\tImage arrowDown = (Image) display.getData (ID_ARROWDOWN);", "+\t\t\tif (arrowDown != null) arrowDown.dispose ();", "+\t\t\tImage arrowUp = (Image) display.getData (ID_ARROWUP);", "+\t\t\tif (arrowUp != null) arrowUp.dispose ();", "+\t\t\tdisplay.setData (ID_ARROWDOWN, null);", "+\t\t\tdisplay.setData (ID_ARROWUP, null);"]}], "num": 15032}