{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26a7f0c5e0d49c92ffc6082438cb651d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c13461ff736b9c567f75c168b98987", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "9a686c6bff63bfe19dfa602cc3d2b334bc9df1a6", "commitAfterChange": "9d369cdf4831701d7008b2ad3abf7a9d3edd9751", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void new_Object (Object object)", "signatureAfterChange": "  void new_Object (Object object)", "diff": ["-\tfor (int i=0; i<objects.length; i++) {", "-\t\tif (objects [i] == null) {", "-\t\t\tobjects [i] = object;", "-\t\t\terrors [i] = new Error ();", "-\t\t\treturn;", "+\tsynchronized (trackingLock) {", "+\t\tfor (int i=0; i<objects.length; i++) {", "+\t\t\tif (objects [i] == null) {", "+\t\t\t\tobjects [i] = object;", "+\t\t\t\terrors [i] = new Error ();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tObject [] newObjects = new Object [objects.length + 128];", "+\t\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "+\t\tnewObjects [objects.length] = object;", "+\t\tobjects = newObjects;", "+\t\tError [] newErrors = new Error [errors.length + 128];", "+\t\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "+\t\tnewErrors [errors.length] = new Error ();", "+\t\terrors = newErrors;", "-\tObject [] newObjects = new Object [objects.length + 128];", "-\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "-\tnewObjects [objects.length] = object;", "-\tobjects = newObjects;", "-\tError [] newErrors = new Error [errors.length + 128];", "-\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "-\tnewErrors [errors.length] = new Error ();", "-\terrors = newErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e8a55df8691a29070a891fe872b0d1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "55e3b63831d9c7ca4bf6dd222fd5772198431643", "commitAfterChange": "8a9d27eae2cbc0b7ce746fd7d7fc942e2b8f7174", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void new_Object (Object object)", "signatureAfterChange": "  void new_Object (Object object)", "diff": ["-\tfor (int i=0; i<objects.length; i++) {", "-\t\tif (objects [i] == null) {", "-\t\t\tobjects [i] = object;", "-\t\t\terrors [i] = new Error ();", "-\t\t\treturn;", "+\tsynchronized (trackingLock) {", "+\t\tfor (int i=0; i<objects.length; i++) {", "+\t\t\tif (objects [i] == null) {", "+\t\t\t\tobjects [i] = object;", "+\t\t\t\terrors [i] = new Error ();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tObject [] newObjects = new Object [objects.length + 128];", "+\t\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "+\t\tnewObjects [objects.length] = object;", "+\t\tobjects = newObjects;", "+\t\tError [] newErrors = new Error [errors.length + 128];", "+\t\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "+\t\tnewErrors [errors.length] = new Error ();", "+\t\terrors = newErrors;", "-\tObject [] newObjects = new Object [objects.length + 128];", "-\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "-\tnewObjects [objects.length] = object;", "-\tobjects = newObjects;", "-\tError [] newErrors = new Error [errors.length + 128];", "-\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "-\tnewErrors [errors.length] = new Error ();", "-\terrors = newErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3e2a544e2137778b2060a747261046", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "68636a56d8d850b4f73d1c0b16c1b71a8e851ba7", "commitAfterChange": "49bb6fbf73d53696e364d9b252a91d217adac0d0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void new_Object (Object object)", "signatureAfterChange": "  void new_Object (Object object)", "diff": ["-\tfor (int i=0; i<objects.length; i++) {", "-\t\tif (objects [i] == null) {", "-\t\t\tobjects [i] = object;", "-\t\t\terrors [i] = new Error ();", "-\t\t\treturn;", "+\tsynchronized (trackingLock) {", "+\t\tfor (int i=0; i<objects.length; i++) {", "+\t\t\tif (objects [i] == null) {", "+\t\t\t\tobjects [i] = object;", "+\t\t\t\terrors [i] = new Error ();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tObject [] newObjects = new Object [objects.length + 128];", "+\t\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "+\t\tnewObjects [objects.length] = object;", "+\t\tobjects = newObjects;", "+\t\tError [] newErrors = new Error [errors.length + 128];", "+\t\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "+\t\tnewErrors [errors.length] = new Error ();", "+\t\terrors = newErrors;", "-\tObject [] newObjects = new Object [objects.length + 128];", "-\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "-\tnewObjects [objects.length] = object;", "-\tobjects = newObjects;", "-\tError [] newErrors = new Error [errors.length + 128];", "-\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "-\tnewErrors [errors.length] = new Error ();", "-\terrors = newErrors;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6986c465e60a89562008f840e3bb36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "8a9d27eae2cbc0b7ce746fd7d7fc942e2b8f7174", "commitAfterChange": "b9b4575abcff903146baf759f714a4e04f5b7360", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t void new_Object (Object object)", "signatureAfterChange": " \t void new_Object (Object object)", "diff": ["-\tfor (int i=0; i<objects.length; i++) {", "-\t\tif (objects [i] == null) {", "-\t\t\tobjects [i] = object;", "-\t\t\terrors [i] = new Error ();", "-\t\t\treturn;", "+\tsynchronized (trackingLock) {", "+\t\tfor (int i=0; i<objects.length; i++) {", "+\t\t\tif (objects [i] == null) {", "+\t\t\t\tobjects [i] = object;", "+\t\t\t\terrors [i] = new Error ();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tObject [] newObjects = new Object [objects.length + 128];", "+\t\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "+\t\tnewObjects [objects.length] = object;", "+\t\tobjects = newObjects;", "+\t\tError [] newErrors = new Error [errors.length + 128];", "+\t\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "+\t\tnewErrors [errors.length] = new Error ();", "+\t\terrors = newErrors;", "-\tObject [] newObjects = new Object [objects.length + 128];", "-\tSystem.arraycopy (objects, 0, newObjects, 0, objects.length);", "-\tnewObjects [objects.length] = object;", "-\tobjects = newObjects;", "-\tError [] newErrors = new Error [errors.length + 128];", "-\tSystem.arraycopy (errors, 0, newErrors, 0, errors.length);", "-\tnewErrors [errors.length] = new Error ();", "-\terrors = newErrors;"]}], "num": 2717}