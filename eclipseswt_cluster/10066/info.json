{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1aefa89824b0d2abc26f150818f40cf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c255dd66eb5dc44ee7e07a4c66cd4e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 81, "signatureBeforeChange": " \t \tid getVisibleCharacterRangeAttribute (int childID)", "signatureAfterChange": " \t \tid getVisibleCharacterRangeAttribute (int childID)", "diff": ["-\t\tNSRange range = new NSRange();", "+\t\tNSRange range = null;", "+\t\t\trange = new NSRange();", "-\t\t} else {", "+\t\t} else if (accessibleControlListeners.size() > 0) {", "+\t\t\t\trange = new NSRange();", "-\t\t\t} else {", "-\t\t\t\treturn null;", "-\t\treturn NSValue.valueWithRange(range);", "+\t\treturn (range != null) ? NSValue.valueWithRange(range) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0b938a63cc54130e74e4cfe525f411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void setPixelData(byte[] data, ImageData imageData)", "signatureAfterChange": "\r void setPixelData(byte[] data, ImageData imageData)", "diff": ["-\t\t\tint srcBytesPerLine = width * 2;\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tint srcBytesPerLine = getAlignedBytesPerRow();\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r"]}], "num": 10066}