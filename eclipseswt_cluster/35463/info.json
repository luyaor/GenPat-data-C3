{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e56b740f88adb397ffeedfe09975e12", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee7667fdf1dfb8dad41e73f78fa58743", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bb1315523155126fc14ec720837cee10f98baa29", "commitAfterChange": "75613ad8acd6747941822f84720ce27c938bcb54", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public Point getLineOffsets(int lineIndex)", "signatureAfterChange": "  public int[] getLineOffsets()", "diff": ["-public Point getLineOffsets(int lineIndex) {", "-\tcheckLayout ();", "+public int[] getLineOffsets() {", "+\tcheckLayout();", "-\tif (!(0 <= lineIndex && lineIndex < lineCount)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tPangoLayoutLine line = new PangoLayoutLine();", "-\tOS.memmove(line, OS.pango_layout_get_line(layout, lineIndex), PangoLayoutLine.sizeof);", "+\tint[] offsets = new int [lineCount + 1];", "-\tint start = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + line.start_index), end;", "-\tif (lineIndex < lineCount - 1) {", "-\t\tOS.memmove(line, OS.pango_layout_get_line(layout, lineIndex + 1), PangoLayoutLine.sizeof);", "-\t\tend = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + line.start_index) - 1; ", "-\t} else {", "-\t\tend = text.length() - 1; ", "-\t}", "-\treturn new Point(start, Math.max(start, end));", "+\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "+\tif (iter == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tint i = 0;", "+\tdo {", "+\t\tint bytePos = OS.pango_layout_iter_get_index(iter);", "+\t\tint pos = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + bytePos);", "+\t\toffsets[i++] = untranslateOffset(pos);", "+\t} while (OS.pango_layout_iter_next_line(iter));\t\t\t\t\t", "+\toffsets[lineCount] = text.length();\t\t\t\t\t\t ", "+\treturn offsets;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1dd6c03d901aa5d91399ac5c5e8da1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "00ba99318656528b8edd4763d72b06af3b7807bd", "commitAfterChange": "c6273c69ad2991b32ae8bcbc923c15f8154ad91c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["-\t\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "-\t\tif (iter == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint oldPos = 0, count = 0;", "-\t\tdo {", "-\t\t\tint bytePos = OS.pango_layout_iter_get_index(iter);", "+\t\tint oldPos = 0, lineIndex = 0;", "+\t\tPangoLayoutLine line = new PangoLayoutLine();", "+\t\twhile (lineIndex < lineCount) {", "+\t\t\tint /*long*/ linePtr = OS.pango_layout_get_line(layout, lineIndex);", "+\t\t\tOS.memmove(line, linePtr, PangoLayoutLine.sizeof);", "+\t\t\tint bytePos = line.start_index;", "-\t\t\tint offset = count * 6;", "+\t\t\tint offset = lineIndex * 6;", "-\t\t\tchars[pos + count * 2] = ZWS;", "-\t\t\tchars[pos + count * 2 + 1] = ZWNBS;", "-\t\t\tsegmentsText.getChars(oldPos, pos, chars,  oldPos + count * 2);", "+\t\t\tchars[pos + lineIndex * 2] = ZWS;", "+\t\t\tchars[pos + lineIndex * 2 + 1] = ZWNBS;", "+\t\t\tsegmentsText.getChars(oldPos, pos, chars,  oldPos + lineIndex * 2);", "-\t\t\tcount++;", "-\t\t} while (OS.pango_layout_iter_next_line(iter));", "-\t\tOS.pango_layout_iter_free (iter);", "-\t\tsegmentsText.getChars(oldPos, segementsLength, chars,  oldPos + count * 2);", "+\t\t\tlineIndex++;", "+\t\t}", "+\t\tsegmentsText.getChars(oldPos, segementsLength, chars,  oldPos + lineIndex * 2);"]}], "num": 35463}