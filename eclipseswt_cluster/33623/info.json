{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a7c62cee3b1de738ea5fa41420aaa76", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a4ad2c87e3d8fe2e56317f660bc5295", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "30da8be87bc22b7280e4efbcaf1c8144d67dba2a", "commitAfterChange": "527998c9e4be5c58a908b0f0d6081466df8efc7f", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void sendPaintItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd)", "signatureAfterChange": "  void sendPaintItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd)", "diff": ["-\tboolean drawBackground = false;", "+\tboolean drawSelected = false, drawBackground = false;", "-\t\t\t\tdata.foreground = textColor != -1 ? textColor : OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\tdrawSelected = true;", "+\t\t\t\tdata.foreground = selectionForeground != -1 ? selectionForeground : OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\tdrawSelected = (style & SWT.HIDE_SELECTION) == 0;", "-\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\tdata.foreground = OS.GetSysColor (OS.COLOR_GRAYTEXT);", "+\tevent.detail |= SWT.FOREGROUND;", "-\t\tevent.detail |= SWT.FOCUSED;", "+\t\tif (nmcd.iSubItem == 0 || (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) event.detail |= SWT.FOCUSED;", "+\t\t\t}", "+\t\t}", "-\tif (selected) event.detail |= SWT.SELECTED;", "+\tif (drawSelected) event.detail |= SWT.SELECTED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54c16944e238d0e3fdce870e87c387d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "e7fb43dbb2484659429530f9cab714cb6e3de9f3", "commitAfterChange": "d69b8bce251422ebdcfdac8edd7d2bcf938dfebd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public static Program [] getPrograms ()", "signatureAfterChange": " private static Program[] getPrograms( Display display )", "diff": ["- */\r", "-public static Program [] getPrograms () {\r", "-\tswitch (Desktop) {\r", "-\t\tcase DESKTOP_KDE:\r", "-\t\t\treturn new Program[0]; // TBD\r", "-\r", "-\t\tcase DESKTOP_GNOME:\r", "-\t\t\t// Obtain the mime type/extension information.\r", "-\t\t\tHashtable mimeInfo = gnome_getMimeInfo();\r", "-\t\t\tVector programs = new Vector();\r", "-\t\t\t\r", "-\t\t\t// Create a list of programs with commands.\r", "-\t\t\tIterator keys = mimeInfo.keySet().iterator();\r", "-\t\t\twhile (keys.hasNext()) {\r", "-\t\t\t\tString mimeType  = (String) keys.next();\r", "-\t\t\t\tString extension = \"\";\r", "-\t\t\t\tVector mimeExts  = (Vector) mimeInfo.get( mimeType );\r", "-\t\t\t\tif (mimeExts.size() > 0){\r", "-\t\t\t\t\textension = (String) mimeExts.elementAt( 0 );\r", "-\t\t\t\t}\r", "-\t\t\t\tString command  = gnome_getMimeValue( mimeType, \"open\" );\r", "-\t\t\t\tif (command != null) {\r", "-\t\t\t\t\tProgram program   = new Program ();\r", "-\t\t\t\t\tprogram.name      = mimeType;\r", "-\t\t\t\t\tprogram.command   = command;\r", "-\t\t\t\t\tprogram.extension = extension;\r", "-\t\t\t\t\tprograms.add( program );\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\t\r", "-\t\t\t// Return the list of programs to the user.\r", "-\t\t\tProgram[] programList = new Program[ programs.size() ];\r", "-\t\t\tfor (int index = 0; index < programList.length; index++) {\r", "-\t\t\t\tprogramList[ index ] = (Program) programs.elementAt( index );\r", "-\t\t\t}\r", "-\t\t\treturn programList;\r", "-\t}\r", "-\treturn new Program[0];\r", "-}\r", "+ */", "+private static Program[] getPrograms( Display display ) {", "+\tint desktop = getDesktop( display );", "+\tHashtable mimeInfo = null;", "+\tif (desktop == DESKTOP_KDE)   mimeInfo = kde_getMimeInfo();", "+\tif (desktop == DESKTOP_GNOME) mimeInfo = gnome_getMimeInfo();", "+\tif (desktop == DESKTOP_CDE)   mimeInfo = cde_getDataTypeInfo();", "+\tif (mimeInfo == null) return new Program[0];", "+\t\t\t", "+\t// Create a list of programs with commands.", "+\tVector programs = new Vector();", "+\tIterator keys = mimeInfo.keySet().iterator();", "+\twhile (keys.hasNext()) {", "+\t\tString mimeType  = (String) keys.next();", "+\t\tVector mimeExts  = (Vector) mimeInfo.get( mimeType );", "+\t\tString extension = \"\";", "+\t\tif (mimeExts.size() > 0){", "+\t\t\textension = (String) mimeExts.elementAt( 0 );", "+\t\t}", "+\t\tString command = null;", "+\t\tif (desktop == DESKTOP_KDE)   command = kde_getMimeTypeCommand( mimeType );", "+\t\tif (desktop == DESKTOP_GNOME) command = gnome_getMimeValue( mimeType, \"open\" );", "+\t\tif (desktop == DESKTOP_CDE)   command = cde_getAction( mimeType );", "+\t\tif (command != null) {", "+\t\t\tProgram program   = new Program ();", "+\t\t\tprogram.name      = mimeType;", "+\t\t\tprogram.command   = command;", "+\t\t\tprogram.extension = extension;", "+\t\t\tprogram.display   = display;", "+\t\t\tprograms.add( program );", "+\t\t}", "+\t}", "+\t\t\t", "+\t// Return the list of programs to the user.", "+\tProgram[] programList = new Program[ programs.size() ];", "+\tfor (int index = 0; index < programList.length; index++) {", "+\t\tprogramList[ index ] = (Program) programs.elementAt( index );", "+\t}", "+\treturn programList;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade57379864556454937508ce9b1aa60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "39bae42440aa1f947e4e87e35b6aa5bae0660cf2", "commitAfterChange": "23cd446a8b1c5d13e406cc3f364c14e9edfb1011", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " void drawTabArea(Event event)", "signatureAfterChange": " void drawTabArea(Event event)", "diff": ["+\t\tint style = getStyle();", "+\t\tif ((style & SWT.FLAT) != 0 && (style & SWT.BORDER) == 0) return;", "-\t\tint[] left = simple ? SIMPLE_BOTTOM_LEFT_CORNER : BOTTOM_LEFT_CORNER;", "-\t\tint[] right = simple ? SIMPLE_BOTTOM_RIGHT_CORNER : BOTTOM_RIGHT_CORNER;", "+\t\tint[] left, right;", "+\t\tif ((getStyle() & SWT.BORDER) != 0) {", "+\t\t\tleft = simple ? SIMPLE_BOTTOM_LEFT_CORNER : BOTTOM_LEFT_CORNER;", "+\t\t\tright = simple ? SIMPLE_BOTTOM_RIGHT_CORNER : BOTTOM_RIGHT_CORNER;", "+\t\t} else {", "+\t\t\tleft = simple ? SIMPLE_BOTTOM_LEFT_CORNER_BORDERLESS : BOTTOM_LEFT_CORNER_BORDERLESS;", "+\t\t\tright = simple ? SIMPLE_BOTTOM_RIGHT_CORNER_BORDERLESS : BOTTOM_RIGHT_CORNER_BORDERLESS;", "+\t\t}", "-\t\tint[] left = simple ? SIMPLE_TOP_LEFT_CORNER : TOP_LEFT_CORNER;", "-\t\tint[] right = simple ? SIMPLE_TOP_RIGHT_CORNER : TOP_RIGHT_CORNER;", "+\t\tint[] left, right;", "+\t\tif ((getStyle() & SWT.BORDER) != 0) {", "+\t\t\tleft = simple ? SIMPLE_TOP_LEFT_CORNER : TOP_LEFT_CORNER;", "+\t\t\tright = simple ? SIMPLE_TOP_RIGHT_CORNER : TOP_RIGHT_CORNER;", "+\t\t} else {", "+\t\t\tleft = simple ? SIMPLE_TOP_LEFT_CORNER_BORDERLESS : TOP_LEFT_CORNER_BORDERLESS;", "+\t\t\tright = simple ? SIMPLE_TOP_RIGHT_CORNER_BORDERLESS : TOP_RIGHT_CORNER_BORDERLESS;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8259ca0d9d8de86e6509a11becba7d03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "61bf550604deecc024ce5ed281c7d9a4d65eab34", "commitAfterChange": "16e409a4e633db78abd4f9b96f45ba64a3558eb5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  @Override void createHandle (int index)", "signatureAfterChange": "  @Override void createHandle (int index)", "diff": ["-\t\t\tint arrow_type = OS.GTK_ARROW_UP;", "-\t\t\tif ((style & SWT.UP) != 0) arrow_type = OS.GTK_ARROW_UP;", "-\t\t\tif ((style & SWT.DOWN) != 0) arrow_type = OS.GTK_ARROW_DOWN;", "-            if ((style & SWT.LEFT) != 0) arrow_type = OS.GTK_ARROW_LEFT;", "-            if ((style & SWT.RIGHT) != 0) arrow_type = OS.GTK_ARROW_RIGHT;", "+\t\t\tif (OS.GTK3) {", "+\t\t\t\tbyte arrow_type [] = OS.GTK_NAMED_ICON_GO_UP;", "+\t\t\t\tif ((style & SWT.UP) != 0) arrow_type = OS.GTK_NAMED_ICON_GO_UP;", "+\t\t\t\tif ((style & SWT.DOWN) != 0) arrow_type = OS.GTK_NAMED_ICON_GO_DOWN;", "+\t\t\t\tif ((style & SWT.LEFT) != 0) arrow_type = OS.GTK_NAMED_ICON_GO_PREVIOUS;", "+\t\t\t\tif ((style & SWT.RIGHT) != 0) arrow_type = OS.GTK_NAMED_ICON_GO_NEXT;", "+\t\t\t\tarrowHandle = OS.gtk_image_new_from_icon_name (arrow_type, OS.GTK_ICON_SIZE_MENU);", "+\t\t\t} else { //GTK2", "+\t\t\t\tint arrow_type = OS.GTK_ARROW_UP;", "+\t\t\t\tif ((style & SWT.UP) != 0) arrow_type = OS.GTK_ARROW_UP;", "+\t\t\t\tif ((style & SWT.DOWN) != 0) arrow_type = OS.GTK_ARROW_DOWN;", "+\t            if ((style & SWT.LEFT) != 0) arrow_type = OS.GTK_ARROW_LEFT;", "+\t            if ((style & SWT.RIGHT) != 0) arrow_type = OS.GTK_ARROW_RIGHT;", "+\t            arrowHandle = OS.gtk_arrow_new (arrow_type, OS.GTK_SHADOW_OUT);", "+\t\t\t}", "+\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t", "-\t\t\tarrowHandle = OS.gtk_arrow_new (arrow_type, OS.GTK_SHADOW_OUT);", "-\t\t\tif (arrowHandle == 0) error (SWT.ERROR_NO_HANDLES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc1ae4d97f967b2c48947e2b17bfb872", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "d882ce4b74009db3b57f4de6f2c055b86f7f3754", "commitAfterChange": "0d670833839f14dff19b1cc0f120d041caacdceb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CTabFolder2(Composite parent, int style)", "signatureAfterChange": " public CTabFolder2(Composite parent, int style)", "diff": ["-\tborder = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3) : 0;", "+\tif (onBottom) {", "+\t\tborderRight = borderTop = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3) : 0;", "+\t\tborderLeft = (style & SWT.BORDER) != 0 ? 1 : 0;", "+\t\tborderBottom = 0;", "+\t} else {", "+\t\tborderRight = borderBottom = (style & SWT.BORDER) != 0 ? ((style & SWT.FLAT) != 0 ? 1 : 3) : 0;", "+\t\tborderLeft = (style & SWT.BORDER) != 0 ? 1 : 0;", "+\t\tborderTop = 0;", "+\t}", "-\tborderColor = display.getSystemColor(BORDER_COLOR);", "+\tborder1Color = display.getSystemColor(BORDER1_COLOR);", "+\tborder2Color = display.getSystemColor(BORDER2_COLOR);", "+\tborder3Color = display.getSystemColor(BORDER3_COLOR);"]}], "num": 33623}