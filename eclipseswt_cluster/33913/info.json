{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b16f563d2caf4a2bc26ca4e4d3927a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c480889a21f1f5ea4176eadcb039cec3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 60, "signatureBeforeChange": " void scrollHorizontal(int numPixel)", "signatureAfterChange": " void onArrowUp (int stateMask)", "diff": ["+}", "+void onArrowUp (int stateMask) {", "+\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "+\t\t/* Up Arrow with no modifiers */", "+\t\tint newFocusIndex = focusItem.index - 1;", "+\t\tif (newFocusIndex < 0) return; \t\t/* at top */", "+\t\tTableItem item = items [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tpostEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+Up Arrow, CTRL+Shift+Up Arrow */", "+\t\t\tif (topIndex == 0) return;\t/* at top */", "+\t\t\tupdate ();", "+\t\t\ttopIndex--;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+Up Arrow */", "+\t\tint newFocusIndex = focusItem.index - 1;", "+\t\tif (newFocusIndex < 0) return; \t/* at top */", "+\t\tTableItem item = items [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tpostEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+Up Arrow */", "+\t\t\tif (topIndex == 0) return;\t/* at top */", "+\t\t\tupdate ();", "+\t\t\ttopIndex--;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+Up Arrow */", "+\t\tint focusIndex = focusItem.index; ", "+\t\tif (focusIndex == 0) return;\t/* at top */", "+\t\tTableItem newFocusItem = items [focusIndex - 1];", "+\t\tsetFocusItem (newFocusItem, true);", "+\t\tshowItem (newFocusItem);", "+\t\tredrawItem (newFocusItem.index, true);", "+\t\treturn;", "+\t}", "+\t/* Shift+Up Arrow */", "+\tint newFocusIndex = focusItem.index - 1;", "+\tif (newFocusIndex < 0) return; \t\t/* at top */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTableItem item = items [newFocusIndex];", "+\tselectItem (item, true);", "+\tsetFocusItem (item, true);", "+\tredrawItem (newFocusIndex, true);", "+\tshowItem (item);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = item;", "+\tpostEvent (SWT.Selection, newEvent);", "+}", "- */", "-void scrollHorizontal(int numPixel) {", "-\tRectangle clientArea = getClientArea();\t", "-", "-\tscroll(", "-\t\tnumPixel, 0, \t\t\t\t\t\t\t\t// destination x, y", "-\t\t0, 0, \t\t\t\t\t\t\t\t\t\t// source x, y", "-\t\tclientArea.width, clientArea.height, true);", "-\tgetHeader().scroll(", "-\t\tnumPixel, 0, \t\t\t\t\t\t\t\t// destination x, y", "-\t\t0, 0, \t\t\t\t\t\t\t\t\t\t// source x, y", "-\t\tclientArea.width, clientArea.height, true);", "-\tmoveColumns(TableColumn.FILL, numPixel);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b74d81fd1c540f10ad5e4a6dda119e5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 57, "signatureBeforeChange": " void insertColumnVisual(TableColumn column)", "signatureAfterChange": " void onArrowDown (int stateMask)", "diff": ["+}", "+void onArrowDown (int stateMask) {", "+\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "+\t\t/* Down Arrow with no modifiers */", "+\t\tint newFocusIndex = focusItem.index + 1;", "+\t\tif (newFocusIndex == items.length) return; \t/* at bottom */", "+\t\tselectItem (items [newFocusIndex], false);", "+\t\tsetFocusItem (items [newFocusIndex], true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (items [newFocusIndex]);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = items [newFocusIndex];", "+\t\tpostEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+Down Arrow, CTRL+Shift+Down Arrow */", "+\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\t\tif (items.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "+\t\t\tupdate ();", "+\t\t\ttopIndex++;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+Down Arrow */", "+\t\tint newFocusIndex = focusItem.index + 1;", "+\t\tif (newFocusIndex == items.length) return; \t/* at bottom */", "+\t\tselectItem (items [newFocusIndex], false);", "+\t\tsetFocusItem (items [newFocusIndex], true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (items [newFocusIndex]);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = items [newFocusIndex];", "+\t\tpostEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+Down Arrow */", "+\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\t\tif (items.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "+\t\t\tupdate ();", "+\t\t\ttopIndex++;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+Down Arrow */", "+\t\tint focusIndex = focusItem.index; ", "+\t\tif (focusIndex == items.length - 1) return;\t/* at bottom */", "+\t\tTableItem newFocusItem = items [focusIndex + 1];", "+\t\tsetFocusItem (newFocusItem, true);", "+\t\tredrawItem (newFocusItem.index, true);", "+\t\tshowItem (newFocusItem);", "+\t\treturn;", "+\t}", "+\t/* Shift+Down Arrow */", "+\tint newFocusIndex = focusItem.index + 1;", "+\tif (newFocusIndex == items.length) return; \t/* at bottom */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tselectItem (items [newFocusIndex], true);", "+\tsetFocusItem (items [newFocusIndex], true);", "+\tredrawItem (newFocusIndex, true);", "+\tshowItem (items [newFocusIndex]);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = items [newFocusIndex];", "+\tpostEvent (SWT.Selection, newEvent);", "+}", "- */", "-void insertColumnVisual(TableColumn column) {", "-\tRectangle columnBounds = column.getBounds();", "-\tRectangle previousColumnBounds;", "-\tint index = column.getIndex();", "-\t\t", "-\tif (index > 0) {", "-\t\tpreviousColumnBounds = getColumn(index - 1).getBounds();", "-\t\tcolumnBounds.x = previousColumnBounds.x + previousColumnBounds.width;", "-\t}", "-\telse {", "-\t\tcolumnBounds.x = 0;", "-\t}", "-\tcolumn.setBounds(columnBounds);", "-\tsetColumnPosition(column);", "-}"]}], "num": 33913}