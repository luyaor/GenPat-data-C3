{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c56dc87882c9d0f87da176e28f3ae871", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d2abe115c2a13c50d0eed07b3cb99f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "77cb502e9f174846beea6e24e4a0e2f5480d618e", "commitAfterChange": "03f23aa773469b8a3f3e0a770076508526525b40", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "diff": ["-\t/* Process well known keys that are not system keys or mnemonics */", "-\tswitch (wParam) {", "-\t\tcase SWT.LF: ", "-\t\tcase SWT.CR: {", "-\t\t\tif (!sendKeyEvent (SWT.KeyDown, OS.WM_SYSCHAR, wParam, lParam)) {", "-\t\t\t\treturn LRESULT.ONE;", "-\t\t\t}", "-\t\t\t// widget could be disposed at this point", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\t", "-\t/* Call the window proc to determine whether is was a system key or mnemonic */", "+\t/* Call the window proc to determine whether it is a system key or mnemonic */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc38e01800260df08600eefe08ea3588", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "07eff1b74b49b8400fef10ab67f94111fd65d9d4", "commitAfterChange": "d0747d3dabdb1fd1c574f88ba055d17eeb8cb4e0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["-\t* kEventRawKeyDown event when the Return key or up and down arrow", "-\t* keys are pressed, causing kEventTextInputUnicodeForKeyEvent not", "+\t* kEventRawKeyDown event when the up and down arrow keys are", "+\t* pressed, causing kEventTextInputUnicodeForKeyEvent not", "-\t\tcase 36: /* Return */", "-\t\t\tif (translateTraversal (keyCode [0], theEvent)) return OS.noErr;", "-\t\t\tif (!sendKeyEvent (SWT.KeyDown, theEvent)) return OS.noErr;", "-\t\t\tpostEvent(SWT.DefaultSelection);", "-\t\t\tbreak;"]}], "num": 9999}