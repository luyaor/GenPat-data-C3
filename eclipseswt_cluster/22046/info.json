{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c471b4c91bb024b3fcb14726bb79581e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd095463b88f2540b573eea6e59307c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bc390e523ad33cdcb413efc8c75a8067340424aa", "commitAfterChange": "def9dd3c9ed5f5f9d15cae6222faadd9db6a4bfc", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 114, "signatureBeforeChange": "  void setBackground ()", "signatureAfterChange": "  void setBackground ()", "diff": ["-\tShell shell = getShell ();", "-\tif (this == shell) return;", "-\tComposite composite = parent;", "-\tdo {", "-\t\tint mode = composite.backgroundMode;", "-\t\tif (mode != 0) {", "-\t\t\tif (mode == SWT.INHERIT_DEFAULT) {", "-\t\t\t\tControl control = this;", "-\t\t\t\tdo {", "-\t\t\t\t\tif ((control.state & THEME_BACKGROUND) == 0) return;", "-\t\t\t\t\tcontrol = control.parent;", "-\t\t\t\t} while (control != composite);", "-\t\t\t}", "-\t\t\tstate |= PARENT_BACKGROUND;", "-\t\t\tControl control = findBackgroundControl ();", "-\t\t\tif (control == null) return;", "-\t\t\tif (control.backgroundImage != null) {", "-\t\t\t\tshell.releaseBrushes ();", "-\t\t\t\tupdateBackgroundImage ();\t\t", "-\t\t\t} else {", "-\t\t\t\tupdateBackgroundColor ();", "-\t\t\t}", "-\t\t\treturn;", "-\t\t}", "-\t\tif (composite == shell) break;", "-\t\tcomposite = composite.parent;", "-\t} while (true);", "+\tControl control = findBackgroundControl ();", "+\tif (control == null) control = this;", "+\tif (control.backgroundImage != null) {", "+\t\tShell shell = getShell ();", "+\t\tshell.releaseBrushes ();", "+\t\tsetBackgroundImage (control.backgroundImage.handle);", "+\t} else {", "+\t\tsetBackgroundPixel (control.background == -1 ? control.defaultBackground() : control.background);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a6e5540749119699a8d75e0439395c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "6d149cea8448c374e850448d1db5d08377d92850", "commitAfterChange": "56fed3385518b20c64346b78a2691795f28c0e47", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  private static void setAccelerator(int menu, short index, int accelerator)", "signatureAfterChange": "  private static void setAccelerator(int menu, short index, int accelerator)", "diff": ["-\tboolean controlIsCommand= true;", "-", "-\t//String t= getText();", "-\t//System.out.println(\"setAccelerator: \" + t + \" \" + Integer.toHexString(accelerator));", "-\t//setText(removeMnemonicsAndShortcut(t) + \"-0x\" + Integer.toHexString(accelerator));", "-\t", "-\t\t/* AW: hack for demo: we don't remove any accelerators", "-\t\t*/", "-", "-\t/*", "-\tif (t != null && t.equals(\"Co&ntent Assist\")) {", "-\t\taccelerator= SWT.CONTROL + ' ';", "-\t}", "-\t*/", "-\t", "-\t// use SetMenuItemData instead!", "-\tint macKey= 0;", "-\tif (key != ' ')", "-\t\tmacKey= Display.untranslateKey(key);", "-\telse {", "-\t\tmacKey= 49;", "-\t\tcontrolIsCommand= false;", "-\t}", "+\tint macKey= Display.untranslateKey(key);", "+", "+\t// use SetMenuItemData instead!", "+", "-\t\tOS.SetMenuItemCommandKey(menu, index, true, (char)macKey);", "+\t\tchar c= (char)macKey;", "+\t\tOS.SetMenuItemCommandKey(menu, index, true, c);", "+\t\t", "-\t\t", "-\tif ((accelerator & SWT.CONTROL) != 0)", "-\t\tmodifiers |= OS.kMenuControlModifier;", "-\tif ((accelerator & SWT.ALT) != 0)", "-\t\tmodifiers |= OS.kMenuOptionModifier;", "-\t\t", "-\tif (! controlIsCommand) {\t// control is control", "-\t\tmodifiers |= OS.kMenuNoCommandModifier;", "-\t} else {\t// control is command", "-\t\tif ((modifiers & OS.kMenuControlModifier) != 0)", "-\t\t\tmodifiers &= ~OS.kMenuControlModifier;", "-\t\telse", "-\t\t\tmodifiers |= OS.kMenuNoCommandModifier;", "-\t}", "-\t", "-\tif ((accelerator & SWT.ALT) != 0)", "-\t\tmodifiers |= OS.kMenuControlModifier;", "+\tif ((accelerator & SWT.CONTROL) != 0) {", "+\t\t// we get the Command glyph for free so we don't have to do anything here", "+\t} else {", "+\t\t// but we have to remove it here...", "+\t\tmodifiers |= OS.kMenuNoCommandModifier;", "+\t}", "+\t\t\t\t", "+\tif ((accelerator & SWT.ALT) != 0) {", "+\t\tmodifiers |= OS.kMenuOptionModifier;", "+\t\t// force 'Alt' to have a 'Command' (by removing the NoCommand :-)", "+\t\tmodifiers &= ~OS.kMenuNoCommandModifier;", "+\t}", "-\t", "-\t/*", "-\t//OS.InvalidateMenuItems(menu, index, 1);", "-\tShell shell= getParent().getShell();", "-\tif (shell != null) {", "-\t\tMenu mb= shell.getMenuBar();", "-\t\tif (mb != null)", "-\t\t\tOS.SetRootMenu(mb.handle);", "-\t}", "-\t*/"]}], "num": 22046}