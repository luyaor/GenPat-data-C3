{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a2ad3ffc8dec7c8d8be249c19f02d6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd025150f3978bcb807f7dfef31360cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ee155d593cfda428fc88139d1e8da486bb5a73cf", "commitAfterChange": "59b2491032a801ab7176764808e4a778061c6b28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void addColumn (TreeColumn column)", "signatureAfterChange": " void addColumn (TreeColumn column)", "diff": ["+\t}", "+\t/*", "+\t * The length of displayTexts always matches the parent's column count, unless this", "+\t * count is zero, in which case displayTexts is null.  ", "+\t */", "+\tString[] newDisplayTexts = new String [columnCount];", "+\tif (columnCount > 1) {", "+\t\tSystem.arraycopy (displayTexts, 0, newDisplayTexts, 0, index);", "+\t\tSystem.arraycopy (displayTexts, index, newDisplayTexts, index + 1, columnCount - index - 1);", "+\t}", "+\tdisplayTexts = newDisplayTexts;", "+\tif (columnCount == 1) {", "+\t\tGC gc = new GC (parent);", "+\t\tcomputeDisplayText (0, gc);", "+\t\ttextWidths [0] = gc.textExtent (getDisplayText (0)).x;", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dabcbe324a1c374b7a3c458b2771045", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ee155d593cfda428fc88139d1e8da486bb5a73cf", "commitAfterChange": "59b2491032a801ab7176764808e4a778061c6b28", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 59, "signatureBeforeChange": " void removeColumn (TreeColumn column, int index)", "signatureAfterChange": " void removeColumn (TreeColumn column, int index)", "diff": ["-\t\tboolean recomputeTextWidths = cellFonts != null;", "+\t\tdisplayTexts = null;", "-\t\tif (recomputeTextWidths) {", "-\t\t\tGC gc = new GC (parent);", "-\t\t\tgc.setFont (getFont ());", "-\t\t\trecomputeTextWidths (gc);", "-\t\t\tgc.dispose ();", "-\t\t}", "+\t\tfontHeights = null;", "+\t\tGC gc = new GC (parent);", "+\t\tgc.setFont (getFont ());", "+\t\trecomputeTextWidths (gc);", "+\t\tgc.dispose ();", "+", "+\tString[] newDisplayTexts = new String [columnCount];", "+\tSystem.arraycopy (displayTexts, 0, newDisplayTexts, 0, index);", "+\tSystem.arraycopy (displayTexts, index + 1, newDisplayTexts, index, columnCount - index);", "+\tdisplayTexts = newDisplayTexts;"]}], "num": 60721}