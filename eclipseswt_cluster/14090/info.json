{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1e47f449fa76ae53382335fcb97b472", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "210bb8ad8b692b5444a85f836b26511c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "6eeebae3ebde877ff7feb6787edf7a9a37b88b61", "commitAfterChange": "d2444ea11626b1e659e4e7a174b1438fa903c689", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["+\t\t", "+\t\tsetAllowedFileType(filterExtensions[0]);", "+\t\tpanel.setAllowsOtherFileTypes(true);", "-\t\t\tif (filterExtensions != null && filterExtensions.length != 0) {", "-\t\t\t\tif (0 <= filterIndex && filterIndex < filterExtensions.length) {", "-\t\t\t\t\t/* Append extension if not present */", "-\t\t\t\t\tNSString ext = filename.pathExtension();", "-\t\t\t\t\tif (ext == null || ext.length() == 0) {", "-\t\t\t\t\t\tString exts = filterExtensions [filterIndex];", "-\t\t\t\t\t\tint length = exts.length ();", "-\t\t\t\t\t\tint index = exts.indexOf (EXTENSION_SEPARATOR);", "-\t\t\t\t\t\tif (index == -1) index = length;", "-\t\t\t\t\t\tString filter = exts.substring (0, index).trim ();", "-\t\t\t\t\t\tif (!filter.equals (\"*\") && !filter.equals (\"*.*\")) {", "-\t\t\t\t\t\t\tif (filter.startsWith (\"*.\")) filter = filter.substring (2);", "-\t\t\t\t\t\t\tfilename = filename.stringByAppendingPathExtension(NSString.stringWith(filter));", "-\t\t\t\t\t\t}\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62567c69a9f7c9d5e726e85be7e6786f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "10f7a2f5f11f39d774c23c29e49d1ae155e89648", "commitAfterChange": "9cf5aeadb5a89893a32b1a67c49fa9d65dc5c460", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void setAllowedFileType (String fileType)", "signatureAfterChange": "  void setAllowedFileType (String fileTypes)", "diff": ["-void setAllowedFileType (String fileType) {", "-\tif (fileType == null) return;", "-\tif (fileType.equals(\"*\") || fileType.equals(\"*.*\")) {", "-\t\tpanel.setAllowedFileTypes(null);", "-\t\treturn;", "-\t}", "-\tif (fileType.startsWith(\"*.\")) {", "-\t\tfileType = fileType.substring(2);", "-\t} else if (fileType.startsWith(\".\")) {", "-\t\tfileType = fileType.substring(1);", "-\t}", "+void setAllowedFileType (String fileTypes) {", "+\tif (fileTypes == null) return;", "+\t", "+\tStringTokenizer fileTypesToken = new StringTokenizer(fileTypes, String.valueOf(EXTENSION_SEPARATOR));", "-\tallowedFileTypes.addObject(NSString.stringWith(fileType));", "+", "+\twhile(fileTypesToken.hasMoreTokens()) {", "+\t\tString fileType = fileTypesToken.nextToken();", "+\t\t", "+\t\tif (fileType.equals(\"*\") || fileType.equals(\"*.*\")) {", "+\t\t\tpanel.setAllowedFileTypes(null);", "+\t\t\treturn;", "+\t\t}", "+\t\tif (fileType.startsWith(\"*.\")) {", "+\t\t\tfileType = fileType.substring(2);", "+\t\t} else if (fileType.startsWith(\".\")) {", "+\t\t\tfileType = fileType.substring(1);", "+\t\t}", "+\t\tallowedFileTypes.addObject(NSString.stringWith(fileType));", "+\t}", "+\t"]}], "num": 14090}