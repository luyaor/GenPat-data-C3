{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "79d046ea3c1501197f9af2a985bf5e22", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5839129111449ce33bc7a1b327233fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "905b3909331e9158540f896976d5079deb353ba1", "commitAfterChange": "49ec03c84e5dd4da3a34a5d736fc9d86bb7e427c", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height)", "signatureAfterChange": " \tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height)", "diff": ["-\t", "-\t\tint wHandle= OS.GetControlOwner(hndl);", "-\t\tOS.InvalWindowRect(wHandle, oldBounds.getData());", "-\t\t", "-\t\tMacRect newBounds= new MacRect(x, y, width, height);", "-\t\thandleResize(hndl, newBounds);", "-\t\tOS.InvalWindowRect(wHandle, newBounds.getData());", "+\t\tif (MacUtil.USE_FRAME) {", "+\t\t\tMacRect newBounds= new MacRect(x, y, width, height);", "+\t\t\thandleResize(hndl, newBounds);", "+\t\t} else {", "+\t\t\tint wHandle= OS.GetControlOwner(hndl);", "+\t\t\tOS.InvalWindowRect(wHandle, oldBounds.getData());", "+\t\t\t", "+\t\t\tMacRect newBounds= new MacRect(x, y, width, height);", "+\t\t\thandleResize(hndl, newBounds);", "+\t\t\tOS.InvalWindowRect(wHandle, newBounds.getData());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e294c453416ffb5736d43a09e22a049c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tprivate void internalSetBounds(int hndl, int x, int y, int width, int height)", "signatureAfterChange": " \tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height)", "diff": ["-\tprivate void internalSetBounds(int hndl, int x, int y, int width, int height) {", "-\t\tRect newBounds= new Rect();", "-\t\tOS.SetRect(newBounds, (short)x, (short)y, (short)(x+width), (short)(y+height));", "-\t\thandleResize(hndl, newBounds);", "+\tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height) {", "+\t\tif (MacUtil.USE_FRAME) {", "+\t\t\tMacRect newBounds= new MacRect(x, y, width, height);", "+\t\t\thandleResize(hndl, newBounds);", "+\t\t} else {", "+\t\t\tint wHandle= OS.GetControlOwner(hndl);", "+\t\t\tOS.InvalWindowRect(wHandle, oldBounds.getData());", "+\t\t\t", "+\t\t\tMacRect newBounds= new MacRect(x, y, width, height);", "+\t\t\thandleResize(hndl, newBounds);", "+\t\t\tOS.InvalWindowRect(wHandle, newBounds.getData());", "+\t\t}"]}], "num": 58816}