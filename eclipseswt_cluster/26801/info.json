{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f3ff4a3dbb7c1e61fbb15de08679673", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f975894f0dd7b640fae0bcb6cc0332", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/StyledTextTab.java", "commitBeforeChange": "e6541458aeb239a7b18a3fa9c57d955860902680", "commitAfterChange": "6bd71c6ec6b2c60bb89e2c802674546f3a0786cd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createStyledTextStyleGroup ()", "signatureAfterChange": " \tvoid createStyledTextStyleGroup ()", "diff": ["-\t\tstyledTextStyleGroup.setLayout (new GridLayout(5, false));", "+\t\tstyledTextStyleGroup.setLayout (new GridLayout(7, false));", "+\t\tunderlineImage = createBitmapImage (display, \"underline\");", "+\t\tstrikeoutImage = createBitmapImage (display, \"strikeout\");", "-\t\tdata.horizontalSpan = 5;", "+\t\tdata.horizontalSpan = 7;", "-\t\tboldButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tPoint sel = styledText.getSelectionRange();", "-\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "-\t\t\t\tStyleRange style;", "-\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "-\t\t\t\t\tif (range == null) {style = new StyleRange(i, 1, null, null, SWT.BOLD);}", "-\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.BOLD);}", "-\t\t\t\t\tstyledText.setStyleRange(style);", "-\t\t\t\t}", "-\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);", "-\t\t\t}", "-\t\t});", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Underline\"));", "+\t\tunderlineButton = new Button (styledTextStyleGroup, SWT.PUSH);", "+\t\tunderlineButton.setImage (underlineImage);", "-\t\titalicButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tPoint sel = styledText.getSelectionRange();", "-\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "-\t\t\t\tStyleRange style;", "-\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "-\t\t\t\t\tif (range == null) {style = new StyleRange(i, 1, null, null, SWT.ITALIC);}", "-\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.ITALIC);}", "-\t\t\t\t\tstyledText.setStyleRange(style);", "-\t\t\t\t}", "-\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);", "-\t\t\t}", "-\t\t});", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Strikeout\"));", "+\t\tstrikeoutButton = new Button (styledTextStyleGroup, SWT.PUSH);", "+\t\tstrikeoutButton.setImage (strikeoutImage);", "+\t\tSelectionListener styleListener = new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tPoint sel = styledText.getSelectionRange();", "+\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "+\t\t\t\tStyleRange style;", "+\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "+\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "+\t\t\t\t\tif (range != null) {", "+\t\t\t\t\t\tstyle = (StyleRange)range.clone();", "+\t\t\t\t\t\tstyle.start = i;", "+\t\t\t\t\t\tstyle.length = 1;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstyle = new StyleRange(i, 1, null, null, SWT.NORMAL);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (e.widget == boldButton) {", "+\t\t\t\t\t\tstyle.fontStyle ^= SWT.BOLD;", "+\t\t\t\t\t} else if (e.widget == italicButton) {", "+\t\t\t\t\t\tstyle.fontStyle ^= SWT.ITALIC;\t\t\t\t\t\t", "+\t\t\t\t\t} else if (e.widget == underlineButton) {", "+\t\t\t\t\t\tstyle.underline = !style.underline;", "+\t\t\t\t\t} else if (e.widget == strikeoutButton) {", "+\t\t\t\t\t\tstyle.strikeout = !style.strikeout;", "+\t\t\t\t\t}", "+\t\t\t\t\tstyledText.setStyleRange(style);", "+\t\t\t\t}", "+\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);\t\t\t", "+\t\t\t}", "+\t\t};", "-\t\t\t\tColor fg, bg;", "+\t\t\t\tColor fg = null, bg = null;", "-\t\t\t\t\tbg = null;", "-\t\t\t\t\tfg = null;", "-\t\t\t\t} else {", "-\t\t\t\t\tfg = bg = null;", "-\t\t\t\t\tif (range == null) {", "-\t\t\t\t\t\tstyle = new StyleRange(i, 1, fg, bg, SWT.NORMAL);", "-\t\t\t\t\t}", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tif (range.foreground != null) fg = range.foreground;", "-\t\t\t\t\t\tif (range.background != null) bg = range.background;", "-\t\t\t\t\t\tstyle = new StyleRange(i, 1, fg, bg, range.fontStyle);", "+\t\t\t\t\tif (range != null) {", "+\t\t\t\t\t\tstyle = (StyleRange)range.clone();", "+\t\t\t\t\t\tstyle.start = i;", "+\t\t\t\t\t\tstyle.length = 1;", "+\t\t\t\t\t\tstyle.foreground = style.foreground != null ? null : fg;", "+\t\t\t\t\t\tstyle.background = style.background != null ? null : bg;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstyle = new StyleRange (i, 1, fg, bg, SWT.NORMAL);", "+\t\tboldButton.addSelectionListener(styleListener);", "+\t\titalicButton.addSelectionListener(styleListener);", "+\t\tunderlineButton.addSelectionListener(styleListener);", "+\t\tstrikeoutButton.addSelectionListener(styleListener);", "+\t\t\t\tunderlineImage.dispose();", "+\t\t\t\tstrikeoutImage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7afea1cb26b82305e620523e166f53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "1cafb9b13b36075eb1d31bd71ad3febbf37de5b5", "commitAfterChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["-\tif (styledText != null) {", "-\t\tint compositionStart = styledText.compositionStart;", "-\t\tint compositionLength = styledText.compositionLength;", "-\t\tif (compositionStart != -1 && compositionLength > 0) {", "-\t\t\tint compositionLine = content.getLineAtOffset(compositionStart);", "-\t\t\tif (compositionLine == lineIndex) {", "-\t\t\t\tif (imeRanges != null && imeStyles != null) {", "-\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "-\t\t\t\t\t\tint start = imeRanges[i*2] + compositionStart - lineOffset;", "-\t\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "-\t\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "-\t\t\t\t\t\tfor (int j = start; j <= end; j++) {", "-\t\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "-\t\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "-\t\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "-\t\t\t\t\t\t\tif (userStyle == null) {", "-\t\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "-\t\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "-\t\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "-\t\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "-\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\tif (styledText != null && styledText.ime != null) {", "+\t\tIME ime = styledText.ime;", "+\t\tint compositionOffset = ime.getCompositionOffset();", "+\t\tif (compositionOffset != -1) {", "+\t\t\tint commitCount = ime.getCommitCount();", "+\t\t\tint compositionLength = ime.getText().length();", "+\t\t\tif (compositionLength != commitCount) {", "+\t\t\t\tint compositionLine = content.getLineAtOffset(compositionOffset);", "+\t\t\t\tif (compositionLine == lineIndex) {", "+\t\t\t\t\tint[] imeRanges = ime.getRanges();", "+\t\t\t\t\tTextStyle[] imeStyles = ime.getStyles();", "+\t\t\t\t\tif (imeRanges.length > 0) {", "+\t\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "+\t\t\t\t\t\t\tint start = imeRanges[i*2] + compositionOffset - lineOffset;", "+\t\t\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "+\t\t\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "+\t\t\t\t\t\t\tfor (int j = start; j <= end; j++) {", "+\t\t\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "+\t\t\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "+\t\t\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "+\t\t\t\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "+\t\t\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "+\t\t\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "+\t\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tint start = compositionStart - lineOffset;", "-\t\t\t\t\tint end = start + compositionLength - 1;", "-\t\t\t\t\tTextStyle userStyle = layout.getStyle(start);", "-\t\t\t\t\tif (userStyle == null) {", "-\t\t\t\t\t\tif (start > 0) userStyle = layout.getStyle(start - 1);", "-\t\t\t\t\t\tif (userStyle == null && end + 1 < length) userStyle = layout.getStyle(end + 1);", "-\t\t\t\t\t\tif (userStyle != null) {", "-\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle();", "-\t\t\t\t\t\t\tnewStyle.font = userStyle.font;", "-\t\t\t\t\t\t\tnewStyle.foreground = userStyle.foreground;", "-\t\t\t\t\t\t\tnewStyle.background = userStyle.background;", "-\t\t\t\t\t\t\tlayout.setStyle(newStyle, start, end);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint start = compositionOffset - lineOffset;", "+\t\t\t\t\t\tint end = start + compositionLength - 1;", "+\t\t\t\t\t\tTextStyle userStyle = layout.getStyle(start);", "+\t\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\t\tif (start > 0) userStyle = layout.getStyle(start - 1);", "+\t\t\t\t\t\t\tif (userStyle == null && end + 1 < length) userStyle = layout.getStyle(end + 1);", "+\t\t\t\t\t\t\tif (userStyle != null) {", "+\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle();", "+\t\t\t\t\t\t\t\tnewStyle.font = userStyle.font;", "+\t\t\t\t\t\t\t\tnewStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\t\tnewStyle.background = userStyle.background;", "+\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, start, end);", "+\t\t\t\t\t\t\t}"]}], "num": 26801}