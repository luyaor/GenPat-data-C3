{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fa79a001e83710159f337d2921c54d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd6ad7a32526989d4f75ecdbf6a3805", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "a095e03c33e1825b6187bad9ee734eda7553de2b", "commitAfterChange": "fca43292af30b16d820cf4a1b6c2720d3aeacee5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["+\tif (visible == OS.GTK_WIDGET_MAPPED (handle)) return;\r", "-\t\t\t*/ \r", "+\t\t\t*/\r", "-\t\t\tint barHandle = OS.gtk_menu_bar_new ();\r", "+\t\t\tbarHandle = OS.gtk_menu_bar_new ();\r", "+\t\t\tif (barHandle == 0) error (SWT.ERROR_NO_HANDLES);\r", "+\t\t\tif (itemHandle == 0) error (SWT.ERROR_NO_HANDLES);\r", "-\t\t\tCallback GtkMenuBarEventFunc = new Callback (this, \"GtkMenuBarEventFunc\", 3);\r", "-\t\t\tOS.gtk_signal_connect (barHandle, OS.event_after, GtkMenuBarEventFunc.getAddress(), 0);\r", "-\t\t\tOS.gtk_signal_connect (barHandle, OS.button_press_event, GtkMenuBarEventFunc.getAddress(), SWT.MouseDown);\r", "-\t\t\t\r", "+\t\t\tbarHandleCallback = new Callback (this, \"GtkMenuBarEventFunc\", 3);\r", "+\t\t\tint barHandleProc = barHandleCallback.getAddress ();\r", "+\t\t\tif (barHandleProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "+\t\t\tOS.gtk_signal_connect (barHandle, OS.event_after, barHandleProc, 0);\r", "+\t\t\tOS.gtk_signal_connect (barHandle, OS.button_press_event, barHandleProc, SWT.MouseDown);\r", "+\r", "-\t\t\t\r", "-\t\t\t/* Run an event loop */\r", "-\t\t\tDisplay display = getDisplay ();\r", "-\t\t\twhile (!isDisposed () && getVisible ()) {\r", "-\t\t\t\tif (!display.readAndDispatch()) display.sleep ();\r", "-\t\t\t}\r", "-\t\t\t\r", "-\t\t\t/* Release resources and unwanted grabs */\r", "-\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);\r", "-\t\t\tOS.gtk_widget_destroy (barHandle);\t\t\t\r", "-\t\t\tGtkMenuBarEventFunc.dispose ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac1c2efa49875c349feec2fb46c5b24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7eac2a1a696972a97690b41e33c09ba04850ae35", "commitAfterChange": "7c6ddb416fb1f0b0c28923c087230687635c222d", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "\r public boolean sleep ()", "signatureAfterChange": "\r public boolean sleep ()", "diff": ["-\tint xtContext = OS.XtDisplayToApplicationContext (xDisplay);\r", "-\t* Bug in Xt.  Under certain circumstances Xt waits\r", "-\t* forever looking for X events, ignoring alternate\r", "-\t* inputs.  The fix is to never sleep forever.\r", "+\t* This code is intentionally commented.\r", "-\tint sleepID = OS.XtAppAddTimeOut (xtContext, 100, 0, 0);\r", "-\tboolean result = OS.XtAppPeekEvent (xtContext, xEvent);\r", "-\tif (sleepID != 0) OS.XtRemoveTimeOut (sleepID);\r", "-\treturn result;\r", "+//\tint xtContext = OS.XtDisplayToApplicationContext (xDisplay);\r", "+//\t/*\r", "+//\t* Bug in Xt.  Under certain circumstances Xt waits\r", "+//\t* forever looking for X events, ignoring alternate\r", "+//\t* inputs.  The fix is to never sleep forever.\r", "+//\t*/\r", "+//\tint sleepID = OS.XtAppAddTimeOut (xtContext, 100, 0, 0);\r", "+//\tboolean result = OS.XtAppPeekEvent (xtContext, xEvent);\r", "+//\tif (sleepID != 0) OS.XtRemoveTimeOut (sleepID);\r", "+//\treturn result;\r", "+\t\r", "+\tint display_fd = OS.ConnectionNumber (xDisplay);\r", "+\tint max_fd = display_fd > read_fd ? display_fd : read_fd;\r", "+\tOS.FD_ZERO (fd_set);\r", "+\tOS.FD_SET (display_fd, fd_set);\r", "+\tOS.FD_SET (read_fd, fd_set);\r", "+\ttimeout [0] = 0;\r", "+\ttimeout [1] = 100;\r", "+\tOS.select (max_fd + 1, fd_set, null, null, timeout);\r", "+\treturn OS.FD_ISSET (display_fd, fd_set);\r"]}], "num": 57741}