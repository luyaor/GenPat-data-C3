{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f21b3e87bc64d573a08e021396d52421", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d928a0da27e3dec34ffccdcab163ee5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "905b3909331e9158540f896976d5079deb353ba1", "commitAfterChange": "49ec03c84e5dd4da3a34a5d736fc9d86bb7e427c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\tMacRect br= new MacRect();", "-\tOS.GetControlBounds(widgetHandle, br.getData());", "-    if (!br.isEmpty()) {", "-        x+= br.getX();", "-        y+= br.getY();", "-        if (width == 0)", "-        \twidth= br.getWidth();", "-        else", "-\t\t\twidth+= 1; // AW strange workaround for Caret", "-        if (height == 0)", "-\t\t\theight= br.getHeight();", "-                ", "-        int rgn= OS.NewRgn();", "-        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-                ", "-        int region= OS.NewRgn();", "-        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "-        ", "-            OS.SectRgn(region, rgn, region);", "-        ", "-            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-        }", "-        ", "-        OS.DisposeRgn(rgn);", "-        OS.DisposeRgn(region);", "-    }", "+\tif (false) {", "+\t\tint rgn= OS.NewRgn();", "+\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\t\tOS.DisposeRgn(rgn);", "+\t} else {", "+\t\tMacRect br= new MacRect();", "+\t\tOS.GetControlBounds(widgetHandle, br.getData());", "+\t    if (!br.isEmpty()) {", "+\t        x+= br.getX();", "+\t        y+= br.getY();", "+\t        if (width == 0)", "+\t        \twidth= br.getWidth();", "+\t        else", "+\t\t\t\twidth+= 1; // AW strange workaround for Caret", "+\t        if (height == 0)", "+\t\t\t\theight= br.getHeight();", "+\t                ", "+\t        int rgn= OS.NewRgn();", "+\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t                ", "+\t        int region= OS.NewRgn();", "+\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "+\t        ", "+\t            OS.SectRgn(region, rgn, region);", "+\t        ", "+\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "+\t        }", "+\t        ", "+\t        OS.DisposeRgn(rgn);", "+\t        OS.DisposeRgn(region);", "+\t    }", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb838503c39a9b7a81c280fb4bd7740", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f4605ed0f6824167da843ca333638e1a0c88449a", "commitAfterChange": "c9969c019fbdac50306d89cc7c17ef7c4504a246", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  boolean isShowing ()", "signatureAfterChange": "  boolean isShowing ()", "diff": ["-\t/*", "-\t* This is not complete.  Need to check if the", "-\t* widget is obscurred by a parent or sibling.", "-\t*/", "-\t/* AW", "-\tControl control = this;", "-\twhile (control != null) {", "-\t\tPoint size = control.getSize ();", "-\t\tif (size.x == 0 || size.y == 0) {", "-\t\t\treturn false;", "-\t\t}", "-\t\tcontrol = control.parent;", "+\t// check if the widget is obscurred by a parent or sibling.", "+\tint rgn= 0;", "+\ttry {", "+\t\trgn= OS.NewRgn();", "+\t\tMacUtil.getVisibleRegion(handle, rgn, true);", "+\t\treturn !OS.EmptyRgn(rgn);", "+\t} finally {", "+\t\tif (rgn != 0)", "+\t\t\tOS.DisposeRgn(rgn);", "-\t*/", "-\treturn true;", "-\t/*", "-\t* Check to see if current damage is included.", "-\t*/", "-//\tif (!OS.IsWindowVisible (handle)) return false;", "-//\tint flags = OS.DCX_CACHE | OS.DCX_CLIPCHILDREN | OS.DCX_CLIPSIBLINGS;", "-//\tint hDC = OS.GetDCEx (handle, 0, flags);", "-//\tint result = OS.GetClipBox (hDC, new RECT ());", "-//\tOS.ReleaseDC (handle, hDC);", "-//\treturn result != OS.NULLREGION;"]}], "num": 9590}