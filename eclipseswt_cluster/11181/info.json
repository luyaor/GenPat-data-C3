{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a5d37b9b38f7e08c978c69cd5c30cbc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a0516c8281c1fd1283d0ead998e19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c246b71d349f886d26b7816d651043ac9ab7964b", "commitAfterChange": "5d2821d3e4ff1b1b65ade954e90990590a81dd5b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tTreeItem [] items = getItems (null);", "-\t\tGC gc = new GC (this);", "-\t\tint columnCount = Math.max (this.columnCount, 1);", "-\t\tfor (int j=0; j<columnCount; j++) {", "-\t\t\tint columnWidth = this.columnCount != 0 ? columns [j].getWidth () : 0;", "-\t\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\t\tcolumnWidth = Math.max (columnWidth, items [i].calculateWidth (j, gc));", "+\t\tif (columnCount != 0) {", "+\t\t\tfor (int j=0; j<columnCount; j++) {", "+\t\t\t\twidth += columns [j].getWidth ();", "-\t\t\twidth += columnWidth + EXTRA_WIDTH;", "+\t\t} else {", "+\t\t\tint columnWidth = 0;", "+\t\t\tGC gc = new GC (this);", "+\t\t\tTreeItem [] items = getItems (null);", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tcolumnWidth = Math.max (columnWidth, items [i].calculateWidth (0, gc));", "+\t\t\t}", "+\t\t\tgc.dispose ();", "+\t\t\twidth += columnWidth + getInsetWidth (column_id, true);", "-\t\tgc.dispose ();", "-\t\tif ((style & SWT.CHECK) != 0) width += CHECK_COLUMN_WIDTH;", "+\t\tif ((style & SWT.CHECK) != 0) width += getCheckColumnWidth ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83941e3acf08a9896ff4661f204f68b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c246b71d349f886d26b7816d651043ac9ab7964b", "commitAfterChange": "5d2821d3e4ff1b1b65ade954e90990590a81dd5b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tGC gc = new GC (this);", "-\t\tint columnCount = Math.max (this.columnCount, 1);", "-\t\tfor (int j=0; j<columnCount; j++) {", "-\t\t\tint columnWidth = this.columnCount != 0 ? columns [j].getWidth () : 0;", "+\t\tif (columnCount != 0) {", "+\t\t\tfor (int j=0; j<columnCount; j++) {", "+\t\t\t\twidth += columns [j].getWidth ();", "+\t\t\t}", "+\t\t} else {", "+\t\t\tint columnWidth = 0;", "+\t\t\tGC gc = new GC (this);", "-\t\t\t\t\tcolumnWidth = Math.max (columnWidth, item.calculateWidth (j, gc));", "+\t\t\t\t\tcolumnWidth = Math.max (columnWidth, item.calculateWidth (0, gc));", "-\t\t\twidth += columnWidth + EXTRA_WIDTH;", "+\t\t\tgc.dispose ();", "+\t\t\twidth += columnWidth + getInsetWidth ();", "-\t\tgc.dispose ();", "-\t\tif ((style & SWT.CHECK) != 0) width += CHECK_COLUMN_WIDTH;", "+\t\tif ((style & SWT.CHECK) != 0) width += getCheckColumnWidth ();"]}], "num": 11181}