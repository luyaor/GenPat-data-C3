{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f91fe4df874a79f39629512aceace2c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfd3549d4f7e646628de1ba05e27958c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ScrolledCompositeLayout.java", "commitBeforeChange": "4706891e3d98d092933c2dd3a6282092ba502ba6", "commitAfterChange": "20523cb2412f8dad4a71e540ad6dd612834e3e94", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": " \t protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["+\tif (sc.content == null) {", "+\t\tint w = (wHint != SWT.DEFAULT) ? wHint : DEFAULT_WIDTH;", "+\t\tint h = (hHint != SWT.DEFAULT) ? hHint : DEFAULT_HEIGHT;", "+\t\tRectangle trim = sc.computeTrim(0, 0, w, h);", "+\t\treturn new Point(trim.width, trim.height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829593ce850bfd5bb8389035b38b3ea2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4896d97caf89da7d498e3719510a0f18fcf84abb", "commitAfterChange": "327e9bd05386d4870da73fb2ead05b0e92e77cbe", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getBounds (int columnIndex)", "signatureAfterChange": " public Rectangle getBounds (int columnIndex)", "diff": ["-\tif (!isAvailable()) return new Rectangle (0, 0, 0, 0);", "+\tif (!isAvailable ()) return new Rectangle (0, 0, 0, 0);", "+\tif (columnIndex == 0) {", "+\t\tint columnX = column.getX ();", "+\t\tint xOffset = getExpanderBounds ().x - columnX;", "+\t\tint width = Math.max (0, column.width - xOffset);\t/* for columns with width < expander x */", "+\t\treturn new Rectangle (columnX + xOffset, parent.getItemY (this), width, parent.itemHeight);", "+\t}", "+\treturn new Rectangle (column.getX (), parent.getItemY (this), column.width, parent.itemHeight);", "+}"]}], "num": 28204}