{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef132d267c6c5a9750cb7e2990a337ad", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0723c509a46e94f846dcbe3c0a3411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "02e97b7981a930ce3446e9dd0e3c1b2c25e0172b", "commitAfterChange": "fd1d06d60ded6f60da4d59cc3e5e01163694fe73", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void test_setTopIndexI()", "signatureAfterChange": "  public void test_setTopIndexI()", "diff": ["-\tassertEquals(list.getTopIndex(), 0);", "+\tassertEquals(\"MULTI: setTopIndex(3) in empty list\", 0, list.getTopIndex());", "-\t\tassertEquals(list.getTopIndex(), i);", "+\t\tassertEquals(\"MULTI: setTopIndex(i=\" + i + \")\", i, list.getTopIndex());", "-\tassertEquals(0, list.getTopIndex());", "+\tassertEquals(\"SINGLE: setTopIndex(3) in empty list\", 0, list.getTopIndex());", "-\t\tassertEquals(i, list.getTopIndex());", "+\t\tassertEquals(\"SINGLE: setTopIndex(i=\" + i + \")\", i, list.getTopIndex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfbc6857ac6b11e7fe4b94ab5dba89d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_ScrollBar.java", "commitBeforeChange": "68057cbf552c2cb144586f06d2232a3297bd2d4f", "commitAfterChange": "483fa10c58617ef5c7747f0eb622f29ae07c8f30", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " private void check(int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "signatureAfterChange": " private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected)", "diff": ["-private void check(int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "-\tassertEquals(scrollBar.getMaximum(), maxExpected);", "-\tassertEquals(scrollBar.getMinimum(), minExpected);", "-\tassertEquals(scrollBar.getSelection(), selectionExpected);", "-\tassertEquals(scrollBar.getThumb(), thumbExpected);", "+private void check(String call, int minExpected, int maxExpected, int selectionExpected, int thumbExpected) {", "+\tassertEquals(call+\" max \", maxExpected, scrollBar.getMaximum());", "+\tassertEquals(call+\" min \", minExpected, scrollBar.getMinimum());", "+\tassertEquals(call+\" sel \", selectionExpected, scrollBar.getSelection());", "+\tassertEquals(call+\" thmb \", thumbExpected, scrollBar.getThumb());"]}], "num": 24300}