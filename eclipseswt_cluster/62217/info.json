{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af0510c08929965b9a5cd18af5d6c2f8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3d16366645d1d6ae7dbc54cc00167de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 262, "signatureBeforeChange": " void setCaretLocation()", "signatureAfterChange": " void setCaretLocation()", "diff": ["+ */", "+void setCaretLocation() {", "+\tPoint newCaretPos = getPointAtOffset(caretOffset);", "+\tsetCaretLocation(newCaretPos, getCaretDirection());", "+}", "- */", "-void setCaretLocation() {", "-\tint lineIndex = getCaretLine();", "-\tString line = content.getLine(lineIndex);", "-\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\tint offsetInLine = caretOffset - lineOffset;", "-\tint newCaretX = getXAtOffset(line, lineIndex, offsetInLine);", "-\tsetCaretLocation(newCaretX, lineIndex, getCaretDirection());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31c585b713920d2e0d03421ff45dda57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 289, "methodNumberAfterChange": 293, "signatureBeforeChange": " void showCaret(int caretLine)", "signatureAfterChange": " void showCaret(int caretLine)", "diff": ["-\tint newCaretX = getXAtOffset(line, caretLine, offsetInLine);\t", "-\tboolean scrolled = showLocation(newCaretX, caretLine);", "-\tboolean setWrapCaretLocation = false;", "-\tCaret caret = getCaret();", "-\tif (wordWrap && caret != null) {", "-\t\tint caretY = caret.getLocation().y;", "-\t\tif ((caretY + verticalScrollOffset) / getVerticalIncrement() - 1 != caretLine) {", "-\t\t\tsetWrapCaretLocation = true;", "-\t\t}", "-\t}", "-\tif (!scrolled || setWrapCaretLocation) {", "-\t\t// set the caret location if a scroll operation did not set it (as a ", "-\t\t// sideeffect of scrolling) or when in word wrap mode and the caret ", "-\t\t// line was explicitly specified (i.e., because getWrapCaretLine does ", "-\t\t// not return the desired line causing scrolling to not set it correctly)", "-\t\tsetCaretLocation(newCaretX, caretLine, getCaretDirection());", "+\tPoint newCaretPos = getPointAtOffset(line, caretLine, offsetInLine);\t", "+\tboolean scrolled = showLocation(newCaretPos);\t", "+\tif (!scrolled) {", "+\t\t// set the caret location if a scroll operation did not set it", "+\t\tsetCaretLocation(newCaretPos, caretLine, getCaretDirection());"]}], "num": 62217}