{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa3b8a7591d49ec4ba30e6ed095e60b6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3d3c16be7cca72df968573e8a0f824", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e0915feea84314f1929f7d98993453c25761945d", "commitAfterChange": "e5b655b350cf36b64f0c549d46d2b69fb2d566fe", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void redraw ()", "signatureAfterChange": " public void redraw ()", "diff": ["+\tredraw (false);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc15169bff06d8da20b52c4383c8fa0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  boolean isShowing ()", "signatureAfterChange": "  boolean isShowing ()", "diff": ["+\t/*", "+\t* This is not complete.  Need to check if the", "+\t* widget is obscurred by a parent or sibling.", "+\t*/", "+\t/* AW", "-\t// check if the widget is obscurred by a parent or sibling.", "-\tint rgn= 0;", "-\ttry {", "-\t\trgn= OS.NewRgn();", "-\t\tMacUtil.getVisibleRegion(handle, rgn, true);", "-\t\treturn !OS.EmptyRgn(rgn);", "-\t} finally {", "-\t\tif (rgn != 0)", "-\t\t\tOS.DisposeRgn(rgn);", "+\tControl control = this;", "+\twhile (control != null) {", "+\t\tPoint size = control.getSize ();", "+\t\tif (size.x == 0 || size.y == 0) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tcontrol = control.parent;", "+\t*/", "+\treturn true;", "+\t/*", "+\t* Check to see if current damage is included.", "+\t*/", "+//\tif (!OS.IsWindowVisible (handle)) return false;", "+//\tint flags = OS.DCX_CACHE | OS.DCX_CLIPCHILDREN | OS.DCX_CLIPSIBLINGS;", "+//\tint hDC = OS.GetDCEx (handle, 0, flags);", "+//\tint result = OS.GetClipBox (hDC, new RECT ());", "+//\tOS.ReleaseDC (handle, hDC);", "+//\treturn result != OS.NULLREGION;"]}], "num": 46365}