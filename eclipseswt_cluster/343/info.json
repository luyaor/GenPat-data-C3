{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de1fab4861e01343b4bccea511898082", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31928ea294060dcbb95e98b52fa855a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/internal/awt/win32/SWT_AWT.java", "commitBeforeChange": "8edb26f7765e14b1b7eb8e23e69c89af78088ea8", "commitAfterChange": "313e65a68a4b000776debea272a5d3afc94c72f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "signatureAfterChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "diff": ["-\t/*", "-\t* As of JDK 1.4, the DrawingSurface and WDrawingSurfaceInfo no longer exist", "-\t* so that code that references these classes no longer compiles.  The fix is", "-\t* to use refection to invoke equivalent code that is commented below.  There", "-\t* is no fix at this time for the missing WDrawingSurfaceInfo functionality.", "-\t*/", "-//\tDrawingSurface ds = (DrawingSurface)parent.getPeer();", "-//\tWDrawingSurfaceInfo wds = (WDrawingSurfaceInfo)ds.getDrawingSurfaceInfo();", "-//\twds.lock ();", "-//\tint handle = (int) wds.getHWnd ();", "-//\twds.unlock ();", "-\tInteger hwnd = null;", "+\tint handle = 0;", "-\t\tObject ds = parent.getPeer ();", "-\t\tClass drawingSurfaceClass = Class.forName (\"sun.awt.DrawingSurface\");  //$NON-NLS-1$", "-\t\tMethod method = drawingSurfaceClass.getDeclaredMethod (\"getDrawingSurfaceInfo\", null); //$NON-NLS-1$", "-\t\tObject wds = method.invoke (ds, null);", "-\t\tClass wDrawingSurfaceClass = Class.forName (\"sun.awt.windows.WDrawingSurfaceInfo\"); //$NON-NLS-1$", "-\t\tmethod = wDrawingSurfaceClass.getMethod (\"lock\", null); //$NON-NLS-1$", "-\t\tmethod.invoke (wds, null);", "-\t\tmethod = wDrawingSurfaceClass.getMethod (\"getHWnd\", null); //$NON-NLS-1$", "-\t\thwnd = (Integer) method.invoke (wds, null);", "-\t\tmethod = wDrawingSurfaceClass.getMethod (\"unlock\", null); //$NON-NLS-1$", "-\t\tmethod.invoke (wds, null);", "-\t} catch (Exception e) {", "+\t\thandle = getAWTHandle (parent);", "+\t} catch (Throwable e) {", "-\tint handle = hwnd.intValue();", "+\tif (handle == 0) SWT.error (SWT.ERROR_NOT_IMPLEMENTED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67c58065c6fe0205e5806c84b196a9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": "  public boolean forceFocus ()", "diff": ["- */", "+", "-\tDecorations shell = menuShell ();", "-\tshell.setSavedFocus (this);", "-\tif (!isEnabled () || !isVisible () /* AW || !isActive () */) return false;", "-\tif (isFocusControl ()) return true;", "-\tshell.bringToTop ();", "-\t/*", "-\t* This code is intentionally commented.", "-\t*", "-\t* When setting focus to a control, it is", "-\t* possible that application code can set", "-\t* the focus to another control inside of", "-\t* WM_SETFOCUS.  In this case, the original", "-\t* control will no longer have the focus", "-\t* and the call to setFocus() will return", "-\t* false indicating failure.", "-\t* ", "-\t* We are still working on a solution at", "-\t* this time.", "-\t*/", "-//\tif (OS.GetFocus () != OS.SetFocus (handle)) return false;", "-\t\t", "-\t/* AW", "-\tOS.SetFocus (handle);", "-\t*/", "-\t", "-\tboolean focus= false;", "-\t", "-\tif (this instanceof Text || this instanceof List || this instanceof Combo || this instanceof Canvas)", "-\t\tfocus= true;", "-\tif (!focus && MacUtil.FULL_KBD_NAV && this instanceof Button)", "-\t\tfocus= true;", "-\t", "-\tif (focus) {", "-\t\tDisplay display= getDisplay();", "-\t\tif (display != null)", "-\t\t\tdisplay.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "-\t}", "-", "-\treturn isFocusControl ();", "+\tint window = OS.GetControlOwner (handle);", "+\treturn OS.SetKeyboardFocus (window, handle, (short)OS.kControlFocusNextPart) == OS.noErr;"]}], "num": 343}