{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83818720427c900735586287be04ff00", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c5ea21948c5db808e793d378e8e12e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "+\tint offsetX, offsetY;", "-\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\tint offsetX = pt.h - rect.left;", "-\tint offsetY = pt.v - rect.top;", "-\tOS.GetControlBounds (handle, rect);", "-\toffsetX -= rect.left;", "-\toffsetY -= rect.top;", "-\t", "-\tint port = OS.GetWindowPort (window);", "+\tif (OS.HIVIEW) {", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\tOS.HIViewConvertPoint (pt, 0, handle);", "+\t\toffsetX = (int) pt.x;", "+\t\toffsetY = (int) pt.y;\t\t", "+\t} else {", "+\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "+\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\toffsetX = pt.h - rect.left;", "+\t\toffsetY = pt.v - rect.top;", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\toffsetX -= rect.left;", "+\t\toffsetY -= rect.top;", "+\t}", "+", "+\tint port = OS.HIVIEW ? -1 : OS.GetWindowPort (window);", "+\tCGPoint pt = new CGPoint ();", "-\t\t\t\tOS.GetControlBounds (parent.handle, rect);", "-\t\t\t\tint x = outPt.h - rect.left;", "-\t\t\t\tint y = outPt.v - rect.top;\t\t\t\t", "+\t\t\t\tint x, y;", "+\t\t\t\tif (OS.HIVIEW) {", "+\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t\t\t\tpt.x = outPt.h - rect.left;", "+\t\t\t\t\tpt.y = outPt.v - rect.top;", "+\t\t\t\t\tOS.HIViewConvertPoint (pt, 0, parent.handle);", "+\t\t\t\t\tx = (int) pt.x;", "+\t\t\t\t\ty = (int) pt.y;", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\t\t\t\tx = outPt.h - rect.left;", "+\t\t\t\t\ty = outPt.v - rect.top;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fa6ca090a524382c84cec9249c9e7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "-\t\tRect rect = new Rect ();", "-\t\tint window = OS.GetControlOwner (handle);", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\tint x = pt.h - rect.left;", "-\t\tint y = pt.v - rect.top;", "-\t\tOS.GetControlBounds (handle, rect);", "-\t\tx -= rect.left;", "-\t\ty -= rect.top;", "+\t\tint x, y;", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\t\tOS.HIViewConvertPoint (pt, 0, handle);", "+\t\t\tx = (int) pt.x;", "+\t\t\ty = (int) pt.y;", "+\t\t} else {", "+\t\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "+\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "+\t\t\tRect rect = new Rect ();", "+\t\t\tint window = OS.GetControlOwner (handle);", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t\tx = pt.h - rect.left;", "+\t\t\ty = pt.v - rect.top;", "+\t\t\tOS.GetControlBounds (handle, rect);", "+\t\t\tx -= rect.left;", "+\t\t\ty -= rect.top;", "+\t\t}", "-\tint port = OS.GetWindowPort (window);", "+\tint port = OS.HIVIEW ? -1 : OS.GetWindowPort (window);", "+\tCGPoint pt = new CGPoint ();", "+\tRect rect = new Rect ();", "-\t\t\t\t\tRect rect = new Rect ();", "-\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t\t\t\tint x = outPt.h;", "-\t\t\t\t\tint y = outPt.v;", "-\t\t\t\t\tOS.GetControlBounds (handle, rect);", "-\t\t\t\t\tx -= rect.left;", "-\t\t\t\t\ty -= rect.top;", "+\t\t\t\t\tint x, y;", "+\t\t\t\t\tif (OS.HIVIEW) {", "+\t\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t\t\t\t\tpt.x = outPt.h - rect.left;", "+\t\t\t\t\t\tpt.y = outPt.v - rect.top;", "+\t\t\t\t\t\tOS.HIViewConvertPoint (pt, 0, handle);", "+\t\t\t\t\t\tx = (int) pt.x;", "+\t\t\t\t\t\ty = (int) pt.y;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t\t\t\t\tx = outPt.h;", "+\t\t\t\t\t\ty = outPt.v;", "+\t\t\t\t\t\tOS.GetControlBounds (handle, rect);", "+\t\t\t\t\t\tx -= rect.left;", "+\t\t\t\t\t\ty -= rect.top;", "+\t\t\t\t\t}"]}], "num": 19866}