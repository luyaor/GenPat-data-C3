{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22889a67742dd81e48d51af0ee717d82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a764c2f298304778f19c790d0c85e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private StyleRange[] getVisualLineStyleData(StyleRange[] logicalStyles, int lineOffset, int lineLength)", "signatureAfterChange": " int getAverageCharWidth ()", "diff": ["- */", "-private StyleRange[] getVisualLineStyleData(StyleRange[] logicalStyles, int lineOffset, int lineLength) {", "-\tint lineEnd = lineOffset + lineLength;", "-\tint oldStyleCount = logicalStyles.length;", "-\tint newStyleCount = 0;", "-\t", "-\tfor (int i = 0; i < oldStyleCount; i++) {", "-\t\tStyleRange style = logicalStyles[i];", "-\t\tif (style.start < lineEnd && style.start + style.length > lineOffset) {", "-\t\t\tnewStyleCount++;", "-\t\t}", "-\t}", "-\tif (newStyleCount != oldStyleCount) {", "-\t\tStyleRange[] newStyles = new StyleRange[newStyleCount];", "-\t\tfor (int i = 0, j = 0; i < oldStyleCount; i++) {", "-\t\t\tStyleRange style = logicalStyles[i];", "-\t\t\tif (style.start < lineEnd && style.start + style.length > lineOffset) {", "-\t\t\t\tnewStyles[j++] = logicalStyles[i];\t\t\t\t\t\t", "-\t\t\t}", "-\t\t}", "-\t\tlogicalStyles = newStyles;", "-\t}", "-\treturn logicalStyles;", "-}", "+int getAverageCharWidth () {", "+\treturn averageCharWidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704d45c71c45bc18ce70ee79a831459c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "c5d7cc4240fdb43b5db86ec80dd549bc69490b91", "commitAfterChange": "99d694cafa531b87692a37a5ea121c8455a1f639", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int kEventMouseWheelMoved (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseWheelMoved (int nextHandler, int theEvent, int userData)", "diff": ["-\tint result = super.kEventMouseWheelMoved (nextHandler, theEvent, userData);", "-\tif (result == OS.noErr) return result;", "-\tif ((state & CANVAS) != 0) {", "-\t\tshort [] wheelAxis = new short [1];", "-\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseWheelAxis, OS.typeMouseWheelAxis, null, 2, null, wheelAxis);", "-\t\tScrollBar bar = wheelAxis [0] == OS.kEventMouseWheelAxisX ? horizontalBar : verticalBar;", "-\t\tif (bar != null && bar.getVisible ()) {", "-\t\t\tint [] wheelDelta = new int [1];", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseWheelDelta, OS.typeSInt32, null, 4, null, wheelDelta);", "-\t\t\tbar.setSelection (Math.max (0, bar.getSelection () - bar.getIncrement () * wheelDelta [0]));", "-\t\t\tEvent event = new Event ();", "-\t\t    event.detail = wheelDelta [0] > 0 ? SWT.PAGE_UP : SWT.PAGE_DOWN;\t", "-\t\t\tbar.sendEvent (SWT.Selection, event);", "-//\t\t\tDisplay display = getDisplay ();", "-//\t\t\tdisplay.update ();", "-\t\t\tupdate ();", "-\t\t}", "-\t\t/*", "-\t\t* Feature in the Macintosh.   For some reason, when eventNotHandledErr", "-\t\t* is returned from kEventMouseWheelMoved the event is sent twiced to", "-\t\t* the same control with the same mouse wheel data.  The fix is to return", "-\t\t* noErr to stop further event processing.", "-\t\t*/", "-\t\treturn OS.noErr;", "-\t}", "-\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint result = super.kEventMouseWheelMoved (nextHandler, theEvent, userData);"]}], "num": 59764}