{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66501b552f6d71fd210d76cf4ba2f592", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aff0ab6757f9fdc1cb5cd997656a0d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " void addColumn (TableColumn column)", "signatureAfterChange": " void addColumn (TableColumn column)", "diff": ["-\t\t/*", "-\t\t * The new second column now has more space available to it than it did while it", "-\t\t * was the first column since it no longer has to show hierarchy decorations, so", "-\t\t * recompute its displayText.", "+\t\t/* ", "+\t\t * The new second column may have more width available to it than it did when it was", "+\t\t * the first column if checkboxes are being shown, so recompute its displayText if needed. ", "-\t\tGC gc = new GC (parent);", "-\t\tgc.setFont (getFont (1));", "-\t\tcomputeDisplayText (1, gc);", "-\t\tgc.dispose ();", "+\t\tif ((parent.style & SWT.CHECK) != 0) {", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.setFont (getFont (1));", "+\t\t\tcomputeDisplayText (1, gc);", "+\t\t\tgc.dispose ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d451226a971d6fbd0817088ad75c6f35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "3f75ec57b0fe8c1d4b4feda67318fc7237703447", "commitAfterChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void updateSystemUIMode ()", "signatureAfterChange": "  void updateSystemUIMode ()", "diff": ["+\tif ((window.collectionBehavior() & OS.NSWindowCollectionBehaviorFullScreenPrimary) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f72351839614e4fc7eb322fa5a9bc679", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "30f86e7c1bafc3a05a8c93f5c85cd29b14a8aa60", "commitAfterChange": "c16021096e722feb5692c75378090ed79458458e", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 51, "signatureBeforeChange": "\r void propagateWidget (boolean enabled)", "signatureAfterChange": "\r void propagateWidget (boolean enabled)", "diff": ["-\t* ToolItems never participate in focus traversal when\r", "-\t* either enabled or disabled.\r", "+\t* Tool items participate in focus traversal only when\r", "+\t* the tool bar takes focus.\r", "-\tif (enabled) {\r", "-\t\tint [] argList = {OS.XmNtraversalOn, 0};\r", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\tif ((parent.style & SWT.NO_FOCUS) != 0) {\r", "+\t\tif (enabled) {\r", "+\t\t\tint [] argList = {OS.XmNtraversalOn, 0};\r", "+\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dce8d636916aba5f67ffad178631c1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "bf6f8d61c8892a0543b5ed3a6f14f5b8895f7d48", "commitAfterChange": "23966330ce5068163de59979b47551cd8b0420a2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void _setVisible (boolean visible)", "signatureAfterChange": "  void _setVisible (boolean visible)", "diff": ["-\t\t\t\tOS.gtk_menu_shell_set_take_focus (handle, false);", "+\t\t\t\t/*", "+\t\t\t\t* Feature in GTK. ON_TOP shells will send out ", "+\t\t\t\t* SWT.Deactivate whenever a context menu is shown.", "+\t\t\t\t* The fix is to prevent the menu from taking focus", "+\t\t\t\t* when it is being shown in an ON_TOP shell.", "+\t\t\t\t*/", "+\t\t\t\tif ((parent._getShell ().style & SWT.ON_TOP) != 0) {", "+\t\t\t\t\tOS.gtk_menu_shell_set_take_focus (handle, false);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b24622806663df64f54eb1361b0d3c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "ce7e8f74ba197c3f54b3e81dcac7f56f8e272197", "commitAfterChange": "a856ff6dc523c681b5a6eccd41823d10d7e4baef", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r public void setHotImage (Image image)", "signatureAfterChange": "\r \r public void setHotImage (Image image)", "diff": ["-\tsetImage (image);\r", "+\tif ((parent.style & SWT.FLAT) != 0) setImage (image);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "526af4b75f7552751984d4f702681b58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "24ee51cda626767793aae59eaf8489a458a84622", "commitAfterChange": "d7ca74b1c44a8e7ba85fe073712c80704bce7ea9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\t  public void drawFocus (int x, int y, int width, int height)", "signatureAfterChange": "\t  public void drawFocus (int x, int y, int width, int height)", "diff": ["+\tif ((data.uiState & OS.UISF_HIDEFOCUS) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ca6cbc5564ab065982f1f9778e95c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b56b4b43fc7924d2142c21d031fc139cbcbddc61", "commitAfterChange": "ac56d155af25941d04b7031600972e81024e999a", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "  long getWebBrowserHandle()", "signatureAfterChange": "  public long getWebBrowserHandle ()", "diff": ["-long getWebBrowserHandle() {", "+public long getWebBrowserHandle () {", "+\tif ((browser.getStyle () & SWT.MOZILLA) == 0) return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf81c1edc89d68b3bb991637245383b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "10ac860c791531eaa0aa28fcfcb589527af7be51", "commitAfterChange": "d57fa299d4e2f86393ed72f6f11975146f1034c9", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " int getPreferredColumnWidth(int columnIndex)", "signatureAfterChange": " int getPreferredColumnWidth(int columnIndex)", "diff": ["-\t\twhile (tableItems.hasMoreElements() == true) {", "-\t\t\ttableItem = (TableItem) tableItems.nextElement();", "-\t\t\twidth = Math.max(width, tableItem.getPreferredWidth(columnIndex));", "+\t\tif ((parent.getStyle() & SWT.VIRTUAL) == 0) {", "+\t\t\twhile (tableItems.hasMoreElements() == true) {", "+\t\t\t\ttableItem = (TableItem) tableItems.nextElement();", "+\t\t\t\twidth = Math.max(width, tableItem.getPreferredWidth(columnIndex));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b0de592de0975a484f75778a9f26af3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "640899692dcf76c70cb6e44d1a8c4fc8f2ccff92", "commitAfterChange": "86c160716ade941ca65c5288846d24ae847a7e14", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\t\t\tif (hitTestSelection (lpht.hItem, lpht.x, lpht.y)) fakeSelection = true;", "+\t\t\t\tif (hitTestSelection (lpht.hItem, lpht.x, lpht.y)) {", "+\t\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) fakeSelection = true;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37065bc5230395db29667ef1679b6b4d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "a38c8fbce66a12f4b9a5ae83cb497c9e81bc268e", "commitAfterChange": "ce10cb29df7459c006414e385a67e2adee8c370c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 56, "signatureBeforeChange": "  int gtk_window_state_event (int widget, int event)", "signatureAfterChange": "  int gtk_window_state_event (int widget, int event)", "diff": ["+\tfullScreen = (gdkEvent.new_window_state & OS.GDK_WINDOW_STATE_FULLSCREEN) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ed7bdff784da0cb50401b8a247b2183", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "7fa7cc5e84fe92badc6cb8740360d7a826a64783", "commitAfterChange": "975199eb17e2305f5a5a50372359ef7b029c885d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "diff": ["-\t\t\t\t\tint /*long*/ hwndScroll = shell.scrolledHandle ();", "-\t\t\t\t\tboolean drawGripper = hwnd == hwndScroll;", "-\t\t\t\t\tif (!drawGripper) {", "-\t\t\t\t\t\tRECT shellRect = new RECT ();", "-\t\t\t\t\t\tOS.GetClientRect (hwndScroll, shellRect);", "-\t\t\t\t\t\tOS.MapWindowPoints (hwndScroll, 0, shellRect, 2);", "-\t\t\t\t\t\tdrawGripper = shellRect.right == windowRect.right && shellRect.bottom == windowRect.bottom;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (drawGripper) {", "-\t\t\t\t\t\tOS.DrawThemeBackground (display.hScrollBarTheme(), hDC, OS.SBP_SIZEBOX, 0, cornerRect, null);", "+\t\t\t\t\tif ((shell.style & SWT.RESIZE) != 0) {", "+\t\t\t\t\t\tint /*long*/ hwndScroll = shell.scrolledHandle ();", "+\t\t\t\t\t\tboolean drawGripper = hwnd == hwndScroll;", "+\t\t\t\t\t\tif (!drawGripper) {", "+\t\t\t\t\t\t\tRECT shellRect = new RECT ();", "+\t\t\t\t\t\t\tOS.GetClientRect (hwndScroll, shellRect);", "+\t\t\t\t\t\t\tOS.MapWindowPoints (hwndScroll, 0, shellRect, 2);", "+\t\t\t\t\t\t\tdrawGripper = shellRect.right == windowRect.right && shellRect.bottom == windowRect.bottom;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (drawGripper) {", "+\t\t\t\t\t\t\tOS.DrawThemeBackground (display.hScrollBarTheme(), hDC, OS.SBP_SIZEBOX, 0, cornerRect, null);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15dba2bc89f145a136f9c3d6a2da1b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "3a71e3fa702def69bec5f8fc774bf667aeff88c4", "commitAfterChange": "ab1753cc7e6a85add435348de956934094048eee", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void enableWidget (boolean enabled)", "signatureAfterChange": "  void enableWidget (boolean enabled)", "diff": ["-\t* image lists.", "+\t* image lists for the item.", "+\t* ", "+\t* Feature in Windows.  When a tool bar is disabled,", "+\t* the text draws disabled but the images do not.", "+\t* The fix is to use the disabled image in all image", "+\t* lists for all items.", "-\t\t\titem.updateImages (enabled && item.getEnabled ());", "+\t\t\tif ((item.style & SWT.SEPARATOR) == 0) {", "+\t\t\t\titem.updateImages (enabled && item.getEnabled ());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f601b184d919e3d9e1c91ae4d24e34f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  Image createArrowImage (int width, int height)", "signatureAfterChange": "  Image createArrowImage (int width, int height)", "diff": ["-\tGC gc = new GC (image);", "+\tGC gc = new GC (image, parent.getStyle() & SWT.RIGHT_TO_LEFT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caef11eb44b06e29faeddd5191f149a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "4622c8063e50066b4f21b5c73b333645d1791fcb", "commitAfterChange": "61543d447b16e5575c1e9c4cbc37aca5973d8e40", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void addWidget ()", "signatureAfterChange": "  void addWidget ()", "diff": ["+\t\tif ((parent.style & SWT.ON_TOP) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b7770ffaaefa33247884295c67d0e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " void removeColumn (TableColumn column, int index)", "signatureAfterChange": " void removeColumn (TableColumn column, int index)", "diff": ["-\t\t * The new first column will not have as much width available to it as it did when it was", "-\t\t * the second column since it now has to show hierarchy decorations as well, so recompute", "-\t\t * its displayText. ", "+\t\t * The new first column may not have as much width available to it as it did when it was", "+\t\t * the second column if checkboxes are being shown, so recompute its displayText if needed. ", "-\t\tGC gc = new GC (parent);", "-\t\tgc.setFont (getFont (0));", "-\t\tcomputeDisplayText (0, gc);", "-\t\tgc.dispose ();", "+\t\tif ((parent.style & SWT.CHECK) != 0) {", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.setFont (getFont (0));", "+\t\t\tcomputeDisplayText (0, gc);", "+\t\t\tgc.dispose ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541509fe11f363940fce9e7016640850", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "cd01d8c794d2ee57cc20eae684610126923df1d8", "commitAfterChange": "4e70e8bb2fd368100887dd796adcee63da81285e", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "  Control findControl (NSEvent nsEvent, boolean checkGrab, boolean checkTrim, boolean checkWindows)", "signatureAfterChange": "  Control findControl (NSEvent nsEvent, boolean checkGrab, boolean checkTrim, boolean checkWindows)", "diff": ["-\t\t\t\tcontrol = (Control)widget;", "-\t\t\t\tbreak;", "+\t\t\t\tif ((widget.state & Widget.DISABLED) == 0) {", "+\t\t\t\t\tcontrol = (Control)widget;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}], "num": 44930}