{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba99554ee8f4ee898c3911003642b5d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af298304e2fc1eaa790f6c5fcf3fd0ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "eca9561f00e8f6869c3f064d2cc210213e7961a5", "commitAfterChange": "7b035d7945e49f32511c350507eda7aad65fec22", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public int getCaretPosition(int logicalOffset, int direction)", "signatureAfterChange": "\r public int getCaretPosition(int logicalOffset, int direction)", "diff": ["-\t\treturn StyledText.xInset;\r", "+\t\treturn StyledText.XINSET;\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "-\r", "+\telse\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "-\t}\t\r", "-\r", "-\tif (direction == ST.COLUMN_NEXT) {\r", "-\t\tif (isRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t// moving between segments\r", "-\t\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t\t// moving from RtoL to LtoR\r", "-\t\t\t\tint visualOffset = order[logicalOffset-1];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset];\r", "-\t\t\t}\r", "-\t\t\telse {\r", "-\t\t\t\t// moving from LtoR to RtoL\r", "-\t\t\t\tint visualOffset = order[logicalOffset-1];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\t\t\t}\r", "-\t\tsetKeyboardLanguage(logicalOffset-1);\r", "-\t\treturn caretX;\r", "+\t}\r", "+\telse\r", "+\tif (direction == ST.COLUMN_NEXT &&\r", "+\t\tisRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "+\t\tint visualOffset = order[logicalOffset-1];\r", "+\t\t// moving between segments\r", "+\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "+\t\t\t// moving from RtoL to LtoR\r", "+\t\t\tcaretX = renderPositions[visualOffset];\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\t// moving from LtoR to RtoL\r", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\r", "-\tif (direction == ST.COLUMN_PREVIOUS) {\r", "-\t\tif (isRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t// moving between segments\r", "-\t\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "-\t\t\t\t// moving from LtoR to RtoL\r", "-\t\t\t\tint visualOffset = order[logicalOffset];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset];\r", "-\t\t\t}\r", "-\t\t\telse {\r", "-\t\t\t\t// moving from RtoL to LtoR\r", "-\t\t\t\tint visualOffset = order[logicalOffset];\r", "-\t\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\t\t\t}\r", "-\t\tsetKeyboardLanguage(logicalOffset);\r", "-\t\treturn caretX;\r", "+\telse\r", "+\tif (direction == ST.COLUMN_PREVIOUS &&\r", "+\t\tisRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1)) {\r", "+\t\tint visualOffset = order[logicalOffset];\r", "+\t\t// moving between segments\r", "+\t\tif (isRightToLeft(logicalOffset - 1)) {\r", "+\t\t\t// moving from LtoR to RtoL\r", "+\t\t\tcaretX = renderPositions[visualOffset];\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\t// moving from RtoL to LtoR\r", "+\t\t\tcaretX = renderPositions[visualOffset] + dx[visualOffset];\r", "-\r", "+\telse\r", "-\tsetKeyboardLanguage(logicalOffset);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf3d8d8bc8f1407b05943b87071de6c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b45e8fdd6457ecd89905a08b9159ef92536b0cee", "commitAfterChange": "3435c841ff1fddd408f0370db7b59b1a4fd87446", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "+\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\timageHandle = OS.gtk_image_new_from_pixbuf (0);", "+\t\tif (imageHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t}", "-\t\t\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "-\t\t\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gtk_tool_button_set_label_widget(handle, labelHandle);", "-\t\t\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "-\t\t\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gtk_tool_button_set_label_widget (handle, arrowBoxHandle);", "-\t\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "-\t\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_tool_button_set_label_widget(handle, labelHandle);", "-\t\t\tlabelHandle = OS.gtk_label_new_with_mnemonic (null);", "-\t\t\tif (labelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_tool_button_set_label_widget(handle, labelHandle);", "+\t}", "+\tif (labelHandle != 0) {", "+\t\tOS.gtk_tool_button_set_label_widget(handle, labelHandle);", "+\t}", "+\tif (imageHandle != 0) {", "+\t\tOS.gtk_tool_button_set_icon_widget(handle, imageHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50c90be1279485c4edb0b22e219c1cb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridLayout.java", "commitBeforeChange": "188e89e62cd3fa5049c50b2f1c2aef380bca4656", "commitAfterChange": "02b6fcfc66e68bef5894b18185545118e86c317e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\t\t\t\tif (child instanceof Group) {", "-\t\t\t\t\tGroup g = (Group)child;", "-\t\t\t\t\ttrim = g.getSize ().x - g.getClientArea ().width;", "-\t\t\t\t} else if (child instanceof Scrollable) {", "+\t\t\t\tif (child instanceof Scrollable) {", "-\t\t\t\t\t\t\tif (child instanceof Group) {", "-\t\t\t\t\t\t\t\tGroup g = (Group)child;", "-\t\t\t\t\t\t\t\ttrim = g.getSize ().x - g.getClientArea ().width;", "-\t\t\t\t\t\t\t} else if (child instanceof Scrollable) {", "+\t\t\t\t\t\t\tif (child instanceof Scrollable) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74ff2316ef871a811a8ef671add4b809", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "74b44aac273bace6e70511de497711ba9cb87f49", "commitAfterChange": "6e4b0c1d4fdb9e23181a7b945123e706fd39c5bb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "diff": ["+\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, where.sizeof, null, where);", "+\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, where);", "-\t\t\t\t\t\tif (widget == hoverControl) {", "-\t\t\t\t\t\t\tint [] outDelay = new int [1];", "-\t\t\t\t\t\t\tOS.HMGetTagDelay (outDelay);", "-\t\t\t\t\t\t\tif (mouseHoverID != 0) {", "-\t\t\t\t\t\t\t\tOS.SetEventLoopTimerNextFireTime (mouseHoverID, outDelay [0] / 1000.0);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tint [] outDelay = new int [1];", "+\t\t\t\t\t\tOS.HMGetTagDelay (outDelay);", "+\t\t\t\t\t\tif (widget == currentControl && mouseHoverID != 0) {", "+\t\t\t\t\t\t\tOS.SetEventLoopTimerNextFireTime (mouseHoverID, outDelay [0] / 1000.0);", "-\t\t\t\t\t\t\t//NOT DONE - get rid of instanceof test", "-\t\t\t\t\t\t\tif (widget instanceof Control) {", "-\t\t\t\t\t\t\t\tif (mouseHoverID != 0) OS.RemoveEventLoopTimer (mouseHoverID);", "-\t\t\t\t\t\t\t\thoverControl = (Control) widget;", "-\t\t\t\t\t\t\t\tint [] id = new int [1], outDelay = new int [1];", "-\t\t\t\t\t\t\t\tOS.HMGetTagDelay (outDelay);", "-\t\t\t\t\t\t\t\tint handle = hoverControl.handle;", "-\t\t\t\t\t\t\t\tint eventLoop = OS.GetCurrentEventLoop ();", "-\t\t\t\t\t\t\t\tOS.InstallEventLoopTimer (eventLoop, outDelay [0] / 1000.0, 0.0, mouseHoverProc, handle, id);", "-\t\t\t\t\t\t\t\tif ((mouseHoverID = id [0]) == 0) hoverControl = null;", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (mouseHoverID != 0) OS.RemoveEventLoopTimer (mouseHoverID);", "+\t\t\t\t\t\t\tint [] id = new int [1];", "+\t\t\t\t\t\t\tint eventLoop = OS.GetCurrentEventLoop ();", "+\t\t\t\t\t\t\tOS.InstallEventLoopTimer (eventLoop, outDelay [0] / 1000.0, 0.0, mouseHoverProc, 0, id);", "+\t\t\t\t\t\t\tmouseHoverID = id [0];", "-\t\tcase OS.kEventMouseMoved:", "-\t\t\tOS.InitCursor ();", "+\t\tcase OS.kEventMouseMoved:  OS.InitCursor ();", "-\tif (mouseHoverID != 0) OS.RemoveEventLoopTimer (mouseHoverID);", "-\tmouseHoverID = 0;", "-\thoverControl = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e556f8b105c90fa543d9bcfe4ff8b49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "031f4f48c368ff02675c474ad5b282455359bb00", "commitAfterChange": "723030802cd546b1c5d1b883f3b29eb2dd82026d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void layout (boolean changed)", "signatureAfterChange": "  public void layout (boolean changed)", "diff": ["-\t\tint y = (leftSize.y > height) ? BORDER_TOP : BORDER_TOP + (height - leftSize.y) / 2;", "+\t\tint y = BORDER_STRIPE + BORDER_TOP;", "-\t\tint height = size.y - BORDER_TOP - BORDER_BOTTOM;", "-\t\tint y = (middleSize.y > height) ? BORDER_TOP : BORDER_TOP + (height - middleSize.y) / 2;", "-\t\tmiddleRect = new Rectangle(x, y, middleSize.x, Math.min(size.y, middleSize.y));", "+\t\tint height = Math.min(size.y  - BORDER_TOP - BORDER_BOTTOM - 2*BORDER_STRIPE, middleSize.y);", "+\t\tint y = BORDER_STRIPE + BORDER_TOP;", "+\t\tmiddleRect = new Rectangle(x, y, middleSize.x, height);", "-\t\tint height = size.y - BORDER_TOP - BORDER_BOTTOM;", "-\t\tint y = (rightSize.y > height) ? BORDER_TOP : BORDER_TOP + (height - rightSize.y) / 2;", "-\t\trightRect = new Rectangle(x, y, rightSize.x, Math.min(size.y, rightSize.y));", "+\t\tint height = Math.min(size.y  - BORDER_TOP - BORDER_BOTTOM - 2*BORDER_STRIPE, rightSize.y);", "+\t\tint y = BORDER_STRIPE + BORDER_TOP;", "+\t\trightRect = new Rectangle(x, y, rightSize.x, height);"]}], "num": 12769}