{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c2d668ad3c3a5d13459eacc217bb1c6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7aaf254e5ef87118cdd0f1cb01040e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d8659729c19b2f66166e63808109113cdd3c5181", "commitAfterChange": "b046986e54708873de090621f562489278b47c18", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void setSelection (TreeItem [] items)", "signatureAfterChange": " public void setSelection (TreeItem [] items)", "diff": ["-\tNSOutlineView outlineView = (NSOutlineView) view;", "-\tNSMutableIndexSet rows = (NSMutableIndexSet) new NSMutableIndexSet ().alloc ().init ();", "-\trows.autorelease ();", "-\tfor (int i=0; i<length; i++) {", "-\t\tif (items [i] != null) {", "-\t\t\tif (items [i].isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\tTreeItem item = items [i];", "-\t\t\tshowItem (items [i], false);", "-\t\t\trows.addIndex (outlineView.rowForItem (item.handle));", "-\t\t}", "-\t}", "-\tignoreSelect = true;", "-\toutlineView.selectRowIndexes (rows, false);", "-\tignoreSelect = false;", "+\tselectItems (items, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4059da93cfcfc5f20739092e1cf54f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/builders/Check64CompilationParticipant.java", "commitBeforeChange": "4d8daf0e3e81d301cc7e2c778b9beea2a5b1e9e7", "commitAfterChange": "eec00175c85fc62816701fee36d553b89dc3e28d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void buildFinished(IJavaProject project)", "signatureAfterChange": "  public void buildFinished(IJavaProject project)", "diff": ["-//\t\tlong time = System.currentTimeMillis();", "-\t\tboolean hasProblems = false;", "-\t\tIMarker[] markers = project.getProject().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "-\t\tfor (int i = 0; i < markers.length; i++) {", "-\t\t\tIMarker marker = markers[i];", "-\t\t\tif (SOURCE_ID.equals(marker.getAttribute(IMarker.SOURCE_ID))) {", "-\t\t\t\tmarker.delete();", "-\t\t\t} else {", "-\t\t\t\tObject severity = marker.getAttribute(IMarker.SEVERITY);", "-\t\t\t\thasProblems |= severity != null && ((Integer)severity).intValue() == IMarker.SEVERITY_ERROR;", "-\t\t\t}", "-\t\t}", "-\t\tif (hasProblems) return;", "+//\t\tlong time = System.currentTimeMillis();"]}], "num": 47907}