{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6ead03a01c5e70bd615357de89c6395", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb5fd86f484559ea1f3fd73e78b4d76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e253003f379a5077ef9bad1970e6ecd3caffe942", "commitAfterChange": "13106f1c871b402082825e5386ce5c12162603e8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r int createDIB(int width, int height, int depth)", "signatureAfterChange": "\r \r int createDIB(int width, int height)", "diff": ["-int createDIB(int width, int height, int depth) {\r", "-\tbyte[]\tbmi = new byte[40];\r", "+int createDIB(int width, int height) {\r", "+\tint depth = 32;\r", "+\tbyte[]\tbmi = new byte[40 + (OS.IsWinCE ? 12 : 0)];\r", "-\t/* DWORD biCompression = BI_RGB = 0 */\r", "-\tbmi[16] = bmi[17] = bmi[18] = bmi[19] = 0;\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/* DWORD biCompression = BI_BITFIELDS = 3 */\r", "+\t\tbmi[16] = 3; bmi[17] = bmi[18] = bmi[19] = 0;\r", "+\t} else {\r", "+\t\t/* DWORD biCompression = BI_RGB = 0 */\r", "+\t\tbmi[16] = bmi[17] = bmi[18] = bmi[19] = 0;\r", "+\t}\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/* the 32 bit masks are 0xFF000000, 0xFF0000, 0xFF00 */\r", "+\t\tbmi[40] = (byte)0xFF; bmi[41] = bmi[42] = bmi[43] = 0;\r", "+\t\tbmi[44] = 0; bmi[45] = (byte)0xFF; bmi[46] = bmi[47] = 0;\r", "+\t\tbmi[48] = bmi[49] = 0; bmi[50] = (byte)0xFF; bmi[51] = 0;\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5413a41ee6d6e0aa4cc8f0192b2f5953", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9c4bff2323bd0415c8033ce7de629d361e3ac9e3", "commitAfterChange": "37260278a8f433431d86d82db4bf8e9fe53b4d66", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\tif (hasAlpha) OS.objc_msgSend(nativeRep.id, OS.sel_setAlpha_, 0);", "-\t\tif (hasAlpha) OS.objc_msgSend(nativeRep.id, OS.sel_setAlpha_, 1);", "+\t\t\t\tfloat alpha = alphaData[a] & 0xFF;", "+\t\t\t\tif (alpha != 0) {", "+\t\t\t\t\tsrcData[p+1] = (byte)(((srcData[p+1] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t\tsrcData[p+2] = (byte)(((srcData[p+2] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t\tsrcData[p+3] = (byte)(((srcData[p+3] & 0xFF) / alpha) * 0xFF);", "+\t\t\t\t}", "-\t\t\t\tthis.transparentPixel = (red << 16) + (green << 8) + blue;", "+\t\t\t\tthis.transparentPixel = (red << 16) | (green << 8) | blue;", "-\t\t\t\t\t\tint pixel = (srcData[j+1] << 16) + (srcData[j+2] << 8) + srcData[j+3];", "+\t\t\t\t\t\tint pixel = ((srcData[j+1] & 0xFF) << 16) | ((srcData[j+2] & 0xFF) << 8) | (srcData[j+3] & 0xFF);"]}], "num": 43141}