{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "488a12f79958e9bf9da281baedab434f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "737791a4ff723e5490f6ea4222965a34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem, boolean isAllItems)", "signatureAfterChange": "  boolean setScrollWidth (TreeItem item)", "diff": ["-", "-boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem, boolean isAllItems) {", "-\tif (columnCount != 0) return false;", "-//\tif (currentItem != null) {", "-//\t\tif (currentItem != item) fixScrollWidth = true;", "-//\t\treturn false;", "-//\t}", "-\tif (/*ignoreRedraw ||*/ drawCount != 0) return false;", "-\tint newWidth = 0;", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tTreeItem item = items[i];", "-\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\tnewWidth = Math.max (newWidth, item.calculateWidth (0, gc, recurse, callMeasureItem));", "-\t\t\tif (isDisposed ()) {", "-\t\t\t\tgc.dispose ();", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t}", "-\t/*", "-\t * update the column width either if it needs to grow, or if all items in the Tree", "-\t * were measured (in which case it is safe to shrink the column if appropriate)", "-\t */", "-\tif ((firstColumn.width () < newWidth) || (isAllItems && recurse)) {", "-\t\tfirstColumn.setWidth (newWidth);", "+boolean setScrollWidth (TreeItem item) {", "+\tif (ignoreRedraw || drawCount != 0) return false;", "+\tif (columnCount != 0) return false;", "+\tTreeItem parentItem = item.parentItem;", "+\tif (parentItem != null && !parentItem.getExpanded ()) return false;", "+\tGC gc = new GC (this);", "+\tint newWidth = item.calculateWidth (0, gc);", "+\tgc.dispose ();", "+\tint oldWidth = (int)firstColumn.width ();", "+\tif (oldWidth < newWidth) {", "+\t\tfirstColumn.setWidth (newWidth);", "+\t\treturn true;", "+\t}", "+\treturn false;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a905fe7023cba1e04451609807db8a0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 88, "signatureBeforeChange": "  boolean setScrollWidth (TableItem items[], boolean callMeasureItem, boolean isAllItems)", "signatureAfterChange": "  boolean setScrollWidth (TableItem [] items, boolean set)", "diff": ["-", "-boolean setScrollWidth (TableItem items[], boolean callMeasureItem, boolean isAllItems) {", "-//\tif (currentItem != null) {", "-//\t\tif (currentItem != item) fixScrollWidth = true;", "-//\t\treturn false;", "-//\t}", "-\tif (/*ignoreRedraw ||*/ drawCount != 0) return false;", "-\tint newWidth = 0;", "+", "+boolean setScrollWidth (TableItem [] items, boolean set) {", "+\tif (columnCount != 0) return false;", "+\tif (drawCount != 0) return false;", "+\tif (currentItem != null) {", "+\t\tfixScrollWidth = true;", "+\t\treturn false;", "+\t}", "+\tGC gc = new GC (this);", "+\tint newWidth = 0;", "-\t\tTableItem item = items[i];", "-\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\tnewWidth = Math.max (newWidth, item.calculateWidth (0, gc, callMeasureItem));", "-\t\t\tif (isDisposed ()) {", "-\t\t\t\tgc.dispose ();", "-\t\t\t\treturn false;", "-\t\t\t}", "+\t\tTableItem item = items [i];", "+\t\tif (item != null) {", "+\t\t\tnewWidth = Math.max (newWidth, item.calculateWidth (0, gc));", "-\tnewWidth += getInsetWidth ();", "-\t/*", "-\t * update the column width either if it needs to grow, or if all items in the Table", "-\t * were measured (in which case it is safe to shrink the column if appropriate)", "-\t */", "-\tif ((firstColumn.width () < newWidth) || isAllItems) {", "-\t\tfirstColumn.setWidth (newWidth);", "+\tif (!set) {", "+\t\tint oldWidth = (int)firstColumn.width ();", "+\t\tif (oldWidth >= newWidth) return false;", "+\tfirstColumn.setWidth (newWidth);"]}], "num": 40821}