{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c2ef8717ac74f364c2d5d76cee7d75c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92c9fec830afdcec940b89e1ae5de36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-*/\r", "-\tXtWidgetGeometry result = new XtWidgetGeometry ();\r", "-\tresult.request_mode = OS.CWWidth | OS.CWHeight;\r", "-\tint [] argList2 = {OS.XmNrecomputeSize, 1};\r", "-\tOS.XtSetValues(handle, argList2, argList2.length / 2);\r", "-\tOS.XtQueryGeometry (handle, null, result);\r", "-\tint [] argList3 = {OS.XmNrecomputeSize, 0};\r", "-\tOS.XtSetValues(handle, argList3, argList3.length / 2);\r", "-\twidth += result.width;\r", "-\theight += result.height;\r", "+\tint [] argList = {OS.XmNlabelType, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\tint labelType = argList [1];\r", "+\tif (labelType == OS.XmSTRING && (style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {\r", "+\t\t/* If we are wrapping text, calculate the height based on wHint. */\r", "+\t\tint [] argList4 = {\r", "+\t\t\tOS.XmNfontList, 0,      /* 1 */\r", "+\t\t\tOS.XmNmarginTop, 0,     /* 3 */\r", "+\t\t\tOS.XmNmarginBottom, 0,  /* 5 */\r", "+\t\t\tOS.XmNmarginHeight, 0,  /* 7 */\r", "+\t\t};\r", "+\t\tOS.XtGetValues (handle, argList4, argList4.length / 2);\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tString string = display.wrapText (text, argList4 [1], wHint);\r", "+\t\tGC gc = new GC(this);\r", "+\t\tPoint extent = gc.textExtent(string);\r", "+\t\tgc.dispose();\r", "+\t\theight = extent.y + argList4 [3] + argList4 [5] + argList4 [7] * 2 + border * 2;\r", "+\t} else {\r", "+\t\t/* If we are not wrapping, ask the widget for its geometry. */\r", "+\t\tXtWidgetGeometry result = new XtWidgetGeometry ();\r", "+\t\tresult.request_mode = OS.CWWidth | OS.CWHeight;\r", "+\t\tint [] argList2 = {OS.XmNrecomputeSize, 1};\r", "+\t\tOS.XtSetValues(handle, argList2, argList2.length / 2);\r", "+\t\tOS.XtQueryGeometry (handle, null, result);\r", "+\t\tint [] argList3 = {OS.XmNrecomputeSize, 0};\r", "+\t\tOS.XtSetValues(handle, argList3, argList3.length / 2);\r", "+\t\twidth += result.width;\r", "+\t\theight += result.height;\r", "+\t}\r", "+\r", "-\t * Feature in Motif. If a button's labelType is XmSTRING but it\r", "+\t * Feature in Motif. If a label's labelType is XmSTRING but it\r", "-\tint [] argList = {OS.XmNlabelType, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\tif (argList [1] == OS.XmSTRING) {\r", "-\t\tint [] argList1 = {OS.XmNlabelString, 0};\r", "-\t\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "-\t\tint xmString = argList1 [1];\r", "-\t\tif (OS.XmStringEmpty (xmString)) {\r", "-\t\t\theight += getFontHeight ();\r", "-\t\t\twidth = 0;\r", "-\t\t}\r", "+\tif (labelType == OS.XmSTRING && text.length () == 0) {\r", "+\t\theight += getFontHeight ();\r", "+\t\twidth = 0;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2765de98cad9ac105dc4e575cbd288c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "5d38390584adf79405cd86a4c28992ccdbd567df", "commitAfterChange": "b0a0bcf30f09c2ffbb2137bd933ec7f8ce62d60c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tXtWidgetGeometry result = new XtWidgetGeometry ();", "-\tresult.request_mode = OS.CWWidth | OS.CWHeight;", "-\tint [] argList2 = {OS.XmNrecomputeSize, 1};", "-\tOS.XtSetValues(handle, argList2, argList2.length / 2);", "-\tOS.XtQueryGeometry (handle, null, result);", "-\tint [] argList3 = {OS.XmNrecomputeSize, 0};", "-\tOS.XtSetValues(handle, argList3, argList3.length / 2);", "-\twidth += result.width;", "-\theight += result.height;", "+\tint [] argList = {OS.XmNlabelType, 0};", "+\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\tint labelType = argList [1];", "+\tif (labelType == OS.XmSTRING && (style & SWT.WRAP) != 0) {", "+\t\t/* If we are wrapping text, calculate the height based on wHint. */", "+\t\tint [] argList2 = {", "+\t\t\tOS.XmNmarginTop, 0,     /* 1 */", "+\t\t\tOS.XmNmarginBottom, 0,  /* 3 */", "+\t\t\tOS.XmNmarginHeight, 0,  /* 5 */", "+\t\t\tOS.XmNmarginWidth, 0,   /* 7 */", "+\t\t\tOS.XmNmarginLeft, 0,    /* 9 */", "+\t\t\tOS.XmNmarginRight, 0,   /* 11 */", "+\t\t\tOS.XmNspacing, 0, /* 13 */", "+\t\t\tOS.XmNdefaultButtonShadowThickness, 0, /* 15 */", "+\t\t};", "+\t\tOS.XtGetValues (handle, argList2, argList2.length / 2);", "+\t\tint trimWidth = (argList2 [7] * 2) + argList2 [9] + argList2 [11] + argList2 [13] + 2 * border + 2 * argList2[15];", "+\t\tString string = text;", "+\t\tif (wHint != SWT.DEFAULT) {", "+\t\t\tstring = display.wrapText (string, font, wHint - trimWidth);", "+\t\t}", "+\t\tGC gc = new GC (this);", "+\t\tPoint extent = gc.textExtent (string);", "+\t\tgc.dispose ();", "+\t\theight = extent.y + argList2 [1] + argList2 [3] + (argList2 [5] * 2) + (border * 2);", "+\t\tif (wHint == SWT.DEFAULT) {", "+\t\t\twidth = extent.x + trimWidth;", "+\t\t}", "+\t} else {", "+\t\tXtWidgetGeometry result = new XtWidgetGeometry ();", "+\t\tresult.request_mode = OS.CWWidth | OS.CWHeight;", "+\t\tint [] argList2 = {OS.XmNrecomputeSize, 1};", "+\t\tOS.XtSetValues(handle, argList2, argList2.length / 2);", "+\t\tOS.XtQueryGeometry (handle, null, result);", "+\t\tint [] argList3 = {OS.XmNrecomputeSize, 0};", "+\t\tOS.XtSetValues(handle, argList3, argList3.length / 2);", "+\t\twidth += result.width;", "+\t\theight += result.height;", "+\t}", "-\tint [] argList = {OS.XmNlabelType, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tif (argList [1] == OS.XmSTRING) {", "+\tif (labelType == OS.XmSTRING) {"]}], "num": 6513}