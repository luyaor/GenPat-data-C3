{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50968b1b43850f2aed9485801d22e391", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6261c2c7f1bfc94387a9b4a67497023f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "562c65dd1842578db920df56ca041172cc0dffa5", "commitAfterChange": "4d28edf7b62e3b5fcfaf6380e9333fcb7245709a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r void createAcceleratorTable ()", "signatureAfterChange": "\r \r void createAcceleratorTable ()", "diff": ["-\tif (menuBar == null || items == null) return;\r", "+\tint maxAccel;\r", "+\tif (menuBar == null || items == null) {\r", "+\t\tif (OS.IsWinCE) maxAccel = 1;\r", "+\t\telse return;\r", "+\t} else {\r", "+\t\tmaxAccel = OS.IsWinCE ? items.length + 1 : items.length;\r", "+\t}\r", "-\tbyte [] buffer1 = new byte [size];\r", "-\tbyte [] buffer2 = new byte [items.length * size];\r", "-\tfor (int i=0; i<items.length; i++) {\r", "-\t\tMenuItem item = items [i];\r", "-\t\tif (item != null && item.accelerator != 0) {\r", "-\t\t\tMenu parent = item.parent;\r", "-\t\t\twhile (parent != null && parent != menuBar) {\r", "-\t\t\t\tparent = parent.getParentMenu ();\r", "-\t\t\t}\r", "-\t\t\tif (parent == menuBar) {\r", "-\t\t\t\titem.fillAccel (accel);\r", "-\t\t\t\tOS.MoveMemory (buffer1, accel, size);\r", "-\t\t\t\tSystem.arraycopy (buffer1, 0, buffer2, nAccel * size, size);\r", "-\t\t\t\tnAccel++;\r", "+\tbyte [] buffer1 = new byte [size];\t\r", "+\tbyte [] buffer2 = new byte [maxAccel * size];\r", "+\tif (menuBar != null && items != null) {\r", "+\t\tfor (int i=0; i<items.length; i++) {\r", "+\t\t\tMenuItem item = items [i];\r", "+\t\t\tif (item != null && item.accelerator != 0) {\r", "+\t\t\t\tMenu parent = item.parent;\r", "+\t\t\t\twhile (parent != null && parent != menuBar) {\r", "+\t\t\t\t\tparent = parent.getParentMenu ();\r", "+\t\t\t\t}\r", "+\t\t\t\tif (parent == menuBar) {\r", "+\t\t\t\t\titem.fillAccel (accel);\r", "+\t\t\t\t\tOS.MoveMemory (buffer1, accel, size);\r", "+\t\t\t\t\tSystem.arraycopy (buffer1, 0, buffer2, nAccel * size, size);\r", "+\t\t\t\t\tnAccel++;\r", "+\t\t\t\t}\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/* \r", "+\t\t* Note on WinCE PPC.  Close Shell when user taps CTRL-Q.\r", "+\t\t* IDOK represents the \"Done Button\" which also closes\r", "+\t\t* the Shell.\r", "+\t\t*/\r", "+\t\taccel.fVirt = OS.FVIRTKEY | OS.FCONTROL;\r", "+\t\taccel.key = 'Q';\r", "+\t\taccel.cmd = OS.IDOK;\r", "+\t\tOS.MoveMemory (buffer1, accel, size);\r", "+\t\tSystem.arraycopy (buffer1, 0, buffer2, nAccel * size, size);\r", "+\t\tnAccel++;\t\t\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f0d55f4cd20391021c3529b2931623", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "23825160d21d6c3c1a58f38fbbe98cca0211c41b", "commitAfterChange": "88b2eb5d18523e69ae1e3acb4a4a79733b8a3e52", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["+\r", "+\t/*\r", "+\t* Feature in Windows.  When inserting an item at end of a row,\r", "+\t* eventually, Windows will begin to place the item on the right\r", "+\t* side of the cool bar.  The fix is to resize the next to last\r", "+\t* item to the ideal size and resize the new items to the maximum\r", "+\t* size.\r", "+\t*/\r", "+\tint lastIndex = getLastIndexOfRow (index);\t\r", "+\tif (index == lastIndex + 1) {  \t\r", "+\t\tREBARBANDINFO rbBand2 = new REBARBANDINFO ();\r", "+\t\trbBand2.cbSize = REBARBANDINFO.sizeof;\r", "+\t\trbBand2.fMask = OS.RBBIM_IDEALSIZE;\r", "+\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, lastIndex, rbBand2);\r", "+\t\trbBand2.fMask = OS.RBBIM_SIZE;\r", "+\t\trbBand2.cx = rbBand2.cxIdeal;\r", "+\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, lastIndex, rbBand2);\r", "+\t\trbBand.fMask |= OS.RBBIM_SIZE;\r", "+\t\trbBand.cx = MAX_WIDTH; \r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681a500ad804bdd3c9ad77e58702dd3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b0693a12063ab35c44f34d89fd60d2e89368a94f", "commitAfterChange": "e9fff9da841962ff350a910fb52f584e5996a4f4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r void destroyItem (MenuItem item)", "signatureAfterChange": "\r \r void destroyItem (MenuItem item)", "diff": ["-\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "-\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\tif (OS.IsWinCE) {\r", "+\t\tint index = 0;\r", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {\r", "+\t\t\tif (info.dwItemData == item.id) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (info.dwItemData != item.id) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\t\r", "+\t\tif (!OS.RemoveMenu (handle, index, OS.MF_BYPOSITION)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82174882026bfed9dcb71b422017c1c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "61c6d1cfa8202cf6bb13af3022e6b1b082004327", "commitAfterChange": "5355818ed6c80a44bb9a2df251a105a7af080d33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r void createItem (TableColumn column, int index)", "signatureAfterChange": "\r \r void createItem (TableColumn column, int index)", "diff": ["+\t\t\tOS.SendMessage (handle, OS.LVM_GETCOLUMN, 1, lvColumn);\r", "+\t\t\tint width = lvColumn.cx;\r", "-\t\t\tlvColumn.mask = OS.LVCF_TEXT | OS.LVCF_WIDTH | OS.LVCF_FMT;\r", "+\t\t\tlvColumn.mask = OS.LVCF_TEXT | OS.LVCF_IMAGE | OS.LVCF_WIDTH | OS.LVCF_FMT;\r", "+\t\t\tlvColumn.fmt = OS.LVCFMT_IMAGE;\r", "+\t\t\tlvColumn.cx = width;\r", "+\t\t\tlvColumn.iImage = OS.I_IMAGENONE;\r", "+\t\t\tlvColumn.pszText = lvColumn.cchTextMax = 0;\r", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETCOLUMN, 0, lvColumn);\r", "+\t\t\tlvColumn.mask = OS.LVCF_FMT;\r", "+\t\t\tlvColumn.fmt = OS.LVCFMT_LEFT;\r", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETCOLUMN, 0, lvColumn);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad30c719683d4d11a6b2399e72f949b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "5e2d580858138f39b04450d3d7462f70f593b33d", "commitAfterChange": "6086ff1582180c7237da261fc82386df3aa300ca", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  void update ()", "signatureAfterChange": "  void update ()", "diff": ["+\t", "+\t/*", "+\t* Bug in Windows.  When a menu item has a check and a string", "+\t* that includes a label and accelerator text but does not have", "+\t* a bitmap, when the string is the longest string in the menu,", "+\t* the label and accelerator text overlap.  The fix is to use", "+\t* SetMenuItemInfo() to indicate that the item has a bitmap", "+\t* and then answer the width of the widest bitmap in the menu", "+\t* from WM_MEASURECHILD.", "+\t*/\t", "+\tif (hasImage && hasCheck) {", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;", "+\t\tinfo.fMask = OS.MIIM_BITMAP;", "+\t\tinfo.hbmpItem = OS.HBMMENU_CALLBACK;", "+\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\tMenuItem item = items [i];", "+\t\t\tif ((item.style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\t\t\tOS.SetMenuItemInfo (handle, item.id, false, info);", "+\t\t\t}", "+\t\t}", "+\t}", "+", "+\t/* Update the menu to hide or show the space for bitmaps */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1049ff9fc37f4b395b7500bc66e88fa1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "823cc6c2771fef0325da5857f1a25b2b047efde4", "commitAfterChange": "acd21e0605604e65519caa05a651b424c54e8bba", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "signatureAfterChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "diff": ["-\t\t//collect all children with the same role, if none, then 0 (for N/A)", "+\t\t//count all children with the same role, if none, then 0 (for N/A)", "+\t\t//find this control's 1-based index in the same-type children of the parent (0 for N/A)", "-\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);", "-\t\t//find this guy's 1-based index in the children of the parent (0 for N/A)", "+\t\tif (control instanceof Button && ((control.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t/* We currently only determine position and count for radio buttons. */", "+\t\t\tControl [] children = control.getParent().getChildren();", "+\t\t\tpositionInGroup = 1;", "+\t\t\tsimilarItemsInGroup = 1;", "+\t\t\tfor (int i = 0; i < children.length; i++) {", "+\t\t\t\tControl child = children[i];", "+\t\t\t\tif (child instanceof Button && ((child.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t\t\tif (child == control) positionInGroup = similarItemsInGroup;", "+\t\t\t\t\telse similarItemsInGroup++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4e42dd2cbd2433784602d69c332a4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b0693a12063ab35c44f34d89fd60d2e89368a94f", "commitAfterChange": "e9fff9da841962ff350a910fb52f584e5996a4f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r void createItem (MenuItem item, int index)", "signatureAfterChange": "\r \r void createItem (MenuItem item, int index)", "diff": ["-\t\tint flags = OS.MF_BYPOSITION;\r", "-\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;\r", "-\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); \r", "+\t\tint uFlags = OS.MF_BYPOSITION;\r", "+\t\tTCHAR lpNewItem = null;\r", "+\t\tif ((item.style & SWT.SEPARATOR) != 0) {\r", "+\t\t\tuFlags |= OS.MF_SEPARATOR;\r", "+\t\t} else {\r", "+\t\t\tlpNewItem = new TCHAR (0, \"\", true);\r", "+\t\t}\r", "+\t\tsuccess = OS.InsertMenu (handle, index, uFlags, item.id, lpNewItem);\r", "+\t\tif (success) {\r", "+\t\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\t\tinfo.dwItemData = item.id;\r", "+\t\t\tsuccess = OS.SetMenuItemInfo (handle, index, true, info);\r", "+\t\t}\r", "-\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;\r", "-\t\tinfo.wID = item.id;\r", "+\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE | OS.MIIM_DATA;\r", "+\t\tinfo.wID = info.dwItemData = item.id;\r"]}], "num": 55796}