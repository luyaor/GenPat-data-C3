{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "891b90075aa11f41f45bf2e0ebbbf9c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84eb93f35fc700f4989426b1cf63f1ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\toutput(\"/*\");", "-\toutputln();", "+\toutputln(\"/*\");", "-\toutput(\"*/\");", "-\toutputln();", "-\toutput(\"\\t\");", "-\toutput(\"{\");", "-\toutputln();", "+\toutputln(\"*/\");", "+\toutputln(\"\\t{\");", "-\t\toutput(\"\\t\\tstatic int initialized = 0;\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tstatic HMODULE hm = NULL;\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tstatic FARPROC fp = NULL;\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\tstatic int initialized = 0;\");", "+\t\toutputln(\"\\t\\tstatic HMODULE hm = NULL;\");", "+\t\toutputln(\"\\t\\tstatic FARPROC fp = NULL;\");", "-\t\t\t\toutput(\"\\t\\trc = 0;\");", "-\t\t\t\toutputln();", "+\t\t\t\toutputln(\"\\t\\trc = 0;\");", "-\t\toutput(\"\\t\\tif (!initialized) {\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\tif (!initialized) {\");", "-\t\toutput(\"_LIB);\");", "-\t\toutputln();", "+\t\toutputln(\"_LIB);\");", "-\t\toutput(\"\\\");\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\t}\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tif (fp) {\");", "-\t\toutputln();", "+\t\toutputln(\"\\\");\");", "+\t\toutputln(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputln(\"\\t\\t}\");", "+\t\toutputln(\"\\t\\tif (fp) {\");", "-\t\toutput(\"\\t\\t}\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\t}\");", "-\t\toutput(\"\\t\\tstatic int initialized = 0;\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tstatic void *handle = NULL;\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\tstatic int initialized = 0;\");", "+\t\toutputln(\"\\t\\tstatic void *handle = NULL;\");", "-\t\toutput(\");\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tstatic FPTR fptr;\");", "-\t\toutputln();", "+\t\toutputln(\");\");", "+\t\toutputln(\"\\t\\tstatic FPTR fptr;\");", "-\t\t\t\toutput(\"\\t\\trc = 0;\");", "-\t\t\t\toutputln();", "+\t\t\t\toutputln(\"\\t\\trc = 0;\");", "-\t\toutput(\"\\t\\tif (!initialized) {\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\tif (!initialized) {\");", "-\t\toutput(\"_LIB, RTLD_LAZY);\");", "-\t\toutputln();", "+\t\toutputln(\"_LIB, RTLD_LAZY);\");", "-\t\toutput(\"\\\");\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\t}\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\tif (fptr) {\");", "-\t\toutputln();", "+\t\toutputln(\"\\\");\");", "+\t\toutputln(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputln(\"\\t\\t}\");", "+\t\toutputln(\"\\t\\tif (fptr) {\");", "-\t\toutput(\"\\t\\t}\");", "-\t\toutputln();", "+\t\toutputln(\"\\t\\t}\");", "-\toutput(\"\\t\");", "-\toutput(\"}\");", "-\toutputln();", "+\toutputln(\"\\t}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79ab7002ff5684e748ec1bfe2e42771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "af64dc0cb00680852a28d24c43b228552f8b7b28", "commitAfterChange": "5f337fe3ac34ee9a44ecfc3b3eed6c9c5e733012", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t", "-\toutput(\"\\tvoid *handle = NULL;\");", "-\toutputDelimiter();", "-\toutput(\"\\tint (*fptr)();\");", "-\toutputDelimiter();", "-\tif (returnType != Void.TYPE) {", "-\t\tif (needsReturn) {", "-\t\t\toutput(\"\\trc = 0;\");", "-\t\t\toutputDelimiter();", "+\t", "+\tif (Platform.PLATFORM.equals(\"win32\")) {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic HMODULE hm = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic FARPROC fp = NULL;\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!(hm = GetModuleHandle(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB))) hm = LoadLibrary(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (hm) fp = GetProcAddress(hm, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fp) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"fp\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t} else {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic void *handle = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic int (*fptr)();\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!handle) handle = dlopen(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB, RTLD_LAZY);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (handle) fptr = dlsym(handle, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fptr) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"(*fptr)\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "-\toutput(\"\\tif ((handle = dlopen(\");", "-\toutput(method.getName());", "-\toutput(\"_LIB, RTLD_LAZY)) != NULL && (fptr = dlsym(handle, \\\"\");", "-\toutput(method.getName());", "-\toutput(\"\\\")) != NULL) {\");", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "-\toutput(\"(*fptr)\");", "-\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\toutput(\"}\");", "-\toutputDelimiter();", "+"]}], "num": 57264}