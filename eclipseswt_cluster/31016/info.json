{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "751dcf8b7edce4775b6c3e1c0d67431b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e440847c1369dd8dc6fedaaedfa73a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 117, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["+\t\tif (backgroundImage != null && OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "+\t\t\tflags |= OS.SWP_NOCOPYBITS;", "+\t\t}", "-\t\t\t/*", "-\t\t\t* This code is intentionally commented.  All widgets that", "-\t\t\t* are created by SWT have WS_CLIPSIBLINGS to ensure that", "-\t\t\t* application code does not draw outside of the control.", "-\t\t\t*/", "-//\t\t\tint count = parent.getChildrenCount ();", "-//\t\t\tif (count > 1) {", "-//\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-//\t\t\t\tif ((bits & OS.WS_CLIPSIBLINGS) == 0) flags |= OS.SWP_NOCOPYBITS;", "-//\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e751fee105364c97445ff19f3355d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "f1f04c9cfd4ddd98dcadbbb14f16fa165a044b8a", "commitAfterChange": "9806db4337b5c0fa12aab336ea874ee91655803e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Bug in Windows 98 and NT.  Invoking SetWindowPos can result in\r", "+\t* a dialog being moved behind its parent if the dialog has a sibling\r", "+\t* dialog with style bit ON_TOP.  The workaround is to lock the active\r", "+\t* window's position during the SetWindowPos invocation below.\r", "+\t*/\r", "-//\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "+\tgetDisplay().lockActiveWindow = true;\r", "+\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "+\tgetDisplay().lockActiveWindow = false;\r"]}], "num": 31016}