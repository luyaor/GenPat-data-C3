{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3b57b3aa0bb4c8904f4378b49d8ad56", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9365aded5e006279deb4793c5a597dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c76676fff5364cedbb4c2f8c13d74d7d1d739e7f", "commitAfterChange": "0a26c43fd93ab06acd4439ddc610814541a2ea9d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " NSRect expansionFrameWithFrame_inView(int id, int sel, NSRect cellRect, int view)", "signatureAfterChange": "  NSRect expansionFrameWithFrame_inView(int id, int sel, NSRect cellRect, int view)", "diff": ["+", "-\tif (toolTipText == null) return super.expansionFrameWithFrame_inView(id, sel, cellRect, view);", "+\tif (toolTipText == null) {", "+\t\tNSRect rect = super.expansionFrameWithFrame_inView(id, sel, cellRect, view);", "+\t\tNSCell cell = new NSCell(id);", "+\t\tif (rect.width != 0 && rect.height != 0) {", "+\t\t\tif (hooks(SWT.MeasureItem)) {", "+\t\t\t\tNSSize cellSize = cell.cellSize();", "+\t\t\t\tcellRect.width = cellSize.width;", "+\t\t\t\treturn cellRect;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tNSRect expansionRect;", "+\t\t\tif (hooks(SWT.MeasureItem)) {", "+\t\t\t\texpansionRect = cellRect;", "+\t\t\t\tNSSize cellSize = cell.cellSize();", "+\t\t\t\texpansionRect.width = cellSize.width;", "+\t\t\t} else {", "+\t\t\t\texpansionRect = cell.titleRectForBounds(cellRect);", "+\t\t\t\tNSSize cellSize = super.cellSize(id, OS.sel_cellSize);", "+\t\t\t\texpansionRect.width = cellSize.width;", "+\t\t\t}", "+\t\t\tNSRect contentRect = scrollView.contentView().bounds();", "+\t\t\tOS.NSIntersectionRect(contentRect, expansionRect, contentRect);", "+\t\t\tif (!OS.NSEqualRects(expansionRect, contentRect)) {", "+\t\t\t\treturn expansionRect;", "+\t\t\t}", "+\t\t}", "+\t\treturn rect;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a2750bcbb59822074faa122a80c194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c76676fff5364cedbb4c2f8c13d74d7d1d739e7f", "commitAfterChange": "0a26c43fd93ab06acd4439ddc610814541a2ea9d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   NSRect expansionFrameWithFrame_inView(int id, int sel, NSRect cellRect, int view)", "signatureAfterChange": "  NSRect expansionFrameWithFrame_inView(int id, int sel, NSRect cellRect, int view)", "diff": ["-", "-\tif (toolTipText == null) return super.expansionFrameWithFrame_inView(id, sel, cellRect, view);", "+\tif (toolTipText == null) {", "+\t\tNSRect rect = super.expansionFrameWithFrame_inView(id, sel, cellRect, view);", "+\t\tNSCell cell = new NSCell(id);", "+\t\tif (rect.width != 0 && rect.height != 0) {", "+\t\t\tif (hooks(SWT.MeasureItem)) {", "+\t\t\t\tNSSize cellSize = cell.cellSize();", "+\t\t\t\tcellRect.width = cellSize.width;", "+\t\t\t\treturn cellRect;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tNSRect expansionRect;", "+\t\t\tif (hooks(SWT.MeasureItem)) {", "+\t\t\t\texpansionRect = cellRect;", "+\t\t\t\tNSSize cellSize = cell.cellSize();", "+\t\t\t\texpansionRect.width = cellSize.width;", "+\t\t\t} else {", "+\t\t\t\texpansionRect = cell.titleRectForBounds(cellRect);", "+\t\t\t\tNSSize cellSize = super.cellSize(id, OS.sel_cellSize);", "+\t\t\t\texpansionRect.width = cellSize.width;", "+\t\t\t}", "+\t\t\tNSRect contentRect = scrollView.contentView().bounds();", "+\t\t\tOS.NSIntersectionRect(contentRect, expansionRect, contentRect);", "+\t\t\tif (!OS.NSEqualRects(expansionRect, contentRect)) {", "+\t\t\t\treturn expansionRect;", "+\t\t\t}", "+\t\t}", "+\t\treturn rect;", "+\t}"]}], "num": 19128}