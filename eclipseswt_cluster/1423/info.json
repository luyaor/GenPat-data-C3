{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fc0685adc8e5d9edb98829e9077ed86", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15cf0533458389b111b4bc47fcbde7af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "889f93f108ecb66ce26de4aca6ddff41efd04306", "commitAfterChange": "a016d09fe92fafd1dfc110f82a9b2cb8ff8c6200", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawWidget (int widget, int damage)", "signatureAfterChange": "  void drawWidget (int widget, int damage)", "diff": ["-\t\t\t/* Get the clipping tiles for children and siblings */", "-\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);", "-\t\t\tif (clip_tile == 0) return;", "-", "-\t\t\t/* Translate the clipping to the current GC coordinates */", "-\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];", "-\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);", "-\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];", "-\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);", "-\t\t\tPhPoint_t delta = new PhPoint_t ();", "-\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);", "-\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);", "-\t\t\tOS.PhTranslateTiles(clip_tile, delta);", "-", "-\t\t\t/* Set the clipping */", "-\t\t\tint[] clip_rects_count = new int [1];", "-\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);", "-\t\t\tOS.PhFreeTiles (clip_tile);\t", "-\t\t\tif (clip_rects_count [0] == 0) {", "-\t\t\t\tclip_rects_count [0] = 1;", "+\t\t\t/*", "+\t\t\t* Note that QNX 6.2.1 provides full widget hierarchy clipping in paint.", "+\t\t\t*/", "+\t\t\tif (!(OS.QNX_MAJOR > 6 || (OS.QNX_MAJOR == 6 && (OS.QNX_MINOR > 2 || (OS.QNX_MINOR == 2 && OS.QNX_MICRO >= 1))))) {", "+\t\t\t\t/* Get the clipping tiles for children and siblings */", "+\t\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);", "+\t\t\t\tif (clip_tile == 0) return;", "+\t", "+\t\t\t\t/* Translate the clipping to the current GC coordinates */", "+\t\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];", "+\t\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);", "+\t\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];", "+\t\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);", "+\t\t\t\tPhPoint_t delta = new PhPoint_t ();", "+\t\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);", "+\t\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);", "+\t\t\t\tOS.PhTranslateTiles(clip_tile, delta);", "+\t", "+\t\t\t\t/* Set the clipping */", "+\t\t\t\tint[] clip_rects_count = new int [1];", "+\t\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);", "+\t\t\t\tOS.PhFreeTiles (clip_tile);\t", "+\t\t\t\tif (clip_rects_count [0] == 0) {", "+\t\t\t\t\tclip_rects_count [0] = 1;", "+\t\t\t\t\tOS.free (clip_rects);", "+\t\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);", "+\t\t\t\t\tOS.memset(clip_rects, 0, PhRect_t.sizeof);", "+\t\t\t\t}", "+\t\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);", "-\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);", "-\t\t\t\tOS.memset(clip_rects, 0, PhRect_t.sizeof);", "-\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);", "-\t\t\tOS.free (clip_rects);", "-\t\t\t/* Reset the clipping */", "-\t\t\tOS.PgSetMultiClip (0, 0);", "+\t\t\tif (!(OS.QNX_MAJOR > 6 || (OS.QNX_MAJOR == 6 && (OS.QNX_MINOR > 2 || (OS.QNX_MINOR == 2 && OS.QNX_MICRO >= 1))))) {", "+\t\t\t\t/* Reset the clipping */", "+\t\t\t\tOS.PgSetMultiClip (0, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db76a302287861bb90a0eee39d83c29a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r int processPaint (int damage)", "signatureAfterChange": "\r \r void drawWidget (int widget, int damage)", "diff": ["+\r", "+void drawWidget (int widget, int damage) {\r", "+\tif ((state & CANVAS) != 0) {\r", "+\t\tif ((style & SWT.NO_BACKGROUND) == 0) {\r", "+\t\t\t\r", "+\t\t\t/* Get the clipping tiles for children and siblings */\r", "+\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);\r", "+\r", "+\t\t\t/* Translate the clipping to the current GC coordinates */\r", "+\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);\r", "+\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);\r", "+\t\t\tPhPoint_t delta = new PhPoint_t ();\r", "+\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);\r", "+\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);\r", "+\t\t\tOS.PhTranslateTiles(clip_tile, delta);\r", "+\r", "+\t\t\t/* Set the clipping */\r", "+\t\t\tint[] clip_rects_count = new int [1];\r", "+\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);\r", "+\t\t\tOS.PhFreeTiles (clip_tile);\t\r", "+\t\t\tif (clip_rects_count [0] == 0) {\r", "+\t\t\t\tclip_rects_count [0] = 1;\r", "+\t\t\t\tOS.free (clip_rects);\r", "+\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);\r", "+\t\t\t}\r", "+\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);\r", "+\t\t\tOS.free (clip_rects);\r", "+\t\t\t\r", "+\t\t\t/* Draw the widget */\r", "+\t\t\tsuper.drawWidget (widget, damage);\r", "+\t\t\t\r", "+\t\t\t/* Reset the clipping */\r", "+\t\t\tOS.PgSetMultiClip (0, 0);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tsuper.drawWidget (widget, damage);\r", "+\t}\r", "+}\r", "-\r", "-int processPaint (int damage) {\r", "-\tif ((state & CANVAS) != 0) {\r", "-\t\tif ((style & SWT.NO_BACKGROUND) == 0) {\r", "-\t\t\t\r", "-\t\t\t/* Get the clipping tiles for children and siblings */\r", "-\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);\r", "-\r", "-\t\t\t/* Translate the clipping to the current GC coordinates */\r", "-\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];\r", "-\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);\r", "-\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];\r", "-\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);\r", "-\t\t\tPhPoint_t delta = new PhPoint_t ();\r", "-\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);\r", "-\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);\r", "-\t\t\tOS.PhTranslateTiles(clip_tile, delta);\r", "-\r", "-\t\t\t/* Set the clipping */\r", "-\t\t\tint[] clip_rects_count = new int [1];\r", "-\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);\r", "-\t\t\tOS.PhFreeTiles (clip_tile);\t\r", "-\t\t\tif (clip_rects_count [0] == 0) {\r", "-\t\t\t\tclip_rects_count [0] = 1;\r", "-\t\t\t\tOS.free (clip_rects);\r", "-\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);\r", "-\t\t\t}\r", "-\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);\r", "-\t\t\tOS.free (clip_rects);\r", "-\t\t\t\r", "-\t\t\t/* Draw the widget */\r", "-\t\t\tOS.PtSuperClassDraw (OS.PtContainer (), handle, damage);\r", "-\t\t\t\r", "-\t\t\t/* Reset the clipping */\r", "-\t\t\tOS.PgSetMultiClip (0, 0);\r", "-\t\t}\r", "-\t}\r", "-\treturn super.processPaint (damage);\r"]}], "num": 1423}