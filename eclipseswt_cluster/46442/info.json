{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd038c0ec6096af063147668a496e6de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216574f2aaf8116558f7612ed3da2de4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8972b444653a95781e21ea8fb1f7b30c03a72ac0", "commitAfterChange": "70c04cca9f20148d6316630b21bfa099c24e7d7c", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "\r public void showItem (TableItem item)", "signatureAfterChange": "\r public void showItem (TableItem item)", "diff": ["+\t/*\r", "+\t* Bug in Windows.  For some reason, when there is insufficient space\r", "+\t* to show an item, LVM_ENSUREVISIBLE causes blank lines to be\r", "+\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "+\t* return a negative number (this is an impossible result).  The fix is to\r", "+\t* detect this case and fail to show the selection.\r", "+\t*/\r", "+\tif (OS.SendMessage (handle, OS.LVM_GETCOUNTPERPAGE, 0, 0) <= 0)  return;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1359c72a7fc57be8de25231cffa95b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8972b444653a95781e21ea8fb1f7b30c03a72ac0", "commitAfterChange": "70c04cca9f20148d6316630b21bfa099c24e7d7c", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "\r public void showSelection ()", "signatureAfterChange": "\r public void showSelection ()", "diff": ["+\t/*\r", "+\t* Bug in Windows.  For some reason, when there is insufficient space\r", "+\t* to show an item, LVM_ENSUREVISIBLE causes blank lines to be\r", "+\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "+\t* return a negative number (this is an impossible result).  The fix is to\r", "+\t* detect this case and fail to show the selection.\r", "+\t*/\r", "+\tif (OS.SendMessage (handle, OS.LVM_GETCOUNTPERPAGE, 0, 0) <= 0)  return;\r"]}], "num": 46442}