{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6931d8a96f2d27d1f0b299a0bb387a8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "271b2056e31b2ca48398e6e56a0256de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When an index is out of range,", "-\t* the list widget adds the item at the end.  This", "-\t* behavior is not wrong but it is unwanted.  The", "-\t* fix is to check the range before adding the item.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t*/", "-\t/* AW", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\tif (xmString == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "-\tOS.XmListAddItemUnselected (handle, xmString, index + 1);", "-\tOS.XmStringFree (xmString);", "-    */", "-\tOS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, 1, new int[] { p.fId }, 0);", "+\tif (OS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, 1, new int[] { p.fId }, 0) != OS.kNoErr)", "+\t\terror (SWT.ERROR_ITEM_NOT_ADDED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c855e98cae74a34d612a227104d6e659", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void setItems (String [] items)", "signatureAfterChange": " public void setItems (String [] items)", "diff": ["-\t/*", "-\t* Bug in AIX.  When all list items are replaced", "-\t* in a scrolled list that is currently showing a", "-\t* horizontal scroll bar, the horizontal scroll bar", "-\t* is hidden, but the list does not grow to take up", "-\t* the space once occupied by the bar.  The fix is", "-\t* of force the horizontal bar to be recomputed by", "-\t* removing all items and resizing the list.", "-\t*/", "-    /* AW", "-\tOS.XmListSetPos (handle, 0);", "-\tOS.XmListDeselectAllItems (handle);", "-\tif ((style & SWT.H_SCROLL) != 0) {", "-\t\tOS.XmListDeleteAllItems (handle);", "-\t}", "-\tint index = 0;", "-\tint [] table = new int [items.length];", "-\tString codePage = getCodePage ();", "-\twhile (index < items.length) {", "-\t\tString string = items [index];", "-\t\tif (string == null) break;", "-\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);", "-\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\tif (xmString == 0) break;", "-\t\ttable [index++] = xmString;", "-\t}", "-\tint ptr = OS.XtMalloc (index * 4);", "-\tOS.memmove (ptr, table, index * 4);", "-\tint [] argList = {OS.XmNitems, ptr, OS.XmNitemCount, index};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tfor (int i=0; i<index; i++) OS.XmStringFree (table [i]);", "-\tOS.XtFree (ptr);", "-    */", "-\t/*", "-\t* Bug in Motif.  Resize the list to work around", "-\t* the horizontal scroll bar display bug described", "-\t* above.", "-\t*/", "-    /* AW", "-\tif ((style & SWT.H_SCROLL) != 0) {", "-\t\tOS.XtResizeWindow (handle);", "-\t}", "-\tif (index < items.length) error (SWT.ERROR_ITEM_NOT_ADDED);", "-    */", "-    /* AW", "-\tint oldSize= fData.size();", "-\t*/", "+", "-\tOS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, ids.length, ids, 0);", "+\tif (OS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, ids.length, ids, 0) != OS.kNoErr)", "+\t\terror (SWT.ERROR_ITEM_NOT_ADDED);"]}], "num": 33994}