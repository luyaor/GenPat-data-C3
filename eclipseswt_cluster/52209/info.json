{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0cc3c5e9691e9648194003bf2e1695b9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30694a79735f8ad79f2afee5c1e41c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "9f963bfbea4d5fb9e9cfb300aed51e5121e608b5", "commitAfterChange": "1b2bdab895e00806660fea2a313de0c468fe9d84", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " void drawExpand(GC gc)", "signatureAfterChange": " void drawExpand(GC gc)", "diff": ["-\tint[] shape = null;", "-\tif (onBottom) {", "-\t\tshape = new int[BOTTOM_LEFT_CORNER.length+BOTTOM_RIGHT_CORNER.length+4];", "-\t\tint index = 0;", "-\t\tshape[index++] = x;", "-\t\tshape[index++] = y;", "-\t\tfor (int i = 0; i < BOTTOM_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+BOTTOM_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_LEFT_CORNER[2*i+1];", "-\t\t}", "-\t\tfor (int i = 0; i < BOTTOM_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width-2+BOTTOM_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_CORNER[2*i+1];", "-\t\t}", "-\t\tshape[index++] = x+width-2;", "-\t\tshape[index++] = y;", "-\t} else {", "-\t\tshape = new int[TOP_LEFT_CORNER.length+TOP_RIGHT_CORNER.length+4];", "-\t\tint index = 0;", "-\t\tshape[index++] = x;", "-\t\tshape[index++] = y+height;", "-\t\tfor (int i = 0; i < TOP_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+TOP_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_LEFT_CORNER[2*i+1];", "-\t\t}", "-\t\tfor (int i = 0; i < TOP_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width-2+TOP_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_RIGHT_CORNER[2*i+1];", "-\t\t}", "-\t\tshape[index++] = x+width-2;", "-\t\tshape[index++] = y+height;", "-\t}", "-\t// Shape is non-rectangular, fill in gaps with parent colours\t", "-\tRegion r = new Region();", "-\tr.add(expandRect);", "-\tr.subtract(shape);", "+//\tint[] shape = null;", "+//\tif (onBottom) {", "+//\t\tshape = new int[BOTTOM_LEFT_CORNER.length+BOTTOM_RIGHT_CORNER.length+4];", "+//\t\tint index = 0;", "+//\t\tshape[index++] = x;", "+//\t\tshape[index++] = y;", "+//\t\tfor (int i = 0; i < BOTTOM_LEFT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+BOTTOM_LEFT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+height+BOTTOM_LEFT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tfor (int i = 0; i < BOTTOM_RIGHT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+width-2+BOTTOM_RIGHT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tshape[index++] = x+width-2;", "+//\t\tshape[index++] = y;", "+//\t} else {", "+//\t\tshape = new int[TOP_LEFT_CORNER.length+TOP_RIGHT_CORNER.length+4];", "+//\t\tint index = 0;", "+//\t\tshape[index++] = x;", "+//\t\tshape[index++] = y+height;", "+//\t\tfor (int i = 0; i < TOP_LEFT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+TOP_LEFT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+TOP_LEFT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tfor (int i = 0; i < TOP_RIGHT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+width-2+TOP_RIGHT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+TOP_RIGHT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tshape[index++] = x+width-2;", "+//\t\tshape[index++] = y+height;", "+//\t}", "+//\t// Shape is non-rectangular, fill in gaps with parent colours\t", "+//\tRegion r = new Region();", "+//\tr.add(expandRect);", "+//\tr.subtract(shape);", "+//\tgc.setBackground(getParent().getBackground());", "+//\tfillRegion(gc, r);", "+//\tr.dispose();", "+//\t// draw shape", "+//\tgc.setBackground(getBackground());", "+//\tgc.fillPolygon(shape);", "+\t", "-\tfillRegion(gc, r);", "-\tr.dispose();", "-\t// draw shape", "-\tgc.setBackground(getBackground());", "-\tgc.fillPolygon(shape);", "+\tgc.fillRectangle(expandRect);", "-\tgc.setBackground(getForeground());", "+\t//gc.setBackground(getForeground());", "+\tgc.setBackground(selectionForeground);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339c85446ff4d24ac6d344f21c2f3266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5ce55e0b266c6dfa30b6d24a0d38a175d0443651", "commitAfterChange": "a4dcc8f822e014b7bd06aaea12e9214493dea500", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["+\t\t\tint[] shapeLeft = null;", "+\t\t\tint[] shapeRight = null;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint x = 0;", "+\t\t\t\tint y = size.y-borderBottom-tabHeight+SELECTION_BORDER;", "+\t\t\t\tint width = item.x;", "+\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tif (borderRight > 0) height -= 1; // fill in behind border", "+\t\t\t\tshapeLeft = new int[BOTTOM_LEFT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshapeLeft[index++] = x;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\tfor (int i = 0; i < BOTTOM_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeLeft[index++] = x+BOTTOM_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeLeft[index++] = y+height+BOTTOM_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y + height;", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\t", "+\t\t\t\tx = item.x + item.width;", "+\t\t\t\twidth = size.x - borderRight - x;", "+\t\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\t\tshapeRight = new int[BOTTOM_RIGHT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tindex = 0;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t\tfor (int i = 0; i < BOTTOM_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeRight[index++] = x+width+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeRight[index++] = y+height+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeRight[index++] = x+width;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t} else { // tabs on top", "+\t\t\t\tint x = 0;", "+\t\t\t\tint y = borderTop;", "+\t\t\t\tint width = item.x;", "+\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tshapeLeft = new int[TOP_LEFT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshapeLeft[index++] = x;", "+\t\t\t\tshapeLeft[index++] = y+height;", "+\t\t\t\tfor (int i = 0; i < TOP_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeLeft[index++] = x+TOP_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeLeft[index++] = y+TOP_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y+height;", "+\t\t\t\t", "+\t\t\t\tx = item.x + item.width;", "+\t\t\t\twidth = size.x - borderRight - x;", "+\t\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\t\tshapeRight = new int[TOP_RIGHT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tindex = 0;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t\tfor (int i = 0; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeRight[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeRight[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeRight[index++] = x+width;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t}", "+\t\t\t// Shape is non-rectangular, fill in gaps with parent colours\t", "+\t\t\tRegion r = new Region();", "-\t\t\tgc.setBackground(background);", "-\t\t\tgc.fillRectangle(x, y, width, height);", "+\t\t\tr.add(new Rectangle(x, y, width, height));", "+\t\t\tr.subtract(shapeLeft);", "+\t\t\tgc.setBackground(getParent().getBackground());", "+\t\t\tfillRegion(gc, r);", "+\t\t\tr.subtract(r); // clear region", "-\t\t\tgc.fillRectangle(x, y, width, height);", "+\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\tr.add(new Rectangle(x, y, width, height));", "+\t\t\tr.subtract(shapeRight);", "+\t\t\tgc.setBackground(getParent().getBackground());", "+\t\t\tfillRegion(gc, r);", "+\t\t\tr.dispose();", "+\t\t\tgc.setBackground(background);", "+\t\t\tgc.fillPolygon(shapeLeft);", "+\t\t\tgc.fillPolygon(shapeRight);"]}], "num": 52209}