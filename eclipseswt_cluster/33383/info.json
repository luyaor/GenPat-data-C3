{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f23c647a153622a9bce658ea8c4c3be9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8be09ab4880d0f81ef0bc88668960de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "715684b0a92a911d4d070764cad0605267ec3f23", "commitAfterChange": "27a67e74de5fb9dda84ace3c8813e45ba4694fe3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "\r \r boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-void setBounds (int x, int y, int width, int height, boolean move, boolean resize) {\r", "+boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize) {\r", "-\tsuper.setBounds (x, y, width, height, move, resize);\r", "+\tboolean changed = super.setBounds (x, y, width, height, move, resize);\r", "+\treturn changed;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c8b5cbc6945634026255200cae281ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "837759a66222e92f6b3f2741fb466d1b2ff99187", "commitAfterChange": "68f73a31d3bd23bb9be3de8de4cfa69258483b46", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void updateFont (Font oldFont, Font newFont)", "signatureAfterChange": "  boolean updateFont (Font oldFont, Font newFont)", "diff": ["-void updateFont (Font oldFont, Font newFont) {", "+boolean updateFont (Font oldFont, Font newFont) {", "-\tsuper.updateFont (oldFont, newFont);", "-\t/*", "-\t* Call layout() directly so that subclasses that reimplement", "-\t* this method instead of using a Layout will set the size and", "-\t* location of their children when the font changes.", "-\t*/", "-\tlayout (true);", "+\tboolean changed = super.updateFont (oldFont, newFont);", "+\tif (changed) {", "+\t\t/*", "+\t\t* Call layout() directly so that subclasses that reimplement", "+\t\t* this method instead of using a Layout will set the size and", "+\t\t* location of their children when the font changes.", "+\t\t*/", "+\t\tlayout (true);", "+\t}", "+\treturn changed;"]}], "num": 33383}