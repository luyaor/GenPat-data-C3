{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02411f0bcbd41ef42c925beeefa41cbe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30cadfa522bee543eb388df6d0a3761", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6bf174092d88d6ca6b0a2492d7221ddcd462d20e", "commitAfterChange": "b4926c8034e240482671225a41d12582ff222311", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "  void onDispose (Display display)", "signatureAfterChange": "  void onDispose (Display display)", "diff": ["+\t/* invoke onbeforeunload handlers */", "+\tif (!browser.isClosing && !browser.isDisposed()) {", "+\t\tLocationListener[] oldLocationListeners = locationListeners;", "+\t\tlocationListeners = new LocationListener[0];", "+\t\tignoreAllMessages = true;", "+\t\texecute (\"window.location.replace('about:blank');\"); //$NON-NLS-1$", "+\t\tignoreAllMessages = false;", "+\t\tlocationListeners = oldLocationListeners;\t", "+\t}", "+", "-\tif (listener != null) {", "-\t\tint[] folderEvents = new int[] {", "-\t\t\tSWT.Dispose,", "-\t\t\tSWT.Resize,  ", "-\t\t\tSWT.FocusIn,", "-\t\t\tSWT.Activate,", "-\t\t\tSWT.Deactivate,", "-\t\t\tSWT.Show,", "-\t\t\tSWT.KeyDown,", "-\t\t};", "-\t\tfor (int i = 0; i < folderEvents.length; i++) {", "-\t\t\tbrowser.removeListener (folderEvents[i], listener);", "-\t\t}", "-\t\tlistener = null;", "-\t}", "+\tlistener = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60838dc1be39d73bcb5a00746398ea0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "31cd6ab709bd12e0a040b5f3cf2da696eefbaf45", "commitAfterChange": "828ba16598ffe05117d7e7850c0ff70351e02de8", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tvoid handlePaintObject(PaintObjectEvent event)", "signatureAfterChange": "  \tvoid handlePaintObject(PaintObjectEvent event)", "diff": ["-\t\tint start = style.start;", "-\t\t\tfor (int i = 0; i < imageOffsets.length; i++) {", "-\t\t\t\tint offset = imageOffsets[i];", "-\t\t\t\tif (start == offset) {", "-\t\t\t\t\tImage image = images[i];", "-\t\t\t\t\tint x = event.x;", "-\t\t\t\t\tint y = event.y + event.ascent - style.metrics.ascent;", "-\t\t\t\t\tgc.drawImage(image, x, y);", "-\t\t\t\t}", "+\t\t\tObject data = style.data;", "+\t\t\tif (data instanceof Image) {", "+\t\t\t\tImage image = (Image)data;", "+\t\t\t\tint x = event.x;", "+\t\t\t\tint y = event.y + event.ascent - style.metrics.ascent;", "+\t\t\t\tgc.drawImage(image, x, y);", "-\t\t\tfor (int i = 0; i < controlOffsets.length; i++) {", "-\t\t\t\tint offset = controlOffsets[i];", "-\t\t\t\tif (start == offset) {", "-\t\t\t\t\tPoint pt = controls[i].getSize();", "-\t\t\t\t\tint x = event.x + MARGIN;", "-\t\t\t\t\tint y = event.y + event.ascent - 2 * pt.y / 3;", "-\t\t\t\t\tcontrols[i].setLocation(x, y);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\t\t\tif (data instanceof Control) {", "+\t\t\t\tControl control = (Control)data;", "+\t\t\t\tPoint pt = control.getSize();", "+\t\t\t\tint x = event.x + MARGIN;", "+\t\t\t\tint y = event.y + event.ascent - 2 * pt.y / 3;", "+\t\t\t\tcontrol.setLocation(x, y);"]}], "num": 7179}