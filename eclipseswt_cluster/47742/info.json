{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "372be1d8f1639cf62c3f0f507a3ef26e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6696d295ec9dba9230b4ad11406077c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-", "-LRESULT WM_KEYDOWN (int wParam, int lParam) {", "-\tLRESULT result = super.WM_KEYDOWN (wParam, lParam);", "-\tif (result != null) return result;", "-\tswitch (wParam) {", "-\t\tcase OS.VK_SPACE: {", "-\t\t\t\treturn LRESULT.ZERO;", "-\t\t\tbreak;", "+", "+LRESULT WM_KEYDOWN (int wParam, int lParam) {", "+\tLRESULT result = super.WM_KEYDOWN (wParam, lParam);", "+\tif (result != null) return result;", "+\tswitch (wParam) {", "+\t\tcase OS.VK_SPACE:", "+\t\t\t/*", "+\t\t\t* Ensure that the window proc does not process VK_SPACE", "+\t\t\t* so that it can be handled in WM_CHAR.  This allows the", "+\t\t\t* application to cancel an operation that is normally", "+\t\t\t* performed in WM_KEYDOWN from WM_CHAR.", "+\t\t\t*/", "+\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1dd918d0b9d43de3ae98b94e319aadb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " int processMouseUp (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseUp (int callData, int arg1, int int2)", "diff": ["+", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "-\tif (gdkEvent.button != 1) return 0;", "+/*\tint button = OS.gdk_event_button_get_button(callData);", "+\tif (button != 1) return 0;", "-\tlast_root_x=(int)gdkEvent.x_root; last_root_y=(int)gdkEvent.y_root;", "+\tdouble[] px = new double[1];", "+\tdouble[] py = new double[1];", "+\tOS.gdk_event_get_coords(callData, px, py);", "+\tlast_root_x=(int)(px[0]); last_root_y=(int)(py[0]);", "-\tevent.time = gdkEvent.time;", "+\tevent.time = OS.gdk_event_get_time(callData);", "-\tsendEvent (SWT.Selection, event);", "+\tsendEvent (SWT.Selection, event);*/"]}], "num": 47742}