{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7bfdd6ba21a81d8cf13057aa33244cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665b924a03bd927eb1b8190d253523c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "2804af6b30e3fa1385bd4b6a5aaf57ea8ba0df96", "commitAfterChange": "bde4b0504ae7f81c39b8ba97dbf39292617e06b5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void removeProgressListener(ProgressListener listener)", "signatureAfterChange": " public void removeProgressListener(ProgressListener listener)", "diff": ["-\tbrowserSite.removeProgressListener(listener);", "+\tif (progressListeners.length == 0) return;", "+\tint index = -1;", "+\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\tif (listener == progressListeners[i]){", "+\t\t\tindex = i;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (index == -1) return;", "+\tif (progressListeners.length == 1) {", "+\t\tprogressListeners = new ProgressListener[0];", "+\t\treturn;", "+\t}", "+\tProgressListener[] newProgressListeners = new ProgressListener[progressListeners.length - 1];", "+\tSystem.arraycopy(progressListeners, 0, newProgressListeners, 0, index);", "+\tSystem.arraycopy(progressListeners, index + 1, newProgressListeners, index, progressListeners.length - index - 1);", "+\tprogressListeners = newProgressListeners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec298e28e8218bb6790ad1b5574b405", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 92, "signatureBeforeChange": " void removeColumnData(TableColumn column)", "signatureAfterChange": " void selectItem (TableItem item, boolean addToSelection)", "diff": ["- */", "-void removeColumnData(TableColumn column) {", "-\tEnumeration tableItems = getItemVector().elements();", "-\tTableItem tableItem;", "-", "-\twhile (tableItems.hasMoreElements() == true ) {", "-\t\ttableItem = (TableItem) tableItems.nextElement();", "-\t\ttableItem.removeColumn(column);", "-\t}", "-}", "+void selectItem (TableItem item, boolean addToSelection) {", "+\tTableItem[] oldSelectedItems = selectedItems;", "+\tif (!addToSelection || (style & SWT.SINGLE) != 0) {", "+\t\tselectedItems = new TableItem[] {item};", "+\t\tif (hasFocus () || (style & SWT.HIDE_SELECTION) == 0) {", "+\t\t\tfor (int i = 0; i < oldSelectedItems.length; i++) {", "+\t\t\t\tif (oldSelectedItems [i] != item) {", "+\t\t\t\t\tredrawItem (oldSelectedItems [i].index, true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tif (item.isSelected ()) return;", "+\t\tselectedItems = new TableItem [selectedItems.length + 1];", "+\t\tSystem.arraycopy (oldSelectedItems, 0, selectedItems, 0, oldSelectedItems.length);", "+\t\tselectedItems [selectedItems.length - 1] = item;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678180527451ea44ddc7ea387dc6c5d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "2804af6b30e3fa1385bd4b6a5aaf57ea8ba0df96", "commitAfterChange": "bde4b0504ae7f81c39b8ba97dbf39292617e06b5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void removeLocationListener(LocationListener listener)", "signatureAfterChange": " public void removeLocationListener(LocationListener listener)", "diff": ["-\tbrowserSite.removeLocationListener(listener);", "+\tif (locationListeners.length == 0) return;", "+\tint index = -1;", "+\tfor (int i = 0; i < locationListeners.length; i++) {", "+\t\tif (listener == locationListeners[i]){", "+\t\t\tindex = i;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (index == -1) return;", "+\tif (locationListeners.length == 1) {", "+\t\tlocationListeners = new LocationListener[0];", "+\t\treturn;", "+\t}", "+\tLocationListener[] newLocationListeners = new LocationListener[locationListeners.length - 1];", "+\tSystem.arraycopy(locationListeners, 0, newLocationListeners, 0, index);", "+\tSystem.arraycopy(locationListeners, index + 1, newLocationListeners, index, locationListeners.length - index - 1);", "+\tlocationListeners = newLocationListeners;"]}], "num": 34207}