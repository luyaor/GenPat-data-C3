{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4f83de85c868576685df7a8db03e583", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bbd53283b421022cae0a6db5c24be81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "21c8d5f83e6c06364f86afffd0c7ead357d5a5dd", "commitAfterChange": "ea2ccf983a5ced4ad5d39e8c5088af77d10cf792", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void setTransfer(Transfer[] transferAgents)", "signatureAfterChange": " public void setTransfer(Transfer[] transferAgents)", "diff": ["- */\r", "+ */", "-\t\t\t\r", "+\t\r", "+\tif (!control.isVisible()) return;\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05547d6090c36b48d9171dcffcc02da3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "ff9c15961deba7f09d9b58b96d5ee00c19a9ff6f", "commitAfterChange": "d2bbe0af593cdec5f8615e936375cdcda0ff106f", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  void updateBkImages()", "signatureAfterChange": "  void updateBkImages()", "diff": ["-\t\t\tif (hovering) {", "-\t\t\t\tif (control instanceof Composite) ((Composite) control).setBackgroundMode(SWT.INHERIT_NONE);", "-\t\t\t\tcontrol.setBackgroundImage(null);", "-\t\t\t\tcontrol.setBackground(getBackground());", "-\t\t\t} else {", "-\t\t\t\tif (control instanceof Composite) ((Composite) control).setBackgroundMode(SWT.INHERIT_DEFAULT);", "-\t\t\t\tRectangle bounds = control.getBounds();", "-\t\t\t\tif (bounds.y > getTabHeight() || gradientColors == null) {", "+\t\t\tif (!control.isDisposed()) {", "+\t\t\t\tif (hovering) {", "+\t\t\t\t\tif (control instanceof Composite) ((Composite) control).setBackgroundMode(SWT.INHERIT_NONE);", "-\t\t\t\t\tbounds.width = 10;", "-\t\t\t\t\tbounds.y = -bounds.y;", "-\t\t\t\t\tbounds.height -= 2*bounds.y - 1;", "-\t\t\t\t\tbounds.x = 0;", "-\t\t\t\t\tif (controlBkImages[i] != null) controlBkImages[i].dispose();", "-\t\t\t\t\tcontrolBkImages[i] = new Image(control.getDisplay(), bounds);", "-\t\t\t\t\tGC gc = new GC(controlBkImages[i]);", "-\t\t\t\t\trenderer.drawBackground(gc, bounds, 0);", "-\t\t\t\t\tgc.dispose();", "-\t\t\t\t\tcontrol.setBackground(null);", "-\t\t\t\t\tcontrol.setBackgroundImage(controlBkImages[i]);", "+\t\t\t\t\tif (control instanceof Composite) ((Composite) control).setBackgroundMode(SWT.INHERIT_DEFAULT);", "+\t\t\t\t\tRectangle bounds = control.getBounds();", "+\t\t\t\t\tif (bounds.y > getTabHeight() || gradientColors == null) {", "+\t\t\t\t\t\tcontrol.setBackgroundImage(null);", "+\t\t\t\t\t\tcontrol.setBackground(getBackground());", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbounds.width = 10;", "+\t\t\t\t\t\tbounds.y = -bounds.y;", "+\t\t\t\t\t\tbounds.height -= 2*bounds.y - 1;", "+\t\t\t\t\t\tbounds.x = 0;", "+\t\t\t\t\t\tif (controlBkImages[i] != null) controlBkImages[i].dispose();", "+\t\t\t\t\t\tcontrolBkImages[i] = new Image(control.getDisplay(), bounds);", "+\t\t\t\t\t\tGC gc = new GC(controlBkImages[i]);", "+\t\t\t\t\t\trenderer.drawBackground(gc, bounds, 0);", "+\t\t\t\t\t\tgc.dispose();", "+\t\t\t\t\t\tcontrol.setBackground(null);", "+\t\t\t\t\t\tcontrol.setBackgroundImage(controlBkImages[i]);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fff3d303e31df0061f6ea74e88dc4e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "d55854d1335ed9ed50b1cd188c785a2619d326fc", "commitAfterChange": "2c1e3b3d7e8ee238ed9a1b0193fa5c0af85695fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static void loadAdditionalLibraries (String mozillaPath)", "signatureAfterChange": "  static void loadAdditionalLibraries (String mozillaPath)", "diff": ["-\tjava.io.InputStream is = Library.class.getResourceAsStream ('/' + libName);", "-\tif (is != null) {", "-\t\tif (!libsDir.exists ()) {", "-\t\t\tlibsDir.mkdirs ();", "-\t\t}", "-\t\tint read;", "-\t\tbyte [] buffer = new byte [4096];", "-\t\ttry {", "-\t\t\tFileOutputStream os = new FileOutputStream (file);", "-\t\t\twhile ((read = is.read (buffer)) != -1) {", "-\t\t\t\tos.write(buffer, 0, read);", "+\tif (!file.exists()) {", "+\t\tjava.io.InputStream is = Library.class.getResourceAsStream ('/' + libName);", "+\t\tif (is != null) {", "+\t\t\tif (!libsDir.exists ()) {", "+\t\t\t\tlibsDir.mkdirs ();", "-\t\t\tos.close ();", "-\t\t\tis.close ();", "-\t\t} catch (FileNotFoundException e) {", "-\t\t} catch (IOException e) {", "+\t\t\tint read;", "+\t\t\tbyte [] buffer = new byte [4096];", "+\t\t\ttry {", "+\t\t\t\tFileOutputStream os = new FileOutputStream (file);", "+\t\t\t\twhile ((read = is.read (buffer)) != -1) {", "+\t\t\t\t\tos.write(buffer, 0, read);", "+\t\t\t\t}", "+\t\t\t\tos.close ();", "+\t\t\t\tis.close ();", "+\t\t\t} catch (FileNotFoundException e) {", "+\t\t\t} catch (IOException e) {", "+\t\t\t}", "-"]}], "num": 1927}