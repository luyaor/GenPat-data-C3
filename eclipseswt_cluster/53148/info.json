{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35ed5147fb154229e32d3ea3fe50e859", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5796f3c8aae3de57227eb9c92cbf2097", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "145fdebb45aad978ce9a722d4be1d0c5932642e0", "commitAfterChange": "3e1b012af2b4ba818ce575f06ca138619a0a2859", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " void listEvent (Event event)", "signatureAfterChange": " void listEvent (Event event)", "diff": ["+\t\tcase SWT.FocusOut: {", "+\t\t\t/*", "+\t\t\t * Behavior in Windows, GTK & Cocoa: When the arrow button is pressed", "+\t\t\t * with the popup list visible, the following events are received-", "+\t\t\t * popup control receives a deactivate event, ", "+\t\t\t * list receives focus lost event, and then", "+\t\t\t * arrow button receives a selection event. ", "+\t\t\t * If we hide the popup in the focus out event, the selection event will", "+\t\t\t * show it again. To prevent the popup from showing again, we will detect", "+\t\t\t * this case and let the selection event of the arrow button hide the popup.", "+\t\t\t */", "+\t\t\tif (!\"carbon\".equals(SWT.getPlatform())) {", "+\t\t\t\tPoint point = arrow.toControl(getDisplay().getCursorLocation());", "+\t\t\t\tPoint size = arrow.getSize();", "+\t\t\t\tRectangle rect = new Rectangle(0, 0, size.x, size.y);", "+\t\t\t\tif (rect.contains(point)) {", "+\t\t\t\t\tboolean comboShellActivated = getDisplay ().getActiveShell () == getShell ();", "+\t\t\t\t\tif (!comboShellActivated) dropDown (false);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tdropDown (false);", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52234b004f1e7385838ffa7bf3ce768d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "0576217623f32a21d5ea94e276c03ad06a1e5baa", "commitAfterChange": "c36fcc9b8912574d6f7865b3c1f3792607851846", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " void listEvent (Event event)", "signatureAfterChange": " void listEvent (Event event)", "diff": ["-\t\t\tif (!\"carbon\".equals(SWT.getPlatform())) {", "-\t\t\t\tPoint point = arrow.toControl(getDisplay().getCursorLocation());", "-\t\t\t\tPoint size = arrow.getSize();", "-\t\t\t\tRectangle rect = new Rectangle(0, 0, size.x, size.y);", "-\t\t\t\tif (rect.contains(point)) {", "-\t\t\t\t\tboolean comboShellActivated = getDisplay ().getActiveShell () == getShell ();", "-\t\t\t\t\tif (!comboShellActivated) dropDown (false);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\t\t\tPoint point = arrow.toControl(getDisplay().getCursorLocation());", "+\t\t\tPoint size = arrow.getSize();", "+\t\t\tRectangle rect = new Rectangle(0, 0, size.x, size.y);", "+\t\t\tif (rect.contains(point)) {", "+\t\t\t\tboolean comboShellActivated = getDisplay ().getActiveShell () == getShell ();", "+\t\t\t\tif (!comboShellActivated) dropDown (false);", "+\t\t\t\tbreak;"]}], "num": 53148}