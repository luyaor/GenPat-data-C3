{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01171fea5825d22221e2d77f2efdfcf5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48bdbc3cc5ee609825891d930b05be10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/win32/org/eclipse/swt/internal/ole/win32/ITypeInfo.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int GetIDsOfNames(String[] rgszNames, int cNames, int[] pMemId)", "signatureAfterChange": " public int GetIDsOfNames(String[] rgszNames, int cNames, int[] pMemId)", "diff": ["-\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\tint /*long*/ ppNames = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size * OS.PTR_SIZEOF);", "-\tint /*long*/[] memTracker = new int /*long*/[size];", "+\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\tlong /*int*/ ppNames = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size * OS.PTR_SIZEOF);", "+\tlong /*int*/[] memTracker = new long /*int*/[size];", "-\t\t\tint /*long*/ pName = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length * 2);", "+\t\t\tlong /*int*/ pName = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length * 2);", "-\t\t\tCOM.MoveMemory(ppNames + OS.PTR_SIZEOF * i, new int /*long*/[]{pName}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppNames + OS.PTR_SIZEOF * i, new long /*int*/[]{pName}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84739c68d769208bb88f6c37c82f4a58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/win32/org/eclipse/swt/internal/ole/win32/IDispatch.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public int GetIDsOfNames(GUID riid, String[] rgszNames, int cNames, int lcid, int[] rgDispId)", "signatureAfterChange": " public int GetIDsOfNames(GUID riid, String[] rgszNames, int cNames, int lcid, int[] rgDispId)", "diff": ["-\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\tint /*long*/ ppNames = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size * OS.PTR_SIZEOF);", "-\tint /*long*/[] memTracker = new int /*long*/[size];", "+\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\tlong /*int*/ ppNames = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size * OS.PTR_SIZEOF);", "+\tlong /*int*/[] memTracker = new long /*int*/[size];", "-\t\t\tint /*long*/ pName = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length * 2);", "+\t\t\tlong /*int*/ pName = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length * 2);", "-\t\t\tCOM.MoveMemory(ppNames + OS.PTR_SIZEOF * i, new int /*long*/[]{pName}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppNames + OS.PTR_SIZEOF * i, new long /*int*/[]{pName}, OS.PTR_SIZEOF);"]}], "num": 56660}