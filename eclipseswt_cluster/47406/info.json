{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f7b1d22a0eaf27b30b84f1cf55f2e22", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc134555201ba857d9af3df97292eb0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 71, "signatureBeforeChange": "  public void setText(String newText)", "signatureAfterChange": " public void setText (int columnIndex, String value)", "diff": ["-", "-public void setText(String newText) {", "-\tcheckWidget();", "-\tTree parent = getParent();\t", "-\tString oldText = getText();", "-\tint redrawX = 0;", "-\tint redrawWidth = 0;", "-", "-\tif (newText == null) {", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);", "-\t}", "-\tsuper.setText(newText);\t", "-\tif (newText.equals(oldText) == false) {", "-\t\tif (parent.getVisibleRedrawY(this) != -1) {", "-\t\t\tredrawX = getTextXPos();", "-\t\t\tredrawWidth = parent.getClientArea().width - redrawX;", "-\t\t}", "-\t\tparent.itemChanged(this, redrawX, redrawWidth);", "-\t}", "-}", "+}", "+public void setText (int columnIndex, String value) {", "+\tcheckWidget ();", "+\tif (value == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint validColumnCount = Math.max (1, parent.getColumnCount());", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (columnIndex == 0) super.setText (value);\t// TODO can remove this", "+\tif (texts.length < columnIndex + 1) {", "+\t\tString[] newTexts = new String[columnIndex + 1];", "+\t\tSystem.arraycopy (texts, 0, newTexts, 0, texts.length);", "+\t\ttexts = newTexts;", "+\t\tint[] newTextWidths = new int[columnIndex + 1];", "+\t\tSystem.arraycopy (textWidths, 0, newTextWidths, 0, textWidths.length);", "+\t\ttextWidths = newTextWidths;", "+\t} else {", "+\t\tif (value.equals (internalGetText (columnIndex))) return;\t/* same value */", "+\t}", "+\ttexts[columnIndex] = value;", "+\tGC gc = new GC (parent);", "+\ttextWidths[columnIndex] = gc.textExtent (value).x;", "+\tgc.dispose ();", "+\tredrawItem ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b3917222d54c8301880c41e226e8aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setBackground (int columnIndex, Color value)", "signatureAfterChange": " int getGlobalIndex()", "diff": ["+int getGlobalIndex() {", "+\tint globalItemIndex = getIndex();", "+\tAbstractTreeItem item = null;", "+\tif (isRoot() == false) {", "+\t\titem = getParentItem();", "+\t\tglobalItemIndex++;\t\t\t\t\t\t// adjust for 0-based non-root items", "+\telse {\t", "+\t\titem = getParent().getRoot();", "+\t}", "+", "+\tglobalItemIndex += item.getVisibleIndex(getIndex());", "+\treturn globalItemIndex;", "+}", "-}", "-public void setBackground (int columnIndex, Color value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tint validColumnCount = Math.max (1, parent.getColumnCount());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "-\tif (cellBackground == null) {", "-\t\tcellBackground = new Color [validColumnCount];", "-\t}", "-\tif (cellBackground [columnIndex] == value) return;", "-\tif (cellBackground [columnIndex] != null && cellBackground [columnIndex].equals (value)) return;", "-\tcellBackground [columnIndex] = value;", "-\tredrawItem ();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac900d12357d2f1ec92a1f5dfe347a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void setForeground (int columnIndex, Color value)", "signatureAfterChange": "  public void setText(String newText)", "diff": ["+", "+public void setText(String newText) {", "+\tcheckWidget();", "+\tTree2 parent = getParent();\t", "+\tString oldText = getText();", "+\tint redrawX = 0;", "+\tint redrawWidth = 0;", "+", "+\tif (newText == null) {", "+\t\terror(SWT.ERROR_NULL_ARGUMENT);", "+\t}", "+\tsuper.setText(newText);\t", "+\tif (newText.equals(oldText) == false) {", "+\t\tif (parent.getVisibleRedrawY(this) != -1) {", "+\t\t\tredrawX = getTextXPos();", "+\t\t\tredrawWidth = parent.getClientArea().width - redrawX;", "+\t\t}", "+\t\tparent.itemChanged(this, redrawX, redrawWidth);", "+\t}", "+}", "-}", "-public void setForeground (int columnIndex, Color value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tint validColumnCount = Math.max(1, parent.getColumnCount ());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "-\tif (cellForeground == null) {", "-\t\tcellForeground = new Color [validColumnCount];", "-\t}", "-\tif (cellForeground [columnIndex] == value) return;", "-\tif (cellForeground [columnIndex] != null && cellForeground [columnIndex].equals (value)) return;", "-\tcellForeground [columnIndex] = value;", "-\tredrawItem ();", "-}"]}], "num": 47406}