{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd10d8f1e83341a695a014b3f233a696", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a00c9235919e0e39a7ddcd36e0eb2d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "334dd3b1940a2d75dbdd2f6bffa755e1429f66d2", "commitAfterChange": "fa7eee3a1d10b376837126ea0a7c765da37c3240", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  int windowDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  int windowDelegateProc(int id, int sel, int arg0)", "diff": ["-\t\twidget.keyDown(arg0);", "+\t\twidget.keyDown(id, arg0);", "-\t\twidget.keyUp(arg0);", "+\t\twidget.keyUp(id, arg0);", "-\t} else if (sel == OS.sel_outlineViewItemDidCollapse_1) {", "-\t\twidget.outlineViewItemDidCollapse(arg0);", "-\t} else if (sel == OS.sel_outlineViewItemDidExpand_1) {", "-\t\twidget.outlineViewItemDidExpand(arg0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5964425a56b8278cf9081eb605cc6c02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ClipboardProxy.java", "commitBeforeChange": "0e7c8114dcba88700a100accc611254714e88137", "commitAfterChange": "4d31b031f22f671d3489ec4b4439aa6b6fd64fd2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  boolean setData(Clipboard owner, Object[] data, Transfer[] dataTypes, int clipboards)", "signatureAfterChange": "  boolean setData(Clipboard owner, Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["-\t\t\tif (activeClipboard != null) OS.gtk_clipboard_clear(Clipboard.GTKCLIPBOARD);", "-\t\t\tif (!OS.gtk_clipboard_set_with_data(Clipboard.GTKCLIPBOARD, pTargetsList, entries.length, getFuncProc, clearFuncProc, 0)) {", "+\t\t\t/*", "+\t\t\t* Feature in GTK. When the contents are set again, clipboard_set_with_data() ", "+\t\t\t* invokes clearFunc and then, getFunc is not sequentially called. ", "+\t\t\t* If we clear the content before calling set_with_data(), then there is a fair ", "+\t\t\t* chance for other apps like Klipper to claim the ownership of the clipboard.", "+\t\t\t* The fix is to make sure that the content is not cleared before the data is", "+\t\t\t* set again. GTK does not invoke clearFunc for clipboard_set_with_owner()", "+\t\t\t* though we set the data again. So, this API has to be used whenever we", "+\t\t\t* are setting the contents.", "+\t\t\t*/", "+\t\t\tif (!OS.gtk_clipboard_set_with_owner (Clipboard.GTKCLIPBOARD, pTargetsList, entries.length, getFuncProc, clearFuncProc, clipboardOwner)) {", "-\t\t\tif (activePrimaryClipboard != null) OS.gtk_clipboard_clear(Clipboard.GTKPRIMARYCLIPBOARD);", "-\t\t\tif (!OS.gtk_clipboard_set_with_data(Clipboard.GTKPRIMARYCLIPBOARD, pTargetsList, entries.length, getFuncProc, clearFuncProc, 0)) {", "+\t\t\tif (!OS.gtk_clipboard_set_with_owner (Clipboard.GTKPRIMARYCLIPBOARD, pTargetsList, entries.length, getFuncProc, clearFuncProc, clipboardOwner)) {"]}], "num": 60083}