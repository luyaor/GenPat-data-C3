{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d08dd8da99c6074bad7dc0e6474f4e5e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6412a2dcdc6a9484fc83273bdde0e57a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "8e67409d128ac916871e9e3acc3d6283c8872922", "commitAfterChange": "28d6abc4a7b5d4bbca24acdfe54e330108943d62", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setMaximized (boolean maximized)", "signatureAfterChange": "\r public void setMaximized (boolean maximized)", "diff": ["-\t\t\t\r", "-\t\t\tif (parent != null) {\r", "-\t\t\t\tRectangle rect = parent.getClientArea ();\r", "-\t\t\t\tOS.SetWindowPos (handle, 0, rect.x, rect.y, rect.width, rect.height, flags);\t\t\t\t\t\t\r", "-\t\t\t} else {\r", "-\t\t\t\tRECT rect = new RECT ();\r", "-\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);\r", "-\t\t\t\tint width = rect.right - rect.left;\r", "-\t\t\t\tint height = rect.bottom - rect.top;\r", "-\t\t\t\tOS.SetWindowPos (handle, 0, rect.left, rect.top, width, height, flags);\t\t\t\r", "-\t\t\t}\r", "+\t\t\tRECT rect = new RECT ();\r", "+\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);\r", "+\t\t\tint width = rect.right - rect.left, height = rect.bottom - rect.top;\r", "+\t\t\tOS.SetWindowPos (handle, 0, rect.left, rect.top, width, height, flags);\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bb05fb9bb9a16e33cb309704b6ae7ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "9e9657a5961f9f4f030cb3914faa4a9787cb33cc", "commitAfterChange": "85f1fc56d7da27f427cc958ea00c02335ade970a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tif ((style & SWT.WRAP) != 0) {", "-\t\t\t\tint [] oDataHandle = new int [1];", "-\t\t\t\tOS.TXNGetData (txnObject, OS.kTXNStartOffset, OS.kTXNEndOffset, oDataHandle);", "-\t\t\t\tif (oDataHandle [0] != 0) {", "-\t\t\t\t\tint length = OS.GetHandleSize (oDataHandle [0]);", "-\t\t\t\t\tif (length != 0) {", "-\t\t\t\t\t\tint [] ptr = new int [1];", "-\t\t\t\t\t\tOS.HLock (oDataHandle [0]);", "-\t\t\t\t\t\tOS.memcpy (ptr, oDataHandle [0], 4);", "-\t\t\t\t\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, ptr [0], length / 2);", "-\t\t\t\t\t\tif (str != 0) {", "-\t\t\t\t\t\t\tfloat [] w = new float [1], h = new float [1];", "-\t\t\t\t\t\t\tHIThemeTextInfo info = new HIThemeTextInfo ();", "-\t\t\t\t\t\t\tinfo.state = OS.kThemeStateActive;", "-\t\t\t\t\t\t\tif (font != null) {", "-\t\t\t\t\t\t\t\tOS.TextFont (font.id);", "-\t\t\t\t\t\t\t\tOS.TextFace (font.style);", "-\t\t\t\t\t\t\t\tOS.TextSize (font.size);", "-\t\t\t\t\t\t\t\tinfo.fontID = (short) OS.kThemeCurrentPortFont; ", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tinfo.fontID = (short) defaultThemeFont ();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tOS.HIThemeGetTextDimensions (str, wHint == SWT.DEFAULT ? 0 : wHint, info, w, h, null);", "-\t\t\t\t\t\t\tOS.CFRelease (str);", "-\t\t\t\t\t\t\twidth = (int) w [0];", "-\t\t\t\t\t\t\theight = (int) h [0];", "+\t\t\tint [] oDataHandle = new int [1];", "+\t\t\tOS.TXNGetData (txnObject, OS.kTXNStartOffset, OS.kTXNEndOffset, oDataHandle);", "+\t\t\tif (oDataHandle [0] != 0) {", "+\t\t\t\tint length = OS.GetHandleSize (oDataHandle [0]);", "+\t\t\t\tif (length != 0) {", "+\t\t\t\t\tint [] ptr = new int [1];", "+\t\t\t\t\tOS.HLock (oDataHandle [0]);", "+\t\t\t\t\tOS.memcpy (ptr, oDataHandle [0], 4);", "+\t\t\t\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, ptr [0], length / 2);", "+\t\t\t\t\tif (str != 0) {", "+\t\t\t\t\t\tfloat [] w = new float [1], h = new float [1];", "+\t\t\t\t\t\tHIThemeTextInfo info = new HIThemeTextInfo ();", "+\t\t\t\t\t\tinfo.state = OS.kThemeStateActive;", "+\t\t\t\t\t\tif (font != null) {", "+\t\t\t\t\t\t\tOS.TextFont (font.id);", "+\t\t\t\t\t\t\tOS.TextFace (font.style);", "+\t\t\t\t\t\t\tOS.TextSize (font.size);", "+\t\t\t\t\t\t\tinfo.fontID = (short) OS.kThemeCurrentPortFont; ", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tinfo.fontID = (short) defaultThemeFont ();", "-\t\t\t\t\t\tOS.HUnlock (oDataHandle[0]);", "+\t\t\t\t\t\tOS.HIThemeGetTextDimensions (str, wHint == SWT.DEFAULT ? 0 : wHint, info, w, h, null);", "+\t\t\t\t\t\tOS.CFRelease (str);", "+\t\t\t\t\t\twidth = (int) w [0];", "+\t\t\t\t\t\theight = (int) h [0];", "-\t\t\t\t\tOS.DisposeHandle (oDataHandle[0]);", "+\t\t\t\t\tOS.HUnlock (oDataHandle[0]);", "-\t\t\t} else {", "-\t\t\t\tCGRect rect = new CGRect ();", "-\t\t\t\tOS.TXNGetHIRect (txnObject, OS.kTXNTextRectKey, rect);", "-\t\t\t\twidth = (int) rect.width;", "-\t\t\t\theight = (int) rect.height;", "+\t\t\t\tOS.DisposeHandle (oDataHandle[0]);"]}], "num": 45019}