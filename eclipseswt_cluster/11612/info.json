{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "791bc4abf0c38d3555fcb91cdecb902d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6699ee724b3d82340e9b1d5cebfd4cab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "a61caa1cfed4d2ec7b9bccff2e9d74f32593118d", "commitAfterChange": "b84a972a97895b84f13dc7405df20866130f726b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["+\tDisplay display = this.display;", "+\t\t\tdisplay.runSkin ();", "+\t\t\tdisplay.runDeferredLayouts ();", "+\t\t\t\tdisplay.runAsyncMessages (false);", "+\t\tdisplay.runAsyncMessages (false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff265313475780104e3f2de727e2097b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "afc0fa6e8d839b2b3830e8588568e0e0ce159e34", "commitAfterChange": "e1ed2e305b572c142219fc5140ca7b70afdb4469", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  void clearDropNotAllowed()", "signatureAfterChange": "  void clearDropNotAllowed()", "diff": ["+\t\tDisplay display = getDisplay();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.FALSE);", "+\t\tNSCursor.pop();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "605bdd3bf24e0a0ea2b21e9fa6b09654", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "e23b06c887ceb857b209e89d086650100e5b8b9a", "commitAfterChange": "2e66631dd0cd175b2cfc06f5270b100c29fb13f4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tvoid createSizeGroup ()", "signatureAfterChange": " \tvoid createSizeGroup ()", "diff": ["-\t\tfillButton = new Button (sizeGroup, SWT.RADIO);", "-\t\tfillButton.setText (ControlExample.getResourceString(\"Fill\"));", "-\t", "+\t\tfillHButton = new Button (sizeGroup, SWT.CHECK);", "+\t\tfillHButton.setText (ControlExample.getResourceString(\"Fill_X\"));", "+\t\tfillVButton = new Button (sizeGroup, SWT.CHECK);", "+\t\tfillVButton.setText (ControlExample.getResourceString(\"Fill_Y\"));", "+\t\t", "-\t\t\t\tif (!((Button) event.widget).getSelection ()) return;", "-\t\tfillButton.addSelectionListener(selectionListener);", "+\t\tfillHButton.addSelectionListener(selectionListener);", "+\t\tfillVButton.addSelectionListener(selectionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557bf96a7deae0a0906e0f93a5931bc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["-\tparent.add (item);", "-\tboolean success = false;", "-\t/*", "-\tif (OS.IsWinCE) {", "-\t\tint flags = OS.MF_BYPOSITION;", "-\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;", "-\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); ", "-\t} else {", "-\t\tint hHeap = OS.GetProcessHeap ();", "-\t\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);", "-\t\tMENUITEMINFO info = new MENUITEMINFO ();", "-\t\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;", "-\t\tinfo.wID = item.id;", "-\t\tinfo.fType = item.widgetStyle ();", "-\t\tinfo.dwTypeData = pszText;", "-\t\tsuccess = OS.InsertMenuItem (handle, index, true, info);", "-\t\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);", "-\t}", "-\t*/", "-\t", "-\t/*", "-\tif ((style & SWT.SEPARATOR) != 0) return OS.MFT_SEPARATOR;", "-\tif ((style & SWT.RADIO) != 0) return OS.MFT_RADIOCHECK;", "-\treturn OS.MFT_STRING;", "-\t*/", "-\t", "-\tint attributes= 0;", "-\tif ((item.style & SWT.SEPARATOR) != 0) ", "-\t\tattributes= OS.kMenuItemAttrSeparator;", "-\tif (OS.InsertMenuItemTextWithCFString(handle, 0, (short) index, attributes, item.id) == OS.kNoErr)", "-\t\tsuccess= true;", "-\t", "-\tif (!success) {", "-\t\tparent.remove (item);", "+\tDisplay display = getDisplay ();", "+\tdisplay.addMenuItem (item);", "+\tint attributes = 0;", "+\tif ((item.style & SWT.SEPARATOR) != 0) attributes = OS.kMenuItemAttrSeparator;", "+\tint result = OS.InsertMenuItemTextWithCFString (handle, 0, (short) index, attributes, item.id);", "+\tif (result != OS.noErr) {", "+\t\tdisplay.removeMenuItem (item);", "-\t/* AW\t", "-\tredraw ();", "-\t*/", "-}", "+\tif ((style & SWT.BAR) != 0) {", "+//\t\tDisplay display = getDisplay ();", "+//\t\tshort menuID = display.nextMenuId ();", "+//\t\tint outMenuRef [] = new int [1];", "+//\t\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "+//\t\t\terror (SWT.ERROR_NO_HANDLES);", "+//\t\t}", "+//\t\tOS.SetMenuItemHierarchicalMenu (handle, (short) (index + 1), outMenuRef [0]);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2ccf6134613925e1b90fc4412ccd655", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "afc0fa6e8d839b2b3830e8588568e0e0ce159e34", "commitAfterChange": "e1ed2e305b572c142219fc5140ca7b70afdb4469", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void setDropNotAllowed()", "signatureAfterChange": "  void setDropNotAllowed()", "diff": ["-\t\tif (OS.PTR_SIZEOF == 4) OS.SetThemeCursor(OS.kThemeNotAllowedCursor);\t", "+\t\tDisplay display = getDisplay();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.FALSE);", "+\t\tNSCursor.operationNotAllowedCursor().push();", "+\t\tdisplay.setData (LOCK_CURSOR, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7506db5dc896aca0c5d4e619f4efa4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "4a9698f8803239b41ae26b8225684b00c21a1d84", "commitAfterChange": "6359cada2dc200304371adbfcf279dc183cb996e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  int gtk_insert_text (int widget, int int0, int int1, int int2)", "signatureAfterChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "diff": ["-int gtk_insert_text (int widget, int int0, int int1, int int2) {", "+int gtk_insert_text (int widget, int new_text, int new_text_length, int position) {", "-\t\tif (int0 == 0 || int1==0) return 0;", "-\t\tbyte [] buffer = new byte [int1];", "-\t\tOS.memmove (buffer, int0, buffer.length);", "+\t\tif (new_text == 0 || new_text_length == 0) return 0;", "+\t\tbyte [] buffer = new byte [new_text_length];", "+\t\tOS.memmove (buffer, new_text, buffer.length);", "-\t\tint [] position = new int [1];", "-\t\tOS.memmove (position, int2, 4);", "-\t\tif (position [0] == -1) position [0] = getCharCount ();", "-\t\tString newText = verifyText (oldText, position [0], position [0]); //WRONG POSITION", "+\t\tint [] pos = new int [1];", "+\t\tOS.memmove (pos, position, 4);", "+\t\tif (pos [0] == -1) pos [0] = getCharCount ();", "+\t\tString newText = verifyText (oldText, pos [0], pos [0]); //WRONG POSITION", "-\t\t\tOS.gtk_editable_insert_text (handle, buffer3, buffer3.length, position);", "+\t\t\tOS.gtk_editable_insert_text (handle, buffer3, buffer3.length, pos);", "+\t\t\tOS.memmove (position, pos, 4);", "-\t\tOS.memmove (iter, int0, iter.length);", "+\t\tOS.memmove (iter, new_text, iter.length);", "-\t\tbyte [] buffer = new byte [int2];", "-\t\tOS.memmove (buffer, int1, buffer.length);", "+\t\tbyte [] buffer = new byte [position];", "+\t\tOS.memmove (buffer, new_text_length, buffer.length);", "-\t\t\tOS.gtk_text_buffer_insert (bufferHandle, int0, buffer1, buffer1.length);", "+\t\t\tOS.gtk_text_buffer_insert (bufferHandle, new_text, buffer1, buffer1.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f07d8d7bd1630bebbc2607b50cb7922", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b92851e31eb0fea03e63af0d0ee4546afad615fc", "commitAfterChange": "759a42ab7da1979e2e421dce435898a7f9f9b198", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void destroyWidget ()", "signatureAfterChange": "  void destroyWidget ()", "diff": ["+\tDisplay display = this.display;", "+\t}", "+\t//If another shell is not going to become active, clear the menu bar.", "+\tif (!display.isDisposed () && display.getShells ().length == 0) {", "+\t\tdisplay.setMenuBar (null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b34b1bb94a1d1a4702c71a873c0681", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "81ca82d45f9f24ea5ec38d7c3947d4e58ac9156f", "commitAfterChange": "1bdda2f66952666a5d534bd8c32c3f0cacf2f0b1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void expandItem (TableTreeItem item)", "signatureAfterChange": "\r void expandItem (TableTreeItem item)", "diff": ["-\tif (item == null || item.getExpanded()) return;\r", "+\tif (item == null) return;\r", "-\titem.setExpanded(true);\r", "-\tEvent event = new Event();\r", "-\tevent.item = item;\r", "-\tnotifyListeners(SWT.Expand, event);\r", "+\tif (!item.getVisible()) item.setVisible(true);\r", "+\tif ( !item.expanded && item.items.length > 0) {\r", "+\t\titem.setExpanded(true);\r", "+\t\tEvent event = new Event();\r", "+\t\tevent.item = item;\r", "+\t\tnotifyListeners(SWT.Expand, event);\r", "+\t}\r"]}], "num": 11612}