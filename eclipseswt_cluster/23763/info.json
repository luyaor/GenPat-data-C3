{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d59d2e384afe973b2365ae9ca8e11e2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5568e543e4f118ff075cf7d7798a756", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void copy ()", "signatureAfterChange": "  public void copy ()", "diff": ["- */", "+", "-\tselectionToClipboard();", "-}", "+\tint [] str = new int [1];", "+\tshort start, end;", "+\t\t// NEEDS WORK - getting whole text, not just selection", "+\t\tint index = OS.GetControlValue (handle);", "+\t\tif (OS.CopyMenuItemTextAsCFString(menuHandle, (short)index, str) != OS.noErr) return;", "+\t\tstart = 0; end = (short)OS.CFStringGetLength (str [0]);", "+\t\tif (start >= end) {", "+\t\t\tOS.CFRelease (str [0]);", "+\t\t\treturn;", "+\t\t}", "+\t\tshort [] s = new short [2];", "+\t\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "+\t\tif (s [0] >= s [1]) return;", "+\t\tstart = s [0]; end = s [1];", "+\t\tif (OS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, str, null) != OS.noErr) return;", "+\t}", "+\tCFRange range = new CFRange ();", "+\trange.location = start;", "+\trange.length = end - start;", "+\tint encoding = OS.CFStringGetSystemEncoding ();", "+\tint [] size = new int [1];", "+\tOS.CFStringGetBytes (str [0], range, encoding, (byte)'?', true, null, 0, size);", "+\tbyte [] buffer = new byte [size [0]];", "+\tOS.CFStringGetBytes (str [0], range, encoding, (byte)'?', true, buffer, size [0], size);", "+\tOS.CFRelease (str [0]);", "+\t", "+\tOS.ClearCurrentScrap();", "+\tint[] scrap = new int [1];", "+\tOS.GetCurrentScrap (scrap);", "+\tOS.PutScrapFlavor(scrap [0], OS.kScrapFlavorTypeText, 0, buffer.length, buffer);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6170f45d038ce9f4bc09946a88005c62", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "1879f0110762a14d14725c1ff98b0c876188176a", "commitAfterChange": "ec0b807b1bde11bc567a2a3419e26587b448a196", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void copy ()", "signatureAfterChange": " public void copy ()", "diff": ["-\tint [] str = new int [1];", "-\tshort start, end;", "-\tif ((style & SWT.READ_ONLY) != 0) {", "-\t\t// NEEDS WORK - getting whole text, not just selection", "-\t\tint index = OS.GetControlValue (handle);", "-\t\tif (OS.CopyMenuItemTextAsCFString(menuHandle, (short)index, str) != OS.noErr) return;", "-\t\tstart = 0; end = (short)OS.CFStringGetLength (str [0]);", "-\t\tif (start >= end) {", "-\t\t\tOS.CFRelease (str [0]);", "-\t\t\treturn;", "-\t\t}", "-\t} else {", "-\t\tshort [] s = new short [2];", "-\t\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "-\t\tif (s [0] >= s [1]) return;", "-\t\tstart = s [0]; end = s [1];", "-\t\tif (OS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, str, null) != OS.noErr) return;", "-\t}", "-\tCFRange range = new CFRange ();", "-\trange.location = start;", "-\trange.length = end - start;", "-\tint encoding = OS.CFStringGetSystemEncoding ();", "-\tint [] size = new int [1];", "-\tOS.CFStringGetBytes (str [0], range, encoding, (byte)'?', true, null, 0, size);", "-\tbyte [] buffer = new byte [size [0]];", "-\tOS.CFStringGetBytes (str [0], range, encoding, (byte)'?', true, buffer, size [0], size);", "-\tOS.CFRelease (str [0]);", "-\t", "-\tOS.ClearCurrentScrap();", "-\tint[] scrap = new int [1];", "+\tPoint selection = getSelection ();", "+\tif (selection.x == selection.y) return;", "+\tcopy (getText (selection.x, selection.y));", "+}", "-\tOS.PutScrapFlavor(scrap [0], OS.kScrapFlavorTypeText, 0, buffer.length, buffer);"]}], "num": 23763}