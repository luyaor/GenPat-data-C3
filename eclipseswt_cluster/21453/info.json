{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19c9d89fdde39d524e641e8d97b21e08", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0c17ddaccfe9f067894bd98e7f3a15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 352, "methodNumberAfterChange": 350, "signatureBeforeChange": " \tint get_nCharacters(int pNCharacters)", "signatureAfterChange": " \tint getCharacterCount()", "diff": ["-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.count = -1;", "-\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\tlistener.getCharacterCount(event);", "-\t\t}", "-\t\tif (event.count == -1) {", "-\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "-\t\t\te.childID = ACC.CHILDID_SELF;", "-\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\t\tlistener.getRole(e);", "-\t\t\t\tlistener.getValue(e);", "-\t\t\t}", "-\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "-\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "-\t\t}", "-\t\tCOM.MoveMemory(pNCharacters, new int [] { event.count }, 4);", "+\t/* IAccessibleText::get_characterExtents([in] offset, [in] coordType, [out] pX, [out] pY, [out] pWidth, [out] pHeight) */", "+\tint getCharacterCount() {", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.count = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tif (event.count == -1) {", "+\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "+\t\t\te.childID = ACC.CHILDID_SELF;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getRole(e);", "+\t\t\t\tlistener.getValue(e);", "+\t\t\t}", "+\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "+\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "+\t\t}", "+\t\treturn event.count;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f65eab5fdbb4817b509b1b19e613b05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "1001335a053916393508117a5ee98a23a5333376", "commitAfterChange": "db25a08ca1c9d9c822c66f8d5e69d2d39e9326a2", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "signatureAfterChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "diff": ["-\t\tif (accessibleTextExtendedListeners.size() > 0) {", "-\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\t\tlistener.getCharacterCount(event);", "-\t\t\t}", "-\t\t\treturnValue = NSNumber.numberWithInt(event.count);", "-\t\t} else {", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tevent.result = null;", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.count = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tif (event.count == -1) {", "+\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "+\t\t\te.childID = ACC.CHILDID_SELF;", "-\t\t\t\tlistener.getValue(event);", "+\t\t\t\tlistener.getRole(e);", "+\t\t\t\tlistener.getValue(e);", "-\t\t\tString appValue = event.result;", "-\t\t\tif (appValue != null) {", "-\t\t\t\treturnValue = NSNumber.numberWithInt(appValue.length());", "-\t\t\t}", "+\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "+\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "+\t\t\treturnValue = NSNumber.numberWithInt(event.count);"]}], "num": 21453}