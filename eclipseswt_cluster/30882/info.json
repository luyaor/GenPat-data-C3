{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fba64b06e298b79bab7421c479ca4355", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b220a9c8719bb353a658c1c7a523b411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f43a5d409746b1df96af5b11300398bd85539898", "commitAfterChange": "037643338ac7a4f64fc48b34469c86632a359ffe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void checkSelection ()", "signatureAfterChange": "  void checkSelection ()", "diff": ["+\t", "+\t/* Send value changed notification to accessible client. */", "+\tString string = OS.kAXFocusedWindowChangedNotification;", "+\tchar [] buffer = new char [string.length ()];", "+\tstring.getChars (0, buffer.length, buffer, 0);", "+\tint stringRef = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\tOS.AXNotificationHIObjectNotify(stringRef, handle, 0);", "+\tOS.CFRelease(stringRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "046f698fc17c722aa15180cee0fdb032", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "29709edddc02bb579cf0c5105068898c069890b5", "commitAfterChange": "8f79c236859c21455d49c002ad2ba497e26c57d2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void setMessage (String message)", "signatureAfterChange": " public void setMessage (String message)", "diff": ["-//\tif ((style & SWT.SEARCH) != 0) {", "-//\t\tchar [] buffer = new char [message.length ()];", "-//\t\tmessage.getChars (0, buffer.length, buffer, 0);", "-//\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-//\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-//\t\tOS.HISearchFieldSetDescriptiveText (handle, ptr);", "-//\t\tOS.CFRelease (ptr);", "-//\t}", "+\tif ((style & SWT.SEARCH) != 0) {", "+\t\tNSString str = NSString.stringWith (message);", "+\t\tNSTextFieldCell cell = new NSTextFieldCell (((NSSearchField) view).cell ());", "+\t\tcell.setPlaceholderString (str);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d9c8ffcb1c66446f9a86a887a90b4b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\t\t\tint l= string.length();", "-\t\t\tchar[] chars= new char[l];", "-\t\t\tstring.getChars(0, l, chars, 0); ", "-\t\t\tOS.TXNSetData(fTX, chars, OS.kTXNStartOffset, OS.kTXNEndOffset);", "+\t\t\tint sHandle= 0;", "+\t\t\ttry {", "+\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "+\t\t\t\tOS.SetControlData(handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, sHandle);", "+\t\t\t} finally {", "+\t\t\t\tif (sHandle != 0)", "+\t\t\t\t\tOS.CFRelease(sHandle);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7398c33f9f97d3d8928347eb417d1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6b905c3eb76c3c0c8d47ed9e88c64f2954530229", "commitAfterChange": "8b66a88111a5c0bbf49bacf4f87f8d702b5567a8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 52, "signatureBeforeChange": "  int itemDataProc (int browser, int id, int property, int itemData, int setValue)", "signatureAfterChange": "  int itemDataProc (int browser, int id, int property, int itemData, int setValue)", "diff": ["-\tTableItem item = items [row];", "+\t\t\tTableItem item = _getItem (row);", "-//\tif (property >= COLUMN_ID) {", "-//\t\tint column = 0;", "-//\t\twhile (column < columnCount) {", "-//\t\t\tif (columns [column].id == property) break;", "-//\t\t\tcolumn++;", "-//\t\t}", "-//\t\tString text = item.getText (column);", "-//\t\tchar [] buffer = new char [text.length ()];", "-//\t\ttext.getChars (0, buffer.length, buffer, 0);", "-//\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-//\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-//\t\tOS.SetDataBrowserItemDataText (itemData, ptr);", "-//\t\tOS.CFRelease (ptr);", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b98ef431b78aeb37937a9ce063f7b65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "+\tif ((style & SWT.ARROW) != 0) return;", "-\t//getParent().updateCarbon(index);", "-\tgetParent().setTabText(index, string);", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "+\t\t}", "+\t}", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);\t", "+\tControlTabInfoRecV1 tab = new ControlTabInfoRecV1 ();", "+\ttab.version= (short) OS.kControlTabInfoVersionOne;", "+\ttab.iconSuiteID = 0;", "+\ttab.name = ptr;", "+\tOS.SetControlData (parent.handle, index+1, OS.kControlTabInfoTag, ControlTabInfoRecV1.sizeof, tab);", "+\tOS.CFRelease (ptr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d99d08f16a49ae065b32d27cec24e6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "49b4e9047bdb1940bcccbef7a800960d8e82f12a", "commitAfterChange": "b4cec40ac150ef014bf48495a1bbbebf5f3b5f39", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\t* to the left.  This is avoided by clearing the text.  ", "+\t* to the left.  This is avoided by setting to combo size to zero.  ", "-\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, new char[1], 1);", "-\t\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "-\t\t\tOS.CFRelease (ptr);", "+\t\t\tOS.HIViewSetFrame (handle, new CGRect ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f90797cf57c1de0417d1684110312617", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "e69373b213e8626294a43ab53d920e312699c693", "commitAfterChange": "02f95eacfdded39651c1ac1ac9f4a4858e930540", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tupdateText (true);", "+\tif (OS.HIVIEW) {", "+\t\tchar [] buffer = new char [text.length ()];", "+\t\ttext.getChars (0, buffer.length, buffer, 0);", "+\t\tint length = fixMnemonic (buffer);", "+\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, length);", "+\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\t\tOS.SetControlData (labelHandle, 0 , OS.kControlStaticTextCFStringTag, 4, new int[]{ptr});", "+\t\tOS.CFRelease (ptr);", "+\t\tredrawWidget (labelHandle, false);", "+\t} else {", "+\t\tupdateText (true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426df64d4ea2dd16a0146ad97eb52c3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["- */", "+", "-\t", "-\tint sHandle= 0;", "-\ttry {", "-\t\tsHandle= OS.CFStringCreateWithCharacters(MacUtil.removeMnemonics(string));", "-\t\tif (OS.SetControlTitleWithCFString(handle, sHandle) != OS.kNoErr)", "-\t\t\terror (SWT.ERROR_CANNOT_SET_TEXT);", "-\t} finally {", "-\t\tif (sHandle != 0)", "-\t\t\tOS.CFRelease(sHandle);", "+\ttext = string;", "+\tif (isImage) {", "+\t\tControlButtonContentInfo inContent = new ControlButtonContentInfo();", "+\t\tinContent.contentType = (short)OS.kControlContentTextOnly;", "+\t\tOS.SetBevelButtonContentInfo(handle, inContent);", "-}", "+\tisImage = false;", "+\tint length = text.length ();", "+\tString s = (length == 0) ? \" \": text;", "+\tchar [] buffer = new char [length];", "+\ts.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "+\t\t}", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetControlTitleWithCFString (handle, ptr);", "+\tOS.CFRelease (ptr);", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4eaf72ba9fe5a6d9308ddd8ea10e54b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "76645e4deaf8a0fe7efd63e4eaeeeece9f236003", "commitAfterChange": "ce82c3c5aea13e54726fcaae4eb074f543e5af19", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["+\tif (image == null) {", "+\t\tsetText (text);", "+\t\treturn;", "+\t}", "+\tif (text.length () > 0) {", "+\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, null, 0);", "+\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\t\tOS.SetControlData (handle, 0 , OS.kControlStaticTextCFStringTag, 4, new int[]{ptr});", "+\t\tOS.CFRelease (ptr);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8f45cfae1ed96ca9e53e4fd2e2048f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["+", "-\tint sHandle= 0;", "-\ttry {", "-\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "-\t\tOS.SetWindowTitleWithCFString(shellHandle, sHandle);", "-\t} finally {", "-\t\tif (sHandle != 0)", "-\t\t\tOS.CFRelease(sHandle);", "-\t}", "+\tchar [] buffer = new char [string.length ()];", "+\tstring.getChars (0, buffer.length, buffer, 0);", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetWindowTitleWithCFString (shellHandle, ptr);", "+\tOS.CFRelease (ptr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50646da06c9de7e0ccb7ea8e540990e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tint sHandle= 0;", "-\ttry {", "-\t\tsHandle= OS.CFStringCreateWithCharacters(MacUtil.removeMnemonics(string));", "-\t\tOS.SetControlTitleWithCFString(handle, sHandle);", "-\t} finally {", "-\t\tif (sHandle != 0)", "-\t\t\tOS.CFRelease(sHandle);", "+\tif ((style & SWT.ARROW) != 0) return;", "+\ttext = string;", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "+\t\t}", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetControlTitleWithCFString (handle, ptr);", "+\tOS.CFRelease (ptr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217f46b0793338d20cd57f27723fb373", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f564bd037598f91bb0461e06e04daebaf1d4b1ae", "commitAfterChange": "c5942a76a517977b0aac721a00f2eba9968c5b3c", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\t* there is an outstanding timer that runs after the widget is dispoed.", "+\t* there is an outstanding timer that runs after the widget is disposed.", "+\t* ", "+\t* NOTE: Pixel corruption happens on the parent window when the ", "+\t* a drop down combo is not in focus and the contents is scrolled", "+\t* to the left.  This is avoided by clearing the text.  ", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, new char[1], 1);", "+\t\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "+\t\t\tOS.CFRelease (ptr);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c9ad1b354844d48b402f5a0d851e7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["- */", "+", "+\tisImage = false;", "-", "-\t/* Strip out mnemonic marker symbols, and remember the mnemonic. */", "-\tchar [] unicode = new char [string.length ()];", "-\tstring.getChars (0, unicode.length, unicode, 0);", "-\tint i=0, j=0, mnemonic=0;", "-\twhile (i < unicode.length) {", "-\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {", "-\t\t\tif (i == unicode.length) {continue;}", "-\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}", "-\t\t\tif (mnemonic == 0) mnemonic = unicode [i];", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "-\twhile (j < unicode.length) unicode [j++] = 0;", "-", "-\tredrawWidget (0, 0, 0, 0, false);", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetControlData (handle, 0 , OS.kControlStaticTextCFStringTag, 4, new int[]{ptr});", "+\tOS.CFRelease (ptr);", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e09de9503f6d82b84bd48a906a10cda8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "fe9cf8b69b05605c0699efe7aea722d3e2396198", "commitAfterChange": "a76fbcdb2bea80d2aa22d622558bd4081d9e971a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tchar [] unicode = new char [string.length ()];", "-\tstring.getChars (0, unicode.length, unicode, 0);", "-\tint i=0, j=0;", "-\tchar mnemonic=0;", "-\twhile (i < unicode.length) {", "-\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {", "-\t\t\tif (i == unicode.length) {continue;}", "-\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}", "-\t\t\tif (mnemonic == 0) mnemonic = unicode [i];", "-\t\t\tj--;", "-\t\t}", "-\t}", "-\twhile (j < unicode.length) unicode [j++] = 0;", "+\tchar [] text = new char [string.length ()];", "+\tstring.getChars (0, text.length, text, 0);", "+\tchar mnemonic = fixMnemonic (text);", "-\t\tif (mnemonic != '\\0') string = new String (unicode);", "-\t\tstring = display.wrapText (string, font, width);", "+\t\tstring = display.wrapText (new String (text), font, width);", "-\t\tbuffer = Converter.wcsToMbcs (null, unicode, true);", "+\t\tbuffer = Converter.wcsToMbcs (null, text, true);", "-\tint ptr = OS.malloc (buffer.length);", "-\tOS.memmove (ptr, buffer, buffer.length);", "+\tint ptr1 = OS.malloc (buffer.length);", "+\tOS.memmove (ptr1, buffer, buffer.length);", "-\t\tOS.Pt_ARG_TEXT_STRING, ptr, 0,", "+\t\tOS.Pt_ARG_TEXT_STRING, ptr1, 0,", "-\tOS.free (ptr);", "+\tOS.free (ptr1);"]}], "num": 30882}