{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "120ec0c2ad596e87b3f10ad9bc60991b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb59d384187e8b9935fdb62252094a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e908886638a119001828c7b01be2d327a2506f06", "commitAfterChange": "bb7464824fcf46832ec4a388c3e1111ac7b3678a", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\t\tconsumed = filterMessage (keyMsg);", "-\t\t\t\tif (!consumed) {", "-\t\t\t\t\tOS.TranslateMessage (keyMsg);", "-\t\t\t\t\tconsumed = OS.DispatchMessage (keyMsg) == 1;", "-\t\t\t\t\twhile (OS.PeekMessage (keyMsg, keyMsg.hwnd, OS.WM_KEYFIRST, OS.WM_KEYLAST, OS.PM_REMOVE)) {", "-\t\t\t\t\t\tconsumed |= OS.DispatchMessage (keyMsg) == 1;", "+\t\t\t\tdo {", "+\t\t\t\t\tif (!(consumed |= filterMessage (keyMsg))) {", "+\t\t\t\t\t\tOS.TranslateMessage (keyMsg);", "+\t\t\t\t\t\tconsumed |= OS.DispatchMessage (keyMsg) == 1;\t", "-\t\t\t\t}", "+\t\t\t\t} while (OS.PeekMessage (keyMsg, keyMsg.hwnd, OS.WM_KEYFIRST, OS.WM_KEYLAST, OS.PM_REMOVE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765534e8e04eb35023b2411ea94bfc17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a59d4f0fcd6ac77e4b0b411a02002b0581984050", "commitAfterChange": "e2b4ac8fc06ef616c8ab44b7a5fded395b0c30d0", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 72, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\tcase OS.WM_APP + 2:", "+\t\t\tboolean consumed = false;", "+\t\t\tMSG keyMsg = new MSG ();", "+\t\t\tOS.MoveMemory (keyMsg, lParam, MSG.sizeof);", "+\t\t\tControl control = findControl (keyMsg.hwnd);", "+\t\t\tif (control != null) {", "+\t\t\t\tkeyMsg.hwnd = control.handle;", "+\t\t\t\tconsumed = filterMessage (keyMsg);", "+\t\t\t\tif (!consumed) {", "+\t\t\t\t\tOS.TranslateMessage (keyMsg);", "+\t\t\t\t\tconsumed = OS.DispatchMessage (keyMsg) == 1;", "+\t\t\t\t\twhile (OS.PeekMessage (keyMsg, keyMsg.hwnd, OS.WM_KEYFIRST, OS.WM_KEYLAST, OS.PM_REMOVE)) {", "+\t\t\t\t\t\tconsumed |= OS.DispatchMessage (keyMsg) == 1;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (consumed) {", "+\t\t\t\tint hHeap = OS.GetProcessHeap ();", "+\t\t\t\tOS.HeapFree (hHeap, 0, lParam);", "+\t\t\t} else {", "+\t\t\t\tOS.PostMessage (embeddedHwnd, OS.WM_APP + 2, wParam, lParam);", "+\t\t\t}", "+\t\t\treturn 0;"]}], "num": 32975}