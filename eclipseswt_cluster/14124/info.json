{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bca7495e95912b9747a13eb089ad4c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "913db9f1934211a7d981af01332d5906", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "742eeabc1f6fbf7dd21d90646c134d68acbc6403", "commitAfterChange": "bd8a992246bc8f71b4d5e7e6b3cdcc570d484b1c", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  public void test_setTextLjava_lang_String()", "signatureAfterChange": "  public void test_setTextLjava_lang_String()", "diff": ["+", "-\ttry {", "-\t\ttext.getText(-1, 2);", "-\t\tfail(\"no exception thrown for negative start\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(3, 100);", "-\t\tfail(\"no exception thrown for out-of-range end\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(5, 3);", "-\t\tfail(\"no exception thrown for start > end\");", "-\t} catch (IllegalArgumentException e) {}", "+\tassertEquals(\"012\", text.getText(-1, 2));", "+\tassertEquals(\"34567890\", text.getText(3, 100));", "+\tassertEquals(\"\", text.getText(5, 3));", "-\ttry {", "-\t\ttext.getText(-1, 0);", "-\t\tfail(\"no exception thrown for negative start\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(0, 10);", "-\t\tfail(\"no exception thrown for out-of-range end\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(1, 0);", "-\t\tfail(\"no exception thrown for start > end\");", "-\t} catch (IllegalArgumentException e) {}", "+\tassertEquals(\"\", text.getText(-1, 0));", "+\tassertEquals(\"\", text.getText(0, 10));", "+\tassertEquals(\"\", text.getText(1, 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead6d3b341503d8eeea4bcdd78f7cdb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "742eeabc1f6fbf7dd21d90646c134d68acbc6403", "commitAfterChange": "bd8a992246bc8f71b4d5e7e6b3cdcc570d484b1c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void test_getTextII()", "signatureAfterChange": "  public void test_getTextII()", "diff": ["+", "-", "-\ttry {", "-\t\ttext.getText(-1, 2);", "-\t\tfail(\"no exception thrown for negative start\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(3, 100);", "-\t\tfail(\"no exception thrown for out-of-range end\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(5, 3);", "-\t\tfail(\"no exception thrown for start > end\");", "-\t} catch (IllegalArgumentException e) {}", "+\tassertEquals(\"012\", text.getText(-1, 2));", "+\tassertEquals(\"34567890\", text.getText(3, 100));", "+\tassertEquals(\"\", text.getText(5, 3));", "-\ttry {", "-\t\ttext.getText(-1, 0);", "-\t\tfail(\"no exception thrown for negative start\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(0, 10);", "-\t\tfail(\"no exception thrown for out-of-range end\");", "-\t} catch (IllegalArgumentException e) {}", "-\t", "-\ttry {", "-\t\ttext.getText(1, 0);", "-\t\tfail(\"no exception thrown for start > end\");", "-\t} catch (IllegalArgumentException e) {}", "+\tassertEquals(\"\", text.getText(-1, 0));", "+\tassertEquals(\"\", text.getText(0, 10));", "+\tassertEquals(\"\", text.getText(1, 0));"]}], "num": 14124}