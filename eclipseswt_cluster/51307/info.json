{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4ff41a55cb72afaadce469f1913e546", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae8aeaa8e5bf2d4978b2d1f81824ff5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "00d9a929233cc0e4c7aa22a7ff5b7562dd581371", "commitAfterChange": "82a169db2ad1731cac41b8c9102e1999ac7a1ef7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-//\tif (index != 0 && !(0 <= index && index < parent.columnCount)) return new Rectangle (0, 0, 0, 0);", "-//\tRect rect = new Rect();", "-//\tint columnId = parent.columnCount == 0 ? parent.column_id : parent.columns [index].id;", "-//\tif (OS.GetDataBrowserItemPartBounds (parent.handle, id, columnId, OS.kDataBrowserPropertyContentPart, rect) != OS.noErr) {", "-//\t\treturn new Rectangle (0, 0, 0, 0);", "-//\t}", "-//\tint x = rect.left, y = rect.top;", "-//\tint width = 0;", "-//\tif (index == 0 && image != null) {", "-//\t\tRectangle bounds = image.getBounds ();", "-//\t\twidth += bounds.width;", "-//\t}", "-//\tif (index != 0 && images != null && images[index] != null) {", "-//\t\tRectangle bounds = images [index].getBounds ();", "-//\t\twidth += bounds.width;", "-//\t}", "-//\tint height = rect.bottom - rect.top + 1;", "-//\treturn new Rectangle (x, y, width, height);", "-\treturn null;", "+\tif (index != 0 && !(0 <= index && index < parent.columnCount)) return new Rectangle (0, 0, 0, 0);", "+\tNSOutlineView outlineView = (NSOutlineView) parent.view;", "+\tint row = outlineView.rowForItem (handle);", "+\tif ((parent.style & SWT.CHECK) != 0) index ++;", "+\tNSRect rect = outlineView.frameOfCellAtColumn (index, row);", "+\t//TODO is this right?", "+\tImage image = index == 0 ? this.image : (images != null) ? images [index] : null;", "+\trect.width = image != null ? image.getBounds().width : 0; ", "+\treturn new Rectangle((int) rect.x, (int) rect.y, (int) rect.width, (int) rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "445e1a5365e06c313d3c7536b8df4298", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e220597a54584d5bd6540c408c360696e7c284fb", "commitAfterChange": "0deddb3302eae8b1aafa73e2ffb02b7f0198c84b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public Rectangle getBounds (int index)", "signatureAfterChange": " public Rectangle getBounds (int index)", "diff": ["-//\tif (index != 0 && !(0 <= index && index < parent.columnCount)) return new Rectangle (0, 0, 0, 0);", "-//\tRect rect = new Rect();", "-//\tint columnId = parent.columnCount == 0 ? parent.column_id : parent.columns [index].id;", "-//\tif (OS.GetDataBrowserItemPartBounds (parent.handle, id, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) != OS.noErr) {", "-//\t\treturn new Rectangle (0, 0, 0, 0);", "-//\t}", "-//\tint[] disclosure = new int [1];", "-//\tOS.GetDataBrowserListViewDisclosureColumn (parent.handle, disclosure, new boolean [1]);", "-//\tint x, y, width, height;", "-//\tif (OS.VERSION >= 0x1040 && disclosure [0] != columnId) {", "-//\t\tif (parent.getLinesVisible ()) {", "-//\t\t\trect.left += Tree.GRID_WIDTH;", "-//\t\t\trect.top += Tree.GRID_WIDTH;", "-//\t\t}", "-//\t\tx = rect.left;", "-//\t\ty = rect.top;", "-//\t\twidth = rect.right - rect.left;", "-//\t\theight = rect.bottom - rect.top;", "-//\t} else {", "-//\t\tRect rect2 = new Rect();", "-//\t\tif (OS.GetDataBrowserItemPartBounds (parent.handle, id, columnId, OS.kDataBrowserPropertyContentPart, rect2) != OS.noErr) {", "-//\t\t\treturn new Rectangle (0, 0, 0, 0);", "-//\t\t}", "-//\t\tx = rect2.left;", "-//\t\ty = rect2.top;", "-//\t\twidth = rect.right - rect2.left + 1;", "-//\t\theight = rect2.bottom - rect2.top + 1;", "-//\t}", "-//\treturn new Rectangle (x, y, width, height);", "-\treturn null;", "+\tif (index != 0 && !(0 <= index && index < parent.columnCount)) return new Rectangle (0, 0, 0, 0);", "+\tNSOutlineView outlineView = (NSOutlineView) parent.view;", "+\tint row = outlineView.rowForItem(handle);", "+\tif ((parent.style & SWT.CHECK) != 0) index ++;", "+\tNSRect rect = outlineView.frameOfCellAtColumn(index, row);", "+\trect = outlineView.convertRect_toView_ (rect, parent.scrollView);", "+\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);"]}], "num": 51307}