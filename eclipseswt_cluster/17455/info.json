{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb823b092eb557e54bc07c9fef68f6d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1e897ab6398d8ef8a5ae63c67a4d6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "93b1e60e9a27fc0760da291466fadf01e1685f72", "commitAfterChange": "2bcbf773f9ab1109dfb5249cf2aa7033c799d88b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["-\tDisplay display = getDisplay ();", "-\tdisplay.addMenuItem (item);", "-\tint result = OS.InsertMenuItemTextWithCFString (handle, 0, (short) index, attributes, item.id);", "+\tint result = OS.InsertMenuItemTextWithCFString (handle, 0, (short) index, attributes, 0);", "-\t\tdisplay.removeMenuItem (item);", "+\tif (count == items.length) {", "+\t\tMenuItem [] newItems = new MenuItem [items.length + 4];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, items.length);", "+\t\titems = newItems;", "+\t}", "+\tSystem.arraycopy (items, index, items, index + 1, count - index);", "+\titems [index] = item;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9889a6241b60ab79162e1c035193c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "89dd18f56416766e9f25e99fa93a3cfdf736ff7e", "commitAfterChange": "0333c3cd6e1227d0185cdb60c13b053083d72b21", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object getContents(Transfer transfer)", "signatureAfterChange": " public Object getContents(Transfer transfer)", "diff": ["-\t\t", "-\tint[] scrapHandle = new int[1];", "-\tOS.GetCurrentScrap(scrapHandle);", "-\tint scrap= scrapHandle[0];", "-\t\t", "-\t// Does Clipboard have data in required format?", "+\t", "+\tint[] scrap = new int[1];", "+\tif (OS.GetCurrentScrap(scrap) != OS.noErr) return null;", "-\tfor (int i= 0; i < typeIds.length; i++) {", "+\tint[] size = new int[1];\t", "+\t// get data from system clipboard", "+\tfor (int i=0; i<typeIds.length; i++) {", "-\t\tint[] size = new int[1];", "-\t\tif (OS.GetScrapFlavorSize(scrap, type, size) == OS.noErr) {", "-\t\t\tif (size[0] > 0) {", "+\t\tsize[0] = 0;", "+\t\tif (OS.GetScrapFlavorSize(scrap[0], type, size) == OS.noErr && size[0] > 0) {", "+\t\t\tbyte[] buffer = new byte[size[0]];", "+\t\t\tif (OS.GetScrapFlavorData(scrap[0], type, size, buffer) == OS.noErr) {", "-\t\t\t\ttdata.data = new byte[size[0]];", "-\t\t\t\tOS.GetScrapFlavorData(scrap, type, size, tdata.data);", "+\t\t\t\ttdata.data = new byte[1][];", "+\t\t\t\ttdata.data[0] = buffer;", "-\t}\t\t", "+\t}"]}], "num": 17455}