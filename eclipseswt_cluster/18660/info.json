{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5dc4b5ec1fc5861ce86b757dc7b91f7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f10beefc7acd2ff2091e2b33243c8aee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": " int topHandle ()", "signatureAfterChange": "  void setWindowVisible (boolean visible)", "diff": ["+", "+void setWindowVisible (boolean visible) {", "+\tif (OS.IsWindowVisible (shellHandle) == visible) return;\t", "+\tif (visible) {", "+\t\tif (!resized) {", "+\t\t\tsendEvent (SWT.Resize);", "+\t\t\tif (layout != null) layout.layout (this, false);", "+\t\t}", "+\t\tint inModalKind = OS.kWindowModalityNone;", "+\t\tif ((style & SWT.PRIMARY_MODAL) != 0) inModalKind = OS.kWindowModalityWindowModal;", "+\t\tif ((style & SWT.APPLICATION_MODAL) != 0) inModalKind = OS.kWindowModalityAppModal;", "+\t\tif ((style & SWT.SYSTEM_MODAL) != 0) inModalKind = OS.kWindowModalitySystemModal;", "+\t\tif (inModalKind != OS.kWindowModalityNone) {", "+\t\t\tint inUnavailableWindow = 0;", "+\t\t\tif (parent != null) inUnavailableWindow = OS.GetControlOwner (parent.handle);", "+\t\t\tOS.SetWindowModality (shellHandle, inModalKind, inUnavailableWindow);", "+\t\tOS.ShowWindow (shellHandle);", "+    \tOS.HideWindow (shellHandle);", "+\t\tsendEvent (SWT.Hide);", "+}", "-int topHandle () {", "-\treturn shellHandle;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a2d43ee809e150d94f588014f80f59d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "de1ef9e5dd8e2f657b19ac5e5eaa6cbf2017d8bb", "commitAfterChange": "bcac6ad70ee319247deb043444a858ffd48b487d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tsuper.createHandle(index);", "+\t\tfixedHandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "+\t\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tgtk_widget_set_has_window (fixedHandle, true);", "+\t\tif ((style & SWT.DROP_DOWN) != 0 && (style & SWT.DATE) != 0) {", "+\t\t\thandle = OS.gtk_entry_new();", "+\t\t\tOS.gtk_container_add(fixedHandle, handle);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t} else {", "+\t\t\tlong /*int*/ adjusment = OS.gtk_adjustment_new(0, -9999, 9999, 1, 0, 0);", "+\t\t\thandle = OS.gtk_spin_button_new(adjusment, 1, 0);", "+\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tOS.gtk_spin_button_set_numeric (handle, false);", "+\t\t\tOS.gtk_container_add(fixedHandle, handle);", "+\t\t\tOS.gtk_spin_button_set_wrap (handle, (style & SWT.WRAP) != 0);", "+\t\t}", "+\t\tOS.gtk_editable_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "+\t\tOS.gtk_entry_set_has_frame (handle, (style & SWT.BORDER) != 0);", "+\t\t"]}], "num": 18660}