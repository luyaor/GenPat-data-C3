{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00a9f599d174c55e30a26e4971f72326", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f72da091798ddee296a6ca3ec967a68e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (transferData.data.length == 0 || transferData.data[0].length == 0) return null;", "-\tbyte[] buffer = transferData.data[0];", "-\tswitch (transferData.type) {", "-\t\tcase TEXTID: {", "-\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "-\t\t\tint cfstring = OS.CFStringCreateWithBytes(OS.kCFAllocatorDefault, buffer, buffer.length, encoding, true);", "-\t\t\tif (cfstring == 0) return null;", "-\t\t\ttry {", "-\t\t\t\tint length = OS.CFStringGetLength(cfstring);", "-\t\t\t\tif (length == 0) return null;", "-\t\t\t\tchar[] chars = new char[length];", "-\t\t\t\tCFRange range = new CFRange();", "-\t\t\t\trange.length = length;", "-\t\t\t\tOS.CFStringGetCharacters(cfstring, range, chars);", "-\t\t\t\treturn new String(chars);", "-\t\t\t} finally {", "-\t\t\t\tOS.CFRelease(cfstring);", "-\t\t\t}", "-\t\t}", "-\t\tcase UTEXTID: {", "-\t\t\tchar[] chars = new char[(buffer.length + 1) / 2];", "-\t\t\tOS.memmove(chars, buffer, buffer.length);", "-\t\t\treturn new String(chars);", "-\t\t}", "-\t}", "-\treturn null;", "+\tNSString string = (NSString) transferData.data;", "+\tchar[] chars = new char[string.length()];", "+\tstring.getCharacters_(chars);", "+\treturn new String(chars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc65a9cf5d4d56ffdbba95212c91031", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (transferData.data.length == 0 || transferData.data[0].length == 0) return null;", "-\tbyte[] buffer = transferData.data[0];", "-\tint encoding = OS.CFStringGetSystemEncoding();", "-\tint cfstring = OS.CFStringCreateWithBytes(OS.kCFAllocatorDefault, buffer, buffer.length, encoding, true);", "-\tif (cfstring == 0) return null;", "-\ttry {", "-\t\tint length = OS.CFStringGetLength(cfstring);", "-\t\tif (length == 0) return null;", "-\t\tchar[] chars = new char[length];", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = length;", "-\t\tOS.CFStringGetCharacters(cfstring, range, chars);", "-\t\treturn new String(chars);", "-\t} finally {", "-\t\tOS.CFRelease(cfstring);", "-\t}", "+\tNSString string = (NSString) transferData.data;", "+\tchar[] chars = new char[string.length()];", "+\tstring.getCharacters_(chars);", "+\treturn new String(chars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5e7550db277b7928d3a0d01f795a9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\rpublic Object nativeToJava(TransferData transferData)", "signatureAfterChange": "\rpublic Object nativeToJava(TransferData transferData)", "diff": ["- */\rpublic Object nativeToJava(TransferData transferData){\r\tif (!isSupportedType(transferData) || transferData.data == null) return null;\r\tif (transferData.data.length == 0) return null;\r\tbyte[] buffer = transferData.data[0];\r\tint encoding = OS.CFStringGetSystemEncoding();\r\tint cfstring = OS.CFStringCreateWithBytes(OS.kCFAllocatorDefault, buffer, buffer.length, encoding, true);\r\tif (cfstring == 0) return null;\r\ttry {\r\t\tint length = OS.CFStringGetLength(cfstring);\r\t\tif (length == 0) return null;\r\t\tchar[] chars = new char[length];\r\t\tCFRange range = new CFRange();\r\t\trange.length = length;\r\t\tOS.CFStringGetCharacters(cfstring, range, chars);\r\t\treturn new String(chars);\r\t} finally {\r\t\tOS.CFRelease(cfstring);\r\t}\r}\r\rprotected int[] getTypeIds(){\r\treturn new int[] {URL_ID, URLN_ID};\r}\r\rprotected String[] getTypeNames(){\r\treturn new String[] {URL, URLN}; \r}\r\rboolean checkURL(Object object) {\r\treturn object != null && (object instanceof String) && ((String)object).length() > 0;\r}\r\rprotected boolean validate(Object object) {\r\treturn checkURL(object);\r}\r}\r", "\\ No newline at end of file", "+ */\rpublic Object nativeToJava(TransferData transferData){\r\tif (!isSupportedType(transferData) || transferData.data == null) return null;\r\tNSURL nsUrl = (NSURL) transferData.data;\r\tNSString nsString = nsUrl.absoluteString();\r\treturn getString(nsString);\r}\r\rprotected int[] getTypeIds(){\r\treturn new int[] {URL_ID};\r}\r\rprotected String[] getTypeNames(){\r\treturn new String[] {URL}; \r}\r\rboolean checkURL(Object object) {\r\treturn object != null && (object instanceof String) && ((String)object).length() > 0;\r}\r\rprotected boolean validate(Object object) {\r\treturn checkURL(object);\r}\r}\r", "\\ No newline at end of file"]}], "num": 39963}