{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90bddf8877cc1d548899ce65357fd4d2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20b4974e241cc703988dcc5cce367ae5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "3549d4960b78a23e56b4090ec47809f2171fdc05", "commitAfterChange": "e9a1477165ad64d557ee73753a6f703c8ce2dfc8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int EnumFontFamProc (int lpelfe, int lpntme, int FontType, int lParam)", "signatureAfterChange": "  int EnumFontFamProc (int lpelfe, int lpntme, int FontType, int lParam)", "diff": ["-\tif ((lParam == 1) != isScalable) return 1;", "-\t", "-\t/* Add the log font to the list of log fonts */", "-\tif (nFonts == logFonts.length) {", "-\t\tLOGFONT [] newLogFonts = new LOGFONT [logFonts.length + 128];", "-\t\tSystem.arraycopy (logFonts, 0, newLogFonts, 0, nFonts);", "-\t\tlogFonts = newLogFonts;", "+\tboolean scalable = lParam == 1;", "+\tif (isScalable == scalable) {", "+\t\t/* Add the log font to the list of log fonts */", "+\t\tif (nFonts == logFonts.length) {", "+\t\t\tLOGFONT [] newLogFonts = new LOGFONT [logFonts.length + 128];", "+\t\t\tSystem.arraycopy (logFonts, 0, newLogFonts, 0, nFonts);", "+\t\t\tlogFonts = newLogFonts;", "+\t\t}", "+\t\tLOGFONT logFont = logFonts [nFonts];", "+\t\tif (logFont == null) logFont = OS.IsUnicode ? (LOGFONT)new LOGFONTW () : new LOGFONTA ();", "+\t\tOS.MoveMemory (logFont, lpelfe, LOGFONT.sizeof);", "+\t\tlogFonts [nFonts++] = logFont;", "-\tLOGFONT logFont = logFonts [nFonts];", "-\tif (logFont == null) logFont = OS.IsUnicode ? (LOGFONT)new LOGFONTW () : new LOGFONTA ();", "-\tOS.MoveMemory (logFont, lpelfe, LOGFONT.sizeof);", "-\tlogFonts [nFonts++] = logFont;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb1823550243d2fb76af186005cda95", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "99c03e02c43aabd5c608e127e0b1dfd314743d48", "commitAfterChange": "2e7ab97abcf2a9656d106122578009f940fa056a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-\tRectangle clipping = gc.getClipping();", "-\tRectangle bounds = getBounds();", "-\tbounds.height += 1;", "-\tif (parent.onBottom) bounds.y -= 1;", "-\tif (!clipping.intersects(bounds)) return;", "-\t", "-\t\tif (parent.selectionGradientColors != null && !parent.selectionGradientVertical) {", "-\t\t\tparent.drawBackground(gc, shape, true);", "-\t\t} else {", "-\t\t\tColor defaultBackground = parent.selectionBackground;", "-\t\t\tImage image = parent.selectionBgImage;", "-\t\t\tColor[] colors = parent.selectionGradientColors;", "-\t\t\tint[] percents = parent.selectionGradientPercents;", "-\t\t\tboolean vertical = parent.selectionGradientVertical;", "-\t\t\txx = x;", "-\t\t\tyy = parent.onBottom ? y -1 : y + 1;", "-\t\t\tww = width;", "-\t\t\thh = height;", "-\t\t\tif (!parent.single && !parent.simple) ww += parent.curveWidth - parent.curveIndent;", "-\t\t\tparent.drawBackground(gc, shape, xx, yy, ww, hh, defaultBackground, image, colors, percents, vertical);", "+\t\t", "+\t\tRectangle clipping = gc.getClipping();", "+\t\tRectangle bounds = getBounds();", "+\t\tbounds.height += 1;", "+\t\tif (parent.onBottom) bounds.y -= 1;", "+\t\tboolean tabInPaint = clipping.intersects(bounds);", "+\t\t", "+\t\tif (tabInPaint) {", "+\t\t\t// fill in tab background", "+\t\t\tif (parent.selectionGradientColors != null && !parent.selectionGradientVertical) {", "+\t\t\t\tparent.drawBackground(gc, shape, true);", "+\t\t\t} else {", "+\t\t\t\tColor defaultBackground = parent.selectionBackground;", "+\t\t\t\tImage image = parent.selectionBgImage;", "+\t\t\t\tColor[] colors = parent.selectionGradientColors;", "+\t\t\t\tint[] percents = parent.selectionGradientPercents;", "+\t\t\t\tboolean vertical = parent.selectionGradientVertical;", "+\t\t\t\txx = x;", "+\t\t\t\tyy = parent.onBottom ? y -1 : y + 1;", "+\t\t\t\tww = width;", "+\t\t\t\thh = height;", "+\t\t\t\tif (!parent.single && !parent.simple) ww += parent.curveWidth - parent.curveIndent;", "+\t\t\t\tparent.drawBackground(gc, shape, xx, yy, ww, hh, defaultBackground, image, colors, percents, vertical);", "+\t\t\t}", "+\t\t", "+\t\tif (!tabInPaint) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "198aaee8a62355d6ce2340280f9370f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "267c533e816cb2810b67cfcbeb132088034f52fd", "commitAfterChange": "0b01cef709770cee06399410b45cb5a2079c746f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["-\t* eventually, Windows will begin to place the item on the right\r", "-\t* side of the cool bar.  The fix is to resize the next to last\r", "-\t* item to the ideal size and resize the new items to the maximum\r", "-\t* size.\r", "+\t* sometimes, Windows will begin to place the item on the right\r", "+\t* side of the cool bar.  The fix is to resize the new items to\r", "+\t* the maximum size and then resize the next to last item to the\r", "+\t* ideal size.\r", "-\tif (index == lastIndex + 1) {  \t\r", "-\t\tresizeToPreferredWidth (lastIndex);\r", "+\tboolean fixLast = index == lastIndex + 1;\r", "+\tif (fixLast) {  \t\r", "+\t\r", "+\t/* Resize the next to last item to the ideal size */\r", "+\tif (fixLast) {  \t\r", "+\t\tresizeToPreferredWidth (lastIndex);\r", "+\t}\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e9c1d21cd4fe385c48f00236dc39f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "ef13d35be5a2f4b1e48d18cbd8f13a9606140791", "commitAfterChange": "8395d198eeb9a83235ee2f519d6d0a1b8c9cb41e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void setFont()", "signatureAfterChange": "  void setFont()", "diff": ["-\t\tif (font != null) {", "-\t\t\tfont.dispose();", "-\t\t}", "-\t\tfont = new Font(shell.getDisplay(), fontData);", "-\t\ttext.setFont(font);", "+\t\tFont newFont = new Font(shell.getDisplay(), fontData); ", "+\t\ttext.setFont(newFont);", "+\t\tif (font != null) font.dispose();", "+\t\tfont = newFont;"]}], "num": 7646}