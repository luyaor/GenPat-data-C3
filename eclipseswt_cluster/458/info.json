{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "207484b0f6c96ecf139312689e6b8df8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5d14f6aa60de34703e2c5b65b4d4d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void remove(int indices[])", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["- */", "-public void remove(int indices[]) {", "-\tcheckWidget();", "+public void remove (int [] indices) {", "+\tcheckWidget ();", "-\tint count = getItemCount();", "-\tif (!(0 <= start && start <= end && end < count)) {", "+\tif (!(0 <= start && start <= end && end < items.length)) {", "-\tint last = -1;", "-\tfor (int i = 0; i < newIndices.length; i++) {", "-\t\tint index = newIndices[i];", "-\t\tif (index != last) {", "-\t\t\tSelectableItem item = getVisibleItem(index);", "-\t\t\tif (item != null) {", "-\t\t\t\titem.dispose();", "-\t\t\t} else {", "-\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);\t\t\t\t          ", "-\t\t\t}", "-\t\t\tlast = index;", "+\tint lastRemovedIndex = -1;", "+\tfor (int i = newIndices.length - 1; i >= 0; i--) {", "+\t\tif (newIndices [i] != lastRemovedIndex) {", "+\t\t\titems [newIndices [i]].dispose ();", "+\t\t\tlastRemovedIndex = newIndices [i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c9d557520ab6a07f68c6fffa0eac2b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "9ddcdbb4e2f8232033ea5a035258926c0e7ca0af", "commitAfterChange": "9c007f1b4d0b606114e3286638783ca5a29aa38a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\t * If a font context can not be created, return null.", "-\tif (!OS.XmFontListInitFontContext(buffer, handle)) return null;", "+\tif (!OS.XmFontListInitFontContext(buffer, handle)) {", "+\t\tSWT.error (SWT.ERROR_INVALID_FONT);", "+\t}", "-\t\t\t\t\t\t\t\t * cannot construct a FontData for these. Use the font", "-\t\t\t\t\t\t\t\t * name instead and return null if that fails.", "+\t\t\t\t\t\t\t\t * cannot construct a FontData for these. Try to use", "+\t\t\t\t\t\t\t\t * the font name instead.", "-\t\tif (data.length == 0) return null;", "+\t\tif (data.length == 0) SWT.error (SWT.ERROR_INVALID_FONT);", "-\t\t * cannot construct a FontData for these. Return null.", "+\t\t * cannot construct a FontData for these.", "-\t\treturn null;", "+\t\tSWT.error (SWT.ERROR_INVALID_FONT);"]}], "num": 458}