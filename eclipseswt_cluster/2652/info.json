{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005f4715d4a6659379e95959fe64fce3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e73afcdbc40c1828c941b40bc9b0c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\tint /*long*/ width = imageRep.pixelsWide();", "-\t\tint /*long*/ height = imageRep.pixelsHigh();", "-\t\tint /*long*/ bpr = imageRep.bytesPerRow();", "-\t\tint /*long*/ bpp = imageRep.bitsPerPixel();", "-\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "-\t\tint /*long*/ bitmapFormat = imageRep.bitmapFormat();", "-\t\tint /*long*/ dataSize = height * bpr;", "+\t\tlong /*int*/ width = imageRep.pixelsWide();", "+\t\tlong /*int*/ height = imageRep.pixelsHigh();", "+\t\tlong /*int*/ bpr = imageRep.bytesPerRow();", "+\t\tlong /*int*/ bpp = imageRep.bitsPerPixel();", "+\t\tlong /*int*/ bitmapData = imageRep.bitmapData();", "+\t\tlong /*int*/ bitmapFormat = imageRep.bitmapFormat();", "+\t\tlong /*int*/ dataSize = height * bpr;", "-\t\t\t\tint /*long*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\t\tlong /*int*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811796e6543a04ec2959e340613ff5d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "32bbc2d3fc6bfe8e8fc34078d362966521e4e07a", "commitAfterChange": "2aff52873acfa10a7da24f7c0214e9271f5321d0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\tbyte[] srcData = new byte[dataSize];", "-\t\tbyte imageData[] = new byte[dataSize];", "+\t\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "+\t\tbyte imageData[] = new byte[(int)/*64*/dataSize];", "-\t\t\tint bytesPerPlane = imageRep.bytesPerPlane();", "-\t\t\tint numPlanes = imageRep.numberOfPlanes();", "+\t\t\tint /*long*/ bytesPerPlane = imageRep.bytesPerPlane();", "+\t\t\tint /*long*/ numPlanes = imageRep.numberOfPlanes();", "-\t\t\tint nativeDataPlanes[] = new int[5];", "+\t\t\tint /*long*/ nativeDataPlanes[] = new int /*long*/ [5];", "-\t\t\tbyte dataPlanes[][] = new byte[numPlanes][bytesPerPlane];", "+\t\t\tbyte dataPlanes[][] = new byte[(int)/*64*/numPlanes][(int)/*64*/bytesPerPlane];", "-\t\t\tint colorComponents = OS.NSNumberOfColorComponents(colorSpace.id);", "+\t\t\tint /*long*/ colorComponents = OS.NSNumberOfColorComponents(colorSpace.id);", "-\t\tint dataFormat = imageRep.bitmapFormat();", "+\t\tint /*long*/ dataFormat = imageRep.bitmapFormat();", "-\t\tImageData data = new ImageData(width, height, (int)/*64*/bpp, palette, 4, srcData);", "+\t\tImageData data = new ImageData((int)/*64*/width, (int)/*64*/height, (int)/*64*/bpp, palette, 4, srcData);", "-\t\t\tint maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "-\t\t\tbyte[] maskData = new byte[height * maskBpl];", "+\t\t\tint /*long*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\tbyte[] maskData = new byte[(int)/*64*/(height * maskBpl)];"]}], "num": 2652}