{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d05f924637394b3a3834c950f475604e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c759bf507ddec8a582d1ded518dbaf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5c73f9dcffc9cba35c239dfadffba6c017b909a4", "commitAfterChange": "4e3d6fc0220c054dcd91e2daf263c9a562c7d4cc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (hHint != SWT.DEFAULT) bits |= hHint << 16;", "-\tint result = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, -1, bits);", "-\tint width = result & 0xFFFF, height = result >> 16;", "-\t", "-\t/*", "-\t* Feature in Windows.  The height returned by LVM_APPROXIMATEVIEWRECT", "-\t* includes the trim plus the height of the items plus one extra row.", "-\t* The fix is to subtract the height of one row from the result height.", "-\t*/", "+\tint result = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, -1, bits | 0xFFFF0000);", "+\tint width = result & 0xFFFF;", "-\theight -= (oneItem >> 16) - (empty >> 16);", "-\t", "+\tint itemHeight = (oneItem >> 16) - (empty >> 16);", "+\tint height = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0) * itemHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6d008e13f5f32f0e227e7a0c8a5853b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "90ac1ec2423f83c68a9e555770c8ebceed58ed58", "commitAfterChange": "3269f2ba1f8c41f6e6d5ceb7a17f30ff59fcc5e0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t", "+\t/*", "+\t* Feature in Windows.  The height returned by LVM_APPROXIMATEVIEWRECT", "+\t* includes the trim plus the height of the items plus one extra row.", "+\t* The fix is to subtract the height of one row from the result height.", "+\t*/", "+\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);", "+\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);", "+\theight -= (oneItem >> 16) - (empty >> 16);", "+\t", "-\t/*", "-\t* Feature in Windows.  For some reason, LVM_APPROXIMATEVIEWRECT", "-\t* does not include the space for the vertical scroll bar but does", "-\t* take into account the horizontal scroll bar when calculating the", "-\t* space needed to show the items.  The fix is to add in this space.", "-\t*/", "-\tif (((style & SWT.H_SCROLL) != 0) && (hHint != SWT.DEFAULT)) {", "+\tif ((style & SWT.H_SCROLL) != 0) {"]}], "num": 52711}