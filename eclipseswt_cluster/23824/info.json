{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "633fe27474d1dbe13397e78c4fb0b8eb", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ff43385463c859e6d11065bbbe9bd8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "caf0e50f2ed69e8f3417f92170052b7ad55e7e66", "commitAfterChange": "6e5f0eee4d45442c0288f27c28fcb62ccfb28775", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " public int getPreviousOffset (int offset, int movement)", "signatureAfterChange": " public int getPreviousOffset (int offset, int movement)", "diff": ["-\tcomputeRuns(null);", "-\tint length = text.length();", "-\tif (!(0 <= offset && offset <= length)) SWT.error(SWT.ERROR_INVALID_RANGE);", "-\tif (offset == 0) return 0;", "-\tif ((movement & SWT.MOVEMENT_CHAR) != 0) return offset - 1;", "-\tlength = segmentsText.length();", "-\toffset = translateOffset(offset);", "-\tint[] ppSp = new int[1];", "-\tint[] piNumScripts = new int[1];", "-\tOS.ScriptGetProperties(ppSp, piNumScripts);", "-\tint[] scripts = new int[piNumScripts[0]];", "-\tOS.MoveMemory(scripts, ppSp[0], scripts.length * 4);", "-\tSCRIPT_PROPERTIES properties = new SCRIPT_PROPERTIES();", "-\tSCRIPT_LOGATTR logAttr = new SCRIPT_LOGATTR();", "-\tboolean previousWhitespace = false;", "-\tint i = allRuns.length - 1;", "-\tint lastLangID  = -1;", "-\toffset--;", "-\tif (segments != null && segments.length > 2) {", "-\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\toffset--;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tfor (;  i >= 0; i--) {", "-\t\tStyleItem run = allRuns[i];", "-\t\tif (run.start <= offset && offset < run.start + run.length) {", "-\t\t\tif (run.lineBreak && !run.softBreak) return untranslateOffset(run.start);", "-\t\t\tbreakRun(run);", "-\t\t\tOS.MoveMemory(logAttr, run.psla + ((offset - run.start) * SCRIPT_LOGATTR.sizeof), SCRIPT_LOGATTR.sizeof);\t", "-\t\t\tpreviousWhitespace = run.tab ? true : logAttr.fWhiteSpace;", "-\t\t\tOS.MoveMemory(properties, scripts[run.analysis.eScript], SCRIPT_PROPERTIES.sizeof);", "-\t\t\tlastLangID = properties.langid;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\tfor (; i >= 0 && offset >= 0; i--) {", "-\t\tStyleItem run = allRuns[i];", "-\t\tif (run.start <= offset && offset < run.start + run.length) {", "-\t\t\tif (run.lineBreak && !run.softBreak) return untranslateOffset(run.start + run.length);", "-\t\t\tOS.MoveMemory(properties, scripts[run.analysis.eScript], SCRIPT_PROPERTIES.sizeof);", "-\t\t\tif (((movement & SWT.MOVEMENT_CLUSTER) != 0) && !properties.fNeedsCaretInfo) {", "-\t\t\t\treturn untranslateOffset(offset);", "-\t\t\t}", "-\t\t\tif ((movement & SWT.MOVEMENT_WORD) != 0) {", "-\t\t\t\tif (properties.langid != lastLangID) {", "-\t\t\t\t\tif (!previousWhitespace) return untranslateOffset(offset + 1);", "-\t\t\t\t}", "-\t\t\t\tlastLangID = properties.langid;", "-\t\t\t}", "-\t\t\tbreakRun(run);", "-\t\t\twhile (run.start <= offset && offset < run.start + run.length) {", "-\t\t\t\tOS.MoveMemory(logAttr, run.psla + ((offset - run.start) * SCRIPT_LOGATTR.sizeof), SCRIPT_LOGATTR.sizeof);", "-\t\t\t\tif (!logAttr.fInvalid) {", "-\t\t\t\t\tif ((movement & SWT.MOVEMENT_CLUSTER) != 0 && logAttr.fCharStop) return untranslateOffset(offset);", "-\t\t\t\t\tif ((movement & SWT.MOVEMENT_WORD) != 0) {", "-\t\t\t\t\t\tif (properties.fNeedsWordBreaking) {", "-\t\t\t\t\t\t\tif (logAttr.fWordStop) return untranslateOffset(offset);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (run.tab) logAttr.fWhiteSpace = true;", "-\t\t\t\t\t\t\tif (logAttr.fWhiteSpace && !previousWhitespace) return untranslateOffset(offset + 1);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tpreviousWhitespace = logAttr.fWhiteSpace;", "-\t\t\t\t}", "-\t\t\t\toffset--;", "-\t\t\t\tif (segments != null && segments.length > 2) {", "-\t\t\t\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\t\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\t\t\t\toffset--;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (run.tab) return untranslateOffset(run.start);", "-\t\t}", "-\t}", "-\treturn 0;", "+\treturn _getOffset (offset, movement, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3626e8e7713477a252279ba855840996", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "caf0e50f2ed69e8f3417f92170052b7ad55e7e66", "commitAfterChange": "6e5f0eee4d45442c0288f27c28fcb62ccfb28775", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextOffset (int offset, int movement)", "signatureAfterChange": " public int getNextOffset (int offset, int movement)", "diff": ["+\treturn _getOffset (offset, movement, true);", "+}", "-\tif (offset == length) return length;", "-\tif ((movement & SWT.MOVEMENT_CHAR) != 0) return offset + 1;", "-\tint[] ppSp = new int[1];", "-\tint[] piNumScripts = new int[1];", "-\tOS.ScriptGetProperties(ppSp, piNumScripts);", "-\tint[] scripts = new int[piNumScripts[0]];", "-\tOS.MoveMemory(scripts, ppSp[0], scripts.length * 4);", "-\tSCRIPT_PROPERTIES properties = new SCRIPT_PROPERTIES();", "-\tboolean previousWhitespace = false;", "-\tint i = 0;\t", "-\tint lastLangID  = -1;", "-\tfor (; i < allRuns.length; i++) {", "-\t\t\tif (run.lineBreak && !run.softBreak) return untranslateOffset(run.start + run.length);", "-\t\t\tOS.MoveMemory(logAttr, run.psla + ((offset - run.start) * SCRIPT_LOGATTR.sizeof), SCRIPT_LOGATTR.sizeof);\t", "-\t\t\tpreviousWhitespace = run.tab ? true : logAttr.fWhiteSpace;", "-\t\t\tOS.MoveMemory(properties, scripts[run.analysis.eScript], SCRIPT_PROPERTIES.sizeof);", "-\t\t\tlastLangID = properties.langid;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\toffset++;", "-\tif (segments != null && segments.length > 2) {", "-\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\toffset++;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tfor (; i < allRuns.length && offset < length; i++) {", "-\t\tStyleItem run = allRuns[i];", "-\t\tif (run.start <= offset && offset < run.start + run.length) {", "-\t\t\tif (run.tab) return untranslateOffset(offset);", "-\t\t\tif (run.lineBreak && !run.softBreak) return untranslateOffset(offset);", "-\t\t\tOS.MoveMemory(properties, scripts[run.analysis.eScript], SCRIPT_PROPERTIES.sizeof);", "-\t\t\tif (((movement & SWT.MOVEMENT_CLUSTER) != 0) && !properties.fNeedsCaretInfo) {", "-\t\t\t\treturn untranslateOffset(offset);", "-\t\t\t}", "-\t\t\tbreakRun(run);", "-\t\t\tif ((movement & SWT.MOVEMENT_WORD) != 0) {", "-\t\t\t\tif (properties.langid != lastLangID) {", "-\t\t\t\t\tOS.MoveMemory(logAttr, run.psla + ((offset - run.start) * SCRIPT_LOGATTR.sizeof), SCRIPT_LOGATTR.sizeof);", "-\t\t\t\t\tif (!logAttr.fWhiteSpace) return untranslateOffset(offset);", "-\t\t\t\t}", "-\t\t\t\tlastLangID = properties.langid;", "-\t\t\t}", "-\t\t\t\t\tif ((movement & SWT.MOVEMENT_CLUSTER) != 0 && logAttr.fCharStop) return untranslateOffset(offset);", "-\t\t\t\t\t\t\tif (!logAttr.fWhiteSpace && previousWhitespace) return untranslateOffset(offset);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tpreviousWhitespace = logAttr.fWhiteSpace;", "-\t\t\t\t}", "-\t\t\t\toffset++;", "-\t\t\t\tif (segments != null && segments.length > 2) {", "-\t\t\t\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\t\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\t\t\t\toffset++;", "-\t\t\t\t\t\t\tbreak;", "-\t}", "-\treturn text.length();"]}], "num": 23824}