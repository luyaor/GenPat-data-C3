{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c42c997d5c09a559e04e81b22c4fb0e9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41755b29e558f63f5730d358e20f702b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f86b9ebe2b0df4c73482603496c165ab5faee1d3", "commitAfterChange": "8980b86038eacdc7bd892692fe36237fa3f5ae14", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint width = 0, height = 0;", "+\tRectangle trim;", "-\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tint width = wHint == SWT.DEFAULT ? cellSize.x * 7 : wHint;", "-\t\tint height = hHint == SWT.DEFAULT ? cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y) : hHint;", "-\t\tRectangle trim = computeTrim(0, 0, width, height);", "-\t\treturn new Point(trim.width, trim.height);", "+\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = cellSize.x * 7;", "+\t\theight = cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y);", "+\t} else { /* SWT.DATE and SWT.TIME */", "+\t\tGC gc = new GC(text);", "+\t\tPoint textSize = gc.stringExtent(getComputeSizeString(style));", "+\t\tgc.dispose();", "+\t\ttrim = text.computeTrim(0, 0, textSize.x, textSize.y);", "+\t\tPoint buttonSize = up.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = trim.width + buttonSize.x;", "+\t\theight = Math.max(trim.height, buttonSize.y);", "-\treturn super.computeSize (wHint, hHint, changed);", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tint borderWidth = getBorderWidth ();", "+\treturn new Point (width + 2*borderWidth, height + 2*borderWidth);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f0ee6726f2256312dd5e9f4e46af25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setImage(Image image)", "signatureAfterChange": " public void setImage (Image value)", "diff": ["+}", "+public void setImage (Image value) {", "+\tcheckWidget ();", "+\tif (value == image) return;", "+\tif (value != null && value.equals (image)) return;\t/* same value */", "+\tsuper.setImage (value);", "+\t/* An image width change may affect the space available for the column's displayText. */", "+\tGC gc = new GC (parent);", "+\tcomputeDisplayText (gc);", "+\tgc.dispose ();", "+\t", "+\t/*", "+\t * If this is the first image being put into the header then the header", "+\t * height may be adjusted, in which case a full redraw is needed.", "+\t */", "+\tif (parent.headerImageHeight == 0) {", "+\t\tint oldHeaderHeight = parent.getHeaderHeight ();", "+\t\tparent.setHeaderImageHeight (value.getBounds ().height);", "+\t\tif (oldHeaderHeight != parent.getHeaderHeight ()) {", "+\t\t\t/* parent header height changed */", "+\t\t\tparent.header.redraw ();", "+\t\t\tparent.redraw ();", "+\t\t\treturn;", "+\t", "+\tparent.header.redraw (getX (), 0, width, parent.getHeaderHeight (), false);", "-}", "-public void setImage(Image image) {", "-\tsuper.setImage(image);", "-\tHeader header = parent.getHeader();", "-\theader.setHeaderHeight();", "-\theader.redraw();", "-\tparent.redraw();", "-}"]}], "num": 59370}