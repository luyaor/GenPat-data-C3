{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59e83710dd361d0597a71b18b1b112eb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6404d02eff3998ac77583368836065e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e58cf6554e3358e3a82c5cf71e8614e5ec2b587a", "commitAfterChange": "7252c074be7d5fd8626b7fe92856d52e0eef4b48", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["-\t\t\t\t\tif (vKey == -1) return false;", "+\t\t\t\t}", "+", "+\t\t\t\t/**", "+\t\t\t\t * Feature in Quartz. If the character doesn't map to any valid key, add the Unicode value to the", "+\t\t\t\t * event as a string and post it via key 0.  That will override the keyCode and arrive unmodified in the host app.", "+\t\t\t\t */", "+\t\t\t\tboolean postUnicode = false;", "+\t\t\t\t", "+\t\t\t\tif (vKey == -1) {", "+\t\t\t\t\tvKey = 0;", "+\t\t\t\t\tpostUnicode = true;", "-\t\t\t\treturn OS.CGPostKeyboardEvent((short)0, vKey, type == SWT.KeyDown) == 0;", "+\t\t\t\tint /*long*/ eventRef = OS.CGEventCreateKeyboardEvent(0, vKey, type == SWT.KeyDown);", "+\t\t\t\tif (eventRef != 0) {", "+\t\t\t\t\tif (postUnicode) {", "+\t\t\t\t\t\tchar eventString[] = new char[1];", "+\t\t\t\t\t\teventString[0] = event.character;", "+\t\t\t\t\t\tOS.CGEventKeyboardSetUnicodeString(eventRef, eventString.length, eventString);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.CGEventPost(OS.kCGSessionEventTap, eventRef);", "+\t\t\t\t\tOS.CFRelease(eventRef);", "+\t\t\t\t\treturn true;", "+\t\t\t\t} else {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50a944728e2587f4f2e13f38aaeb24b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "50138c6f461daaa13b049e1e573beb470c823204", "commitAfterChange": "f3a50e0aa4bfa208db2c8abc633e1bcf6cfb9ae7", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["+\t\t// TODO: Not sure if these calls have any effect on event posting.", "-\t\t\t\t * Feature in Quartz. If the character doesn't map to any valid key, add the Unicode value to the", "-\t\t\t\t * event as a string and post it via key 0.  That will override the keyCode and arrive unmodified in the host app.", "+\t\t\t\t * Bug(?) in UCKeyTranslate:  If event.keyCode doesn't map to a valid SWT constant and event.characer is 0 we still need to post an event.", "+\t\t\t\t * In Carbon, KeyTranslate eventually found a key that generated 0 but UCKeyTranslate never generates 0.", "+\t\t\t\t * When that happens, post an event from key 127, which does nothing.", "-\t\t\t\tboolean postUnicode = false;", "-\t\t\t\t", "-\t\t\t\tif (vKey == -1 && event.character != 0) {", "-\t\t\t\t\tvKey = 0;", "-\t\t\t\t\tpostUnicode = true;", "+\t\t\t\tif (vKey == -1 && event.character == 0) {", "+\t\t\t\t\tvKey = 127;", "-\t\t\t\tint /*long*/ eventRef = OS.CGEventCreateKeyboardEvent(0, vKey, type == SWT.KeyDown);", "-\t\t\t\tif (eventRef != 0) {", "-\t\t\t\t\tif (postUnicode) {", "-\t\t\t\t\t\tchar eventString[] = new char[1];", "-\t\t\t\t\t\teventString[0] = event.character;", "-\t\t\t\t\t\tOS.CGEventKeyboardSetUnicodeString(eventRef, eventString.length, eventString);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.CGEventPost(OS.kCGSessionEventTap, eventRef);", "-\t\t\t\t\tOS.CFRelease(eventRef);", "-\t\t\t\t\treturn true;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "+\t\t\t\tif (vKey == -1) return false;", "+\t\t\t\treturn OS.CGPostKeyboardEvent((short)0, vKey, type == SWT.KeyDown) == 0;"]}], "num": 15305}