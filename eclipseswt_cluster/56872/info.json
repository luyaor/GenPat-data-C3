{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57c9a8262d2f5bb17fc39728a9e41aee", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4044cd0d68792f494e45e4343c7b467f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "83784a0bd43bf551a0a4fb21e5409eeadecd384d", "commitAfterChange": "9a54c1aa04b815cd59a20141bb2dcedb14acb097", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 145, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tisRetrievingBadCert = false;", "+\t\tif (isRetrievingBadCert) {", "+\t\t\tisRetrievingBadCert = false;", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t}", "+", "+\t\t/*", "+\t\t* If a site with a bad certificate is being encountered for the first time", "+\t\t* then store the request for future reference, set the isRetrievingBadCert", "+\t\t* flag and re-navigate to the site so that notification callbacks can be", "+\t\t* hooked on it to get its certificate info.", "+\t\t*/", "+\t\tswitch (aStatus) {", "+\t\t\tcase XPCOM.SSL_ERROR_BAD_CERT_DOMAIN:", "+\t\t\tcase XPCOM.SEC_ERROR_CA_CERT_INVALID:", "+\t\t\tcase XPCOM.SEC_ERROR_EXPIRED_CERTIFICATE:", "+\t\t\tcase XPCOM.SEC_ERROR_EXPIRED_ISSUER_CERTIFICATE:", "+\t\t\tcase XPCOM.SEC_ERROR_INADEQUATE_KEY_USAGE:", "+\t\t\tcase XPCOM.SEC_ERROR_UNKNOWN_ISSUER:", "+\t\t\tcase XPCOM.SEC_ERROR_UNTRUSTED_CERT:", "+\t\t\tcase XPCOM.SEC_ERROR_UNTRUSTED_ISSUER: {", "+\t\t\t\tnew nsISupports (aRequest).AddRef ();", "+\t\t\t\tif (badCertRequest != 0) {", "+\t\t\t\t\tnew nsISupports (badCertRequest).Release ();", "+\t\t\t\t}", "+\t\t\t\tbadCertRequest = aRequest;", "+\t\t\t\tisRetrievingBadCert = true;", "+\t\t\t\tnavigate (aRequest);", "+\t\t\t\treturn XPCOM.NS_OK;", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f045eb4f5467b47d901963e281865084", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d240d464637c5a2424e20100c297125dcf1f1a97", "commitAfterChange": "2b47911509474905492072ce886efa431a9c5063", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["+\t\t\t\tswitch (inputs.wVk) {", "+\t\t\t\t\tcase OS.VK_INSERT:", "+\t\t\t\t\tcase OS.VK_DELETE:", "+\t\t\t\t\tcase OS.VK_HOME:", "+\t\t\t\t\tcase OS.VK_END:", "+\t\t\t\t\tcase OS.VK_PRIOR:", "+\t\t\t\t\tcase OS.VK_NEXT:", "+\t\t\t\t\tcase OS.VK_UP:", "+\t\t\t\t\tcase OS.VK_DOWN:", "+\t\t\t\t\tcase OS.VK_LEFT:", "+\t\t\t\t\tcase OS.VK_RIGHT:", "+\t\t\t\t\tcase OS.VK_NUMLOCK:", "+\t\t\t\t\tcase OS.VK_SNAPSHOT:", "+\t\t\t\t\tcase OS.VK_CANCEL:", "+\t\t\t\t\tcase OS.VK_DIVIDE:", "+\t\t\t\t\t\tinputs.dwFlags |= OS.KEYEVENTF_EXTENDEDKEY;", "+\t\t\t\t}"]}], "num": 56872}