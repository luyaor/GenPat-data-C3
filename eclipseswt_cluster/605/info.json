{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5bc9f482b2007132992815cf57d0e12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93e65edabf0def605f5ac11c54ad55ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "ac5ada71da05236ec74a5b4160103e096df862e7", "commitAfterChange": "9f7ad410770e89556c4bf751d776d58a32b313e7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setImages (Image [] images)", "signatureAfterChange": " public void setImages (Image [] images)", "diff": ["-\t\tint index = -1, width = 0, height = 0;", "-\t\tfor (int i = 0; i < images.length; i++) {", "-\t\t\tImage image = images[i];", "-\t\t\tRectangle bounds = image.getBounds();", "-\t\t\tif (bounds.width > width || bounds.height > height) {", "-\t\t\t\twidth = bounds.width;", "-\t\t\t\theight = bounds.height;", "-\t\t\t\tindex = i;", "-\t\t\t}", "+\t\tif (images != null && images.length > 1) {", "+\t\t\tImage [] bestImages = new Image [images.length];", "+\t\t\tSystem.arraycopy (images, 0, bestImages, 0, images.length);", "+\t\t\tsort (bestImages);", "+\t\t\timages = bestImages;", "-\t\tOS.SetApplicationDockTileImage (images [index].handle);", "+\t\tOS.SetApplicationDockTileImage (images [0].handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1096983c3721ec63879d209480c9c30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 26, "signatureBeforeChange": " void setImageHeight(int value)", "signatureAfterChange": " Rectangle getHierarchyIndicatorRect()", "diff": ["+ */", "+Rectangle getHierarchyIndicatorRect() {", "+\tint itemHeight = getItemHeight();", "+\tImage hierarchyImage;", "+\tRectangle imageBounds;", "+\tif (hierarchyIndicatorRect == null && itemHeight != -1) {", "+\t\thierarchyImage = getCollapsedImage();", "+\t\tif (hierarchyImage != null) {", "+\t\t \timageBounds = hierarchyImage.getBounds();", "+\t\t}", "+\t\telse {", "+\t\t\timageBounds = new Rectangle(0, 0, 0, 0);", "+\t\t}", "+\t\thierarchyIndicatorRect = new Rectangle(", "+\t\t\t0,", "+\t\t\t(itemHeight - imageBounds.height) / 2 + (itemHeight - imageBounds.height) % 2,", "+\t\t\timageBounds.width,", "+\t\t\timageBounds.height);", "+\treturn hierarchyIndicatorRect;", "+}", "-}", "-void setImageHeight(int value) {", "-\timageHeight = value;", "-\titemHeight = Math.max(fontHeight, imageHeight) + 2 * getCellPadding();", "-}"]}], "num": 605}