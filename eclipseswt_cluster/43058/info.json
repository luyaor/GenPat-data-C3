{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77109c1a3dfceb3d82c3741ed70299ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd20a043c56fc295360767c0582fc5e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "2b3120470b46968368044df3f94129d586bc41d5", "commitAfterChange": "30ea0c96d9ff7cdaadcc4282f37da7eaa76961bd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t/*", "-\t* Feature in GTK.  Calling gtk_tree_view_column_set_sizing() with ", "-\t* GTK_TREE_VIEW_COLUMN_AUTOSIZE causes the tree view", "-\t* column to be not resizable.  The fix is to reset this afterawards.", "-\t*/ ", "-\tboolean resizable = OS.gtk_tree_view_column_get_resizable (handle);", "-\tOS.gtk_tree_view_column_set_sizing (handle, OS.GTK_TREE_VIEW_COLUMN_AUTOSIZE);", "-\tOS.gtk_tree_view_column_set_resizable (handle, resizable);", "-\tOS.gtk_tree_view_column_set_visible (handle, true);", "+\tint width = 0;", "+\tif (buttonHandle != 0) {", "+\t\tGtkRequisition requisition = new GtkRequisition ();", "+\t\tOS.gtk_widget_size_request (buttonHandle, requisition);", "+\t\twidth = requisition.width;", "+\t}", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\t//NOT DONE", "+\t} else {", "+\t\tint iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\tOS.gtk_tree_model_get_iter_first (parent.modelHandle, iter);", "+\t\tint /*long*/ renderers = OS.gtk_tree_view_column_get_cell_renderers (handle);", "+\t\tdo {", "+\t\t\twidth = Math.max (width, parent.calculateWidth (handle, iter, renderers));", "+\t\t} while (OS.gtk_tree_model_iter_next(parent.modelHandle, iter));\t\t", "+\t\tif (renderers != 0) OS.g_list_free (renderers);", "+\t\tOS.g_free (iter);", "+\t}", "+\tsetWidth(width);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7995f51e448c95dfb1bdb433f6e689f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "c5942a76a517977b0aac721a00f2eba9968c5b3c", "commitAfterChange": "1153aefee4c3f23880dc32e587d886b736949179", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tNSOpenPanel panel = NSOpenPanel.openPanel();", "-    OS.objc_msgSend(panel.id, OS.sel_setShowsHiddenFiles_, true);", "+\tpanel = NSOpenPanel.openPanel();", "+", "+\t// Install a callback so editing keys work.", "+\tint /*long*/ panelClass = 0;", "+\tint /*long*/ swtPanelClass = 0;", "+\tString className = \"SWTFileDialogPanel\";", "+\tCallback performKeyEquivalentCallback = null;", "+\tperformKeyEquivalentCallback = new Callback(this, \"performKeyEquivalent\", 3);", "+\tint /*long*/ proc = performKeyEquivalentCallback.getAddress();", "+\tif (proc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tswtPanelClass = OS.objc_allocateClassPair(OS.object_getClass(panel.id), className, 0);", "+\tOS.class_addMethod(swtPanelClass, OS.sel_performKeyEquivalent_, proc, \"@:@\");", "+\tOS.objc_registerClassPair(swtPanelClass);", "+\tpanelClass = OS.object_setClass(panel.id, swtPanelClass);", "+\t", "+\tOS.objc_msgSend(panel.id, OS.sel_setShowsHiddenFiles_, true);", "+\tOS.object_setClass(panel.id, panelClass);", "+\tOS.objc_disposeClassPair(swtPanelClass);", "+\tif (performKeyEquivalentCallback != null) performKeyEquivalentCallback.dispose();"]}], "num": 43058}