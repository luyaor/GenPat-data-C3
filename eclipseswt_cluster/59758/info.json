{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49f6e52c6066170011cb78747f9be9e5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe7fe17c4cf7d314833d8e95b3e2a3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r void createItem (CoolItem item, int index)", "diff": ["-\tint itemCount = getItemCount();\r", "+\tint itemCount = getItemCount(), row = 0;\r", "-\tif (index < itemCount) {\r", "-\t\tfor (int i = 0; i < rows.size(); i++) {\r", "-\t\t\tVector row = (Vector) rows.elementAt(i);\r", "-\t\t\tif (row.size() > index) {\r", "-\t\t\t\trow.insertElementAt(item, index);\r", "-\t\t\t\treturn;\r", "-\t\t\t} else {\r", "-\t\t\t\tindex -= row.size();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tVector lastRow = (Vector) rows.lastElement();\r", "-\t\tlastRow.addElement(item);\t\r", "+\tif (items.length == 0) {\r", "+\t\titems = new CoolItem[1][1];\r", "+\t\titems[0][0] = item;\t\r", "+\telse {\r", "+\t\tint i = index;\r", "+\t\t/* find the row to insert into */\r", "+\t\tif (index < itemCount) {\r", "+\t\t\twhile (i > items[row].length) {\r", "+\t\t\t\ti -= items[row].length;\r", "+\t\t\t\trow++;\r", "+\t\t\t}   \r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\trow = items.length - 1;\r", "+\t\t\ti = items[row].length;\t\r", "+\t\t}\r", "+\t\tint oldLength = items[row].length;\r", "+\t\tCoolItem[] newRow = new CoolItem[oldLength + 1];\r", "+\t\tSystem.arraycopy(items[row], 0, newRow, 0, i);\r", "+\t\tnewRow[index] = item;\r", "+\t\tSystem.arraycopy(items[row], i, newRow, i + 1, oldLength - i);\r", "+\t\titems[row] = newRow;\r", "+\t}\r", "+\titem.requestedWidth = CoolItem.MINIMUM_WIDTH;\r", "+\trelayout();\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2375e4865cc7f04a260542cf81b9b662", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public void setWrapIndices (int[] data)", "signatureAfterChange": "\r public void setWrapIndices (int[] data)", "diff": ["-\tCoolItem[] items = getItems();\r", "-\trows = new Vector(5);\r", "+\tif (items.length == 0) return;\r", "+\r", "+\tCoolItem[] allItems = getItems();\r", "+\titems = new CoolItem[0][];\r", "+\tCoolItem[][] newItems;\r", "+\tCoolItem[] row;\r", "-\tfor (int i = 0; i < data.length; i++) {\r", "-\t\tint nextWrap = data[i];\r", "-\t\tVector row = new Vector(10);\r", "-\t\twhile (itemIndex < nextWrap) {\r", "-\t\t\trow.addElement(items[itemIndex]);\r", "-\t\t\titemIndex++;\r", "-\t\t}\r", "-\t\trows.addElement(row);\r", "+\tfor (int i = 0; i <= data.length; i++) {\r", "+\t\tint nextWrap = (i < data.length) ? data[i] : allItems.length;\r", "+\t\trow = new CoolItem[nextWrap - itemIndex];\r", "+\t\tSystem.arraycopy(allItems, itemIndex, row, 0, row.length); \r", "+\t\titemIndex += row.length;\r", "+\t\tnewItems = new CoolItem[items.length + 1][];\r", "+\t\tSystem.arraycopy(items, 0, newItems, 0, items.length);\r", "+\t\tnewItems[items.length] = row;\r", "+\t\titems = newItems;\r", "-\tVector row = new Vector(10);\r", "-\twhile (itemIndex < items.length) {\r", "-\t\trow.addElement(items[itemIndex]);\r", "-\t\titemIndex++;\r", "-\t}\r", "-\trows.addElement(row);\r"]}], "num": 59758}