{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1764d40d4f7f310fd3012f0b4c7d6495", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db5372f5e1a7701d3c09d192caf0c8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "62b114225776c09f8a6570dde053dd94358f28d9", "commitAfterChange": "88d0b371a82ed8f1081c2933382ac5c0ad56880e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\toffset += step;", "-\tif (segments != null && segments.length > 2) {", "-\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\toffset += step;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "+\toffset = validateOffset(offset, step);", "-\t\toffset += step;", "-\t\tif (segments != null && segments.length > 2) {", "-\t\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\t\toffset += step;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\toffset = validateOffset(offset, step);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c02290e42de2ef289376df472e0a239", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java", "commitBeforeChange": "3c4a8b62ca1ee7cc85cd47688d169f0a9f19ea1c", "commitAfterChange": "6f748e5e07cbf0fb04ece7ec11c71d19c851a689", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tStringBuffer getChildCode (Control control, int i)", "signatureAfterChange": " \tStringBuffer getChildCode (Control control, int i)", "diff": ["-\t\t\tfor (int j = 1; j < 3; j++) {", "-\t\t\t\tcode.append (\"\\t\\tTableItem tableItem\" + j + \" = new TableItem (\" + names [i] + \", SWT.NONE);\\n\");", "-\t\t\t\tcode.append (\"\\t\\ttableItem\" + j + \".setText (\\\"Item\" + j + \"\\\");\\n\");", "-\t\t\t}", "+\t\t\tcode.append (\"\\t\\tfor (int i = 0; i < 2; i++) {\\n\");", "+\t\t\tcode.append (\"\\t\\tTableItem tableItem = new TableItem (\" + names [i] + \", SWT.NONE);\\n\");", "+\t\t\tcode.append (\"\\t\\t\\ttableItem.setText (\\\"Item\\\" + i);\\n}\");", "-\t\t\tfor (int j = 1; j < 3; j++) {", "-\t\t\t\tcode.append (\"\\t\\tTreeItem treeItem\" + j + \" = new TreeItem (\" + names [i] + \", SWT.NONE);\\n\");", "-\t\t\t\tcode.append (\"\\t\\ttreeItem\" + j + \".setText (\\\"Item\" + j + \"\\\");\\n\");", "-\t\t\t}", "+\t\t\tcode.append (\"\\t\\tfor (int i = 0; i < 2; i++) {\\n\");", "+\t\t\tcode.append (\"\\t\\tTreeItem treeItem = new TreeItem (\" + names [i] + \", SWT.NONE);\\n\");", "+\t\t\tcode.append (\"\\t\\t\\ttreeItem.setText (\\\"Item\\\" + i);\\n}\");", "-\t\t\tfor (int j = 1; j < 3; j++) {", "-\t\t\t\tcode.append (\"\\t\\tToolItem toolItem\" + j + \" = new ToolItem (\" + names [i] + \", SWT.NONE);\\n\");", "-\t\t\t\tcode.append (\"\\t\\ttoolItem\" + j + \".setText (\\\"Item\" + j + \"\\\");\\n\");", "-\t\t\t}", "+\t\t\tcode.append (\"\\t\\tfor (int i = 0; i < 2; i++) {\\n\");", "+\t\t\tcode.append (\"\\t\\tToolItem toolItem = new ToolItem (\" + names [i] + \", SWT.NONE);\\n\");", "+\t\t\tcode.append (\"\\t\\t\\ttoolItem.setText (\\\"Item\\\" + i);\\n}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8e78da44f0ecd1370544e6aecf06ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-", "-\tint[] types = new int[INTERNAL_COLUMNS];", "-\tfor (int j=0; j<MAX_COLUMNS; j++) {", "-\t\ttypes[j] = OS.G_TYPE_STRING();", "-\t\ttypes[j+MAX_COLUMNS] = OS.gdk_pixbuf_get_type();", "-\t}", "-\ttypes[2*MAX_COLUMNS] = OS.G_TYPE_BOOLEAN();", "-\ttypes[2*MAX_COLUMNS+1] = OS.GDK_TYPE_COLOR();", "-\ttypes[2*MAX_COLUMNS+2] = OS.GDK_TYPE_COLOR();", "-\tmodelHandle = OS.gtk_list_store_newv(INTERNAL_COLUMNS, types);", "+\t/*", "+\t* Columns:", "+\t* 0 - check", "+\t* 1 - foreground", "+\t* 2 - background", "+\t* 3 - text", "+\t* 4 - pixbuf", "+\t* 5 - ...", "+\t*/", "+\tint [] types = getColumnTypes (1);", "+\tmodelHandle = OS.gtk_list_store_newv (types.length, types);", "-\thandle = OS.gtk_tree_view_new_with_model(modelHandle);", "+\thandle = OS.gtk_tree_view_new_with_model (modelHandle);", "-", "+\tcreateColumn (null, 0);", "-\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_EXTENDED : OS.GTK_SELECTION_BROWSE;", "-\tint selectionObject = OS.gtk_tree_view_get_selection(handle);", "-\tOS.gtk_tree_selection_set_mode(selectionObject, mode);", "-\tOS.gtk_tree_view_set_headers_visible(handle, false);\t", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (scrolledHandle);", "+\tOS.gtk_widget_show (handle);", "+\t", "+\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_MULTIPLE : OS.GTK_SELECTION_BROWSE;", "+\tint selectionHandle = OS.gtk_tree_view_get_selection (handle);", "+\tOS.gtk_tree_selection_set_mode (selectionHandle, mode);", "+\tOS.gtk_tree_view_set_headers_visible (handle, false);\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-", "-\tfakeColumn = _createColumnHandle(index, null);", "-\tOS.gtk_tree_view_insert_column(handle, fakeColumn, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae58a557b1a6013b1a877ac22d61ef4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "e68f6dd7961c12937e9660a6a57b980c17ed895a", "commitAfterChange": "6c6dfbde54f73e110515be4b620f4ab18c1f4c84", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 44, "signatureBeforeChange": "  long handleLoadFinished (long uri, boolean top)", "signatureAfterChange": "  long handleLoadFinished (long uri, boolean top)", "diff": ["+", "-\t\t\t\tTitleEvent newEvent = new TitleEvent (browser);", "-\t\t\t\tnewEvent.display = browser.getDisplay ();", "-\t\t\t\tnewEvent.widget = browser;", "-\t\t\t\tnewEvent.title = url;", "-\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "-\t\t\t\t\ttitleListeners[i].changed (newEvent);", "-\t\t\t\t}", "+\t\t\t\tfireNewTitleEvent(url);", "-\t\tProgressEvent progress = new ProgressEvent (browser);", "-\t\tprogress.display = browser.getDisplay ();", "-\t\tprogress.widget = browser;", "-\t\tprogress.current = MAX_PROGRESS;", "-\t\tprogress.total = MAX_PROGRESS;", "-\t\tfor (int i = 0; i < progressListeners.length; i++) {", "-\t\t\tprogressListeners[i].completed (progress);", "-\t\t}", "+\t\tfireProgressCompletedEvent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd17023dd1e45d26c8774ae1abada4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f3f9b39ec3ea3e006b3974132956c8ab4b93a80c", "commitAfterChange": "f2db948a74aeccec220993476f699a0c8afe20e9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " Font getFont(int style)", "signatureAfterChange": " Font getFont(int style)", "diff": ["-\tFontData[] fontDatas;", "-\t\t\tfontDatas = regularFont.getFontData();", "-\t\t\tfor (int i = 0; i < fontDatas.length; i++) {", "-\t\t\t\tfontDatas[i].setStyle(style);", "-\t\t\t}", "-\t\t\treturn boldFont = new Font(device, fontDatas);", "+\t\t\treturn boldFont = new Font(device, getFontData(style));", "-\t\t\tfontDatas = regularFont.getFontData();", "-\t\t\tfor (int i = 0; i < fontDatas.length; i++) {", "-\t\t\t\tfontDatas[i].setStyle(style);", "-\t\t\t}", "-\t\t\treturn italicFont = new Font(device, fontDatas);", "+\t\t\treturn italicFont = new Font(device, getFontData(style));", "-\t\t\tfontDatas = regularFont.getFontData();", "-\t\t\tfor (int i = 0; i < fontDatas.length; i++) {", "-\t\t\t\tfontDatas[i].setStyle(style);", "-\t\t\t}", "-\t\t\treturn boldItalicFont = new Font(device, fontDatas);", "+\t\t\treturn boldItalicFont = new Font(device, getFontData(style));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b258c87b88d9fe7b792fa81e0c2b70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r static Program getProgram (byte [] key)", "signatureAfterChange": "\r \r static Program getProgram (String key)", "diff": ["-static Program getProgram (byte [] key) {\r", "-\r", "-\t/* Command */\r", "-\t/* Use the character encoding for the default locale */\r", "-\tbyte [] COMMAND = Converter.wcsToMbcs (0, \"\\\\shell\\\\open\\\\command\", true);\r", "-\tint length = 0;\r", "-\twhile (length < key.length && key [length] != 0) length++;\r", "-\tfor (int i=0; i<COMMAND.length; i++) key [length + i] = COMMAND [i];\r", "-\tkey [length + COMMAND.length] = 0;\r", "-\tString command = getKeyValue (key);\r", "-\tif (command == null || command.length () == 0) return null;\r", "-\r", "+static Program getProgram (String key) {\r", "+\t\r", "-\tkey [length] = 0;\t\r", "-\t\t\r", "+\r", "+\t/* Command */\r", "+\tString COMMAND = \"\\\\shell\\\\open\\\\command\";\r", "+\tString command = getKeyValue (key + COMMAND);\r", "+\tif (command == null || command.length () == 0) return null;\r", "+\r", "-\t/* Use the character encoding for the default locale */\r", "-\tbyte [] DEFAULT_ICON = Converter.wcsToMbcs (0, \"\\\\DefaultIcon\", true);\r", "-\tfor (int i=0; i<DEFAULT_ICON.length; i++) key [length + i] = DEFAULT_ICON [i];\r", "-\tkey [length + DEFAULT_ICON.length] = 0;\r", "-\tString iconName = getKeyValue (key);\r", "+\tString DEFAULT_ICON = \"\\\\DefaultIcon\";\r", "+\tString iconName = getKeyValue (key + DEFAULT_ICON);\r"]}], "num": 47087}