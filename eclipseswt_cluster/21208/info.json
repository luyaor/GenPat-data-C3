{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a866503526eadc85e754d4108d18ab07", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58cb84aae4a9b0384d4d816c63d2a1a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void cut ()", "signatureAfterChange": " public void cut ()", "diff": ["+\tchar [] oldText = null;", "+\t\t\toldText = getEditText (oldSelection.x, oldSelection.y - 1, true);", "-\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "-\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tif (txnObject == 0) {", "+\t\t\t\t\tinsertEditText (newText);", "+\t\t\t\t} else {", "+\t\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "+\t\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\t}", "-\t\tOS.TXNCut (txnObject);", "-", "-\t\t/*", "-\t\t* Feature in the Macintosh.  When an empty string is set in the TXNObject,", "-\t\t* the font attributes are cleared.  The fix is to reset them.", "-\t\t*/", "-\t\tif (OS.TXNDataSize (txnObject) / 2 == 0) setFontStyle (font);", "+\t\tif (txnObject == 0) {", "+\t\t\tif (oldText == null) oldText = getEditText (oldSelection.x, oldSelection.y - 1, true);", "+\t\t\tcopy (oldText);", "+\t\t\tinsertEditText (\"\");", "+\t\t} else {", "+\t\t\tOS.TXNCut (txnObject);", "+\t", "+\t\t\t/*", "+\t\t\t* Feature in the Macintosh.  When an empty string is set in the TXNObject,", "+\t\t\t* the font attributes are cleared.  The fix is to reset them.", "+\t\t\t*/", "+\t\t\tif (OS.TXNDataSize (txnObject) / 2 == 0) setFontStyle (font);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c3200fd9c17d5227f220aa9ac7d76a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "b12a0685cf8f3a3f3655b377dae11b353df34bc5", "commitAfterChange": "f86cb451dd44bdb3dd3f72edaedea4c9f49ce379", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "  void addEventMethods (int cls, int proc2, int proc3, int drawRectProc)", "signatureAfterChange": "  void addEventMethods (int cls, int proc2, int proc3, int drawRectProc, int hitTestProc)", "diff": ["-void addEventMethods (int /*long*/ cls, int /*long*/ proc2, int /*long*/ proc3, int /*long*/ drawRectProc) {", "-\tOS.class_addMethod(cls, OS.sel_mouseDown_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_mouseUp_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_scrollWheel_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_rightMouseDown_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_rightMouseUp_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_otherMouseDown_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_otherMouseUp_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_mouseDragged_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_mouseMoved_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_mouseEntered_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_mouseExited_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_menuForEvent_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_resignFirstResponder, proc2, \"@:\");", "-\tOS.class_addMethod(cls, OS.sel_becomeFirstResponder, proc2, \"@:\");", "-\tOS.class_addMethod(cls, OS.sel_keyDown_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_keyUp_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_flagsChanged_, proc3, \"@:@\");", "-\tOS.class_addMethod(cls, OS.sel_drawRect_, drawRectProc, \"@:{NSRect}\");", "+void addEventMethods (int /*long*/ cls, int /*long*/ proc2, int /*long*/ proc3, int /*long*/ drawRectProc, int /*long*/ hitTestProc) {", "+\tif (proc3 != 0) {", "+\t\tOS.class_addMethod(cls, OS.sel_mouseDown_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_mouseUp_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_scrollWheel_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_rightMouseDown_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_rightMouseUp_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_rightMouseDragged_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_otherMouseDown_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_otherMouseUp_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_otherMouseDragged_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_mouseDragged_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_mouseMoved_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_mouseEntered_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_mouseExited_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_menuForEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_keyDown_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_keyUp_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_flagsChanged_, proc3, \"@:@\");", "+\t}", "+\tif (proc2 != 0) {", "+\t\tOS.class_addMethod(cls, OS.sel_resignFirstResponder, proc2, \"@:\");", "+\t\tOS.class_addMethod(cls, OS.sel_becomeFirstResponder, proc2, \"@:\");", "+\t}", "+\tif (drawRectProc != 0) {", "+\t\tOS.class_addMethod(cls, OS.sel_drawRect_, drawRectProc, \"@:{NSRect}\");", "+\t}", "+\tif (hitTestProc != 0) {", "+\t\tOS.class_addMethod(cls, OS.sel_hitTest_, hitTestProc, \"@:{NSPoint}\");\t\t", "+\t}"]}], "num": 21208}