{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5809adbe2ab70d6e0e19dfb59fcde6f7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1904817ac08a4d4e85672e5c27de6106", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tfor (int i=0; i<parent.itemCount; i++) {", "-\t\tTableItem item = parent.items [i];", "-\t\tif (item != null && !item.isDisposed () && item.cached) {", "-\t\t\twidth = Math.max (width, item.calculateWidth (index, gc, true));", "-\t\t\tif (isDisposed ()) {", "-\t\t\t\tgc.dispose ();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (gc.isDisposed ()) gc = new GC (parent);", "-\t\t}", "-\t}", "+\twidth = Math.max (width, parent.calculateWidth (parent.items, index, gc));", "-\tsetWidth (width + parent.getInsetWidth ());", "+\tsetWidth (width);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742905c5e9cb5b7ff7d6d737c1b65c08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tint index = parent.indexOf (this);", "-\tfor (int i=0; i<parent.itemCount; i++) {", "-\t\tTreeItem item = parent.items [i];", "-\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\twidth = Math.max (width, item.calculateWidth (index, gc, true, true));", "-\t\t\tif (isDisposed ()) {", "-\t\t\t\tgc.dispose ();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (gc.isDisposed ()) gc = new GC (parent);", "-\t\t}", "-\t}", "+\twidth = Math.max(width, parent.calculateWidth(parent.items, parent.indexOf (this), gc, true));", "-\tsetWidth (width + parent.getInsetWidth ());", "+\tsetWidth (width);"]}], "num": 20001}