{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75d8264ef213f6d9375f8522d52033a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8a00f7db3fc82e74ea23f7ae46aae25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "935ace2cbc57275019cedd46fc05396ccf2cf8d8", "commitAfterChange": "5ae5817c2d9c12e35382e07be1cb0206a429879a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t\tfloat alignment = 0.0f;", "+\t\tif ((style & SWT.CENTER) != 0) alignment = 0.5f;", "+\t\tif ((style & SWT.RIGHT) != 0) alignment = 1.0f;", "+\t\tif (alignment > 0.0f) {", "+\t\t\tOS.gtk_entry_set_alignment (handle, alignment);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cab898b98625a17051b357762ac300cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "3d8fb82b2cacc0f1f3c020198bb502ce5a6d6406", "commitAfterChange": "a428912aa1bce642fa5ebbda2839ae443788d14b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "signatureAfterChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "diff": ["-\tif (hooks (SWT.Verify)) {", "-\t\tString text = new NSString(replacementString).getString();", "-\t\tNSEvent currentEvent = display.application.currentEvent();", "-\t\tString newText = verifyText(text, (int)/*64*/range.location, (int)/*64*/(range.location+range.length), currentEvent);", "-\t\tif (newText == null) return false;", "-\t\tif ((style & SWT.SINGLE) != 0) {", "-\t\t\tif (text != newText || echoCharacter != '\\0') {", "-\t\t\t\tinsertEditText(newText);", "-\t\t\t\tresult = false;", "+\tif (!hooks(SWT.Verify) && echoCharacter =='\\0') return result;", "+\tString text = new NSString(replacementString).getString();", "+\tString newText = text;", "+\tif (hooks (SWT.Verify)) newText = verifyText(text, (int)/*64*/range.location, (int)/*64*/(range.location+range.length),  display.application.currentEvent());", "+\tif (newText == null) return false;", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif (text != newText || echoCharacter != '\\0') {", "+\t\t\t //handle backspace and delete", "+\t\t\tif (range.length == 1) {", "+\t\t\t\tNSText editor = new NSText(id);", "+\t\t\t\teditor.setSelectedRange (range);", "-\t\t} else {", "-\t\t\tif (text != newText) {", "-\t\t\t\tNSTextView widget = (NSTextView) view;", "-\t\t\t\tPoint selection = getSelection();", "-\t\t\t\tNSRange selRange = new NSRange();", "-\t\t\t\tselRange.location = selection.x;", "-\t\t\t\tselRange.length = selection.x + selection.y;", "-\t\t\t\twidget.textStorage ().replaceCharactersInRange (selRange, NSString.stringWith(newText));", "-\t\t\t\tresult = false;", "-\t\t\t}", "+\t\t\tinsertEditText(newText);", "+\t\t\tresult = false;", "-\t\tif (!result) sendEvent (SWT.Modify);", "+\t} else {", "+\t\tif (text != newText) {", "+\t\t\tNSTextView widget = (NSTextView) view;", "+\t\t\tPoint selection = getSelection();", "+\t\t\tNSRange selRange = new NSRange();", "+\t\t\tselRange.location = selection.x;", "+\t\t\tselRange.length = selection.x + selection.y;", "+\t\t\twidget.textStorage ().replaceCharactersInRange (selRange, NSString.stringWith(newText));", "+\t\t\tresult = false;", "+\t\t}", "+\tif (!result) sendEvent (SWT.Modify);"]}], "num": 33699}