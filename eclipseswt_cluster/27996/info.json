{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfc8ca15478f2025617226ed84190da6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d273d3bb5563604ab91dc3b60ef03a35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "91641213a9543d574378e9b077ad05b401950e46", "commitAfterChange": "9a4b919a8175cf47cbc5a0174bd44087df0c1f0e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\t\tgc.drawImage (image, struct.left, struct.top + 2);", "+\t\t/*", "+\t\t* Bug in Windows.  When a bitmap is included in the", "+\t\t* menu bar, the HDC seems to already include the left", "+\t\t* coordinate.  The fix is to ignore this value when", "+\t\t* the item is in a menu bar.", "+\t\t*/", "+\t\tint x = (parent.style & SWT.BAR) != 0 ? (OS.IsWin95 ? 4 : 2) : struct.left;", "+\t\tgc.drawImage (image, x, struct.top + 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d03f8492a18b3ea31fed849788617b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "4bcf525baeab89805196495f16e987b6301ec196", "commitAfterChange": "559b15b4991bf282c48f97c8daab01e57169da1c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["+\t/*\r", "+\t* Feature in Windows. Is possible that the item at index zero\r", "+\t* has the RBBS_BREAK flag set. When a new item is inserted at\r", "+\t* position zero, the previous item at position zero moves to\r", "+\t* a new line.  The fix is to detect this case and clear the\r", "+\t* RBBS_BREAK flag on the previous item before inserting the\r", "+\t* new item.\r", "+\t*/\r", "+\tif (index == 0 && count > 0) {\r", "+\t\tgetItem (0).setWrap (false); \r", "+\t}\r", "+\t\r", "+\t/* Insert the item */\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b757814474d93569ac64053b2ba228", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "bce0ee39ea7f53c590750aa4c0f79bface1f2851", "commitAfterChange": "a3eb8313e949f9cb4d7d769018cd74a5e335546c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+\t\t/*", "+\t\t* Bug in Windows.  For some reason, when SetWindowText()", "+\t\t* is used to set the text of a link control to the empty", "+\t\t* string, the old text remains.  The fix is to set the", "+\t\t* text to a space instead.", "+\t\t*/", "+\t\tif (string.length () == 0) string = \" \";  //$NON-NLS-1$", "-\t\tparse (string);", "+\t\tparse (text);", "-\t\tlayout.setText (parse (string));\t", "+\t\tlayout.setText (parse (text));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99edcbb9cc176f169125b7a9b73c8765", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5f2f9722fb558345b2e1962ac41660a1bc2aed06", "commitAfterChange": "6d9ffc9776ed53230601b1f118f94e4523e13f00", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public int indexOf (String string, int start)", "signatureAfterChange": "\r public int indexOf (String string, int start)", "diff": ["+\t\r", "+\t/*\r", "+\t* Bug in Windows.  For some reason, CB_FINDSTRINGEXACT\r", "+\t* will not find empty strings even though it is legal\r", "+\t* to insert an empty string into a combo.  The fix is\r", "+\t* to search the combo, an item at a time.\r", "+\t*/\r", "+\tif (string.length () == 0) {\r", "+\t\tint count = getItemCount ();\r", "+\t\tfor (int i=start; i<count; i++) {\r", "+\t\t\tif (string.equals (getItem (i))) return i;\r", "+\t\t}\r", "+\t\treturn -1;\r", "+\t}\r", "+\r", "+\t/* Use CB_FINDSTRINGEXACT to search for the item */\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15dba2bc89f145a136f9c3d6a2da1b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "3a71e3fa702def69bec5f8fc774bf667aeff88c4", "commitAfterChange": "ab1753cc7e6a85add435348de956934094048eee", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void enableWidget (boolean enabled)", "signatureAfterChange": "  void enableWidget (boolean enabled)", "diff": ["-\t* image lists.", "+\t* image lists for the item.", "+\t* ", "+\t* Feature in Windows.  When a tool bar is disabled,", "+\t* the text draws disabled but the images do not.", "+\t* The fix is to use the disabled image in all image", "+\t* lists for all items.", "-\t\t\titem.updateImages (enabled && item.getEnabled ());", "+\t\t\tif ((item.style & SWT.SEPARATOR) == 0) {", "+\t\t\t\titem.updateImages (enabled && item.getEnabled ());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3188493d3b46e44089cb879cda4836e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "3f7682b6cb6c6e3127b760817a29f9fa2a42650d", "commitAfterChange": "adbe660241a76f9cdf530730678adecbee4e2a50", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public String open ()", "signatureAfterChange": "\r public String open ()", "diff": ["-\t* Bug/Feature in Windows.  Verify that the file name is valid.\r", "-\t* If an invalid file name is passed to the standard dialog, it\r", "-\t* does not open and returns an error code.  The fix is to avoid\r", "-\t* this behavior by verifying the file name before opening the\r", "-\t* dialog.  If the file name is not valid, use an empty string.\r", "-\t*/\r", "-\tif (!OS.IsWinCE) {\r", "-\t\tif (OS.GetFileTitle (name, null, (short) 0) < 0) {\r", "-\t\t\tname = new TCHAR (0, \"\", true);\r", "-\t\t}\r", "-\t}\r", "-\t\r", "-\t/*\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a318f9248713921bb4d357a52dff520", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "9d8d281eb4a9ea642c46220cee0461b3556ee22a", "commitAfterChange": "8038ca7b432f0c35c2ee4f8c3164760226ff5589", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void setSelection (boolean selected)", "signatureAfterChange": " public void setSelection (boolean selected)", "diff": ["+\t", "+\t/*", "+\t* Bug in Windows.  When a tool item with the style", "+\t* BTNS_CHECK or BTNS_CHECKGROUP is selected and then", "+\t* disabled, the item does not draw using the disabled", "+\t* image.  The fix is to use the disabled image in all", "+\t* image lists.", "+\t* ", "+\t* NOTE: This means that the image list must be updated", "+\t* when the selection changes in a disabled tool item.", "+\t*/", "+\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tif (!getEnabled ()) updateImages ();", "+\t}"]}], "num": 27996}