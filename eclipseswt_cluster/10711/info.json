{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf10fad9f8018d3b0b80fdd4f61b8d3d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ed3a207b4704f46cf83dce41e2a280b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4dde314b3cf3fc9cc15905868d5f5eecbcf34371", "commitAfterChange": "aafa4cc5a81b62175148e49a1f619737da1ce054", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["+\tif (data.gdipGraphics != 0) {", "+\t\tint rgn = Gdip.Region_new();", "+\t\tGdip.Graphics_GetClip(data.gdipGraphics, rgn);", "+\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\tGdip.Graphics_GetTransform(data.gdipGraphics, matrix);", "+\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);", "+\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "+\t\tGdip.Graphics_SetTransform(data.gdipGraphics, matrix);", "+\t\tGdip.Matrix_delete(identity);", "+\t\tGdip.Matrix_delete(matrix);", "+\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);", "+\t\tGdip.Region_delete(rgn);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6df9c57e8c1c47e384a4238ce975851", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "78a7701e433e7c5cea23c3173026c3d4b63cf804", "commitAfterChange": "d4b754da5aea8c1e64c19dd09ce99db7cc592d85", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["+\tif (OS.GDK_WINDOWING_X11()) {", "+\t\txDisplay = OS.GDK_DISPLAY ();", "+\t}", "+", "-\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\t\t/* Create the warning and error callbacks */", "+\t\t\tClass clazz = getClass ();", "+\t\t\tsynchronized (clazz) {", "+\t\t\t\tint index = 0;", "+\t\t\t\twhile (index < Devices.length) {", "+\t\t\t\t\tif (Devices [index] != null) break;", "+\t\t\t\t\tindex++;", "+\t\t\t\t}", "+\t\t\t\tif (index == Devices.length) {", "+\t\t\t\t\tXErrorCallback = new Callback (clazz, \"XErrorProc\", 2);", "+\t\t\t\t\tXNullErrorProc = XErrorCallback.getAddress ();", "+\t\t\t\t\tif (XNullErrorProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\tXIOErrorCallback = new Callback (clazz, \"XIOErrorProc\", 1);", "+\t\t\t\t\tXNullIOErrorProc = XIOErrorCallback.getAddress ();", "+\t\t\t\t\tif (XNullIOErrorProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\tXErrorProc = OS.XSetErrorHandler (XNullErrorProc);", "+\t\t\t\t\tXIOErrorProc = OS.XSetIOErrorHandler (XNullIOErrorProc);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fcebfbe2730640414d25ea8dd59846f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c75fa2aaa81cd96400f0b4207d26c662b67c5bce", "commitAfterChange": "68dd096752e238c658788f5395a8c9f209d457e7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["+", "+\tif (OS.GDK_WINDOWING_X11 ()) {", "+\t\tint /*long*/ xWindow = OS.gdk_x11_drawable_get_xid (OS.GTK_WIDGET_WINDOW (shellHandle));", "+\t\tbyte[] atomName = Converter.wcsToMbcs (null, \"SWT_Window_\" + APP_NAME, true); //$NON-NLS-1$", "+\t\tint /*long*/ atom = OS.XInternAtom (OS.GDK_DISPLAY (), atomName, false);", "+\t\tOS.XSetSelectionOwner (OS.GDK_DISPLAY (), atom, xWindow, OS.CurrentTime);", "+\t\tOS.XGetSelectionOwner (OS.GDK_DISPLAY (), atom);", "+\t}", "+", "+\tsignalCallback = new Callback (this, \"signalProc\", 3); //$NON-NLS-1$", "+\tsignalProc = signalCallback.getAddress ();", "+\tif (signalProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tOS.gtk_widget_add_events (shellHandle, OS.GDK_PROPERTY_CHANGE_MASK);", "+\tOS.g_signal_connect (shellHandle, OS.property_notify_event, signalProc, PROPERTY_NOTIFY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b23a80e993bf7eaf57a0600afc5eac6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4af2fc6b28aae8c56d34d1e719d5211c453fb187", "commitAfterChange": "0c37423204d5251dee431c10d9a67482193eefb2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void checkGC(int mask)", "signatureAfterChange": "  void checkGC(int mask)", "diff": ["+\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\tbrush = Gdip.Brush_Clone(brush);", "+\t\t\t\t\t\t\tif (brush == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\tdata.gdipFgBrush = brush;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\tbrush = data.gdipFgBrush;", "+\t\t\t\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\t\t\t\tswitch (Gdip.Brush_GetType(data.gdipBrush)) {", "+\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\tint brush = Gdip.Brush_Clone(data.gdipBrush);", "+\t\t\t\t\t\t\tif (brush == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\tdata.gdipBrush = data.gdipBgBrush = brush;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd9735adf86f9725433f3b6c6bca2002", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "baec48b9bf0042e322500cba32f1b9bdac3cbfa0", "commitAfterChange": "f427c1590631b66d91e74b5c591fc671d07e2ff7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\t", "-\thandle.lockFocus();\t", "-//\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(new NSBitmapImageRep(handle.bestRepresentationForDevice(null).id));", "-//\tNSGraphicsContext.setCurrentContext(context);", "-\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\tNSGraphicsContext.currentContext().saveGraphicsState();", "+\tNSBitmapImageRep rep = imageRep;", "+\tif (imageRep.hasAlpha()) {", "+\t\tint bpr = width * 4;", "+\t\trep = (NSBitmapImageRep)new NSBitmapImageRep().alloc();", "+\t\tint bitmapData = imageRep.bitmapData();", "+\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "+\t\tdata.bitmapDataAddress = OS.malloc(4);", "+\t\tOS.memmove(data.bitmapDataAddress, new int[] {bitmapData}, 4);", "+\t\trep = rep.initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bitmapFormat_bytesPerRow_bitsPerPixel_(", "+\t\t\t\tdata.bitmapDataAddress, width, height, 8, 3, false, false, new NSString(OS.NSDeviceRGBColorSpace()), OS.NSAlphaFirstBitmapFormat , bpr, 32);", "+\t\trep.autorelease();", "+\t}", "+\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(rep);", "+\tNSGraphicsContext.currentContext().restoreGraphicsState();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5af898acd5fe27ba9438e030646b2bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void internal_dispose_GC (int xGC, GCData data)", "signatureAfterChange": "  public void internal_dispose_GC (int context, GCData data)", "diff": ["- */", "-public void internal_dispose_GC (int xGC, GCData data) {", "+", "+public void internal_dispose_GC (int context, GCData data) {", "-    /* AW", "-\tint xDisplay = 0;", "-\tif (data != null) xDisplay = data.display;", "-\tif (xDisplay == 0 && handle != 0) xDisplay = OS.XtDisplay (handle);", "-\tif (xDisplay == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tOS.XFreeGC (xDisplay, xGC);", "-    */", "+\tif (data != null) {", "+\t\tint paintContext = 0, paintRgn = 0;", "+\t\tif (data.paintEvent != 0) {", "+\t\t\tint theEvent = data.paintEvent;", "+\t\t\tint [] buffer = new int [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, buffer);", "+\t\t\tpaintContext = buffer [0];\t", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, buffer);", "+\t\t\tpaintRgn = buffer [0];", "+\t\t}", "+\t\tif (data.visibleRgn != 0 && data.visibleRgn != paintRgn) {", "+\t\t\tOS.DisposeRgn (data.visibleRgn);", "+\t\t\tdata.visibleRgn = 0;", "+\t\t}", "+\t\tif (paintContext == context) return;", "+\t}", "+\tOS.CGContextFlush (context);", "+\tOS.CGContextRelease (context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b84019d3596ab8cb5b9d05723d96ae1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Rectangle getClientArea ()", "signatureAfterChange": "  public Rectangle getClientArea ()", "diff": ["+\tif (OS.HIVIEW) {", "+\t\tRect client = new Rect ();", "+\t\tif (OS.GetControlData (handle, (short)OS.kControlEntireControl, OS.kControlTabContentRectTag, Rect.sizeof, client, null) != OS.noErr) {", "+\t\t\treturn new Rectangle(0, 0, 0, 0);", "+\t\t}", "+\t\tint x = Math.max (0, client.left);", "+\t\tint y = Math.max (0, client.top);", "+\t\tint width = Math.max (0, client.right - client.left);", "+\t\tint height = Math.max (0, client.bottom - client.top);", "+\t\treturn new Rectangle (x, y, width, height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5760f40fb2a4271cb0fc40f0c9b2ce0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet167.java", "commitBeforeChange": "26fc58cd6fe357cc4b7b237b1734c753a939f562", "commitAfterChange": "e18cfcf45bc5a4f1c8ebfbe166501385af73ffc7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-\tbutton1.setSize (400, 400);", "+\tbutton1.setSize (400, 300);", "-\tbutton2.setSize (400, 400);", "+\tbutton2.setSize (300, 400);", "-\t\t\tsc2.setOrigin (", "-\t\t\t\thBar1.getSelection (),", "-\t\t\t\tvBar1.getSelection ());", "+\t\t\tint x =  hBar1.getSelection() * (hBar2.getMaximum() - hBar2.getThumb()) / Math.max(1, hBar1.getMaximum() - hBar1.getThumb());", "+\t\t\tint y =  vBar1.getSelection() * (vBar2.getMaximum() - vBar2.getThumb()) / Math.max(1, vBar1.getMaximum() - vBar1.getThumb());", "+\t\t\tsc2.setOrigin (x, y);", "-\t\t\tsc1.setOrigin (", "-\t\t\t\thBar2.getSelection (),", "-\t\t\t\tvBar2.getSelection ());", "+\t\t\tint x =  hBar2.getSelection() * (hBar1.getMaximum() - hBar1.getThumb()) / Math.max(1, hBar2.getMaximum() - hBar2.getThumb());", "+\t\t\tint y =  vBar2.getSelection() * (vBar1.getMaximum() - vBar1.getThumb()) / Math.max(1, vBar2.getMaximum() - vBar2.getThumb());", "+\t\t\tsc1.setOrigin (x, y);", "-\tshell.setSize (600, 300);", "+\tshell.setSize (400, 300);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08be0e6892809a32ce42e9e408dfe314", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "7b1329ce4559c314d7caaf6d49255a2e36ae8db9", "commitAfterChange": "24fd6f27ac88e7d1cba0fa9d22650617bd958c27", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t\tpublic int method3 (int[] args)", "signatureAfterChange": "  int getScriptObject (int aContext, int aScriptObject)", "diff": ["-\t\tpublic int /*long*/ method3 (int /*long*/[] args) {", "-\t\t\t// int /*long*/ globalObject = XPCOM.nsIScriptContext_GetGlobalObject(args[0]);", "-\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "-\t\t\tif (Mozilla.jsLibPathBytes == null) {", "-\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "-\t\t\t\ttry {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "-\t\t\tint /*long*/ globalJSObject1 = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, args[0]);", "-\t\t\tint /*long*/ globalJSObject2 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, nativeContext);", "-//\t\t\tint /*long*/ globalJSObject3 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, args[0]);", "-\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "-\t\t\t", "-\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "-\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, nativeContext, newObject, functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "-\t\t\tSystem.out.println(newFunction);", "-\t\t\t", "-\t\t\tXPCOM.memmove(args[1], new int /*long*/[] {newObject}, C.PTR_SIZEOF);", "-\t\t\treturn XPCOM.NS_OK;", "-\t\t}", "+", "+int getScriptObject (int /*long*/ aContext, int /*long*/ aScriptObject) {", "+\tbyte[] jsLibPath = Mozilla.getJSLibPathBytes ();", "+\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (aContext);", "+\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (jsLibPath, nativeContext);", "+\tint /*long*/ newObject = XPCOM.JS_NewObject (jsLibPath, nativeContext, 0, 0, globalJSObject);", "+", "+\tbyte[] functionName = MozillaDelegate.wcsToMbcs (null, \"callJava\", true); //$NON-NLS-1$", "+\tint flags = XPCOM.JSPROP_ENUMERATE | XPCOM.JSPROP_READONLY | XPCOM.JSPROP_PERMANENT;", "+\tXPCOM.JS_DefineFunction (jsLibPath, nativeContext, newObject, functionName, XPCOM.CALLBACK_JSNative (CallJavaProc.getAddress ()), 3, flags);", "+\tXPCOM.memmove (aScriptObject, new int /*long*/[] {newObject}, C.PTR_SIZEOF);", "+\treturn XPCOM.NS_OK;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "803be1a135848334c087b6be96d8eaa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "648a901ebdb6d910c60f231042a5673c07edfc72", "commitAfterChange": "1179f16912e74ae60b1efbf009a154d76fd2bb7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " void dropDown (boolean drop)", "signatureAfterChange": " void dropDown (boolean drop)", "diff": ["+\tif (getShell() != popup.getParent()) {", "+\t\tString[] items = list.getItems();", "+\t\tint selectionIndex = list.getSelectionIndex();", "+\t\tlist.removeListener(SWT.Dispose, listener);", "+\t\tpopup.dispose();", "+\t\tpopup = null;", "+\t\tlist = null;", "+\t\tcreatePopup(items, selectionIndex);", "+\t}", "+\t", "+\tPoint size = getSize();", "+\tint itemCount = list.getItemCount();", "+\titemCount = (itemCount == 0) ? visibleItemCount : Math.min(visibleItemCount, itemCount);", "+\tint itemHeight = list.getItemHeight () * itemCount;", "+\tPoint listSize = list.computeSize (SWT.DEFAULT, itemHeight);", "+\tlist.setBounds (1, 1, Math.max (size.x - 2, listSize.x), listSize.y);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d17e010da1c0e3d1c0fc8a430fdfe8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "a59d4f0fcd6ac77e4b0b411a02002b0581984050", "commitAfterChange": "e2b4ac8fc06ef616c8ab44b7a5fded395b0c30d0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["+", "+\t/* Resize the embedded window */", "+\tif ((state & CANVAS) != 0 && (style & SWT.EMBEDDED) != 0) {", "+\t\tint hwndChild = OS.GetWindow (handle, OS.GW_CHILD);", "+\t\tint threadId = OS.GetWindowThreadProcessId (hwndChild, null);", "+\t\tif (threadId != OS.GetCurrentThreadId ()) {", "+\t\t\tif (display.msgHook == 0) {", "+\t\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\t\tdisplay.getMsgCallback = new Callback (display, \"getMsgProc\", 3);", "+\t\t\t\t\tdisplay.getMsgProc = display.getMsgCallback.getAddress ();", "+\t\t\t\t\tif (display.getMsgProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\tdisplay.msgHook = OS.SetWindowsHookEx (OS.WH_GETMESSAGE, display.getMsgProc, OS.GetLibraryHandle(), threadId);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t//OS.PostThreadMessage (threadId, OS.WM_APP + 4, hwndChild, lParam);", "+\t\t}", "+\t}"]}], "num": 10711}