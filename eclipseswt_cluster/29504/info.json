{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b27c087dd946a6f0c895cda82e8aae30", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f46a6ea9ee172b5b3f3311ac6858d9c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "491ee4b96e01eebd57ff64561cf636dbd3beb626", "commitAfterChange": "d5f017a2e1351cda1ec08304c52846186e9dc7b5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["+\t/*", "+\t * Bug in GTK. When the column is made visible the event window of column", "+\t * header is raised above the gripper window of the previous column. In ", "+\t * some cases, this can cause the previous column to be not resizable by", "+\t * the mouse. The fix is to find the event window and lower it to bottom to", "+\t * the z-order stack. ", "+\t */", "+\tif (width != 0) {", "+\t\tif (buttonHandle != 0) {", "+\t\t\tint /*long*/ window = OS.gtk_widget_get_parent_window (buttonHandle);", "+\t\t\tif (window != 0) {", "+\t\t\t\tint /*long*/ windowList = OS.gdk_window_get_children (window);", "+\t\t\t\tif (windowList != 0) {", "+\t\t\t\t\tint /*long*/ windows = windowList;", "+\t\t\t\t\tint /*long*/ [] userData = new int /*long*/ [1];", "+\t\t\t\t\twhile (windows != 0) {", "+\t\t\t\t\t\tint /*long*/ child = OS.g_list_data (windows);", "+\t\t\t\t\t\tOS.gdk_window_get_user_data (child, userData);", "+\t\t\t\t\t\tif (userData[0] == buttonHandle) {", "+\t\t\t\t\t\t\tOS.gdk_window_lower (child);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\twindows = OS.g_list_next (windows);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.g_list_free (windowList);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004048e74784a85f960be6a395373d54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "491ee4b96e01eebd57ff64561cf636dbd3beb626", "commitAfterChange": "d5f017a2e1351cda1ec08304c52846186e9dc7b5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["+\t/*", "+\t * Bug in GTK. When the column is made visible the event window of column", "+\t * header is raised above the gripper window of the previous column. In ", "+\t * some cases, this can cause the previous column to be not resizable by", "+\t * the mouse. The fix is to find the event window and lower it to bottom to", "+\t * the z-order stack. ", "+\t */", "+\tif (width != 0) {", "+\t\tif (buttonHandle != 0) {", "+\t\t\tint /*long*/ window = OS.gtk_widget_get_parent_window (buttonHandle);", "+\t\t\tif (window != 0) {", "+\t\t\t\tint /*long*/ windowList = OS.gdk_window_get_children (window);", "+\t\t\t\tif (windowList != 0) {", "+\t\t\t\t\tint /*long*/ windows = windowList;", "+\t\t\t\t\tint /*long*/ [] userData = new int /*long*/ [1];", "+\t\t\t\t\twhile (windows != 0) {", "+\t\t\t\t\t\tint /*long*/ child = OS.g_list_data (windows);", "+\t\t\t\t\t\tOS.gdk_window_get_user_data (child, userData);", "+\t\t\t\t\t\tif (userData[0] == buttonHandle) {", "+\t\t\t\t\t\t\tOS.gdk_window_lower (child);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\twindows = OS.g_list_next (windows);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.g_list_free (windowList);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f076e71df34dc0ac23da07737bce937", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "d90ce82c4bd1df73e3b8427cbe02d4f5420c1576", "commitAfterChange": "48c6107564896d466448d735033d9e2439b7c153", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  int gtk_changed (int widget)", "signatureAfterChange": "  int gtk_changed (int widget)", "diff": ["+\tint /*long*/ str = OS.gtk_entry_get_text (handle);", "+\tint length = OS.strlen (str);", "+\tif (length > 0) {", "+\t\tint /*long*/ [] endptr = new int /*long*/ [1];", "+\t\tdouble value = OS.g_strtod (str, endptr);", "+\t\tif (endptr [0] == str + length) {", "+\t\t\tint /*long*/ hAdjustment = OS.gtk_spin_button_get_adjustment (handle);", "+\t\t\tGtkAdjustment adjustment = new GtkAdjustment ();", "+\t\t\tOS.memmove (adjustment, hAdjustment);", "+\t\t\tif (value != adjustment.value && adjustment.lower <= value && value <= adjustment.upper) {", "+\t\t\t\tOS.gtk_spin_button_update (handle);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}], "num": 29504}