{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7076a49092fb1aa8a5754ae888a1b67d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa452802a91211267dedc42370cc681b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "7dc0ed76c00a73244d89c00fb91aa296e1c8bb9a", "commitAfterChange": "283346df972bf05bab552efd3c4080f6b823b0e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+", "-\tint border = getBorderWidth ();", "-\tint width = 0, height = 0;", "+\tint width = 0, height = 0, border = getBorderWidth ();", "-\tboolean hasImage;", "-\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\tBUTTON_IMAGELIST buttonImageList = new BUTTON_IMAGELIST();", "-\t\tOS.SendMessage (handle, OS.BCM_GETIMAGELIST, 0, buttonImageList);", "-\t\thasImage = buttonImageList.himl != 0;", "-\t} else {", "+\tboolean hasImage = image != null, hasText = text.length () != 0;", "+\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\thasImage = (bits & (OS.BS_BITMAP | OS.BS_ICON)) != 0;\t\t", "+\t\thasImage = (bits & (OS.BS_BITMAP | OS.BS_ICON)) != 0;", "+\t\tif (hasImage) hasText = false;", "-\tif (!hasImage) {", "+\tif (hasImage) {", "+\t\tif (image != null) {", "+\t\t\tRectangle rect = image.getBounds ();", "+\t\t\twidth += rect.width;", "+\t\t\tif (hasText) width += MARGIN * 2;", "+\t\t\theight += rect.height;", "+\t\t\textra = MARGIN * 2;", "+\t\t}", "+\t}", "+\tif (hasText) {", "-\t\t\textra = Math.max (8, lptm.tmAveCharWidth);", "+\t\t\textra = Math.max (MARGIN * 2, lptm.tmAveCharWidth);", "-\t\t\theight += rect.bottom - rect.top;", "+\t\t\theight = Math.max (height, rect.bottom - rect.top);", "-\t} else {", "-\t\tif (image != null) {", "-\t\t\tRectangle rect = image.getBounds ();", "-\t\t\twidth = rect.width;", "-\t\t\theight = rect.height;", "-\t\t\textra = 8;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9b77643a5253f797114e2f00a09e62", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "285cce80136d4e48e3f07aa683212a1d1a5237a6", "commitAfterChange": "e57a0918b6cc67cbac65fb762bfc3acb8662f44e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage)", "signatureAfterChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage)", "diff": ["-\tint gridWidth = parent.getLinesVisible () ? Table.GRID_WIDTH : 0;", "-\t\t/*", "-\t\t* Feature in Windows.  Calling LVM_GETSUBITEMRECT with LVIR_LABEL", "-\t\t* and zero for the column number gives the bounds of the first item", "-\t\t* without including the bounds of the icon.  This is undocumented.", "-\t\t* When called with values greater than zero, the icon bounds are", "-\t\t* included and this behavior is documented.", "-\t\t*/", "-\t\tif (column == 0) {", "-\t\t\tif (getText && getImage) {", "+\t\tif (getText && getImage) {", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  Calling LVM_GETSUBITEMRECT with LVIR_LABEL", "+\t\t\t* and zero for the column number gives the bounds of the first item", "+\t\t\t* without including the bounds of the icon.  This is undocumented.", "+\t\t\t* When called with values greater than zero, the icon bounds are", "+\t\t\t* included and this behavior is documented.", "+\t\t\t*/", "+\t\t\tif (column == 0) {", "-\t\t\trect.left -= gridWidth;", "-\t\t\tif (getText && !getImage && images != null) {", "-\t\t\t\tRECT iconRect = new RECT ();", "-\t\t\t\ticonRect.left = OS.LVIR_ICON;", "-\t\t\t\ticonRect.top = column;", "-\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns a small width", "-\t\t\t\t\t* value even when the subitem does not contain an image.  The", "-\t\t\t\t\t* fix is to detect this case adjust the rectangle accordingly.", "-\t\t\t\t\t*/", "-\t\t\t\t\tLVITEM lvItem = new LVITEM ();", "-\t\t\t\t\tlvItem.mask = OS.LVIF_IMAGE;", "-\t\t\t\t\tlvItem.iItem = row;", "-\t\t\t\t\tlvItem.iSubItem = column;", "-\t\t\t\t\tOS.SendMessage (hwnd, OS.LVM_GETITEM, 0, lvItem);", "-\t\t\t\t\tif (lvItem.iImage >= 0) rect.left = iconRect.right + 2;\t", "+\t\t\tif (column != 0) {", "+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns an image width", "+\t\t\t\t* even when the subitem does not contain an image.  The fix is to", "+\t\t\t\t* adjust the rectangle to represent the area the table is drawing.", "+\t\t\t\t*/", "+\t\t\t\tif (images != null && images [column] != null) {", "+\t\t\t\t\tif (getText) {", "+\t\t\t\t\t\tRECT iconRect = new RECT ();", "+\t\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "+\t\t\t\t\t\ticonRect.top = column;\t\t", "+\t\t\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "+\t\t\t\t\t\t\trect.left = iconRect.right + Table.INSET / 2;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tif (getImage) rect.right = rect.left;", "+\tint gridWidth = parent.getLinesVisible () ? Table.GRID_WIDTH : 0;", "-\trect.left += gridWidth;", "+\tif (column != 0) rect.left += gridWidth;", "+\trect.right = Math.max (rect.right, rect.left);"]}], "num": 21330}