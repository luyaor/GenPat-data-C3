{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d830c97786ba0d7bd4a6eb7953fc21ac", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff9647e03205ddf480984e2bab8ea6a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 23, "signatureBeforeChange": " void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["+", "-\t", "-\t/* Initialize Carbon */", "-\tsynchronized (Display.class) {", "-\t\tif (!fgCarbonInitialized) {", "-\t\t\tOS.RegisterAppearanceClient();", "-\t\t\tOS.TXNInitTextension();", "-\t\t\t//OS.InitCursor();", "-\t\t\tOS.QDSwapTextFlags(OS.kQDUseCGTextRendering + OS.kQDUseCGTextMetrics);", "-\t\t\tif (OS.InitContextualMenus() != OS.kNoErr)", "-\t\t\t\tSystem.out.println(\"Display.createDisplay: error in OS.InitContextualMenus\");", "-\t\t\tint[] psn= new int[2];", "-\t\t\tif (OS.GetCurrentProcess(psn) == OS.kNoErr)", "-\t    \t\tOS.SetFrontProcess(psn);", "-\t\t\t\t", "-\t\t\tOS.Init();", "-\t    }", "-\t\tfgCarbonInitialized = true;", "-\t}", "-\t", "-\tfGDeviceHandle= OS.GetMainDevice();", "+\tqueue = OS.GetCurrentEventQueue ();", "+\tOS.TXNInitTextension (0, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a153f118823fd77f94138de683d04240", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "240f56afd105ea12aa1961209ae90c16c31a6ffe", "commitAfterChange": "b6ee68b9d247b2a1f0204fa3040b53fccbfe63fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public static Program [] getPrograms ()", "signatureAfterChange": "\r public static Program [] getPrograms ()", "diff": ["-\t/* \r", "-\t* The Windows registry maintains a list of file extensions and their related\r", "-\t* editors. In addition, W2K and XP maintain a list of applications which can\r", "-\t* be used to populate the 'Open As' dialog. 2 articles in MSDN describe this\r", "-\t* mechanism: 'File Associations: Arbitrary File Types' and 'Creating a File\r", "-\t* Association'.\r", "-\t* There does not seem to be an API to retrieve the list of programs in the\r", "-\t* 'Open As' dialog. As a result, on W2K machines and above, we look up the\r", "-\t* registry as described in the articles above. On Win95 and NT machines, we use\r", "-\t* the list of applications registered to one or more file classes.\r", "-\t*/\r", "-\tif (OS.IsWin95) return getFileClassPrograms ();\r", "-\tif ((OS.WIN32_MAJOR << 16 | OS.WIN32_MINOR) < (4 << 16 | 10)) return getFileClassPrograms ();\r", "-\tString KEY = \"Applications\";\r", "-\t/* Use the character encoding for the default locale */\r", "-\tTCHAR key = new TCHAR (0, KEY, true);\r", "-\tint [] phkResult = new int [1];\r", "-\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) != 0) {\r", "-\t\treturn  new Program [0];\r", "-\t}\r", "-\tProgram [] programs = new Program [128];\r", "+\tProgram [] programs = new Program [1024];\r", "-\twhile (OS.RegEnumKeyEx (phkResult[0], dwIndex, lpName, lpcName, null, null, null, ft) != OS.ERROR_NO_MORE_ITEMS) {\t\r", "-\t\tString path = KEY + \"\\\\\" + lpName.toString (0, lpcName [0]);\r", "+\twhile (OS.RegEnumKeyEx (OS.HKEY_CLASSES_ROOT, dwIndex, lpName, lpcName, null, null, null, ft) != OS.ERROR_NO_MORE_ITEMS) {\t\r", "+\t\tString path = lpName.toString (0, lpcName [0]);\r", "-\t\t\t\tProgram [] newPrograms = new Program [programs.length + 128];\r", "+\t\t\t\tProgram [] newPrograms = new Program [programs.length + 1024];\r", "-}\r"]}], "num": 29215}