{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3493e171fc3c253169700808ac78f045", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e1ffb600a4b5ec9f45b58282e7e2ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "1ab8b5fbc680e1f1510908f5f82adf75422a18ac", "commitAfterChange": "da65189c050939c2c0723e3578a9ba89981cf786", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void drawIcon(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawIcon(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["-\t\t\tint srcHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint srcColorY = srcY;", "-\t\t\tint srcColor = srcIconInfo.hbmColor;", "-\t\t\tif (srcColor == 0) {", "-\t\t\t\tsrcColor = srcIconInfo.hbmMask;", "-\t\t\t\tsrcColorY += iconHeight;", "-\t\t\t}", "-\t\t\tint srcMask = srcIconInfo.hbmMask;", "-\t\t\tint oldSrcBitmap = OS.SelectObject(srcHdc, srcColor);", "-\t\t\tif (!simple && (srcWidth != destWidth || srcHeight != destHeight)) {", "-\t\t\t\tint mode = 0;", "-\t\t\t\tif (!OS.IsWinCE) mode = OS.SetStretchBltMode(handle, OS.COLORONCOLOR);", "-\t\t\t\tOS.StretchBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcColorY, srcWidth, srcHeight, OS.SRCINVERT);", "-\t\t\t\tOS.SelectObject(srcHdc, srcMask);", "-\t\t\t\tOS.StretchBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCAND);", "-\t\t\t\tOS.SelectObject(srcHdc, srcColor);", "-\t\t\t\tOS.StretchBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcColorY, srcWidth, srcHeight, OS.SRCINVERT);", "-\t\t\t\tif (!OS.IsWinCE) OS.SetStretchBltMode(handle, mode);", "-\t\t\t} else {", "-\t\t\t\tOS.BitBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcColorY, OS.SRCINVERT);", "-\t\t\t\tOS.SelectObject(srcHdc, srcMask);", "-\t\t\t\tOS.BitBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcY, OS.SRCAND);", "-\t\t\t\tOS.SelectObject(srcHdc, srcColor);", "-\t\t\t\tOS.BitBlt(handle, destX, destY, destWidth, destHeight, srcHdc, srcX, srcColorY, OS.SRCINVERT);", "-\t\t\t}", "-\t\t\tOS.SelectObject(srcHdc, oldSrcBitmap);", "-\t\t\tOS.DeleteDC(srcHdc);", "+\t\t\tdrawBitmapMask(srcImage, srcIconInfo.hbmColor, srcIconInfo.hbmMask, srcX, srcY, srcWidth, srcHeight, destX, destY, destWidth, destHeight, simple, iconWidth, iconHeight, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e091e66aee2df2d9d561e71940c855", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "  void update (boolean all)", "signatureAfterChange": "  void update (boolean all)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\t//TODO - not all", "-\t\tOS.HIViewRender (handle);", "-\t\treturn;", "-\t}", "-\tif (!isDrawing (handle)) return;", "-\tint window = OS.GetControlOwner (handle);", "-\tint port = OS.GetWindowPort (window);", "-\tint portRgn = OS.NewRgn ();", "-\tOS.GetPortVisibleRegion (port, portRgn);", "-\tif (!OS.EmptyRgn (portRgn)) {", "-\t\tint updateRgn = OS.NewRgn ();", "-\t\tOS.GetWindowRegion (window, (short)OS.kWindowUpdateRgn, updateRgn);", "-\t\tif (!OS.EmptyRgn (updateRgn)) {", "-\t\t\tRect rect = new Rect ();", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t\tOS.OffsetRgn (updateRgn, (short)-rect.left, (short)-rect.top);", "-\t\t\tOS.SectRgn (portRgn, updateRgn, updateRgn);", "-\t\t\tif (!OS.EmptyRgn (updateRgn)) {", "-\t\t\t\tint visibleRgn = getVisibleRegion (handle, !all);", "-\t\t\t\tif (!OS.EmptyRgn (visibleRgn)) {", "-\t\t\t\t\tOS.SectRgn (updateRgn, visibleRgn, visibleRgn);", "-\t\t\t\t\tif (!OS.EmptyRgn (visibleRgn)) {\t", "-\t\t\t\t\t\tint [] currentPort = new int[1];", "-\t\t\t\t\t\tOS.GetPort (currentPort);", "-\t\t\t\t\t\tOS.SetPort (port);", "-\t\t\t\t\t\tOS.BeginUpdate (window);\t", "-\t\t\t\t\t\tOS.DiffRgn (updateRgn, visibleRgn, updateRgn);", "-\t\t\t\t\t\tinvalWindowRgn (window, updateRgn);", "-\t\t\t\t\t\tOS.UpdateControls (window, visibleRgn);", "-\t\t\t\t\t\tOS.EndUpdate (window);", "-\t\t\t\t\t\tOS.SetPort (currentPort [0]);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.DisposeRgn (visibleRgn);", "-\t\t\t}", "-\t\t}", "-\t\tOS.DisposeRgn (updateRgn);", "-\t}", "-\tOS.DisposeRgn (portRgn);", "+\t//TODO - not all", "+\tOS.HIViewRender (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4661d2a18a06d7b3f73ba78ae49a639f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9897614cc57b96bb97451125093fad1bcc2e945a", "commitAfterChange": "856f6a008a0ed77a41d39123c5600a8b16c79156", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\tRect bounds = new Rect();", "-\tint x = 0, y = 0, width = 0, height = 0;", "-\tif (data.control != 0) {", "-\t\tOS.GetControlBounds(data.control, bounds);", "-\t\twidth = bounds.right - bounds.left;", "-\t\theight = bounds.bottom - bounds.top;", "-\t} else {", "-\t\tif (data.image != null) {", "-\t\t\tint image = data.image.handle;", "-\t\t\twidth = OS.CGImageGetWidth(image);", "-\t\t\theight = OS.CGImageGetHeight(image);", "-\t\t}", "-\t}", "-\tif (data.clipRgn != 0 || data.visibleRgn != 0) {", "-\t\tint clipping = OS.NewRgn();", "-\t\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "-\t\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "-\t\tif (data.visibleRgn != 0) {", "-\t\t\t// Note that bounds has the control bounds", "-\t\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);", "-\t\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);", "-\t\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);", "-\t\t}", "-\t\tOS.GetRegionBounds(clipping, bounds);", "-\t\tx = bounds.left;", "-\t\ty = bounds.top;", "-\t\twidth = bounds.right - bounds.left;", "-\t\theight = bounds.bottom - bounds.top;", "-\t\tOS.DisposeRgn(clipping);", "-\t}", "-\treturn new Rectangle(x, y, width, height);", "+\tRegion region = new Region();", "+\tgetClipping(region);", "+\tRectangle rect = region.getBounds();", "+\tregion.dispose();", "+\treturn rect;"]}], "num": 46637}