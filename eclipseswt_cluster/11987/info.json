{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "894033fe26fa68775e678073ca070d50", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb8a69223981f78716f795d4e322a74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "65aaf6e9768e61429e9ffb0c0ae5577af65eba85", "commitAfterChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-\tparent.drawSelectionBackground(gc, shape);", "+\tparent.drawBackground(gc, shape, true);", "-\t\tgc.setBackground(parent.getParent().getBackground());", "-\t\tgc.fillRectangle(x, y - 1, size.x - x, height + 1);", "+\t\tshape = new int[] {x,y-1, x,y+height, size.x,y+height, size.x,y-1};", "+\t\tparent.drawBackground(gc, shape, false);", "+", "+\t// fill in background for non-rectangular shape", "+\tshape = new int[] {x,y, x+width,y, x+width,y+height, x,y+height};", "+\tparent.drawBackground(gc, shape, false);", "-\tparent.drawSelectionBackground(gc, shape);", "+\tparent.drawBackground(gc, shape, true);", "-\t// Shape is non-rectangular", "+\t// Limit drawing area of tab", "-\tr.add(new Rectangle(x, y, width, height));", "-\tr.subtract(shape);", "-\tif (parent.single) {", "-\t\t// for a single tab,  fill in gaps with background colour", "-\t\tgc.setBackground(parent.getBackground());", "-\t} else {", "-\t\t// for mutliple tabs, fill in gaps with parent colours", "-\t\tgc.setBackground(parent.getParent().getBackground());", "-\t}", "-\tCTabFolder2.fillRegion(gc, r);", "-", "-\t// Limit drawing area of tab\t", "+\tr.subtract(r); //clear", "-\tr.subtract(r); //clear", "-\t\tgc.drawFocus(xDraw-2, textY-2, extent.x+3, extent.y+4);", "+\t\tgc.drawFocus(xDraw-3, textY-2, extent.x+6, extent.y+4);", "-\tshape[shape.length - 2] = size.x - parent.borderRight;", "-\tif (parent.onBottom) {", "-\t\tfor (int i = 0; i < shape.length/2; i++) {", "-\t\t\tif (shape[2*i + 1] == y + height + 1) shape[2*i + 1] -= 1;", "-\t\t}", "-\t} else {", "-\t\tfor (int i = 0; i < shape.length/2; i++) {", "-\t\t\tif (shape[2*i + 1] == y + height + 1) shape[2*i + 1] -= 1;", "-\t\t}", "+\tshape[shape.length - 2] = size.x - parent.borderRight + 1;", "+\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\tif (shape[2*i + 1] == y + height + 1) shape[2*i + 1] -= 1;", "-\tif (parent.backgroundImage != null || (parent.gradientColors != null && parent.gradientColors.length > 1)) inside = null;", "-\tRGB outside = parent.single ? parent.getBackground().getRGB() : parent.getParent().getBackground().getRGB();\t\t", "+\tif (parent.selectionBgImage != null || (parent.selectionGradientColors != null && parent.selectionGradientColors.length > 1 && !parent.selectionGradientVertical)) inside = null;", "+\tRGB outside = parent.getBackground().getRGB();\t\t", "+\tif (parent.bgImage != null || (parent.gradientColors != null && parent.gradientColors.length > 1 && !parent.gradientVertical)) outside = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090616b4b666f77710b505a8aa02c7b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "0fc40a1b42db186715b9e463f0d06c86543ea114", "commitAfterChange": "96316cf49d0e892bc89eb57b2ec8956e4f218465", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  int PromptAuth(int aParent, int aChannel, int level, int authInfo, int checkboxLabel, int checkboxValue, int _retval)", "signatureAfterChange": "  int PromptAuth(int aParent, int aChannel, int level, int authInfo, int checkboxLabel, int checkboxValue, int _retval)", "diff": ["-\tnsIChannel channel = new nsIChannel (aChannel);", "-\tint /*long*/[] uri = new int /*long*/[1];", "-\tint rc = channel.GetURI (uri);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tif (uri[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-", "-\tnsIURI nsURI = new nsIURI (uri[0]);", "-\tint /*long*/ host = XPCOM.nsEmbedCString_new ();", "-\trc = nsURI.GetHost (host);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tint length = XPCOM.nsEmbedCString_Length (host);", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (host);", "-\tbyte[] bytes = new byte[length];", "-\tXPCOM.memmove (bytes, buffer, length);", "-\tString hostString = new String (bytes);", "-\tXPCOM.nsEmbedCString_delete (host);", "-", "-\tint /*long*/ spec = XPCOM.nsEmbedCString_new ();", "-\trc = nsURI.GetSpec (spec);", "-\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\tlength = XPCOM.nsEmbedCString_Length (spec);", "-\tbuffer = XPCOM.nsEmbedCString_get (spec);", "-\tbytes = new byte[length];", "-\tXPCOM.memmove (bytes, buffer, length);", "-\tString urlString = new String (bytes);", "-\tXPCOM.nsEmbedCString_delete (spec);", "-\tnsURI.Release ();", "-", "-\t\t\t\tevent.location = urlString;", "+\t\t\t\tevent.location = mozilla.lastNavigateURL;", "-\t\t\t\t\trc = auth.SetUsername (string.getAddress ());", "+\t\t\t\t\tint rc = auth.SetUsername (string.getAddress ());", "-\t\tlength = XPCOM.strlen_PRUnichar (checkboxLabel);", "+\t\tint length = XPCOM.strlen_PRUnichar (checkboxLabel);", "-\trc = auth.GetUsername (ptr);", "+\tint rc = auth.GetUsername (ptr);", "-\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\tbuffer = XPCOM.nsEmbedString_get (ptr);", "+\tint length = XPCOM.nsEmbedString_Length (ptr);", "+\tint /*long*/ buffer = XPCOM.nsEmbedString_get (ptr);", "+\tnsIChannel channel = new nsIChannel (aChannel);", "+\tint /*long*/[] uri = new int /*long*/[1];", "+\trc = channel.GetURI (uri);", "+\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\tif (uri[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIURI nsURI = new nsIURI (uri[0]);", "+\tint /*long*/ host = XPCOM.nsEmbedCString_new ();", "+\trc = nsURI.GetHost (host);", "+\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\tlength = XPCOM.nsEmbedCString_Length (host);", "+\tbuffer = XPCOM.nsEmbedCString_get (host);", "+\tbyte[] bytes = new byte[length];", "+\tXPCOM.memmove (bytes, buffer, length);", "+\tString hostString = new String (bytes);", "+\tXPCOM.nsEmbedCString_delete (host);", "+\tnsURI.Release ();", "+"]}], "num": 11987}