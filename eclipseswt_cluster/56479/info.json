{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca7252b0e0e28231408ba5f5c002020a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba8a423274a75f70c65cb2b5b19dc28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "01f0339ebda771692d5bbe6f647597b72df88733", "commitAfterChange": "4f54f9a0adbafad7894d71ae55e5d03d9d9890d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r private void activateInPlaceClient()", "signatureAfterChange": "\r private int OnUIActivate()", "diff": ["-private void activateInPlaceClient() {\r", "-\tif (objIOleInPlaceObject == null) return;\r", "-\r", "-\t// bring client window to foreground\r", "-\tint[] phwnd = new int[1];\r", "-\tif (objIOleInPlaceObject.GetWindow(phwnd) == COM.S_OK) {\r", "-\t\tOS.SetWindowPos(phwnd[0], OS.HWND_TOP, 0, 0, 0, 0, OS.SWP_NOSIZE | OS.SWP_NOMOVE);\r", "-\t}\r", "-\tframe.setCurrentDocument(this);\r", "-}\r", "+\tstate = STATE_UIACTIVE;\r", "+\tint[] phwnd = new int[1];\r", "+\tif (objIOleInPlaceObject.GetWindow(phwnd) == COM.S_OK) {\r", "+\t\tOS.SetWindowPos(phwnd[0], OS.HWND_TOP, 0, 0, 0, 0, OS.SWP_NOSIZE | OS.SWP_NOMOVE);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acebce602abd43818b14d923244566ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "1fc9d817da3861f5e67eed2d83e4edc3fcb7625f", "commitAfterChange": "15cff3037e981fe6b0208388cfa94b5199a9c262", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r private void onFocusIn()", "signatureAfterChange": "\r private void onFocusIn(Event e)", "diff": ["-private void onFocusIn() {\r", "-\tsetInplaceFocus();\r", "+private void onFocusIn(Event e) {\r", "+\tif (objIOleInPlaceObject == null) return;\r", "+\tif (isFocusControl()) return;\r", "+\tint[] phwnd = new int[1];\r", "+\tobjIOleInPlaceObject.GetWindow(phwnd);\r", "+\tif (phwnd[0] == 0) return;\r", "+\tOS.SetFocus(phwnd[0]);\r"]}], "num": 56479}