{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38764cae0331e643b412298a077f69d0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da6c40034e03b1302451d9954d4c1296", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d70097b3723123dbd8abcf6b34b2f106be849ad8", "commitAfterChange": "b6666a5139ca22ba429077362792bdaf8b234877", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  ImageData gio_getImageData()", "signatureAfterChange": "  ImageData gio_getImageData()", "diff": ["-\ttry {", "-\t\tint /*long*/ icon_theme =OS.gtk_icon_theme_get_default();", "-\t\tbyte[] icon = Converter.wcsToMbcs (null, iconPath, true);", "-\t\tint /*long*/ gicon = OS.g_icon_new_for_string(icon, null);", "+\tint /*long*/ icon_theme =OS.gtk_icon_theme_get_default();", "+\tbyte[] icon = Converter.wcsToMbcs (null, iconPath, true);", "+\tint /*long*/ gicon = OS.g_icon_new_for_string(icon, null);", "+\tif (gicon != 0) {", "-\t\tint /*long*/ pixbuf = OS.gtk_icon_info_load_icon(gicon_info, null);\t\t", "-\t\tif (pixbuf != 0) {", "-\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\t\tint height = OS.gdk_pixbuf_get_height(pixbuf);", "-\t\t\tint width = OS.gdk_pixbuf_get_width(pixbuf);", "-\t\t\tboolean hasAlpha = OS.gdk_pixbuf_get_has_alpha(pixbuf);", "-\t\t\tbyte[] srcData = new byte[stride * height];", "-\t\t\tOS.memmove(srcData, pixels, srcData.length);", "-\t\t\tOS.g_object_unref(pixbuf);", "-\t\t\t", "-\t\t\tif (hasAlpha) {", "-\t\t\t\tPaletteData palette = new PaletteData(0xFF000000, 0xFF0000, 0xFF00);", "-\t\t\t\tdata = new ImageData(width, height, 32, palette, 4, srcData);", "-\t\t\t\tdata.bytesPerLine = stride;", "-\t\t\t\tint s = 3, a = 0;", "-\t\t\t\tbyte[] alphaData = new byte[width*height];", "-\t\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\t\talphaData[a++] = srcData[s];", "-\t\t\t\t\t\tsrcData[s] = 0;", "-\t\t\t\t\t\ts+=4;", "+\t\tif (gicon_info != 0) {", "+\t\t\tint /*long*/ pixbuf = OS.gtk_icon_info_load_icon(gicon_info, null);\t\t", "+\t\t\tif (pixbuf != 0) {", "+\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\t\tint height = OS.gdk_pixbuf_get_height(pixbuf);", "+\t\t\t\tint width = OS.gdk_pixbuf_get_width(pixbuf);", "+\t\t\t\tboolean hasAlpha = OS.gdk_pixbuf_get_has_alpha(pixbuf);", "+\t\t\t\tbyte[] srcData = new byte[stride * height];", "+\t\t\t\tOS.memmove(srcData, pixels, srcData.length);", "+\t\t\t\tOS.g_object_unref(pixbuf);", "+\t\t\t\tif (hasAlpha) {", "+\t\t\t\t\tPaletteData palette = new PaletteData(0xFF000000, 0xFF0000, 0xFF00);", "+\t\t\t\t\tdata = new ImageData(width, height, 32, palette, 4, srcData);", "+\t\t\t\t\tdata.bytesPerLine = stride;", "+\t\t\t\t\tint s = 3, a = 0;", "+\t\t\t\t\tbyte[] alphaData = new byte[width*height];", "+\t\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\t\talphaData[a++] = srcData[s];", "+\t\t\t\t\t\t\tsrcData[s] = 0;", "+\t\t\t\t\t\t\ts+=4;", "+\t\t\t\t\t\t}", "+\t\t\t\t\tdata.alphaData = alphaData;", "+\t\t\t\t} else {", "+\t\t\t\t\tPaletteData palette = new PaletteData(0xFF0000, 0xFF00, 0xFF);", "+\t\t\t\t\tdata = new ImageData(width, height, 24, palette, 4, srcData);", "+\t\t\t\t\tdata.bytesPerLine = stride;", "-\t\t\t\tdata.alphaData = alphaData;", "-\t\t\t} else {", "-\t\t\t\tPaletteData palette = new PaletteData(0xFF0000, 0xFF00, 0xFF);", "-\t\t\t\tdata = new ImageData(width, height, 24, palette, 4, srcData);", "-\t\t\t\tdata.bytesPerLine = stride;", "+\t\t\tOS.gtk_icon_info_free(gicon_info);", "-\t} catch (Exception e) {}", "+\t\tOS.g_object_unref(gicon);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4a84e7b37999f6bc3d2c1369db43ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7a26d49f7fcf65bf8625393f1af4a67b482a7c35", "commitAfterChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 49, "signatureBeforeChange": " int topHandle()", "signatureAfterChange": " public void setHeaderVisible (boolean show)", "diff": ["- */", "-int topHandle() { return boxHandle; }", "+\tif (show) {", "+\t}"]}], "num": 16861}