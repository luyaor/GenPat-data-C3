{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9baed592dd87d94d4acd636606a9d2d4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83e2b3688811de9c3677990cedf596f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "32bbc2d3fc6bfe8e8fc34078d362966521e4e07a", "commitAfterChange": "2aff52873acfa10a7da24f7c0214e9271f5321d0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\t\t\tint repCount = reps.count();", "+\t\t\t\tint /*long*/ repCount = reps.count();", "-\t\theight = imageRep.pixelsHigh();", "-\t\twidth = imageRep.pixelsWide();", "+\t\theight = (int)/*64*/imageRep.pixelsHigh();", "+\t\twidth = (int)/*64*/imageRep.pixelsWide();", "-\t\t\tint bitmapBytesPerRow = width;", "-\t\t\tint bitmapByteCount = bitmapBytesPerRow * height;", "-\t\t\tint alphaBitmapData = OS.malloc(bitmapByteCount);", "-\t\t\tint alphaBitmapCtx = OS.CGBitmapContextCreate(alphaBitmapData, width, height, 8, bitmapBytesPerRow, 0, OS.kCGImageAlphaOnly);", "+\t\t\tint /*long*/ bitmapBytesPerRow = width;", "+\t\t\tint /*long*/ bitmapByteCount = bitmapBytesPerRow * height;", "+\t\t\tint /*long*/ alphaBitmapData = OS.malloc(bitmapByteCount);", "+\t\t\tint /*long*/ alphaBitmapCtx = OS.CGBitmapContextCreate(alphaBitmapData, width, height, 8, bitmapBytesPerRow, 0, OS.kCGImageAlphaOnly);", "-\t\t\talphaData = new byte[bitmapByteCount];", "+\t\t\talphaData = new byte[(int)/*64*/bitmapByteCount];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8051aa81610b9f5f398184a95897cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\t\tint /*long*/ ctx = OS.CGBitmapContextCreate(rep.bitmapData(), width, height, 8, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst);", "+\t\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\tlong /*int*/ ctx = OS.CGBitmapContextCreate(rep.bitmapData(), width, height, 8, bpr, colorspace, OS.kCGImageAlphaNoneSkipFirst);", "-\t\t\tint /*long*/ bitmapBytesPerRow = width;", "-\t\t\tint /*long*/ bitmapByteCount = bitmapBytesPerRow * height;", "-\t\t\tint /*long*/ alphaBitmapData = OS.malloc(bitmapByteCount);", "-\t\t\tint /*long*/ alphaBitmapCtx = OS.CGBitmapContextCreate(alphaBitmapData, width, height, 8, bitmapBytesPerRow, 0, OS.kCGImageAlphaOnly);", "+\t\t\tlong /*int*/ bitmapBytesPerRow = width;", "+\t\t\tlong /*int*/ bitmapByteCount = bitmapBytesPerRow * height;", "+\t\t\tlong /*int*/ alphaBitmapData = OS.malloc(bitmapByteCount);", "+\t\t\tlong /*int*/ alphaBitmapCtx = OS.CGBitmapContextCreate(alphaBitmapData, width, height, 8, bitmapBytesPerRow, 0, OS.kCGImageAlphaOnly);"]}], "num": 30550}