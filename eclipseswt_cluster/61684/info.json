{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0af8d82b184595fbbf01977c7f6c5422", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87bdbcfa466d7e2ec7c84ff32080d51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "2e3cc3f2343444e38d6648881ff7de0ee9aea010", "commitAfterChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tint /*long*/ font = this.font != null ? this.font.handle : device.systemFont.handle;", "-\tint /*long*/ lang = OS.pango_context_get_language(context);", "-\tint ascent = 0, descent = 0, averageCharWidth = 0, height = 0;", "-\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font, lang);", "+\tint ascent = 0, descent = 0;", "-\tint /*long*/ runs = line.runs;", "-\tif (text.length() == 0 || runs == 0) {", "+\tif (line.runs == 0) {", "+\t\tint /*long*/ font = this.font != null ? this.font.handle : device.systemFont.handle;", "+\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "+\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font, lang);", "-\t\taverageCharWidth = OS.pango_font_metrics_get_approximate_char_width(metrics);", "-\t\theight = ascent + descent;", "+\t\tOS.pango_font_metrics_unref(metrics);", "-\t\tPangoLayoutRun run = new PangoLayoutRun();", "-\t\tPangoItem item = new PangoItem();", "-\t\tint runCount = 0;", "-\t\tascent = Math.max(0, this.ascent * OS.PANGO_SCALE);", "-\t\tdescent = Math.max(0, this.descent * OS.PANGO_SCALE);", "-\t\twhile (runs != 0) {", "-\t\t\tOS.memmove(run, OS.g_slist_data(runs), PangoLayoutRun.sizeof);", "-\t\t\tOS.memmove(item, run.item, PangoItem.sizeof);", "-\t\t\tint /*long*/ runMetrics = metrics;", "-\t\t\tif (item.analysis_font != 0) {", "-\t\t\t\trunMetrics = OS.pango_font_get_metrics(item.analysis_font, item.analysis_language);", "-\t\t\t}", "-\t\t\tint runAscent = OS.pango_font_metrics_get_ascent(runMetrics);", "-\t\t\tint runDescent = OS.pango_font_metrics_get_descent(runMetrics);", "-\t\t\tascent = Math.max(ascent, runAscent);", "-\t\t\tdescent = Math.max(descent, runDescent);", "-\t\t\taverageCharWidth += OS.pango_font_metrics_get_approximate_char_width(runMetrics);", "-\t\t\theight = Math.max(height, runAscent + runDescent);", "-\t\t\tif (metrics != runMetrics) OS.pango_font_metrics_unref(runMetrics);", "-\t\t\trunCount++;", "-\t\t\truns = OS.g_slist_next(runs);", "-\t\t}", "-\t\taverageCharWidth = averageCharWidth / runCount;", "+\t\tPangoRectangle rect = new PangoRectangle();", "+\t\tOS.pango_layout_line_get_extents(OS.pango_layout_get_line(layout, lineIndex), null, rect);", "+\t\tascent = -rect.y;", "+\t\tdescent = rect.height - ascent;", "-\tOS.pango_font_metrics_unref(metrics);", "-\taverageCharWidth = OS.PANGO_PIXELS(averageCharWidth);", "-\theight = OS.PANGO_PIXELS(height);", "-\treturn FontMetrics.gtk_new(ascent, descent, averageCharWidth, 0, height);", "+\treturn FontMetrics.gtk_new(ascent, descent, 0, 0, ascent + descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a598ee50cdfd28d5d9a21f61e73e3f93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "commitAfterChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["-\t\t\tint width = 0, maxWidth = wrapWidth - lineWidth;", "-\t\t\tchar[] buffer = new char[1];", "-\t\t\tbuffer[0] = chars[start];", "-\t\t\tint charWidth = stringWidth(run, buffer);", "-\t\t\twhile (width + charWidth < maxWidth) {", "-\t\t\t\twidth += charWidth;", "-\t\t\t\tstart++;", "+\t\t\tif (!(run.style != null && run.style.metrics != null)) {", "+\t\t\t\tint width = 0, maxWidth = wrapWidth - lineWidth;", "+\t\t\t\tchar[] buffer = new char[1];", "-\t\t\t\tcharWidth =\tstringWidth(run, buffer);", "+\t\t\t\tint charWidth = stringWidth(run, buffer);", "+\t\t\t\twhile (width + charWidth < maxWidth) {", "+\t\t\t\t\twidth += charWidth;", "+\t\t\t\t\tstart++;", "+\t\t\t\t\tbuffer[0] = chars[start];", "+\t\t\t\t\tcharWidth =\tstringWidth(run, buffer);", "+\t\t\t\t}", "-\t\tif (run.style != null && run.style.font != null) {", "-\t\t\tfontStruct = getFontHeigth(run.style.font);", "-\t\t\tascent = Math.max(ascent, fontStruct.ascent);", "-\t\t\tdescent = Math.max(descent, fontStruct.descent);", "+\t\tif (run.style != null ) {", "+\t\t\tint runAscent = 0;", "+\t\t\tint runDescent = 0;", "+\t\t\tif (run.style.metrics != null) {", "+\t\t\t\tGlyphMetrics metrics = run.style.metrics;", "+\t\t\t\trunAscent = metrics.ascent;", "+\t\t\t\trunDescent = metrics.descent;", "+\t\t\t} else if (run.style.font != null) {", "+\t\t\t\tfontStruct = getFontHeigth(run.style.font);", "+\t\t\t\trunAscent = fontStruct.ascent;", "+\t\t\t\trunDescent = fontStruct.descent;", "+\t\t\t}", "+\t\t\tascent = Math.max(ascent, runAscent);", "+\t\t\tdescent = Math.max(descent, runDescent - run.style.rise);", "+\t\t\tif (run.style.rise != 0) {", "+\t\t\t\trun.baseline += run.style.rise;", "+\t\t\t}"]}], "num": 61684}