{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a12251c0a47535c22f50286b8236503", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e435d1f7f93f28ff41533cd538b24ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void test_getSelectionIndices()", "signatureAfterChange": "  public void test_getSelectionIndices()", "diff": ["+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+", "+\tsel = new int[] { 0 };", "+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+", "+\tsel = new int[] { 1 };", "+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+", "+\tsel = new int[] { 2 };", "+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+", "+\tsel = new int[] { 3 };", "+\tlist.setSelection(sel);", "+\tassertSame(new int[] {}, list.getSelectionIndices());", "+", "+\tsel = new int[] { -1, 0, 1, 2, 3 };", "+\tlist.setSelection(sel);", "+\tassertSame(new int[] { 0, 1, 2 }, list.getSelectionIndices());", "+", "+\tsel = new int[] { 1, 1, 2, 2 };", "+\tlist.setSelection(sel);", "+\tassertSame(new int[] { 1, 2 }, list.getSelectionIndices());", "+", "-\tlist.setSelection(items);", "-\tsel = new int[]{ items.length - 1 };", "+", "+\tsel = new int[] { 0 };", "+\tlist.setSelection(sel);", "-\t", "-\tlist.setItems(items);", "-\tassertEquals(new int[] {}, list.getSelectionIndices());", "+\tsel = new int[] { 1 };", "+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+\tsel = new int[] { 2 };", "+\tlist.setSelection(sel);", "+\tassertSame(sel, list.getSelectionIndices());", "+", "+\tsel = new int[] { 3 };", "+\tlist.setSelection(sel);", "+\tassertSame(new int[] {}, list.getSelectionIndices());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0adb3977d896eed68dbfbbbe4e4c74b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "b06cbf7a0e056ef6e3191b7116c2c78a7e2ab1bd", "commitAfterChange": "488ea245d8ed955ed7da346350d79cf2cba672a8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_addLjava_lang_StringI()", "signatureAfterChange": "  public void test_addLjava_lang_StringI()", "diff": ["+\tlist.add(\"\", 0);", "+\tassertSame(\":a:\", new String[] {\"\"}, list.getItems());", "+\tlist.add(\"some \\n text\", 1);", "+\tassertSame(\":b:\", new String[] {\"\", \"some \\n text\"}, list.getItems());", "+\tlist.add(\"some text\", 0);", "+\tassertSame(\":c:\", new String[] {\"some text\", \"\", \"some \\n text\" }, list.getItems());", "+\t", "+\ttry {", "+\t\tlist.add(null, 0);", "+\t\tfail(\"No exception thrown string == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tlist.add(\"string\", -1);", "+\t\tfail(\"No exception thrown index < 0\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\t", "+\tlist.add(\"\", 0);", "+\tassertSame(\":a:\", new String[] {\"\"}, list.getItems());", "+\tlist.add(\"some \\n text\", 1);", "+\tassertSame(\":b:\", new String[] {\"\", \"some \\n text\"}, list.getItems());", "+\tlist.add(\"some text\", 0);", "+\tassertSame(\":c:\", new String[] {\"some text\", \"\", \"some \\n text\" }, list.getItems());", "+\t", "+\ttry {", "+\t\tlist.add(null, 0);", "+\t\tfail(\"No exception thrown string == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tlist.add(\"string\", -1);", "+\t\tfail(\"No exception thrown index < 0\");", "+\t} catch (IllegalArgumentException e) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "161cc36ff8da6b4310866ecb3604e5d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "d57fa299d4e2f86393ed72f6f11975146f1034c9", "commitAfterChange": "0594de6129d9a54641929dc701b29c04482383a7", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test_selectI()", "signatureAfterChange": "  public void test_selectI()", "diff": ["+\tlist.deselectAll();", "+\tlist.select(0);", "+\tassertEquals(\"select(0):\", list.getSelectionIndices(), new int[] { 0 });", "+\tlist.deselectAll();", "+\tlist.select(-1);", "+\tassertEquals(\"select(-1):\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.deselectAll();", "+\tlist.select(-2);", "+\tassertEquals(\"select(-2):\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.deselectAll();", "+\tlist.select(4);", "+\tassertEquals(\"select(4):\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.deselectAll();", "+\tlist.select(0);", "+\tassertEquals(\"select(0):\", list.getSelectionIndices(), new int[] { 0 });", "+\t", "+\tlist.deselectAll();", "+\tlist.select(-1);", "+\tassertEquals(\"select(-1):\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.deselectAll();", "+\tlist.select(-2);", "+\tassertEquals(\"select(-2):\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.deselectAll();", "+\tlist.select(4);", "+\tassertEquals(\"select(4):\", list.getSelectionIndices(), new int[] {});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f16b8b276b2134623c682ba43b7c2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "commitAfterChange": "23dcd594fc9be3d0f9e4026ad70fbcc9f45464d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void test_getSegments()", "signatureAfterChange": " public void test_getSegments()", "diff": ["-\tlayout.setWidth(-1);", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t//Bug 241482 comment 64", "+\tlayout.setText(\"\\nAB\");", "+\tlayout.setSegments(new int[] {0, 1, 3});", "+\tint[] expected = new int[] {0, 1, 3};", "+\tint[] offsets = layout.getLineOffsets();", "+\tfor (int i = 0; i < offsets.length; i++) {", "+\t\tassertEquals(\" i = \" + i, expected[i], offsets[i]);    ", "+\t}", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t", "+\t//Bug 241482 comment  80", "+\tlayout.setText(\"MNMNMN\");", "+\tlayout.setSegments(new int[] {0,1,6});", "+\tlayout.getBounds();", "+\tassertEquals(layout.getText().length() - 1, layout.getOffset(layout.getBounds().width, 0, null));", "+\tlayout.setAscent(9);", "+\tassertEquals(layout.getText().length() - 1, layout.getOffset(layout.getBounds().width, 0, null));", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t", "-\t", "+", "+    /* wrong: internal testing */", "+//  text = \"AB\";", "+//  int textLength = text.length();", "+//  layout.setText(text);", "+//  String[] messages = {\"no segments\", \"segments\", \"segments (duplicate at 0)\", \"segments (duplicate at 1)\", \"segments (duplicate at 2)\"};", "+//  int[][] segments = {null, {0, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}};", "+//  int[][] translatedOffsets = {{0, 1, 2}, {1, 3, 5}, {2, 4, 6}, {1, 4, 6}, {1, 3, 6}};", "+//  int[][] untranslatedOffsets = {{0, 1, 2}, {0, 0, 1, 1, 2, 2}, {0, 0, 0, 1, 1, 2, 2}, {0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 2}};", "+//  for (int i = 0; i < segments.length; i++) {", "+//      layout.setSegments(segments[i]);", "+//      layout.getBounds();", "+//      for (int j = 0; j <= textLength; j++) { ", "+//          assertEquals(messages[i] + \" j = \" + j, translatedOffsets[i][j], layout.translateOffset(j));", "+//      }", "+//      for (int j = 0, n = layout.getSegments() == null ? 0 : textLength + layout.getSegments().length; j < n; j++) { ", "+//          assertEquals(messages[i] + \" j = \" + j, untranslatedOffsets[i][j], layout.untranslateOffset(j));", "+//      }", "+//  }"]}], "num": 20863}