{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44e3dbf4fcdf927038e37397c035cf9c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "328597f0e99c995cc05847e1b1527a28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "8d0b48a25603cd51a4f40a03ee4a20a03407b958", "commitAfterChange": "5479bfb7066e66292947abd087547ed1ac0e1b66", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void insertItemIntoRow(CoolItem item, int rowIndex, int x_root)", "signatureAfterChange": " boolean insertItemIntoRow(CoolItem item, int rowIndex, int x_root)", "diff": ["-void insertItemIntoRow(CoolItem item, int rowIndex, int x_root) {", "+boolean insertItemIntoRow(CoolItem item, int rowIndex, int x_root) {", "+\tif (rowIndex < 0 || rowIndex >= items.length) {", "+\t\t/* Create a new row for the item. */", "+\t\tboolean bottom = rowIndex >= items.length;", "+\t\tCoolItem[][] newRows = new CoolItem[items.length + 1][];", "+\t\tSystem.arraycopy(items, 0, newRows, bottom ? 0 : 1, items.length);", "+\t\tint row = bottom ? items.length : 0;", "+\t\tnewRows[row] = new CoolItem[1];", "+\t\tnewRows[row][0] = item;", "+\t\titems = newRows;", "+\t\titem.wrap = true;", "+\t\treturn true;", "+\t}", "+\t", "-\tint rowY = items[rowIndex][0].internalGetBounds().y;", "+\tRectangle bounds = items[rowIndex][0].internalGetBounds();", "+\tint rowY = bounds.y;", "+\tint oldRowHeight = bounds.height;", "-\tint width = 0, height = item.internalGetBounds().height;", "+\tint width = 0, height = item.preferredHeight;", "-\tRectangle bounds = item.internalGetBounds();", "+\tbounds = item.internalGetBounds();", "+\treturn height > oldRowHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548e77af421da39a7d617df83ba064bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r private int TranslateAccelerator(int lpmsg, int wID)", "signatureAfterChange": "\r private int TranslateAccelerator(int lpmsg, int wID)", "diff": ["+}\r", "-\treturn COM.E_NOTIMPL;\r", "+\tif (menubar == null || menubar.isDisposed() || !menubar.isEnabled()) return COM.S_FALSE;\r", "+\tif (wID < 0) return COM.S_FALSE;\r", "+\t\r", "+\tShell shell = menubar.getShell();\r", "+\tint hwnd = shell.handle;\r", "+\tint hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);\r", "+\tif (hAccel == 0) return COM.S_FALSE;\r", "+\t\r", "+\tMSG msg = new MSG();\r", "+\tOS.MoveMemory(msg, lpmsg, MSG.sizeof);\r", "+\tint result = OS.TranslateAccelerator(hwnd, hAccel, msg);\r", "+\treturn result == 0 ? COM.S_FALSE : COM.S_OK;\r"]}], "num": 61052}