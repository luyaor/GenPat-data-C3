{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d488d2638570102d9387a928819e0e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf695d94ee05e2b98a6bb5d47f352d30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\t/* AW", "-\tint clipRgn = data.clipRgn;", "-\tif (clipRgn == 0) {", "-\t\tint[] width = new int[1]; int[] height = new int[1];", "-\t\tint[] unused = new int[1];", "-\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);", "-\t\treturn new Rectangle(0, 0, width[0], height[0]);", "-\t}", "-\tXRectangle rect = new XRectangle();", "-\tOS.XClipBox(clipRgn, rect);", "-\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);", "-\t*/", "-\tMacRect bounds= new MacRect();", "-\t\tif (data.controlHandle != 0) {", "-\t\t\tOS.GetControlBounds(data.controlHandle, bounds.getData());", "-\t\t\treturn new Rectangle(0, 0, bounds.getWidth(), bounds.getHeight());", "+\t\tint width = 0, height = 0;", "+\t\tif (data.control != 0) {", "+\t\t\tRect bounds = new Rect();", "+\t\t\tOS.GetControlBounds(data.control, bounds);", "+\t\t\twidth = bounds.right - bounds.left;", "+\t\t\theight = bounds.bottom - bounds.top;", "-\t\t\treturn data.image.getBounds();", "-\t\t}\t", "-\t\tSystem.out.println(\"GC.getClipping(): should not happen\");", "-\t\treturn new Rectangle(0, 0, 100, 100);", "+\t\t\tint image = data.image.handle;", "+\t\t\twidth = OS.CGImageGetWidth(image);", "+\t\t\theight = OS.CGImageGetHeight(image);", "+\t\t}", "+\t\treturn new Rectangle(0, 0, width, height);", "-\tOS.GetRegionBounds(data.clipRgn, bounds.getData());", "-\treturn bounds.toRectangle();", "+\tRect bounds = new Rect();", "+\tOS.GetRegionBounds(data.clipRgn, bounds);", "+\tint width = bounds.right - bounds.left;", "+\tint height = bounds.bottom - bounds.top;", "+\treturn new Rectangle(bounds.left, bounds.top, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83101388c13b6db36f12a6ecf531d387", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-public void getClipping(Region region) {", "+public void getClipping(Region region) {\t", "-\t", "-\tif (region.handle == 0)", "-\t\tregion.handle= OS.NewRgn();", "-\t\t", "-\t\tif (data.controlHandle != 0) {", "-\t\t\tOS.GetControlRegion(data.controlHandle, OS.kWindowContentRgn, region.handle);", "-\t\t} else", "-\t\t\tSystem.out.println(\"GC.getClipping(Region): nyi\");", "-\t} else {", "-\t\tOS.CopyRgn(data.clipRgn, region.handle);", "-\t}", "-\t", "-\t/* AW", "-\tif (clipRgn == 0) {", "-\t\tint[] width = new int[1]; int[] height = new int[1];", "-\t\tint[] unused = new int[1];", "-\t\tOS.XGetGeometry(data.display, data.drawable, unused, unused, unused, width, height, unused, unused);", "-\t\tOS.XSubtractRegion (hRegion, hRegion, hRegion);", "-\t\tXRectangle rect = new XRectangle();", "-\t\trect.x = 0; rect.y = 0;", "-\t\trect.width = (short)width[0]; rect.height = (short)height[0];", "-\t\tOS.XUnionRectWithRegion(rect, hRegion, hRegion);", "+\t\tint width = 0, height = 0;", "+\t\tif (data.control != 0) {", "+\t\t\tRect bounds = new Rect();", "+\t\t\tOS.GetControlBounds(data.control, bounds);", "+\t\t\twidth = bounds.right - bounds.left;", "+\t\t\theight = bounds.bottom - bounds.top;", "+\t\t}", "+\t\tif (data.image != null) {", "+\t\t\tint image = data.image.handle;", "+\t\t\twidth = OS.CGImageGetWidth(image);", "+\t\t\theight = OS.CGImageGetHeight(image);", "+\t\t}", "+\t\tOS.SetRectRgn(region.handle, (short) 0, (short) 0, (short) width, (short) height);", "-\tOS.XSubtractRegion (hRegion, hRegion, hRegion);", "-\tOS.XUnionRegion (clipRgn, hRegion, hRegion);", "-\t*/", "+\tOS.CopyRgn(data.clipRgn, region.handle);"]}], "num": 1010}