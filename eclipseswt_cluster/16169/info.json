{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4beb38f504d681bb31283a687d96eca", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb49cbbe2fbb0d7f03e62ce3c196495e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 33, "signatureBeforeChange": " public int getItemHeight ()", "signatureAfterChange": " public int getItemHeight ()", "diff": ["-\t\tint [] w = new int [1], h = new int [1];", "-\t\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "-\t\tOS.gtk_tree_view_column_cell_get_size (columnHandle, null, null, null, w, h);", "-\t\tOS.gtk_tree_view_remove_column (handle, columnHandle);", "-\t\treturn h [0];", "-\t} else {", "-\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "-\t\tOS.gtk_tree_model_get_iter_first (modelHandle, iter);", "-\t\tOS.gtk_tree_view_column_cell_set_cell_data (column, modelHandle, iter, false, false);", "-\t\tOS.g_free (iter);", "+\t} else {", "+\t\tint height = 0;", "+\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\tOS.gtk_tree_model_get_iter_first (modelHandle, iter);", "+\t\tint columnCount = Math.max (1, this.columnCount);", "+\t\tfor (int i=0; i<columnCount; i++) {", "+\t\t\tint /*long*/ column = OS.gtk_tree_view_get_column (handle, i);", "+\t\t\tOS.gtk_tree_view_column_cell_set_cell_data (column, modelHandle, iter, false, false);", "+\t\t\tint [] w = new int [1], h = new int [1];", "+\t\t\tOS.gtk_tree_view_column_cell_get_size (column, null, null, null, w, h);", "+\t\t\theight = Math.max (height, h [0]);", "+\t\t}", "+\t\tOS.g_free (iter);", "+\t\treturn height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cae409e002d41161018e13365c656e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2ad35a79e1da2fe8318bbce6af2fdb11b9910104", "commitAfterChange": "0f4d87727b5616dcc5338fc2e1d5e5f2c63696aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t//TODO - add CHECK column", "+\t\t//TODO - add CHECK column + extra space", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tImage image = item.getImage ();", "-\t\t\tString text = item.getText ();", "-\t\t\tint itemWidth = 0;", "-\t\t\tif (image != null) itemWidth = image.getBounds ().width + 2;", "-\t\t\tif (text != null && text.length () > 0) itemWidth += gc.stringExtent (text).x;", "-\t\t\twidth = Math.max (width, itemWidth);", "+\t\tint columnCount = Math.max (this.columnCount, 1);", "+\t\tfor (int j=0; j<columnCount; j++) {", "+\t\t\tint columnWidth = 0;", "+\t\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\t\tTableItem item = items [i];", "+\t\t\t\tImage image = item.getImage (j);", "+\t\t\t\tString text = item.getText (j);", "+\t\t\t\tint itemWidth = 0;", "+\t\t\t\tif (image != null) itemWidth = image.getBounds ().width + 2;", "+\t\t\t\tif (text != null && text.length () > 0) itemWidth += gc.stringExtent (text).x;", "+\t\t\t\tcolumnWidth = Math.max (columnWidth, itemWidth);", "+\t\t\t}", "+\t\t\twidth += columnWidth + 20;", "+\t\tif ((style & SWT.CHECK) != 0) width += 35 + 20;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6c72db76fc60032af535c05953216be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tTreeItem [] items = getItems ();", "+\t\tTreeItem [] items = getItems (null);", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tTreeItem item = items [i];", "-\t\t\twidth = Math.max (width, item.calculateWidth (gc));", "+\t\tint columnCount = Math.max (this.columnCount, 1);", "+\t\tfor (int j=0; j<columnCount; j++) {", "+\t\t\tint columnWidth = this.columnCount != 0 ? columns [j].getWidth () : 0;", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tcolumnWidth = Math.max (columnWidth, items [i].calculateWidth (j, gc));", "+\t\t\t}", "+\t\t\twidth += columnWidth + EXTRA_WIDTH;", "-\t\twidth += EXTRA_WIDTH;", "-\t\theight = getItemCount () * getItemHeight ();", "+\t\theight = getItemCount () * getItemHeight () + getHeaderHeight();"]}], "num": 16169}