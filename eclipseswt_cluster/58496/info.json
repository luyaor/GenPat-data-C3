{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f8ae63c5d42c8ccfe011944f35b8e44", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7343055c4f3e5319077fd62622893c4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "c58691d416476543a711efb8d8fef004d55ca7cb", "commitAfterChange": "a6582da2b4670467019588906b3cf5d5d15d7dbf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": "\r public boolean execute (String fileName)", "diff": ["- */", "-public boolean execute (String fileName) {", "-\tif (fileName == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\t", "-\treturn false;", "-}", "+ */\r", "+public boolean execute (String fileName) {\r", "+\tif (fileName == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\r", "+\t\r", "+\tint desktop = getDesktop(display);\r", "+\tif (desktop == DESKTOP_GNOME) {\t\t\r", "+\t\tif (gnomeExpectUri) {\r", "+\t\t\t/* convert the given path into a URL */\r", "+\t\t\tfileName = \"file://\" + fileName;\r", "+\t\t}\r", "+\r", "+\t\t// Parse the command into its individual arguments.\r", "+\t\tString[] args = parseCommand(command);\r", "+\t\tint fileArg = -1;\r", "+\t\tint index;\r", "+\t\tfor (index = 0; index < args.length; index++) {\r", "+\t\t\tint j = args[index].indexOf(\"%f\");\r", "+\t\t\tif (j != -1) {\r", "+\t\t\t\tString value = args[index];\r", "+\t\t\t\tfileArg = index;\r", "+\t\t\t\targs[index] = value.substring(0, j) + fileName + value.substring(j + 2);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\r", "+\t\t// If a file name was given but the command did not have \"%f\"\r", "+\t\tif ((fileName.length() > 0) && (fileArg < 0)) {\r", "+\t\t\tString[] newArgs = new String[args.length + 1];\r", "+\t\t\tfor (index = 0; index < args.length; index++)\r", "+\t\t\t\tnewArgs[index] = args[index];\r", "+\t\t\tnewArgs[args.length] = fileName;\r", "+\t\t\targs = newArgs;\r", "+\t\t}\r", "+\t\r", "+\t\t// Execute the command.\r", "+\t\ttry {\r", "+\t\t\tCompatibility.exec(args);\r", "+\t\t} catch (IOException e) {\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t\treturn true;\r", "+\t}\t\t\r", "+\r", "+\treturn false;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31cec195aafe3bf163104b72975f266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "3b0ac113d2b0be33221673aa6f3ada5f0d0911c0", "commitAfterChange": "48737b3c2cf609849ea87ebdfeb38e228af5b142", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public TableItem [] getSelection ()", "signatureAfterChange": " public TableItem [] getSelection ()", "diff": ["-\tdisplay.treeSelectionLength  = 0;", "-\tdisplay.treeSelection = new int [itemCount];", "-\tOS.gtk_tree_selection_selected_foreach (selection, display.treeSelectionProc, handle);", "-\tTableItem [] result = new TableItem [display.treeSelectionLength];", "-\tfor (int i=0; i<result.length; i++) result [i] = _getItem (display.treeSelection [i]);", "-\treturn result;", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 2, 0)) {", "+\t\tdisplay.treeSelectionLength  = 0;", "+\t\tdisplay.treeSelection = new int [itemCount];", "+\t\tOS.gtk_tree_selection_selected_foreach (selection, display.treeSelectionProc, handle);", "+\t\tTableItem [] result = new TableItem [display.treeSelectionLength];", "+\t\tfor (int i=0; i<result.length; i++) result [i] = _getItem (display.treeSelection [i]);", "+\t\treturn result;", "+\t}", "+\tint /*long*/ list = OS.gtk_tree_selection_get_selected_rows(selection, null);", "+\tif (list != 0) {", "+\t\tint count = OS.g_list_length (list);", "+\t\tint [] treeSelection = new int [count];", "+\t\tint length = 0;", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tint /*long*/ data = OS.g_list_nth_data (list, i);", "+\t\t\tint /*long*/ indices = OS.gtk_tree_path_get_indices (data);", "+\t\t\tif (indices != 0) {", "+\t\t\t\tint [] index = new int [1];", "+\t\t\t\tOS.memmove (index, indices, 4);", "+\t\t\t\ttreeSelection [length] = index [0];", "+\t\t\t\tlength++;", "+\t\t\t}", "+\t\t}", "+\t\tOS.g_list_free (list);", "+\t\tTableItem [] result = new TableItem [length];", "+\t\tfor (int i=0; i<result.length; i++) result [i] = _getItem (treeSelection [i]);", "+\t\treturn result;", "+\t}", "+\treturn new TableItem [0];"]}], "num": 58496}