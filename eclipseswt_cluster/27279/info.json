{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd3e26ad9c8af6a2aa69dc2f0fcce53d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84855e7b785bffe5d178e064be892e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0d8dc460c03fdec72d7b45611f753b89cb7a8b0a", "commitAfterChange": "67f04779390804c5d6965c83d748a27aedf8d1f1", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "  static int applicationProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int applicationProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_applicationDockMenu_) {", "+\t\tTaskBar taskbar = display.taskBar;", "+\t\tif (taskbar != null && taskbar.itemCount != 0) {", "+\t\t\tTaskItem item = taskbar.getItem(null);", "+\t\t\tif (item != null) {", "+\t\t\t\tMenu menu = item.getMenu();", "+\t\t\t\tif (menu != null && !menu.isDisposed()) {", "+\t\t\t\t\treturn menu.nsMenu.id;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bf72bbfefd6a279b2a6083fe4c240d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "38a4564f45bb94d6fbc14b05cd8ef1c7922c4ac2", "commitAfterChange": "8cfc2f3bd1b2a6a72c92cc1760844c33f5f077dc", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  static int applicationDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int applicationDelegateProc(int id, int sel, int arg0)", "diff": ["-\t} ", "+\t} else if (sel == OS.sel_applicationDidBecomeActive_) {", "+\t\tControl control = display.getFocusControl();", "+\t\tif (control != null && !control.isDisposed()) {", "+\t\t\tdisplay.focusControl = control;", "+\t\t\tcontrol.sendFocusEvent(SWT.FocusIn, false);", "+\t\t}", "+\t} else if (sel == OS.sel_applicationDidResignActive_) {", "+\t\tControl control = display.focusControl;", "+\t\tif (control != null && !control.isDisposed()) {", "+\t\t\tdisplay.focusControl = null;", "+\t\t\tcontrol.sendFocusEvent(SWT.FocusOut, false);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ae7c7a754951deb383f4a6315c3ce6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "df31d2a425f25f906948fa5749362f991bfc6bd8", "commitAfterChange": "eee00daf67e9f4ca1006a6ea91ebe30bbc14e6d5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": " public boolean forceFocus ()", "diff": ["+\tControl oldFocus = display.getFocusControl ();", "+\tdisplay.ignoreFocus = true;", "+\tdisplay.ignoreFocus = false;", "+\tControl newFocus = display.getFocusControl ();", "+\tif (oldFocus != newFocus) {", "+\t\tif (oldFocus != null && !oldFocus.isDisposed ()) oldFocus.sendFocusEvent (SWT.FocusOut, false);", "+\t\tif (newFocus != null && !newFocus.isDisposed () && newFocus.isEnabled ()) newFocus.sendFocusEvent (SWT.FocusIn, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4033febb813c8fa1decce58827b4e5b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7b1d745a08a3e5e966924f3130abf5f742ba4fab", "commitAfterChange": "0cf2458bdedc1c8ab7562ec0d2fe9423d25c9e06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static int checkStyle(int style)", "signatureAfterChange": "  static int checkStyle(int style)", "diff": ["+\tif (DefaultType == SWT.DEFAULT) {", "+\t\tString value = System.getProperty (PROPERTY_DEFAULTTYPE);", "+\t\tif (value != null) {", "+\t\t\tif (value.equalsIgnoreCase (\"mozilla\")) { //$NON-NLS-1$", "+\t\t\t\tDefaultType = SWT.MOZILLA;", "+\t\t\t} else if (value.equalsIgnoreCase (\"webkit\")) { //$NON-NLS-1$", "+\t\t\t\tDefaultType = SWT.WEBKIT;", "+\t\t\t}", "+\t\t}", "+\t\tif (DefaultType == SWT.DEFAULT) {", "+\t\t\tDefaultType = SWT.NONE;", "+\t\t}", "+\t}", "+", "+\tif ((style & (SWT.MOZILLA | SWT.WEBKIT)) == 0) {", "+\t\tstyle |= DefaultType;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641bb143ff9366649acacfdb26b65fc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "81a2c84649a4453c790d7b6a9f36522a82f5f56a", "commitAfterChange": "b454bc113a8533fb302edd8590066684b051dbde", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  boolean canBecomeKeyWindow (int id, int sel)", "signatureAfterChange": "  boolean canBecomeKeyWindow (int id, int sel)", "diff": ["+\t\tif ((style & SWT.NO_FOCUS) != 0) {", "+\t\t\tNSEvent nsEvent = NSApplication.sharedApplication().currentEvent();", "+\t\t\tif (nsEvent != null && nsEvent.type() == OS.NSLeftMouseDown) {", "+\t\t\t\tNSView contentView = window.contentView();", "+\t\t\t\tif (contentView != null) {", "+\t\t\t\t\tNSView view = contentView.hitTest(nsEvent.locationInWindow());", "+\t\t\t\t\tif (view == contentView) return false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cb8cb6f4d609daa1493464e9a457bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "2f67efb12116378f6c4fe455aa16cedec07ec5d6", "commitAfterChange": "486cb9d274cada4c313732fb1f41ca4e0cc984ca", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "  void setWindowVisible (boolean visible, boolean key)", "signatureAfterChange": "  void setWindowVisible (boolean visible, boolean key)", "diff": ["+\tif (isDisposed()) return;", "+", "+\tif (isDisposed()) return;", "+\tNSView[] hitView = new NSView[1];", "+\tControl control = display.findControl (false, hitView);", "+\tif (control != null && (!control.isActive() || !control.isEnabled())) control = null;", "+\tControl trimControl = control;", "+\tif (trimControl != null && trimControl.isTrim (hitView[0])) trimControl = null;", "+\tdisplay.checkEnterExit (trimControl, null, false);"]}], "num": 27279}