{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78939bd7d9f3e770a22c4053c3d761cc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b3ea731d34705e1048cda883a10f35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "89eb385b1da972fcbe2914fa0139ceb359ab6ba8", "commitAfterChange": "f304fd949d33aeaf7168524a4af52e038b23993e", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void setRedraw (boolean redraw)", "signatureAfterChange": " public void setRedraw (boolean redraw)", "diff": ["+\tif (redraw) {", "+\t\tif (--drawCount == 0) {", "+\t\t\tif (redrawWindow != 0) {", "+\t\t\t\tint xDisplay = OS.XtDisplay(handle);", "+\t\t\t\tOS.XDestroyWindow(xDisplay, redrawWindow);", "+\t\t\t\tredrawWindow = 0;", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tif (drawCount++ == 0) {", "+\t\t\tint xDisplay = OS.XtDisplay (handle);", "+\t\t\tif (xDisplay == 0) return;", "+\t\t\tint xWindow = OS.XtWindow (handle);", "+\t\t\tif (xWindow == 0) return;", "+\t\t\tRectangle rect = getBounds();", "+\t\t\tXSetWindowAttributes attributes = new XSetWindowAttributes ();", "+\t\t\tattributes.background_pixmap = OS.None;", "+\t\t\tattributes.event_mask = OS.ExposureMask;", "+\t\t\tint mask = OS.CWDontPropagate | OS.CWEventMask | OS.CWBackPixmap;", "+\t\t\tredrawWindow = OS.XCreateWindow (xDisplay, xWindow, 0, 0, rect.width, rect.height,", "+\t\t\t\t\t0,OS.CopyFromParent, OS.CopyFromParent, OS.CopyFromParent, mask, attributes);", "+\t\t\tOS.XRaiseWindow (xDisplay, redrawWindow);", "+\t\t\tOS.XMapWindow (xDisplay, redrawWindow);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5007266ee5790312f679a536aae9aad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "ef2c019fd0294b2970a5f92b4892277f3d0a8568", "commitAfterChange": "2637aeee793efc6570a7b95e5bfd1e1b7facd424", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \r int Ph_EV_BUT_PRESS (int widget, int info)", "signatureAfterChange": "\r \r int Ph_EV_BUT_PRESS (int widget, int info)", "diff": ["+\tint result = super.Ph_EV_BUT_PRESS (widget, info);\r", "+\tif (result != OS.Pt_CONTINUE)return result;\r", "+\tif ((state & CANVAS) != 0) {\r", "+\t\tif (info == 0) return OS.Pt_END;\r", "+\t\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "+\t\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "+\t\tif (cbinfo.event == 0) return OS.Pt_END;\r", "+\t\tPhEvent_t ev = new PhEvent_t ();\r", "+\t\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "+\t\tint data = OS.PhGetData (cbinfo.event);\r", "+\t\tif (data == 0) return OS.Pt_END;\r", "+\t\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\t\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\t\r", "+\t\t/* Set focus for a CANVAS with no children */\r", "+\t\tif ((style & SWT.NO_FOCUS) == 0) {\r", "+\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "+\t\t\t\tif (OS.PtWidgetChildFront (handle) == 0) setFocus ();\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\treturn result;\r", "+}\r", "-\t\tif (!(menu != null && pe.buttons == OS.Ph_BUTTON_MENU)) {\r", "-\t\t\tif (pe.click_count == 1) {\r", "-\t\t\t\tPhRect_t rect = new PhRect_t ();\r", "-\t\t\t\tPhPoint_t pos = new PhPoint_t();\r", "-\t\t\t\tpos.x = pe.pos_x;\r", "-\t\t\t\tpos.y = pe.pos_y;\r", "-\t\t\t\trect.ul_x = rect.lr_x = (short) (pos.x + ev.translation_x);\r", "-\t\t\t\trect.ul_y = rect.lr_y = (short) (pos.y + ev.translation_y);\r", "-\t\t\t\tint rid = OS.PtWidgetRid (handle);\r", "-\t\t\t\tint input_group = OS.PhInputGroup (0);\r", "-\t\t\t\tint flags = OS.Ph_DRAG_KEY_MOTION | OS.Ph_DRAG_TRACK | OS.Ph_TRACK_DRAG;\r", "-\t\t\t\tOS.PhInitDrag (rid, flags, rect, null, input_group, null, null, null, pos, null);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\r", "-\t\tint result = super.Ph_EV_BUT_PRESS (widget, info);\r", "-\t\r", "-\t\t/* Set focus for the a CANVAS with no children */\r", "-\t\tif ((style & SWT.NO_FOCUS) == 0) {\r", "-\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "-\t\t\t\tif (OS.PtWidgetChildFront (handle) == 0) {\r", "-\t\t\t\t\tsetFocus ();\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn result;\r", "-\treturn super.Ph_EV_BUT_PRESS (widget, info);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dc984f6308dad77d2b9550f82c17c20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "41efa709fc7b42b5d6c32ef02ee91aff46f38f19", "commitAfterChange": "610006779f31a591399b2248feb3ec3f70558558", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \r int processMouse (int info)", "signatureAfterChange": "\r \r int processMouse (int info)", "diff": ["-\r", "-\t/* Set focus for a canvas with no children */\r", "-\tif ((state & CANVAS) != 0 && (style & SWT.NO_FOCUS) == 0) {\r", "-\t\tif (OS.PtWidgetChildFront (handle) == 0) {\r", "-\t\t\tif (info == 0) return OS.Pt_END;\r", "-\t\t\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "-\t\t\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "-\t\t\tif (cbinfo.event == 0) return OS.Pt_END;\r", "-\t\t\tPhEvent_t ev = new PhEvent_t ();\r", "-\t\t\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "-\t\t\tswitch (ev.type) {\r", "-\t\t\t\tcase OS.Ph_EV_BUT_PRESS: {\r", "-\t\t\t\t\tint data = OS.PhGetData (cbinfo.event);\r", "-\t\t\t\t\tif (data == 0) return OS.Pt_END;\r", "-\t\t\t\t\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "-\t\t\t\t\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "-\t\t\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "+\tint result = super.processMouse (info);\r", "+\tif ((state & CANVAS) != 0) {\r", "+\t\tif (info == 0) return OS.Pt_END;\r", "+\t\tPtCallbackInfo_t cbinfo = new PtCallbackInfo_t ();\r", "+\t\tOS.memmove (cbinfo, info, PtCallbackInfo_t.sizeof);\r", "+\t\tif (cbinfo.event == 0) return OS.Pt_END;\r", "+\t\tPhEvent_t ev = new PhEvent_t ();\r", "+\t\tOS.memmove (ev, cbinfo.event, PhEvent_t.sizeof);\r", "+\t\tif (ev.type == OS.Ph_EV_BUT_PRESS) {\r", "+\t\t\tint data = OS.PhGetData (cbinfo.event);\r", "+\t\t\tif (data == 0) return OS.Pt_END;\r", "+\t\t\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\t\t\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\t\r", "+\t\t\t/* Grab pointer */\r", "+\t\t\tPhRect_t rect = new PhRect_t ();\r", "+\t\t\tPhPoint_t pos = new PhPoint_t();\r", "+\t\t\tpos.x = pe.pos_x;\r", "+\t\t\tpos.y = pe.pos_y;\r", "+\t\t\trect.ul_x = rect.lr_x = (short) (pos.x + ev.translation_x);\r", "+\t\t\trect.ul_y = rect.lr_y = (short) (pos.y + ev.translation_y);\r", "+\t\t\tint rid = OS.PtWidgetRid (handle);\r", "+\t\t\tint input_group = OS.PhInputGroup (0);\r", "+\t\t\tint flags = OS.Ph_DRAG_KEY_MOTION | OS.Ph_DRAG_TRACK | OS.Ph_TRACK_DRAG;\r", "+\t\t\tOS.PhInitDrag (rid, flags, rect, null, input_group, null, null, null, pos, null);\r", "+\t\r", "+\t\t\t/* Set focus for the a CANVAS with no children */\r", "+\t\t\tif ((style & SWT.NO_FOCUS) == 0) {\r", "+\t\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "+\t\t\t\t\tif (OS.PtWidgetChildFront (handle) == 0) {\r", "-\treturn super.processMouse (info);\r", "+\treturn result;\r"]}], "num": 44723}