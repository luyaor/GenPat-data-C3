{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e092eb9011c8c0301f157a3e583e752", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d615c53b5260a63e47827dc3c5d1a54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FillLayout.java", "commitBeforeChange": "cbd5bc87c90c3612891c4f0448a5afb226fe9416", "commitAfterChange": "b20cb652a94e4b79370c55088a0d15b4930c7b63", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["-\t\tPoint size = child.computeSize (SWT.DEFAULT, SWT.DEFAULT, flushCache);", "+\t\tint w = wHint, h = hHint;", "+\t\tif (count > 0) {", "+\t\t\tif (type == SWT.HORIZONTAL && wHint != SWT.DEFAULT) {", "+\t\t\t\tw = Math.max (0, (wHint - (count - 1) * spacing) / count);", "+\t\t\t}", "+\t\t\tif (type == SWT.VERTICAL && hHint != SWT.DEFAULT) {", "+\t\t\t\th = Math.max (0, (hHint - (count - 1) * spacing) / count);", "+\t\t\t}", "+\t\t}", "+\t\tPoint size = computeSize (child, w, h, flushCache);", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17d1429120ef5d1e11c2717aca778c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "6beb8d27b1e3b810aad88dcced73a9ae0f53cf0d", "commitAfterChange": "8e5c97c9e89c4e78164a728ed489008ab911e93b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["+\t\tleftSize.x += 1; // +1 for highlight line\r", "-\tif (separateTopCenter) {\r", "+\tif (separateTopCenter ||\r", "+\t    (wHint != SWT.DEFAULT &&  leftSize.x + centerSize.x + rightSize.x > wHint)) {\r", "-\t\tsize.y = Math.max(leftSize.y, rightSize.y);\r", "+\t\tsize.y = Math.max(leftSize.y, rightSize.y) + 1; // +1 for highlight line\r", "-\t\tsize.y = Math.max(leftSize.y, Math.max(centerSize.y, rightSize.y));\r", "+\t\tsize.y = Math.max(leftSize.y, Math.max(centerSize.y, rightSize.y)) + 1; // +1 for highlight line\r", "-\t\tsize.y += contentSize.y;\r", "+\t\tsize.y += contentSize.y + 1; // +1 for line bewteen content and header\r", "-\tsize.x += 2 * marginWidth + BORDER_LEFT + BORDER_RIGHT;\r", "-\tsize.y += 2 * marginHeight + BORDER_TOP + BORDER_BOTTOM;\r", "-\r", "-\treturn size;\r", "+\tsize.x += 2 * marginWidth;\r", "+\tsize.y += 2 * marginHeight;\r", "+\t\r", "+\tif (wHint != SWT.DEFAULT) size.x  = wHint;\r", "+\tif (hHint != SWT.DEFAULT) size.y = hHint;\r", "+\t\r", "+\tRectangle trim = computeTrim(0, 0, size.x, size.y);\r", "+\treturn new Point (trim.width, trim.height);\r", "+}\r"]}], "num": 57688}