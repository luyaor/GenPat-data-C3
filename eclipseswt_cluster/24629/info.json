{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb31c5b77e6746761ac772c9924cfb13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098c273ec6b0cfd6022a8625920a7396", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java", "commitBeforeChange": "c37bacdb8fd50f404fe6b0c6e0d6e316e3b689b7", "commitAfterChange": "b0132858d0f6fa6b76f7553aaba26f6734df704e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid createControlWidgets()", "signatureAfterChange": " \tvoid createControlWidgets()", "diff": ["+        /* Controls the topControl in the StackLayout */", "+\t\tGroup columnGroup = new Group (controlGroup, SWT.NONE);", "+\t\tcolumnGroup.setText (\"topControl\");//(LayoutExample.getResourceString (\"Top_Control\"));", "+\t\tcolumnGroup.setLayout(new GridLayout(3, false));", "+\t\tcolumnGroup.setLayoutData(new GridData (SWT.FILL, SWT.FILL, false, false));", "+\t\tbackButton = new Button(columnGroup, SWT.PUSH);", "+\t    backButton.setText(\"<<\");", "+\t    backButton.setEnabled(false);", "+\t\tbackButton.setLayoutData(new GridData (SWT.END, SWT.CENTER, false, false));", "+\t\tbackButton.addSelectionListener(new SelectionAdapter() {", "+\t        public void widgetSelected(SelectionEvent e) {", "+\t\t    \tsetTopControl (currentLayer - 1);", "+\t        }", "+\t\t});", "+\t\ttopControl = new Label (columnGroup, SWT.BORDER);", "+\t\ttopControl.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));", "+\t\tadvanceButton = new Button(columnGroup, SWT.PUSH);", "+\t\tadvanceButton.setText(\">>\");", "+\t\tadvanceButton.setEnabled(false);", "+\t\tadvanceButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t    \tsetTopControl (currentLayer + 1);", "+\t        }", "+\t\t});\t\t", "+", "-\t\tmarginGroup.setLayoutData (new GridData(SWT.FILL, SWT.CENTER, true, false));", "-\t\tnew Label(marginGroup, SWT.NONE).setText(\"Margin Width\");", "+\t\tmarginGroup.setLayoutData (new GridData(SWT.FILL, SWT.CENTER, false, false));", "+\t\tnew Label(marginGroup, SWT.NONE).setText(\"marginWidth\");", "-\t\tnew Label(marginGroup, SWT.NONE).setText(\"Margin Height\");", "+\t\tnew Label(marginGroup, SWT.NONE).setText(\"marginHeight\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b23ae4532579536c8b634bbde6e9ebdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r private void onSelection(Event event)", "signatureAfterChange": "\r private void createCloseBar()", "diff": ["+}\r", "+private void createCloseBar() {\r", "+\tColor background = getBackground();\r", "+\tcloseBar = new ToolBar(this, SWT.FLAT);\r", "+\tcloseBar.setVisible(false);\r", "+\tcloseBar.setBackground(background);\r", "+\tToolItem closeItem = new ToolItem(closeBar, SWT.PUSH);\r", "+\t\r", "+\tinactiveCloseBar = new ToolBar(this, SWT.FLAT);\r", "+\tinactiveCloseBar.setVisible(false);\r", "+\tinactiveCloseBar.setBackground(background);\r", "+\tToolItem inactiveCloseItem = new ToolItem(inactiveCloseBar, SWT.PUSH);\r", "+\r", "+\tcloseItem.addListener(SWT.Selection, new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tcloseNotify(getSelection(), event.time);\r", "+\t\t}\r", "+\t});\r", "+\tinactiveCloseItem.addListener(SWT.Selection, new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tcloseNotify(inactiveItem, event.time);\r", "+\t\t\tinactiveCloseBar.setVisible(false);\r", "+\t\t\tinactiveItem = null;\r", "+\t\t}\r", "+\t});\r", "+\tinactiveCloseBar.addListener (SWT.MouseExit, new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tif (inactiveItem != null) {\r", "+\t\t\t\tRectangle itemBounds = inactiveItem.getBounds();\r", "+\t\t\t\tif (itemBounds.contains(event.x, event.y)) return;\r", "+\t\t\t}\r", "+\t\t\tinactiveCloseBar.setVisible(false);\r", "+\t\t\tinactiveItem = null;\r", "+\t\t}\r", "+\t});\r", "+\t\r", "+}\r", "-private void onSelection(Event event) {\r", "-\tif (event.widget == scrollLeft) {\r", "-\t\tscroll_scrollLeft();\r", "-\t}\r", "-\tif (event.widget == scrollRight) {\r", "-\t\tscroll_scrollRight();\r", "-\t}\r", "-\tif (event.widget == closeItem) {\r", "-\t\tcloseNotify(getSelection(), event.time);\r", "-\t}\r", "-\tif (event.widget == inactiveCloseItem) {\r", "-\t\tcloseNotify(inactiveItem, event.time);\r", "-\t\tinactiveCloseBar.setVisible(false);\r", "-\t\tinactiveItem = null;\r", "-\t}\r", "-}\r"]}], "num": 24629}