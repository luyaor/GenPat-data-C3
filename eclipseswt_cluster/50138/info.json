{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66e2e3bc1fe2b4250de83c45e36d49ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "215ea745de47507236ca309da9a7f540", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "6938a0dacfb030f7e7b03dc092215adacd9a08a9", "commitAfterChange": "2f091781ca405b743f12ec57a146bdda9d7d30d0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, int srcImage)", "diff": ["+", "+void copyArea (Image image, int x, int y, int /*long*/ srcImage) {", "+\tif (srcImage == 0) return;", "+\tNSBitmapImageRep rep = image.imageRep;", "+\tint /*long*/ bpc = rep.bitsPerSample();", "+\tint /*long*/ width = rep.pixelsWide();", "+\tint /*long*/ height = rep.pixelsHigh();", "+\tint /*long*/ bpr = rep.bytesPerRow();", "+\tint alphaInfo = rep.hasAlpha() ? OS.kCGImageAlphaFirst : OS.kCGImageAlphaNoneSkipFirst;", "+\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\tint /*long*/ context = OS.CGBitmapContextCreate(rep.bitmapData(), width, height, bpc, bpr, colorspace, alphaInfo);", "+\tOS.CGColorSpaceRelease(colorspace);", "+\tif (context != 0) {", "+\t \tCGRect rect = new CGRect();", "+\t \trect.origin.x = -x;", "+\t \trect.origin.y = y;", "+\t \trect.size.width = OS.CGImageGetWidth(srcImage);", "+\t\trect.size.height = OS.CGImageGetHeight(srcImage);", "+\t\tOS.CGContextTranslateCTM(context, 0, -(rect.size.height - height));", "+\t\tOS.CGContextDrawImage(context, rect, srcImage);", "+\t\tOS.CGContextRelease(context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f698a0fb2986e7042e95bf65cf96b020", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void copyArea (Image image, int x, int y, int srcImage)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, long srcImage)", "diff": ["-void copyArea (Image image, int x, int y, int /*long*/ srcImage) {", "+void copyArea (Image image, int x, int y, long /*int*/ srcImage) {", "-\tint /*long*/ bpc = rep.bitsPerSample();", "-\tint /*long*/ width = rep.pixelsWide();", "-\tint /*long*/ height = rep.pixelsHigh();", "-\tint /*long*/ bpr = rep.bytesPerRow();", "-\tint /*long*/ data = rep.bitmapData();", "-\tint /*long*/ format = rep.bitmapFormat();", "+\tlong /*int*/ bpc = rep.bitsPerSample();", "+\tlong /*int*/ width = rep.pixelsWide();", "+\tlong /*int*/ height = rep.pixelsHigh();", "+\tlong /*int*/ bpr = rep.bytesPerRow();", "+\tlong /*int*/ data = rep.bitmapData();", "+\tlong /*int*/ format = rep.bitmapFormat();", "-\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\tint /*long*/ context = OS.CGBitmapContextCreate(data, width, height, bpc, bpr, colorspace, alphaInfo);", "+\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\tlong /*int*/ context = OS.CGBitmapContextCreate(data, width, height, bpc, bpr, colorspace, alphaInfo);"]}], "num": 50138}