{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db7531249df4d2180a640dffe136bf41", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e00b7b5519083ef2e1092503946b085a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4ba1138c18d9e572e740905ef25012f42b3617a1", "commitAfterChange": "571baac413606d2aa026e05a07e86f9a4b9a106a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": " public Point getLocation (int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation (int offset, boolean trailing)", "diff": ["-\t\t\t\tif (run.style != null && run.style.metrics != null) {", "-\t\t\t\t\tif (trailing) width += run.width;", "-\t\t\t\t\tresult = new Point(width, lineY[line]);", "-\t\t\t\t} else if (run.tab) {", "+\t\t\t\tif (run.tab) {", "-\t\t\t\t\tint advances = run.justify != 0 ? run.justify : run.advances;", "-\t\t\t\t\tOS.ScriptCPtoX(runOffset, trailing, cChars, gGlyphs, run.clusters, run.visAttrs, advances, run.analysis, piX);", "+\t\t\t\t\tOS.ScriptCPtoX(runOffset, trailing, cChars, gGlyphs, run.clusters, run.visAttrs, run.advances, run.analysis, piX);", "-\tresult.x += getLineIndent(line);", "+\tif (wrapWidth != -1) {", "+\t\tswitch (alignment) {", "+\t\t\tcase SWT.CENTER: result.x += (wrapWidth - lineWidth[line]) / 2; break;", "+\t\t\tcase SWT.RIGHT: result.x += wrapWidth - lineWidth[line]; break;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a6b292179b3bc68f1f6c8db71a9a38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint)", "diff": ["+\tint width = wHint, height = hHint;\r", "+\tif (wHint == SWT.DEFAULT) width = 32;\r", "+\tif (hHint == SWT.DEFAULT) height = 32;\r", "-\tPoint size;\r", "-\tif (control == null)  {\r", "-\t\tsize = new Point (0,0);\r", "-\t}\r", "-\telse {\r", "-\t\tsize = control.computeSize (wHint, hHint);\r", "-\t}\r", "-\tif (wHint != SWT.DEFAULT) size.x = wHint;\r", "-\tif (hHint != SWT.DEFAULT) size.y = hHint;\r", "-\tint height = Math.max (MINIMUM_CHILD_HEIGHT, size.y);\r", "-\tint width;\r", "-\tif (size.x == 0) {\r", "+\tRECT rect = new RECT ();\r", "+\tOS.SendMessage (hwnd, OS.RB_GETBANDBORDERS, index, rect);\r", "+\twidth += rect.left + rect.right;\r", "+\theight += rect.top + rect.bottom;\r", "+\tif (index == 0) {\r", "-\t\twidth = rbBand.cxHeader;\t\r", "-\t}\r", "-\telse {\r", "-\t\tRECT rect = new RECT ();\r", "-\t\tOS.SendMessage (hwnd, OS.RB_GETBANDBORDERS, index, rect);\r", "-\t\twidth = size.x + rect.left + rect.right;\t\r", "+\t\twidth = width - rbBand.cxHeader + 1;\r"]}], "num": 48183}