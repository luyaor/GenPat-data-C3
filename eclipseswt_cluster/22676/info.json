{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e44930131cbc1bb864c98b99e90d9cc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105762a029f6e4f878a64d573a739d43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "147d1615f621339f30d0227193f0b040907c9480", "commitAfterChange": "4f94a8e41c5f58fd8cc31f50891f992413c14d7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-public void javaToNative (Object object, TransferData transferData){", "-\tif (object == null || !(object instanceof String)) return;", "-\tbyte[] buffer = Converter.wcsToMbcs (null, (String)object, true);", "-\tif (transferData.type == TYPEID1) { // COMPOUND_TEXT", "+public void javaToNative (Object object, TransferData transferData) {", "+\ttransferData.result = 0;", "+\tif (object == null || !(object instanceof String) || !isSupportedType(transferData)) return;", "+\tString string = (String)object;", "+\tif (string.length() == 0) return;", "+\t", "+\tbyte[] buffer = Converter.wcsToMbcs (null, string, true);", "+\tif (transferData.type ==  COMPOUND_TEXT_ID) {", "-\t\tif (display == null) {", "-\t\t\ttransferData.result = 0;", "-\t\t\treturn;", "-\t\t}", "+\t\tif (display == null) return;", "-\t\tOS.memmove(pBuffer, buffer, buffer.length);", "-\t\tint list = OS.XtMalloc(4);", "-\t\tOS.memmove(list, new int[] {pBuffer}, 4);", "-\t\tXTextProperty text_prop_return = new XTextProperty();", "-\t\tint result = OS.XmbTextListToTextProperty (xDisplay, list, 1, OS.XCompoundTextStyle, text_prop_return);", "-\t\tOS.XtFree(pBuffer);", "-\t\tOS.XtFree(list);", "-\t\tif (result != 0){", "-\t\t\ttransferData.result = 0;", "-\t\t} else {\t", "+\t\tif (pBuffer == 0) return;", "+\t\ttry {", "+\t\t\tOS.memmove(pBuffer, buffer, buffer.length);", "+\t\t\tint list = OS.XtMalloc(4);", "+\t\t\tif (list == 0) return;", "+\t\t\tOS.memmove(list, new int[] {pBuffer}, 4);", "+\t\t\tXTextProperty text_prop_return = new XTextProperty();", "+\t\t\tint result = OS.XmbTextListToTextProperty (xDisplay, list, 1, OS.XCompoundTextStyle, text_prop_return);", "+\t\t\tOS.XtFree(list);", "+\t\t\tif (result != 0)return;", "+\t\t} finally {", "+\t\t\tOS.XtFree(pBuffer);", "-\t} else {", "-\t\tsuper.javaToNative(buffer, transferData);", "+\t}", "+\tif (transferData.type == STRING_ID) {", "+\t\tint pValue = OS.XtMalloc(buffer.length);", "+\t\tif (pValue ==  0) return;", "+\t\tOS.memmove(pValue, buffer, buffer.length);", "+\t\ttransferData.type = STRING_ID;", "+\t\ttransferData.format = 8;", "+\t\ttransferData.length = buffer.length;", "+\t\ttransferData.pValue = pValue;", "+\t\ttransferData.result = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff158a5575d60e3af5ca272132e64145", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "f5c7e4c9254cd6daa97b7649a31d13c6c5d0de6c", "commitAfterChange": "189429edfa9fbff796a0033ed821365347e21fb7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-public void javaToNative (Object object, TransferData transferData){", "-\tif (object == null || !(object instanceof String)) {", "-\t\ttransferData.result = 0;", "-\t\treturn;", "-\t} ", "-\tbyte [] buffer = Converter.wcsToMbcs (null, (String)object, true);", "-\tif  (transferData.type ==  TYPEID1) { // COMPOUND_TEXT", "+public void javaToNative (Object object, TransferData transferData) {", "+\ttransferData.result = 0;", "+\tif (object == null || !(object instanceof String) || !isSupportedType(transferData)) return;", "+\tString string = (String)object;", "+\tif (string.length() == 0) return;", "+\t", "+\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);", "+\tif  (transferData.type ==  COMPOUND_TEXT_ID) {", "-\t\tif (!result) {", "-\t\t\ttransferData.result = 0;", "-\t\t} else {", "-\t\t\ttransferData.type = encoding[0];", "-\t\t\ttransferData.format = format[0];", "-\t\t\ttransferData.length = length[0];", "-\t\t\ttransferData.pValue = ctext[0];", "-\t\t\ttransferData.result = 1;", "-\t\t}", "-\t} else {", "-\t\tsuper.javaToNative(buffer, transferData);", "+\t\tif (!result) return;", "+\t\ttransferData.type = encoding[0];", "+\t\ttransferData.format = format[0];", "+\t\ttransferData.length = length[0];", "+\t\ttransferData.pValue = ctext[0];", "+\t\ttransferData.result = 1;", "+\t} ", "+\tif (transferData.type == STRING_ID) {", "+\t\tint pValue = OS.g_malloc(buffer.length);", "+\t\tif (pValue ==  0) return;", "+\t\tOS.memmove(pValue, buffer, buffer.length);", "+\t\ttransferData.type = STRING_ID;", "+\t\ttransferData.format = 8;", "+\t\ttransferData.length = buffer.length;", "+\t\ttransferData.pValue = pValue;", "+\t\ttransferData.result = 1;"]}], "num": 22676}