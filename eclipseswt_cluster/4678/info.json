{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df225a766d5367198b2dad06f4df8731", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8d97fc4376b168b7cb3eb4a86cccc4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "3753196e54cacf08b9ba94669052da40a6f74fd7", "commitAfterChange": "991749f7f8d70b27654548d75f2e2ea9b6410c4f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "signatureAfterChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "+\t", "+\t/*", "+\t* Feature in Motif.  When XtManageChild() is called for", "+\t* a text widget that has just been created, the contents", "+\t* are assigned and an XmNmodifyVerifyCallback is sent.", "+\t* When this happens, the widget has not been fully", "+\t* initialized null pointer exceptions can occur.  The", "+\t* fix is to check for this case and avoid the callback.", "+\t* Note that application code could never have seen it", "+\t* in the first place.", "+\t*/", "+\tif (font == null) return result;", "+\t", "+//\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "-\tevent.doit = textVerify.doit == 1;", "+\tint index = 0;", "+\twhile (index < text.length ()) {", "+\t\tif (!Character.isDigit (text.charAt (index))) break;", "+\t\tindex++;", "+\t}", "+\tevent.doit = index == text.length ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c89faba1569aab2d47135c7173fcb50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9f800048edf52ed70457895b32ddfeee108ffda8", "commitAfterChange": "90ba9cb2ff16ee7ec96ab5262879eb4d4ffb3bc7", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void setHeaderVisible (boolean show)", "signatureAfterChange": " public void setHeaderVisible (boolean show)", "diff": ["-\tint topIndex = getTopIndex ();", "+\tint oldIndex = getTopIndex ();", "-\tsetTopIndex (topIndex);", "+\t", "+\t/*", "+\t* Bug in Windows.  Making any change to an item that", "+\t* changes the item height of a table while the table", "+\t* is scrolled can cause the lines to draw incorrectly.", "+\t* This happens even when the lines are not currently", "+\t* visible and are shown afterwards.  The fix is to", "+\t* save the top index, scroll to the top of the table", "+\t* and then restore the original top index.", "+\t*/", "+\tint newIndex = getTopIndex ();", "+\tif (newIndex != 0) {", "+\t\tsetRedraw (false);", "+\t\tsetTopIndex (0);", "+\t}", "-\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) setItemHeight ();", "+\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) fixItemHeight (false);", "+\t}", "+\tsetTopIndex (oldIndex);", "+\tif (newIndex != 0) {", "+\t\tsetRedraw (true);"]}], "num": 4678}