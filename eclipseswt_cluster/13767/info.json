{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "598fd93f241dcbfbe080fd1a7943f63b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a297e7ed33cb728e905376e20d829cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  boolean runAsyncMessages (boolean all)", "signatureAfterChange": "  boolean runAsyncMessages (boolean all)", "diff": ["-\treturn synchronizer.runAsyncMessages (all);", "+\tNSAutoreleasePool localPool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\treturn synchronizer.runAsyncMessages (all);", "+\t} finally {", "+\t\tlocalPool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a67c93a23bb92540fe3e731be0c5da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static String [] getExtensions ()", "signatureAfterChange": " public static String [] getExtensions ()", "diff": ["-\tNSMutableSet supportedDocumentTypes = (NSMutableSet)NSMutableSet.set();", "-\tNSWorkspace workspace = NSWorkspace.sharedWorkspace();", "-\tNSString CFBundleDocumentTypes = NSString.stringWith(\"CFBundleDocumentTypes\");", "-\tNSString CFBundleTypeExtensions = NSString.stringWith(\"CFBundleTypeExtensions\");", "-\tNSArray array = new NSArray(OS.NSSearchPathForDirectoriesInDomains(OS.NSAllApplicationsDirectory, OS.NSAllDomainsMask, true));", "-\tint count = (int)/*64*/array.count();", "-\tfor (int i = 0; i < count; i++) {", "-\t\tNSString path = new NSString(array.objectAtIndex(i));", "-\t\tNSFileManager fileManager = NSFileManager.defaultManager();", "-\t\tNSDirectoryEnumerator enumerator = fileManager.enumeratorAtPath(path);", "-\t\tif (enumerator != null) {", "-\t\t\tid id;", "-\t\t\twhile ((id = enumerator.nextObject()) != null) {", "-\t\t\t\tenumerator.skipDescendents();", "-\t\t\t\tNSString filePath = new NSString(id.id);", "-\t\t\t\tNSString fullPath = path.stringByAppendingPathComponent(filePath);", "-\t\t\t\tif (workspace.isFilePackageAtPath(fullPath)) {", "-\t\t\t\t\tNSBundle bundle = NSBundle.bundleWithPath(fullPath);", "-\t\t\t\t\tid = bundle.infoDictionary().objectForKey(CFBundleDocumentTypes);", "-\t\t\t\t\tif (id != null) {", "-\t\t\t\t\t\tNSDictionary documentTypes = new NSDictionary(id.id);", "-\t\t\t\t\t\tNSEnumerator documentTypesEnumerator = documentTypes.objectEnumerator();", "-\t\t\t\t\t\twhile ((id = documentTypesEnumerator.nextObject()) != null) {", "-\t\t\t\t\t\t\tNSDictionary documentType = new NSDictionary(id.id);", "-\t\t\t\t\t\t\tid = documentType.objectForKey(CFBundleTypeExtensions);", "-\t\t\t\t\t\t\tif (id != null) {", "-\t\t\t\t\t\t\t\tsupportedDocumentTypes.addObjectsFromArray(new NSArray(id.id));", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSMutableSet supportedDocumentTypes = (NSMutableSet)NSMutableSet.set();", "+\t\tNSWorkspace workspace = NSWorkspace.sharedWorkspace();", "+\t\tNSString CFBundleDocumentTypes = NSString.stringWith(\"CFBundleDocumentTypes\");", "+\t\tNSString CFBundleTypeExtensions = NSString.stringWith(\"CFBundleTypeExtensions\");", "+\t\tNSArray array = new NSArray(OS.NSSearchPathForDirectoriesInDomains(OS.NSAllApplicationsDirectory, OS.NSAllDomainsMask, true));", "+\t\tint count = (int)/*64*/array.count();", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t\tNSString path = new NSString(array.objectAtIndex(i));", "+\t\t\tNSFileManager fileManager = NSFileManager.defaultManager();", "+\t\t\tNSDirectoryEnumerator enumerator = fileManager.enumeratorAtPath(path);", "+\t\t\tif (enumerator != null) {", "+\t\t\t\tid id;", "+\t\t\t\twhile ((id = enumerator.nextObject()) != null) {", "+\t\t\t\t\tenumerator.skipDescendents();", "+\t\t\t\t\tNSString filePath = new NSString(id.id);", "+\t\t\t\t\tNSString fullPath = path.stringByAppendingPathComponent(filePath);", "+\t\t\t\t\tif (workspace.isFilePackageAtPath(fullPath)) {", "+\t\t\t\t\t\tNSBundle bundle = NSBundle.bundleWithPath(fullPath);", "+\t\t\t\t\t\tid = bundle.infoDictionary().objectForKey(CFBundleDocumentTypes);", "+\t\t\t\t\t\tif (id != null) {", "+\t\t\t\t\t\t\tNSDictionary documentTypes = new NSDictionary(id.id);", "+\t\t\t\t\t\t\tNSEnumerator documentTypesEnumerator = documentTypes.objectEnumerator();", "+\t\t\t\t\t\t\twhile ((id = documentTypesEnumerator.nextObject()) != null) {", "+\t\t\t\t\t\t\t\tNSDictionary documentType = new NSDictionary(id.id);", "+\t\t\t\t\t\t\t\tid = documentType.objectForKey(CFBundleTypeExtensions);", "+\t\t\t\t\t\t\t\tif (id != null) {", "+\t\t\t\t\t\t\t\t\tsupportedDocumentTypes.addObjectsFromArray(new NSArray(id.id));", "+\t\t\t\t\t\t\t\t}", "+\t\tint i = 0;", "+\t\tString[] exts = new String[(int)/*64*/supportedDocumentTypes.count()];", "+\t\tNSEnumerator enumerator = supportedDocumentTypes.objectEnumerator();", "+\t\tid id;", "+\t\twhile ((id = enumerator.nextObject()) != null) {", "+\t\t\tString ext = new NSString(id.id).getString();", "+\t\t\tif (!ext.equals(\"*\")) exts[i++] = \".\" + ext;", "+\t\t}", "+\t\tif (i != exts.length) {", "+\t\t\tString[] temp = new String[i];", "+\t\t\tSystem.arraycopy(exts, 0, temp, 0, i);", "+\t\t\texts = temp;", "+\t\t}", "+\t\treturn exts;", "+\t} finally {", "+\t\tpool.release();", "-\tint i = 0;", "-\tString[] exts = new String[(int)/*64*/supportedDocumentTypes.count()];", "-\tNSEnumerator enumerator = supportedDocumentTypes.objectEnumerator();", "-\tid id;", "-\twhile ((id = enumerator.nextObject()) != null) {", "-\t\tString ext = new NSString(id.id).getString();", "-\t\tif (!ext.equals(\"*\")) exts[i++] = \".\" + ext;", "-\t}", "-\tif (i != exts.length) {", "-\t\tString[] temp = new String[i];", "-\t\tSystem.arraycopy(exts, 0, temp, 0, i);", "-\t\texts = temp;", "-\t}", "-\treturn exts;"]}], "num": 13767}