{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25fdfddf8b06b962a9ea355b06d08fb2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c2b25dae344cfc551d0c68cd1f733d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "659d841b033b864efe4f5fce4abb5b8822188e47", "commitAfterChange": "2d4f1f3476edb1aaeb36c2a73bcbbcf7e14cdea6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds ()", "diff": ["-/*\r", "-\tdouble haj = OS.gtk_adjustment_get_value(tree.hadjustment);\r", "-\tdouble vaj = OS.gtk_adjustment_get_value(tree.vadjustment);\r", "-\t\r", "-\tint columnHandle = tree.column;\r", "-\tint height=parent.getItemHeight();\r", "+\t/* NB: Different from gtk_ctree_is_visible() */\r", "+\tif (!OS.gtk_ctree_is_viewable(ctree, handle)) return new Rectangle(0,0,0,0);\r", "-\tint row_list = tree.row_list; int level=0;\r", "-\tint count = OS.g_list_length (row_list);\r", "-\tint index=0;\r", "-\twhile (index<count) {\r", "-\t\tint data = OS.g_list_nth (row_list, index);\r", "-\t\tif (handle == data){\r", "-\t\t\tint rowHandle = OS.g_list_nth_data (row_list, index);\r", "-\t\t\tGtkCTreeRow row = new GtkCTreeRow();\r", "-\t\t\tOS.memmove(row, rowHandle, GtkCTreeRow.sizeof);\r", "-\t\t\tlevel = row.level;\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t\tindex++;\r", "+\t/* Vertical */\r", "+\tint row_index = 0;\r", "+\tint work = OS.GTK_CLIST_ROW_LIST(ctree);\r", "+\twhile ((work!=0) && (work!=handle)) {\r", "+\t\twork = OS.GTK_CTREE_NODE_NEXT(work);\r", "+\t\trow_index++;\r", "-\tint y = height*index + Tree.CELL_SPACING + tree.voffset + 2;\r", "+\t\r", "+\tint border = OS.gtk_container_get_border_width(ctree);\r", "+\t// observe the weird row spacing rule\r", "+\tint y = OS.ROW_TOP_YPIXEL(ctree, row_index) + Tree.CELL_SPACING;\r", "+\tint height = parent.getItemHeight();\r", "-\tint [] buffer = new int [1]; byte [] spacing = new byte [1];\r", "-\tboolean [] is_leaf = new boolean [1], expanded = new boolean [1];\r", "-\tint [] pixmap_closed = new int [1], mask_closed= new int [1], pixmap_opened= new int [1], mask_opened= new int [1];\r", "-\tOS.gtk_ctree_get_node_info (ctree, handle, buffer, spacing, pixmap_closed, mask_closed, pixmap_opened, mask_opened, is_leaf, expanded);\r", "-\tint length = OS.strlen (buffer[0]);\r", "-\tbyte [] buffer1 = new byte [length];\r", "-\tOS.memmove (buffer1, buffer[0], length);\r", "-\tint styleHandle = OS.gtk_ctree_node_get_row_style(ctree, handle);\r", "-\tif (styleHandle == 0)\r", "-\t\tstyleHandle = OS.gtk_widget_get_style(ctree);\r", "-\tGtkStyle style = new GtkStyle(styleHandle);*/\r", "-\t/* FIXME */\t\r", "-\tint width = 50; /*OS.gdk_string_width(style.font, buffer1);*/\r", "-\r", "-//\tx = (short)column.area_x+tree.tree_indent*(level-1)+spacing[0]+tree.hoffset;\r", "-/*\tint x = 33+tree.tree_indent*(level-1)+spacing[0]+tree.hoffset;*/\r", "-\r", "-\treturn new Rectangle (0, 0, 40, 10);\r", "+\t/* Horizontal */\t\r", "+\tint row_ptr = OS.GTK_CTREE_ROW(ctree, handle);\r", "+\tGtkCTreeRow row = new GtkCTreeRow();\r", "+\tOS.memmove(row, OS.g_list_nth_data (handle, 0), GtkCTreeRow.sizeof);\r", "+\tint x = OS.GTK_CLIST_HOFFSET(ctree) + OS.GTK_CTREE_TREE_INDENT (ctree) * row.level;\r", "+\tif (image != null) {\r", "+\t\tint[] w = new int[1], h = new int[1];\r", "+ \t\tOS.gdk_drawable_get_size(image.pixmap, w, h);\r", "+ \t\tx += w[0]; \r", "+\t}\t\r", "+\tint width = OS.GTK_CLIST_WINDOW_WIDTH(ctree) - x; // No hoffset!\r", "+\t\r", "+\treturn new Rectangle (x, y, width, parent.getItemHeight());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6cac86e17ba19a46f52e2f817c18565", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "81787cd27e32af892df033b20e65ebc1ed6c38e6", "commitAfterChange": "dd108aa467b1abd9492c670feed714315578df63", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-\t//NOT IMPLEMENTED\r", "-\treturn new Rectangle (0, 0, 0, 0);\r", "+\tint CELL_SPACING = 1;\r", "+\tint clist = parent.handle;\r", "+\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);\r", "+\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;\r", "+\tGtkCListColumn column = new GtkCListColumn ();\r", "+\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);\r", "+\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;\r", "+\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);\r", "+\tint row = parent.indexOf (this);\r", "+\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);\r", "+\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;\r", "+\tint width = 0;\r", "+\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {\r", "+\t\tint [] pixmap = new int [1];\r", "+\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);\r", "+\t\tif (pixmap [0] != 0) {\r", "+\t\t\tint [] w = new int [1], h = new int [1];\r", "+\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);\r", "+\t\t\twidth = w [0];\r", "+\t\t}\r", "+\t}\r", "+\treturn new Rectangle (x, y, width, height);\r"]}], "num": 6457}