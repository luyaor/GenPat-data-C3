{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8aa354bcedf115e1b3c9c10d14bc864", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af019f7a729aa4035a26747a1c6d2c04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "6839165c5111825bbb136c5737e0347de7f07969", "commitAfterChange": "4f99bed5e543c4fb1ca558bac2b83d2edd9b7580", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private static ImageData gnome_getMimeIcon(String mimeType)", "signatureAfterChange": "  private static ImageData gnome_getMimeIcon(String mimeType)", "diff": ["-\tbyte[] app_id = Converter.wcsToMbcs(null, \"swt\", true);", "-\tint ptr = GNOME.g_malloc(app_id.length);", "-\tOS.memmove(ptr, app_id, app_id.length);", "-\tint[] argv =  {ptr, 0};", "-\t/* ", "-\t* Note.  gnome_program_locate_file requires gnome_program_init to have been called at least", "-\t* once otherwise it outputs an error message.  The workaround is to call gnome_program_init", "-\t* with the minimal amount of arguments required to register as a Gnome application. ", "-\t*/", "-\tint program = GNOME.gnome_program_init(app_id, app_id, GNOME.LIBGNOME_MODULE(), 1, argv, GNOME.GNOME_PARAM_NONE);", "-\tGNOME.g_free(ptr);", "-\tptr = GNOME.gnome_vfs_mime_get_icon(mimeTypeBuffer);", "-\tif (ptr == 0) return null;", "-\tint path = GNOME.gnome_program_locate_file(program, GNOME.GNOME_FILE_DOMAIN_PIXMAP, ptr, true, 0);", "-\tGNOME.g_free(ptr);", "-\tGNOME.g_free(program);", "+\t/* ", "+\t* Note.  gnome_icon_theme_new uses g_object_new to allocate the data it returns.", "+\t* Use g_object_unref to free the pointer it returns.", "+\t*/", "+\tint icon_theme = GNOME.gnome_icon_theme_new();", "+\tint icon_name = GNOME.gnome_icon_lookup(icon_theme, 0, null, null, 0, mimeTypeBuffer, ", "+\t\t\tGNOME.GNOME_ICON_LOOKUP_FLAGS_NONE, null);", "+\tint path = 0;", "+\tif (icon_name != 0) path = GNOME.gnome_icon_theme_lookup_icon(icon_theme, icon_name, -1, null, null);", "+\tGNOME.g_object_unref(icon_theme);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef0e57805b6616613145601abafe34bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "252085764269c552bf6c216a18cc48273f5e99bb", "commitAfterChange": "72d75b92542d3d787a284666ebcec477b4dfb985", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private static ImageData gnome_getMimeIcon(String mimeType)", "signatureAfterChange": "  private static ImageData gnome_getMimeIcon(String mimeType)", "diff": ["-\tbyte[] app_id = Converter.wcsToMbcs(null, \"swt\", true);", "-\tint ptr = OS.g_malloc(app_id.length);", "-\tOS.memmove(ptr, app_id, app_id.length);", "-\tint[] argv =  {ptr, 0};", "-\t/* ", "-\t* Note.  gnome_program_locate_file requires gnome_program_init to have been called at least", "-\t* once otherwise it outputs an error message.  The workaround is to call gnome_program_init", "-\t* with the minimal amount of arguments required to register as a Gnome application. ", "-\t*/", "-\tint program = GNOME.gnome_program_init(app_id, app_id, GNOME.LIBGNOME_MODULE(), 1, argv, GNOME.GNOME_PARAM_NONE);", "-\tOS.g_free(ptr);", "-\tptr = GNOME.gnome_vfs_mime_get_icon(mimeTypeBuffer);", "-\tif (ptr == 0) return null;", "-\tint path = GNOME.gnome_program_locate_file(program, GNOME.GNOME_FILE_DOMAIN_PIXMAP, ptr, true, 0);", "-\tOS.g_free(ptr);", "-\tOS.g_free(program);", "+\t/* ", "+\t* Note.  gnome_icon_theme_new uses g_object_new to allocate the data it returns.", "+\t* Use g_object_unref to free the pointer it returns.", "+\t*/", "+\tint icon_theme = GNOME.gnome_icon_theme_new();", "+\tint icon_name = GNOME.gnome_icon_lookup(icon_theme, 0, null, null, 0, mimeTypeBuffer, ", "+\t\t\tGNOME.GNOME_ICON_LOOKUP_FLAGS_NONE, null);", "+\tint path = 0;", "+\tif (icon_name != 0) path = GNOME.gnome_icon_theme_lookup_icon(icon_theme, icon_name, -1, null, null);", "+\tGNOME.g_object_unref(icon_theme);"]}], "num": 17375}