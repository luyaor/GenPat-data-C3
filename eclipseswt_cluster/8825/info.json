{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88a343d3954bd2d0f12321d8ad393d60", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b524dec90b8160e2d9c9d9b1ff1f525e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " \tint QueryService(int guidService, int riid, int ppvObject)", "signatureAfterChange": " \tint QueryService(long guidService, long riid, long ppvObject)", "diff": ["-\tint QueryService(int /*long*/ guidService, int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\tint QueryService(long /*int*/ guidService, long /*int*/ riid, long /*int*/ ppvObject) {", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tint /*long*/ [] ppv = new int /*long*/ [1];", "+\t\t\tlong /*int*/ [] ppv = new long /*int*/ [1];", "-\t\t\t\tint /*long*/ [] ppvx = new int /*long*/ [1];", "+\t\t\t\tlong /*int*/ [] ppvx = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c63672a3fc9c62a15d819af71a0871", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 259, "signatureBeforeChange": " \tint QueryInterface(int iid, int ppvObject)", "signatureAfterChange": " \tint QueryInterface(long iid, long ppvObject)", "diff": ["-\tint QueryInterface(int /*long*/ iid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\tint QueryInterface(long /*int*/ iid, long /*int*/ ppvObject) {", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIEnumVARIANT.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIEnumVARIANT.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIServiceProvider.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIServiceProvider.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tint /*long*/[] ppv = new int /*long*/[1];", "+\t\t\tlong /*int*/[] ppv = new long /*int*/[1];"]}], "num": 8825}