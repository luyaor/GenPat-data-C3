{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e132442b63339a3a8c1284dbcbcc68dc", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc02434a85d8a25fea9eb7127338856", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "d34c19dd2c3ca5645af01b4af27d693f0c29a141", "commitAfterChange": "10853405c811a799150a3b4b946af52ab579fd48", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  void setSelection (int value, boolean notify)", "signatureAfterChange": "  void setSelection (int value, boolean setPos, boolean setText, boolean notify)", "diff": ["-void setSelection (int value, boolean notify) {", "-\tOS.SetControl32BitValue (buttonHandle, value);", "-\tString string = String.valueOf (value);", "-\tif (digits > 0) {", "-\t\tString decimalSeparator = getDecimalSeparator ();", "-\t\tint index = string.length () - digits;", "-\t\tStringBuffer buffer = new StringBuffer ();", "-\t\tif (index > 0) {", "-\t\t\tbuffer.append (string.substring (0, index));", "-\t\t\tbuffer.append (decimalSeparator);", "-\t\t\tbuffer.append (string.substring (index));", "-\t\t} else {", "-\t\t\tbuffer.append (\"0\");", "-\t\t\tbuffer.append (decimalSeparator);", "-\t\t\twhile (index++ < 0) buffer.append (\"0\");", "-\t\t\tbuffer.append (string);", "-\t\t}", "-\t\tstring = buffer.toString ();", "+void setSelection (int value, boolean setPos, boolean setText, boolean notify) {", "+\tif (setPos) {", "+\t\tOS.SetControl32BitValue (buttonHandle, value);", "-\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-\t\tint [] actualSize = new int [1];", "-\t\tint [] ptr = new int [1];", "-\t\tint length = 0;", "-\t\tif (OS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, actualSize) == OS.noErr) {", "-\t\t\tlength = OS.CFStringGetLength (ptr [0]);", "-\t\t\tOS.CFRelease (ptr [0]);", "+\tif (setText) {", "+\t\tString string = String.valueOf (value);", "+\t\tif (digits > 0) {", "+\t\t\tString decimalSeparator = getDecimalSeparator ();", "+\t\t\tint index = string.length () - digits;", "+\t\t\tStringBuffer buffer = new StringBuffer ();", "+\t\t\tif (index > 0) {", "+\t\t\t\tbuffer.append (string.substring (0, index));", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\tbuffer.append (string.substring (index));", "+\t\t\t} else {", "+\t\t\t\tbuffer.append (\"0\");", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");", "+\t\t\t\tbuffer.append (string);", "+\t\t\t}", "+\t\t\tstring = buffer.toString ();", "-\t\tstring = verifyText (string, 0, length, null);", "-\t\tif (string == null) return;", "+\t\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\t\tint [] actualSize = new int [1];", "+\t\t\tint [] ptr = new int [1];", "+\t\t\tint length = 0;", "+\t\t\tif (OS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, actualSize) == OS.noErr) {", "+\t\t\t\tlength = OS.CFStringGetLength (ptr [0]);", "+\t\t\t\tOS.CFRelease (ptr [0]);", "+\t\t\t}", "+\t\t\tstring = verifyText (string, 0, length, null);", "+\t\t\tif (string == null) return;", "+\t\t}", "+\t\tchar [] buffer = new char [string.length ()];", "+\t\tstring.getChars (0, buffer.length, buffer, 0);", "+\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\t\tOS.SetControlData (textHandle, OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "+\t\tOS.CFRelease (ptr);", "+\t\tredrawWidget (textHandle, false);", "+\t\tsendEvent (SWT.Modify);", "-\tchar [] buffer = new char [string.length ()];", "-\tstring.getChars (0, buffer.length, buffer, 0);", "-\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-\tOS.SetControlData (textHandle, OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "-\tOS.CFRelease (ptr);", "-\tredrawWidget (textHandle, false);", "-\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e638867e23beaf20d6ea304237f24a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "27e22e97137f46058bda5fa63830cf7524f506a4", "commitAfterChange": "0168d04ae05232458f819c6152206dc09e468445", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  void setSelection (int value, boolean notify)", "signatureAfterChange": "  void setSelection (int value, boolean setPos, boolean setText, boolean notify)", "diff": ["-void setSelection (int value, boolean notify) {", "-\tOS.SendMessage (hwndUpDown , OS.IsWinCE ? OS.UDM_SETPOS : OS.UDM_SETPOS32, 0, value);", "-\tString string = String.valueOf (value);", "-\tif (digits > 0) {", "-\t\tString decimalSeparator = getDecimalSeparator ();", "-\t\tint index = string.length () - digits;", "-\t\tStringBuffer buffer = new StringBuffer ();", "-\t\tif (index > 0) {", "-\t\t\tbuffer.append (string.substring (0, index));", "-\t\t\tbuffer.append (decimalSeparator);", "-\t\t\tbuffer.append (string.substring (index));", "-\t\t} else {", "-\t\t\tbuffer.append (\"0\");", "-\t\t\tbuffer.append (decimalSeparator);", "-\t\t\twhile (index++ < 0) buffer.append (\"0\");", "-\t\t\tbuffer.append (string);", "+void setSelection (int value, boolean setPos, boolean setText, boolean notify) {", "+\tif (setPos) {", "+\t\tOS.SendMessage (hwndUpDown , OS.IsWinCE ? OS.UDM_SETPOS : OS.UDM_SETPOS32, 0, value);", "+\t}", "+\tif (setText) {", "+\t\tString string = String.valueOf (value);", "+\t\tif (digits > 0) {", "+\t\t\tString decimalSeparator = getDecimalSeparator ();", "+\t\t\tint index = string.length () - digits;", "+\t\t\tStringBuffer buffer = new StringBuffer ();", "+\t\t\tif (index > 0) {", "+\t\t\t\tbuffer.append (string.substring (0, index));", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\tbuffer.append (string.substring (index));", "+\t\t\t} else {", "+\t\t\t\tbuffer.append (\"0\");", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");", "+\t\t\t\tbuffer.append (string);", "+\t\t\t}", "+\t\t\tstring = buffer.toString ();", "-\t\tstring = buffer.toString ();", "+\t\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\t\tint length = OS.GetWindowTextLength (hwndText);", "+\t\t\tstring = verifyText (string, 0, length, null);", "+\t\t\tif (string == null) return;", "+\t\t}", "+\t\tTCHAR buffer = new TCHAR (getCodePage (), string, true);", "+\t\tOS.SetWindowText (hwndText, buffer);", "-\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-\t\tint length = OS.GetWindowTextLength (hwndText);", "-\t\tstring = verifyText (string, 0, length, null);", "-\t\tif (string == null) return;", "-\t}", "-\tTCHAR buffer = new TCHAR (getCodePage (), string, true);", "-\tOS.SetWindowText (hwndText, buffer);"]}], "num": 28401}