{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e3f9a9898c10102ef89282c9944cb28", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5caae1a53e8a3874ef14067ca90abda2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "cc6edcc5ce6e9be9dba9642aaa4671d01e2940f0", "commitAfterChange": "d81120485b5275ad650b0c00a3d271f03f31f001", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": "\r \r LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "diff": ["+\t\t\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {\r", "+\t\t\t\tDecorations shell = menuShell ();\r", "+\t\t\t\tMenu menu = shell.getMenuBar ();\r", "+\t\t\t\tif (menu != null) {\r", "+\t\t\t\t\tchar key = mbcsToWcs (lParam);\r", "+\t\t\t\t\tif (key != 0) {\r", "+\t\t\t\t\t\tkey = Character.toUpperCase (key);\r", "+\t\t\t\t\t\tMenuItem [] items = menu.getItems ();\r", "+\t\t\t\t\t\tfor (int i=0; i<items.length; i++) {\r", "+\t\t\t\t\t\t\tMenuItem item = items [i];\r", "+\t\t\t\t\t\t\tString text = item.getText ();\r", "+\t\t\t\t\t\t\tchar mnemonic = findMnemonic (text);\r", "+\t\t\t\t\t\t\tif (text.length () > 0 && mnemonic == 0) {\r", "+\t\t\t\t\t\t\t\tchar ch = text.charAt (0);\r", "+\t\t\t\t\t\t\t\tif (Character.toUpperCase (ch) == key) {\r", "+\t\t\t\t\t\t\t\t\tDisplay display = getDisplay ();\r", "+\t\t\t\t\t\t\t\t\tdisplay.mnemonicKeyHit = false;\r", "+\t\t\t\t\t\t\t\t\treturn LRESULT.ZERO;\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\t// FALL THROUGH\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7d70590fd3e4fd693403062c01eef3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": "\t  \tstatic int atkHypertext_get_link (int atkObject, int link_index)", "signatureAfterChange": " \t \tstatic int atkHypertext_get_link (int atkObject, int link_index)", "diff": ["+\t", "-\t\treturn 0;", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tevent.index = (int)/*int*/link_index;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getHyperlink(event);", "+\t\t\t\t}", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\treturn result != null ? result.accessibleObject.handle : 0;", "+\t\t\t}", "+\t\t}", "+\t\tint /*long*/ parentResult = 0;", "+\t\tAtkHypertextIface iface = getHypertextIface (atkObject);", "+\t\tif (iface != null && iface.get_link != 0) {", "+\t\t\tparentResult = ATK.call (iface.get_link, atkObject, link_index);", "+\t\t}", "+\t\treturn parentResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86cfe3b2297dba11a82c850d25e11ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/SashForm.java", "commitBeforeChange": "d6e73574e552f265f3541ca90078668e479b7cf1", "commitAfterChange": "ee9860c5e24a0e20cec5cc9efeac2ee1c611ff95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void onDragSash(Event event)", "signatureAfterChange": " void onDragSash(Event event)", "diff": ["-\t\tc1.setData(LAYOUT_RATIO, new Long((((long)b1.width << 16) + area.width - 1) / area.width));", "-\t\tc2.setData(LAYOUT_RATIO, new Long((((long)b2.width << 16) + area.width - 1) / area.width));\t\t", "+\t\tObject data1 = c1.getLayoutData();", "+\t\tif (data1 == null || !(data1 instanceof SashFormData)) {", "+\t\t\tdata1 = new SashFormData();", "+\t\t\tc1.setLayoutData(data1);", "+\t\t}", "+\t\tObject data2 = c2.getLayoutData();", "+\t\tif (data2 == null || !(data2 instanceof SashFormData)) {", "+\t\t\tdata2 = new SashFormData();", "+\t\t\tc2.setLayoutData(data2);", "+\t\t}", "+\t\t((SashFormData)data1).weight = (((long)b1.width << 16) + area.width - 1) / area.width;", "+\t\t((SashFormData)data2).weight = (((long)b2.width << 16) + area.width - 1) / area.width;", "-\t\tc1.setData(LAYOUT_RATIO, new Long((((long)b1.height << 16) + area.height - 1) / area.height));", "-\t\tc2.setData(LAYOUT_RATIO, new Long((((long)b2.height << 16) + area.height - 1) / area.height));", "+\t\tObject data1 = c1.getLayoutData();", "+\t\tif (data1 == null || !(data1 instanceof SashFormData)) {", "+\t\t\tdata1 = new SashFormData();", "+\t\t\tc1.setLayoutData(data1);", "+\t\t}", "+\t\tObject data2 = c2.getLayoutData();", "+\t\tif (data2 == null || !(data2 instanceof SashFormData)) {", "+\t\t\tdata2 = new SashFormData();", "+\t\t\tc2.setLayoutData(data2);", "+\t\t}", "+\t\t((SashFormData)data1).weight = (((long)b1.height << 16) + area.height - 1) / area.height;", "+\t\t((SashFormData)data2).weight = (((long)b2.height << 16) + area.height - 1) / area.height;"]}], "num": 5984}