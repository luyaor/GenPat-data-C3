{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92018d5dbc833b5303863fad894a7d88", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b652fea163cb741a605f80891c87fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "4ba6fc61f8614ac0f646cbd7e1243d960e0e699b", "commitAfterChange": "e9bed639f6884b30d1f2276b8a755e5b49abe7f6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void remove (int [] indices)", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["+\tif (indices.length == 0) return;", "+\tint start = newIndices [newIndices.length - 1], end = newIndices [0];", "+\tif (!(0 <= start && start <= end && end < count)) {", "+\t\t error (SWT.ERROR_INVALID_RANGE);", "+\t}", "+\tint last = -1;", "-\t\tif (!(0 <= index && index < count)) error (SWT.ERROR_INVALID_RANGE);", "-\t\tint result = OS.PtListDeleteItemPos (handle, 1, index + 1);", "-\t\tif (result != 0) error (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t\tif (last != index) {", "+\t\t\tint result = OS.PtListDeleteItemPos (handle, 1, index + 1);", "+\t\t\tif (result != 0) error (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t\t\tlast = index;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf3a662ed702680c649d8b9fef4b6ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2e409818fcb398bee5b6a3eb7afe949309df30fb", "commitAfterChange": "2353899a24ebfcb319f8565185c51f1eb7d4d7d0", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void remove(int indices[])", "signatureAfterChange": " public void remove(int indices[])", "diff": ["-\tSelectableItem item;", "-\tint [] sortedIndices;", "-\tint last = -1;", "-\tint sortedIndex;", "-\t", "-\tif (indices == null) {", "-\t\terror(SWT.ERROR_NULL_ARGUMENT);", "+\tif (indices == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (indices.length == 0) return;", "+\tint [] newIndices = new int [indices.length];", "+\tSystem.arraycopy (indices, 0, newIndices, 0, indices.length);", "+\tsort (newIndices);", "+\tint start = newIndices [newIndices.length - 1], end = newIndices [0];", "+\tint count = getItemCount();", "+\tif (!(0 <= start && start <= end && end < count)) {", "+\t\terror (SWT.ERROR_INVALID_RANGE);", "-\tsortedIndices = new int[indices.length];\t", "-\tSystem.arraycopy (indices, 0, sortedIndices, 0, indices.length);", "-\tsort(sortedIndices);\t\t\t\t\t\t\t\t// sort indices in descending order", "-\tfor (int i = 0; i < sortedIndices.length; i++) {", "-\t\tsortedIndex = sortedIndices[i];", "-\t\tif (sortedIndex != last) {", "-\t\t\titem = getVisibleItem(sortedIndex);", "+\tint last = -1;", "+\tfor (int i = 0; i < newIndices.length; i++) {", "+\t\tint index = newIndices[i];", "+\t\tif (index != last) {", "+\t\t\tSelectableItem item = getVisibleItem(index);", "+\t\t\t} else {", "+\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);\t\t\t\t          ", "-\t\t\telse {", "-\t\t\t\tif (0 <= sortedIndex && sortedIndex < getItemVector().size()) {", "-\t\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);", "-\t\t\t\t} ", "-\t\t\t\telse {", "-\t\t\t\t\terror(SWT.ERROR_INVALID_RANGE);", "-\t\t\t\t}          ", "-\t\t\t}", "-\t\t\tlast = sortedIndex;", "+\t\t\tlast = index;"]}], "num": 23566}