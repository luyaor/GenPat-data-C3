{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0a91af34dc003a972562dee07d51dfc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfafeb8a2edb4e05eaf6d0d09814cc74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " void createMenuBar ()", "signatureAfterChange": "  \tvoid createMenuBar()", "diff": ["-}", "-void createMenuBar () {", "-\tMenu bar = new Menu (shell, SWT.BAR);", "-\tshell.setMenuBar (bar);", "-", "-\tMenuItem fileItem = new MenuItem (bar, SWT.CASCADE);", "-\tfileItem.setText (resources.getString(\"File_menuitem\"));", "-\tfileItem.setMenu (createFileMenu ());", "-", "-\tMenuItem editItem = new MenuItem (bar, SWT.CASCADE);", "-\teditItem.setText (resources.getString(\"Edit_menuitem\"));", "-\teditItem.setMenu (createEditMenu ());", "-}", "+", "+\tvoid createMenuBar() {", "+\t\tMenu menu = new Menu(shell, SWT.BAR);", "+\t\tshell.setMenuBar(menu);", "+", "+\t\tMenuItem fileItem = new MenuItem(menu, SWT.CASCADE);", "+\t\tMenu fileMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\tfileItem.setText(getResourceString(\"File_menuitem\")); //$NON-NLS-1$", "+\t\tfileItem.setMenu(fileMenu);\t\t", "+\t\t", "+\t\tMenuItem openItem = new MenuItem(fileMenu, SWT.PUSH);", "+\t\topenItem.setText(getResourceString(\"Open_menuitem\")); //$NON-NLS-1$", "+\t\topenItem.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tFileDialog dialog = new FileDialog(shell, SWT.OPEN);", "+\t\t        dialog.setText(getResourceString(\"Open_fileitem\")); //$NON-NLS-1$", "+\t\t\t\tdialog.setFilterNames(new String [] {getResourceString(\"Text_Documents\")}); //$NON-NLS-1$", "+\t\t\t\tdialog.setFilterExtensions (new String [] {\"*.txt\"}); //$NON-NLS-1$", "+\t\t\t\tdialog.setFilterPath(\"c:\\\\\"); //$NON-NLS-1$", "+\t\t\t\tdialog.setFileName(\"*.txt\"); //$NON-NLS-1$", "+\t\t        String name = dialog.open();", "+\t\t        if (name == null)  return;", "+\t\t        fileName = name;", "+\t\t        FileReader file = null;", "+\t\t        try {", "+\t\t        \tfile = new FileReader(name);", "+\t\t        \tBufferedReader fileInput = new BufferedReader(file);", "+\t\t        \tString line = null;", "+\t\t        \tStringBuffer buffer = new StringBuffer();", "+\t\t        \twhile ((line = fileInput.readLine()) != null) {", "+\t\t        \t\tbuffer.append(line);", "+\t\t        \t\tif (fileInput.ready()) buffer.append(styledText.getLineDelimiter());", "+\t\t        \t}", "+\t\t        \tstyledText.setText(buffer.toString());", "+\t\t        } catch (IOException exception) {", "+\t\t        \tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_loadfile\") + fileName); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.open();", "+\t\t        \tstyledText.setText(\"\"); //$NON-NLS-1$", "+\t\t        } finally {", "+\t\t        \ttry {", "+\t\t        \t\tif (file != null) file.close();", "+\t\t        \t} catch (IOException ex) {", "+\t\t        \t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "+\t\t\t\t\t\tmessageBox.setMessage(ex.getMessage());", "+\t\t\t\t\t\tmessageBox.open();", "+\t\t        \t}", "+\t\t        }", "+\t\t\t}\t\t\t\t\t", "+\t\t});", "+\t\t", "+\t\tfinal MenuItem saveItem = new MenuItem(fileMenu, SWT.PUSH);", "+\t\tsaveItem.setText(getResourceString(\"Save_menuitem\")); //$NON-NLS-1$", "+\t\tsaveItem.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tFile file = new File(fileName);", "+\t\t\t\ttry {\t\t\t\t\t", "+\t\t\t       \tFileWriter fileWriter = new FileWriter(file);", "+\t\t\t       \tfileWriter.write(styledText.getText());", "+\t\t\t       \tfileWriter.close();", "+\t\t\t\t} catch (IOException ex) {", "+\t\t\t\t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_writefile\") + fileName); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.open();", "+\t\t\t\t}", "+\t\t\t}\t\t\t\t\t\t\t\t\t\t\t", "+\t\t});", "+\t\t", "+\t\tfileMenu.addMenuListener(new MenuAdapter() {", "+\t\t\tpublic void menuShown(MenuEvent e){", "+\t\t\t\tsaveItem.setEnabled(fileName != null);", "+\t\t\t}\t\t\t \t\t\t", "+\t\t});", "+\t\t", "+\t\tMenuItem saveAsItem = new MenuItem(fileMenu, SWT.PUSH);", "+\t\tsaveAsItem.setText(getResourceString(\"SaveAs_menuitem\")); //$NON-NLS-1$", "+\t\tsaveAsItem.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tFileDialog dialog = new FileDialog (shell, SWT.SAVE);", "+\t\t\t\tdialog.setText(getResourceString(\"Save_fileitem\")); //$NON-NLS-1$", "+\t\t\t\tdialog.setFilterNames(new String [] {getResourceString(\"Text_Documents\")}); //$NON-NLS-1$ ", "+\t\t\t\tdialog.setFilterExtensions(new String [] {\"*.txt\"}); //$NON-NLS-1$", "+\t\t\t\tdialog.setFilterPath(\"c:\\\\\"); //$NON-NLS-1$", "+\t\t\t\tdialog.setFileName(\"*.txt\"); //$NON-NLS-1$", "+\t\t\t\tfileName = dialog.open(); ", "+\t\t\t\tif (fileName == null) return;\t\t\t\t", "+\t\t        File file = new File(fileName);", "+\t\t        FileWriter fileWriter = null;", "+\t\t        try {", "+\t\t        \tfileWriter = new FileWriter(file);", "+\t\t        \tfileWriter.write(styledText.getText());", "+\t\t        } catch (IOException ex) {", "+\t\t        \tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_savefile\") + fileName); //$NON-NLS-1$", "+\t\t\t\t\tmessageBox.open();", "+\t\t        } finally {", "+\t\t        \ttry {", "+\t\t        \t\tif (fileWriter != null) fileWriter.close();", "+\t\t        \t} catch (IOException ex) {", "+\t\t        \t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "+\t\t\t\t\t\tmessageBox.setMessage(ex.getMessage());", "+\t\t\t\t\t\tmessageBox.open();", "+\t\t        \t}", "+\t\t        }", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tnew MenuItem(fileMenu, SWT.SEPARATOR);", "+\t\t", "+\t\tMenuItem exitItem = new MenuItem(fileMenu, SWT.PUSH);", "+\t\texitItem.setText(getResourceString(\"Exit_menuitem\")); //$NON-NLS-1$", "+\t\texitItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tshell.dispose();", "+\t\t\t}", "+\t\t});\t", "+", "+\t\tMenuItem editItem = new MenuItem(menu, SWT.CASCADE);", "+\t\tfinal Menu editMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\teditItem.setText(getResourceString(\"Edit_menuitem\")); //$NON-NLS-1$", "+\t\teditItem.setMenu(editMenu);", "+\t\tfinal MenuItem cutItem = new MenuItem(editMenu, SWT.PUSH);", "+\t\tcutItem.setText(getResourceString(\"Cut_menuitem\")); //$NON-NLS-1$", "+\t\tcutItem.setImage(iCut);", "+\t\tcutItem.setAccelerator(SWT.MOD1 | 'x');", "+\t\tcutItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.cut();", "+\t\t\t}", "+\t\t});", "+", "+\t\tfinal MenuItem copyItem = new MenuItem(editMenu, SWT.PUSH);", "+\t\tcopyItem.setText(getResourceString(\"Copy_menuitem\")); //$NON-NLS-1$", "+\t\tcopyItem.setImage(iCopy);", "+\t\tcopyItem.setAccelerator(SWT.MOD1 | 'c');", "+\t\tcopyItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.copy();", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem pasteItem = new MenuItem(editMenu, SWT.PUSH);", "+\t\tpasteItem.setText(getResourceString(\"Paste_menuitem\")); //$NON-NLS-1$", "+\t\tpasteItem.setImage(iPaste);", "+\t\tpasteItem.setAccelerator(SWT.MOD1 | 'v');", "+\t\tpasteItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.paste();", "+\t\t\t}", "+\t\t});", "+", "+\t\tnew MenuItem(editMenu, SWT.SEPARATOR);", "+\t\tfinal MenuItem selectAllItem = new MenuItem(editMenu, SWT.PUSH);", "+\t\tselectAllItem.setText(getResourceString(\"SelectAll_menuitem\")); //$NON-NLS-1$", "+\t\tselectAllItem.setAccelerator(SWT.MOD1 | 'a');", "+\t\tselectAllItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.selectAll();", "+\t\t\t}", "+\t\t});", "+", "+\t\teditMenu.addMenuListener(new MenuAdapter() {", "+\t\t\tpublic void menuShown(MenuEvent e) {", "+\t\t\t\tint selectionCount = styledText.getSelectionCount();", "+\t\t\t\tcutItem.setEnabled(selectionCount > 0);", "+\t\t\t\tcopyItem.setEnabled(selectionCount > 0);", "+\t\t\t\tselectAllItem.setEnabled(selectionCount < styledText.getCharCount());", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem wrapItem = new MenuItem(editMenu, SWT.CHECK);", "+\t\twrapItem.setText(getResourceString(\"Wrap_menuitem\")); //$NON-NLS-1$", "+\t\twrapItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tMenuItem item = (MenuItem) e.widget;", "+\t\t\t\tboolean enabled = item.getSelection();", "+\t\t\t\tstyledText.setWordWrap(enabled);", "+\t\t\t\teditMenu.getItem(6).setEnabled(enabled);", "+\t\t\t\teditMenu.getItem(8).setEnabled(enabled);", "+\t\t\t\tleftAlignmentItem.setEnabled(enabled);", "+\t\t\t\tcenterAlignmentItem.setEnabled(enabled);", "+\t\t\t\trightAlignmentItem.setEnabled(enabled);", "+\t\t\t\tjustifyAlignmentItem.setEnabled(enabled);", "+\t\t\t\tblockSelectionItem.setEnabled(!enabled);", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem justifyItem = new MenuItem(editMenu, SWT.CHECK);", "+\t\tjustifyItem.setText(getResourceString(\"Justify_menuitem\")); //$NON-NLS-1$", "+\t\tjustifyItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tMenuItem item = (MenuItem) e.widget;", "+\t\t\t\tstyledText.setJustify(item.getSelection());", "+\t\t\t\tupdateToolBar();", "+\t\t\t}", "+\t\t});", "+\t\tjustifyItem.setEnabled(false);", "+", "+\t\tMenuItem setFontItem = new MenuItem(editMenu, SWT.PUSH);", "+\t\tsetFontItem.setText(getResourceString(\"SetFont_menuitem\")); //$NON-NLS-1$", "+\t\tsetFontItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tFontDialog fontDialog = new FontDialog(shell);", "+\t\t\t\tfontDialog.setFontList(styledText.getFont().getFontData());", "+\t\t\t\tFontData data = fontDialog.open();", "+\t\t\t\tif (data != null) {", "+\t\t\t\t\tFont newFont = new Font(display, data);", "+\t\t\t\t\tstyledText.setFont(newFont);", "+\t\t\t\t\tif (font != null) font.dispose();", "+\t\t\t\t\tfont = newFont;", "+\t\t\t\t\tupdateToolBar();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem alignmentItem = new MenuItem(editMenu, SWT.CASCADE);", "+\t\talignmentItem.setText(getResourceString(\"Alignment_menuitem\")); //$NON-NLS-1$", "+\t\tMenu alignmentMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\talignmentItem.setMenu(alignmentMenu);", "+\t\tfinal MenuItem leftAlignmentItem = new MenuItem(alignmentMenu, SWT.RADIO);", "+\t\tleftAlignmentItem.setText(getResourceString(\"Left_menuitem\")); //$NON-NLS-1$", "+\t\tleftAlignmentItem.setSelection(true);", "+\t\tleftAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.setAlignment(SWT.LEFT);", "+\t\t\t\tupdateToolBar();", "+\t\t\t}", "+\t\t});", "+\t\talignmentItem.setEnabled(false);", "+", "+\t\tfinal MenuItem centerAlignmentItem = new MenuItem(alignmentMenu, SWT.RADIO);", "+\t\tcenterAlignmentItem.setText(getResourceString(\"Center_menuitem\")); //$NON-NLS-1$", "+\t\tcenterAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.setAlignment(SWT.CENTER);", "+\t\t\t\tupdateToolBar();", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem rightAlignmentItem = new MenuItem(alignmentMenu, SWT.RADIO);", "+\t\trightAlignmentItem.setText(getResourceString(\"Right_menuitem\")); //$NON-NLS-1$", "+\t\trightAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.setAlignment(SWT.RIGHT);", "+\t\t\t\tupdateToolBar();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tMenuItem editOrientationItem = new MenuItem(editMenu, SWT.CASCADE);", "+\t\teditOrientationItem.setText(getResourceString(\"Orientation_menuitem\")); //$NON-NLS-1$", "+\t\tMenu editOrientationMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\teditOrientationItem.setMenu(editOrientationMenu);", "+", "+\t\tMenuItem leftToRightItem = new MenuItem(editOrientationMenu, SWT.RADIO);", "+\t\tleftToRightItem.setText(getResourceString(\"LeftToRight_menuitem\")); //$NON-NLS-1$", "+\t\tleftToRightItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e){", "+\t\t\t\tstyledText.setOrientation(SWT.LEFT_TO_RIGHT);", "+\t\t\t}", "+\t\t});", "+\t\tleftToRightItem.setSelection(true);", "+\t\t", "+\t\tMenuItem rightToLeftItem = new MenuItem(editOrientationMenu, SWT.RADIO);", "+\t\trightToLeftItem.setText(getResourceString(\"RightToLeft_menuitem\")); //$NON-NLS-1$", "+\t\trightToLeftItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.setOrientation(SWT.RIGHT_TO_LEFT);", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tnew MenuItem(editMenu, SWT.SEPARATOR);", "+\t\tMenuItem insertObjectItem = new MenuItem(editMenu, SWT.CASCADE);", "+\t\tinsertObjectItem.setText(getResourceString(\"InsertObject_menuitem\")); //$NON-NLS-1$", "+\t\tMenu insertObjectMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\tinsertObjectItem.setMenu(insertObjectMenu);", "+", "+\t\tMenuItem insertControlItem = new MenuItem(insertObjectMenu, SWT.CASCADE);", "+\t\tinsertControlItem.setText(getResourceString(\"Controls_menuitem\")); //$NON-NLS-1$", "+\t\tMenu controlChoice = new Menu(shell, SWT.DROP_DOWN);", "+\t\tinsertControlItem.setMenu(controlChoice);", "+", "+\t\tMenuItem buttonItem = new MenuItem(controlChoice, SWT.PUSH);", "+\t\tbuttonItem.setText(getResourceString(\"Button_menuitem\")); //$NON-NLS-1$", "+\t\tMenuItem comboItem = new MenuItem(controlChoice, SWT.PUSH);", "+\t\tcomboItem.setText(getResourceString(\"Combo_menuitem\")); //$NON-NLS-1$", "+", "+\t\tbuttonItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tButton button = new Button(styledText, SWT.PUSH);", "+\t\t\t\tbutton.setText(getResourceString(\"Button_menuitem\")); //$NON-NLS-1$", "+\t\t\t\taddControl(button);", "+\t\t\t}", "+\t\t});", "+", "+\t\tcomboItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tCombo combo = new Combo(styledText, SWT.NONE);", "+\t\t\t\tcombo.setText(getResourceString(\"Combo_menuitem\")); //$NON-NLS-1$", "+\t\t\t\taddControl(combo);", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem insertImageItem = new MenuItem(insertObjectMenu, SWT.PUSH);", "+\t\tinsertImageItem.setText(getResourceString(\"Image_menuitem\")); //$NON-NLS-1$", "+", "+\t\tinsertImageItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tFileDialog fileDialog = new FileDialog(shell, SWT.OPEN);", "+\t\t\t\tString fileName = fileDialog.open();", "+", "+\t\t\t\tif (fileName != null) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tImage image = new Image(display, fileName);", "+\t\t\t\t\t\taddImage(image);", "+\t\t\t\t\t} catch (Exception ex) {", "+\t\t\t\t\t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "+\t\t\t\t\t\tmessageBox.setText(getResourceString(\"Bad_image\")); //$NON-NLS-1$", "+\t\t\t\t\t\tmessageBox.setMessage(ex.getMessage());", "+\t\t\t\t\t\tmessageBox.open();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tif (SAMPLE_TEXT) {", "+\t\t\tnew MenuItem(editMenu, SWT.SEPARATOR);", "+\t\t\tMenuItem loadProfileItem = new MenuItem(editMenu, SWT.CASCADE);", "+\t\t\tloadProfileItem.setText(getResourceString(\"LoadProfile_menuitem\")); //$NON-NLS-1$", "+\t\t\tMenu loadProfileMenu = new Menu(shell, SWT.DROP_DOWN);", "+\t\t\tloadProfileItem.setMenu(loadProfileMenu);", "+\t\t\tSelectionAdapter adapter = new SelectionAdapter() {", "+\t\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\t\tint profile = Integer.parseInt((String) e.widget.getData());", "+\t\t\t\t\tloadProfile(profile);", "+\t\t\t\t}", "+\t\t\t};", "+\t", "+\t\t\tMenuItem profileItem = new MenuItem(loadProfileMenu, SWT.PUSH);", "+\t\t\tprofileItem.setText(getResourceString(\"Profile1_menuitem\")); //$NON-NLS-1$", "+\t\t\tprofileItem.setData(\"1\"); //$NON-NLS-1$", "+\t\t\tprofileItem.addSelectionListener(adapter);", "+\t\t\tprofileItem = new MenuItem(loadProfileMenu, SWT.PUSH);", "+\t\t\tprofileItem.setText(getResourceString(\"Profile2_menuitem\")); //$NON-NLS-1$", "+\t\t\tprofileItem.setData(\"2\"); //$NON-NLS-1$", "+\t\t\tprofileItem.addSelectionListener(adapter);", "+\t\t\tprofileItem = new MenuItem(loadProfileMenu, SWT.PUSH);", "+\t\t\tprofileItem.setText(getResourceString(\"Profile3_menuitem\")); //$NON-NLS-1$", "+\t\t\tprofileItem.setData(\"3\"); //$NON-NLS-1$", "+\t\t\tprofileItem.addSelectionListener(adapter);", "+\t\t\tprofileItem = new MenuItem(loadProfileMenu, SWT.PUSH);", "+\t\t\tprofileItem.setText(getResourceString(\"Profile4_menuitem\")); //$NON-NLS-1$", "+\t\t\tprofileItem.setData(\"4\"); //$NON-NLS-1$", "+\t\t\tprofileItem.addSelectionListener(adapter);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06e4aa3f9797ddfcb0f4e7c6059e7eaa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 36, "signatureBeforeChange": "  void createToolBar()", "signatureAfterChange": "  \tvoid createToolBar()", "diff": ["-", "-void createToolBar() {", "-\ttoolBar = new ToolBar(shell, SWT.NONE);", "-\tSelectionAdapter listener = new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tsetStyle (event.widget);", "-\t\t}", "-\t};", "-\tboldButton = new ToolItem(toolBar, SWT.CHECK);", "-\tboldButton.setImage(images.Bold);", "-\tboldButton.setToolTipText(resources.getString(\"Bold\"));", "-\tboldButton.addSelectionListener(listener);", "-\titalicButton = new ToolItem(toolBar, SWT.CHECK);", "-\titalicButton.setImage(images.Italic);", "-\titalicButton.setToolTipText(resources.getString(\"Italic\"));", "-\titalicButton.addSelectionListener(listener);", "-\tunderlineButton = new ToolItem(toolBar, SWT.CHECK);", "-\tunderlineButton.setImage(images.Underline);", "-\tunderlineButton.setToolTipText(resources.getString(\"Underline\"));", "-\tunderlineButton.addSelectionListener(listener);", "-\tstrikeoutButton = new ToolItem(toolBar, SWT.CHECK);", "-\tstrikeoutButton.setImage(images.Strikeout);", "-\tstrikeoutButton.setToolTipText(resources.getString(\"Strikeout\"));", "-\tstrikeoutButton.addSelectionListener(listener);", "-\t\t", "-\tToolItem item = new ToolItem(toolBar, SWT.SEPARATOR);", "-\titem = new ToolItem(toolBar, SWT.PUSH);", "-\titem.setImage(images.Red);", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tfgColor(RED);", "-\t\t}", "-\t});", "-\titem = new ToolItem(toolBar, SWT.PUSH);", "-\titem.setImage(images.Green);", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tfgColor(GREEN);", "-\t\t}", "-\t});", "-\titem = new ToolItem(toolBar, SWT.PUSH);", "-\titem.setImage(images.Blue);", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tfgColor(BLUE);", "-\t\t}", "-\t});\t", "-\titem = new ToolItem(toolBar, SWT.SEPARATOR);", "-\titem = new ToolItem(toolBar, SWT.PUSH);", "-\titem.setImage(images.Erase);", "-\titem.addSelectionListener(new SelectionAdapter() {", "-\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\tclear();", "-\t\t}", "-\t});", "-}", "+", "+\tvoid createToolBar() {", "+\t\tcoolBar = new CoolBar(shell, SWT.NONE);", "+\t\tToolBar styleToolBar = new ToolBar(coolBar, SWT.FLAT);", "+\t\tboldControl = new ToolItem(styleToolBar, SWT.CHECK);", "+\t\tboldControl.setImage(iBold);", "+\t\tboldControl.setToolTipText(getResourceString(\"Bold\")); //$NON-NLS-1$", "+\t\tboldControl.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tapplyStyle(BOLD);", "+\t\t\t}", "+\t\t});", "+", "+\t\titalicControl = new ToolItem(styleToolBar, SWT.CHECK);", "+\t\titalicControl.setImage(iItalic);", "+\t\titalicControl.setToolTipText(getResourceString(\"Italic\")); //$NON-NLS-1$", "+\t\titalicControl.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tapplyStyle(ITALIC);", "+\t\t\t}", "+\t\t});", "+", "+\t\tfinal Menu underlineMenu = new Menu(shell, SWT.POP_UP);", "+\t\tunderlineSingleItem = new MenuItem(underlineMenu, SWT.RADIO);", "+\t\tunderlineSingleItem.setText(getResourceString(\"Single_menuitem\")); //$NON-NLS-1$", "+\t\tunderlineSingleItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (underlineSingleItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(UNDERLINE_SINGLE);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\tunderlineSingleItem.setSelection(true);", "+", "+\t\tunderlineDoubleItem = new MenuItem(underlineMenu, SWT.RADIO);", "+\t\tunderlineDoubleItem.setText(getResourceString(\"Double_menuitem\")); //$NON-NLS-1$", "+\t\tunderlineDoubleItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (underlineDoubleItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(UNDERLINE_DOUBLE);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tunderlineSquiggleItem = new MenuItem(underlineMenu, SWT.RADIO);", "+\t\tunderlineSquiggleItem.setText(getResourceString(\"Squiggle_menuitem\")); //$NON-NLS-1$", "+\t\tunderlineSquiggleItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (underlineSquiggleItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(UNDERLINE_SQUIGGLE);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tunderlineErrorItem = new MenuItem(underlineMenu, SWT.RADIO);", "+\t\tunderlineErrorItem.setText(getResourceString(\"Error_menuitem\")); //$NON-NLS-1$", "+\t\tunderlineErrorItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (underlineErrorItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(UNDERLINE_ERROR);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tMenuItem underlineColorItem = new MenuItem(underlineMenu, SWT.PUSH);", "+\t\tunderlineColorItem.setText(getResourceString(\"Color_menuitem\")); //$NON-NLS-1$", "+\t\tunderlineColorItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {\t\t\t", "+\t\t\t\tColorDialog dialog = new ColorDialog(shell);", "+\t\t\t\tRGB rgb = underlineColor != null ? underlineColor.getRGB() : null;", "+\t\t\t\tdialog.setRGB(rgb);", "+\t\t\t\tRGB newRgb = dialog.open();", "+\t\t\t\tif (newRgb != null) {", "+\t\t\t\t\tif (!newRgb.equals(rgb)) {", "+\t\t\t\t\t\tdisposeResource(underlineColor);", "+\t\t\t\t\t\tunderlineColor = new Color(display, newRgb);\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t\tif (underlineSingleItem.getSelection()) applyStyle(UNDERLINE_SINGLE);", "+\t\t\t\t\telse if (underlineDoubleItem.getSelection()) applyStyle(UNDERLINE_DOUBLE);", "+\t\t\t\t\telse if (underlineErrorItem.getSelection()) applyStyle(UNDERLINE_ERROR);", "+\t\t\t\t\telse if (underlineSquiggleItem.getSelection()) applyStyle(UNDERLINE_SQUIGGLE);", "+\t\t\t\t}\t\t\t\t\t", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tfinal ToolItem underlineControl = new ToolItem(styleToolBar, SWT.DROP_DOWN);", "+\t\tunderlineControl.setImage(iUnderline);", "+\t\tunderlineControl.setToolTipText(getResourceString(\"Underline\")); //$NON-NLS-1$", "+\t\tunderlineControl.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (e.detail == SWT.ARROW) {", "+\t\t\t\t\tRectangle rect = underlineControl.getBounds();", "+\t\t\t\t\tPoint pt = new Point(rect.x, rect.y + rect.height);", "+\t\t\t\t\tunderlineMenu.setLocation(display.map(underlineControl.getParent(), null, pt));", "+\t\t\t\t\tunderlineMenu.setVisible(true);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (underlineSingleItem.getSelection()) applyStyle(UNDERLINE_SINGLE);", "+\t\t\t\t\telse if (underlineDoubleItem.getSelection()) applyStyle(UNDERLINE_DOUBLE);", "+\t\t\t\t\telse if (underlineErrorItem.getSelection()) applyStyle(UNDERLINE_ERROR);", "+\t\t\t\t\telse if (underlineSquiggleItem.getSelection()) applyStyle(UNDERLINE_SQUIGGLE);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tToolItem strikeoutControl = new ToolItem(styleToolBar, SWT.DROP_DOWN);", "+\t\tstrikeoutControl.setImage(iStrikeout);", "+\t\tstrikeoutControl.setToolTipText(getResourceString(\"Strikeout\")); //$NON-NLS-1$", "+\t\tstrikeoutControl.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {\t\t\t\t", "+\t\t\t\tif (e.detail == SWT.ARROW) {", "+\t\t\t\t\tColorDialog dialog = new ColorDialog(shell);", "+\t\t\t\t\tRGB rgb = strikeoutColor != null ? strikeoutColor.getRGB() : null;", "+\t\t\t\t\tdialog.setRGB(rgb);", "+\t\t\t\t\tRGB newRgb = dialog.open();", "+\t\t\t\t\tif (newRgb == null) return;", "+\t\t\t\t\tif (!newRgb.equals(rgb)) {", "+\t\t\t\t\t\tdisposeResource(strikeoutColor);", "+\t\t\t\t\t\tstrikeoutColor = new Color(display, newRgb);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tapplyStyle(STRIKEOUT);", "+\t\t\t}", "+\t\t});", "+", "+\t\tfinal Menu borderMenu = new Menu(shell, SWT.POP_UP);", "+\t\tborderSolidItem = new MenuItem(borderMenu, SWT.RADIO);", "+\t\tborderSolidItem.setText(getResourceString(\"Solid\")); //$NON-NLS-1$", "+\t\tborderSolidItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e){", "+\t\t\t\tif (borderSolidItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(BORDER_SOLID);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\tborderSolidItem.setSelection(true);", "+\t\t", "+\t\tborderDashItem = new MenuItem(borderMenu, SWT.RADIO);", "+\t\tborderDashItem.setText(getResourceString(\"Dash\")); //$NON-NLS-1$", "+\t\tborderDashItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e){", "+\t\t\t\tif (borderDashItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(BORDER_DASH);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\t", "+\t\tborderDotItem = new MenuItem(borderMenu, SWT.RADIO);", "+\t\tborderDotItem.setText(getResourceString(\"Dot\")); //$NON-NLS-1$", "+\t\tborderDotItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e){", "+\t\t\t\tif (borderDotItem.getSelection()) {", "+\t\t\t\t\tapplyStyle(BORDER_DOT);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tMenuItem borderColorItem = new MenuItem(borderMenu, SWT.PUSH);", "+\t\tborderColorItem.setText(getResourceString(\"Color_menuitem\")); //$NON-NLS-1$", "+\t\tborderColorItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e){", "+\t\t\t\tColorDialog dialog = new ColorDialog(shell);", "+\t\t\t\tRGB rgb = borderColor != null ? borderColor.getRGB() : null;", "+\t\t\t\tdialog.setRGB(rgb);", "+\t\t\t\tRGB newRgb = dialog.open();", "+\t\t\t\tif (newRgb != null) {", "+\t\t\t\t\tif (!newRgb.equals(rgb)) {", "+\t\t\t\t\t\tdisposeResource(borderColor);", "+\t\t\t\t\t\tborderColor = new Color(display, newRgb);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (borderDashItem.getSelection()) applyStyle(BORDER_DASH);", "+\t\t\t\t\telse if (borderDotItem.getSelection()) applyStyle(BORDER_DOT);", "+\t\t\t\t\telse if (borderSolidItem.getSelection()) applyStyle(BORDER_SOLID);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tfinal ToolItem borderControl = new ToolItem(styleToolBar, SWT.DROP_DOWN);", "+\t\tborderControl.setImage(iBorderStyle);", "+\t\tborderControl.setToolTipText(getResourceString(\"Box\")); //$NON-NLS-1$", "+\t\tborderControl.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tif (e.detail == SWT.ARROW) {", "+\t\t\t\t\tRectangle rect = borderControl.getBounds();", "+\t\t\t\t\tPoint pt = new Point(rect.x, rect.y + rect.height);", "+\t\t\t\t\tborderMenu.setLocation(display.map(borderControl.getParent(), null, pt));", "+\t\t\t\t\tborderMenu.setVisible(true);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (borderDashItem.getSelection()) applyStyle(BORDER_DASH);", "+\t\t\t\t\telse if (borderDotItem.getSelection()) applyStyle(BORDER_DOT);", "+\t\t\t\t\telse if (borderSolidItem.getSelection()) applyStyle(BORDER_SOLID);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "+\t\tToolItem foregroundItem = new ToolItem(styleToolBar, SWT.DROP_DOWN);", "+\t\tforegroundItem.setImage(iTextForeground);", "+\t\tforegroundItem.setToolTipText(getResourceString(\"TextForeground\")); //$NON-NLS-1$", "+\t\tforegroundItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {\t\t", "+\t\t\t\tif (e.detail == SWT.ARROW || textForeground == null) {", "+\t\t\t\t\tColorDialog dialog = new ColorDialog(shell);", "+\t\t\t\t\tRGB rgb = textForeground != null ? textForeground.getRGB() : null;", "+\t\t\t\t\tdialog.setRGB(rgb);", "+\t\t\t\t\tRGB newRgb = dialog.open();", "+\t\t\t\t\tif (newRgb == null) return;", "+\t\t\t\t\tif (!newRgb.equals(rgb)) {", "+\t\t\t\t\t\tdisposeResource(textForeground);", "+\t\t\t\t\t\ttextForeground = new Color(display, newRgb);\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tapplyStyle(TEXT_FOREGROUND);\t\t\t\t", "+\t\t\t}", "+\t\t});", "+", "+\t\tToolItem backgroundItem = new ToolItem(styleToolBar, SWT.DROP_DOWN);", "+\t\tbackgroundItem.setImage(iTextBackground);", "+\t\tbackgroundItem.setToolTipText(getResourceString(\"TextBackground\")); //$NON-NLS-1$", "+\t\tbackgroundItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {\t\t\t", "+\t\t\t\tif (e.detail == SWT.ARROW || textBackground == null) {", "+\t\t\t\t\tColorDialog dialog = new ColorDialog(shell);", "+\t\t\t\t\tRGB rgb = textBackground != null ? textBackground.getRGB() : null;", "+\t\t\t\t\tdialog.setRGB(rgb);", "+\t\t\t\t\tRGB newRgb = dialog.open();", "+\t\t\t\t\tif (newRgb == null) return;", "+\t\t\t\t\tif (!newRgb.equals(rgb)) {", "+\t\t\t\t\t\tdisposeResource(textBackground);", "+\t\t\t\t\t\ttextBackground = new Color(display, newRgb);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tapplyStyle(TEXT_BACKGROUND);", "+\t\t\t}", "+\t\t});", "+", "+\t\tToolItem baselineUpItem = new ToolItem(styleToolBar, SWT.PUSH);", "+\t\tbaselineUpItem.setImage(iBaselineUp);", "+\t\tbaselineUpItem.setToolTipText(getResourceString(\"IncreaseBaseline\")); //$NON-NLS-1$", "+\t\tbaselineUpItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tapplyStyle(BASELINE_UP);", "+\t\t\t}", "+\t\t});", "+", "+\t\tToolItem baselineDownItem = new ToolItem(styleToolBar, SWT.PUSH);", "+\t\tbaselineDownItem.setImage(iBaselineDown);", "+\t\tbaselineDownItem.setToolTipText(getResourceString(\"DecreaseBaseline\")); //$NON-NLS-1$", "+\t\tbaselineDownItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tapplyStyle(BASELINE_DOWN);", "+\t\t\t}", "+\t\t});", "+\t\tCoolItem coolItem = new CoolItem(coolBar, SWT.NONE);", "+\t\tcoolItem.setControl(styleToolBar);", "+\t\t", "+\t\tComposite composite = new Composite(coolBar, SWT.NONE);", "+\t\tcomposite.setLayout(new GridLayout(2, false));", "+\t\tfontNameControl = new Combo(composite, SWT.DROP_DOWN | SWT.READ_ONLY);", "+\t\tfontNameControl.setItems(getFontNames());", "+\t\tfontNameControl.setVisibleItemCount(12);", "+\t\tfontSizeControl = new Combo(composite, SWT.DROP_DOWN | SWT.READ_ONLY);", "+\t\tString[] fontSizes = new String[] {", "+\t\t\t\t\"6\",\t\t//$NON-NLS-1$", "+\t\t\t\t\"8\", \t\t//$NON-NLS-1$", "+\t\t\t\t\"9\", \t\t//$NON-NLS-1$", "+\t\t\t\t\"10\", \t\t//$NON-NLS-1$", "+\t\t\t\t\"11\", \t\t//$NON-NLS-1$", "+\t\t\t\t\"12\",\t \t//$NON-NLS-1$", "+\t\t\t\t\"14\",\t\t//$NON-NLS-1$", "+\t\t\t\t\"24\",\t\t//$NON-NLS-1$", "+\t\t\t\t\"36\",\t\t//$NON-NLS-1$", "+\t\t\t\t\"48\" \t\t//$NON-NLS-1$", "+\t\t};", "+\t\tfontSizeControl.setItems(fontSizes);", "+\t\tfontSizeControl.setVisibleItemCount(8);", "+\t\tSelectionAdapter adapter = new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tString name = fontNameControl.getText();", "+\t\t\t\tint size = Integer.parseInt(fontSizeControl.getText());", "+\t\t\t\tdisposeResource(textFont);", "+\t\t\t\ttextFont = new Font(display, name, size, SWT.NORMAL);", "+\t\t\t\tapplyStyle(FONT);", "+\t\t\t}", "+\t\t};", "+\t\tfontSizeControl.addSelectionListener(adapter);", "+\t\tfontNameControl.addSelectionListener(adapter);", "+\t\tcoolItem = new CoolItem(coolBar, SWT.NONE);", "+\t\tcoolItem.setControl(composite);", "+", "+\t\tToolBar alignmentToolBar = new ToolBar(coolBar, SWT.FLAT);", "+\t\tblockSelectionItem = new ToolItem(alignmentToolBar, SWT.CHECK);", "+\t\tblockSelectionItem.setImage(iBlockSelection);", "+\t\tblockSelectionItem.setToolTipText(getResourceString(\"BlockSelection\")); //$NON-NLS-1$", "+\t\tblockSelectionItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tstyledText.invokeAction(ST.TOGGLE_BLOCKSELECTION);", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tleftAlignmentItem = new ToolItem(alignmentToolBar, SWT.RADIO);", "+\t\tleftAlignmentItem.setImage(iLeftAlignment);", "+\t\tleftAlignmentItem.setToolTipText(getResourceString(\"AlignLeft\")); //$NON-NLS-1$", "+\t\tleftAlignmentItem.setSelection(true);", "+\t\tleftAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tPoint selection = styledText.getSelection();", "+\t\t\t\tint lineStart = styledText.getLineAtOffset(selection.x);", "+\t\t\t\tint lineEnd = styledText.getLineAtOffset(selection.y);", "+\t\t\t\tstyledText.setLineAlignment(lineStart, lineEnd - lineStart + 1,\tSWT.LEFT);", "+\t\t\t}", "+\t\t});", "+\t\tleftAlignmentItem.setEnabled(false);", "+", "+\t\tcenterAlignmentItem = new ToolItem(alignmentToolBar, SWT.RADIO);", "+\t\tcenterAlignmentItem.setImage(iCenterAlignment);", "+\t\tcenterAlignmentItem.setToolTipText(getResourceString(\"Center_menuitem\")); //$NON-NLS-1$", "+\t\tcenterAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tPoint selection = styledText.getSelection();", "+\t\t\t\tint lineStart = styledText.getLineAtOffset(selection.x);", "+\t\t\t\tint lineEnd = styledText.getLineAtOffset(selection.y);", "+\t\t\t\tstyledText.setLineAlignment(lineStart, lineEnd - lineStart + 1, SWT.CENTER);", "+\t\t\t}", "+\t\t});", "+\t\tcenterAlignmentItem.setEnabled(false);", "+", "+\t\trightAlignmentItem = new ToolItem(alignmentToolBar, SWT.RADIO);", "+\t\trightAlignmentItem.setImage(iRightAlignment);", "+\t\trightAlignmentItem.setToolTipText(getResourceString(\"AlignRight\")); //$NON-NLS-1$", "+\t\trightAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tPoint selection = styledText.getSelection();", "+\t\t\t\tint lineStart = styledText.getLineAtOffset(selection.x);", "+\t\t\t\tint lineEnd = styledText.getLineAtOffset(selection.y);", "+\t\t\t\tstyledText.setLineAlignment(lineStart, lineEnd - lineStart + 1,\tSWT.RIGHT);", "+\t\t\t}", "+\t\t});", "+\t\trightAlignmentItem.setEnabled(false);", "+", "+\t\tjustifyAlignmentItem = new ToolItem(alignmentToolBar, SWT.CHECK);", "+\t\tjustifyAlignmentItem.setImage(iJustifyAlignment);", "+\t\tjustifyAlignmentItem.setToolTipText(getResourceString(\"Justify\")); //$NON-NLS-1$", "+\t\tjustifyAlignmentItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tPoint selection = styledText.getSelection();", "+\t\t\t\tint lineStart = styledText.getLineAtOffset(selection.x);", "+\t\t\t\tint lineEnd = styledText.getLineAtOffset(selection.y);", "+\t\t\t\tstyledText.setLineJustify(lineStart, lineEnd - lineStart + 1, justifyAlignmentItem.getSelection());", "+\t\t\t}", "+\t\t});", "+\t\tjustifyAlignmentItem.setEnabled(false);", "+", "+\t\tToolItem bulletListItem = new ToolItem(alignmentToolBar, SWT.PUSH);", "+\t\tbulletListItem.setImage(iBulletList);", "+\t\tbulletListItem.setToolTipText(getResourceString(\"BulletList\")); //$NON-NLS-1$", "+\t\tbulletListItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tsetBullet(ST.BULLET_DOT);}", "+\t\t});", "+", "+\t\tToolItem numberedListItem = new ToolItem(alignmentToolBar, SWT.PUSH);", "+\t\tnumberedListItem.setImage(iNumberedList);", "+\t\tnumberedListItem.setToolTipText(getResourceString(\"NumberedList\")); //$NON-NLS-1$", "+\t\tnumberedListItem.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tsetBullet(ST.BULLET_CUSTOM);", "+\t\t\t}", "+\t\t});", "+", "+\t\tcoolItem = new CoolItem(coolBar, SWT.NONE);", "+\t\tcoolItem.setControl(alignmentToolBar);", "+\t\tcomposite = new Composite(coolBar, SWT.NONE);", "+\t\tcomposite.setLayout(new GridLayout(4, false));", "+\t\tLabel label = new Label(composite, SWT.NONE);", "+\t\tlabel.setText(getResourceString(\"Indent\")); //$NON-NLS-1$", "+\t\tSpinner indent = new Spinner(composite, SWT.BORDER);", "+\t\tindent.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tSpinner spinner = (Spinner) e.widget;", "+\t\t\t\tstyledText.setIndent(spinner.getSelection());", "+\t\t\t}", "+\t\t});", "+\t\tlabel = new Label(composite, SWT.NONE);", "+\t\tlabel.setText(getResourceString(\"Spacing\")); //$NON-NLS-1$", "+\t\tSpinner spacing = new Spinner(composite, SWT.BORDER);", "+\t\tspacing.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tSpinner spinner = (Spinner) e.widget;", "+\t\t\t\tstyledText.setLineSpacing(spinner.getSelection());", "+\t\t\t}", "+\t\t});", "+", "+\t\tcoolItem = new CoolItem(coolBar, SWT.NONE);", "+\t\tcoolItem.setControl(composite);", "+\t\tCoolItem[] coolItems = coolBar.getItems();", "+\t\tfor (int i = 0; i < coolItems.length; i++) {", "+\t\t\tCoolItem item = coolItems[i];", "+\t\t\tControl control = item.getControl();", "+\t\t\tPoint size = control.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\titem.setMinimumSize(size);", "+\t\t\tsize = item.computeSize(size.x, size.y);", "+\t\t\titem.setPreferredSize(size);", "+\t\t\titem.setSize(size);", "+\t\t}", "+\t\tcoolBar.addControlListener(new ControlAdapter() {", "+\t\t\tpublic void controlResized(ControlEvent event) {", "+\t\t\t\thandleResize(event);", "+\t\t\t}", "+\t\t});", "+\t}"]}], "num": 23084}