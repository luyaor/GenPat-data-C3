{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a4f0dac355181ff71a1a47bc04261bf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8afcbc1fd75af3f98598ce6c9909cb2c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "780deeed6b8d04c7f8256f57ee4b8ba670998a62", "commitAfterChange": "f6545bdd05853b79e0ef79ea07a3cd61ab49eba2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \t\r \tint handleItemNotificationCallback(int item, int message)", "signatureAfterChange": "\r \t\r \tint handleItemNotificationCallback(int item, int message)", "diff": ["+\t\tEvent event= null;\r", "+\t\t\r", "+\t\t\tevent= new Event ();\r", "+\t\t\tevent.item= ti;\r", "+\t\t\t/*\r", "+\t\t\t* It is possible (but unlikely), that application\r", "+\t\t\t* code could have disposed the widget in the expand\r", "+\t\t\t* or collapse event.  If this happens, end the\r", "+\t\t\t* processing of the Windows message by returning\r", "+\t\t\t* zero as the result of the window proc.\r", "+\t\t\t*/\r", "+\t\t\tsendEvent (SWT.Expand, event);\r", "+\t\t\t//if (isDisposed ()) return LRESULT.ZERO;\r", "-\t\tcase OS.kDataBrowserContainerClosed:\t/* Container is closed (y'all come back now!) */\t\t\r", "+\t\tcase OS.kDataBrowserContainerClosing:\t/* Container is about to be closed */\r", "+\t\t\tint[] ids= MacUtil.getSelectionIDs(handle, ti.handle, true);\r", "+\t\t\tif (ids.length > 0 && ids[0] != 0)\r", "+\t\t\t\tOS.SetDataBrowserSelectedItems(handle, 1, new int[] { ti.handle }, OS.kDataBrowserItemsAssign);\r", "+\t\t\tbreak;\r", "+\t\t\t\r", "+\t\tcase OS.kDataBrowserContainerClosed:\t/* Container is closed */\t\t\r", "+\t\t\tevent= new Event ();\r", "+\t\t\tevent.item= ti;\r", "+\t\t\t/*\r", "+\t\t\t* It is possible (but unlikely), that application\r", "+\t\t\t* code could have disposed the widget in the expand\r", "+\t\t\t* or collapse event.  If this happens, end the\r", "+\t\t\t* processing of the Windows message by returning\r", "+\t\t\t* zero as the result of the window proc.\r", "+\t\t\t*/\r", "+\t\t\tsendEvent (SWT.Collapse, event);\r", "+\t\t\t//if (isDisposed ()) return LRESULT.ZERO;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514dd60ef9ef6c5d9f0b595e1836d08d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "commitAfterChange": "ef701f46e5b2e0f2985bbdd5c26f3756062468e4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t\tcase OS.VK_ESCAPE:", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  Windows sends NM_RETURN from WM_KEYDOWN", "+\t\t\t* instead of using WM_CHAR.  This means that application code", "+\t\t\t* that expects to consume the key press and therefore avoid the", "+\t\t\t* SWT.DefaultSelection event from WM_CHAR will fail.  The fix", "+\t\t\t* is to implement SWT.DefaultSelection in WM_CHAR instead of", "+\t\t\t* using NM_RETURN.", "+\t\t\t*/", "+\t\t\tEvent event = new Event ();", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem != 0) {", "+\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\ttvItem.hItem = hItem;", "+\t\t\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\t}", "+\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.VK_ESCAPE:"]}], "num": 49041}