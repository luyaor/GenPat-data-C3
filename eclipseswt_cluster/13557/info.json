{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b1d48acc29aa403008513df779fb3f0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ccf85334189e0af82002028946a49b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "8614680ae78fee56d42eb3d94f28a75f18d340b5", "commitAfterChange": "9f7ccea14bb1fb11d1071f5e85bfb64c67f560bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-    scrolledWindow = OS.gtk_scrolled_window_new (0, 0);", "-    OS.gtk_scrolled_window_set_policy (scrolledWindow, OS.GTK_POLICY_AUTOMATIC, OS.GTK_POLICY_AUTOMATIC);", "-    webView = WebKitGTK.webkit_web_view_new ();", "-    webViewData = C.malloc (C.PTR_SIZEOF);", "-    C.memmove (webViewData, new int /*long*/[] {webView}, C.PTR_SIZEOF);", "-    OS.gtk_container_add (scrolledWindow, webView);", "-    OS.gtk_container_add (browser.handle, scrolledWindow);", "-    OS.gtk_widget_show (scrolledWindow);", "+\tscrolledWindow = OS.gtk_scrolled_window_new (0, 0);", "+\tOS.gtk_scrolled_window_set_policy (scrolledWindow, OS.GTK_POLICY_AUTOMATIC, OS.GTK_POLICY_AUTOMATIC);", "+\twebView = WebKitGTK.webkit_web_view_new ();", "+\twebViewData = C.malloc (C.PTR_SIZEOF);", "+\tC.memmove (webViewData, new int /*long*/[] {webView}, C.PTR_SIZEOF);", "+\tOS.gtk_container_add (scrolledWindow, webView);", "+\tOS.gtk_container_add (browser.handle, scrolledWindow);", "+\tOS.gtk_widget_show (scrolledWindow);", "-    OS.g_signal_connect (webView, WebKitGTK.notify_load_status, Proc3.getAddress (), NOTIFY_LOAD_STATUS);", "-    OS.g_signal_connect (webView, WebKitGTK.notify_progress, Proc3.getAddress (), NOTIFY_PROGRESS);", "-    OS.g_signal_connect (webView, WebKitGTK.notify_title, Proc3.getAddress (), NOTIFY_TITLE);", "-    OS.g_signal_connect (webView, WebKitGTK.populate_popup, Proc3.getAddress (), POPULATE_POPUP);", "-    OS.g_signal_connect (webView, WebKitGTK.resource_request_starting, Proc6.getAddress (), RESOURCE_REQUEST_STARTING);", "-    OS.g_signal_connect (webView, WebKitGTK.status_bar_text_changed, Proc3.getAddress (), STATUS_BAR_TEXT_CHANGED);", "-    OS.g_signal_connect (webView, WebKitGTK.web_view_ready, Proc2.getAddress (), WEB_VIEW_READY);", "-    OS.g_signal_connect (webView, WebKitGTK.window_object_cleared, Proc5.getAddress (), WINDOW_OBJECT_CLEARED);", "+\tOS.g_signal_connect (webView, WebKitGTK.notify_load_status, Proc3.getAddress (), NOTIFY_LOAD_STATUS);", "+\tOS.g_signal_connect (webView, WebKitGTK.notify_progress, Proc3.getAddress (), NOTIFY_PROGRESS);", "+\tOS.g_signal_connect (webView, WebKitGTK.notify_title, Proc3.getAddress (), NOTIFY_TITLE);", "+\tOS.g_signal_connect (webView, WebKitGTK.populate_popup, Proc3.getAddress (), POPULATE_POPUP);", "+\tOS.g_signal_connect (webView, WebKitGTK.resource_request_starting, Proc6.getAddress (), RESOURCE_REQUEST_STARTING);", "+\tOS.g_signal_connect (webView, WebKitGTK.status_bar_text_changed, Proc3.getAddress (), STATUS_BAR_TEXT_CHANGED);", "+\tOS.g_signal_connect (webView, WebKitGTK.web_view_ready, Proc2.getAddress (), WEB_VIEW_READY);", "+\tOS.g_signal_connect (webView, WebKitGTK.window_object_cleared, Proc5.getAddress (), WINDOW_OBJECT_CLEARED);", "-\tOS.g_signal_connect (scrolledWindow, OS.event, Proc3.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.button_press_event, JSDOMEventProc.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.button_release_event, JSDOMEventProc.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.key_press_event, JSDOMEventProc.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.key_release_event, JSDOMEventProc.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.scroll_event, JSDOMEventProc.getAddress (), 0);", "+\tOS.g_signal_connect (webView, OS.motion_notify_event, JSDOMEventProc.getAddress (), 0);", "+", "-\tOS.g_signal_connect (scrolledWindow, OS.button_press_event, Proc3.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.button_release_event, Proc3.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.key_press_event, Proc3.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.key_release_event, Proc3.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.scroll_event, Proc3.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.motion_notify_event, Proc3.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.button_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.button_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.key_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.key_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.scroll_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tOS.g_signal_connect (scrolledWindow, OS.motion_notify_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-    int /*long*/ settings = WebKitGTK.webkit_web_view_get_settings (webView);", "-    OS.g_object_set (settings, WebKitGTK.javascript_can_open_windows_automatically, 1, 0);", "-    OS.g_object_set (settings, WebKitGTK.enable_universal_access_from_file_uris, 1, 0);", "-    byte[] bytes = Converter.wcsToMbcs (null, \"UTF-8\", true); // $NON-NLS-1$", "-    OS.g_object_set (settings, WebKitGTK.default_encoding, bytes, 0);", "+\tint /*long*/ settings = WebKitGTK.webkit_web_view_get_settings (webView);", "+\tOS.g_object_set (settings, WebKitGTK.javascript_can_open_windows_automatically, 1, 0);", "+\tOS.g_object_set (settings, WebKitGTK.enable_universal_access_from_file_uris, 1, 0);", "+\tbyte[] bytes = Converter.wcsToMbcs (null, \"UTF-8\", true); // $NON-NLS-1$", "+\tOS.g_object_set (settings, WebKitGTK.default_encoding, bytes, 0);", "-    Listener listener = new Listener () {", "+\tListener listener = new Listener () {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd05ffe5497514212d6a410c692bdb5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "7d39c6aadb10854e08d28af689cb8ec1995cfef0", "commitAfterChange": "7ea8f6efbd6b9112bb64099daca39467f3a6d2f8", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\t\tOS.g_signal_connect_closure (handle, OS.changed, display.closures [CHANGED], true);", "-\t\tOS.g_signal_connect_closure (handle, OS.insert_text, display.closures [INSERT_TEXT], false);", "-\t\tOS.g_signal_connect_closure (handle, OS.delete_text, display.closures [DELETE_TEXT], false);", "-\t\tOS.g_signal_connect_closure (handle, OS.activate, display.closures [ACTIVATE], false);", "-\t\tOS.g_signal_connect_closure (handle, OS.grab_focus, display.closures [GRAB_FOCUS], false);", "-\t\tOS.g_signal_connect_closure (handle, OS.populate_popup, display.closures [POPULATE_POPUP], false);", "+\t\tOS.g_signal_connect_closure (handle, OS.changed, display.getClosure (CHANGED), true);", "+\t\tOS.g_signal_connect_closure (handle, OS.insert_text, display.getClosure (INSERT_TEXT), false);", "+\t\tOS.g_signal_connect_closure (handle, OS.delete_text, display.getClosure (DELETE_TEXT), false);", "+\t\tOS.g_signal_connect_closure (handle, OS.activate, display.getClosure (ACTIVATE), false);", "+\t\tOS.g_signal_connect_closure (handle, OS.grab_focus, display.getClosure (GRAB_FOCUS), false);", "+\t\tOS.g_signal_connect_closure (handle, OS.populate_popup, display.getClosure (POPULATE_POPUP), false);", "-\t\t\tOS.g_signal_connect_closure (handle, OS.icon_release, display.closures [ICON_RELEASE], false);", "+\t\t\tOS.g_signal_connect_closure (handle, OS.icon_release, display.getClosure (ICON_RELEASE), false);", "-\t\tOS.g_signal_connect_closure (bufferHandle, OS.changed, display.closures [CHANGED], false);", "-\t\tOS.g_signal_connect_closure (bufferHandle, OS.insert_text, display.closures [TEXT_BUFFER_INSERT_TEXT], false);", "-\t\tOS.g_signal_connect_closure (bufferHandle, OS.delete_range, display.closures [DELETE_RANGE], false);", "-\t\tOS.g_signal_connect_closure (handle, OS.populate_popup, display.closures [POPULATE_POPUP], false);", "+\t\tOS.g_signal_connect_closure (bufferHandle, OS.changed, display.getClosure (CHANGED), false);", "+\t\tOS.g_signal_connect_closure (bufferHandle, OS.insert_text, display.getClosure (TEXT_BUFFER_INSERT_TEXT), false);", "+\t\tOS.g_signal_connect_closure (bufferHandle, OS.delete_range, display.getClosure (DELETE_RANGE), false);", "+\t\tOS.g_signal_connect_closure (handle, OS.populate_popup, display.getClosure (POPULATE_POPUP), false);", "-\t\tOS.g_signal_connect_closure (imContext, OS.commit, display.closures [COMMIT], false);", "+\t\tOS.g_signal_connect_closure (imContext, OS.commit, display.getClosure (COMMIT), false);", "-\tOS.g_signal_connect_closure (handle, OS.backspace, display.closures [BACKSPACE], false);", "-\tOS.g_signal_connect_closure (handle, OS.backspace, display.closures [BACKSPACE_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.copy_clipboard, display.closures [COPY_CLIPBOARD], false);", "-\tOS.g_signal_connect_closure (handle, OS.copy_clipboard, display.closures [COPY_CLIPBOARD_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.cut_clipboard, display.closures [CUT_CLIPBOARD], false);", "-\tOS.g_signal_connect_closure (handle, OS.cut_clipboard, display.closures [CUT_CLIPBOARD_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.paste_clipboard, display.closures [PASTE_CLIPBOARD], false);", "-\tOS.g_signal_connect_closure (handle, OS.paste_clipboard, display.closures [PASTE_CLIPBOARD_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.delete_from_cursor, display.closures [DELETE_FROM_CURSOR], false);", "-\tOS.g_signal_connect_closure (handle, OS.delete_from_cursor, display.closures [DELETE_FROM_CURSOR_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.move_cursor, display.closures [MOVE_CURSOR], false);", "-\tOS.g_signal_connect_closure (handle, OS.move_cursor, display.closures [MOVE_CURSOR_INVERSE], true);", "-\tOS.g_signal_connect_closure (handle, OS.direction_changed, display.closures [DIRECTION_CHANGED], true);", "+\tOS.g_signal_connect_closure (handle, OS.backspace, display.getClosure (BACKSPACE), false);", "+\tOS.g_signal_connect_closure (handle, OS.backspace, display.getClosure (BACKSPACE_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.copy_clipboard, display.getClosure (COPY_CLIPBOARD), false);", "+\tOS.g_signal_connect_closure (handle, OS.copy_clipboard, display.getClosure (COPY_CLIPBOARD_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.cut_clipboard, display.getClosure (CUT_CLIPBOARD), false);", "+\tOS.g_signal_connect_closure (handle, OS.cut_clipboard, display.getClosure (CUT_CLIPBOARD_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.paste_clipboard, display.getClosure (PASTE_CLIPBOARD), false);", "+\tOS.g_signal_connect_closure (handle, OS.paste_clipboard, display.getClosure (PASTE_CLIPBOARD_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.delete_from_cursor, display.getClosure (DELETE_FROM_CURSOR), false);", "+\tOS.g_signal_connect_closure (handle, OS.delete_from_cursor, display.getClosure (DELETE_FROM_CURSOR_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.move_cursor, display.getClosure (MOVE_CURSOR), false);", "+\tOS.g_signal_connect_closure (handle, OS.move_cursor, display.getClosure (MOVE_CURSOR_INVERSE), true);", "+\tOS.g_signal_connect_closure (handle, OS.direction_changed, display.getClosure (DIRECTION_CHANGED), true);"]}], "num": 13557}