{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16d10f407c5b53d18c233cb53a878eac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1032f93b23e529c7edb0219def779c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ConstantsGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void generate(Field field)", "signatureAfterChange": "  public void generate(JNIField field)", "diff": ["-public void generate(Field field) {", "-\tClass type = field.getType();", "+public void generate(JNIField field) {", "+\tJNIType type = field.getType();", "-\toutput(getTypeSignature3(field.getType()));", "+\toutput(field.getType().getTypeSignature3(false));", "-\tif (type == String.class || type == byte[].class) output(\"\\\"%s\\\"\");", "+\tif (type.isType(\"java.lang.String\") || type.isType(\"[B\")) output(\"\\\"%s\\\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746dfb72444428f313a978640e437927", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "d7b73d46c22502d651b01475d699f2c79498b0d0", "commitAfterChange": "b9867f0b90962f343a200b905e642393e214faf1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType)", "signatureAfterChange": "  void generateFunctionPrototype(Method method, String function, Class[] paramTypes, Class returnType)", "diff": ["-\tif (nativeMacro) {", "-\t\toutput(getClassName(method.getDeclaringClass()));", "-\t\toutput(\"_NATIVE(\");", "-\t} else {", "-\t\toutput(\"Java_\");", "-\t\toutput(toC(method.getDeclaringClass().getName()));", "-\t\toutput(\"_\");", "-\t}", "+\toutput(getClassName(method.getDeclaringClass()));", "+\toutput(\"_NATIVE(\");", "-\tif (nativeMacro) {", "-\t\toutput(\")\");", "-\t}", "-\toutputln();", "+\toutputln(\")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c3c435f9d0731cab8a9db9d916ae46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\tif (method.getName().equalsIgnoreCase(\"call\")) {", "+\tString name = method.getName();", "+\tif (name.startsWith(\"_\")) name = name.substring(1);", "+\tif (name.equalsIgnoreCase(\"call\")) {", "-\t} else if (method.getName().startsWith(\"VtblCall\")) {", "+\t} else if (name.startsWith(\"VtblCall\")) {", "-\t\t\tString name = method.getName();", "-\t\t\tString name = method.getName();", "-\t\t\toutput(method.getName());", "+\t\t\toutput(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0429062dd61768c955c96059d7d6d9d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/MetaDataGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generate(Field field)", "signatureAfterChange": "  public void generate(JNIField field)", "diff": ["-public void generate(Field field) {", "-\toutput(getClassName(field.getDeclaringClass()));", "+public void generate(JNIField field) {", "+\toutput(field.getDeclaringClass().getSimpleName());", "-\tFieldData data = getMetaData().getMetaData(field);", "-\tif (data != null) output(data.toString());", "+\toutput(((AbstractItem)field).flatten());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da1397626e3bc2c25150de4ef31dcc5d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\tString name = method.getName();", "+\tif (name.startsWith(\"_\")) name = name.substring(1);", "-\t\toutput(method.getName());", "+\t\toutput(name);", "-\t\toutput(method.getName());", "+\t\toutput(name);", "-\t\toutput(method.getName());", "+\t\toutput(name);", "-\t\toutput(method.getName());", "+\t\toutput(name);", "-\t\toutput(method.getName());", "+\t\toutput(name);"]}], "num": 52908}