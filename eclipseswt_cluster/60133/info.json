{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58b39e7e2dc7787664ca61bdc41e9c34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea155a36f06d6ca217822ce8eb699d69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "0baf41d40f3dd8716522c72f50e1eb2c9697bedd", "commitAfterChange": "4cf183f94d4d4d275955b891045c44c32b075e0a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RGB open ()", "signatureAfterChange": " public RGB open ()", "diff": ["-\t/* Allocate the Custom Colors */", "+\t/* Allocate the Custom Colors and initialize to white */", "-\t\tdisplay.lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, 16 * 4);", "+\t\tdisplay.lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, CUSTOM_COLOR_COUNT * 4);", "+\t\tfor (int i=0; i < CUSTOM_COLOR_COUNT; i++) {", "+\t\t\tcolors[i] = 0x00FFFFFF;", "+\t\t}", "+\t\tOS.MoveMemory (display.lpCustColors, colors, CUSTOM_COLOR_COUNT * 4);", "+\t}", "+\t", "+\t/* Set the Custom Colors (if any) into the dialog */", "+\tif (rgbs != null) {", "+\t\tint length = rgbs.length > CUSTOM_COLOR_COUNT ? CUSTOM_COLOR_COUNT : rgbs.length;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tRGB rgb = rgbs [i];", "+\t\t\tint red = rgb.red & 0xFF;", "+\t\t\tint green = (rgb.green << 8) & 0xFF00;", "+\t\t\tint blue = (rgb.blue << 16) & 0xFF0000;", "+\t\t\tcolors[i] = red | green | blue;", "+\t\t}", "+\t\tfor (int i=length; i < CUSTOM_COLOR_COUNT; i++) {", "+\t\t\tcolors[i] = 0x00FFFFFF;", "+\t\t}", "+\t\tOS.MoveMemory (display.lpCustColors, colors, CUSTOM_COLOR_COUNT * 4);", "+\t/* Get the Custom Colors (if the user defined any) from the dialog */", "+\tboolean customColor = false;", "+\tOS.MoveMemory (colors, display.lpCustColors, colors.length * 4);", "+\tfor (int i=0; i<colors.length; i++) {", "+\t\tif (colors[i] != 0x00FFFFFF) {", "+\t\t\tcustomColor = true;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (customColor) {", "+\t\trgbs = new RGB [CUSTOM_COLOR_COUNT];", "+\t\tfor (int i=0; i<colors.length; i++) {", "+\t\t\tint color = colors[i];", "+\t\t\tint red = color & 0xFF;", "+\t\t\tint green = (color >> 8) & 0xFF;", "+\t\t\tint blue = (color >> 16) & 0xFF;", "+\t\t\trgbs[i] = new RGB (red, green, blue);", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6217467e3d14d5ffa7ca0ce9351744", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "d3c0efa94b11c766b17f4670a7e8438e97a87bdc", "commitAfterChange": "674130de6d18a5e8ff6185d5c42d30dc208f1519", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RGB open ()", "signatureAfterChange": " public RGB open ()", "diff": ["-\t/* Allocate the Custom Colors */", "+\t/* Allocate the Custom Colors and initialize to white */", "-\t\tdisplay.lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, 16 * 4);", "+\t\tdisplay.lpCustColors = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, CUSTOM_COLOR_COUNT * 4);", "+\t\tfor (int i=0; i < CUSTOM_COLOR_COUNT; i++) {", "+\t\t\tcolors[i] = 0x00FFFFFF;", "+\t\t}", "+\t\tOS.MoveMemory (display.lpCustColors, colors, CUSTOM_COLOR_COUNT * 4);", "+\t}", "+\t", "+\t/* Set the Custom Colors (if any) into the dialog */", "+\tif (rgbs != null) {", "+\t\tfor (int i=0; i<rgbs.length; i++) {", "+\t\t\tRGB rgb = rgbs [i];", "+\t\t\tint red = rgb.red & 0xFF;", "+\t\t\tint green = (rgb.green << 8) & 0xFF00;", "+\t\t\tint blue = (rgb.blue << 16) & 0xFF0000;", "+\t\t\tcolors[i] = red | green | blue;", "+\t\t}", "+\t\tfor (int i=rgbs.length; i < CUSTOM_COLOR_COUNT; i++) {", "+\t\t\tcolors[i] = 0x00FFFFFF;", "+\t\t}", "+\t\tOS.MoveMemory (display.lpCustColors, colors, CUSTOM_COLOR_COUNT * 4);", "+\t/* Get the Custom Colors (if the user defined any) from the dialog */", "+\tboolean customColor = false;", "+\tOS.MoveMemory (colors, display.lpCustColors, colors.length * 4);", "+\tfor (int i=0; i<colors.length; i++) {", "+\t\tif (colors[i] != 0x00FFFFFF) {", "+\t\t\tcustomColor = true;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (customColor) {", "+\t\trgbs = new RGB [CUSTOM_COLOR_COUNT];", "+\t\tfor (int i=0; i<colors.length; i++) {", "+\t\t\tint color = colors[i];", "+\t\t\tint red = color & 0xFF;", "+\t\t\tint green = (color >> 8) & 0xFF;", "+\t\t\tint blue = (color >> 16) & 0xFF;", "+\t\t\trgbs[i] = new RGB (red, green, blue);", "+\t\t}", "+\t}", "+"]}], "num": 60133}