{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87f7265295575447558485f8a71f6351", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c19fc33bb271e78cac76bb798de42d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["+\t", "-\tupdateText ();", "+\t\t", "+\tint hMenu = parent.handle;", "+\t", "+\tshort[] index= new short[1];", "+\tOS.GetIndMenuItemWithCommandID(hMenu, id, 1, null, index);", "+\tif (index[0] >= 1) {", "+\t\tint sHandle= 0;", "+\t\ttry {", "+\t\t\tsHandle= OS.CFStringCreateWithCharacters(removeMnemonicsAndShortcut(text));", "+\t\t\tOS.SetMenuItemTextWithCFString(hMenu, index[0], sHandle);", "+\t\t} finally {", "+\t\t\tOS.CFRelease(sHandle);", "+\t\t}", "+\t\tsetAccelerator(hMenu, index[0], parseShortcut(string));", "+\t} else", "+\t\terror (SWT.ERROR_CANNOT_SET_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2984d1087f58fbf91f35b03d04a786b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "b574e679280213216a339e4baab5c56f49ed03b6", "commitAfterChange": "31688c68d3a4f46048f3504cdb5812f8b9066e99", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\t/* AW", "-\tif ((OS.WIN32_MAJOR << 16 | OS.WIN32_MINOR) < (4 << 16 | 10)) {", "-\t\treturn;", "+\t", "+\tif (MacUtil.USE_MENU_ICONS) {", "+\t\tif (fCIconHandle != 0)", "+\t\t\tImage.DisposeCIcon(fCIconHandle);", "+\t\tfCIconHandle= Image.carbon_createCIcon(image);", "+\t\tif (fCIconHandle != 0) {", "+\t\t\tint hMenu = parent.handle;", "+\t\t\tshort[] index= new short[1];", "+\t\t\tOS.GetIndMenuItemWithCommandID(hMenu, id, 1, null, index);", "+\t\t\tif (index[0] >= 1) {", "+\t\t\t\tOS.SetMenuItemIconHandle(hMenu, index[0], (byte)4, fCIconHandle);", "+\t\t\t} else", "+\t\t\t\terror (SWT.ERROR_CANNOT_SET_TEXT);", "+\t\t}", "-\tint hMenu = parent.handle;", "-\tint hHeap = OS.GetProcessHeap ();", "-\tMENUITEMINFO info = new MENUITEMINFO ();", "-\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\tinfo.fMask = OS.MIIM_BITMAP;", "-\tif (image != null) info.hbmpItem = OS.HBMMENU_CALLBACK;", "-\tboolean success = OS.SetMenuItemInfo (hMenu, id, false, info);", "-\t*/", "-\t/*", "-\t* This code is intentionally commented.", "-\t*/", "-//\tif (!success) error (SWT.ERROR_CANNOT_SET_TEXT);"]}], "num": 10920}