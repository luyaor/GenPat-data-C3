{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e702a875d5b575aeb7b6ba08aa191f5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c132f2b3bda37c9b905e50048577c42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "df8e7f7972859e045c2ee73febc9567bd0eb2f72", "commitAfterChange": "0e2e57b04fef2790b9f31b4137bc636948b86834", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["+\tint iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\tOS.gtk_tree_model_get_iter (parent.modelHandle, iter, path);", "+\tOS.gtk_tree_view_column_cell_set_cell_data (column, parent.modelHandle, iter, false, false);", "+\tOS.g_free (iter);", "-\tint [] w = new int[1], h = new int[1];", "-\tOS.gtk_cell_renderer_get_size (pixbufRenderer, parentHandle, null, null, null, w, h);", "+\t/*", "+\t* The OS call gtk_cell_renderer_get_size provides the width of image to be drawn", "+\t* by the cell renderer.  If there is no image in the cell, the width is zero.  If the table contains", "+\t* images of varying widths, gtk_cell_renderer_get_size will return the width of the image, ", "+\t* not the width of the area in which the image is drawn.", "+\t* New API was added in GTK 2.1.3 for determining the full width of the renderer area.", "+\t* For earlier versions of GTK, the result is only correct if all rows have images of the same", "+\t* width.", "+\t*/", "+\tint [] w = new int[1];", "+\tif (OS.gtk_major_version () * 100 + OS.gtk_minor_version ()  * 10 + OS.gtk_micro_version () < 213) {", "+\t\tOS.gtk_cell_renderer_get_size (pixbufRenderer, parentHandle, null, null, null, w, null);", "+\t} else {", "+\t\tOS.gtk_tree_view_column_cell_get_position(column, pixbufRenderer, null, w);", "+\t}", "-\treturn new Rectangle (rect.x, rect.y + headerHeight, w [0], h [0]);", "+\treturn new Rectangle (rect.x, rect.y + headerHeight, w [0], rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "332a703ac5a62b3aa3d187808a61e877", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "70202c997ed9e40f4065530ff851a79135b06937", "commitAfterChange": "6fa4e7ae92ac0e181f52b7ea81d50f714de9c627", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Rectangle getBounds (int index)", "signatureAfterChange": " public Rectangle getBounds (int index)", "diff": ["-\tint headerHeight = parent.getHeaderHeight ();", "-\treturn new Rectangle (rect.x, rect.y + headerHeight, rect.width, rect.height);", "+\tif (index == 0 && (parent.style & SWT.CHECK) != 0) {", "+\t\tif (OS.gtk_major_version () * 100 + OS.gtk_minor_version ()  * 10 + OS.gtk_micro_version () >= 213) {", "+\t\t\tint [] x = new int [1], w = new int [1];", "+\t\t\tOS.gtk_tree_view_column_cell_get_position (column, parent.checkRenderer, x, w);", "+\t\t\trect.x += x [0] + w [0];", "+\t\t\trect.width -= x [0] + w [0];", "+\t\t}", "+\t}", "+\treturn new Rectangle (rect.x, rect.y, rect.width, rect.height);"]}], "num": 17013}