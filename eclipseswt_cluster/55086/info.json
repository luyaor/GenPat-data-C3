{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "316e4ccaab5a3b9989e627093cb45150", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292a9927d35ad08422696e87502f2fe5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9213cc7759276dfbb4dc068628f524b49e86b501", "commitAfterChange": "68636a56d8d850b4f73d1c0b16c1b71a8e851ba7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int calculateWidth (int [] ids, GC gc, boolean recurse)", "signatureAfterChange": "  int calculateWidth (int [] ids, GC gc, boolean recurse, int level, int levelIndent)", "diff": ["-int calculateWidth (int [] ids, GC gc, boolean recurse) {", "+int calculateWidth (int [] ids, GC gc, boolean recurse, int level, int levelIndent) {", "-\t\t\twidth = Math.max (width, item.calculateWidth (0, gc));", "+\t\t\tint itemWidth = item.calculateWidth (0, gc);", "+\t\t\titemWidth += level * levelIndent;", "+\t\t\twidth = Math.max (width, itemWidth);", "-\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc, recurse));", "+\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc, recurse, level + 1, levelIndent));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f87fc8d47877118cedf6dfe72371d05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void fixScrollBar ()", "signatureAfterChange": "  void _addListener (int eventType, Listener listener)", "diff": ["+", "+void _addListener (int eventType, Listener listener) {", "+\tsuper._addListener (eventType, listener);", "+\tclearCachedWidth (items);", "-", "-void fixScrollBar () {", "-\t/*", "-\t* Bug in the Macintosh. For some reason, the data browser does not update", "-\t* the vertical scrollbar when it is scrolled to the bottom and items are", "-\t* removed.  The fix is to check if the scrollbar value is bigger the", "-\t* maximum number of visible items and clamp it when needed.", "-\t*/", "-//\tint [] top = new int [1], left = new int [1];", "-//\tOS.GetDataBrowserScrollPosition (handle, top, left);", "-//\tint maximum = Math.max (0, getItemHeight () * visibleCount - getClientArea ().height);", "-//\tif (top [0] > maximum) {", "-//\t\tOS.SetDataBrowserScrollPosition (handle, maximum, left [0]);", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "761ec949c377f55a10352b94a5ef7d0a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "c9c643d21e61ec4cb3acaed072c41b89534da8c5", "commitAfterChange": "d4fac2cb1ae081d4b3233c327860ed203d6f68ad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void updateBar ()", "signatureAfterChange": "  void configureBar (int selection, int minimum, int maximum)", "diff": ["+void configureBar (int selection, int minimum, int maximum) {", "+\tOS.gtk_progress_configure (handle, selection, minimum, maximum);", "+\t/*", "+\t* Feature in GTK.  The progress bar does", "+\t* not redraw right away when a value is", "+\t* changed.  This is not strictly incorrect", "+\t* but unexpected.  The fix is to force all", "+\t* outstanding redraws to be delivered.", "+\t*/", "+\tOS.gdk_flush ();", "+\tint window = paintWindow ();", "+\tOS.gdk_window_process_updates (window, false);", "+}", "-void updateBar () {", "-\tOS.gdk_flush ();", "-\tint window = paintWindow ();", "-\tOS.gdk_window_process_updates (window, false);", "-}"]}], "num": 55086}