{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85ce5ef3e88d1e8284da36e786f8bc5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bda01109f7e8af46e2892951d7f36c21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d2bbdbf77f60414705a05f7799e5639df2e63aaa", "commitAfterChange": "a2aa8eba193f7b125d0248db8150ed4496a541f1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " void makeDescendentsAvailable (TreeItem item)", "signatureAfterChange": " void makeDescendentsAvailable (TreeItem item, TreeItem[] descendents)", "diff": ["-void makeDescendentsAvailable (TreeItem item) {", "+void makeDescendentsAvailable (TreeItem item, TreeItem[] descendents) {", "-\tTreeItem[] availableDescendents = item.computeAvailableDescendents ();", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + availableDescendents.length - 1];", "+\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + descendents.length - 1];", "-\tSystem.arraycopy (availableDescendents, 0, newAvailableItems, itemAvailableIndex, availableDescendents.length);", "+\tSystem.arraycopy (descendents, 0, newAvailableItems, itemAvailableIndex, descendents.length);", "-\t\titemAvailableIndex + availableDescendents.length,", "+\t\titemAvailableIndex + descendents.length,", "-\tfor (int i = 1; i < availableDescendents.length; i++) {", "-\t\tRectangle bounds = availableDescendents [i].getBounds ();", "+\tfor (int i = 1; i < descendents.length; i++) {", "+\t\tRectangle bounds = descendents [i].getBounds ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c36841995fe1c5efcf2307596c54b8a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d73f8f0bcf60169fe33b6dbd2d883c2f48f8638f", "commitAfterChange": "5ce9e32287c36f4649c3c726d93f7ff6e2af5bd1", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " void makeAvailable (TreeItem item)", "signatureAfterChange": " void makeAvailable (TreeItem item)", "diff": ["-\tTreeItem[] itemsToInsert = item.computeAvailableDescendents ();", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + itemsToInsert.length];", "+\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + 1];", "-\tSystem.arraycopy (itemsToInsert, 0, newAvailableItems, index, itemsToInsert.length);", "-\tSystem.arraycopy (availableItems, index, newAvailableItems, index + itemsToInsert.length, availableItems.length - index);", "+\tnewAvailableItems [index] = item;", "+\tSystem.arraycopy (availableItems, index, newAvailableItems, index + 1, availableItems.length - index);", "-\tupdateVerticalBar ();", "-\tint rightX = 0;", "-\tfor (int i = 0; i < itemsToInsert.length; i++) {", "-\t\tRectangle bounds = itemsToInsert [i].getBounds ();", "-\t\trightX = Math.max (rightX, bounds.x + bounds.width);", "-\t}", "-\tupdateHorizontalBar (rightX, rightX);"]}], "num": 59021}