{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5a16ae0c65b52ecab39fd97c34f7eef", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2564102c0a709707e68f2df4c98e74a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bd64112265c2a125577ef5db8ecfbdb762c0aeab", "commitAfterChange": "9b08189f8ee7e189cc76f5fea12f3ad05eb7e51b", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public LineAttributes getLineAttributes()", "signatureAfterChange": " public LineAttributes getLineAttributes()", "diff": ["-\t//TODO", "-\treturn null;", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tfloat[] dashes = null;", "+\tif (data.lineDashes != null) {", "+\t\tdashes = new float[data.lineDashes.length];", "+\t\tSystem.arraycopy(data.lineDashes, 0, dashes, 0, dashes.length);", "+\t}", "+\treturn new LineAttributes(data.lineWidth, data.lineCap, data.lineJoin, data.lineStyle, dashes, data.lineDashesOffset, data.lineMiterLimit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dd2685c2454445d9746852ace7975d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "0ef9617c1012a47a6d1ff1554f6abcb04cfa36ad", "commitAfterChange": "26cde76ce3c88c1f3b47c43e3bb62261f679e704", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DropTarget(Control control, int style)", "signatureAfterChange": " public DropTarget(Control control, int style)", "diff": ["-\tif (control.getData(DROPTARGETID) != null)", "+\tif (DragTrackingHandler == null || DragTrackingHandler == null) {", "+\t}", "+\tif (control.getData(DROPTARGETID) != null) {", "+\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);", "+\t}", "-\t\t\tif (time >= dragOverStart) {", "-\t\t\t\t", "+\t\t\tif (time < dragOverStart) {", "+\t\t\t\tdelay = (int)(dragOverStart - time);", "+\t\t\t} else {\t", "-\t\t\t\t", "+\t\t\t\t//pass a copy of data types in to listeners in case application modifies it", "+\t\t\t\tTransferData[] dataTypes = new TransferData[allowedTypes.length];", "+\t\t\t\tSystem.arraycopy(allowedTypes, 0, dataTypes, 0, dataTypes.length);", "+\t", "-\t\t\t\tevent.widget = DropTarget.this.control;", "-\t\t\t\tevent.time = (int)time;", "+\t\t\t\tevent.widget = dragOverEvent.widget;", "+\t\t\t\tevent.time = (int)time;", "-\t\t\t\tevent.dataTypes  = allowedTypes;", "-\t\t\t\tevent.dataType  = selectedDataType;", "-\t\t\t\tevent.operations = allowedOperations;", "+\t\t\t\tevent.dataTypes = dataTypes;", "+\t\t\t\tevent.dataType = selectedDataType;", "+\t\t\t\tevent.operations = dragOverEvent.operations;", "-\t\t\t\tnotifyListeners(DND.DragOver, event);", "+\t\t\t\t", "+\t\t\t\ttry {", "+\t\t\t\t\tnotifyListeners(DND.DragOver, event);", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\tevent.dataType = null;", "+\t\t\t\t\tevent.detail  = DND.DROP_NONE;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t", "-\t\t\t", "+", "-\t\t\t} else {", "-\t\t\t\tdelay = (int)(dragOverStart - time);"]}], "num": 15781}