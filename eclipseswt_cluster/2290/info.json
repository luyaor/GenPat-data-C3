{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "183aaa5499c5957252999a733c38b0ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266a52037c8cbfa9c82adb367034df32", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Shell.java", "commitBeforeChange": "a81a2af33f76afc777dc2a821ad7e85370bea06d", "commitAfterChange": "61a23c6bad00d757114d1634ae3a1348f07fbfd3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void test_setActive()", "signatureAfterChange": "  public void test_setActive()", "diff": ["+\t/* Create shell2 and make it active. */", "+\tShell shell2 = new Shell();", "+\tshell2.open();", "+\t", "+\t/* Test setActive for visible shell. */", "-\tassertTrue(\":a:\", shell.getDisplay().getActiveShell() == shell);", "+\tassertTrue(\"visible shell was not made active\", shell.getDisplay().getActiveShell() == shell);", "+\t", "+\t/* Test setActive for visible dialog shell. */", "+\tshell2.setActive();", "+\ttestShell.setVisible(true);", "+\ttestShell.setActive();", "+\tassertTrue(\"visible dialog shell was not made active\", testShell.getDisplay().getActiveShell() == testShell);", "+\t", "+\t/* Test setActive for non-visible shell. */", "+\tshell2.setActive();", "+\tshell.setVisible(false);", "+\tshell.setActive();", "+\tassertTrue(\"non-visible shell was made active\", shell.getDisplay().getActiveShell() != shell);", "+", "+\t/* Test setActive for non-visible dialog shell. */", "+\tshell2.setActive();", "+\ttestShell.setVisible(false);", "+\ttestShell.setActive();", "+\tassertTrue(\"non-visible dialog shell was made active\", testShell.getDisplay().getActiveShell() != testShell);", "+\t", "+\tshell2.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1dfbd1511a95690989146ffb17082e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ce6ffa9bbf872ed64da5998839a0850365e61d3d", "commitAfterChange": "018eac6a3a5980f982287c3ed55aace366b17909", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 88, "signatureBeforeChange": "  void updateShells ()", "signatureAfterChange": "  void updateShells ()", "diff": ["-\tShell [] shells = getShells ();", "-\tfor (int i=0; i<shells.length; i++) {", "+\tShell[] shells = getShells ();", "+\tfor (int i = 0; i < shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (shell.isUndecorated ()) {", "-\t\t\tupdate = true;", "-\t\t} else {", "-\t\t\tdo {", "-\t\t\t\tshell = (Shell) shell.getParent ();", "-\t\t\t} while (shell != null && shell != this && !shell.isUndecorated ());", "-\t\t\tif (shell != null && shell != this) update = true;", "+\t\tShell shell = shells[i];", "+\t\twhile (shell != null && shell != this && !shell.isUndecorated ()) {", "+\t\t\tshell = (Shell) shell.getParent ();", "+\t\tif (shell != null && shell != this) update = true;", "-\t\t\t\tOS.gtk_widget_hide (shells [i].shellHandle);", "-\t\t\t} else if (showWithParent) {", "-\t\t\t\tOS.gtk_widget_show (shells [i].shellHandle);", "+\t\t\t\tif (shells[i].isVisible ()) {", "+\t\t\t\t\tshells[i].showWithParent = true;", "+\t\t\t\t\tOS.gtk_widget_hide(shells[i].shellHandle);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (shells[i].showWithParent) {", "+\t\t\t\t\tshells[i].showWithParent = false;", "+\t\t\t\t\tOS.gtk_widget_show(shells[i].shellHandle);", "+\t\t\t\t}", "-\tshowWithParent = minimized;"]}], "num": 2290}