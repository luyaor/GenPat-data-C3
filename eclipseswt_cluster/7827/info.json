{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "603467550ff0ca8fa30b9f0e9f0454d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a01b889aa5c8b945ad2f520897abfc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28fa68d6ba14a61b0a5ff4a38499eb3d2c0ae70f", "commitAfterChange": "ab04bfe3c82ede49bd463efb217e07084fb7d820", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 102, "signatureBeforeChange": "  int kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "diff": ["-\tif (accessible != null) {", "-\t\treturn accessible.internal_kEventAccessibleGetAllAttributeNames (nextHandler, theEvent, userData);", "+\tint code = OS.eventNotHandledErr;", "+\tString [] attributes = getAxAttributes ();", "+\tif (attributes != null) {", "+\t\tOS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tnextHandler = 0;", "+\t\tint [] arrayRef = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamAccessibleAttributeNames, OS.typeCFMutableArrayRef, null, 4, null, arrayRef);", "+\t\tint attributesArrayRef = arrayRef [0];", "+\t\tint length = OS.CFArrayGetCount (attributesArrayRef);", "+\t\tString[] osAttributes = new String [length];", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tint stringRef = OS.CFArrayGetValueAtIndex (attributesArrayRef, i);", "+\t\t\tint strLength = OS.CFStringGetLength (stringRef);", "+\t\t\tchar [] buffer = new char [strLength];", "+\t\t\tCFRange range = new CFRange ();", "+\t\t\trange.length = strLength;", "+\t\t\tOS.CFStringGetCharacters (stringRef, range, buffer);", "+\t\t\tosAttributes [i] = new String (buffer);", "+\t\t}", "+\t\tfor (int i = 0; i < attributes.length; i++) {", "+\t\t\tif (!contains (osAttributes, attributes [i])) {", "+\t\t\t\tString string = attributes [i];", "+\t\t\t\tchar [] buffer = new char [string.length ()];", "+\t\t\t\tstring.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\tint stringRef = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\t\t\tOS.CFArrayAppendValue (attributesArrayRef, stringRef);", "+\t\t\t\tOS.CFRelease (stringRef);", "+\t\t\t}", "+\t\t}", "+\t\tcode = OS.noErr;", "-\treturn OS.eventNotHandledErr;", "+\tif (accessible != null) {", "+\t\tcode = accessible.internal_kEventAccessibleGetAllAttributeNames (nextHandler, theEvent, userData);", "+\t}", "+\treturn code;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13fe6b483cbabf6c1f973397c54d289", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "28fa68d6ba14a61b0a5ff4a38499eb3d2c0ae70f", "commitAfterChange": "ab04bfe3c82ede49bd463efb217e07084fb7d820", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "  int kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "-\tint stringArrayRef = 0;", "-\tif (code != OS.noErr) {", "-\t\tint [] arrayRef = new int[1];", "+\tint code = OS.eventNotHandledErr;", "+\tString [] attributes = getAxAttributes ();", "+\tif (attributes != null) {", "+\t\tOS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tnextHandler = 0;", "+\t\tint [] arrayRef = new int [1];", "-\t\tstringArrayRef = arrayRef[0];", "+\t\tint attributesArrayRef = arrayRef [0];", "+\t\tint length = OS.CFArrayGetCount (attributesArrayRef);", "+\t\tString[] osAttributes = new String [length];", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tint stringRef = OS.CFArrayGetValueAtIndex (attributesArrayRef, i);", "+\t\t\tint strLength = OS.CFStringGetLength (stringRef);", "+\t\t\tchar [] buffer = new char [strLength];", "+\t\t\tCFRange range = new CFRange ();", "+\t\t\trange.length = strLength;", "+\t\t\tOS.CFStringGetCharacters (stringRef, range, buffer);", "+\t\t\tosAttributes [i] = new String (buffer);", "+\t\t}", "+\t\tfor (int i = 0; i < attributes.length; i++) {", "+\t\t\tif (!contains (osAttributes, attributes [i])) {", "+\t\t\t\tString string = attributes [i];", "+\t\t\t\tchar [] buffer = new char [string.length ()];", "+\t\t\t\tstring.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\tint stringRef = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\t\t\tOS.CFArrayAppendValue (attributesArrayRef, stringRef);", "+\t\t\t\tOS.CFRelease (stringRef);", "+\t\t\t}", "+\t\t}", "+\t\tcode = OS.noErr;", "-\tif (stringArrayRef == 0) {", "-\t\tstringArrayRef = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\tif (parent.accessible != null) {", "+\t\tcode = parent.accessible.internal_kEventAccessibleGetAllAttributeNames (nextHandler, theEvent, userData);", "-\tString string = OS.kAXValueAttribute;", "-\tchar [] buffer = new char [string.length ()];", "-\tstring.getChars (0, buffer.length, buffer, 0);", "-\tint stringRef = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-\tOS.CFArrayAppendValue(stringArrayRef, stringRef);", "-\tOS.CFRelease(stringRef);", "-\treturn OS.noErr;", "+\treturn code;"]}], "num": 7827}