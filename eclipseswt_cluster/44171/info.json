{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c2923621933718e69aac841b3faec76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f673ae62c8cc171a0f480838c8162627", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "2e7509be8287977239a5a242476f860e6d010643", "commitAfterChange": "3b350dd4c4b9460951698e03648662ba16994245", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tvoid updateChildren ()", "signatureAfterChange": "  \tvoid updateChildren ()", "diff": ["-\t\t\tHashtable childrenCopy = (Hashtable)children.clone ();", "+\t\t\tVector idsToKeep = new Vector (children.size ());", "-\t\t\t\t\tchildrenCopy.remove (new Integer (object.handle));", "+\t\t\t\t\tidsToKeep.addElement (new Integer (object.handle));", "-\t\t\t\t\t\tchildrenCopy.remove (new Integer (object.handle));", "+\t\t\t\t\t\tidsToKeep.addElement (new Integer (object.handle));", "-\t\t\t// remove previous children of self which were not answered", "-\t\t\tEnumeration childrenToRemove = childrenCopy.elements ();", "-\t\t\twhile (childrenToRemove.hasMoreElements ()) {", "-\t\t\t\tAccessibleObject object = (AccessibleObject) childrenToRemove.nextElement (); ", "-\t\t\t\tremoveChild (object, true);", "+\t\t\t// remove old children that were not provided as children anymore", "+\t\t\tEnumeration ids = children.keys ();", "+\t\t\twhile (ids.hasMoreElements ()) {", "+\t\t\t\tInteger id = (Integer)ids.nextElement ();", "+\t\t\t\tif (!idsToKeep.contains (id)) {", "+\t\t\t\t\tAccessibleObject object = (AccessibleObject) children.get (id);", "+\t\t\t\t\tremoveChild (object, true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "933e4989226ef6a348e03e9e2f52d27a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "4698b1a8e90d7903310c173dd81e7b9eaf10eb2b", "commitAfterChange": "67bbaee6bdf049cd4141a176bf5541d2c7ebd816", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tvoid dispose ()", "signatureAfterChange": "  \tvoid release ()", "diff": ["-\tvoid dispose () {", "-\t\tif (DEBUG) System.out.println(\"AccessibleObject.dispose: \" + handle);", "-\t\taccessible = null;", "-\t\tEnumeration elements = children.elements ();", "-\t\twhile (elements.hasMoreElements ()) {", "-\t\t\tAccessibleObject child = (AccessibleObject) elements.nextElement ();", "-\t\t\tif (child.isLightweight) OS.g_object_unref (child.handle);", "-\t\t}", "-\t\tif (parent != null) parent.removeChild (this, false);", "-\t}", "+\tvoid release () {", "+\t\tif (DEBUG) System.out.println(\"AccessibleObject.release: \" + handle);", "+\t\taccessible = null;", "+\t\tEnumeration elements = children.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tAccessibleObject child = (AccessibleObject) elements.nextElement ();", "+\t\t\tif (child.isLightweight) OS.g_object_unref (child.handle);", "+\t\t}", "+\t\tif (parent != null) parent.removeChild (this, false);", "+\t}"]}], "num": 44171}