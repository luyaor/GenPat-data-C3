{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52627575d41ddc5608bb78a4c49b4e2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f768c33aab10855fe7c48ed9ca952d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "819094da718c6570c737d38a3e41a8a9970cd886", "commitAfterChange": "22e2cb42dd6bedfa7c3ae2b39a3d0b4bdbc30df8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void remove (int index)", "signatureAfterChange": " public void remove (int index)", "diff": ["+\tremove (index, true);", "+}", "-\tif (length != OS.GetWindowTextLength (handle)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7d29dd3e37222b92f80db1e90f1f84d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "e4e3f5ea326d5f6ec575cb787dc8e069294c0d2e", "commitAfterChange": "9777615562750d7c9ab92d6f2c3575ace0e1c242", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["-", "-\t/*", "-\t* Feature in Windows.  When a tool bar that contains", "-\t* separators is wrapped, under certain circumstances,", "-\t* Windows redraws the entire tool bar unnecessarily", "-\t* when resized and no item moves.  Whether the entire", "-\t* toolbar is damaged or not seems to depend on the size", "-\t* of the tool bar and the position of the separators.", "-\t* The fix is to ensure that the newly exposed areas are", "-\t* always damaged, and avoid the redraw when no tool item", "-\t* moves.", "-\t*/", "-\tRECT [] rects = null;", "-\tint rgn = 0, oldCount = 0;", "-\tboolean fixRedraw = drawCount == 0 &&", "-\t\t(style & SWT.WRAP) != 0 &&", "-\t\tOS.IsWindowVisible (handle) &&", "-\t\tOS.SendMessage (handle, OS.TB_GETROWS, 0, 0) != 1;", "-\tif (fixRedraw) {", "-\t\trgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tOS.GetUpdateRgn (handle, rgn, false);", "-\t\toldCount = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "-\t\trects = new RECT [oldCount];", "-\t\tfor (int i=0; i<oldCount; i++) {", "-\t\t\trects [i] = new RECT ();", "-\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, i, rects [i]);", "-\t\t}", "-\t}", "-", "-", "-\tif (fixRedraw) {", "-\t\tint newCount = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "-\t\tif (newCount == oldCount) {", "-\t\t\tint index = 0;", "-\t\t\tRECT rect = new RECT ();", "-\t\t\twhile (index < newCount) {", "-\t\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, index, rect);", "-\t\t\t\tif (!OS.EqualRect (rects [index], rect)) break;", "-\t\t\t\tindex++;", "-\t\t\t}", "-\t\t\tif (index == newCount) {", "-\t\t\t\tOS.ValidateRect (handle, null);", "-\t\t\t\tOS.InvalidateRgn (handle, rgn, false);", "-\t\t\t}", "-\t\t}", "-\t\tOS.DeleteObject (rgn);", "-\t}", "-"]}], "num": 11851}