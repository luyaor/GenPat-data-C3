{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24f8307a590e59152cf61ab5c1cc8274", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7665a8fe732a85b7d2400f90cf4d7d7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "56ca595481534d3e40de391d205c020a35b135fe", "commitAfterChange": "102752633212b3f8dcec1e2773e0b7fb6c95bed0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\tif (scrollView != null) {", "-\t\tNSSize newSize = new NSSize();", "-\t\tnewSize.height = height;", "-\t\tnewSize.width = width;", "-\t\tview.setFrameSize(newSize);", "+\tif ((state & CANVAS) != 0) { ", "+\t\tif (scrollView != null) {", "+\t\t\tNSSize newSize = new NSSize();", "+\t\t\tnewSize.height = height;", "+\t\t\tnewSize.width = width;", "+\t\t\tview.setFrameSize(newSize);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3cefe7e3804459163112eb940824846", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "27723b1e4b2ae87a193517c00ef751923d7f193b", "commitAfterChange": "5e467403f09c889574f829fcf948e58433761966", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["-\tint [] keyCode = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "-\tswitch (keyCode [0]) {", "-\t\tcase 36: /* Return */", "-\t\t\t/*", "-\t\t\t* Feature in the Macintosh.  The default behaviour when the return key is pressed is", "-\t\t\t* to select the default button.  This is not the expected behaviour for Composite and", "-\t\t\t* its subclasses.  The fix is to avoid calling the default handler.", "-\t\t\t*/", "-\t\t\treturn OS.noErr;", "+\tif ((state & CANVAS) != 0) {", "+\t\tint [] keyCode = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 36: /* Return */", "+\t\t\t\t/*", "+\t\t\t\t* Feature in the Macintosh.  The default behaviour when the return key is pressed is", "+\t\t\t\t* to select the default button.  This is not the expected behaviour for Composite and", "+\t\t\t\t* its subclasses.  The fix is to avoid calling the default handler.", "+\t\t\t\t*/", "+\t\t\t\treturn OS.noErr;", "+\t\t}"]}], "num": 422}