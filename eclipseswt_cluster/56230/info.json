{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9abb9cec1fef10666f9b37815ec748c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "838334646b9f1b82cd8259f3c0a279b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "40634514573e7f2f3f0aa3adf15533b3fe3a2345", "commitAfterChange": "c21426e4e2cbd8df706748aa3c4ebc7ac8045b30", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  LRESULT CDDS_SUBITEMPREPAINT (NMLVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_SUBITEMPREPAINT (NMLVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\t\tif (OS.GetFocus () == handle) {", "-\t\t\t\t\t\tclrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "-\t\t\t\t\t\tclrTextBk = OS.GetSysColor (OS.COLOR_HIGHLIGHT);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0) {", "-\t\t\t\t\t\t\tclrTextBk = OS.GetSysColor (OS.COLOR_3DFACE);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (clrTextBk != -1 && nmcd.iSubItem == 0) {", "-\t\t\t\t\t\tRECT itemRect = new RECT ();", "-\t\t\t\t\t\titemRect.left = OS.LVIR_SELECTBOUNDS;", "-\t\t\t\t\t\tignoreCustomDraw = true;", "-\t\t\t\t\t\tresult = OS.SendMessage (handle, OS. LVM_GETITEMRECT, nmcd.dwItemSpec, itemRect);", "-\t\t\t\t\t\tignoreCustomDraw = false;", "-\t\t\t\t\t\tif (result != 0) {", "-\t\t\t\t\t\t\tRECT headerRect = new RECT ();", "-\t\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, 0, headerRect) != 0) {", "-\t\t\t\t\t\t\t\tOS.MapWindowPoints (hwndHeader, handle, headerRect, 2);", "-\t\t\t\t\t\t\t\titemRect.left = itemRect.right;", "-\t\t\t\t\t\t\t\titemRect.right = headerRect.right;", "-\t\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, itemRect);", "+\t\t\t\t\tint clrSelection = -1;", "+\t\t\t\t\tif (nmcd.iSubItem == 0) {", "+\t\t\t\t\t\tif (OS.GetFocus () == handle) {", "+\t\t\t\t\t\t\tclrSelection = OS.GetSysColor (OS.COLOR_HIGHLIGHT);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0) {", "+\t\t\t\t\t\t\t\tclrSelection = OS.GetSysColor (OS.COLOR_3DFACE);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (OS.GetFocus () == handle) {", "+\t\t\t\t\t\t\tclrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\t\t\t\tclrTextBk = clrSelection = OS.GetSysColor (OS.COLOR_HIGHLIGHT);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0) {", "+\t\t\t\t\t\t\t\tclrTextBk = clrSelection = OS.GetSysColor (OS.COLOR_3DFACE);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (clrSelection != -1) {", "+\t\t\t\t\t\tRECT rect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, nmcd.iSubItem != 0, true, false, hDC);", "+\t\t\t\t\t\tfillBackground (hDC, clrSelection, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c13f23d2f6c8d9c80f81e8c88731a52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "946b729480e0eca3855e231d6e1284c6c94d4249", "commitAfterChange": "146863a428357a6ad301d008e77ac45a2f64c626", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "-\t\tboolean isHidden = rect.y == 0 && rect.height == 0;", "+\t\tGdkRectangle cellRect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\t\tboolean isHidden = cellRect.y == 0 && cellRect.height == 0;", "+\t\tint [] tx = new int [1], ty = new int [1];", "+\t\tOS.gtk_tree_view_widget_to_tree_coords (handle, cellRect.x, cellRect.y, tx, ty);", "+\t\tGdkRectangle visibleRect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\t\t\tint [] tx = new int [1], ty = new int [1];", "-\t\t\tOS.gtk_tree_view_widget_to_tree_coords (handle, rect.x, rect.y, tx, ty);", "-\t\t\trect.y = ty[0];", "-\t\t\tGdkRectangle visRect = new GdkRectangle ();", "-\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visRect);", "-\t\t\tif (rect.y < visRect.y || rect.y + rect.height > visRect.y + visRect.height) {", "+\t\t\tif (ty[0] < visibleRect.y || ty[0] + cellRect.height > visibleRect.y + visibleRect.height) {", "-\t\t\t\tOS.gtk_widget_realize (handle);", "-\t\t\t\tGdkRectangle cellRect = new GdkRectangle ();", "-\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "-\t\t\t\tGdkRectangle visibleRect = new GdkRectangle ();", "-\t\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "-\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "-\t\t\t\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "-\t\t\t\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "-\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t\t\t\tif (ty[0] < visibleRect.y ) {", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "+\t\t\t\t} else {", "+\t\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "+\t\t\t\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "+\t\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0] + cellRect.height - visibleRect.height);", "+\t\t\t\t\t}"]}], "num": 56230}