{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42b86cc3a17005db59ac1df6de200cf0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4997a28d06498b49bb3068873b60961a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MessageBox.java", "commitBeforeChange": "4cda2906245932c3af06926d23230e8786beff56", "commitAfterChange": "07f034a353c9ee532abe7fa95cef8c509291595d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int open ()", "signatureAfterChange": " public int open ()", "diff": ["-\t* same as MB_APPLMODAL.  The fix is to force the parent", "-\t* to be NULL when this style is set.", "+\t* same as MB_APPLMODAL.  The fix to set the parent HWND", "+\t* anyway and not rely on MB_MODAL to work by making the", "+\t* parent be temporarily modal. ", "-\tint hwndOwner = 0;", "-\tif (parent != null && (bits & OS.MB_TASKMODAL) == 0) {", "-\t\thwndOwner = parent.handle;", "+\tint hwndOwner = parent != null ? parent.handle : 0;", "+\tShell oldModal = null;", "+\tDisplay display = null;", "+\tif ((bits & OS.MB_TASKMODAL) != 0) {", "+\t\tdisplay = parent.getDisplay ();", "+\t\toldModal = display.getModalDialogShell ();", "+\t\tdisplay.setModalDialogShell (parent);", "+\t/* Clear the temporarily dialog modal parent */", "+\tif ((bits & OS.MB_TASKMODAL) != 0) {", "+\t\tdisplay.setModalDialogShell (oldModal);", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52493babc43ae2e4d246c49cde02e8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "46392830ad16c4d905392ed9777235d3d36b8b61", "commitAfterChange": "fe69c2ce9bfa3d04e0768e32d6c59e2eab9b3453", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 86, "signatureBeforeChange": "  void setWindowVisible (boolean visible)", "signatureAfterChange": "  void setWindowVisible (boolean visible)", "diff": ["+\t\t/*", "+\t\t* Bug in the Macintosh.  ShowWindow() does not activate the shell when an ON_TOP", "+\t\t* shell is active. The fix is to detect that the shell was not activated and", "+\t\t* activate it.", "+\t\t*/", "+\t\tShell activeShell = null;", "+\t\tif ((style & SWT.ON_TOP) == 0) {", "+\t\t\tactiveShell = display.getActiveShell ();", "+\t\t}", "+\t\t} else {", "+\t\t\tif (activeShell != null && activeShell == display.getActiveShell () && (activeShell.style & SWT.ON_TOP) != 0) {", "+\t\t\t\tbringToTop (false);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e0e3c871e05cdb11c49c27d00fd03b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "32debd3b792f6dea3cbde01bcd2ea792207752aa", "commitAfterChange": "9b0ccc5ced24e16f6b8b75ef174d7898cf5deb38", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t/*", "+\t* Feature in GTK, GtkCheckButton and GtkRadioButton allocate", "+\t* only the minimum size necessary for its child. This causes the child", "+\t* alignment to fail. The fix is to set the child size to the size", "+\t* of the button.", "+\t*/", "+\tint width = OS.GTK_WIDGET_WIDTH (handle);", "+\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tOS.gtk_widget_set_size_request (boxHandle, -1, -1);", "+\t}", "+\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tOS.gtk_widget_set_size_request (boxHandle, width, -1);", "+\t}"]}], "num": 15527}