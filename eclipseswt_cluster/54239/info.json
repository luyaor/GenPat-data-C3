{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94e643ff91fbd834954ea3d4ea2c76fa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcbb7a29ac44a319a45c1e6433e2c9a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "c7b8a47b4f881fe023685c003812d64dd2d51c15", "commitAfterChange": "1b9976550b7657aeb02ff183aeee4687e9c1685e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "-\tint itemHeight = OS.SendMessage (handle, OS.LB_GETITEMHEIGHT, 0, 0);", "-\tint width = 0, height = count * itemHeight;", "-\tif ((style & SWT.H_SCROLL) != 0) {", "-\t\twidth = OS.SendMessage (handle, OS.LB_GETHORIZONTALEXTENT, 0, 0);", "-\t} else {", "-\t\tint newFont, oldFont = 0;", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\t\tRECT rect = new RECT ();", "-\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;", "-\t\tint cp = getCodePage ();", "-\t\tTCHAR buffer = new TCHAR (cp, 64 + 1);", "-\t\tfor (int i=0; i<count; i++) {", "-\t\t\tint length = OS.SendMessage (handle, OS.LB_GETTEXTLEN, i, 0);", "-\t\t\tif (length != OS.LB_ERR) {", "-\t\t\t\tif (length + 1 > buffer.length ()) {", "-\t\t\t\t\tbuffer = new TCHAR (cp, length + 1);", "+\tint width = 0, height = 0;", "+\tif (wHint == SWT.DEFAULT) {", "+\t\tif ((style & SWT.H_SCROLL) != 0) {", "+\t\t\twidth = OS.SendMessage (handle, OS.LB_GETHORIZONTALEXTENT, 0, 0);", "+\t\t} else {", "+\t\t\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "+\t\t\tint newFont, oldFont = 0;", "+\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;", "+\t\t\tint cp = getCodePage ();", "+\t\t\tTCHAR buffer = new TCHAR (cp, 64 + 1);", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tint length = OS.SendMessage (handle, OS.LB_GETTEXTLEN, i, 0);", "+\t\t\t\tif (length != OS.LB_ERR) {", "+\t\t\t\t\tif (length + 1 > buffer.length ()) {", "+\t\t\t\t\t\tbuffer = new TCHAR (cp, length + 1);", "+\t\t\t\t\t}", "+\t\t\t\t\tint result = OS.SendMessage (handle, OS.LB_GETTEXT, i, buffer);", "+\t\t\t\t\tif (result != OS.LB_ERR) {", "+\t\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\t\t\t\t}", "-\t\t\t\tint result = OS.SendMessage (handle, OS.LB_GETTEXT, i, buffer);", "-\t\t\t\tif (result != OS.LB_ERR) {", "-\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}\t", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t}\t", "+\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t}", "+\t}", "+\tif (hHint == SWT.DEFAULT) {", "+\t\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "+\t\tint itemHeight = OS.SendMessage (handle, OS.LB_GETITEMHEIGHT, 0, 0);", "+\t \theight = count * itemHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79037de73800270834ae89a15a3a2983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "d1b62f67e6198f629fa2f6b243b4b3c279397a30", "commitAfterChange": "678527ffefbe64dffee7b04e05293b36ab0a837c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC)", "signatureAfterChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC)", "diff": ["-\t\tif (hDC != 0 && parent.explorerTheme) {", "+\t\tif (parent.explorerTheme) {", "-\t\t\tint code = OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect);", "+\t\t\tint code = OS.SendMessage (hwnd, OS. LVM_GETITEMRECT, row, rect);", "-\t\t\t\tRECT textRect = new RECT ();", "-\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, false);", "-\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "-\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), textRect, flags);", "+\t\t\t\tint width = 0;", "+\t\t\t\tint hFont = cellFont != null ? cellFont [column] : -1;", "+\t\t\t\tif (hFont == -1) hFont = font;", "+\t\t\t\tif (hFont == -1 && hDC == 0) {", "+\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, true);", "+\t\t\t\t\twidth = OS.SendMessage (hwnd, OS.LVM_GETSTRINGWIDTH, 0, buffer);", "+\t\t\t\t} else {", "+\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, false);", "+\t\t\t\t\tint textDC = hDC != 0 ? hDC : OS.GetDC (hwnd), oldFont = -1;", "+\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\t\toldFont = OS.SelectObject (textDC, hFont);", "+\t\t\t\t\t}", "+\t\t\t\t\tRECT textRect = new RECT ();", "+\t\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "+\t\t\t\t\tOS.DrawText (textDC, buffer, buffer.length (), textRect, flags);", "+\t\t\t\t\twidth = textRect.right - textRect.left;", "+\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\tif (oldFont != -1) OS.SelectObject (textDC, oldFont);", "+\t\t\t\t\t\tOS.ReleaseDC (hwnd, textDC);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\trect.right += textRect.right - textRect.left + Table.INSET * 3 + 1;", "+\t\t\t\trect.right += width + Table.INSET * 2;", "-\t\t\tif (getText && getImage) {", "+\t\t\tif (getText) {", "+\t\t\t\tparent.ignoreCustomDraw = true;", "+\t\t\t\tint code = OS.SendMessage (hwnd, OS.LVM_GETITEMRECT, row, rect);", "+\t\t\t\tparent.ignoreCustomDraw = false;", "+\t\t\t\tif (code == 0) return new RECT ();", "+\t\t\t\tif (!getImage) {", "+\t\t\t\t\tRECT iconRect = new RECT ();", "+\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "+\t\t\t\t\tparent.ignoreCustomDraw = true;", "+\t\t\t\t\tcode = OS.SendMessage (hwnd, OS. LVM_GETITEMRECT, row, iconRect);", "+\t\t\t\t\tparent.ignoreCustomDraw = false;", "+\t\t\t\t\tif (code != 0) rect.left = iconRect.right;", "+\t\t\t\t}", "-\t\t\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\t\t\trect.left = OS.LVIR_ICON;", "+\t\t\t\tparent.ignoreCustomDraw = true;", "+\t\t\t\tint code = OS.SendMessage (hwnd, OS.LVM_GETITEMRECT, row, rect);", "+\t\t\t\tparent.ignoreCustomDraw = false;", "+\t\t\t\tif (code == 0) return new RECT ();", "-\t\t\tparent.ignoreCustomDraw = true;", "-\t\t\tint code = OS.SendMessage (hwnd, OS.LVM_GETITEMRECT, row, rect);", "-\t\t\tparent.ignoreCustomDraw = false;", "-\t\t\tif (code == 0) return new RECT ();", "-\t\t\t* Bug in Windows.  Despite the fact that the documenation states", "+\t\t\t* Bug in Windows.  Despite the fact that the documentation states"]}], "num": 54239}