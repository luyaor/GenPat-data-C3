{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7b325a8a5d4ba4e58b1fa7b3f81eafac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0ac40bb7ec97621dfe8d697f7b42cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9fe22630372ea72bd403baac373eb8df3cc0e053", "commitAfterChange": "373614e5da821c03a73fa3a11c8e5d2cd2e624e4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r void manageChildren ()", "signatureAfterChange": "\r void manageChildren ()", "diff": ["-\tboolean fixFocus = false;\r", "-\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\tif (xDisplay != 0) {\r", "-\t\t\tint [] buffer1 = new int [1], buffer2 = new int [1];\r", "-\t\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "-\t\t\tint xWindow = buffer1 [0];\r", "-\t\t\tif (xWindow != 0) {\r", "-\t\t\t\tint focusHandle = OS.XtWindowToWidget (xDisplay, xWindow);\r", "-\t\t\t\tif (focusHandle != 0) {\r", "-\t\t\t\t\tfocusHandle = OS.XmGetFocusWidget (focusHandle);\r", "-\t\t\t\t\tif (focusHandle != 0) {\r", "-\t\t\t\t\t\tint tempHandle = handle;\r", "-\t\t\t\t\t\tdo {\r", "-\t\t\t\t\t\t\tif (tempHandle == focusHandle) break;\r", "-\t\t\t\t\t\t} while ((tempHandle = OS.XtParent (tempHandle)) != 0);\r", "-\t\t\t\t\t\tfixFocus = tempHandle != 0;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\t\r", "-\tif (fixFocus) {\r", "-\tif (fixFocus) {\r", "+\tif (argList1 [1] != 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f90ed7d074c853701228eac936ffd5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "496ab79a8f803f9a98ae79d4cd7e2c65d16c76b5", "commitAfterChange": "8d17b94848accb9b845b79b8edca0016618da3a9", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r void manageChildren ()", "signatureAfterChange": "\r void manageChildren ()", "diff": ["+\t* \r", "+\t* NOTE: This code currently does not work when a\r", "+\t* sibling will take focus.\r", "+\tboolean fixFocus = false;\r", "-\tint [] argList2 = {OS.XmNtraversalOn, 0};\r", "-\tOS.XtSetValues (handle, argList2, argList2.length / 2);\r", "+\tif (argList1 [1] != 0) {\r", "+\t\tint xDisplay = OS.XtDisplay (handle);\r", "+\t\tif (xDisplay != 0) {\r", "+\t\t\tint [] buffer1 = new int [1], buffer2 = new int [1];\r", "+\t\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "+\t\t\tint xWindow = buffer1 [0];\r", "+\t\t\tif (xWindow != 0) {\r", "+\t\t\t\tint focusHandle = OS.XtWindowToWidget (xDisplay, xWindow);\r", "+\t\t\t\tif (focusHandle != 0) {\r", "+\t\t\t\t\tfocusHandle = OS.XmGetFocusWidget (focusHandle);\r", "+\t\t\t\t\tif (focusHandle != 0) {\r", "+\t\t\t\t\t\tint parentHandle = parent.handle;\r", "+\t\t\t\t\t\tdo {\r", "+\t\t\t\t\t\t\tif (parentHandle == focusHandle) break;\r", "+\t\t\t\t\t\t} while ((parentHandle = OS.XtParent (parentHandle)) != 0);\r", "+\t\t\t\t\t\tfixFocus = parentHandle != 0;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\t\r", "+\tif (fixFocus) {\r", "+\t\tint [] argList2 = {OS.XmNtraversalOn, 0};\r", "+\t\tOS.XtSetValues (handle, argList2, argList2.length / 2);\r", "+\t}\r", "-\tOS.XtSetValues (handle, argList1, argList1.length / 2);\r", "+\tif (fixFocus) {\r", "+\t\tOS.XtSetValues (handle, argList1, argList1.length / 2);\r", "+\t}\r", "+\tDisplay display = getDisplay ();\r", "+\tOS.XtOverrideTranslations (handle, display.tabTranslations);\r", "+\tOS.XtOverrideTranslations (handle, display.arrowTranslations);\r"]}], "num": 50588}