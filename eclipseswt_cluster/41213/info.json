{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "879e9e9d80a263ee32f4763d5a83309f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a81bf1bbaa797c772cf0944dfffbbb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4279ee67123996a79ea721fcd9de4d0941bad889", "commitAfterChange": "a9785553b91dc77ab23b2555d98bc4ac20e85a1b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  Point computeNativeSize (int h, int wHint, int hHint, boolean changed)", "signatureAfterChange": "  Point computeNativeSize (int h, int wHint, int hHint, boolean changed)", "diff": ["-\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\tif (wHint == SWT.DEFAULT && hHint == SWT.DEFAULT) {", "-\t\twidth = wHint == SWT.DEFAULT ? OS.GTK_WIDGET_REQUISITION_WIDTH (h) : wHint;", "-\t\theight = hHint == SWT.DEFAULT ? OS.GTK_WIDGET_REQUISITION_HEIGHT (h) : hHint;", "+\t\twidth = OS.GTK_WIDGET_REQUISITION_WIDTH (h);", "+\t\theight = OS.GTK_WIDGET_REQUISITION_HEIGHT (h);", "+\t} else if (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\tint [] reqWidth = new int [1], reqHeight = new int [1];", "+\t\tOS.gtk_widget_get_size_request (h, reqWidth, reqHeight);", "+\t\tOS.gtk_widget_set_size_request (h, wHint, hHint);", "+\t\tGtkRequisition requisition = new GtkRequisition ();", "+\t\tOS.gtk_widget_size_request (h, requisition);", "+\t\tOS.gtk_widget_set_size_request (h, reqWidth [0], reqHeight [0]);", "+\t\twidth = wHint == SWT.DEFAULT ? requisition.width : wHint;", "+\t\theight = hHint == SWT.DEFAULT ? requisition.height : hHint;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6341c515efb0e7d907fd59046571ed66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "bda1f46fe4a14e4dc3f19a61e20e3947c3441f0e", "commitAfterChange": "791cf784319e88f74022f4f85a68083e14d57e78", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tOS.gtk_widget_set_size_request (labelHandle, -1, -1);", "+\t\tOS.gtk_widget_set_size_request (labelHandle, wHint, hHint);", "-\t\t/*", "-\t\t * Temporary code.", "-\t\t * If the wHint is set, the GtkLabel will believe it has", "-\t\t * more width at its disposal than it actually does (by a few pixels).", "-\t\t * In other words, the frame width is included in the hint and", "-\t\t * it shouldn't.  It is possible (but unlikely) that this will", "-\t\t * cause the label to answer the wrong (smaller) height.", "-\t\t */", "+\t\tif (requisition.height == 0)  {", "+\t\t\trequisition.height = fontHeight (getFontDescription (), labelHandle);", "+\t\t}", "-\twidth = wHint == SWT.DEFAULT ? requisition.width : wHint;", "-\theight = hHint == SWT.DEFAULT ? requisition.height : hHint;", "-\treturn new Point (width, height);\t", "+\treturn new Point (requisition.width, requisition.height);\t"]}], "num": 41213}