{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a371d41b1aa2e45f2fa0b82520de686", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "964ad374a878ab832829c0a46461a2a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "f059eca39b2172be0b6301e4c573d020aed8a169", "commitAfterChange": "de616cb540caa204a7c99866db54d7b6909f33eb", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  int getSelectionText ()", "signatureAfterChange": "  int getSelectionText (boolean[] parseFail)", "diff": ["-int getSelectionText () {", "+int getSelectionText (boolean[] parseFail) {", "+\t\tString string = textView.stringValue().getString();", "+\t\ttry {", "+\t\t\tint value;", "+\t\t\tif (digits > 0) {", "+\t\t\t\tString decimalSeparator = textFormatter.decimalSeparator().getString();", "+\t\t\t\tint index = string.indexOf (decimalSeparator);", "+\t\t\t\tif (index != -1)  {", "+\t\t\t\t\tint startIndex = string.startsWith (\"+\") || string.startsWith (\"-\") ? 1 : 0;", "+\t\t\t\t\tString wholePart = startIndex != index ? string.substring (startIndex, index) : \"0\";", "+\t\t\t\t\tString decimalPart = string.substring (index + 1);", "+\t\t\t\t\tif (decimalPart.length () > digits) {", "+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint i = digits - decimalPart.length ();", "+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {", "+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);", "+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);", "+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;", "+\t\t\t\t\tvalue = wholeValue + decimalValue;", "+\t\t\t\t\tif (string.startsWith (\"-\")) value = -value;", "+\t\t\t\t} else {", "+\t\t\t\t\tvalue = Integer.parseInt (string);", "+\t\t\t\t\tfor (int i = 0; i < digits; i++) value *= 10;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tvalue = Integer.parseInt (string);", "+\t\t\t}", "+\t\t\tint max = getMaximum();", "+\t\t\tint min = getMinimum();", "+\t\t\tif (min <= value && value <= max) return value;", "+\t\t} catch (NumberFormatException e) {", "+\t\t}", "+\tparseFail [0] = true;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15e6a2a6f4f260586eba8ec0ff1d0ab3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "2f7b25b56baa5857ac82297b9b5ab474f4612d5a", "commitAfterChange": "b39744881f45488dd8a2f2962c5fac3d5881b16d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 35, "signatureBeforeChange": " void updateText ()", "signatureAfterChange": " void updateText ()", "diff": ["-\t\t\tOS.XmNposition, 0};\t\t/* 7 */", "+\t\t\tOS.XmNposition, 0,\t\t/* 7 */", "+\t\t\tOS.XmNdecimalPoints, 0\t/* 9 */};", "+\tint digits = argList [9];", "-\t\t\tint value = Integer.parseInt (string);\t\t\t", "+\t\t\tint value;", "+\t\t\tif (digits > 0) {", "+\t\t\t\tString decimalSeparator = getDecimalSeparator ();", "+\t\t\t\tint index = string.indexOf (decimalSeparator);", "+\t\t\t\tif (index != -1)  {", "+\t\t\t\t\tString wholePart = string.substring (0, index);", "+\t\t\t\t\tString decimalPart = string.substring (index + 1);", "+\t\t\t\t\tif (decimalPart.length () > digits) {", "+\t\t\t\t\t\tdecimalPart = decimalPart.substring (0, digits);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint i = digits - decimalPart.length ();", "+\t\t\t\t\t\tfor (int j = 0; j < i; j++) {", "+\t\t\t\t\t\t\tdecimalPart = decimalPart + \"0\";", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tint wholeValue = Integer.parseInt (wholePart);", "+\t\t\t\t\tint decimalValue = Integer.parseInt (decimalPart);", "+\t\t\t\t\tfor (int i = 0; i < digits; i++) wholeValue *= 10;", "+\t\t\t\t\tvalue = wholeValue + decimalValue;", "+\t\t\t\t} else {", "+\t\t\t\t\tvalue = Integer.parseInt (string);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tvalue = Integer.parseInt (string);", "+\t\t\t}", "+\t\tif (digits > 0) {", "+\t\t\tString decimalSeparator = getDecimalSeparator ();", "+\t\t\tint index = string.length () - digits;", "+\t\t\tStringBuffer buffer = new StringBuffer ();", "+\t\t\tif (index > 0) {", "+\t\t\t\tbuffer.append (string.substring (0, index));", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\tbuffer.append (string.substring (index));", "+\t\t\t} else {", "+\t\t\t\tbuffer.append (\"0\");", "+\t\t\t\tbuffer.append (decimalSeparator);", "+\t\t\t\twhile (index++ < 0) buffer.append (\"0\");", "+\t\t\t\tbuffer.append (string);", "+\t\t\t}", "+\t\t\tstring = buffer.toString ();", "+\t\t}"]}], "num": 20473}