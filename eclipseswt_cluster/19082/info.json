{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62dad921ad3bad34a83eccc5ebb0dc99", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9d7ad4e139c8d9353430447319e1c6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "5d42583bedfb01f2af4aa781f40d3cc79804563c", "commitAfterChange": "f9711b34fd50570456baa5c59b174cc96df44367", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "signatureAfterChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "diff": ["-\tint selectionStart = selection.x;", "-\tint selectionEnd = selection.y;", "+\tint selectionStart = selection.x - lineOffset;", "+\tint selectionEnd = selection.y - lineOffset;", "-\tboolean fullSelection = (styledText.getStyle() & SWT.FULL_SELECTION) != 0;", "-\tboolean isWPF = StyledText.IS_WPF;", "-\tgc.setBackground(lineBackground);", "+\tgc.setBackground(lineBackground);", "-\tif (!isWPF && selectionStart != selectionEnd) {", "-\t\tgc.setBackground(styledText.getSelectionBackground());", "-\t\tint selStart = selectionStart - lineOffset;", "-\t\tint selEnd = selectionEnd - lineOffset;", "-\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "-\t}", "-\tgc.setBackground(lineBackground);\t", "-\tif (selectionStart == selectionEnd || (selectionEnd <= lineOffset && selectionStart > lineOffset + lineLength - 1)) {", "+\tgc.setBackground(lineBackground);", "+\tif (selectionStart == selectionEnd || (selectionEnd <= 0 && selectionStart > lineLength - 1)) {", "-\t\tint start = Math.max(0, selectionStart - lineOffset);", "-\t\tint end = Math.min(lineLength, selectionEnd - lineOffset);", "+\t\tint start = Math.max(0, selectionStart);", "+\t\tint end = Math.min(lineLength, selectionEnd);", "-\t\tlayout.draw(gc, paintX, paintY, start, end - 1, selectionFg, selectionBg);", "+\t\tint flags;", "+\t\tif ((styledText.getStyle() & SWT.FULL_SELECTION) != 0) {", "+\t\t\tflags = SWT.FULL_SELECTION;", "+\t\t} else {", "+\t\t\tflags = SWT.DELIMITER_SELECTION;", "+\t\t}", "+\t\tif (selectionStart <= lineLength && lineLength < selectionEnd ) {", "+\t\t\tflags |= SWT.LAST_LINE_SELECTION;", "+\t\t}", "+\t\tlayout.draw(gc, paintX, paintY, start, end - 1, selectionFg, selectionBg, flags);", "-\tif (isWPF && selectionStart != selectionEnd) {", "-\t\tint alpha = gc.getAlpha();", "-\t\tgc.setAlpha(102);", "-\t\tgc.setBackground(styledText.getSelectionBackground());", "-\t\tint selStart = selectionStart - lineOffset;", "-\t\tint selEnd = selectionEnd - lineOffset;", "-\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "-\t\tgc.setAlpha(alpha);", "-\t}", "-", "-\t", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee9b1f22a05443612a64cb2b073a1d8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "4862a25e5d82327325fbe4d7e3507daf3c19785e", "commitAfterChange": "2067e0ae09764d86e67e032bb852a5c292b109a1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "signatureAfterChange": " int drawLine(int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground)", "diff": ["-\tif (!fullSelection || selectionStart > lineOffset || selectionEnd <= lineOffset + lineLength) {", "-\t\t// draw background if full selection is off or if line is not completely selected", "-\t\tgc.setBackground(lineBackground);", "-\t\tstyledText.drawBackground(gc, client.x, paintY, client.width, layout.getBounds().height);", "-\t}", "-\tif (selectionStart != selectionEnd) {", "-\t\tint y = paintY;", "+\tboolean isWPF = StyledText.IS_WPF;", "+\tgc.setBackground(lineBackground);", "+\tint height = layout.getBounds().height;", "+\tstyledText.drawBackground(gc, client.x, paintY, client.width, height);", "+\t", "+\tif (!isWPF && selectionStart != selectionEnd) {", "-\t\tint lineCount = layout.getLineCount();", "-\t\tif (fullSelection) {", "-\t\t\tint[] offsets = layout.getLineOffsets();", "-\t\t\tfor (int i = 0; i < lineCount - 1; i++) {", "-\t\t\t\tint lineStart = offsets[i];", "-\t\t\t\tif (lineStart >= selectionEnd - lineOffset) break;", "-\t\t\t\tint lineEnd = offsets[i + 1];", "-\t\t\t\tRectangle lineBounds = layout.getLineBounds(i);", "-\t\t\t\tif (selectionStart - lineOffset <= lineEnd && lineEnd <= selectionEnd - lineOffset) {", "-\t\t\t\t\tint x = paintX + lineBounds.x + lineBounds.width;", "-\t\t\t\t\tgc.fillRectangle(x, y, client.width - x, lineBounds.height);", "-\t\t\t\t}", "-\t\t\t\ty += lineBounds.height + layout.getSpacing();", "-\t\t\t}", "-\t\t}", "-\t\tif (selectionStart - lineOffset <= lineLength && lineLength < selectionEnd - lineOffset) {", "-\t\t\tRectangle lineBounds = layout.getLineBounds(lineCount - 1);", "-\t\t\tint x = paintX + lineBounds.x + lineBounds.width;", "-\t\t\tif (fullSelection) {", "-\t\t\t\tgc.fillRectangle(x, paintY + lineBounds.y, client.width - styledText.rightMargin - x, lineBounds.height);", "-\t\t\t} else {", "-\t\t\t\tgc.fillRectangle(x, paintY + lineBounds.y, lineEndSpaceWidth, lineBounds.height);", "-\t\t\t}", "-\t\t}", "+\t\tint selStart = selectionStart - lineOffset;", "+\t\tint selEnd = selectionEnd - lineOffset;", "+\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "+\t}", "+\t", "+\tif (isWPF && selectionStart != selectionEnd) {", "+\t\tint alpha = gc.getAlpha();", "+\t\tgc.setAlpha(102);", "+\t\tgc.setBackground(styledText.getSelectionBackground());", "+\t\tint selStart = selectionStart - lineOffset;", "+\t\tint selEnd = selectionEnd - lineOffset;", "+\t\tdrawLineSelection(paintX, paintY, gc, layout, lineLength, selStart, selEnd, client.width, fullSelection);", "+\t\tgc.setAlpha(alpha);", "-\tint height = layout.getBounds().height;"]}], "num": 19082}