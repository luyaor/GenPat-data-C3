{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ce980273029ea0d1be2defa66955376", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5e2e7e20b59d6cdd58338391bb605b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "9837bb695405327b535c2924659cef1a3a71f994", "commitAfterChange": "e62f420a2d302f7cec92c917bb7157214c5996e7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void didFinishLoadForFrame(int frame)", "signatureAfterChange": "  void didFinishLoadForFrame(int frame)", "diff": ["-\t\tfinal Display display = browser.getDisplay();", "-\t\t/*", "-\t\t* To be consistent with other platforms a title event should be fired when a", "-\t\t* page has completed loading.  A page with a <title> tag will do this", "-\t\t* automatically when the didReceiveTitle callback is received.  However a page", "-\t\t* without a <title> tag will not do this by default, so fire the event", "-\t\t* here with the page's url as the title.", "-\t\t*/", "-\t\tint dataSource = Cocoa.objc_msgSend(frame, Cocoa.S_dataSource);", "-\t\tif (dataSource != 0) {", "-\t\t\tint title = Cocoa.objc_msgSend(dataSource, Cocoa.S_pageTitle);", "-\t\t\tif (title == 0) {\t/* page has no title */", "-\t\t\t\tfinal TitleEvent newEvent = new TitleEvent(browser);", "-\t\t\t\tnewEvent.display = display;", "-\t\t\t\tnewEvent.widget = browser;", "-\t\t\t\tnewEvent.title = url;", "-\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "-\t\t\t\t\ttitleListeners[i].changed(newEvent);", "-\t\t\t\t}", "-\t\t\t\tif (browser.isDisposed()) return;", "-\t\t\t}", "-\t\t}", "-", "+", "-\t\t* The loadHTMLString() invocation above will trigger a second didFinishLoadForFrame", "-\t\t* callback when it is completed.  Wait for this second callback to come before sending", "-\t\t* the completed event.", "+\t\t* The loadHTMLStringBaseURL invocation above will trigger a second didFinishLoadForFrame", "+\t\t* callback when it is completed.  If text was just set into the browser then wait", "+\t\t* for this second callback to come before sending the title or completed events.", "+\t\t\t/*", "+\t\t\t* To be consistent with other platforms a title event should be fired when a", "+\t\t\t* page has completed loading.  A page with a <title> tag will do this", "+\t\t\t* automatically when the didReceiveTitle callback is received.  However a page", "+\t\t\t* without a <title> tag will not do this by default, so fire the event", "+\t\t\t* here with the page's url as the title.", "+\t\t\t*/", "+\t\t\tfinal Display display = browser.getDisplay();", "+\t\t\tint dataSource = Cocoa.objc_msgSend(frame, Cocoa.S_dataSource);", "+\t\t\tif (dataSource != 0) {", "+\t\t\t\tint title = Cocoa.objc_msgSend(dataSource, Cocoa.S_pageTitle);", "+\t\t\t\tif (title == 0) {\t/* page has no title */", "+\t\t\t\t\tfinal TitleEvent newEvent = new TitleEvent(browser);", "+\t\t\t\t\tnewEvent.display = display;", "+\t\t\t\t\tnewEvent.widget = browser;", "+\t\t\t\t\tnewEvent.title = url;", "+\t\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "+\t\t\t\t\t\ttitleListeners[i].changed(newEvent);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (browser.isDisposed()) return;", "+\t\t\t\t}", "+\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0bcd195825e70f27ad846b663c321d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "9837bb695405327b535c2924659cef1a3a71f994", "commitAfterChange": "e62f420a2d302f7cec92c917bb7157214c5996e7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "signatureAfterChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "diff": ["-\t\tDisplay display = browser.getDisplay();", "-\t\t/*", "-\t\t* To be consistent with other platforms a title event should be fired when a", "-\t\t* page has completed loading.  A page with a <title> tag will do this", "-\t\t* automatically when the didReceiveTitle callback is received.  However a page", "-\t\t* without a <title> tag will not do this by default, so fire the event", "-\t\t* here with the page's url as the title.", "-\t\t*/", "-\t\tWebFrame frame = new WebFrame(frameID);", "-\t\tWebDataSource dataSource = frame.dataSource();", "-\t\tif (dataSource != null) {", "-\t\t\tNSString title = dataSource.pageTitle();", "-\t\t\tif (title == null) {\t/* page has no title */", "-\t\t\t\tTitleEvent newEvent = new TitleEvent(browser);", "-\t\t\t\tnewEvent.display = display;", "-\t\t\t\tnewEvent.widget = browser;", "-\t\t\t\tnewEvent.title = url;", "-\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "-\t\t\t\t\ttitleListeners[i].changed(newEvent);", "-\t\t\t\t}", "-\t\t\t\tif (browser.isDisposed()) return;", "-\t\t\t}", "-\t\t}", "-", "+", "-\t\t* callback when it is completed.  Wait for this second callback to come before sending the", "-\t\t* completed event.", "+\t\t* callback when it is completed.  If text was just set into the browser then wait for this", "+\t\t* second callback to come before sending the title or completed events.", "+\t\t\t/*", "+\t\t\t* To be consistent with other platforms a title event should be fired when a", "+\t\t\t* page has completed loading.  A page with a <title> tag will do this", "+\t\t\t* automatically when the didReceiveTitle callback is received.  However a page", "+\t\t\t* without a <title> tag will not do this by default, so fire the event", "+\t\t\t* here with the page's url as the title.", "+\t\t\t*/", "+\t\t\tDisplay display = browser.getDisplay();", "+\t\t\tWebFrame frame = new WebFrame(frameID);", "+\t\t\tWebDataSource dataSource = frame.dataSource();", "+\t\t\tif (dataSource != null) {", "+\t\t\t\tNSString title = dataSource.pageTitle();", "+\t\t\t\tif (title == null) {\t/* page has no title */", "+\t\t\t\t\tTitleEvent newEvent = new TitleEvent(browser);", "+\t\t\t\t\tnewEvent.display = display;", "+\t\t\t\t\tnewEvent.widget = browser;", "+\t\t\t\t\tnewEvent.title = url;", "+\t\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "+\t\t\t\t\t\ttitleListeners[i].changed(newEvent);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (browser.isDisposed()) return;", "+\t\t\t\t}", "+\t\t\t}", "+"]}], "num": 46812}