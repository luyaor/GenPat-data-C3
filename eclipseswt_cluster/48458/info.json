{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e05d8809f474675a22113ed14ffa8fc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590925aa38e1f363c42a1fc0611e954f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "ea15a960a853001410e58a3d24c8aee2da7a0620", "commitAfterChange": "20653c6768e7a089a6fded9c39628f2ae0b74cbf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void drawRectangles (Rectangle [] rects, boolean stippled)", "signatureAfterChange": " void drawRectangles (Rectangle [] rects, boolean stippled)", "diff": ["+\tif (parent == null && !OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\tRECT rect1 = new RECT();", "+\t\tint bandWidth = stippled ? 3 : 1;", "+\t\tfor (int i = 0; i < rects.length; i++) {", "+\t\t\tRectangle rect = rects[i];", "+\t\t\trect1.left = rect.x - bandWidth;", "+\t\t\trect1.top = rect.y - bandWidth;", "+\t\t\trect1.right = rect.x + rect.width + bandWidth * 2;", "+\t\t\trect1.bottom = rect.y + rect.height + bandWidth * 2;", "+\t\t\tOS.RedrawWindow (hwndTransparent, rect1, 0, OS.RDW_INVALIDATE);", "+\t\t}", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0fdcec179630599b48f70120fa1b9f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "1f6933a1b15056c0d45fcdf5019d55449793c82d", "commitAfterChange": "03b27348c501db581e6b7fd3b2d0cc945cd398ee", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 81, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "-\t\tif (single && selectedIndex > -1) {", "-\t\t\tCTabItem item = items[selectedIndex];", "-\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t} else {", "-\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "-\t\t}", "-\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\ttopRightRect.width = topRightSize.x;", "-\t\ttopRightRect.height = tabHeight - 1;", "-\t\ttopRight.setBounds(topRightRect);", "+\t\tswitch (topRightAlignment) {", "+\t\t\tcase SWT.FILL:", "+\t\t\t\tint rightEdge = size.x - borderRight - minRect.width - maxRect.width - 1;", "+\t\t\t\tint lastIndex = getLastIndex();", "+\t\t\t\tif (lastIndex == -1) {", "+\t\t\t\t\ttopRightRect.x = borderLeft + 3;", "+\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "+\t\t\t\t} else {", "+\t\t\t\t\tCTabItem lastItem = items[lastIndex];", "+\t\t\t\t\tif (single) {", "+\t\t\t\t\t\t// fill size is 0 if item compressed", "+\t\t\t\t\t\tif (lastItem.x + lastItem.width >= rightEdge) {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// fill size is 0 if chevron showing", "+\t\t\t\t\t\tif (firstIndex > 0 || lastIndex < items.length - 1) {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\ttopRightRect.x = lastItem.x + lastItem.width;", "+\t\t\t\t\ttopRightRect.width = rightEdge - topRightRect.x;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.RIGHT:", "+\t\t\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "+\t\t\t\tif (single && selectedIndex > -1) {", "+\t\t\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "+\t\t\t\t} else {", "+\t\t\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "+\t\t\t\t}", "+\t\t\t\ttopRightRect.width = topRightSize.x;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\ttopRightRect.height = tabHeight - 1;", "+\t\t\ttopRight.setBounds(topRightRect);"]}], "num": 48458}