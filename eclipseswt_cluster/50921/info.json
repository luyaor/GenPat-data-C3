{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d57ee9476192c5449cc7c930d087084", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67c58065c6fe0205e5806c84b196a9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": "  public boolean forceFocus ()", "diff": ["- */", "+", "-\tDecorations shell = menuShell ();", "-\tshell.setSavedFocus (this);", "-\tif (!isEnabled () || !isVisible () /* AW || !isActive () */) return false;", "-\tif (isFocusControl ()) return true;", "-\tshell.bringToTop ();", "-\t/*", "-\t* This code is intentionally commented.", "-\t*", "-\t* When setting focus to a control, it is", "-\t* possible that application code can set", "-\t* the focus to another control inside of", "-\t* WM_SETFOCUS.  In this case, the original", "-\t* control will no longer have the focus", "-\t* and the call to setFocus() will return", "-\t* false indicating failure.", "-\t* ", "-\t* We are still working on a solution at", "-\t* this time.", "-\t*/", "-//\tif (OS.GetFocus () != OS.SetFocus (handle)) return false;", "-\t\t", "-\t/* AW", "-\tOS.SetFocus (handle);", "-\t*/", "-\t", "-\tboolean focus= false;", "-\t", "-\tif (this instanceof Text || this instanceof List || this instanceof Combo || this instanceof Canvas)", "-\t\tfocus= true;", "-\tif (!focus && MacUtil.FULL_KBD_NAV && this instanceof Button)", "-\t\tfocus= true;", "-\t", "-\tif (focus) {", "-\t\tDisplay display= getDisplay();", "-\t\tif (display != null)", "-\t\t\tdisplay.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "-\t}", "-", "-\treturn isFocusControl ();", "+\tint window = OS.GetControlOwner (handle);", "+\treturn OS.SetKeyboardFocus (window, handle, (short)OS.kControlFocusNextPart) == OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f515e902e54477bb66a402c804fc6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0ad0a601d34f9b89eab0eb65f5e8c1953894af48", "commitAfterChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": " public boolean forceFocus ()", "diff": ["-\tif (!isEnabled () || !isVisible ()) return false;", "+\tif (!isEnabled () || !isVisible () /* AW || !isActive () */) return false;", "-    /* AW", "-\treturn OS.XmProcessTraversal (handle, OS.XmTRAVERSE_CURRENT);", "-    */", "-\t", "-\tDisplay display= getDisplay();", "-\tif (display != null)", "-    \treturn display.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "+\t/*", "+\t* This code is intentionally commented.", "+\t*", "+\t* When setting focus to a control, it is", "+\t* possible that application code can set", "+\t* the focus to another control inside of", "+\t* WM_SETFOCUS.  In this case, the original", "+\t* control will no longer have the focus", "+\t* and the call to setFocus() will return", "+\t* false indicating failure.", "+\t* ", "+\t* We are still working on a solution at", "+\t* this time.", "+\t*/", "+//\tif (OS.GetFocus () != OS.SetFocus (handle)) return false;", "-\tif (!isFocusControl ()) return false;", "-\tshell.setDefaultButton (null, false);", "-    return true;", "+\t/* AW", "+\tOS.SetFocus (handle);", "+\t*/", "+\t", "+\tboolean focus= false;", "+\t", "+\tif (this instanceof Text || this instanceof List || this instanceof Combo || this instanceof Canvas)", "+\t\tfocus= true;", "+\tif (!focus && MacUtil.FULL_KBD_NAV && this instanceof Button)", "+\t\tfocus= true;", "+\t", "+\tif (focus) {", "+\t\tDisplay display= getDisplay();", "+\t\tif (display != null)", "+\t\t\tdisplay.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "+\t}", "+", "+\treturn isFocusControl ();"]}], "num": 50921}