{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91fc8bec7ccb8887627dacaed305ad85", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37305617734c7c509efd8ef4c99f8450", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6c621148e4f8d62b288aaf2751c64105309afd20", "commitAfterChange": "9cdad3973066e0decf647b26fe5680915f6f0ae6", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " StyledTextEvent getBidiSegments(int lineOffset, String line)", "signatureAfterChange": " StyledTextEvent getBidiSegments(int lineOffset, String line)", "diff": ["+\t\tif (!bidiColoring) return null;", "-\tboolean hasSegmentsChars = event.segmentsChars != null;", "+\tchar[] segmentsChars = event.segmentsChars;", "+\tboolean hasSegmentsChars = segmentsChars != null;", "+\t\t}", "+\t}", "+\tif (hasSegmentsChars && !visualWrap) {", "+\t\tfor (int i= 0; i < segmentsChars.length; i++) {", "+\t\t\tif (segmentsChars[i] == '\\n' || segmentsChars[i] == '\\r') {", "+\t\t\t\tvisualWrap = true;", "+\t\t\t\tsetVariableLineHeight();", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf8d7f73b308cdc635b15db31569269", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "9c7d16bb18d3860d95141caf8c4f01bb13563f7e", "commitAfterChange": "be5aa41634cde1e04ae4d0c10fd398906519cd0c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic int getType (String widgetTypeName, Accessible accessible, int parentType, int childId)", "signatureAfterChange": "  \tstatic int getType (String widgetTypeName, Accessible accessible, int parentType, int childId)", "diff": ["-\t\tboolean action = false, hypertext = false, selection = false, table = false, text = false, value = false;", "+\t\tboolean action = false, editableText = false, hypertext = false, selection = false, table = false, text = false, value = false;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < editableTextRoles.length; i++) {", "+\t\t\t\tif (event.detail == editableTextRoles [i]) {", "+\t\t\t\t\teditableText = true;", "-\t\t\taction = hypertext = selection = table = text = value = true;", "+\t\t\taction = editableText = hypertext = selection = table = text = value = true;", "+\t\tif (editableText) swtTypeName += \"EditableText\"; //$NON-NLS-1$", "+\t\t\tif (editableText) OS.g_type_add_interface_static (type, ATK.ATK_TYPE_EDITABLE_TEXT(), EditableTextIfaceDefinition);"]}], "num": 49720}