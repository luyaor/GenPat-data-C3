{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bccdbe86099ae215d2608dcf8c218d95", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e359f20d34caf0ded19c8d15ca4b286", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "92aa39a7c661912159670308090c487174ede5f7", "commitAfterChange": "8edc307f4176184404821fb456b60733afd2ebe3", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\tif (!ignoreSelect) {", "-\t\t\t\tint pos = OS.GetMessagePos ();", "-\t\t\t\tPOINT pt = new POINT ();", "-\t\t\t\tpt.x = (short) (pos & 0xFFFF);", "-\t\t\t\tpt.y = (short) (pos >> 16);", "-\t\t\t\tOS.ScreenToClient (handle, pt);", "-\t\t\t\tTVHITTESTINFO lpht = new TVHITTESTINFO ();", "-\t\t\t\tlpht.x = pt.x;", "-\t\t\t\tlpht.y = pt.y;", "-\t\t\t\tOS.SendMessage (handle, OS.TVM_HITTEST, 0, lpht);", "-\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) break;", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\tif (hItem != 0) {", "-\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\ttvItem.hItem = hItem;", "-\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM;", "-\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\t\t\tevent.item = items [tvItem.lParam];", "-\t\t\t\t}", "-\t\t\t\tpostEvent (SWT.DefaultSelection, event);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "514dd60ef9ef6c5d9f0b595e1836d08d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "commitAfterChange": "ef701f46e5b2e0f2985bbdd5c26f3756062468e4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t\tcase OS.VK_ESCAPE:", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  Windows sends NM_RETURN from WM_KEYDOWN", "+\t\t\t* instead of using WM_CHAR.  This means that application code", "+\t\t\t* that expects to consume the key press and therefore avoid the", "+\t\t\t* SWT.DefaultSelection event from WM_CHAR will fail.  The fix", "+\t\t\t* is to implement SWT.DefaultSelection in WM_CHAR instead of", "+\t\t\t* using NM_RETURN.", "+\t\t\t*/", "+\t\t\tEvent event = new Event ();", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem != 0) {", "+\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\ttvItem.hItem = hItem;", "+\t\t\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\t}", "+\t\t\tpostEvent (SWT.DefaultSelection, event);", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.VK_ESCAPE:"]}], "num": 23558}