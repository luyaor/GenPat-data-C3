{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee7a5f8c6e841f77e81ce16fd9bf10fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e868da1682874ff97bec54ad08059a44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5d484c6476bc4892c9825b0c805179fe47e751d4", "commitAfterChange": "2efd019c0428e46dfacf8317bc1b4ae9f271e166", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["-\t\tantialias(shape, ", "-\t\t\t\t  borderColor1.getRGB(),  ", "-\t\t\t\t  selectionBackground == null ? getBackground().getRGB() : selectionBackground.getRGB(), ", "-\t\t\t\t  single ? getBackground().getRGB() : getParent().getBackground().getRGB(),", "-\t\t\t\t  gc);", "+\t\tRGB inside = selectionBackground.getRGB();", "+\t\tif (backgroundImage != null || (gradientColors != null && gradientColors.length > 1)) inside = null;", "+\t\tRGB outside = single ? getBackground().getRGB() : getParent().getBackground().getRGB();", "+\t\tantialias(shape, borderColor1.getRGB(), inside, outside, gc);\t", "-\tif (borderLeft == 0) return;", "-\t\t\t", "+\t", "-\tif (borderLeft == 1) {", "-\t\tdrawFlatBorder(gc);", "-\t} else {", "-\t\tdraw3DBorder(gc);", "+\tif (borderLeft > 0) drawFlatBorder(gc);", "+\t", "+\t// fill in client area", "+\tif (!minimized){", "+\t\tint style = getStyle();", "+\t\tint width = size.x  - borderLeft - borderRight;", "+\t\tint height = size.y - borderTop - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "+\t\tint x = xClient - marginWidth;", "+\t\tint y = yClient - marginHeight;", "+\t\tif (borderLeft > 0 && (style & SWT.FLAT) == 0) {", "+\t\t\twidth -= 2*HIGHLIGHT_MARGIN;", "+\t\t\theight -= HIGHLIGHT_MARGIN;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint x1 = 1;", "+\t\t\t\tint x2 = size.x - 1;", "+\t\t\t\tint y1 = size.y - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "+\t\t\t\tgc.setForeground(selectedIndex == -1 ? getBackground() : selectionBackground);", "+\t\t\t\tfor (int i = 0; i < HIGHLIGHT_MARGIN; i++) {", "+\t\t\t\t\tgc.drawPolyline(new int[] {x1+i, y1-1, x1+i, 1+i, x2-1-i, 1+i, x2-1-i, y1});", "+\t\t\t\t}", "+\t\t\t} else {\t", "+\t\t\t\tint x1 = 1;", "+\t\t\t\tint x2 = size.x - 1;", "+\t\t\t\tint y2 = borderTop + tabHeight + HIGHLIGHT_HEADER;", "+\t\t\t\tgc.setForeground(selectedIndex == -1 ? getBackground() : selectionBackground);", "+\t\t\t\tfor (int i = 0; i < HIGHLIGHT_MARGIN; i++) {", "+\t\t\t\t\tgc.drawPolyline(new int[] {x1+i, y2, x1+i, size.y-2-i, x2-1-i, size.y-2-i, x2-1-i, y2-1});", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tgc.setBackground(getBackground());", "+\t\tgc.fillRectangle(x, y, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20274384a34edbe7354ffc3bc3c6703c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 16, "signatureBeforeChange": " private void drawBorder(GC gc)", "signatureAfterChange": " void drawBody(Event event)", "diff": ["- */", "-private void drawBorder(GC gc) {", "-\t", "-\tRectangle d = super.getClientArea();", "-\t", "-\tif (showBorders) {", "-\t\tif ((getStyle() & SWT.FLAT) != 0) {", "-\t\t\tgc.setForeground(borderColor1);", "-\t\t\tgc.drawRectangle(d.x, d.y, d.x + d.width - 1, d.y + d.height - 1);", "-\t\t\tgc.setForeground(borderColor1);", "-\t\t\tgc.drawRectangle(d.x, d.y, d.x + d.width - 3, d.y + d.height - 3);", "-\t\t", "-\t\t\tgc.setForeground(borderColor2);", "-\t\t\tgc.drawLine(d.x + 1,           d.y + d.height - 2, d.x + d.width - 1, d.y + d.height - 2);", "-\t\t\tgc.drawLine(d.x + d.width - 2, d.y + 1,            d.x + d.width - 2, d.y + d.height - 1);", "-\t\t", "-\t\t\tgc.setForeground(borderColor3);", "-\t\t\tgc.drawLine(d.x + 2,           d.y + d.height - 1, d.x + d.width - 2, d.y + d.height - 1);", "-\t\t\tgc.drawLine(d.x + d.width - 1, d.y + 2,            d.x + d.width - 1, d.y + d.height - 2);", "-\t\t", "-\t\t\t// fill in corners with parent's background", "-\t\t\tgc.setForeground(getParent().getBackground());", "-\t\t\tgc.drawLine(d.x + d.width - 2, d.y,     d.x + d.width - 1, d.y);", "-\t\t\tgc.drawLine(d.x + d.width - 1, d.y + 1, d.x + d.width - 1, d.y + 1);", "-\t\t", "-\t\t\tgc.drawLine(d.x, d.y + d.height - 2, d.x,     d.y + d.height - 2);", "-\t\t\tgc.drawLine(d.x, d.y + d.height - 1, d.x + 1, d.y + d.height - 1);", "-\t\t", "-\t\t\tgc.drawLine(d.x + d.width - 1, d.y + d.height - 1, d.x + d.width - 1, d.y + d.height - 1);", "-\t\t", "-", "-\t// draw a separator line", "-\tif (items.length > 0) {\t", "-\t\tint lineY = d.y + borderTop + tabHeight;", "+}", "+void drawBody(Event event) {", "+\tGC gc = event.gc;", "+\tPoint size = getSize();", "+\t", "+\t//draw 1 pixel border around outside", "+\tif (borderLeft > 0) {", "+\t\tgc.setForeground(borderColor);", "+\t\tint x1 = borderLeft - 1;", "+\t\tint x2 = size.x - borderRight;", "+\t\tint y1 = onBottom ? borderTop - 1 : borderTop + tabHeight;", "+\t\tint y2 = onBottom ? size.y - tabHeight - borderBottom - 1 : size.y - borderBottom;", "+\t\tgc.drawLine(x1, y1, x1, y2); // left", "+\t\tgc.drawLine(x2, y1, x2, y2); // right", "-\t\t\tlineY = d.y + d.height - borderBottom - tabHeight - 1;", "+\t\t\tgc.drawLine(x1, y1, x2, y1); // top", "+\t\t} else {", "+\t\t\tgc.drawLine(x1, y2, x2, y2); // bottom", "-\t\tgc.setForeground(borderColor1);", "-\t\tgc.drawLine(d.x + borderLeft, lineY, d.x + d.width - borderRight, lineY);", "+\t", "+\t// fill in client area", "+\tif (!minimized){", "+\t\tint style = getStyle();", "+\t\tint width = size.x  - borderLeft - borderRight;", "+\t\tint height = size.y - borderTop - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "+\t\tint x = xClient - marginWidth;", "+\t\tint y = yClient - marginHeight;", "+\t\tif (borderLeft > 0 && (style & SWT.FLAT) == 0) {", "+\t\t\twidth -= 2*HIGHLIGHT_MARGIN;", "+\t\t\theight -= HIGHLIGHT_MARGIN;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint x1 = 1;", "+\t\t\t\tint x2 = size.x - 1;", "+\t\t\t\tint y1 = size.y - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "+\t\t\t\tgc.setForeground(selectedIndex == -1 ? getBackground() : selectionBackground);", "+\t\t\t\tfor (int i = 0; i < HIGHLIGHT_MARGIN; i++) {", "+\t\t\t\t\tgc.drawPolyline(new int[] {x1+i, y1-1, x1+i, 1+i, x2-1-i, 1+i, x2-1-i, y1});", "+\t\t\t\t}", "+\t\t\t} else {\t", "+\t\t\t\tint x1 = 1;", "+\t\t\t\tint x2 = size.x - 1;", "+\t\t\t\tint y2 = borderTop + tabHeight + HIGHLIGHT_HEADER;", "+\t\t\t\tgc.setForeground(selectedIndex == -1 ? getBackground() : selectionBackground);", "+\t\t\t\tfor (int i = 0; i < HIGHLIGHT_MARGIN; i++) {", "+\t\t\t\t\tgc.drawPolyline(new int[] {x1+i, y2, x1+i, size.y-2-i, x2-1-i, size.y-2-i, x2-1-i, y2-1});", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tgc.setBackground(getBackground());", "+\t\tgc.fillRectangle(x, y, width, height);", "+\t}", "+}", "-\tgc.setForeground(getForeground());"]}], "num": 27171}