{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69fe7e70969954762ee627a37a0a0c6d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "224ce21d46bfefd66f2835cd37ebd947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d40180969e058820e7b65ecda5a796369b957f6c", "commitAfterChange": "3dd67fc81d62a14c11e6d5af0399996d1e35cf59", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 12, "signatureBeforeChange": "  int gtk_key_press_event (int widget, int event)", "signatureAfterChange": "  boolean filterKey (int keyval, int event)", "diff": ["+boolean filterKey (int keyval, int /*long*/ event) {", "+\t/*", "+\t* Bug in GTK.  On simplified Chinese, when the IM is open and the user", "+\t* presses a tab key, focus traversal occurs and the IM stops working.", "+\t* In order to process keys properly in SWT, if the same key event is", "+\t* dispatched twice, it is ignored.  If the tab key is not dispatched twice,", "+\t* the IM fails.  The fix is to dispatch it.", "+\t*/", "+\tboolean isTab = keyval == OS.GDK_Tab || keyval == OS.GDK_ISO_Left_Tab;", "+\tint time = OS.gdk_event_get_time (event);", "+\tif (time != lastEventTime ||  isTab) {", "+\t\tlastEventTime = time;", "+\t\tint /*long*/ imContext = imContext ();", "+\t\tif (imContext != 0) {", "+\t\t\treturn OS.gtk_im_context_filter_keypress (imContext, event);", "+\t\t}", "+\t}", "+\treturn false;", "+}", "-", "-int /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event) {", "-\tif (widget != entryHandle) {", "-\t\treturn super.gtk_key_press_event (widget, event);", "-\t}", "-\tif (!hasFocus ()) return 0;", "-\tGdkEventKey gdkEvent = new GdkEventKey ();", "-\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "-\t/*", "-\t* Bug in GTK.  On simplified Chinese, when the IM is open and the user", "-\t* presses a tab key, focus traversal occurs and the IM stops working.", "-\t* In order to process keys properly in SWT, if the same key event is", "-\t* dispatched twice, it is ignored.  If the tab key is not dispatched twice,", "-\t* the IM fails.  The fix is to dispatch it.", "-\t*/", "-\tboolean isTab = gdkEvent.keyval == OS.GDK_Tab || gdkEvent.keyval == OS.GDK_ISO_Left_Tab;", "-\tif (gdkEvent.time != lastEventTime ||  isTab) {", "-\t\tlastEventTime = gdkEvent.time;", "-\t\tint /*long*/ imContext = imContext ();", "-\t\tif (imContext != 0) {", "-\t\t\tif (OS.gtk_im_context_filter_keypress (imContext, event)) return 1;", "-\t\t}", "-\t}", "-\treturn super.gtk_key_press_event (widget, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01124f6055a6149f60acb8db50466a6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d40180969e058820e7b65ecda5a796369b957f6c", "commitAfterChange": "3dd67fc81d62a14c11e6d5af0399996d1e35cf59", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int gtk_key_press_event (int widget, int event)", "signatureAfterChange": "  boolean filterKey (int keyval, int event)", "diff": ["+boolean filterKey (int keyval, int /*long*/ event) {", "+\t/*", "+\t* Bug in GTK.  On simplified Chinese, when the IM is open and the user", "+\t* presses a tab key, focus traversal occurs and the IM stops working.", "+\t* In order to process keys properly in SWT, if the same key event is", "+\t* dispatched twice, it is ignored.  If the tab key is not dispatched twice,", "+\t* the IM fails.  The fix is to dispatch it.", "+\t*/", "+\tboolean isTab = keyval == OS.GDK_Tab || keyval == OS.GDK_ISO_Left_Tab;", "+\tint time = OS.gdk_event_get_time (event);", "+\tif (time != lastEventTime ||  isTab) {", "+\t\tlastEventTime = time;", "+\t\tint /*long*/ imContext = imContext ();", "+\t\tif (imContext != 0) {", "+\t\t\treturn OS.gtk_im_context_filter_keypress (imContext, event);", "+\t\t}", "+\t}", "+\treturn false;", "+}", "-", "-int /*long*/ gtk_key_press_event (int /*long*/ widget, int /*long*/ event) {", "-\tif (!hasFocus ()) return 0;", "-\tGdkEventKey gdkEvent = new GdkEventKey ();", "-\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "-\t/*", "-\t* Bug in GTK.  On simplified Chinese, when the IM is open and the user", "-\t* presses a tab key, focus traversal occurs and the IM stops working.", "-\t* In order to process keys properly in SWT, if the same key event is", "-\t* dispatched twice, it is ignored.  If the tab key is not dispatched twice,", "-\t* the IM fails.  The fix is to dispatch it.", "-\t*/", "-\tboolean isTab = gdkEvent.keyval == OS.GDK_Tab || gdkEvent.keyval == OS.GDK_ISO_Left_Tab;", "-\tif (gdkEvent.time != lastEventTime ||  isTab) {", "-\t\tlastEventTime = gdkEvent.time;", "-\t\tint /*long*/ imContext = imContext ();", "-\t\tif (imContext != 0) {", "-\t\t\tif (OS.gtk_im_context_filter_keypress (imContext, event)) return 1;", "-\t\t}", "-\t}", "-\treturn super.gtk_key_press_event (widget, event);"]}], "num": 36141}