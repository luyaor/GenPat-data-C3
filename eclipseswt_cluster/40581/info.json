{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad6aa9b2e5d4973c0625785be9c55780", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11d9d44b6e2635b897cb51b9262e766d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "b000eddcd9513961ff5fe8c8232c68cdd2a1a403", "commitAfterChange": "75b697cefdfa964a7ca6f3a975c246c7ed48d218", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void setDate (int year, int month, int day)", "signatureAfterChange": " public void setDate (int year, int month, int day)", "diff": ["-\tsetYear (year);", "-\tsetDay (1);", "-\tsetMonth (month);", "-\tsetDay (day);", "+\tif (!isValid(year, month, day)) return;", "+\tif ((style & SWT.CALENDAR) != 0) {", "+\t\tthis.year = year;", "+\t\tthis.month = month;", "+\t\tthis.day = day;", "+\t\tOS.gtk_calendar_select_month(handle, month, year);", "+\t\tOS.gtk_calendar_select_day(handle, day);", "+\t} else {", "+\t\tcalendar.set(Calendar.YEAR, year);", "+\t\tcalendar.set(Calendar.MONTH, month);", "+\t\tcalendar.set(Calendar.DAY_OF_MONTH, day);", "+\t\tupdateControl();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41755b29e558f63f5730d358e20f702b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f86b9ebe2b0df4c73482603496c165ab5faee1d3", "commitAfterChange": "8980b86038eacdc7bd892692fe36237fa3f5ae14", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint width = 0, height = 0;", "+\tRectangle trim;", "-\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\tint width = wHint == SWT.DEFAULT ? cellSize.x * 7 : wHint;", "-\t\tint height = hHint == SWT.DEFAULT ? cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y) : hHint;", "-\t\tRectangle trim = computeTrim(0, 0, width, height);", "-\t\treturn new Point(trim.width, trim.height);", "+\t\tPoint buttonSize = monthDown.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = cellSize.x * 7;", "+\t\theight = cellSize.y * 7 + Math.max(cellSize.y, buttonSize.y);", "+\t} else { /* SWT.DATE and SWT.TIME */", "+\t\tGC gc = new GC(text);", "+\t\tPoint textSize = gc.stringExtent(getComputeSizeString(style));", "+\t\tgc.dispose();", "+\t\ttrim = text.computeTrim(0, 0, textSize.x, textSize.y);", "+\t\tPoint buttonSize = up.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\twidth = trim.width + buttonSize.x;", "+\t\theight = Math.max(trim.height, buttonSize.y);", "-\treturn super.computeSize (wHint, hHint, changed);", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tint borderWidth = getBorderWidth ();", "+\treturn new Point (width + 2*borderWidth, height + 2*borderWidth);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a9500df02ef8351a9d119dc29cfee7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DateTime (Composite parent, int style)", "signatureAfterChange": " public DateTime (Composite parent, int style)", "diff": ["-\tif ((this.style & SWT.CALENDAR) == 0) {", "-\t\t/* SWT.DATE and SWT.TIME */", "-\t\tcreateText((this.style & SWT.DROP_DOWN) != 0);", "-\t} else {", "-\t\t/* Highlight the current(today) date */", "-\t\tOS.gtk_calendar_mark_day(handle, Calendar.getInstance().get(Calendar.DAY_OF_MONTH));", "+\tif (isDate () || isTime ()) {", "+\t\tcreateText ();", "+\t}", "+", "+\tif (isCalendar ()) {", "+\t\tOS.gtk_calendar_mark_day (calendarHandle, Calendar.getInstance ().get (Calendar.DAY_OF_MONTH));", "+\t}", "+", "+\tif (isDateWithDropDownButton ()) {", "+\t\tcreateDropDownButton ();", "+\t\tcreatePopupShell (-1, -1, -1);", "+\t\taddListener (SWT.Resize, new Listener () {", "+\t\t\tpublic void handleEvent (Event event) {", "+\t\t\t\tsetDropDownButtonSize ();", "+\t\t\t}", "+\t\t});", "-}", "+\tif (isDateWithDropDownButton ()) {", "+\t\t//Date w/ drop down button is in containers.", "+\t\t//first time round we set the bounds manually for correct Right_to_left behaviour", "+\t\tPoint size = computeSize (SWT.DEFAULT, SWT.DEFAULT);", "+\t\tsetBounds (0, 0, size.x, size.y);"]}], "num": 40581}