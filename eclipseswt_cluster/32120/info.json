{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ebb1a4eeb73381f370865bac9d439e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbda12ee0450d84d0f302066a448e2f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int findBrush (int pixel)", "signatureAfterChange": "  int findBrush (int value, int lbStyle)", "diff": ["-int findBrush (int pixel) {", "-\tif (pixel == OS.GetSysColor (OS.COLOR_BTNFACE)) {", "-\t\treturn OS.GetSysColorBrush (OS.COLOR_BTNFACE);", "+int findBrush (int value, int lbStyle) {", "+\tif (lbStyle == OS.BS_SOLID) {", "+\t\tfor (int i=0; i<SYSTEM_COLORS.length; i++) {", "+\t\t\tif (value == OS.GetSysColor (SYSTEM_COLORS [i])) {", "+\t\t\t\treturn OS.GetSysColorBrush (SYSTEM_COLORS [i]);", "+\t\t\t}", "+\t\t}", "-\tif (pixel == OS.GetSysColor (OS.COLOR_WINDOW)) {", "-\t\treturn OS.GetSysColorBrush (OS.COLOR_WINDOW);", "-\t}", "-\tif (brushes == null) brushes = new int [4];", "+\tif (brushes == null) brushes = new int [BRUSHES_SIZE];", "-\t\tif (logBrush.lbColor == pixel) return hBrush;", "+\t\tswitch (logBrush.lbStyle) {", "+\t\t\tcase OS.BS_SOLID:", "+\t\t\t\tif (lbStyle == OS.BS_SOLID) {", "+\t\t\t\t\tif (logBrush.lbColor == value) return hBrush;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase OS.BS_PATTERN:", "+\t\t\t\tif (lbStyle == OS.BS_PATTERN) {", "+\t\t\t\t\tif (logBrush.lbHatch == value) return hBrush;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "-\tbrushes [0] = hBrush = OS.CreateSolidBrush (pixel);", "-\treturn hBrush;", "+\tswitch (lbStyle) {", "+\t\tcase OS.BS_SOLID:", "+\t\t\thBrush = OS.CreateSolidBrush (value);", "+\t\t\tbreak;", "+\t\tcase OS.BS_PATTERN:", "+\t\t\thBrush = OS.CreatePatternBrush (value);", "+\t\t\tbreak;", "+\t}", "+\treturn brushes [0] = hBrush;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b26387e81a06e8855734cd68bb9a63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f9d1b8ac7cd48abdbe73be9592050c50b9c9c90f", "commitAfterChange": "9af2148943f9167db8c9ff4f30fbc75bc417fc0a", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\tcase SWT.MouseUp: {", "+\t\tcase SWT.MouseUp:", "+\t\tcase SWT.MouseWheel: {", "-\t\t\t\tswitch (event.button) {", "-\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "-\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "-\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "-\t\t\t\t\tcase 4: {", "-\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "-\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "-\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON1;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\tif (type == SWT.MouseWheel) {", "+\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_WHEEL;", "+\t\t\t\t\tswitch (event.detail) {", "+\t\t\t\t\t\tcase SWT.SCROLL_PAGE:", "+\t\t\t\t\t\t\tinputs.mouseData = event.count * OS.WHEEL_DELTA;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase SWT.SCROLL_LINE:", "+\t\t\t\t\t\t\tint [] value = new int [1];", "+\t\t\t\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWHEELSCROLLLINES, 0, value, 0);", "+\t\t\t\t\t\t\tinputs.mouseData = event.detail * OS.WHEEL_DELTA / value [0];", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault: return false;", "-\t\t\t\t\tcase 5: {", "-\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "-\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "-\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON2;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t} else {", "+\t\t\t\t\tswitch (event.button) {", "+\t\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "+\t\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "+\t\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "+\t\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON1;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON2;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdefault: return false;", "-\t\t\t\t\tdefault: return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c832d07a113d440e966ff2776b17c5e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "15e21f2bff63c47ed36ebad70c570e1ba0ab294f", "commitAfterChange": "8ffcee93750c9ff3a3a323ee3036d1e15625164e", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\tcase SWT.MouseMove: ", "+\t\tcase SWT.MouseMove:", "-\t\t\t\tint width = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "-\t\t\t\tint height = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\t\t\tinputs.dx = (event.x * 65535 + width - 2) / (width - 1);", "-\t\t\t\tinputs.dy = (event.y * 65535 + height - 2) / (height - 1);", "+\t\t\t\tif (OS.WIN32_VERSION >= OS.VERSION (5, 0)) inputs.dwFlags |= OS.MOUSEEVENTF_VIRTUALDESK;", "+\t\t\t\tint x = OS.GetSystemMetrics (OS.SM_XVIRTUALSCREEN);", "+\t\t\t\tint y = OS.GetSystemMetrics (OS.SM_YVIRTUALSCREEN);\t", "+\t\t\t\tint width = OS.GetSystemMetrics (OS.SM_CXVIRTUALSCREEN);", "+\t\t\t\tint height = OS.GetSystemMetrics (OS.SM_CYVIRTUALSCREEN);", "+\t\t\t\tinputs.dx = ((event.x - x) * 65535 + width - 2) / (width - 1);", "+\t\t\t\tinputs.dy = ((event.y - y) * 65535 + height - 2) / (height - 1);", "+\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON1;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON2;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}], "num": 32120}