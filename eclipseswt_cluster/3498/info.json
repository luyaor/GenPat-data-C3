{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57219750b4aececc6a29c7cf60a62ceb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc0ee3e01dc094de2d9d7bf207088a5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "73fe9e8adea7be66a4dbedf58fb08cbd084dcade", "commitAfterChange": "9080b56426ba1c9487cec6c9519043946c8b5600", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  Object convertToJava (nsIVariant variant, short type)", "signatureAfterChange": "  Object convertToJava (nsIVariant variant, short type)", "diff": ["+\t\t\tC.memset (iid, 0, nsID.sizeof);", "-\t\t\tint /*long*/[] ptr = new int /*long*/[1];", "-\t\t\tptr[0] = C.malloc (C.PTR_SIZEOF);", "+\t\t\tint /*long*/[] ptr = new int /*long*/[1];", "+\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\trc = XPCOM.NS_GetServiceManager (result);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "+\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\t\t\tserviceManager.Release ();", "+", "+\t\t\tnsIMemory memory = new nsIMemory (result[0]);", "+\t\t\tresult[0] = 0;", "+", "-\t\t\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\t\t\t\tif (ptr[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+\t\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tmemory.Free (ptr[0]);", "+\t\t\t\t\t\tmemory.Release ();", "-\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tmemory.Free (ptr[0]);", "+\t\t\t\t\t\tmemory.Release ();", "-\t\t\tC.free (ptr[0]);", "+\t\t\tmemory.Free (ptr[0]);", "+\t\t\tmemory.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740fe323710565d8aed21968d6826028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a2e5fa832165f5a47276264ef4f8d8a7fddf99c3", "commitAfterChange": "f9fb719ff3ba79c646f79b3803a1ec6e89424986", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\tLocationProvider.isXULRunner = IsXULRunner;", "-\t\t\t\tserviceManager.Release ();", "+\t\t\t\tif (LocationProvider != null) {", "+\t\t\t\t\tString prefsLocation = LocationProvider.profilePath + AppFileLocProvider.PREFERENCES_FILE;", "+\t\t\t\t\tnsEmbedString pathString = new nsEmbedString (prefsLocation);", "+\t\t\t\t\trc = XPCOM.NS_NewLocalFile (pathString.getAddress (), true, result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\t\tpathString.dispose ();", "+", "+\t\t\t\t\tnsILocalFile localFile = new nsILocalFile (result [0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t    rc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\t\t\t\tlocalFile.Release ();", "+", "+\t\t\t\t\tnsIFile prefFile = new nsIFile (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+", "+\t\t\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_PREFSERVICE_CONTRACTID, true);", "+\t\t\t\t\trc = serviceManager.GetServiceByContractID (buffer, nsIPrefService.NS_IPREFSERVICE_IID, result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\t\t\tnsIPrefService prefService = new nsIPrefService (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\trc = prefService.SavePrefFile(prefFile.getAddress ());", "+\t\t\t\t\tprefService.Release ();", "+\t\t\t\t\tprefFile.Release ();", "+\t\t\t\t}", "+\t\t\t\tserviceManager.Release ();", "+"]}], "num": 3498}