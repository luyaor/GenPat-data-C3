{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6bb6afaf5d4cb0b28bd3f7a4df2c59a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7d1e3fcff0b69738e58af80f8d61a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["-\tif (index<0) return;", "-\tif ((index>0)&&(index>=parent.columnCount)) return;", "+\tint parentHandle = parent.handle;", "+\tint column = OS.gtk_tree_view_get_column (parentHandle, index);", "+\tif (column == 0) return;", "-\t\tint[] w = new int[1], h = new int[1];", "-\t\tboolean hasMask = (image.mask != 0);", "-\t \tOS.gdk_drawable_get_size(image.pixmap, w, h);", "- \t\tint width = w[0], height = h[0]; \t", "-\t\tpixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);", "-\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint colormap = OS.gdk_colormap_get_system();", "-\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, image.pixmap, colormap, 0, 0, 0, 0, width, height);", "-\t\tif (hasMask) {", "-\t\t\tint gdkMaskImagePtr = OS.gdk_drawable_get_image(image.mask, 0, 0, width, height);", "-\t\t\tif (gdkMaskImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\t\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\t\tbyte[] line = new byte[stride];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tOS.memmove(line, pixels + (y * stride), stride);", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkMaskImagePtr, x, y) != 0) {", "-\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tline[x*4+3] = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.memmove(pixels + (y * stride), line, stride);", "-\t\t\t}", "-\t\t\tOS.g_object_unref(gdkMaskImagePtr);", "-\t\t}", "-\t}\t", "-\tOS.gtk_list_store_set(parent.modelHandle, handle, index+parent.MAX_COLUMNS, pixbuf, -1);", "+\t\tImageList imageList = parent.imageList;", "+\t\tif (imageList == null) imageList = parent.imageList = new ImageList ();", "+\t\tint imageIndex = imageList.indexOf (image);", "+\t\tif (imageIndex == -1) imageIndex = imageList.add (image);", "+\t\tpixbuf = imageList.getPixbuf (imageIndex);", "+\t}", "+\tint modelIndex = parent.columnCount == 0 ? 3 : parent.columns [index].modelIndex;", "+\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex, pixbuf, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d42283d6458077411a82429a225e72cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r public void setImage (Image image)", "signatureAfterChange": "\r \r public void setImage (Image image)", "diff": ["-\tthis.image = image;\r", "+\tsuper.setImage (image);\r", "-\t\tint[] w = new int[1], h = new int[1];\r", "-\t\tboolean hasMask = (image.mask != 0);\r", "-\t \tOS.gdk_drawable_get_size(image.pixmap, w, h);\r", "- \t\tint width = w[0], height = h[0]; \t\r", "-\t\tpixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);\r", "-\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);\r", "-\t\tint colormap = OS.gdk_colormap_get_system();\r", "-\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, image.pixmap, colormap, 0, 0, 0, 0, width, height);\r", "-\t\tif (hasMask) {\r", "-\t\t\tint gdkMaskImagePtr = OS.gdk_drawable_get_image(image.mask, 0, 0, width, height);\r", "-\t\t\tif (gdkMaskImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);\r", "-\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);\r", "-\t\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);\r", "-\t\t\tbyte[] line = new byte[stride];\r", "-\t\t\tfor (int y=0; y<height; y++) {\r", "-\t\t\t\tOS.memmove(line, pixels + (y * stride), stride);\r", "-\t\t\t\tfor (int x=0; x<width; x++) {\r", "-\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkMaskImagePtr, x, y) != 0) {\r", "-\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;\r", "-\t\t\t\t\t} else {\r", "-\t\t\t\t\t\tline[x*4+3] = 0;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t\tOS.memmove(pixels + (y * stride), line, stride);\r", "-\t\t\t}\r", "-\t\t\tOS.g_object_unref(gdkMaskImagePtr);\r", "-\t\t}\r", "-\t}\t\r", "-\tOS.gtk_tree_store_set(parent.modelHandle, handle, 1, pixbuf, -1);\r", "+\t\tImageList imageList = parent.imageList;\r", "+\t\tif (imageList == null) imageList = parent.imageList = new ImageList ();\r", "+\t\tint imageIndex = imageList.indexOf (image);\r", "+\t\tif (imageIndex == -1) imageIndex = imageList.add (image);\r", "+\t\tpixbuf = imageList.getPixbuf (imageIndex);\r", "+\t}\r", "+\tOS.gtk_tree_store_set (parent.modelHandle, handle, 1, pixbuf, -1);\r"]}], "num": 17100}