{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a83962304a1db43bc469d1a3295d0fc8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8596f7ef7e6d1fe7cbc94bacd1009877", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "c05f56c1b0acda6d358c754d485bebfca2e085c4", "commitAfterChange": "2703f006fbf38788b5d53d9129d34aeb73ab335e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int drawPatternProc (int ref, int context)", "signatureAfterChange": "  int drawPatternProc (int ref, int context)", "diff": ["+\t\tint imageWidth = OS.CGImageGetWidth(imageHandle);", "+\t\tint imageHeight = OS.CGImageGetHeight(imageHandle);", "-\t\trect.width = OS.CGImageGetWidth(imageHandle);", "-\t\trect.height = OS.CGImageGetHeight(imageHandle);", "+\t\trect.width = imageWidth;", "+\t\trect.height = imageHeight;", "-\t \tOS.CGContextTranslateCTM(context, 0, -rect.height);", "-\t\tOS.CGContextDrawImage(context, rect, imageHandle);", "+\t \tif (drawRect != null && (drawRect.x % imageWidth) + drawRect.width < imageWidth && (drawRect.y % imageHeight) + drawRect.height < imageHeight) {", "+\t \t\trect.x = drawRect.x % imageWidth;", "+\t \t\trect.y = drawRect.y % imageHeight;", "+\t \t\trect.width = drawRect.width;", "+\t \t\trect.height = drawRect.height;", "+\t \t\tif (OS.VERSION >= 0x1040) {", "+\t \t\t\timageHandle = OS.CGImageCreateWithImageInRect(imageHandle, rect);", "+\t \t\t} else {", "+\t\t \t\tint srcX = (int)drawRect.x, srcY = (int)drawRect.y;", "+\t\t \t\tint srcWidth = (int)drawRect.width, srcHeight = (int)drawRect.height;", "+\t\t \t\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "+\t\t\t\tint bpp = OS.CGImageGetBitsPerPixel(imageHandle);", "+\t\t\t\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "+\t\t\t\tint colorspace = OS.CGImageGetColorSpace(imageHandle);", "+\t\t\t\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "+\t\t\t\tint data = image.data + (srcY * bpr) + srcX * 4;", "+\t\t\t\tint provider = OS.CGDataProviderCreateWithData(0, data, srcHeight * bpr, 0);", "+\t\t\t\tif (provider != 0) {", "+\t\t\t\t\timageHandle = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, true, 0);", "+\t\t\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\t\t}", "+\t\t\t}", "+\t \t}", "+\t \tOS.CGContextTranslateCTM(context, 0, -(rect.height + 2 * rect.y));", "+\t \tOS.CGContextDrawImage(context, rect, imageHandle);", "+\t \tif (imageHandle != 0 && imageHandle != image.handle) OS.CGImageRelease(imageHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088b758fc9c90edc02d314010e988841", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "35a1290837ca95b6eb66152e2737bb6c8db98ddd", "commitAfterChange": "702aad8d4a55b65fe0f5b55b01adf819f48a2c4c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["-\t\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "-\t\tint bpp = OS.CGImageGetBitsPerPixel(imageHandle);", "-\t\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "-\t\tint colorspace = OS.CGImageGetColorSpace(imageHandle);", "-\t\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "-\t\tint data = srcImage.data + (srcY * bpr) + srcX * 4;", "-\t\tint provider = OS.CGDataProviderCreateWithData(0, data, srcHeight * bpr, 0);", "-\t\tif (provider != 0) {", "-\t\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, true, 0);", "-\t\t\tOS.CGDataProviderRelease(provider);", "+ \t\tif (OS.VERSION >= 0x1040) {", "+ \t\t\tCGRect srcRect = new CGRect();", "+ \t\t\tsrcRect.x = srcX;", "+ \t\t\tsrcRect.y = srcY;", "+ \t\t\tsrcRect.width = srcWidth;", "+ \t\t\tsrcRect.height = srcHeight;", "+ \t\t\tint subImage = OS.CGImageCreateWithImageInRect(imageHandle, srcRect);", "-\t\t \t\tOS.CGContextDrawImage(handle, rect, subImage);", "- \t\t\t\tOS.CGImageRelease(subImage);", "+\t\t\t\tOS.CGContextDrawImage(handle, rect, subImage);", "+\t\t\t\tOS.CGImageRelease(subImage);", "-\t\t}", "+ \t\t} else {", "+\t\t\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "+\t\t\tint bpp = OS.CGImageGetBitsPerPixel(imageHandle);", "+\t\t\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "+\t\t\tint colorspace = OS.CGImageGetColorSpace(imageHandle);", "+\t\t\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "+\t\t\tint data = srcImage.data + (srcY * bpr) + srcX * 4;", "+\t\t\tint provider = OS.CGDataProviderCreateWithData(0, data, srcHeight * bpr, 0);", "+\t\t\tif (provider != 0) {", "+\t\t\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, true, 0);", "+\t\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\t\tif (subImage != 0) {", "+\t\t\t \t\tOS.CGContextDrawImage(handle, rect, subImage);", "+\t \t\t\t\tOS.CGImageRelease(subImage);", "+\t\t\t\t}", "+\t\t\t}", "+ \t\t}"]}], "num": 52353}