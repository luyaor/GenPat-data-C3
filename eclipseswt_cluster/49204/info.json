{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df9c808613e9e8f11ae15dccab022a8d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e39111a2d69f9c2362caec4a22e8a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "62774f63d87d39b5f158f82c51ca18d06b16d091", "commitAfterChange": "b0f874d83eb098a385358c18e70d4582e44f7cd2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r void redraw ()", "signatureAfterChange": "\r \r void redraw ()", "diff": ["-\tif (OS.IsPPC || OS.IsSP) return;\r", "-\tif (OS.IsHPC) {\r", "-\t\t/*\r", "-\t\t* Each time a menu has been modified, the command menu bar\r", "-\t\t* must be redrawn or it won't update properly.  For example,\r", "-\t\t* a submenu will not drop down.\r", "-\t\t*/\r", "-\t\tMenu menuBar = parent.menuBar;\r", "-\t\tif (menuBar != null) {\r", "-\t\t\tMenu menu = this;\r", "-\t\t\twhile (menu != null && menu != menuBar) {\r", "-\t\t\t\tmenu = menu.getParentMenu ();\r", "-\t\t\t}\r", "-\t\t\tif (menu == menuBar) {\r", "-\t\t\t\tOS.CommandBar_DrawMenuBar (menuBar.hwndCB, 0);\r", "-\t\t\t\tOS.CommandBar_Show (menuBar.hwndCB, true);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn;\r", "-\t}\r", "-\t\tOS.DrawMenuBar (parent.handle);\r", "-\t\treturn;\r", "-\t}\r", "-\tif ((OS.WIN32_MAJOR << 16 | OS.WIN32_MINOR) < (4 << 16 | 10)) {\r", "-\t\treturn;\r", "-\t}\r", "-\tboolean hasCheck = false, hasImage = false;\r", "-\tMenuItem [] items = getItems ();\r", "-\tfor (int i=0; i<items.length; i++) {\r", "-\t\tMenuItem item = items [i];\r", "-\t\tif (item.getImage () != null) {\r", "-\t\t\tif ((hasImage = true) && hasCheck) break;\r", "-\t\t}\r", "-\t\tif ((item.getStyle () & (SWT.CHECK | SWT.RADIO)) != 0) {\r", "-\t\t\tif ((hasCheck = true) && hasImage) break;\r", "-\t\t}\r", "-\t}\r", "-\tMENUINFO lpcmi = new MENUINFO ();\r", "-\tlpcmi.cbSize = MENUINFO.sizeof;\r", "-\tlpcmi.fMask = OS.MIM_STYLE;\r", "-\tOS.GetMenuInfo (handle, lpcmi);\r", "-\tif (hasImage && !hasCheck) {\r", "-\t\tlpcmi.dwStyle |= OS.MNS_CHECKORBMP;\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tdisplay.addBar (this);\r", "-\t\tlpcmi.dwStyle &= ~OS.MNS_CHECKORBMP;\r", "+\t\tupdate ();\r", "-\tOS.SetMenuInfo (handle, lpcmi);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c63886e3e32884065d393fd60b1fa60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "ca45fe430ed44fea42c49b26ae3ce2c4c2ad8354", "commitAfterChange": "e8c8fc165f050f47ac2b161e31aa754f630d6915", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["-void layoutItems () {", "+void layoutItems () {\t", "+\t/*", "+\t* Feature in Windows.  When a tool bar has the style", "+\t* TBSTYLE_LIST and has a drop down item, Window leaves", "+\t* too much padding around the button.  This affects", "+\t* every button in the tool bar and makes the preferred", "+\t* height too big.  The fix is to set the TBSTYLE_LIST", "+\t* when the tool bar contains both text and images.", "+\t* ", "+\t* NOTE: Tool bars with CCS_VERT must have TBSTYLE_LIST", "+\t* set before any item is added or the tool bar does", "+\t* not lay out properly.  The work around does not run", "+\t* in this case.", "+\t*/", "+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\tif ((style & SWT.RIGHT) != 0 && (style & SWT.VERTICAL) == 0) {", "+\t\t\tboolean hasText = false, hasImage = false;", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tToolItem item = items [i];", "+\t\t\t\tif (item != null) {", "+\t\t\t\t\tif (!hasText) hasText = item.text.length () != 0;", "+\t\t\t\t\tif (!hasImage) hasImage = item.image != null;", "+\t\t\t\t\tif (hasText && hasImage) break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tint oldBits = OS.GetWindowLong (handle, OS.GWL_STYLE), newBits = oldBits;", "+\t\t\tif (hasText && hasImage) {", "+\t\t\t\tnewBits |= OS.TBSTYLE_LIST;", "+\t\t\t} else {", "+\t\t\t\tnewBits &= ~OS.TBSTYLE_LIST;", "+\t\t\t}", "+\t\t\tif (newBits != oldBits) {", "+\t\t\t\tsetDropDownItems (false);", "+\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\t\t\t\tsetDropDownItems (true);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}], "num": 49204}