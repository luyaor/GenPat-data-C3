{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca04db6396455630bc69eb5c3187c904", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e270744d5f852bafd76bbac0fd7fa592", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "59553b5e291417a2e8c9353bb30a915a5e064d65", "commitAfterChange": "8d77b789591c14924ad394c0fd32f4a26eb6d5e7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 51, "signatureBeforeChange": " public int getLineStyle()", "signatureAfterChange": " public int getLineStyle()", "diff": ["+\tint style, size;", "-\tLOGPEN logPen = new LOGPEN();", "-\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);", "-\tswitch (logPen.lopnStyle) {", "+\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {", "+\t\tLOGPEN logPen = new LOGPEN();", "+\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);", "+\t\tstyle = logPen.lopnStyle;", "+\t} else {", "+\t\tEXTLOGPEN logPen = new EXTLOGPEN();", "+\t\tOS.GetObject(hPen, size, logPen);", "+\t\tstyle = logPen.elpPenStyle & OS.PS_STYLE_MASK;", "+\t}", "+\tswitch (style) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb333737e13c639cfda2bd1cd922102d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "59553b5e291417a2e8c9353bb30a915a5e064d65", "commitAfterChange": "8d77b789591c14924ad394c0fd32f4a26eb6d5e7", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": " public int getLineWidth()", "signatureAfterChange": " public int getLineWidth()", "diff": ["+\tint size;", "-\tLOGPEN logPen = new LOGPEN();", "-\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);", "-\treturn logPen.x;", "+\tif ((size = OS.GetObject(hPen, 0, (LOGPEN)null)) == LOGPEN.sizeof) {", "+\t\tLOGPEN logPen = new LOGPEN();", "+\t\tOS.GetObject(hPen, LOGPEN.sizeof, logPen);", "+\t\treturn logPen.x;", "+\t} else {", "+\t\tEXTLOGPEN logPen = new EXTLOGPEN();", "+\t\tOS.GetObject(hPen, size, logPen);", "+\t\treturn logPen.elpWidth;", "+\t}"]}], "num": 39353}