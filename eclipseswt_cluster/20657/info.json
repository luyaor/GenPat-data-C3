{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3a5a79b2fa4bc123fc78ea80c5f9a15", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbae0719cb192ecee1084fe88f61e145", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprivate AccessibleFactory (int widgetType)", "signatureAfterChange": "  \tprivate AccessibleFactory (int widgetType)", "diff": ["-\t\tbyte[] factoryName = new byte [FACTORY_TYPE.length + widgetTypeNameLength];", "-\t\tSystem.arraycopy (FACTORY_TYPE, 0, factoryName, 0, FACTORY_TYPE.length);", "-\t\tSystem.arraycopy (buffer, 0, factoryName, FACTORY_TYPE.length, widgetTypeNameLength);", "+\t\tbyte[] factoryName = new byte [FACTORY_TYPENAME.length + widgetTypeNameLength];", "+\t\tSystem.arraycopy (FACTORY_TYPENAME, 0, factoryName, 0, FACTORY_TYPENAME.length);", "+\t\tSystem.arraycopy (buffer, 0, factoryName, FACTORY_TYPENAME.length, widgetTypeNameLength);", "-\t\t\tint parentType = ATK.atk_object_factory_get_accessible_type (previousFactory);", "-\t\t\tint swtFactory = createFactory (factoryName);", "-\t\t\tif (parentType == 0) {", "-\t\t\t\tparentType = ATK.g_type_from_name (Converter.wcsToMbcs (null, DEFAULT_PARENTTYPE, true));", "-\t\t\t}", "+\t\t\tobjectParentType = ATK.atk_object_factory_get_accessible_type (previousFactory);", "+\t\t\tif (objectParentType == 0) objectParentType = DefaultParentType;", "+\t\t\tint factoryParentType = ATK.g_type_from_name (FACTORY_PARENTTYPENAME);", "+\t\t\tgTypeInfo_base_init_factory  = new Callback (this, \"gTypeInfo_base_init_factory\", 1);", "+\t\t\tGTypeInfo typeInfo = new GTypeInfo ();", "+\t\t\ttypeInfo.base_init = gTypeInfo_base_init_factory.getAddress ();", "+\t\t\ttypeInfo.class_size = ATK.AtkObjectFactoryClass_sizeof ();", "+\t\t\ttypeInfo.instance_size = ATK.AtkObjectFactory_sizeof ();", "+\t\t\thandle = OS.g_malloc (GTypeInfo.sizeof); ", "+\t\t\tATK.memmove (handle, typeInfo, GTypeInfo.sizeof); ", "+\t\t\tint swtFactory = ATK.g_type_register_static (factoryParentType, factoryName, handle, 0);", "-\t\t\taccessibleType = new AccessibleType (newTypeName, parentType);", "+\t\t\tobjectType = defineType (newTypeName, objectParentType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb9d0e8ded2fd917bab570807671083", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprivate AccessibleFactory (int widgetType)", "signatureAfterChange": "  \tstatic String getTypeName (int type)", "diff": ["-\tprivate AccessibleFactory (int /*long*/ widgetType) {", "-\t\tsuper ();", "-\t\twidgetTypeName = OS.g_type_name (widgetType);", "-\t\tint widgetTypeNameLength = OS.strlen (widgetTypeName) + 1;", "+\tstatic String getTypeName (int /*long*/ type) {", "+\t\tint /*long*/ typeName = OS.g_type_name (type);", "+\t\tint widgetTypeNameLength = OS.strlen (typeName);", "-\t\tOS.memmove (buffer, widgetTypeName, widgetTypeNameLength);", "-\t\tbyte[] factoryName = new byte [FACTORY_TYPENAME.length + widgetTypeNameLength - 1];", "-\t\tSystem.arraycopy (FACTORY_TYPENAME, 0, factoryName, 0, FACTORY_TYPENAME.length);", "-\t\tSystem.arraycopy (buffer, 0, factoryName, FACTORY_TYPENAME.length - 1, widgetTypeNameLength);", "-\t\tif (OS.g_type_from_name (factoryName) == 0) {", "-\t\t\t/* register the factory */", "-\t\t\tint /*long*/ registry = ATK.atk_get_default_registry ();", "-\t\t\tint /*long*/ previousFactory = ATK.atk_registry_get_factory (registry, widgetType);", "-\t\t\tobjectParentType = ATK.atk_object_factory_get_accessible_type (previousFactory);", "-\t\t\tif (objectParentType == 0) objectParentType = DefaultParentType;", "-\t\t\tint /*long*/ factoryParentType = OS.g_type_from_name (FACTORY_PARENTTYPENAME);", "-\t\t\tgTypeInfo_base_init_factory  = new Callback (this, \"gTypeInfo_base_init_factory\", 1); //$NON-NLS-1$", "-\t\t\tint /*long*/ address = gTypeInfo_base_init_factory.getAddress ();", "-\t\t\tif (address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\t\tGTypeInfo typeInfo = new GTypeInfo ();", "-\t\t\ttypeInfo.base_init = address;", "-\t\t\ttypeInfo.class_size = (short)ATK.AtkObjectFactoryClass_sizeof ();", "-\t\t\ttypeInfo.instance_size = (short)ATK.AtkObjectFactory_sizeof ();", "-\t\t\tint /*long*/ info = OS.g_malloc (GTypeInfo.sizeof); ", "-\t\t\tOS.memmove (info, typeInfo, GTypeInfo.sizeof); ", "-\t\t\tint /*long*/ swtFactoryType = OS.g_type_register_static (factoryParentType, factoryName, info, 0);", "-\t\t\tATK.atk_registry_set_factory_type (registry, widgetType, swtFactoryType);", "-\t\t\thandle = ATK.atk_registry_get_factory (registry, widgetType);", "-\t\t}", "+\t\tOS.memmove (buffer, typeName, widgetTypeNameLength);", "+\t\treturn new String(Converter.mbcsToWcs(null, buffer));", "+\t}"]}], "num": 20657}