{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c622a420b1974ab471278fd57be27b00", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32875f3a4684699d9f7345fc10ba177", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static void sort(JNIMethod[] methods)", "signatureAfterChange": "  static void sort(JNIMethod[] methods)", "diff": ["-\tArrays.sort(methods, new Comparator() {", "-\t\tpublic int compare(Object a, Object b) {", "-\t\t\tJNIMethod mth1 = (JNIMethod)a;", "-\t\t\tJNIMethod mth2 = (JNIMethod)b;", "+\tArrays.sort(methods, new Comparator<JNIMethod>() {", "+\t\tpublic int compare(JNIMethod mth1, JNIMethod mth2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26ea0af952da7ff3a45bfcf76d877ce1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java", "commitBeforeChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "commitAfterChange": "fc949910d259b2f09c2a6d209f57255840ca1162", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void print(Node node, int level)", "signatureAfterChange": " \t \tpublic void print(Node node, int level)", "diff": ["-\t\t\t\t\tArrayList nodes = new ArrayList();", "+\t\t\t\t\tArrayList<Node> nodes = new ArrayList<Node>();", "-\t\t\t\t\tCollections.sort(nodes, new Comparator() {", "-\t\t\t\t\t\tpublic int compare(Object arg0, Object arg1) {", "-\t\t\t\t\t\t\tNode a = (Node)arg0;", "-\t\t\t\t\t\t\tNode b = (Node)arg1;", "+\t\t\t\t\tCollections.sort(nodes, new Comparator<Node>() {", "+\t\t\t\t\t\tpublic int compare(Node a, Node b) {", "-\t\t\t\t\t\tprint((Node)nodes.get(i), level + 1);", "+\t\t\t\t\t\tprint(nodes.get(i), level + 1);"]}], "num": 56116}