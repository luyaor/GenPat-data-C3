{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d7aa35219a7a4e36f14a415b2e0baf6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c79276f42c8627a0b19eaa6d3d63d6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "6050683e0a29a2ce91eeb18855edde35d92968d3", "commitAfterChange": "7ae0ec009226b61c906fbfa0a444004595fa526b", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\t\tint flags = 0;", "-\t\tif (OS.WIN32_VERSION >= OS.VERSION(4, 10)) {", "-\t\t\tflags = OS.GetLayout(handle);", "-\t\t}", "-\t\tif (hwnd != 0 && data.ps != null && (flags & OS.LAYOUT_RTL) == 0) {", "+\t\tif (hwnd != 0 && data.ps != null) {", "+\t\t\t\tif (OS.WIN32_VERSION >= OS.VERSION(4, 10)) {", "+\t\t\t\t\tif ((OS.GetLayout(handle) & OS.LAYOUT_RTL) != 0) {", "+\t\t\t\t\t\tint nBytes = OS.GetRegionData (sysRgn, 0, null);", "+\t\t\t\t\t\tint [] lpRgnData = new int [nBytes / 4];", "+\t\t\t\t\t\tOS.GetRegionData (sysRgn, nBytes, lpRgnData);", "+\t\t\t\t\t\tint newSysRgn = OS.ExtCreateRegion(new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);", "+\t\t\t\t\t\tOS.DeleteObject(sysRgn);", "+\t\t\t\t\t\tsysRgn = newSysRgn;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0991eac7134d6beb57a8abaabc71ee82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "9e95aaf2a1a521c6d4626680bf41576e2ba6de33", "commitAfterChange": "7b64278836e940f972e402ff21f77d1e9c9613fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public static Program [] getPrograms ()", "signatureAfterChange": "\r public static Program [] getPrograms ()", "diff": ["-\tProgram [] programs = new Program [1024];\r", "+\t/* \r", "+\t* The Windows registry maintains a list of file extensions and their related\r", "+\t* editors. In addition, W2K and XP maintain a list of applications which can\r", "+\t* be used to populate the 'Open As' dialog. 2 articles in MSDN describe this\r", "+\t* mechanism: 'File Associations: Arbitrary File Types' and 'Creating a File\r", "+\t* Association'.\r", "+\t* There does not seem to be an API to retrieve the list of programs in the\r", "+\t* 'Open As' dialog. As a result, on W2K machines and above, we look up the\r", "+\t* registry as described in the articles above. On Win95 and NT machines, we use\r", "+\t* the list of applications registered to one or more file classes.\r", "+\t*/\r", "+\tif (OS.IsWin95) return getFileClassPrograms ();\r", "+\tif ((OS.WIN32_MAJOR << 16 | OS.WIN32_MINOR) < (4 << 16 | 10)) return getFileClassPrograms ();\r", "+\tString KEY = \"Applications\";\r", "+\t/* Use the character encoding for the default locale */\r", "+\tTCHAR key = new TCHAR (0, KEY, true);\r", "+\tint [] phkResult = new int [1];\r", "+\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) != 0) {\r", "+\t\treturn  new Program [0];\r", "+\t}\r", "+\tProgram [] programs = new Program [128];\r", "-\twhile (OS.RegEnumKeyEx (OS.HKEY_CLASSES_ROOT, dwIndex, lpName, lpcName, null, null, null, ft) != OS.ERROR_NO_MORE_ITEMS) {\t\r", "-\t\tString path = lpName.toString (0, lpcName [0]);\r", "+\twhile (OS.RegEnumKeyEx (phkResult[0], dwIndex, lpName, lpcName, null, null, null, ft) != OS.ERROR_NO_MORE_ITEMS) {\t\r", "+\t\tString path = KEY + \"\\\\\" + lpName.toString (0, lpcName [0]);\r", "-\t\t\t\tProgram [] newPrograms = new Program [programs.length + 1024];\r", "+\t\t\t\tProgram [] newPrograms = new Program [programs.length + 128];\r"]}], "num": 54090}