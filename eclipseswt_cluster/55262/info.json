{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f46957a5631c078f59038ae75bad6cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f771a6ec8c8b0225d5acfc5e5ee3e172", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1fe35fc97a96bb681fc8e1538ccb42b41e2391ac", "commitAfterChange": "479daafcf8fd589f7842f28b15e853de0f1dfefd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\t//fApplicationProc= OS.NewApplicationCallbackUPP(this, \"handleApplicationCallback\");", "-\t//if (fApplicationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tCallback cb= new Callback(this, \"handleApplicationCallback\", 3);", "-\tfApplicationProc= cb.getAddress();", "-\t\t", "-\tint[] mask2= new int[] {", "+\ttimerProc= createCallback(\"timerProc\", 2);", "+\tcaretProc= createCallback(\"caretProc\", 2);", "+\tmouseHoverProc= createCallback(\"mouseHoverProc\", 2);", "+", "+\tfWindowProc= createCallback(\"handleWindowCallback\", 3);", "+\tfControlActionProc= createCallback(\"handleControlAction\", 2);", "+\tfUserPaneDrawProc= createCallback(\"handleUserPaneDraw\", 2);", "+\tfUserPaneHitTestProc= createCallback(\"handleUserPaneHitTest\", 2);", "+\tfDataBrowserDataProc= createCallback(\"handleDataBrowserDataCallback\", 5);", "+\tfDataBrowserCompareProc= createCallback(\"handleDataBrowserCompareCallback\", 4);", "+\tfDataBrowserItemNotificationProc= createCallback(\"handleDataBrowserItemNotificationCallback\", 3);", "+\tfMenuProc= createCallback(\"handleMenuCallback\", 3);", "+\t", "+\t// create standard event handler", "+\tfApplicationProc= createCallback(\"handleApplicationCallback\", 3);", "+\tint[] mask= new int[] {", "-\tif (OS.InstallEventHandler(OS.GetApplicationEventTarget(), fApplicationProc, mask2, 0) != OS.kNoErr)", "+\tif (OS.InstallEventHandler(OS.GetApplicationEventTarget(), fApplicationProc, mask, 0) != OS.kNoErr)", "-\t//fWindowProc= OS.NewWindowCallbackUPP(this, \"handleWindowCallback\");", "-\t//if (fWindowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleWindowCallback\", 3);", "-\tfWindowProc= cb.getAddress();", "-", "-\t//timerProc = OS.NewEventLoopTimerUPP(this, \"timerProc\");", "-\t//if (timerProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"timerProc\", 2);", "-\ttimerProc= cb.getAddress();", "-", "-\t//caretProc = OS.NewEventLoopTimerUPP2(this, \"caretProc\");", "-\t//if (caretProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"caretProc\", 2);", "-\tcaretProc= cb.getAddress();", "-\t//fControlActionProc= OS.NewControlActionUPP(this, \"handleControlAction\");", "-\t//if (fControlActionProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleControlAction\", 2);", "-\tfControlActionProc= cb.getAddress();", "-\t", "-\t//fUserPaneDrawProc= OS.NewControlUserPaneDrawUPP(this, \"handleUserPaneDraw\");", "-\t//if (fUserPaneDrawProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleUserPaneDraw\", 2);", "-\tfUserPaneDrawProc= cb.getAddress();", "-\t", "-\t//fUserPaneHitTestProc= OS.NewUserPaneHitTestUPP(this, \"handleUserPaneHitTest\");", "-\t//if (fUserPaneHitTestProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleUserPaneHitTest\", 3);", "-\tfUserPaneHitTestProc= cb.getAddress();", "-\t", "-\t//fDataBrowserDataProc= OS.NewDataBrowserDataCallbackUPP(this, \"handleDataBrowserDataCallback\");", "-\t//if (fDataBrowserDataProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleDataBrowserDataCallback\", 5);", "-\tfDataBrowserDataProc= cb.getAddress();", "-\t//fDataBrowserCompareProc= OS.NewDataBrowserCompareCallbackUPP(this, \"handleDataBrowserCompareCallback\");", "-\t//if (fDataBrowserCompareProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleDataBrowserCompareCallback\", 4);", "-\tfDataBrowserCompareProc= cb.getAddress();", "-\t//fDataBrowserItemNotificationProc= OS.NewDataBrowserItemNotificationCallbackUPP(this, \"handleDataBrowserItemNotificationCallback\");", "-\t//if (fDataBrowserItemNotificationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleDataBrowserItemNotificationCallback\", 3);", "-\tfDataBrowserItemNotificationProc= cb.getAddress();", "-\t", "-\t//fMenuProc= OS.NewMenuCallbackUPP(this, \"handleMenuCallback\");", "-\t//if (fMenuProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleMenuCallback\", 3);", "-\tfMenuProc= cb.getAddress();", "-\t", "-\t//int textInputProc= OS.NewTextCallbackUPP(this, \"handleTextCallback\");", "-\t//if (textInputProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"handleTextCallback\", 3);", "-\tint textInputProc= cb.getAddress();", "-\t", "-\tint[] mask= new int[] {", "-\t\t// OS.kEventClassTextInput, OS.kEventTextInputUnicodeForKeyEvent,", "-\t\t", "+\tint textInputProc= createCallback(\"handleTextCallback\", 3);", "+\tmask= new int[] {", "-\t//mouseHoverProc = OS.NewEventLoopTimerUPP3(this, \"mouseHoverProc\");", "-\t//if (mouseHoverProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tcb= new Callback(this, \"mouseHoverProc\", 2);", "-\tmouseHoverProc= cb.getAddress();", "-", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff72b876e5c9acf2316b18ac5402f6b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a11744334121c31b812d90d1d6c723eac3d03dc2", "commitAfterChange": "4fa4bc4e404ed5145f5af4675fb9f63f4317eaa5", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\tfApplicationProc= OS.NewApplicationCallbackUPP(this, \"handleApplicationCallback\");", "-\tif (fApplicationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fApplicationProc= OS.NewApplicationCallbackUPP(this, \"handleApplicationCallback\");", "+\t//if (fApplicationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tCallback cb= new Callback(this, \"handleApplicationCallback\", 3);", "+\tfApplicationProc= cb.getAddress();", "-\tfWindowProc= OS.NewWindowCallbackUPP(this, \"handleWindowCallback\");", "-\tif (fWindowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fWindowProc= OS.NewWindowCallbackUPP(this, \"handleWindowCallback\");", "+\t//if (fWindowProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleWindowCallback\", 3);", "+\tfWindowProc= cb.getAddress();", "-\ttimerProc = OS.NewEventLoopTimerUPP(this, \"timerProc\");", "-\tif (timerProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//timerProc = OS.NewEventLoopTimerUPP(this, \"timerProc\");", "+\t//if (timerProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"timerProc\", 2);", "+\ttimerProc= cb.getAddress();", "-\tcaretProc = OS.NewEventLoopTimerUPP2(this, \"caretProc\");", "-\tif (caretProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//caretProc = OS.NewEventLoopTimerUPP2(this, \"caretProc\");", "+\t//if (caretProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"caretProc\", 2);", "+\tcaretProc= cb.getAddress();", "-\tfControlActionProc= OS.NewControlActionUPP(this, \"handleControlAction\");", "-\tif (fControlActionProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fControlActionProc= OS.NewControlActionUPP(this, \"handleControlAction\");", "+\t//if (fControlActionProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleControlAction\", 2);", "+\tfControlActionProc= cb.getAddress();", "-\tfUserPaneDrawProc= OS.NewControlUserPaneDrawUPP(this, \"handleUserPaneDraw\");", "-\tif (fUserPaneDrawProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fUserPaneDrawProc= OS.NewControlUserPaneDrawUPP(this, \"handleUserPaneDraw\");", "+\t//if (fUserPaneDrawProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleUserPaneDraw\", 2);", "+\tfUserPaneDrawProc= cb.getAddress();", "-\tfUserPaneHitTestProc= OS.NewUserPaneHitTestUPP(this, \"handleUserPaneHitTest\");", "-\tif (fUserPaneHitTestProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fUserPaneHitTestProc= OS.NewUserPaneHitTestUPP(this, \"handleUserPaneHitTest\");", "+\t//if (fUserPaneHitTestProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleUserPaneHitTest\", 3);", "+\tfUserPaneHitTestProc= cb.getAddress();", "-\tfDataBrowserDataProc= OS.NewDataBrowserDataCallbackUPP(this, \"handleDataBrowserDataCallback\");", "-\tif (fDataBrowserDataProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tfDataBrowserCompareProc= OS.NewDataBrowserCompareCallbackUPP(this, \"handleDataBrowserCompareCallback\");", "-\tif (fDataBrowserCompareProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tfDataBrowserItemNotificationProc= OS.NewDataBrowserItemNotificationCallbackUPP(this, \"handleDataBrowserItemNotificationCallback\");", "-\tif (fDataBrowserItemNotificationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fDataBrowserDataProc= OS.NewDataBrowserDataCallbackUPP(this, \"handleDataBrowserDataCallback\");", "+\t//if (fDataBrowserDataProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleDataBrowserDataCallback\", 5);", "+\tfDataBrowserDataProc= cb.getAddress();", "+\t//fDataBrowserCompareProc= OS.NewDataBrowserCompareCallbackUPP(this, \"handleDataBrowserCompareCallback\");", "+\t//if (fDataBrowserCompareProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleDataBrowserCompareCallback\", 4);", "+\tfDataBrowserCompareProc= cb.getAddress();", "+\t//fDataBrowserItemNotificationProc= OS.NewDataBrowserItemNotificationCallbackUPP(this, \"handleDataBrowserItemNotificationCallback\");", "+\t//if (fDataBrowserItemNotificationProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleDataBrowserItemNotificationCallback\", 3);", "+\tfDataBrowserItemNotificationProc= cb.getAddress();", "-\tfMenuProc= OS.NewMenuCallbackUPP(this, \"handleMenuCallback\");", "-\tif (fMenuProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//fMenuProc= OS.NewMenuCallbackUPP(this, \"handleMenuCallback\");", "+\t//if (fMenuProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleMenuCallback\", 3);", "+\tfMenuProc= cb.getAddress();", "-\t/*", "-\tfControlProc= OS.NewControlCallbackUPP(this, \"handleControlCallback\");", "-\tif (fControlProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t*/", "+\t//int textInputProc= OS.NewTextCallbackUPP(this, \"handleTextCallback\");", "+\t//if (textInputProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"handleTextCallback\", 3);", "+\tint textInputProc= cb.getAddress();", "-\tint textInputProc= OS.NewTextCallbackUPP(this, \"handleTextCallback\");", "-\tif (textInputProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tmouseHoverProc = OS.NewEventLoopTimerUPP3(this, \"mouseHoverProc\");", "-\tif (mouseHoverProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t//mouseHoverProc = OS.NewEventLoopTimerUPP3(this, \"mouseHoverProc\");", "+\t//if (mouseHoverProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tcb= new Callback(this, \"mouseHoverProc\", 2);", "+\tmouseHoverProc= cb.getAddress();"]}], "num": 55262}