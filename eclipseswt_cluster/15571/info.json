{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fc8f0ac4742569bd05d5e3541168132", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2273f7051dab4c2aab575e213c6b5556", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "diff": ["-\twarnUnimpl(\"Test test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData not written\");", "+\tImageData data = null;", "+\tImage image = null;", "+\t", "+\ttry {", "+\t\timage = new Image(display, data);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 10, 1, new PaletteData(0xff0000, 0x00ff00, 0x0000ff));", "+\ttry {", "+\t\timage = new Image(display, data);", "+\t\tfail(\"Unsupported color depth\");", "+\t\timage.dispose();", "+\t} catch (SWTException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\timage = new Image(null, data);", "+\timage.dispose();", "+", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\timage = new Image(display, data);", "+\timage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47e9be8e518b67935f7a3a7e72628cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void test_getBounds()", "signatureAfterChange": "  public void test_getBounds()", "diff": ["-\twarnUnimpl(\"Test test_getBounds not written\");", "+\tRectangle bounds = new Rectangle(0, 0, 10, 20);", "+\tImage image = new Image(display, bounds.width, bounds.height);", "+\timage.dispose();", "+\ttry {", "+\t\timage.getBounds();", "+\t\tfail(\"No exception thrown for disposed image\");", "+\t} catch (SWTException e) {", "+\t\timage.dispose();", "+\t}", "+\t\t", "+\t// creates bitmap image", "+\timage = new Image(display, bounds.width, bounds.height);", "+\tRectangle bounds1 = image.getBounds();", "+\timage.dispose();", "+\tassertEquals(\":a:\", bounds, bounds1);", "+\t", "+\t// create icon image", "+\tImageData imageData = new ImageData(bounds.width, bounds.height, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\timage = new Image(display, imageData);", "+\tbounds1 = image.getBounds();", "+\timage.dispose();", "+\tassertEquals(\":b:\", bounds, bounds1);"]}], "num": 15571}