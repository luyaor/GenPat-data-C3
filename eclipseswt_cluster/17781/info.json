{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "170ebd37a4294b2263fc529563e4f135", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6373c3482da3ebf25e8b98863d6bf4d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \r int processMouse (int info)", "signatureAfterChange": "\r \r int Ph_EV_BUT_PRESS (int widget, int info)", "diff": ["-int processMouse (int info) {\r", "+int Ph_EV_BUT_PRESS (int widget, int info) {\r", "-\t\tif (ev.type == OS.Ph_EV_BUT_PRESS) {\r", "-\t\t\tint data = OS.PhGetData (cbinfo.event);\r", "-\t\t\tif (data == 0) return OS.Pt_END;\r", "-\t\t\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "-\t\t\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\t\tint data = OS.PhGetData (cbinfo.event);\r", "+\t\tif (data == 0) return OS.Pt_END;\r", "+\t\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\t\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "-\t\t\t/* Grab pointer */\r", "-\t\t\tif (!(menu != null && pe.buttons == OS.Ph_BUTTON_MENU)) {\r", "-\t\t\t\tif (pe.click_count == 1) {\r", "-\t\t\t\t\tPhRect_t rect = new PhRect_t ();\r", "-\t\t\t\t\tPhPoint_t pos = new PhPoint_t();\r", "-\t\t\t\t\tpos.x = pe.pos_x;\r", "-\t\t\t\t\tpos.y = pe.pos_y;\r", "-\t\t\t\t\trect.ul_x = rect.lr_x = (short) (pos.x + ev.translation_x);\r", "-\t\t\t\t\trect.ul_y = rect.lr_y = (short) (pos.y + ev.translation_y);\r", "-\t\t\t\t\tint rid = OS.PtWidgetRid (handle);\r", "-\t\t\t\t\tint input_group = OS.PhInputGroup (0);\r", "-\t\t\t\t\tint flags = OS.Ph_DRAG_KEY_MOTION | OS.Ph_DRAG_TRACK | OS.Ph_TRACK_DRAG;\r", "-\t\t\t\t\tOS.PhInitDrag (rid, flags, rect, null, input_group, null, null, null, pos, null);\r", "+\t\t/* Grab pointer */\r", "+\t\tif (!(menu != null && pe.buttons == OS.Ph_BUTTON_MENU)) {\r", "+\t\t\tif (pe.click_count == 1) {\r", "+\t\t\t\tPhRect_t rect = new PhRect_t ();\r", "+\t\t\t\tPhPoint_t pos = new PhPoint_t();\r", "+\t\t\t\tpos.x = pe.pos_x;\r", "+\t\t\t\tpos.y = pe.pos_y;\r", "+\t\t\t\trect.ul_x = rect.lr_x = (short) (pos.x + ev.translation_x);\r", "+\t\t\t\trect.ul_y = rect.lr_y = (short) (pos.y + ev.translation_y);\r", "+\t\t\t\tint rid = OS.PtWidgetRid (handle);\r", "+\t\t\t\tint input_group = OS.PhInputGroup (0);\r", "+\t\t\t\tint flags = OS.Ph_DRAG_KEY_MOTION | OS.Ph_DRAG_TRACK | OS.Ph_TRACK_DRAG;\r", "+\t\t\t\tOS.PhInitDrag (rid, flags, rect, null, input_group, null, null, null, pos, null);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\r", "+\t\tint result = super.Ph_EV_BUT_PRESS (widget, info);\r", "+\t\r", "+\t\t/* Set focus for the a CANVAS with no children */\r", "+\t\tif ((style & SWT.NO_FOCUS) == 0) {\r", "+\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "+\t\t\t\tif (OS.PtWidgetChildFront (handle) == 0) {\r", "+\t\t\t\t\tsetFocus ();\r", "-\t\r", "-\t\t\tint result = super.processMouse (info);\r", "-\t\r", "-\t\t\t/* Set focus for the a CANVAS with no children */\r", "-\t\t\tif ((style & SWT.NO_FOCUS) == 0) {\r", "-\t\t\t\tif (pe.buttons == OS.Ph_BUTTON_SELECT) {\r", "-\t\t\t\t\tif (OS.PtWidgetChildFront (handle) == 0) {\r", "-\t\t\t\t\t\tsetFocus ();\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\treturn result;\r", "+\t\treturn result;\r", "-\treturn super.processMouse (info);\r", "-}\r", "+\treturn super.Ph_EV_BUT_PRESS (widget, info);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510e2ae9389693d896b9f62023ef5af3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "40ae2a746cec0132025185d602a721edfecbbfea", "commitAfterChange": "885970fba9f9572edc0cc5d534fd80ee6db9c6f0", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "\r public Point toControl (Point point)", "signatureAfterChange": "\r public Point toControl (int x, int y)", "diff": ["+ */\r", "+public Point toControl (int x, int y) {\r", "+\tcheckWidget ();\r", "+\tPOINT pt = new POINT ();\r", "+\tpt.x = x;  pt.y = y; \r", "+\tOS.ScreenToClient (handle, pt);\r", "+\treturn new Point (pt.x, pt.y);\r", "+}\r", "-\tpt.x = point.x;  pt.y = point.y; \r", "-\tOS.ScreenToClient (handle, pt);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d9590c17917e6ae6d9429f18f676fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "40ae2a746cec0132025185d602a721edfecbbfea", "commitAfterChange": "885970fba9f9572edc0cc5d534fd80ee6db9c6f0", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " public Point toControl (Point point)", "signatureAfterChange": " public Point toControl (int x, int y)", "diff": ["+}", "+public Point toControl (int x, int y) {\r", "+\tcheckWidget();\r", "+\tshort [] root_x = new short [1], root_y = new short [1];\r", "+\tOS.XtTranslateCoords (handle, (short) 0, (short) 0, root_x, root_y);\r", "+\treturn new Point (x - root_x [0], y - root_y [0]);\r", "- */", "-\tOS.XtTranslateCoords (handle, (short) 0, (short) 0, root_x, root_y);\r", "-\treturn new Point (point.x - root_x [0], point.y - root_y [0]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3de833cca7147752419808571c5ef8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "40ae2a746cec0132025185d602a721edfecbbfea", "commitAfterChange": "885970fba9f9572edc0cc5d534fd80ee6db9c6f0", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 126, "signatureBeforeChange": " public Point toDisplay (Point point)", "signatureAfterChange": "\r public Point toDisplay (int x, int y)", "diff": ["+}\r", "+public Point toDisplay (int x, int y) {\r", "+\tcheckWidget();\r", "+\tOS.XtTranslateCoords (handle, (short) x, (short) y, root_x, root_y);\r", "+\treturn new Point (root_x [0], root_y [0]);\r", "-\tshort [] root_x = new short [1], root_y = new short [1];\r", "-\tOS.XtTranslateCoords (handle, (short) point.x, (short) point.y, root_x, root_y);\r", "-\treturn new Point (root_x [0], root_y [0]);\r"]}], "num": 17781}