{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d6a7fcda779ed8ba65bb7e8349abcda", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4615aa6ed8595daf7baff00cdfc57c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\rpublic void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": "\rpublic void javaToNative (Object object, TransferData transferData)", "diff": ["- */\rpublic void javaToNative (Object object, TransferData transferData){\r\tif (!checkURL(object) || !isSupportedType(transferData)) {\r\t\tDND.error(DND.ERROR_INVALID_DATA);\r\t}\r\ttransferData.result = -1;\r\tString url = (String)object;\r\tint count = url.length();\r\tchar[] chars = new char[count];\r\turl.getChars(0, count, chars, 0);\r\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, count);\r\tif (cfstring == 0) return;\r\ttry {\r\t\tCFRange range = new CFRange();\r\t\trange.length = chars.length;\r\t\tint encoding = OS.CFStringGetSystemEncoding();\r\t\tint[] size = new int[1];\r\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);\r\t\tif (numChars == 0 || size[0] == 0) return;\r\t\tbyte[] buffer = new byte[size[0]];\r\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);\r\t\tif (numChars == 0) return;\r\t\ttransferData.data = new byte[][] {buffer};\r\t\ttransferData.result = 0;\r\t} finally {\r\t\tOS.CFRelease(cfstring);\r\t}\r}\r\r/**", "+ */\rpublic void javaToNative (Object object, TransferData transferData){\r\tif (!checkURL(object) || !isSupportedType(transferData)) {\r\t\tDND.error(DND.ERROR_INVALID_DATA);\r\t}\r\tString url = (String)object;\r\tNSString nsString = NSString.stringWith(url);\r\ttransferData.data = NSURL.static_URLWithString_(nsString);\r}\r\r/**"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3912b678773e70c8b7c40cd4cb7d7799", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\ttransferData.result = -1;", "-\tString string = (String)object;", "-\tint count = string.length();", "-\tchar[] chars = new char[count];", "-\tstring.getChars(0, count, chars, 0);", "-\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, count);", "-\tif (cfstring == 0) return;", "-\ttry {", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = chars.length;", "-\t\tint encoding = OS.CFStringGetSystemEncoding();", "-\t\tint[] size = new int[1];", "-\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);", "-\t\tif (numChars == 0 || size[0] == 0) return;", "-\t\tbyte[] buffer = new byte[size[0]];", "-\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\t\tif (numChars == 0) return;", "-\t\ttransferData.data = new byte[1][];", "-\t\ttransferData.data[0] = buffer;", "-\t\ttransferData.result = 0;", "-\t} finally {", "-\t\tOS.CFRelease(cfstring);", "-\t}", "+\ttransferData.data = NSString.stringWith((String) object);"]}], "num": 63011}