{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc82c10395f9d1890601fc8ed0c1bdab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "834196f844e9ec62edb35fdc2de8e687", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 60, "signatureBeforeChange": " int processMouseEnter (MacMouseEvent mme)", "signatureAfterChange": "  int kEventMouseMoved (int nextHandler, int theEvent, int userData)", "diff": ["-int processMouseEnter (MacMouseEvent mme) {", "-    /* AW", "-\tXCrossingEvent xEvent = new XCrossingEvent ();", "-\tOS.memmove (xEvent, callData, XCrossingEvent.sizeof);", "-\tif (xEvent.mode != OS.NotifyNormal) return 0;", "-\tif (xEvent.subwindow != 0) return 0;", "-    */", "-\tEvent event = new Event ();", "-\tPoint p= MacUtil.toControl(handle, mme.getWhere());", "-\tevent.x = p.x;", "-\tevent.y = p.y;", "-\tpostEvent (SWT.MouseEnter, event);", "-\treturn 0;", "-}", "+int kEventMouseMoved (int nextHandler, int theEvent, int userData) {", "+\tsendMouseEvent (SWT.MouseMove, theEvent);", "+\treturn OS.eventNotHandledErr;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d67dca376fc700cdbdd721b560c390", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "99e5f8f60bd4f2b02ed6bcd9cbe99223ea735fbe", "commitAfterChange": "1ada0f1f2bcb03f9d1968e500fd4c6e92dfc8db7", "methodNumberBeforeChange": 394, "methodNumberAfterChange": 395, "signatureBeforeChange": " \t\t\t \tpublic static int OSType(String s)", "signatureAfterChange": " \tpublic static native short HasDepth(int gdHandle, short depth, short whichFlags, short flags);", "diff": ["-\t\t\t", "-\tpublic static int OSType(String s) {", "-\t\treturn ((s.charAt(0) & 0xff) << 24) | ((s.charAt(1) & 0xff) << 16) | ((s.charAt(2) & 0xff) << 8) | (s.charAt(3) & 0xff);", "-\t}", "+\tpublic static native short HasDepth(int gdHandle, short depth, short whichFlags, short flags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0751207b031ea84bbb33167f6463cfea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scale.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 1, "signatureBeforeChange": " int processSelection (Object callData)", "signatureAfterChange": "  int actionProc (int theControl, int partCode)", "diff": ["+int actionProc (int theControl, int partCode) {", "+\tEvent event = new Event ();", "+\tsendEvent (SWT.Selection);", "+\tDisplay display = getDisplay ();", "+\tdisplay.update ();", "+\treturn 0;", "+}", "-}", "-int processSelection (Object callData) {", "-\tMacControlEvent macEvent= (MacControlEvent) callData;", "-", "-\tEvent event = new Event ();", "-    if (macEvent.getPartCode() == OS.kControlIndicatorPart) {\t// end of drag or continuos drag", "-\t\tif (macEvent.isMouseDown()) {", "-\t\t\tevent.detail = SWT.DRAG;\t// continuos drag", "-\t\t} else {", "-\t\t\t/*", "-\t\t\t * Do not set the detail field to SWT.DRAG", "-\t\t\t * to indicate that the dragging has ended.", "-\t\t\t */", "-\t\t}", "-    }", "-\t", "-\tsendEvent (SWT.Selection, event);", "-\t", "-\t/* AW FIXME: may be we need the following here too...", "-\tif (macEvent.isMouseDown()) {", "-\t\tint wHandle= OS.GetControlOwner(handle);", "-\t\tif (wHandle != 0) {", "-\t\t\tgetDisplay().updateWindow(wHandle);", "-\t\t}", "-\t}", "-\t*/", "-\treturn 0;", "-}"]}], "num": 59239}