{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f0bf42b365e5a387dea16b7082ecf7a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0b79cf50b6fdc4c7361a91501c0ee24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "44a400ffa16c0a6daf37b0faae377089d19140f0", "commitAfterChange": "a335a83292ce7e5e08eef4e82a3e46e4462a2874", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  void setToolTipText (long rootWidget, long tipWidget, String string)", "signatureAfterChange": "  void setToolTipText (long rootWidget, long tipWidget, String string)", "diff": ["-\t\tOS.gtk_widget_set_tooltip_text (rootWidget, null);", "-\t\t/*", "-\t\t* Bug in GTK. In GTK 2.12, due to a miscalculation of window", "-\t\t* coordinates, using gtk_tooltip_trigger_tooltip_query ()", "-\t\t* to update an existing a tooltip will result in the tooltip ", "-\t\t* being displayed at a wrong position. The fix is to send out ", "-\t\t* 2 fake GDK_MOTION_NOTIFY events (to mimic the GTK call) which ", "-\t\t* contain the proper x and y coordinates.", "-\t\t*/", "+\t\t", "-\t\tlong /*int*/ tipWindow = gtk_widget_get_window (rootWidget);", "-\t\tif (tipWindow != 0) {", "-\t\t\tint [] x = new int [1], y = new int [1];", "-\t\t\tlong /*int*/ window = OS.gdk_window_at_pointer (x, y);", "-\t\t\tlong /*int*/ [] user_data = new long /*int*/ [1];", "-\t\t\tif (window != 0) OS.gdk_window_get_user_data (window, user_data);", "-\t\t\tif (tipWidget == user_data [0]) {", "-\t\t\t\teventPtr = OS.gdk_event_new (OS.GDK_MOTION_NOTIFY);", "-\t\t\t\tGdkEventMotion event = new GdkEventMotion ();", "-\t\t\t\tevent.type = OS.GDK_MOTION_NOTIFY;", "-\t\t\t\tevent.window = OS.g_object_ref (tipWindow);", "-\t\t\t\tevent.x = x [0];", "-\t\t\t\tevent.y = y [0];", "-\t\t\t\tOS.gdk_window_get_origin (window, x, y);", "-\t\t\t\tevent.x_root = event.x + x [0];", "-\t\t\t\tevent.y_root = event.y + y [0];", "-\t\t\t\tOS.memmove (eventPtr, event, GdkEventMotion.sizeof);", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "+\t\tif (OS.GTK_VERSION < OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_set_tooltip_text (rootWidget, null);", "+\t\t\t/*", "+\t\t\t * Bug in GTK. In GTK 2.12, due to a miscalculation of window", "+\t\t\t * coordinates, using gtk_tooltip_trigger_tooltip_query ()", "+\t\t\t * to update an existing a toboltip will result in the tooltip ", "+\t\t\t * being displayed at a wrong position. The fix is to send out ", "+\t\t\t * 2 fake GDK_MOTION_NOTIFY events (to mimic the GTK call) which ", "+\t\t\t * contain the proper x and y coordinates.", "+\t\t\t */", "+\t\t\tlong /*int*/ tipWindow = gtk_widget_get_window (rootWidget);", "+\t\t\tif (tipWindow != 0) {", "+\t\t\t\tint [] x = new int [1], y = new int [1];", "+\t\t\t\tlong /*int*/ window = OS.gdk_window_at_pointer (x, y);", "+\t\t\t\tlong /*int*/ [] user_data = new long /*int*/ [1];", "+\t\t\t\tif (window != 0) OS.gdk_window_get_user_data (window, user_data);", "+\t\t\t\tif (tipWidget == user_data [0]) {", "+\t\t\t\t\teventPtr = OS.gdk_event_new (OS.GDK_MOTION_NOTIFY);", "+\t\t\t\t\tGdkEventMotion event = new GdkEventMotion ();", "+\t\t\t\t\tevent.type = OS.GDK_MOTION_NOTIFY;", "+\t\t\t\t\tevent.window = OS.g_object_ref (tipWindow);", "+\t\t\t\t\tevent.x = x [0];", "+\t\t\t\t\tevent.y = y [0];", "+\t\t\t\t\tOS.gdk_window_get_origin (window, x, y);", "+\t\t\t\t\tevent.x_root = event.x + x [0];", "+\t\t\t\t\tevent.y_root = event.y + y [0];", "+\t\t\t\t\tOS.memmove (eventPtr, event, GdkEventMotion.sizeof);", "+\t\t\t\t\tOS.gtk_main_do_event (eventPtr);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414e8b40e7fa52a96212243d5ff9b719", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "dbf56d36cdf507645ea89bcdaab54b5bf0bd26ff", "commitAfterChange": "b09edce9791823c67c1356847c83053f4c27bd85", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\tupdate ();", "-\tdrawRectangles (rectangles);", "+\tif (!OS.GTK3) {", "+\t\tupdate ();", "+\t\tdrawRectangles (rectangles);", "+\t}", "+\t", "+\tif (OS.GTK3) {", "+\t\toverlay = OS.gtk_window_new (OS.GTK_WINDOW_POPUP);", "+\t\tOS.gtk_window_set_skip_taskbar_hint (overlay, true);", "+\t\tOS.gtk_window_set_title (overlay, new byte [1]);", "+\t\tOS.gtk_widget_realize (overlay);", "+\t\tlong /*int*/ overlayWindow = OS.gtk_widget_get_window (overlay);", "+\t\tOS.gdk_window_set_override_redirect (overlayWindow, true);", "+\t\tOS.gtk_widget_override_background_color (overlay, OS.GTK_STATE_FLAG_NORMAL, new GdkRGBA());", "+\t\tlong /*int*/ region = OS.gdk_region_new ();", "+\t\tOS.gtk_widget_shape_combine_region (overlay, region);", "+\t\tOS.gtk_widget_input_shape_combine_region (overlay, region);", "+\t\tOS.gdk_region_destroy (region);", "+\t\tRectangle bounds = display.getBounds();", "+\t\tOS.gtk_window_move (overlay, bounds.x, bounds.y);", "+\t\tOS.gtk_window_resize (overlay, bounds.width, bounds.height);", "+\t\tOS.gtk_widget_show (overlay);", "+\t}", "-\tGdkEvent gdkEvent = new GdkEvent();", "-\twhile (tracking) {", "-\t\tif (parent != null && parent.isDisposed ()) break;", "-\t\tlong /*int*/ eventPtr;", "-\t\twhile (true) {", "+\tTracker oldTracker = display.tracker;", "+\tdisplay.tracker = this;", "+\ttry {", "+\t\twhile (tracking) {", "+\t\t\tif (parent != null && parent.isDisposed ()) break;", "-\t\t\teventPtr = OS.gdk_event_get ();", "-\t\t\tif (eventPtr != 0) {", "-\t\t\t\tbreak;", "-\t\t\t} else {", "-\t\t\t\tdisplay.runAsyncMessages (false);", "-\t\t\t\ttry { Thread.sleep(50); } catch (Exception ex) {}", "-\t\t\t}", "+\t\t\t/*", "+\t\t\t* This call to gdk_threads_leave() is a temporary work around", "+\t\t\t* to avoid deadlocks when gdk_threads_init() is called by native", "+\t\t\t* code outside of SWT (i.e AWT, etc). It ensures that the current", "+\t\t\t* thread leaves the GTK lock before calling the function below. ", "+\t\t\t*/", "+\t\t\tOS.gdk_threads_leave();", "+\t\t\tOS.g_main_context_iteration (0, true);", "+\t\t\tdisplay.runAsyncMessages (false);", "-\t\tOS.memmove (gdkEvent, eventPtr, GdkEvent.sizeof);", "-\t\tlong /*int*/ widget = OS.gtk_get_event_widget (eventPtr);", "-\t\tswitch (gdkEvent.type) {", "-\t\t\tcase OS.GDK_MOTION_NOTIFY: gtk_motion_notify_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_BUTTON_RELEASE: gtk_button_release_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_KEY_PRESS: gtk_key_press_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_KEY_RELEASE: gtk_key_release_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_BUTTON_PRESS:", "-\t\t\tcase OS.GDK_2BUTTON_PRESS:", "-\t\t\tcase OS.GDK_3BUTTON_PRESS:", "-\t\t\tcase OS.GDK_ENTER_NOTIFY:", "-\t\t\tcase OS.GDK_LEAVE_NOTIFY:", "-\t\t\t\t/* Do not dispatch these */", "-\t\t\t\tbreak;", "-\t\t\tcase OS.GDK_EXPOSE:", "-\t\t\t\tupdate ();", "-\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t}", "-\t\tOS.gdk_event_free (eventPtr);", "-\t\tdisplay.runAsyncMessages (false);", "+\t} finally {", "+\t\tdisplay.tracker = oldTracker;", "-\t\tupdate ();", "-\t\tdrawRectangles (rectangles);", "+\t\tif (!OS.GTK3) {", "+\t\t\tupdate ();", "+\t\t\tdrawRectangles (rectangles);", "+\t\t}", "+\tif (overlay != 0) {", "+\t\tOS.gtk_widget_destroy (overlay);", "+\t\toverlay = 0;", "+\t}"]}], "num": 4571}