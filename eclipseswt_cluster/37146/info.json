{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9e9ed4cd51e8f0c3f9d0de070a89c3c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39115b6cd6033a7dc935c5473343e455", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "59447a1923b1252d62656622d6666900d696c50d", "commitAfterChange": "0ea92b64c1d5ed49d057d55bd33c4fd1813b7dae", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["+\tif (icon != null) icon.dispose ();", "+\ticon = null;", "-\t\tif (hIcon != 0) OS.DestroyIcon (hIcon);", "-\t\thIcon = 0;", "-\t\t\t\t/* Copy the bitmap in case it's a DIB */", "-\t\t\t\tint hBitmap = image.handle;", "-\t\t\t\tBITMAP bm = new BITMAP ();", "-\t\t\t\tOS.GetObject (hBitmap, BITMAP.sizeof, bm);", "-\t\t\t\tbyte [] lpvBits = new byte [(bm.bmWidth + 15) / 16 * 2 * bm.bmHeight];", "-\t\t\t\tint hMask = OS.CreateBitmap (bm.bmWidth, bm.bmHeight, 1, 1, lpvBits);", "-\t\t\t\tint hDC = OS.GetDC (handle);", "-\t\t\t\tint hdcMem = OS.CreateCompatibleDC (hDC);", "-\t\t\t\tint hColor = OS.CreateCompatibleBitmap (hDC, bm.bmWidth, bm.bmHeight);", "-\t\t\t\tOS.SelectObject (hdcMem, hColor);", "-\t\t\t\tint hdcBmp = OS.CreateCompatibleDC (hDC);", "-\t\t\t\tOS.SelectObject (hdcBmp, hBitmap);", "-\t\t\t\tOS.BitBlt (hdcMem, 0, 0, bm.bmWidth, bm.bmHeight, hdcBmp, 0, 0, OS.SRCCOPY);", "-\t\t\t\tICONINFO info = new ICONINFO ();", "-\t\t\t\tinfo.fIcon = true;", "-\t\t\t\tinfo.hbmMask = hMask;", "-\t\t\t\tinfo.hbmColor = hColor;", "-\t\t\t\thImage = hIcon = OS.CreateIconIndirect (info);", "-\t\t\t\tOS.DeleteObject (hMask);", "-\t\t\t\tOS.DeleteObject(hColor);", "-\t\t\t\tOS.DeleteDC (hdcBmp);", "-\t\t\t\tOS.DeleteDC (hdcMem);", "-\t\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t\tImageData data = image.getImageData ();", "+\t\t\t\tImageData mask = data.getTransparencyMask ();", "+\t\t\t\ticon = new Image (display, data, mask);", "+\t\t\t\thImage = icon.handle;", "-\t\tif (hIcon == 0 && (style & SWT.BORDER) != 0) {", "+\t\tif (icon == null && (style & SWT.BORDER) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd294012edb09b4708d5cbd71d55c8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (transferData.data.length == 0) return null;", "-\tint count = transferData.data.length;", "+\tNSArray array = (NSArray) transferData.data;", "+\tif (array.count() == 0) return null;", "+\tint count = array.count();", "-\t\tbyte[] data = transferData.data[i];", "-\t\tint url = 0;", "-\t\tif (transferData.type == HFSID) {", "-\t\t\tbyte[] fsspec = new byte[data.length - 10];", "-\t\t\tSystem.arraycopy(data, 10, fsspec, 0, fsspec.length);", "-\t\t\tbyte[] fsRef = new byte[80];", "-\t\t\tif (OS.FSpMakeFSRef(fsspec, fsRef) != OS.noErr) return null;", "-\t\t\turl = OS.CFURLCreateFromFSRef(OS.kCFAllocatorDefault, fsRef);", "-\t\t\tif (url == 0) return null;", "-\t\t}", "-\t\tif (transferData.type == FURLID) {", "-\t\t\tint encoding = OS.kCFStringEncodingUTF8;", "-\t\t\turl = OS.CFURLCreateWithBytes(OS.kCFAllocatorDefault, data, data.length, encoding, 0);", "-\t\t\tif (url == 0) return null;", "-\t\t}", "-\t\ttry {", "-\t\t\tint path = OS.CFURLCopyFileSystemPath(url, OS.kCFURLPOSIXPathStyle);", "-\t\t\tif (path == 0) return null;", "-\t\t\ttry {", "-\t\t\t\tint length = OS.CFStringGetLength(path);", "-\t\t\t\tif (length == 0) return null;", "-\t\t\t\tchar[] buffer= new char[length];", "-\t\t\t\tCFRange range = new CFRange();", "-\t\t\t\trange.length = length;", "-\t\t\t\tOS.CFStringGetCharacters(path, range, buffer);", "-\t\t\t\tfileNames[i] = new String(buffer);", "-\t\t\t} finally {", "-\t\t\t\tOS.CFRelease(path);", "-\t\t\t}", "-\t\t} finally {", "-\t\t\tOS.CFRelease(url);", "-\t\t}", "+\t\tNSString string = new NSString(array.objectAtIndex(i));", "+\t\tchar[] chars = new char[string.length()];", "+\t\tstring.getCharacters_(chars);", "+\t\tfileNames[i] = new String(chars);"]}], "num": 37146}