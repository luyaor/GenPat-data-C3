{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e4a4d367636cd01e42ff0ecf3e01d50", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40701b22249a27509bafd7544046d2c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "303960b3a16409637e6f45a0816fe9808bc1fafa", "commitAfterChange": "3a15463365b45a97473205b008d442cefe8a671f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \tid getRoleDescriptionAttribute (int childID)", "signatureAfterChange": " \t \tid getRoleDescriptionAttribute (int childID)", "diff": ["-\t\t\tString appRole = roleToOs (event.detail);", "-\t\t\tString appSubrole = null;", "-\t\t\tint index = appRole.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tappSubrole = appRole.substring(index + 1);", "-\t\t\t\tappRole = appRole.substring(0, index);", "+\t\t\tif (event.detail == ACC.ROLE_TABITEM) {", "+\t\t\t\treturnValue = new NSString(OS.NSAccessibilityRoleDescription (NSString.stringWith(\"AXTab\").id, 0));", "+\t\t\t} else {", "+\t\t\t\tString appRole = roleToOs (event.detail);", "+\t\t\t\tString appSubrole = null;", "+\t\t\t\tint index = appRole.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tappSubrole = appRole.substring(index + 1);", "+\t\t\t\t\tappRole = appRole.substring(0, index);", "+\t\t\t\t}", "+\t\t\t\tNSString nsAppRole = NSString.stringWith(appRole);", "+\t\t\t\tNSString nsAppSubrole = null;", "+\t\t\t\t", "+\t\t\t\tif (appSubrole != null) nsAppSubrole = NSString.stringWith(appSubrole);", "+\t\t\t\treturnValue = new NSString(OS.NSAccessibilityRoleDescription (((nsAppRole != null) ? nsAppRole.id : 0), (nsAppSubrole != null) ? nsAppSubrole.id : 0));", "-\t\t\tNSString nsAppRole = NSString.stringWith(appRole);", "-\t\t\tNSString nsAppSubrole = null;", "-\t\t\t", "-\t\t\tif (appSubrole != null) nsAppSubrole = NSString.stringWith(appSubrole);", "-\t\t\treturnValue = new NSString(OS.NSAccessibilityRoleDescription (((nsAppRole != null) ? nsAppRole.id : 0), (nsAppSubrole != null) ? nsAppSubrole.id : 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5363289fbd6132de9ed51bfec6d411c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-\t\t\tint index = current.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tString key = current.substring(0, index).trim();", "-\t\t\t\tString value = current.substring(index + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tif (key.equals(USER_AGENT)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "-\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "-\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\tif (current != null) {", "+\t\t\t\tint index = current.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t\t}"]}], "num": 53046}