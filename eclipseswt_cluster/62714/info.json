{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f2abf74096b1812fbfcb48c42b1a3ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0cde0c04841c6690ab4c22da1838bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "f5c7e4c9254cd6daa97b7649a31d13c6c5d0de6c", "commitAfterChange": "189429edfa9fbff796a0033ed821365347e21fb7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative(Object object, TransferData transferData)", "diff": ["+\ttransferData.result = 0;", "-\t// build a byte array from data", "-\t", "-\t// create a string separated by \"new lines\" to represent list of files", "-\tString nativeFormat = \"\";", "+\tif (files.length == 0) return;", "+", "+\tStringBuffer sb = new StringBuffer();", "-\t\tnativeFormat += \"file:\"+files[i]+\"\\r\";", "+\t\tsb.append(URI_LIST_PREFIX);", "+\t\tsb.append(files[i]);", "+\t\tsb.append(URI_LIST_SEPARATOR);", "-\tbyte[] buffer = Converter.wcsToMbcs(null, nativeFormat, true);", "-\t// pass byte array on to super to convert to native", "-\tsuper.javaToNative(buffer, transferData);", "+\tbyte[] buffer = Converter.wcsToMbcs(null, sb.toString(), true);", "+\tint pValue = OS.g_malloc(buffer.length);", "+\tif (pValue == 0) return;", "+\tOS.memmove(pValue, buffer, buffer.length);", "+\ttransferData.length = buffer.length;", "+\ttransferData.format = 8;", "+\ttransferData.pValue = pValue;", "+\ttransferData.result = 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d1c9bf8e147cdfbd79f5d9e868c9f88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "147d1615f621339f30d0227193f0b040907c9480", "commitAfterChange": "4f94a8e41c5f58fd8cc31f50891f992413c14d7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative(Object object, TransferData transferData)", "diff": ["+\ttransferData.result = 0;", "-\t// build a byte array from data", "-\t", "-\t// create a string separated by \"new lines\" to represent list of files", "-\tString nativeFormat = \"\";", "+\tif (files.length == 0) return;", "+", "+\tStringBuffer sb = new StringBuffer();", "-\t\tnativeFormat += \"file:\"+files[i]+\"\\r\";", "+\t\tsb.append(URI_LIST_PREFIX);", "+\t\tsb.append(files[i]);", "+\t\tsb.append(URI_LIST_SEPARATOR);", "-\tbyte[] buffer = Converter.wcsToMbcs(null, nativeFormat, true);", "-\t// pass byte array on to super to convert to native", "-\tsuper.javaToNative(buffer, transferData);", "+\tbyte[] buffer = Converter.wcsToMbcs(null, sb.toString(), true);", "+\tint pValue = OS.XtMalloc(buffer.length);", "+\tif (pValue == 0) return;", "+\tOS.memmove(pValue, buffer, buffer.length);", "+\ttransferData.length = buffer.length;", "+\ttransferData.format = 8;", "+\ttransferData.pValue = pValue;", "+\ttransferData.result = 1;"]}], "num": 62714}