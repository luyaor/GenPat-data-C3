{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6476c9bffeaa8637e5987096d8c25988", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9626a4862eac75d1e194f26b0a7174", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  Variant convertToJS (Object value)", "signatureAfterChange": "  Variant convertToJS (Object value)", "diff": ["+\tif (value == null) {", "+\t\treturn new Variant ();", "+\t}", "-\t\t\t\t\tVariant variant = convertToJS (currentObject);", "-\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "-\t\t\t\t\tvariant.dispose ();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tVariant variant = convertToJS (currentObject);", "+\t\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "+\t\t\t\t\t\tvariant.dispose ();", "+\t\t\t\t\t} catch (SWTException e) {", "+\t\t\t\t\t\t/* invalid return value type */", "+\t\t\t\t\t\tauto.dispose ();", "+\t\t\t\t\t\tarray.dispose ();", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t}", "+\t\t\tauto.dispose ();", "-\t\t}\t\t", "+\t\t}", "-\treturn new Variant ();", "+\tSWT.error (SWT.ERROR_INVALID_RETURNVALUE);", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ecef821906b060b66e88c20a5fd1e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  Object convertToJava (Variant variant)", "signatureAfterChange": "  Object convertToJava (Variant variant)", "diff": ["-\t\t\t\t\t\t\t\targs[i] = convertToJava (current);", "-\t\t\t\t\t\t\t\tcurrent.dispose ();", "+\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\targs[i] = convertToJava (current);", "+\t\t\t\t\t\t\t\t\tcurrent.dispose ();", "+\t\t\t\t\t\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t\t\t\t\t\t/* invalid argument value type */", "+\t\t\t\t\t\t\t\t\tcurrent.dispose ();", "+\t\t\t\t\t\t\t\t\tauto.dispose ();", "+\t\t\t\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tauto.dispose ();", "+\t\t\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);"]}], "num": 56155}