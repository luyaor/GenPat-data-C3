{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "182f6e157f3c6dba2308d0cba1b96ef5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6feabbc1205e4b18599df3f627dea779", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 85, "signatureBeforeChange": " void handleExtendedModify(ExtendedModifyEvent event)", "signatureAfterChange": " \t \tvoid handleModify (ModifyEvent event)", "diff": ["-}", "-void handleExtendedModify(ExtendedModifyEvent event) {", "-\tif (event.length == 0) return;", "-\tStyleRange style;", "-\tif (event.length == 1 || text.getTextRange(event.start, event.length).equals(text.getLineDelimiter())) {", "-\t\t// Have the new text take on the style of the text to its right (during", "-\t\t// typing) if no style information is active.", "-\t\tint caretOffset = text.getCaretOffset();", "-\t\tstyle = null;", "-\t\tif (caretOffset < text.getCharCount()) style = text.getStyleRangeAtOffset(caretOffset);", "-\t\tif (style != null) {", "-\t\t\tstyle = (StyleRange) style.clone ();", "-\t\t\tstyle.start = event.start;", "-\t\t\tstyle.length = event.length;", "-\t\t} else {", "-\t\t\tstyle = new StyleRange(event.start, event.length, null, null, SWT.NORMAL);", "-\t\t}\t\t", "-\t\tif (boldButton.getSelection()) style.fontStyle |= SWT.BOLD;", "-\t\tif (italicButton.getSelection()) style.fontStyle |= SWT.ITALIC;", "-\t\tstyle.underline = underlineButton.getSelection();", "-\t\tstyle.strikeout = strikeoutButton.getSelection();", "-\t\tif (!style.isUnstyled()) text.setStyleRange(style);", "-\t} else {", "-\t\t// paste occurring, have text take on the styles it had when it was", "-\t\t// cut/copied", "-\t\tfor (int i=0; i<cachedStyles.size(); i++) {", "-\t\t\tstyle = (StyleRange)cachedStyles.elementAt(i);", "-\t\t\tStyleRange newStyle = (StyleRange)style.clone();", "-\t\t\tnewStyle.start = style.start + event.start;", "-\t\t\ttext.setStyleRange(newStyle);", "-}", "+\t", "+\tvoid handleModify (ModifyEvent event) {", "+\t\tif (newCharCount > 0 && start >= 0) {", "+\t\t\tStyleRange style = new StyleRange();", "+\t\t\tif (textFont != null && !textFont.equals(styledText.getFont())) {", "+\t\t\t\tstyle.font = textFont;", "+\t\t\t} else {", "+\t\t\t\tstyle.fontStyle = SWT.NONE;", "+\t\t\t\tif (boldControl.getSelection()) style.fontStyle |= SWT.BOLD;", "+\t\t\t\tif (italicControl.getSelection()) style.fontStyle |= SWT.ITALIC;", "+\t\t\t}", "+\t\t\tstyle.foreground = textForeground;", "+\t\t\tstyle.background = textBackground;", "+\t\t\tint underlineStyle = styleState & UNDERLINE;", "+\t\t\tif (underlineStyle != 0) {", "+\t\t\t\tstyle.underline = true;", "+\t\t\t\tstyle.underlineColor = underlineColor;", "+\t\t\t\tswitch (underlineStyle) {", "+\t\t\t\t\tcase UNDERLINE_SINGLE:\tstyle.underlineStyle = SWT.UNDERLINE_SINGLE; break;", "+\t\t\t\t\tcase UNDERLINE_DOUBLE:\tstyle.underlineStyle = SWT.UNDERLINE_DOUBLE; break;", "+\t\t\t\t\tcase UNDERLINE_SQUIGGLE:\tstyle.underlineStyle = SWT.UNDERLINE_SQUIGGLE; break;", "+\t\t\t\t\tcase UNDERLINE_ERROR:\tstyle.underlineStyle = SWT.UNDERLINE_ERROR; break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif ((styleState & STRIKEOUT) != 0) {", "+\t\t\t\tstyle.strikeout = true;", "+\t\t\t\tstyle.strikeoutColor = strikeoutColor;", "+\t\t\t}", "+\t\t\tint borderStyle = styleState & BORDER;", "+\t\t\tif (borderStyle != 0) {", "+\t\t\t\tstyle.borderColor = borderColor;", "+\t\t\t\tswitch (borderStyle) {", "+\t\t\t\t\tcase BORDER_DASH:\tstyle.borderStyle = SWT.BORDER_DASH; break;", "+\t\t\t\t\tcase BORDER_DOT:\tstyle.borderStyle = SWT.BORDER_DOT; break;", "+\t\t\t\t\tcase BORDER_SOLID: style.borderStyle = SWT.BORDER_SOLID; break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tint[] ranges = {start, newCharCount};", "+\t\t\tStyleRange[] styles = {style}; ", "+\t\t\tstyledText.setStyleRanges(start, newCharCount, ranges, styles);", "+\t\t}", "+\t\tdisposeRanges(selectedRanges);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1021c190d02ca4ac6d8b823a66e23a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "d60307042554a2ad80509163fd1d15e5566b488d", "commitAfterChange": "501cddef55d98c472a410dbb933c0adba1cf9644", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tint hwnd = parent.handle;", "+\tint hwnd = parent.handle, hwndHeader = parent.hwndHeader;", "+\tRECT headerRect = new RECT ();", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\tint cp = parent.getCodePage ();\t\t", "-\tRECT rect = new RECT ();", "-\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "-\t\t\tint hFont = -1;", "-\t\t\tif (item.cellFont != null) hFont = item.cellFont [index];", "+\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "-\t\t\tif (index == 0) {", "-\t\t\t\tif ((parent.style & SWT.VIRTUAL) == 0 && !item.cached && !parent.painted) {", "-\t\t\t\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "-\t\t\t\t\ttvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "-\t\t\t\t\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "-\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM;", "-\t\t\t\t}", "-\t\t\t\trect.left = item.handle;", "-\t\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\t\tcolumnWidth = Math.max (columnWidth, rect.right);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tint imageWidth = 0, textWidth = 0;", "-\t\t\t\tImage image = item.images != null ? item.images [index] : null;", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tRectangle bounds = image.getBounds ();", "-\t\t\t\t\timageWidth = bounds.width;", "-\t\t\t\t}", "-\t\t\t\tString string = item.strings != null ? item.strings [index] : null;", "-\t\t\t\tif (string != null) {", "-\t\t\t\t\tTCHAR buffer = new TCHAR (cp, string, false);", "-\t\t\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "-\t\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);", "-\t\t\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "-\t\t\t\t\ttextWidth = rect.right - rect.left;", "-\t\t\t\t}", "-\t\t\t\tcolumnWidth = Math.max (columnWidth, imageWidth + textWidth + Tree.INSET * 3);", "+\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "+\t\t\tRECT itemRect = item.getBounds (index, true, true, false, false, false, hDC);", "+\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\t\tif (parent.hooks (SWT.MeasureItem)) {", "+\t\t\t\tint nSavedDC = OS.SaveDC (hDC);", "+\t\t\t\tGCData data = new GCData ();", "+\t\t\t\tdata.device = display;", "+\t\t\t\tdata.hFont = hFont;", "+\t\t\t\tGC gc = GC.win32_new (hDC, data);", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.index = index;", "+\t\t\t\tevent.x = itemRect.left;", "+\t\t\t\tevent.y = itemRect.top;", "+\t\t\t\tevent.width = itemRect.right - itemRect.left;", "+\t\t\t\tevent.height = itemRect.bottom - itemRect.top;", "+\t\t\t\tparent.sendEvent (SWT.MeasureItem, event);", "+\t\t\t\tevent.gc = null;", "+\t\t\t\tgc.dispose ();", "+\t\t\t\tOS.RestoreDC (hDC, nSavedDC);", "+\t\t\t\tif (isDisposed () || parent.isDisposed ()) break;", "+\t\t\t\t//itemRect.left = event.x;", "+\t\t\t\titemRect.right = event.x + event.width;", "+\t\t\tcolumnWidth = Math.max (columnWidth, itemRect.right - headerRect.left);", "-\tTCHAR buffer = new TCHAR (cp, text, false);", "+\tRECT rect = new RECT ();", "+\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "+\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, false);", "-\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\theaderWidth += Tree.HEADER_EXTRA;", "-\t}", "+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) headerWidth += Tree.HEADER_EXTRA;", "-\t\tint margin = 0, hwndHeader = parent.hwndHeader;", "+\t\tint margin = 0;"]}], "num": 8507}