{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f235df5026ba047ca8eb1c6819950766", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bec2769d5e3f148594d7749931762fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk1x/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "4d28edf7b62e3b5fcfaf6380e9333fcb7245709a", "commitAfterChange": "78c1d41fb96aa3284956287788943ed35e806ebd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["-\tint handle = parent.handle;", "+\t", "+\t/* The parent is a Canvas; its handle is a GtkDrawingArea.", "+\t * Get the DA's GDK window to draw on.", "+\t */", "-\tOS.memmove (widget, handle, GtkWidget.sizeof);", "+\tOS.memmove (widget, parent.handle, GtkWidget.sizeof);", "-\tif (window == 0) return false;", "+", "+\t/* Create the GC, and set the working color and rop. */", "-\t//GdkColor color = new GdkColor();", "-\t//color.pixel = gcvalues.foreground_pixel ^ gcvalues.background_pixel;", "-\t//color.red = (short)(gcvalues.foreground_red ^ gcvalues.background_red);", "-\t//color.green = (short)(gcvalues.foreground_green ^ gcvalues.background_green);", "-\t//color.blue = (short)(gcvalues.foreground_blue ^ gcvalues.background_blue);", "-\tColor COLOR_DARK_RED = new Color (Display.getCurrent(), 0x80,0xFF,0xFF);", "-\tOS.gdk_gc_set_foreground(gc, COLOR_DARK_RED.handle);", "+\t/* Actually, we should look at the background and foreground colors.", "+\t * This would require distinguishing between the cases when the GC", "+\t * gives the color as RGB or Pixel, and in the case of Pixel, we", "+\t * would need to distinguish between direct and indexed color.", "+\t * In general, it's not easy to find out the RGB value of a GdkColor", "+\t * (somebody please correct me if I am wrong).", "+\t */", "+\tGdkColor c = new GdkColor();", "+\tc.red = c.green = c.blue = (short)0xFFFF;", "+\tOS.gdk_color_alloc(OS.gdk_colormap_get_system(), c);", "+\tOS.gdk_gc_set_foreground(gc, c);", "+\t", "+\t/* Draw the caret */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28125c92db1f602943d2ce6d78f491ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "4d28edf7b62e3b5fcfaf6380e9333fcb7245709a", "commitAfterChange": "78c1d41fb96aa3284956287788943ed35e806ebd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["-\tint handle = parent.handle;", "+\t", "+\t/* The parent is a Canvas; its handle is a GtkDrawingArea.", "+\t * Get the DA's GDK window to draw on.", "+\t */", "-\tOS.memmove (widget, handle, GtkWidget.sizeof);", "+\tOS.memmove (widget, parent.handle, GtkWidget.sizeof);", "-\tif (window == 0) return false;", "+", "+\t/* Create the GC, and set the working color and rop. */", "-\t//GdkColor color = new GdkColor();", "-\t//color.pixel = gcvalues.foreground_pixel ^ gcvalues.background_pixel;", "-\t//color.red = (short)(gcvalues.foreground_red ^ gcvalues.background_red);", "-\t//color.green = (short)(gcvalues.foreground_green ^ gcvalues.background_green);", "-\t//color.blue = (short)(gcvalues.foreground_blue ^ gcvalues.background_blue);", "-\tColor COLOR_DARK_RED = new Color (Display.getCurrent(), 0x80,0xFF,0xFF);", "-\tOS.gdk_gc_set_foreground(gc, COLOR_DARK_RED.handle);", "+\t/* Actually, we should look at the background and foreground colors.", "+\t * This would require distinguishing between the cases when the GC", "+\t * gives the color as RGB or Pixel, and in the case of Pixel, we", "+\t * would need to distinguish between direct and indexed color.", "+\t * In general, it's not easy to find out the RGB value of a GdkColor", "+\t * (somebody please correct me if I am wrong).", "+\t */", "+\tGdkColor c = new GdkColor();", "+\tc.red = c.green = c.blue = (short)0xFFFF;", "+\tOS.gdk_color_alloc(OS.gdk_colormap_get_system(), c);", "+\tOS.gdk_gc_set_foreground(gc, c);", "+\t", "+\t/* Draw the caret */"]}], "num": 23846}