{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6111fa7450f8ba89845a7cff2e8a520c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe0c86ee5133402594d0c3c1b91702e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mozilla Generation/org/eclipse/swt/tools/internal/MozillaGenerator.java", "commitBeforeChange": "406c8c992cf65a539972fff86f32349d8393b97b", "commitAfterChange": "bf4c318f3b06d9d908cfed97ca03e09810154460", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tString getClassName(String declaration)", "signatureAfterChange": " \tString getClassName(String declaration)", "diff": ["-\t// special case for nsISupports that has no super class: class NS_NO_VTABLE nsISupports {", "+\t// Special case for nsISupports that has no super class: class NS_NO_VTABLE nsISupports {", "-\t\treturn declaration.substring(declaration.indexOf(\"class NS_NO_VTABLE \")", "-\t\t\t\t+ \"class NS_NO_VTABLE \".length(), endIndex);", "+\t\tString searchString = \"class NS_NO_VTABLE NS_SCRIPTABLE\";", "+\t\tint startIndex = declaration.indexOf(searchString);", "+\t\tif (startIndex == -1) {", "+\t\t\tsearchString = \"class NS_NO_VTABLE \";", "+\t\t\tstartIndex = declaration.indexOf(searchString);", "+\t\t}", "+\t\treturn declaration.substring(startIndex + searchString.length(), endIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b1f2ea062df15b4cc0eda6dd28f3cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "45e7cb56ec54dbaabbc35532642a56d2bbcf1119", "commitAfterChange": "2a77638689e90a994723410853e87bc8d365587d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void generateDynamicFunctionCall(JNIMethod method, JNIParameter[] params, JNIType returnType, JNIType returnType64, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(JNIMethod method, JNIParameter[] params, JNIType returnType, JNIType returnType64, boolean needsReturn)", "diff": ["+\t\tboolean isStruct = param.getFlag(FLAG_STRUCT);", "-\t\t\toutput(cast.substring(1, cast.length() - 1));", "+\t\t\tcast = cast.substring(1, cast.length() - 1);", "+\t\t\tif (isStruct) {", "+\t\t\t\tint index = cast.lastIndexOf('*');", "+\t\t\t\tif (index != -1) cast = cast.substring(0, index).trim();", "+\t\t\t}", "+\t\t\toutput(cast);", "-\t\t\toutput(paramType.getTypeSignature4(!paramType.equals(paramType64), param.getFlag(FLAG_STRUCT)));", "+\t\t\toutput(paramType.getTypeSignature4(!paramType.equals(paramType64), isStruct));"]}], "num": 43009}