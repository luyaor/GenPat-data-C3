{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3470c24244f3102a812012f932d91e2f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598ab351c209a07e496409b29320149c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r void insertItemIntoRow(CoolItem item, Vector row, int x_root, int rowY)", "signatureAfterChange": "\r void insertItemIntoRow(CoolItem item, int rowIndex, int x_root)", "diff": ["-void insertItemIntoRow(CoolItem item, Vector row, int x_root, int rowY) {\r", "+void insertItemIntoRow(CoolItem item, int rowIndex, int x_root) {\r", "-\tint height = item.getSize().y;\r", "-\tif (row.size() == 0) {\r", "-\t\titem.setBounds(0, rowY, barWidth, height);\t\t\r", "-\t\trow.addElement(item);\r", "-\t\treturn;\r", "-\t}\r", "-\t\r", "+\tint rowY = items[rowIndex][0].getBounds().y;\r", "-\tfor (index = 0; index < row.size(); index++) {\r", "-\t\tCoolItem next = (CoolItem) row.elementAt(index);\r", "-\t\tif (x < next.getBounds().x) break;\r", "+\tfor (index = 0; index < items[rowIndex].length; index++) {\r", "+\t\tif (x < items[rowIndex][index].getBounds().x) break;\r", "-\trow.insertElementAt(item, index);\r", "+\tint oldLength = items[rowIndex].length;\r", "+\tCoolItem[] newRow = new CoolItem[oldLength + 1];\r", "+\tSystem.arraycopy(items[rowIndex], 0, newRow, 0, index);\r", "+\tnewRow[index] = item;\r", "+\tSystem.arraycopy(items[rowIndex], index, newRow, index + 1, oldLength - index);\r", "+\titems[rowIndex] = newRow;\r", "-\t\tCoolItem left = (CoolItem) row.elementAt(index - 1);\r", "+\t\tCoolItem left = items[rowIndex][index - 1];\r", "-\tint width = 0;\r", "-\tif (index < row.size() - 1) {\r", "-\t\tCoolItem right = (CoolItem) row.elementAt(index + 1);\r", "+\tint width = 0, height = item.getSize().y;\r", "+\tif (index < items[rowIndex].length - 1) {\r", "+\t\tCoolItem right = items[rowIndex][index + 1];\r", "-\titem.requestedWidth = width;\r", "+\tRectangle bounds = item.getBounds();\r", "+\titem.requestedWidth = bounds.width;\r", "+\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe7fe17c4cf7d314833d8e95b3e2a3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r void createItem (CoolItem item, int index)", "diff": ["-\tint itemCount = getItemCount();\r", "+\tint itemCount = getItemCount(), row = 0;\r", "-\tif (index < itemCount) {\r", "-\t\tfor (int i = 0; i < rows.size(); i++) {\r", "-\t\t\tVector row = (Vector) rows.elementAt(i);\r", "-\t\t\tif (row.size() > index) {\r", "-\t\t\t\trow.insertElementAt(item, index);\r", "-\t\t\t\treturn;\r", "-\t\t\t} else {\r", "-\t\t\t\tindex -= row.size();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t} else {\r", "-\t\tVector lastRow = (Vector) rows.lastElement();\r", "-\t\tlastRow.addElement(item);\t\r", "+\tif (items.length == 0) {\r", "+\t\titems = new CoolItem[1][1];\r", "+\t\titems[0][0] = item;\t\r", "+\telse {\r", "+\t\tint i = index;\r", "+\t\t/* find the row to insert into */\r", "+\t\tif (index < itemCount) {\r", "+\t\t\twhile (i > items[row].length) {\r", "+\t\t\t\ti -= items[row].length;\r", "+\t\t\t\trow++;\r", "+\t\t\t}   \r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\trow = items.length - 1;\r", "+\t\t\ti = items[row].length;\t\r", "+\t\t}\r", "+\t\tint oldLength = items[row].length;\r", "+\t\tCoolItem[] newRow = new CoolItem[oldLength + 1];\r", "+\t\tSystem.arraycopy(items[row], 0, newRow, 0, i);\r", "+\t\tnewRow[index] = item;\r", "+\t\tSystem.arraycopy(items[row], i, newRow, i + 1, oldLength - i);\r", "+\t\titems[row] = newRow;\r", "+\t}\r", "+\titem.requestedWidth = CoolItem.MINIMUM_WIDTH;\r", "+\trelayout();\r", "+}\r"]}], "num": 41796}