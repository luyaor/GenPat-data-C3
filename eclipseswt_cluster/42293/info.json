{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6223f99a0253dd5e713567d2bae5ce0e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca2d7d567ff28b59b1e7cfadc02ca05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "33702c0f14302d7231ea3f607b86a900e03829aa", "commitAfterChange": "d089b2cf79ce87d2a82f677ea1a4ce5a5ba9d4a4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void init(ImageData image)", "signatureAfterChange": "  void init(ImageData image)", "diff": ["-\tint width = image.width;", "-\tint height = image.height;", "+\tint width = this.width = image.width;", "+\tint height = this.height = image.height;", "-\tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "-\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\tint /*long*/ data = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\tint stride, destDepth;", "+\tint /*long*/ data, pixbuf = 0;", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\tstride = Cairo.cairo_format_stride_for_width(Cairo.CAIRO_FORMAT_ARGB32, width);", "+\t\tdata = surfaceData = OS.g_malloc(stride * height);", "+\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tif (surface == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tdestDepth = 32;", "+\t} else {", "+\t\tpixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "+\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tstride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\tdata = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\tdestDepth = 24;", "+\t}", "-\tif (!palette.isDirect || image.depth != 24 || stride != image.bytesPerLine || palette.redMask != 0xFF0000 || palette.greenMask != 0xFF00 || palette.blueMask != 0xFF) {", "+\tif (!palette.isDirect || image.depth != destDepth || stride != image.bytesPerLine || palette.redMask != 0xFF0000 || palette.greenMask != 0xFF00 || palette.blueMask != 0xFF) {", "-\t\t\t\tbuffer, 24, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "+\t\t\t\tbuffer, destDepth, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "-\t\t\t\tbuffer, 24, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "+\t\t\t\tbuffer, destDepth, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "-\tint /*long*/ pixmap = OS.gdk_pixmap_new (OS.GDK_ROOT_PARENT(), width, height, -1);", "-\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "-\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tOS.gdk_pixbuf_render_to_drawable(pixbuf, pixmap, gdkGC, 0, 0, 0, 0, width, height, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "-\tOS.g_object_unref(gdkGC);", "-\tOS.g_object_unref(pixbuf);", "-\t", "+\tif (OS.GTK_VERSION < OS.VERSION(2, 22, 0) ) {", "+\t\tint /*long*/ pixmap = OS.gdk_pixmap_new (OS.GDK_ROOT_PARENT(), width, height, -1);", "+\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "+\t\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.gdk_pixbuf_render_to_drawable(pixbuf, pixmap, gdkGC, 0, 0, 0, 0, width, height, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\tOS.g_object_unref(gdkGC);", "+\t\tOS.g_object_unref(pixbuf);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a646f3d9df112f7aa0fb45db7f75cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e754a125a2aabb2687419e882314322d456d220e", "commitAfterChange": "97d7bbf8cfdbb6f96f4719f1f7be7a03fa93a649", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["-\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint colormap = OS.gdk_colormap_get_system();", "-\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "-\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "-\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\tif (gdkImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tbyte[] line = new byte[stride];", "-\t\tfor (int y=0; y<srcHeight; y++) {", "-\t\t\tint offset = pixels + (y * stride);", "-\t\t\tOS.memmove(line, offset, stride);", "-\t\t\tfor (int x=0; x<srcWidth; x++) {", "-\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "-\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "-\t\t\t\t} else {", "-\t\t\t\t\tline[x*4+3] = 0;", "+\t\tif (pixbuf != 0) {", "+\t\t\tint colormap = OS.gdk_colormap_get_system();", "+\t\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "+\t\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "+\t\t\tif (gdkImagePtr != 0) {", "+\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\t\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\t\tbyte[] line = new byte[stride];", "+\t\t\t\tfor (int y=0; y<srcHeight; y++) {", "+\t\t\t\t\tint offset = pixels + (y * stride);", "+\t\t\t\t\tOS.memmove(line, offset, stride);", "+\t\t\t\t\tfor (int x=0; x<srcWidth; x++) {", "+\t\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "+\t\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline[x*4+3] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove(offset, line, stride);", "+\t\t\t\t}", "+\t\t\t\tOS.g_object_unref(gdkImagePtr);", "+\t\t\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "+\t\t\t\tif (scaledPixbuf != 0) {", "+\t\t\t\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "+\t\t\t\t\t\tscaledPixbuf, data.drawable,", "+\t\t\t\t\t\t0, 0, destX, destY, destWidth, destHeight,", "+\t\t\t\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\t\t\t\tOS.g_object_unref(scaledPixbuf);", "-\t\t\tOS.memmove(offset, line, stride);", "+\t\t\tOS.g_object_unref(pixbuf);", "-\t\tOS.g_object_unref(gdkImagePtr);", "-\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "-\t\tOS.g_object_unref(pixbuf);", "-\t\tif (scaledPixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "-\t\t\tscaledPixbuf, data.drawable,", "-\t\t\t0, 0, destX, destY, destWidth, destHeight,", "-\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "-\t\tOS.g_object_unref(scaledPixbuf);"]}], "num": 42293}