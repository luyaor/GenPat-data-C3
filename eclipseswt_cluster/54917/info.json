{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7b8397fe1a848070b8c4ec071e1a684", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880d02d7ccf6abef742af37957566195", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "9bf1c7999a1b49f1045c3672d5ea17cfad9052ea", "commitAfterChange": "a920e4e81433a14cac9186d61a1339fba3f843d1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void scroll(TableItem item, int x, int y)", "signatureAfterChange": " private void scroll(TableItem item, int x, int y)", "diff": ["-\tTableItem showItem = null;", "-\tint itemIndex = table.indexOf(item);", "-\tif (coordinates.y - area.y < SCROLL_WIDTH) {", "-\t\tshowItem = table.getItem(Math.max(0, itemIndex - 1));", "-\t} else if ((area.y + area.height - coordinates.y) < SCROLL_WIDTH) {", "-\t\tshowItem = table.getItem(Math.min(table.getItemCount() - 1, itemIndex + 1));", "+\tint top = table.getTopIndex();", "+\tint newTop = -1;", "+\t// scroll if two lines from top or bottom", "+\tint scroll_width = 2*table.getItemHeight();", "+\tif (coordinates.y < area.y + scroll_width) {", "+\t\tnewTop = Math.max(0, top - 1);", "+\t} else if (coordinates.y > area.y + area.height - scroll_width) {", "+\t\tnewTop = Math.min(table.getItemCount() - 1, top + 1);", "-\tif (showItem != null) {", "-\t\ttable.showItem(showItem);", "+\tif (newTop != -1 && newTop != top) {", "+\t\ttable.setTopIndex(newTop);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0e87f697c653d7a5c10c0ff0812636", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "c9ae028b479ea6ff6fa3bf55d7dce7c1fdcee0fa", "commitAfterChange": "dbb093ad20806c115c38c643e4df1e2b5ae9d7b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private void scroll(TableItem item, int x, int y)", "signatureAfterChange": " private void scroll(TableItem item, int x, int y)", "diff": ["-\tTableItem showItem = null;", "-\tint itemIndex = table.indexOf(item);", "-\tif (coordinates.y - area.y < SCROLL_WIDTH) {", "-\t\tshowItem = table.getItem(Math.max(0, itemIndex - 1));", "-\t} else if ((area.y + area.height - coordinates.y) < SCROLL_WIDTH) {", "-\t\tshowItem = table.getItem(Math.min(table.getItemCount() - 1, itemIndex + 1));", "+\tint top = table.getTopIndex();", "+\tint newTop = -1;", "+\t// scroll if two lines from top or bottom", "+\tint scroll_width = 2*table.getItemHeight();", "+\tif (coordinates.y < area.y + scroll_width) {", "+\t\tnewTop = Math.max(0, top - 1);", "+\t} else if (coordinates.y > area.y + area.height - scroll_width) {", "+\t\tnewTop = Math.min(table.getItemCount() - 1, top + 1);", "-\tif (showItem != null) {", "-\t\ttable.showItem(showItem);", "-\t}\t", "+\tif (newTop != -1 && newTop != top) {", "+\t\ttable.setTopIndex(newTop);", "+\t}"]}], "num": 54917}