{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5a9373643cb4af8f97e7310aa7d743f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30b3c628324bab046e8543d25977a9aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/browser/Test_BrowserSuite.java", "commitBeforeChange": "6ae2f941e63b125a38d6775f86dc260f4db7687f", "commitAfterChange": "528129ae2d7210d53d3e3e64ae0f47dea0232ac7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": "  @Override protected void runTest() throws Throwable", "signatureAfterChange": "  @Override protected void tearDown() throws Exception", "diff": ["-protected void runTest() throws Throwable {", "-\t/*", "-\t * The tests in this suite manage their own Display and event loop", "-\t * to validate asynchronous use cases.", "-\t * Dispose any previously existing display for the calling thread", "-\t * before starting the tests.", "-\t */", "-\t", "-\tif (getName().equals(\"Browser1\")) Browser1();", "-\tif (getName().equals(\"Browser2\")) Browser2();", "-\tif (getName().equals(\"Browser3\")) Browser3();", "-\tif (getName().equals(\"Browser4\")) Browser4();", "-\tif (getName().equals(\"Browser5\")) Browser5();", "-\tif (getName().equals(\"Browser6\")) Browser6();", "-\tif (getName().equals(\"Browser7\")) Browser7();", "-\tif (getName().equals(\"Browser8\")) Browser8();", "-\tif (getName().equals(\"Browser9\")) Browser9();", "-\t/*", "-\t * Ensure we don't leave a Display from the tests we run.", "-\t */\t", "-\tdisplay = Display.getCurrent();", "+@Override", "+protected void tearDown() throws Exception {", "+\tDisplay display = Display.getCurrent();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736e3846c7a7573030d4a76e65706167", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_accessibility_Accessible.java", "commitBeforeChange": "5e8237fad62914f64e36b4aa815dc4b554b71053", "commitAfterChange": "292f90873ccdc78bd44a77e41b3544592a3b9b40", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 27, "signatureBeforeChange": "  @Override protected void runTest() throws Throwable", "signatureAfterChange": "  @Override protected void runTest() throws Throwable", "diff": ["-\telse if (getName().equals(\"test_internal_WM_GETOBJECTII\")) test_internal_WM_GETOBJECTII();", "-\telse if (getName().equals(\"test_internal_dispose_Accessible\")) test_internal_dispose_Accessible();", "-\telse if (getName().equals(\"test_internal_new_AccessibleLorg_eclipse_swt_widgets_Control\")) test_internal_new_AccessibleLorg_eclipse_swt_widgets_Control();", "-\telse if (getName().equals(\"test_removeAccessibleControlListenerLorg_eclipse_swt_accessibility_AccessibleControlListener\")) test_removeAccessibleControlListenerLorg_eclipse_swt_accessibility_AccessibleControlListener();", "-\telse if (getName().equals(\"test_removeAccessibleListenerLorg_eclipse_swt_accessibility_AccessibleListener\")) test_removeAccessibleListenerLorg_eclipse_swt_accessibility_AccessibleListener();", "-\telse if (getName().equals(\"test_removeAccessibleTextListenerLorg_eclipse_swt_accessibility_AccessibleTextListener\")) test_removeAccessibleTextListenerLorg_eclipse_swt_accessibility_AccessibleTextListener();", "-\telse if (getName().equals(\"test_selectionChanged\")) test_selectionChanged();", "-\telse if (getName().equals(\"test_setFocusI\")) test_setFocusI();", "-\telse if (getName().equals(\"test_textCaretMovedI\")) test_textCaretMovedI();", "-\telse if (getName().equals(\"test_textChangedIII\")) test_textChangedIII();", "-\telse if (getName().equals(\"test_textSelectionChanged\")) test_textSelectionChanged();"]}], "num": 61920}