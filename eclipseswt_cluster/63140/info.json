{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc177ad52c58802159be7ec5bac1f008", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a914924b547fa5de38a98a546379aaf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "730383938344c8db63a066870828ce1e9edbaeff", "commitAfterChange": "ff5cee0ddb447114a3cb637cbfa7673f5548d1d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\tint selBrush = 0;", "-\tif (hasSelection) selBrush = OS.CreateSolidBrush (selectionBackground.handle);", "+\tint selBrush = 0, selPen = 0;", "+\tif (hasSelection) {", "+\t\tselBrush = OS.CreateSolidBrush(selectionBackground.handle);", "+\t\tselPen = OS.CreatePen(OS.BS_SOLID, 1, selectionForeground.handle);", "+\t}", "+\t\t\t\t\tif ((run.style != null) && (run.style.underline || run.style.strikeout)) {", "+\t\t\t\t\t\tint newPen = fg == selectionForeground.handle ? selPen : OS.CreatePen(OS.BS_SOLID, 1, fg);", "+\t\t\t\t\t\tint oldPen = OS.SelectObject(hdc, newPen);", "+\t\t\t\t\t\tif (run.style.underline) {", "+\t\t\t\t\t\t\tint underlineY = drawY + baseline + 1;", "+\t\t\t\t\t\t\tOS.MoveToEx(hdc, drawX, underlineY, 0);", "+\t\t\t\t\t\t\tOS.LineTo(hdc, drawX + run.width, underlineY);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (run.style.strikeout) {", "+\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.leading + run.ascent / 2;", "+\t\t\t\t\t\t\tOS.MoveToEx(hdc, drawX, strikeoutY, 0);", "+\t\t\t\t\t\t\tOS.LineTo(hdc, drawX + run.width, strikeoutY);\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.SelectObject(hdc, oldPen);", "+\t\t\t\t\t\tif (fg != selectionForeground.handle) OS.DeleteObject(newPen);", "+\t\t\t\t\t}", "+\t\t\t\t\t\tif ((run.style != null) && (run.style.underline || run.style.strikeout)) {\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tint oldPen = OS.SelectObject(hdc, selPen);", "+\t\t\t\t\t\t\tif (run.style.underline) {", "+\t\t\t\t\t\t\t\tint underlineY = drawY + baseline + 1;", "+\t\t\t\t\t\t\t\tOS.MoveToEx(hdc, rect.left, underlineY, 0);", "+\t\t\t\t\t\t\t\tOS.LineTo(hdc, rect.right, underlineY);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (run.style.strikeout) {", "+\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.leading + run.ascent / 2;", "+\t\t\t\t\t\t\t\tOS.MoveToEx(hdc, rect.left, strikeoutY, 0);", "+\t\t\t\t\t\t\t\tOS.LineTo(hdc, rect.right, strikeoutY);\t", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tOS.SelectObject(hdc, oldPen);", "+\t\t\t\t\t\t}", "+\tif (selPen != 0) OS.DeleteObject (selPen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac4203a1dfe1e18e789d4155b9ef98d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "e3d907d6678e7fdda004ed7738717629aea97ed2", "commitAfterChange": "7bb044e5c9466f1fefdeb85ae3faca48de0e8d34", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\t\t\t\t\tPointF pt = new PointF();", "-\t\t\t\t\t\tpt.X = drawX;", "-\t\t\t\t\t\tpt.Y = drawRunY;", "+\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, brush, pt, Gdip.DriverStringOptionsRealizedAdvance, 0);", "+\t\t\t\t\t\tint[] advances = new int[run.glyphCount];", "+\t\t\t\t\t\tfloat[] points = new float[run.glyphCount * 2];", "+\t\t\t\t\t\tOS.memmove(advances, run.justify != 0 ? run.justify : run.advances, run.glyphCount * 4);", "+\t\t\t\t\t\tint glyphX = drawX;", "+\t\t\t\t\t\tfor (int h = 0, j = 0; h < advances.length; h++) {", "+\t\t\t\t\t\t\tpoints[j++] = glyphX;", "+\t\t\t\t\t\t\tpoints[j++] = drawRunY;", "+\t\t\t\t\t\t\tglyphX += advances[h];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, brush, points, 0, 0);", "+\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, selBrushFg, pt, Gdip.DriverStringOptionsRealizedAdvance, 0);", "+\t\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, selBrushFg, points, 0, 0);", "+\t\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}"]}], "num": 63140}