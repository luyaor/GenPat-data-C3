{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be926a58d6e23b158496836970c34d69", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1fc0a984d0f4d33adfede818276aab1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ae01adcf32b2a16b0f16facfdbc061d6057f6949", "commitAfterChange": "fe5cca9f4c15d1c86fea36aa7487a737e3270762", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "signatureAfterChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "diff": ["+\t\t\t\tif ((style & SWT.READ_ONLY) != 0) return LRESULT.ZERO;", "+\t\t\t\tPoint selection = getSelection ();", "+\t\t\t\tlong /*int*/ hwndText = OS.GetDlgItem (handle, CBID_EDIT);", "+\t\t\t\tint x = selection.x;", "+\t\t\t\tint y = selection.y;", "+\t\t\t\tif (x == y) {", "+\t\t\t\t\tString actText = getText ().substring (0, x);", "+\t\t\t\t\tjava.util.regex.Matcher m = CTRL_BS_PATTERN.matcher (actText);", "+\t\t\t\t\tif (m.find ()) {", "+\t\t\t\t\t\tx = m.start ();", "+\t\t\t\t\t\ty = m.end ();", "+\t\t\t\t\t\tOS.SendMessage (hwndText, OS.EM_SETSEL, x, y);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (x < y) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Instead of setting the new text directly we send the replace selection event to", "+\t\t\t\t\t* guarantee that the action is pushed to the undo buffer.", "+\t\t\t\t\t*/", "+\t\t\t\t\tOS.SendMessage (hwndText, OS.EM_REPLACESEL, 1, 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1788dec8a188bb15d624072d1ad0cb15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "ae01adcf32b2a16b0f16facfdbc061d6057f6949", "commitAfterChange": "fe5cca9f4c15d1c86fea36aa7487a737e3270762", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  LRESULT WM_CHAR (long wParam, long lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (long wParam, long lParam)", "diff": ["+\t\t\t\tif ((style & SWT.READ_ONLY) != 0 || (style & SWT.PASSWORD) != 0) return LRESULT.ZERO;", "+\t\t\t\tPoint selection = getSelection ();", "+\t\t\t\tint x = selection.x;", "+\t\t\t\tint y = selection.y;", "+\t\t\t\tif (x == y) {", "+\t\t\t\t    String actText = getText (0, x - 1);", "+\t\t\t\t    java.util.regex.Matcher m = CTRL_BS_PATTERN.matcher (actText);", "+\t\t\t\t\tif (m.find ()) {", "+\t\t\t\t\t\tx = m.start ();", "+\t\t\t\t\t\ty = m.end ();", "+\t\t\t\t\t\tOS.SendMessage (handle, OS.EM_SETSEL, x, y);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (x < y) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Instead of setting the new text directly we send the replace selection event to", "+\t\t\t\t\t* guarantee that the action is pushed to the undo buffer.", "+\t\t\t\t\t*/", "+\t\t\t\t\tOS.SendMessage (handle, OS.EM_REPLACESEL, 1, 0);", "+\t\t\t\t}"]}], "num": 39256}