{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d20ee2f5d38c5a6eb6ef9313c3c417dd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70326a023b8918a01c3ae7295c69634", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " int getDotStartX(int columnIndex, int columnWidth)", "signatureAfterChange": " Rectangle getFocusBounds ()", "diff": ["- */", "-int getDotStartX(int columnIndex, int columnWidth) {", "-\tGC gc;", "-\tTable parent = getParent();", "-\tString label = getText(columnIndex);", "-\tint alignment = parent.internalGetColumn (columnIndex).getAlignment();", "-\tint dotStartX = -1;", "-\tint maxWidth;", "-", "-\tif (label != null) {", "-\t\tgc = new GC(parent);", "-\t\tgc.setFont (getFont());", "-\t\tdotStartX = getAlignmentOffset(columnIndex, columnWidth, gc);", "-\t\tif ((alignment & SWT.LEFT) != 0) {", "-\t\t\tmaxWidth = getMaxTextWidth(columnIndex, columnWidth);", "-\t\t\tlabel = parent.trimItemText(label, maxWidth, gc);", "-\t\t\tif (label.endsWith(Table.DOT_STRING)) {", "-\t\t\t\tint dotsWidth = gc.stringExtent(Table.DOT_STRING).x;", "-\t\t\t\tdotStartX = gc.stringExtent(label).x - dotsWidth;", "-\t\t\t\t// add indents, margins and image width", "-\t\t\t\tdotStartX += getImageStopX(columnIndex);", "-\t\t\t\tdotStartX += getTextIndent(columnIndex);", "-\t\t\t}", "-\t\tgc.dispose();\t\t", "-\treturn dotStartX;", "+ */", "+Rectangle getFocusBounds () {", "+\tint x = getTextX (0);", "+\tint width;", "+\tTableColumn[] columns = parent.columns;", "+\tif (columns.length == 0) {", "+\t\twidth = textWidths [0] + 2 * MARGIN_TEXT;", "+\t} else {", "+\t\tTableColumn column;", "+\t\tif ((parent.style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tcolumn = columns [columns.length - 1];", "+\t\t} else {", "+\t\t\tcolumn = columns [0];", "+\t\t}", "+\t\twidth = column.getX () + column.width - x - 1;", "+\t}", "+\treturn new Rectangle (x, parent.getItemY (this) + 1, width, parent.itemHeight - 1);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0672b3c4da222795f48607bd14cca83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 29, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getPaintStartX()", "diff": ["-int getContentX (int columnIndex) {", "-\tif (columnIndex > 0) {", "-\t\tTreeColumn column = parent.getColumn (columnIndex);", "-\t\tint contentX = column.getX () + MARGIN_TEXT;", "-\t\tif ((column.style & SWT.LEFT) != 0) return contentX;", "-\t\t", "-\t\tint contentWidth = internalGetTextWidth (columnIndex);", "-\t\tImage image = internalGetImage (columnIndex);", "-\t\tif (image != null) {", "-\t\t\tcontentWidth += Tree2.MARGIN_IMAGE + image.getBounds ().width;", "-\t\t}", "-\t\tif ((column.style & SWT.RIGHT) != 0) {", "-\t\t\tint padding = parent.getCellPadding ();", "-\t\t\tcontentX = Math.max (contentX, column.getX () + column.getWidth () - padding - contentWidth);\t", "-\t\t} else {\t/* SWT.CENTER */", "-\t\t\tcontentX = Math.max (contentX, column.getX () + (column.getWidth () - contentWidth) / 2);", "-\t\t}", "-\t\treturn contentX;", "-\t}", "-\t/* column 0 */", "-\tif ((parent.style & SWT.CHECK) != 0) {", "-\t\tRectangle checkBounds = getCheckboxBounds ();", "-\t\treturn checkBounds.x + checkBounds.width + Tree2.MARGIN_IMAGE;", "-\t}", "-\treturn getHconnectorEndpoints ()[1].x + Tree2.MARGIN_IMAGE;", "+ */", "+int getPaintStartX() {", "+\tTree2 parent = getParent();", "+\tPoint imageExtent;", "+\tTreeItem2 parentItem;", "+", "+\tif (paintStartX == -1) {", "+\t\tif (isRoot() == true) {", "+\t\t\tpaintStartX = ROOT_INDENT;", "+\t\t}", "+\t\telse {", "+\t\t\tparentItem = getParentItem();", "+\t\t\t// subtract parent.getHorizontalOffset() to calculate the cached start ", "+\t\t\t// position independent of the horizontal scroll offset. Fixes 1G1L7EU.", "+\t\t\tpaintStartX = parentItem.getPaintStartX() ", "+\t\t\t\t- parent.getHorizontalOffset()\t", "+\t\t\t\t+ parentItem.getDecorationsWidth()", "+\t\t\t\t- parent.getHierarchyIndicatorRect().width / 2;", "+\t\t\timageExtent = parent.getImageExtent();", "+\t\t\tif (imageExtent != null) {", "+\t\t\t\tpaintStartX += imageExtent.x / 2;", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tpaintStartX += ITEM_NOIMAGE_OFFSET;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn paintStartX + parent.getHorizontalOffset();", "+}"]}], "num": 27264}