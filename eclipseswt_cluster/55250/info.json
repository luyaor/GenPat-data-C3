{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "302e6c81e59272336b88bbe965f75b70", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95d801e4b2313e17879b691499d9c58a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "07677d6593529caa30972d9ac3321134f6c2535e", "commitAfterChange": "99812bc8238d901feb50b0e4454d09b17166f049", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-\tOS.setTXNMargins(fTX, (short)MARGIN);", "-", "+\tRect margins= new Rect();", "+\tmargins.top= margins.left= margins.bottom= margins.right= MARGIN;", "+\tint ptr= OS.NewPtr(Rect.sizeof);", "+\tOS.memcpy(ptr, margins, Rect.sizeof);", "+\tOS.TXNSetTXNObjectControls(fTX, false, 1, new int[] { OS.kTXNMarginsTag }, new int[] {ptr});", "+\tOS.DisposePtr(ptr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2caffff8cf6791272d5585a99de49fad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c9d0fe505e10aec504523c6f380d51551c75feca", "commitAfterChange": "ce19180d7b5b24b3b55799d526154a9d3cc60f25", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void drawLine(int x1, int y1, int x2, int y2)", "signatureAfterChange": " public void drawLine(int x1, int y1, int x2, int y2)", "diff": ["+\t/*", "+\t* Feature in Quartz.  Drawing a one-pixel line produces no output.  The", "+\t* fix is to fill a one-pixel rectangle instead.", "+\t*/", "+\tif (x1 == x2 && y1 == y2) {", "+\t\tCGRect rect = new CGRect();", "+\t\trect.x = x1;", "+\t\trect.y = y1;", "+\t\trect.width = 1;", "+\t\trect.height = 1;", "+\t\tOS.CGContextSetFillColor(handle, data.foreground);", "+\t\tOS.CGContextFillRect(handle, rect);", "+\t\tOS.CGContextSetFillColor(handle, data.background);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088b758fc9c90edc02d314010e988841", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "35a1290837ca95b6eb66152e2737bb6c8db98ddd", "commitAfterChange": "702aad8d4a55b65fe0f5b55b01adf819f48a2c4c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["-\t\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "-\t\tint bpp = OS.CGImageGetBitsPerPixel(imageHandle);", "-\t\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "-\t\tint colorspace = OS.CGImageGetColorSpace(imageHandle);", "-\t\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "-\t\tint data = srcImage.data + (srcY * bpr) + srcX * 4;", "-\t\tint provider = OS.CGDataProviderCreateWithData(0, data, srcHeight * bpr, 0);", "-\t\tif (provider != 0) {", "-\t\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, true, 0);", "-\t\t\tOS.CGDataProviderRelease(provider);", "+ \t\tif (OS.VERSION >= 0x1040) {", "+ \t\t\tCGRect srcRect = new CGRect();", "+ \t\t\tsrcRect.x = srcX;", "+ \t\t\tsrcRect.y = srcY;", "+ \t\t\tsrcRect.width = srcWidth;", "+ \t\t\tsrcRect.height = srcHeight;", "+ \t\t\tint subImage = OS.CGImageCreateWithImageInRect(imageHandle, srcRect);", "-\t\t \t\tOS.CGContextDrawImage(handle, rect, subImage);", "- \t\t\t\tOS.CGImageRelease(subImage);", "+\t\t\t\tOS.CGContextDrawImage(handle, rect, subImage);", "+\t\t\t\tOS.CGImageRelease(subImage);", "-\t\t}", "+ \t\t} else {", "+\t\t\tint bpc = OS.CGImageGetBitsPerComponent(imageHandle);", "+\t\t\tint bpp = OS.CGImageGetBitsPerPixel(imageHandle);", "+\t\t\tint bpr = OS.CGImageGetBytesPerRow(imageHandle);", "+\t\t\tint colorspace = OS.CGImageGetColorSpace(imageHandle);", "+\t\t\tint alphaInfo = OS.CGImageGetAlphaInfo(imageHandle);", "+\t\t\tint data = srcImage.data + (srcY * bpr) + srcX * 4;", "+\t\t\tint provider = OS.CGDataProviderCreateWithData(0, data, srcHeight * bpr, 0);", "+\t\t\tif (provider != 0) {", "+\t\t\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, true, 0);", "+\t\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\t\tif (subImage != 0) {", "+\t\t\t \t\tOS.CGContextDrawImage(handle, rect, subImage);", "+\t \t\t\t\tOS.CGImageRelease(subImage);", "+\t\t\t\t}", "+\t\t\t}", "+ \t\t}"]}], "num": 55250}