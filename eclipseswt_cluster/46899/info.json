{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "739e63f41ac884b56809a323b5180b83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e287730b1be5d0e4c58bac6f54a0228", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Header.java", "commitBeforeChange": "9943b3d6da52f8de0da36e26e38ae4bfcae73ce9", "commitAfterChange": "3d30687988c783bc0ef4c36252ff6b060a49574b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r void setHeaderHeight()", "signatureAfterChange": " void setHeaderHeight()", "diff": ["- */\r", "-void setHeaderHeight() {\r", "-\tGC gc = new GC(this);\r", "-\tRectangle bounds = getBounds();\r", "-\r", "-\tbounds.height = gc.stringExtent(\"aString\").y + VERTICAL_MARGIN;\r", "-\tsetBounds(bounds);\r", "-\tgc.dispose();\r", "-}\r", "+ */", "+void setHeaderHeight() {", "+\tGC gc = new GC(this);", "+\tint textHeight = gc.stringExtent(\"\").y + VERTICAL_MARGIN; ", "+\tgc.dispose();\t", "+\tint imageHeight = getImageExtent().y + VERTICAL_MARGIN;\t\t", "+\tRectangle bounds = getBounds();", "+\tbounds.height = Math.max(textHeight,imageHeight);", "+\tsetBounds(bounds);\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdc1adbb53a9480bf66875895b71d63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9995b4d0733c0c3f853b1f738507756fe521d06f", "commitAfterChange": "bb9f57035f3e6746fe623829588fa9b8246af11e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r public void setCursorLocation (int x, int y)", "signatureAfterChange": "\r public void setCursorLocation (Point pt)", "diff": ["- */\r", "-public void setCursorLocation (int x, int y) {\r", "-\tcheckDevice();\r", "-\tif (x < 0 || y < 0) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\tRectangle bounds = getBounds ();\r", "-\tif (x > bounds.width || y > bounds.height) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\tint xWindow = OS.XDefaultRootWindow (xDisplay);\t\r", "-\tOS.XWarpPointer (xDisplay, OS.None, xWindow, 0, 0, 0, 0, x, y);\r", "-}\r", "+\tcheckDevice ();\r", "+\tint x = pt.x;\r", "+\tint y = pt.y;\r", "+\tif (x < 0 || y < 0) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\tRectangle bounds = getBounds ();\r", "+\tif (x > bounds.width || y > bounds.height) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\tint xWindow = OS.XDefaultRootWindow (xDisplay);\t\r", "+\tOS.XWarpPointer (xDisplay, OS.None, xWindow, 0, 0, 0, 0, x, y);\r"]}], "num": 46899}