{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb21a6d84b77c00a6e6f90921f75767e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872f9abe6ce9782d41c3548364343ba5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bca4f4e5b14d2f7f838d8ebce6fe0befab8bb099", "commitAfterChange": "775da6817f1330155074a54fdd00170b592382a6", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int Prompt (int aParent, int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int Prompt (int aParent, int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "diff": ["-\t\tint cnt, size;", "-\t\tint /*long*/ ptr;", "-\t\tchar[] buffer;", "-\t\tint /*long*/[] result2 = new int /*long*/[1];", "-\t\t\tcnt = valueLabel[0].length ();", "-\t\t\tbuffer = new char[cnt + 1];", "+\t\t\tint /*long*/[] result2 = new int /*long*/[1];", "+\t\t\tint rc = XPCOM.NS_GetServiceManager (result2);", "+\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result2[0]);", "+\t\t\tresult2[0] = 0;", "+\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "+\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "+\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);\t\t", "+\t\t\tserviceManager.Release ();", "+", "+\t\t\tnsIMemory memory = new nsIMemory (result2[0]);", "+\t\t\tresult2[0] = 0;", "+", "+\t\t\tint cnt = valueLabel[0].length ();", "+\t\t\tchar[] buffer = new char[cnt + 1];", "-\t\t\tsize = buffer.length * 2;", "-\t\t\tptr = C.malloc (size);", "+\t\t\tint size = buffer.length * 2;", "+\t\t\tint /*long*/ ptr = memory.Alloc (size);", "-\t\t\t\tint rc = XPCOM.NS_GetServiceManager (result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\t\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);", "-\t\t\t", "-\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result2[0]);", "-\t\t\t\tresult2[0] = 0;", "-\t\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "-\t\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);\t\t", "-\t\t\t\tserviceManager.Release ();", "-\t\t\t\t", "-\t\t\t\tnsIMemory memory = new nsIMemory (result2[0]);", "-\t\t\t\tresult2[0] = 0;", "-\t\t\t\tmemory.Release ();", "+\t\t\tmemory.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b9848162b084022bcfc661609fb2a8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "acd21e0605604e65519caa05a651b424c54e8bba", "commitAfterChange": "108b9dd38cc7c1124205fb1899f8aad5ad317989", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\t\tcase SWT.FocusIn: Activate (); break;", "+\t\t\t\tcase SWT.FocusIn: {", "+\t\t\t\t\tActivate ();", "+", "+\t\t\t\t\t/* if tabbing onto a page for the first time then full-Browser focus ring should be shown */", "+", "+\t\t\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\t\t\tint rc = XPCOM.NS_GetServiceManager (result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FOCUSMANAGER_CONTRACTID, true);", "+\t\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIFocusManager.NS_IFOCUSMANAGER_IID, result);", "+\t\t\t\t\tserviceManager.Release ();", "+", "+\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\tnsIFocusManager focusManager = new nsIFocusManager (result[0]);", "+\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\trc = focusManager.GetFocusedElement (result);", "+\t\t\t\t\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\t\t\t\t\tif (result[0] != 0) {", "+\t\t\t\t\t\t\t\tnew nsISupports (result[0]).Release ();", "+\t\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t/* show full browser focus ring */", "+\t\t\t\t\t\t\t\trc = webBrowser.GetContentDOMWindow (result);", "+\t\t\t\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (result[0]);", "+\t\t\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\t\t\trc = domWindow.GetDocument (result);", "+\t\t\t\t\t\t\t\t\tdomWindow.Release ();", "+\t\t\t\t\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\t\t\t\t\tnsIDOMDocument domDocument = new nsIDOMDocument (result[0]);", "+\t\t\t\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\t\t\t\trc = domDocument.GetDocumentElement (result);", "+\t\t\t\t\t\t\t\t\t\tdomDocument.Release ();", "+\t\t\t\t\t\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\t\t\t\t\t\tnsIDOMElement domElement = new nsIDOMElement (result[0]);", "+\t\t\t\t\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\t\t\t\t\trc = focusManager.SetFocus (domElement.getAddress (), nsIFocusManager.FLAG_BYKEY);", "+\t\t\t\t\t\t\t\t\t\t\tdomElement.Release ();", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tfocusManager.Release ();", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2026342868e8a421bb10e84d08190db5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "5a2233010f7e94fd6c1309096fb18e83dc79b8ce", "commitAfterChange": "6608b0af915e3e359127fb98e6d8ba6099381359", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "  @Override public Object evaluate (String script) throws SWTException", "signatureAfterChange": "  public Object evaluate (String script, boolean trusted) throws SWTException", "diff": ["+public Object evaluate (String script, boolean trusted) throws SWTException {", "+\tif (!MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24, false)) {", "+\t\treturn super.evaluate(script);", "+\t}", "+\t", "+\tlong /*int*/[] result = new long /*int*/[1];", "+\tint rc = webBrowser.QueryInterface(IIDStore.GetIID (nsIInterfaceRequestor.class), result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+\tnsIInterfaceRequestor interfaceRequestor = new nsIInterfaceRequestor (result[0]);", "+\tresult[0] = 0;", "+\trc = XPCOM.NS_GetServiceManager (result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\tresult[0] = 0;", "+\trc = interfaceRequestor.GetInterface (IIDStore.GetIID (nsIDOMWindow.class), result);", "+\tinterfaceRequestor.Release ();", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "+\tresult[0] = 0;", "+\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.EXECUTE_CONTRACTID, true);", "+\trc = serviceManager.GetServiceByContractID (aContractID, IIDStore.GetIID (Execute.class), result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tExecute execute = new Execute (result[0]);", "+\tresult[0] = 0;", "+\tnsEmbedString data = new nsEmbedString (\"(function(){\" + script + \"}())\");", "+\texecute.EvalAsChrome(window, data, result);", "+\tdata.dispose ();", "+\texecute.Release ();", "+\tif (result[0] == 0) return null;", "+", "+\tnsIVariant variant = new nsIVariant (result[0]);", "+\tObject retval = External.convertToJava( variant);", "+\tvariant.Release ();", "+\treturn retval;", "+}"]}], "num": 51322}