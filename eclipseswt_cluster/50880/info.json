{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c2e5718f7a40e125711b50ba72b1cf8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fe0ed5009a1f9188cf96322dacf01d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 26, "signatureBeforeChange": " Rectangle getHitBounds ()", "signatureAfterChange": " Point getItemExtent()", "diff": ["- */", "-Rectangle getHitBounds () {", "-\tint contentX = getContentX (0);", "-\tint width = 0;", "-\tif (parent.getColumnCount () == 0) {", "-\t\twidth = getFocusX () + getTextPaintWidth (0) - contentX; ", "-\t} else {", "-\t\tTreeColumn column = parent.getColumn (0);", "-\t\twidth = column.getWidth () - contentX;", "-\t}", "-\treturn new Rectangle (contentX, parent.getItemY (this), width, parent.getItemHeight ());", "-}", "+ */", "+Point getItemExtent() {", "+\tTree2 parent;", "+\tPoint imageExtent;", "+\tString text;", "+\tint itemWidth;", "+\t", "+\tif (itemExtent == null) {", "+\t\tparent = getParent();", "+\t\timageExtent = parent.getImageExtent();", "+\t\ttext = getText();", "+\t\titemWidth = SELECTION_PADDING;", "+\t\tif (text != null) {", "+\t\t\titemWidth += getTextWidth(text) + TEXT_INDENT;", "+\t\t}", "+\t\tif (imageExtent != null) {", "+\t\t\titemWidth += imageExtent.x + IMAGE_PADDING;", "+\t\t}", "+\t\titemExtent = new Point(itemWidth, parent.getItemHeight());", "+\t}", "+\treturn itemExtent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d4456cab448af68e0ffc65800f4287", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 31, "signatureBeforeChange": " int getItemConnectorWidth()", "signatureAfterChange": " Rectangle getHitBounds ()", "diff": ["+ */", "+Rectangle getHitBounds () {", "+\tint contentX = getContentX (0);", "+\tint width = 0;", "+\tif (parent.getColumnCount () == 0) {", "+\t\twidth = getFocusX () + getTextPaintWidth (0) - contentX; ", "+\t} else {", "+\t\tTreeColumn column = parent.getColumn (0);", "+\t\twidth = column.getWidth () - contentX;", "+\t}", "+\treturn new Rectangle (contentX, parent.getItemY (this), width, parent.getItemHeight ());", "+}", "- */", "-int getItemConnectorWidth() {", "-\tTree parent = getParent();", "-\tPoint imageExtent = parent.getImageExtent();", "-\tint itemConnectorWidth;", "-\tint indicatorWidth = parent.getHierarchyIndicatorRect().width;", "-", "-\tif (imageExtent != null) {", "-\t\titemConnectorWidth = imageExtent.x / 2 + ITEM_CONNECTOR_PADDING;", "-\telse {", "-\t\titemConnectorWidth = DEFAULT_ITEM_CONNECTOR_WIDTH;", "-\tif (isLeaf() == false) {\t// has children = has hierarchy indicator = shorter connector", "-\t\titemConnectorWidth -= indicatorWidth / 2;", "-\t}", "-\treturn itemConnectorWidth;"]}], "num": 50880}