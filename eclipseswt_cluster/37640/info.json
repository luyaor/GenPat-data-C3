{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85519e02f031b7e286437a4a36e6c034", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba61602b0a5bb98bf307bdbbb2f66464", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c892e0aeb33d21436b946e3627f40a5d2a0ce2de", "commitAfterChange": "c16f373de1f1cde98e6cfe71beacc736f035717a", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 198, "signatureBeforeChange": "  void restackWindow (long window, long sibling, boolean above)", "signatureAfterChange": "  void restackWindow (long window, long sibling, boolean above)", "diff": ["-\t    if (OS.GTK_VERSION >= OS.VERSION (2, 17, 11)) {", "-\t    \tOS.gdk_window_restack (window, sibling, above);", "-\t    } else {", "-\t    \t/*", "-\t\t\t* Feature in X. If the receiver is a top level, XConfigureWindow ()", "-\t\t\t* will fail (with a BadMatch error) for top level shells because top", "-\t\t\t* level shells are reparented by the window manager and do not share", "-\t\t\t* the same X window parent.  This is the correct behavior but it is", "-\t\t\t* unexpected.  The fix is to use XReconfigureWMWindow () instead.", "-\t\t\t* When the receiver is not a top level shell, XReconfigureWMWindow ()", "-\t\t\t* behaves the same as XConfigureWindow ().", "-\t\t\t*/", "-\t\t\tlong /*int*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "-\t\t\tlong /*int*/ xWindow = OS.gdk_x11_drawable_get_xid (window);", "-\t\t\tint xScreen = OS.XDefaultScreen (xDisplay);", "-\t\t\tint flags = OS.CWStackMode | OS.CWSibling;", "-\t\t\tXWindowChanges changes = new XWindowChanges ();", "-\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (sibling);", "-\t\t\tchanges.stack_mode = above ? OS.Above : OS.Below;", "-\t\t\tOS.XReconfigureWMWindow (xDisplay, xWindow, xScreen, flags, changes);", "-\t    }", "-\t}", "+   \tOS.gdk_window_restack (window, sibling, above);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16dfb378ffd7e6f943c605fd3d0952c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e170fc54c6b4ebe87f5d0d3787b52ef7c74c6447", "commitAfterChange": "d569a8e4e3f708a454ad8d2b1a32242d0ad822fd", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 198, "signatureBeforeChange": " public void setEnabled (boolean enabled)", "signatureAfterChange": " public void setEnabled (boolean enabled)", "diff": ["-\t\t\t\tint /*long*/ topWindow = OS.GTK_WIDGET_WINDOW (topHandle);\t\t\t", "-\t\t\t\tint /*long*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (topWindow);", "-\t\t\t\tint /*long*/ xWindow = OS.gdk_x11_drawable_get_xid (enableWindow);", "-\t\t\t\tint xScreen = OS.XDefaultScreen (xDisplay);", "-\t\t\t\tint flags = OS.CWStackMode | OS.CWSibling;\t\t\t", "-\t\t\t\tXWindowChanges changes = new XWindowChanges ();", "-\t\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (topWindow);", "-\t\t\t\tchanges.stack_mode = OS.Above;", "-\t\t\t\tOS.XReconfigureWMWindow (xDisplay, xWindow, xScreen, flags, changes);", "+\t\t\t\trestackWindow (enableWindow, OS.GTK_WIDGET_WINDOW (topHandle), true);"]}], "num": 37640}