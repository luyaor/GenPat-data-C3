{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76963d1ed9d40cd323bbb972709a4ef5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db45dcba146ca92592b0afa4b05ab7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "1548d2a1d776fa0eb456579bf098076fba27fd97", "commitAfterChange": "7a483816829e0ed4c2f6a6050a8e2f97f829777c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "signatureAfterChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "diff": ["-\tint colorRef2 = color2.handle;", "-\trgb = ((colorRef2 >> 16) & 0xFF) | (colorRef2 & 0xFF00) | ((colorRef2 & 0xFF) << 16);", "-\tint backColor = Gdip.Color_new((alpha2 & 0xFF) << 24 | rgb);", "-\tPointF p1 = new PointF();", "-\tp1.X = x1;", "-\tp1.Y = y1;", "-\tPointF p2 = new PointF();", "-\tp2.X = x2;", "-\tp2.Y = y2;", "-\thandle = Gdip.LinearGradientBrush_new(p1, p2, foreColor, backColor);", "-\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tif (alpha1 != 0xFF || alpha2 != 0xFF) {", "-\t\tint a = (int)((alpha1 & 0xFF) * 0.5f + (alpha2 & 0xFF) * 0.5f);", "-\t\tint r = (int)(((colorRef1 & 0xFF) >> 0) * 0.5f + ((colorRef2 & 0xFF) >> 0) * 0.5f);", "-\t\tint g = (int)(((colorRef1 & 0xFF00) >> 8) * 0.5f + ((colorRef2 & 0xFF00) >> 8) * 0.5f);", "-\t\tint b = (int)(((colorRef1 & 0xFF0000) >> 16) * 0.5f + ((colorRef2 & 0xFF0000) >> 16) * 0.5f);", "-\t\tint midColor = Gdip.Color_new(a << 24 | r << 16 | g << 8 | b);", "-\t\tGdip.LinearGradientBrush_SetInterpolationColors(handle, new int[]{foreColor, midColor, backColor}, new float[]{0, 0.5f, 1}, 3);", "-\t\tGdip.Color_delete(midColor);", "+\tif (x1 == x2 && y1 == y2) {", "+\t\thandle = Gdip.SolidBrush_new(foreColor);", "+\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t} else {", "+\t\tint colorRef2 = color2.handle;", "+\t\trgb = ((colorRef2 >> 16) & 0xFF) | (colorRef2 & 0xFF00) | ((colorRef2 & 0xFF) << 16);", "+\t\tint backColor = Gdip.Color_new((alpha2 & 0xFF) << 24 | rgb);", "+\t\tPointF p1 = new PointF();", "+\t\tp1.X = x1;", "+\t\tp1.Y = y1;", "+\t\tPointF p2 = new PointF();", "+\t\tp2.X = x2;", "+\t\tp2.Y = y2;", "+\t\thandle = Gdip.LinearGradientBrush_new(p1, p2, foreColor, backColor);", "+\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tif (alpha1 != 0xFF || alpha2 != 0xFF) {", "+\t\t\tint a = (int)((alpha1 & 0xFF) * 0.5f + (alpha2 & 0xFF) * 0.5f);", "+\t\t\tint r = (int)(((colorRef1 & 0xFF) >> 0) * 0.5f + ((colorRef2 & 0xFF) >> 0) * 0.5f);", "+\t\t\tint g = (int)(((colorRef1 & 0xFF00) >> 8) * 0.5f + ((colorRef2 & 0xFF00) >> 8) * 0.5f);", "+\t\t\tint b = (int)(((colorRef1 & 0xFF0000) >> 16) * 0.5f + ((colorRef2 & 0xFF0000) >> 16) * 0.5f);", "+\t\t\tint midColor = Gdip.Color_new(a << 24 | r << 16 | g << 8 | b);", "+\t\t\tGdip.LinearGradientBrush_SetInterpolationColors(handle, new int[]{foreColor, midColor, backColor}, new float[]{0, 0.5f, 1}, 3);", "+\t\t\tGdip.Color_delete(midColor);", "+\t\t}", "+\t\tGdip.Color_delete(backColor);", "-\tGdip.Color_delete(backColor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c607796273951095e6861abc423707", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "b1dbb178b5008dcde16cb7cda2cdc928e2b7e39d", "commitAfterChange": "47fc1ae01db8924907e9ae0b3af53d5a68d462af", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, Color color2)", "signatureAfterChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "diff": ["+ */", "+public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2) {", "-\t//TODO - how about alpha?", "-\tint colorRef = color1.handle;", "-\tint rgb = ((colorRef >> 16) & 0xFF) | (colorRef & 0xFF00) | ((colorRef & 0xFF) << 16);", "-\tint foreColor = Gdip.Color_new(0xFF << 24 | rgb);", "-\tcolorRef = color2.handle;", "-\trgb = ((colorRef >> 16) & 0xFF) | (colorRef & 0xFF00) | ((colorRef & 0xFF) << 16);", "-\tint backColor = Gdip.Color_new(0xFF << 24 | rgb);", "+\tint colorRef1 = color1.handle;", "+\tint rgb = ((colorRef1 >> 16) & 0xFF) | (colorRef1 & 0xFF00) | ((colorRef1 & 0xFF) << 16);", "+\tint foreColor = Gdip.Color_new((alpha1 & 0xFF) << 24 | rgb);", "+\tint colorRef2 = color2.handle;", "+\trgb = ((colorRef2 >> 16) & 0xFF) | (colorRef2 & 0xFF00) | ((colorRef2 & 0xFF) << 16);", "+\tint backColor = Gdip.Color_new((alpha2 & 0xFF) << 24 | rgb);", "+\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (alpha1 != 0xFF || alpha2 != 0xFF) {", "+\t\tint a = (int)((alpha1 & 0xFF) * 0.5f + (alpha2 & 0xFF) * 0.5f);", "+\t\tint r = (int)(((colorRef1 & 0xFF) >> 0) * 0.5f + ((colorRef2 & 0xFF) >> 0) * 0.5f);", "+\t\tint g = (int)(((colorRef1 & 0xFF00) >> 8) * 0.5f + ((colorRef2 & 0xFF00) >> 8) * 0.5f);", "+\t\tint b = (int)(((colorRef1 & 0xFF000) >> 16) * 0.5f + ((colorRef2 & 0xFF0000) >> 16) * 0.5f);", "+\t\tint midColor = Gdip.Color_new(a << 24 | r << 16 | g << 8 | b);", "+\t\tGdip.LinearGradientBrush_SetInterpolationColors(handle, new int[]{foreColor, midColor, backColor}, new float[]{0, 0.5f, 1}, 3);", "+\t\tGdip.Color_delete(midColor);", "+\t}", "-\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);"]}], "num": 19739}