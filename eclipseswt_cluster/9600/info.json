{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3eddcf3e40affc7fb86e1c208c979909", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c1757776f077ddbeebdef6965ad80b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "fddcf2f032850d3eb6550c44c0aeb80fc19a12d0", "commitAfterChange": "3ae6372c58eb26df700867f6c185ea003b6c1de1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private static boolean isGnomeDesktop()", "signatureAfterChange": "  static boolean isGnomeDesktop()", "diff": ["-", "-private static boolean isGnomeDesktop() {", "-\t/*", "-\t * A Gnome Window Manager is detected by looking for a specific", "-\t * property on the root window.", "-\t */", "-\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "-\tint atom = OS.gdk_atom_intern(name, true);", "-\tif (atom == OS.GDK_NONE) return false;\t", "-\tint[] actualType = new int[1];", "-\tint[] actualFormat = new int[1];", "-\tint[] actualLength = new int[1];", "-\tint[] data = new int[1];", "-\tif (!OS.gdk_property_get(OS.GDK_ROOT_PARENT(), atom, OS.XA_CARDINAL,", "-\t\t0, 1, 0, actualType, actualFormat, actualLength, data)) return false;", "-\tif (data[0] != 0) OS.g_free(data[0]);", "-\treturn actualLength[0] > 0;", "+", "+static boolean isGnomeDesktop() {", "+\t/*", "+\t * A Gnome Window Manager is detected by looking for a specific", "+\t * property on the root window.", "+\t */", "+\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "+\tint atom = OS.gdk_atom_intern(name, true);", "+\tif (atom == OS.GDK_NONE) return false;\t", "+\tint[] actualType = new int[1];", "+\tint[] actualFormat = new int[1];", "+\tint[] actualLength = new int[1];", "+\tint[] data = new int[1];", "+\tif (!OS.gdk_property_get(OS.GDK_ROOT_PARENT(), atom, OS.XA_CARDINAL,", "+\t\t0, 1, 0, actualType, actualFormat, actualLength, data)) return false;", "+\tif (data[0] != 0) OS.g_free(data[0]);", "+\treturn actualLength[0] > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbc5942baff8f05ae0f050b1d9ce9b94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "fd76c845dff3016f395dc38dc3f2b96af159becc", "commitAfterChange": "de08cd5cae80b296826b66acb64dff7c53de20ff", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static boolean isGnomeDesktop()", "signatureAfterChange": "  private static boolean isGnomeDesktop()", "diff": ["-\t* Bug in GTK.   gdk_atom_intern() ignores the only_if_exists", "-\t* argument.   It always creates a new atom if the requested", "-\t* one does not exist.  The workaround is to directly call", "-\t* XInternAtom(). ", "-\t* Note.  This introduces a dependency on X which is", "-\t* unwanted on GTK ports to non X platforms.  ", "-\t*/", "-\tint display = OS.GDK_DISPLAY();", "+\t * A Gnome Window Manager is detected by looking for a specific", "+\t * property on the root window.", "+\t */", "-\tint atom = OS.XInternAtom(display, name, true);", "-\treturn atom != OS.None;", "+\tint atom = OS.gdk_atom_intern(name, true);", "+\tif (atom == OS.GDK_NONE) return false;\t", "+\tint[] actualType = new int[1];", "+\tint[] actualFormat = new int[1];", "+\tint[] actualLength = new int[1];", "+\tint[] data = new int[1];", "+\tif (!OS.gdk_property_get(OS.GDK_ROOT_PARENT(), atom, OS.XA_CARDINAL,", "+\t\t0, 1, 0, actualType, actualFormat, actualLength, data)) return false;", "+\tif (data[0] != 0) OS.g_free(data[0]);", "+\treturn actualLength[0] > 0;"]}], "num": 9600}