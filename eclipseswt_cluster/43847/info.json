{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "325e3bea48e6225e8c536e350db2153d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cadc3a5432ddff8537d6a100cbbe8a18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "39d1ad0764cd845e3f67bc9896316fd5fef09a9a", "commitAfterChange": "1fb67f7beaf5e4a9683c7661a272dd0b3fab2e47", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["+\tint height = hHint;", "+\tint width = wHint;", "+\tPoint bottomSize = new Point(0, 0);", "+\tif (bottom != null) {", "+\t\tPoint trim = bottom.computeSize(width, hHint);", "+\t\ttrim.x = trim.x - width;", "+\t\tbottomSize = bottom.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, SWT.DEFAULT);", "+\t\tif (height != SWT.DEFAULT) {", "+\t\t\tbottomSize.y = Math.min(bottomSize.y, height);", "+\t\t\theight -= bottomSize.y + BORDER_TOP + BORDER_STRIPE + BORDER_BOTTOM;", "+\t\t}", "+\t}", "+\tif (curve == null) {", "+\t\tif (height == SWT.DEFAULT) {", "+\t\t\tif (left != null) {", "+\t\t\t\tPoint s = left.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t\t\tupdateCurve(s.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tupdateCurve(height);", "+\t\t}", "+\t} else {", "+\t\tupdateCurve(getSize().y);", "+\t}", "+\tif (height != SWT.DEFAULT && left != null && right != null) {", "+\t\theight -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\t}", "-\t\tPoint trim = right.computeSize(rightWidth, hHint);", "+\t\tPoint trim = right.computeSize(rightWidth, height);", "-\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, hHint);", "+\t\trightSize = right.computeSize(rightWidth == SWT.DEFAULT ? SWT.DEFAULT : rightWidth - trim.x, height);", "+\t\tif (width != SWT.DEFAULT) {", "+\t\t\trightSize.x = Math.min(rightSize.x, width);", "+\t\t\twidth = Math.max(CURVE_TAIL, width - rightSize.x - curveWidth + 2* curveIndent);", "+\t\t}", "-\tint width = (wHint == SWT.DEFAULT) ? SWT.DEFAULT : (right == null ? wHint : wHint - rightSize.x - curveWidth + 2* curveIndent);", "-\tif (left != null) {", "-\t\tPoint trim = left.computeSize(width, hHint);", "+\tif (left != null && (width == SWT.DEFAULT || width > 0)) {", "+\t\tPoint trim = left.computeSize(width, height);", "-\t\tleftSize = left.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, hHint);", "+\t\tleftSize = left.computeSize(width == SWT.DEFAULT ? SWT.DEFAULT : width - trim.x, height);", "-\tif (left != null && right != null) size.x += curveWidth - 2*curveIndent;", "+\tif (left != null && right!= null) size.x += curveWidth - 2*curveIndent;", "-\tsize.y = left != null ? leftSize.y : rightSize.y;", "-\t", "-\tsize.x += (left == null || right == null) ? 0 : BORDER_LEFT + BORDER_RIGHT;", "-\tsize.y += (left == null || right == null) ? 0 : BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\tsize.y = leftSize.y > 0 ? leftSize.y : rightSize.y;", "+\tif (left != null && right!= null) size.y +=  BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\tsize.y += bottomSize.y;", "+\tif (bottom != null && (left != null || right != null)) size.y += BORDER_TOP + BORDER_BOTTOM + BORDER_STRIPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9f335dd0e0d00e8f0bdc00ad0579acb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "b1ca6f5c5fbbf4a2ce7198f263200d3c7f131a0a", "commitAfterChange": "1a5dd702f68c819daf5232e868f1328010e5ad8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["+\tboolean showCurve = left != null && right != null;", "+\t", "-\t\tPoint trim = bottom.computeSize(width, hHint);", "+\t\tPoint trim = bottom.computeSize(width, SWT.DEFAULT);", "-\tif (curve == null) {", "-\t\tif (height == SWT.DEFAULT) {", "-\t\t\tif (left != null) {", "-\t\t\t\tPoint s = left.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "-\t\t\t\tupdateCurve(s.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "-\t\t\t}", "+\tif (showCurve) {", "+\t\tif (height != SWT.DEFAULT ) height -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\t\tif (width == SWT.DEFAULT) {", "+\t\t\tPoint s = left.computeSize(SWT.DEFAULT, height);", "+\t\t\tupdateCurve(s.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "-\t\t\tupdateCurve(height);", "+\t\t\tPoint s1 = right.computeSize(rightWidth, height);", "+\t\t\tPoint s2 = left.computeSize(width - s1.x - 44, height); //44 - best guess at width of curve", "+\t\t\tupdateCurve(s2.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "-\t} else {", "-\t\tupdateCurve(getSize().y);", "-\t}", "-\tif (height != SWT.DEFAULT && left != null && right != null) {", "-\t\theight -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\t\t\twidth = Math.max(MIN_LEFT, width - rightSize.x - curveWidth + 2* curveIndent);", "+\t\t\twidth -= rightSize.x + curveWidth - 2* curveIndent;", "+\t\t\twidth = Math.max(width, MIN_LEFT);", "-\tif (left != null && (width == SWT.DEFAULT || width > 0)) {", "+\tif (left != null) {", "+\t\tif (height != SWT.DEFAULT) {", "+\t\t\tleftSize.y = Math.min(leftSize.y, height);", "+\t\t}", "-\tPoint size = new Point(0, 0);", "-\tsize.x = leftSize.x;", "-\tif (left != null && right!= null) size.x += curveWidth - 2*curveIndent;", "-\tsize.x += rightSize.x;", "-\tsize.y = leftSize.y > 0 ? leftSize.y : rightSize.y;", "-\tif (left != null && right!= null) size.y +=  BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\tsize.y += bottomSize.y;", "-\tif (bottom != null && (left != null || right != null)) size.y += BORDER_TOP + BORDER_BOTTOM + BORDER_STRIPE;", "+\tint w = 0, h = 0;", "+\th += bottomSize.y;", "+\tif (bottom != null && (left != null || right != null)) h += BORDER_TOP + BORDER_BOTTOM + BORDER_STRIPE;", "+\tw += leftSize.x + rightSize.x;", "+\tif (showCurve) {", "+\t\tw += curveWidth - 2*curveIndent;", "+\t\th +=  BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "+\t}", "+\th += left != null ? leftSize.y : rightSize.y; ", "-\tif (wHint != SWT.DEFAULT) size.x = wHint;", "-\tif (hHint != SWT.DEFAULT) size.y = hHint;", "+\tif (wHint != SWT.DEFAULT) w = wHint;", "+\tif (hHint != SWT.DEFAULT) h = hHint;", "-\treturn new Point(size.x, size.y);", "+\tif (showCurve) updateCurve(getSize().y);", "+\treturn new Point(w, h);"]}], "num": 43847}