{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c579f3cc7473cd46363ecd6e065dcf46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df1083e8521943a6e9f36a0ae8f8e69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8841c5caa3b3a55d6ebb2d5b6185e82da15c6e24", "commitAfterChange": "6325d1928c5c2081ee30ae8228f5edad1e98ca0b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void setMaximized (boolean maximized)", "signatureAfterChange": " public void setMaximized (boolean maximized)", "diff": ["-\tint[] type = new int[1], format = new int[1], nitems = new int[1], bytes_after = new int[1], atomsPtr = new int[1];", "-\tOS.XGetWindowProperty (xDisplay, xWindow, property, 0, Integer.MAX_VALUE, false, OS.XA_ATOM, type, format, nitems, bytes_after, atomsPtr);", "-\tif (type [0] == OS.None) return;", "-\tint[] atoms = new int [nitems [0]];", "-\tOS.memmove (atoms, atomsPtr [0], nitems [0] * 4);", "-\t", "-\tif (maximized) {", "-\t\tboolean hasHmax = false;", "-\t\tboolean hasVmax = false;", "-\t\tfor (int i = 0; i < nitems [0]; i++) {", "-\t\t\tint atom = atoms [i];", "-\t\t\tif (atom == hMaxAtom) hasHmax = true;", "-\t\t\tif (atom == vMaxAtom) hasVmax = true;", "-\t\t}", "-\t\tif (!hasHmax) {", "-\t\t\tint[] temp = new int [atoms.length + 1];", "-\t\t\tSystem.arraycopy (atoms, 0, temp, 0, atoms.length);", "-\t\t\ttemp [atoms.length] = hMaxAtom;", "-\t\t\tatoms = temp;", "-\t\t}", "-\t\tif (!hasVmax) {", "-\t\t\tint[] temp = new int [atoms.length + 1];", "-\t\t\tSystem.arraycopy (atoms, 0, temp, 0, atoms.length);", "-\t\t\ttemp [atoms.length] = vMaxAtom;", "-\t\t\tatoms = temp;", "-\t\t}", "-\t} else {", "-\t\tint[] temp = new int [nitems [0]];", "-\t\tint index = 0;", "-\t\tfor (int i = 0; i < nitems [0]; i++) {", "-\t\t\tint atom = atoms [i];", "-\t\t\tif (atom != hMaxAtom && atom != vMaxAtom) {", "-\t\t\t\ttemp [index++] = atom;", "-\t\t\t}", "-\t\t}", "-\t\tatoms = new int [index];", "-\t\tSystem.arraycopy (temp, 0, atoms, 0, index);", "-\t}", "-", "-\tOS.XChangeProperty (xDisplay, xWindow, property, OS.XA_ATOM, 32, OS.PropModeReplace, atoms, atoms.length);", "+\tXClientMessageEvent xEvent = new XClientMessageEvent ();", "+\txEvent.type = OS.ClientMessage;", "+\txEvent.send_event = 1;", "+\txEvent.display = xDisplay;", "+\txEvent.window = xWindow;", "+\txEvent.message_type = property;", "+\txEvent.format = 32;", "+\txEvent.data [0] = maximized ? 1 : 0;", "+\txEvent.data [1] = hMaxAtom;", "+\txEvent.data [2] = vMaxAtom;", "+\tXWindowAttributes attributes = new XWindowAttributes ();", "+\tOS.XGetWindowAttributes (xDisplay, xWindow, attributes);", "+\tint rootWindow = OS.XRootWindowOfScreen (attributes.screen);", "+\tint event = OS.XtMalloc (XEvent.sizeof);", "+\tOS.memmove (event, xEvent, XClientMessageEvent.sizeof);", "+\tOS.XSendEvent (xDisplay, rootWindow, false, OS.SubstructureRedirectMask|OS.SubstructureNotifyMask, event);", "+\tOS.XSync (xDisplay, false);", "+\tOS.XtFree (event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597cccb292cc33ea4d2e0c936b825ac3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "fc62fa389f9358a82d98c59fbeba910f7ca8c593", "commitAfterChange": "df18f6c76e1c63f3858dc94fb10d9c5c530eb389", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void setMaximized (boolean maximized)", "signatureAfterChange": " public void setMaximized (boolean maximized)", "diff": ["-\tif (!OS.XtIsRealized (handle)) realizeWidget();", "+\tif (!OS.XtIsRealized (handle)) realizeWidget ();", "-\tif (xWindow != 0) {", "-\t\tint property = OS.XInternAtom (xDisplay, _NET_WM_STATE, true);", "-\t\tint maximizedHorz = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_HORZ, true);", "-\t\tint maximizedVert = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_VERT, true);", "-\t\tint[] atoms = new int[]{maximizedHorz, maximizedVert};", "-\t\tOS.XChangeProperty (xDisplay, xWindow, property, OS.XA_ATOM, 32, OS.PropModeReplace, atoms, atoms.length);", "+\tif (xWindow == 0) return;", "+\tint property = OS.XInternAtom (xDisplay, _NET_WM_STATE, true);", "+\tif (property == 0) return;", "+\tint hMaxAtom = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_HORZ, true);", "+\tint vMaxAtom = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_VERT, true);", "+\tif (hMaxAtom == 0 || vMaxAtom == 0) return;", "+\tint[] type = new int[1], format = new int[1], nitems = new int[1], bytes_after = new int[1], atomsPtr = new int[1];", "+\tOS.XGetWindowProperty (xDisplay, xWindow, property, 0, Integer.MAX_VALUE, false, OS.XA_ATOM, type, format, nitems, bytes_after, atomsPtr);", "+\tif (type [0] == OS.None) return;", "+\tint[] atoms = new int [nitems [0]];", "+\tOS.memmove (atoms, atomsPtr [0], nitems [0] * 4);", "+\t", "+\tif (maximized) {", "+\t\tboolean hasHmax = false;", "+\t\tboolean hasVmax = false;", "+\t\tfor (int i = 0; i < nitems [0]; i++) {", "+\t\t\tint atom = atoms [i];", "+\t\t\tif (atom == hMaxAtom) hasHmax = true;", "+\t\t\tif (atom == vMaxAtom) hasVmax = true;", "+\t\t}", "+\t\tif (!hasHmax) {", "+\t\t\tint[] temp = new int [atoms.length + 1];", "+\t\t\tSystem.arraycopy (atoms, 0, temp, 0, atoms.length);", "+\t\t\ttemp [atoms.length] = hMaxAtom;", "+\t\t\tatoms = temp;", "+\t\t}", "+\t\tif (!hasVmax) {", "+\t\t\tint[] temp = new int [atoms.length + 1];", "+\t\t\tSystem.arraycopy (atoms, 0, temp, 0, atoms.length);", "+\t\t\ttemp [atoms.length] = vMaxAtom;", "+\t\t\tatoms = temp;", "+\t\t}", "+\t} else {", "+\t\tint[] temp = new int [nitems [0]];", "+\t\tint index = 0;", "+\t\tfor (int i = 0; i < nitems [0]; i++) {", "+\t\t\tint atom = atoms [i];", "+\t\t\tif (atom != hMaxAtom && atom != vMaxAtom) {", "+\t\t\t\ttemp [index++] = atom;", "+\t\t\t}", "+\t\t}", "+\t\tatoms = new int [index];", "+\t\tSystem.arraycopy (temp, 0, atoms, 0, index);", "+", "+\tOS.XChangeProperty (xDisplay, xWindow, property, OS.XA_ATOM, 32, OS.PropModeReplace, atoms, atoms.length);"]}], "num": 57442}