{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "503d7117af6f62e8a5490097e255ea0e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c2c2874d226b56198e35b992eb0e9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ff62aa5e7c7f3d11ec529d730cde567330dcd9e8", "commitAfterChange": "ac42e8fd2deef73d52a56aa5bceb9a5ad7ecc239", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 98, "signatureBeforeChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "diff": ["+\tint columnIndex = 0;", "+\t\t\tcolumnIndex = i;", "+\tcell.setFont (item.getFont (columnIndex).handle);", "+", "+\tif (hooks (SWT.MeasureItem)) {", "+\t\tNSTableView tableView = (NSTableView)this.view;", "+\t\tint nsColumnIndex = (int)/*64*/tableView.columnWithIdentifier (new id (aTableColumn));", "+\t\tNSRect rect = tableView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "+\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "+\t\tNSSize contentSize = cell.cellSizeForBounds (rect);", "+", "+\t\tGCData data = new GCData ();", "+\t\tdata.paintRect = tableView.frame ();", "+\t\tGC gc = GC.cocoa_new (this, data);", "+\t\tgc.setFont (item.getFont (columnIndex));", "+\t\tint rowHeight = (int)tableView.rowHeight ();", "+\t\tEvent event = new Event ();", "+\t\tevent.item = item;", "+\t\tevent.gc = gc;", "+\t\tevent.index = columnIndex;", "+\t\tevent.x = (int)contentRect.x;", "+\t\tevent.y = (int)contentRect.y;", "+\t\tevent.width = (int)contentSize.width;", "+\t\tevent.height = rowHeight;", "+\t\tsendEvent (SWT.MeasureItem, event);", "+\t\tgc.dispose ();", "+\t\tif (isDisposed ()) return;", "+\t\tif (rowHeight < event.height) {", "+\t\t\ttableView.setRowHeight(event.height);", "+\t\t}", "+\t\tif (columnCount == 0) {", "+\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)contentSize.width);", "+\t\t\tif (item.customWidth != -1 || event.width != (int)contentSize.width) {", "+\t\t\t\titem.customWidth = event.width;\t", "+\t\t\t}", "+\t\t\tif (change != 0) setScrollWidth (item, false);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1fa2307a30a5a2ffb976a2cb51e29d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int cell, int tableColumn, int rowIndex)", "diff": ["-void tableView_willDisplayCell_forTableColumn_row (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ aCell, int /*long*/ aTableColumn, int /*long*/ rowIndex) {", "-\tif (checkColumn != null && aTableColumn == checkColumn.id) return;", "+void tableView_willDisplayCell_forTableColumn_row (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ cell, int /*long*/ tableColumn, int /*long*/ rowIndex) {", "+\tif (checkColumn != null && tableColumn == checkColumn.id) return;", "-\tImage image = item.image;", "-\tint columnIndex = 0;", "+\tint index = 0;", "-\t\tif (columns [i].nsColumn.id == aTableColumn) {", "-\t\t\timage = item.getImage (i);", "-\t\t\tcolumnIndex = i;", "+\t\tif (columns [i].nsColumn.id == tableColumn) {", "+\t\t\tindex = i;", "+\t\t\tbreak;", "-\tNSBrowserCell cell = new NSBrowserCell (aCell);", "-\tcell.setFont (item.getFont (columnIndex).handle);", "-\tcell.setImage (image != null ? image.handle : null);", "-\tcell.setLeaf (true);", "-", "-\tif (hooks (SWT.MeasureItem)) {", "-\t\tNSTableView tableView = (NSTableView)this.view;", "-\t\tint nsColumnIndex = (int)/*64*/tableView.columnWithIdentifier (new id (aTableColumn));", "-\t\tNSRect rect = tableView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\tNSSize contentSize = cell.cellSizeForBounds (rect);", "-", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = tableView.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tint rowHeight = (int)tableView.rowHeight ();", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "-\t\tevent.width = (int)Math.ceil (contentSize.width);", "-\t\tevent.height = rowHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (rowHeight < event.height) {", "-\t\t\ttableView.setRowHeight(event.height);", "-\t\t}", "-\t\tif (columnCount == 0) {", "-\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)Math.ceil (contentSize.width));", "-\t\t\tif (item.customWidth != -1 || event.width != (int)Math.ceil (contentSize.width)) {", "-\t\t\t\titem.customWidth = event.width;\t", "-\t\t\t}", "-\t\t\tif (change != 0) setScrollWidth (item, false);", "-\t\t}", "-\t}", "+\tImage image = item.getImage (index);", "+\tNSBrowserCell browserCell = new NSBrowserCell (cell);", "+\tbrowserCell.setImage (image != null ? image.handle : null);"]}], "num": 30254}