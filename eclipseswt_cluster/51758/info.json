{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec64688b02a61b3099ab6d9c479da221", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310a37ce96da0164a470274b7b85a771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5782a7a6c12d443e5d141047bc86f8591d5777b4", "commitAfterChange": "ff95f186106d1d356c813d019de91a816aab9e4e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\t//TODO - honor flags", "-\t\tcairo_font_extents_t extents = new cairo_font_extents_t();", "-\t\tCairo.cairo_font_extents(cairo, extents);", "-\t\tdouble baseline = y + extents.ascent;", "-\t\tCairo.cairo_move_to(cairo, x, baseline);", "-\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);", "-\t\tCairo.cairo_show_text(cairo, buffer);", "-\t\tCairo.cairo_new_path(cairo);", "-\t\treturn;", "+\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "+\t\t\t//TODO - honor flags", "+\t\t\tcairo_font_extents_t extents = new cairo_font_extents_t();", "+\t\t\tCairo.cairo_font_extents(cairo, extents);", "+\t\t\tdouble baseline = y + extents.ascent;", "+\t\t\tCairo.cairo_move_to(cairo, x, baseline);", "+\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);", "+\t\t\tCairo.cairo_show_text(cairo, buffer);", "+\t\t\tCairo.cairo_new_path(cairo);", "+\t\t\treturn;", "+\t\t}", "+\tif (cairo != 0) {", "+\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "+\t\t\tCairo.cairo_save(cairo);", "+\t\t\tif (data.backgroundPattern != null) {", "+\t\t\t\tCairo.cairo_set_source(cairo, data.backgroundPattern.handle);", "+\t\t\t} else {", "+\t\t\t\tGdkGCValues values = new GdkGCValues();", "+\t\t\t\tOS.gdk_gc_get_values(handle, values);", "+\t\t\t\tGdkColor color = new GdkColor();", "+\t\t\t\tcolor.pixel = values.background_pixel;", "+\t\t\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\t\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);", "+\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "+\t\t\t}", "+\t\t\tint[] width = new int[1], height = new int[1];", "+\t\t\tOS.pango_layout_get_size(data.layout, width, height);", "+\t\t\tCairo.cairo_rectangle(cairo, x, y, OS.PANGO_PIXELS(width[0]), OS.PANGO_PIXELS(height[0]));", "+\t\t\tCairo.cairo_fill(cairo);", "+\t\t\tCairo.cairo_restore(cairo);", "+\t\t}", "+\t\tCairo.cairo_move_to(cairo, x, y);", "+\t\tOS.pango_cairo_show_layout(cairo, data.layout);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa132907b11c33bc333bdcf0b0c342b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9e6ed5ddefaae266127428adb6c5fbedbb333dc4", "commitAfterChange": "ccd2d5aea4fb2e484cfeea5d7ce086a6f7e68860", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["+\tlong /*int*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tcheckGC(FOREGROUND);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\tlong /*int*/  context = OS.gtk_widget_get_style_context(data.device.shellHandle);", "+\t\t\tOS.gtk_render_focus(context, cairo, x, y, width, height);", "+\t\t} else {", "+\t\t\tint[] lineWidth = new int[1];", "+\t\t\tOS.gtk_widget_style_get(data.device.shellHandle, OS.focus_line_width, lineWidth, 0);", "+\t\t\tCairo.cairo_save(cairo);\t\t", "+\t\t\tCairo.cairo_set_line_width(cairo, lineWidth[0]);", "+\t\t\tdouble[] dashes = new double[]{1, 1};", "+\t\t\tdouble dash_offset = -lineWidth[0] / 2f;", "+\t\t\twhile (dash_offset < 0) dash_offset += 2;", "+\t\t\tCairo.cairo_set_dash(cairo, dashes, dashes.length, dash_offset);", "+\t\t\tCairo.cairo_rectangle(cairo, x + lineWidth[0] / 2f, y + lineWidth[0] / 2f, width, height);", "+\t\t\tCairo.cairo_stroke(cairo);", "+\t\t\tCairo.cairo_restore(cairo);", "+\t\t}", "+\t\treturn;", "+\t}", "-\tlong /*int*/ cairo = data.cairo;", "-\tif (cairo != 0) {", "-\t\tcheckGC(FOREGROUND);", "-\t\tint[] lineWidth = new int[1];", "-\t\tOS.gtk_widget_style_get(data.device.shellHandle, OS.focus_line_width, lineWidth, 0);", "-\t\tCairo.cairo_save(cairo);\t\t", "-\t\tCairo.cairo_set_line_width(cairo, lineWidth[0]);", "-\t\tdouble[] dashes = new double[]{1, 1};", "-\t\tdouble dash_offset = -lineWidth[0] / 2f;", "-\t\twhile (dash_offset < 0) dash_offset += 2;", "-\t\tCairo.cairo_set_dash(cairo, dashes, dashes.length, dash_offset);", "-\t\tCairo.cairo_rectangle(cairo, x + lineWidth[0] / 2f, y + lineWidth[0] / 2f, width, height);", "-\t\tCairo.cairo_stroke(cairo);", "-\t\tCairo.cairo_restore(cairo);", "-\t\treturn;", "-\t}", "-\tgtk_render_focus (style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);", "+\tOS.gtk_paint_focus(style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);"]}], "num": 51758}