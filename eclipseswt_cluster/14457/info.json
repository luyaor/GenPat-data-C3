{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c7f1bb3efa27d515eb8664a686321a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a99a6ffa95a26f802eb8272f50e37a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 72, "signatureBeforeChange": " void propagateHandle (boolean enabled, int widgetHandle)", "signatureAfterChange": "  int keyboardProc (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int keyboardProc (int nextHandler, int theEvent, int userData) {", "+\tint eventKind = OS.GetEventKind (theEvent);", "+\tswitch (eventKind) {", "+\t\tcase OS.kEventRawKeyDown:\t\t\t\treturn kEventRawKeyDown (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyModifiersChanged:\treturn kEventRawKeyModifiersChanged (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyRepeat:\t\t\treturn kEventRawKeyRepeat (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyUp:\t\t\t\treturn kEventRawKeyUp (nextHandler, theEvent, userData);", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}", "-}", "-void propagateHandle (boolean enabled, int widgetHandle) {", "-\t/* AW", "-\tint xDisplay = OS.XtDisplay (widgetHandle);", "-\tif (xDisplay == 0) return;", "-\tint xWindow = OS.XtWindow (widgetHandle);", "-\tif (xWindow == 0) return;", "-\t*/", "-\t/*", "-\t* Get the event mask from the widget.  The event mask", "-\t* returned by XtBuildEventMask () includes the masks", "-\t* associated with all callbacks and event handlers", "-\t* that have been hooked on the widget.", "-\t*/", "-        /* AW", "-\tint event_mask = OS.XtBuildEventMask (widgetHandle);", "-\tint do_not_propagate_mask =", "-\t\tOS.KeyPressMask | OS.KeyReleaseMask | OS.ButtonPressMask |", "-\t\tOS.ButtonReleaseMask | OS.PointerMotionMask;", "-\tif (!enabled) {", "-        */", "-\t\t/*", "-\t\t* Attempting to propogate EnterWindowMask and LeaveWindowMask", "-\t\t* causes an X error so these must be specially cleared out from", "-\t\t* the event mask, not included in the propogate mask.", "-\t\t*/", "-                /* AW", "-\t\tevent_mask &= ~(do_not_propagate_mask | OS.EnterWindowMask | OS.LeaveWindowMask);", "-\t\tdo_not_propagate_mask = 0;", "-\t}", "-\tXSetWindowAttributes attributes = new XSetWindowAttributes ();", "-\tattributes.event_mask = event_mask;", "-\tattributes.do_not_propagate_mask = do_not_propagate_mask;", "-\tOS.XChangeWindowAttributes (xDisplay, xWindow, OS.CWDontPropagate | OS.CWEventMask, attributes);", "-\tint [] argList = {OS.XmNtraversalOn, enabled ? 1 : 0};", "-\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "-    */", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5873a7e6ee5184804c02e519c288e775", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet2.java", "commitBeforeChange": "c94d457c96c4085292fadea397c26e705fe48550", "commitAfterChange": "1892b96441d5df27eff3326846647872f369d7a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-    TableColumn column1 = new TableColumn(table, SWT.NONE);", "+    final TableColumn column1 = new TableColumn(table, SWT.NONE);", "-    TableColumn column2 = new TableColumn(table, SWT.NONE);", "+    final TableColumn column2 = new TableColumn(table, SWT.NONE);", "-    column1.pack();", "-    column2.pack();", "-    column1.addListener(SWT.Selection, new Listener() {", "+    column1.setWidth(100);", "+    column2.setWidth(100);", "+    Listener sortListener = new Listener() {", "-            // sort column 1", "+            TableColumn column = (TableColumn)e.widget;", "+            int index = column == column1 ? 0 : 1;", "-                String value1 = items[i].getText(0);", "+                String value1 = items[i].getText(index);", "-                    String value2 = items[j].getText(0);", "+                    String value2 = items[j].getText(index);", "+            table.setSortColumn(column);", "-    });", "-    column2.addListener(SWT.Selection, new Listener() {", "-        public void handleEvent(Event e) {", "-            // sort column 2", "-            TableItem[] items = table.getItems();", "-            Collator collator = Collator.getInstance(Locale.getDefault());", "-            for (int i = 1; i < items.length; i++) {", "-                String value1 = items[i].getText(1);", "-                for (int j = 0; j < i; j++){", "-                    String value2 = items[j].getText(1);", "-                    if (collator.compare(value1, value2) < 0) {", "-                        String[] values = {items[i].getText(0), items[i].getText(1)};", "-                        items[i].dispose();", "-                        TableItem item = new TableItem(table, SWT.NONE, j);", "-                        item.setText(values);", "-                        items = table.getItems();", "-                        break;", "-                    }", "-                }", "-            }", "-        }", "-    });", "-    shell.open ();", "+    };", "+    column1.addListener(SWT.Selection, sortListener);", "+    column2.addListener(SWT.Selection, sortListener);", "+    table.setSortColumn(column1);", "+\ttable.setSortDirection(SWT.UP);", "+\tshell.setSize(shell.computeSize(SWT.DEFAULT, SWT.DEFAULT).x, 300);", "+    shell.open();"]}], "num": 14457}