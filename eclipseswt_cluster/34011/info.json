{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4a33c31eb4a49699988196fb6a508a2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c189a3c4caca220d1823ea6de981c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "22f744060d88cf1608df6901d274e64b2057dafe", "commitAfterChange": "6ac9b2722ec47c39865e69ca6ed181b7e475b6f8", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 98, "signatureBeforeChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "diff": ["-\t\t\t", "-\t\t\t//make sure initial start and end are valid char offsets ", "-\t\t\twhile (!isValidOffet (start [0], end [0])) {", "+\t\t\twhile (true) {", "-\t\t\t\tif (start [0] == newStart [0] && end [0] == newEnd [0]) break;", "+\t\t\t\tif (newStart [0] != start [0]) {", "+\t\t\t\t\tif (untranslateOffset (newStart [0]) != untranslateOffset (start [0])) break;", "+\t\t\t\t} else if (newEnd [0] != end [0]) {", "+\t\t\t\t\tif (untranslateOffset (newEnd [0]) != untranslateOffset (end [0]))  break;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\t\tend [0] = newEnd [0];", "+\t\t\t\tend [0] = newEnd [0]; ", "-\t\t\t", "-\t\t\tcode = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "-", "-\t\t\t//make sure resulting start and end are valid char offsets ", "-\t\t\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "-\t\t\twhile (!isValidOffet (start [0], end [0])) {", "-\t\t\t\tcode = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "-\t\t\t\tOS.SendMessage (handle, OS.EM_GETSEL, newStart, newEnd);", "-\t\t\t\tif (start [0] == newStart [0] && end [0] == newEnd [0]) break;", "-\t\t\t\tstart [0] = newStart [0];", "-\t\t\t\tend [0] = newEnd [0];", "-\t\t\t}", "-\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcc899edd92525b1ba5ae1078faef31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5d484c6476bc4892c9825b0c805179fe47e751d4", "commitAfterChange": "2efd019c0428e46dfacf8317bc1b4ae9f271e166", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\t\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderRight > 1 & showHighlight) width += HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\t\tif (borderRight > 1 & showHighlight) width += HIGHLIGHT_MARGIN;", "-\t\t\tif (borderLeft > 1 & showHighlight) x -= HIGHLIGHT_MARGIN;", "-\t\t\tif (borderRight > 1 & showHighlight) width += borderRight;", "-\t", "-\t// fill in client area", "-\tint width = size.x  - borderLeft - borderRight;", "-\tint height = size.y - borderTop - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "-\tint x = xClient - marginWidth;", "-\tint y = yClient - marginHeight;", "-\tgc.setForeground(background);", "-\tgc.fillRectangle(x, y, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69cb75d1c17400d676339f8f6955993", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "c64b166eb91342ebed0e339dc0c596666896fdd4", "commitAfterChange": "af9dda4d739318b0846eeaaef6dec147b928e93d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t void addDragHandlers()", "signatureAfterChange": " \t void addDragHandlers()", "diff": ["+\taddDragHandlers(cls);", "+\t", "+\t// If the content view can be image view, then add the dragging methods to image view too.", "+\t// This is used by Label so that dragging can work even when the Label has an image set on it.", "+\tint imageView = 0;", "+\tif ((imageView = OS.objc_msgSend(control.view.id, OS.sel_getImageView)) != 0) {", "+\t\tcls = OS.object_getClass(imageView);", "+\t\taddDragHandlers(cls);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809ff7ee33d70e1eff34d98293f31675", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "54d61f64a3cfcc4bdc1e0a884e2f49d46252416e", "commitAfterChange": "a975ef9f91d82b046bdbfc26d01710e99e6e893d", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  void setBackgroundTransparent (boolean transparent)", "signatureAfterChange": "  void setBackgroundTransparent (boolean transparent)", "diff": ["-\tif (EXPLORER_THEME) {", "-\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\tint bits = transparent ? OS.LVS_EX_TRANSPARENTBKGND : 0;", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, OS.LVS_EX_TRANSPARENTBKGND, bits);", "-\t\t\t/*", "-\t\t\t* Feature in Windows.  When LVM_SETEXTENDEDLISTVIEWSTYLE is", "-\t\t\t* used with LVS_EX_TRANSPARENTBKGND and LVM_SETSELECTEDCOLUMN", "-\t\t\t* is used to select a column, Windows fills the column with", "-\t\t\t* the selection color, drawing on top of the background image", "-\t\t\t* and any other custom drawing.  The fix is to clear (or set)", "-\t\t\t* the selected column.", "-\t\t\t*/", "-\t\t\tif ((sortDirection & (SWT.UP | SWT.DOWN)) != 0) {", "-\t\t\t\tif (sortColumn != null && !sortColumn.isDisposed ()) {", "-\t\t\t\t\tint column = transparent ? -1 : indexOf (sortColumn);", "-\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, column, 0);", "-\t\t\t\t\tif (column != OS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, column, 0)) {", "-\t\t\t\t\t\t/* ", "-\t\t\t\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is set, Windows", "-\t\t\t\t\t\t* does not redraw either the new or the previous selected column.", "-\t\t\t\t\t\t* The fix is to force a redraw.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn;", "-\t\t}", "-\t}", "-\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tif (!explorerTheme && (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t", "+\t\t\t", "-\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tif (!explorerTheme && (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e4f466138546fe8adc3fd5a93a6539", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "34d8f908103f79ef01befd5c75eb28b372b686b0", "commitAfterChange": "aa14e77e1ea6052ba1798c3e57a027ecd502ef50", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\t\t/*", "-\t\t* This code intentionally commented.", "-\t\t*/", "-//\t\tGC gc = GC.win32_new (struct.hDC, null);", "-//\t\tgc.drawImage (image, struct.left, struct.top);", "-\t\tint hImage = image.handle;", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP:", "-\t\t\t\tBITMAP bm = new BITMAP ();", "-\t\t\t\tOS.GetObject (hImage, BITMAP.sizeof, bm);", "-\t\t\t\tint hDC = OS.CreateCompatibleDC (struct.hDC);", "-\t\t\t\tint oldBitmap = OS.SelectObject (hDC, hImage);", "-\t\t\t\tOS.BitBlt (struct.hDC, struct.left, struct.top + 2, bm.bmWidth, bm.bmHeight, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\tOS.SelectObject (hDC, oldBitmap);", "-\t\t\t\tOS.DeleteDC (hDC);", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.ICON:", "-\t\t\t\tOS.DrawIconEx (struct.hDC, struct.left, struct.top + 2, hImage, 0, 0, 0, 0, OS.DI_NORMAL);", "-\t\t\t\tbreak;", "-\t\t}", "+\t\tGCData data = new GCData();", "+\t\tdata.device = display;", "+\t\tGC gc = GC.win32_new (struct.hDC, data);", "+\t\tgc.drawImage (image, struct.left, struct.top + 2);", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab39921a0ba3ed35554bbfc6b6f4e9fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "5673881707cbfd963bc0ed943607494119f5edb9", "commitAfterChange": "de2297113fcb0174b02c429f9d73e7ee7a1eccda", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": "  void setForegroundColor (long handle, GdkColor color)", "signatureAfterChange": "  void setForegroundColor (long handle, GdkColor color)", "diff": ["-\tOS.gtk_rc_style_set_fg (style, OS.GTK_STATE_ACTIVE, color);", "-\tflags = OS.gtk_rc_style_get_color_flags (style, OS.GTK_STATE_ACTIVE);", "-\tflags = (color == null) ? flags & ~OS.GTK_RC_FG: flags | OS.GTK_RC_FG;", "-\tOS.gtk_rc_style_set_color_flags (style, OS.GTK_STATE_ACTIVE, flags);", "-\tOS.gtk_rc_style_set_text (style, OS.GTK_STATE_ACTIVE, color);", "-\tflags = OS.gtk_rc_style_get_color_flags (style, OS.GTK_STATE_ACTIVE);", "-\tflags = (color == null) ? flags & ~OS.GTK_RC_TEXT: flags | OS.GTK_RC_TEXT;", "-\tOS.gtk_rc_style_set_color_flags (style, OS.GTK_STATE_ACTIVE, flags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "703fe5ff5b0d92cd5324d9777bacda38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c08ddd8028b85e1a566ab85b5ee5b04a964b5117", "commitAfterChange": "98f31eb88971d9a35908a7c8839849ff363fee13", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void setClipping(Region region)", "signatureAfterChange": " public void setClipping(Region region)", "diff": ["-\tif (clippingRgn != 0) OS.XDestroyRegion (clippingRgn);", "-\tclippingRgn = 0;", "+\tif (clipRgn != 0) OS.XDestroyRegion (clipRgn);", "+\tclipRgn = 0;", "-\t\tclippingRgn = OS.XCreateRegion ();", "-\t\tOS.XUnionRegion (clippingRgn, region.handle, clippingRgn);", "-\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeBounding, 0, 0, clippingRgn, OS.ShapeSet);", "-\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeClip, 0, 0, clippingRgn, OS.ShapeSet);", "+\t\tclipRgn = OS.XCreateRegion ();", "+\t\tOS.XUnionRegion (clipRgn, region.handle, clipRgn);", "+\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeBounding, 0, 0, clipRgn, OS.ShapeSet);", "+\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeClip, 0, 0, clipRgn, OS.ShapeSet);", "-\t\t// TODO - find a better way to clear region", "-\t\tint screen = OS.XDefaultScreen (xDisplay);", "-\t\tXRectangle xRect = new XRectangle ();", "-\t\txRect.width = (short) OS.XDisplayWidth (xDisplay, screen);", "-\t\txRect.height = (short) OS.XDisplayHeight (xDisplay, screen);", "-\t\tint rgn = OS.XCreateRegion ();", "-\t\tOS.XUnionRectWithRegion (xRect, rgn, rgn);", "-\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeBounding, 0, 0, rgn, OS.ShapeSet);", "-\t\tOS.XShapeCombineRegion (xDisplay, xWindow, OS.ShapeClip, 0, 0, rgn, OS.ShapeSet);", "-\t\tOS.XDestroyRegion (rgn);", "+\t\tOS.XShapeCombineMask (xDisplay, xWindow, OS.ShapeBounding, 0, 0, 0, OS.ShapeSet);", "+\t\tOS.XShapeCombineMask (xDisplay, xWindow, OS.ShapeClip, 0, 0, 0, OS.ShapeSet);"]}], "num": 34011}