{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d956ae7f0a3d9b1efa8f52fa370ad22f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0020c0cef1fcfaa8d0af36d99171722c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "32e55556edaebf8508bef5745c10b965f81c8b1b", "commitAfterChange": "d210fa9d39566655f9c3694b37a81a867775c6fb", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processKeyDown (int callData, int arg1, int int2)", "diff": ["+\tint keyval = OS.gdk_event_key_get_keyval (callData);", "+\tint [] state = new int [1];", "+\tOS.gdk_event_get_state (callData, state);", "+\tint shellHandle = _getShell ().topHandle ();", "+\tif (keyval==OS.GDK_Return && (state[0]&(OS.GDK_SHIFT_MASK|OS.GDK_CONTROL_MASK))==0)", "+\t\tif (OS.gtk_window_activate_default(shellHandle)) return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4291c5ea88e87e2fd12a9a24e088d30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r void createWidget (int index)", "signatureAfterChange": "\r \r void createWidget (int index)", "diff": ["-\tsetZOrder ();\r", "-\trealizeChildren ();\r", "+\t\r", "+\t/*", "+\t* Feature in MOTIF.  When a widget is created before the", "+\t* parent has been realized, the widget is created behind", "+\t* all siblings in the Z-order.  When a widget is created", "+\t* after the parent has been realized, it is created in", "+\t* front of all siblings.  This is not incorrect but is", "+\t* unexpected.  The fix is to force all widgets to always", "+\t* be created behind their siblings.", "+\t*/", "+\tint topHandle = topHandle ();", "+\tif (OS.XtIsRealized (topHandle)) {", "+\t\tint window = OS.XtWindow (topHandle);", "+\t\tif (window != 0) {", "+\t\t\tint display = OS.XtDisplay (topHandle);", "+\t\t\tif (display != 0) OS.XLowerWindow (display, window);", "+\t\t}", "+\t\t/*", "+\t\t* Make that the widget has been properly realized", "+\t\t* because the widget was created after the parent", "+\t\t* has been realized.  This is not part of the fix", "+\t\t* for Z-order in the code above. ", "+\t\t*/", "+\t\trealizeChildren ();", "+\t}\r", "+\t\r", "+\t/*\r", "+\t* Bug in Motif.  Under certain circumstances, when a\r", "+\t* text widget is created as a child of another control\r", "+\t* that has drag and drop, starting a drag in the text\r", "+\t* widget causes a protection fault.  The fix is to\r", "+\t* disable the built in drag and drop for all widgets\r", "+\t* by overriding the drag start traslation.\r", "+\t*/\r", "+\tDisplay display = getDisplay ();\r", "+\tOS.XtOverrideTranslations (handle, display.dragTranslations);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181971dac30cc0db9824290c27fdf7db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e19b8929298db4194771a475b4b9ef56a8238374", "commitAfterChange": "ca0c5209be7fe694c5578ad160491b05c77a1894", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 72, "signatureBeforeChange": "  void HandlePreviewMouseMove (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseMove (int sender, int e)", "diff": ["+\tif (display.dragDetectFrame != 0) {", "+\t\tOS.RoutedEventArgs_Handled (e, true);", "+\t\tint point = OS.MouseEventArgs_GetPosition (e, handle);", "+\t\tboolean contains = OS.Rect_Contains (display.dragRect, point);", "+\t\tOS.GCHandle_Free (point);", "+\t\tif (!contains) {", "+\t\t\tdisplay.dragging = true;", "+\t\t\tOS.DispatcherFrame_Continue (display.dragDetectFrame, false);", "+\t\t}", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95401658cbc2e911b816e184467d19ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "5db2fb61d4fecd76a6c34c4938ab8395b2d9e3f9", "commitAfterChange": "32e360dc902d08976ec41d91e3239162726fcb4e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public FontData open ()", "signatureAfterChange": "\r public FontData open ()", "diff": ["+\t\tLOGFONT logFont = fontData.data;\r", "+\t\tint lfHeight = logFont.lfHeight;\r", "+\t\tint hDC = OS.GetDC (0);\r", "+\t\tint pixels = -Compatibility.round (fontData.height * OS.GetDeviceCaps(hDC, OS.LOGPIXELSY), 72);\r", "+\t\tOS.ReleaseDC (0, hDC);\r", "+\t\tlogFont.lfHeight = pixels;\r", "-\t\tOS.MoveMemory (lpLogFont, fontData.data, LOGFONT.sizeof);\r", "+\t\tOS.MoveMemory (lpLogFont, logFont, LOGFONT.sizeof);\r", "+\t\tlogFont.lfHeight = lfHeight;\r"]}], "num": 25973}