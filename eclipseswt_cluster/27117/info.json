{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4de3c609cefaa607fc568d79edbe19b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc808e88858727bfe64969bd35152ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 72, "signatureBeforeChange": "  public void setSelectionBackground(Color[] colors, int[] percents)", "signatureAfterChange": " public void setBackground(Color[] colors, int[] percents, boolean vertical)", "diff": ["-", "-public void setSelectionBackground(Color[] colors, int[] percents) {", "+ */", "+public void setBackground(Color[] colors, int[] percents, boolean vertical) {", "-\t\t}", "-\t\tif (getDisplay().getDepth() < 15) {", "-\t\t\t// Don't use gradients on low color displays", "-\t\t\tcolors = new Color[] { colors[0] };", "-\t\t\tpercents = new int[] { };", "+\t\tif (getDisplay().getDepth() < 15) {", "+\t\t\t// Don't use gradients on low color displays", "+\t\t\tcolors = new Color[] {colors[0]};", "+\t\t\tpercents = new int[] {};", "+\t\t}", "-\tif (backgroundImage == null) {", "+\tif (bgImage == null) {", "-\t\t\tif (same) return;", "+\t\t\tif (same && this.gradientVertical == vertical) return;", "-\t\tbackgroundImage = null;", "+\t\tbgImage = null;", "-\t\tcloseBar.setBackground(background);", "+\t\tgradientVertical = false;", "+\t\tsetBackground((Color)null);", "-\t\tfor (int i = 0; i < colors.length; ++i)", "+\t\tfor (int i = 0; i < colors.length; ++i) {", "+\t\t}", "-\t\tfor (int i = 0; i < percents.length; ++i)", "+\t\tfor (int i = 0; i < percents.length; ++i) {", "-\t\tif (getDisplay().getDepth() < 15) closeBar.setBackground(background);", "-\t\telse closeBar.setBackground(gradientColors[gradientColors.length - 1]);", "+\t\t}", "+\t\tgradientVertical = vertical;", "+\t\tsetBackground(gradientColors[gradientColors.length-1]);", "-\tif (selectedIndex > -1) redrawTabArea(selectedIndex);", "+\tredraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d718b6c532e34cb5006588e8d5229bdd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "ca611642fc41807588637202b032414f273f2b1e", "commitAfterChange": "7f6898e7f25aa3abfc9d050db6890b8da8096e1f", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void setSelectionBackground(Color[] colors, int[] percents, boolean vertical)", "signatureAfterChange": " public void setSelectionBackground(Color[] colors, int[] percents, boolean vertical)", "diff": ["+\tint colorsLength;", "+\tColor highlightBeginColor = null;  //null == no highlight", "+", "-\t\tif (percents == null || percents.length != colors.length - 1) {", "+\t\t//The colors array can optionally have an extra entry which describes the highlight top color", "+\t\t//Thus its either one or two larger than the percents array", "+\t\tif (percents == null || ", "+\t\t\t\t! ((percents.length == colors.length - 1) || (percents.length == colors.length - 2))){", "+\t\t//If the colors is exactly two more than percents then last is highlight", "+\t\t//Keep track of *real* colorsLength (minus the highlight)", "+\t\tif(percents.length == colors.length - 2) {", "+\t\t\thighlightBeginColor = colors[colors.length - 1];", "+\t\t\tcolorsLength = colors.length - 1;", "+\t\t} else {", "+\t\t\tcolorsLength = colors.length;", "+\t\t}", "-\t\t\tcolors = new Color[] {colors[colors.length - 1]};", "+\t\t\tcolors = new Color[] {colors[colorsLength - 1]};", "+\t} else {", "+\t\tcolorsLength = 0;", "-\t\t\t(selectionGradientColors.length == colors.length)) {", "+\t\t\t(selectionGradientColors.length == colorsLength)) {", "-\t\tdeallocSelectionHighlightGradientColors();", "+\t\tsetSelectionHighlightGradientColor(null);", "-\t\tselectionGradientColors = new Color[colors.length];", "-\t\tfor (int i = 0; i < colors.length; ++i) {", "+\t\tselectionGradientColors = new Color[colorsLength];", "+\t\tfor (int i = 0; i < colorsLength; ++i) {", "-\t\tallocSelectionHighlightGradientColors();", "+\t\tsetSelectionHighlightGradientColor(highlightBeginColor);", "+}"]}], "num": 27117}