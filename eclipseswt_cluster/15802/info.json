{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43b1c180f94bf3977d3af78e8d419c13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2ab867d80e6dab10539d67fd9ad5ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid checkItems(TreeItem item, boolean checked)", "signatureAfterChange": " \t \tvoid checkItems(TreeItem item, boolean checked)", "diff": ["+\t", "-\t    /*", "-\t     * Note that this creates the whole tree underneath item", "-\t     * so that the checked/grayed state can be kept in the", "-\t     * UI only and updated when generate is called. This can", "-\t     * be very expensive.", "-\t     */", "-\t    checkChildren(item);", "+\t    updateGenAttribute(item);", "-\t    for (int i = 0; i < items.length; i++) {", "-\t        checkItems(items[i], checked);", "+\t    if (items.length == 1 && items[0].getData() == null) {", "+\t    \t/* Update model only if view is not created */", "+\t\t\tNode node = (Node)item.getData();", "+\t\t\tNodeList childNodes = node.getChildNodes();", "+\t\t\tfor (int i = 0, length = childNodes.getLength(); i < length; i++) {", "+\t\t\t\tcheckNodes(childNodes.item(i), checked);", "+\t\t\t}", "+\t    } else {", "+\t\t    for (int i = 0; i < items.length; i++) {", "+\t\t        checkItems(items[i], checked);", "+\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cf05abda6e7dac6c97ba653f8c35e54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d8c7ac1c238569192a4106f29243a448a4e0192d", "commitAfterChange": "1c8d6d064e4a8a70316f776a21806c7dda140423", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 51, "signatureBeforeChange": "  void setOrientation()", "signatureAfterChange": "  void setOrientation (boolean create)", "diff": ["-void setOrientation() {", "-\tif ((parent.style & SWT.RIGHT_TO_LEFT) != 0) {", "-\t\tif (handle != 0) OS.gtk_widget_set_direction (handle, OS.GTK_TEXT_DIR_RTL);", "-\t}", "+", "+void setOrientation (boolean create) {", "+    if ((style & SWT.RIGHT_TO_LEFT) != 0 || !create) {", "+    \tint dir = (style & SWT.RIGHT_TO_LEFT) != 0 ? OS.GTK_TEXT_DIR_RTL : OS.GTK_TEXT_DIR_LTR;", "+        if (handle != 0) OS.gtk_widget_set_direction (handle, dir);", "+        MenuItem [] items = getItems ();", "+        for (int i = 0; i < items.length; i++) {", "+            items [i].setOrientation (create);", "+        }", "+    }"]}], "num": 15802}