{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75ec6c48f003d4ba817015f547f95e26", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5c90d4eb27120b6409c13dcfb630c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "975199eb17e2305f5a5a50372359ef7b029c885d", "commitAfterChange": "98511ddfa0741aecb7c1436efce4e1c12d427239", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNCPaint (int hwnd, int wParam, int lParam)", "diff": ["-\t\t\t\tRECT clientRect = new RECT ();", "-\t\t\t\tOS.GetClientRect (hwnd, clientRect);", "-\t\t\t\tOS.MapWindowPoints (hwnd, 0, clientRect, 2);", "+\t\t\t\tboolean hVisible = false, vVisible = false;", "+\t\t\t\tSCROLLBARINFO psbi = new SCROLLBARINFO ();", "+\t\t\t\tpsbi.cbSize = SCROLLBARINFO.sizeof;", "+\t\t\t\tif (OS.GetScrollBarInfo (hwnd, OS.OBJID_HSCROLL, psbi)) {", "+\t\t\t\t\thVisible = (psbi.rgstate [0] & OS.STATE_SYSTEM_INVISIBLE) == 0;", "+\t\t\t\t}", "+\t\t\t\tif (OS.GetScrollBarInfo (hwnd, OS.OBJID_VSCROLL, psbi)) {", "+\t\t\t\t\tvVisible = (psbi.rgstate [0] & OS.STATE_SYSTEM_INVISIBLE) == 0;", "+\t\t\t\t}", "-\t\t\t\tcornerRect.left = Math.max (0, clientRect.right - windowRect.left);", "-\t\t\t\tcornerRect.top = Math.max (0, clientRect.bottom - windowRect.top);", "-\t\t\t\tcornerRect.right = Math.max (cornerRect.left, windowRect.right - windowRect.left - trimRect.right);", "-\t\t\t\tcornerRect.bottom = Math.max (cornerRect.top, windowRect.bottom - windowRect.top - trimRect.bottom);", "+\t\t\t\tcornerRect.right = windowRect.right - windowRect.left - trimRect.right;", "+\t\t\t\tcornerRect.bottom = windowRect.bottom - windowRect.top - trimRect.bottom;", "+\t\t\t\tcornerRect.left = cornerRect.right - (hVisible ? OS.GetSystemMetrics (OS.SM_CXVSCROLL) : 0);", "+\t\t\t\tcornerRect.top = cornerRect.bottom - (vVisible ? OS.GetSystemMetrics (OS.SM_CYHSCROLL) : 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21fa6398d126eddeeefde860cd130813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9497af67f76ea5c15589d54504ab01cdd8920ddb", "commitAfterChange": "230505d4ad827a1c4e6bb987a098d96d90c30b1b", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["-\t\tif (hwndParent != 0) {", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (hwndParent, rect);", "-\t\t\tOS.MapWindowPoints (hwndParent, handle, rect, 2);", "-\t\t\tRECT headerRect = new RECT ();", "-\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\t\t\tboolean scroll = headerRect.left < rect.left;", "-\t\t\tif (!scroll) {", "-\t\t\t\tint width = Math.min (rect.right - rect.left, headerRect.right - headerRect.left);", "-\t\t\t\tscroll = headerRect.left + width > rect.right;", "-\t\t\t}", "-\t\t\tif (scroll) {", "-\t\t\t\tSCROLLINFO info = new SCROLLINFO ();", "-\t\t\t\tinfo.cbSize = SCROLLINFO.sizeof;", "-\t\t\t\tinfo.fMask = OS.SIF_POS;", "-\t\t\t\tinfo.nPos = Math.max (0, headerRect.left - Tree.INSET / 2);", "-\t\t\t\tOS.SetScrollInfo (hwndParent, OS.SB_HORZ, info, true);", "-\t\t\t\tsetScrollWidth ();", "-\t\t\t}", "+\t\tforceResize ();", "+\t\tRECT rect = new RECT ();", "+\t\tOS.GetClientRect (hwndParent, rect);", "+\t\tOS.MapWindowPoints (hwndParent, handle, rect, 2);", "+\t\tRECT headerRect = new RECT ();", "+\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "+\t\tboolean scroll = headerRect.left < rect.left;", "+\t\tif (!scroll) {", "+\t\t\tint width = Math.min (rect.right - rect.left, headerRect.right - headerRect.left);", "+\t\t\tscroll = headerRect.left + width > rect.right;", "+\t\t}", "+\t\tif (scroll) {", "+\t\t\tSCROLLINFO info = new SCROLLINFO ();", "+\t\t\tinfo.cbSize = SCROLLINFO.sizeof;", "+\t\t\tinfo.fMask = OS.SIF_POS;", "+\t\t\tinfo.nPos = Math.max (0, headerRect.left - Tree.INSET / 2);", "+\t\t\tOS.SetScrollInfo (hwndParent, OS.SB_HORZ, info, true);", "+\t\t\tsetScrollWidth ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25888a439694fe460a6975591f15a6b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "bd61e9373da7273cd410271556ae244e7083bc6f", "commitAfterChange": "9d60ac884ad5436b1284ebea3463d0bfa1b3d278", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\tif ((ps.right - ps.left) != 0 && (ps.bottom - ps.top) != 0) {", "-\t\t\tint hTheme = 0;", "-\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\t\t\thTheme = OS.OpenThemeData (handle, EXPLORERBAR); ", "-\t\t\t}", "-\t\t\tRECT clipRect = new RECT ();", "-\t\t\tOS.SetRect (clipRect, ps.left, ps.top, ps.right, ps.bottom);", "-\t\t\tif (hTheme != 0) {", "-\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\t\tOS.DrawThemeBackground (hTheme, gc.handle, OS.EBP_HEADERBACKGROUND, 0, rect, clipRect);\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tdrawBackground (gc.handle);", "-\t\t\t}", "-\t\t\tboolean drawFocus = false;", "-\t\t\tif (handle == OS.GetFocus ()) {", "-\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\tdrawFocus = (uiState & OS.UISF_HIDEFOCUS) == 0;", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < itemCount; i++) {", "-\t\t\t\tExpandItem item = items[i];", "-\t\t\t\titem.drawItem (gc, hTheme, clipRect, i == focusIndex && drawFocus);\t\t", "-\t\t\t}", "-\t\t\tif (hTheme != 0) OS.CloseThemeData (hTheme);", "+\t\tint width = ps.right - ps.left;", "+\t\tint height = ps.bottom - ps.top;", "+\t\tif (width != 0 && height != 0) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\tdrawWidget (gc, rect);", "-\t\t\t\tevent.x = clipRect.left;", "-\t\t\t\tevent.y = clipRect.top;", "-\t\t\t\tevent.width = clipRect.right - clipRect.left;", "-\t\t\t\tevent.height = clipRect.bottom - clipRect.top;", "+\t\t\t\tevent.x = rect.left;", "+\t\t\t\tevent.y = rect.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34dea4331aaf0cac51cba4eb2653367f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e139d0ab76ea26e5296ceee7a81cdb4cd23f3694", "commitAfterChange": "bbce5172d2d0d10dab8588aa51fcb94c0df57391", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 100, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, i, hdItem);", "+\t\t\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, i, 0);", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "-\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, i, hdItem);", "+\t\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, i, 0);", "+\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "-\t\t\t\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [i] : item.background;", "+\t\t\t\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [index] : item.background;", "-\t\t\t\t\t\t\t\tImage image = item.images != null ? item.images [i] : null;", "+\t\t\t\t\t\t\t\tImage image = item.images != null ? item.images [index] : null;", "-\t\t\t\t\t\t\t\t\tif (item.strings != null && item.strings [i] != null) {", "-\t\t\t\t\t\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [i] : item.font;", "+\t\t\t\t\t\t\t\t\tif (item.strings != null && item.strings [index] != null) {", "+\t\t\t\t\t\t\t\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : item.font;", "-\t\t\t\t\t\t\t\t\t\t\tclrText = item.cellForeground != null ? item.cellForeground [i] : item.foreground;", "+\t\t\t\t\t\t\t\t\t\t\tclrText = item.cellForeground != null ? item.cellForeground [index] : item.foreground;", "-\t\t\t\t\t\t\t\t\t\tTreeColumn column = columns [i];", "+\t\t\t\t\t\t\t\t\t\tTreeColumn column = columns [index];", "-\t\t\t\t\t\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), item.strings [i], false);", "+\t\t\t\t\t\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), item.strings [index], false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3cba62559547af056f7964efebd7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 121, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tHDITEM oldItem = new HDITEM ();", "-\t\t\t\t\t\toldItem.mask = OS.HDI_WIDTH;", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, phdn.iItem, oldItem);", "-\t\t\t\t\t\tint deltaX = newItem.cxy - oldItem.cxy;", "-\t\t\t\t\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);", "-\t\t\t\t\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "-\t\t\t\t\t\trect.left = itemRect.right - gridWidth;", "+\t\t\t\t\t\tRECT itemRect = new RECT ();", "-\t\t\t\t\t\tint flags = OS.SW_INVALIDATE | OS.SW_ERASE;", "-\t\t\t\t\t\tOS.ScrollWindowEx (handle, deltaX, 0, rect, null, 0, null, flags);", "-\t\t\t\t\t\t//TODO - column flashes when resized", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);", "+\t\t\t\t\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "+\t\t\t\t\t\trect.left = itemRect.right - gridWidth;", "+\t\t\t\t\t\tif (backgroundImage != null) {", "+\t\t\t\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tHDITEM oldItem = new HDITEM ();", "+\t\t\t\t\t\t\toldItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, phdn.iItem, oldItem);", "+\t\t\t\t\t\t\tint deltaX = newItem.cxy - oldItem.cxy;", "+\t\t\t\t\t\t\tint flags = OS.SW_INVALIDATE | OS.SW_ERASE;", "+\t\t\t\t\t\t\tOS.ScrollWindowEx (handle, deltaX, 0, rect, null, 0, null, flags);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t//TODO - column flashes when resized and not double buffered", "-\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ece38260b88ee84db8829c4eb71738", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f53adb34530c9ea79987a97ca8b1f0d90d3f49f9", "commitAfterChange": "dab9408fe75fa7845756fb5f59bebb963ba6f502", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 131, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\t\t\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, order [start], itemRect);", "-\t\t\t\t\t\trect.left = Math.max (rect.left, itemRect.left);", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, order [end], itemRect);", "-\t\t\t\t\t\trect.right = Math.min (rect.right, itemRect.right);", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, order [start], headerRect);", "+\t\t\t\t\t\trect.left = Math.max (rect.left, headerRect.left);", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, order [end], headerRect);", "+\t\t\t\t\t\trect.right = Math.min (rect.right, headerRect.right);", "-\t\t\t\t\t\tRECT itemRect = new RECT ();", "+\t\t\t\t\t\tRECT headerRect = new RECT ();", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, itemRect);", "-\t\t\t\t\t\trect.right = Math.max (rect.right, itemRect.right);", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "+\t\t\t\t\t\trect.right = Math.max (rect.right, headerRect.right);", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, headerRect);", "-\t\t\t\t\t\trect.left = itemRect.right - gridWidth;", "+\t\t\t\t\t\trect.left = headerRect.right - gridWidth;", "-\t\t\t\t\t\t\trect.left = itemRect.left;", "-\t\t\t\t\t\t\trect.right = itemRect.right;", "+\t\t\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\t\t\trect.right = headerRect.right;"]}], "num": 37429}