{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "915102b89cefe1c17f06ec3de7fbe55c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6093dd9a1bea8c0baba4ac2c02a7e67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tint address = OS.gtk_editable_get_chars (handle, start, end);", "-\tif (address == 0) return null;", "+\tint address;", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\taddress = OS.gtk_editable_get_chars (handle, start, end);", "+\t} else {", "+\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "+\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, startIter, start);", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, endIter, end);", "+\t\taddress = OS.gtk_text_buffer_get_text (bufferHandle, startIter, endIter, true);", "+\t}", "+\tif (address == 0) return \"\";", "-\tbyte [] buffer1 = new byte [length];", "-\tOS.memmove (buffer1, address, length);", "+\tbyte [] buffer = new byte [length];", "+\tOS.memmove (buffer, address, length);", "-\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\treturn new String (buffer2, 0, buffer2.length);", "+\treturn new String (Converter.mbcsToWcs (null, buffer));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed924fa57a572e0770a5fa1e943f38ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "de57119d4c2e8cc6936a64281ecb9753509b7457", "commitAfterChange": "66765d120ac73f3ebfa5089726061e6ce4afe259", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tString text = getText ();", "-\tint length = text.length ();", "-\tif (length <= end) error (SWT.ERROR_INVALID_RANGE);", "-\t/*", "-\t* NOTE: The current implementation uses substring ()", "-\t* which can reference a potentially large character", "-\t* array.", "-\t*/", "-\treturn text.substring (start, end + 1);", "+\tint address;", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\taddress = OS.gtk_editable_get_chars (handle, start, end + 1);", "+\t} else {", "+\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "+\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, startIter, start);", "+\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, endIter, end + 1);", "+\t\taddress = OS.gtk_text_buffer_get_text (bufferHandle, startIter, endIter, true);", "+\t}", "+\tif (address == 0) return \"\";", "+\tint length = OS.strlen (address);", "+\tbyte [] buffer = new byte [length];", "+\tOS.memmove (buffer, address, length);", "+\tOS.g_free (address);", "+\treturn new String (Converter.mbcsToWcs (null, buffer));"]}], "num": 36183}