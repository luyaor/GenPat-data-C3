{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f408781715a1cf235db1034b35b379d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c74e5ba5c8e7b46a4dac33832744e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/LabelTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Label\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Label\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e414fa388a5e7295ee8177ba609419", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createSelectionGroup()", "signatureAfterChange": "\r \tvoid createSelectionGroup()", "diff": ["-*/\r", "-void createSelectionGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup selectionGroup = new Group(controlGroup, SWT.NULL);\r", "-\tselectionGroup.setLayout(new GridLayout());\r", "-\tGridData gridData = new GridData(GridData.HORIZONTAL_ALIGN_CENTER);\r", "-\tgridData.horizontalSpan = 2;\r", "-\tselectionGroup.setLayoutData(gridData);\r", "-\tselectionGroup.setText(resControls.getString(\"Selection\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tselectionScale = new Scale (selectionGroup, SWT.NULL);\r", "-\tselectionScale.setMaximum (100);\r", "-\tselectionScale.setSelection (50);\r", "-\tselectionScale.setPageIncrement (10);\r", "-\tselectionScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tselectionScale.addSelectionListener(new SelectionAdapter() {\r", "-\t\tpublic void widgetSelected(SelectionEvent event) {\r", "-\t\t\tsetWidgetSelection ();\r", "-\t\t};\r", "-\t});\r", "-\t\r", "-}\r", "+\t */\r", "+\tvoid createSelectionGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup selectionGroup = new Group(controlGroup, SWT.NULL);\r", "+\t\tselectionGroup.setLayout(new GridLayout());\r", "+\t\tGridData gridData = new GridData(GridData.HORIZONTAL_ALIGN_CENTER);\r", "+\t\tgridData.horizontalSpan = 2;\r", "+\t\tselectionGroup.setLayoutData(gridData);\r", "+\t\tselectionGroup.setText(ControlExample.getResourceString(\"Selection\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tselectionScale = new Scale (selectionGroup, SWT.NULL);\r", "+\t\tselectionScale.setMaximum (100);\r", "+\t\tselectionScale.setSelection (50);\r", "+\t\tselectionScale.setPageIncrement (10);\r", "+\t\tselectionScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tselectionScale.addSelectionListener(new SelectionAdapter() {\r", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t\tsetWidgetSelection ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "674d06fffc0e31a20eb40e508ed2d789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Slider_and_Scale\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Slider_and_Scale\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead8af05cd1c3cc34b344ec8205faf8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void createStyleGroup()", "signatureAfterChange": "\r \tvoid createStyleGroup()", "diff": ["-*/\r", "-void createStyleGroup() {\r", "-\tsuper.createStyleGroup();\r", "-\r", "-\t/* Create the extra widgets */\r", "-\treadOnlyButton = new Button (styleGroup, SWT.CHECK);\r", "-\treadOnlyButton.setText (resControls.getString(\"SWT_READ_ONLY\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup() {\r", "+\t\tsuper.createStyleGroup();\r", "+\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\treadOnlyButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\treadOnlyButton.setText (ControlExample.getResourceString(\"SWT_READ_ONLY\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaab0e768ec94445ac3eb2e120188160", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ComboTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t\r", "-\t/* Create a group for the combo box */\r", "-\tcomboGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tcomboGroup.setLayout (new GridLayout ());\r", "-\tcomboGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tcomboGroup.setText (resControls.getString(\"Combo\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the combo box */\r", "+\t\tcomboGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tcomboGroup.setLayout (new GridLayout ());\r", "+\t\tcomboGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tcomboGroup.setText (ControlExample.getResourceString(\"Combo\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4349960b4ad3e14d52199b3f774fa028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createControlGroup ()", "signatureAfterChange": "\r \tvoid createControlGroup ()", "diff": ["-*/\r", "-void createControlGroup () {\r", "-\t/*\r", "-\t* Create the \"Control\" group.  This is the group on the\r", "-\t* left half of each example tab.  It consists of the\r", "-\t* style group, the display group and the size group.\r", "-\t*/\t\r", "-\tcontrolGroup = new Group (tabFolderPage, SWT.NONE);\r", "-\tGridLayout gridLayout= new GridLayout ();\r", "-\tcontrolGroup.setLayout (gridLayout);\r", "-\tgridLayout.numColumns = 2;\r", "-\tgridLayout.makeColumnsEqualWidth = true;\r", "-\tcontrolGroup.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tcontrolGroup.setText (resControls.getString(\"Parameters\"));\r", "-\t/* Create individual groups inside the \"Control\" group */\r", "-\tcreateStyleGroup ();\r", "-\tcreateDisplayGroup ();\r", "-\tcreateSizeGroup ();\r", "-\r", "-\t/*\r", "-\t* For each Button child in the style group, add a selection\r", "-\t* listener that will recreate the example controls.  If the\r", "-\t* style group button is a RADIO button, ensure that the radio\r", "-\t* button is selected before recreating the example controls.\r", "-\t* When the user selects a RADIO button, the curreont RADIO\r", "-\t* button in the group is deselected and the new RADIO button\r", "-\t* is selected automatically.  The listeners are notified for\r", "-\t* both these operations but typically only do work when a RADIO\r", "-\t* button is selected.\r", "-\t*/\r", "-\tSelectionListener selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif ((event.widget.getStyle () & SWT.RADIO) != 0) {\r", "-\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\t}\r", "-\t\t\trecreateExampleWidgets ();\r", "-\t\t};\r", "-\t};\r", "-\tControl [] children = styleGroup.getChildren ();\r", "-\tfor (int i=0; i<children.length; i++) {\r", "-\t\tif (children [i] instanceof Button) {\r", "-\t\t\tButton button = (Button) children [i];\r", "-\t\t\tbutton.addSelectionListener (selectionListener);\r", "-\t\t}\r", "-}\r", "+\t */\r", "+\tvoid createControlGroup () {\r", "+\t\t/*\r", "+\t\t * Create the \"Control\" group.  This is the group on the\r", "+\t\t * left half of each example tab.  It consists of the\r", "+\t\t * style group, the display group and the size group.\r", "+\t\t */\t\r", "+\t\tcontrolGroup = new Group (tabFolderPage, SWT.NONE);\r", "+\t\tGridLayout gridLayout= new GridLayout ();\r", "+\t\tcontrolGroup.setLayout (gridLayout);\r", "+\t\tgridLayout.numColumns = 2;\r", "+\t\tgridLayout.makeColumnsEqualWidth = true;\r", "+\t\tcontrolGroup.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tcontrolGroup.setText (ControlExample.getResourceString(\"Parameters\"));\r", "+\t\r", "+\t\t/* Create individual groups inside the \"Control\" group */\r", "+\t\tcreateStyleGroup ();\r", "+\t\tcreateDisplayGroup ();\r", "+\t\tcreateSizeGroup ();\r", "+\t\r", "+\t\t/*\r", "+\t\t * For each Button child in the style group, add a selection\r", "+\t\t * listener that will recreate the example controls.  If the\r", "+\t\t * style group button is a RADIO button, ensure that the radio\r", "+\t\t * button is selected before recreating the example controls.\r", "+\t\t * When the user selects a RADIO button, the curreont RADIO\r", "+\t\t * button in the group is deselected and the new RADIO button\r", "+\t\t * is selected automatically.  The listeners are notified for\r", "+\t\t * both these operations but typically only do work when a RADIO\r", "+\t\t * button is selected.\r", "+\t\t */\r", "+\t\tSelectionListener selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif ((event.widget.getStyle () & SWT.RADIO) != 0) {\r", "+\t\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\t}\r", "+\t\t\t\trecreateExampleWidgets ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tControl [] children = styleGroup.getChildren ();\r", "+\t\tfor (int i=0; i<children.length; i++) {\r", "+\t\t\tif (children [i] instanceof Button) {\r", "+\t\t\t\tButton button = (Button) children [i];\r", "+\t\t\t\tbutton.addSelectionListener (selectionListener);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126d77a232e9942cf8154f90ede09f92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ListTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t\r", "-\t/* Create a group for the list */\r", "-\tlistGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tlistGroup.setLayout (new GridLayout ());\r", "-\tlistGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tlistGroup.setText (resControls.getString(\"List\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the list */\r", "+\t\tlistGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tlistGroup.setLayout (new GridLayout ());\r", "+\t\tlistGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tlistGroup.setText (ControlExample.getResourceString(\"List\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e1757c7d7e95f02f6c5edbe1f35cab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Tree\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Tree\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe91be76dec8b788b2b19ded3b0609be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ShellTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Shell\");\r", "-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Shell\");\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c70ca546ebd5bc2596e336a1e4797f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createPageIncrementGroup()", "signatureAfterChange": "\r \tvoid createPageIncrementGroup()", "diff": ["-*/\r", "-void createPageIncrementGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup pageIncrementGroup = new Group (controlGroup, SWT.NULL);\r", "-\tpageIncrementGroup.setLayout (new GridLayout ());\r", "-\tpageIncrementGroup.setText (resControls.getString(\"Page_Increment\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tpageIncrementScale = new Scale (pageIncrementGroup, SWT.NULL);\r", "-\tpageIncrementScale.setMaximum (100);\r", "-\tpageIncrementScale.setSelection (10);\r", "-\tpageIncrementScale.setPageIncrement (10);\r", "-\tpageIncrementScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tpageIncrementScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetIncrement ();\r", "-\t\t}\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createPageIncrementGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup pageIncrementGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tpageIncrementGroup.setLayout (new GridLayout ());\r", "+\t\tpageIncrementGroup.setText (ControlExample.getResourceString(\"Page_Increment\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tpageIncrementScale = new Scale (pageIncrementGroup, SWT.NULL);\r", "+\t\tpageIncrementScale.setMaximum (100);\r", "+\t\tpageIncrementScale.setSelection (10);\r", "+\t\tpageIncrementScale.setPageIncrement (10);\r", "+\t\tpageIncrementScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tpageIncrementScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetIncrement ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a488f9d2cf8baa86fc64db12dad34eda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ShellTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Shell\");\r", "-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Shell\");\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a738dfaed2de0aabc296884dcd2da3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tsuper.createStyleGroup ();\r", "-\r", "-\t/* Create the extra widgets */\r", "-\tsmoothButton = new Button (styleGroup, SWT.CHECK);\r", "-\tsmoothButton.setText (resControls.getString(\"SWT_SMOOTH\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tsuper.createStyleGroup ();\r", "+\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\tsmoothButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\tsmoothButton.setText (ControlExample.getResourceString(\"SWT_SMOOTH\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3138cf5e8b749c336f8696e945f796ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r void createThumbGroup()", "signatureAfterChange": "\r \tvoid createThumbGroup()", "diff": ["-*/\r", "-void createThumbGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup thumbGroup = new Group (controlGroup, SWT.NULL);\r", "-\tthumbGroup.setLayout (new GridLayout ());\r", "-\tthumbGroup.setText (resControls.getString(\"Thumb\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tthumbScale = new Scale (thumbGroup, SWT.NULL);\r", "-\tthumbScale.setMaximum (100);\r", "-\tthumbScale.setSelection (10);\r", "-\tthumbScale.setPageIncrement (10);\r", "-\tthumbScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tthumbScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetThumb ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createThumbGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup thumbGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tthumbGroup.setLayout (new GridLayout ());\r", "+\t\tthumbGroup.setText (ControlExample.getResourceString(\"Thumb\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tthumbScale = new Scale (thumbGroup, SWT.NULL);\r", "+\t\tthumbScale.setMaximum (100);\r", "+\t\tthumbScale.setSelection (10);\r", "+\t\tthumbScale.setPageIncrement (10);\r", "+\t\tthumbScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tthumbScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetThumb ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7210bfe5cf7918b2fbc6794ba3e1ea76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SashTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Sash\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Sash\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85667a441ae0a4bccefba10c71c241c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"ProgressBar\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"ProgressBar\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a4994b25577405151ec84dc95d957b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tstyleGroup = new Group (controlGroup, SWT.NONE);\r", "-\tstyleGroup.setLayout (new GridLayout ());\r", "-\tstyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tstyleGroup.setText (resControls.getString(\"Styles\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tstyleGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tstyleGroup.setLayout (new GridLayout ());\r", "+\t\tstyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tstyleGroup.setText (ControlExample.getResourceString(\"Styles\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a7f4ee6d5217dca68f5532d00e45994", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Text\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Text\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f854513a33613cf08d5813f3ec902581", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createIncrementGroup()", "signatureAfterChange": "\r \tvoid createIncrementGroup()", "diff": ["-*/\r", "-void createIncrementGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup incrementGroup = new Group (controlGroup, SWT.NULL);\r", "-\tincrementGroup.setLayout (new GridLayout ());\r", "-\tincrementGroup.setText (resControls.getString(\"Increment\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tincrementScale = new Scale (incrementGroup, SWT.NULL);\r", "-\tincrementScale.setMaximum (100);\r", "-\tincrementScale.setSelection (5);\r", "-\tincrementScale.setPageIncrement (10);\r", "-\tincrementScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tincrementScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent e) {\t\t\r", "-\t\t\tsetWidgetIncrement ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createIncrementGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup incrementGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tincrementGroup.setLayout (new GridLayout ());\r", "+\t\tincrementGroup.setText (ControlExample.getResourceString(\"Increment\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tincrementScale = new Scale (incrementGroup, SWT.NULL);\r", "+\t\tincrementScale.setMaximum (100);\r", "+\t\tincrementScale.setSelection (5);\r", "+\t\tincrementScale.setPageIncrement (10);\r", "+\t\tincrementScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tincrementScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {\t\t\r", "+\t\t\t\tsetWidgetIncrement ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807e181b817cc1742986e052a2295d85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createControlGroup ()", "signatureAfterChange": "\r \tvoid createControlGroup ()", "diff": ["-*/\r", "-void createControlGroup () {\r", "-\t/*\r", "-\t* Create the \"Control\" group.  This is the group on the\r", "-\t* left half of each example tab.  It consists of the\r", "-\t* style group, the display group and the size group.\r", "-\t*/\t\r", "-\tcontrolGroup = new Group (tabFolderPage, SWT.NONE);\r", "-\tGridLayout gridLayout= new GridLayout ();\r", "-\tcontrolGroup.setLayout (gridLayout);\r", "-\tgridLayout.numColumns = 2;\r", "-\tgridLayout.makeColumnsEqualWidth = true;\r", "-\tcontrolGroup.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tcontrolGroup.setText (resControls.getString(\"Parameters\"));\r", "-\t/* Create individual groups inside the \"Control\" group */\r", "-\tcreateStyleGroup ();\r", "-\tcreateDisplayGroup ();\r", "-\tcreateSizeGroup ();\r", "-\r", "-\t/*\r", "-\t* For each Button child in the style group, add a selection\r", "-\t* listener that will recreate the example controls.  If the\r", "-\t* style group button is a RADIO button, ensure that the radio\r", "-\t* button is selected before recreating the example controls.\r", "-\t* When the user selects a RADIO button, the curreont RADIO\r", "-\t* button in the group is deselected and the new RADIO button\r", "-\t* is selected automatically.  The listeners are notified for\r", "-\t* both these operations but typically only do work when a RADIO\r", "-\t* button is selected.\r", "-\t*/\r", "-\tSelectionListener selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif ((event.widget.getStyle () & SWT.RADIO) != 0) {\r", "-\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\t}\r", "-\t\t\trecreateExampleWidgets ();\r", "-\t\t};\r", "-\t};\r", "-\tControl [] children = styleGroup.getChildren ();\r", "-\tfor (int i=0; i<children.length; i++) {\r", "-\t\tif (children [i] instanceof Button) {\r", "-\t\t\tButton button = (Button) children [i];\r", "-\t\t\tbutton.addSelectionListener (selectionListener);\r", "-\t\t}\r", "-}\r", "+\t */\r", "+\tvoid createControlGroup () {\r", "+\t\t/*\r", "+\t\t * Create the \"Control\" group.  This is the group on the\r", "+\t\t * left half of each example tab.  It consists of the\r", "+\t\t * style group, the display group and the size group.\r", "+\t\t */\t\r", "+\t\tcontrolGroup = new Group (tabFolderPage, SWT.NONE);\r", "+\t\tGridLayout gridLayout= new GridLayout ();\r", "+\t\tcontrolGroup.setLayout (gridLayout);\r", "+\t\tgridLayout.numColumns = 2;\r", "+\t\tgridLayout.makeColumnsEqualWidth = true;\r", "+\t\tcontrolGroup.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tcontrolGroup.setText (ControlExample.getResourceString(\"Parameters\"));\r", "+\t\r", "+\t\t/* Create individual groups inside the \"Control\" group */\r", "+\t\tcreateStyleGroup ();\r", "+\t\tcreateDisplayGroup ();\r", "+\t\tcreateSizeGroup ();\r", "+\t\r", "+\t\t/*\r", "+\t\t * For each Button child in the style group, add a selection\r", "+\t\t * listener that will recreate the example controls.  If the\r", "+\t\t * style group button is a RADIO button, ensure that the radio\r", "+\t\t * button is selected before recreating the example controls.\r", "+\t\t * When the user selects a RADIO button, the curreont RADIO\r", "+\t\t * button in the group is deselected and the new RADIO button\r", "+\t\t * is selected automatically.  The listeners are notified for\r", "+\t\t * both these operations but typically only do work when a RADIO\r", "+\t\t * button is selected.\r", "+\t\t */\r", "+\t\tSelectionListener selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif ((event.widget.getStyle () & SWT.RADIO) != 0) {\r", "+\t\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\t}\r", "+\t\t\t\trecreateExampleWidgets ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tControl [] children = styleGroup.getChildren ();\r", "+\t\tfor (int i=0; i<children.length; i++) {\r", "+\t\t\tif (children [i] instanceof Button) {\r", "+\t\t\t\tButton button = (Button) children [i];\r", "+\t\t\t\tbutton.addSelectionListener (selectionListener);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75154deccaf26c288f09fef06e68464", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ButtonTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Button\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Button\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb23000f221cea3e1a87dbdf84755c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Table\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Table\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbec8718d893b4e89c54e1b9ff6033d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ListTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"List\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"List\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "132ea29c69d07003b6ebdd900771f003", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Text\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Text\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a746678f65b11132a63d025703ca03de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createIncrementGroup()", "signatureAfterChange": "\r \tvoid createIncrementGroup()", "diff": ["-*/\r", "-void createIncrementGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup incrementGroup = new Group (controlGroup, SWT.NULL);\r", "-\tincrementGroup.setLayout (new GridLayout ());\r", "-\tincrementGroup.setText (resControls.getString(\"Increment\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tincrementScale = new Scale (incrementGroup, SWT.NULL);\r", "-\tincrementScale.setMaximum (100);\r", "-\tincrementScale.setSelection (5);\r", "-\tincrementScale.setPageIncrement (10);\r", "-\tincrementScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tincrementScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent e) {\t\t\r", "-\t\t\tsetWidgetIncrement ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createIncrementGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup incrementGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tincrementGroup.setLayout (new GridLayout ());\r", "+\t\tincrementGroup.setText (ControlExample.getResourceString(\"Increment\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tincrementScale = new Scale (incrementGroup, SWT.NULL);\r", "+\t\tincrementScale.setMaximum (100);\r", "+\t\tincrementScale.setSelection (5);\r", "+\t\tincrementScale.setPageIncrement (10);\r", "+\t\tincrementScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tincrementScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {\t\t\r", "+\t\t\t\tsetWidgetIncrement ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991ae2e9a0a2e75f016022d396004a78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ComboTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t\r", "-\t/* Create a group for the combo box */\r", "-\tcomboGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tcomboGroup.setLayout (new GridLayout ());\r", "-\tcomboGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tcomboGroup.setText (resControls.getString(\"Combo\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the combo box */\r", "+\t\tcomboGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tcomboGroup.setLayout (new GridLayout ());\r", "+\t\tcomboGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tcomboGroup.setText (ControlExample.getResourceString(\"Combo\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c1c870cd79cdc540992beb65a24d16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r void createMaximumGroup()", "signatureAfterChange": "\r \tvoid createMaximumGroup()", "diff": ["-*/\r", "-void createMaximumGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup maximumGroup = new Group (controlGroup, SWT.NULL);\r", "-\tmaximumGroup.setLayout (new GridLayout ());\r", "-\tmaximumGroup.setText (resControls.getString(\"Maximum\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tmaximumScale = new Scale (maximumGroup, SWT.NULL);\r", "-\tmaximumScale.setMaximum (100);\r", "-\tmaximumScale.setSelection (100);\r", "-\tmaximumScale.setPageIncrement (10);\r", "-\tmaximumScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tmaximumScale.addSelectionListener(new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetMaximum ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createMaximumGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup maximumGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tmaximumGroup.setLayout (new GridLayout ());\r", "+\t\tmaximumGroup.setText (ControlExample.getResourceString(\"Maximum\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tmaximumScale = new Scale (maximumGroup, SWT.NULL);\r", "+\t\tmaximumScale.setMaximum (100);\r", "+\t\tmaximumScale.setSelection (100);\r", "+\t\tmaximumScale.setPageIncrement (10);\r", "+\t\tmaximumScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tmaximumScale.addSelectionListener(new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetMaximum ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac085af12ad2ebb3a046dcef81af9eb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"ToolBar\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"ToolBar\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b679d3c64b5c3442342a181a1e591d7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"ToolBar\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"ToolBar\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb16d4f73b5b1d93763d790101d3ea99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup()", "signatureAfterChange": "\r \tvoid createExampleGroup()", "diff": ["-*/\r", "-void createExampleGroup() {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the progress bar */\r", "-\tprogressBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tprogressBarGroup.setLayout (new GridLayout ());\r", "-\tprogressBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tprogressBarGroup.setText (resControls.getString(\"ProgressBar\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup() {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the progress bar */\r", "+\t\tprogressBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tprogressBarGroup.setLayout (new GridLayout ());\r", "+\t\tprogressBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tprogressBarGroup.setText (ControlExample.getResourceString(\"ProgressBar\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63440d4e079507a3188272f958ddc058", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ComboTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Combo\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Combo\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1547e6220a8c9462686144f29799123c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SashTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Sash\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Sash\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c32307b391886aba4df0448e2fe1277", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tstyleGroup = new Group (controlGroup, SWT.NONE);\r", "-\tstyleGroup.setLayout (new GridLayout ());\r", "-\tstyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tstyleGroup.setText (resControls.getString(\"Styles\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tstyleGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tstyleGroup.setLayout (new GridLayout ());\r", "+\t\tstyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tstyleGroup.setText (ControlExample.getResourceString(\"Styles\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62bc3b2361fefd0bdac350e646526ee4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ComboTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Combo\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Combo\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ebb2dff6e356c3ff051c9fe090b0d8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ShellTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void createButtonSelected(SelectionEvent event)", "signatureAfterChange": "\r \tpublic void createButtonSelected(SelectionEvent event)", "diff": ["+\t */\r", "+\tpublic void createButtonSelected(SelectionEvent event) {\r", "+\t\r", "+\t\t/*\r", "+\t\t * Remember the example shells so they\r", "+\t\t * can be disposed by the user.\r", "+\t\t */\r", "+\t\tif (shellCount >= shells.length) {\r", "+\t\t\tShell [] newShells = new Shell [shells.length + 4];\r", "+\t\t\tSystem.arraycopy (shells, 0, newShells, 0, shells.length);\r", "+\t\t\tshells = newShells;\r", "+\t\t}\r", "+\t\r", "+\t\t/* Compute the shell style */\r", "+\t\tint style = SWT.NONE;\r", "+\t\tif (noTrimButton.getSelection()) style |= SWT.NO_TRIM;\r", "+\t\tif (closeButton.getSelection()) style |= SWT.CLOSE;\r", "+\t\tif (titleButton.getSelection()) style |= SWT.TITLE;\r", "+\t\tif (minButton.getSelection()) style |= SWT.MIN;\r", "+\t\tif (maxButton.getSelection()) style |= SWT.MAX;\r", "+\t\tif (borderButton.getSelection()) style |= SWT.BORDER;\r", "+\t\tif (resizeButton.getSelection()) style |= SWT.RESIZE;\r", "+\t\r", "+\t\t/* Create the shell with or without a parent */\r", "+\t\tif (noParentButton.getSelection ()) {\r", "+\t\t\tshells [shellCount] = new Shell (style);\r", "+\t\t} else {\r", "+\t\t\tShell shell = tabFolderPage.getShell ();\r", "+\t\t\tshells [shellCount] = new Shell (shell, style);\r", "+\t\t}\r", "+\t\r", "+\t\t/* Set the size, title and open the shell */\r", "+\t\tshells [shellCount].setSize (300, 100);\r", "+\t\tshells [shellCount].setText (ControlExample.getResourceString(\"Title\") + shellCount);\r", "+\t\tshells [shellCount++].open ();\r", "+\t}\r", "-*/\r", "-public void createButtonSelected(SelectionEvent event) {\r", "-\r", "-\t/*\r", "-\t* Remember the example shells so they\r", "-\t* can be disposed by the user.\r", "-\t*/\r", "-\tif (shellCount >= shells.length) {\r", "-\t\tShell [] newShells = new Shell [shells.length + 4];\r", "-\t\tSystem.arraycopy (shells, 0, newShells, 0, shells.length);\r", "-\t\tshells = newShells;\r", "-\r", "-\t/* Compute the shell style */\r", "-\tint style = SWT.NONE;\r", "-\tif (noTrimButton.getSelection()) style |= SWT.NO_TRIM;\r", "-\tif (closeButton.getSelection()) style |= SWT.CLOSE;\r", "-\tif (titleButton.getSelection()) style |= SWT.TITLE;\r", "-\tif (minButton.getSelection()) style |= SWT.MIN;\r", "-\tif (maxButton.getSelection()) style |= SWT.MAX;\r", "-\tif (borderButton.getSelection()) style |= SWT.BORDER;\r", "-\tif (resizeButton.getSelection()) style |= SWT.RESIZE;\r", "-\r", "-\t/* Create the shell with or without a parent */\r", "-\tif (noParentButton.getSelection ()) {\r", "-\t\tshells [shellCount] = new Shell (style);\r", "-\t} else {\r", "-\t\tShell shell = tabFolderPage.getShell ();\r", "-\t\tshells [shellCount] = new Shell (shell, style);\r", "-\t}\r", "-\r", "-\t/* Set the size, title and open the shell */\r", "-\tshells [shellCount].setSize (300, 100);\r", "-\tshells [shellCount].setText (resControls.getString(\"Title\") + shellCount);\r", "-\tshells [shellCount++].open ();\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7ef4db9950feb5128884c725bc4546", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r void createThumbGroup()", "signatureAfterChange": "\r \tvoid createThumbGroup()", "diff": ["-*/\r", "-void createThumbGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup thumbGroup = new Group (controlGroup, SWT.NULL);\r", "-\tthumbGroup.setLayout (new GridLayout ());\r", "-\tthumbGroup.setText (resControls.getString(\"Thumb\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tthumbScale = new Scale (thumbGroup, SWT.NULL);\r", "-\tthumbScale.setMaximum (100);\r", "-\tthumbScale.setSelection (10);\r", "-\tthumbScale.setPageIncrement (10);\r", "-\tthumbScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tthumbScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetThumb ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createThumbGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup thumbGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tthumbGroup.setLayout (new GridLayout ());\r", "+\t\tthumbGroup.setText (ControlExample.getResourceString(\"Thumb\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tthumbScale = new Scale (thumbGroup, SWT.NULL);\r", "+\t\tthumbScale.setMaximum (100);\r", "+\t\tthumbScale.setSelection (10);\r", "+\t\tthumbScale.setPageIncrement (10);\r", "+\t\tthumbScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tthumbScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetThumb ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257d6c811a23d2ea79af5b7e1c85c1be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createPageIncrementGroup()", "signatureAfterChange": "\r \tvoid createPageIncrementGroup()", "diff": ["-*/\r", "-void createPageIncrementGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup pageIncrementGroup = new Group (controlGroup, SWT.NULL);\r", "-\tpageIncrementGroup.setLayout (new GridLayout ());\r", "-\tpageIncrementGroup.setText (resControls.getString(\"Page_Increment\"));\r", "-\r", "-\t/* Create the scale widget */\r", "-\tpageIncrementScale = new Scale (pageIncrementGroup, SWT.NULL);\r", "-\tpageIncrementScale.setMaximum (100);\r", "-\tpageIncrementScale.setSelection (10);\r", "-\tpageIncrementScale.setPageIncrement (10);\r", "-\tpageIncrementScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tpageIncrementScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetIncrement ();\r", "-\t\t}\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createPageIncrementGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup pageIncrementGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tpageIncrementGroup.setLayout (new GridLayout ());\r", "+\t\tpageIncrementGroup.setText (ControlExample.getResourceString(\"Page_Increment\"));\r", "+\t\r", "+\t\t/* Create the scale widget */\r", "+\t\tpageIncrementScale = new Scale (pageIncrementGroup, SWT.NULL);\r", "+\t\tpageIncrementScale.setMaximum (100);\r", "+\t\tpageIncrementScale.setSelection (10);\r", "+\t\tpageIncrementScale.setPageIncrement (10);\r", "+\t\tpageIncrementScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tpageIncrementScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetIncrement ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b4be74c76af4aafdccec30a2dbf131a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Tree\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Tree\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7518b431304de05e3609c12b45049a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/LabelTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Label\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Label\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "228b656dfc42775c373452e55f555e95", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r void createMaximumGroup()", "signatureAfterChange": "\r \tvoid createMaximumGroup()", "diff": ["-*/\r", "-void createMaximumGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup maximumGroup = new Group (controlGroup, SWT.NULL);\r", "-\tmaximumGroup.setLayout (new GridLayout ());\r", "-\tmaximumGroup.setText (resControls.getString(\"Maximum\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tmaximumScale = new Scale (maximumGroup, SWT.NULL);\r", "-\tmaximumScale.setMaximum (100);\r", "-\tmaximumScale.setSelection (100);\r", "-\tmaximumScale.setPageIncrement (10);\r", "-\tmaximumScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tmaximumScale.addSelectionListener(new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetMaximum ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createMaximumGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup maximumGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tmaximumGroup.setLayout (new GridLayout ());\r", "+\t\tmaximumGroup.setText (ControlExample.getResourceString(\"Maximum\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tmaximumScale = new Scale (maximumGroup, SWT.NULL);\r", "+\t\tmaximumScale.setMaximum (100);\r", "+\t\tmaximumScale.setSelection (100);\r", "+\t\tmaximumScale.setPageIncrement (10);\r", "+\t\tmaximumScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tmaximumScale.addSelectionListener(new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetMaximum ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d670b325b70869a96d4a7b9dd05e6e56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"ProgressBar\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"ProgressBar\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0432ca47d59bc45fe0b8d2501bd934", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createMinimumGroup()", "signatureAfterChange": "\r \tvoid createMinimumGroup()", "diff": ["-*/\r", "-void createMinimumGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup minimumGroup = new Group (controlGroup, SWT.NULL);\r", "-\tminimumGroup.setLayout (new GridLayout ());\r", "-\tminimumGroup.setText (resControls.getString(\"Minimum\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tminimumScale = new Scale (minimumGroup, SWT.NULL);\r", "-\tminimumScale.setMaximum (100);\r", "-\tminimumScale.setPageIncrement (10);\r", "-\tminimumScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tminimumScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetMinimum ();\r", "-\t\t};\r", "-\t});\r", "-\r", "-}\r", "+\t */\r", "+\tvoid createMinimumGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup minimumGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tminimumGroup.setLayout (new GridLayout ());\r", "+\t\tminimumGroup.setText (ControlExample.getResourceString(\"Minimum\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tminimumScale = new Scale (minimumGroup, SWT.NULL);\r", "+\t\tminimumScale.setMaximum (100);\r", "+\t\tminimumScale.setPageIncrement (10);\r", "+\t\tminimumScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tminimumScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetMinimum ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2aaf3900a2a3e610d70eb08fc84701", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tsuper.createStyleGroup ();\r", "-\t/* Create the extra widgets */\r", "-\tfullSelectionButton = new Button (styleGroup, SWT.CHECK);\r", "-\tfullSelectionButton.setText (resControls.getString(\"SWT_FULL_SELECTION\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tsuper.createStyleGroup ();\r", "+\t\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\tfullSelectionButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\tfullSelectionButton.setText (ControlExample.getResourceString(\"SWT_FULL_SELECTION\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87ec42b77ecf653bc100dac561ff570", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ListTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t\r", "-\t/* Create a group for the list */\r", "-\tlistGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tlistGroup.setLayout (new GridLayout ());\r", "-\tlistGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tlistGroup.setText (resControls.getString(\"List\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the list */\r", "+\t\tlistGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tlistGroup.setLayout (new GridLayout ());\r", "+\t\tlistGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tlistGroup.setText (ControlExample.getResourceString(\"List\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aa89ba973ef4ef677ce699032be72b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tsuper.createStyleGroup ();\r", "-\r", "-\t/* Create the extra widgets */\r", "-\tsmoothButton = new Button (styleGroup, SWT.CHECK);\r", "-\tsmoothButton.setText (resControls.getString(\"SWT_SMOOTH\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tsuper.createStyleGroup ();\r", "+\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\tsmoothButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\tsmoothButton.setText (ControlExample.getResourceString(\"SWT_SMOOTH\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44beab047ff16baef14f5a5601a49790", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createStyleGroup ()", "signatureAfterChange": "\r \tvoid createStyleGroup ()", "diff": ["-*/\r", "-void createStyleGroup () {\r", "-\tsuper.createStyleGroup ();\r", "-\t/* Create the extra widgets */\r", "-\tfullSelectionButton = new Button (styleGroup, SWT.CHECK);\r", "-\tfullSelectionButton.setText (resControls.getString(\"SWT_FULL_SELECTION\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup () {\r", "+\t\tsuper.createStyleGroup ();\r", "+\t\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\tfullSelectionButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\tfullSelectionButton.setText (ControlExample.getResourceString(\"SWT_FULL_SELECTION\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fff010a945667fa41fe95589140a9e59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ShellTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void createButtonSelected(SelectionEvent event)", "signatureAfterChange": "\r \tpublic void createButtonSelected(SelectionEvent event)", "diff": ["+\t */\r", "+\tpublic void createButtonSelected(SelectionEvent event) {\r", "+\t\r", "+\t\t/*\r", "+\t\t * Remember the example shells so they\r", "+\t\t * can be disposed by the user.\r", "+\t\t */\r", "+\t\tif (shellCount >= shells.length) {\r", "+\t\t\tShell [] newShells = new Shell [shells.length + 4];\r", "+\t\t\tSystem.arraycopy (shells, 0, newShells, 0, shells.length);\r", "+\t\t\tshells = newShells;\r", "+\t\t}\r", "+\t\r", "+\t\t/* Compute the shell style */\r", "+\t\tint style = SWT.NONE;\r", "+\t\tif (noTrimButton.getSelection()) style |= SWT.NO_TRIM;\r", "+\t\tif (closeButton.getSelection()) style |= SWT.CLOSE;\r", "+\t\tif (titleButton.getSelection()) style |= SWT.TITLE;\r", "+\t\tif (minButton.getSelection()) style |= SWT.MIN;\r", "+\t\tif (maxButton.getSelection()) style |= SWT.MAX;\r", "+\t\tif (borderButton.getSelection()) style |= SWT.BORDER;\r", "+\t\tif (resizeButton.getSelection()) style |= SWT.RESIZE;\r", "+\t\r", "+\t\t/* Create the shell with or without a parent */\r", "+\t\tif (noParentButton.getSelection ()) {\r", "+\t\t\tshells [shellCount] = new Shell (style);\r", "+\t\t} else {\r", "+\t\t\tShell shell = tabFolderPage.getShell ();\r", "+\t\t\tshells [shellCount] = new Shell (shell, style);\r", "+\t\t}\r", "+\t\r", "+\t\t/* Set the size, title and open the shell */\r", "+\t\tshells [shellCount].setSize (300, 100);\r", "+\t\tshells [shellCount].setText (ControlExample.getResourceString(\"Title\") + shellCount);\r", "+\t\tshells [shellCount++].open ();\r", "+\t}\r", "-*/\r", "-public void createButtonSelected(SelectionEvent event) {\r", "-\r", "-\t/*\r", "-\t* Remember the example shells so they\r", "-\t* can be disposed by the user.\r", "-\t*/\r", "-\tif (shellCount >= shells.length) {\r", "-\t\tShell [] newShells = new Shell [shells.length + 4];\r", "-\t\tSystem.arraycopy (shells, 0, newShells, 0, shells.length);\r", "-\t\tshells = newShells;\r", "-\r", "-\t/* Compute the shell style */\r", "-\tint style = SWT.NONE;\r", "-\tif (noTrimButton.getSelection()) style |= SWT.NO_TRIM;\r", "-\tif (closeButton.getSelection()) style |= SWT.CLOSE;\r", "-\tif (titleButton.getSelection()) style |= SWT.TITLE;\r", "-\tif (minButton.getSelection()) style |= SWT.MIN;\r", "-\tif (maxButton.getSelection()) style |= SWT.MAX;\r", "-\tif (borderButton.getSelection()) style |= SWT.BORDER;\r", "-\tif (resizeButton.getSelection()) style |= SWT.RESIZE;\r", "-\r", "-\t/* Create the shell with or without a parent */\r", "-\tif (noParentButton.getSelection ()) {\r", "-\t\tshells [shellCount] = new Shell (style);\r", "-\t} else {\r", "-\t\tShell shell = tabFolderPage.getShell ();\r", "-\t\tshells [shellCount] = new Shell (shell, style);\r", "-\t}\r", "-\r", "-\t/* Set the size, title and open the shell */\r", "-\tshells [shellCount].setSize (300, 100);\r", "-\tshells [shellCount].setText (resControls.getString(\"Title\") + shellCount);\r", "-\tshells [shellCount++].open ();\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d30e864e6f17d6769dcf9a0ee2a5f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the table */\r", "-\ttableGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttableGroup.setLayout (new GridLayout ());\r", "-\ttableGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttableGroup.setText (resControls.getString(\"Table\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the table */\r", "+\t\ttableGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttableGroup.setLayout (new GridLayout ());\r", "+\t\ttableGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttableGroup.setText (ControlExample.getResourceString(\"Table\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1c9f347a2b9b0e86819818f191956f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ListTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"List\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"List\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b2c701579737bdf3ceee9c97d74e9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ProgressBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup()", "signatureAfterChange": "\r \tvoid createExampleGroup()", "diff": ["-*/\r", "-void createExampleGroup() {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the progress bar */\r", "-\tprogressBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tprogressBarGroup.setLayout (new GridLayout ());\r", "-\tprogressBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tprogressBarGroup.setText (resControls.getString(\"ProgressBar\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup() {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the progress bar */\r", "+\t\tprogressBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tprogressBarGroup.setLayout (new GridLayout ());\r", "+\t\tprogressBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tprogressBarGroup.setText (ControlExample.getResourceString(\"ProgressBar\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26e767279bae513ac149a48b471b611", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void createStyleGroup()", "signatureAfterChange": "\r \tvoid createStyleGroup()", "diff": ["-*/\r", "-void createStyleGroup() {\r", "-\tsuper.createStyleGroup();\r", "-\r", "-\t/* Create the extra widgets */\r", "-\treadOnlyButton = new Button (styleGroup, SWT.CHECK);\r", "-\treadOnlyButton.setText (resControls.getString(\"SWT_READ_ONLY\"));\r", "-}\r", "+\t */\r", "+\tvoid createStyleGroup() {\r", "+\t\tsuper.createStyleGroup();\r", "+\t\r", "+\t\t/* Create the extra widgets */\r", "+\t\treadOnlyButton = new Button (styleGroup, SWT.CHECK);\r", "+\t\treadOnlyButton.setText (ControlExample.getResourceString(\"SWT_READ_ONLY\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903bfbf8e3b8ab192ee4a0ff0f353fc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void createSelectionGroup()", "signatureAfterChange": "\r \tvoid createSelectionGroup()", "diff": ["-*/\r", "-void createSelectionGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup selectionGroup = new Group(controlGroup, SWT.NULL);\r", "-\tselectionGroup.setLayout(new GridLayout());\r", "-\tGridData gridData = new GridData(GridData.HORIZONTAL_ALIGN_CENTER);\r", "-\tgridData.horizontalSpan = 2;\r", "-\tselectionGroup.setLayoutData(gridData);\r", "-\tselectionGroup.setText(resControls.getString(\"Selection\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tselectionScale = new Scale (selectionGroup, SWT.NULL);\r", "-\tselectionScale.setMaximum (100);\r", "-\tselectionScale.setSelection (50);\r", "-\tselectionScale.setPageIncrement (10);\r", "-\tselectionScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tselectionScale.addSelectionListener(new SelectionAdapter() {\r", "-\t\tpublic void widgetSelected(SelectionEvent event) {\r", "-\t\t\tsetWidgetSelection ();\r", "-\t\t};\r", "-\t});\r", "-\t\r", "-}\r", "+\t */\r", "+\tvoid createSelectionGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup selectionGroup = new Group(controlGroup, SWT.NULL);\r", "+\t\tselectionGroup.setLayout(new GridLayout());\r", "+\t\tGridData gridData = new GridData(GridData.HORIZONTAL_ALIGN_CENTER);\r", "+\t\tgridData.horizontalSpan = 2;\r", "+\t\tselectionGroup.setLayoutData(gridData);\r", "+\t\tselectionGroup.setText(ControlExample.getResourceString(\"Selection\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tselectionScale = new Scale (selectionGroup, SWT.NULL);\r", "+\t\tselectionScale.setMaximum (100);\r", "+\t\tselectionScale.setSelection (50);\r", "+\t\tselectionScale.setPageIncrement (10);\r", "+\t\tselectionScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tselectionScale.addSelectionListener(new SelectionAdapter() {\r", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t\tsetWidgetSelection ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b22b037ff5b516bb5119b0de55bdb0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SashTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r Composite createTabFolderPage (TabFolder tabFolder)", "signatureAfterChange": "\r \tComposite createTabFolderPage (TabFolder tabFolder)", "diff": ["-*/\r", "-Composite createTabFolderPage (TabFolder tabFolder) {\r", "-\t/*\r", "-\t* Create the page.  This example does not use layouts.\r", "-\t*/\r", "-\ttabFolderPage = new Composite(tabFolder, SWT.BORDER);\r", "-\r", "-\t/* Create the list and text widgets */\r", "-\tlist1 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "-\tlist1.setItems (ListData0);\r", "-\tlist2 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "-\tlist2.setItems (ListData1);\r", "-\ttext = new Text (tabFolderPage, SWT.MULTI | SWT.BORDER);\r", "-\ttext.setText (resControls.getString(\"Multi_line\"));\r", "-\r", "-\t/* Create the sashes */\r", "-\tvSash = new Sash (tabFolderPage, SWT.VERTICAL);\r", "-\thSash = new Sash (tabFolderPage, SWT.HORIZONTAL);\r", "-\t\r", "-\t/* Add the listeners */\r", "-\thSash.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (event.detail != SWT.DRAG) {\r", "-\t\t\t\thSash.setBounds (event.x, event.y, event.width, event.height);\r", "-\t\t\t\tlayout ();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t});\r", "-\tvSash.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (event.detail != SWT.DRAG) {\r", "-\t\t\t\tvSash.setBounds(event.x, event.y, event.width, event.height);\r", "-\t\t\t\tlayout ();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t});\r", "-\ttabFolderPage.addControlListener (new ControlAdapter () {\r", "-\t\tpublic void controlResized (ControlEvent event) {\r", "-\t\t\tshellResized ();\r", "-\t\t}\r", "-\t});\r", "-\r", "-\t/*\r", "-\t* Do not set the bounds of the lists, text and sashes here \r", "-\t* because this method is run before the widget is opened \r", "-\t* so we do not know how big the tabComposite is going to be.\r", "-\t* When the widget is opened a resize event will occur \r", "-\t* and the contained widgets can be sized accordingly.\r", "-\t*/\r", "-\treturn tabFolderPage; \r", "-}\r", "+\t */\r", "+\tComposite createTabFolderPage (TabFolder tabFolder) {\r", "+\t\t/*\r", "+\t\t * Create the page.  This example does not use layouts.\r", "+\t\t */\r", "+\t\ttabFolderPage = new Composite(tabFolder, SWT.BORDER);\r", "+\t\t/* Create the list and text widgets */\r", "+\t\tlist1 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "+\t\tlist1.setItems (ListData0);\r", "+\t\tlist2 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "+\t\tlist2.setItems (ListData1);\r", "+\t\ttext = new Text (tabFolderPage, SWT.MULTI | SWT.BORDER);\r", "+\t\ttext.setText (ControlExample.getResourceString(\"Multi_line\"));\r", "+\t\r", "+\t\t/* Create the sashes */\r", "+\t\tvSash = new Sash (tabFolderPage, SWT.VERTICAL);\r", "+\t\thSash = new Sash (tabFolderPage, SWT.HORIZONTAL);\r", "+\t\t\r", "+\t\t/* Add the listeners */\r", "+\t\thSash.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (event.detail != SWT.DRAG) {\r", "+\t\t\t\t\thSash.setBounds (event.x, event.y, event.width, event.height);\r", "+\t\t\t\t\tlayout ();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\tvSash.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (event.detail != SWT.DRAG) {\r", "+\t\t\t\t\tvSash.setBounds(event.x, event.y, event.width, event.height);\r", "+\t\t\t\t\tlayout ();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\ttabFolderPage.addControlListener (new ControlAdapter () {\r", "+\t\t\tpublic void controlResized (ControlEvent event) {\r", "+\t\t\t\tshellResized ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\r", "+\t\t/*\r", "+\t\t* Do not set the bounds of the lists, text and sashes here \r", "+\t\t* because this method is run before the widget is opened \r", "+\t\t* so we do not know how big the tabComposite is going to be.\r", "+\t\t* When the widget is opened a resize event will occur \r", "+\t\t* and the contained widgets can be sized accordingly.\r", "+\t\t*/\r", "+\t\treturn tabFolderPage; \r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa6f305908d4e75e7eaf876f20a4029", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/RangeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createMinimumGroup()", "signatureAfterChange": "\r \tvoid createMinimumGroup()", "diff": ["-*/\r", "-void createMinimumGroup() {\r", "-\r", "-\t/* Create the group */\r", "-\tGroup minimumGroup = new Group (controlGroup, SWT.NULL);\r", "-\tminimumGroup.setLayout (new GridLayout ());\r", "-\tminimumGroup.setText (resControls.getString(\"Minimum\"));\r", "-\r", "-\t/* Create a scale widget */\r", "-\tminimumScale = new Scale (minimumGroup, SWT.NULL);\r", "-\tminimumScale.setMaximum (100);\r", "-\tminimumScale.setPageIncrement (10);\r", "-\tminimumScale.setIncrement (5);\r", "-\r", "-\t/* Add the listeners */\r", "-\tminimumScale.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetMinimum ();\r", "-\t\t};\r", "-\t});\r", "-\r", "-}\r", "+\t */\r", "+\tvoid createMinimumGroup() {\r", "+\t\r", "+\t\t/* Create the group */\r", "+\t\tGroup minimumGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tminimumGroup.setLayout (new GridLayout ());\r", "+\t\tminimumGroup.setText (ControlExample.getResourceString(\"Minimum\"));\r", "+\t\r", "+\t\t/* Create a scale widget */\r", "+\t\tminimumScale = new Scale (minimumGroup, SWT.NULL);\r", "+\t\tminimumScale.setMaximum (100);\r", "+\t\tminimumScale.setPageIncrement (10);\r", "+\t\tminimumScale.setIncrement (5);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tminimumScale.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetMinimum ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf692674b086fa185e40fcf561a5bba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ButtonTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Button\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Button\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea857be23156e4b0a9e9ab2f49c3ba81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Slider_and_Scale\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Slider_and_Scale\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5c4067d7eb67600cc5cfedaea19bf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SashTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r Composite createTabFolderPage (TabFolder tabFolder)", "signatureAfterChange": "\r \tComposite createTabFolderPage (TabFolder tabFolder)", "diff": ["-*/\r", "-Composite createTabFolderPage (TabFolder tabFolder) {\r", "-\t/*\r", "-\t* Create the page.  This example does not use layouts.\r", "-\t*/\r", "-\ttabFolderPage = new Composite(tabFolder, SWT.BORDER);\r", "-\r", "-\t/* Create the list and text widgets */\r", "-\tlist1 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "-\tlist1.setItems (ListData0);\r", "-\tlist2 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "-\tlist2.setItems (ListData1);\r", "-\ttext = new Text (tabFolderPage, SWT.MULTI | SWT.BORDER);\r", "-\ttext.setText (resControls.getString(\"Multi_line\"));\r", "-\r", "-\t/* Create the sashes */\r", "-\tvSash = new Sash (tabFolderPage, SWT.VERTICAL);\r", "-\thSash = new Sash (tabFolderPage, SWT.HORIZONTAL);\r", "-\t\r", "-\t/* Add the listeners */\r", "-\thSash.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (event.detail != SWT.DRAG) {\r", "-\t\t\t\thSash.setBounds (event.x, event.y, event.width, event.height);\r", "-\t\t\t\tlayout ();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t});\r", "-\tvSash.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (event.detail != SWT.DRAG) {\r", "-\t\t\t\tvSash.setBounds(event.x, event.y, event.width, event.height);\r", "-\t\t\t\tlayout ();\r", "-\t\t\t}\r", "-\t\t}\r", "-\t});\r", "-\ttabFolderPage.addControlListener (new ControlAdapter () {\r", "-\t\tpublic void controlResized (ControlEvent event) {\r", "-\t\t\tshellResized ();\r", "-\t\t}\r", "-\t});\r", "-\r", "-\t/*\r", "-\t* Do not set the bounds of the lists, text and sashes here \r", "-\t* because this method is run before the widget is opened \r", "-\t* so we do not know how big the tabComposite is going to be.\r", "-\t* When the widget is opened a resize event will occur \r", "-\t* and the contained widgets can be sized accordingly.\r", "-\t*/\r", "-\treturn tabFolderPage; \r", "-}\r", "+\t */\r", "+\tComposite createTabFolderPage (TabFolder tabFolder) {\r", "+\t\t/*\r", "+\t\t * Create the page.  This example does not use layouts.\r", "+\t\t */\r", "+\t\ttabFolderPage = new Composite(tabFolder, SWT.BORDER);\r", "+\t\t/* Create the list and text widgets */\r", "+\t\tlist1 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "+\t\tlist1.setItems (ListData0);\r", "+\t\tlist2 = new List (tabFolderPage, SWT.V_SCROLL | SWT.H_SCROLL | SWT.BORDER);\r", "+\t\tlist2.setItems (ListData1);\r", "+\t\ttext = new Text (tabFolderPage, SWT.MULTI | SWT.BORDER);\r", "+\t\ttext.setText (ControlExample.getResourceString(\"Multi_line\"));\r", "+\t\r", "+\t\t/* Create the sashes */\r", "+\t\tvSash = new Sash (tabFolderPage, SWT.VERTICAL);\r", "+\t\thSash = new Sash (tabFolderPage, SWT.HORIZONTAL);\r", "+\t\t\r", "+\t\t/* Add the listeners */\r", "+\t\thSash.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (event.detail != SWT.DRAG) {\r", "+\t\t\t\t\thSash.setBounds (event.x, event.y, event.width, event.height);\r", "+\t\t\t\t\tlayout ();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\tvSash.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (event.detail != SWT.DRAG) {\r", "+\t\t\t\t\tvSash.setBounds(event.x, event.y, event.width, event.height);\r", "+\t\t\t\t\tlayout ();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\ttabFolderPage.addControlListener (new ControlAdapter () {\r", "+\t\t\tpublic void controlResized (ControlEvent event) {\r", "+\t\t\t\tshellResized ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\r", "+\t\t/*\r", "+\t\t* Do not set the bounds of the lists, text and sashes here \r", "+\t\t* because this method is run before the widget is opened \r", "+\t\t* so we do not know how big the tabComposite is going to be.\r", "+\t\t* When the widget is opened a resize event will occur \r", "+\t\t* and the contained widgets can be sized accordingly.\r", "+\t\t*/\r", "+\t\treturn tabFolderPage; \r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb41adab4f981ffd48f83e4fc1c469a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r String getTabText ()", "signatureAfterChange": "\r \tString getTabText ()", "diff": ["-*/\r", "-String getTabText () {\r", "-\treturn resControls.getString(\"Table\");\r", "-}\r", "+\t */\r", "+\tString getTabText () {\r", "+\t\treturn ControlExample.getResourceString(\"Table\");\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2c723e025272539cb0f5c1f21aa51aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the table */\r", "-\ttableGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttableGroup.setLayout (new GridLayout ());\r", "-\ttableGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttableGroup.setText (resControls.getString(\"Table\"));\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the table */\r", "+\t\ttableGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttableGroup.setLayout (new GridLayout ());\r", "+\t\ttableGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.GRAB_VERTICAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttableGroup.setText (ControlExample.getResourceString(\"Table\"));\r", "+\t}\r"]}], "num": 50085}