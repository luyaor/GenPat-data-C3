{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1b6209fe54f9341db7d853ace0e4d4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3a01fea5f2012fed356e6de6d960b49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "f481299acdf856ebb25233ef7ba479ef2484cdd2", "commitAfterChange": "692c703dfe7cac0508c4e9053a99ca823ff182ce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void subtract (Region region)", "signatureAfterChange": " public void subtract (int[] pointArray)", "diff": ["+ */", "+public void subtract (int[] pointArray) {", "+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tshort[] points = new short[pointArray.length];", "+\tfor (int i = 0; i < pointArray.length; i++) {", "+\t\tpoints[i] = (short)pointArray[i];", "+\t}", "+\tint polyRgn = OS.XPolygonRegion(points, points.length / 2, OS.EvenOddRule);", "+\tOS.XSubtractRegion(handle, polyRgn, handle);", "+\tOS.XDestroyRegion(polyRgn);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ae7342ee98f1c0ce097b5fd3b5e778", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "95e9ec3284a21cb9a9c9aaed82eb4975812a7464", "commitAfterChange": "b87d89fa378565220a1d44aae261a05e4cd68227", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void subtract(Region region)", "signatureAfterChange": " public void subtract (int[] pointArray)", "diff": ["+ */", "+public void subtract (int[] pointArray) {", "+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (pointArray == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tint polyRgn = OS.NewRgn();", "+\tOS.OpenRgn();", "+\tOS.MoveTo((short)pointArray[0], (short)pointArray[1]);", "+\tfor (int i = 0; i < pointArray.length / 2; i++) {", "+\t\tOS.LineTo((short)pointArray[2 * i], (short)pointArray[2 * i + 1]);", "+\t}", "+\tOS.CloseRgn(polyRgn);", "+\tOS.DiffRgn(handle, polyRgn, handle);", "+\tOS.DisposeRgn(polyRgn);", "+}"]}], "num": 49122}