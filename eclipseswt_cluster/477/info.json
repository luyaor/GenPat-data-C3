{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fae1fd7bb64bb0697d5484e49dd26267", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "950584eb897fe61819f6b95c271a7e67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "99fd5244e9beb45150190295df96e600991eb03d", "commitAfterChange": "8a7498e489f1dd70af66d77f884ca47975b7639b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["+", "+\tif (customDraw && items != null) {", "+\t\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\t\tfor (int i = 0; i < itemCount; i++) {", "+\t\t\tif (items [i].cellBackground != null) {", "+\t\t\t\tint [] cellBackground = items [i].cellBackground;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - index);", "+\t\t\t\titems [i].cellBackground = temp;", "+\t\t\t}", "+\t\t\tif (items [i].cellForeground != null) {", "+\t\t\t\tint [] cellForeground = items [i].cellForeground;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - index);", "+\t\t\t\titems [i].cellForeground = temp;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "400d7536df38e4479a7171b4baea202f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "99fd5244e9beb45150190295df96e600991eb03d", "commitAfterChange": "8a7498e489f1dd70af66d77f884ca47975b7639b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["+\tint columnCount = count + 1;", "+\t}", "+\tif (customDraw && items != null) {", "+\t\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\t\tfor (int i = 0;  i < itemCount;  i++) {", "+\t\t\tif (items [i].cellBackground != null) {", "+\t\t\t\tint  [] cellBackground = items [i].cellBackground;", "+\t\t\t\tint  [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellBackground, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = -1;", "+\t\t\t\titems [i].cellBackground = temp;", "+\t\t\t}", "+\t\t\tif (items [i].cellForeground != null) {", "+\t\t\t\tint [] cellForeground = items [i].cellForeground;", "+\t\t\t\tint [] temp = new int [columnCount];", "+\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (cellForeground, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = -1;", "+\t\t\t\titems [i].cellForeground = temp;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88487c32cfeeb12b677d0704ab3eefbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "07b456597109483e0a174d96576008e1e9f5eda6", "commitAfterChange": "136dc2168a34ab266e5c250a608746c92a633e22", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 119, "signatureBeforeChange": " boolean updateItems()", "signatureAfterChange": " boolean updateItems(int showIndex)", "diff": ["-\tif (selectedIndex  != -1 && items[selectedIndex].showing) {", "-\t\tshowItem(items[selectedIndex]);", "-\t\treturn false;", "+}", "+boolean updateItems(int showIndex) {", "+\tif (!single && !mru && showIndex != -1) {", "+\t\t// make sure selected item will be showing", "+\t\tint idx = -1;", "+\t\tfor (int i = 0; i < priority.length; i++) {", "+\t\t\tif (priority[i] == showIndex) {", "+\t\t\t\tidx = i;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tif (priority[idx] > priority[0]) {", "+\t\t\tint maxWidth = getRightItemEdge() - borderLeft;", "+\t\t\tif (!simple) maxWidth -= curveWidth - 2*curveIndent;", "+\t\t\tGC gc = new GC(this);", "+\t\t\tint nextIndex = priority[idx];", "+\t\t\tCTabItem next = items[nextIndex];", "+\t\t\tint width = next.preferredWidth(gc, nextIndex == selectedIndex, true);", "+\t\t\twhile (idx > 1) {", "+\t\t\t\tnextIndex = priority[idx-1];", "+\t\t\t\tnext = items[nextIndex];", "+\t\t\t\twidth += next.preferredWidth(gc, nextIndex == selectedIndex, true);", "+\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\tidx--;", "+\t\t\t}", "+\t\t\tgc.dispose();", "+\t\t}", "+\t\tint[] newPriority = new int[priority.length];", "+\t\tSystem.arraycopy(priority, idx, newPriority, 0, priority.length - idx);", "+\t\tSystem.arraycopy(priority, 0, newPriority, priority.length - idx, idx);", "+\t\tpriority = newPriority;", "-\tboolean changed = false;", "+\t", "-\tif (setItemSize()) changed = true;", "-\tif (setItemLocation()) changed = true;", "+\tboolean changed = setItemSize();", "+\tchanged |= setItemLocation();", "-\tif (showChevron != oldShowChevron) changed = true;", "+\tchanged |= showChevron != oldShowChevron;"]}], "num": 477}