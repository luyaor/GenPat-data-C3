{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4aa345a5159c6dc50680557df83834f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf2cc847a28e53efaf7b0f27600626e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "f59deb797c64e856894963e4e3c0f3b80ed11213", "commitAfterChange": "dd6ea53ab485087309f06985a2f5b5513e5fc343", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\t\t\t* when already enabled after showing the scroll bar.\r", "+\t\t\t* when not disabled by the application and the current\r", "+\t\t\t* scroll bar ranges would cause the scroll bar to be\r", "+\t\t\t* enabled had they been set when the scroll bar was\r", "+\t\t\t* visible.\r", "-\t\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_ENABLE_BOTH);\r", "+\t\t\t\tSCROLLINFO info = new SCROLLINFO ();\r", "+\t\t\t\tinfo.cbSize = SCROLLINFO.sizeof;\r", "+\t\t\t\tinfo.fMask = OS.SIF_RANGE | OS.SIF_PAGE;\r", "+\t\t\t\tOS.GetScrollInfo (hwnd, type, info);\r", "+\t\t\t\tif (info.nMax - info.nMin - info.nPage >= 0) {\r", "+\t\t\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_ENABLE_BOTH);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9abc389eb994eed43c316c4d08ef1371", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d5198e8da1189d1f1ea2341d2541dc2f5e6e2d70", "commitAfterChange": "0eb4dbb1ce90a67b4e74669075d0a5787503641d", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\r \r LRESULT WM_SETTINGCHANGE (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SETTINGCHANGE (int wParam, int lParam)", "diff": ["+\t\t\t/* \r", "+\t\t\t* The SIP is in a new state.  Cache its new value.\r\t\t\t* Resize the Shell if it has the style SWT.RESIZE.\r", "+\t\t\t* Note that SHHandleWMSettingChange resizes the\r", "+\t\t\t* Shell and also updates the cached state.\r", "+\t\t\t*/\r", "-\t\t\t\tSHACTIVATEINFO psai = new SHACTIVATEINFO ();\r", "-\t\t\t\tOS.SHHandleWMSettingChange (handle, -1, 0, psai);\r", "+\t\t\t\tOS.SHHandleWMSettingChange (handle, wParam, lParam, psai);\r", "+\t\t\t} else {\r", "+\t\t\t\tSIPINFO pSipInfo = new SIPINFO ();\r", "+\t\t\t\tpSipInfo.cbSize = pSipInfo.sizeof;\r", "+\t\t\t\tOS.SipGetInfo (pSipInfo);\r", "+\t\t\t\tpsai.fSipUp = pSipInfo.fdwFlags & OS.SIPF_ON;\t\t\t\t\t\r"]}], "num": 10082}