{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1895667d48940ad346906227f1756ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713e4236c609d818d6a7906e2bc7a303", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "046dc52b7f8c45021a6c2fb3d54effdf9455e5c6", "commitAfterChange": "95064d9c43834d31420a1ed4831413308c49bbd8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tint hdc = device.internal_new_GC(null);", "+\tint hDC = device.internal_new_GC(null);", "+\tint srcHdc = OS.CreateCompatibleDC(hDC);", "-\t\tOS.SelectObject(hdc, font.handle);", "-\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\tOS.SelectObject(srcHdc, font.handle);", "+\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\t\tOS.SelectObject(hdc, getItemFont(run));", "-\t\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\t\tOS.SelectObject(srcHdc, getItemFont(run));", "+\t\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\tdevice.internal_dispose_GC(hdc, null);", "+\tif (srcHdc != 0) OS.DeleteDC(srcHdc);", "+\tdevice.internal_dispose_GC(hDC, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa879fd48df8fab2e11a9d01b1ef22d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "66e641150a4707102e1ffedd9b36b5e810501717", "commitAfterChange": "2363d617e4579c59cc8d3e955310574cf8713b18", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  int gtk_motion_notify_event (int widget, int event)", "signatureAfterChange": "  int gtk_motion_notify_event (int widget, int event)", "diff": ["-\tdouble x_root = gdkEvent.x_root, y_root = gdkEvent.y_root;", "+\tdouble x = gdkEvent.x_root, y = gdkEvent.y_root;", "-\t\tOS.gdk_window_get_pointer (0, pointer_x, pointer_y, mask);", "-\t\tx_root = pointer_x [0];", "-\t\ty_root = pointer_y [0];", "+\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (eventHandle ());", "+\t\tOS.gdk_window_get_pointer (window, pointer_x, pointer_y, mask);", "+\t\tx = pointer_x [0];", "+\t\ty = pointer_y [0];", "-\tsendMouseEvent (SWT.MouseMove, 0, gdkEvent.time, x_root, y_root, state, event);", "+\tsendMouseEvent (SWT.MouseMove, 0, gdkEvent.time, x, y, gdkEvent.is_hint != 0, state, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15545eb570b4294edd77feb1584f2f8c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "0965c047c4647355d2d59defeda7977f1c34f584", "commitAfterChange": "cc500238418d38b85dc837cf8469541ca5f69f28", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r private int InsertMenus(int hmenuShared, int lpMenuWidths)", "signatureAfterChange": "\r private int InsertMenus(int hmenuShared, int lpMenuWidths)", "diff": ["-\tint maxTextLength = 128;\r", "-\tint pszText = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, maxTextLength);\r", "+\tint cch = 128;\r", "+\tint byteCount = cch * TCHAR.sizeof;\r", "+\tint pszText = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, byteCount);\r", "-\tlpmii.cch = maxTextLength;\r", "+\tlpmii.cch = cch;\r", "-\t\t\t\tlpmii.cch = maxTextLength; // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "-\t\t\t\t                           // exact nuber of characters in name.  Reset it to our max size \r", "-\t\t\t\t                           // before each call.\r", "-\t\t\t\tif (OS.GetMenuItemInfoA(hMenu, index, true, lpmii)) {\r", "-\t\t\t\t\tif (OS.InsertMenuItemA(hmenuShared, newindex, true, lpmii)) {\r", "+\t\t\t\tlpmii.cch = cch;  // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "+\t\t\t\t                  // exact nuber of characters in name.  Reset it to our max size \r", "+\t\t\t\t                  // before each call.\r", "+\t\t\t\tif (OS.GetMenuItemInfo(hMenu, index, true, lpmii)) {\r", "+\t\t\t\t\tif (OS.InsertMenuItem(hmenuShared, newindex, true, lpmii)) {\r", "-\t\t\t\tlpmii.cch = maxTextLength; // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "+\t\t\t\tlpmii.cch = cch; // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "-\t\t\t\tif (OS.GetMenuItemInfoA(hMenu, index, true, lpmii)) {\r", "-\t\t\t\t\tif (OS.InsertMenuItemA(hmenuShared, newindex, true, lpmii)) {\r", "+\t\t\t\tif (OS.GetMenuItemInfo(hMenu, index, true, lpmii)) {\r", "+\t\t\t\t\tif (OS.InsertMenuItem(hmenuShared, newindex, true, lpmii)) {\r", "-\t\t\t\tlpmii.cch = maxTextLength; // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "+\t\t\t\tlpmii.cch = cch; // lpmii.cch gets updated by GetMenuItemInfo to indicate the \r", "-\t\t\t\tif (OS.GetMenuItemInfoA(hMenu, index, true, lpmii)) {\r", "-\t\t\t\t\tif (OS.InsertMenuItemA(hmenuShared, newindex, true, lpmii)) {\r", "+\t\t\t\tif (OS.GetMenuItemInfo(hMenu, index, true, lpmii)) {\r", "+\t\t\t\t\tif (OS.InsertMenuItem(hmenuShared, newindex, true, lpmii)) {\r"]}], "num": 15127}