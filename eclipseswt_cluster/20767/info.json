{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bef7f7a3fc0a0161f5e00d5721c656d2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a475e2a73574a021248276d73e4afe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ce15da912006c0de09dc46b1a9f9459d29684102", "commitAfterChange": "4d4bc2b759bd20e7d2c309aae1e713865c975c25", "methodNumberBeforeChange": 238, "methodNumberAfterChange": 238, "signatureBeforeChange": "  void setToolTipText (Shell shell, String newString)", "signatureAfterChange": "  void setToolTipText (Shell shell, String newString)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 12, 0)) {", "-\t\t/*", "-\t\t* Feature in GTK.  In order to prevent children widgets", "-\t\t* from inheriting their parent's tooltip, the tooltip is", "-\t\t* a set on a shell only. In order to force the shell tooltip", "-\t\t* to update when a new tip string is set, the existing string", "-\t\t* in the tooltip is set to null, followed by running a query.", "-\t\t* The real tip text can then be set.", "-\t\t*", "-\t\t* Note that this will only run if the control for which the", "-\t\t* tooltip is being set is the current control (i.e. the control", "-\t\t* under the pointer).", "-\t\t*/", "-\t\tif (display.currentControl == this) {", "-\t\t\tshell.setToolTipText (shell.handle, eventHandle (), newString);", "-\t\t}", "-\t} else {", "-\t\tshell.setToolTipText (eventHandle (), newString);", "+\t/*", "+\t* Feature in GTK.  In order to prevent children widgets", "+\t* from inheriting their parent's tooltip, the tooltip is", "+\t* a set on a shell only. In order to force the shell tooltip", "+\t* to update when a new tip string is set, the existing string", "+\t* in the tooltip is set to null, followed by running a query.", "+\t* The real tip text can then be set.", "+\t*", "+\t* Note that this will only run if the control for which the", "+\t* tooltip is being set is the current control (i.e. the control", "+\t* under the pointer).", "+\t*/", "+\tif (display.currentControl == this) {", "+\t\tshell.setToolTipText (shell.handle, eventHandle (), newString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08257716d0674b45e5f11aeb9b6144a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "8330b5b17673c5c3687cc521003ddb4a144d254b", "commitAfterChange": "f40750233066b44e4aac87c783ff20cbb9938761", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void gtk_adjustment_get (long hAdjustment, GtkAdjustment adjustment)", "signatureAfterChange": "  void gtk_adjustment_get (long hAdjustment, GtkAdjustment adjustment)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 14, 0)) {", "-\t\tadjustment.lower = OS.gtk_adjustment_get_lower (hAdjustment);", "-\t\tadjustment.upper = OS.gtk_adjustment_get_upper (hAdjustment);", "-\t\tadjustment.page_increment = OS.gtk_adjustment_get_page_increment (hAdjustment);", "-\t\tadjustment.step_increment = OS.gtk_adjustment_get_step_increment (hAdjustment);", "-\t\tadjustment.page_size = OS.gtk_adjustment_get_page_size (hAdjustment);", "-\t\tadjustment.value = OS.gtk_adjustment_get_value (hAdjustment);", "-\t} else {", "-\t\tOS.memmove(adjustment, hAdjustment);", "-\t}", "-}", "+\tadjustment.lower = OS.gtk_adjustment_get_lower (hAdjustment);", "+\tadjustment.upper = OS.gtk_adjustment_get_upper (hAdjustment);", "+\tadjustment.page_increment = OS.gtk_adjustment_get_page_increment (hAdjustment);", "+\tadjustment.step_increment = OS.gtk_adjustment_get_step_increment (hAdjustment);", "+\tadjustment.page_size = OS.gtk_adjustment_get_page_size (hAdjustment);", "+\tadjustment.value = OS.gtk_adjustment_get_value (hAdjustment);"]}], "num": 20767}