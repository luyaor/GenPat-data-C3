{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d79fb68a9cf772b401d51d3ebb93374", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730a8f9550873c8476d17bee964a9548", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "be1f9d730cb652d318e7ee17f674495ab0705c00", "commitAfterChange": "62e2de30b1910932e9323f4d268f30d2bc1a6bda", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void generateMethods(String className, ArrayList methods)", "signatureAfterChange": "  void generateMethods(String className, ArrayList methods)", "diff": ["-\t\t\tout(returnType = getJavaType(returnNode));", "+\t\t\tString type = getJavaType(returnNode), type64 = getJavaType64(returnNode);", "+\t\t\tout(returnType = type);", "+\t\t\tif (!type.equals(type64)) {", "+\t\t\t\tout(\" /*\");", "+\t\t\t\tout(type64);", "+\t\t\t\tout(\"*/\");", "+\t\t\t}", "-\t\t\t\tout(getJavaType(param));", "+\t\t\t\tString type = getJavaType(param), type64 = getJavaType64(param);", "+\t\t\t\tout( type);", "+\t\t\t\tif (!type.equals(type64)) {", "+\t\t\t\t\tout(\" /*\");", "+\t\t\t\t\tout(type64);", "+\t\t\t\t\tout(\"*/\");", "+\t\t\t\t}", "-\t\t\tString type = getJavaType(returnNode);", "-\t\t\tout(type);", "+\t\t\tout(returnType);", "-\t\t\tout(type);", "+\t\t\tout(returnType);", "-\t\t\tString type = getJavaType(returnNode);", "-\t\t\tif (type.equals(\"float\")) out(\"(float)\");", "+\t\t\tif (returnType.equals(\"float\")) out(\"(float)\");", "-\t\t\tout(\"\\tint result = OS.objc_msgSend(\");", "+\t\t\tout(\"\\tint /*long*/ result = OS.objc_msgSend(\");", "-\t\t\t\tString type = getJavaType(returnNode);", "-\t\t\t\tif (!(type.equals(\"int\") || type.equals(\"boolean\"))) {", "+\t\t\t\tif (!(returnType.equals(\"int\") || returnType.equals(\"boolean\"))) {", "-\t\t\t\t\tout(type);", "+\t\t\t\t\tout(returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17dc8956655164528ad8e0843d3e6d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StructsGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void generateCacheFunction(Class clazz)", "signatureAfterChange": "  void generateCacheFunction(JNIClass clazz)", "diff": ["-void generateCacheFunction(Class clazz) {", "-\tString clazzName = getClassName(clazz);", "+void generateCacheFunction(JNIClass clazz) {", "+\tString clazzName = clazz.getSimpleName();", "-\tClass superclazz = clazz.getSuperclass();", "-\tif (superclazz != Object.class) {", "-\t\tString superName = getClassName(superclazz);", "+\tJNIClass superclazz = clazz.getSuperclass();", "+\tif (!superclazz.getName().equals(\"java.lang.Object\")) {", "+\t\tString superName = superclazz.getSimpleName();", "-\tField[] fields = clazz.getDeclaredFields();", "+\tJNIField[] fields = clazz.getDeclaredFields();", "-\t\tField field = fields[i];", "+\t\tJNIField field = fields[i];", "-\t\toutput(\"\\\", \\\"\");", "-\t\toutput(getTypeSignature(field.getType()));", "-\t\toutputln(\"\\\");\");", "+\t\tJNIType type = field.getType(), type64 = field.getType64();", "+\t\toutput(\"\\\", \");", "+\t\tif (type.equals(type64)) output(\"\\\"\");", "+\t\toutput(type.getTypeSignature(!type.equals(type64)));", "+\t\tif (type.equals(type64)) output(\"\\\"\");", "+\t\toutputln(\");\");"]}], "num": 14368}