{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d56b00875800f054e5eb5f455be448b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3319790dd46217e968bd25fca6e1151", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "2bd623aa2611ab4eaa4df944add1d7753d643585", "commitAfterChange": "b83eb0c1e4cdccce4cabda49a900c4db34daef55", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t \tstatic int atkText_get_run_attributes (int atkObject, int offset, int start_offset, int end_offset)", "signatureAfterChange": " \t \tstatic int atkText_get_run_attributes (int atkObject, int offset, int start_offset, int end_offset)", "diff": ["-\t\t\t\tif (style == null) return 0;", "-\t\t\t\tif (style.rise != 0) {", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_RISE));", "-\t\t\t\t\tattr.value = getStringPtr (String.valueOf(style.rise));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t}", "-\t\t\t\tif (style.underline) {", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_UNDERLINE));", "-\t\t\t\t\tString str = \"none\";", "-\t\t\t\t\tswitch (style.underlineStyle) {", "-\t\t\t\t\t\tcase SWT.UNDERLINE_DOUBLE: str = \"double\"; break;", "-\t\t\t\t\t\tcase SWT.UNDERLINE_SINGLE: str = \"single\"; break;", "-\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: str = \"error\"; break;", "-\t\t\t\t\t\tcase SWT.UNDERLINE_SQUIGGLE: str = \"squiggle\"; break;", "+\t\t\t\tif (style != null) {", "+\t\t\t\t\tif (style.rise != 0) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_RISE));", "+\t\t\t\t\t\tattr.value = getStringPtr (String.valueOf(style.rise));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\tattr.value = getStringPtr (str);", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\tif (style.underline) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_UNDERLINE));", "+\t\t\t\t\t\tString str = \"none\";", "+\t\t\t\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_DOUBLE: str = \"double\"; break;", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_SINGLE: str = \"single\"; break;", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: str = \"error\"; break;", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_SQUIGGLE: str = \"squiggle\"; break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tattr.value = getStringPtr (str);", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (style.strikeout) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STRIKETHROUGH));", "+\t\t\t\t\t\tattr.value = getStringPtr (\"1\");", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}", "+\t\t\t\t\tFont font = style.font;", "+\t\t\t\t\tif (font != null && !font.isDisposed()) {", "+\t\t\t\t\t\t//TODO language and direction", "+\t\t\t\t\t\tint /*long*/ attrPtr;", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_FAMILY_NAME));", "+\t\t\t\t\t\tattr.value = ATK.g_strdup (OS.pango_font_description_get_family (font.handle));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_SIZE));", "+\t\t\t\t\t\tattr.value = getStringPtr (String.valueOf (OS.pango_font_description_get_size(font.handle) / OS.PANGO_SCALE));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STYLE));", "+\t\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_STYLE, OS.pango_font_description_get_style(font.handle)));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_VARIANT));", "+\t\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_VARIANT, OS.pango_font_description_get_variant(font.handle)));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STRETCH));", "+\t\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_STRETCH, OS.pango_font_description_get_stretch(font.handle)));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_WEIGHT));", "+\t\t\t\t\t\tattr.value = getStringPtr (String.valueOf (OS.pango_font_description_get_weight(font.handle)));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}", "+\t\t\t\t\tColor color = style.foreground;", "+\t\t\t\t\tif (color != null && !color.isDisposed()) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_FG_COLOR));", "+\t\t\t\t\t\tattr.value = getStringPtr ((color.handle.red & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}", "+\t\t\t\t\tcolor = style.background;", "+\t\t\t\t\tif (color != null && !color.isDisposed()) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_BG_COLOR));", "+\t\t\t\t\t\tattr.value = getStringPtr ((color.handle.red & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF));", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}", "-\t\t\t\tif (style.strikeout) {", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STRIKETHROUGH));", "-\t\t\t\t\tattr.value = getStringPtr (\"1\");", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t}", "-\t\t\t\tFont font = style.font;", "-\t\t\t\tif (font != null && !font.isDisposed()) {", "-\t\t\t\t\t//TODO language and direction", "-\t\t\t\t\tint /*long*/ attrPtr;", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_FAMILY_NAME));", "-\t\t\t\t\tattr.value = ATK.g_strdup (OS.pango_font_description_get_family (font.handle));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\t", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_SIZE));", "-\t\t\t\t\tattr.value = getStringPtr (String.valueOf (OS.pango_font_description_get_size(font.handle) / OS.PANGO_SCALE));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\t", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STYLE));", "-\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_STYLE, OS.pango_font_description_get_style(font.handle)));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\t", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_VARIANT));", "-\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_VARIANT, OS.pango_font_description_get_variant(font.handle)));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\t", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_STRETCH));", "-\t\t\t\t\tattr.value = ATK.g_strdup (ATK.atk_text_attribute_get_value(ATK.ATK_TEXT_ATTR_STRETCH, OS.pango_font_description_get_stretch(font.handle)));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t\t", "-\t\t\t\t\tattrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_WEIGHT));", "-\t\t\t\t\tattr.value = getStringPtr (String.valueOf (OS.pango_font_description_get_weight(font.handle)));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t}", "-\t\t\t\tColor color = style.foreground;", "-\t\t\t\tif (color != null && !color.isDisposed()) {", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_FG_COLOR));", "-\t\t\t\t\tattr.value = getStringPtr ((color.handle.red & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "-\t\t\t\t}", "-\t\t\t\tcolor = style.background;", "-\t\t\t\tif (color != null && !color.isDisposed()) {", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tattr.name = ATK.g_strdup (ATK.atk_text_attribute_get_name(ATK.ATK_TEXT_ATTR_BG_COLOR));", "-\t\t\t\t\tattr.value = getStringPtr ((color.handle.red & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF) + \",\" + (color.handle.blue & 0xFFFF));", "-\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "-\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\tif (event.attributes != null) {", "+\t\t\t\t\tint end = event.attributes.length / 2 * 2;", "+\t\t\t\t\tfor (int i = 0; i < end; i+= 2) {", "+\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tattr.name = getStringPtr (event.attributes[i]);", "+\t\t\t\t\t\tattr.value = getStringPtr (event.attributes[i + 1]);", "+\t\t\t\t\t\tATK.memmove(attrPtr, attr, AtkAttribute.sizeof);", "+\t\t\t\t\t\tresult = OS.g_list_append(result, attrPtr);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e2582653d36ee67ecb2e4616bb47f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 70, "signatureBeforeChange": " \t \tid getSelectedTextRangeAttribute (int childID)", "signatureAfterChange": " \t \tid getSelectedTextRangeAttribute (int childID)", "diff": ["-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.offset = -1;", "-\t\tevent.length = 0;", "-\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "-\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "-\t\t\tlistener.getSelectionRange(event);", "-\t\t}", "-\t\tif (event.offset != -1) {", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.index = 0;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getSelection(event);", "+\t\t\t}", "-\t\t\trange.location = event.offset;", "-\t\t\trange.length = event.length;", "+\t\t\trange.location = event.start;", "+\t\t\trange.length = event.end - event.start;", "+\t\t} else {", "+\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.offset = -1;", "+\t\t\tevent.length = 0;", "+\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "+\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "+\t\t\t\tlistener.getSelectionRange(event);", "+\t\t\t}", "+\t\t\tif (event.offset != -1) {", "+\t\t\t\tNSRange range = new NSRange();", "+\t\t\t\trange.location = event.offset;", "+\t\t\t\trange.length = event.length;", "+\t\t\t\treturnValue = NSValue.valueWithRange(range);", "+\t\t\t}", "+\t}"]}], "num": 56761}