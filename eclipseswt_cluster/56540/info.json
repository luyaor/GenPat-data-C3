{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acdff34fd3f52916005886b11d10656d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b213f6553146faa23e8039a2ebcfab8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\tint index=0;", "-\tint fnames = getFontNameList(handle);", "-\tint nfonts = OS.g_slist_length(fnames);", "-\tFontData[] answer = new FontData[nfonts];", "-\tfor (int i=0; i<nfonts; i++) {", "-\t\tFontData data = new FontData();", "-\t\t", "-\t\tint name = OS.g_slist_nth_data(fnames, index);", "-\t\tint length = OS.strlen(name);", "-\t\tbyte [] buffer1 = new byte[length];", "-\t\tOS.memmove(buffer1, name, length);", "-\t\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\t\tString fontname =  new String (buffer2, 0, buffer2.length);", "-\t\tdata.setXlfd(fontname);", "-\t\t", "-\t\t// Wild guess, 'a' looks average enough", "-\t\tdata.averageWidth = OS.gdk_char_width(handle, (byte)'a');", "-\t\t", "-\t\t// Wild guess, a progressive font should probably have A wider than l", "-\t\tint widthA = OS.gdk_char_width(handle, (byte)'A');", "-\t\tint widthl = OS.gdk_char_width(handle, (byte)'l');", "-\t\tif (widthA == widthl) data.spacing = \"m\";", "-\t\t\telse data.spacing = \"p\";", "-\t\t", "-\t\tanswer[i] = data;", "-\t}", "+\tif (handle==0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\t/* REWRITE ME.", "+\t * THIS WILL NEVER WORK CORRECTLY.", "+\t * WE USED TO REACH DOWN TO GDK INTERNAL MEMORY", "+\t */", "+\tFontData[] answer = new FontData[1];", "+\tFontData data = new FontData();", "+\tdata.fontFamily = \"fixed\";", "+\tdata.weight = \"normal\";", "+\tdata.points = 120;", "+\tanswer[0] = data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c51497a4c6e8a3f56f00098b6de9e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "c822b04b0a7f26d40530801191fdbf7015845292", "commitAfterChange": "a8570f4449089f9a9c3b96924a6752d262fb5602", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tif (parent!=null) {\r", "-\t\tOS.gtk_window_set_transient_for(handle, parent.topHandle());\r", "+\tif (parent != null) {\r", "+\t\tOS.gtk_window_set_transient_for (handle, parent.topHandle ());\r", "-\t\tbyte [] filterBytes = Converter.wcsToMbcs (null, filterPath, true);\r", "-\t\tOS.gtk_file_selection_set_filename (handle, filterBytes);\r", "+\t\tint length = filterPath.length ();\r", "+\t\tchar [] buffer = new char [length + 1];\r", "+\t\tfilterPath.getChars (0, length, buffer, 0);\r", "+\t\tint utf8Ptr = OS.g_utf16_to_utf8 (buffer, -1, null, null, null);\r", "+\t\tint fileNamePtr = OS.g_filename_from_utf8 (utf8Ptr, -1, null, null, null);\r", "+\t\tOS.gtk_file_selection_set_filename (handle, fileNamePtr);\r", "+\t\tOS.g_free (utf8Ptr);\r", "+\t\tOS.g_free (fileNamePtr);\t\t\r", "-\tGtkFileSelection selection = new GtkFileSelection();\r", "-\tOS.memmove(selection, handle);\r", "+\tGtkFileSelection selection = new GtkFileSelection ();\r", "+\tOS.memmove (selection, handle);\r", "-\tint fileListParent = OS.gtk_widget_get_parent(selection.file_list);\r", "-\tOS.gtk_widget_hide(selection.file_list);\r", "-\tOS.gtk_widget_hide(fileListParent);\r", "-\tint response = OS.gtk_dialog_run(handle);\r", "+\tint fileListParent = OS.gtk_widget_get_parent (selection.file_list);\r", "+\tOS.gtk_widget_hide (selection.file_list);\r", "+\tOS.gtk_widget_hide (fileListParent);\r", "+\tint response = OS.gtk_dialog_run (handle);\r", "-\t\tint lpFilename = OS.gtk_file_selection_get_filename (handle);\r", "-\t\tint filenameLength = OS.strlen (lpFilename);\r", "-\t\tbyte [] filenameBytes = new byte [filenameLength];\r", "-\t\tOS.memmove (filenameBytes, lpFilename, filenameLength);\r", "-\t\tString osAnswer = new String( Converter.mbcsToWcs (null, filenameBytes) );\r", "-\t\tif (osAnswer!=null) {\r", "+\t\tint fileNamePtr = OS.gtk_file_selection_get_filename (handle);\r", "+\t\tint utf8Ptr = OS.g_filename_to_utf8 (fileNamePtr, -1, null, null, null);\r", "+\t\tint [] items_written = new int [1];\r", "+\t\tint utf16Ptr = OS.g_utf8_to_utf16 (utf8Ptr, -1, null, items_written, null);\r", "+\t\tint length = items_written [0];\r", "+\t\tchar [] buffer = new char [length];\r", "+\t\tOS.memmove (buffer, utf16Ptr, length * 2);\r", "+\t\tString osAnswer = new String (buffer);\r", "+\t\tOS.g_free (utf16Ptr);\r", "+\t\tOS.g_free (utf8Ptr);\r", "+\t\tif (osAnswer != null) {\r", "-\t\t\tint separatorIndex = answer.lastIndexOf(separator);\r", "-\t\t\tif (separatorIndex != answer.length() - 1) answer += separator;\r", "+\t\t\tint separatorIndex = answer.lastIndexOf (separator);\r", "+\t\t\tif (separatorIndex != answer.length () - 1) answer += separator;\r", "-\tOS.gtk_widget_destroy(handle);\r", "+\tOS.gtk_widget_destroy (handle);\r"]}], "num": 56540}