{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7410f7b1e08e6ec91570961ecc183688", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e3787382e8209f6a3babeae0eb25523", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b1a31ab4f172a1a2e228d0d4b5317b0bc24de7aa", "commitAfterChange": "b72bc1d2aeff462f0ad0e8ecfa6bc39ebd385109", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\t\tif (functionPtr == 0) {", "+            \t\tbrowser.dispose ();", "+            \t\terror (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\t}", "+", "+\t        if (IsXULRunner) {", "+\t\t\t\tint size = XPCOM.nsDynamicFunctionLoad_sizeof ();", "+\t\t\t\t/* alloc memory for two structs, the second is empty to signify the end of the list */", "+\t\t\t\tptr = C.malloc (size * 2);", "+\t\t\t\tC.memset (ptr, 0, size * 2);", "+\t\t\t\tnsDynamicFunctionLoad functionLoad = new nsDynamicFunctionLoad ();", "+\t\t\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"XRE_NotifyProfile\", true); //$NON-NLS-1$", "+\t\t\t\tfunctionLoad.functionName = C.malloc (bytes.length);", "+\t\t\t\tC.memmove (functionLoad.functionName, bytes, bytes.length);", "+\t\t\t\tfunctionLoad.function = C.malloc (C.PTR_SIZEOF);", "+\t\t\t\tC.memmove (functionLoad.function, new int /*long*/[] {0} , C.PTR_SIZEOF);", "+\t\t\t\tXPCOM.memmove (ptr, functionLoad, XPCOM.nsDynamicFunctionLoad_sizeof ());", "+\t\t\t\tXPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\t\t\tC.memmove (result, functionLoad.function, C.PTR_SIZEOF);", "+\t\t\t\tint /*long*/ functionPtr = result[0];", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tC.free (functionLoad.function);", "+\t\t\t\tC.free (functionLoad.functionName);", "+\t\t\t\tC.free (ptr);", "+\t\t\t\t/* functionPtr == 0 for xulrunner < 1.9 */", "+\t\t\t\tif (functionPtr != 0) {", "+\t\t\t\t\trc = XPCOM.Call (functionPtr);", "+\t            \tif (rc != XPCOM.NS_OK) {", "+\t            \t\tbrowser.dispose ();", "+\t            \t\terror (rc);", "+\t            \t}", "+\t\t\t\t}", "+\t        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da54c5580817524d111c6931805525e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "5374675b839b0fae59e3a51b725633f5248c79a9", "commitAfterChange": "6c627a8139ef18188f49f84c11acd2dfd56235c5", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-\t\tint version = Integer.getInteger(XULRUNNER_VERSION, 0).intValue();", "-\t\tif (version < 4) {", "-\t\t\tIsPre_4 = true;", "-\t\t} else {", "-\t\t\tnsISupports.IsXULRunner10 = true;", "-\t\t}", "-\t\tString initFunctionName = IsPre_4 ? \"XRE_InitEmbedding\" : \"XRE_InitEmbedding2\";", "-\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, initFunctionName, true); //$NON-NLS-1$", "+", "+\t\t/* ", "+\t\t * Attempt to load the XRE_InitEmbedding2 function first, which is present in", "+\t\t * mozilla versions > 3.x.", "+\t\t */", "+\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"XRE_InitEmbedding2\", true); //$NON-NLS-1$", "-\t\tXPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\trc = XPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\tIsPre_4 = false;", "+\t\t\tnsISupports.IsXULRunner10 = true;", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * XRE_InitEmbedding2 was not found, so fall back to XRE_InitEmbedding, which is", "+\t\t\t * present in older mozilla versions.", "+\t\t\t */", "+\t\t\tC.free (functionLoad.functionName);", "+\t\t\tbytes = MozillaDelegate.wcsToMbcs (null, \"XRE_InitEmbedding\", true); //$NON-NLS-1$", "+\t\t\tfunctionLoad.functionName = C.malloc (bytes.length);", "+\t\t\tC.memmove (functionLoad.functionName, bytes, bytes.length);", "+\t\t\trc = XPCOM.XPCOMGlueLoadXULFunctions (ptr);", "+\t\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\t\tIsPre_4 = true;", "+\t\t\t\tnsISupports.IsXULRunner10 = false;", "+\t\t\t}", "+\t\t}", "+"]}], "num": 23324}