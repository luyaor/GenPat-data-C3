{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ab6befd886e0673bb82e0172a69549a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d61d564b7273bd1683527d9b015fe1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Header.java", "commitBeforeChange": "9943b3d6da52f8de0da36e26e38ae4bfcae73ce9", "commitAfterChange": "3d30687988c783bc0ef4c36252ff6b060a49574b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r Rectangle getBounds(int itemIndex)", "signatureAfterChange": " Rectangle getBounds(int itemIndex)", "diff": ["- */\r", "-Rectangle getBounds(int itemIndex) {\r", "-\tRectangle bounds = null;\r", "-\tint itemCount = getItemCount();\r", "-\tTable parent = (Table) getParent();\r", "-\r", "-\tif (itemIndex >= 0 && itemIndex < itemCount) {\r", "-\t\tbounds = parent.internalGetColumn(itemIndex).getBounds();\r", "-\t\tbounds.y = 0;\r", "-\t\tbounds.height = getBounds().height;\r", "-\t}\r", "-\telse\r", "-\tif (itemIndex == TableColumn.FILL) {\r", "-\t\tif (itemCount > 0) {\r", "-\t\t\tbounds = parent.internalGetColumn(itemCount - 1).getBounds();\r", "-\t\t\tbounds.x += bounds.width;\r", "-\t\t}\r", "-\t\telse {\r", "-\t\t\tbounds = new Rectangle(0, 0, 0, 0);\r", "-\t\t}\r", "-\t\tbounds.width = Math.max(0, getBounds().width - bounds.x);\r", "-\t\tbounds.y = 0;\r", "-\t\tbounds.height = getBounds().height;\t\t\r", "-\t}\r", "-\treturn bounds;\r", "-}\r", "+ */", "+Rectangle getBounds(int itemIndex) {", "+\tRectangle bounds = null;", "+\tint itemCount = getItemCount();", "+", "+\tif (itemIndex >= 0 && itemIndex < itemCount) {", "+\t\tbounds = parent.internalGetColumn(itemIndex).getBounds();", "+\t\tbounds.y = 0;", "+\t\tbounds.height = getBounds().height;", "+\t}", "+\telse", "+\tif (itemIndex == TableColumn.FILL) {", "+\t\tif (itemCount > 0) {", "+\t\t\tbounds = parent.internalGetColumn(itemCount - 1).getBounds();", "+\t\t\tbounds.x += bounds.width;", "+\t\t}", "+\t\telse {", "+\t\t\tbounds = new Rectangle(0, 0, 0, 0);", "+\t\t}", "+\t\tbounds.width = Math.max(0, getBounds().width - bounds.x);", "+\t\tbounds.y = 0;", "+\t\tbounds.height = getBounds().height;\t\t", "+\t}", "+\treturn bounds;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee502cbd2def03409385081f5fc6ad9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "2fd0fe05ad364cfbc9109d7e2ea171fbb2a402dc", "commitAfterChange": "30eda25ac0337a8ab8311a2b5be9576bc013d021", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " void removeItemFromRow(CoolItem item, int rowIndex)", "signatureAfterChange": " void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "diff": ["-void removeItemFromRow(CoolItem item, int rowIndex) {\r", "+void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {\r", "-\tif (index == 0) {\r", "-\t\tCoolItem first = items[rowIndex][0];\r", "-\t\tRectangle bounds = first.getBounds();\r", "-\t\tint width = bounds.x + bounds.width;\r", "-\t\tfirst.setBounds(0, bounds.y, width, bounds.height);\r", "-\t\tfirst.requestedWidth = width;\r", "-\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "-\t} else {\r", "-\t\tCoolItem previous = items[rowIndex][index - 1];\r", "-\t\tRectangle bounds = previous.getBounds();\r", "-\t\tint width = bounds.width + itemBounds.width;\r", "-\t\tprevious.setBounds(bounds.x, bounds.y, width, bounds.height);\r", "-\t\tprevious.requestedWidth = width;\r", "+\tif (!disposed) {\r", "+\t\tif (index == 0) {\r", "+\t\t\tCoolItem first = items[rowIndex][0];\r", "+\t\t\tRectangle bounds = first.getBounds();\r", "+\t\t\tint width = bounds.x + bounds.width;\r", "+\t\t\tfirst.setBounds(0, bounds.y, width, bounds.height);\r", "+\t\t\tfirst.requestedWidth = width;\r", "+\t\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "+\t\t} else {\r", "+\t\t\tCoolItem previous = items[rowIndex][index - 1];\r", "+\t\t\tRectangle bounds = previous.getBounds();\r", "+\t\t\tint width = bounds.width + itemBounds.width;\r", "+\t\t\tprevious.setBounds(bounds.x, bounds.y, width, bounds.height);\r", "+\t\t\tprevious.requestedWidth = width;\r", "+\t\t}\r"]}], "num": 11591}