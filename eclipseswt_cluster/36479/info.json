{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1238a7cd6cae204b03834c439c79ba60", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c920483a9f27c0d22e77c1b0535d370", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9c7d16bb18d3860d95141caf8c4f01bb13563f7e", "commitAfterChange": "be5aa41634cde1e04ae4d0c10fd398906519cd0c", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 262, "signatureBeforeChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "signatureAfterChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "diff": ["-\t\t\t// The following lines are intentionally commented. We are not supporting IAccessibleEditableText at this time.", "-//\t\t\tif (accessibleEditableTextListeners.size() > 0) {", "-//\t\t\t\tif (objIAccessibleEditableText == null) createIAccessibleEditableText();", "-//\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleEditableText.getAddress() }, OS.PTR_SIZEOF);", "-//\t\t\t\tAddRef();", "-//\t\t\t\treturn COM.S_OK;", "-//\t\t\t}", "+\t\t\tif (accessibleEditableTextListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleEditableText == null) createIAccessibleEditableText();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleEditableText.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deb4b6fccdb830d6cc9c3dc7991f657d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Relation.java", "commitBeforeChange": "75107dbf363a9d6bbdc75ec5f4364d722f8b05db", "commitAfterChange": "09769cb53bbc3b4e2f481f8994ebcaf8aa64ecc0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tint QueryInterface(COMObject comObject, int iid, int ppvObject)", "signatureAfterChange": " \tint QueryInterface(int iid, int ppvObject)", "diff": ["-\tint QueryInterface(COMObject comObject, int /*long*/ iid, int /*long*/ ppvObject) {", "+\tint QueryInterface(int /*long*/ iid, int /*long*/ ppvObject) {", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown)) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { comObject.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "-\t\t}", "-", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleRelation)) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleRelation.getAddress() }, OS.PTR_SIZEOF);", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown) || COM.IsEqualGUID(guid, COM.IIDIAccessibleRelation)) {", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { getAddress() }, OS.PTR_SIZEOF);"]}], "num": 36479}