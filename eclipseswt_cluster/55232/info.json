{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb3c814e96fc348b44c01ab735def659", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc6b10df0492c93dc4dcfc91f9eeddf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 189, "signatureBeforeChange": " void internalRedraw()", "signatureAfterChange": " void internalRedrawRange(int start, int length)", "diff": ["- */", "-void internalRedraw() {", "-\tsuper.redraw();", "+void internalRedrawRange(int start, int length) {", "+\tif (length <= 0) return;", "+\tint end = start + length - 1;", "+\tint partialTopIndex = getPartialTopIndex();", "+\tint lineOffset = content.getOffsetAtLine(firstLine);", "+\t\tstart = lineOffset;", "+\tif (partialBottomIndex < lastLine) {", "+\t\tlastLine = partialBottomIndex;", "+\t\tend = content.getOffsetAtLine(lastLine) + content.getLine(lastLine).length();", "+\tRectangle clientArea = getClientArea();", "+\tboolean fullSelection = (getStyle() & SWT.FULL_SELECTION) != 0;", "+\t//redraw first line from start to end", "+\tTextLayout layout = renderer.getTextLayout(firstLine);", "+\tRectangle rect = layout.getBounds(start - lineOffset, end - lineOffset);", "+\trect.x += leftMargin - horizontalScrollOffset;", "+\trect.y += getLinePixel(firstLine);", "+\tif (end - lineOffset >= layout.getText().length()) {", "+\t\tif (fullSelection) {", "+\t\t\trect.width = clientArea.width;", "+\t\t} else {", "+\t\t\trect.width += renderer.getLineEndSpace();", "+\t\t}", "+\t} else {", "+\t\tif (wordWrap && fullSelection) {", "+\t\t\tif (layout.getLineIndex(start - lineOffset) != layout.getLineIndex(end - lineOffset)) {", "+\t\t\t\trect.width = clientArea.width;", "+\t\t\t}", "+\t\t}", "+\trenderer.disposeTextLayout(layout);", "+\t//emtpy lines can have no height", "+\tif (rect.height == 0) rect.height = renderer.getLineHeight();", "+\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\tint lineCount = lastLine - firstLine + 1;", "+\tif (lineCount > 1) {", "+\t\t// redraw center lines completely", "+\t\tint lastLineY = getLinePixel(lastLine);", "+\t\tif (lineCount > 2) {", "+\t\t\trect.y += rect.height;", "+\t\t\tsuper.redraw(0, rect.y, clientArea.width, lastLineY - rect.y, false);", "+\t\t}", "+", "+\t\t// redraw last line from zero to end", "+\t\tlayout = renderer.getTextLayout(lastLine);", "+\t\tlineOffset = content.getOffsetAtLine(lastLine);", "+\t\trect = layout.getBounds(0, end - lineOffset);", "+\t\trect.x += leftMargin - horizontalScrollOffset;", "+\t\trect.y += lastLineY;", "+\t\tif (end - lineOffset >= layout.getText().length()) {", "+\t\t\tif (fullSelection) {", "+\t\t\t\trect.width = clientArea.width;", "+\t\t\t} else {", "+\t\t\t\trect.width += renderer.getLineEndSpace();", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (wordWrap && fullSelection) {", "+\t\t\t\tif (0 != layout.getLineIndex(end - lineOffset)) {", "+\t\t\t\t\trect.width = clientArea.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\trenderer.disposeTextLayout(layout);", "+//\t\temtpy lines can have no height", "+\t\tif (rect.height == 0) rect.height = renderer.getLineHeight();", "+\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767c8544a26e3d76a8dfb3a9fc53c72c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bf221f66369037ceea33728d5ed71d69549dd596", "commitAfterChange": "73be0ec89889e2c1322c1bfa09d83f81f689ab7f", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 189, "signatureBeforeChange": " void internalRedrawRange(int start, int length)", "signatureAfterChange": " void internalRedrawRange(int start, int length)", "diff": ["- */", "-\tint end = start + length - 1;", "-\tint firstLine = content.getLineAtOffset(start);", "-\tint lastLine = content.getLineAtOffset(end);", "+\tint end = start + length;", "+\tint startLine = content.getLineAtOffset(start);", "+\tint endLine = content.getLineAtOffset(end);", "-\tif (firstLine > partialBottomIndex || lastLine < partialTopIndex) {", "+\tif (startLine > partialBottomIndex || endLine < partialTopIndex) {", "-\tint lineOffset = content.getOffsetAtLine(firstLine);", "-\tif (partialTopIndex > firstLine) {", "-\t\tfirstLine = partialTopIndex;", "-\t\tstart = lineOffset;", "-\t}", "-\tif (partialBottomIndex < lastLine) {", "-\t\tlastLine = partialBottomIndex;", "-\t\tend = content.getOffsetAtLine(lastLine) + content.getLine(lastLine).length();", "-\t}", "-\tboolean fullSelection = (getStyle() & SWT.FULL_SELECTION) != 0;", "-\t", "-\t//redraw first line from start to end", "-\tTextLayout layout = renderer.getTextLayout(firstLine);", "-\tRectangle rect = layout.getBounds(start - lineOffset, end - lineOffset);", "-\trect.x += leftMargin - horizontalScrollOffset;", "-\trect.y += getLinePixel(firstLine);", "-\tif (end - lineOffset >= layout.getText().length()) {", "-\t\tif (fullSelection) {", "-\t\t\trect.width = clientAreaWidth;", "-\t\t} else {", "-\t\t\trect.width += renderer.getLineEndSpace();", "-\t\t}", "+\tif (partialTopIndex > startLine) {", "+\t\tstartLine = partialTopIndex;", "+\t\tstart = 0;", "-\t\tif (wordWrap && fullSelection) {", "-\t\t\tif (layout.getLineIndex(start - lineOffset) != layout.getLineIndex(end - lineOffset)) {", "-\t\t\t\trect.width = clientAreaWidth;", "-\t\t\t}", "+\t\tstart -= content.getOffsetAtLine(startLine);", "+\t}", "+\tif (partialBottomIndex < endLine) {", "+\t\tendLine = partialBottomIndex + 1;", "+\t\tend = 0;", "+\t} else {", "+\t\tend -= content.getOffsetAtLine(endLine);", "+\t}", "+", "+\tTextLayout layout = renderer.getTextLayout(startLine);", "+\tint lineX = leftMargin - horizontalScrollOffset, startLineY = getLinePixel(startLine);", "+\tint[] offsets = layout.getLineOffsets();", "+\tint startIndex = layout.getLineIndex(Math.min(start, layout.getText().length()));", "+\t", "+\t/* Redraw end of line before start line if wrapped and start offset is first char */", "+\tif (wordWrap && startIndex > 0 && offsets[startIndex] == start) {", "+\t\tRectangle rect = layout.getLineBounds(startIndex - 1);", "+\t\trect.x = rect.width;", "+\t\trect.width = clientAreaWidth - rightMargin - rect.x;", "+\t\trect.x += lineX;", "+\t\trect.y += startLineY;", "+\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\t}", "+\t", "+\tif (startLine == endLine) {", "+\t\tint endIndex = layout.getLineIndex(Math.min(end, layout.getText().length()));", "+\t\tif (startIndex == endIndex) {", "+\t\t\t/* Redraw rect between start and end offset if start and end offsets are in same wrapped line */", "+\t\t\tRectangle rect = layout.getBounds(start, end - 1);", "+\t\t\trect.x += lineX;", "+\t\t\trect.y += startLineY;", "+\t\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\t\t\trenderer.disposeTextLayout(layout);", "+\t\t\treturn;", "-\trenderer.disposeTextLayout(layout);", "-\t//emtpy lines can have no height", "-\tif (rect.height == 0) rect.height = renderer.getLineHeight();", "-\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "-\tint lineCount = lastLine - firstLine + 1;", "-\tif (lineCount > 1) {", "-\t\t// redraw center lines completely", "-\t\tint lastLineY = getLinePixel(lastLine);", "-\t\tif (lineCount > 2) {", "-\t\t\trect.y += rect.height;", "-\t\t\tsuper.redraw(0, rect.y, clientAreaWidth, lastLineY - rect.y, false);", "-\t\t}", "-\t\t// redraw last line from zero to end", "-\t\tlayout = renderer.getTextLayout(lastLine);", "-\t\tlineOffset = content.getOffsetAtLine(lastLine);", "-\t\trect = layout.getBounds(0, end - lineOffset);", "-\t\trect.x += leftMargin - horizontalScrollOffset;", "-\t\trect.y += lastLineY;", "-\t\tif (end - lineOffset >= layout.getText().length()) {", "-\t\t\tif (fullSelection) {", "-\t\t\t\trect.width = clientAreaWidth;", "-\t\t\t} else {", "-\t\t\t\trect.width += renderer.getLineEndSpace();", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif (wordWrap && fullSelection) {", "-\t\t\t\tif (0 != layout.getLineIndex(end - lineOffset)) {", "-\t\t\t\t\trect.width = clientAreaWidth;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t/* Redraw start line from the start offset to the end of client area */", "+\tRectangle startRect = layout.getBounds(start, offsets[startIndex + 1] - 1);", "+\tif (startRect.height == 0) {", "+\t\tRectangle bounds = layout.getLineBounds(startIndex);", "+\t\tstartRect.x = bounds.width;", "+\t\tstartRect.y = bounds.y;", "+\t\tstartRect.height = bounds.height;", "+\t}", "+\tstartRect.x += lineX;", "+\tstartRect.y += startLineY;", "+\tstartRect.width = clientAreaWidth - rightMargin - startRect.x;", "+\tsuper.redraw(startRect.x, startRect.y, startRect.width, startRect.height, false);", "+", "+\t/* Redraw end line from the begining of the line to the end offset */", "+\tif (startLine != endLine) {", "-//\t\temtpy lines can have no height", "-\t\tif (rect.height == 0) rect.height = renderer.getLineHeight();", "-\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\t\tlayout = renderer.getTextLayout(endLine);", "+\t\toffsets = layout.getLineOffsets();", "+\t}", "+\tint endIndex = layout.getLineIndex(Math.min(end, layout.getText().length()));", "+\tRectangle endRect = layout.getBounds(offsets[endIndex], end - 1);", "+\tif (endRect.height == 0) {", "+\t\tRectangle bounds = layout.getLineBounds(endIndex);", "+\t\tendRect.y = bounds.y;", "+\t\tendRect.height = bounds.height;", "+\t}", "+\tendRect.x += lineX;", "+\tendRect.y += getLinePixel(endLine);", "+\tsuper.redraw(endRect.x, endRect.y, endRect.width, endRect.height, false);", "+\trenderer.disposeTextLayout(layout);", "+", "+\t/* Redraw all lines in between start and end line */", "+\tint y = startRect.y + startRect.height;", "+\tif (endRect.y > y) {", "+\t\tsuper.redraw(leftMargin, y, clientAreaWidth - rightMargin - leftMargin, endRect.y - y, false);"]}], "num": 55232}