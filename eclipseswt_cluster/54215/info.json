{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c0065726861461a9694a7a3d4abd0d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7d0cd831e9727d36e897598399d4c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bd64112265c2a125577ef5db8ecfbdb762c0aeab", "commitAfterChange": "9b08189f8ee7e189cc76f5fea12f3ad05eb7e51b", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void setLineAttributes(LineAttributes attributes)", "signatureAfterChange": " public void setLineAttributes(LineAttributes attributes)", "diff": ["-\t//TODO", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (attributes == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tint mask = 0;", "+\tfloat lineWidth = attributes.width;", "+\tif (lineWidth != data.lineWidth) {", "+\t\tmask |= LINE_WIDTH;", "+\t}", "+\tint lineStyle = attributes.style;", "+\tif (lineStyle != data.lineStyle) {", "+\t\tmask |= LINE_STYLE;", "+\t\tswitch (lineStyle) {", "+\t\t\tcase SWT.LINE_SOLID:", "+\t\t\tcase SWT.LINE_DASH:", "+\t\t\tcase SWT.LINE_DOT:", "+\t\t\tcase SWT.LINE_DASHDOT:", "+\t\t\tcase SWT.LINE_DASHDOTDOT:", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.LINE_CUSTOM:", "+\t\t\t\tif (attributes.dash == null) lineStyle = SWT.LINE_SOLID;", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tint join = attributes.join;", "+\tif (join != data.lineJoin) {", "+\t\tmask |= LINE_JOIN;", "+\t\tswitch (join) {", "+\t\t\tcase SWT.CAP_ROUND:", "+\t\t\tcase SWT.CAP_FLAT:", "+\t\t\tcase SWT.CAP_SQUARE:", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tint cap = attributes.join;", "+\tif (cap != data.lineCap) {", "+\t\tmask |= LINE_CAP;", "+\t\tswitch (cap) {", "+\t\t\tcase SWT.JOIN_MITER:", "+\t\t\tcase SWT.JOIN_ROUND:", "+\t\t\tcase SWT.JOIN_BEVEL:", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tfloat[] dashes = attributes.dash;", "+\tfloat[] lineDashes = data.lineDashes;", "+\tif (dashes != null && dashes.length > 0) {", "+\t\tboolean changed = lineDashes == null || lineDashes.length != dashes.length;", "+\t\tfor (int i = 0; i < dashes.length; i++) {", "+\t\t\tfloat dash = dashes[i];", "+\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (!changed && lineDashes[i] != dash) changed = true;", "+\t\t}", "+\t\tif (changed) {", "+\t\t\tfloat[] newDashes = new float[dashes.length];", "+\t\t\tSystem.arraycopy(dashes, 0, newDashes, 0, dashes.length);", "+\t\t\tdashes = newDashes;", "+\t\t\tmask |= LINE_STYLE;", "+\t\t} else {", "+\t\t\tdashes = lineDashes;", "+\t\t}", "+\t} else {", "+\t\tif (lineDashes != null && lineDashes.length > 0) {", "+\t\t\tmask |= LINE_STYLE;", "+\t\t} else {", "+\t\t\tdashes = lineDashes;", "+\t\t}", "+\t}", "+\tfloat dashOffset = attributes.dashOffset;", "+\tif (dashOffset != data.lineDashesOffset) {", "+\t\tmask |= LINE_STYLE;", "+\t}", "+\tfloat miterLimit = attributes.miterLimit;", "+\tif (miterLimit != data.lineMiterLimit) {", "+\t\tmask |= LINE_MITERLIMIT;", "+\t}", "+\tif (mask == 0) return;", "+\tdata.lineWidth = lineWidth;", "+\tdata.lineStyle = lineStyle;", "+\tdata.lineCap = cap;", "+\tdata.lineJoin = join;", "+\tdata.lineDashes = dashes;", "+\tdata.lineDashesOffset = dashOffset;", "+\tdata.lineMiterLimit = miterLimit;", "+\tdata.state &= ~mask;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ce1942d931c1aa455743334127e063", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "c830ba87659f66da0a8654b6fd6e8eaf78f224a3", "commitAfterChange": "4482f07e9114cadcaa151462c4425652dbe37722", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "  boolean setInputState (Event event, int theEvent)", "signatureAfterChange": "  boolean setInputState (Event event, int type, int chord, int modifiers)", "diff": ["-boolean setInputState (Event event, int theEvent) {", "-\tshort [] button = new short [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);", "-\tint [] chord = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamMouseChord, OS.typeUInt32, null, 4, null, chord);", "-\tint [] modifiers = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-\treturn setInputState (event, button [0], chord [0], modifiers [0]);", "-}", "+boolean setInputState (Event event, int type, int chord, int modifiers) {", "+\tswitch (type) {"]}], "num": 54215}