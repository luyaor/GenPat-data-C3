{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e76570738d6a2f8f9abdc742500169", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ba7b7c7f9891eabbde7b918caeb7bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "cbbd1213ec1a9edc402d708865524e69d4ab9400", "commitAfterChange": "ee35d27d8f4e73e2435cc1829ff0629ac5f7f27d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["+\t\tCairo.cairo_translate(cairo, -x, -y);", "-\t\t\tCairo.cairo_set_source_surface(cairo, data.image.surface, x, y);", "-\t\t} else if (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "-\t\t\tOS.gdk_cairo_set_source_window(cairo, data.drawable, x, y);", "+\t\t\tCairo.cairo_set_source_surface(cairo, data.image.surface, 0, 0);", "+\t\t} else if (data.drawable != 0) {", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "+\t\t\t\tOS.gdk_cairo_set_source_window(cairo, data.drawable, 0, 0);", "+\t\t\t} else {", "+\t\t\t\tint[] w = new int[1], h = new int[1];", "+\t\t\t\tOS.gdk_drawable_get_size(data.drawable, w, h);", "+\t\t\t\tint width = w[0], height = h[0];", "+\t\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY();", "+\t\t\t\tint /*long*/ xDrawable = OS.gdk_x11_drawable_get_xid(data.drawable);", "+\t\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "+\t\t\t\tint /*long*/ srcSurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);", "+\t\t\t\tCairo.cairo_set_source_surface(cairo, srcSurface, 0, 0);", "+\t\t\t}", "-\t\t\tint[] w = new int[1], h = new int[1];", "-\t\t\tOS.gdk_drawable_get_size(data.drawable, w, h);", "-\t\t\tint width = w[0], height = h[0];", "-\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY();", "-\t\t\tint /*long*/ xDrawable = OS.gdk_x11_drawable_get_xid(data.drawable);", "-\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "-\t\t\tint /*long*/ srcSurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);", "-\t\t\tCairo.cairo_set_source_surface(cairo, srcSurface, x, y);", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2969d843db9175ee6afdfaaa60191e8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "db59299666876a285c310d2c5c38e974ac131199", "commitAfterChange": "86dc7ce90ce29024dddb162fd8f6c1e3dc4f573a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void bringToTop (boolean force)", "signatureAfterChange": "  void bringToTop (boolean force)", "diff": ["-\tif ((xFocus || (style & SWT.ON_TOP) != 0) && OS.GDK_WINDOWING_X11 () && !OS.GDK_WINDOWING_WAYLAND()) {", "-\t\tlong /*int*/ xDisplay;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "-\t\t\txDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_window_get_display(window));", "+\tif ((xFocus || (style & SWT.ON_TOP) != 0)) {", "+\t\tif (OS.IS_X11) {", "+\t\t\tlong /*int*/ xDisplay;", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 24, 0)) {", "+\t\t\t\txDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_window_get_display(window));", "+\t\t\t} else {", "+\t\t\t\txDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+\t\t\t}", "+\t\t\tlong /*int*/ xWindow;", "+\t\t\tif (OS.GTK3) {", "+\t\t\t\txWindow = OS.gdk_x11_window_get_xid (window);", "+\t\t\t} else {", "+\t\t\t\txWindow = OS.gdk_x11_drawable_get_xid (window);", "+\t\t\t}", "+\t\t\tOS.gdk_error_trap_push ();", "+\t\t\t/* Use CurrentTime instead of the last event time to ensure that the shell becomes active */", "+\t\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "+\t\t\tOS.gdk_error_trap_pop ();", "-\t\t\txDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+//\tTODO find the proper fix as this doesn't seem to have effect", "+//\t\t\tOS.gtk_window_present(window);", "-\t\tlong /*int*/ xWindow;", "-\t\tif (OS.GTK3) {", "-\t\t\txWindow = OS.gdk_x11_window_get_xid (window);", "-\t\t} else {", "-\t\t\txWindow = OS.gdk_x11_drawable_get_xid (window);", "-\t\t}", "-\t\tOS.gdk_error_trap_push ();", "-\t\t/* Use CurrentTime instead of the last event time to ensure that the shell becomes active */", "-\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "-\t\tOS.gdk_error_trap_pop ();"]}], "num": 59152}