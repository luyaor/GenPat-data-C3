{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56724bdf8f6818c5859776e5f80b8c0b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2ca17c8fd06baf4a1e89b33cb462bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c76676fff5364cedbb4c2f8c13d74d7d1d739e7f", "commitAfterChange": "0a26c43fd93ab06acd4439ddc610814541a2ea9d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void drawWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, NSRect rect, int view)", "diff": ["-void drawWithFrame_inView (int /*long*/ id, int /*long*/ sel, int /*long*/ cellFrame, int /*long*/ view) {", "-\tNSRect rect = new NSRect ();", "-\tOS.memmove (rect, cellFrame, NSRect.sizeof);", "+void drawInteriorWithFrame_inView (int /*long*/ id, int /*long*/ sel, NSRect rect, int /*long*/ view) {", "-\tNSSize contentSize = cell.cellSize();", "-\tNSSize spacing = widget.intercellSpacing();", "+\tNSSize contentSize = super.cellSize(id, OS.sel_cellSize);", "+\tNSImage image = cell.image();", "+\tif (image != null) contentSize.width += imageBounds.width + IMAGE_GAP;", "+\tNSSize spacing = widget.intercellSpacing();", "+\t\tif (drawExpansion) {", "+\t\t\toffsetX -= 0.5f;", "+\t\t\toffsetY -= 0.5f;", "+\t\t}", "+\tint itemX = (int)(rect.x - offsetX), itemY = (int)(rect.y - offsetY);", "-\t", "-\tif (hooksMeasure) {", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = widget.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.width = contentWidth;", "-\t\tevent.height = itemHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (item.isDisposed ()) return;", "-\t\tif (itemHeight < event.height) {", "-\t\t\twidget.setRowHeight (event.height);", "-\t\t}", "-\t\tif (columnCount == 0 && columnIndex == 0 && contentWidth != event.width) {", "-\t\t\titem.width = event.width;", "-\t\t\tif (setScrollWidth (item)) {", "-\t\t\t\twidget.setNeedsDisplay(true);", "-\t\t\t}", "-\t\t}", "-\t}\t", "+\tif (hooksMeasure) {", "+\t\tsendMeasureItem(item, columnIndex, contentSize);", "+\t}", "+\t", "-\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\tif (!drawExpansion) {", "+\t\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\t}", "-\t\tNSImage image = cell.image();", "-\t\tif (image != null) {", "+\t\tif ((!drawExpansion || hooksMeasure) && image != null) {", "+\t\tboolean callSuper = false;", "-\t\t\t\tcallSuper (id, sel, rect, view);", "+\t\t\t\tcallSuper = true;", "-\t\t\tcallSuper (id, sel, rect, view);", "+\t\t\tcallSuper = true;", "+\t\t}", "+\t\tif (callSuper) {", "+\t\t\tNSAttributedString attrStr = cell.attributedStringValue();", "+\t\t\tNSSize size = attrStr.size();", "+\t\t\tif (rect.height > size.height) {", "+\t\t\t\trect.y += (rect.height - size.height) / 2;", "+\t\t\t\trect.height = size.height;", "+\t\t\t}", "+\t\t\tsuper.drawInteriorWithFrame_inView(id, sel, rect, view);", "-\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\tif (isSelected) {", "+\t\tif (drawSelection) {", "-\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\tif (!drawExpansion) {", "+\t\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\t}", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "+\t\tevent.x = itemX;", "+\t\tevent.y = itemY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e062726243e6e25b02650d37a01fb3fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c76676fff5364cedbb4c2f8c13d74d7d1d739e7f", "commitAfterChange": "0a26c43fd93ab06acd4439ddc610814541a2ea9d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void drawWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, NSRect rect, int view)", "diff": ["-void drawWithFrame_inView (int /*long*/ id, int /*long*/ sel, int /*long*/ cellFrame, int /*long*/ view) {", "-\tNSRect rect = new NSRect ();", "-\tOS.memmove (rect, cellFrame, NSRect.sizeof);", "+void drawInteriorWithFrame_inView (int /*long*/ id, int /*long*/ sel, NSRect rect, int /*long*/ view) {", "-\tNSSize contentSize = cell.cellSize();", "-\tNSSize spacing = widget.intercellSpacing();", "+\tNSSize contentSize = super.cellSize(id, OS.sel_cellSize);", "+\tNSImage image = cell.image();", "+\tif (image != null) contentSize.width += imageBounds.width + IMAGE_GAP;", "+\tNSSize spacing = widget.intercellSpacing();", "+\t\tif (drawExpansion) {", "+\t\t\toffsetX -= 0.5f;", "+\t\t\toffsetY -= 0.5f;", "+\t\t}", "+\tint itemX = (int)(rect.x - offsetX), itemY = (int)(rect.y - offsetY);", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = widget.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.width = contentWidth;", "-\t\tevent.height = itemHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (item.isDisposed ()) return;", "-\t\tif (itemHeight < event.height) {", "-\t\t\twidget.setRowHeight (event.height);", "-\t\t}", "-\t\tif (columnCount == 0 && columnIndex == 0 && contentWidth != event.width) {", "-\t\t\titem.width = event.width;", "-\t\t\titem.width += widget.indentationPerLevel () * (1 + widget.levelForItem (item.handle));", "-\t\t\tif (setScrollWidth (item)) {", "-\t\t\t\twidget.setNeedsDisplay(true);", "-\t\t\t}", "-\t\t}", "-\t}\t", "+\t\tsendMeasureItem(item, columnIndex, contentSize);", "+\t}", "-\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\tif (!drawExpansion) {", "+\t\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\t}", "-\t\tNSImage image = cell.image();", "-\t\tif (image != null) {", "+\t\tif ((!drawExpansion || hooksMeasure) && image != null) {", "+\t\tboolean callSuper = false;", "-\t\t\t\tcallSuper (id, sel, rect, view);", "+\t\t\t\tcallSuper = true;", "-\t\t\tcallSuper (id, sel, rect, view);", "+\t\t\tcallSuper = true;", "+\t\t}", "+\t\tif (callSuper) {", "+\t\t\tNSAttributedString attrStr = cell.attributedStringValue();", "+\t\t\tNSSize size = attrStr.size();", "+\t\t\tif (rect.height > size.height) {", "+\t\t\t\trect.y += (rect.height - size.height) / 2;", "+\t\t\t\trect.height = size.height;", "+\t\t\t}", "+\t\t\tsuper.drawInteriorWithFrame_inView(id, sel, rect, view);", "-\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\tif (isSelected) {", "+\t\tif (drawSelection) {", "-\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\tif (!drawExpansion) {", "+\t\t\tgc.setClipping ((int)(cellRect.x - offsetX), (int)(cellRect.y - offsetY), (int)cellRect.width, (int)cellRect.height);", "+\t\t}", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "+\t\tevent.x = itemX;", "+\t\tevent.y = itemY;"]}], "num": 26469}