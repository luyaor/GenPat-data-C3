{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a963f48fe259dcf3ea7c83fb8b3cb4cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c89ca377f43de2e77f28d54c014764", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "  boolean generateLocalVars(Method method, Class[] paramTypes, Class returnType)", "signatureAfterChange": "  boolean generateLocalVars(JNIMethod method, JNIParameter[] params, JNIType returnType, JNIType returnType64)", "diff": ["-", "-boolean generateLocalVars(Method method, Class[] paramTypes, Class returnType) {", "+boolean generateLocalVars(JNIMethod method, JNIParameter[] params, JNIType returnType, JNIType returnType64) {", "-\tfor (int i = 0; i < paramTypes.length; i++) {", "-\t\tClass paramType = paramTypes[i];", "+\tfor (int i = 0; i < params.length; i++) {", "+\t\tJNIParameter param = params[i];", "+\t\tJNIType paramType = param.getType(), paramType64 = param.getType64();", "-\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "-\t\t\tClass componentType = paramType.getComponentType();", "+\t\t\tJNIType componentType = paramType.getComponentType();", "-\t\t\t\toutput(getTypeSignature2(componentType));", "+\t\t\t\toutput(componentType.getTypeSignature2(!paramType.equals(paramType64)));", "-\t\t} else if (paramType == String.class) {", "-\t\t\tif (paramData.getFlag(FLAG_UNICODE)) {", "+\t\t} else if (paramType.isType(\"java.lang.String\")) {", "+\t\t\tif (param.getFlag(FLAG_UNICODE)) {", "-\t\t\tClassData classData = metaData.getMetaData(paramType);", "-\t\t\tif (classData.getFlag(Flags.FLAG_STRUCT)) {", "+\t\t\tif (param.getTypeClass().getFlag(Flags.FLAG_STRUCT)) {", "-\t\t\toutput(getClassName(paramType));", "+\t\t\toutput(paramType.getSimpleName());", "-\t\t\tif (paramData.getFlag(FLAG_INIT)) output(\"={0}\");", "+\t\t\tif (param.getFlag(FLAG_INIT)) output(\"={0}\");", "-\t\tif (returnType != Void.TYPE) {", "+\t\tif (!returnType.isType(\"void\")) {", "-\t\t\toutput(getTypeSignature2(returnType));", "+\t\t\toutput(returnType.getTypeSignature2(!returnType.equals(returnType64)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9048d25e6bdbd9a0a31c72d14759e474", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "signatureAfterChange": "  void generateSetParameter(JNIParameter param, boolean critical)", "diff": ["-void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical) {", "+void generateSetParameter(JNIParameter param, boolean critical) {", "+\tJNIType paramType = param.getType(), paramType64 = param.getType64();", "-\tString iStr = String.valueOf(i);", "+\tString iStr = String.valueOf(param.getParameter());", "-\t\tClass componentType = paramType.getComponentType();", "+\t\tJNIType componentType = paramType.getComponentType();", "-\t\t\t\toutput(getTypeSignature1(componentType));", "+\t\t\t\toutput(componentType.getTypeSignature1(!paramType.equals(paramType64)));", "-\t\t\tif (paramData.getFlag(FLAG_NO_OUT)) {", "+\t\t\tif (param.getFlag(FLAG_NO_OUT)) {", "-\t} else if (paramType == String.class) {", "+\t} else if (paramType.isType(\"java.lang.String\")) {", "-\t\tif (paramData.getFlag(FLAG_UNICODE)) {", "+\t\tif (param.getFlag(FLAG_UNICODE)) {", "-\t\tif (!paramData.getFlag(FLAG_NO_OUT)) {", "+\t\tif (!param.getFlag(FLAG_NO_OUT)) {", "-\t\t\toutput(getClassName(paramType));", "+\t\t\toutput(paramType.getSimpleName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb85e8cdf1c973b7caa486821176e12", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  boolean generateGetParameter(Method method, int i, Class paramType, ParameterData paramData, boolean critical, int indent)", "signatureAfterChange": "  boolean generateGetParameter(JNIMethod method, JNIParameter param, boolean critical, int indent)", "diff": ["-boolean generateGetParameter(Method method, int i, Class paramType, ParameterData paramData, boolean critical, int indent) {", "+boolean generateGetParameter(JNIMethod method, JNIParameter param, boolean critical, int indent) {", "+\tJNIType paramType = param.getType(), paramType64 = param.getType64();", "-\tString iStr = String.valueOf(i);", "+\tString iStr = String.valueOf(param.getParameter());", "-\t\tClass componentType = paramType.getComponentType();", "+\t\tJNIType componentType = paramType.getComponentType();", "-\t\t\t\t\toutput(getTypeSignature2(componentType));", "+\t\t\t\t\toutput(componentType.getTypeSignature2(!paramType.equals(paramType64)));", "-\t\t\t\toutput(getTypeSignature1(componentType));", "+\t\t\t\toutput(componentType.getTypeSignature1(!paramType.equals(paramType64)));", "-\t} else if (paramType == String.class) {", "-\t\tif (paramData.getFlag(FLAG_UNICODE)) {", "+\t} else if (paramType.isType(\"java.lang.String\")) {", "+\t\tif (param.getFlag(FLAG_UNICODE)) {", "-\t\tif (paramData.getFlag(FLAG_NO_IN)) {", "+\t\tif (param.getFlag(FLAG_NO_IN)) {", "-\t\t\toutput(getClassName(paramType));", "+\t\t\toutput(paramType.getSimpleName());"]}], "num": 61364}