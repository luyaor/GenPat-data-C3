{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f313ab3e0ef912b43bae0f777c40797", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0333403a5b6f5b8d61942c4df806cc45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28f2c95555bb2ed2b6c2a58fbef9c726a4ca8116", "commitAfterChange": "5782ed835cc34300c35de16696ca0fbe1e498ed9", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t\twidth = Math.max (1, width);", "-\t\theight = Math.max (1, height);", "-\t\tint oldWidth = OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\tint oldHeight = OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\tint oldWidth = 0, oldHeight = 0;", "+\t\tif ((state & ZERO_SIZED) == 0) {", "+\t\t\toldWidth = OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t\toldHeight = OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t}", "-\t\tif (!sameExtent) {", "+\t\tif (!sameExtent && !(width == 0 && height == 0)) {", "+\t\t\tint newWidth = Math.max (1, width);", "+\t\t\tint newHeight = Math.max (1, height);", "-\t\t\t\tOS.gdk_window_resize (redrawWindow, width, height);", "+\t\t\t\tOS.gdk_window_resize (redrawWindow, newWidth, newHeight);", "-\t\t\t\tOS.gdk_window_resize (enableWindow, width, height);", "+\t\t\t\tOS.gdk_window_resize (enableWindow, newWidth, newHeight);", "-\t\t\tresizeHandle (width, height);", "+\t\t\tresizeHandle (newWidth, newHeight);", "+\t}", "+\t/*", "+\t* Bug in GTK.  Widgets cannot be sized smaller than 1x1.", "+\t* The fix is to hide zero-sized widgets and show them again", "+\t* when they are resized larger.", "+\t*/", "+\tif (!sameExtent) {", "+\t\tif (width == 0 && height == 0) {", "+\t\t\tstate |= ZERO_SIZED;", "+\t\t\tif (enableWindow != 0) {", "+\t\t\t\tOS.gdk_window_hide (enableWindow);", "+\t\t\t}", "+\t\t\tOS.gtk_widget_hide (topHandle);", "+\t\t} else {", "+\t\t\tstate &= ~ZERO_SIZED;", "+\t\t\tif ((state & HIDDEN) == 0) {", "+\t\t\t\tif (enableWindow != 0) {", "+\t\t\t\t\tOS.gdk_window_show_unraised (enableWindow);", "+\t\t\t\t}", "+\t\t\t\tOS.gtk_widget_show (topHandle);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4072f38988c5a39c8559dbc315414302", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "d210fa9d39566655f9c3694b37a81a867775c6fb", "commitAfterChange": "3ad31e0f367aa1b600ee746ae8b160bb349a69e1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r void paint(GC gc, int yPosition)", "signatureAfterChange": "\r void paint(GC gc, int yPosition)", "diff": ["-\tTree parent = getParent();\r", "-\tPoint paintPosition = new Point(getPaintStartX(), yPosition);\r", "-\t\r", "+\t\r", "+\tTree parent = getParent();\r", "+\tPoint paintPosition = new Point(getPaintStartX(), yPosition);\r", "+\tPoint extent = getSelectionExtent();\r", "-\tdrawSelection(gc, paintPosition);\r", "+\tif (isSelected() == true) {\r", "+\t\tgc.setBackground(getSelectionBackgroundColor());\r", "+\t\tgc.setForeground(getSelectionForegroundColor());\r", "+\t\tgc.fillRectangle(paintPosition.x, paintPosition.y, extent.x, extent.y);\r", "+\t} else {\r", "+\t\tgc.setBackground(getBackground());\r", "+\t\tgc.setForeground(getForeground());\r", "+\t\tif(getBackground() != parent.getBackground()){\r", "+\t\t\tgc.fillRectangle(paintPosition.x, paintPosition.y, extent.x, extent.y);\t\t\r", "+\t\t}\r", "+\t}\t\r", "+\tif (text != null) {\t\t\r", "+\t\tgc.drawString(text, getTextXPos(), paintPosition.y + getTextYPosition(gc), true);\r", "+\t}\r", "-\tdrawText(gc, new Point(getTextXPos(), paintPosition.y + getTextYPosition(gc)));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f072e2551566ac7b11da73eb3408e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "61c6d1cfa8202cf6bb13af3022e6b1b082004327", "commitAfterChange": "5355818ed6c80a44bb9a2df251a105a7af080d33", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void pack ()", "signatureAfterChange": "\r public void pack ()", "diff": ["-\tint headerWidth = OS.SendMessage (hwnd, OS.LVM_GETSTRINGWIDTH, 0, buffer);\r", "+\tint headerWidth = OS.SendMessage (hwnd, OS.LVM_GETSTRINGWIDTH, 0, buffer) + 10;\r", "+\tif (image != null) {\r", "+\t\tint margin = 0;\r", "+\t\tif ((COMCTL32_MAJOR << 16 | COMCTL32_MINOR) >= (5 << 16 | 80)) {\r", "+\t\t\tint hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);\r", "+\t\t\tmargin = OS.SendMessage (hwndHeader, OS.HDM_GETBITMAPMARGIN, 0, 0);\r", "+\t\t} else {\r", "+\t\t\tmargin = OS.GetSystemMetrics (OS.SM_CXEDGE) * 3;\r", "+\t\t}\r", "+\t\tRectangle rect = image.getBounds ();\r", "+\t\theaderWidth += rect.width + margin * 2;\r", "+\t}\r", "-\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE_USEHEADER);\r", "+\t\tif (image == null) {\r", "+\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, OS.LVSCW_AUTOSIZE_USEHEADER);\r", "+\t\t} else {\r", "+\t\t\tOS.SendMessage (hwnd, OS.LVM_SETCOLUMNWIDTH, index, headerWidth);\r", "+\t\t}\r"]}], "num": 42450}