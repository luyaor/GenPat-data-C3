{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "177d21b728397d4d49d3a1dca18d268b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f4e599e93ee3444e86866a608226c63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void drawFocus (int control, int context, boolean hasFocus, boolean hasBorder, Rect inset)", "signatureAfterChange": "  void drawFocus (int control, int context, boolean hasFocus, boolean hasBorder, Rect inset)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tCGRect rect = new CGRect ();", "-\t\tOS.HIViewGetBounds (control, rect);", "-\t\trect.x += inset.left;", "-\t\trect.y += inset.top;", "-\t\trect.width -= inset.right + inset.left;", "-\t\trect.height -= inset.bottom + inset.top;", "-\t\tint state;", "-\t\tif (OS.IsControlEnabled (control)) {", "-\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "-\t\t} else {", "-\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "-\t\t}", "-\t\tif (hasBorder) {", "-\t\t\tHIThemeFrameDrawInfo info = new HIThemeFrameDrawInfo ();", "-\t\t\tinfo.state = state;", "-\t\t\tinfo.kind = OS.kHIThemeFrameTextFieldSquare;", "-\t\t\tinfo.isFocused = hasFocus;", "-\t\t\tOS.HIThemeDrawFrame (rect, info, context, OS.kHIThemeOrientationNormal);", "-\t\t} else {", "-\t\t\tOS.HIThemeDrawFocusRect (rect, hasFocus, context, OS.kHIThemeOrientationNormal);", "-\t\t}", "+\tCGRect rect = new CGRect ();", "+\tOS.HIViewGetBounds (control, rect);", "+\trect.x += inset.left;", "+\trect.y += inset.top;", "+\trect.width -= inset.right + inset.left;", "+\trect.height -= inset.bottom + inset.top;", "+\tint state;", "+\tif (OS.IsControlEnabled (control)) {", "+\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (control, rect);", "-\t\trect.left += inset.left;", "-\t\trect.top += inset.top;", "-\t\trect.right -= inset.right;", "-\t\trect.bottom -= inset.bottom;", "-\t\tint state;", "-\t\tif (OS.IsControlEnabled (control)) {", "-\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "-\t\t} else {", "-\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "-\t\t}", "-\t\tif (hasFocus) {", "-\t\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "-\t\t\tOS.DrawThemeFocusRect (rect, true);", "-\t\t} else {", "-\t\t\t/*", "-\t\t\t* This code is intentionaly commented.", "-\t\t\t*  ", "-\t\t\t* NOTE: the focus ring is erased by drawBackground() above. ", "-\t\t\t*/", "-\t//\t\tOS.DrawThemeFocusRect (rect, false);", "-\t\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "-\t\t}", "+\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "+\t}", "+\tif (hasBorder) {", "+\t\tHIThemeFrameDrawInfo info = new HIThemeFrameDrawInfo ();", "+\t\tinfo.state = state;", "+\t\tinfo.kind = OS.kHIThemeFrameTextFieldSquare;", "+\t\tinfo.isFocused = hasFocus;", "+\t\tOS.HIThemeDrawFrame (rect, info, context, OS.kHIThemeOrientationNormal);", "+\t} else {", "+\t\tOS.HIThemeDrawFocusRect (rect, hasFocus, context, OS.kHIThemeOrientationNormal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e46e107f9e4c3639e9fd843059fef8c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void drawFocus (int control, boolean hasFocus, boolean hasBorder, float[] background, Rect inset)", "signatureAfterChange": "  void drawFocus (int control, int context, boolean hasFocus, boolean hasBorder, float[] background, Rect inset)", "diff": ["-void drawFocus (int control, boolean hasFocus, boolean hasBorder, float[] background, Rect inset) {", "-\tdrawBackground (control, background);", "-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (control, rect);", "-\trect.left += inset.left;", "-\trect.top += inset.top;", "-\trect.right -= inset.right;", "-\trect.bottom -= inset.bottom;", "-\tint state;", "-\tif (OS.IsControlEnabled (control)) {", "-\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "+void drawFocus (int control, int context, boolean hasFocus, boolean hasBorder, float[] background, Rect inset) {", "+\tdrawBackground (control, context, background);", "+\tif (OS.HIVIEW) {", "+\t\tCGRect rect = new CGRect ();", "+\t\tOS.HIViewGetBounds (control, rect);", "+\t\trect.x += inset.left;", "+\t\trect.y += inset.top;", "+\t\trect.width -= inset.right + inset.left;", "+\t\trect.height -= inset.bottom + inset.top;", "+\t\tint state;", "+\t\tif (OS.IsControlEnabled (control)) {", "+\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "+\t\t} else {", "+\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "+\t\t}", "+\t\tif (hasBorder) {", "+\t\t\tHIThemeFrameDrawInfo info = new HIThemeFrameDrawInfo ();", "+\t\t\tinfo.state = state;", "+\t\t\tinfo.kind = OS.kHIThemeFrameTextFieldSquare;", "+\t\t\tinfo.isFocused = hasFocus;", "+\t\t\tOS.HIThemeDrawFrame (rect, info, context, OS.kHIThemeOrientationNormal);", "+\t\t} else {", "+\t\t\tOS.HIThemeDrawFocusRect (rect, hasFocus, context, OS.kHIThemeOrientationNormal);", "+\t\t}", "-\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "-\t}", "-\tif (hasFocus) {", "-\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "-\t\tOS.DrawThemeFocusRect (rect, true);", "-\t} else {", "-\t\t/*", "-\t\t* This code is intentionaly commented.", "-\t\t*  ", "-\t\t* NOTE: the focus ring is erased by drawBackground() above. ", "-\t\t*/", "-//\t\tOS.DrawThemeFocusRect (rect, false);", "-\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (control, rect);", "+\t\trect.left += inset.left;", "+\t\trect.top += inset.top;", "+\t\trect.right -= inset.right;", "+\t\trect.bottom -= inset.bottom;", "+\t\tint state;", "+\t\tif (OS.IsControlEnabled (control)) {", "+\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "+\t\t} else {", "+\t\t\tstate = OS.IsControlActive (control) ? OS.kThemeStateUnavailable : OS.kThemeStateUnavailableInactive;", "+\t\t}", "+\t\tif (hasFocus) {", "+\t\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "+\t\t\tOS.DrawThemeFocusRect (rect, true);", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t* This code is intentionaly commented.", "+\t\t\t*  ", "+\t\t\t* NOTE: the focus ring is erased by drawBackground() above. ", "+\t\t\t*/", "+\t//\t\tOS.DrawThemeFocusRect (rect, false);", "+\t\t\tif (hasBorder) OS.DrawThemeEditTextFrame (rect, state);", "+\t\t}"]}], "num": 27013}