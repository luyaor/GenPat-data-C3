{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3a3325c5ad2beae5704134021485e59", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a61e5e2ef8eec56fe47bff29eb9a1ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "aea7bc0bf73005aaf84e801500b8d9649501d426", "commitAfterChange": "dfb220ee4e030cfb19c1aa2869387eb7e8037441", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = outlineView.frame ();", "+\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "+\t\t// there are either 0 columns or that column 0 is still the first physical column.", "+\t\tNSRect eraseItemRect = null;", "+\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || outlineView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "+\t\t\teraseItemRect = new NSRect ();", "+\t\t\teraseItemRect.y = cellRect.y;", "+\t\t\teraseItemRect.width = cellRect.x + cellRect.width;", "+\t\t\teraseItemRect.height = cellRect.height;", "+\t\t} else {", "+\t\t\teraseItemRect = cellRect;", "+\t\t}", "-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = eraseItemRect;", "-\t\tgc.setClipping((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "+\t\tgc.setClipping ((int)eraseItemRect.x, (int)eraseItemRect.y, (int)eraseItemRect.width, (int)eraseItemRect.height);", "-\t\tevent.x = (int)cellRect.x;", "-\t\tevent.y = (int)cellRect.y;", "-\t\tevent.width = (int)cellRect.width;", "-\t\tevent.height = (int)cellRect.height;", "+\t\tevent.x = (int)eraseItemRect.x;", "+\t\tevent.y = (int)eraseItemRect.y;", "+\t\tevent.width = (int)eraseItemRect.width;", "+\t\tevent.height = (int)eraseItemRect.height;", "+\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "+\t\t// there are either 0 columns or that column 0 is still the first physical column.", "+\t\tNSRect clipRect;", "+\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || outlineView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "+\t\t\tclipRect = new NSRect ();", "+\t\t\tclipRect.y = cellRect.y;", "+\t\t\tclipRect.width = cellRect.x + cellRect.width;", "+\t\t\tclipRect.height = cellRect.height;", "+\t\t} else {", "+\t\t\tclipRect = cellRect;", "+\t\t}", "-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = clipRect;", "-\t\tgc.setClipping((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "+\t\tgc.setClipping ((int)clipRect.x, (int)clipRect.y, (int)clipRect.width, (int)clipRect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f59071cf76b33a042409f0671f9a87", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "aea7bc0bf73005aaf84e801500b8d9649501d426", "commitAfterChange": "dfb220ee4e030cfb19c1aa2869387eb7e8037441", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = tableView.frame ();", "+\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "+\t\t// there are either 0 columns or that column 0 is still the first physical column.", "+\t\tNSRect eraseItemRect = null;", "+\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || tableView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "+\t\t\teraseItemRect = new NSRect ();", "+\t\t\teraseItemRect.y = cellRect.y;", "+\t\t\teraseItemRect.width = cellRect.x + cellRect.width;", "+\t\t\teraseItemRect.height = cellRect.height;", "+\t\t} else {", "+\t\t\teraseItemRect = cellRect;", "+\t\t}", "+", "-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = eraseItemRect;", "-\t\tgc.setClipping((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "+\t\tgc.setClipping ((int)eraseItemRect.x, (int)eraseItemRect.y, (int)eraseItemRect.width, (int)eraseItemRect.height);", "-\t\tevent.x = (int)cellRect.x;", "-\t\tevent.y = (int)cellRect.y;", "-\t\tevent.width = (int)cellRect.width;", "-\t\tevent.height = (int)cellRect.height;", "+\t\tevent.x = (int)eraseItemRect.x;", "+\t\tevent.y = (int)eraseItemRect.y;", "+\t\tevent.width = (int)eraseItemRect.width;", "+\t\tevent.height = (int)eraseItemRect.height;", "+\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "+\t\t// there are either 0 columns or that column 0 is still the first physical column.", "+\t\tNSRect clipRect;", "+\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || tableView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "+\t\t\tclipRect = new NSRect ();", "+\t\t\tclipRect.y = cellRect.y;", "+\t\t\tclipRect.width = cellRect.x + cellRect.width;", "+\t\t\tclipRect.height = cellRect.height;", "+\t\t} else {", "+\t\t\tclipRect = cellRect;", "+\t\t}", "+", "-\t\tdata.paintRect = cellRect;", "+\t\tdata.paintRect = clipRect;", "-\t\tgc.setClipping((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "+\t\tgc.setClipping ((int)clipRect.x, (int)clipRect.y, (int)clipRect.width, (int)clipRect.height);"]}], "num": 37727}