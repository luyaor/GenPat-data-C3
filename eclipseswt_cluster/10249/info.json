{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81ce05d9e9a533fcbbf27d9b7b8a2261", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1e2c5c80983499df403411e0f68a0d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r void moveLeft(CoolItem item, int pixels)", "signatureAfterChange": "\r void moveLeft(CoolItem item, int pixels)", "diff": ["-\tVector row = getRow(item);\r", "-\tint index = row.indexOf(item);\r", "+\tPoint point = findItem(item);\r", "+\tint row = point.y;\r", "+\tint index = point.x;\r", "-\tCoolItem left = (CoolItem) row.elementAt(index - 1);\r", "+\tCoolItem left = items[row][index - 1];\r", "-\tif (leftBounds.x + CoolItem.MINIMUM_WIDTH >= x) {\r", "+\tif (leftBounds.x + CoolItem.MINIMUM_WIDTH > x) {\r", "+\r", "+\tint damagedWidth = bounds.x - x + CoolItem.MINIMUM_WIDTH;\r", "+\tif (damagedWidth > CoolItem.MINIMUM_WIDTH) {\r", "+\t\tredraw(x, bounds.y, damagedWidth, bounds.height, false);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b831a2ea29d55a91dc7683ca4407574a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r void moveRight(CoolItem item, int pixels)", "signatureAfterChange": "\r void moveRight(CoolItem item, int pixels)", "diff": ["-\tVector row = getRow(item);\r", "-\tint index = row.indexOf(item);\r", "+\tPoint point = findItem(item);\r", "+\tint row = point.y;\r", "+\tint index = point.x;\r", "-\tint minSpaceOnRight = (row.size() - index) * CoolItem.MINIMUM_WIDTH;\r", "+\tint minSpaceOnRight = (items[row].length - index) * CoolItem.MINIMUM_WIDTH;\r", "-\tif (index + 1 == row.size()) {\r", "+\tif (index + 1 == items[row].length) {\r", "-\t\tCoolItem right = (CoolItem) row.elementAt(index + 1);\r", "+\t\tCoolItem right = items[row][index + 1];\r", "-\t\tif (x + CoolItem.MINIMUM_WIDTH >= rightBounds.x) {\r", "+\t\tif (x + CoolItem.MINIMUM_WIDTH > rightBounds.x) {\r", "-\tCoolItem left = (CoolItem) row.elementAt(index - 1);\r", "+\tCoolItem left = items[row][index - 1];\r", "+\t\r", "+\tint damagedWidth = x - bounds.x + CoolItem.MINIMUM_WIDTH + CoolItem.MARGIN_WIDTH;\r", "+\tif (x - bounds.x > 0) {\r", "+\t\tredraw(bounds.x - CoolItem.MARGIN_WIDTH, bounds.y, damagedWidth, bounds.height, false);\r", "+\t}\r"]}], "num": 10249}