{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31ce7100342091ac04dc2b927021ce88", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1d4ec112144961da0452ab5972ee91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f520a8dcf7987a68442ef89495b4518db5c9b2f5", "commitAfterChange": "f1256286e0498a43b82e383228c40b73b19b7e29", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\tif (styledText.isFixedLineHeight()) {", "+\t\tint height = layout.getBounds().height;", "+\t\tif (height > getLineHeight()) {", "+\t\t\tFontMetrics metrics = layout.getLineMetrics(0);", "+\t\t\tascent = metrics.getAscent() + metrics.getLeading();", "+\t\t\tdescent = metrics.getDescent();", "+\t\t\tif (layouts != null) {", "+\t\t\t\tfor (int i = 0; i < layouts.length; i++) {", "+\t\t\t\t\tif (layouts[i] != null && layouts[i] != layout) {", "+\t\t\t\t\t\tlayouts[i].setAscent(ascent);", "+\t\t\t\t\t\tlayouts[i].setDescent(descent);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (styledText.verticalScrollOffset != 0) {", "+\t\t\t\tint topIndex = styledText.topIndex;", "+\t\t\t\tint topIndexY = styledText.topIndexY;", "+\t\t\t\tint lineHeight = getLineHeight();", "+\t\t\t\tif (topIndexY >= 0) {", "+\t\t\t\t\tstyledText.verticalScrollOffset = (topIndex - 1) * lineHeight + lineHeight - topIndexY;", "+\t\t\t\t} else {", "+\t\t\t\t\tstyledText.verticalScrollOffset = topIndex * lineHeight - topIndexY;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (styledText.isBidiCaret()) {", "+\t\t\t\tstyledText.createCaretBitmaps();", "+\t\t\t\tstyledText.caretDirection = SWT.NULL;", "+\t\t\t}", "+\t\t\tstyledText.setCaretLocation();", "+\t\t\tstyledText.redraw();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78983c4e4f087d5278e7ff93e8e84320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-public boolean setUrl(String url) {", "+public boolean setUrl(String url, String postData, String[] headers) {", "-\tNSURLRequest request = NSURLRequest.requestWithURL(inURL);", "+\tNSMutableURLRequest request = (NSMutableURLRequest)NSMutableURLRequest.requestWithURL(inURL);", "+\tif (postData != null) {", "+\t\trequest.setHTTPMethod(NSString.stringWith(POST));", "+\t\tbyte[] bytes = postData.getBytes();", "+\t\tNSData data = NSData.dataWithBytes(bytes, bytes.length);", "+\t\trequest.setHTTPBody(data);", "+\t}", "+\tif (headers != null) {", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint index = current.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\twebView.setCustomUserAgent(null);"]}], "num": 23770}