{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "658a1ea04a7055d5d64662fbc587ffde", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ef1286ca33f8708aa5f52dfd8b29c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronizer.asyncExec (runnable);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronizer.asyncExec (runnable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8a37f96b0f2ee0fc573429546e7a09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f50fe1483b2d762b806af03bc5f5d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd2f6d02519e816f2b5a1a664384f17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tint type = event.type;", "-\tswitch (type) {", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.KeyUp: {", "-\t\t\tint vKey = Display.untranslateKey (event.keyCode);", "-\t\t\tif (vKey != 0) {", "-\t\t\t\treturn OS.CGPostKeyboardEvent (0, vKey, type == SWT.KeyDown) == 0;", "-\t\t\t} else {", "-\t\t\t\tvKey = -1;", "-\t\t\t\tint kchrPtr = OS.GetScriptManagerVariable ((short) OS.smKCHRCache);", "-\t\t\t\tint key = -1;", "-\t\t\t\tint [] state = new int [1];", "-\t\t\t\tint [] encoding = new int [1];", "-\t\t\t\tshort keyScript = (short) OS.GetScriptManagerVariable ((short) OS.smKeyScript);", "-\t\t\t\tshort regionCode = (short) OS.GetScriptManagerVariable ((short) OS.smRegionCode);", "-\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, regionCode, null, encoding) == OS.paramErr) {", "-\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, (short) OS.kTextRegionDontCare, null, encoding) == OS.paramErr) {", "-\t\t\t\t\t\tencoding [0] = OS.kTextEncodingMacRoman;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tint vKey = Display.untranslateKey (event.keyCode);", "+\t\t\t\tif (vKey != 0) {", "+\t\t\t\t\treturn OS.CGPostKeyboardEvent (0, vKey, type == SWT.KeyDown) == 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tvKey = -1;", "+\t\t\t\t\tint kchrPtr = OS.GetScriptManagerVariable ((short) OS.smKCHRCache);", "+\t\t\t\t\tint key = -1;", "+\t\t\t\t\tint [] state = new int [1];", "+\t\t\t\t\tint [] encoding = new int [1];", "+\t\t\t\t\tshort keyScript = (short) OS.GetScriptManagerVariable ((short) OS.smKeyScript);", "+\t\t\t\t\tshort regionCode = (short) OS.GetScriptManagerVariable ((short) OS.smRegionCode);", "+\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, regionCode, null, encoding) == OS.paramErr) {", "+\t\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, (short) OS.kTextRegionDontCare, null, encoding) == OS.paramErr) {", "+\t\t\t\t\t\t\tencoding [0] = OS.kTextEncodingMacRoman;", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tint [] encodingInfo = new int [1];", "-\t\t\t\tOS.CreateUnicodeToTextInfoByEncoding (encoding [0], encodingInfo);", "-\t\t\t\tif (encodingInfo [0] != 0) {", "-\t\t\t\t\tchar [] input = {event.character};", "-\t\t\t\t\tbyte [] buffer = new byte [2];", "-\t\t\t\t\tOS.ConvertFromUnicodeToPString (encodingInfo [0], 2, input, buffer);", "-\t\t\t\t\tOS.DisposeUnicodeToTextInfo (encodingInfo);", "-\t\t\t\t\tkey = buffer [1] & 0x7f;", "-\t\t\t\t}", "-\t\t\t\tif (key == -1) return false;\t\t\t\t", "-\t\t\t\tfor (int i = 0 ; i <= 0x7F ; i++) {", "-\t\t\t\t\tint result1 = OS.KeyTranslate (kchrPtr, (short) (i | 512), state);", "-\t\t\t\t\tint result2 = OS.KeyTranslate (kchrPtr, (short) i, state);", "-\t\t\t\t\tif ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {", "-\t\t\t\t\t\tvKey = i;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\tint [] encodingInfo = new int [1];", "+\t\t\t\t\tOS.CreateUnicodeToTextInfoByEncoding (encoding [0], encodingInfo);", "+\t\t\t\t\tif (encodingInfo [0] != 0) {", "+\t\t\t\t\t\tchar [] input = {event.character};", "+\t\t\t\t\t\tbyte [] buffer = new byte [2];", "+\t\t\t\t\t\tOS.ConvertFromUnicodeToPString (encodingInfo [0], 2, input, buffer);", "+\t\t\t\t\t\tOS.DisposeUnicodeToTextInfo (encodingInfo);", "+\t\t\t\t\t\tkey = buffer [1] & 0x7f;", "+\t\t\t\t\tif (key == -1) return false;\t\t\t\t", "+\t\t\t\t\tfor (int i = 0 ; i <= 0x7F ; i++) {", "+\t\t\t\t\t\tint result1 = OS.KeyTranslate (kchrPtr, (short) (i | 512), state);", "+\t\t\t\t\t\tint result2 = OS.KeyTranslate (kchrPtr, (short) i, state);", "+\t\t\t\t\t\tif ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {", "+\t\t\t\t\t\t\tvKey = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (vKey == -1) return false;", "+\t\t\t\t\treturn OS.CGPostKeyboardEvent (key, vKey, type == SWT.KeyDown) == 0;", "-\t\t\t\tif (vKey == -1) return false;", "-\t\t\t\treturn OS.CGPostKeyboardEvent (key, vKey, type == SWT.KeyDown) == 0;", "-\t\t}", "-\t\tcase SWT.MouseDown:", "-\t\tcase SWT.MouseMove: ", "-\t\tcase SWT.MouseUp: {", "-\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "-\t\t\tint chord = OS.GetCurrentEventButtonState ();", "-\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\tmouseCursorPosition.x = event.x;", "-\t\t\t\tmouseCursorPosition.y = event.y;", "-\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "-\t\t\t} else {", "-\t\t\t\tint button = event.button;", "-\t\t\t\tif (button < 1 || button > 5) return false;", "-\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "- \t\t\t\tswitch (button) {", "-\t\t\t\t\tcase 1: {", "-\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove: ", "+\t\t\tcase SWT.MouseUp: {", "+\t\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "+\t\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\tmouseCursorPosition.x = event.x;", "+\t\t\t\t\tmouseCursorPosition.y = event.y;", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tif (button < 1 || button > 5) return false;", "+\t\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "+\t \t\t\t\tswitch (button) {", "+\t\t\t\t\t\tcase 1: {", "+\t\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 2: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 3: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "-\t\t\t\t\tcase 2: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 3: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 4: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 5: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "+\t\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\t\t\tOS.GetGlobalMouse (pt);", "+\t\t\t\t\tmouseCursorPosition.x = pt.h;", "+\t\t\t\t\tmouseCursorPosition.y = pt.v;", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "-\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\tOS.GetGlobalMouse (pt);", "-\t\t\t\tmouseCursorPosition.x = pt.h;", "-\t\t\t\tmouseCursorPosition.y = pt.v;", "-\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "-\t\t}", "-\t\tcase SWT.MouseWheel: {", "-\t\t\treturn OS.CGPostScrollWheelEvent (1, event.count) == 0;", "-\t\t}", "-\t} ", "-\treturn false;", "+\t\t\tcase SWT.MouseWheel: {", "+\t\t\t\treturn OS.CGPostScrollWheelEvent (1, event.count) == 0;", "+\t\t\t}", "+\t\t} ", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "666eaef5d6ef364a000e0db493d9b26c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884844b1b9d444e954524602f596b9d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn disposed;", "+\tsynchronized (Device.class) {", "+\t\treturn disposed;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be7819cab25894fe8e955d06ab055a21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn disposed;", "+\tsynchronized (Device.class) {", "+\t\treturn disposed;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484dde3a736571aa6319747053550539", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb53aa5cab31928b14131c6420d96e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tdisposed = true;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tdisposed = true;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad223d5edd8e655af217fe7bfba44b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9136367b4dbd2c831816b6094058825b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  synchronized static void deregister (Display display)", "signatureAfterChange": "  static void deregister (Display display)", "diff": ["-synchronized static void deregister (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (display == Displays [i]) Displays [i] = null;", "+static void deregister (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (display == Displays [i]) Displays [i] = null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0751809bf3893ffb736b6376c6846c72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2117cfb819cbda69e6057bd17074adcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn xDisplay == 0;", "+\tsynchronized (Device.class) {", "+\t\treturn xDisplay == 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62cf8b4c478694298dc7175265d2ed59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tdisposed = true;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tdisposed = true;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d1980eda157712fbfc2172cb12fb5ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd745ba5764122dc18bf1711d63e694", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronizer.asyncExec (runnable);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronizer.asyncExec (runnable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57cf2269afb99838090188a2cbdfcc0d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  static synchronized void register (Display display)", "signatureAfterChange": "  static void register (Display display)", "diff": ["-static synchronized void register (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] == null) {", "-\t\t\tDisplays [i] = display;", "-\t\t\treturn;", "+static void register (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] == null) {", "+\t\t\t\tDisplays [i] = display;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tDisplay [] newDisplays = new Display [Displays.length + 4];", "+\t\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "+\t\tnewDisplays [Displays.length] = display;", "+\t\tDisplays = newDisplays;", "-\tDisplay [] newDisplays = new Display [Displays.length + 4];", "-\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "-\tnewDisplays [Displays.length] = display;", "-\tDisplays = newDisplays;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958f8db87eed977c8530278a0533de70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667223d3e4ea48e3a41d4a0afb389d0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1d203bf52556c806525fcfcc5f1988", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11502423f2a0f1fd0635b30d4b7c35e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn disposed;", "+\tsynchronized (Device.class) {", "+\t\treturn disposed;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85acab1add91c987100ae61f4b266d02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19baac2778abd136eb096f7a340ccd1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02226b825b808cfe8a672ba3435356b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d3230ddc5e441e43e6988a311d7429", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e805e9ba378dbde56b6e5b570a12eff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f11ae517e6fbe5ca371522be02bda3c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": " static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd221b97ef8679c4db82ce2143c3d278", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2facefe66a71bc51b3d3577c20fd0724", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " static synchronized void register (Display display)", "signatureAfterChange": " static void register (Display display)", "diff": ["-static synchronized void register (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] == null) {", "-\t\t\tDisplays [i] = display;", "-\t\t\treturn;", "+static void register (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] == null) {", "+\t\t\t\tDisplays [i] = display;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tDisplay [] newDisplays = new Display [Displays.length + 4];", "+\t\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "+\t\tnewDisplays [Displays.length] = display;", "+\t\tDisplays = newDisplays;", "-\tDisplay [] newDisplays = new Display [Displays.length + 4];", "-\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "-\tnewDisplays [Displays.length] = display;", "-\tDisplays = newDisplays;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89344e3a4810355f0eb0fe36759797e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecad973d29b6cd45c544ac715197adc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "  static synchronized void register (Display display)", "signatureAfterChange": "  static void register (Display display)", "diff": ["-static synchronized void register (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] == null) {", "-\t\t\tDisplays [i] = display;", "-\t\t\treturn;", "+static void register (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] == null) {", "+\t\t\t\tDisplays [i] = display;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tDisplay [] newDisplays = new Display [Displays.length + 4];", "+\t\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "+\t\tnewDisplays [Displays.length] = display;", "+\t\tDisplays = newDisplays;", "-\tDisplay [] newDisplays = new Display [Displays.length + 4];", "-\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "-\tnewDisplays [Displays.length] = display;", "-\tDisplays = newDisplays;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ec4a2025043b39a5bdb7a6ac0153ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83280e4b3263918b79d6e1f3674c7fcd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-//\tint type = event.type;", "-//\tswitch (type){", "-//\t\tcase SWT.KeyDown:", "-//\t\tcase SWT.KeyUp: {", "-//\t\t\tKEYBDINPUT inputs = new KEYBDINPUT ();", "-//\t\t\tinputs.wVk = (short) untranslateKey (event.keyCode);", "-//\t\t\tif (inputs.wVk == 0) {", "-//\t\t\t\tchar key = event.character;", "-//\t\t\t\tswitch (key) {", "-//\t\t\t\t\tcase SWT.BS: inputs.wVk = (short) OS.VK_BACK; break;", "-//\t\t\t\t\tcase SWT.CR: inputs.wVk = (short) OS.VK_RETURN; break;", "-//\t\t\t\t\tcase SWT.DEL: inputs.wVk = (short) OS.VK_DELETE; break;", "-//\t\t\t\t\tcase SWT.ESC: inputs.wVk = (short) OS.VK_ESCAPE; break;", "-//\t\t\t\t\tcase SWT.TAB: inputs.wVk = (short) OS.VK_TAB; break;", "-//\t\t\t\t\t/*", "-//\t\t\t\t\t* Since there is no LF key on the keyboard, do not attempt", "-//\t\t\t\t\t* to map LF to CR or attempt to post an LF key.", "-//\t\t\t\t\t*/", "-////\t\t\t\t\tcase SWT.LF: inputs.wVk = (short) OS.VK_RETURN; break;", "-//\t\t\t\t\tcase SWT.LF: return false;", "-//\t\t\t\t\tdefault: {", "-//\t\t\t\t\t\tif (OS.IsWinCE) {", "-//\t\t\t\t\t\t\tinputs.wVk = OS.CharUpper ((short) key);", "-//\t\t\t\t\t\t} else {", "-//\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key, 0));", "-//\t\t\t\t\t\t\tif (inputs.wVk == -1) return false;", "-//\t\t\t\t\t\t\tinputs.wVk &= 0xFF;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+//\t\tint type = event.type;", "+//\t\tswitch (type){", "+//\t\t\tcase SWT.KeyDown:", "+//\t\t\tcase SWT.KeyUp: {", "+//\t\t\t\tKEYBDINPUT inputs = new KEYBDINPUT ();", "+//\t\t\t\tinputs.wVk = (short) untranslateKey (event.keyCode);", "+//\t\t\t\tif (inputs.wVk == 0) {", "+//\t\t\t\t\tchar key = event.character;", "+//\t\t\t\t\tswitch (key) {", "+//\t\t\t\t\t\tcase SWT.BS: inputs.wVk = (short) OS.VK_BACK; break;", "+//\t\t\t\t\t\tcase SWT.CR: inputs.wVk = (short) OS.VK_RETURN; break;", "+//\t\t\t\t\t\tcase SWT.DEL: inputs.wVk = (short) OS.VK_DELETE; break;", "+//\t\t\t\t\t\tcase SWT.ESC: inputs.wVk = (short) OS.VK_ESCAPE; break;", "+//\t\t\t\t\t\tcase SWT.TAB: inputs.wVk = (short) OS.VK_TAB; break;", "+//\t\t\t\t\t\t/*", "+//\t\t\t\t\t\t* Since there is no LF key on the keyboard, do not attempt", "+//\t\t\t\t\t\t* to map LF to CR or attempt to post an LF key.", "+//\t\t\t\t\t\t*/", "+//\t//\t\t\t\t\tcase SWT.LF: inputs.wVk = (short) OS.VK_RETURN; break;", "+//\t\t\t\t\t\tcase SWT.LF: return false;", "+//\t\t\t\t\t\tdefault: {", "+//\t\t\t\t\t\t\tif (OS.IsWinCE) {", "+//\t\t\t\t\t\t\t\tinputs.wVk = OS.CharUpper ((short) key);", "+//\t\t\t\t\t\t\t} else {", "+//\t\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key, 0));", "+//\t\t\t\t\t\t\t\tif (inputs.wVk == -1) return false;", "+//\t\t\t\t\t\t\t\tinputs.wVk &= 0xFF;", "+//\t\t\t\t\t\t\t}", "+//\t\t\t\tinputs.dwFlags = type == SWT.KeyUp ? OS.KEYEVENTF_KEYUP : 0;", "+//\t\t\t\tint hHeap = OS.GetProcessHeap ();", "+//\t\t\t\tint pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "+//\t\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_KEYBOARD}, 4);", "+//\t\t\t\tOS.MoveMemory (pInputs + 4, inputs, KEYBDINPUT.sizeof);", "+//\t\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "+//\t\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "+//\t\t\t\treturn result;", "-//\t\t\tinputs.dwFlags = type == SWT.KeyUp ? OS.KEYEVENTF_KEYUP : 0;", "-//\t\t\tint hHeap = OS.GetProcessHeap ();", "-//\t\t\tint pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "-//\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_KEYBOARD}, 4);", "-//\t\t\tOS.MoveMemory (pInputs + 4, inputs, KEYBDINPUT.sizeof);", "-//\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "-//\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "-//\t\t\treturn result;", "-//\t\t}", "-//\t\tcase SWT.MouseDown:", "-//\t\tcase SWT.MouseMove: ", "-//\t\tcase SWT.MouseUp: {", "-//\t\t\tMOUSEINPUT inputs = new MOUSEINPUT ();", "-//\t\t\tif (type == SWT.MouseMove){", "-//\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_MOVE | OS.MOUSEEVENTF_ABSOLUTE;", "-//\t\t\t\tinputs.dx = event.x * 65535 / (OS.GetSystemMetrics (OS.SM_CXSCREEN) - 1);", "-//\t\t\t\tinputs.dy = event.y * 65535 / (OS.GetSystemMetrics (OS.SM_CYSCREEN) - 1);", "-//\t\t\t} else {", "-//\t\t\t\tswitch (event.button) {", "-//\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "-//\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "-//\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "-//\t\t\t\t\tdefault: return false;", "+//\t\t\tcase SWT.MouseDown:", "+//\t\t\tcase SWT.MouseMove: ", "+//\t\t\tcase SWT.MouseUp: {", "+//\t\t\t\tMOUSEINPUT inputs = new MOUSEINPUT ();", "+//\t\t\t\tif (type == SWT.MouseMove){", "+//\t\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_MOVE | OS.MOUSEEVENTF_ABSOLUTE;", "+//\t\t\t\t\tinputs.dx = event.x * 65535 / (OS.GetSystemMetrics (OS.SM_CXSCREEN) - 1);", "+//\t\t\t\t\tinputs.dy = event.y * 65535 / (OS.GetSystemMetrics (OS.SM_CYSCREEN) - 1);", "+//\t\t\t\t} else {", "+//\t\t\t\t\tswitch (event.button) {", "+//\t\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "+//\t\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "+//\t\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "+//\t\t\t\t\t\tdefault: return false;", "+//\t\t\t\t\t}", "+//\t\t\t\tint hHeap = OS.GetProcessHeap ();", "+//\t\t\t\tint pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "+//\t\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_MOUSE}, 4);", "+//\t\t\t\tOS.MoveMemory (pInputs + 4, inputs, MOUSEINPUT.sizeof);", "+//\t\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "+//\t\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "+//\t\t\t\treturn result;", "-//\t\t\tint hHeap = OS.GetProcessHeap ();", "-//\t\t\tint pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "-//\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_MOUSE}, 4);", "-//\t\t\tOS.MoveMemory (pInputs + 4, inputs, MOUSEINPUT.sizeof);", "-//\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "-//\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "-//\t\t\treturn result;", "-//\t\t}", "-//\t} ", "-\treturn false;", "+//\t\t} ", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2381787ee4517b42611a14690c6593c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded23a3e82420ed6d4ddca8538154641", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tint type = event.type;", "-\tswitch (type) {", "-\t\tcase SWT.KeyDown :", "-\t\tcase SWT.KeyUp : {", "-\t\t\tint keyCode = 0;", "-\t\t\tint keysym = untranslateKey (event.keyCode);", "-\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\tif (keyCode == 0) {", "-\t\t\t\tchar key = event.character;", "-\t\t\t\tswitch (key) {", "-\t\t\t\t\tcase SWT.BS: keysym = OS.XK_BackSpace; break;", "-\t\t\t\t\tcase SWT.CR: keysym = OS.XK_Return; break;", "-\t\t\t\t\tcase SWT.DEL: keysym = OS.XK_Delete; break;", "-\t\t\t\t\tcase SWT.ESC: keysym = OS.XK_Escape; break;", "-\t\t\t\t\tcase SWT.TAB: keysym = OS.XK_Tab; break;", "-\t\t\t\t\tcase SWT.LF: keysym = OS.XK_Linefeed; break;", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown :", "+\t\t\tcase SWT.KeyUp : {", "+\t\t\t\tint keyCode = 0;", "+\t\t\t\tint keysym = untranslateKey (event.keyCode);", "+\t\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\tif (keyCode == 0) {", "+\t\t\t\t\tchar key = event.character;", "+\t\t\t\t\tswitch (key) {", "+\t\t\t\t\t\tcase SWT.BS: keysym = OS.XK_BackSpace; break;", "+\t\t\t\t\t\tcase SWT.CR: keysym = OS.XK_Return; break;", "+\t\t\t\t\t\tcase SWT.DEL: keysym = OS.XK_Delete; break;", "+\t\t\t\t\t\tcase SWT.ESC: keysym = OS.XK_Escape; break;", "+\t\t\t\t\t\tcase SWT.TAB: keysym = OS.XK_Tab; break;", "+\t\t\t\t\t\tcase SWT.LF: keysym = OS.XK_Linefeed; break;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\t\t\t\t\t}", "+\t\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\t\tif (keyCode == 0) return false;", "-\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\t\tif (keyCode == 0) return false;", "-\t\t\t}", "-\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "-\t\t\treturn true;", "-\t\t}", "-\t\tcase SWT.MouseDown :", "-\t\tcase SWT.MouseMove : ", "-\t\tcase SWT.MouseUp : {", "-\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "+\t\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "-\t\t\t} else {", "-\t\t\t\tint button = event.button;", "-\t\t\t\tif (button < 1 || button > 3) return false;", "-\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "-\t\t\t    return true;", "+\t\t\t}", "+\t\t\tcase SWT.MouseDown :", "+\t\t\tcase SWT.MouseMove : ", "+\t\t\tcase SWT.MouseUp : {", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "+\t\t\t\t\treturn true;", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tif (button < 1 || button > 3) return false;", "+\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "+\t\t\t\t    return true;", "+\t\t\t\t}", "+\t\treturn false;", "-\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf618e89bd5b0fb3700436bd359e35ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn disposed;", "+\tsynchronized (Device.class) {", "+\t\treturn disposed;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6f3cf5cc581be8b3e73157aa968654", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (!OS.GDK_WINDOWING_X11()) return false;", "-\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\tint type = event.type;", "-\tswitch (type) {", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.KeyUp: {", "-\t\t\tint keyCode = 0;", "-\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "-\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\tif (keyCode == 0) {", "-\t\t\t\tchar key = event.character;", "-\t\t\t\tswitch (key) {", "-\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "-\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "-\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "-\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "-\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "-\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (!OS.GDK_WINDOWING_X11()) return false;", "+\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tint keyCode = 0;", "+\t\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "+\t\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\tif (keyCode == 0) {", "+\t\t\t\t\tchar key = event.character;", "+\t\t\t\t\tswitch (key) {", "+\t\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "+\t\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "+\t\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "+\t\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "+\t\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "+\t\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\t\t\t\t\t}", "+\t\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\t\tif (keyCode == 0) return false;", "-\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\t\tif (keyCode == 0) return false;", "+\t\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "+\t\t\t\treturn true;", "-\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "-\t\t\treturn true;", "-\t\t}", "-\t\tcase SWT.MouseDown:", "-\t\tcase SWT.MouseMove: ", "-\t\tcase SWT.MouseUp: {", "-\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "-\t\t\t} else {", "-\t\t\t\tint button = event.button;", "-\t\t\t\tswitch (button) {", "-\t\t\t\t\tcase 1:", "-\t\t\t\t\tcase 2:", "-\t\t\t\t\tcase 3:\tbreak;", "-\t\t\t\t\tcase 4: button = 6;\tbreak;", "-\t\t\t\t\tcase 5: button = 7;\tbreak;", "-\t\t\t\t\tdefault: return false;", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove: ", "+\t\t\tcase SWT.MouseUp: {", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tswitch (button) {", "+\t\t\t\t\t\tcase 1:", "+\t\t\t\t\t\tcase 2:", "+\t\t\t\t\t\tcase 3:\tbreak;", "+\t\t\t\t\t\tcase 4: button = 6;\tbreak;", "+\t\t\t\t\t\tcase 5: button = 7;\tbreak;", "+\t\t\t\t\t\tdefault: return false;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "-\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "+\t\t\t\treturn true;", "-\t\t\treturn true;", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented. After posting a", "+\t\t\t* mouse wheel event the system may respond unpredictably", "+\t\t\t* to subsequent mouse actions.", "+\t\t\t*/", "+//\t\t\tcase SWT.MouseWheel: {", "+//\t\t\t\tif (event.count == 0) return false;", "+//\t\t\t\tint button = event.count < 0 ? 5 : 4;", "+//\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "+//\t\t\t}", "-\t\t/*", "-\t\t* This code is intentionally commented. After posting a", "-\t\t* mouse wheel event the system may respond unpredictably", "-\t\t* to subsequent mouse actions.", "-\t\t*/", "-//\t\tcase SWT.MouseWheel: {", "-//\t\t\tif (event.count == 0) return false;", "-//\t\t\tint button = event.count < 0 ? 5 : 4;", "-//\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "-//\t\t}", "+\t\treturn false;", "-\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25281d780bbaba87b0d43f573fc51d93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public boolean isDisposed ()", "signatureAfterChange": " public boolean isDisposed ()", "diff": ["-\treturn disposed;", "+\tsynchronized (Device.class) {", "+\t\treturn disposed;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98799a48d530cd5c84aadaa388c51c93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f5a6548cb874bbc8e64a1c4f57a4783", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da9fe5141f183aaa86843d297471e86d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronizer.asyncExec (runnable);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronizer.asyncExec (runnable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "293e015bf714180438fb6c1a592a1d31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678a13017e43d4e419fd68db861be6e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b571a0783adcffca5217d2e587f6c860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronized (idleLock) {", "-\t\tif (idleNeeded && idleHandle == 0) {", "- \t\t\t//NOTE: calling unlocked function in OS", "-\t\t\tidleHandle = OS._g_idle_add (idleProc, 0);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronized (idleLock) {", "+\t\t\tif (idleNeeded && idleHandle == 0) {", "+\t \t\t\t//NOTE: calling unlocked function in OS", "+\t\t\t\tidleHandle = OS._g_idle_add (idleProc, 0);", "+\t\t\t}", "+\t\tsynchronizer.asyncExec (runnable);", "-\tsynchronizer.asyncExec (runnable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5e465a6bc60222ca09e461aa626822", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b076fc72eab0c5c74fde6d0c5cc63578", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44260ee30036d39f7c699ef9a6ab90e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronizer.asyncExec (runnable);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronizer.asyncExec (runnable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072a1db4e42195638a9d0b8f792479f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tdisposed = true;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tdisposed = true;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15023935e7a79026cd42182b718e7379", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public Thread getThread ()", "signatureAfterChange": " public Thread getThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn thread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn thread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e60fb21a07fd8525c1a1007b92f93fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19891013eedabe7ff2c719d9b9a253e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  static synchronized void register (Display display)", "signatureAfterChange": "  static void register (Display display)", "diff": ["-static synchronized void register (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] == null) {", "-\t\t\tDisplays [i] = display;", "-\t\t\treturn;", "+static void register (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] == null) {", "+\t\t\t\tDisplays [i] = display;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\tDisplay [] newDisplays = new Display [Displays.length + 4];", "+\t\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "+\t\tnewDisplays [Displays.length] = display;", "+\t\tDisplays = newDisplays;", "-\tDisplay [] newDisplays = new Display [Displays.length + 4];", "-\tSystem.arraycopy (Displays, 0, newDisplays, 0, Displays.length);", "-\tnewDisplays [Displays.length] = display;", "-\tDisplays = newDisplays;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29eaaa0a22558c6d39a7f7632873bea8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tint type = event.type;", "-\tswitch (type){", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.KeyUp: {", "-\t\t\tKEYBDINPUT inputs = new KEYBDINPUT ();", "-\t\t\tinputs.wVk = (short) untranslateKey (event.keyCode);", "-\t\t\tif (inputs.wVk == 0) {", "-\t\t\t\tchar key = event.character;", "-\t\t\t\tswitch (key) {", "-\t\t\t\t\tcase SWT.BS: inputs.wVk = (short) OS.VK_BACK; break;", "-\t\t\t\t\tcase SWT.CR: inputs.wVk = (short) OS.VK_RETURN; break;", "-\t\t\t\t\tcase SWT.DEL: inputs.wVk = (short) OS.VK_DELETE; break;", "-\t\t\t\t\tcase SWT.ESC: inputs.wVk = (short) OS.VK_ESCAPE; break;", "-\t\t\t\t\tcase SWT.TAB: inputs.wVk = (short) OS.VK_TAB; break;", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Since there is no LF key on the keyboard, do not attempt", "-\t\t\t\t\t* to map LF to CR or attempt to post an LF key.", "-\t\t\t\t\t*/", "-//\t\t\t\t\tcase SWT.LF: inputs.wVk = (short) OS.VK_RETURN; break;", "-\t\t\t\t\tcase SWT.LF: return false;", "-\t\t\t\t\tdefault: {", "-\t\t\t\t\t\tif (OS.IsWinCE) {", "-\t\t\t\t\t\t\tinputs.wVk = (short)/*64*/OS.CharUpper ((short) key);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key, 0));", "-\t\t\t\t\t\t\tif (inputs.wVk == -1) return false;", "-\t\t\t\t\t\t\tinputs.wVk &= 0xFF;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint type = event.type;", "+\t\tswitch (type){", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tKEYBDINPUT inputs = new KEYBDINPUT ();", "+\t\t\t\tinputs.wVk = (short) untranslateKey (event.keyCode);", "+\t\t\t\tif (inputs.wVk == 0) {", "+\t\t\t\t\tchar key = event.character;", "+\t\t\t\t\tswitch (key) {", "+\t\t\t\t\t\tcase SWT.BS: inputs.wVk = (short) OS.VK_BACK; break;", "+\t\t\t\t\t\tcase SWT.CR: inputs.wVk = (short) OS.VK_RETURN; break;", "+\t\t\t\t\t\tcase SWT.DEL: inputs.wVk = (short) OS.VK_DELETE; break;", "+\t\t\t\t\t\tcase SWT.ESC: inputs.wVk = (short) OS.VK_ESCAPE; break;", "+\t\t\t\t\t\tcase SWT.TAB: inputs.wVk = (short) OS.VK_TAB; break;", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Since there is no LF key on the keyboard, do not attempt", "+\t\t\t\t\t\t* to map LF to CR or attempt to post an LF key.", "+\t\t\t\t\t\t*/", "+//\t\t\t\t\t\tcase SWT.LF: inputs.wVk = (short) OS.VK_RETURN; break;", "+\t\t\t\t\t\tcase SWT.LF: return false;", "+\t\t\t\t\t\tdefault: {", "+\t\t\t\t\t\t\tif (OS.IsWinCE) {", "+\t\t\t\t\t\t\t\tinputs.wVk = (short)/*64*/OS.CharUpper ((short) key);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key, 0));", "+\t\t\t\t\t\t\t\tif (inputs.wVk == -1) return false;", "+\t\t\t\t\t\t\t\tinputs.wVk &= 0xFF;", "+\t\t\t\t\t\t\t}", "+\t\t\t\tinputs.dwFlags = type == SWT.KeyUp ? OS.KEYEVENTF_KEYUP : 0;", "+\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\t\t\t\tint /*long*/ pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "+\t\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_KEYBOARD}, 4);", "+\t\t\t\t//TODO - DWORD type of INPUT structure aligned to 8 bytes on 64 bit", "+\t\t\t\tOS.MoveMemory (pInputs + OS.PTR_SIZEOF, inputs, KEYBDINPUT.sizeof);", "+\t\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "+\t\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "+\t\t\t\treturn result;", "-\t\t\tinputs.dwFlags = type == SWT.KeyUp ? OS.KEYEVENTF_KEYUP : 0;", "-\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "-\t\t\tint /*long*/ pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "-\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_KEYBOARD}, 4);", "-\t\t\t//TODO - DWORD type of INPUT structure aligned to 8 bytes on 64 bit", "-\t\t\tOS.MoveMemory (pInputs + OS.PTR_SIZEOF, inputs, KEYBDINPUT.sizeof);", "-\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "-\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "-\t\t\treturn result;", "-\t\t}", "-\t\tcase SWT.MouseDown:", "-\t\tcase SWT.MouseMove:", "-\t\tcase SWT.MouseUp:", "-\t\tcase SWT.MouseWheel: {", "-\t\t\tMOUSEINPUT inputs = new MOUSEINPUT ();", "-\t\t\tif (type == SWT.MouseMove){", "-\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_MOVE | OS.MOUSEEVENTF_ABSOLUTE;", "-\t\t\t\tint x= 0, y = 0, width = 0, height = 0;", "-\t\t\t\tif (OS.WIN32_VERSION >= OS.VERSION (5, 0)) {", "-\t\t\t\t\tinputs.dwFlags |= OS.MOUSEEVENTF_VIRTUALDESK;", "-\t\t\t\t\tx = OS.GetSystemMetrics (OS.SM_XVIRTUALSCREEN);", "-\t\t\t\t\ty = OS.GetSystemMetrics (OS.SM_YVIRTUALSCREEN);\t", "-\t\t\t\t\twidth = OS.GetSystemMetrics (OS.SM_CXVIRTUALSCREEN);", "-\t\t\t\t\theight = OS.GetSystemMetrics (OS.SM_CYVIRTUALSCREEN);", "-\t\t\t\t} else {", "-\t\t\t\t\twidth = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "-\t\t\t\t\theight = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\t\t\t}", "-\t\t\t\tinputs.dx = ((event.x - x) * 65535 + width - 2) / (width - 1);", "-\t\t\t\tinputs.dy = ((event.y - y) * 65535 + height - 2) / (height - 1);", "-\t\t\t} else {", "-\t\t\t\tif (type == SWT.MouseWheel) {", "-\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "-\t\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_WHEEL;", "-\t\t\t\t\tswitch (event.detail) {", "-\t\t\t\t\t\tcase SWT.SCROLL_PAGE:", "-\t\t\t\t\t\t\tinputs.mouseData = event.count * OS.WHEEL_DELTA;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase SWT.SCROLL_LINE:", "-\t\t\t\t\t\t\tint [] value = new int [1];", "-\t\t\t\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWHEELSCROLLLINES, 0, value, 0);", "-\t\t\t\t\t\t\tinputs.mouseData = event.count * OS.WHEEL_DELTA / value [0];", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault: return false;", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove:", "+\t\t\tcase SWT.MouseUp:", "+\t\t\tcase SWT.MouseWheel: {", "+\t\t\t\tMOUSEINPUT inputs = new MOUSEINPUT ();", "+\t\t\t\tif (type == SWT.MouseMove){", "+\t\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_MOVE | OS.MOUSEEVENTF_ABSOLUTE;", "+\t\t\t\t\tint x= 0, y = 0, width = 0, height = 0;", "+\t\t\t\t\tif (OS.WIN32_VERSION >= OS.VERSION (5, 0)) {", "+\t\t\t\t\t\tinputs.dwFlags |= OS.MOUSEEVENTF_VIRTUALDESK;", "+\t\t\t\t\t\tx = OS.GetSystemMetrics (OS.SM_XVIRTUALSCREEN);", "+\t\t\t\t\t\ty = OS.GetSystemMetrics (OS.SM_YVIRTUALSCREEN);\t", "+\t\t\t\t\t\twidth = OS.GetSystemMetrics (OS.SM_CXVIRTUALSCREEN);", "+\t\t\t\t\t\theight = OS.GetSystemMetrics (OS.SM_CYVIRTUALSCREEN);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\twidth = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "+\t\t\t\t\t\theight = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "+\t\t\t\t\tinputs.dx = ((event.x - x) * 65535 + width - 2) / (width - 1);", "+\t\t\t\t\tinputs.dy = ((event.y - y) * 65535 + height - 2) / (height - 1);", "-\t\t\t\t\tswitch (event.button) {", "-\t\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "-\t\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "-\t\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "-\t\t\t\t\t\tcase 4: {", "-\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "-\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "-\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON1;", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\tif (type == SWT.MouseWheel) {", "+\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\tinputs.dwFlags = OS.MOUSEEVENTF_WHEEL;", "+\t\t\t\t\t\tswitch (event.detail) {", "+\t\t\t\t\t\t\tcase SWT.SCROLL_PAGE:", "+\t\t\t\t\t\t\t\tinputs.mouseData = event.count * OS.WHEEL_DELTA;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase SWT.SCROLL_LINE:", "+\t\t\t\t\t\t\t\tint [] value = new int [1];", "+\t\t\t\t\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWHEELSCROLLLINES, 0, value, 0);", "+\t\t\t\t\t\t\t\tinputs.mouseData = event.count * OS.WHEEL_DELTA / value [0];", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault: return false;", "-\t\t\t\t\t\tcase 5: {", "-\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "-\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "-\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON2;", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tswitch (event.button) {", "+\t\t\t\t\t\t\tcase 1: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_LEFTDOWN : OS.MOUSEEVENTF_LEFTUP; break;", "+\t\t\t\t\t\t\tcase 2: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_MIDDLEDOWN : OS.MOUSEEVENTF_MIDDLEUP; break;", "+\t\t\t\t\t\t\tcase 3: inputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_RIGHTDOWN : OS.MOUSEEVENTF_RIGHTUP; break;", "+\t\t\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON1;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\t\t\tif (OS.WIN32_VERSION < OS.VERSION (5, 0)) return false;", "+\t\t\t\t\t\t\t\tinputs.dwFlags = type == SWT.MouseDown ? OS.MOUSEEVENTF_XDOWN : OS.MOUSEEVENTF_XUP;", "+\t\t\t\t\t\t\t\tinputs.mouseData = OS.XBUTTON2;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tdefault: return false;", "-\t\t\t\t\t\tdefault: return false;", "+\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\t\t\t\tint /*long*/ pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "+\t\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_MOUSE}, 4);", "+\t\t\t\t//TODO - DWORD type of INPUT structure aligned to 8 bytes on 64 bit", "+\t\t\t\tOS.MoveMemory (pInputs + OS.PTR_SIZEOF, inputs, MOUSEINPUT.sizeof);", "+\t\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "+\t\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "+\t\t\t\treturn result;", "-\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "-\t\t\tint /*long*/ pInputs = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, INPUT.sizeof);", "-\t\t\tOS.MoveMemory(pInputs, new int[] {OS.INPUT_MOUSE}, 4);", "-\t\t\t//TODO - DWORD type of INPUT structure aligned to 8 bytes on 64 bit", "-\t\t\tOS.MoveMemory (pInputs + OS.PTR_SIZEOF, inputs, MOUSEINPUT.sizeof);", "-\t\t\tboolean result = OS.SendInput (1, pInputs, INPUT.sizeof) != 0;", "-\t\t\tOS.HeapFree (hHeap, 0, pInputs);", "-\t\t\treturn result;", "-\t\t}", "-\t} ", "-\treturn false;", "+\t\t} ", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76332eb436b455a140f401f70e409718", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3527e1cc56b3e1bf2f5b2c011e13a400", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tdisposed = true;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tdisposed = true;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45c5fd49e0a5ec1164604da08eea108", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e9a37dc06283cdc37a29c430dd43bcc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void asyncExec (Runnable runnable)", "signatureAfterChange": " public void asyncExec (Runnable runnable)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tsynchronizer.asyncExec (runnable);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tsynchronizer.asyncExec (runnable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92d16774d0f456529f4b67ff26037d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\treturn false;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e01309d3ff0048754e9de6ade8dab7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (thread == Thread.currentThread ()) return;", "-\twakeThread ();", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (thread == Thread.currentThread ()) return;", "+\t\twakeThread ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2827e44571131d80b7d4c743d37d297e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public Thread getSyncThread ()", "signatureAfterChange": " public Thread getSyncThread ()", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\treturn synchronizer.syncThread;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\treturn synchronizer.syncThread;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd2912342e5c5a8c1e2f499a675b823", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public static synchronized Display findDisplay (Thread thread)", "signatureAfterChange": " public static Display findDisplay (Thread thread)", "diff": ["-public static synchronized Display findDisplay (Thread thread) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tDisplay display = Displays [i];", "-\t\tif (display != null && display.thread == thread) {", "-\t\t\treturn display;", "+public static Display findDisplay (Thread thread) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tDisplay display = Displays [i];", "+\t\t\tif (display != null && display.thread == thread) {", "+\t\t\t\treturn display;", "+\t\t\t}", "+\t\treturn null;", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d957fcbd1eb9d4ed54727338368224a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d317d92cc85078b5ed28f7c38b09bc85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "commitAfterChange": "98b59845e52006919cc7fbceba0837163033848c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static synchronized void checkDisplay (Thread thread, boolean multiple)", "signatureAfterChange": "  static void checkDisplay (Thread thread, boolean multiple)", "diff": ["-static synchronized void checkDisplay (Thread thread, boolean multiple) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (Displays [i] != null) {", "-\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "-\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+static void checkDisplay (Thread thread, boolean multiple) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (Displays [i] != null) {", "+\t\t\t\tif (!multiple) SWT.error (SWT.ERROR_NOT_IMPLEMENTED, null, \" [multiple displays]\");", "+\t\t\t\tif (Displays [i].thread == thread) SWT.error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a82b2b8103e638502e75bc32ce5692", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  static synchronized void deregister (Display display)", "signatureAfterChange": "  static void deregister (Display display)", "diff": ["-static synchronized void deregister (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (display == Displays [i]) Displays [i] = null;", "+static void deregister (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (display == Displays [i]) Displays [i] = null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9886e105b4afba04dc10edae2f76a225", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tderegister (this);", "-\txDisplay = 0;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tderegister (this);", "+\t\txDisplay = 0;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aa57b28d181f782f7caa2799df4a9ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (isDisposed()) return;", "-\tcheckDevice ();", "-\trelease ();", "-\tdestroy ();", "-\tderegister (this);", "-\txDisplay = 0;", "-\tdisposed = true;", "-\tif (tracking) {", "-\t\tsynchronized (trackingLock) {", "-\t\t\tobjects = null;", "-\t\t\terrors = null;", "-\t\t\ttrackingLock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed()) return;", "+\t\tcheckDevice ();", "+\t\trelease ();", "+\t\tdestroy ();", "+\t\tderegister (this);", "+\t\txDisplay = 0;", "+\t\tdisposed = true;", "+\t\tif (tracking) {", "+\t\t\tsynchronized (trackingLock) {", "+\t\t\t\tobjects = null;", "+\t\t\t\terrors = null;", "+\t\t\t\ttrackingLock = null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ae8c533186b9570cf5fd34f3d776e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public static synchronized Display getDefault ()", "signatureAfterChange": " public static Display getDefault ()", "diff": ["-public static synchronized Display getDefault () {", "-\tif (Default == null) Default = new Display ();", "-\treturn Default;", "+public static Display getDefault () {", "+\tsynchronized (Device.class) {", "+\t\tif (Default == null) Default = new Display ();", "+\t\treturn Default;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12eca15164bdda05f3f10213f3fd4b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "98b59845e52006919cc7fbceba0837163033848c", "commitAfterChange": "0bc6123ef86527be2e97dc69f141ed93a42a5c55", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  static synchronized void deregister (Display display)", "signatureAfterChange": "  static void deregister (Display display)", "diff": ["-static synchronized void deregister (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (display == Displays [i]) Displays [i] = null;", "+static void deregister (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (display == Displays [i]) Displays [i] = null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561d24a5050f07a7a465bdda34f04e58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "569a6be8b4a2d40deac242e9c6a1ed602188d119", "commitAfterChange": "803e3e31d1057d7b2c9a4ca2fd094f15c4fdab0a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " synchronized static void deregister (Display display)", "signatureAfterChange": " static void deregister (Display display)", "diff": ["-synchronized static void deregister (Display display) {", "-\tfor (int i=0; i<Displays.length; i++) {", "-\t\tif (display == Displays [i]) Displays [i] = null;", "+static void deregister (Display display) {", "+\tsynchronized (Device.class) {", "+\t\tfor (int i=0; i<Displays.length; i++) {", "+\t\t\tif (display == Displays [i]) Displays [i] = null;", "+\t\t}"]}], "num": 28699}