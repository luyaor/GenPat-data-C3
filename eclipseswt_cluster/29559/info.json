{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6e9392c2b9dc7fe0874d87ed7e16ee2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb414cd01db0c5476ed6d1134a34c51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "1571b21a3b1e60f5ff0c7a9bc19396983f515d5e", "commitAfterChange": "d58fca053bfd8af0ab62017d6a7317d79cadaca3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void init(Device device, ImageData image)", "signatureAfterChange": "  void init(Device device, ImageData image)", "diff": ["+\tif (!(((image.depth == 1 || image.depth == 2 || image.depth == 4 || image.depth == 8) && !palette.isDirect) ||", "+\t\t((image.depth == 8) || (image.depth == 16 || image.depth == 24 || image.depth == 32) && palette.isDirect)))", "+\t\t\tSWT.error (SWT.ERROR_UNSUPPORTED_DEPTH);", "-\tif (image.getTransparencyType() == SWT.TRANSPARENCY_MASK || image.transparentPixel != -1) {", "+\tboolean isIcon = image.getTransparencyType() == SWT.TRANSPARENCY_MASK;", "+\tif (isIcon || image.transparentPixel != -1) {", "-\t\tImageData maskImage = image.getTransparencyMask();", "-\t\tbyte[] maskData = maskImage.data;", "-\t\tfor (int i = 0; i < maskData.length; i++) {", "-\t\t\tbyte s = maskData[i];", "-\t\t\tmaskData[i] = (byte)(((s & 0x80) >> 7) | ((s & 0x40) >> 5) |", "-\t\t\t\t((s & 0x20) >> 3) | ((s & 0x10) >> 1) | ((s & 0x08) << 1) |", "-\t\t\t\t((s & 0x04) << 3) | ((s & 0x02) << 5) |\t((s & 0x01) << 7));", "-\t\t}", "-\t\tint /*long*/ mask = OS.gdk_bitmap_create_from_data(0, maskData, maskImage.bytesPerLine * 8, height);", "+\t\tint /*long*/ mask = createMask(image, isIcon);", "-\t\tif (image.getTransparencyType() == SWT.TRANSPARENCY_MASK) {", "+\t\tif (isIcon) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612b1c4968c715e22dbff4f8884cb0db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Image(Device display, ImageData source, ImageData mask)", "signatureAfterChange": " public Image(Device display, ImageData source, ImageData mask)", "diff": ["-\tif (display == null) display = Display.getDefault();", "-\tif (source.width != mask.width || source.height != mask.height) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (source.width != mask.width || source.height != mask.height) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "-\tImageData image;", "-\tif (source.depth != 1)", "-\t\timage = new ImageData(source.width, source.height, source.depth, source.palette, source.scanlinePad, source.data);", "-\telse {", "-\t\timage = source.getTransparencyMask(); //create an imagedata with scanlinepad == 1 and invalid data", "-\t\tint[] row = new int[source.width];", "-\t\tfor (int y = 0; y < source.height; y++) {", "-\t\t\tsource.getPixels(0, y, source.width, row, 0);", "-\t\t\timage.setPixels(0, y, source.width, row, 0);", "-\t\t}//change source data format from scanlinePad == 4 to scanlinePad == 1;", "-\t\t", "-\t}\t\t", "-\timage.type = SWT.ICON;", "+\tImageData image = new ImageData(source.width, source.height, source.depth, source.palette, source.scanlinePad, source.data);", "-\tinit(display, image);", "-\t", "-\tif (pixmap==0) SWT.error(SWT.ERROR_CANNOT_BE_ZERO);", "+\tinit(device, image);"]}], "num": 29559}