{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "544641f394f43bc923e885da9395af67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b677cb97b39c0fb00beb82eff289bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/GIFFileFormat.java", "commitBeforeChange": "53384da893223313aba5640789830bdbd8f35283", "commitAfterChange": "af018cfe8d256e37fa7517b7cc46083bbd40d6b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic static boolean isGIFFile(LEDataInputStream stream)", "signatureAfterChange": "\r \r \tboolean isFileFormat(LEDataInputStream stream)", "diff": ["-\t */\r", "-\tpublic static boolean isGIFFile(LEDataInputStream stream) {\r", "-\t\ttry {\r", "-\t\t\tbyte[] signature = new byte[3];\r", "-\t\t\tstream.read(signature);\r", "-\t\t\tstream.unread(signature);\r", "-\t\t\treturn new String(signature).equals(\"GIF\");\r", "-\t\t} catch (Exception e) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t}\r", "+\tboolean isFileFormat(LEDataInputStream stream) {\r", "+\t\ttry {\r", "+\t\t\tbyte[] signature = new byte[3];\r", "+\t\t\tstream.read(signature);\r", "+\t\t\tstream.unread(signature);\r", "+\t\t\treturn new String(signature).equals(\"GIF\");\r", "+\t\t} catch (Exception e) {\r", "+\t\t\treturn false;\r", "+\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94889dfa67ff4d76765b97f85e8648ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/WinBMPFileFormat.java", "commitBeforeChange": "52e50eddaaed72d8eecc2bdcd9fe014a40ca89f8", "commitAfterChange": "474bfc2c54e178444e0f027b12c214f6b7fad861", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " PaletteData loadPalette(byte[] infoHeader)", "signatureAfterChange": " PaletteData loadPalette(byte[] infoHeader)", "diff": ["-\tif (depth == 16) return new PaletteData(0x7C00, 0x3E0, 0x1F);", "+\tif (depth == 16) {", "+\t\tif (this.compression == 3) {", "+\t\t\ttry {", "+\t\t\t\treturn new PaletteData(inputStream.readInt(), inputStream.readInt(), inputStream.readInt());", "+\t\t\t} catch (IOException e) {", "+\t\t\t\tSWT.error(SWT.ERROR_IO, e);", "+\t\t\t}", "+\t\t}", "+\t\treturn new PaletteData(0x7C00, 0x3E0, 0x1F);", "+\t}", "+\tif (this.compression == 3) {", "+\t\ttry {", "+\t\t\treturn new PaletteData(inputStream.readInt(), inputStream.readInt(), inputStream.readInt());", "+\t\t} catch (IOException e) {", "+\t\t\tSWT.error(SWT.ERROR_IO, e);", "+\t\t}", "+\t}"]}], "num": 28432}