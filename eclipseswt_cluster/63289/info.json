{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe2160bf469d5f168c771fa3a19bf93d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5deae3028a4e61e2ba135ad28642f80f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 199, "signatureBeforeChange": " void handlePaint(Event event)", "signatureAfterChange": " void handlePaint(Event event)", "diff": ["-\t// Check if there is work to do", "-\tif (event.height == 0) return;", "-\tint startLine = Math.max(0, (event.y - topMargin + verticalScrollOffset) / lineHeight);", "-\tint paintYFromTopLine = (startLine - topIndex) * lineHeight;", "-\tint topLineOffset = topIndex * lineHeight - verticalScrollOffset;", "-\tint startY = paintYFromTopLine + topLineOffset + topMargin;\t// adjust y position for pixel based scrolling and top margin", "-\tint renderHeight = event.y + event.height - startY;", "-\tperformPaint(event.gc, startLine, startY, renderHeight);", "+\tif (event.width == 0 || event.height == 0) return;", "+\tRectangle clientArea = getClientArea();", "+\tif (clientArea.width == 0 || clientArea.height == 0) return;", "+\t", "+\tint startLine = getLineIndex(event.y);", "+\tint y = getLinePixel(startLine);", "+\tint endY = event.y + event.height;", "+\tGC gc = event.gc;", "+\tColor background = getBackground();", "+\tColor foreground = getForeground();", "+\tif (endY > 0) {", "+\t\tint lineCount = isSingleLine() ? 1 : content.getLineCount();", "+\t\tint x = clientArea.x + leftMargin - horizontalScrollOffset;", "+\t\tfor (int i = startLine; y < endY && i < lineCount; i++) {", "+\t\t\ty += renderer.drawLine(i, x, y, gc, background, foreground);", "+\t\t}", "+\t\tif (y < endY) {", "+\t\t\tgc.setBackground(background);", "+\t\t\tgc.fillRectangle(0, y, clientArea.width, endY - y);", "+\t\t}", "+\t}", "+\tclearMargin(gc, background, clientArea, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ead3aaac4779890a64a29c007cebeeb5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "85f1fc56d7da27f427cc958ea00c02335ade970a", "commitAfterChange": "166233a02615ac1e2681ccfd00cba112f3ec895b", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 200, "signatureBeforeChange": " void handlePaint(Event event)", "signatureAfterChange": " void handlePaint(Event event)", "diff": ["-\t// Check if there is work to do", "-\tif (event.height == 0) return;", "+\tif (event.width == 0 || event.height == 0) return;", "+\tRectangle clientArea = getClientArea();", "+\tif (clientArea.width == 0 || clientArea.height == 0) return;", "+\t", "-\tint startY = getLinePixel(startLine);", "-\tint renderHeight = event.y + event.height - startY;", "-\tperformPaint(event.gc, startLine, startY, renderHeight);", "+\tint y = getLinePixel(startLine);", "+\tint endY = event.y + event.height;", "+\tGC gc = event.gc;", "+\tColor background = getBackground();", "+\tColor foreground = getForeground();", "+\tif (endY > 0) {", "+\t\tint lineCount = isSingleLine() ? 1 : content.getLineCount();", "+\t\tint x = clientArea.x + leftMargin - horizontalScrollOffset;", "+\t\tfor (int i = startLine; y < endY && i < lineCount; i++) {", "+\t\t\tString line = content.getLine(i);", "+\t\t\ty += renderer.drawLine(line, i, x, y, gc, background, foreground, true);", "+\t\t}", "+\t\tif (y < endY) {", "+\t\t\tgc.setBackground(background);", "+\t\t\tgc.fillRectangle(0, y, clientArea.width, endY - y);", "+\t\t}", "+\t}", "+\tclearMargin(gc, background, clientArea, 0);"]}], "num": 63289}