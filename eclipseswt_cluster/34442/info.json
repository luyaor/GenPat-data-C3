{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f8ae0e0ae29cac10430035ec0379493", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9baff3ce580e3aad2a1b838fa34f4bb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  RECT drawUnderlineGDIP (int graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int color, int selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "signatureAfterChange": "  RECT drawUnderlineGDIP (long graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, long color, long selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip)", "diff": ["-RECT drawUnderlineGDIP (int /*long*/ graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, int /*long*/ color, int /*long*/ selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "+RECT drawUnderlineGDIP (long /*int*/ graphics, int x, int baseline, int lineUnderlinePos, int lineBottom, StyleItem[] line, int index, long /*int*/ color, long /*int*/ selectionColor, RECT clipRect, RECT pRect, int selectionStart, int selectionEnd, int alpha, Rectangle drawClip) {", "-\t\tint /*long*/ brush = color;", "+\t\tlong /*int*/ brush = color;", "-\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, squigglyThickness);", "+\t\t\t\tlong /*int*/ pen = Gdip.Pen_new(brush, squigglyThickness);", "-\t\t\t\t\tint /*long*/ selPen = Gdip.Pen_new(selectionColor, squigglyThickness);", "+\t\t\t\t\tlong /*int*/ selPen = Gdip.Pen_new(selectionColor, squigglyThickness);", "-\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, 1);", "+\t\t\t\tlong /*int*/ pen = Gdip.Pen_new(brush, 1);", "-\t\t\t\t\tint /*long*/ selPen = Gdip.Pen_new(brush, 1);", "+\t\t\t\t\tlong /*int*/ selPen = Gdip.Pen_new(brush, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd6906c0d3f9e5cbc70b8e4c42c26f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void createColumn (TableColumn column, int index)", "signatureAfterChange": "  void createColumn (TableColumn column, int index)", "diff": ["-\t\t\tint /*long*/ oldModel = modelHandle;", "-\t\t\tint /*long*/[] types = getColumnTypes (columnCount + 4); // grow by 4 rows at a time", "-\t\t\tint /*long*/ newModel = OS.gtk_list_store_newv (types.length, types);", "+\t\t\tlong /*int*/ oldModel = modelHandle;", "+\t\t\tlong /*int*/[] types = getColumnTypes (columnCount + 4); // grow by 4 rows at a time", "+\t\t\tlong /*int*/ newModel = OS.gtk_list_store_newv (types.length, types);", "-\t\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\t\tlong /*int*/ [] ptr = new long /*int*/ [1];", "-\t\t\t\tint /*long*/ newItem = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\t\tlong /*int*/ newItem = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "-\t\t\t\t\tint /*long*/ oldItem = item.handle;", "+\t\t\t\t\tlong /*int*/ oldItem = item.handle;", "-\tint /*long*/ columnHandle = OS.gtk_tree_view_column_new ();", "+\tlong /*int*/ columnHandle = OS.gtk_tree_view_column_new ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc5b9eaecea1c58f380f8b4e11c8d7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/internal/mozilla/nsIDocShell.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic int InternalLoad(int aURI, int aReferrer, int aOwner, int aInheritOwner, char[] aWindowTarget, int aPostDataStream, int aHeadersStream, int aLoadFlags, int aSHEntry, int firstParty, int[] aDocShell, int[] aRequest)", "signatureAfterChange": "  \tpublic int InternalLoad(long aURI, long aReferrer, long aOwner, int aInheritOwner, char[] aWindowTarget, long aPostDataStream, long aHeadersStream, int aLoadFlags, long aSHEntry, int firstParty, long[] aDocShell, long[] aRequest)", "diff": ["-\tpublic int InternalLoad(int /*long*/ aURI, int /*long*/ aReferrer, int /*long*/ aOwner, int aInheritOwner, char[] aWindowTarget, int /*long*/ aPostDataStream, int /*long*/ aHeadersStream, int aLoadFlags, int /*long*/ aSHEntry, int firstParty, int /*long*/[] aDocShell, int /*long*/[] aRequest) {", "+\tpublic int InternalLoad(long /*int*/ aURI, long /*int*/ aReferrer, long /*int*/ aOwner, int aInheritOwner, char[] aWindowTarget, long /*int*/ aPostDataStream, long /*int*/ aHeadersStream, int aLoadFlags, long /*int*/ aSHEntry, int firstParty, long /*int*/[] aDocShell, long /*int*/[] aRequest) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185d5eaa72adff7aa2f5703e37a92e9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  void initCairo()", "signatureAfterChange": "  void initCairo()", "diff": ["-\tint /*long*/ cairo = data.cairo;", "+\tlong /*int*/ cairo = data.cairo;", "-\t\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "-\t\tint /*long*/ xDrawable = 0;", "+\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\t\tlong /*int*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "+\t\tlong /*int*/ xDrawable = 0;", "-\t\tint /*long*/ drawable = data.drawable;", "+\t\tlong /*int*/ drawable = data.drawable;", "-\t\t\t\tint /*long*/ [] real_drawable = new int /*long*/ [1];", "+\t\t\t\tlong /*int*/ [] real_drawable = new long /*int*/ [1];", "-\t\tint /*long*/ surface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);", "+\t\tlong /*int*/ surface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41c52df8afb5f53724ef26c30151fc4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Download_1_8.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " int Init_32 (int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aTempFile, int aCancelable)", "signatureAfterChange": " int Init_32 (long aSource, long aTarget, long aDisplayName, long aMIMEInfo, long startTime1, long startTime2, long aTempFile, long aCancelable)", "diff": ["-int Init_32 (int /*long*/ aSource, int /*long*/ aTarget, int /*long*/ aDisplayName, int /*long*/ aMIMEInfo, int /*long*/ startTime1, int /*long*/ startTime2, int /*long*/ aTempFile, int /*long*/ aCancelable) {", "+int Init_32 (long /*int*/ aSource, long /*int*/ aTarget, long /*int*/ aDisplayName, long /*int*/ aMIMEInfo, long /*int*/ startTime1, long /*int*/ startTime2, long /*int*/ aTempFile, long /*int*/ aCancelable) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824c6e735e675bea3b9224398bad94b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int QueryInterface (int riid, int ppvObject)", "signatureAfterChange": "  int QueryInterface (long riid, long ppvObject)", "diff": ["-int QueryInterface (int /*long*/ riid, int /*long*/ ppvObject) {", "+int QueryInterface (long /*int*/ riid, long /*int*/ ppvObject) {", "-\t\tXPCOM.memmove (ppvObject, new int /*long*/[] {supports.getAddress ()}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (ppvObject, new long /*int*/[] {supports.getAddress ()}, C.PTR_SIZEOF);", "-\t\tXPCOM.memmove (ppvObject, new int /*long*/[] {classInfo.getAddress ()}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (ppvObject, new long /*int*/[] {classInfo.getAddress ()}, C.PTR_SIZEOF);", "-\t\tXPCOM.memmove (ppvObject, new int /*long*/[] {securityCheckedComponent.getAddress ()}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (ppvObject, new long /*int*/[] {securityCheckedComponent.getAddress ()}, C.PTR_SIZEOF);", "-\t\tXPCOM.memmove (ppvObject, new int /*long*/[] {external.getAddress ()}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (ppvObject, new long /*int*/[] {external.getAddress ()}, C.PTR_SIZEOF);", "-\t\t\tXPCOM.memmove (ppvObject, new int /*long*/[] {scriptObjectOwner.getAddress ()}, C.PTR_SIZEOF);", "+\t\t\tXPCOM.memmove (ppvObject, new long /*int*/[] {scriptObjectOwner.getAddress ()}, C.PTR_SIZEOF);", "-\tXPCOM.memmove (ppvObject, new int /*long*/[] {0}, C.PTR_SIZEOF);", "+\tXPCOM.memmove (ppvObject, new long /*int*/[] {0}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f649fd804328598d482eb592c358073", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/accessibility/gtk/ATK.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public static final int call (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5)", "signatureAfterChange": " public static final long call (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5)", "diff": ["-public static final native int /*long*/ _call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5);", "-public static final int /*long*/ call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5) {", "+public static final native long /*int*/ _call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5);", "+public static final long /*int*/ call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49fadbf8b7ee71547505192be1f10f2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  int findPopupHandle (int oldList)", "signatureAfterChange": "  long findPopupHandle (long oldList)", "diff": ["-int /*long*/ findPopupHandle (int /*long*/ oldList) {", "-\tint /*long*/ result = 0;", "-\tint /*long*/ currentList = OS.gtk_window_list_toplevels();", "-\tint /*long*/ oldFromList = oldList;", "-\tint /*long*/ newFromList = OS.g_list_last(currentList);", "+long /*int*/ findPopupHandle (long /*int*/ oldList) {", "+\tlong /*int*/ result = 0;", "+\tlong /*int*/ currentList = OS.gtk_window_list_toplevels();", "+\tlong /*int*/ oldFromList = oldList;", "+\tlong /*int*/ newFromList = OS.g_list_last(currentList);", "-\t\tint /*long*/ newToplevel = OS.g_list_data(newFromList);", "+\t\tlong /*int*/ newToplevel = OS.g_list_data(newFromList);", "-\t\t\tint /*long*/ oldToplevel = OS.g_list_data(oldFromList);", "+\t\t\tlong /*int*/ oldToplevel = OS.g_list_data(oldFromList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e026ab816f17eb36e93efa96f7640878", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, long wParam, long lParam)", "diff": ["-LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int /*long*/ wParam, int /*long*/ lParam) {", "+LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, long /*int*/ wParam, long /*int*/ lParam) {", "-\tint /*long*/ hDC = nmcd.hdc;", "+\tlong /*int*/ hDC = nmcd.hdc;", "-\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\tlong /*int*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\tint /*long*/ hFont = item.fontHandle (index);", "+\t\t\tlong /*int*/ hFont = item.fontHandle (index);", "-\t\t\t\t\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\t\t\t\t\tlong /*int*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\t\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\t\tlong /*int*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d540b11fa9dc9c04204919d8f1a117", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int transparentProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  long transparentProc (long hwnd, long msg, long wParam, long lParam)", "diff": ["-int /*long*/ transparentProc (int /*long*/ hwnd, int /*long*/ msg, int /*long*/ wParam, int /*long*/ lParam) {", "+long /*int*/ transparentProc (long /*int*/ hwnd, long /*int*/ msg, long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\t\tint /*long*/ hDC = OS.BeginPaint (hwnd, ps);", "-\t\t\t\tint /*long*/ hBitmap = 0, hBrush = 0, oldBrush = 0;\t\t\t", "-\t\t\t\tint /*long*/ transparentBrush = OS.CreateSolidBrush(0xFFFFFF);", "+\t\t\t\tlong /*int*/ hDC = OS.BeginPaint (hwnd, ps);", "+\t\t\t\tlong /*int*/ hBitmap = 0, hBrush = 0, oldBrush = 0;\t\t\t", "+\t\t\t\tlong /*int*/ transparentBrush = OS.CreateSolidBrush(0xFFFFFF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff18aafb8b467c9a78eb489e0f7e1d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/cocoa/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  static int browserProc(int id, int sel, int arg0, int arg1, int arg2, int arg3, int arg4)", "signatureAfterChange": "  static long browserProc(long id, long sel, long arg0, long arg1, long arg2, long arg3, long arg4)", "diff": ["-static int /*long*/ browserProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4) {", "+static long /*int*/ browserProc(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9061f0aa0a1a8f67143e6b83086c387", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tstatic int atkText_get_character_extents (int atkObject, int offset, int x, int y, int width, int height, int coords)", "signatureAfterChange": " \t \tstatic long atkText_get_character_extents (long atkObject, long offset, long x, long y, long width, long height, long coords)", "diff": ["-\tstatic int /*long*/ atkText_get_character_extents (int /*long*/ atkObject, int /*long*/ offset, int /*long*/ x, int /*long*/ y, int /*long*/ width, int /*long*/ height, int /*long*/ coords) {", "+\tstatic long /*int*/ atkText_get_character_extents (long /*int*/ atkObject, long /*int*/ offset, long /*int*/ x, long /*int*/ y, long /*int*/ width, long /*int*/ height, long /*int*/ coords) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f6ea0bf70133817d078b6fa97565bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Prompter.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int ConfirmEx (int aDialogTitle, int aText, int aButtonFlags, int aButton0Title, int aButton1Title, int aButton2Title, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int ConfirmEx (long aDialogTitle, long aText, int aButtonFlags, long aButton0Title, long aButton1Title, long aButton2Title, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int ConfirmEx (int /*long*/ aDialogTitle, int /*long*/ aText, int aButtonFlags, int /*long*/ aButton0Title, int /*long*/ aButton1Title, int /*long*/ aButton2Title, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int ConfirmEx (long /*int*/ aDialogTitle, long /*int*/ aText, int aButtonFlags, long /*int*/ aButton0Title, long /*int*/ aButton1Title, long /*int*/ aButton2Title, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391c0c537313fcfcaff1510c79288e28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  protected int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "  protected int QueryInterface(long riid, long ppvObject)", "diff": ["-protected int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "+protected int QueryInterface(long /*int*/ riid, long /*int*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDocHostUIHandler.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iDocHostUIHandler.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDocHostShowUI.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iDocHostShowUI.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iServiceProvider.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iServiceProvider.getAddress()}, OS.PTR_SIZEOF);", "-        COM.MoveMemory(ppvObject, new int /*long*/[] {iInternetSecurityManager.getAddress()}, OS.PTR_SIZEOF);", "+        COM.MoveMemory(ppvObject, new long /*int*/[] {iInternetSecurityManager.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleCommandTarget.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iOleCommandTarget.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "+\tCOM.MoveMemory(ppvObject, new long /*int*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc548b49fe90002dd1f394331b9e06ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  static int rendererRenderProc (int cell, int window, int handle, int background_area, int cell_area, int expose_area, int flags)", "signatureAfterChange": "  static long rendererRenderProc (long cell, long window, long handle, long background_area, long cell_area, long expose_area, long flags)", "diff": ["-static int /*long*/ rendererRenderProc (int /*long*/ cell, int /*long*/ window, int /*long*/ handle, int /*long*/ background_area, int /*long*/ cell_area, int /*long*/ expose_area, int /*long*/ flags) {", "+static long /*int*/ rendererRenderProc (long /*int*/ cell, long /*int*/ window, long /*int*/ handle, long /*int*/ background_area, long /*int*/ cell_area, long /*int*/ expose_area, long /*int*/ flags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "618b532f54bfe4870a8cde15e5f43859", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/ImageList.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int copyBitmap (int hImage, int width, int height)", "signatureAfterChange": "  long copyBitmap (long hImage, int width, int height)", "diff": ["-int /*long*/ copyBitmap (int /*long*/ hImage, int width, int height) {", "+long /*int*/ copyBitmap (long /*int*/ hImage, int width, int height) {", "-\tint /*long*/ hDC = OS.GetDC (0);", "-\tint /*long*/ hdc1 = OS.CreateCompatibleDC (hDC);", "+\tlong /*int*/ hDC = OS.GetDC (0);", "+\tlong /*int*/ hdc1 = OS.CreateCompatibleDC (hDC);", "-\tint /*long*/ hdc2 = OS.CreateCompatibleDC (hDC);", "+\tlong /*int*/ hdc2 = OS.CreateCompatibleDC (hDC);", "-\tint /*long*/ hBitmap;", "+\tlong /*int*/ hBitmap;", "-\t\tint /*long*/[] pBits = new int /*long*/[1];", "+\t\tlong /*int*/[] pBits = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ab2a9158c4b34aedec4c90a26c1379", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ cairo = data.cairo;", "+\tlong /*int*/ cairo = data.cairo;", "-\t\tint /*long*/[] attrs = new int /*long*/[1];", "+\t\tlong /*int*/[] attrs = new long /*int*/[1];", "-\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\t\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "+\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "+\t\tlong /*int*/ iter = OS.pango_layout_get_iter(layout);", "-\t\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "-\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "-\t\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "+\t\t\t\tlong /*int*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6333ca9a864ccfcbd982d4f5dfec4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  int rendererGetSizeProc (int cell, int handle, int cell_area, int x_offset, int y_offset, int width, int height)", "signatureAfterChange": "  long rendererGetSizeProc (long cell, long handle, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-int /*long*/ rendererGetSizeProc (int /*long*/ cell, int /*long*/ handle, int /*long*/ cell_area, int /*long*/ x_offset, int /*long*/ y_offset, int /*long*/ width, int /*long*/ height) {", "+long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ handle, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee7ceed0144cc5755389f9d9c99ead5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  long cellDataProc (long tree_column, long cell, long tree_model, long iter, long data)", "diff": ["-int /*long*/ cellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "+long /*int*/ cellDataProc (long /*int*/ tree_column, long /*int*/ cell, long /*int*/ tree_model, long /*int*/ iter, long /*int*/ data) {", "-\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\tlong /*int*/ [] ptr = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e73afcdbc40c1828c941b40bc9b0c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\tint /*long*/ width = imageRep.pixelsWide();", "-\t\tint /*long*/ height = imageRep.pixelsHigh();", "-\t\tint /*long*/ bpr = imageRep.bytesPerRow();", "-\t\tint /*long*/ bpp = imageRep.bitsPerPixel();", "-\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "-\t\tint /*long*/ bitmapFormat = imageRep.bitmapFormat();", "-\t\tint /*long*/ dataSize = height * bpr;", "+\t\tlong /*int*/ width = imageRep.pixelsWide();", "+\t\tlong /*int*/ height = imageRep.pixelsHigh();", "+\t\tlong /*int*/ bpr = imageRep.bytesPerRow();", "+\t\tlong /*int*/ bpp = imageRep.bitsPerPixel();", "+\t\tlong /*int*/ bitmapData = imageRep.bitmapData();", "+\t\tlong /*int*/ bitmapFormat = imageRep.bitmapFormat();", "+\t\tlong /*int*/ dataSize = height * bpr;", "-\t\t\t\tint /*long*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\t\tlong /*int*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f8587f19382bca51e077f957533123", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "  int applicationNextEventMatchingMask (int id, int sel, int mask, int expiration, int mode, int dequeue)", "signatureAfterChange": "  long applicationNextEventMatchingMask (long id, long sel, long mask, long expiration, long mode, long dequeue)", "diff": ["-int /*long*/ applicationNextEventMatchingMask (int /*long*/ id, int /*long*/ sel, int /*long*/ mask, int /*long*/ expiration, int /*long*/ mode, int /*long*/ dequeue) {", "+long /*int*/ applicationNextEventMatchingMask (long /*int*/ id, long /*int*/ sel, long /*int*/ mask, long /*int*/ expiration, long /*int*/ mode, long /*int*/ dequeue) {", "-\tint /*long*/ result = OS.objc_msgSendSuper(super_struct, sel, mask, expiration, mode, dequeue != 0);", "+\tlong /*int*/ result = OS.objc_msgSendSuper(super_struct, sel, mask, expiration, mode, dequeue != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb7b79328151ed362edf069b46abf6f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": "  static int dialogProc(int id, int sel, int arg0, int arg1, int arg2)", "signatureAfterChange": "  static long dialogProc(long id, long sel, long arg0, long arg1, long arg2)", "diff": ["-static int /*long*/ dialogProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2) {", "-\tint /*long*/ [] jniRef = new int /*long*/ [1];", "+static long /*int*/ dialogProc(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2) {", "+\tlong /*int*/ [] jniRef = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fe85d47a21d4c27ccb9bed4e7a6626", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/ImageTransfer.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tint /*long*/ hMem = stgmedium.unionField;", "+\tlong /*int*/ hMem = stgmedium.unionField;", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\t\tint /*long*/[] pBits = new int /*long*/[1]; ", "-\t\t\tint /*long*/ memDib = OS.CreateDIBSection(0, ptr, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\t\t\tlong /*int*/[] pBits = new long /*int*/[1]; ", "+\t\t\tlong /*int*/ memDib = OS.CreateDIBSection(0, ptr, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\t\t\tint /*long*/ bits = ptr + bmiHeader.biSize;", "+\t\t\tlong /*int*/ bits = ptr + bmiHeader.biSize;", "-\t\t\t\tint /*long*/ pDestBits = pBits[0];", "-\t\t\t\tint /*long*/ pSourceBits = bits + scanline * (biHeight - 1);", "+\t\t\t\tlong /*int*/ pDestBits = pBits[0];", "+\t\t\t\tlong /*int*/ pSourceBits = bits + scanline * (biHeight - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a56768de695939ad6ca6cd85754748", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " public FontData open ()", "diff": ["-\tint /*long*/ handle;", "+\tlong /*int*/ handle;", "-\t\tint /*long*/ shellHandle = parent.topHandle ();", "+\t\tlong /*int*/ shellHandle = parent.topHandle ();", "-\t\tint /*long*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "+\t\tlong /*int*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "-\t\tint /*long*/ group = OS.gtk_window_get_group(0);", "+\t\tlong /*int*/ group = OS.gtk_window_get_group(0);", "-\t\tint /*long*/ fontName = OS.pango_font_description_to_string (font.handle);", "+\t\tlong /*int*/ fontName = OS.pango_font_description_to_string (font.handle);", "-\tint /*long*/ hookId = 0;", "+\tlong /*int*/ hookId = 0;", "-\t\tint /*long*/ fontName = OS.gtk_font_selection_dialog_get_font_name (handle);", "+\t\tlong /*int*/ fontName = OS.gtk_font_selection_dialog_get_font_name (handle);", "-\t\tint /*long*/ fontDesc = OS.pango_font_description_from_string (buffer);", "+\t\tlong /*int*/ fontDesc = OS.pango_font_description_from_string (buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aa3c94e9d5611d738aae71207f10038", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public static final void call_get_size (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6)", "signatureAfterChange": " public static final void call_get_size (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5, long arg6)", "diff": ["-public static final native void _call_get_size (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6);", "-public static final void call_get_size (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6) {", "+public static final native void _call_get_size (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6);", "+public static final void call_get_size (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4635abf4564f0fbdff5893ce1ee5bdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int AsyncPromptAuth(int aParent, int aChannel, int aCallback, int aContext, int level, int authInfo, int checkboxLabel, int checkValue, int _retval)", "signatureAfterChange": "  int AsyncPromptAuth(long aParent, long aChannel, long aCallback, long aContext, int level, long authInfo, long checkboxLabel, long checkValue, long _retval)", "diff": ["-int AsyncPromptAuth(int /*long*/ aParent, int /*long*/ aChannel, int /*long*/ aCallback, int /*long*/ aContext, int level, int /*long*/ authInfo, int /*long*/ checkboxLabel, int /*long*/ checkValue, int /*long*/ _retval) {", "+int AsyncPromptAuth(long /*int*/ aParent, long /*int*/ aChannel, long /*int*/ aCallback, long /*int*/ aContext, int level, long /*int*/ authInfo, long /*int*/ checkboxLabel, long /*int*/ checkValue, long /*int*/ _retval) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ac8f1cc3411449db27cd9965c09596", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \t \tstatic int atkText_get_bounded_ranges (int atkObject, int rect, int coord_type, int x_clip_type, int y_clip_type)", "signatureAfterChange": " \t \tstatic long atkText_get_bounded_ranges (long atkObject, long rect, long coord_type, long x_clip_type, long y_clip_type)", "diff": ["-\tstatic int /*long*/ atkText_get_bounded_ranges (int /*long*/ atkObject, int /*long*/ rect, int /*long*/ coord_type, int /*long*/ x_clip_type, int /*long*/ y_clip_type) {", "+\tstatic long /*int*/ atkText_get_bounded_ranges (long /*int*/ atkObject, long /*int*/ rect, long /*int*/ coord_type, long /*int*/ x_clip_type, long /*int*/ y_clip_type) {", "-\t\t\t\tint /*long*/ result = OS.malloc(size * AtkTextRange.sizeof);", "+\t\t\t\tlong /*int*/ result = OS.malloc(size * AtkTextRange.sizeof);", "-\t\tint /*long*/ parentResult = 0;", "+\t\tlong /*int*/ parentResult = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc3faa630bc388864a5a54eb233f8b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/accessibility/gtk/ATK.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public static final native int _call (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5);", "signatureAfterChange": " public static final native long _call (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5);", "diff": ["-public static final native int /*long*/ _call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5);", "+public static final native long /*int*/ _call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9a7f612cc85382f3640cfc4f5b458f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static int Drag_Data_Received ( int widget, int context, int x, int y, int data, int info, int time)", "signatureAfterChange": "  static long Drag_Data_Received ( long widget, long context, long x, long y, long data, long info, long time)", "diff": ["-static int /*long*/ Drag_Data_Received ( int /*long*/ widget, int /*long*/ context, int /*long*/ x, int /*long*/ y, int /*long*/ data, int /*long*/ info, int /*long*/ time){", "+static long /*int*/ Drag_Data_Received ( long /*int*/ widget, long /*int*/ context, long /*int*/ x, long /*int*/ y, long /*int*/ data, long /*int*/ info, long /*int*/ time){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ed7c58f61e5acf096b428880ae40a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  static int dialogProc(int id, int sel, int arg0, int arg1, int arg2)", "signatureAfterChange": "  static long dialogProc(long id, long sel, long arg0, long arg1, long arg2)", "diff": ["-static int /*long*/ dialogProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2) {", "-\tint /*long*/ [] jniRef = new int /*long*/ [1];", "+static long /*int*/ dialogProc(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2) {", "+\tlong /*int*/ [] jniRef = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b19b723ee6e132faf34f71695e22dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " protected int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " protected int QueryInterface(long riid, long ppvObject)", "diff": ["-protected int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "+protected int QueryInterface(long /*int*/ riid, long /*int*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iUnknown.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iUnknown.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iAdviseSink.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iAdviseSink.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleClientSite.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iOleClientSite.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleInPlaceSite.getAddress()}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iOleInPlaceSite.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleDocumentSite.getAddress()}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] {iOleDocumentSite.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "+\tCOM.MoveMemory(ppvObject, new long /*int*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87c5c7c16efbc697eb2dd06edeb23f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  static int rendererGetSizeProc (int cell, int handle, int cell_area, int x_offset, int y_offset, int width, int height)", "signatureAfterChange": "  static long rendererGetSizeProc (long cell, long handle, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-static int /*long*/ rendererGetSizeProc (int /*long*/ cell, int /*long*/ handle, int /*long*/ cell_area, int /*long*/ x_offset, int /*long*/ y_offset, int /*long*/ width, int /*long*/ height) {", "+static long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ handle, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac185dd3bacf487699b2a9fb195c3fb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/NSBitmapImageRep.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(int planes, int width, int height, int bps, int spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int rBytes, int pBits)", "signatureAfterChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(long planes, long width, long height, long bps, long spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long rBytes, long pBits)", "diff": ["-public NSBitmapImageRep initWithBitmapDataPlanes(int /*long*/ planes, int /*long*/ width, int /*long*/ height, int /*long*/ bps, int /*long*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int /*long*/ rBytes, int /*long*/ pBits) {", "-\tint /*long*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, rBytes, pBits);", "+public NSBitmapImageRep initWithBitmapDataPlanes(long /*int*/ planes, long /*int*/ width, long /*int*/ height, long /*int*/ bps, long /*int*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long /*int*/ rBytes, long /*int*/ pBits) {", "+\tlong /*int*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, rBytes, pBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962bb5a19047f32febff71568362f85b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tint /*long*/ hwnd = parent.handle;", "+\tlong /*int*/ hwnd = parent.handle;", "-\t\t\tint /*long*/ hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "+\t\t\tlong /*int*/ hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "-\t\tint /*long*/ hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "+\t\tlong /*int*/ hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "-\t\tint /*long*/ hDC = OS.GetDC (hwnd);", "-\t\tint /*long*/ oldFont = 0, newFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\tlong /*int*/ hDC = OS.GetDC (hwnd);", "+\t\tlong /*int*/ oldFont = 0, newFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "-\t\t\t\tint /*long*/ hFont = item.fontHandle (index);", "+\t\t\t\tlong /*int*/ hFont = item.fontHandle (index);", "-\t\t\t\t\tint /*long*/ hImageList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "+\t\t\t\t\tlong /*int*/ hImageList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "-\t\t\t\tint /*long*/ hStateList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);", "+\t\t\t\tlong /*int*/ hStateList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd49d898c7bcb013259afe6cb39a24e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 309, "signatureBeforeChange": "  LRESULT wmColorChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmColorChild (long wParam, long lParam)", "diff": ["-LRESULT wmColorChild (int /*long*/ wParam, int /*long*/ lParam) {", "+LRESULT wmColorChild (long /*int*/ wParam, long /*int*/ lParam) {", "-\t\tint /*long*/ hwnd = control.handle;", "-\t\tint /*long*/ hBitmap = control.backgroundImage.handle;", "+\t\tlong /*int*/ hwnd = control.handle;", "+\t\tlong /*int*/ hBitmap = control.backgroundImage.handle;", "-\t\tint /*long*/ hBrush = findBrush (hBitmap, OS.BS_PATTERN);", "+\t\tlong /*int*/ hBrush = findBrush (hBitmap, OS.BS_PATTERN);", "-\t\t\tint /*long*/ hOldBrush = OS.SelectObject (wParam, hBrush);", "+\t\t\tlong /*int*/ hOldBrush = OS.SelectObject (wParam, hBrush);", "-\tint /*long*/ hBrush = findBrush (backPixel, OS.BS_SOLID);", "+\tlong /*int*/ hBrush = findBrush (backPixel, OS.BS_SOLID);", "-\t\tint /*long*/ hOldBrush = OS.SelectObject (wParam, hBrush);", "+\t\tlong /*int*/ hOldBrush = OS.SelectObject (wParam, hBrush);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "597314a3601b0575bbf88a24e238d694", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 559, "methodNumberAfterChange": 558, "signatureBeforeChange": " public static final native int objc_msgSend(int id, int sel, int arg0, int arg1, int arg2, int arg3, int arg4);", "signatureAfterChange": " public static final native long objc_msgSend(long id, long sel, long arg0, long arg1, long arg2, long arg3);", "diff": ["+public static final native long /*int*/ objc_msgSend(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3);", "-public static final native int /*long*/ objc_msgSend(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38016cac13d53ee8fa49beb9d155aa58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0, int arg1, int arg2)", "signatureAfterChange": "  static long windowProc(long id, long sel, long arg0, long arg1, long arg2)", "diff": ["-static int /*long*/ windowProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2) {", "+static long /*int*/ windowProc(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2) {", "-\t\tint /*long*/ result = OS.malloc (NSRange.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRange.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98cd1dcd6de338458feb2da7fbec471", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\tlong /*int*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tint /*long*/ empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);", "-\t\tint /*long*/ oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);", "+\t\tlong /*int*/ empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);", "+\t\tlong /*int*/ oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);", "-\tint /*long*/ hFont = OS.GetStockObject (OS.SYSTEM_FONT);", "+\tlong /*int*/ hFont = OS.GetStockObject (OS.SYSTEM_FONT);", "-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);", "-\t\t\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\tlong /*int*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\tint /*long*/ hwndTooltop = OS.SendMessage (handle, OS.LVM_GETTOOLTIPS, 0, 0);", "+\t\t\tlong /*int*/ hwndTooltop = OS.SendMessage (handle, OS.LVM_GETTOOLTIPS, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ad948709941ae63914b20163c012b76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "signatureAfterChange": "  long callWindowProc (long hwnd, int msg, long wParam, long lParam, boolean forceSelect)", "diff": ["-int /*long*/ callWindowProc (int /*long*/ hwnd, int msg, int /*long*/ wParam, int /*long*/ lParam, boolean forceSelect) {", "+long /*int*/ callWindowProc (long /*int*/ hwnd, int msg, long /*int*/ wParam, long /*int*/ lParam, boolean forceSelect) {", "-\t\t\tint /*long*/ hwndParent = OS.GetParent (handle), hwndOwner = 0;", "+\t\t\tlong /*int*/ hwndParent = OS.GetParent (handle), hwndOwner = 0;", "-\tint /*long*/ code = 0;", "+\tlong /*int*/ code = 0;", "-\t\tint /*long*/ hDC = OS.BeginPaint (hwnd, ps);", "+\t\tlong /*int*/ hDC = OS.BeginPaint (hwnd, ps);", "-\t\t\t\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+\t\t\t\tlong /*int*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55100cc2d961c3f6546134dc6651fa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": "  static int windowProc(int id, int sel)", "signatureAfterChange": "  static long windowProc(long id, long sel)", "diff": ["-static int /*long*/ windowProc(int /*long*/ id, int /*long*/ sel) {", "+static long /*int*/ windowProc(long /*int*/ id, long /*int*/ sel) {", "-\t\tint /*long*/ superCls = OS.objc_msgSend(OS.class_getSuperclass(id), sel);", "-\t\tint /*long*/ cls = OS.objc_lookUpClass(\"SWTAccessible\" + OS.class_getName(superCls));", "+\t\tlong /*int*/ superCls = OS.objc_msgSend(OS.class_getSuperclass(id), sel);", "+\t\tlong /*int*/ cls = OS.objc_lookUpClass(\"SWTAccessible\" + OS.class_getName(superCls));", "-\t\tint /*long*/ result = OS.malloc (NSRange.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRange.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSRange.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRange.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSSize.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSSize.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e9a3342095cd0e268be342c304ab9ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  TF_DISPLAYATTRIBUTE getDisplayAttribute (short langid, int attInfo)", "signatureAfterChange": "  TF_DISPLAYATTRIBUTE getDisplayAttribute (short langid, int attInfo)", "diff": ["-\tint /*long*/ [] pProfiles = new int /*long*/ [1];", "+\tlong /*int*/ [] pProfiles = new long /*int*/ [1];", "-\t\t\tint /*long*/ [] pProvider = new int /*long*/ [1];", "+\t\t\tlong /*int*/ [] pProvider = new long /*int*/ [1];", "-\t\t\t\tint /*long*/ [] pEnum = new int /*long*/ [1];", "+\t\t\t\tlong /*int*/ [] pEnum = new long /*int*/ [1];", "-\t\t\t\t\tint /*long*/ [] pDispInfo = new int /*long*/ [1];", "+\t\t\t\t\tlong /*int*/ [] pDispInfo = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35252d5c45a28df5ff04ee76ed2017c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public OleControlSite(Composite parent, int style, String progId)", "signatureAfterChange": " public OleControlSite(Composite parent, int style, String progId)", "diff": ["-\t\tint /*long*/ licinfo = getLicenseInfo(appClsid);", "+\t\tlong /*int*/ licinfo = getLicenseInfo(appClsid);", "-\t\t\tint /*long*/[] address = new int /*long*/[1];", "+\t\t\tlong /*int*/[] address = new long /*int*/[1];", "-\t\t\tint /*long*/ clientSite = isICAClient() ? 0 : iOleClientSite.getAddress();", "+\t\t\tlong /*int*/ clientSite = isICAClient() ? 0 : iOleClientSite.getAddress();", "-\t\t\tint /*long*/[] ppvObject = new int /*long*/[1];", "+\t\t\tlong /*int*/[] ppvObject = new long /*int*/[1];", "-\t\t\t\tppvObject = new int /*long*/[1];", "+\t\t\t\tppvObject = new long /*int*/[1];", "-\t\t\tppvObject = new int /*long*/[1];", "+\t\t\tppvObject = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c77a2dd900ee103adde42434c3c071d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public static final native void _call_get_size (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);", "signatureAfterChange": " public static final native void _call_get_size (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5, long arg6);", "diff": ["-public static final native void _call_get_size (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6);", "+public static final native void _call_get_size (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3e0465273dfe715f8f0e15809e6a170", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["-\t\tint /*long*/ ptr = getApplicationName().UTF8String();", "+\t\tlong /*int*/ ptr = getApplicationName().UTF8String();", "-\tint /*long*/ cls;", "+\tlong /*int*/ cls;", "-\t\tint /*long*/ proc2 = applicationCallback2.getAddress();", "+\t\tlong /*int*/ proc2 = applicationCallback2.getAddress();", "-\t\tint /*long*/ proc3 = applicationCallback3.getAddress();", "+\t\tlong /*int*/ proc3 = applicationCallback3.getAddress();", "-\t\tint /*long*/ proc4 = applicationCallback4.getAddress();", "+\t\tlong /*int*/ proc4 = applicationCallback4.getAddress();", "-\t\tint /*long*/ proc6 = applicationCallback6.getAddress();", "+\t\tlong /*int*/ proc6 = applicationCallback6.getAddress();", "-\t\tint /*long*/ appProc3 = applicationCallback3.getAddress();", "+\t\tlong /*int*/ appProc3 = applicationCallback3.getAddress();", "-\t\tint /*long*/ appProc4 = applicationCallback4.getAddress();", "+\t\tlong /*int*/ appProc4 = applicationCallback4.getAddress();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ec729c8d8833a9f3d6c62cf7176691", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "  int rendererRenderProc (int cell, int window, int handle, int background_area, int cell_area, int expose_area, int flags)", "signatureAfterChange": "  long rendererRenderProc (long cell, long window, long handle, long background_area, long cell_area, long expose_area, long flags)", "diff": ["-int /*long*/ rendererRenderProc (int /*long*/ cell, int /*long*/ window, int /*long*/ handle, int /*long*/ background_area, int /*long*/ cell_area, int /*long*/ expose_area, int /*long*/ flags) {", "+long /*int*/ rendererRenderProc (long /*int*/ cell, long /*int*/ window, long /*int*/ handle, long /*int*/ background_area, long /*int*/ cell_area, long /*int*/ expose_area, long /*int*/ flags) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac130d4a1126ccac8b02651e62a8e1e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OpenGL/gtk/org/eclipse/swt/opengl/GLCanvas.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public GLCanvas (Composite parent, int style, GLData data)", "signatureAfterChange": " public GLCanvas (Composite parent, int style, GLData data)", "diff": ["-\tint /*long*/ window;", "+\tlong /*int*/ window;", "-\tint /*long*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "-\tint /*long*/ infoPtr = GLX.glXChooseVisual (xDisplay, OS.XDefaultScreen (xDisplay), glxAttrib);", "+\tlong /*int*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+\tlong /*int*/ infoPtr = GLX.glXChooseVisual (xDisplay, OS.XDefaultScreen (xDisplay), glxAttrib);", "-\tint /*long*/ screen = OS.gdk_screen_get_default ();", "-\tint /*long*/ gdkvisual = OS.gdk_x11_screen_lookup_visual (screen, vinfo.visualid);", "-\tint /*long*/ share = data.shareContext != null ? data.shareContext.context : 0;", "+\tlong /*int*/ screen = OS.gdk_screen_get_default ();", "+\tlong /*int*/ gdkvisual = OS.gdk_x11_screen_lookup_visual (screen, vinfo.visualid);", "+\tlong /*int*/ share = data.shareContext != null ? data.shareContext.context : 0;", "-\t\t\t\tint /*long*/ window;", "+\t\t\t\tlong /*int*/ window;", "-\t\t\t\tint /*long*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "+\t\t\t\tlong /*int*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "541b9b3bd31bdff7f1dff6e51f81dff3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  static int JSObjectGetPropertyProc (int ctx, int object, int propertyName, int exception)", "signatureAfterChange": "  static long JSObjectGetPropertyProc (long ctx, long object, long propertyName, long exception)", "diff": ["-static int /*long*/ JSObjectGetPropertyProc (int /*long*/ ctx, int /*long*/ object, int /*long*/ propertyName, int /*long*/ exception) {", "+static long /*int*/ JSObjectGetPropertyProc (long /*int*/ ctx, long /*int*/ object, long /*int*/ propertyName, long /*int*/ exception) {", "-\tint /*long*/ name = WebKit_win32.JSStringCreateWithUTF8CString (bytes);", "-\tint /*long*/ addr = WebKit_win32.JSObjectCallAsFunctionProc_CALLBACK (WebKit.JSObjectCallAsFunctionProc.getAddress ());", "-\tint /*long*/ function = WebKit_win32.JSObjectMakeFunctionWithCallback (ctx, name, addr);", "+\tlong /*int*/ name = WebKit_win32.JSStringCreateWithUTF8CString (bytes);", "+\tlong /*int*/ addr = WebKit_win32.JSObjectCallAsFunctionProc_CALLBACK (WebKit.JSObjectCallAsFunctionProc.getAddress ());", "+\tlong /*int*/ function = WebKit_win32.JSObjectMakeFunctionWithCallback (ctx, name, addr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a092daeeb734460c723f844ec4b12aeb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int sessionProc (int session, int msg, int auth, int retrying, int user_data)", "signatureAfterChange": "  long sessionProc (long session, long msg, long auth, long retrying, long user_data)", "diff": ["-int /*long*/ sessionProc (int /*long*/ session, int /*long*/ msg, int /*long*/ auth, int /*long*/ retrying, int /*long*/ user_data) {", "+long /*int*/ sessionProc (long /*int*/ session, long /*int*/ msg, long /*int*/ auth, long /*int*/ retrying, long /*int*/ user_data) {", "-\tint /*long*/ uri = WebKitGTK.soup_message_get_uri (msg);", "-\tint /*long*/ uriString = WebKitGTK.soup_uri_to_string (uri, 0);", "+\tlong /*int*/ uri = WebKitGTK.soup_message_get_uri (msg);", "+\tlong /*int*/ uriString = WebKitGTK.soup_uri_to_string (uri, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aca9df5e59467776287813b9b0c1055", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void drawBackground (GC gc, int x, int y, int width, int height, int offsetX, int offsetY)", "signatureAfterChange": " public void drawBackground (GC gc, int x, int y, int width, int height, int offsetX, int offsetY)", "diff": ["-\t\tint /*long*/ cairo = data.cairo;", "+\t\tlong /*int*/ cairo = data.cairo;", "-\t\t\t\tint /*long*/ surface = control.backgroundImage.surface;", "+\t\t\t\tlong /*int*/ surface = control.backgroundImage.surface;", "-\t\t\t\t\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\t\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual (OS.gdk_visual_get_system());", "-\t\t\t\t\tint /*long*/ drawable = control.backgroundImage.pixmap;", "-\t\t\t\t\tint /*long*/ xDrawable = OS.GDK_PIXMAP_XID (drawable);\t\t\t\t", "+\t\t\t\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\t\t\t\t\tlong /*int*/ xVisual = OS.gdk_x11_visual_get_xvisual (OS.gdk_visual_get_system());", "+\t\t\t\t\tlong /*int*/ drawable = control.backgroundImage.pixmap;", "+\t\t\t\t\tlong /*int*/ xDrawable = OS.GDK_PIXMAP_XID (drawable);\t\t\t\t", "-\t\t\t\tint /*long*/ pattern = Cairo.cairo_pattern_create_for_surface (surface);", "+\t\t\t\tlong /*int*/ pattern = Cairo.cairo_pattern_create_for_surface (surface);", "-\t\t\tint /*long*/ gdkGC = gc.handle;", "+\t\t\tlong /*int*/ gdkGC = gc.handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3bd5010daa592844806fbf0254b4820", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/HelperAppLauncherDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  int PromptForSaveToFile (int arg0, int arg1, int arg2, int arg3, int arg4)", "signatureAfterChange": "  int PromptForSaveToFile (long arg0, long arg1, long arg2, long arg3, long arg4)", "diff": ["-int PromptForSaveToFile (int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4) {", "-\tint /*long*/ aDefaultFile, aSuggestedFileExtension, _retval;", "+int PromptForSaveToFile (long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4) {", "+\tlong /*int*/ aDefaultFile, aSuggestedFileExtension, _retval;", "-\tint /*long*/[] result = new int /*long*/[1];", "+\tlong /*int*/[] result = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e197968a68d09a7e63545e114bc2316", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "-\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tlong /*int*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "+\t\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, devmodeData.length);", "-\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tlong /*int*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, devmodeData.length);", "+\t\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\tint /*long*/ hMem = pd.hDevMode;", "+\t\tlong /*int*/ hMem = pd.hDevMode;", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8698ae78a6c63e0931edb50109924a28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebFrameLoadDelegate.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  int didFinishLoadForFrame (int webview, int frame)", "signatureAfterChange": "  int didFinishLoadForFrame (long webview, long frame)", "diff": ["-int didFinishLoadForFrame (int /*long*/ webview, int /*long*/ frame) {", "+int didFinishLoadForFrame (long /*int*/ webview, long /*int*/ frame) {", "-\tint /*long*/[] iWebFrame = new int /*long*/[1];", "+\tlong /*int*/[] iWebFrame = new long /*int*/[1];", "-\t\t\tint /*long*/ string = WebKit.createBSTR (html);", "-\t\t\tint /*long*/ URLString;", "+\t\t\tlong /*int*/ string = WebKit.createBSTR (html);", "+\t\t\tlong /*int*/ URLString;", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63a240c1d6c3950fcf976a1b78d9fa8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " public FontData open ()", "diff": ["-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ lpLogFont = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, LOGFONT.sizeof);", "+\tlong /*int*/ lpLogFont = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, LOGFONT.sizeof);", "-\t\tint /*long*/ hDC = OS.GetDC (0);", "+\t\tlong /*int*/ hDC = OS.GetDC (0);", "-\t\tint /*long*/ hDC = OS.GetDC(0);", "+\t\tlong /*int*/ hDC = OS.GetDC(0);", "-\t\t\tint /*long*/ hFont = OS.CreateFontIndirect(logFont);", "-\t\t\tint /*long*/ oldFont = OS.SelectObject(hDC, hFont);", "+\t\t\tlong /*int*/ hFont = OS.CreateFontIndirect(logFont);", "+\t\t\tlong /*int*/ oldFont = OS.SelectObject(hDC, hFont);"]}], "num": 34442}