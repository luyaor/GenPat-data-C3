{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95591cf0a16cd9b54a10bbc0d891d223", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122dfa910720b8b794516dfce58cce00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-public boolean setUrl(String url) {", "+public boolean setUrl(String url, String postData, String[] headers) {", "-\tchar[] chars = new char[url.length()];", "-\turl.getChars(0, chars.length, chars, 0);", "-\tint str = OS.CFStringCreateWithCharacters(0, chars, chars.length);", "+\tint str = createNSString(url);", "-\t//request = [NSURLRequest requestWithURL:(NSURL*)inURL];", "-\tint request = Cocoa.objc_msgSend(Cocoa.C_NSURLRequest, Cocoa.S_requestWithURL, inURL);", "+\tint request = Cocoa.objc_msgSend(Cocoa.C_NSMutableURLRequest, Cocoa.S_requestWithURL, inURL);", "-\t//mainFrame = [webView mainFrame];", "+\tif (postData != null) {", "+\t\tint post = createNSString(POST);", "+\t\tCocoa.objc_msgSend(request, Cocoa.S_setHTTPMethod, post);", "+\t\tOS.CFRelease (post);", "+\t\tbyte[] bytes = postData.getBytes();", "+\t\tint data = Cocoa.objc_msgSend(Cocoa.C_NSData, Cocoa.S_dataWithBytes, bytes, bytes.length);", "+\t\tCocoa.objc_msgSend(request, Cocoa.S_setHTTPBody, data);", "+\t}", "+\tif (headers != null) {", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint index = current.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tint string = createNSString(value);", "+\t\t\t\t\t\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, string);", "+\t\t\t\t\t\tOS.CFRelease (string);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint keyString = createNSString(key);", "+\t\t\t\t\t\tint valueString = createNSString(value);", "+\t\t\t\t\t\tCocoa.objc_msgSend(request, Cocoa.S_setValueForHTTPHeaderField, keyString, valueString);", "+\t\t\t\t\t\tOS.CFRelease (valueString);", "+\t\t\t\t\t\tOS.CFRelease (keyString);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+", "-", "-\t//[mainFrame loadRequest:request];", "-", "+\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5363289fbd6132de9ed51bfec6d411c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-\t\t\tint index = current.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tString key = current.substring(0, index).trim();", "-\t\t\t\tString value = current.substring(index + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tif (key.equals(USER_AGENT)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "-\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "-\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\tif (current != null) {", "+\t\t\t\tint index = current.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78983c4e4f087d5278e7ff93e8e84320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-public boolean setUrl(String url) {", "+public boolean setUrl(String url, String postData, String[] headers) {", "-\tNSURLRequest request = NSURLRequest.requestWithURL(inURL);", "+\tNSMutableURLRequest request = (NSMutableURLRequest)NSMutableURLRequest.requestWithURL(inURL);", "+\tif (postData != null) {", "+\t\trequest.setHTTPMethod(NSString.stringWith(POST));", "+\t\tbyte[] bytes = postData.getBytes();", "+\t\tNSData data = NSData.dataWithBytes(bytes, bytes.length);", "+\t\trequest.setHTTPBody(data);", "+\t}", "+\tif (headers != null) {", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint index = current.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\twebView.setCustomUserAgent(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a331d0ad3cb974dbabf42af71b829d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-\t\t\tint index = current.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tString key = current.substring(0, index).trim();", "-\t\t\t\tString value = current.substring(index + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tif (key.equals(USER_AGENT)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "-\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "-\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\tint string = createNSString(value);", "-\t\t\t\t\t\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, string);", "-\t\t\t\t\t\tOS.CFRelease (string);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint keyString = createNSString(key);", "-\t\t\t\t\t\tint valueString = createNSString(value);", "-\t\t\t\t\t\tCocoa.objc_msgSend(request, Cocoa.S_setValueForHTTPHeaderField, keyString, valueString);", "-\t\t\t\t\t\tOS.CFRelease (valueString);", "-\t\t\t\t\t\tOS.CFRelease (keyString);", "+\t\t\tif (current != null) {", "+\t\t\t\tint index = current.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tint string = createNSString(value);", "+\t\t\t\t\t\t\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, string);", "+\t\t\t\t\t\t\tOS.CFRelease (string);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint keyString = createNSString(key);", "+\t\t\t\t\t\t\tint valueString = createNSString(value);", "+\t\t\t\t\t\t\tCocoa.objc_msgSend(request, Cocoa.S_setValueForHTTPHeaderField, keyString, valueString);", "+\t\t\t\t\t\t\tOS.CFRelease (valueString);", "+\t\t\t\t\t\t\tOS.CFRelease (keyString);", "+\t\t\t\t\t\t}"]}], "num": 34342}