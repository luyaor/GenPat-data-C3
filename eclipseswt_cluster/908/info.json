{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d051b8032d63afc139ff5e51ddaee17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0f07d23a52b2631cc35a0f2ffa5b68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "fd8c3687aaa8843179b1c8e9057123d1c6cb0072", "commitAfterChange": "bbd6898a6185aaf7dd7433ecd7166fa8b9a5a9c7", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight)", "signatureAfterChange": " boolean updateTabHeight(int oldHeight)", "diff": ["-\t\tcurve = bezier(0, tabHeight+1,", "-\t\t               CURVE_TOP, tabHeight+1,", "-\t\t\t\t       CURVE_WIDTH-CURVE_BOTTOM, SELECTION_BORDER+1,", "+\t\tcurve = bezier(0, tabHeight+2,", "+\t\t               CURVE_LEFT, tabHeight+2,", "+\t\t\t\t       CURVE_WIDTH-CURVE_RIGHT, SELECTION_BORDER+1,", "+\t\t// workaround to get rid of blip at end of bezier", "+\t\tint index = -1;", "+\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\tif (curve[2*i+1] > tabHeight) {", "+\t\t\t\tindex = i;", "+\t\t\t}", "+\t\t}", "+\t\tif (index > 0) {", "+\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "+\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "+\t\t\tcurve = newCurve;", "+\t\t}", "-\t\t               CURVE_BOTTOM, 0, ", "-\t\t               CURVE_WIDTH-CURVE_TOP, tabHeight-SELECTION_BORDER,", "-\t\t               CURVE_WIDTH, tabHeight-SELECTION_BORDER,", "+\t\t               CURVE_LEFT, 0, ", "+\t\t               CURVE_WIDTH-CURVE_RIGHT, tabHeight-SELECTION_BORDER + 2,", "+\t\t               CURVE_WIDTH, tabHeight-SELECTION_BORDER + 2,", "+\t// workaround to get rid of blip at end of bezier", "+\t\tint index = -1;", "+\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\tif (curve[2*i+1] > tabHeight-SELECTION_BORDER) {", "+\t\t\t\tindex = i;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tif (index > 0) {", "+\t\t\tint[] newCurve = new int[2*(index-1)];", "+\t\t\tSystem.arraycopy(curve, 0, newCurve, 0, newCurve.length);", "+\t\t\tcurve = newCurve;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b113fcc376fe421d0a116035063001e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "1338b222e8fc4ec17a59048d25fbe907c6449246", "commitAfterChange": "3af337e8a4ee357dca7904022351ca6f859cc723", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void setSelection(TreeItem2[] items)", "signatureAfterChange": " public void setSelection(TreeItem2[] items)", "diff": ["+\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "+\t\tdeselectAll();", "+\t\treturn;", "+\t}", "-\tinternalSetSelection(items);", "-\tfor (int i = 0; i < oldSelection.length; i++) {", "-\t\tif (!oldSelection[i].selected) {", "-\t\t\tredrawItem(oldSelection[i].availableIndex);", "+\t", "+\t/* remove null and duplicate items */", "+\tint index = 0;", "+\tselectedItems = new TreeItem2[items.length];\t/* assume all valid items initially */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\tTreeItem2 item = items[i];", "+\t\tif (item != null && !item.isSelected()) {", "+\t\t\tselectedItems[index++] = item;", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tredrawItem(items[i].availableIndex);", "+\tif (index != items.length) {", "+\t\t/* an invalid item was provided, so resize the array accordingly */", "+\t\tTreeItem2[] temp = new TreeItem2[index];", "+\t\tSystem.arraycopy(selectedItems, 0, temp, 0, index);", "+\t\tselectedItems = temp;", "+\t}", "+", "+\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\tif (!oldSelection[i].isSelected()) {", "+\t\t\tint availableIndex = oldSelection[i].availableIndex;", "+\t\t\tif (availableIndex != -1) {", "+\t\t\t\tredrawItem(availableIndex);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\tint availableIndex = selectedItems[i].availableIndex;", "+\t\tif (availableIndex != -1) {", "+\t\t\tredrawItem(availableIndex);", "+\t\t}"]}], "num": 908}