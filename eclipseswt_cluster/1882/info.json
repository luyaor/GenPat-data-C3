{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "291017cb338921909a409c32c398579e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9035952d3c4951200b94cedcc4cf8dce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/cocoa/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static Shell new_Shell(final Display display, final Canvas parent)", "signatureAfterChange": " \tpublic static Shell new_Shell(final Display display, final Canvas parent)", "diff": ["+\t */", "+\tpublic static Shell new_Shell(final Display display, final Canvas parent) {", "+\t\tif (display == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (parent == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint /*long*/ handle = 0;", "+\t\t", "+\t\ttry {", "+\t\t\tloadLibrary ();", "+\t\t\thandle = getAWTHandle (parent);", "+\t\t} catch (Throwable e) {", "+\t\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "+\t\t}", "+\t\tif (handle == 0) SWT.error (SWT.ERROR_INVALID_ARGUMENT, null, \" [peer not created]\");", "+\t\t", "+\t\tfinal Shell shell = Shell.cocoa_new (display, handle);", "+\t\tfinal ComponentListener listener = new ComponentAdapter () {", "+\t\t\tpublic void componentResized (ComponentEvent e) {", "+\t\t\t\tdisplay.asyncExec (new Runnable () {", "+\t\t\t\t\t\tif (shell.isDisposed()) return;", "+\t\t\t\t\t\tDimension dim = parent.getSize ();", "+\t\t\t\t\t\tshell.setSize (dim.width, dim.height);", "+\t\t};", "+\t\tparent.addComponentListener(listener);", "+\t\tshell.addListener(SWT.Dispose, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tparent.removeComponentListener(listener);", "- */", "-public static Shell new_Shell(final Display display, final Canvas parent) {", "-\tif (display == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (parent == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\tSWT.error(SWT.ERROR_NOT_IMPLEMENTED);", "-\treturn null;", "-", "-// TODO: Uncomment this code once Display/Shell related issues are ironed out.", "-//\t\tint /*long*/ handle = 0;", "-//", "-//\t\ttry {", "-//\t\t\tloadLibrary ();", "-//\t\t\thandle = getAWTHandle (parent);", "-//\t\t} catch (Throwable e) {", "-//\t\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "-//\t\t}", "-//\t\tif (handle == 0) SWT.error (SWT.ERROR_INVALID_ARGUMENT, null, \" [peer not created]\");", "-//", "-//\t\tfinal Shell shell = Shell.cocoa_new (display, handle);", "-//\t\tfinal ComponentListener listener = new ComponentAdapter () {", "-//\t\t\tpublic void componentResized (ComponentEvent e) {", "-//\t\t\t\tdisplay.asyncExec (new Runnable () {", "-//\t\t\t\t\tpublic void run () {", "-//\t\t\t\t\t\tif (shell.isDisposed()) return;", "-//\t\t\t\t\t\tDimension dim = parent.getSize ();", "-//\t\t\t\t\t\tshell.setSize (dim.width, dim.height);", "-//\t\t\t\t\t}", "-//\t\t\t\t});", "-//\t\t\t}", "-//\t\t};", "-//\t\tparent.addComponentListener(listener);", "-//\t\tshell.addListener(SWT.Dispose, new Listener() {", "-//\t\t\tpublic void handleEvent(Event event) {", "-//\t\t\t\tparent.removeComponentListener(listener);", "-//\t\t\t}", "-//\t\t});", "-//\t\tshell.setVisible (true);", "-//\t\treturn shell;", "-}", "+\t\t});", "+\t\tshell.setVisible (true);", "+\t\treturn shell;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe87006185a21e21c3e45b11ca39f95", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/motif/org/eclipse/swt/internal/awt/SWT_AWT.java", "commitBeforeChange": "d97d0d107ca082c524d75941f35387a2d09cd378", "commitAfterChange": "269136c6e1817baa3820883adccd7cdf58ac909f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "signatureAfterChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "diff": ["-\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED);", "-\treturn null;", "+\tint handle = 0;", "+\ttry {", "+\t\thandle = getAWTHandle (parent);", "+\t} catch (Throwable e) {", "+\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "+\t}", "+\tif (handle == 0) SWT.error (SWT.ERROR_NOT_IMPLEMENTED);", "+", "+\tfinal Shell shell = Shell.motif_new (display, handle);", "+\tfinal Display newDisplay = shell.getDisplay ();", "+\tparent.addComponentListener(new ComponentAdapter () {", "+\t\tpublic void componentResized (ComponentEvent e) {", "+\t\t\tnewDisplay.syncExec (new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tDimension dim = parent.getSize ();", "+\t\t\t\t\tshell.setSize (dim.width, dim.height);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t});", "+\tshell.setVisible (true);", "+\treturn shell;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6004fd18f379d7da543bcd3915af928", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/cocoa/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "e73d120d5e37884ab50e6301a907bc6b240738dc", "commitAfterChange": "308fb225ca7c50dd338d7be0181861ac767a6584", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static Shell new_Shell(final Display display, final Canvas parent)", "signatureAfterChange": " \tpublic static Shell new_Shell(final Display display, final Canvas parent)", "diff": ["+\t */", "+\tpublic static Shell new_Shell(final Display display, final Canvas parent) {", "+\t\tif (display == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (parent == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint /*long*/ handle = 0;", "+\t\ttry {", "+\t\t\tloadLibrary ();", "+\t\t\thandle = getAWTHandle (parent);", "+\t\t} catch (Throwable e) {", "+\t\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "+\t\t}", "+\t\tif (handle == 0) SWT.error (SWT.ERROR_INVALID_ARGUMENT, null, \" [peer not created]\");", "+", "+\t\tfinal Shell shell = Shell.cocoa_new (display, handle);", "+\t\tparent.addComponentListener(new ComponentAdapter () {", "+\t\t\tpublic void componentResized (ComponentEvent e) {", "+\t\t\t\tdisplay.asyncExec (new Runnable () {", "+\t\t\t\t\t\tDimension dim = parent.getSize ();", "+\t\t\t\t\t\tshell.setSize (dim.width, dim.height);", "- */", "-public static Shell new_Shell(final Display display, final Canvas parent) {", "-\tif (display == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (parent == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tSWT.error(SWT.ERROR_NOT_IMPLEMENTED);", "-\treturn null;", "-}", "+\t\t});", "+\t\tshell.setVisible (true);", "+\t\treturn shell;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d846d2b3b90c2635a8e598d07f0cfd75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/motif/org/eclipse/swt/internal/awt/motif/SWT_AWT.java", "commitBeforeChange": "313e65a68a4b000776debea272a5d3afc94c72f6", "commitAfterChange": "4d0d56c38bda671216813ee1672755dbcbc2f6e9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "signatureAfterChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "diff": ["-\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED);", "-\treturn null;", "+\tint handle = 0;", "+\ttry {", "+\t\thandle = getAWTHandle (parent);", "+\t} catch (Throwable e) {", "+\t\tSWT.error (SWT.ERROR_NOT_IMPLEMENTED, e);", "+\t}", "+\tif (handle == 0) SWT.error (SWT.ERROR_NOT_IMPLEMENTED);", "+", "+\tfinal Shell shell = Shell.motif_new (display, handle);", "+\tfinal Display newDisplay = shell.getDisplay ();", "+\tparent.addComponentListener(new ComponentAdapter () {", "+\t\tpublic void componentResized (ComponentEvent e) {", "+\t\t\tnewDisplay.syncExec (new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tDimension dim = parent.getSize ();", "+\t\t\t\t\tshell.setSize (dim.width, dim.height);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t});", "+\tshell.setVisible (true);", "+\treturn shell;"]}], "num": 1882}