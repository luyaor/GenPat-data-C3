{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e1baa71c29316ad964b1f4d21a60b4f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8acfe377b3ec7fe6a26ce52bf0bde6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\tbrowser.dispose ();", "-\t\terror (rc);", "+\t\trc = componentManager.CreateInstance (NS_IWEBBROWSER_CID, 0, nsIWebBrowser_1_9.NS_IWEBBROWSER_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tbrowser.dispose ();", "+\t\t\terror (rc);", "+\t\t}", "-\t\tif (!factoriesRegistered) {", "-\t\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory ();", "-\t\t\tdialogFactory.AddRef ();", "-\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID, true);", "-\t\t\tbyte[] aClassName = MozillaDelegate.wcsToMbcs (null, \"swtHelperAppLauncherDialog\", true); //$NON-NLS-1$", "-\t\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress ());", "-\t\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (rc);", "-\t\t\t}", "-\t\t\tdialogFactory.Release ();", "-\t\t}", "-\t\tresult[0] = 0;", "+\t\tIsPre_2 = true;", "+\t\tresult[0] = 0;", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = interfaceRequestor.GetInterface(nsIDocShell_2.NS_IDOCSHELL_IID, result);", "+\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) { /* >=2.0 */", "+\t\t\t\t\tIsPre_2 = false;", "+\t\t\t\t\tnew nsISupports (result[0]).Release();", "+\t\t\t\t}", "+\t\tif (!factoriesRegistered) {", "+\t\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory ();", "+\t\t\tdialogFactory.AddRef ();", "+\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID, true);", "+\t\t\tbyte[] aClassName = MozillaDelegate.wcsToMbcs (null, \"swtHelperAppLauncherDialog\", true); //$NON-NLS-1$", "+\t\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\tbrowser.dispose ();", "+\t\t\t\terror (rc);", "+\t\t\t}", "+\t\t\tdialogFactory.Release ();", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac32616425e686e9c29bec45511ed3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "9bff9c57dbcd920318537ab873aa751028f71874", "commitAfterChange": "69f429f048911edb8268cd2746ff91939e28beea", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "signatureAfterChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "diff": ["-\tFilePickerFactory pickerFactory = new FilePickerFactory ();", "-\tpickerFactory.AddRef ();", "-\taContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FILEPICKER_CONTRACTID, true);", "-\taClassName = MozillaDelegate.wcsToMbcs (null, \"swtFilePicker\", true); //$NON-NLS-1$", "-\trc = componentRegistrar.RegisterFactory (XPCOM.NS_FILEPICKER_CID, aClassName, aContractID, pickerFactory.getAddress ());", "-\t/* a failure here is fine, it likely indicates that the OS has provided a default implementation */", "-\tpickerFactory.Release ();", "+\tif (!nsISupports.IsXULRunner24) {", "+\t\tFilePickerFactory pickerFactory = new FilePickerFactory ();", "+\t\tpickerFactory.AddRef ();", "+\t\taContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FILEPICKER_CONTRACTID, true);", "+\t\taClassName = MozillaDelegate.wcsToMbcs (null, \"swtFilePicker\", true); //$NON-NLS-1$", "+\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_FILEPICKER_CID, aClassName, aContractID, pickerFactory.getAddress ());", "+\t\t/* a failure here is fine, it likely indicates that a default implementation is provided */", "+\t\tpickerFactory.Release ();", "+\t}"]}], "num": 17958}