{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca1fc09112d9fd037cb642d6d4b6bff2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc23319389f441fedc9043c389456723", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b096bc1b25557993b572960cdeb7c9ef52287a77", "commitAfterChange": "52ce8593b4ebbc671b42f8a9d90fb366dce958a9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["+\t/*", "+\t* Feature in Windows.  When a tool bar wraps, tool items", "+\t* with the style BTNS_SEP are used as wrap points.  This", "+\t* means that controls that are placed on top of separator", "+\t* items are not positioned properly.  The fix is to change", "+\t* the tool item style from BTNS_SEP to BTNS_BUTTON, causing", "+\t* the item to wrap like a tool item button.  The new tool", "+\t* item button is disabled to avoid key traversal and the", "+\t* image is set to I_IMAGENONE to avoid getting the first", "+\t* image from the image list.", "+\t*/", "+\tif ((parent.style & SWT.WRAP) != 0) {", "+\t\tboolean changed = false;", "+\t\tint hwnd = parent.handle;", "+\t\tTBBUTTONINFO info = new TBBUTTONINFO ();", "+\t\tinfo.cbSize = TBBUTTONINFO.sizeof;", "+\t\tinfo.dwMask = OS.TBIF_STYLE | OS.TBIF_STATE;", "+\t\tOS.SendMessage (hwnd, OS.TB_GETBUTTONINFO, id, info);", "+\t\tif (control == null) {", "+\t\t\tif ((info.fsStyle & OS.BTNS_SEP) == 0) {", "+\t\t\t\tchanged = true;", "+\t\t\t\tinfo.fsStyle &= ~OS.BTNS_BUTTON;", "+\t\t\t\tinfo.fsStyle |= OS.BTNS_SEP;", "+\t\t\t\tif ((state & DISABLED) != 0) {", "+\t\t\t\t\tinfo.fsState &= ~OS.TBSTATE_ENABLED;", "+\t\t\t\t} else {", "+\t\t\t\t\tinfo.fsState |= OS.TBSTATE_ENABLED;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif ((info.fsStyle & OS.BTNS_SEP) != 0) {", "+\t\t\t\tchanged = true;", "+\t\t\t\tinfo.fsStyle &= ~OS.BTNS_SEP;", "+\t\t\t\tinfo.fsStyle |= OS.BTNS_BUTTON;", "+\t\t\t\tinfo.fsState &= ~OS.TBSTATE_ENABLED;", "+\t\t\t\tinfo.dwMask |= OS.TBIF_IMAGE;", "+\t\t\t\tinfo.iImage = OS.I_IMAGENONE;", "+\t\t\t}", "+\t\t}", "+\t\tif (changed) {", "+\t\t\tOS.SendMessage (hwnd, OS.TB_SETBUTTONINFO, id, info);", "+\t\t\t/*", "+\t\t\t* Bug in Windows.  When TB_SETBUTTONINFO changes the", "+\t\t\t* style of a tool item from BTNS_SEP to BTNS_BUTTON", "+\t\t\t* and the tool bar is wrapped, the tool bar does not", "+\t\t\t* redraw properly.  Windows uses separator items as", "+\t\t\t* wrap points and sometimes draws etching above or", "+\t\t\t* below and entire row.  The fix is to redraw the", "+\t\t\t* tool bar.", "+\t\t\t*/", "+\t\t\tif (OS.SendMessage (hwnd, OS.TB_GETROWS, 0, 0) > 1) {", "+\t\t\t\tOS.InvalidateRect (hwnd, null, true);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e89f3726d2af2ca4eb8d061333bfc43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "115f3e3ceb4f3ae6b51eb27ec3539632d1fa9cff", "commitAfterChange": "b74ae62b82beae503cc3ceeef2dd599062f8ba27", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-//\t\tcase OS.WM_SETFOCUS: {", "-//\t\t\t/*", "-//\t\t\t* Feature in Windows.  When a tree control processes WM_SETFOCUS,", "-//\t\t\t* if no item is selected, the first item in the tree is selected.", "-//\t\t\t* This is unexpected and might clear the previous selection.", "-//\t\t\t* The fix is to detect that there is no selection and set it to", "-//\t\t\t* the first item in the tree.  If the item was not selected,", "-//\t\t\t* only the focus is assigned.", "-//\t\t\t*/", "-//\t\t\tif ((style & SWT.SINGLE) != 0) break;", "-//\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-//\t\t\tif (hItem == 0) {", "-//\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-//\t\t\t\tif (hItem != 0) {", "-//\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-//\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM | OS.TVIF_STATE;", "-//\t\t\t\t\ttvItem.hItem = hItem;", "-//\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-//\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = true;", "-//\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "-//\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) == 0) {", "-//\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-//\t\t\t\t\t}", "-//\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = false;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t\tbreak;", "-//\t\t}", "+\t\tcase OS.WM_SETFOCUS: {", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When a tree control processes WM_SETFOCUS,", "+\t\t\t* if no item is selected, the first item in the tree is selected.", "+\t\t\t* This is unexpected and might clear the previous selection.", "+\t\t\t* The fix is to detect that there is no selection and set it to", "+\t\t\t* the first item in the tree.  If the item was not selected,", "+\t\t\t* only the focus is assigned.", "+\t\t\t*/", "+\t\t\tif ((style & SWT.SINGLE) != 0) break;", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem == 0) {", "+\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\t\t\t\tif (hItem != 0) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM | OS.TVIF_STATE;", "+\t\t\t\t\ttvItem.hItem = hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = true;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "+\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) == 0) {", "+\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t\t\t\t}", "+\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a724227134602c027046b041965f445", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5a83eff7ec24d270c869515e80cf37dbe30c0637", "commitAfterChange": "ea6bf58c55a1ccfba682400237d7c1f40ceeffab", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT CDDS_POSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_POSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, 0);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Bug in Windows.  For some reason, during a collapse,", "+\t\t\t\t\t\t* when TVM_GETNEXTITEM is sent with TVGN_LASTVISIBLE", "+\t\t\t\t\t\t* and the collapse causes the item being collapsed", "+\t\t\t\t\t\t* to become the last visible item in the tree, the", "+\t\t\t\t\t\t* message takes a long time to process.  In order for", "+\t\t\t\t\t\t* the slowness to happen, the children of the item", "+\t\t\t\t\t\t* must have children.  Times of up to 11 seconds have", "+\t\t\t\t\t\t* been observed with 23 children, each having one", "+\t\t\t\t\t\t* child.  The fix is to use the bottom partially", "+\t\t\t\t\t\t* visible item rather than the last possible item", "+\t\t\t\t\t\t* that could be visible.", "+\t\t\t\t\t\t* ", "+\t\t\t\t\t\t* NOTE: This problem only happens on Vista during", "+\t\t\t\t\t\t* WM_NOTIFY with NM_CUSTOMDRAW and CDDS_POSTPAINT.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tint hItem = 0;", "+\t\t\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\t\t\t\t\thItem = getBottomItem ();", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, 0);", "+\t\t\t\t\t\t}", "-\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, 0);", "+\t\t\t/*", "+\t\t\t* Bug in Windows.  For some reason, during a collapse,", "+\t\t\t* when TVM_GETNEXTITEM is sent with TVGN_LASTVISIBLE", "+\t\t\t* and the collapse causes the item being collapsed", "+\t\t\t* to become the last visible item in the tree, the", "+\t\t\t* message takes a long time to process.  In order for", "+\t\t\t* the slowness to happen, the children of the item", "+\t\t\t* must have children.  Times of up to 11 seconds have", "+\t\t\t* been observed with 23 children, each having one", "+\t\t\t* child.  The fix is to use the bottom partially", "+\t\t\t* visible item rather than the last possible item", "+\t\t\t* that could be visible.", "+\t\t\t* ", "+\t\t\t* NOTE: This problem only happens on Vista during", "+\t\t\t* WM_NOTIFY with NM_CUSTOMDRAW and CDDS_POSTPAINT.", "+\t\t\t*/", "+\t\t\tint hItem = 0;", "+\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\t\thItem = getBottomItem ();", "+\t\t\t} else {", "+\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437b62ad02d8ea9edea6025b324d736e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b8b3d8d333270c82331f79c34684ac5101f04bf4", "commitAfterChange": "f5441d1714ca7f50c8c942b97ca2567450f3ceff", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* In a multi-select tree, if the user is collapsing a subtree that", "+\t\t* contains selected items, clear the selection from these items and", "+\t\t* issue a selection event.  Only items that are selected and visible", "+\t\t* are cleared.", "+\t\t*/", "+\t\tboolean fixSelection = false, deselected = false;", "+\t\tif ((style & SWT.MULTI) != 0) {", "+\t\t\tif (lpht.hItem != 0 && (lpht.flags & OS.TVHT_ONITEMBUTTON) != 0) {", "+\t\t\t\tint hSelection = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tif (hSelection != 0) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\ttvItem.mask = OS.TVIF_STATE | OS.TVIF_PARAM;", "+\t\t\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tif ((tvItem.state & OS.TVIS_EXPANDED) != 0) {", "+\t\t\t\t\t\tfixSelection = true;", "+\t\t\t\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\t\t\t\t\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, lpht.hItem);", "+\t\t\t\t\t\tint hLast = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\tint hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\twhile (hNext != 0 && hNext != hLast) {", "+\t\t\t\t\t\t\ttvItem.hItem = hNext;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) deselected = true;", "+\t\t\t\t\t\t\ttvItem.state = 0;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hNext)) == 0) break;", "+\t\t\t\t\t\t\tif (hParent == OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hNext)) break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = true;", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = false;", "+\t\tif (deselected) {", "+\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\tpostEvent (SWT.Selection, event);", "+\t\t}"]}], "num": 39400}