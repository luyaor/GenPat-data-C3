{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef29213295b3cafdce67a7b6f3884174", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e16e277a7dcef8fb2d2eb08386ef67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "1fc9d817da3861f5e67eed2d83e4edc3fcb7625f", "commitAfterChange": "15cff3037e981fe6b0208388cfa94b5199a9c262", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r public boolean isFocusControl ()", "signatureAfterChange": "\r public boolean isFocusControl ()", "diff": ["-\tControl focus = getDisplay().getFocusControl();\r", "-\tif (focus == frame) {\r", "-\t\treturn frame.getCurrentDocument() == this;\r", "-\t}\r", "+\tcheckWidget ();\r", "+\tif (objIOleInPlaceObject == null) return false;\r", "+\tint[] phwnd = new int[1];\r", "+\tobjIOleInPlaceObject.GetWindow(phwnd);\r", "+\tif (phwnd[0] == 0) return false;\r", "+\tint handle = OS.GetFocus();\r", "+\tdo {\r", "+\t\tif (phwnd[0] == handle) return true;\r", "+\t} while ((handle = OS.GetParent (handle)) != 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430b84470925be7cdcde142a7a8b9a13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7a94c8c9bd9c32908f5c7fec243f0a3b4d898df3", "commitAfterChange": "f1b82b762fd7286a39be745bdc0fc9afa0f9d923", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+\t/*", "+\t* Feature in the Macintosh.  The draw item proc is not called if the column width", "+\t* is zero. This means that the SWT.MeasureItem listener is not called and the column", "+\t* does not get wider ever.  The fix is to change the column width to one.", "+\t*/", "+\tif (columnCount == 0 && (hooks (SWT.MeasureItem) || hooks (SWT.EraseItem) || hooks (SWT.PaintItem))) {", "+\t\tshort [] width = new short [1];", "+\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "+\t\tif (width [0] == 0) {", "+\t\t\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, column_id, (short) 1);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7d45c89c716b747f59819e6050eb05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7a94c8c9bd9c32908f5c7fec243f0a3b4d898df3", "commitAfterChange": "f1b82b762fd7286a39be745bdc0fc9afa0f9d923", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+\t/*", "+\t* Feature in the Macintosh.  The draw item proc is not called if the column width", "+\t* is zero. This means that the SWT.MeasureItem listener is not called and the column", "+\t* does not get wider ever.  The fix is to change the column width to one.", "+\t*/", "+\tif (columnCount == 0 && (hooks (SWT.MeasureItem) || hooks (SWT.EraseItem) || hooks (SWT.PaintItem))) {", "+\t\tshort [] width = new short [1];", "+\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "+\t\tif (width [0] == 0) {", "+\t\t\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, column_id, (short) 1);", "+\t\t}", "+\t}"]}], "num": 59039}