{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c5a57ddc51534ed12b5845589fa19c2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3d6d1fbf47c6b07fb549a9ba221a45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 113, "signatureBeforeChange": " String trimItemText(String text, int maxWidth, GC gc)", "signatureAfterChange": " void updateVerticalBar ()", "diff": ["-String trimItemText(String text, int maxWidth, GC gc) {", "-\tint textWidth;", "-\tint dotsWidth;", "-", "-\tif (text != null && text.length() > 1) {", "-\t\ttextWidth = gc.stringExtent(text).x;", "-\t\tif (textWidth > maxWidth) {", "-\t\t\tdotsWidth = gc.stringExtent(Table.DOT_STRING).x;", "-\t\t\twhile (textWidth + dotsWidth > maxWidth && text.length() > 1) {", "-\t\t\t\ttext = text.substring(0, text.length() - 1);\t\t// chop off one character at the end", "-\t\t\t\ttextWidth = gc.stringExtent(text).x;", "-\t\t\t}", "-\t\t\ttext = text.concat(Table.DOT_STRING);", "-\treturn text;", "+}", "+void updateVerticalBar () {", "+\tint pageSize = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\tint maximum = Math.max (1, items.length);", "+\tScrollBar vBar = getVerticalBar ();", "+\tif (maximum != vBar.getMaximum ()) {", "+\t\tvBar.setMaximum (maximum);", "+\t}", "+\tint thumb = Math.min (pageSize, maximum);", "+\tif (thumb != vBar.getThumb ()) {", "+\t\tvBar.setThumb (thumb);", "+\t\tvBar.setPageIncrement (thumb);", "+\t}", "+\tvBar.setVisible (pageSize < maximum);", "+", "+\t/* reclaim any space now left on the bottom */", "+\tif (maximum < topIndex + thumb) {", "+\t\ttopIndex = maximum - thumb;", "+\t\tvBar.setSelection (topIndex);", "+\t\tredraw ();", "+\t} else {", "+\t\tint selection = vBar.getSelection ();", "+\t\tif (selection != topIndex) {", "+\t\t\ttopIndex = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d789f7808a8142e97f2390129e3349d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void drawLine(String line, int lineIndex, int paintY, GC gc, Color widgetBackground, Color widgetForeground, boolean clearBackground)", "signatureAfterChange": " void drawLine(String line, int lineIndex, int paintY, GC gc, Color widgetBackground, Color widgetForeground, boolean clearBackground)", "diff": ["-\tStyleRange[] styles = new StyleRange[0];", "-\tStyledTextBidi bidi = null;", "+\tTextLayout layout = getTextLayout(line, lineOffset, event);", "-\tif (event != null) {", "-\t\tstyles = event.styles;", "-\t}", "-\tif (isBidi()) {", "-\t\tsetLineFont(gc, SWT.NORMAL);", "-\t\tbidi = getStyledTextBidi(line, lineOffset, gc, styles);", "-\t}", "+\t", "+\tint paintX = leftMargin - getHorizontalPixel();", "-\t\tdrawLineBreakSelection(line, lineOffset, styles, paintY, gc, bidi);", "-\t\tif ((selectionStart >= lineOffset && selectionStart < lineOffset + lineLength) || ", "-\t\t\t(selectionStart < lineOffset && selectionEnd > lineOffset)) {", "-\t\t\tstyles = mergeSelectionLineStyles(styles);", "-\t\t}", "+\t\tRectangle rect = layout.getLineBounds(0);", "+\t\tdrawLineBreakSelection(line, lineOffset, paintX + rect.x + rect.width, paintY, gc);", "-\tdrawStyledLine(line, lineOffset, 0, styles, 0, paintY, gc, lineBackground, widgetForeground, bidi);", "+\tgc.setForeground(widgetForeground);", "+\tgc.setBackground(lineBackground);", "+\t", "+\tif (selectionStart == selectionEnd || (selectionEnd <= lineOffset && selectionStart > lineOffset + lineLength - 1)) {", "+\t\tlayout.draw(gc, paintX, paintY);", "+\t} else {", "+\t\tint start = Math.max(0, selectionStart - lineOffset);", "+\t\tint end = Math.min(lineLength, selectionEnd - lineOffset);", "+\t\tlayout.draw(gc, paintX, paintY, start, end - 1, getSelectionForeground(), getSelectionBackground());", "+\t}", "+\tdisposeTextLayout(layout, event);"]}], "num": 59673}