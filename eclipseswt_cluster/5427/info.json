{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d60d9596925c3554e9d4fff1bae06736", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f966962b2e486d761762d8ab1e7d9f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "95c43aebe2b20c414d9c7747858feae6b17f1039", "commitAfterChange": "fe27ba892c69a8ec67cf5a69235a590d5b9fe51e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\tdrawItem = 0;", "-\t\t\tRectangle rect = getClientArea ();", "-\t\t\tint headerHeight = getHeaderHeight ();", "-\t\t\trect.y += headerHeight;", "-\t\t\trect.height -= headerHeight;", "-\t\t\tif (drawItem != 0) {", "-\t\t\t\tint clientX = rect.x, clientWidth = rect.width; ", "-\t\t\t\tRect itemRect = new Rect();", "-\t\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "-\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, itemRect) == OS.noErr) {", "-\t\t\t\t\trect.width = rect.x + rect.width - itemRect.right;", "-\t\t\t\t\trect.x = itemRect.right;", "-\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "-\t\t\t\t}", "-\t\t\t\tint [] ids = childIds, state = new int [1];", "-\t\t\t\tint index = ids.length - 1;", "-\t\t\t\twhile (true) {", "-\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "-\t\t\t\t\tif (index < 0) break;", "-\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "-\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "-\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "-\t\t\t\t\t\tif (item != null) {", "-\t\t\t\t\t\t\tids = item.childIds;", "-\t\t\t\t\t\t\tindex = ids.length - 1;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "+\t\t\tint [] ids = childIds, state = new int [1];", "+\t\t\tint index = ids.length - 1;", "+\t\t\twhile (true) {", "+\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "+\t\t\t\tif (index < 0) break;", "+\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "+\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "+\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "+\t\t\t\t\tif (item != null) {", "+\t\t\t\t\t\tids = item.childIds;", "+\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "-\t\t\t\tif (index >= 0 && ids [index] != 0) {", "-\t\t\t\t\tint rc = -1;", "-\t\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "-\t\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (rc == OS.noErr) {", "-\t\t\t\t\t\trect.width = clientWidth;", "-\t\t\t\t\t\trect.x = clientX;", "-\t\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "-\t\t\t\t\t\trect.y = itemRect.bottom;", "-\t\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t}", "+\t\t\tif (index >= 0 && ids [index] != 0) {", "+\t\t\t\tint rc = -1;", "+\t\t\t\tRect itemRect = new Rect();", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t\tif (rc == OS.noErr) {", "+\t\t\t\t\tRectangle rect = getClientArea ();", "+\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "+\t\t\t\t\trect.y = itemRect.bottom;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\t\t}", "-\tdrawItem = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98ed8a4b2391cbaea1f22777c5f97271", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "28026a655813bd9f24a50f232a1cf44022e25e5d", "commitAfterChange": "0e0cce9700443c7c6d61520e7e61517f059294c9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\t\t\tint [] ids = childIds, state = new int [1];", "-\t\t\tint index = ids.length - 1;", "-\t\t\twhile (true) {", "-\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "-\t\t\t\tif (index < 0) break;", "-\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "-\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "-\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "-\t\t\t\t\tif (item != null) {", "-\t\t\t\t\t\tids = item.childIds;", "-\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\tRectangle rect = getClientArea ();", "+\t\t\tint headerHeight = getHeaderHeight ();", "+\t\t\trect.y += headerHeight;", "+\t\t\trect.height -= headerHeight;", "+\t\t\tif (childIds != null) {", "+\t\t\t\tint [] ids = childIds, state = new int [1];", "+\t\t\t\tint index = ids.length - 1;", "+\t\t\t\twhile (true) {", "+\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "+\t\t\t\t\tif (index < 0) break;", "+\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "+\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "+\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "+\t\t\t\t\t\tif (item != null) {", "+\t\t\t\t\t\t\tids = item.childIds;", "+\t\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tif (index >= 0 && ids [index] != 0) {", "-\t\t\t\tint rc = -1;", "-\t\t\t\tRect itemRect = new Rect();", "-\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "-\t\t\t\t} else {", "-\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "-\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect);\t\t\t\t\t\t", "+\t\t\t\tif (index >= 0 && ids [index] != 0) {", "+\t\t\t\t\tRect itemRect = new Rect();", "+\t\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\t\tOS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect) == OS.noErr) {", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (rc == OS.noErr) {", "-\t\t\t\t\tRectangle rect = getClientArea ();", "-\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "+\t\t\tfillBackground (handle, paintGC.handle, rect);"]}], "num": 5427}