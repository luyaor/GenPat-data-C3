{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bb8ddfddb7762b13c892c880d1903be", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8107887e44f134c01734efddc2c368f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ce35ae3484d952abe2556037c02e3a2f092ee737", "commitAfterChange": "e40ab8cb9db775e985391afcd53e99b0c5a9e165", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-\tSIZE size = new SIZE();", "+\tif (data.gdipGraphics != 0) {", "+\t\tint font = Gdip.Font_new(handle, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\tif (font == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tPointF pt = new PointF();", "+\t\tRectF bounds = new RectF();", "+\t\tchar[] buffer;", "+\t\tif (length != 0) {", "+\t\t\tbuffer = new char [length];", "+\t\t\tstring.getChars(0, length, buffer, 0);", "+\t\t} else {", "+\t\t\tbuffer = new char[]{' '};", "+\t\t\tlength = 1;", "+\t\t}", "+\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, length, font, pt, Gdip.StringFormat_GenericTypographic(), bounds);", "+\t\tGdip.Font_delete(font);", "+\t\treturn new Point((int)Math.round(bounds.Width), (int)Math.round(bounds.Height));", "+\t}", "+\tSIZE size = new SIZE();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae0a31ac3bfc140df637357e6b17e6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b410448b2ee30c39984d789197ecbf23e5a160a6", "commitAfterChange": "63863d93c2ee25d0b7bc77cb902dfe9620ae110e", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 112, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tif (data.gdipGraphics != 0) {", "-\t\tPointF pt = new PointF();", "-\t\tRectF bounds = new RectF();", "-\t\tchar[] buffer;", "-\t\tint length = string.length();", "-\t\tif (length != 0) {", "-\t\t\tbuffer = new char [length];", "-\t\t\tstring.getChars(0, length, buffer, 0);", "-\t\t} else {", "-\t\t\tbuffer = new char[]{' '};", "-\t\t}", "-\t\tint /*long*/ format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());", "-\t\tint formatFlags = Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces;", "-\t\tif ((data.style & SWT.MIRRORED) != 0) formatFlags |= Gdip.StringFormatFlagsDirectionRightToLeft;", "-\t\tGdip.StringFormat_SetFormatFlags(format, formatFlags);", "-\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(data.gdipFont, format) * 8} : new float[1];", "-\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); ", "-\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);", "-\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, data.gdipFont, pt, format, bounds);", "-\t\tGdip.StringFormat_delete(format);", "-\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));", "+\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\tPoint size = new Point(0, 0);", "+\t\tdrawText(gdipGraphics, string, 0, 0, flags, size);", "+\t\treturn size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d64ca3d2068ad4d8e16569cfb647d92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "05cda524c297dc9154d5e89277ecd461b4c576dd", "commitAfterChange": "3f3ea314bcc3b62789ad8e33c681cbdc3e30ccfd", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 103, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["+\tif (data.gdipGraphics != 0) {", "+\t\tint font = Gdip.Font_new(handle, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\tif (font == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tPointF pt = new PointF();", "+\t\tRectF bounds = new RectF();", "+\t\tchar[] buffer;", "+\t\tint length = string.length();", "+\t\tif (length != 0) {", "+\t\t\tbuffer = new char [length];", "+\t\t\tstring.getChars(0, length, buffer, 0);", "+\t\t} else {", "+\t\t\tbuffer = new char[]{' '};", "+\t\t}", "+\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericDefault());", "+\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];", "+\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); ", "+\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);", "+\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, font, pt, format, bounds);", "+\t\tGdip.StringFormat_delete(format);", "+\t\tGdip.Font_delete(font);", "+\t\treturn new Point(length == 0 ? 0 : (int)Math.round(bounds.Width), (int)Math.round(bounds.Height));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca12b04b6e39adc6885ebd694a587c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "05cda524c297dc9154d5e89277ecd461b4c576dd", "commitAfterChange": "3f3ea314bcc3b62789ad8e33c681cbdc3e30ccfd", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["+\tif (data.gdipGraphics != 0) {", "+\t\tinitGdip(true, false);", "+\t\tint length = string.length();", "+\t\tchar[] buffer = new char [length];", "+\t\tstring.getChars(0, length, buffer, 0);", "+\t\tint font = Gdip.Font_new(handle, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\tif (font == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tPointF pt = new PointF();", "+\t\tpt.X = x;", "+\t\tpt.Y = y;", "+\t\tint brush = Gdip.Pen_GetBrush(data.gdipPen);", "+\t\tint format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericDefault());", "+\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(font, format) * 8} : new float[1];", "+\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); ", "+\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);", "+\t\tGdip.Graphics_DrawString(data.gdipGraphics, buffer, length, font, pt, format, brush);", "+\t\tGdip.StringFormat_delete(format);", "+\t\tGdip.Font_delete(font);", "+\t\treturn;", "+\t}"]}], "num": 38456}