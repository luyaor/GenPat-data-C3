{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7240c16509d2f2adcec6c8ef0aeab987", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6d0edb19683d7c65355b84c9a25548", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "83b90a54ba3b915ddf5c905bc3c2d9ec47fef8c3", "commitAfterChange": "eb7f42555b902107cac1113c7ee603215303fa2b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\tfloat /*double*/ [] fg = gc.data.foreground;", "-\t\tNSColor foreground = NSColor.colorWithDeviceRed(fg[0], fg[1], fg[2], fg[3]);", "+\t\tNSRange range = new NSRange();", "-\t\tNSRange selectionRange = null;", "-\t\tNSColor selectionColor = null;", "-\t\t\tselectionColor = NSColor.colorWithDeviceRed(selectionBackground.handle[0], selectionBackground.handle[1], selectionBackground.handle[2], selectionBackground.handle[3]);", "-\t\t}", "-\t\tif (hasSelection) {", "-\t\t\tselectionRange = new NSRange();", "-\t\t\tselectionRange.location = translateOffset(selectionStart);", "-\t\t\tselectionRange.length = translateOffset(selectionEnd - selectionStart + 1);", "-\t\t\tlayoutManager.addTemporaryAttribute(OS.NSBackgroundColorAttributeName, selectionColor, selectionRange);", "+\t\t\tNSColor selectionColor = NSColor.colorWithDeviceRed(selectionBackground.handle[0], selectionBackground.handle[1], selectionBackground.handle[2], selectionBackground.handle[3]);", "+\t\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\t\tNSRect rect = new NSRect();", "+\t\t\tif (hasSelection) {", "+\t\t\t\tint /*long*/ pRectCount = OS.malloc(C.PTR_SIZEOF);", "+\t\t\t\trange.location = translateOffset(selectionStart);", "+\t\t\t\trange.length = translateOffset(selectionEnd - selectionStart + 1);", "+\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, pRectCount);", "+\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "+\t\t\t\tOS.memmove(rectCount, pRectCount, C.PTR_SIZEOF);", "+\t\t\t\tOS.free(pRectCount);", "+\t\t\t\tfor (int k = 0; k < rectCount[0]; k++, pArray += NSRect.sizeof) {", "+\t\t\t\t\tOS.memmove(rect, pArray, NSRect.sizeof);", "+\t\t\t\t\trect.x += pt.x;", "+\t\t\t\t\trect.y += pt.y;", "+\t\t\t\t\tpath.appendBezierPathWithRect(rect);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif ((flags & SWT.LAST_LINE_SELECTION) != 0) {", "+\t\t\t\tNSRect bounds = lineBounds[lineBounds.length - 1];", "+\t\t\t\trect.x = pt.x + bounds.x + bounds.width;", "+\t\t\t\trect.y = y + bounds.y;", "+\t\t\t\trect.width = (flags & SWT.FULL_SELECTION) != 0 ? 0x7fffffff : bounds.height / 3;", "+\t\t\t\trect.height = bounds.height;", "+\t\t\t\tpath.appendBezierPathWithRect(rect);", "+\t\t\t}", "+\t\t\tselectionColor.setFill();", "+\t\t\tpath.fill();", "-\t\t\tNSRange range = new NSRange();", "+\t\t\tfloat /*double*/ [] fg = gc.data.foreground;", "+\t\t\tNSColor foreground = NSColor.colorWithDeviceRed(fg[0], fg[1], fg[2], fg[3]);", "-\t\t}", "-\t\tif ((flags & SWT.LAST_LINE_SELECTION) != 0) {", "-\t\t\tNSRect bounds = lineBounds[lineBounds.length - 1];", "-\t\t\tNSRect rect = new NSRect();", "-\t\t\trect.x = pt.x + bounds.x + bounds.width;", "-\t\t\trect.y = y + bounds.y;", "-\t\t\trect.width = (flags & SWT.FULL_SELECTION) != 0 ? 0x7fffffff : bounds.height / 3;", "-\t\t\trect.height = bounds.height;", "-\t\t\tselectionColor.setFill();", "-\t\t\tNSBezierPath path = NSBezierPath.bezierPath();", "-\t\t\tpath.appendBezierPathWithRect(rect);", "-\t\t\tpath.fill();", "-\t\t}", "-\t\tif (selectionRange != null) {", "-\t\t\tlayoutManager.removeTemporaryAttribute(OS.NSBackgroundColorAttributeName, selectionRange);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad88e5bd27fe83b19ca80305ae008346", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "4e1f6b56c8d97deeab3788d9e0250c05a1da62a8", "commitAfterChange": "ef275e714ee29ce9ca54811c88ae99f34126c3fa", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Point getCaretLocation ()", "signatureAfterChange": " public Point getCaretLocation ()", "diff": ["-//\tNSText", "-//\tNSRange range = ((NSTextView)view).selectedRange();", "-\treturn null;", "+\tNSTextView widget = (NSTextView)view;", "+\tNSLayoutManager layoutManager = widget.layoutManager();", "+\tNSTextContainer container = widget.textContainer();", "+\tNSRange range = widget.selectedRange();", "+\tint /*long*/ pRectCount = OS.malloc(C.PTR_SIZEOF);", "+\tint /*long*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, container, pRectCount);", "+\tint /*long*/ [] rectCount = new int /*long*/ [1];", "+\tOS.memmove(rectCount, pRectCount, C.PTR_SIZEOF);", "+\tOS.free(pRectCount);", "+\tNSRect rect = new NSRect();", "+\tif (rectCount[0] > 0) OS.memmove(rect, pArray, NSRect.sizeof);", "+\treturn new Point((int)rect.x, (int)rect.y);"]}], "num": 1800}