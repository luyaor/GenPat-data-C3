{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc951404e230786110c35ca14c411077", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d94092066c37bc724be75a4464d0204", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "876ed09a49de9fd074ee75d74aaa5be9ca7961f3", "commitAfterChange": "ddffafae4e896b2e9ec78e332a5997a3daf99c21", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["+\t/*", "+\t* Bug in Windows.  Despite the fact that every item in the", "+\t* table always has LPSTR_TEXTCALLBACK, Windows caches the", "+\t* bounds for the selected items.  This means that ", "+\t* when you change the string to be something else, Windows", "+\t* correctly asks you for the new string but when the item", "+\t* is selected, the selection draws using the bounds of the", "+\t* previous item.  The fix is to reset LPSTR_TEXTCALLBACK", "+\t* even though it has not changed, causing Windows to flush", "+\t* cached bounds.", "+\t*/", "+\tif ((parent.style & SWT.VIRTUAL) == 0 && cached) {", "+\t\tint itemIndex = parent.indexOf (this);", "+\t\tif (itemIndex != -1) {", "+\t\t\tint hwnd = parent.handle;", "+\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\tlvItem.mask = OS.LVIF_TEXT;", "+\t\t\tlvItem.iItem = itemIndex;", "+\t\t\tlvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\tOS.SendMessage (hwnd, OS.LVM_SETITEM, 0, lvItem);", "+\t\t\tcached = false;", "+\t\t}", "+\t}", "+\tparent.setScrollWidth (this, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc1a454643db76628f7996739caba86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "876ed09a49de9fd074ee75d74aaa5be9ca7961f3", "commitAfterChange": "ddffafae4e896b2e9ec78e332a5997a3daf99c21", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void setFont (int index, Font font)", "signatureAfterChange": " public void setFont (int index, Font font)", "diff": ["+\tif (index == 0) {", "+\t\t/*", "+\t\t* Bug in Windows.  Despite the fact that every item in the", "+\t\t* table always has LPSTR_TEXTCALLBACK, Windows caches the", "+\t\t* bounds for the selected items.  This means that ", "+\t\t* when you change the string to be something else, Windows", "+\t\t* correctly asks you for the new string but when the item", "+\t\t* is selected, the selection draws using the bounds of the", "+\t\t* previous item.  The fix is to reset LPSTR_TEXTCALLBACK", "+\t\t* even though it has not changed, causing Windows to flush", "+\t\t* cached bounds.", "+\t\t*/", "+\t\tif ((parent.style & SWT.VIRTUAL) == 0 && cached) {", "+\t\t\tint itemIndex = parent.indexOf (this);", "+\t\t\tif (itemIndex != -1) {", "+\t\t\t\tint hwnd = parent.handle;", "+\t\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\t\tlvItem.mask = OS.LVIF_TEXT;", "+\t\t\t\tlvItem.iItem = itemIndex;", "+\t\t\t\tlvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_SETITEM, 0, lvItem);", "+\t\t\t\tcached = false;", "+\t\t\t}", "+\t\t}", "+\t\tparent.setScrollWidth (this, false);", "+\t}\t"]}], "num": 25692}