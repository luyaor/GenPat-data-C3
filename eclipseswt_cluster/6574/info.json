{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e89781e046b2808552a35493bfb48739", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4c1a596c4380ef7d11987441b52926", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e3ffa03ceaf7703e7ab3292990f53dd9ebc09848", "commitAfterChange": "bad1afba2bae87fcb485bb971088066d4ff1a6e9", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 109, "signatureBeforeChange": "\r \r boolean traverseItem (boolean next)", "signatureAfterChange": "\r \r boolean traverseItem (boolean next)", "diff": ["-\tif (next) return OS.PtContainerFocusPrev (handle, null) != 0;\r", "-\treturn OS.PtContainerFocusNext (handle, null) != 0;\r", "+\tControl [] children = parent._getChildren ();\r", "+\tint length = children.length;\r", "+\tint index = 0;\r", "+\twhile (index < length) {\r", "+\t\tif (children [index] == this) break;\r", "+\t\tindex++;\r", "+\t}\r", "+\t/*\r", "+\t* It is possible (but unlikely), that application\r", "+\t* code could have disposed the widget in focus in\r", "+\t* or out events.  Ensure that a disposed widget is\r", "+\t* not accessed.\r", "+\t*/\r", "+\tint start = index, offset = (next) ? 1 : -1;\r", "+\twhile ((index = (index + offset + length) % length) != start) {\r", "+\t\tControl child = children [index];\r", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {\r", "+\t\t\tif (child.setTabItemFocus ()) return true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca355a9a1415a97e6faeab86434a174f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d583df28ef4521b9f2420fbe05835676e837d84f", "commitAfterChange": "94e68629e2b5131cc8ba557c59631c2dea710775", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 142, "signatureBeforeChange": "\r boolean traverseItem (boolean next)", "signatureAfterChange": "\r boolean traverseItem (boolean next)", "diff": ["-\treturn OS.XmProcessTraversal (handle, next ? OS.XmTRAVERSE_NEXT : OS.XmTRAVERSE_PREV);\r", "+\tControl [] children = parent._getChildren ();\r", "+\tint length = children.length;\r", "+\tint index = 0;\r", "+\twhile (index < length) {\r", "+\t\tif (children [index] == this) break;\r", "+\t\tindex++;\r", "+\t}\r", "+\t/*\r", "+\t* It is possible (but unlikely), that application\r", "+\t* code could have disposed the widget in focus in\r", "+\t* or out events.  Ensure that a disposed widget is\r", "+\t* not accessed.\r", "+\t*/\r", "+\tint start = index, offset = (next) ? 1 : -1;\r", "+\twhile ((index = (index + offset + length) % length) != start) {\r", "+\t\tControl child = children [index];\r", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {\r", "+\t\t\tif (child.setTabItemFocus ()) return true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r"]}], "num": 6574}