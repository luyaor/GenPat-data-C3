{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5fd16a41f21041acd6e45c6aab249f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94160a0f8dd2b65f775d0879e657dbce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 125, "signatureBeforeChange": "  boolean traverseItem (boolean next)", "signatureAfterChange": "  boolean traverseItem (boolean next)", "diff": ["-\tControl [] children = parent._getChildren ();", "-\tint length = children.length;", "-\tint index = 0;", "-\twhile (index < length) {", "-\t\tif (children [index] == this) break;", "-\t\tindex++;", "-\t}", "-\t/*", "-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in focus in", "-\t* or out events.  Ensure that a disposed widget is", "-\t* not accessed.", "-\t*/", "-\tint start = index, offset = (next) ? 1 : -1;", "-\twhile ((index = (index + offset + length) % length) != start) {", "-\t\tControl child = children [index];", "-\t\tif (!child.isDisposed () && child.isTabItem ()) {", "-\t\t\tif (child.setTabItemFocus ()) return true;", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "731f9a92259e7360e7809aa5b715003b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "commitAfterChange": "43cccb7c09eeeeb743e40d795384af951511f59c", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 141, "signatureBeforeChange": "  boolean traverseItem (boolean next)", "signatureAfterChange": "  boolean traverseItem (boolean next)", "diff": ["+\tControl [] children = parent._getChildren ();", "+\tint length = children.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (children [index] == this) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\t*/", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = (index + offset + length) % length) != start) {", "+\t\tControl child = children [index];", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {", "+\t\t\tif (child.setTabItemFocus ()) return true;", "+\t\t}", "+\t}"]}], "num": 32884}