{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e9e4123102ab5d5104bb24075b81fe9", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d9eec0db9aced0e75a5d5eb4b0fadd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6671b08ea3a9774efb848e8b9d6b69601c057115", "commitAfterChange": "be3531ee8a78b3c07164fc4d0e23666bb66aed60", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+\tdrawItem = 0;", "+\tif (OS.HIVIEW) {", "+\t\tControl widget = findBackgroundControl ();", "+\t\tif (widget != null) {", "+\t\t\tRect rect = new Rect();", "+\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "+\t\t\tRectangle rect1 = getClientArea ();", "+\t\t\tint clientX = rect1.x, clientWidth = rect1.width; ", "+\t\t\tif (drawItem != 0) {", "+\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\trect1.width = rect1.x + rect1.width - rect.right;", "+\t\t\t\t\trect1.x = rect.right;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);\t", "+\t\t\t\t}", "+\t\t\t\tint rc = -1;", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, columnId, OS.kDataBrowserPropertyEnclosingPart, rect);", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, itemCount, columns [i].id, OS.kDataBrowserPropertyEnclosingPart, rect);\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (rc == OS.noErr) {", "+\t\t\t\t\trect1.width = clientWidth;", "+\t\t\t\t\trect1.x = clientX;", "+\t\t\t\t\trect1.height = rect1.y + rect1.height - rect.bottom;", "+\t\t\t\t\trect1.y = rect.bottom;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tdrawItem = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9b8abc4cffef8c774a54a2b14da2f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6671b08ea3a9774efb848e8b9d6b69601c057115", "commitAfterChange": "be3531ee8a78b3c07164fc4d0e23666bb66aed60", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\t} ", "+\t}", "+\tdrawItem = 0;", "+\tif (OS.HIVIEW) {", "+\t\tControl widget = findBackgroundControl ();", "+\t\tif (widget != null) {", "+\t\t\tRectangle rect1 = getClientArea ();", "+\t\t\tif (drawItem != 0) {", "+\t\t\t\tRect rect = new Rect();", "+\t\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "+\t\t\t\tint clientX = rect1.x, clientWidth = rect1.width; ", "+\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\trect1.width = rect1.x + rect1.width - rect.right;", "+\t\t\t\t\trect1.x = rect.right;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t\t}", "+\t\t\t\tint [] ids = childIds, state = new int [1];", "+\t\t\t\tint index = ids.length - 1;", "+\t\t\t\twhile (true) {", "+\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "+\t\t\t\t\tif (index < 0) break;", "+\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "+\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "+\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "+\t\t\t\t\t\tif (item != null) {", "+\t\t\t\t\t\t\tids = item.childIds;", "+\t\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (index >= 0 && ids [index] != 0) {", "+\t\t\t\t\tint rc = -1;", "+\t\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, rect);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, rect);\t\t\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (rc == OS.noErr) {", "+\t\t\t\t\t\trect1.width = clientWidth;", "+\t\t\t\t\t\trect1.x = clientX;", "+\t\t\t\t\t\trect1.height = rect1.y + rect1.height - rect.bottom;", "+\t\t\t\t\t\trect1.y = rect.bottom;", "+\t\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tdrawItem = 0;"]}], "num": 39236}