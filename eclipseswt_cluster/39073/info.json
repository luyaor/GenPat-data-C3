{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6984736f1c0dc92fdce5e15a745db6d6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "153b8ec6178b0df690d40b60fa95507c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1c6a4189f07d97e9405f58322637972f78a68429", "commitAfterChange": "a11744334121c31b812d90d1d6c723eac3d03dc2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r void releaseWidget ()", "signatureAfterChange": "\r \r void releaseWidget ()", "diff": ["-\t\r", "+\r", "-\t* of items in a table (>1000), it is much faster to\r", "-\t* delete each item with LVM_DELETEITEM rather than\r", "-\t* using LVM_DELETEALLITEMS.  The fix is to delete the\r", "-\t* items, one by one.\r", "+\t* of columns and items in a table (>1000) where each\r", "+\t* of the subitems in the table has a string, it is much\r", "+\t* faster to delete each item with LVM_DELETEITEM rather\r", "+\t* than using LVM_DELETEALLITEMS.  The fix is to detect\r", "+\t* this case and delete the items, one by one.\r", "-\t*/\r", "-\t/* Turn off redraw and leave it off */\r", "-\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "-\tfor (int i=itemCount-1; i>=0; --i) {\r", "-\t\tignoreSelect = true;\r", "-\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);\r", "-\t\tignoreSelect = false;\r", "-\t\tTableItem item = items [i];\r", "-\t\tif (!item.isDisposed ()) item.releaseResources ();\r", "+\t*/\t\r", "+\tif (columnCount > 1) {\r", "+\t\t/* Turn off redraw and leave it off */\r", "+\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "+\t\tfor (int i=itemCount-1; i>=0; --i) {\r", "+\t\t\tignoreSelect = true;\r", "+\t\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);\r", "+\t\t\tignoreSelect = false;\r", "+\t\t\tTableItem item = items [i];\r", "+\t\t\tif (!item.isDisposed ()) item.releaseResources ();\r", "+\t\t}\r", "+\t} else {\t\r", "+\t\tfor (int i=0; i<itemCount; i++) {\r", "+\t\t\tTableItem item = items [i];\r", "+\t\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "+\t\t}\r", "-\t\r", "-\t/*\r", "-\t* This code is intentionally commmented.  This is\r", "-\t* the correct code, assuming that the problem with\r", "-\t* LVM_DELETEALLITEMS did not occur.\r", "-\t*/\r", "-//\tfor (int i=0; i<itemCount; i++) {\r", "-//\t\tTableItem item = items [i];\r", "-//\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "-//\t}\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9758d9c239fb4b34a1ae79bd30b6db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "d24e17d0f9b5a1bd6a237f540a71a2065414834b", "commitAfterChange": "72d717a6728316e3439a05206fe1326f30426bf0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\t\tif (styledText.isFixedLineHeight()) {", "+\t\t\tfor (int i = 0; i < styleCount; i++) {", "+\t\t\t\tif (styles[i].isVariableHeight()) {", "+\t\t\t\t\tstyledText.setVariableLineHeight();", "+\t\t\t\t\tstyledText.redraw();", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 39073}