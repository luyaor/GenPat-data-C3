{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d1d8a8bf13acc4e1884573829c8f355", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5329d1e0358aaf9a0f2a1d7d6d1cf7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "5d38390584adf79405cd86a4c28992ccdbd567df", "commitAfterChange": "b0a0bcf30f09c2ffbb2137bd933ec7f8ce62d60c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["-\tif (fixString) OS.XtSetValues (handle, argList1, argList1.length / 2);\t", "+\tif (fixString) OS.XtSetValues (handle, argList1, argList1.length / 2);", "+\tif ((style & SWT.WRAP) != 0) {", "+\t\tint [] argList = {OS.XmNlabelType, 0,};", "+\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\t\tif (argList [1] == OS.XmSTRING) _setText (text);", "+\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65da6e1e52d6029f87a1ebf3a79c6fc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "3812951767bdd421163e3393f42b3f735e19e75c", "commitAfterChange": "f88722fffe624a40f22ab25585e8c6a2fc7e9ece", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void clearSelection ()", "signatureAfterChange": "\r public void clearSelection ()", "diff": ["-\tOS.PtTextSetSelection (handle, new int [] {0}, new int [] {0});\r", "+\tint [] position = {0};\r", "+\tif ((style & SWT.SINGLE) != 0) {\r", "+\t\tint [] args = {OS.Pt_ARG_CURSOR_POSITION, 0, 0};\r", "+\t\tOS.PtGetResources (handle, args.length / 3, args);\r", "+\t\tposition [0] = args [1];\r", "+\t}\r", "+\tOS.PtTextSetSelection (handle, position, position);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e641f242f338c9ba175d2c30c3c0c1aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d583df28ef4521b9f2420fbe05835676e837d84f", "commitAfterChange": "94e68629e2b5131cc8ba557c59631c2dea710775", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 137, "signatureBeforeChange": "\r int traversalCode ()", "signatureAfterChange": "\r int traversalCode (int key, XKeyEvent xEvent)", "diff": ["-int traversalCode () {\r", "-\tint code = SWT.TRAVERSE_ESCAPE | SWT.TRAVERSE_RETURN;\r", "-\tif (getNavigationType () == OS.XmNONE) {\r", "-\t\tcode |= SWT.TRAVERSE_ARROW_NEXT | SWT.TRAVERSE_ARROW_PREVIOUS;\r", "-\t} else {\r", "-\t\tcode |= SWT.TRAVERSE_TAB_NEXT | SWT.TRAVERSE_TAB_PREVIOUS;\r", "-\t}\r", "+int traversalCode (int key, XKeyEvent xEvent) {\r", "+\tint [] argList = new int [] {OS.XmNtraversalOn, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\tif (argList [1] == 0) return 0;\r", "+\tint code = SWT.TRAVERSE_ESCAPE | SWT.TRAVERSE_RETURN | SWT.TRAVERSE_TAB_NEXT | SWT.TRAVERSE_TAB_PREVIOUS;\r", "+\tif (getNavigationType () == OS.XmNONE) code |= SWT.TRAVERSE_ARROW_NEXT | SWT.TRAVERSE_ARROW_PREVIOUS;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "746ad773472949049d6124fdcc55460f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "73689a8a220b036d97224b0ca3c5b0b6a7948c55", "commitAfterChange": "b9ecdd374f450f0da0c37ffae67be77912ef4ce9", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["+\t\tint [] argList = {OS.XmNminWidth, 0, OS.XmNminHeight, 0};", "+\t\tOS.XtGetValues (shellHandle, argList, argList.length / 2);", "-\t\twidth = Math.max (width - trimWidth (), 1);", "-\t\theight = Math.max (height - trimHeight (), 1);", "+\t\twidth = Math.max (1, Math.max (argList [1], width - trimWidth ()));", "+\t\theight = Math.max (1, Math.max (argList [3], height - trimHeight ()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f06adfb7b6b17385eb3970e6debfe7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r int processHide (int info)", "signatureAfterChange": "\r \r int processHide (int info)", "diff": ["+\tif (cascade != null) {\r", "+\t\tint [] args = {OS.Pt_ARG_MENU_FLAGS, 0, OS.Pt_MENU_CHILD};\r", "+\t\tOS.PtSetResources (handle, args.length / 3, args);\r", "+\t\tint shellHandle = parent.topHandle ();\r", "+\t\tOS.PtReParentWidget (handle, shellHandle);\r", "+\t}\r", "-\treturn OS.Pt_CONTINUE;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6874eba6347504c6c795f18c3d62ce5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "68eede6cc61dccf58685c545d1d833d2102b72d0", "commitAfterChange": "ae31f3bcc3737cd7f5b9bf587ae292bd9b082874", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\tif (changed && resize && layout != null) layout.layout (this, false);", "+\tif (changed && resize) {", "+\t\tif (focusHandle != 0) {", "+\t\t\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0};", "+\t\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\t\t\tOS.XtConfigureWidget (focusHandle, 0, 0, argList [1], argList [3], 0);", "+\t\t}", "+\t\tif (layout != null) layout.layout (this, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406ec110f8b67398a7ff406c2f090a7a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r public void dispose ()", "signatureAfterChange": "\r \r public void dispose ()", "diff": ["+\t* Note:  It is valid to attempt to dispose a widget\r", "+\t* more than once.  If this happens, fail silently.\r", "+\t*/\r", "+\tif (!isValidWidget ()) return;\r", "+\r", "+\t/*\r", "-//\t/*\r", "-//\t* Note:  It is valid to attempt to dispose a widget\r", "-//\t* more than once.  If this happens, fail silently.\r", "-//\t*/\r", "-//\tif (!isValidWidget ()) return;\r", "+\r", "+\t/*\r", "+\t* Feature in Motif.  When an override-redirected shell\r", "+\t* is disposed, Motif does not assign a new active top\r", "+\t* level shell.  The parent shell appears to be active,\r", "+\t* but XGetInputFocus returns the root window, not the\r", "+\t* parent.  The fix is to make the parent be the active\r", "+\t* top level shell when the child shell is disposed.\r", "+\t*/\r", "+\tComposite parent = this.parent;\r", "+\tint [] argList = {OS.XmNoverrideRedirect, 0};\r", "+\tOS.XtGetValues (shellHandle, argList, argList.length / 2);\r", "+\tif (parent != null && argList [1] != 0) {\r", "+\t\tShell shell = parent.getShell ();\r", "+\t\tshell.bringToTop ();\r", "+\t}\r", "+\t\r", "+\t/*\r", "+\t* This code intentionally commented.\r", "+\t*/\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a50c8eff187af464af907be4560f318", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "cb58743f63bf394755c471ec12d36b84a81733c1", "commitAfterChange": "fb4b0a49835df93fc6af652fe762b3db40d3024f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t}\t", "+\t}", "+\tif (hHint == SWT.DEFAULT) {", "+\t\tint [] argList = {OS.XmNarrowSize, 0};", "+\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\t\ttrim.height = Math.max (trim.height, argList [1] * 2);", "+\t}"]}], "num": 54120}