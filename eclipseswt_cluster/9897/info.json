{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84f605d6e3bca3238392df8c8fabd70e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daeac5b16d2e12672896960663cb2273", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 55, "signatureBeforeChange": " void removeColumn(TreeColumn column)", "signatureAfterChange": " void removeItem(TreeItem2 item)", "diff": ["-void removeColumn(TreeColumn column) {", "-\tint numColumns = getColumnCount();", "-\tint index = column.getIndex();", "-", "-\tTreeColumn[] newColumns = new TreeColumn[columns.length - 1];", "-\tSystem.arraycopy(columns, 0, newColumns, 0, index);", "-\tSystem.arraycopy(columns, index + 1, newColumns, index, columns.length - index);", "-\tcolumns = newColumns;", "-\t", "-\tTreeColumn lastColumn = columns[columns.length - 1];", "-\tgetHorizontalBar().setMaximum(lastColumn.getX() + lastColumn.width);", "+ */", "+void removeItem(TreeItem2 item) {", "+\tgetRoot().removeItem(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2caacfb06967000fee0353fc4d2bf9e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " void addItem (TreeItem2 item, int index)", "signatureAfterChange": " void calculateVisibleItemCountParent()", "diff": ["-}", "-void addItem (TreeItem2 item, int index) {", "-\t/* adds a child item to the receiver */", "-\tTreeItem2[] newChildren = new TreeItem2 [items.length + 1];", "-\tSystem.arraycopy (items, 0, newChildren, 0, index);", "-\tnewChildren[index] = item;", "-\tSystem.arraycopy (items, index, newChildren, index + 1, items.length - index);", "-\titems = newChildren;", "-\t/* if item should be available immediately then update parent accordingly */", "-\tif (item.isAvailable ()) {", "-\t\tparent.makeAvailable (item);", "-\t\tparent.redrawFromItemDownwards (availableIndex);", "-\t} else {", "-\t\t/* receiver will need update if this is its first child */", "-\t\tif (isAvailable () && items.length == 1) redrawItem ();", "+ */", "+void calculateVisibleItemCountParent() {", "+\tTreeItem2 parentItem = getParentItem();", "+", "+\tif (parentItem != null) {", "+\t\tparentItem.calculateVisibleItemCount();", "+\t}", "+\telse {", "+\t\tgetParent().getRoot().calculateVisibleItemCount();"]}], "num": 9897}