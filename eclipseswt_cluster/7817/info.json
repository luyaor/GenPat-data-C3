{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dae2fa90e943ff80f291086ab64940e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86d5bdb134c5cbebd176d40c796ff6aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int findPart (int column, String part)", "signatureAfterChange": "  int findPart (int column, String partName)", "diff": ["-int findPart (int column, String part) {", "-\tupdateLayout(handle);", "-\tif (OS.UIElement_Visibility (handle) != OS.Visibility_Visible) return 0;", "-\tint contentPresenter = findContentPresenter (handle, column);", "-\tint cellTemplate;", "-\tif (parent.columnCount != 0) {", "-\t\tint columnHandle = OS.GridViewColumnCollection_default (parent.columns, column);", "-\t\tcellTemplate = OS.GridViewColumn_CellTemplate (columnHandle);", "-\t\tOS.GCHandle_Free (columnHandle);", "+int findPart (int column, String partName) {", "+\tif (contentHandle == 0) updateLayout (handle);", "+\tif (contentHandle == 0) return 0;", "+\tint name = createDotNetString (partName, false);", "+\tint result = 0;", "+\tif (parent.columnCount == 0) {", "+\t\tint template = OS.TreeViewItem_HeaderTemplate (handle);\t\t", "+\t\tresult = OS.FrameworkTemplate_FindName (template, name, contentHandle);", "+\t\tOS.GCHandle_Free (template);", "-\t\tcellTemplate = OS.TreeViewItem_HeaderTemplate (handle);", "+\t\tint rowPresenter = OS.HeaderedItemsControl_Header (handle);", "+\t\tint contentPresenter = OS.VisualTreeHelper_GetChild (rowPresenter, column);", "+\t\tOS.GCHandle_Free (rowPresenter);", "+\t\tint columnHandle = OS.GridViewColumnCollection_default (parent.columns, column);", "+\t\tint template = OS.GridViewColumn_CellTemplate (columnHandle);", "+\t\tOS.GCHandle_Free (columnHandle);", "+\t\tresult = OS.FrameworkTemplate_FindName (template, name, contentPresenter);", "+\t\tOS.GCHandle_Free (contentPresenter);", "+\t\tOS.GCHandle_Free (template);", "-\tint name = createDotNetString (part, false);", "-\tint result = OS.FrameworkTemplate_FindName (cellTemplate, name, contentPresenter);", "-\tif (name != 0) OS.GCHandle_Free (name);", "-\tOS.GCHandle_Free (cellTemplate);", "-\tOS.GCHandle_Free (contentPresenter);", "+\tOS.GCHandle_Free (name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b63b84e8c0f32c6db84f7d3d18c48dc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "9d008cfe436649c9995d00921b36cf25c162fd07", "commitAfterChange": "d60b68c926b9331861033513a7a73bb253f9d933", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  double computeWidth (int columnIndex)", "signatureAfterChange": "  double computeWidth (int columnIndex)", "diff": ["-\tint contentPresenter = OS.VisualTreeHelper_GetChild (rowPresenter, columnIndex);", "-\t/*", "-\t* Bug in WPF. The DesiredSize property of the content presenter is always 0", "-\t* for all columns except the first column. The work around is to Measure the", "-\t* content presenter before asking for its DesiredSize. Calling Measure on the ", "-\t* first column does not work because it will set DesiredSize to be equal to the ", "-\t* available size you pass into the Measure function. ", "-\t*/", "-\tif (columnIndex != 0) { ", "-\t\tint availSize = OS.gcnew_Size (0x7FFFFFFF,0x7FFFFFFF);", "-\t\tOS.UIElement_Measure (contentPresenter, availSize);", "-\t\tOS.GCHandle_Free (availSize);", "+\tdouble width = 0;", "+\tif (rowPresenter != 0) {", "+\t\tint contentPresenter = OS.VisualTreeHelper_GetChild (rowPresenter, columnIndex);", "+\t\t/*", "+\t\t * Bug in WPF. The DesiredSize property of the content presenter is always 0", "+\t\t * for all columns except the first column. The work around is to Measure the", "+\t\t * content presenter before asking for its DesiredSize. Calling Measure on the ", "+\t\t * first column does not work because it will set DesiredSize to be equal to the ", "+\t\t * available size you pass into the Measure function. ", "+\t\t */", "+\t\tif (columnIndex != 0) { ", "+\t\t\tint availSize = OS.gcnew_Size (0x7FFFFFFF,0x7FFFFFFF);", "+\t\t\tOS.UIElement_Measure (contentPresenter, availSize);", "+\t\t\tOS.GCHandle_Free (availSize);", "+\t\t}", "+\t\tint size = OS.UIElement_DesiredSize (contentPresenter);", "+\t\twidth = OS.Size_Width (size);", "+\t\tOS.GCHandle_Free (size);", "+\t\tOS.GCHandle_Free (contentPresenter);", "+\t\tOS.GCHandle_Free (rowPresenter);", "-\tint size = OS.UIElement_DesiredSize (contentPresenter);", "-\tdouble width = OS.Size_Width (size);", "-\tOS.GCHandle_Free (size);", "-\tOS.GCHandle_Free (rowPresenter);", "-\tOS.GCHandle_Free (contentPresenter);"]}], "num": 7817}