{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b3ba653cc58d103f27f7e5dfcd4c48b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0d48987bf1be5a31dbcf68d7f0bf1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5a67329473cca4f7da1b1cbb34f4b51fee718d4c", "commitAfterChange": "86857ed6acdf97fa33137b9a82dae79eb6e75680", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  int getFontAscent (int font)", "signatureAfterChange": "  int getFontAscent (int font)", "diff": ["-\t\t\tint fontAscent = Math.max (fontStruct.ascent, fontStruct.max_bounds_ascent);", "-\t\t\tif (fontAscent > ascent) ascent = fontAscent;", "+\t\t\tif (fontStruct.ascent > ascent) ascent = fontStruct.ascent;", "-\t\t\t\tint fontAscent = Math.max (fontStruct.ascent, fontStruct.max_bounds_ascent);", "-\t\t\t\tif (fontAscent > ascent) ascent = fontAscent;", "+\t\t\t\tif (fontStruct.ascent > ascent) ascent = fontStruct.ascent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ae0b75faaa65ca62176d9c7e0af8ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "702843eb176857b81eac916472012f8dfc2b10f1", "commitAfterChange": "95b0a14142cb2db948afcbe5527085b1835fbf7e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void remove (int start, int end)", "signatureAfterChange": " public void remove (int start, int end)", "diff": ["-\t/*", "-\t* Feature in Motif.  An index out of range handled", "-\t* correctly by the list widget but causes an unwanted", "-\t* Xm Warning.  The fix is to check the range before", "-\t* deleting an item.", "-\t*/", "-\tif (!(0 <= start && start < argList [1])) {", "+\tif (!(0 <= start && start <= end && end < argList [1])) {", "-\tint newEnd = Math.min (end, argList [1] - 1);", "-\tfor (int i = start; i <= newEnd; i++) {", "+\tfor (int i = start; i <= end; i++) {", "-\tif (end >= argList [1]) error (SWT.ERROR_INVALID_RANGE);"]}], "num": 1180}