{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d999dd3219c6b7c6267a6ee5bee5b877", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87a528908824da49f33726f4f1806647", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/DPIUtil.java", "commitBeforeChange": "15545d017cfc49844170a7161c0e82dbcff0ad24", "commitAfterChange": "2f244e084ac5cca7ad4b8b06fd1e59e2a64926f4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tstatic Map<String, Boolean> getImagePathAtZoom (ImageFileNameProvider provider, int zoom)", "signatureAfterChange": " \tstatic String validateAndGetImagePathAtZoom (ImageFileNameProvider provider, int zoom, boolean[] found)", "diff": ["-\t@SuppressWarnings(\"unchecked\")", "-\tstatic Map<String, Boolean> getImagePathAtZoom (ImageFileNameProvider provider, int zoom) {", "-\t\tif (provider == null) return Collections.EMPTY_MAP;", "+\tstatic String validateAndGetImagePathAtZoom (ImageFileNameProvider provider, int zoom, boolean[] found) {", "+\t\tif (provider == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tfound [0] = (filename != null);", "-\t\tif (zoom != 100 && filename == null) return Collections.singletonMap (provider.getImagePath (100), Boolean.FALSE);", "-\t\treturn Collections.singletonMap (filename, Boolean.TRUE);", "+\t\tif (zoom != 100 && !found [0]) filename = provider.getImagePath (100);", "+\t\tif (filename == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\treturn filename;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "481bfe74218f650d673d61d91aa4316d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/DPIUtil.java", "commitBeforeChange": "15545d017cfc49844170a7161c0e82dbcff0ad24", "commitAfterChange": "2f244e084ac5cca7ad4b8b06fd1e59e2a64926f4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tstatic Map<ImageData, Boolean> getImageDataAtZoom (ImageDataProvider provider, int zoom)", "signatureAfterChange": " \tstatic ImageData validateAndGetImageDataAtZoom (ImageDataProvider provider, int zoom, boolean[] found)", "diff": ["-\t@SuppressWarnings(\"unchecked\")", "-\tstatic Map<ImageData, Boolean> getImageDataAtZoom (ImageDataProvider provider, int zoom) {", "-\t\tif (provider == null) return Collections.EMPTY_MAP;", "+\tstatic ImageData validateAndGetImageDataAtZoom (ImageDataProvider provider, int zoom, boolean[] found) {", "+\t\tif (provider == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t\tfound [0] = (data != null);", "-\t\tif (zoom != 100 && data == null) return Collections.singletonMap (provider.getImageData (100), Boolean.FALSE);", "-\t\treturn Collections.singletonMap (data, Boolean.TRUE);", "+\t\tif (zoom != 100 && !found [0]) data = provider.getImageData (100);", "+\t\tif (data == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\treturn data;"]}], "num": 58229}