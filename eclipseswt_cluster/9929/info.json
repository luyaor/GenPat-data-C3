{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dd1a3408d0af47488c8bda6246fcb02", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18253022a384c3857fbbbda5e47d020", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void setCursor (Cursor cursor)", "signatureAfterChange": "  public void setCursor (Cursor cursor)", "diff": ["- */", "+", "-\tif (cursor == null) {", "-\t\tcursor= null;", "-\t} else {", "-\t\tif (cursor.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\tthis.cursor= cursor;", "+\tif (cursor != null && cursor.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tthis.cursor = cursor;", "+\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "+\tOS.GetGlobalMouse (where);", "+\tint [] theWindow = new int [1];", "+\tif (OS.FindWindow (where, theWindow) != OS.inContent) return;", "+\tif (theWindow [0] == 0) return;", "+\tRect rect = new Rect ();", "+\tOS.GetWindowBounds (theWindow [0], (short) OS.kWindowContentRgn, rect);", "+\tCGPoint inPoint = new CGPoint ();", "+\tinPoint.x = where.h - rect.left;", "+\tinPoint.y = where.v - rect.top;", "+\tint [] theRoot = new int [1];", "+\tOS.GetRootControl (theWindow [0], theRoot);", "+\tint [] theControl = new int [1];", "+\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "+\tint cursorControl = theControl [0];", "+\twhile (theControl [0] != 0 && theControl [0] != handle) {", "+\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t}", "+\tif (theControl [0] == 0) return;", "+\torg.eclipse.swt.internal.carbon.Point localPoint = new org.eclipse.swt.internal.carbon.Point ();", "+\tlocalPoint.h = (short) inPoint.x;", "+\tlocalPoint.v = (short) inPoint.y;", "+\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\tboolean [] cursorWasSet = new boolean [1];", "+\tOS.HandleControlSetCursor (cursorControl, localPoint, (short) modifiers, cursorWasSet);", "+\tif (!cursorWasSet [0]) OS.SetThemeCursor (OS.kThemeArrowCursor);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f07d2ded90445f38ee1466648d168f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 39, "signatureBeforeChange": " public Control getCursorControl ()", "signatureAfterChange": "  public Control getCursorControl ()", "diff": ["- */", "-public Control getCursorControl () {", "-\tSystem.out.println(\"Display.getCursorControl: nyi\");", "-\t", "-\t/* AW", "-\tint [] unused = new int [1], buffer = new int [1];", "-\tint xWindow, xParent = OS.XDefaultRootWindow (xDisplay);", "-\tdo {", "-\t\tif (OS.XQueryPointer (", "-\t\t\txDisplay, xParent, unused, buffer,", "-\t\t\tunused, unused, unused, unused, unused) == 0) return null;", "-\t\tif ((xWindow = buffer [0]) != 0) xParent = xWindow;", "-\t} while (xWindow != 0);", "-\tint handle = OS.XtWindowToWidget (xDisplay, xParent);", "-\tif (handle == 0) return null;", "-\tdo {", "-\t\tWidget widget = WidgetTable.get (handle);", "-\t\tif (widget != null && widget instanceof Control) {", "-\t\t\tControl control = (Control) widget;", "-\t\t\tif (control.getEnabled ()) return control;", "-\t\t}", "-\t} while ((handle = OS.XtParent (handle)) != 0);", "-\t*/", "+", "+public Control getCursorControl () {", "+\tcheckDevice ();", "+\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "+\tOS.GetGlobalMouse (where);", "+\tint [] theWindow = new int [1];", "+\tif (OS.FindWindow (where, theWindow) != OS.inContent) return null;", "+\tif (theWindow [0] == 0) return null;", "+\tRect rect = new Rect ();", "+\tOS.GetWindowBounds (theWindow [0], (short) OS.kWindowContentRgn, rect);", "+\tCGPoint inPoint = new CGPoint ();", "+\tinPoint.x = where.h - rect.left;", "+\tinPoint.y = where.v - rect.top;", "+\tint [] theRoot = new int [1];", "+\tOS.GetRootControl (theWindow [0], theRoot);", "+\tint [] theControl = new int [1];", "+\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "+\tif (theControl [0] != 0) {", "+\t\tdo {", "+\t\t\tWidget widget = WidgetTable.get (theControl [0]);", "+\t\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t\tControl control = (Control) widget;", "+\t\t\t\tif (control.getEnabled ()) return control;", "+\t\t\t}", "+\t\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t\t} while (theControl [0] != 0);", "+\t}", "+\tWidget widget = WidgetTable.get (theRoot [0]);", "+\tif (widget != null && widget instanceof Control) return (Control) widget;", "+\treturn null;", "+}"]}], "num": 9929}