{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bbe4abc8e56bfa8b4534bc775f1f431", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3bbd0ea8b113016e8ae5f38a03774f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "cd1cc037b1168f84b19a92aa831a5521ef1002b1", "commitAfterChange": "85174ac8bb4fb0238065cc23ba99cf50babde940", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tRECT oldRect = new RECT ();", "-\tOS.GetWindowRect (handle, oldRect);", "-\tint oldWidth = oldRect.right - oldRect.left;", "-\tint oldHeight = oldRect.bottom - oldRect.top;", "-\tint border = getBorderWidth ();", "-\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + (border * 2);", "-\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + (border * 2);", "-\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);", "-\tignoreResize = true;", "-\tif (redraw) OS.UpdateWindow (handle);", "-\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;", "-\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);", "-\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "-\tif (count != 0) {", "+\tif ((style & SWT.VERTICAL) != 0) {", "-\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, count - 1, rect);", "-\t\twidth = Math.max (width, rect.right);", "-\t\theight = Math.max (height, rect.bottom);", "+\t\tTBBUTTON lpButton = new TBBUTTON ();", "+\t\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, i, rect);", "+\t\t\theight = Math.max (height, rect.bottom);", "+\t\t\tOS.SendMessage (handle, OS.TB_GETBUTTON, i, lpButton);", "+\t\t\tif ((lpButton.fsStyle & OS.BTNS_SEP) == 0) {", "+\t\t\t\twidth = Math.max (width, rect.right);", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tRECT oldRect = new RECT ();", "+\t\tOS.GetWindowRect (handle, oldRect);", "+\t\tint oldWidth = oldRect.right - oldRect.left;", "+\t\tint oldHeight = oldRect.bottom - oldRect.top;", "+\t\tint border = getBorderWidth ();", "+\t\tint newWidth = wHint == SWT.DEFAULT ? 0x3FFF : wHint + border * 2;", "+\t\tint newHeight = hHint == SWT.DEFAULT ? 0x3FFF : hHint + border * 2;", "+\t\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\tignoreResize = true;", "+\t\tif (redraw) OS.UpdateWindow (handle);", "+\t\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOREDRAW | OS.SWP_NOZORDER;", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, newWidth, newHeight, flags);", "+\t\tint count = OS.SendMessage (handle, OS.TB_BUTTONCOUNT, 0, 0);", "+\t\tif (count != 0) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.SendMessage (handle, OS.TB_GETITEMRECT, count - 1, rect);", "+\t\t\twidth = Math.max (width, rect.right);", "+\t\t\theight = Math.max (height, rect.bottom);", "+\t\t}", "+\t\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);", "+\t\tif (redraw) OS.ValidateRect (handle, null);", "+\t\tignoreResize = false;", "-\tOS.SetWindowPos (handle, 0, 0, 0, oldWidth, oldHeight, flags);", "-\tif (redraw) OS.ValidateRect (handle, null);", "-\tignoreResize = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f4b5f3063b976e3d621ce6552e41270", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "c7335c0f205812ea0c3e6b492f36f313fd885911", "commitAfterChange": "a4edb9923d601c62393d7dc6943e1924ebf22ff6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  int CCHookProc (int hdlg, int uiMsg, int lParam, int lpData)", "signatureAfterChange": "  int CCHookProc (int hdlg, int uiMsg, int lParam, int lpData)", "diff": ["-\t\tcase OS.WM_INITDIALOG:", "+\t\tcase OS.WM_INITDIALOG: {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.GetWindowRect (hdlg, rect);", "+\t\t\twidth = rect.right - rect.left;", "+\t\t\theight = rect.bottom - rect.top;", "+\t\t}", "+\t\tcase OS.WM_DESTROY: {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.GetWindowRect (hdlg, rect);", "+\t\t\tint newWidth = rect.right - rect.left;", "+\t\t\tint newHeight = rect.bottom - rect.top;", "+\t\t\tif (newWidth < width || newHeight < height) {", "+\t\t\t\t//display.fullOpen = false;", "+\t\t\t} else {", "+\t\t\t\tif (newWidth > width || newHeight > height) {", "+\t\t\t\t\t//display.fullOpen = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}"]}], "num": 23257}