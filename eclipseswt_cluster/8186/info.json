{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "759b68acb20197193d72508b9be52529", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e1f6fb2d1183b92fcf34f1f130fa46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4ae7c7f058994a04613cca5e83c6754094e0435f", "commitAfterChange": "630867c677acb403ca1cea9965df17e2af419fee", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  static void setCairoClip(int cairo, int clipRgn)", "signatureAfterChange": "  static void setCairoClip(int cairo, int clipRgn)", "diff": ["-\tint[] nRects = new int[1];", "-\tint /*long*/[] rects = new int /*long*/[1];", "-\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);", "-\tGdkRectangle rect = new GdkRectangle();", "-\tfor (int i=0; i<nRects[0]; i++) {", "-\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\tCairo.cairo_rectangle(cairo, rect.x, rect.y, rect.width, rect.height);", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\tOS.gdk_cairo_region(cairo, clipRgn);", "+\t} else {", "+\t\tint[] nRects = new int[1];", "+\t\tint /*long*/[] rects = new int /*long*/[1];", "+\t\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);", "+\t\tGdkRectangle rect = new GdkRectangle();", "+\t\tfor (int i=0; i<nRects[0]; i++) {", "+\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "+\t\t\tCairo.cairo_rectangle(cairo, rect.x, rect.y, rect.width, rect.height);", "+\t\t}", "+\t\tif (rects[0] != 0) OS.g_free(rects[0]);", "-\tCairo.cairo_new_path(cairo);", "-\tif (rects[0] != 0) OS.g_free(rects[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abae57b7a755ab0d3f20398278af7800", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e6aa5ace75b7d76f999c03a1263487de3b558d2d", "commitAfterChange": "d2e5c07029c231cf71046f566a084417747c40b0", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  static void setCairoRegion(long cairo, long rgn)", "signatureAfterChange": "  static void setCairoRegion(long cairo, long rgn)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\tOS.gdk_cairo_region(cairo, rgn);", "-\t} else {", "-\t\tint[] nRects = new int[1];", "-\t\tlong /*int*/[] rects = new long /*int*/[1];", "-\t\tOS.gdk_region_get_rectangles(rgn, rects, nRects);", "-\t\tGdkRectangle rect = new GdkRectangle();", "-\t\tfor (int i=0; i<nRects[0]; i++) {", "-\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\tCairo.cairo_rectangle(cairo, rect.x, rect.y, rect.width, rect.height);", "-\t\t}", "-\t\tif (rects[0] != 0) OS.g_free(rects[0]);", "-\t}", "+\tOS.gdk_cairo_region(cairo, rgn);"]}], "num": 8186}