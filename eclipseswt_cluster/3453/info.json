{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b1f6e2ee8ee415fc233014901bf9ed4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431f14b2751cbfd57bda9cb9fe538017", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fed20471b02e54430143b8777e1e3f4edb80c702", "commitAfterChange": "13b50b5c7f6f242ffae4a8f19b06c259eda287b0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["-\t\t\t//TODO implement copyArea(Image, int int) for views", "+\t\t\tNSPoint pt = new NSPoint();", "+\t\t\tpt.x = x;", "+\t\t\tpt.y = y;", "+\t\t\tNSWindow window = data.view.window();", "+\t\t\tpt = data.view.convertPoint_toView_(pt, window.contentView().superview());", "+\t\t\tNSRect frame = window.frame();", "+\t\t\tpt.y = frame.height - pt.y;", "+\t\t\tNSSize size = image.handle.size();", "+\t\t\tCGRect destRect = new CGRect();", "+\t\t\tdestRect.size.width = size.width;", "+\t\t\tdestRect.size.height = size.height;", "+\t\t\tCGRect srcRect = new CGRect();", "+\t\t\tsrcRect.origin.x = pt.x;", "+\t\t\tsrcRect.origin.y = pt.y;", "+\t\t\tsrcRect.size.width = size.width;", "+\t\t\tsrcRect.size.height = size.height;", "+\t\t\timage.handle.lockFocus();", "+\t\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\t\tint /*long*/ contextID = OS.objc_msgSend(NSApplication.sharedApplication().id, OS.sel_contextID);", "+\t\t\tOS.CGContextCopyWindowContentsToRect(context.graphicsPort(), destRect, contextID, window.windowNumber(), srcRect);", "+\t\t\timage.handle.unlockFocus();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46362c054ebf5d23aa2b39b7ec3c8db6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "0c362258ce99de6fe7485334e3e3f9bf410a9f1d", "commitAfterChange": "6de2034c51f52173b662fb7ec0062b2b393aaf5a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void drawRect(int id, NSRect rect)", "signatureAfterChange": "  void drawRect(int id, NSRect rect)", "diff": ["+\tif (arrow != null && id == arrow.id) {", "+\t\tNSRect frame = arrow.frame();", "+\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\tcontext.saveGraphicsState();", "+\t\tNSPoint p1 = new NSPoint();", "+\t\tp1.y = frame.height / (float)2.0 - frame.width / (float)2.0;", "+\t\tNSPoint p2 = new NSPoint();", "+\t\tp2.x = frame.width;", "+\t\tp2.y = p1.y;", "+\t\tNSPoint p3 = new NSPoint();", "+\t\tp3.x = frame.width / (float)2.0;", "+\t\tp3.y = (float)(p2.y + Math.sqrt(Math.pow(frame.width, 2) - Math.pow(frame.width / 2, 2)));", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tpath.moveToPoint(p1);", "+\t\tpath.lineToPoint(p2);", "+\t\tpath.lineToPoint(p3);", "+\t\tpath.closePath();", "+\t\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "+\t\tcolor.set();", "+\t\tpath.fill();", "+\t\tcontext.restoreGraphicsState();", "+\t}"]}], "num": 3453}