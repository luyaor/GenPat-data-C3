{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5203964fc08ef0240d9c31c49903ef2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb6862d0499ccf355676f14dfaeff54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c1df1ba2a1e6a57893caf639664ac1ec129b2bf9", "commitAfterChange": "f7d30af58202368d42dc27be691f75c7172266aa", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void setItemCount (int count)", "signatureAfterChange": " public void setItemCount (int count)", "diff": ["+\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "+\tif (count == itemCount) return;", "-\tsetRedraw (false);", "-\tremoveAll ();", "+\tif (!isVirtual) setRedraw (false);", "+\tint index = count;", "+\twhile (index < itemCount) {", "+\t\tif (!isVirtual) {", "+\t\t\tignoreSelect = true;", "+\t\t\tint code = OS.SendMessage (handle, OS.LVM_DELETEITEM, count, 0);", "+\t\t\tignoreSelect = false;", "+\t\t\tif (code == 0) break;", "+\t\t}", "+\t\tif (items [index] != null) items [index].releaseResources ();", "+\t\tindex++;", "+\t}", "+\tif (index < itemCount) error (SWT.ERROR_ITEM_NOT_REMOVED);", "+\tTableItem [] newItems =  new TableItem [(count + 3) / 4 * 4];", "+\tSystem.arraycopy (items, 0, newItems, 0, Math.min (count, itemCount));", "+\titems = newItems;", "-\t\tint flags = 0;", "-//\t\tint flags = OS.LVSICF_NOINVALIDATEALL | OS.LVSICF_NOSCROLL;", "+\t\tint flags = OS.LVSICF_NOINVALIDATEALL | OS.LVSICF_NOSCROLL;", "-\t\tcount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\t/*", "-\t\t* Bug in Windows.  When LVM_SETITEMCOUNT is sent to a table", "-\t\t* that is too small to show a single item, when the table is", "-\t\t* resized to be larger, it is scrolled to the second item.", "-\t\t* The fix is to use LVM_ENSUREVISIBLE to scroll the table to", "-\t\t* the first item.", "-\t\t*/", "-\t\tOS.SendMessage (handle, OS.LVM_ENSUREVISIBLE, 0, 1);", "-\t} ", "-\titems = new TableItem [(count + 3) / 4 * 4];", "-\tif (!isVirtual) {", "-\t\tfor (int i=0; i<count; i++) {", "+\t} else {", "+\t\tfor (int i=itemCount; i<count; i++) {", "-\tsetRedraw (true);", "+\tif (!isVirtual) setRedraw (true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a2d5e2b189c7443b7923516b10b6d70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "dd7d1885652fa01b0ab18a05d9130e3d35c531a1", "commitAfterChange": "0aadd4465fafca2afa3629b3583d154da1134e1a", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void select (TreeItem item)", "signatureAfterChange": " public void select (TreeItem item)", "diff": ["-\t\tSCROLLINFO hInfo = null, vInfo = null;", "+\t\tSCROLLINFO hInfo = null;", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif ((bits & OS.TVS_NOHSCROLL) == 0) {", "+\t\t\thInfo = new SCROLLINFO ();", "+\t\t\thInfo.cbSize = SCROLLINFO.sizeof;", "+\t\t\thInfo.fMask = OS.SIF_ALL;", "+\t\t\tOS.GetScrollInfo (handle, OS.SB_HORZ, hInfo);", "+\t\t}", "+\t\tSCROLLINFO vInfo = new SCROLLINFO ();", "+\t\tvInfo.cbSize = SCROLLINFO.sizeof;", "+\t\tvInfo.fMask = OS.SIF_ALL;", "+\t\tOS.GetScrollInfo (handle, OS.SB_VERT, vInfo);", "-\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\tif ((bits & OS.TVS_NOHSCROLL) == 0) {", "-\t\t\t\thInfo = new SCROLLINFO ();", "-\t\t\t\thInfo.cbSize = SCROLLINFO.sizeof;", "-\t\t\t\thInfo.fMask = OS.SIF_ALL;", "-\t\t\t\tOS.GetScrollInfo (handle, OS.SB_HORZ, hInfo);", "-\t\t\t}", "-\t\t\tvInfo = new SCROLLINFO ();", "-\t\t\tvInfo.cbSize = SCROLLINFO.sizeof;", "-\t\t\tvInfo.fMask = OS.SIF_ALL;", "-\t\t\tOS.GetScrollInfo (handle, OS.SB_VERT, vInfo);", "+\t\tif (hInfo != null) {", "+\t\t\tint /*long*/ hThumb = OS.MAKELPARAM (OS.SB_THUMBPOSITION, hInfo.nPos);", "+\t\t\tOS.SendMessage (handle, OS.WM_HSCROLL, hThumb, 0);", "+\t\t}", "+\t\tint /*long*/ vThumb = OS.MAKELPARAM (OS.SB_THUMBPOSITION, vInfo.nPos);", "+\t\tOS.SendMessage (handle, OS.WM_VSCROLL, vThumb, 0);", "-\t\t\tif (hInfo != null) {", "-\t\t\t\tint /*long*/ hThumb = OS.MAKELPARAM (OS.SB_THUMBPOSITION, hInfo.nPos);", "-\t\t\t\tOS.SendMessage (handle, OS.WM_HSCROLL, hThumb, 0);", "-\t\t\t}", "-\t\t\tint /*long*/ vThumb = OS.MAKELPARAM (OS.SB_THUMBPOSITION, vInfo.nPos);", "-\t\t\tOS.SendMessage (handle, OS.WM_VSCROLL, vThumb, 0);"]}], "num": 4190}