{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ba6f4535f4182e2948966325f4bccf2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dddeed08e8acbbd93dd65d5c0c3297ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dfd4650fd75100a5a002cab81ff3277b16862845", "commitAfterChange": "d01fac9d213e0fa304edfed85d0f0844e9d59792", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setAdvanced(boolean advanced)", "signatureAfterChange": " public void setAdvanced(boolean advanced)", "diff": ["-\t\t\tinitGdip(false, false);", "+\t\t\tinitGdip();", "-\t\tint foreground = OS.GetTextColor(handle);", "-\t\tint background = OS.GetBkColor(handle);", "-\t\tif (data.gdipGraphics != 0) Gdip.Graphics_delete(data.gdipGraphics);", "-\t\tif (data.gdipPen != 0) Gdip.Pen_delete(data.gdipPen);", "-\t\tif (data.gdipBrush != 0) destroyGdipBrush(data.gdipBrush);", "-\t\tdata.gdipGraphics = data.gdipBrush = data.gdipPen = 0;", "+\t\tdisposeGdip();", "+\t\tdata.state = 0;", "-\t\tOS.SetTextColor(handle, foreground);", "-\t\tOS.SetBkColor(handle, background);", "-\t\tif (data.hPen != 0) OS.SelectObject(handle, data.hPen);", "-\t\tif (data.hBrush != 0) OS.SelectObject(handle, data.hBrush);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858fc3867b99cd0828630cd39ee2f870", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0aeae037b40ae3633eee47680185432adda44201", "commitAfterChange": "9d2452cf08dad914b637c1b1e5dd72e4544a4953", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void dispose()", "signatureAfterChange": " public void dispose()", "diff": ["-\t/*", "-\t* The only way for pens and brushes to get", "-\t* selected into the HDC is for the receiver to", "-\t* create them. When we are destroying the", "-\t* hDC we also destroy any pens and brushes that", "-\t* we have allocated. This code assumes that it ", "-\t* is OK to delete stock objects. This will ", "-\t* happen when a GC is disposed and the user has ", "-\t* not caused new pens or brushes to be allocated.", "-\t*/", "-\tif (data.foreground != -1) {", "+\t/* Select stock pen and brush objects and free resources */", "+\tif (data.hPen != 0) {", "-\t\tint oldPen = OS.SelectObject(handle, nullPen);", "-\t\tOS.DeleteObject(oldPen);", "+\t\tOS.SelectObject(handle, nullPen);", "+\t\tOS.DeleteObject(data.hPen);", "+\t\tdata.hPen = 0;", "-\tif (data.background != -1) {", "+\tif (data.hBrush != 0) {", "-\t\tint oldBrush = OS.SelectObject(handle, nullBrush);", "-\t\tOS.DeleteObject(oldBrush);", "+\t\tOS.SelectObject(handle, nullBrush);", "+\t\tOS.DeleteObject(data.hBrush);", "+\t\tdata.hBrush = 0;"]}], "num": 32348}