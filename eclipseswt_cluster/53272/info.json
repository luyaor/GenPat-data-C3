{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27e89eb10d6075256c1183bb4a16256e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "698dbc83f4432c51c59fac9cf37cad5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void redraw (int x, int y, int width, int height, boolean all)", "signatureAfterChange": "  public void redraw (int x, int y, int width, int height, boolean all)", "diff": ["- */", "+", "-\tif (width <= 0 || height <= 0) return;", "-\tredrawWidget (x, y, width, height, all);", "+\tif (!OS.IsControlVisible (handle)) return;", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (handle, rect);", "+\tx += rect.left;", "+\ty += rect.top;", "+\tOS.SetRect (rect, (short) x, (short) y, (short)(x + width), (short)(y + height));", "+\tint window = OS.GetControlOwner (handle);", "+\tOS.InvalWindowRect (window, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a56b5c1ea34c3c6bb01b69b55202aa35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8f1164987597bdcfb3f7ffdca71e5b39dcf3a485", "commitAfterChange": "45b1561398a90cbad1f5547f03d92bd48ffc136c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t\t/*", "+\t\t\t* Bug in the Macintosh. In kEventWindowGetRegion, ", "+\t\t\t* Carbon assumes the origin of the Region is (0, 0)", "+\t\t\t* and ignores the actual origin.  This causes the ", "+\t\t\t* window to be shifted.  The fix is to modify the origin.", "+\t\t\t*/", "+\t\t\t// TODO - find a better fix", "+\t\t\tRect r = new Rect ();", "+\t\t\tOS.GetRegionBounds (hRegion, r);", "+\t\t\tif (r.left != 0 || r.top != 0) {", "+\t\t\t\tOS.SetRect (r, (short)0, (short)0, (short)1, (short)1);", "+\t\t\t\tint rectRgn = OS.NewRgn ();", "+\t\t\t\tOS.RectRgn (rectRgn, r);", "+\t\t\t\tOS.UnionRgn (rectRgn, hRegion, hRegion);", "+\t\t\t\tOS.DisposeRgn (rectRgn);", "+\t\t\t}"]}], "num": 53272}