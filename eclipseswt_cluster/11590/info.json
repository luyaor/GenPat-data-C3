{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "278356cbce0e6be448a8c9a754196cd0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d0532875e9de5a3e1be9134f8756dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "93c13ac8fd6e433c5aa857bf15977580054c53ec", "commitAfterChange": "c9056361e2b5eb56bb8ee5ae7e9947f735c9db3b", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "signatureAfterChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "diff": ["-\t/*", "-\t* Feature in IE 6 sp1.  HTML rendered in memory", "-\t* containing an OBJECT tag referring to a local file", "-\t* brings up a warning dialog asking the user whether", "-\t* it should proceed or not.  The workaround is to", "-\t* set the policy to URLPOLICY_ALLOW in this case (dwAction", "-\t* value of 0x1406).", "-\t* ", "-\t* Feature in IE. Security Patches and user settings", "-\t* affect the way the embedded web control behaves.  The current", "-\t* approach is to consider the content trusted and allow", "-\t* all URLs by default.", "-\t*/", "-\tint policy = IE.URLPOLICY_ALLOW;", "+\tint policy = IE.INET_E_DEFAULT_ACTION;", "-\t\tif (!browser.jsEnabled) {", "-\t\t\tpolicy = IE.URLPOLICY_DISALLOW;", "-\t\t}", "+\t\tpolicy = browser.jsEnabled ? IE.URLPOLICY_ALLOW : IE.URLPOLICY_DISALLOW;", "+\tif (policy == IE.INET_E_DEFAULT_ACTION) return IE.INET_E_DEFAULT_ACTION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9fe10c8455f1540dc5a3c39cad9571c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "67d5173414197735d7a523908f46996789f33c97", "commitAfterChange": "149ecf068f9d6d42ed2836423184021a375f6ff8", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["-\t* Feature in IE 6 sp1.  HTML rendered in memory", "-\t* does not enable local links but the exact same", "-\t* HTML document loaded through a local file is", "-\t* permitted to follow local links.  The workaround is", "-\t* to return URLZONE_INTRANET instead of the default", "-\t* value URLZONE_LOCAL_MACHINE.", "+\t* Feature in IE.  HTML rendered in memory does not enable local links", "+\t* but the same HTML document loaded through a local file is permitted", "+\t* to follow local links.  The workaround is to return URLZONE_INTRANET", "+\t* instead of the default value URLZONE_LOCAL_MACHINE.", "-\tif (ie.getUrl().startsWith(IE.ABOUT_BLANK)) {", "+\t/*", "+\t* For some reason IE8 invokes this function after the Browser has", "+\t* been disposed.  To detect this case check for ie.auto != null. ", "+\t*/", "+\tif (ie.auto != null && ie.getUrl().startsWith(IE.ABOUT_BLANK)) {"]}], "num": 11590}