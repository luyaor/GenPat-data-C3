{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fe81d7f96f0396abead87424e42d2bf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c809c581011eda16afc753028f3a6771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "7d09c530224c03e34e03b50eef5df0380de95e0a", "commitAfterChange": "65919b6cd706bbbd92f968a23144cff20fe8001b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": "  protected Point computeSize (Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["-\tPoint size = layout (composite, false, 0, 0, 0, 0, flushCache);", "-\tsize.x += marginWidth * 2;", "-\tsize.y += marginHeight * 2;", "+\tPoint size = layout (composite, false, 0, 0, wHint, hHint, flushCache);", "+\tif (wHint != SWT.DEFAULT) size.x = wHint;", "+\tif (hHint != SWT.DEFAULT) size.y = hHint;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222cd00c7fcbb9bbd29040d0278d7235", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "c7b8a47b4f881fe023685c003812d64dd2d51c15", "commitAfterChange": "1b9976550b7657aeb02ff183aeee4687e9c1685e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint newFont, oldFont = 0;", "-\tint hDC = OS.GetDC (handle);", "-\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\tOS.GetTextMetrics (hDC, tm);", "-\tint count = OS.SendMessage (handle, OS.EM_GETLINECOUNT, 0, 0);", "-\tint height = count * tm.tmHeight, width = 0;", "-\tRECT rect = new RECT ();", "-\tint flags = OS.DT_CALCRECT | OS.DT_EDITCONTROL | OS.DT_NOPREFIX;", "-\tboolean wrap = (style & SWT.MULTI) != 0 && (style & SWT.WRAP) != 0;", "-\tif (wrap && wHint != SWT.DEFAULT) {", "-\t\tflags |= OS.DT_WORDBREAK;", "-\t\trect.right = wHint;", "+\tint height = 0, width = 0;", "+\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\tint newFont, oldFont = 0;", "+\t\tint hDC = OS.GetDC (handle);", "+\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\tOS.GetTextMetrics (hDC, tm);", "+\t\tint count = OS.SendMessage (handle, OS.EM_GETLINECOUNT, 0, 0);", "+\t\theight = count * tm.tmHeight;", "+\t\tRECT rect = new RECT ();", "+\t\tint flags = OS.DT_CALCRECT | OS.DT_EDITCONTROL | OS.DT_NOPREFIX;", "+\t\tboolean wrap = (style & SWT.MULTI) != 0 && (style & SWT.WRAP) != 0;", "+\t\tif (wrap && wHint != SWT.DEFAULT) {", "+\t\t\tflags |= OS.DT_WORDBREAK;", "+\t\t\trect.right = wHint;", "+\t\t}", "+\t\tString text = getText ();", "+\t\tTCHAR buffer = new TCHAR (getCodePage (), text, false);", "+\t\tint length = buffer.length ();", "+\t\tif (length != 0) {", "+\t\t\tOS.DrawText (hDC, buffer, length, rect, flags); ", "+\t\t\twidth = rect.right - rect.left;", "+\t\t}", "+\t\tif (wrap && hHint == SWT.DEFAULT) {", "+\t\t\tint newHeight = rect.bottom - rect.top;", "+\t\t\tif (newHeight != 0) height = newHeight;", "+\t\t}", "+\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\tOS.ReleaseDC (handle, hDC);", "-\tString text = getText ();", "-\tTCHAR buffer = new TCHAR (getCodePage (), text, false);", "-\tint length = buffer.length ();", "-\tif (length != 0) {", "-\t\tOS.DrawText (hDC, buffer, length, rect, flags); ", "-\t\twidth = rect.right - rect.left;", "-\t}", "-\tif (wrap && hHint == SWT.DEFAULT) {", "-\t\tint newHeight = rect.bottom - rect.top;", "-\t\tif (newHeight != 0) height = newHeight;", "-\t}", "-\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\tOS.ReleaseDC (handle, hDC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9dd236c3eeb04739cca2c786c99cc9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "93c26f0ed322e929a8fccdcbef041a68e19f8af5", "commitAfterChange": "e5f41a05f7e47d4efb399397a97a6160f1d952e1", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight, boolean force)", "signatureAfterChange": " boolean updateTabHeight(boolean force)", "diff": ["-boolean updateTabHeight(int oldHeight, boolean force){", "-\tif (!fixedTabHeight) {", "+boolean updateTabHeight(boolean force){", "+\tint oldHeight = tabHeight;", "+\tif (fixedTabHeight != SWT.DEFAULT) {", "+\t\ttabHeight = fixedTabHeight == 0 ? 0 : fixedTabHeight + 1; // +1 for line drawn across top of tab", "+\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89ab7f2b704a4eb74f982e5a7a0ee44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/LEDataInputStream.java", "commitBeforeChange": "7f42e7640a49fc9cd135d3684ddf3730908936b6", "commitAfterChange": "43c5eca5ffa5452874e81e46e670840a579edd2f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic int read() throws IOException", "signatureAfterChange": "\r \tpublic int read() throws IOException", "diff": ["+\t\tif (buf == null) throw new IOException();\r", "+\t\tif (pos < buf.length) return (buf[pos++] & 0xFF);\r"]}], "num": 49514}