{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eccde6adec48166e873fc84d6d2f98cb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cfa77155763d5fd17fc7552d0e95ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "f33c93a3b6199f2d2878231f007f05c03517addf", "commitAfterChange": "6be7a535ba88fce3aa3fabbf2e7ed19a03e18cd3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tint getColumnFor(String attribute)", "signatureAfterChange": " \t \tvoid selectChild(TreeItem item)", "diff": ["+\t", "+\tvoid selectChild(TreeItem item) {", "+\t\tattribTable.removeAll();", "+\t\tif (!(item.getData() instanceof Node)) return;", "+\t\tNode node = (Node)item.getData();", "+\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\tString[] extraAttribs = gen.getExtraAttributeNames(node);", "+\t\tfor (int i = 0; i < extraAttribs.length; i++) {", "+\t\t\tTableItem attribItem = new TableItem(attribTable, SWT.NONE);", "+\t\t\tattribItem.setText(extraAttribs[i]);", "+\t\t\tattribItem.setData(node);", "+\t\t\tattribItem.setForeground(display.getSystemColor(SWT.COLOR_BLUE));", "+\t\t\tNode attrib = attributes.getNamedItem(extraAttribs[i]);", "+\t\t\tif (attrib != null) {", "+\t\t\t\tattribItem.setText(1, attrib.getNodeValue());", "+\t\t\t}", "+\t\t\t", "+\t\t}", "+\t\tcheckItem(node, item);", "+\t\tfor (int i = 0, length = attributes.getLength(); i < length; i++) {", "+\t\t\tNode attrib = attributes.item(i);", "+\t\t\tString attribName = attrib.getNodeName();", "+\t\t\tif (attribName.startsWith(\"swt_\")) continue;", "+\t\t\tTableItem attribItem = new TableItem(attribTable, SWT.NONE);", "+\t\t\tattribItem.setText(attribName);", "+\t\t\tattribItem.setText(1, attrib.getNodeValue());", "+\t\t}", "+\t\tattribTable.getColumn(0).pack();", "+\t\tattribTable.getColumn(1).setWidth(500);", "-\t", "-\tint getColumnFor(String attribute) {", "-\t\tTreeColumn[] columns = nodesTree.getColumns();", "-\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\tif (columns[i].getText().equals(attribute)) return i;", "-\t\t}", "-\t\tTreeColumn column = new TreeColumn(nodesTree, SWT.NONE);", "-\t\tcolumn.setText(attribute);", "-\t\treturn columns.length;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5b204aa61826a88974e7c52add1fab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "ebac5ac4f54306fed9009986f7bcaeafd42136d7", "commitAfterChange": "394b59ba7f80a17d87cb429672cd3e14536c086a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tvoid searchFor(String name)", "signatureAfterChange": " \tvoid searchFor(String name)", "diff": ["+\tArrayList flatNodes;", "-", "+\t\tTreeItem[] selection = nodesTree.getSelection();", "+\t\tNode node = null;", "+\t\tif (selection.length != 0) {", "+\t\t\tif (selection[0].getData() instanceof Node) {", "+\t\t\t\tnode = (Node)selection[0].getData();", "+\t\t\t} else {", "+\t\t\t\tif (selection[0].getItemCount() > 0 && selection[0].getItem(0).getData() instanceof Node) {", "+\t\t\t\t\tnode = (Node)selection[0].getItem(0).getData();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tDocument[] documents = gen.getDocuments();", "+\t\tif (node == null && documents.length > 0) node = gen.getDocuments()[0];", "+\t\tif (flatNodes == null) {", "+\t\t\tflatNodes = new ArrayList();", "+\t\t\tfor (int i = 0; i < documents.length; i++) {", "+\t\t\t\taddNodes(documents[i], flatNodes);", "+\t\t\t}", "+\t\t}", "+\t\tint index = 0;", "+\t\twhile (flatNodes.get(index++) != node);\t\t", "+\t\tint start = index;", "+\t\twhile (index < flatNodes.size()) {", "+\t\t\tNode child = (Node)flatNodes.get(index);", "+\t\t\tNode attribName = gen.getIDAttribute(child);", "+\t\t\tif (attribName != null && attribName.getNodeValue().matches(name)) {", "+\t\t\t\tselectNode(child);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tindex++;", "+\t\t}", "+\t\tindex = 0;", "+\t\twhile (index < start) {", "+\t\t\tNode child = (Node)flatNodes.get(index);", "+\t\t\tNode attribName = gen.getIDAttribute(child);", "+\t\t\tif (attribName != null && attribName.getNodeValue().matches(name)) {", "+\t\t\t\tselectNode(child);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tindex++;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56dad08f902fb829a3e79ec17dd8178", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["-\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\titem.setData(node);", "+\t\tNode extra = (Node)extras.get(gen.getKey(node));", "-\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "-\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\titem.setChecked(true);", "+\t\t\tNamedNodeMap attributes = extra.getAttributes();", "+\t\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "+\t\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "+\t\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "+\t\t\t\tNode attrib = attributes.item(i);", "+\t\t\t\tString attriName = attrib.getNodeName();", "+\t\t\t\tif (attriName.equals(\"swt_gen\") || !attriName.startsWith(\"swt_\")) continue;", "+\t\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+\t\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\ttext = attrib.getNodeName();", "-\t\t\tint columnIndex = getColumnFor(text);", "+\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+        boolean checked = item.getChecked();", "+        checkItems(item, checked);", "+        checkPath(item.getParentItem(), checked, false);"]}], "num": 14448}