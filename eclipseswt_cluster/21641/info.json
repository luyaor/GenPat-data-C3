{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b559ac78c40dc9cf8c7b466c82a9c441", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a598ee50cdfd28d5d9a21f61e73e3f93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "commitAfterChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["-\t\t\tint width = 0, maxWidth = wrapWidth - lineWidth;", "-\t\t\tchar[] buffer = new char[1];", "-\t\t\tbuffer[0] = chars[start];", "-\t\t\tint charWidth = stringWidth(run, buffer);", "-\t\t\twhile (width + charWidth < maxWidth) {", "-\t\t\t\twidth += charWidth;", "-\t\t\t\tstart++;", "+\t\t\tif (!(run.style != null && run.style.metrics != null)) {", "+\t\t\t\tint width = 0, maxWidth = wrapWidth - lineWidth;", "+\t\t\t\tchar[] buffer = new char[1];", "-\t\t\t\tcharWidth =\tstringWidth(run, buffer);", "+\t\t\t\tint charWidth = stringWidth(run, buffer);", "+\t\t\t\twhile (width + charWidth < maxWidth) {", "+\t\t\t\t\twidth += charWidth;", "+\t\t\t\t\tstart++;", "+\t\t\t\t\tbuffer[0] = chars[start];", "+\t\t\t\t\tcharWidth =\tstringWidth(run, buffer);", "+\t\t\t\t}", "-\t\tif (run.style != null && run.style.font != null) {", "-\t\t\tfontStruct = getFontHeigth(run.style.font);", "-\t\t\tascent = Math.max(ascent, fontStruct.ascent);", "-\t\t\tdescent = Math.max(descent, fontStruct.descent);", "+\t\tif (run.style != null ) {", "+\t\t\tint runAscent = 0;", "+\t\t\tint runDescent = 0;", "+\t\t\tif (run.style.metrics != null) {", "+\t\t\t\tGlyphMetrics metrics = run.style.metrics;", "+\t\t\t\trunAscent = metrics.ascent;", "+\t\t\t\trunDescent = metrics.descent;", "+\t\t\t} else if (run.style.font != null) {", "+\t\t\t\tfontStruct = getFontHeigth(run.style.font);", "+\t\t\t\trunAscent = fontStruct.ascent;", "+\t\t\t\trunDescent = fontStruct.descent;", "+\t\t\t}", "+\t\t\tascent = Math.max(ascent, runAscent);", "+\t\t\tdescent = Math.max(descent, runDescent - run.style.rise);", "+\t\t\tif (run.style.rise != 0) {", "+\t\t\t\trun.baseline += run.style.rise;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec06e39a5012a90169e402eac0a31b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9e9b22bcbb72aef5b3bb15c7ddbde8006ef6a7c8", "commitAfterChange": "2e3cc3f2343444e38d6648881ff7de0ee9aea010", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 58, "signatureBeforeChange": " void shape (final int hdc, final StyleItem run)", "signatureAfterChange": " void shape (final int hdc, final StyleItem run)", "diff": ["-\trun.width = abc[0] + abc[1] + abc[2];", "-\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "-\tOS.GetTextMetrics(hdc, lptm);", "-\trun.ascent = lptm.tmAscent;", "-\trun.descent = lptm.tmDescent;", "-\trun.leading = lptm.tmInternalLeading;", "+\tif (run.style != null && run.style.metrics != null) {", "+\t\tGlyphMetrics metrics = run.style.metrics;", "+\t\trun.width = metrics.width * run.glyphCount;", "+\t\trun.ascent = metrics.ascent;", "+\t\trun.descent = metrics.descent;", "+\t\trun.leading = 0;", "+\t} else {", "+\t\trun.width = abc[0] + abc[1] + abc[2];", "+\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "+\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\trun.ascent = lptm.tmAscent;", "+\t\trun.descent = lptm.tmDescent;", "+\t\trun.leading = lptm.tmInternalLeading;", "+\t}", "+\tif (run.style != null) {", "+\t\trun.ascent += run.style.rise;", "+\t\trun.descent -= +run.style.rise;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e94680da0074bd38a849a15f325d84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0577307d31e48dc29b7c4e1d4dd5a260c1ff63d8", "commitAfterChange": "c589b83339477b9cd24d205bdab1caf2f61e909e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 58, "signatureBeforeChange": " void shape (final int hdc, final StyleItem run)", "signatureAfterChange": " void shape (final int hdc, final StyleItem run)", "diff": ["-\trun.width = abc[0] + abc[1] + abc[2];", "-\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "-\tOS.GetTextMetrics(hdc, lptm);", "-\trun.ascent = lptm.tmAscent;", "-\trun.descent = lptm.tmDescent;", "-\trun.leading = lptm.tmInternalLeading;", "+\tif (run.style != null && run.style.metrics != null) {", "+\t\tGlyphMetrics metrics = run.style.metrics;", "+\t\trun.width = metrics.width * run.glyphCount;", "+\t\trun.ascent = metrics.ascent;", "+\t\trun.descent = metrics.descent;\t\t", "+\t} else {", "+\t\trun.width = abc[0] + abc[1] + abc[2];", "+\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "+\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\trun.ascent = lptm.tmAscent;", "+\t\trun.descent = lptm.tmDescent;", "+\t\trun.leading = lptm.tmInternalLeading;", "+\t}", "+\tif (run.style != null) {", "+\t\trun.ascent += run.style.rise;", "+\t\trun.descent -= +run.style.rise; ", "+\t}"]}], "num": 21641}