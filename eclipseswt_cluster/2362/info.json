{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f677bf9d509ff957113e080c2a13841b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e03dcc26e75fbcc1e22fc2608cec64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void setMainClassName(String str)", "signatureAfterChange": "  public void setMainClassName(String str)", "diff": ["-\t\tString[] list = ItemData.split(mainClasses, \",\");", "+\t\tString[] list = JNIGenerator.split(mainClasses, \",\");", "-\t\t\tmainClass = Class.forName(mainClassName, false, getClass().getClassLoader());", "+\t\t\tString sourcePath = new File(outputDir).getParent() + \"/\" + mainClassName.replace('.', '/') + \".java\";", "+\t\t\tif (USE_AST) {", "+\t\t\t\tmainClass = new ASTClass(sourcePath, metaData);", "+\t\t\t} else {", "+\t\t\t\tmainClass = new ReflectClass(Class.forName(mainClassName, false, getClass().getClassLoader()), metaData, sourcePath);", "+\t\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60f6d410bbe4d1248a2465d10eda37b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 373, "signatureBeforeChange": " \t\t\tpublic int method0(int[] args)", "signatureAfterChange": " \tpublic String toString ()", "diff": ["-\t\tobjIAccessibleComponent = new COMObject(new int[] {2,0,0,2,1,1}) {", "-\t\t\tpublic int /*long*/ method0(int /*long*/[] args) {return QueryInterface(args[0], args[1]);}", "+\tpublic String toString () {", "+\t\tString toString = super.toString();", "+\t\tif (DEBUG) return toString.substring(toString.lastIndexOf('.') + 1) + \"(\" + getRoleString(getRole()) + \")\";", "+\t\treturn toString;", "+\t}"]}], "num": 2362}