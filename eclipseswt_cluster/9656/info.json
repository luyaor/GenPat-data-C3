{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f3e7ba01b08cd9c1fbf8902c7e71659", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b75368139c608e6c47061550fae6c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5258b5d41cf68402bb882b86e09e5b93debe0f1d", "commitAfterChange": "f0509f96c75e0bc7b0a6d6af406e7a9a2d4f8abe", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " int xFocusOut (XFocusChangeEvent xEvent)", "signatureAfterChange": " int xFocusOut (XFocusChangeEvent xEvent)", "diff": ["-\tint focusHandle = OS.XtWindowToWidget (xEvent.display, xEvent.window);", "-\tif (!hasIMSupport ()) {", "-\t\tOS.XmImUnsetFocus (focusHandle);", "-\t} ", "+\tint focusHandle = OS.XtWindowToWidget (xEvent.display, xEvent.window);\t", "+\tif (!hasIMSupport ()) OS.XmImUnsetFocus (focusHandle);", "-", "+\t", "+\t/* Set the focus out event */", "+", "+\t/* Restore XmNtraversalOn if it was focus was forced */", "+\tif (handle == 0) return 0;", "+\tif ((style & SWT.NO_FOCUS) != 0) {", "+\t\tint [] argList = new int [] {OS.XmNtraversalOn, 0};", "+\t\tOS.XtGetValues (focusHandle, argList, argList.length / 2);", "+\t\tif (argList [1] != 0 && (state & FOCUS_FORCED) != 0) {", "+\t\t\targList [1] = 0;", "+\t\t\tOS.XtSetValues (focusHandle, argList, argList.length / 2);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48066d4136742cec35f2841c8bbbd5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "66ce2b458013bbaf13e46024a36e0fe54ace3106", "commitAfterChange": "4b20aa65be996b2fd58ef76031e8571b18c21bd7", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void setMinimized (boolean minimized)", "signatureAfterChange": " public void setMinimized (boolean minimized)", "diff": ["+\tif (minimized == this.minimized) return;", "-\tint [] argList = {OS.XmNiconic, 0};", "+\tint [] argList = {", "+\t\tOS.XmNiconic, 0,", "+\t\tOS.XmNinitialState, 0,", "+\t};", "-\t", "+", "-\targList [1] = (this.minimized = minimized) ? 1 : 0;", "+\tthis.minimized = minimized;", "+\targList [1] = minimized ? 1 : 0;", "+\targList [3] = minimized ? OS.IconicState : OS.NormalState;", "+\t", "+\t/* Make the restored shell be the active shell */", "+\tif (!minimized) {", "+\t\tint [] argList2 = {OS.XmNmappedWhenManaged, 0};", "+\t\tOS.XtGetValues (shellHandle, argList2, argList2.length / 2);", "+\t\tif (argList2 [1] != 0) {", "+\t\t\tdo {", "+\t\t\t\tdisplay.update ();", "+\t\t\t} while (!isVisible ());", "+\t\t\tsetActive ();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5958c2266123c1f5465c902dcd524079", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "095b4d0f0a9a32f075fca3cbd4e43a9950f62583", "commitAfterChange": "018f88f0b9ca95232a21f542c51ddb6d56091dea", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r int processFocusOut ()", "signatureAfterChange": "\r int xFocusOut ()", "diff": ["-int processFocusOut () {\r", "-\tint result = super.processFocusOut ();\r", "-\tif (handle == 0) return result;\r", "-\tint [] argList = new int [] {OS.XmNtraversalOn, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\tif (argList [1] != 0) {\r", "-\t\targList [1] = 0;\r", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "-\t}\r", "-\treturn result;\r", "-}\r", "+int xFocusOut () {\r", "+\tint result = super.xFocusOut ();\r", "+\tif (handle == 0) return result;\r", "+\tint [] argList = new int [] {OS.XmNtraversalOn, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\tif (argList [1] != 0) {\r", "+\t\targList [1] = 0;\r", "+\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t}\r", "+\treturn result;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0ea9ed2fb640905c559c5c01bd2510", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "51a5b6764672c3a804f9dad0fc771d283f3c0c2f", "commitAfterChange": "aa4517d0a6c1ea8f9a28a174d80b38d6ffe28cf9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " void setBackgroundPixel (int pixel)", "signatureAfterChange": " void setBackgroundPixel (int pixel)", "diff": ["-\tif (scrolledHandle != 0) {", "-\t\tint [] argList1 = {", "-\t\t\tOS.XmNhorizontalScrollBar, 0,", "-\t\t\tOS.XmNverticalScrollBar, 0,", "-\t\t};", "-\t\tOS.XtGetValues (scrolledHandle, argList1, argList1.length / 2);", "-\t\tif (argList1 [1] != 0) OS.XmChangeColor (argList1 [1], pixel);", "-\t\tif (argList1 [3] != 0) OS.XmChangeColor (argList1 [3], pixel);", "-\t}", "+\t/*", "+\t* Uncomment this code to force scrollbars to change color.", "+\t*/", "+//\tif (scrolledHandle != 0) {", "+//\t\tint [] argList1 = {", "+//\t\t\tOS.XmNhorizontalScrollBar, 0,", "+//\t\t\tOS.XmNverticalScrollBar, 0,", "+//\t\t};", "+//\t\tOS.XtGetValues (scrolledHandle, argList1, argList1.length / 2);", "+//\t\tif (argList1 [1] != 0) OS.XmChangeColor (argList1 [1], pixel);", "+//\t\tif (argList1 [3] != 0) OS.XmChangeColor (argList1 [3], pixel);", "+//\t}"]}], "num": 9656}