{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ddbd42737593961f776b3f410edb548", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "761ec949c377f55a10352b94a5ef7d0a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "c9c643d21e61ec4cb3acaed072c41b89534da8c5", "commitAfterChange": "d4fac2cb1ae081d4b3233c327860ed203d6f68ad", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void updateBar ()", "signatureAfterChange": "  void configureBar (int selection, int minimum, int maximum)", "diff": ["+void configureBar (int selection, int minimum, int maximum) {", "+\tOS.gtk_progress_configure (handle, selection, minimum, maximum);", "+\t/*", "+\t* Feature in GTK.  The progress bar does", "+\t* not redraw right away when a value is", "+\t* changed.  This is not strictly incorrect", "+\t* but unexpected.  The fix is to force all", "+\t* outstanding redraws to be delivered.", "+\t*/", "+\tOS.gdk_flush ();", "+\tint window = paintWindow ();", "+\tOS.gdk_window_process_updates (window, false);", "+}", "-void updateBar () {", "-\tOS.gdk_flush ();", "-\tint window = paintWindow ();", "-\tOS.gdk_window_process_updates (window, false);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981e47b7f29e91a44b47c3a3ab2ab9aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "9ee2a7fe3d31efd1bbaa8109583dbc7f3b9cbc47", "commitAfterChange": "58e5a59fb368ef9f3f43f8eea0b984cb90c4159e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void configureBar (int selection, int minimum, int maximum)", "signatureAfterChange": "  void updateBar (int selection, int minimum, int maximum)", "diff": ["-void configureBar (int selection, int minimum, int maximum) {", "-\tdouble fraction = minimum == maximum ? 1 : (double)(selection - minimum) / (maximum - minimum);", "-\tOS.gtk_progress_bar_set_fraction (handle, fraction);", "-\t/*", "-\t* Feature in GTK.  The progress bar does", "-\t* not redraw right away when a value is", "-\t* changed.  This is not strictly incorrect", "-\t* but unexpected.  The fix is to force all", "-\t* outstanding redraws to be delivered.", "-\t*/", "-\tOS.gdk_flush ();", "-\tint window = paintWindow ();", "-\tOS.gdk_window_process_updates (window, false);", "-}", "+void updateBar (int selection, int minimum, int maximum) {", "+\tdouble fraction = minimum == maximum ? 1 : (double)(selection - minimum) / (maximum - minimum);", "+\tOS.gtk_progress_bar_set_fraction (handle, fraction);", "+\t/*", "+\t* Feature in GTK.  The progress bar does", "+\t* not redraw right away when a value is", "+\t* changed.  This is not strictly incorrect", "+\t* but unexpected.  The fix is to force all", "+\t* outstanding redraws to be delivered.", "+\t*/", "+\tOS.gdk_flush ();", "+\tint window = paintWindow ();", "+\tOS.gdk_window_process_updates (window, false);", "+}"]}], "num": 28685}