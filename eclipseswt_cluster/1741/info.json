{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a0435ee265046e26318c82fefb31a08", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87eeac3ddcc610a980415437b696ffd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "4bc5ce29e889582ae71a6cab9895f599711bc0a9", "commitAfterChange": "cb86533065e155575ec075cb5ddb6e1134454a7c", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void test_setItems$Ljava_lang_String()", "signatureAfterChange": "  public void test_setItems$Ljava_lang_String()", "diff": ["-\tString[][] cases = { { null }, {", "-\t\t\t\"dsada\", null, \"dsdasdasd\" }", "-\t};", "-\tfor (int i = 0; i < cases.length; i++) {", "-\t\ttry {", "-\t\t\tlist.setItems(cases[i]);", "-\t\t\tfail(\"No exception thrown for items not found\");", "-\t\t} catch (SWTError e) {", "-\t\t}", "-\t}", "+\t// TODO An SWTError should never happen and should not", "+\t// be part of the test case.  List should throw an ", "+\t// SWTException.", "+//\tString[][] cases = { { null }, {", "+//\t\t\t\"dsada\", null, \"dsdasdasd\" }", "+//\t};", "+//\tfor (int i = 0; i < cases.length; i++) {", "+//\t\ttry {", "+//\t\t\tlist.setItems(cases[i]);", "+//\t\t\tfail(\"No exception thrown for items not found\");", "+//\t\t} catch (SWTError e) {", "+//\t\t}", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6cac06b0d9825b633e047a282f1afb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/views/SpyView.java", "commitBeforeChange": "842753cf0f42811bbba7e1ca837b2f13bbb62cfc", "commitAfterChange": "8acc4a0fbbe17b61a907c232d4faae508a478903", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate String getOSHandle(Control control)", "signatureAfterChange": " \t \tprivate String getOSHandle(Control control)", "diff": ["-\t\tString[] fieldNames = {\"handle\", \"view\"};", "-\t\tfor (int i = 0; i < fieldNames.length; i++) {", "-\t\t\ttry {", "-\t\t\t\tField field = control.getClass().getField(fieldNames[i]);", "-\t\t\t\tif (field != null) return field.get(control).toString();", "-\t\t\t} catch (Throwable e) {}", "+\t\tif (field == null) {", "+\t\t\tString[] fieldNames = {\"handle\", \"view\"};", "+\t\t\tfor (int i = 0; i < fieldNames.length; i++) {", "+\t\t\t\ttry {", "+\t\t\t\t\tfield = control.getClass().getField(fieldNames[i]);", "+\t\t\t\t\tif (field != null) break;", "+\t\t\t\t} catch (Throwable e) {}", "+\t\t\t}", "+\t\ttry {", "+\t\t\treturn field.get(control).toString();", "+\t\t} catch (Throwable e) {}"]}], "num": 1741}