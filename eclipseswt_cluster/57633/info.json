{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c43c3e76e05588d9ca3d95523880a65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9002e4689a4f9dea6ea3ef1cb3c2e4f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void addString(String string, float x, float y, Font font)", "signatureAfterChange": " public void addString(String string, float x, float y, Font font)", "diff": ["-\tNSString str = NSString.stringWith(string);", "-\tNSTextStorage textStorage = ((NSTextStorage)new NSTextStorage().alloc());", "-\ttextStorage.initWithString(str);", "-\tNSLayoutManager layoutManager = (NSLayoutManager)new NSLayoutManager().alloc().init();", "-\tNSTextContainer textContainer = (NSTextContainer)new NSTextContainer().alloc();", "-\tNSSize size = new NSSize();", "-\tsize.width = Float.MAX_VALUE;", "-\tsize.height = Float.MAX_VALUE;", "-\ttextContainer.initWithContainerSize(size);", "-\ttextStorage.addLayoutManager(layoutManager);", "-\tlayoutManager.addTextContainer(textContainer);", "-\tNSRange range = new NSRange();", "-\trange.length = str.length();", "-\ttextStorage.beginEditing();", "-\ttextStorage.addAttribute(OS.NSFontAttributeName, font.handle, range);", "-\ttextStorage.endEditing();", "-\trange = layoutManager.glyphRangeForTextContainer(textContainer);", "-\tif (range.length != 0) {", "-\t\tint /*long*/ glyphs = OS.malloc(4 * range.length * 2);", "-\t\tlayoutManager.getGlyphs(glyphs, range);", "-\t\tNSBezierPath path = NSBezierPath.bezierPath();", "-\t\tNSPoint point = new NSPoint();", "-\t\tpoint.x = x;", "-\t\tpoint.y = y;", "-\t\tpath.moveToPoint(point);", "-\t\tpath.appendBezierPathWithGlyphs(glyphs, range.length, font.handle);", "-\t\tNSAffineTransform transform = NSAffineTransform.transform();", "-\t\ttransform.scaleXBy(1, -1);", "-\t\ttransform.translateXBy(0, -((2*y) + textStorage.size().height));", "-\t\tpath.transformUsingAffineTransform(transform);", "-\t\tOS.free(glyphs);", "-\t\thandle.appendBezierPath(path);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSString str = NSString.stringWith(string);", "+\t\tNSTextStorage textStorage = ((NSTextStorage)new NSTextStorage().alloc());", "+\t\ttextStorage.initWithString(str);", "+\t\tNSLayoutManager layoutManager = (NSLayoutManager)new NSLayoutManager().alloc().init();", "+\t\tNSTextContainer textContainer = (NSTextContainer)new NSTextContainer().alloc();", "+\t\tNSSize size = new NSSize();", "+\t\tsize.width = Float.MAX_VALUE;", "+\t\tsize.height = Float.MAX_VALUE;", "+\t\ttextContainer.initWithContainerSize(size);", "+\t\ttextStorage.addLayoutManager(layoutManager);", "+\t\tlayoutManager.addTextContainer(textContainer);", "+\t\tNSRange range = new NSRange();", "+\t\trange.length = str.length();", "+\t\ttextStorage.beginEditing();", "+\t\ttextStorage.addAttribute(OS.NSFontAttributeName, font.handle, range);", "+\t\ttextStorage.endEditing();", "+\t\trange = layoutManager.glyphRangeForTextContainer(textContainer);", "+\t\tif (range.length != 0) {", "+\t\t\tint /*long*/ glyphs = OS.malloc(4 * range.length * 2);", "+\t\t\tlayoutManager.getGlyphs(glyphs, range);", "+\t\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\t\tNSPoint point = new NSPoint();", "+\t\t\tpoint.x = x;", "+\t\t\tpoint.y = y;", "+\t\t\tpath.moveToPoint(point);", "+\t\t\tpath.appendBezierPathWithGlyphs(glyphs, range.length, font.handle);", "+\t\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\t\ttransform.scaleXBy(1, -1);", "+\t\t\ttransform.translateXBy(0, -((2*y) + textStorage.size().height));", "+\t\t\tpath.transformUsingAffineTransform(transform);", "+\t\t\tOS.free(glyphs);", "+\t\t\thandle.appendBezierPath(path);", "+\t\t}", "+\t\ttextContainer.release();", "+\t\tlayoutManager.release();", "+\t\ttextStorage.release();", "+\t} finally  {", "+\t\tif (pool != null) pool.release();", "-\ttextContainer.release();", "-\tlayoutManager.release();", "-\ttextStorage.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6159d40f094bb6ad83b5bfcdea012f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Image(Device device, InputStream stream)", "signatureAfterChange": " public Image(Device device, InputStream stream)", "diff": ["-\tinit(new ImageData(stream));", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tinit(new ImageData(stream));", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}], "num": 57633}