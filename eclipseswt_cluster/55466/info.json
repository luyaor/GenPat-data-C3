{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "feba4b8daf91d29c71a43b5ff1746133", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e5bf1329159131e2125ae066f54ba6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "31fd280be8e8a42a84f11af93d2167a17b14eb6c", "commitAfterChange": "897b53cfc07404bb405be201646e27c750abe5b5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  int [] layoutVertical (int width, int height, boolean resize)", "signatureAfterChange": "  int [] layoutVertical (int width, int height, boolean resize)", "diff": ["-\tint maxWidth = 0, maxY = 0, cols = 1;", "+\tint maxY = 0, cols = 1;", "+\tGC gc = new GC(this);", "+\tPoint [] sizes = new Point [itemCount];", "-\t\tRectangle rect = items [i].getBounds ();", "-\t\titemWidth = Math.max (itemWidth, rect.width);", "+\t\tPoint size = sizes [i] = items [i].computeSize (gc);", "+\t\titemWidth = Math.max (itemWidth, size.x);", "-\t\tRectangle rect = item.getBounds ();", "-\t\tif (wrap && i != 0 && y + rect.height > height) {", "+\t\tPoint size = sizes [i];", "+\t\tif (wrap && i != 0 && y + size.y > height) {", "-\t\t\tx += xSpacing + maxWidth;", "+\t\t\tx += xSpacing + itemWidth;", "-\t\t\tmaxWidth = 0;", "-\t\tmaxWidth = Math.max (maxWidth, rect.width);", "-\t\t\titem.setBounds (x, y, itemWidth, rect.height);", "-\t\t\tboolean visible = x + rect.width <= width && y + rect.height <= height;", "+\t\t\titem.setBounds (x, y, itemWidth, size.y, gc);", "+\t\t\tboolean visible = x + itemWidth <= width && y + size.y <= height;", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null) {", "+\t\t\t\tint controlX = x + (itemWidth - size.x) / 2;", "+\t\t\t\tcontrol.setBounds (controlX, y, itemWidth - (controlX - x), size.y);", "+\t\t\t}", "-\t\ty += ySpacing + rect.height;", "+\t\ty += ySpacing + size.y;", "-\treturn new int [] {cols, x + maxWidth, maxY};", "+\tgc.dispose();", "+\t", "+\t//TODO - tempporary code", "+\tif (resize) invalidateVisibleRegion (handle);", "+\t", "+\treturn new int [] {cols, x + itemWidth, maxY};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51d74268ab327b797f3122973a62bfc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "31fd280be8e8a42a84f11af93d2167a17b14eb6c", "commitAfterChange": "897b53cfc07404bb405be201646e27c750abe5b5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int [] layoutHorizontal (int width, int height, boolean resize)", "signatureAfterChange": "  int [] layoutHorizontal (int width, int height, boolean resize)", "diff": ["-\tint maxHeight = 0, maxX = 0, rows = 1;", "+\tint maxX = 0, rows = 1;", "+\tGC gc = new GC(this);", "+\tPoint [] sizes = new Point [itemCount];", "-\t\tRectangle rect = items [i].getBounds ();", "-\t\titemHeight = Math.max (itemHeight, rect.height);", "+\t\tPoint size = sizes [i] = items [i].computeSize (gc);", "+\t\titemHeight = Math.max (itemHeight, size.y);", "-\t\tRectangle rect = item.getBounds ();", "-\t\tif (wrap && i != 0 && x + rect.width > width) {", "+\t\tPoint size = sizes [i];", "+\t\tif (wrap && i != 0 && x + size.x > width) {", "-\t\t\ty += ySpacing + maxHeight;", "-\t\t\tmaxHeight = 0;", "+\t\t\ty += ySpacing + itemHeight;", "-\t\tmaxHeight = Math.max (maxHeight, rect.height);", "-\t\t\titem.setBounds (x, y, rect.width, itemHeight);", "-\t\t\tboolean visible = x + rect.width <= width && y + rect.height <= height;", "+\t\t\titem.setBounds (x, y, size.x, itemHeight, gc);", "+\t\t\tboolean visible = x + size.x <= width && y + itemHeight <= height;", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null) {", "+\t\t\t\tint controlY = y + (itemHeight - size.y) / 2;", "+\t\t\t\tcontrol.setBounds (x, controlY, size.x, itemHeight - (controlY - y));", "+\t\t\t}", "-\t\tx += xSpacing + rect.width;", "+\t\tx += xSpacing + size.x;", "-\treturn new int [] {rows, maxX, y + maxHeight};", "+\tgc.dispose();", "+\t", "+\t//TODO - tempporary code", "+\tif (resize) invalidateVisibleRegion (handle);", "+\t", "+\treturn new int [] {rows, maxX, y + itemHeight};"]}], "num": 55466}