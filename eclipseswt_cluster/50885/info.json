{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3093c2d44571c5d56f9b353ecc12306c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad7ef18fc99297f79655107fe8182b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": " public Point getSelection ()", "signatureAfterChange": " public Point getSelection ()", "diff": ["-\tint [] start = new int [1], end = new int [1];", "-    /* AW", "-\tint [] argList = {OS.XmNtextField, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tOS.XmTextGetSelectionPosition (argList[1], start, end);", "-\tif (start [0] == end [0]) {", "-\t\tstart [0] = end [0] = OS.XmTextGetInsertionPosition (argList[1]);", "+ \tPoint selection= new Point(0, 0);", "+\tif (fMenuHandle == 0) {", "+\t\tshort[] s= new short[2];", "+\t\tOS.GetControlData(handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, s);", "+\t\tselection.x= (short) s[0];", "+\t\tselection.y= (short) s[1];", "-    */", "-\tSystem.out.println(\"Combo.getSelection: nyi\");", "-\treturn new Point (start [0], end [0]);", "+\treturn selection;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd8bd73bfeb5707f5a81dd46918d89d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e4b1a868ce731255239223c8ff6f43351c81a864", "commitAfterChange": "9a7b4e832a6f306039ef040e56447de1fc096919", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["-\t\t\t//TODO - TEMPORARY CODE", "-\t\t\tdisplay.asyncExec (new Runnable () {", "-\t\t\t\tpublic void run () {", "-\t\t\t\t\tif (item.isDisposed()) return;", "-\t\t\t\t\t// damage instead of redraw", "-\t\t\t\t\titem.redraw ();", "-\t\t\t\t}", "-\t\t\t});", "+\t\t\tRect rect = new Rect();", "+\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, property, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\tredrawWidget (handle, rect.left, rect.top, rect.right, rect.bottom, false);", "+\t\t\t}"]}], "num": 50885}