{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f9d20290a572f94afcb96648c1f6d93", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cfc0b29a9e3cb7676217f0f3cf19cf5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void drawBackground (int control, float [] background)", "signatureAfterChange": "  void drawBackground (int control, int context, float [] background)", "diff": ["-void drawBackground (int control, float [] background) {", "-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (control, rect);", "-\tif (background != null) {", "-\t\tOS.RGBForeColor (toRGBColor (background));", "-\t\tOS.PaintRect (rect);", "+void drawBackground (int control, int context, float [] background) {", "+\tif (OS.HIVIEW && OS.VERSION >= 0x1040) {", "+\t\tCGRect rect = new CGRect ();", "+\t\tOS.HIViewGetBounds (control, rect);", "+\t\tif (background != null) {", "+\t\t\tint colorspace = OS.CGColorSpaceCreateDeviceRGB ();", "+\t\t\tOS.CGContextSetFillColorSpace (context, colorspace);", "+\t\t\tOS.CGContextSetFillColor (context, background);", "+\t\t\tOS.CGColorSpaceRelease (colorspace);", "+\t\t} else {", "+\t\t\tOS.HIThemeSetFill (OS.kThemeBrushDialogBackgroundActive, 0, context, OS.kHIThemeOrientationNormal);", "+\t\t}", "+\t\tOS.CGContextFillRect (context, rect);", "-\t\tOS.SetThemeBackground((short) OS.kThemeBrushDialogBackgroundActive, (short) 0, true);", "-\t\tOS.EraseRect (rect);", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (control, rect);", "+\t\tif (background != null) {", "+\t\t\tOS.RGBForeColor (toRGBColor (background));", "+\t\t\tOS.PaintRect (rect);", "+\t\t} else {", "+\t\t\tOS.SetThemeBackground((short) OS.kThemeBrushDialogBackgroundActive, (short) 0, true);", "+\t\t\tOS.EraseRect (rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab3ad258a0a5af131e68a3d6a6a5a19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "c49c0b0ef4d445e010ed30c7d8ba3f6978c1390d", "commitAfterChange": "159be9a33b063e5e9bf59389af26ce714198cf06", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\tif (control == labelHandle && partCode != 0) {", "+\tif (control == labelHandle && (partCode != 0 || ((state & DISABLED) != 0 && OS.VERSION >= 0x1040))) {", "-\t\tinfo.state = OS.kThemeStatePressed;", "+\t\tif (partCode != 0) {", "+\t\t\tinfo.state = OS.kThemeStatePressed;", "+\t\t} else {", "+\t\t\tif (OS.IsControlActive (labelHandle)) {", "+\t\t\t\tinfo.state = (state & DISABLED) == 0 ? OS.kThemeStateActive : OS.kThemeStateUnavailable;", "+\t\t\t} else {", "+\t\t\t\tinfo.state = (state & DISABLED) == 0 ? OS.kThemeStateInactive : OS.kThemeStateUnavailableInactive;", "+\t\t\t}", "+\t\t}", "-\t\tint colorspace = OS.CGColorSpaceCreateDeviceRGB ();", "-\t\tOS.CGContextSetFillColorSpace (context [0], colorspace);", "-\t\tOS.CGColorSpaceRelease (colorspace);", "-\t\tOS.CGContextSetFillColor (context [0], parent.getForegroundColor ().handle);", "+\t\tif ((state & DISABLED) != 0 && OS.VERSION >= 0x1040) {", "+\t\t\tOS.HIThemeSetTextFill (OS.kThemeTextColorMenuItemDisabled, 0, context [0], OS.kHIThemeOrientationNormal);", "+\t\t} else {", "+\t\t\tint colorspace = OS.CGColorSpaceCreateDeviceRGB ();", "+\t\t\tOS.CGContextSetFillColorSpace (context [0], colorspace);", "+\t\t\tOS.CGColorSpaceRelease (colorspace);", "+\t\t\tOS.CGContextSetFillColor (context [0], parent.getForegroundColor ().handle);", "+\t\t}", "+\t\t\t\t} else if ((state & DISABLED) != 0) {", "+\t\t\t\t\tOS.HICreateTransformedCGImage (imageHandle, OS.kHITransformDisabled, buffer);", "+\t\t\t\t\timageHandle = buffer [0];"]}], "num": 11696}