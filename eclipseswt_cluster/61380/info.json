{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dc4cd667516fbddf9e3cd23ace345e6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1373da9d9c62244df9db6127a167973", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ad9e4c7cb4e85f9de20630936ecc2b154a562c71", "commitAfterChange": "cea50da610c26e76615c8eaec7dfd0146a36b0fd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public int[] getTabs()", "signatureAfterChange": " public int[] getTabs()", "diff": ["-\tint /*long*/ tabArray = OS.pango_layout_get_tabs(layout);", "-\tif (tabArray == 0) return null;", "-\tint nTabs = OS.pango_tab_array_get_size(tabArray);", "-\tint[] tabs = new int[nTabs];", "-\tif (nTabs > 0) {", "-\t\tint /*long*/[] locations = new int /*long*/[1];", "-\t\tOS.pango_tab_array_get_tabs(tabArray, null, locations);", "-\t\tif (locations[0] != 0) {", "-\t\t\tOS.memmove(tabs, locations[0], nTabs * 4);", "-\t\t\tOS.g_free(locations[0]);", "-\t\t}", "-\t}", "-\tOS.pango_tab_array_free(tabArray);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571f5c7aa120da0703bb96d683f6b808", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ed8f32b56b812cdf00115072db13b1229571e186", "commitAfterChange": "ab9053c170cd5f8a90daf93de82e0a79f1e92b73", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\t/*", "-\t* Ignore focus change events when the window getting or losing", "-\t* focus is a menu.  Because XmGetFocusWidget() does not answer", "-\t* the menu shell (it answers the menu parent), it is necessary", "-\t* to use XGetInputFocus() to get the real X focus window.", "-\t*/", "-\tint xDisplay = xEvent.display;", "-\tif (xDisplay == 0) return 0;", "-\tint [] unused = new int [1], xWindow = new int [1];", "-\tOS.XGetInputFocus (xDisplay, xWindow, unused);", "-\tif (xWindow [0] != 0) {", "-\t\tint widget = OS.XtWindowToWidget (xDisplay, xWindow [0]);", "-\t\tif (widget != 0 && OS.XtClass (widget) == OS.xmMenuShellWidgetClass ()) return 0;", "-\t}", "-\t"]}], "num": 61380}