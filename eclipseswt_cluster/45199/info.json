{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b4f32988dd12933cf4491acda17def1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f412258ef3e5561273967ce348e8288", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void setIncrement (int value)", "signatureAfterChange": " public void setIncrement (int value)", "diff": ["-\tint hHeap = OS.GetProcessHeap ();", "-\tint count = OS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, 0, (UDACCEL)null);", "-\tint udaccels = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, UDACCEL.sizeof * count);", "+\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\tint count = (int)/*64*/OS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, 0, (UDACCEL)null);", "+\tint /*long*/ udaccels = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, UDACCEL.sizeof * count);", "-\t\tint offset = udaccels + (i * UDACCEL.sizeof);", "+\t\tint /*long*/ offset = udaccels + (i * UDACCEL.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce82c3f440fb967d78ca2459f3fd7775", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "c17b6bfe3dc2f2dab791d9333ee2f08e9678e069", "commitAfterChange": "edcb9a708b2db146feb80ecb85928d59ad2a09b4", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setIncrement (int value)", "signatureAfterChange": " public void setIncrement (int value)", "diff": ["-\tincrement = value;", "+\tint hHeap = OS.GetProcessHeap ();", "+\tint count = OS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, 0, (UDACCEL)null);", "+\tint udaccels = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, UDACCEL.sizeof * count);", "+\tOS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, count, udaccels);", "+\tint first = -1;", "+\tUDACCEL udaccel = new UDACCEL ();", "+\tfor (int i = 0; i < count; i++) {", "+\t\tint offset = udaccels + (i * UDACCEL.sizeof);", "+\t\tOS.MoveMemory (udaccel, offset, UDACCEL.sizeof);", "+\t\tif (first == -1) first = udaccel.nInc;", "+\t\tudaccel.nInc  =  udaccel.nInc * value / first;", "+\t\tOS.MoveMemory (offset, udaccel, UDACCEL.sizeof);", "+\t}", "+\tOS.SendMessage (hwndUpDown, OS.UDM_SETACCEL, count, udaccels);", "+\tOS.HeapFree (hHeap, 0, udaccels);"]}], "num": 45199}