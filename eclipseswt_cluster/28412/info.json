{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eaf6ea70c4978d6645d0ecfc95950c5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7827e8dd459ef049f79365530d8f2363", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 31, "signatureBeforeChange": " public TreeItem getItem (Point point)", "signatureAfterChange": " public TreeItem getItem (Point point)", "diff": ["-\tint /*long*/ [] path = new int /*long*/ [1];\t", "+\tint /*long*/ [] path = new int /*long*/ [1];", "+\tint clientX = point.x - getBorderWidth ();", "+\tint clientY = point.y - getHeaderHeight ();", "-\tif (!OS.gtk_tree_view_get_path_at_pos (handle, point.x, point.y, path, null, null, null)) return null;", "+\tif (!OS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null)) return null;", "-\t\t\tint[] buffer = new int [1];", "-\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\tOS.gtk_tree_view_get_cell_area (handle, path [0], columnHandle, rect);", "-\t\t\tOS.gtk_widget_style_get (handle, OS.expander_size, buffer, 0);", "-\t\t\tint expanderSize = buffer [0] + TreeItem.EXPANDER_EXTRA_PADDING;", "-\t\t\toverExpander = rect.x - 1 <= point.x && point.x < rect.x + expanderSize;", "+\t\t\tfor (int i = 0; i <= columnCount; i++) {", "+\t\t\t\tint /*long*/ column = OS.gtk_tree_view_get_column (handle, i);", "+\t\t\t\tif (column != 0) {", "+\t\t\t\t\tint[] buffer = new int [1];", "+\t\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path [0], column, rect);", "+\t\t\t\t\tOS.gtk_widget_style_get (handle, OS.expander_size, buffer, 0);", "+\t\t\t\t\tint expanderSize = buffer [0] + TreeItem.EXPANDER_EXTRA_PADDING;", "+\t\t\t\t\toverExpander = rect.x - 1 <= point.x && point.x < rect.x + expanderSize;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa27df2952b79709b242c655e2944e96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r public int size ()", "signatureAfterChange": "\r \r public int size ()", "diff": ["-\treturn OS.ImageList_GetImageCount (handle);\r", "+\tint result = 0;\r", "+\tint count = OS.ImageList_GetImageCount (handle);\r", "+\tfor (int i=0; i<count; i++) {\r", "+\t\tif (images [i] != null) {\r", "+\t\t\tif (images [i].isDisposed ()) images [i] = null;\r", "+\t\t\tif (images [i] == null) result++;\r", "+\t\t}\r", "+\t}\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf82623b6dff29004a88fe7404118cc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2460307210ca1c84db4d87d040f55706616b5591", "commitAfterChange": "bf276595d1ee2ba775bdcbd0a9b4fd45f74da0c5", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": "  LRESULT wmNotifyChild (NMHDR hdr, long wParam, long lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (NMHDR hdr, long wParam, long lParam)", "diff": ["+\t\t\t\t\tif (tipRequested) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * Bug in Windows. The tooltip is only displayed up to", "+\t\t\t\t\t\t * the first line delimiter. The fix is to remove all", "+\t\t\t\t\t\t * line delimiter characters.", "+\t\t\t\t\t\t */", "+\t\t\t\t\t\tint shift = 0;", "+\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\tswitch (buffer [i]) {", "+\t\t\t\t\t\t\t\tcase '\\r':", "+\t\t\t\t\t\t\t\tcase '\\n':", "+\t\t\t\t\t\t\t\t\tshift++;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\tif (shift != 0) buffer [i - shift] = buffer [i];", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tlength -= shift;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59fbe55c46c0714b427d9f8f4472226", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "8d0b48a25603cd51a4f40a03ee4a20a03407b958", "commitAfterChange": "5479bfb7066e66292947abd087547ed1ac0e1b66", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "signatureAfterChange": " boolean removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "diff": ["-void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {", "+boolean removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {", "+\tint oldRowHeight = itemBounds.height;", "-\t\treturn;", "+\t\treturn true;", "+\tint newRowHeight = 0;", "+\tfor (int i = 0; i < newLength; i++) {", "+\t\tnewRowHeight = Math.max(newRowHeight, items[rowIndex][i].preferredHeight);", "+\t}", "+\treturn newRowHeight != oldRowHeight;"]}], "num": 28412}