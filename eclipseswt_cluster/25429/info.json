{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f01c3486fa037a6964661e8453072b96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5a17069cec81081c73d91451f46ebe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 51, "signatureBeforeChange": " void doArrowDown (int stateMask)", "signatureAfterChange": " void onArrowDown (int stateMask)", "diff": ["-void doArrowDown (int stateMask) {", "-\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "-\t\t/* Down Arrow with no modifiers */", "-\t\tint newFocusIndex = focusItem.availableIndex + 1;", "-\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\t\tselectItem (availableItems [newFocusIndex], false);", "-\t\tsetFocusItem (availableItems [newFocusIndex], true);", "-\t\tredrawItem (newFocusIndex, true);", "-\t\tshowItem (availableItems [newFocusIndex]);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = this;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\t/* CTRL+Down Arrow, CTRL+Shift+Down Arrow */", "-\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "-\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "-\t\t\tupdate ();", "-\t\t\ttopIndex++;", "-\t\t\tgetVerticalBar ().setSelection (topIndex);", "-\t\t\tRectangle clientArea = getClientArea ();", "-\t\t\tGC gc = new GC (this);", "-\t\t\tgc.copyArea (", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, -itemHeight);", "-\t\t\tgc.dispose ();", "-\t\t\treturn;", "-\t\t}", "-\t\t/* Shift+Down Arrow */", "-\t\tint newFocusIndex = focusItem.availableIndex + 1;", "-\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\t\tselectItem (availableItems [newFocusIndex], false);", "-\t\tsetFocusItem (availableItems [newFocusIndex], true);", "-\t\tredrawItem (newFocusIndex, true);", "-\t\tshowItem (availableItems [newFocusIndex]);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = this;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* CTRL+Shift+Down Arrow */", "-\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "-\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "-\t\t\tupdate ();", "-\t\t\ttopIndex++;", "-\t\t\tgetVerticalBar ().setSelection (topIndex);", "-\t\t\tRectangle clientArea = getClientArea ();", "-\t\t\tGC gc = new GC (this);", "-\t\t\tgc.copyArea (", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, -itemHeight);", "-\t\t\tgc.dispose ();", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+Down Arrow */", "-\t\tint focusIndex = focusItem.availableIndex; ", "-\t\tif (focusIndex == availableItems.length - 1) return;\t/* at bottom */", "-\t\tTreeItem newFocusItem = availableItems [focusIndex + 1];", "-\t\tsetFocusItem (newFocusItem, true);", "-\t\tredrawItem (newFocusItem.availableIndex, true);", "-\t\tshowItem (newFocusItem);", "-\t\treturn;", "-\t}", "-\t/* Shift+Down Arrow */", "-\tint newFocusIndex = focusItem.availableIndex + 1;", "-\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tselectItem (availableItems [newFocusIndex], true);", "-\tsetFocusItem (availableItems [newFocusIndex], true);", "-\tredrawItem (newFocusIndex, true);", "-\tshowItem (availableItems [newFocusIndex]);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = this;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+void onArrowDown (int stateMask) {", "+\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "+\t\t/* Down Arrow with no modifiers */", "+\t\tint newFocusIndex = focusItem.availableIndex + 1;", "+\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "+\t\tselectItem (availableItems [newFocusIndex], false);", "+\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (availableItems [newFocusIndex]);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = this;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+Down Arrow, CTRL+Shift+Down Arrow */", "+\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "+\t\t\tupdate ();", "+\t\t\ttopIndex++;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+Down Arrow */", "+\t\tint newFocusIndex = focusItem.availableIndex + 1;", "+\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "+\t\tselectItem (availableItems [newFocusIndex], false);", "+\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (availableItems [newFocusIndex]);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = this;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+Down Arrow */", "+\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "+\t\t\tupdate ();", "+\t\t\ttopIndex++;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+Down Arrow */", "+\t\tint focusIndex = focusItem.availableIndex; ", "+\t\tif (focusIndex == availableItems.length - 1) return;\t/* at bottom */", "+\t\tTreeItem newFocusItem = availableItems [focusIndex + 1];", "+\t\tsetFocusItem (newFocusItem, true);", "+\t\tredrawItem (newFocusItem.availableIndex, true);", "+\t\tshowItem (newFocusItem);", "+\t\treturn;", "+\t}", "+\t/* Shift+Down Arrow */", "+\tint newFocusIndex = focusItem.availableIndex + 1;", "+\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tselectItem (availableItems [newFocusIndex], true);", "+\tsetFocusItem (availableItems [newFocusIndex], true);", "+\tredrawItem (newFocusIndex, true);", "+\tshowItem (availableItems [newFocusIndex]);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = this;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d4e23b9f25d24352be8a3c872af1f54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 54, "signatureBeforeChange": " void doArrowUp (int stateMask)", "signatureAfterChange": " void onArrowUp (int stateMask)", "diff": ["-}", "-void doArrowUp (int stateMask) {", "-\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "-\t\t/* Up Arrow with no modifiers */", "-\t\tint newFocusIndex = focusItem.availableIndex - 1;", "-\t\tif (newFocusIndex < 0) return; \t\t/* at top */", "-\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (newFocusIndex, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\t/* CTRL+Up Arrow, CTRL+Shift+Up Arrow */", "-\t\t\tif (topIndex == 0) return;\t/* at top */", "-\t\t\tupdate ();", "-\t\t\ttopIndex--;", "-\t\t\tgetVerticalBar ().setSelection (topIndex);", "-\t\t\tRectangle clientArea = getClientArea ();", "-\t\t\tGC gc = new GC (this);", "-\t\t\tgc.copyArea (", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, itemHeight);", "-\t\t\tgc.dispose ();", "-\t\t\treturn;", "-\t\t}", "-\t\t/* Shift+Up Arrow */", "-\t\tint newFocusIndex = focusItem.availableIndex - 1;", "-\t\tif (newFocusIndex < 0) return; \t/* at top */", "-\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (newFocusIndex, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* CTRL+Shift+Up Arrow */", "-\t\t\tif (topIndex == 0) return;\t/* at top */", "-\t\t\tupdate ();", "-\t\t\ttopIndex--;", "-\t\t\tgetVerticalBar ().setSelection (topIndex);", "-\t\t\tRectangle clientArea = getClientArea ();", "-\t\t\tGC gc = new GC (this);", "-\t\t\tgc.copyArea (", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, itemHeight);", "-\t\t\tgc.dispose ();", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+Up Arrow */", "-\t\tint focusIndex = focusItem.availableIndex; ", "-\t\tif (focusIndex == 0) return;\t/* at top */", "-\t\tTreeItem newFocusItem = availableItems [focusIndex - 1];", "-\t\tsetFocusItem (newFocusItem, true);", "-\t\tshowItem (newFocusItem);", "-\t\tredrawItem (newFocusItem.availableIndex, true);", "-\t\treturn;", "-\t}", "-\t/* Shift+Up Arrow */", "-\tint newFocusIndex = focusItem.availableIndex - 1;", "-\tif (newFocusIndex < 0) return; \t\t/* at top */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tTreeItem item = availableItems [newFocusIndex];", "-\tselectItem (item, true);", "-\tsetFocusItem (item, true);", "-\tredrawItem (newFocusIndex, true);", "-\tshowItem (item);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = item;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+}", "+void onArrowUp (int stateMask) {", "+\tif ((stateMask & (SWT.SHIFT | SWT.CTRL)) == 0) {", "+\t\t/* Up Arrow with no modifiers */", "+\t\tint newFocusIndex = focusItem.availableIndex - 1;", "+\t\tif (newFocusIndex < 0) return; \t\t/* at top */", "+\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+Up Arrow, CTRL+Shift+Up Arrow */", "+\t\t\tif (topIndex == 0) return;\t/* at top */", "+\t\t\tupdate ();", "+\t\t\ttopIndex--;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+Up Arrow */", "+\t\tint newFocusIndex = focusItem.availableIndex - 1;", "+\t\tif (newFocusIndex < 0) return; \t/* at top */", "+\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (newFocusIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+Up Arrow */", "+\t\t\tif (topIndex == 0) return;\t/* at top */", "+\t\t\tupdate ();", "+\t\t\ttopIndex--;", "+\t\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tGC gc = new GC (this);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose ();", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+Up Arrow */", "+\t\tint focusIndex = focusItem.availableIndex; ", "+\t\tif (focusIndex == 0) return;\t/* at top */", "+\t\tTreeItem newFocusItem = availableItems [focusIndex - 1];", "+\t\tsetFocusItem (newFocusItem, true);", "+\t\tshowItem (newFocusItem);", "+\t\tredrawItem (newFocusItem.availableIndex, true);", "+\t\treturn;", "+\t}", "+\t/* Shift+Up Arrow */", "+\tint newFocusIndex = focusItem.availableIndex - 1;", "+\tif (newFocusIndex < 0) return; \t\t/* at top */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTreeItem item = availableItems [newFocusIndex];", "+\tselectItem (item, true);", "+\tsetFocusItem (item, true);", "+\tredrawItem (newFocusIndex, true);", "+\tshowItem (item);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = item;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}], "num": 25429}