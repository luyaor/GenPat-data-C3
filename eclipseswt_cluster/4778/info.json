{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d24801d75798b423b3eeaa765689c6e6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa67c5d047977a4506ee8cfbef9c6db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGDecoder.java", "commitBeforeChange": "55e3eb70655b5f0f01b24eadacf20a9e1167ef52", "commitAfterChange": "6a714c0fa388c6b03ac7663475ff4fa71064f562", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 123, "signatureBeforeChange": " \t static ImageData[] loadFromByteStream(InputStream inputStream)", "signatureAfterChange": " \t static ImageData[] loadFromByteStream(InputStream inputStream, ImageLoader loader)", "diff": ["-static ImageData[] loadFromByteStream(InputStream inputStream) {", "+static ImageData[] loadFromByteStream(InputStream inputStream, ImageLoader loader) {", "+\tcinfo.buffered_image = cinfo.progressive_mode && loader.hasListeners();", "-\twhile (cinfo.output_scanline < cinfo.output_height) {", "-\t\tint offset = row_stride * cinfo.output_scanline;", "-\t\tjpeg_read_scanlines(cinfo, buffer, 1);", "-\t\tSystem.arraycopy(buffer[0], 0, data, offset, row_stride);", "+\tif (cinfo.buffered_image) {", "+\t\tboolean done;", "+\t\tdo {", "+\t\t\tint incrementCount = cinfo.input_scan_number - 1;", "+\t\t\tjpeg_start_output(cinfo, cinfo.input_scan_number);", "+\t\t\twhile (cinfo.output_scanline < cinfo.output_height) {", "+\t\t\t\tint offset = row_stride * cinfo.output_scanline;", "+\t\t\t\tjpeg_read_scanlines(cinfo, buffer, 1);", "+\t\t\t\tSystem.arraycopy(buffer[0], 0, data, offset, row_stride);", "+\t\t\t}", "+\t\t\tjpeg_finish_output(cinfo);", "+\t\t\tImageData imageData = ImageData.internal_new(", "+\t\t\t\tcinfo.output_width, cinfo.output_height, palette.isDirect ? 24 : 8, palette, scanlinePad, data,", "+\t\t\t\t0, null, null, -1, -1, SWT.IMAGE_JPEG, 0, 0, 0, 0);", "+\t\t\tloader.notifyListeners(new ImageLoaderEvent(loader, imageData, incrementCount, done = jpeg_input_complete(cinfo)));", "+\t\t\tbyte[] newData = new byte[data.length];", "+\t\t\tif (done) System.arraycopy(data, 0, newData, 0, data.length);", "+\t\t\tdata = newData;", "+\t\t} while (!done);", "+\t} else {", "+\t\twhile (cinfo.output_scanline < cinfo.output_height) {", "+\t\t\tint offset = row_stride * cinfo.output_scanline;", "+\t\t\tjpeg_read_scanlines(cinfo, buffer, 1);", "+\t\t\tSystem.arraycopy(buffer[0], 0, data, offset, row_stride);", "+\t\t}", "-\t\t\tcinfo.output_width,", "-\t\t\tcinfo.output_height, ", "-\t\t\tpalette.isDirect ? 24 : 8,", "-\t\t\tpalette,", "-\t\t\tscanlinePad,", "-\t\t\tdata,", "-\t\t\t0,", "-\t\t\tnull,", "-\t\t\tnull,", "-\t\t\t-1,", "-\t\t\t-1,", "-\t\t\tSWT.IMAGE_JPEG,", "-\t\t\t0,", "-\t\t\t0,", "-\t\t\t0,", "-\t\t\t0);", "+\t\tcinfo.output_width, cinfo.output_height, palette.isDirect ? 24 : 8, palette, scanlinePad, data,", "+\t\t0, null, null, -1, -1, SWT.IMAGE_JPEG, 0, 0, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47734d92d301eded51aa0c317424ca79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGDecoder.java", "commitBeforeChange": "cb3a448c382f598a29567e3e9130a4d75fd8f0fa", "commitAfterChange": "2f94dd786250a5ed995cff2399073f4f10e36ae0", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \t static ImageData[] loadFromByteStream(InputStream inputStream, ImageLoader loader)", "signatureAfterChange": " \t static ImageData[] loadFromByteStream(InputStream inputStream, ImageLoader loader)", "diff": ["+\tImageData imageData = ImageData.internal_new(", "+\t\t\tcinfo.output_width, cinfo.output_height, palette.isDirect ? 24 : 8, palette, scanlinePad, data,", "+\t\t\t0, null, null, -1, -1, SWT.IMAGE_JPEG, 0, 0, 0, 0);", "-\t\t\tImageData imageData = ImageData.internal_new(", "-\t\t\t\tcinfo.output_width, cinfo.output_height, palette.isDirect ? 24 : 8, palette, scanlinePad, data,", "-\t\t\t\t0, null, null, -1, -1, SWT.IMAGE_JPEG, 0, 0, 0, 0);", "-\t\t\tloader.notifyListeners(new ImageLoaderEvent(loader, imageData, incrementCount, done = jpeg_input_complete(cinfo)));", "-\t\t\tbyte[] newData = new byte[data.length];", "-\t\t\tif (done) System.arraycopy(data, 0, newData, 0, data.length);", "-\t\t\tdata = newData;", "+\t\t\tloader.notifyListeners(new ImageLoaderEvent(loader, (ImageData)imageData.clone(), incrementCount, done = jpeg_input_complete(cinfo)));", "-\tImageData imageData = ImageData.internal_new(", "-\t\tcinfo.output_width, cinfo.output_height, palette.isDirect ? 24 : 8, palette, scanlinePad, data,", "-\t\t0, null, null, -1, -1, SWT.IMAGE_JPEG, 0, 0, 0, 0);"]}], "num": 4778}