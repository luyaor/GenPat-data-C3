{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1215a6121f3d6181adf25146f12017f5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f34093789d9f173c61685fa6c7cd30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "ab36ff33505351b26f3e4d9f74b31e4f674dc433", "commitAfterChange": "9edf4f25d4178b12738b1da8925e7c782994bf4b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean open ()", "signatureAfterChange": "\r public boolean open ()", "diff": ["-\t\r", "-\tint ptrGrabResult = OS.gdk_pointer_grab(xWindow,\r", "-\t                                        true,\r", "-\t                                        OS.GDK_POINTER_MOTION_MASK | OS.GDK_BUTTON_RELEASE_MASK,\r", "-\t                                        xWindow,\r", "-\t                                        cursor,\r", "-\t                                        OS.GDK_CURRENT_TIME());\r", "-\tlastCursor = cursor;\r", "+\tgrab();\r", "-\t\t\t\tif (cursor != lastCursor) {}\r", "+\t\t\t\tif (cursor != lastCursor) { ungrab(); grab(); }\r", "-\tif (ptrGrabResult == OS.GDK_GRAB_SUCCESS)\r", "-\t\tOS.gdk_pointer_ungrab(OS.GDK_CURRENT_TIME());\r", "+\tungrab();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b3fbf32d94f4b3ee9a44cb46180801", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ad16073e1d11c9f430846c76bd3044dd99bb6d4a", "commitAfterChange": "5066ff846ef21e41d59ed5718faa64644edbf68c", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 210, "signatureBeforeChange": "  LRESULT WM_MOVE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_MOVE (int wParam, int lParam)", "diff": ["-\t\t\t\tif (findThemeControl () != null) {", "-\t\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "-\t\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "-\t\t\t\t}", "+\t\t\t\tif (findThemeControl () != null) redrawChildren ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fb8f744f9e0822f74a28d0ac5da415", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "a20c43ec0e156a3331e5717d89397462a5578594", "commitAfterChange": "24e7a9c7631763c8e70392463bd7e5b8fd4b635f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createWidget()", "signatureAfterChange": "  void createWidget()", "diff": ["+\tgetDate();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e2f1d59ec518aa251e988a0e149451", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8b1dd42366ae834b92395fbb731d5e2d9959ec92", "commitAfterChange": "194b731227cf23a284f616e388bb32f837343740", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": "\r public void update ()", "signatureAfterChange": "\r public void update ()", "diff": ["+\tupdate (false);\r", "+}\r", "-\t\tint flags = OS.RDW_UPDATENOW | OS.RDW_ALLCHILDREN;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3d3c16be7cca72df968573e8a0f824", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e0915feea84314f1929f7d98993453c25761945d", "commitAfterChange": "e5b655b350cf36b64f0c549d46d2b69fb2d566fe", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void redraw ()", "signatureAfterChange": " public void redraw ()", "diff": ["+\tredraw (false);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4038ab60f97a1460c2da8fbd911337e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6834815c2de8a3ec960a5628d18797b387e4272b", "commitAfterChange": "46f8989ac64e00fcc6a9b24cf039634ec9a8e532", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  void setItemCount (int count, int hParent, int hItem)", "signatureAfterChange": "  void setItemCount (int count, int hParent, int hItem)", "diff": ["-\tif (hItem != 0) {", "-\t\tTVITEM tvItem = new TVITEM ();", "-\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_PARAM;", "-\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hItem);", "-\t\ttvItem.hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hItem);", "-\t\twhile (tvItem.hItem != 0) {", "-\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\tTreeItem item = tvItem.lParam != -1 ? items [tvItem.lParam] : null;", "-\t\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\t\titem.dispose ();", "-\t\t\t} else {", "-\t\t\t\treleaseItem (tvItem.hItem, tvItem, false);", "-\t\t\t\tdestroyItem (null, tvItem.hItem);", "-\t\t\t}", "-\t\t\ttvItem.hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hItem);", "+\tTVITEM tvItem = new TVITEM ();", "+\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_PARAM;", "+\twhile (hItem != 0) {", "+\t\ttvItem.hItem = hItem;", "+\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hItem);", "+\t\tTreeItem item = tvItem.lParam != -1 ? items [tvItem.lParam] : null;", "+\t\tif (item != null && !item.isDisposed ()) {", "+\t\t\titem.dispose ();", "+\t\t} else {", "+\t\t\treleaseItem (tvItem.hItem, tvItem, false);", "+\t\t\tdestroyItem (null, tvItem.hItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fc636d4a09ca3ccd71528efd48c9cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processKeyDown (int callData, int arg1, int int2)", "diff": ["-\t* Feature in GTK.  When an item is reselected using", "-\t* the space bar or default selected using the return key,", "-\t* GTK does not issue notification. The fix is to ignore the", "-\t* notification that is sent by GTK and look for the space key.", "+\t* Feature in GTK.  When an item is default selected using", "+\t* the return key, GTK does not issue notification. The fix is", "+\t* to issue this notification when the return key is pressed.", "-\t\tcase OS.GDK_KP_Enter:", "-\t\tcase OS.GDK_space: {", "-\t\t\tif (OS.GTK_CLIST_FOCUS_ROW (handle) != -1) {", "-\t\t\t\tint type = key == OS.GDK_space ? SWT.Selection : SWT.DefaultSelection;", "-\t\t\t\tpostEvent (type);", "-\t\t\t}", "+\t\tcase OS.GDK_KP_Enter: {", "+\t\t\tpostEvent (SWT.DefaultSelection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc15169bff06d8da20b52c4383c8fa0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  boolean isShowing ()", "signatureAfterChange": "  boolean isShowing ()", "diff": ["+\t/*", "+\t* This is not complete.  Need to check if the", "+\t* widget is obscurred by a parent or sibling.", "+\t*/", "+\t/* AW", "-\t// check if the widget is obscurred by a parent or sibling.", "-\tint rgn= 0;", "-\ttry {", "-\t\trgn= OS.NewRgn();", "-\t\tMacUtil.getVisibleRegion(handle, rgn, true);", "-\t\treturn !OS.EmptyRgn(rgn);", "-\t} finally {", "-\t\tif (rgn != 0)", "-\t\t\tOS.DisposeRgn(rgn);", "+\tControl control = this;", "+\twhile (control != null) {", "+\t\tPoint size = control.getSize ();", "+\t\tif (size.x == 0 || size.y == 0) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tcontrol = control.parent;", "+\t*/", "+\treturn true;", "+\t/*", "+\t* Check to see if current damage is included.", "+\t*/", "+//\tif (!OS.IsWindowVisible (handle)) return false;", "+//\tint flags = OS.DCX_CACHE | OS.DCX_CLIPCHILDREN | OS.DCX_CLIPSIBLINGS;", "+//\tint hDC = OS.GetDCEx (handle, 0, flags);", "+//\tint result = OS.GetClipBox (hDC, new RECT ());", "+//\tOS.ReleaseDC (handle, hDC);", "+//\treturn result != OS.NULLREGION;"]}], "num": 13020}