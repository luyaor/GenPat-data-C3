{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edce2ab9f04a9a4bafd125a40f4cff22", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829b987b4b91b602bab65aa97894e7cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3d16bdf9400649d9f4f0fff0831768ba6c38fdea", "commitAfterChange": "70ee706a89f93c19e2b71b9fd101577af18a1f87", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": " public Image getSystemImage (int style)", "signatureAfterChange": " public Image getSystemImage (int style)", "diff": ["+\tint mask = 0;", "+\t\t\t\terrorMask = createMask (errorImage);", "+\t\t\tmask = errorMask;", "+\t\t\t\tinfoMask = createMask (infoImage);", "+\t\t\tmask = infoMask;", "+\t\t\t\tquestionMask = createMask (questionImage);", "+\t\t\tmask = questionMask;", "+\t\t\t\twarningMask = createMask (warningImage);", "+\t\t\tmask = warningMask;", "+\t\t\t\tworkingMask = createMask (workingImage);", "+\t\t\tmask = workingMask;", "-\tif (image == OS.XmUNSPECIFIED_PIXMAP) error (SWT.ERROR_NO_HANDLES);", "-\tImage temp = Image.motif_new (this, SWT.ICON, image, 0);", "-\tImageData data = temp.getImageData ();", "-\ttemp.dispose ();", "-\tdata.transparentPixel = data.palette.getPixel (new RGB (255,255,255));", "-\treturn new Image (this, data);", "+\treturn Image.motif_new (this, SWT.ICON, image, mask);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9116326e02b8b3130a03440dc34c6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/builders/Check64CompilationParticipant.java", "commitBeforeChange": "910ea35086f5d124dc6ca7d63b61fb183d8e3374", "commitAfterChange": "0715da087d8a4170e422b40440e776332692ae12", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void replace(char[] source)", "signatureAfterChange": "  boolean replace(char[] source)", "diff": ["-void replace(char[] source) {", "-\tif (CharOperation.indexOf(INT_LONG, source, true, 0) != -1 || CharOperation.indexOf(INT_LONG_ARRAY, source, true, 0) != -1 ||", "-\t\tCharOperation.indexOf(FLOAT_DOUBLE, source, true, 0) != -1 || CharOperation.indexOf(FLOAT_DOUBLE_ARRAY, source, true, 0) != -1) {", "-\t\treplace(source, INT_LONG, LONG_INT);", "-\t\treplace(source, INT_LONG_ARRAY, LONG_INT_ARRAY);", "-\t\treplace(source, FLOAT_DOUBLE, DOUBLE_FLOAT);", "-\t\treplace(source, FLOAT_DOUBLE_ARRAY, DOUBLE_FLOAT_ARRAY);", "-\t} else {", "-\t\treplace(source, LONG_INT, INT_LONG);", "-\t\treplace(source, LONG_INT_ARRAY, INT_LONG_ARRAY);", "-\t\treplace(source, DOUBLE_FLOAT, FLOAT_DOUBLE);", "-\t\treplace(source, DOUBLE_FLOAT_ARRAY, FLOAT_DOUBLE_ARRAY);", "+boolean replace(char[] source) {", "+\tboolean changed = false;", "+\tchanged |= replace(source, INT_LONG, LONG_INT);", "+\tchanged |= replace(source, INT_LONG_ARRAY, LONG_INT_ARRAY);", "+\tchanged |= replace(source, FLOAT_DOUBLE, DOUBLE_FLOAT);", "+\tchanged |= replace(source, FLOAT_DOUBLE_ARRAY, DOUBLE_FLOAT_ARRAY);", "+\tif (!changed) {", "+\t\tchanged |= replace(source, LONG_INT, INT_LONG);", "+\t\tchanged |= replace(source, LONG_INT_ARRAY, INT_LONG_ARRAY);", "+\t\tchanged |= replace(source, DOUBLE_FLOAT, FLOAT_DOUBLE);", "+\t\tchanged |= replace(source, DOUBLE_FLOAT_ARRAY, FLOAT_DOUBLE_ARRAY);", "+\treturn changed;"]}], "num": 20342}