{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "598c4fe441f0c5e9aaa5021615fafa11", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f8b1ddb7c9e889e318c7dfc5f59743", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "cd729e2c48dead5df59b387a7dd4b7efdf79375f", "commitAfterChange": "30427380958ec2923d85fa84aed3c01febb70756", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void bringToTop (boolean force)", "signatureAfterChange": "\r void bringToTop (boolean force)", "diff": ["-\tint display = OS.XtDisplay (handle);\r", "-\tif (display == 0) return;\r", "-\tint window = OS.XtWindow (handle);\r", "-\tif (window == 0) return;\r", "-\t\r", "+\tint xDisplay = OS.XtDisplay (handle);\r", "+\tif (xDisplay == 0) return;\r", "+\tint xWindow = OS.XtWindow (handle);\r", "+\tif (xWindow == 0) return;\r", "-\t\tOS.XGetInputFocus (display, buffer1, buffer2);\r", "-\t\tint xWindow = buffer1 [0];\r", "-\t\tif (xWindow == 0) return;\r", "-\t\tint handle = OS.XtWindowToWidget (display, xWindow);\r", "+\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "+\t\tif (buffer1 [0] == 0) return;\r", "+\t\tint handle = OS.XtWindowToWidget (xDisplay, buffer1 [0]);\r", "-\r", "-\t\tWidget widget = null;\r", "-\t\tdo {\r", "-\t\t\twidget = WidgetTable.get (handle);\r", "-\t\t} while (widget == null && (handle = OS.XtParent (handle)) != 0);\r", "-\t\tif (widget == null) return;\r", "-\t\r", "-\tOS.XSetInputFocus (display, window, OS.RevertToParent, OS.CurrentTime);\r", "+\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8cc9d78d42c6ea90178a31ddd15f3ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "d92832f7f35479b68af178a8f84b854951fa1498", "commitAfterChange": "99fcc5706076e4a6fca5bfd237bf24c8fa098873", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void bringToTop (boolean force)", "signatureAfterChange": "\r void bringToTop (boolean force)", "diff": ["-\t/*\r", "-\t* Feature in X.  Calling XSetInputFocus() when the\r", "-\t* widget is not viewable causes an X bad match error.\r", "-\t* The fix is to call XSetInputFocus() when the widget\r", "-\t* is viewable.\r", "-\t*/\r", "-\tif (minimized) return;\r", "-\tif (!isVisible ()) return;\r", "-\tint xDisplay = OS.XtDisplay (handle);\r", "-\tif (xDisplay == 0) return;\r", "-\tint xWindow = OS.XtWindow (handle);\r", "-\tif (xWindow == 0) return;\r", "-\tif (!force) {\r", "-\t\tint [] buffer1 = new int [1], buffer2 = new int [1];\r", "-\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "-\t\tif (buffer1 [0] == 0) return;\r", "-\t\tint handle = OS.XtWindowToWidget (xDisplay, buffer1 [0]);\r", "-\t\tif (handle == 0) return;\r", "-\t}\r", "-\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);\r", "+\tmoveAbove (null);\r"]}], "num": 49015}