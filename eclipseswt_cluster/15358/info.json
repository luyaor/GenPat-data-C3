{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c1479f90a1a24afdcbedbe8e50eb9ac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7c6631460357f55f76b26f95b2af13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "a7df3c99eed40e9713fdc9e934753b3768c04ec0", "commitAfterChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["+\t", "+\t//draw heavy border around outside", "+\t}", "+\t", "+\t// Draw selection border across all tabs", "+\tif (selectedIndex == -1) { // no selected item", "+\t\tint x = border;", "+\t\tint y = onBottom ? size.y - border - tabHeight : border + tabHeight - SELECTION_BORDER + 1;", "+\t\tint width = size.x - 2*border;", "+\t\tint height = SELECTION_BORDER-1;", "+\t\tgc.setBackground(getBackground());", "+\t\tgc.fillRectangle(x, y, width, height);", "+\t\tif (border > 0) {", "+\t\t\tColor c = new Color(getDisplay(), borderRGB);", "+\t\t\tx = border - 1;", "+\t\t\ty = (onBottom) ? border - 1 : border + tabHeight - SELECTION_BORDER;", "+\t\t\twidth += 1;", "+\t\t\theight = size.y - border - tabHeight + 1;", "+\t\t\tgc.setForeground(c);", "+\t\t\tgc.drawRectangle(x, y, width, height);", "+\t\t\tc.dispose();", "+\t\t}", "+\t} else { //selected item", "+\t\tint x = border;", "+\t\tint y = onBottom ? size.y - border - tabHeight : border+tabHeight-SELECTION_BORDER+1;", "+\t\tint width = size.x - 2*border;", "+\t\tint height = SELECTION_BORDER-1;", "+\t\tint[] shape = new int[] {x,y, x+width,y, x+width,y+height, x,y+height};", "+\t\tdrawSelectionBackground(gc, y, shape);", "+\t\tif (border > 0) {", "+\t\t\tCTabItem2 item = items[selectedIndex];", "+\t\t\tint itemX = item.x;", "+\t\t\tint itemY = item.y;", "+\t\t\tint itemW = item.width;", "+\t\t\tint itemH = item.height;", "+\t\t\tint extra = CTabFolder2.CURVE_WIDTH/2;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint[] left = bottomLeftCorner;", "+\t\t\t\tint[] right = curve;", "+\t\t\t\tshape = new int[left.length + right.length + 14];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + left[2*i];", "+\t\t\t\t\tshape[index++]=itemY + itemH + left[2*i+1]-1;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX + itemW-extra;", "+\t\t\t\tshape[index++] = itemY + itemH - 1;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "+\t\t\t\t\tshape[index++]=itemY + right[2*i+1] - 2;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tint temp = 0;", "+\t\t\t\tint rightTabEdge = size.x - border - chevronRect.width - closeRect.width - 1;", "+\t\t\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttemp = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t} else {", "+\t\t\t\tint[] left = topLeftCorner;", "+\t\t\t\tint[] right = curve;", "+\t\t\t\tshape = new int[left.length+right.length+12];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + left[2*i];", "+\t\t\t\t\tshape[index++]=itemY + left[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "+\t\t\t\t\tshape[index++]=itemY + right[2*i+1];", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tint temp = 0;", "+\t\t\t\tint rightTabEdge = size.x - border - chevronRect.width - closeRect.width - 1;", "+\t\t\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttemp = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = itemY + item.height - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = size.y - border;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = size.y - border;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t}", "+\t", "+\t\t\tColor c = new Color(getDisplay(), borderRGB);", "+\t\t\tgc.setForeground(c);", "+\t\t\tgc.drawPolyline(shape);", "+\t\t\tc.dispose();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33dc9a3b605ba0e8e7f14562ccb47c9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "b875c1e54b063e76eff9ed7340e456492ce062b0", "commitAfterChange": "9cdfff0a4a5ad4e096f090ab3d7bf67ec3db6d00", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void draw3DBorder(GC gc)", "signatureAfterChange": " void draw3DBorder(GC gc)", "diff": ["-\t\t\t", "-\t\t\tint x2 = size.x - 3;", "+\t\t\tint x2 = size.x - 1;", "-\t\t\t", "-\t\t\tint gapStart = size.x/2;", "-\t\t\tint gapEnd = gapStart;", "-\t\t\tif (selectedIndex != -1 && selectedIndex >= topTabIndex) {", "-\t\t\t\tCTabItem2 item =  items[selectedIndex];", "-\t\t\t\tRectangle r = item.getBounds();", "-\t\t\t\tint rightTabEdge = size.x - borderRight - chevronRect.width - expandRect.width - closeRect.width - 1;", "-\t\t\t\tif (r.x < rightTabEdge) {", "-\t\t\t\t\tgapStart = r.x - 1;", "-\t\t\t\t\tint extra = CURVE_WIDTH / 2;", "-\t\t\t\t\tint[] left = BOTTOM_LEFT_CORNER;", "-\t\t\t\t\tint[] right = curve;", "-\t\t\t\t\tint[] shape = new int[left.length + right.length + 8];", "-\t\t\t\t\tint index = 0;", "-\t\t\t\t\tshape[index++] = Math.max(0, borderLeft - 1);", "-\t\t\t\t\tshape[index++] = r.y - 1;", "-\t\t\t\t\tshape[index++] = r.x;", "-\t\t\t\t\tshape[index++] = r.y - 1;", "-\t\t\t\t\tfor (int i = 0; i < left.length/2; i++) {", "-\t\t\t\t\t\tshape[index++] = r.x + left[2*i];", "-\t\t\t\t\t\tshape[index++] = r.y + r.height + left[2*i+1]-1;", "-\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < right.length/2; i++) {", "-\t\t\t\t\t\tshape[index++] = r.x+r.width - extra + right[2*i];", "-\t\t\t\t\t\tshape[index++] = r.y + right[2*i+1] - 2;", "-\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < shape.length/2; i++) {", "-\t\t\t\t\t\tif (shape[2*i] > rightTabEdge) {", "-\t\t\t\t\t\t\tgapEnd = rightTabEdge + 1;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (shape[2*i+1] > r.y) {", "-\t\t\t\t\t\t\tgapEnd = shape[2*i];", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "-\t\t\tx2 = size.x - 2;", "-\t\t\ty1 = 1;", "-\t\t\ty2 =  size.y - borderBottom - tabHeight;", "-\t\t\tgc.setForeground(borderColor2);", "-\t\t\tgc.drawLine(x2, y1, x2, y2); // right 1", "-\t\t\tgc.drawLine(x1, y2, gapStart, y2); //bottom 1 left", "-\t\t\tgc.drawLine(gapEnd, y2, x2, y2); //bottom 1 right", "-\t\t\tgc.setForeground(parentBackground);", "-\t\t\tif (!single) gc.drawPoint(0, y2); // bottom left", "-\t\t\tgc.drawPoint(x2, 0); // top right", "-", "-\t\t\tx1 = 2;", "-\t\t\ty1 = 2;", "-\t\t\ty2 = size.y - borderBottom - tabHeight + 1;", "-\t\t\tgc.setForeground(borderColor3);", "-\t\t\tgc.drawLine(x2, y1, x2, y2); // right 2", "-\t\t\tgc.drawLine(x1, y2, gapStart, y2); //bottom 2 left", "-\t\t\tgc.drawLine(gapEnd, y2, x2, y2); //bottom 2 right", "-\t\t\tgc.setForeground(parentBackground);", "-\t\t\tif (!single)gc.drawLine(0, y2, 1, y2); // bottom left", "-\t\t\tgc.drawLine(x2, 0, x2, 1); // top right", "-\t\t\t", "-\t\t\tx1 = 1;", "-\t\t\tx2 = size.x - 3;", "-\t\t\t", "-\t\t\t", "-\t\t\tint x2 = size.x - 3;", "+\t\t\tint x2 = size.x - 1;", "-\t\t\tint y2 = size.y - 3;", "+\t\t\tint y2 = size.y - 1;", "-\t\t\tgc.drawLine(x1, y2, x2, y2); //bottom", "-\t\t\t", "+\t\t\tgc.drawLine(x1, y2, x2, y2); //bottom\t\t\t", "-\t\t\tx2 = size.x - 2;", "-\t\t\ty1 = borderTop + tabHeight + 1;", "-\t\t\ty2 =  size.y - 2;", "-\t\t\tgc.setForeground(borderColor2);", "-\t\t\tgc.drawLine(x1, y2, x2, y2); //bottom 1", "-\t\t\tif (single) {", "-\t\t\t\tint x = borderLeft - HIGHLIGHT_MARGIN;", "-\t\t\t\tint y = borderTop;", "-\t\t\t\tint width = size.x - borderLeft - borderRight + 1 + 2*HIGHLIGHT_MARGIN;", "-\t\t\t\tint[] shape = new int[TOP_RIGHT_OUTSIDE_CORNER.length - 2];", "-\t\t\t\tint index = 0;", "-\t\t\t\tfor (int i = 2; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\t\tshape[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "-\t\t\t\t\tshape[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t\t}", "-\t\t\t\tshape[index++] = x2;", "-\t\t\t\tshape[index++] = y2;", "-\t\t\t\tgc.drawPolyline(shape); // right 1", "-\t\t\t\tgc.setForeground(parentBackground);", "-\t\t\t\tgc.drawPoint(0, y2); // bottom left", "-\t\t\t} else {", "-\t\t\t\tgc.drawLine(x2, y1, x2, y2); // right 1", "-\t\t\t\tgc.setForeground(parentBackground);", "-\t\t\t\tgc.drawPoint(0, y2); // bottom left", "-\t\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "-\t\t\t}", "-\t\t\t", "-\t\t\tx1 = 2;", "-\t\t\ty1 = borderTop + tabHeight + 2;", "-\t\t\ty2 = size.y - 1;", "-\t\t\tgc.setForeground(borderColor3);", "-\t\t\tgc.drawLine(x1, y2, x2, y2); //bottom 2", "-\t\t\tif (single) {", "-\t\t\t\tint x = borderLeft - HIGHLIGHT_MARGIN + 1;", "-\t\t\t\tint y = borderTop;", "-\t\t\t\tint width = size.x - borderLeft - borderRight + 1 + 2*HIGHLIGHT_MARGIN;", "-\t\t\t\tint[] shape = new int[TOP_RIGHT_OUTSIDE_CORNER.length - 4];", "-\t\t\t\tint index = 0;", "-\t\t\t\tfor (int i = 3; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "-\t\t\t\t\tshape[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "-\t\t\t\t\tshape[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "-\t\t\t\t}", "-\t\t\t\tshape[index++] = x2;", "-\t\t\t\tshape[index++] = y2;", "-\t\t\t\tgc.drawPolyline(shape); // right 2", "-\t\t\t\tgc.setForeground(parentBackground);", "-\t\t\t\tgc.drawLine(0, y2, 1, y2); // bottom left", "-\t\t\t} else {", "-\t\t\t\tgc.drawLine(x2, y1, x2, y2); // right 2", "-\t\t\t\tgc.setForeground(parentBackground);", "-\t\t\t\tgc.drawLine(0, y2, 1, y2); // bottom left", "-\t\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "-\t\t\t}", "-\t\t\t", "-\t\t\tx1 = 1;", "-\t\t\tx2 = size.x - 3;", "-\t\t\ty2 = size.y - 3;", "+\t\t\ty2 = size.y - 1;"]}], "num": 15358}