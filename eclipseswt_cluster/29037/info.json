{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb9b681675b5353df818b2f3bdc8c5bb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f8d97fc4376b168b7cb3eb4a86cccc4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "3753196e54cacf08b9ba94669052da40a6f74fd7", "commitAfterChange": "991749f7f8d70b27654548d75f2e2ea9b6410c4f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "signatureAfterChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "+\t", "+\t/*", "+\t* Feature in Motif.  When XtManageChild() is called for", "+\t* a text widget that has just been created, the contents", "+\t* are assigned and an XmNmodifyVerifyCallback is sent.", "+\t* When this happens, the widget has not been fully", "+\t* initialized null pointer exceptions can occur.  The", "+\t* fix is to check for this case and avoid the callback.", "+\t* Note that application code could never have seen it", "+\t* in the first place.", "+\t*/", "+\tif (font == null) return result;", "+\t", "+//\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "-\tevent.doit = textVerify.doit == 1;", "+\tint index = 0;", "+\twhile (index < text.length ()) {", "+\t\tif (!Character.isDigit (text.charAt (index))) break;", "+\t\tindex++;", "+\t}", "+\tevent.doit = index == text.length ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a19f84a157869c777fa7d6845770b5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "80cbdf5537b3141c180b026fdf21ef20cbe166d3", "commitAfterChange": "58edc7e135918e5036ad9a0c3b3f1152abcd40f2", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void setText (int columnIndex, String value)", "signatureAfterChange": " public void setText (int columnIndex, String value)", "diff": ["+\tint oldWidth = textWidths [columnIndex];", "-\t", "-\tRectangle bounds = getCellBounds (columnIndex);", "-\tparent.redraw (bounds.x, bounds.y, bounds.width, bounds.height, false);", "+\tparent.redraw (", "+\t\tgetTextX (columnIndex),", "+\t\tparent.getItemY (this),", "+\t\tMath.max (oldWidth, textWidths [columnIndex]) + 2 * MARGIN_TEXT,", "+\t\tparent.itemHeight,", "+\t\tfalse);"]}], "num": 29037}