{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "656c95720e5f168522c7b10e49c9dc4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "113c115cd91f0089c0d6a04cdd171691", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/RowLayout.java", "commitBeforeChange": "3eef16495f54d2582a2f00d444f7f01291b26d62", "commitAfterChange": "a7b3f8b58beffe8a7f94d04d34c0219006b60c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layoutVertical (Composite composite, boolean move, boolean wrap, int height, boolean flushCache)", "signatureAfterChange": "  Point layoutVertical (Composite composite, boolean move, boolean wrap, int height, boolean flushCache)", "diff": ["-\t\tclientX = rect.x;  clientY = rect.y;", "+\t\tclientX = rect.x;", "+\t\tclientY = rect.y;", "+\tint [] wraps = null;", "-\tif (move && justify) bounds = new Rectangle [count];", "+\tif (move && (justify || fill)) {", "+\t\tbounds = new Rectangle [count];", "+\t\twraps = new int [count];", "+\t}", "-\t\t\tchildWidth = pt.x;  childHeight = pt.y;", "+\t\t\tchildWidth = pt.x;", "+\t\t\tchildHeight = pt.y;", "-\t\t\tx += spacing + maxWidth;  y = marginTop;", "+\t\t\tif (move && (justify || fill)) wraps [i - 1] = maxWidth;", "+\t\t\tx += spacing + maxWidth;", "+\t\t\ty = marginTop;", "+\t\t\tif (pack) maxWidth = 0;", "-\t\tif (pack) {", "+\t\tif (pack || fill) {", "-\t\t\tif (justify) {", "+\t\t\tif (justify || fill) {", "-\tif (!wrap) maxY = y + marginBottom;", "-\tif (move && justify) {", "+\tmaxY -= spacing;", "+\tif (!wrapped) maxY += marginBottom;", "+\tif (move && (justify || fill)) {", "+\t\t} else {", "+\t\t\tif (fill || justify) {", "+\t\t\t\tint last = 0;", "+\t\t\t\tif (count > 0) wraps [count - 1] = maxWidth;", "+\t\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\t\tif (wraps [i] != 0) {", "+\t\t\t\t\t\tint wrapCount = i - last + 1;", "+\t\t\t\t\t\tif (justify) {", "+\t\t\t\t\t\t\tint wrapY = 0;", "+\t\t\t\t\t\t\tfor (int j=last; j<=i; j++) {", "+\t\t\t\t\t\t\t\twrapY += bounds [j].height + spacing;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tspace = Math.max (0, (height - wrapY) / (wrapCount + 1));", "+\t\t\t\t\t\t\tmargin = Math.max (0, ((height - wrapY) % (wrapCount + 1)) / 2);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tfor (int j=last; j<=i; j++) {", "+\t\t\t\t\t\t\tif (justify) bounds [j].y += (space * (j - last + 1)) + margin;", "+\t\t\t\t\t\t\tif (fill) bounds [j].width = wraps [i];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tlast = i + 1;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\tControl child = children [i];", "-\t\t\tbounds [i].y += (space * (i + 1)) + margin;", "-\t\t\tchild.setBounds (bounds [i]);", "+\t\t\tif (!wrapped) {", "+\t\t\t\tif (justify) bounds [i].y += (space * (i + 1)) + margin;", "+\t\t\t\tif (fill) bounds [i].width = maxWidth;", "+\t\t\t}", "+\t\t\tchildren [i].setBounds (bounds [i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6e4a617c49e11e01780962d37912ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/RowLayout.java", "commitBeforeChange": "3eef16495f54d2582a2f00d444f7f01291b26d62", "commitAfterChange": "a7b3f8b58beffe8a7f94d04d34c0219006b60c7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  Point layoutHorizontal (Composite composite, boolean move, boolean wrap, int width, boolean flushCache)", "signatureAfterChange": "  Point layoutHorizontal (Composite composite, boolean move, boolean wrap, int width, boolean flushCache)", "diff": ["-\t\tclientX = rect.x;  clientY = rect.y;", "+\t\tclientX = rect.x;", "+\t\tclientY = rect.y;", "+\tint [] wraps = null;", "-\tif (move && justify) bounds = new Rectangle [count];", "+\tif (move && (justify || fill)) {", "+\t\tbounds = new Rectangle [count];", "+\t\twraps = new int [count];", "+\t}", "-\t\t\tchildWidth = pt.x;  childHeight = pt.y;", "+\t\t\tchildWidth = pt.x;", "+\t\t\tchildHeight = pt.y;", "-\t\t\tx = marginLeft;  y += spacing + maxHeight;", "+\t\t\tif (move && (justify || fill)) wraps [i - 1] = maxHeight;", "+\t\t\tx = marginLeft;", "+\t\t\ty += spacing + maxHeight;", "+\t\t\tif (pack) maxHeight = 0;", "-\t\tif (pack) {", "+\t\tif (pack || fill) {", "-\t\t\tif (justify) {", "+\t\t\tif (justify || fill) {", "-\tif (!wrap) maxX = x + marginRight;", "-\tif (move && justify) {", "+\tmaxX -= spacing;", "+\tif (!wrapped) maxX += marginRight;", "+\tif (move && (justify || fill)) {", "+\t\t} else {", "+\t\t\tif (fill || justify) {", "+\t\t\t\tint last = 0;", "+\t\t\t\tif (count > 0) wraps [count - 1] = maxHeight;", "+\t\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\t\tif (wraps [i] != 0) {", "+\t\t\t\t\t\tint wrapCount = i - last + 1;", "+\t\t\t\t\t\tif (justify) {", "+\t\t\t\t\t\t\tint wrapX = 0;", "+\t\t\t\t\t\t\tfor (int j=last; j<=i; j++) {", "+\t\t\t\t\t\t\t\twrapX += bounds [j].width + spacing;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tspace = Math.max (0, (width - wrapX) / (wrapCount + 1));", "+\t\t\t\t\t\t\tmargin = Math.max (0, ((width - wrapX) % (wrapCount + 1)) / 2);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tfor (int j=last; j<=i; j++) {", "+\t\t\t\t\t\t\tif (justify) bounds [j].x += (space * (j - last + 1)) + margin;", "+\t\t\t\t\t\t\tif (fill) bounds [j].height = wraps [i];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tlast = i + 1;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\tControl child = children [i];", "-\t\t\tbounds [i].x += (space * (i + 1)) + margin;", "-\t\t\tchild.setBounds (bounds [i]);", "+\t\t\tif (!wrapped) {", "+\t\t\t\tif (justify) bounds [i].x += (space * (i + 1)) + margin;", "+\t\t\t\tif (fill) bounds [i].height = maxHeight;", "+\t\t\t}", "+\t\t\tchildren [i].setBounds (bounds [i]);"]}], "num": 39789}