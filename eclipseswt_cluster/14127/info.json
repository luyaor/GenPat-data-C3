{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bdb0a50e4e97c41145587095be99690", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75286ee0bb539b07db52fba458b65e31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0461ea0761c0c5b4762979c2a47107772f1c2d87", "commitAfterChange": "2b3f1a52c71975ebfad21515ab497ea98cfe5fd8", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 158, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\tif (!ignoreShrink) {", "-\t\t/* Resize the item array to match the item count */", "-\t\tint count = (int)/*64*/OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t\tif (items.length > 4 && items.length - count > 3) {", "-\t\t\tint length = Math.max (4, (count + 3) / 4 * 4);", "-\t\t\tTableItem [] newItems = new TableItem [length];", "-\t\t\tSystem.arraycopy (items, 0, newItems, 0, count);", "-\t\t\titems = newItems;", "-\t\t}", "-\t}", "+\t_checkShrink();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2136af8bd78b99350fddbd6df819ec3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0461ea0761c0c5b4762979c2a47107772f1c2d87", "commitAfterChange": "2b3f1a52c71975ebfad21515ab497ea98cfe5fd8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void createItem (TableItem item, int index)", "signatureAfterChange": "  void createItem (TableItem item, int index)", "diff": ["-\tif (count == items.length) {", "-\t\t/*", "-\t\t* Grow the array faster when redraw is off or the", "-\t\t* table is not visible.  When the table is painted,", "-\t\t* the items array is resized to be smaller to reduce", "-\t\t* memory usage.", "-\t\t*/", "-\t\tboolean small = getDrawing () && OS.IsWindowVisible (handle);", "-\t\tint length = small ? items.length + 4 : Math.max (4, items.length * 3 / 2);", "-\t\tTableItem [] newItems = new TableItem [length];", "-\t\tSystem.arraycopy (items, 0, newItems, 0, items.length);", "-\t\titems = newItems;", "-\t}", "+\t_checkGrow (count);", "-\tSystem.arraycopy (items, index, items, index + 1, count - index);", "-\titems [index] = item;", "+\t_insertItem (index, item, count);"]}], "num": 14127}