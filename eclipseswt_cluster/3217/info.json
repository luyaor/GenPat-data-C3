{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7391bbb3ee0bb83f7af31a2ddfbab03", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "778ae9d7b34bf0ad58e897b9b6b6e181", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "commitAfterChange": "08d3303dffe0cb7265bf994e8344de3d64cefc09", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-    GC gc = new GC (this);", "-    gc.copyArea (x, y, width, height, destX, destY);", "-    gc.dispose ();", "+\tControl control = findBackgroundControl ();", "+\tif (control != null && control.backgroundImage != null) {", "+\t\tredrawWidget (handle, x, y, width, height, false);", "+\t\tredrawWidget (handle, destX, destY, width, height, false);", "+\t} else {", "+\t    GC gc = new GC (this);", "+\t    gc.copyArea (x, y, width, height, destX, destY);", "+\t    gc.dispose ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54a3773c70a51211bf450d2879c25fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "bb1e385f95eb37fa76b180b753e27affb4d9475d", "commitAfterChange": "60c43d5fc058439e030065ca3906e49d35cb68d7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\t\t", "-\tview.lockFocus();", "-\tOS.NSCopyBits(0, damage , dest);", "-\tview.unlockFocus();", "-", "-\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\tif (disjoint) {", "-\t\tview.setNeedsDisplayInRect(damage);", "+\tControl control = findBackgroundControl ();", "+\tif ((control != null && control.backgroundImage != null)) {", "+\t\tredrawWidget (view, x, y, width, height, false);", "+\t\tredrawWidget (view, destX, destY, width, height, false);", "-\t\tif (deltaX != 0) {", "-\t\t\tint newX = destX - deltaX;", "-\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\tdamage.x = newX;", "-\t\t\tdamage.width = Math.abs(deltaX);", "+\t\tview.lockFocus();", "+\t\tOS.NSCopyBits(0, damage , dest);", "+\t\tview.unlockFocus();", "+", "+\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\tif (disjoint) {", "+\t\t} else {", "+\t\t\tif (deltaX != 0) {", "+\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\tdamage.x = newX;", "+\t\t\t\tdamage.width = Math.abs(deltaX);", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t}", "+\t\t\tif (deltaY != 0) {", "+\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\tdamage.x = x;", "+\t\t\t\tdamage.y = newY;", "+\t\t\t\tdamage.width = width;", "+\t\t\t\tdamage.height =  Math.abs (deltaY);", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t}", "-\t\tif (deltaY != 0) {", "-\t\t\tint newY = destY - deltaY;", "-\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\tdamage.x = x;", "-\t\t\tdamage.y = newY;", "-\t\t\tdamage.width = width;", "-\t\t\tdamage.height =  Math.abs (deltaY);", "-\t\t\tview.setNeedsDisplayInRect(damage);", "+", "+\t\tNSRect visibleRect = view.visibleRect();", "+\t\tNSRect srcRect = new NSRect();", "+\t\tsrcRect.x = sourceRect.x;", "+\t\tsrcRect.y = sourceRect.y;", "+\t\tsrcRect.width = sourceRect.width;", "+\t\tsrcRect.height = sourceRect.height;", "+\t\tOS.NSIntersectionRect(visibleRect, visibleRect, srcRect);", "+", "+\t\tif (!OS.NSEqualRects(visibleRect, srcRect)) {", "+\t\t\tif (srcRect.x != visibleRect.x) {", "+\t\t\t\tdamage.x = srcRect.x + deltaX;", "+\t\t\t\tdamage.y = srcRect.y + deltaY;", "+\t\t\t\tdamage.width = visibleRect.x - srcRect.x;", "+\t\t\t\tdamage.height = srcRect.height;", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t} ", "+\t\t\tif (visibleRect.x + visibleRect.width != srcRect.x + srcRect.width) {", "+\t\t\t\tdamage.x = srcRect.x + visibleRect.width + deltaX;", "+\t\t\t\tdamage.y = srcRect.y + deltaY;", "+\t\t\t\tdamage.width = srcRect.width - visibleRect.width;", "+\t\t\t\tdamage.height = srcRect.height;", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t}", "+\t\t\tif (visibleRect.y != srcRect.y) {", "+\t\t\t\tdamage.x = visibleRect.x + deltaX;", "+\t\t\t\tdamage.y = srcRect.y + deltaY;", "+\t\t\t\tdamage.width = visibleRect.width;", "+\t\t\t\tdamage.height = visibleRect.y - srcRect.y;", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t}", "+\t\t\tif (visibleRect.y + visibleRect.height != srcRect.y + srcRect.height) {", "+\t\t\t\tdamage.x = visibleRect.x + deltaX;", "+\t\t\t\tdamage.y = visibleRect.y + visibleRect.height + deltaY;", "+\t\t\t\tdamage.width = visibleRect.width;", "+\t\t\t\tdamage.height = srcRect.y + srcRect.height - (visibleRect.y + visibleRect.height);", "+\t\t\t\tview.setNeedsDisplayInRect(damage);", "+\t\t\t}", "-\t", "-\tNSRect visibleRect = view.visibleRect();", "-\tNSRect srcRect = new NSRect();", "-\tsrcRect.x = sourceRect.x;", "-\tsrcRect.y = sourceRect.y;", "-\tsrcRect.width = sourceRect.width;", "-\tsrcRect.height = sourceRect.height;", "-\tOS.NSIntersectionRect(visibleRect, visibleRect, srcRect);", "-\t", "-\tif (!OS.NSEqualRects(visibleRect, srcRect)) {", "-\t\tif (srcRect.x != visibleRect.x) {", "-\t\t\tdamage.x = srcRect.x + deltaX;", "-\t\t\tdamage.y = srcRect.y + deltaY;", "-\t\t\tdamage.width = visibleRect.x - srcRect.x;", "-\t\t\tdamage.height = srcRect.height;", "-\t\t\tview.setNeedsDisplayInRect(damage);", "-\t\t} ", "-\t\tif (visibleRect.x + visibleRect.width != srcRect.x + srcRect.width) {", "-\t\t\tdamage.x = srcRect.x + visibleRect.width + deltaX;", "-\t\t\tdamage.y = srcRect.y + deltaY;", "-\t\t\tdamage.width = srcRect.width - visibleRect.width;", "-\t\t\tdamage.height = srcRect.height;", "-\t\t\tview.setNeedsDisplayInRect(damage);", "-\t\t}", "-\t\tif (visibleRect.y != srcRect.y) {", "-\t\t\tdamage.x = visibleRect.x + deltaX;", "-\t\t\tdamage.y = srcRect.y + deltaY;", "-\t\t\tdamage.width = visibleRect.width;", "-\t\t\tdamage.height = visibleRect.y - srcRect.y;", "-\t\t\tview.setNeedsDisplayInRect(damage);", "-\t\t}", "-\t\tif (visibleRect.y + visibleRect.height != srcRect.y + srcRect.height) {", "-\t\t\tdamage.x = visibleRect.x + deltaX;", "-\t\t\tdamage.y = visibleRect.y + visibleRect.height + deltaY;", "-\t\t\tdamage.width = visibleRect.width;", "-\t\t\tdamage.height = srcRect.y + srcRect.height - (visibleRect.y + visibleRect.height);", "-\t\t\tview.setNeedsDisplayInRect(damage);", "-\t\t}", "-\t}\t"]}], "num": 3217}