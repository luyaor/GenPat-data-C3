{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8358aaebaec6b74c9d72a3aea6e39db4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03bbff506d649e00492e8a4228ba3b65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f705f1e76286c6f3660ecf53b6864bbd63d66494", "commitAfterChange": "0197907d68007347a84613b33a3d149ba32c4fc3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createItem (TreeColumn column, int index)", "signatureAfterChange": "  void createItem (TreeColumn column, int index)", "diff": ["+    if (columnCount == 0) {", "+    \tcolumns = OS.gcnew_GridViewColumnCollection ();", "+    \tif (columns == 0) error (SWT.ERROR_NO_HANDLES);", "+    \tint template = createControlTemplate ();", "+    \tOS.Control_Template (handle, template);   \t", "+    \tOS.GCHandle_Free (template);", "+    \tupdateHeaderVisibility ();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc3e74d5f7d8cf06b3e05aa3a8edaee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e4692e5cbd7a1c3e2c445a2649b50a1fdba6d571", "commitAfterChange": "7c0714d2b96ea5373a8249de1d951780e6fa9ffd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["+\t\tint xDisplay = OS.XtDisplay (handle);\r", "+\t\tif (xDisplay == 0) return;\r", "+\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\tif (xWindow == 0) return;\r", "+\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "+\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "+\t\t\treturn;\r", "+\t\t}\r", "-\t\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\t\tif (xDisplay == 0) return;\r", "-\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\t\t\tif (xWindow == 0) return;\r", "-\t\t\tint [] unused = new int [1];\r", "-\t\t\tint [] rootX = new int [1], rootY = new int [1];\r", "-\t\t\tif (OS.XQueryPointer (\r", "-\t\t\t\txDisplay, xWindow, unused, unused,\r", "-\t\t\t\trootX, rootY,\r", "-\t\t\t\tunused, unused, unused) == 0) return;\r", "-\t\t\t\t\r", "-\t\t\t/* Bug in Motif: \r", "-\t\t\t * You *must* start outside the menu or it will not show you\r", "-\t\t\t * highlighting until you move the cursor out of and back into\r", "-\t\t\t * the menu. By offsetting the start location by a pixel, it\r", "-\t\t\t * causes highlighting to work if you wait for the menu to\r", "-\t\t\t * pop up before you start moving.(Except for the bottom\r", "-\t\t\t * right corner.)\r", "-\t\t\t */\r", "-\t\t\trootX[0] += 1;\r", "-\t\t\trootY[0] += 1;\r", "-\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "+\t\t\t* under the mouse, the menu will not highlight until the\r", "+\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "+\t\t\t* to pop the menu up outside the current mouse position\r", "+\t\t\t* causing highlighting to work properly when the user\r", "+\t\t\t* waits for the menu to appear.\r", "+\t\t\t*/\r", "+\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "+\t\t/*\r", "+\t\t* Feature in Motif.  There is no API to force the menu\r", "+\t\t* to accept keyboard traversal when popped up using\r", "+\t\t* XtManageChild.  The fix is to call undocumented API\r", "+\t\t* to do this.\r", "+\t\t*/\r", "+\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "+\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r"]}], "num": 22388}