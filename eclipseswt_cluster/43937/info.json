{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfe279b7cec2343555e7dc893f983946", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21af013118415910532bfb6a65e64a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/CleanupNatives.java", "commitBeforeChange": "7e039cddeb4e9a7b9f7a0fba1c2fc2cfd9799452", "commitAfterChange": "730e0fc882d66da1ef6ae8758d8bb1231694d58a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void generate(Method method)", "signatureAfterChange": "  public void generate(Method method)", "diff": ["-\t\t\tint modifiers = method.getModifiers();", "-\t\t\tClass clazz = method.getDeclaringClass();", "-\t\t\tString modifiersStr = Modifier.toString(modifiers);", "-\t\t\toutput(modifiersStr);", "-\t\t\tif (modifiersStr.length() > 0) output(\" \");", "-\t\t\toutput(getTypeSignature3(method.getReturnType()));", "-\t\t\toutput(\" \" );", "-\t\t\toutput(method.getName());", "-\t\t\toutput(\"(\");", "-\t\t\tClass[] paramTypes = method.getParameterTypes();", "-\t\t\tString[] paramNames = getArgNames(method);", "-\t\t\tfor (int i = 0; i < paramTypes.length; i++) {", "-\t\t\t\tClass paramType = paramTypes[i];", "-\t\t\t\tif (i != 0) output(\", \");", "-\t\t\t\tString sig = getTypeSignature3(paramType);", "-\t\t\t\tif (clazz.getPackage().equals(paramType.getPackage())) sig = getClassName(paramType);", "-\t\t\t\toutput(sig);", "-\t\t\t\toutput(\" \");", "-\t\t\t\toutput(paramNames[i]);", "-\t\t\t}", "-\t\t\toutputln(\");\");", "+//\t\t\tint modifiers = method.getModifiers();", "+//\t\t\tClass clazz = method.getDeclaringClass();", "+//\t\t\tString modifiersStr = Modifier.toString(modifiers);", "+//\t\t\toutput(modifiersStr);", "+//\t\t\tif (modifiersStr.length() > 0) output(\" \");", "+//\t\t\toutput(getTypeSignature3(method.getReturnType()));", "+//\t\t\toutput(\" \" );", "+//\t\t\toutput(method.getName());", "+//\t\t\toutput(\"(\");", "+//\t\t\tClass[] paramTypes = method.getParameterTypes();", "+//\t\t\tString[] paramNames = getArgNames(method);", "+//\t\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+//\t\t\t\tClass paramType = paramTypes[i];", "+//\t\t\t\tif (i != 0) output(\", \");", "+//\t\t\t\tString sig = getTypeSignature3(paramType);", "+//\t\t\t\tif (clazz.getPackage().equals(paramType.getPackage())) sig = getClassName(paramType);", "+//\t\t\t\toutput(sig);", "+//\t\t\t\toutput(\" \");", "+//\t\t\t\toutput(paramNames[i]);", "+//\t\t\t}", "+//\t\t\toutputln(\");\");", "-//\toutput(\"NOT USED=\" + method.toString() + \"\\n\");", "+\toutput(\"NOT USED=\" + method.toString() + \"\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5983b0afdbd3f1cc7cd2ab0010b64196", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public MacGenerator(String[] xmlPaths)", "signatureAfterChange": " \t public MacGenerator()", "diff": ["-public MacGenerator(String[] xmlPaths) {", "-\tthis.xmls = xmlPaths;", "-\tif (xmls == null || xmls.length == 0) {", "-\t\tArrayList array = new ArrayList();", "-\t\tlist(new File(\"/System/Library/Frameworks\"), array);", "-\t\tlist(new File(\"/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks\"), array);", "-\t\tCollections.sort(array);", "-\t\txmls = (String[])array.toArray(new String[array.size()]);", "-\t}", "-\tdocuments = new Document[xmls.length];", "-\tfor (int i = 0; i < xmls.length; i++) {", "-\t\tString xmlPath = xmls[i];", "-\t\tDocument document = documents[i] = getDocument(xmlPath);", "-\t\tif (document == null) continue;", "-\t\tString extrasPath = getFileName(xmlPath) + \".extras\";", "-\t\tFile file = new File(getExtraAttributesDir());", "-\t\tif (file.exists()) extrasPath = new File(file, extrasPath).getAbsolutePath();", "-\t\tmerge(document, getDocument(extrasPath));", "-\t}", "+public MacGenerator() {"]}], "num": 43937}