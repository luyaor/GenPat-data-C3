{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38e98d7dd75c8acb476503541a8e17a6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1544f22da9f7e4daad2857154c3014", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "475110f8cb2fad975e3b958e7f0a5c8a0c59f010", "commitAfterChange": "0d66d44355244adf6ce753df2baacbf8eb205fc4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "  boolean translateMessage (MSG msg)", "signatureAfterChange": "  void subclass ()", "diff": ["-boolean translateMessage (MSG msg) {", "-\tif (super.translateMessage (msg)) return true;", "-\t", "-\t/*", "-\t* In order to see key events for the text widget in a combo box,", "-\t* filter the key events before they are dispatched to the text", "-\t* widget and invoke the cooresponding key handler for the combo", "-\t* box as if the key was sent directly to the combo box, not the", "-\t* text field.  The key is still dispatched to the text widget, ", "-\t* in the normal fashion.  Note that we must call TranslateMessage()", "-\t* in order to process accented keys properly.", "-\t*/", "+void subclass () {", "+\tsuper.subclass ();", "+\tint newProc = display.windowProc;", "-\tif (hwndText != 0 && msg.hwnd == hwndText) {", "-\t\tswitch (msg.message) {", "-\t\t\tcase OS.WM_CHAR:", "-\t\t\tcase OS.WM_SYSCHAR:", "-\t\t\tcase OS.WM_KEYDOWN:  {", "-\t\t\t\tif (msg.message == OS.WM_KEYDOWN) {", "-\t\t\t\t\tif (display.translateTraversal (msg, this)) return true;", "-\t\t\t\t} else {", "-\t\t\t\t\tif (display.translateMnemonic (msg, this)) return true;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tOS.TranslateMessage (msg);", "-\t\tLRESULT result = null;", "-\t\tswitch (msg.message) {", "-\t\t\tcase OS.WM_CHAR:\t\tresult = WM_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_IME_CHAR:\tresult = WM_IME_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYDOWN:\t\tresult = WM_KEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYUP:\t\tresult = WM_KEYUP (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSCHAR:\t\tresult = WM_SYSCHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = WM_SYSKEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYUP:\tresult = WM_SYSKEYUP (msg.wParam, msg.lParam); break;", "-\t\t}", "-\t\tif (result == null) OS.DispatchMessage (msg);", "-\t\treturn true;", "+\tif (hwndText != 0) {", "+\t\tOS.SetWindowLong (hwndText, OS.GWL_WNDPROC, newProc);", "-\treturn false;", "+\tint hwndList = OS.GetDlgItem (handle, CBID_LIST);", "+\tif (hwndList != 0) {\t", "+\t\tOS.SetWindowLong (hwndList, OS.GWL_WNDPROC, newProc);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d1e85fd0a9e712ef67329cec4a336f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "a2121a3b36fd9f479b5853f961011d3d772dea1a", "commitAfterChange": "180b63adf3a86ec0ec05574f5a95cc8803880a19", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  boolean translateAccelerator (MSG msg)", "signatureAfterChange": "  boolean translateMessage (MSG msg)", "diff": ["-boolean translateAccelerator (MSG msg) {", "-\tif (super.translateAccelerator (msg)) return true;", "+boolean translateMessage (MSG msg) {", "+\tif (super.translateMessage (msg)) return true;", "+\t\tLRESULT result = null;", "-\t\t\tcase OS.WM_CHAR:\t\tWM_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_IME_CHAR:\tWM_IME_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYDOWN:\tWM_KEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYUP:\t\tWM_KEYUP (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSCHAR:\tWM_SYSCHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYDOWN:\tWM_SYSKEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYUP:\tWM_SYSKEYUP (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_CHAR:\t\tresult = WM_CHAR (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_IME_CHAR:\tresult = WM_IME_CHAR (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_KEYDOWN:\t\tresult = WM_KEYDOWN (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_KEYUP:\t\tresult = WM_KEYUP (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_SYSCHAR:\t\tresult = WM_SYSCHAR (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = WM_SYSKEYDOWN (msg.wParam, msg.lParam); break;", "+\t\t\tcase OS.WM_SYSKEYUP:\tresult = WM_SYSKEYUP (msg.wParam, msg.lParam); break;", "-\t\tOS.DispatchMessage (msg);", "+\t\tif (result == null) OS.DispatchMessage (msg);"]}], "num": 60124}