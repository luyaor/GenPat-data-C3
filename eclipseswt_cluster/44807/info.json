{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc123e270c3450b082e4aaa33dd801ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e1f98307961a8256c938d597c3f968f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " void createCaretBitmaps()", "signatureAfterChange": " void createCaretBitmaps()", "diff": ["-\tint gcStyle = isMirrored() ? SWT.RIGHT_TO_LEFT : SWT.LEFT_TO_RIGHT;", "-\t", "-\tif (caretPalette == null) {", "-\t\tcaretPalette = new PaletteData(new RGB[] {new RGB (0,0,0), new RGB (255,255,255)});", "-\t}\t", "+\t\tCaret caret = getCaret();", "+\t\tif (caret != null && leftCaretBitmap.equals(caret.getImage())) {", "+\t\t\tgetCaret().setImage(null);", "+\t\t}", "-\tImageData imageData = new ImageData(caretWidth, lineHeight, 1, caretPalette);", "-\tleftCaretBitmap = new Image(display, imageData);", "-\t// mirror the caret gc because when the bitmap is rendered on the screen it will be ", "-\t// mirrored since the GC for the canvas is mirrored", "-\tGC gc = new GC (leftCaretBitmap, gcStyle); ", "+\tleftCaretBitmap = new Image(display, caretWidth, lineHeight);", "+\tGC gc = new GC (leftCaretBitmap); ", "+\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\tgc.fillRectangle(0, 0, caretWidth, lineHeight);", "+\t\tCaret caret = getCaret();", "+\t\tif (caret != null && rightCaretBitmap.equals(caret.getImage())) {", "+\t\t\tgetCaret().setImage(null);", "+\t\t}", "-\trightCaretBitmap = new Image(display, imageData);", "-\t// mirror the caret gc because when the bitmap is rendered on the screen it will be ", "-\t// mirrored since the GC for the canvas is mirrored", "-\tgc = new GC (rightCaretBitmap, gcStyle); ", "+\trightCaretBitmap = new Image(display, caretWidth, lineHeight);", "+\tgc = new GC (rightCaretBitmap); ", "+\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\tgc.fillRectangle(0, 0, caretWidth, lineHeight);", "-\tgc.dispose();\t", "+\tgc.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f909851b5f2d62880219bae96279f768", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 98, "signatureBeforeChange": " public void addFilter (int eventType, Listener listener)", "signatureAfterChange": " \t \tprivate void processPaintToolTip(int wHandle)", "diff": ["- */", "-public void addFilter (int eventType, Listener listener) {", "-\tcheckDevice ();", "-\tif (listener == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (filterTable == null) filterTable = new EventTable ();", "-\tfilterTable.hook (eventType, listener);", "+\t", "+\tprivate void processPaintToolTip(int wHandle) {", "+\t\t\t", "+\t\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);", "+\t\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);", "+\t\tMacUtil.RGBBackColor(infoBackground.handle);", "+\t\tMacUtil.RGBForeColor(infoForeground.handle);", "+\t\t", "+\t\tMacRect bounds= new MacRect();", "+\t\tOS.GetWindowBounds(wHandle, OS.kWindowContentRgn, bounds.getData());", "+\t\t", "+\t\tbounds= new MacRect(0, 0, bounds.getWidth(), bounds.getHeight());", "+\t\t", "+\t\tOS.EraseRect(bounds.getData());", "+\t\t", "+\t\tif (fToolTipText != null) {", "+\t\t\tint sHandle= OS.CFStringCreateWithCharacters(fToolTipText);", "+\t\t\tbounds= new MacRect(TOOLTIP_MARGIN, TOOLTIP_MARGIN,", "+\t\t\t\t\t\t\tbounds.getWidth()-2*TOOLTIP_MARGIN, bounds.getHeight()-2*TOOLTIP_MARGIN);", "+\t\t\tOS.DrawThemeTextBox(sHandle, fHoverThemeFont, OS.kThemeStateActive, true, bounds.getData(), (short)0, 0);", "+\t\t\tOS.CFRelease(sHandle);", "+\t\t}", "+\t}"]}], "num": 44807}