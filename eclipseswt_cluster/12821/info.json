{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "428d2661407ccc649512893bb0f69de7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0c5d3d46bb7e80d03e8c7e5c50c48a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a7de4846f5a8ca34d2102fbbd3cec597a2526f95", "commitAfterChange": "f870c19ec0df867558fe7d123f95a12aed947f50", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void doArrowRight (int stateMask)", "signatureAfterChange": " void doArrowRight (int stateMask)", "diff": ["-\t\tif (horizontalOffset == maximum) return;", "-\t\tint newSelection = Math.min (maximum, horizontalOffset + SIZE_HORIZONTALSCROLL);", "+\t\tint clientWidth = getClientArea ().width;", "+\t\tif ((horizontalOffset + getClientArea ().width) == maximum) return;", "+\t\tint newSelection = Math.min (maximum - clientWidth, horizontalOffset + SIZE_HORIZONTALSCROLL);", "+\t\tif (getHeaderVisible ()) {", "+\t\t\tclientArea = header.getClientArea ();", "+\t\t\tgc = new GC (header);", "+\t\t\tgc.copyArea (", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\thorizontalOffset - newSelection, 0);", "+\t\t\tgc.dispose();", "+\t\t}", "-\tredrawItem (children[0].availableIndex);", "+\tredrawItem (children[0].availableIndex, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1becad4b84387c8c9db19863d1d0a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 59, "signatureBeforeChange": " boolean hasFirstColumnImage()", "signatureAfterChange": " void onArrowRight (int stateMask)", "diff": ["- */", "-boolean hasFirstColumnImage() {", "-\treturn firstColumnImage;", "+}", "+void onArrowRight (int stateMask) {", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint maximum = hBar.getMaximum ();", "+\tint clientWidth = getClientArea ().width;", "+\tif ((horizontalOffset + getClientArea ().width) == maximum) return;", "+\tif (maximum <= clientWidth) return;", "+\tint newSelection = Math.min (horizontalOffset + SIZE_HORIZONTALSCROLL, maximum - clientWidth);", "+\tRectangle clientArea = getClientArea ();", "+\tupdate ();", "+\tGC gc = new GC (this);", "+\tgc.copyArea (", "+\t\t0, 0,", "+\t\tclientArea.width, clientArea.height,", "+\t\thorizontalOffset - newSelection, 0);", "+\tgc.dispose ();", "+\tif (getHeaderVisible ()) {", "+\t\tclientArea = header.getClientArea ();", "+\t\theader.update ();", "+\t\tgc = new GC (header);", "+\t\tgc.copyArea (", "+\t\t\t0, 0,", "+\t\t\tclientArea.width, clientArea.height,", "+\t\t\thorizontalOffset - newSelection, 0);", "+\t\tgc.dispose();", "+\t}", "+\thorizontalOffset = newSelection;", "+\thBar.setSelection (horizontalOffset);", "+}"]}], "num": 12821}