{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005fe13c4c5227185d783070d3b1346b", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbf2e564dbcee09c38201cc2f45575a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "41e8597e59bdccff1cedf7e7297d4a0e118dce12", "commitAfterChange": "e46f75d5244b5f652fb4edaf18d1e53fe0bd2ae0", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": "  LRESULT WM_UNDO (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_UNDO (int wParam, int lParam)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) {", "-\t\treturn result;", "-\t}", "-", "-\t/* Undo and then Redo to get the Undo text */", "-\tif (OS.SendMessage (handle, OS.EM_CANUNDO, 0, 0) == 0) {", "-\t\treturn result;", "-\t}", "-\tignoreVerify = true;", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tString oldText = getSelectionText ();", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tignoreVerify = false;", "-", "-\t/* Verify the Undo operation */", "-\tint [] start = new int [1], end = new int [1];", "-\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "-\tString newText = verifyText (oldText, start [0], end [0], null);", "-\tif (newText == null) return LRESULT.ZERO;", "-\tif (newText != oldText) {", "-\t\tnewText = Display.withCrLf (newText);", "-\t\tTCHAR buffer = new TCHAR (getCodePage (), newText, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When an edit control with ES_MULTILINE", "-\t\t* style that does not have the WS_VSCROLL style is full (i.e.", "-\t\t* there is no space at the end to draw any more characters),", "-\t\t* EM_REPLACESEL sends a WM_CHAR with a backspace character", "-\t\t* to remove any further text that is added.  This is an", "-\t\t* implementation detail of the edit control that is unexpected", "-\t\t* and can cause endless recursion when EM_REPLACESEL is sent", "-\t\t* from a WM_CHAR handler.  The fix is to ignore calling the", "-\t\t* handler from WM_CHAR.", "-\t\t*/", "-\t\tignoreCharacter = true;", "-\t\tOS.SendMessage (handle, OS.EM_REPLACESEL, 0, buffer);", "-\t\tignoreCharacter = false;", "-\t\treturn LRESULT.ZERO;", "-\t}", "-\t", "-\t/* Do the original Undo */", "-\tignoreVerify = true;", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tignoreVerify = false;", "-\treturn LRESULT.ONE;", "+\treturn verify (OS.WM_UNDO, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f69003ee9ad2ef2fa7b78d4a4f6bd983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "257f15bb83942923b6c281d94564ea670f80ba38", "commitAfterChange": "ea4f10ff61f99137c4bfd569d4ad818698d4b452", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  LRESULT WM_UNDO (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_UNDO (int wParam, int lParam)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) {", "-\t\treturn result;", "-\t}", "+\treturn wmClipboard (OS.WM_UNDO, wParam, lParam);", "+}", "-\t/* Undo and then Redo to get the Undo text */", "-\tif (OS.SendMessage (handle, OS.EM_CANUNDO, 0, 0) == 0) {", "-\t\treturn result;", "-\t}", "-\tignoreVerify = true;", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tString oldText = getSelectionText ();", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tignoreVerify = false;", "-", "-\t/* Verify the Undo operation */", "-\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "-\tString newText = verifyText (oldText, start [0], end [0], null);", "-\tif (newText == null) return LRESULT.ZERO;", "-\tif (newText != oldText) {", "-\t\tnewText = Display.withCrLf (newText);", "-\t\tTCHAR buffer = new TCHAR (getCodePage (), newText, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When an edit control with ES_MULTILINE", "-\t\t* style that does not have the WS_VSCROLL style is full (i.e.", "-\t\t* there is no space at the end to draw any more characters),", "-\t\t* EM_REPLACESEL sends a WM_CHAR with a backspace character", "-\t\t* to remove any further text that is added.  This is an", "-\t\t* implementation detail of the edit control that is unexpected", "-\t\t* and can cause endless recursion when EM_REPLACESEL is sent", "-\t\t* from a WM_CHAR handler.  The fix is to ignore calling the", "-\t\t* handler from WM_CHAR.", "-\t\t*/", "-\t\tignoreCharacter = true;", "-\t\tOS.SendMessage (handle, OS.EM_REPLACESEL, 0, buffer);", "-\t\tignoreCharacter = false;", "-\t\treturn LRESULT.ZERO;", "-\t", "-\t/* Do the original Undo */", "-\tignoreVerify = true;", "-\tcallWindowProc (OS.WM_UNDO, wParam, lParam);", "-\tignoreVerify = false;", "-\treturn LRESULT.ONE;"]}], "num": 20470}