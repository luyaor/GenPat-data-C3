{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9faf382bb54b78bccfa503e38e212ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c53d0ead0d230bfa769d49c833ff7e02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "926491b24e303f901f9b7de362f1d15531946348", "commitAfterChange": "398689fef2d763477b48c67190388b44484bb144", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 32, "signatureBeforeChange": "  void didCommitLoadForFrame(int frame)", "signatureAfterChange": "  void didCommitLoadForFrame(int frame)", "diff": ["-\t\t\tfinal ProgressListener listener = progressListeners[i];", "-\t\t\t/*", "-\t\t\t* Note on WebKit.  Running the event loop from a Browser", "-\t\t\t* delegate callback breaks the WebKit (stop loading or", "-\t\t\t* crash).  The widget ProgressBar currently touches the", "-\t\t\t* event loop every time the method setSelection is called.  ", "-\t\t\t* The workaround is to invoke Display.asyncexec so that", "-\t\t\t* the Browser does not crash when the user updates the ", "-\t\t\t* selection of the ProgressBar.", "-\t\t\t*/", "-\t\t\tdisplay.asyncExec(", "-\t\t\t\tnew Runnable() {", "-\t\t\t\t\tpublic void run() {", "-\t\t\t\t\t\tif (!display.isDisposed() && !browser.isDisposed())", "-\t\t\t\t\t\t\tlistener.changed(progress);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t);", "+\t\t\tprogressListeners[i].changed(progress);", "+\t\tif (browser.isDisposed()) return;", "+\t\tif (browser.isDisposed()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec2a14eafdadcc032a8b63e5429a860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "926491b24e303f901f9b7de362f1d15531946348", "commitAfterChange": "398689fef2d763477b48c67190388b44484bb144", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 39, "signatureBeforeChange": "  int identifierForInitialRequest(int request, int dataSource)", "signatureAfterChange": "  int identifierForInitialRequest(int request, int dataSource)", "diff": ["-\t\tfinal ProgressListener listener = progressListeners[i];", "-\t\t/*", "-\t\t* Note on WebKit.  Running the event loop from a Browser", "-\t\t* delegate callback breaks the WebKit (stop loading or", "-\t\t* crash).  The widget ProgressBar currently touches the", "-\t\t* event loop every time the method setSelection is called.  ", "-\t\t* The workaround is to invoke Display.asyncexec so that", "-\t\t* the Browser does not crash when the user updates the ", "-\t\t* selection of the ProgressBar.", "-\t\t*/", "-\t\tdisplay.asyncExec(", "-\t\t\tnew Runnable() {", "-\t\t\t\tpublic void run() {", "-\t\t\t\t\tif (!display.isDisposed() && !browser.isDisposed())", "-\t\t\t\t\t\tlistener.changed(progress);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t);", "+\t\tprogressListeners[i].changed(progress);", "+\tif (browser.isDisposed()) return 0;", "-\t\t"]}], "num": 50774}