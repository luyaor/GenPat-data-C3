{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c2b2fd81881403f350ef4fa543688ed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb16fe7561b4ed04fe3f17baa7be5d5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "dd4423d6a25e296b3131820cf1f98771823ddd19", "commitAfterChange": "9559d48b4912b67ace5428d33abe4c7215a1d5a0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t\tcurrWindowClass = OS.object_getClass(hostWindow.id);", "-\t\tint /*long*/ sendEventImpl = OS.class_getMethodImplementation(currWindowClass, OS.sel_sendEvent_);", "-\t\tif (sendEventImpl != Display.windowCallback3.getAddress()) {", "-\t\t\tint /*long*/ embeddedSubclass = display.createWindowSubclass(currWindowClass, \"SWTAWTWindow\", true);", "-\t\t\tOS.object_setClass(hostWindow.id, embeddedSubclass);", "-\t\t}", "-", "-\t\tif (windowEmbedCounts == null) windowEmbedCounts = new HashMap();", "-\t\tInteger embedCount = (Integer) windowEmbedCounts.get(hostWindow);", "-\t\tif (embedCount == null) embedCount = new Integer(0);", "-\t\tembedCount = new Integer(embedCount.intValue() + 1);", "-\t\twindowEmbedCounts.put(hostWindow, embedCount);", "-\t\t", "-\t\t// Register for notifications. An embedded shell has no control over the host window,", "-\t\t// so it isn't correct to install a delegate.", "-\t\tNSNotificationCenter defaultCenter = NSNotificationCenter.defaultCenter();", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidBecomeKey_, OS.NSWindowDidBecomeKeyNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidDeminiaturize_, OS.NSWindowDidDeminiaturizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMiniaturize_, OS.NSWindowDidMiniaturizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMove_, OS.NSWindowDidMoveNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResize_, OS.NSWindowDidResizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResignKey_, OS.NSWindowDidResignKeyNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowWillClose_, OS.NSWindowWillCloseNotification, hostWindow);", "+\t\tattachObserversToWindow(hostWindow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0990528400e726d3e45b07fa78e7f6f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ee7a783083e0c18c9c0e00c3f49a7de5eaa86f7e", "commitAfterChange": "df518e1d40069787b8bec5a1ea6e923fc650b996", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tif (window != null) {", "+\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "+", "+\tif (window == null) {", "+\t\tNSWindow hostWindow = view.window();", "+\t\tint /*long*/ windowClass = OS.object_getClass(hostWindow.id);", "+\t\tint /*long*/ sendEventImpl = OS.class_getMethodImplementation(windowClass, OS.sel_sendEvent_);", "+\t\tif (sendEventImpl != Display.windowCallback3.getAddress()) {", "+\t\t\tint /*long*/ embeddedSubclass = display.createWindowSubclass(windowClass, \"SWTAWTWindow\");", "+\t\t\tOS.object_setClass(hostWindow.id, embeddedSubclass);", "+\t\t}", "+", "+\t\t// Register for notifications. An embedded shell has no control over the host window,", "+\t\t// so it isn't correct to install a delegate.", "+\t\tNSNotificationCenter defaultCenter = NSNotificationCenter.defaultCenter();", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidBecomeKey_, OS.NSWindowDidBecomeKeyNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidDeminiaturize_, OS.NSWindowDidDeminiaturizeNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMiniaturize_, OS.NSWindowDidMiniaturizeNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMove_, OS.NSWindowDidMoveNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResize_, OS.NSWindowDidResizeNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResignKey_, OS.NSWindowDidResignKeyNotification, hostWindow);", "+\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowWillClose_, OS.NSWindowWillCloseNotification, hostWindow);", "+\t} else {", "-\t\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();"]}], "num": 60428}