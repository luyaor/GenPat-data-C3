{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "506f019b4d73c34cdcc55422ecc86daf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1e7ffdf3d92cf9e4f38c84ab20143e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "4c6c40a57003101341cff1885924156310d140e2", "commitAfterChange": "b20b1574fcd2810edc0e2ee351b119380a6c3e9c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void setSelection (boolean selected)", "signatureAfterChange": " public void setSelection (boolean selected)", "diff": ["-\t/*", "-\t* Feature in Windows. When BM_SETCHECK is used", "-\t* to set the checked state of a radio or check", "-\t* button, it sets the WM_TABSTOP style.  This", "-\t* is undocumented and unwanted.  The fix is", "-\t* to save and restore the window style bits.", "-\t*/", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tOS.SendMessage (handle, OS.BM_SETCHECK, flags, 0);", "-\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);     ", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tif (selected && grayed) flags = OS.BST_INDETERMINATE;", "+\t}", "+\tupdateSelection (flags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa58e7815797fa38d897abd10126748", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "01d02b7c2746e08488dca474b2bc7eb2b58bb4b7", "commitAfterChange": "f59deb797c64e856894963e4e3c0f3b80ed11213", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void clearSelection ()", "signatureAfterChange": "\r public void clearSelection ()", "diff": ["-\tOS.SendMessage (handle, OS.EM_SETSEL, -1, 0);\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/*\r", "+\t\t* Bug in WinCE.  Calling EM_SETSEL with -1 and 0 is equivalent\r", "+\t\t* to calling EM_SETSEL with 0 and -1.  It causes the entire\r", "+\t\t* text to be selected instead of clearing the selection.  The\r", "+\t\t* fix is to set the start of the selection to the  end of the\r", "+\t\t* current selection.\r", "+\t\t*/ \r", "+\t\tint [] end = new int [1];\r", "+\t\tOS.SendMessage (handle, OS.EM_GETSEL, (int []) null, end);\r", "+\t\tOS.SendMessage (handle, OS.EM_SETSEL, end [0], end [0]);\r", "+\t} else {\r", "+\t\tOS.SendMessage (handle, OS.EM_SETSEL, -1, 0);\r", "+\t}\r"]}], "num": 30849}