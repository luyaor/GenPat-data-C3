{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d60eee618686ee2dca06e6cd9eb86ea8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c91a11f6f52aa9e28df26d6bc80d448", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet226.java", "commitBeforeChange": "b1ecfb2158021d26fad71b625b51c37cc1bcb41b", "commitAfterChange": "d6a88a70fdf7f1bfb40ae2d70ea3909548876864", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main(String [] args)", "signatureAfterChange": " \t public static void main(String [] args)", "diff": ["-\tshell.setText(\"Custom Selection - Gradient selection\");", "+\tshell.setText(\"Tree: Custom Gradient selection\");", "+\t/*", "+\t * NOTE: MeasureItem, PaintItem and EraseItem are called repeatedly.", "+\t * Therefore, it is critical for performance that these methods be as efficient as possible.", "+\t */", "+\t\t\t\tRectangle area = tree.getClientArea();", "+\t\t\t\t/*", "+\t\t\t\t * If you wish to paint the selection beyond the end of", "+\t\t\t\t * last column, you must change the clipping region.", "+\t\t\t\t */", "+\t\t\t\tint columnCount = tree.getColumnCount();", "+\t\t\t\tif (event.index == columnCount - 1 || columnCount == 0) {", "+\t\t\t\t\tRegion region = new Region();", "+\t\t\t\t\tgc.getClipping(region);", "+\t\t\t\t\tregion.add(event.x, event.y, area.x + area.width - event.x, event.height); ", "+\t\t\t\t\tgc.setClipping(region);", "+\t\t\t\t\tregion.dispose();", "+\t\t\t\t}", "+\t\t\t\tColor foreground = gc.getForeground();", "+\t\t\t\tColor background = gc.getBackground();", "-\t\t\t\tgc.fillGradientRectangle(0, rect.y, 500, rect.height, false);", "+\t\t\t\tgc.fillGradientRectangle(0, rect.y, area.width, rect.height, false);", "+\t\t\t\t// restore colors for subsequent drawing", "+\t\t\t\tgc.setForeground(foreground);", "+\t\t\t\tgc.setBackground(background);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a19dbc534db267bf92fa2ba93c08db8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet226.java", "commitBeforeChange": "13b2b8f2ffe1037c8065635c474f3f2c02dcf507", "commitAfterChange": "cb0de7e2af26a928b885037e6a9524eb63fd094f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main(String [] args)", "signatureAfterChange": " \t public static void main(String [] args)", "diff": ["-\tshell.setText(\"Tree: Custom Gradient selection\");", "+\tshell.setText(\"Custom gradient selection for Tree\");", "-\t\tcolumn.setText(\"Col: \" + i);\t", "+\t\tcolumn.setText(\"Column \" + i);\t", "-\t * Therefore, it is critical for performance that these methods be as efficient as possible.", "+\t * Therefore, it is critical for performance that these methods be", "+\t * as efficient as possible.", "-\t\t\tif(tree.getEnabled() && (event.detail & SWT.SELECTED) != 0) {", "+\t\t\tif((event.detail & SWT.SELECTED) != 0) {", "-\t\t\t\t\tRegion region = new Region();", "-\t\t\t\t\tgc.getClipping(region);", "-\t\t\t\t\tregion.add(event.x, event.y, area.x + area.width - event.x, event.height); ", "-\t\t\t\t\tgc.setClipping(region);", "-\t\t\t\t\tregion.dispose();", "+\t\t\t\t\tint width = area.x + area.width - event.x;", "+\t\t\t\t\tif (width > 0) {", "+\t\t\t\t\t\tRegion region = new Region();", "+\t\t\t\t\t\tgc.getClipping(region);", "+\t\t\t\t\t\tregion.add(event.x, event.y, width, event.height); ", "+\t\t\t\t\t\tgc.setClipping(region);", "+\t\t\t\t\t\tregion.dispose();", "+\t\t\t\t\t}"]}], "num": 45429}