{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "034aa8e9a620409e91313c311d20726a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b67375b145e397934b914c98cd3557d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "6745a09ca9a8cba600224d88b57a2e9f8993cd06", "commitAfterChange": "d8cee51de450530bca0ed28abafe52192ae15715", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void readNextChunk(PngChunkReader chunkReader)", "signatureAfterChange": " void readNextChunk(PngChunkReader chunkReader)", "diff": ["+\t\t\t\tint transparentCount = 0, transparentPixel = -1;", "+\t\t\t\tfor (int i = 0; i < alphaPalette.length; i++) {", "+\t\t\t\t\tif ((alphaPalette[i] & 0xFF) != 255) {", "+\t\t\t\t\t\ttransparentCount++;", "+\t\t\t\t\t\ttransparentPixel = i;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (transparentCount == 0) {", "+\t\t\t\t\talphaPalette = null;", "+\t\t\t\t} else if (transparentCount == 1 && alphaPalette[transparentPixel] == 0) {", "+\t\t\t\t\talphaPalette = null;", "+\t\t\t\t\timageData.transparentPixel = transparentPixel;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4a82f5e37526c786c8177e9ab09b10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bd52a4082739e315645298860f2c48361efabf9b", "commitAfterChange": "370cf1595dfb69c7180c7cbfc71bbc85fce04050", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\t\t} else {", "-\t\t\t\tthis.alphaData = alphaData;", "-\t\t\t}", "+\t\t\t\t", "+\t\t\t\t/*", "+\t\t\t\t* If the image has opaque pixels that have the same color as the transparent", "+\t\t\t\t* pixel, create an alpha image instead of using transparent pixel. ", "+\t\t\t\t*/", "+\t\t\t\tfor (int j = 0; j < srcData.length; j+=4) {", "+\t\t\t\t\tif (srcData [j] != 0) {", "+\t\t\t\t\t\tint pixel = (srcData[j+1] << 16) + (srcData[j+2] << 8) + srcData[j+3];", "+\t\t\t\t\t\tif (pixel == this.transparentPixel){", "+\t\t\t\t\t\t\tthis.transparentPixel = -1;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} ", "+\t\t\tif (this.transparentPixel == -1) this.alphaData = alphaData;"]}], "num": 26984}