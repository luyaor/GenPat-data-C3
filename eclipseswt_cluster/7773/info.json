{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9739f773300f0cbe07fac469f1fbc641", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7253a322a1b7c11923bfbabcf467d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d8159d338aaf86023cec2249c45177bc8271c37f", "commitAfterChange": "4104ceda9f66b065a92cb3685b6d06bfffbccc42", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tvoid write(String string, int start, int end)", "signatureAfterChange": "\r \tvoid write(String string, int start, int end)", "diff": ["+\t */\r", "+\tvoid write(String string, int start, int end) {\r", "+\t\tfor (int index = start; index < end; index++) {\r", "+\t\t\tchar ch = string.charAt(index);\r", "+\t\t\tif (ch > 0xFF && WriteUnicode) {\r", "+\t\t\t\t// write the sub string from the last escaped character \r", "+\t\t\t\t// to the current one. Fixes bug 21698.\r", "+\t\t\t\tif (index > start) {\r", "+\t\t\t\t\twrite(string.substring(start, index));\r", "+\t\t\t\t}\r", "+\t\t\t\twrite(\"\\\\u\");\r", "+\t\t\t\twrite(Integer.toString((short) ch));\r", "+\t\t\t\twrite(' ');\t\t\t\t\t\t// control word delimiter\r", "+\t\t\t\tstart = index + 1;\r", "+\t\t\t}\r", "+\t\t\telse\r", "+\t\t\tif (ch == '}' || ch == '{' || ch == '\\\\') {\r", "+\t\t\t\t// write the sub string from the last escaped character \r", "+\t\t\t\t// to the current one. Fixes bug 21698.\r", "+\t\t\t\tif (index > start) {\r", "+\t\t\t\t\twrite(string.substring(start, index));\r", "+\t\t\t\t}\r", "+\t\t\t\twrite('\\\\');\r", "+\t\t\t\twrite(ch);\r", "+\t\t\t\tstart = index + 1;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t// write from the last escaped character to the end.\r", "+\t\t// Fixes bug 21698.\r", "+\t\tif (start < end) {\r", "+\t\t\twrite(string.substring(start, end));\r", "+\t\t}\r", "+\t}\t\r", "-\t */\r", "-\tvoid write(String string, int start, int end) {\r", "-\t\tint index;\r", "-\t\t\r", "-\t\tfor (index = start; index < end; index++) {\r", "-\t\t\tchar c = string.charAt(index);\r", "-\t\t\tif (c == '}' || c == '{' || c == '\\\\') {\r", "-\t\t\t\tbreak;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tif (index == end) {\r", "-\t\t\twrite(string.substring(start, end));\t// string doesn't contain RTF formatting characters, write as is\r", "-\t\t}\r", "-\t\telse {\t\t\t\t\t\t\t\t\t\t// string needs to be transformed\r", "-\t\t\tchar[] text = new char[end - start];\r", "-\t\t\t\r", "-\t\t\tstring.getChars(start, end, text, 0);\r", "-\t\t\tfor (index = 0; index < text.length; index++) {\r", "-\t\t\t\tswitch (text[index]) {\r", "-\t\t\t\t\tcase '}':\r", "-\t\t\t\t\tcase '{':\r", "-\t\t\t\t\tcase '\\\\':\r", "-\t\t\t\t\t\twrite(\"\\\\\");\r", "-\t\t\t\t\tdefault:\r", "-\t\t\t\t\t\twrite(text[index]);\r", "-\t\t\t\t}\t\t\t\r", "-\t\t\t}\t\t\t\r", "-\t\t}\r", "-\t}\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f508ba2fc0060040f03a61838fb58c7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "31fd280be8e8a42a84f11af93d2167a17b14eb6c", "commitAfterChange": "897b53cfc07404bb405be201646e27c750abe5b5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  Point computeSize ()", "signatureAfterChange": "  Point computeSize (GC gc)", "diff": ["-Point computeSize () {", "+Point computeSize (GC gc) {", "+\tint width = 0, height = 0;", "-\t\tint [] argList = {", "-\t\t\tOS.XmNwidth, 0,", "-\t\t\tOS.XmNheight, 0,", "-\t\t};", "-\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t\tint width = argList [1], height = argList [3];", "+\t\tif ((parent.style & SWT.HORIZONTAL) != 0) {", "+\t\t\twidth = getWidth ();", "+\t\t\theight = DEFAULT_HEIGHT;", "+\t\t} else {", "+\t\t\twidth = DEFAULT_WIDTH;", "+\t\t\theight = getWidth ();", "+\t\t}", "+\t\tif (control != null) {", "+\t\t\theight = Math.max (height, control.getMinimumHeight ());", "+\t\t}", "-\tint textWidth = 0, textHeight = 0;", "-\tif (text.length () != 0) {", "-\t\tGC gc = new GC (parent);", "-\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "-\t\tPoint textExtent = gc.textExtent (text, flags);", "-\t\ttextWidth = textExtent.x;", "-\t\ttextHeight = textExtent.y;", "-\t\tgc.dispose ();", "-\t}", "-\tint imageWidth = 0, imageHeight = 0;", "-\tif (image != null) {", "-\t\tRectangle rect = image.getBounds ();", "-\t\timageWidth = rect.width;", "-\t\timageHeight = rect.height;", "-\t}", "-\tint width = 0, height = 0;", "-\tif ((parent.style & SWT.RIGHT) != 0) {", "-\t\twidth = imageWidth + textWidth;", "-\t\theight = Math.max (imageHeight, textHeight);", "-\t\tif (imageWidth != 0 && textWidth != 0) width += 2;", "+\tif (text.length() != 0 || image != null) {", "+\t\tint textWidth = 0, textHeight = 0;", "+\t\tif (text.length () != 0) {", "+\t\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "+\t\t\tPoint textExtent = gc.textExtent (text, flags);", "+\t\t\ttextWidth = textExtent.x;", "+\t\t\ttextHeight = textExtent.y;", "+\t\t}", "+\t\tint imageWidth = 0, imageHeight = 0;", "+\t\tif (image != null) {", "+\t\t\tRectangle rect = image.getBounds ();", "+\t\t\timageWidth = rect.width;", "+\t\t\timageHeight = rect.height;", "+\t\t}", "+\t\tif ((parent.style & SWT.RIGHT) != 0) {", "+\t\t\twidth = imageWidth + textWidth;", "+\t\t\theight = Math.max (imageHeight, textHeight);", "+\t\t\tif (imageWidth != 0 && textWidth != 0) width += 2;", "+\t\t} else {", "+\t\t\theight = imageHeight + textHeight;", "+\t\t\tif (imageHeight != 0 && textHeight != 0) height += 2;", "+\t\t\twidth = Math.max (imageWidth, textWidth);", "+\t\t}", "-\t\theight = imageHeight + textHeight;", "-\t\tif (imageHeight != 0 && textHeight != 0) height += 2;", "-\t\twidth = Math.max (imageWidth, textWidth);", "+\t\twidth = DEFAULT_WIDTH;", "+\t\theight = DEFAULT_HEIGHT;", "-\tif ((style & SWT.DROP_DOWN) != 0) width += 12;", "-\t", "+\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\twidth += 12;", "+\t}", "-}"]}], "num": 7773}