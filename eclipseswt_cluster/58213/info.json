{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c8b0786910c4f1e29dc971a09dc26e1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a318d8c8d8274f790ab155afea74ea63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "3052bbf79433f0643a49abe741971ee99e0116c2", "commitAfterChange": "6e9c8ca44cece95e36d0afd675d022053f6a0595", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CoolBar (Composite parent, int style)", "signatureAfterChange": "\r public CoolBar (Composite parent, int style)", "diff": ["-\tsuper (parent, style);\r", "+\tsuper (parent, checkStyle(style));\r", "+\trows = new Vector(5);\r", "+\trows.addElement(new Vector(10));\r", "+\thoverCursor = new Cursor(getDisplay(), SWT.CURSOR_SIZEWE);\r", "+\tdragCursor = new Cursor(getDisplay(), SWT.CURSOR_SIZEALL);", "+\tListener listener = new Listener() {\r", "+\t\tpublic void handleEvent(Event e) {", "+\t\t\tswitch (e.type) {\r", "+\t\t\t\tcase SWT.Paint:\t\t", "+\t\t\t\t\tprocessPaint(e);\t", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.Dispose:", "+\t\t\t\t\trows = null;", "+\t\t\t\t\thoverCursor.dispose();", "+\t\t\t\t\tdragCursor.dispose();\t\t\t\t\t", "+\t\t\t\t\tbreak;", "+\t\t\t}\r", "+\t\t}\r", "+\t};", "+\taddListener(SWT.Paint, listener);", "+\taddListener(SWT.Dispose, listener);", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1390dbc5030fd8fc53ebea116c87a391", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/carbon/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "691f406eeea3d9b240a090b56dfcf7531d34f7b9", "commitAfterChange": "cade21b4efe3c8203481589250b84fcb7216e7cc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void handleFocus ()", "signatureAfterChange": "  void handleFocus ()", "diff": ["-\t// TODO", "+\tif (hasFocus) return;", "+\thasFocus = true;", "+\t((Mozilla)browser.webBrowser).Activate ();", "+\tbrowser.setFocus ();", "+\tListener listener = new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\tif (event.widget == browser) return;", "+\t\t\t((Mozilla)browser.webBrowser).Deactivate ();", "+\t\t\thasFocus = false;", "+\t\t\tbrowser.getDisplay ().removeFilter (SWT.FocusIn, this);", "+\t\t\tbrowser.getShell ().removeListener (SWT.Deactivate, this);", "+\t\t}", "+\t", "+\t};", "+\tbrowser.getDisplay ().addFilter (SWT.FocusIn, listener);", "+\tbrowser.getShell ().addListener (SWT.Deactivate, listener);"]}], "num": 58213}