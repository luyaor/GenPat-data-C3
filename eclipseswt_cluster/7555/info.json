{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "998e5ae1870b326221b3b366ff0a9a0d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d94a6601a97236d65e5a63d5d3c7cc5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "7f98faddc61f48e7c3c67e3cc4c766f7d207f260", "commitAfterChange": "6a70c67479eb26b2d748955d53c11f666234ce97", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": " void shape (int hdc, StyleItem run)", "signatureAfterChange": " void shape (int hdc, StyleItem run)", "diff": ["+\tint[] buffer = new int[1];", "-\tint MAX_GLYPHS = chars.length * 2;", "-\tint[] pcGlyphs = new int[1];", "+\tint MAX_GLYPHS = (chars.length * 3 / 2) + 16;", "-\tif (run.psc == 0) run.psc = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, 4);", "-\t/*int hr = */OS.ScriptShape(hdc, run.psc, chars, chars.length, MAX_GLYPHS, run.analysis, pGlyphs, pClusters, psva, pcGlyphs);", "-//\tif (hr == E_OUTOFMEMORY) //TODO handle it", "-//\tif (hr == USP_E_SCRIPT_NOT_IN_FONT) //TODO handle it\t\t", "+\trun.psc = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, 4);", "+\tOS.ScriptShape(hdc, run.psc, chars, chars.length, MAX_GLYPHS, run.analysis, pGlyphs, pClusters, psva, buffer);", "+\t//TODO", "+//\tif (hr == E_OUTOFMEMORY)", "+//\tif (hr == USP_E_SCRIPT_NOT_IN_FONT)", "+\tdevice.addScriptCache(run.psc);", "-\trun.glyphCount = pcGlyphs[0];", "+\trun.glyphCount = buffer[0];", "+\tint[] abc = new int[3];", "+\tint pGoffsets = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, run.glyphCount * GOFFSET_SIZEOF);", "+\tint piAdvances = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, run.glyphCount * 4);", "+\tOS.ScriptPlace(hdc, run.psc, run.glyphs, run.glyphCount, run.visAttrs, run.analysis, piAdvances, pGoffsets, abc);", "+\tOS.ScriptCacheGetHeight(hdc, run.psc, buffer);", "+\trun.advances = piAdvances;", "+\trun.goffsets = pGoffsets;", "+\trun.width = abc[0] + abc[1] + abc[2];", "+\trun.height = buffer[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbef30ffd98cbe967d3f3f10e411cca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a8e794b569e48ed111ee75c7ef4a168f438eab83", "commitAfterChange": "34d711362c95fd7705b944f4b09ae2ab72c01b84", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "diff": ["-\t\tif (bounds.width == 0) showSelection ();", "+\t\t/*", "+\t\t* Feature in the Macintosh.  When the caret is moved,", "+\t\t* the text widget scrolls to show the new location.", "+\t\t* This means that the text widget may be scrolled", "+\t\t* to the right in order to show the caret when the", "+\t\t* widget is not large enough to show both the caret", "+\t\t* location and all the text.  Unfortunately, when", "+\t\t* the text widget is resized such that all the text", "+\t\t* and the caret could be visible, Macintosh does not", "+\t\t* scroll the widget back.  The fix is to reset the", "+\t\t* selection or the text depend on if the widget", "+\t\t* is on focus or not.", "+\t\t*/", "+\t\tRect inset = getInset ();", "+\t\tint minWidth = inset.left + inset.right;", "+\t\tif (bounds.width <= minWidth && width > minWidth) {", "+\t\t\tif (hasFocus ()) {", "+\t\t\t\tControlEditTextSelectionRec selection = new ControlEditTextSelectionRec ();", "+\t\t\t\tif (OS.GetControlData (handle, (short) OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection, null) == OS.noErr) {", "+\t\t\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint [] ptr = new int [1];", "+\t\t\t\tif (OS.GetControlData (handle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, null) == OS.noErr) {", "+\t\t\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr);", "+\t\t\t\t}", "+\t\t\t\tif (ptr [0] != 0) OS.CFRelease (ptr [0]);\t\t\t\t", "+\t\t\t}", "+\t\t}"]}], "num": 7555}