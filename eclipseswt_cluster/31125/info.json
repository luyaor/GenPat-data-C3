{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e30098c4e97a6a37a3ebb132a065d0f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f1cce894d3e215356f8a722a8e05c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "769fce003203a9e6e659983a0af5b3a2b4148eeb", "commitAfterChange": "da2e678dfacec647d275d570e8e5bf547b3b24af", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void calculateLineHeight()", "signatureAfterChange": " void calculateLineHeight()", "diff": ["-\tboldFont.dispose();", "-\tboldFont = null;", "-\titalicFont.dispose();", "-\titalicFont = null;", "-\tboldItalicFont.dispose();", "-\tboldItalicFont = null;", "+\tif (boldFont != null) boldFont.dispose();", "+\tif (italicFont != null) italicFont.dispose();", "+\tif (boldItalicFont != null) boldItalicFont.dispose();", "+\tboldFont = italicFont = boldItalicFont = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1df205778416b443114f17f3698a3437", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ea98a7c7d60d7be14d294645669772df15717e8f", "commitAfterChange": "bc96057c7f893fb654973e04db46dab3c5af24b0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public boolean getMaximized ()", "signatureAfterChange": " public boolean getMaximized ()", "diff": ["-\t\tint[] type = new int[1], format = new int[1], nitems = new int[1], bytes_after = new int[1], atoms = new int[1];", "-\t\tOS.XGetWindowProperty (xDisplay, xWindow, property, 0, Integer.MAX_VALUE, false, OS.XA_ATOM, type, format, nitems, bytes_after, atoms);", "-\t\tboolean result = false;", "-\t\tif (type [0] != OS.None) {", "-\t\t\tint maximizedHorz = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_HORZ, true);", "-\t\t\tint maximizedVert = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_VERT, true);", "-\t\t\tint[] atom = new int[1];", "-\t\t\tfor (int i=0; i<nitems [0]; i++) {", "-\t\t\t\tOS.memmove(atom, atoms [0] + i * 4, 4);", "-\t\t\t\tif (atom [0] == maximizedHorz || atom [0] == maximizedVert) {", "-\t\t\t\t\tresult = true;", "-\t\t\t\t\tbreak;", "+\t\tif (property != 0) { ", "+\t\t\tint[] type = new int[1], format = new int[1], nitems = new int[1], bytes_after = new int[1], atoms = new int[1];", "+\t\t\tOS.XGetWindowProperty (xDisplay, xWindow, property, 0, Integer.MAX_VALUE, false, OS.XA_ATOM, type, format, nitems, bytes_after, atoms);", "+\t\t\tboolean result = false;", "+\t\t\tif (type [0] != OS.None) {", "+\t\t\t\tint maximizedHorz = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_HORZ, true);", "+\t\t\t\tint maximizedVert = OS.XInternAtom (xDisplay, _NET_WM_STATE_MAXIMIZED_VERT, true);", "+\t\t\t\tif (maximizedHorz != 0 && maximizedVert != 0) {", "+\t\t\t\t\tint[] atom = new int[1];", "+\t\t\t\t\tfor (int i=0; i<nitems [0]; i++) {", "+\t\t\t\t\t\tOS.memmove(atom, atoms [0] + i * 4, 4);", "+\t\t\t\t\t\tif (atom [0] == maximizedHorz || atom [0] == maximizedVert) {", "+\t\t\t\t\t\t\tresult = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\tif (atoms [0] != 0) OS.XFree (atoms [0]);", "+\t\t\treturn result;", "-\t\tif (atoms [0] != 0) OS.XFree (atoms [0]);", "-\t\treturn result;"]}], "num": 31125}