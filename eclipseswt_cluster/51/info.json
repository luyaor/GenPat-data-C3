{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b5cd5654f13634b238ed2e0145ccea7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd71dfc81f44d6bd0a1d9d5e4628b47d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "87e495a733f3e347f3ee0b41af959148dc9e3583", "commitAfterChange": "2cbee717c205414c34c64d48f8883400973c429e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t * Bug in WebKitGTK.  In WebKitGTK releases >= 1.10 a crash can occur if an", "-\t * attempt is made to show a browser before a size has been set on it.  The", "-\t * workaround is to temporarily give it a size in order to force the native", "-\t * resize events to fire. ", "+\t * Bug in WebKitGTK.  In WebKitGTK 1.10.x a crash can occur if an", "+\t * attempt is made to show a browser before a size has been set on", "+\t * it.  The workaround is to temporarily give it a size that forces", "+\t * the native resize events to fire.", "+\tint major = WebKitGTK.webkit_major_version ();", "-\tif (minor >= 10) {", "-\t\tPoint size = browser.getSize();", "-\t\tsize.x += 2; size.y += 2;", "-\t\tbrowser.setSize(size);", "-\t\tsize.x -= 2; size.y -= 2;", "-\t\tbrowser.setSize(size);", "+\tif (major == 1 && minor >= 10) {", "+\t\tRectangle minSize = browser.computeTrim (0, 0, 2, 2);", "+\t\tPoint size = browser.getSize ();", "+\t\tsize.x += minSize.width; size.y += minSize.height;", "+\t\tbrowser.setSize (size);", "+\t\tsize.x -= minSize.width; size.y -= minSize.height;", "+\t\tbrowser.setSize (size);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d3c94f9acb66e4dcda9901d3243823", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0757bcaef9d164ab26c143786c6ed075b2af44ce", "commitAfterChange": "2e2d3d7e7fd5f8bc171072a54847a622718a17d1", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 264, "signatureBeforeChange": "  @Override long windowProc (long handle, long arg0, long user_data)", "signatureAfterChange": "  @Override long windowProc (long handle, long arg0, long user_data)", "diff": ["-\t\t\t\t\t\tdrawBackground (control, 0, cairo, 0, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t\tlong window = OS.gtk_widget_get_window(handle);", "+\t\t\t\t\t\tif (window != 0) {", "+\t\t\t\t\t\t\tdrawBackground (control, window, 0, 0, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tdrawBackground (control, 0, cairo, 0, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb55cf610b79211ed98f5e32631f80ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "9b3777ac363c793d1cb46f33f1fe142affed7cf5", "commitAfterChange": "beda5b839167b1b13e3a65b090e298b270572014", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "  private int QueryContinueDrag(int fEscapePressed, int grfKeyState)", "signatureAfterChange": "  private int QueryContinueDrag(int fEscapePressed, int grfKeyState)", "diff": ["-\tif (fEscapePressed != 0)", "+\tif (fEscapePressed != 0){", "+\t\tOS.ImageList_DragLeave(0);", "+\t}", "-\tif ((grfKeyState & mask) == 0)", "+\tif ((grfKeyState & mask) == 0) {", "+\t\tOS.ImageList_DragLeave(0);", "+\t}", "+\t", "+\tDisplay display = getDisplay();", "+\tPoint pt = display.getCursorLocation();", "+\tOS.ImageList_DragMove(pt.x, pt.y);"]}], "num": 51}