{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76c8848618e18f5b836edda494bc9acb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a849b20d216038903a13055a5643aca3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "77b3fbb225bf670e0c417bef815fb7c859299e19", "commitAfterChange": "e0856b8b808f57d665e09a4e0393d4c9c1b2f815", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  \tvoid paintImage(PaintEvent event)", "signatureAfterChange": "  \tvoid paintImage(PaintEvent event)", "diff": ["+\t\tGC gc = event.gc;", "+\t\t", "+\t\t/* If the user wants to see the transparent pixel in its actual color,", "+\t\t * then temporarily turn off transparency.", "+\t\t */", "+\t\t", "+\t\t/* Scale the image when drawing, using the user's selected scaling factor. */", "-\t\tevent.gc.drawImage(", "+\t\t", "+\t\t/* If any of the background is visible, fill it with the background color. */", "+\t\tRectangle bounds = imageCanvas.getBounds();", "+\t\tif (imageData.getTransparencyType() != SWT.TRANSPARENCY_NONE) {", "+\t\t\t/* If there is any transparency at all, fill the whole background. */", "+\t\t\tgc.fillRectangle(0, 0, bounds.width, bounds.height);", "+\t\t} else {", "+\t\t\t/* Otherwise, just fill in the backwards L. */", "+\t\t\tif (ix + w < bounds.width) gc.fillRectangle(ix + w, 0, bounds.width - (ix + w), bounds.height);", "+\t\t\tif (iy + h < bounds.height) gc.fillRectangle(0, iy + h, ix + w, bounds.height - (iy + h));", "+\t\t}", "+\t\t", "+\t\t/* Draw the image */", "+\t\tgc.drawImage(", "+\t\t", "+\t\t/* If there is a mask and the user wants to see it, draw it. */", "-\t\t\tevent.gc.drawImage(", "+\t\t\tgc.drawImage(", "+\t\t", "+\t\t/* If transparency was temporarily disabled, restore it. */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66e63fea06d42bd3a6f32c6d8bb89862", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "16e38f91fae0fdf9b07ba5dd54c42a5ac0d49ecf", "commitAfterChange": "7083de9a2b65d735d2ea24e4005ac91b1e821a37", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["-//\t\tif (parent.isFocusControl()) {", "-//\t\t\tDisplay display = getDisplay();", "-//\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "-//\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "-//\t\t\tgc.drawFocus(xDraw-1, textY-1, extent.x+2, extent.y+2);", "-//\t\t}", "+\t\tif (parent.isFocusControl()) {", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tif (parent.simple || parent.single) {", "+\t\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\t\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));", "+\t\t\t\tgc.drawFocus(xDraw-1, textY-1, extent.x+2, extent.y+2);", "+\t\t\t} else {", "+\t\t\t\tgc.setForeground(parent.selectionForeground);", "+\t\t\t\tgc.drawLine(xDraw, textY+extent.y+1, xDraw+extent.x+1, textY+extent.y+1);", "+\t\t\t}", "+\t\t}"]}], "num": 48385}