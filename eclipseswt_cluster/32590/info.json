{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef4e32bd05fe8575de731f7f55597ab1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817c831cc3a9cc54f9ae5d42ed5b38b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "c727147cfc912981c3a3385133f2828fe1d74e9b", "commitAfterChange": "a215b82e21c4662f93a9c3b2b1fa9b09bb89fa3f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getThumbTrackBounds ()", "signatureAfterChange": " public Rectangle getThumbTrackBounds ()", "diff": ["-\tboolean hasA = OS.GTK_RANGE_HAS_STEPPER_A (handle);", "-\tboolean hasB = OS.GTK_RANGE_HAS_STEPPER_B (handle);", "-\tboolean hasC = OS.GTK_RANGE_HAS_STEPPER_C (handle);", "-\tboolean hasD = OS.GTK_RANGE_HAS_STEPPER_D (handle);", "+\tint[] has_stepper = new int[1];", "+\tOS.gtk_widget_style_get (handle, OS.has_backward_stepper, has_stepper, 0);", "+\tboolean hasA = has_stepper[0] != 0;", "+\tOS.gtk_widget_style_get (handle, OS.has_secondary_backward_stepper, has_stepper, 0);", "+\tboolean hasB = has_stepper[0] != 0;", "+\tOS.gtk_widget_style_get (handle, OS.has_forward_stepper, has_stepper, 0);", "+\tboolean hasC = has_stepper[0] != 0;", "+\tOS.gtk_widget_style_get (handle, OS.has_secondary_forward_stepper, has_stepper, 0);", "+\tboolean hasD = has_stepper[0] != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c7833fee9d7078994dc5ab3d953bbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "07eff1b74b49b8400fef10ab67f94111fd65d9d4", "commitAfterChange": "d0747d3dabdb1fd1c574f88ba055d17eeb8cb4e0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "diff": ["+\tint [] keyboardEvent = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamTextInputSendKeyboardEvent, OS.typeEventRef, null, keyboardEvent.length * 4, null, keyboardEvent);", "+\tint [] keyCode = new int [1];", "+\tOS.GetEventParameter (keyboardEvent [0], OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\tswitch (keyCode [0]) {", "+\t\tcase 36: { /* Return */", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\tbreak;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b01cae9c3dba4f719aa98b504bd6d92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "diff": ["-\tif (getDrawCount (theControl [0]) > 0) return OS.noErr;", "-\tint visibleRgn = getVisibleRegion (theControl [0], true);", "-\tOS.SectRgn(region [0], visibleRgn, visibleRgn);", "-\tif (!OS.EmptyRgn (visibleRgn)) {", "-\t\tint [] port = new int [1];", "-\t\tOS.GetPort (port);", "-\t\tOS.LockPortBits (port [0]);", "-//\t\tOS.QDSetDirtyRegion (port, visibleRgn);", "-\t\tint oldClip = OS.NewRgn ();", "-\t\tOS.GetClip (oldClip);", "-\t\tOS.SetClip (visibleRgn);", "-\t\tdrawBackground (theControl [0]);", "+\tif (OS.HIVIEW) {", "+\t\tint[] context = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, context);", "+\t\tint visibleRgn = region [0];", "+\t\tdrawBackground (theControl [0], context [0]);", "-\t\tdrawWidget (theControl [0], region [0], visibleRgn, theEvent);", "-\t\tOS.SetClip (oldClip);", "-\t\tOS.DisposeRgn (oldClip);", "-\t\tOS.UnlockPortBits (port [0]);", "+\t\tdrawWidget (theControl [0], context [0], region [0], visibleRgn, theEvent);", "+\t} else {", "+\t\tif (getDrawCount (theControl [0]) > 0) return OS.noErr;", "+\t\tint visibleRgn = getVisibleRegion (theControl [0], true);", "+\t\tOS.SectRgn(region [0], visibleRgn, visibleRgn);", "+\t\tif (!OS.EmptyRgn (visibleRgn)) {", "+\t\t\tint [] port = new int [1];", "+\t\t\tOS.GetPort (port);", "+\t\t\tOS.LockPortBits (port [0]);", "+//\t\t\tOS.QDSetDirtyRegion (port, visibleRgn);", "+\t\t\tint oldClip = OS.NewRgn ();", "+\t\t\tOS.GetClip (oldClip);", "+\t\t\tOS.SetClip (visibleRgn);", "+\t\t\tdrawBackground (theControl [0], 0);", "+\t\t\tcallPaintEventHandler (theControl [0], region [0], visibleRgn, theEvent, nextHandler);", "+\t\t\tdrawWidget (theControl [0], 0, region [0], visibleRgn, theEvent);", "+\t\t\tOS.SetClip (oldClip);", "+\t\t\tOS.DisposeRgn (oldClip);", "+\t\t\tOS.UnlockPortBits (port [0]);", "+\t\t}", "+\t\tOS.DisposeRgn (visibleRgn);", "-\tOS.DisposeRgn (visibleRgn);"]}], "num": 32590}