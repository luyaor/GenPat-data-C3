{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0a85dba4fb497416d2541eeb7afaaf6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bde5a6e6096a16845e7587396c7a2ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "9abc23faabf8b5bcd4e6b6e2275455ee69e4f44d", "commitAfterChange": "d73a02e12c986cd7d019bde2d5ae081d9675824b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createColorAndFontGroup ()", "signatureAfterChange": " \tvoid createColorAndFontGroup ()", "diff": ["-\t\t/* Create the group */", "+\t\t/* Create the group. */", "-\t\tcolorGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));", "+\t\tcolorGroup.setLayoutData (new GridData (SWT.FILL, SWT.FILL, true, true));", "-\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Foreground_Color\"));", "-\t\tforegroundButton = new Button (colorGroup, SWT.PUSH);", "-\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Background_Color\"));", "-\t\tbackgroundButton = new Button (colorGroup, SWT.PUSH);", "-\t\tfontButton = new Button (colorGroup, SWT.PUSH);", "-\t\tfontButton.setText(ControlExample.getResourceString(\"Font\"));", "-\t\tfontButton.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false));", "+\t\tcolorAndFontTable = new Table(colorGroup, SWT.BORDER | SWT.V_SCROLL);", "+\t\tcolorAndFontTable.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 2));", "+\t\tTableItem item = new TableItem(colorAndFontTable, SWT.None);", "+\t\titem.setText(ControlExample.getResourceString (\"Foreground_Color\"));", "+\t\tcolorAndFontTable.setSelection(0);", "+\t\titem = new TableItem(colorAndFontTable, SWT.None);", "+\t\titem.setText(ControlExample.getResourceString (\"Background_Color\"));", "+\t\titem = new TableItem(colorAndFontTable, SWT.None);", "+\t\titem.setText(ControlExample.getResourceString (\"Font\"));", "+\t\tButton changeButton = new Button (colorGroup, SWT.PUSH);", "+\t\tchangeButton.setText(ControlExample.getResourceString(\"Change\"));", "-\t\tShell shell = controlGroup.getShell ();", "-\t\tfinal ColorDialog colorDialog = new ColorDialog (shell);", "-\t\tfinal FontDialog fontDialog = new FontDialog (shell);", "-", "-\t\t/* Create images to display current colors */", "-\t\tint imageSize = 12;", "-\t\tDisplay display = shell.getDisplay ();", "-\t\tforegroundImage = new Image (display, imageSize, imageSize);", "-\t\tbackgroundImage = new Image (display, imageSize, imageSize);", "-", "-\t\t/* Add listeners to set the colors and font */", "-\t\tforegroundButton.setImage(foregroundImage); // sets the size of the button", "-\t\tforegroundButton.addSelectionListener(new SelectionAdapter() {", "+\t\t/* Add listeners to set/reset colors and fonts. */", "+\t\tcolorDialog = new ColorDialog (shell);", "+\t\tfontDialog = new FontDialog (shell);", "+\t\tchangeButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\t\tColor oldColor = foregroundColor;", "-\t\t\t\tif (oldColor == null) {", "-\t\t\t\t\tControl [] controls = getExampleWidgets ();", "-\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "-\t\t\t\t}", "-\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "-\t\t\t\tRGB rgb = colorDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = foregroundColor; // save old foreground color to dispose when done", "-\t\t\t\tforegroundColor = new Color (event.display, rgb);", "-\t\t\t\tsetForeground = true;", "-\t\t\t\tsetExampleWidgetForeground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\tbackgroundButton.setImage(backgroundImage); // sets the size of the button", "-\t\tbackgroundButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tColor oldColor = backgroundColor;", "-\t\t\t\tif (oldColor == null) {", "-\t\t\t\t\tControl [] controls = getExampleWidgets ();", "-\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground (); // seed dialog with current color", "-\t\t\t\t}", "-\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB());", "-\t\t\t\tRGB rgb = colorDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = backgroundColor; // save old background color to dispose when done", "-\t\t\t\tbackgroundColor = new Color (event.display, rgb);", "-\t\t\t\tsetBackground = true;", "-\t\t\t\tsetExampleWidgetBackground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\tfontButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent event) {", "-\t\t\t\tFont oldFont = font;", "-\t\t\t\tif (oldFont == null) {", "-\t\t\t\t\tControl [] controls = getExampleWidgets ();", "-\t\t\t\t\tif (controls.length > 0) oldFont = controls [0].getFont ();", "-\t\t\t\t}", "-\t\t\t\tif (oldFont != null) fontDialog.setFontList(oldFont.getFontData()); // seed dialog with current font", "-\t\t\t\tFontData fontData = fontDialog.open ();", "-\t\t\t\tif (fontData == null) return;", "-\t\t\t\toldFont = font; // dispose old font when done", "-\t\t\t\tfont = new Font (event.display, fontData);", "-\t\t\t\tsetFont = true;", "-\t\t\t\tsetExampleWidgetFont ();", "-\t\t\t\tsetExampleWidgetSize ();", "-\t\t\t\tif (oldFont != null) oldFont.dispose ();", "+\t\t\t\tif (colorAndFontTable.getSelectionCount() != 1) return;", "+\t\t\t\tint index = colorAndFontTable.getSelectionIndex();", "+\t\t\t\tchangeFontOrColor (index);", "-\t\t\t\tif (foregroundImage != null) foregroundImage.dispose();", "-\t\t\t\tif (backgroundImage != null) backgroundImage.dispose();", "-\t\t\t\tforegroundImage = null;", "-\t\t\t\tbackgroundImage = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79dde0f59608bf8800749123b0e6320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "8e24d4946b6db91c657141a5b9e295b56bef9d38", "commitAfterChange": "07b74545a7ea5ab851260f23deffd823331ef824", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorGroup ()", "diff": ["-\t\t", "+\t\tfontButton.setLayoutData(new GridData (GridData.HORIZONTAL_ALIGN_FILL));", "+\t\tButton defaultsButton = new Button (colorGroup, SWT.PUSH);", "+\t\tdefaultsButton.setText(ControlExample.getResourceString(\"Defaults\"));", "+", "-\t\tfinal Image backgroundImage = new Image (display, imageSize, imageSize);\t", "-\t\tfinal Image foregroundImage = new Image (display, imageSize, imageSize);", "+\t\tforegroundImage = new Image (display, imageSize, imageSize);", "+\t\tbackgroundImage = new Image (display, imageSize, imageSize);\t", "-\t\tbackgroundButton.setImage(backgroundImage);", "-\t\tbackgroundButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tRGB rgb = backgroundDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\tColor oldColor = backgroundColor;", "-\t\t\t\tbackgroundColor = new Color (backgroundButton.getDisplay(), rgb);", "-\t\t\t\tsetExampleWidgetBackground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\tforegroundButton.setImage(foregroundImage);", "+\t\tforegroundButton.setImage(foregroundImage); // sets the size of the button", "+\t\t\t\tColor oldColor = foregroundColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) foregroundDialog.setRGB(oldColor.getRGB());", "-\t\t\t\tColor oldColor = foregroundColor;", "-\t\t\t\tforegroundColor = new Color (foregroundButton.getDisplay(), rgb);", "+\t\t\t\toldColor = foregroundColor; // dispose old foreground color when done", "+\t\t\t\tforegroundColor = new Color (event.display, rgb);", "+\t\tbackgroundButton.setImage(backgroundImage); // sets the size of the button", "+\t\tbackgroundButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = backgroundColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground ();", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) backgroundDialog.setRGB(oldColor.getRGB());", "+\t\t\t\tRGB rgb = backgroundDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = backgroundColor; // dispose old background color when done", "+\t\t\t\tbackgroundColor = new Color (event.display, rgb);", "+\t\t\t\tsetExampleWidgetBackground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tFont oldFont = font;", "+\t\t\t\tif (oldFont == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldFont = controls [0].getFont ();", "+\t\t\t\t}", "+\t\t\t\tif (oldFont != null) fontDialog.setFontList(oldFont.getFontData());", "-\t\t\t\tFont oldFont = font;", "-\t\t\t\tfont = new Font (fontButton.getDisplay(), fontData);", "+\t\t\t\toldFont = font; // dispose old font when done", "+\t\t\t\tfont = new Font (event.display, fontData);", "-\t\tbackgroundButton.addDisposeListener(new DisposeListener() {", "-\t\t\tpublic void widgetDisposed(DisposeEvent event) {", "-\t\t\t\tif (backgroundImage != null) backgroundImage.dispose();", "-\t\t\t\tif (foregroundImage != null) foregroundImage.dispose();", "-\t\t\t\tif (backgroundColor != null) backgroundColor.dispose();", "-\t\t\t\tif (foregroundColor != null) foregroundColor.dispose();", "-\t\t\t\tif (font != null) font.dispose();", "-\t\t\t\tbackgroundColor = null;", "+\t\tdefaultsButton.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tsetExampleWidgetForeground ();", "+\t\t\t\tbackgroundColor = null;", "+\t\t\t\tsetExampleWidgetBackground ();", "+\t\t\t\tfont = null;", "+\t\t\t\tsetExampleWidgetFont ();", "+\t\t\t\tsetExampleWidgetSize ();", "+\t\t\t}", "+\t\t});", "+\t\tshell.addDisposeListener(new DisposeListener() {", "+\t\t\tpublic void widgetDisposed(DisposeEvent event) {", "+\t\t\t\tif (foregroundImage != null) foregroundImage.dispose();", "+\t\t\t\tif (backgroundImage != null) backgroundImage.dispose();", "+\t\t\t\tif (foregroundColor != null) foregroundColor.dispose();", "+\t\t\t\tif (backgroundColor != null) backgroundColor.dispose();", "+\t\t\t\tif (font != null) font.dispose();", "+\t\t\t\tforegroundColor = null;", "+\t\t\t\tbackgroundColor = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "075d08fce869e5b6da3611529150e704", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CTabFolderTab.java", "commitBeforeChange": "53c5711ae65b9356d75391082eda16d3c64e59aa", "commitAfterChange": "3ff82aa6e5a456ba775425383db15856918cb260", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorAndFontGroup ()", "diff": ["-\tvoid createColorGroup () {", "+\tvoid createColorAndFontGroup () {", "-\t\t", "-\t\t", "-\t\t", "-\t\t", "-\t\t", "-\t", "-\t\t", "-\t\tforegroundSelectionImage = new Image (display, imageSize, imageSize);", "-\t\tbackgroundSelectionImage = new Image (display, imageSize, imageSize);", "+\t\t\t\tsetForeground = true;", "-\t\t\t\tsetExampleWidgetBackground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\tforegroundSelectionButton.setImage(foregroundSelectionImage); // sets the size of the button", "-\t\tforegroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tColor oldColor = foregroundSelectionColor;", "-\t\t\t\tif (oldColor == null) {", "-\t\t\t\t\tControl [] controls = getExampleWidgets ();", "-\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "-\t\t\t\t}", "-\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "-\t\t\t\tRGB rgb = colorDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = foregroundSelectionColor; // save old foreground color to dispose when done", "-\t\t\t\tforegroundSelectionColor = new Color (event.display, rgb);", "-\t\t\t\tsetExampleWidgetForeground ();", "-\t\t\t\tif (oldColor != null) oldColor.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\tbackgroundSelectionButton.setImage(backgroundSelectionImage); // sets the size of the button", "-\t\tbackgroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "-\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\tColor oldColor = backgroundSelectionColor;", "-\t\t\t\tif (oldColor == null) {", "-\t\t\t\t\tControl [] controls = getExampleWidgets ();", "-\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground (); // seed dialog with current color", "-\t\t\t\t}", "-\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB());", "-\t\t\t\tRGB rgb = colorDialog.open();", "-\t\t\t\tif (rgb == null) return;", "-\t\t\t\toldColor = backgroundSelectionColor; // save old background color to dispose when done", "-\t\t\t\tbackgroundSelectionColor = new Color (event.display, rgb);", "+\t\t\t\tsetBackground = true;", "+\t\t\t\tsetFont = true;", "-\t", "-", "-\t\t/* Add listeners to set the colors and font */", "-\t\titemFontButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent event) {", "-\t\t\t\tFont oldFont = itemFont;", "-\t\t\t\tif (oldFont == null) oldFont = tabFolder1.getItem (0).getFont ();", "-\t\t\t\tfontDialog.setFontList(oldFont.getFontData());", "-\t\t\t\tFontData fontData = fontDialog.open ();", "-\t\t\t\tif (fontData == null) return;", "-\t\t\t\toldFont = itemFont;", "-\t\t\t\titemFont = new Font (event.display, fontData);", "-\t\t\t\tsetItemFont ();", "-\t\t\t\tsetExampleWidgetSize ();", "-\t\t\t\tif (oldFont != null) oldFont.dispose ();", "-\t\t\t}", "-\t\t});", "-\t\t", "-\t\t", "+\t\t\t}", "+\t\t});", "+\t\tforegroundSelectionImage = new Image (display, imageSize, imageSize);", "+\t\tbackgroundSelectionImage = new Image (display, imageSize, imageSize);", "+\t\tforegroundSelectionButton.setImage(foregroundSelectionImage); // sets the size of the button", "+\t\tforegroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = foregroundSelectionColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = foregroundSelectionColor; // save old foreground color to dispose when done", "+\t\t\t\tforegroundSelectionColor = new Color (event.display, rgb);", "+\t\t\t\tsetSelectionForeground = true;", "+\t\t\t\tsetSelectionForeground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tbackgroundSelectionButton.setImage(backgroundSelectionImage); // sets the size of the button", "+\t\tbackgroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = backgroundSelectionColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground (); // seed dialog with current color", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB());", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = backgroundSelectionColor; // save old background color to dispose when done", "+\t\t\t\tbackgroundSelectionColor = new Color (event.display, rgb);", "+\t\t\t\tsetSelectionBackground = true;", "+\t\t\t\tsetSelectionBackground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\titemFontButton.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tFont oldFont = itemFont;", "+\t\t\t\tif (oldFont == null) oldFont = tabFolder1.getItem (0).getFont ();", "+\t\t\t\tfontDialog.setFontList(oldFont.getFontData());", "+\t\t\t\tFontData fontData = fontDialog.open ();", "+\t\t\t\tif (fontData == null) return;", "+\t\t\t\toldFont = itemFont;", "+\t\t\t\titemFont = new Font (event.display, fontData);", "+\t\t\t\tsetItemFont = true;", "+\t\t\t\tsetItemFont ();", "+\t\t\t\tsetExampleWidgetSize ();", "+\t\t\t\tif (oldFont != null) oldFont.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tshell.addDisposeListener(new DisposeListener() {", "+\t\t\tpublic void widgetDisposed(DisposeEvent event) {"]}], "num": 59280}