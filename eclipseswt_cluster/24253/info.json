{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48290b1f283d8abf83077b4fa1afce6b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d611a0f37e833c8581d644821f5f948", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long maskPixmap, int maskType)", "signatureAfterChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long maskPixmap, int maskType)", "diff": ["-\t\t\tclipping = OS.gdk_region_new();", "-\t\t\tOS.gdk_region_union(clipping, data.clipRgn);", "-\t\t\tOS.gdk_region_intersect(clipping, data.damageRgn);", "+\t\t\tclipping = cairo_region_create ();", "+\t\t\tcairo_region_union (clipping, data.clipRgn);", "+\t\t\tcairo_region_intersect (clipping, data.damageRgn);", "-\t\tOS.gdk_region_get_rectangles(clipping, rects, nRects);", "-\t\tGdkRectangle rect = new GdkRectangle();", "-\t\tshort[] xRects = new short[nRects[0] * 4];", "-\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "-\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\txRects[j] = (short)(translateX + rect.x);", "-\t\t\txRects[j+1] = (short)(translateY + rect.y);", "-\t\t\txRects[j+2] = (short)rect.width;", "-\t\t\txRects[j+3] = (short)rect.height;", "-\t\t}", "-\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "-\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "-\t\t\tOS.gdk_region_destroy(clipping);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t int num = Cairo.cairo_region_num_rectangles (clipping);", "+\t\t\t for (int n = 0; n < num; n++) {", "+\t\t\t\t Cairo.cairo_region_get_rectangle (clipping, n, nRects[n]);", "+\t\t\t }", "+\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "+\t\t\tshort[] xRects = new short[nRects[0] * 4];", "+\t\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "+\t\t\t\tCairo.memmove(rect, rects[0] + (i * cairo_rectangle_int_t.sizeof), cairo_rectangle_int_t.sizeof);", "+\t\t\t\txRects[j] = (short)(translateX + rect.x);", "+\t\t\t\txRects[j+1] = (short)(translateY + rect.y);", "+\t\t\t\txRects[j+2] = (short)rect.width;", "+\t\t\t\txRects[j+3] = (short)rect.height;", "+\t\t\t}", "+\t\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "+\t\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "+\t\t\t\tCairo.cairo_region_destroy(clipping);", "+\t\t\t}\t", "+\t\t} else {", "+\t\t\tOS.gdk_region_get_rectangles(clipping, rects, nRects);", "+\t\t\tGdkRectangle rect = new GdkRectangle();", "+\t\t\tshort[] xRects = new short[nRects[0] * 4];", "+\t\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "+\t\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "+\t\t\t\txRects[j] = (short)(translateX + rect.x);", "+\t\t\t\txRects[j+1] = (short)(translateY + rect.y);", "+\t\t\t\txRects[j+2] = (short)rect.width;", "+\t\t\t\txRects[j+3] = (short)rect.height;", "+\t\t\t}", "+\t\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "+\t\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "+\t\t\t\tOS.gdk_region_destroy(clipping);", "+\t\t\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb635e8d62395347a08db651d227fc3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "commitAfterChange": "57c0e797a17f6a1fdd2b2a079dc4b2435e2d55ee", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long maskPixmap, int maskType)", "signatureAfterChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long maskPixmap, int maskType)", "diff": ["-\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\t int num = Cairo.cairo_region_num_rectangles (clipping);", "-\t\t\t for (int n = 0; n < num; n++) {", "-\t\t\t\t Cairo.cairo_region_get_rectangle (clipping, n, nRects[n]);", "-\t\t\t }", "-\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "-\t\t\tshort[] xRects = new short[nRects[0] * 4];", "-\t\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "-\t\t\t\tCairo.memmove(rect, rects[0] + (i * cairo_rectangle_int_t.sizeof), cairo_rectangle_int_t.sizeof);", "-\t\t\t\txRects[j] = (short)(translateX + rect.x);", "-\t\t\t\txRects[j+1] = (short)(translateY + rect.y);", "-\t\t\t\txRects[j+2] = (short)rect.width;", "-\t\t\t\txRects[j+3] = (short)rect.height;", "-\t\t\t}", "-\t\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "-\t\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "-\t\t\t\tCairo.cairo_region_destroy(clipping);", "-\t\t\t}\t", "-\t\t} else {", "-\t\t\tOS.gdk_region_get_rectangles(clipping, rects, nRects);", "-\t\t\tGdkRectangle rect = new GdkRectangle();", "-\t\t\tshort[] xRects = new short[nRects[0] * 4];", "-\t\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "-\t\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\t\txRects[j] = (short)(translateX + rect.x);", "-\t\t\t\txRects[j+1] = (short)(translateY + rect.y);", "-\t\t\t\txRects[j+2] = (short)rect.width;", "-\t\t\t\txRects[j+3] = (short)rect.height;", "-\t\t\t}", "-\t\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "-\t\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "-\t\t\t\tOS.gdk_region_destroy(clipping);", "-\t\t\t}\t", "+\t\tcairo_region_get_rectangles(clipping, rects, nRects);", "+\t\tGdkRectangle rect = new GdkRectangle();", "+\t\tshort[] xRects = new short[nRects[0] * 4];", "+\t\tfor (int i=0, j=0; i<nRects[0]; i++, j+=4) {", "+\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "+\t\t\txRects[j] = (short)(translateX + rect.x);", "+\t\t\txRects[j+1] = (short)(translateY + rect.y);", "+\t\t\txRects[j+2] = (short)rect.width;", "+\t\t\txRects[j+3] = (short)rect.height;", "+\t\tOS.XRenderSetPictureClipRectangles(xDisplay, destPict, 0, 0, xRects, nRects[0]);", "+\t\tif (clipping != data.clipRgn && clipping != data.damageRgn) {", "+\t\t\tcairo_region_destroy(clipping);", "+\t\t}\t"]}], "num": 24253}