{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e8c69be529b8e3a1f60c4ed71582894", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e83fb61b69a5bff0ea8203632d9d3a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "7bd11001dad7232ef5f155d55c8544824a4986e1", "commitAfterChange": "815face9c5027040f3c7c99b10975d0bd5a29ae0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\tif (!mozilla) {", "+\tif (!initialized) {", "-\t\tFilePickerFactory_1_8 pickerFactory_1_8 = new FilePickerFactory_1_8();", "-\t\tpickerFactory_1_8.AddRef();", "-\t\tbuffer = XPCOM.NS_FILEPICKER_CONTRACTID.getBytes();", "-\t\taContractID = new byte[buffer.length + 1];", "-\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "-\t\tbuffer = \"FilePicker_1_8\".getBytes(); //$NON-NLS-1$", "-\t\taClassName = new byte[buffer.length + 1];", "-\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "-\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_FILEPICKER_1_8_CID, aClassName, aContractID, pickerFactory_1_8.getAddress());", "-\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\tdispose();", "-\t\t\terror(rc);", "-\t\t}", "-\t\tpickerFactory_1_8.Release();", "-", "-\t\tmozilla = true;", "+\t\tinitialized = true;", "-\twebBrowser = new nsIWebBrowser(result[0]); ", "+\twebBrowser = new nsIWebBrowser(result[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f81c128d23e7190a3895eddebc0ba8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "718997bd54c57d166f06290b102c275f1de62c28", "commitAfterChange": "0e3b05f378596cd0667ae61bd2b48381e32225de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\tFilePickerFactory_1_8 pickerFactory_1_8 = new FilePickerFactory_1_8();", "-\t\tpickerFactory_1_8.AddRef();", "-\t\tbuffer = XPCOM.NS_FILEPICKER_CONTRACTID.getBytes();", "-\t\taContractID = new byte[buffer.length + 1];", "-\t\tSystem.arraycopy(buffer, 0, aContractID, 0, buffer.length);", "-\t\tbuffer = \"FilePicker_1_8\".getBytes(); //$NON-NLS-1$", "-\t\taClassName = new byte[buffer.length + 1];", "-\t\tSystem.arraycopy(buffer, 0, aClassName, 0, buffer.length);", "-\t\trc = componentRegistrar.RegisterFactory(XPCOM.NS_FILEPICKER_1_8_CID, aClassName, aContractID, pickerFactory_1_8.getAddress());", "-\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\tdispose();", "-\t\t\terror(rc);", "-\t\t}", "-\t\tpickerFactory_1_8.Release();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5873a7e6ee5184804c02e519c288e775", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet2.java", "commitBeforeChange": "c94d457c96c4085292fadea397c26e705fe48550", "commitAfterChange": "1892b96441d5df27eff3326846647872f369d7a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-    TableColumn column1 = new TableColumn(table, SWT.NONE);", "+    final TableColumn column1 = new TableColumn(table, SWT.NONE);", "-    TableColumn column2 = new TableColumn(table, SWT.NONE);", "+    final TableColumn column2 = new TableColumn(table, SWT.NONE);", "-    column1.pack();", "-    column2.pack();", "-    column1.addListener(SWT.Selection, new Listener() {", "+    column1.setWidth(100);", "+    column2.setWidth(100);", "+    Listener sortListener = new Listener() {", "-            // sort column 1", "+            TableColumn column = (TableColumn)e.widget;", "+            int index = column == column1 ? 0 : 1;", "-                String value1 = items[i].getText(0);", "+                String value1 = items[i].getText(index);", "-                    String value2 = items[j].getText(0);", "+                    String value2 = items[j].getText(index);", "+            table.setSortColumn(column);", "-    });", "-    column2.addListener(SWT.Selection, new Listener() {", "-        public void handleEvent(Event e) {", "-            // sort column 2", "-            TableItem[] items = table.getItems();", "-            Collator collator = Collator.getInstance(Locale.getDefault());", "-            for (int i = 1; i < items.length; i++) {", "-                String value1 = items[i].getText(1);", "-                for (int j = 0; j < i; j++){", "-                    String value2 = items[j].getText(1);", "-                    if (collator.compare(value1, value2) < 0) {", "-                        String[] values = {items[i].getText(0), items[i].getText(1)};", "-                        items[i].dispose();", "-                        TableItem item = new TableItem(table, SWT.NONE, j);", "-                        item.setText(values);", "-                        items = table.getItems();", "-                        break;", "-                    }", "-                }", "-            }", "-        }", "-    });", "-    shell.open ();", "+    };", "+    column1.addListener(SWT.Selection, sortListener);", "+    column2.addListener(SWT.Selection, sortListener);", "+    table.setSortColumn(column1);", "+\ttable.setSortDirection(SWT.UP);", "+\tshell.setSize(shell.computeSize(SWT.DEFAULT, SWT.DEFAULT).x, 300);", "+    shell.open();"]}], "num": 18792}