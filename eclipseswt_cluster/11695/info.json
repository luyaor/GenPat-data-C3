{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4d55e751f5c25768fe9bbf756020678", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "559764dc27f4e305043a3b3b57cb77a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "4a6a1a7caa018ef2794cb4d4f013dde299d32c09", "commitAfterChange": "8417232869d4203498aac68b939904a753eb6435", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void setRegion (Region region)", "diff": ["- */", "-public void getClipping (Region region) {", "-\tcheckWidget ();", "-\tif (region == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\tint hRegion = region.handle;", "-\tif (OS.GetWindowRgn (handle, hRegion) == OS.RGN_ERROR) {", "-\t\tRECT rect = new RECT ();", "-\t\tOS.GetWindowRect (handle, rect);", "-\t\tOS.SetRectRgn (hRegion, 0, 0, rect.right - rect.left, rect.bottom - rect.top);", "-\t}", "-}", "+ */", "+public void setRegion (Region region) {", "+\tcheckWidget ();", "+\tif ((style & SWT.NO_TRIM) == 0) return;", "+\tint hRegion = 0;", "+\tif (region != null) {", "+\t\thRegion = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\tOS.CombineRgn (hRegion, region.handle, hRegion, OS.RGN_OR);", "+\t}", "+\tOS.SetWindowRgn (handle, hRegion, true);", "+\tthis.region = region;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e74a9f4e73c8775f95bdcaa8cfd2550b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e0bc3758e2c84fc97a853b5c2bee350284d22f11", "commitAfterChange": "a7f6318524546d2c59ec1516946d4b957613a139", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tif (result == 1) return;", "-\tRECT rect = new RECT();", "-\tOS.GetClipBox(handle, rect);", "-\tOS.SetRectRgn(region.handle, rect.left, rect.top, rect.right, rect.bottom);", "+\tif (result != 1) {", "+\t\tRECT rect = new RECT();", "+\t\tOS.GetClipBox(handle, rect);", "+\t\tOS.SetRectRgn(region.handle, rect.left, rect.top, rect.right, rect.bottom);", "+\t}", "+\tif (!OS.IsWinCE) {", "+\t\tint hwnd = data.hwnd;", "+\t\tif (hwnd != 0 && data.ps != null) {", "+\t\t\tint sysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tif (OS.GetRandomRgn (handle, sysRgn, OS.SYSRGN) == 1) {", "+\t\t\t\tif (OS.IsWinNT) {", "+\t\t\t\t\tPOINT pt = new POINT();", "+\t\t\t\t\tOS.MapWindowPoints(0, hwnd, pt, 1);", "+\t\t\t\t\tOS.OffsetRgn(sysRgn, pt.x, pt.y);", "+\t\t\t\t}", "+\t\t\t\tOS.CombineRgn (region.handle, sysRgn, region.handle, OS.RGN_AND);", "+\t\t\t}", "+\t\t\tOS.DeleteObject(sysRgn);", "+\t\t}", "+\t}"]}], "num": 11695}