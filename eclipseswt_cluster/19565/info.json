{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b927781a8398e8089eab59f68afe41d4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5416e642df8fe2ff10e876c1608041b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 49, "signatureBeforeChange": " static String convertToLf(String text)", "signatureAfterChange": "  Menu [] getMenus (Decorations shell)", "diff": ["+", "+Menu [] getMenus (Decorations shell) {", "+\tif (menus == null) return new Menu [0];", "+\tint count = 0;", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) count++;", "+\t}", "+\tint index = 0;", "+\tMenu[] result = new Menu[count];", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) {", "+\t\t\tresult[index++] = menu;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-}", "-static String convertToLf(String text) {", "-\tchar Cr = '\\r';", "-\tchar Lf = '\\n';", "-\tint length = text.length ();", "-\tif (length == 0) return text;", "-\t", "-\t/* Check for an LF or CR/LF.  Assume the rest of the string ", "-\t * is formatted that way.  This will not work if the string ", "-\t * contains mixed delimiters. */", "-\tint i = text.indexOf (Lf, 0);", "-\tif (i == -1 || i == 0) return text;", "-\tif (text.charAt (i - 1) != Cr) return text;", "-", "-\t/* The string is formatted with CR/LF.", "-\t * Create a new string with the LF line delimiter. */", "-\ti = 0;", "-\tStringBuffer result = new StringBuffer ();", "-\twhile (i < length) {", "-\t\tint j = text.indexOf (Cr, i);", "-\t\tif (j == -1) j = length;", "-\t\tString s = text.substring (i, j);", "-\t\tresult.append (s);", "-\t\ti = j + 2;", "-\t\tresult.append (Lf);", "-\t}", "-\treturn result.toString ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccb17d5fdd625cf58558f3cc513a1f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "df63744a83b6c4ccafd10c57535b24dd9458ba96", "commitAfterChange": "49d8ee915a6006746596a7d40978b42b50fa61b3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\tcase SWT.DragDetect:", "+\t\tcase SWT.MouseDoubleClick:", "+\t\tcase SWT.MouseMove:", "+\t\tcase SWT.MouseEnter:", "+\t\tcase SWT.MouseExit:", "+\t\tcase SWT.MouseHover: {", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (event.type, event);", "+\t\t\tevent.type = SWT.None;", "+\t\t\tbreak;", "+\t\t}", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "-\t\tcase SWT.MouseDoubleClick: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseDoubleClick, mouseEvent);", "-\t\t\tbreak;", "-\t\t}", "-\t\t\tEvent keyEvent = new Event ();", "-\t\t\tkeyEvent.time = event.time;", "-\t\t\tkeyEvent.keyCode = event.count > 0 ? SWT.ARROW_UP : SWT.ARROW_DOWN;", "-\t\t\tkeyEvent.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tnotifyListeners (SWT.MouseWheel, event);", "+\t\t\tevent.type = SWT.None;", "-\t\t\tevent.doit = keyEvent.doit;"]}], "num": 19565}