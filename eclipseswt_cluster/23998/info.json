{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da96624ac8b823ad770b0f42105b7f7d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f5c5cc7bd4d37c804fd793bdb2083c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "af59f07babe70961f72bb2adde7fe177c58cbc32", "commitAfterChange": "4a34d65090fb7d63aa75009e413240829ed1f8d1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  int gtk_delete_range (int widget, int iter1, int iter2)", "signatureAfterChange": "  int gtk_delete_range (int widget, int iter1, int iter2)", "diff": ["+\t\t/* Remember the selection when the text was deleted */", "+\t\tOS.gtk_text_buffer_get_selection_bounds (bufferHandle, startIter, endIter);", "+\t\tstart = OS.gtk_text_iter_get_offset (startIter);", "+\t\tend = OS.gtk_text_iter_get_offset (endIter);", "+\t\tif (start != end) {", "+\t\t\tfixStart = start;", "+\t\t\tfixEnd = end;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37939f3f0c955e95b5854843ee114098", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java", "commitBeforeChange": "25e0b9cefcf6aad913e775e22fb19b1e3de2a216", "commitAfterChange": "abdb7df6c5ef7f31dd770f626e22ad0d039e1629", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FontData(String string)", "signatureAfterChange": " public FontData(String string)", "diff": ["-\tint height = 0;", "+\tfloat height = 0;", "-\t\theight = Integer.parseInt(string.substring(start, end));", "+\t\theight = Float.parseFloat(string.substring(start, end));", "-\t\treturn;", "+\t\tstart = end + 1;", "+\t\tend = string.length();", "+\t\tif (start < end) atsName = string.substring(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387ba3bdc1a412cd49b42f7c7bb9420e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "5d31392e36501e4034fb89569f9ccf00af3b3108", "commitAfterChange": "dca081370d5224f1cd2e70bba1975a4902add83c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["+\t\t\t\tcase OnToolBar: {", "+\t\t\t\t\tVariant arg0 = event.arguments[0];", "+\t\t\t\t\ttoolBar = arg0.getBoolean();", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Internet Explorer.  OnToolBar FALSE is emitted ", "+\t\t\t\t\t* when both tool bar, address bar and menu bar must not be visible.", "+\t\t\t\t\t* OnToolBar TRUE is emitted when either of tool bar, address bar", "+\t\t\t\t\t* or menu bar is visible.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (!toolBar) {", "+\t\t\t\t\t\taddressBar = false;", "+\t\t\t\t\t\tmenuBar = false;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\t\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"AddressBar\" }); //$NON-NLS-1$", "-\t\t\t\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\t\t\t\t\tif (pVarResult != null && pVarResult.getType() == OLE.VT_BOOL) addressBar = pVarResult.getBoolean();", "+\t\t\t\t\t\tif (addressBar) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Bug in Internet Explorer.  There is no distinct notification for", "+\t\t\t\t\t\t\t* the address bar.  If neither address, menu or tool bars are visible,", "+\t\t\t\t\t\t\t* OnToolBar FALSE is emitted. For some reason, querying the value of", "+\t\t\t\t\t\t\t* AddressBar in this case returns true even though it should not be", "+\t\t\t\t\t\t\t* set visible.  The workaround is to only query the value of AddressBar", "+\t\t\t\t\t\t\t* when OnToolBar FALSE has not been emitted.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"AddressBar\" }); //$NON-NLS-1$", "+\t\t\t\t\t\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\t\t\t\t\t\tif (pVarResult != null && pVarResult.getType() == OLE.VT_BOOL) addressBar = pVarResult.getBoolean();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tnewEvent.location = location;", "+\t\t\t\t\t\tnewEvent.size = size;", "-\t\t\t\t\t\t\tnewEvent.location = location;", "-\t\t\t\t\t\t\tnewEvent.size = size;", "-\t\t\t\t\t\t\tlocation = null;", "-\t\t\t\t\t\t\tsize = null;", "+\t\t\t\t\t\tlocation = null;", "+\t\t\t\t\t\tsize = null;", "+\tsite.addEventListener(OnToolBar, listener);"]}], "num": 23998}