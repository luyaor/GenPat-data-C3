{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8395019921c83a120b53a7f507f571a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6644d831b0f183892944d6f6e330899b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 24, "signatureBeforeChange": " TreeItem2[] getAllItems()", "signatureAfterChange": " int getContentWidth(int itemIndex)", "diff": ["+ */", "+int getContentWidth(int itemIndex) {", "+\tTreeItem2 item = getRoot().getVisibleItem(itemIndex);", "+\tint paintStopX = 0;", "+", "+\tif (item != null) {", "+\t\tpaintStopX = item.getPaintStopX();", "+\t}", "+\treturn paintStopX;", "+}", "-}", "-TreeItem2[] getAllItems() {", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 0;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAllDescendents();", "-\t\tcount += childResults[i].length;", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy(childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d403cf167f0c533b655f27ac0e5a73d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fdca6e4cea1346d013474d48c9583d543a8f6597", "commitAfterChange": "3b8e41e9339b316563bcdd1eca095f039a198c15", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 48, "signatureBeforeChange": "  void addTrayIcon (TrayIcon icon)", "signatureAfterChange": " public boolean getHighContrast ()", "diff": ["-", "-void addTrayIcon (TrayIcon icon) {", "-\tif (trayIcons == null) trayIcons = new TrayIcon [4];", "-\tint length = trayIcons.length;", "-\tfor (int i = 0; i < length; i++) {", "-\t\tif (trayIcons [i] == icon) return;", "-\t}", "-\tint index = 0;", "-\twhile (index < length) {", "-\t\tif (trayIcons [index] == null) break;", "-\t\tindex++;", "-\t}", "-\tif (index == length) {", "-\t\tTrayIcon [] newTrayIcons = new TrayIcon [length + 4];", "-\t\tSystem.arraycopy (trayIcons, 0, newTrayIcons, 0, length);", "-\t\ttrayIcons = newTrayIcons;", "-\t}", "-\ttrayIcons [index] = icon;", "-\ticon.id = nextTrayId++;", "+ */", "+public boolean getHighContrast () {", "+\tcheckDevice ();", "+\tHIGHCONTRAST pvParam = new HIGHCONTRAST ();", "+\tpvParam.cbSize = HIGHCONTRAST.sizeof;", "+\tOS.SystemParametersInfo (OS.SPI_GETHIGHCONTRAST, 0, pvParam, 0);", "+\treturn (pvParam.dwFlags & OS.HCF_HIGHCONTRASTON) != 0;", "+}"]}], "num": 22831}