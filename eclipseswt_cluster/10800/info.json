{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb856eb26cd70b1fd5ebe8abc19909e6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be2f3f195b4cb2dbeebd337d33a7535", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "79096269bec9be1584da7b8d31d5fe9573da995d", "commitAfterChange": "6509ef8bfeb70fc2d3b31e1b10ac7b68ca1e7295", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 112, "signatureBeforeChange": " public void showItem (CTabItem item)", "signatureAfterChange": " public void showItem (CTabItem item)", "diff": ["-\tif (item.isShowing()) return;", "-\tPoint size = getSize();", "-\tif (size.x <= borderLeft + borderRight || index < firstIndex) {", "-\t\tsetFirstIndex(index);", "-\t} else {", "-\t\tsetLastIndex(index);", "+\tint idx = -1;", "+\tfor (int i = 0; i < priority.length; i++) {", "+\t\tif (priority[i] == index) {", "+\t\t\tidx = i;", "+\t\t\tbreak;", "+\t\t}", "+\tboolean changed = false;", "+\tboolean oldShowChevron = showChevron;", "+\tif (mru) {", "+\t\tint[] newPriority = new int[priority.length];", "+\t\tSystem.arraycopy(priority, 0, newPriority, 1, idx);", "+\t\tSystem.arraycopy(priority, idx+1, newPriority, idx+1, priority.length - idx - 1);", "+\t\tnewPriority[0] = index;", "+\t\tpriority = newPriority;", "+\t\tif (setItemSize()) changed = true;", "+\t\tif (setItemLocation()) changed = true;", "+\t} else {", "+\t\tif (setItemSize()) changed = true;", "+\t\tif (setItemLocation()) changed = true;", "+\t\tif (!item.showing) {", "+\t\t\tif (priority[idx] >= priority[0]) {", "+\t\t\t\tint maxWidth = getRightItemEdge() - borderLeft;", "+\t\t\t\tif (!single && !simple) maxWidth -= curveWidth - 2*curveIndent;", "+\t\t\t\tint width = items[priority[idx]].width;", "+\t\t\t\twhile (idx > 1) {", "+\t\t\t\t\twidth += items[priority[idx-1]].width;", "+\t\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\t\tidx--;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tint[] newPriority = new int[priority.length];", "+\t\t\tSystem.arraycopy(priority, idx, newPriority, 0, priority.length - idx);", "+\t\t\tSystem.arraycopy(priority, 0, newPriority, priority.length - idx, idx);", "+\t\t\tpriority = newPriority;", "+\t\t\tif (setItemLocation()) changed = true;", "+\t\t}", "+\t}", "+\tsetButtonBounds();", "+\tif (showChevron != oldShowChevron) changed = true;", "+\tif (changed && toolTipShell != null) {", "+\t\tPoint pt = getDisplay().getCursorLocation();", "+\t\tpt = toControl(pt);", "+\t\tif (!updateToolTip(pt.x, pt.y)) hideToolTip();", "+\t}", "+\tif (changed) redrawTabs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30775ee8a2be331887ebe6652459ff6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "17c25770000eeabd3d2a853aa952a9512ccf690d", "commitAfterChange": "ae3524b4e7213bdc988c847b48af55b6ec06a750", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " boolean updateItems(int showIndex)", "signatureAfterChange": " boolean updateItems(int showIndex)", "diff": ["-\t\tint idx = -1;", "-\t\tfor (int i = 0; i < priority.length; i++) {", "-\t\t\tif (priority[i] == showIndex) {", "-\t\t\t\tidx = i;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\tif (priority[idx] > priority[0]) {", "+\t\tint firstIndex = showIndex;", "+\t\tif (priority[0] < showIndex) {", "+\t\t\tint width = 0;", "+\t\t\tint[] widths = new int[items.length];", "-\t\t\tint nextIndex = priority[idx];", "-\t\t\tCTabItem next = items[nextIndex];", "-\t\t\tint width = next.preferredWidth(gc, nextIndex == selectedIndex, true);", "-\t\t\twhile (idx > 1) {", "-\t\t\t\tnextIndex = priority[idx-1];", "-\t\t\t\tnext = items[nextIndex];", "-\t\t\t\twidth += next.preferredWidth(gc, nextIndex == selectedIndex, true);", "+\t\t\tfor (int i = priority[0]; i <= showIndex; i++) {", "+\t\t\t\twidths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\twidth += widths[i];", "-\t\t\t\tidx--;", "+\t\t\t}", "+\t\t\tif (width > maxWidth) {", "+\t\t\t\twidth = 0;", "+\t\t\t\tfor (int i = showIndex; i >= 0; i--) {", "+\t\t\t\t\tif (widths[i] == 0) widths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\t\tfirstIndex = i;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfirstIndex = priority[0];", "+\t\t\t\tfor (int i = showIndex + 1; i < items.length; i++) {", "+\t\t\t\t\twidths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\tif (width >= maxWidth) break;", "+\t\t\t\t}", "+\t\t\t\tif (width < maxWidth) {", "+\t\t\t\t\tfor (int i = priority[0] - 1; i >= 0; i--) {", "+\t\t\t\t\t\tif (widths[i] == 0) widths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\t\t\tfirstIndex = i;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\tint[] newPriority = new int[priority.length];", "-\t\tSystem.arraycopy(priority, idx, newPriority, 0, priority.length - idx);", "-\t\tSystem.arraycopy(priority, 0, newPriority, priority.length - idx, idx);", "-\t\tpriority = newPriority;", "-}", "+\t\tif (firstIndex != priority[0]) {", "+\t\t\tint index = 0;", "+\t\t\tfor (int i = firstIndex; i < items.length; i++) {", "+\t\t\t\tpriority[index++] = i;", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < firstIndex; i++) {", "+\t\t\t\tpriority[index++] = i;", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 10800}