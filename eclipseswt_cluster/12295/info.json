{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a629b03d53049e0a2d5db342e8bcd549", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba688be56f20caee106ec544dc4392f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_situational.java", "commitBeforeChange": "ab9053c170cd5f8a90daf93de82e0a79f1e92b73", "commitAfterChange": "a5508b8c4d8572dc589f67a824f703a9160a256f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void test_createComposites()", "signatureAfterChange": " public void test_createComposites()", "diff": ["-\tPerformanceMeter meter = createMeter(\"Create 1000 composites\");", "+\tPerformanceMeter meter = createMeter(\"Create composites\");", "-    performance.tagAsGlobalSummary(meter, \"Create 1000 composites\", Dimension.CPU_TIME);", "+    performance.tagAsGlobalSummary(meter, \"Create composites\", Dimension.CPU_TIME);", "-\t\t\tfor (int j = 0; j < 10; j++) {", "+\t\t\tfor (int j = 0; j < 30; j++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e0f6dc88d7901d14d1e173df0c861c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_situational.java", "commitBeforeChange": "ab9053c170cd5f8a90daf93de82e0a79f1e92b73", "commitAfterChange": "a5508b8c4d8572dc589f67a824f703a9160a256f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test_fastStringDrawing()", "signatureAfterChange": "  public void test_fastStringDrawing()", "diff": ["-\tPerformanceMeter meter = createMeter(\"2000 strings by GC.drawString()\");", "+\tPerformanceMeter meter = createMeter(\"Draw strings using GC.drawString()\");", "-    performance.tagAsGlobalSummary(meter, \"2000 strings by GC.drawString()\", Dimension.CPU_TIME);", "+    performance.tagAsGlobalSummary(meter, \"Draw strings using GC.drawString()\", Dimension.CPU_TIME);", "-\t\tfor(int i = 0; i < 1000; i++) {", "+\t\tfor(int i = 0; i < 2000; i++) {"]}], "num": 12295}