{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2f9fe725ad1ff2d2176f52e9c7d4439", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5e4d53ccda6a3186e2c62ec43c7eb0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "230505d4ad827a1c4e6bb987a098d96d90c30b1b", "commitAfterChange": "43d8c45f6600138a9de9cf1ed31e6b4474d120c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\t", "+\tint lpInitData = 0;", "+\tint hHeap = OS.GetProcessHeap();", "+\tif (printerData != null) {", "+\t\tbyte buffer [] = printerData.otherData;", "+\t\tif (buffer != null && buffer.length != 0) {", "+\t\t\t/* If user setup info from a previous print dialog was specified, restore the DEVMODE struct. */", "+\t\t\tlpInitData = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length);", "+\t\t\tOS.MoveMemory(lpInitData, buffer, buffer.length);", "+\t\t\tpd.hDevMode = lpInitData;", "+\t\t}", "+\t}", "+", "+\t\tif (lpInitData != 0) OS.HeapFree(hHeap, 0, lpInitData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1190e892cf4b5bf03d321bd5a656e247", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d68971a6e0260587a83310e14c5dc867f520359b", "commitAfterChange": "474c2966568dbeac4b27fdf3fd88e79d3829d960", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static boolean launch (String fileName)", "signatureAfterChange": " static boolean launch (String fileName, String workingDirectory)", "diff": ["+ */", "+/*public*/ static boolean launch (String fileName, String workingDirectory) {", "+\t", "+\tint /*long*/ lpDirectory = 0;", "+\tif (workingDirectory != null && OS.PathIsExe(lpFile)) {", "+\t    TCHAR buffer1 = new TCHAR (0, workingDirectory, true);", "+\t    byteCount = buffer1.length () * TCHAR.sizeof;", "+\t    lpDirectory = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\t    OS.MoveMemory (lpDirectory, buffer1, byteCount);", "+\t}", "+\t", "+\tinfo.lpDirectory = lpDirectory;", "+\tif (lpDirectory != 0) OS.HeapFree (hHeap, 0, lpDirectory);"]}], "num": 29886}