{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "588b0398b385f731fc09cad7559f0062", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ebc5ee043216e844e397156ed2b18a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f8f6911662cdf639af13524cf14867c235847d09", "commitAfterChange": "469a0f34eb8c282719498f4d15cb3ef0bd826b45", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r public void setRedraw (boolean redraw)", "signatureAfterChange": "\r \r public void setRedraw (boolean redraw)", "diff": ["-\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the table column\r", "-\t\t\t* widths are adjusted in the WM_SIZE callback, blank lines may be\r", "-\t\t\t* inserted at the top of the widget.  A call to LVM_GETTOPINDEX will\r", "-\t\t\t* return a negative number (this is an impossible result).  The fix is to\r", "-\t\t\t* ignore any resize generated by WM_SETREDRAW and defer the work\r", "-\t\t\t* until the WM_SETREDRAW has returned.\r", "+\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the\r", "+\t\t\t* table column widths are adjusted in WM_SIZE, blank lines may\r", "+\t\t\t* be inserted at the top of the widget.  A call to LVM_GETTOPINDEX\r", "+\t\t\t* will return a negative number (this is an impossible result).\r", "+\t\t\t* The fix is to ignore any resize generated by WM_SETREDRAW and\r", "+\t\t\t* defer the work until the WM_SETREDRAW has returned.\r", "+\t\t\t*\r", "+\t\t\t* NOTE: The window proc for the table does not redraw the\r", "+\t\t\t* non-client area (ie. the border and scroll bars).  This \r", "+\t\t\t* must be explicitly redrawn.  This code can be removed\r", "+\t\t\t* if we stop relying on the undocuemented behavior.\r", "+\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\tOS.InvalidateRect (handle, null, false);\r", "+\t\t\t} else {\r", "+\t\t\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_FRAME | OS.RDW_INVALIDATE);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4ac3006e1f51183fccaac24cc66b9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\t\t\tint flags = OS.RDW_UPDATENOW | OS.RDW_INVALIDATE;\r", "-\t\t\t\tOS.RedrawWindow (handle, rect1, 0, flags);\r", "-\t\t\t\tOS.RedrawWindow (handle, rect2, 0, flags);\r", "+\t\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\t\tOS.InvalidateRect (handle, rect1, false);\r", "+\t\t\t\t\tOS.InvalidateRect (handle, rect2, false);\r", "+\t\t\t\t\tOS.UpdateWindow (handle);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tint flags = OS.RDW_UPDATENOW | OS.RDW_INVALIDATE;\r", "+\t\t\t\t\tOS.RedrawWindow (handle, rect1, 0, flags);\r", "+\t\t\t\t\tOS.RedrawWindow (handle, rect2, 0, flags);\r", "+\t\t\t\t} \r"]}], "num": 56428}