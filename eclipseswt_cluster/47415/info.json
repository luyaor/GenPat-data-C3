{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bc7e508a08634db02a3186303683008", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a29d50d167bf51b9f2b1db3caf8551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java", "commitBeforeChange": "acddacf7da7550accfa2b2e69a28b70a3eb61e9c", "commitAfterChange": "615a9e44c1b1ef15ac246dcd713945b6c0812293", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 51, "signatureBeforeChange": "\r private String[][] merge(String[][] firstHalf, String[][] secondHalf, int column)", "signatureAfterChange": "\r \tpublic int compare(Object obj1, Object obj2)", "diff": ["- */\r", "-private String[][] merge(String[][] firstHalf, String[][] secondHalf, int column) {\r", "-\tint x = firstHalf.length + secondHalf.length;\r", "-\tint y = Math.max(firstHalf[0].length, secondHalf[0].length);\r", "-\tString[][] sorted = new String[x][y];\r", "-\t\r", "-\tint firstHalfIndex = 0;\r", "-\tint secondHalfIndex = 0;\r", "-\tint sortedIndex = 0;\r", "-\r", "-\t//merge\r", "-\twhile(firstHalfIndex < firstHalf.length && secondHalfIndex < secondHalf.length) {\r", "-\t\tif(firstHalf[firstHalfIndex][column].compareToIgnoreCase(secondHalf[secondHalfIndex][column]) <= 0 ) {\r", "-\t\t\tsorted[sortedIndex] = firstHalf[firstHalfIndex];\r", "-\t\t\tsortedIndex++;\r", "-\t\t\tfirstHalfIndex++;\r", "-\t\t} else {\r", "-\t\t\tsorted[sortedIndex] = secondHalf[secondHalfIndex];\r", "-\t\t\tsortedIndex++;\r", "-\t\t\tsecondHalfIndex++;\r", "-\t\t}\r", "-\t}\r", "-\t\r", "-\t//copy remaining items into sorted.\r", "-\twhile(firstHalfIndex < firstHalf.length) {\r", "-\t\tsorted[sortedIndex] = firstHalf[firstHalfIndex];\r", "-\t\tsortedIndex++;\r", "-\t\tfirstHalfIndex++;\r", "-\t}\r", "-\t\r", "-\twhile(secondHalfIndex < secondHalf.length) {\r", "-\t\tsorted[sortedIndex] = secondHalf[secondHalfIndex];\r", "-\t\tsortedIndex++;\r", "-\t\tsecondHalfIndex++;\r", "-\t}\r", "-\t\r", "-\treturn sorted;\r", "-}\r", "+\t */\r", "+\tpublic int compare(Object obj1, Object obj2) {\r", "+\t\tString[] row1 = (String[])obj1;\r", "+\t\tString[] row2 = (String[])obj2;\r", "+\t\t\r", "+\t\treturn row1[column].compareTo(row2[column]);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b52ac4f0a176ffc5f8b1bfe97390bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b8f9d45a80c733a8f5884af87c95e68f3463aaa7", "commitAfterChange": "e2ae18014fd9c71ab4dc0b52900b77c1d3a0f5b7", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 252, "signatureBeforeChange": "\r boolean scrollCaret()", "signatureAfterChange": "\r boolean showLocation(int x, int line)", "diff": ["-boolean scrollCaret() {\r", "-\tint line = content.getLineAtOffset(caretOffset);\r", "-\tint lineOffset = content.getOffsetAtLine(line);\r", "-\tint offsetInLine = caretOffset - lineOffset;\r", "-\tString lineText = content.getLine(line);\r", "-\tint xAtOffset = getXAtOffset(lineText, line, offsetInLine);\r", "+ */\r", "+boolean showLocation(int x, int line) {\r", "-\tif (xAtOffset < 0) {\r", "+\tif (x < 0) {\r", "-\t\txAtOffset = Math.max(horizontalScrollOffset * -1, xAtOffset - horizontalIncrement);\t\r", "-\t\tscrollHorizontalBar(xAtOffset);\r", "+\t\tx = Math.max(horizontalScrollOffset * -1, x - horizontalIncrement);\t\r", "+\t\tscrollHorizontalBar(x);\r", "-\tif (xAtOffset > clientAreaWidth) {\r", "+\tif (x > clientAreaWidth) {\r", "-\t\txAtOffset = Math.min(contentWidth.getWidth() - horizontalScrollOffset, xAtOffset + horizontalIncrement);\r", "-\t\tscrollHorizontalBar(xAtOffset - clientAreaWidth);\r", "+\t\tx = Math.min(contentWidth.getWidth() - horizontalScrollOffset, x + horizontalIncrement);\r", "+\t\tscrollHorizontalBar(x - clientAreaWidth);\r"]}], "num": 47415}