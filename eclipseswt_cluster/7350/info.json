{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "116ce51d360d32a50d7c81b2cfec1584", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2fe0e73005c90246fbdc8d6e2cd5d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5ed9eadeff488afd5cd81c46122632ed8c74a1f7", "commitAfterChange": "ea15a960a853001410e58a3d24c8aee2da7a0620", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int converterColumnIndex (int parameter)", "signatureAfterChange": "  TableItem getItem (int item, boolean create)", "diff": ["-", "-int converterColumnIndex (int parameter) {", "-\tint columnIndex = 0;", "-\tif (parameter != 0) {", "-\t\tTableColumn column = (TableColumn)  OS.JNIGetObject (parameter);", "-\t\tcolumnIndex = indexOf(column);", "-\t}", "-\treturn columnIndex;", "-}", "+", "+TableItem getItem (int item, boolean create) {", "+\tint tag = OS.FrameworkElement_Tag (item);", "+\tif (tag != 0) {", "+\t\tint contentValue = OS.IntPtr_ToInt32 (tag);", "+\t\tOS.GCHandle_Free (tag);", "+\t\treturn (TableItem) OS.JNIGetObject (contentValue);", "+\t}", "+\tif (create) {", "+\t\tint itemHandle = OS.GCHandle_Alloc (item);", "+\t\treturn new TableItem (this, SWT.NONE, 0, itemHandle);", "+\t}", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b677a7ad85233083994194e7b7a66c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/win32/OS.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r public static final native boolean TextOut (int hdc, int nXStart, int nYStart, byte [] lpString, int cbString);", "signatureAfterChange": "\r \r public static final boolean ExtTextOut(int hdc, int X, int Y, int fuOptions, RECT lprc, TCHAR lpString, int cbCount, int[] lpDx)", "diff": ["+\r", "+public static final boolean ExtTextOut(int hdc, int X, int Y, int fuOptions, RECT lprc, TCHAR lpString, int cbCount, int[] lpDx) {\r", "+\tif (IsUnicode) {\r", "+\t\tchar [] lpString1 = lpString == null ? null : lpString.chars;\r", "+\t\treturn ExtTextOutW (hdc, X, Y, fuOptions, lprc, lpString1, cbCount, lpDx);\r", "+\t}\r", "+\tbyte [] lpString1 = lpString == null ? null : lpString.bytes;\r", "+\treturn ExtTextOutA (hdc, X, Y, fuOptions, lprc, lpString1, cbCount, lpDx);\r", "+}\r", "-);\r", "-public static final native boolean TextOut (int hdc, int nXStart, int nYStart, byte [] lpString, int cbString);\r"]}], "num": 7350}