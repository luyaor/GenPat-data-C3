{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dde2bd8b7bfd63ee5dcb3c346ca7b8a", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f76a67b51d16706c40f7bf390e9c580", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 45, "signatureBeforeChange": " TreeItem2[] computeAvailableDescendents ()", "signatureAfterChange": " boolean isVisible()", "diff": ["- */", "-TreeItem2[] computeAvailableDescendents () {", "-\tif (!expanded) return new TreeItem2[] {this};", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 1;\t/* self */", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAvailableDescendents ();", "-\t\tcount += childResults[i].length;", "-\t}", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tresult[index++] = this;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy (childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\t}", "-\treturn result;", "-}", "+ */", "+boolean isVisible() {", "+\tboolean isVisible = true;", "+\tTreeItem2 parentItem = getParentItem();", "+", "+\tif (isRoot() == false) {", "+\t\tisVisible = parentItem.getExpanded();", "+\t\tif (isVisible == true) {", "+\t\t\tisVisible = parentItem.isVisible();", "+\t\t}", "+\t}", "+\treturn isVisible;\t\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "566170ecd62397866c756d0df2bfed0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 46, "signatureBeforeChange": " TreeItem2[] computeAllDescendents ()", "signatureAfterChange": " void makeVisible()", "diff": ["- */", "-TreeItem2[] computeAllDescendents () {", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 1;\t/* self */", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAllDescendents ();", "-\t\tcount += childResults[i].length;", "-\t}", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tresult[index++] = this;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy (childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\t}", "-\treturn result;", "+ */", "+void makeVisible() {", "+\tTreeItem2 parentItem = getParentItem();", "+\t", "+\tif (isVisible() == false && parentItem != null) {", "+\t\tgetParent().expand(parentItem, true);\t\t\t// have to call Tree.expand directly in order to trigger Expand event", "+\t\tparentItem.makeVisible();"]}], "num": 14649}