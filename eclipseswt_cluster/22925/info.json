{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd37ebe8b797f61f97c2df79e55c789f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44bfccaf8dc1cd018148081b7de297b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void setClipping(int x, int y, int width, int height)", "signatureAfterChange": " public void setClipping(int x, int y, int width, int height)", "diff": ["-\tif (width < 0) {", "-\t\tx = x + width;", "-\t\twidth = -width;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (width < 0) {", "+\t\t\tx = x + width;", "+\t\t\twidth = -width;", "+\t\t}", "+\t\tif (height < 0) {", "+\t\t\ty = y + height;", "+\t\t\theight = -height;", "+\t\t}", "+\t\tNSRect rect = new NSRect();", "+\t\trect.x = x;", "+\t\trect.y = y;", "+\t\trect.width = width;", "+\t\trect.height = height;", "+\t\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "+\t\tpath.retain();", "+\t\tsetClipping(path);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (height < 0) {", "-\t\ty = y + height;", "-\t\theight = -height;", "-\t}", "-\tNSRect rect = new NSRect();", "-\trect.x = x;", "-\trect.y = y;", "-\trect.width = width;", "-\trect.height = height;", "-\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "-\tpath.retain();", "-\tsetClipping(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68be824cde32e96ff599ea4c06dfeca5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ef782aa1d47f4cc453e1ff5e98420459bde2afbb", "commitAfterChange": "5a273c2ef1049cff7bd4d5ace6d67f7530a2ce69", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\tNSRect rect = null;", "-\tif (data.view != null) {", "-\t\trect = data.view.visibleRect();", "-\t} else {", "-\t\trect = new NSRect();", "-\t\tif (data.image != null) {", "-\t\t\tNSSize size = data.image.handle.size();", "-\t\t\trect.width = size.width;", "-\t\t\trect.height = size.height;", "-\t\t} else if (data.size != null) {", "-\t\t\trect.width = data.size.width;", "-\t\t\trect.height = data.size.height;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSRect rect = null;", "+\t\tif (data.view != null) {", "+\t\t\trect = data.view.visibleRect();", "+\t\t} else {", "+\t\t\trect = new NSRect();", "+\t\t\tif (data.image != null) {", "+\t\t\t\tNSSize size = data.image.handle.size();", "+\t\t\t\trect.width = size.width;", "+\t\t\t\trect.height = size.height;", "+\t\t\t} else if (data.size != null) {", "+\t\t\t\trect.width = data.size.width;", "+\t\t\t\trect.height = data.size.height;", "+\t\t\t}", "+\t\tif (data.paintRect != null || data.clipPath != null || data.inverseTransform != null) {", "+\t\t\tif (data.paintRect != null) {", "+\t\t\t\tOS.NSIntersectionRect(rect, rect, data.paintRect);", "+\t\t\t}", "+\t\t\tif (data.clipPath != null) {", "+\t\t\t\tNSRect clip = data.clipPath.bounds();", "+\t\t\t\tOS.NSIntersectionRect(rect, rect, clip);", "+\t\t\t}", "+\t\t\tif (data.inverseTransform != null && rect.width > 0 && rect.height > 0) {", "+\t\t\t\tNSPoint pt = new NSPoint();", "+\t\t\t\tpt.x = rect.x;", "+\t\t\t\tpt.y = rect.y;", "+\t\t\t\tNSSize size = new NSSize();", "+\t\t\t\tsize.width = rect.width;", "+\t\t\t\tsize.height = rect.height;", "+\t\t\t\tpt = data.inverseTransform.transformPoint(pt);", "+\t\t\t\tsize =  data.inverseTransform.transformSize(size);", "+\t\t\t\trect.x = pt.x;", "+\t\t\t\trect.y = pt.y;", "+\t\t\t\trect.width = size.width;", "+\t\t\t\trect.height = size.height;", "+\t\t\t}", "+\t\t}", "+\t\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\tif (data.paintRect != null || data.clipPath != null || data.inverseTransform != null) {", "-\t\tif (data.paintRect != null) {", "-\t\t\tOS.NSIntersectionRect(rect, rect, data.paintRect);", "-\t\t}", "-\t\tif (data.clipPath != null) {", "-\t\t\tNSRect clip = data.clipPath.bounds();", "-\t\t\tOS.NSIntersectionRect(rect, rect, clip);", "-\t\t}", "-\t\tif (data.inverseTransform != null && rect.width > 0 && rect.height > 0) {", "-\t\t\tNSPoint pt = new NSPoint();", "-\t\t\tpt.x = rect.x;", "-\t\t\tpt.y = rect.y;", "-\t\t\tNSSize size = new NSSize();", "-\t\t\tsize.width = rect.width;", "-\t\t\tsize.height = rect.height;", "-\t\t\tpt = data.inverseTransform.transformPoint(pt);", "-\t\t\tsize =  data.inverseTransform.transformSize(size);", "-\t\t\trect.x = pt.x;", "-\t\t\trect.y = pt.y;", "-\t\t\trect.width = size.width;", "-\t\t\trect.height = size.height;", "-\t\t}", "-\t}", "-\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);"]}], "num": 22925}