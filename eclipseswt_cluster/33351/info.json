{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c79a25a70244fe7c8b0666d53f2dc653", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd6ad7a32526989d4f75ecdbf6a3805", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "a095e03c33e1825b6187bad9ee734eda7553de2b", "commitAfterChange": "fca43292af30b16d820cf4a1b6c2720d3aeacee5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["+\tif (visible == OS.GTK_WIDGET_MAPPED (handle)) return;\r", "-\t\t\t*/ \r", "+\t\t\t*/\r", "-\t\t\tint barHandle = OS.gtk_menu_bar_new ();\r", "+\t\t\tbarHandle = OS.gtk_menu_bar_new ();\r", "+\t\t\tif (barHandle == 0) error (SWT.ERROR_NO_HANDLES);\r", "+\t\t\tif (itemHandle == 0) error (SWT.ERROR_NO_HANDLES);\r", "-\t\t\tCallback GtkMenuBarEventFunc = new Callback (this, \"GtkMenuBarEventFunc\", 3);\r", "-\t\t\tOS.gtk_signal_connect (barHandle, OS.event_after, GtkMenuBarEventFunc.getAddress(), 0);\r", "-\t\t\tOS.gtk_signal_connect (barHandle, OS.button_press_event, GtkMenuBarEventFunc.getAddress(), SWT.MouseDown);\r", "-\t\t\t\r", "+\t\t\tbarHandleCallback = new Callback (this, \"GtkMenuBarEventFunc\", 3);\r", "+\t\t\tint barHandleProc = barHandleCallback.getAddress ();\r", "+\t\t\tif (barHandleProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);\r", "+\t\t\tOS.gtk_signal_connect (barHandle, OS.event_after, barHandleProc, 0);\r", "+\t\t\tOS.gtk_signal_connect (barHandle, OS.button_press_event, barHandleProc, SWT.MouseDown);\r", "+\r", "-\t\t\t\r", "-\t\t\t/* Run an event loop */\r", "-\t\t\tDisplay display = getDisplay ();\r", "-\t\t\twhile (!isDisposed () && getVisible ()) {\r", "-\t\t\t\tif (!display.readAndDispatch()) display.sleep ();\r", "-\t\t\t}\r", "-\t\t\t\r", "-\t\t\t/* Release resources and unwanted grabs */\r", "-\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);\r", "-\t\t\tOS.gtk_widget_destroy (barHandle);\t\t\t\r", "-\t\t\tGtkMenuBarEventFunc.dispose ();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b10431acc4c9420e959e8fb7f62ce9a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tOS.gtk_entry_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "+\t\tOS.gtk_editable_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "-\t\thandle = OS.gtk_text_new (0, 0);", "+\t\thandle = OS.gtk_text_view_new ();", "+\t\tbufferHandle = OS.gtk_text_view_get_buffer (handle);", "+\t\tif (bufferHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-", "-\t\t/*", "-\t\t* Feature in GTK.  Calling gtk_container_add to add a", "-\t\t* GtkText correctly adds the widget but issues warnings", "-\t\t* about horizontal scrolling.  The fix is to hide the", "-\t\t* the warnings.", "-\t\t*/", "-\t\tDisplay display = getDisplay ();", "-\t\tboolean warnings = display.getWarnings ();", "-\t\tdisplay.setWarnings (false);", "-\t\tdisplay.setWarnings (warnings);", "-", "-\t\tOS.gtk_text_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "-\t\tOS.gtk_text_set_word_wrap (handle, (style & SWT.WRAP) != 0 ? 1 : 0);", "-\t\tint hsp = (style & SWT.H_SCROLL) != 0 ? OS.GTK_POLICY_AUTOMATIC : OS.GTK_POLICY_NEVER;", "-\t\tint vsp = (style & SWT.V_SCROLL) != 0 ? OS.GTK_POLICY_AUTOMATIC : OS.GTK_POLICY_NEVER;", "+\t\tOS.gtk_text_view_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "+\t\tif ((style & SWT.WRAP) != 0) OS.gtk_text_view_set_wrap_mode (handle, OS.GTK_WRAP_WORD);", "+\t\tint hsp = (style & SWT.H_SCROLL) != 0 ? OS.GTK_POLICY_ALWAYS : OS.GTK_POLICY_NEVER;", "+\t\tint vsp = (style & SWT.V_SCROLL) != 0 ? OS.GTK_POLICY_ALWAYS : OS.GTK_POLICY_NEVER;", "+\t\tif ((style & SWT.BORDER) != 0) {", "+\t\t\tOS.gtk_scrolled_window_set_shadow_type (scrolledHandle, OS.GTK_SHADOW_ETCHED_IN);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1c18502ed381d9315b0f775448d0074", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void clear (TreeItem parentItem, int index, boolean all)", "signatureAfterChange": "  void clear (int hItem, TVITEM tvItem)", "diff": ["-void clear (TreeItem parentItem, int index, boolean all) {", "-\tcheckWidget ();", "-\tTreeItem item = parentItem != null ? parentItem.getItem (index) : getItem (index);", "-\titem.clear ();", "-\titem.redraw ();", "-\tif (all) item.clearAll (all);", "+void clear (int hItem, TVITEM tvItem) {", "+\ttvItem.hItem = hItem;", "+\tTreeItem item = null;", "+\tif (OS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem) != 0) {", "+\t\titem = tvItem.lParam != -1 ? items [tvItem.lParam] : null;", "+\t}", "+\tif (item != null) {", "+\t\titem.clear ();", "+\t\titem.redraw ();", "+\t}"]}], "num": 33351}