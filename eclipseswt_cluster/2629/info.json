{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fd611417e33d3dc50d584673679703f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb36f7699b610a261645829a03c3199a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "243cdc7ee1641417e481ff23fe25338e9ca74ae1", "commitAfterChange": "2a5dda56a995180bd56bb35de3fecdef7f29fa74", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["-\tif (showCurve) {", "-\t\tif (height != SWT.DEFAULT ) height -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\t\tif (width == SWT.DEFAULT) {", "-\t\t\tPoint s = left.computeSize(SWT.DEFAULT, height);", "-\t\t\tupdateCurve(s.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "-\t\t} else {", "-\t\t\tPoint s1 = right.computeSize(rightWidth, height);", "-\t\t\tPoint s2 = left.computeSize(width - s1.x - 44, height); //44 - best guess at width of curve", "-\t\t\tupdateCurve(s2.y + BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE);", "-\t\t}", "-\t}", "+\tif (showCurve && height != SWT.DEFAULT ) height -= BORDER_TOP + BORDER_BOTTOM + 2*BORDER_STRIPE;", "-\t\t\twidth -= rightSize.x + curveWidth - 2* curveIndent;", "+\t\t\twidth -= rightSize.x + CURVE_WIDTH - 2* CURVE_INDENT;", "-\t\tw += curveWidth - 2*curveIndent;", "+\t\tw += CURVE_WIDTH - 2*CURVE_INDENT;", "-\tif (showCurve) updateCurve(getSize().y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3f04a5f92c0645acc9048f11d64532f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dfd4650fd75100a5a002cab81ff3277b16862845", "commitAfterChange": "d01fac9d213e0fa304edfed85d0f0844e9d59792", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["-\tif (data.backgroundPattern != null) {", "-\t\tif (data.gdipBrush != 0) {", "-\t\t\tdestroyGdipBrush(data.gdipBrush);", "-\t\t\tdata.gdipBrush = 0;", "-\t\t}", "-\t\tdata.backgroundPattern = null;", "-\t}", "-\tif (OS.GetBkColor(handle) == color.handle) return;", "+\tif (data.backgroundPattern == null && data.background == color.handle) return;", "+\tdata.backgroundPattern = null;", "-\tOS.SetBkColor (handle, color.handle);", "-\tint newBrush = OS.CreateSolidBrush (color.handle);", "-\tOS.SelectObject (handle, newBrush);", "-\tif (data.hBrush != 0) OS.DeleteObject (data.hBrush);", "-\tdata.hBrush = newBrush;", "-\tif (data.gdipBrush != 0) {", "-\t\tdestroyGdipBrush(data.gdipBrush);", "-\t\tdata.gdipBrush = 0;", "-\t}", "+\tdata.state &= ~(BACKGROUND | BACKGROUND_TEXT);"]}], "num": 2629}