{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84366b481cec0c38699e874e9ee28cb2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d363f9bb2934034626d59f54c791717d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tvoid addAccessibleChild(Accessible accessible)", "signatureAfterChange": " \t \tvoid checkRole(int role)", "diff": ["-\t", "-\tvoid addAccessibleChild(Accessible accessible) {", "-\t\tchildren.add(accessible);", "-\t}", "+\tvoid checkRole(int role) {", "+\t\t// A lightweight control can change its role at any time, so track", "+\t\t// the current role for the control.  If it changes, reset the attribute list.", "+\t\tif (role != currentRole) {", "+\t\t\tcurrentRole = role;", "+\t\t\t", "+\t\t\tif (attributeNames != null) {", "+\t\t\t\tattributeNames.release();", "+\t\t\t\tattributeNames = null;", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (parameterizedAttributeNames != null) {", "+\t\t\t\tparameterizedAttributeNames.release();", "+\t\t\t\tparameterizedAttributeNames = null;", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (actionNames != null) {", "+\t\t\t\tactionNames.release();", "+\t\t\t\tactionNames = null;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc744847cd2f33e9e6095322b17e69c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void internal_dispose_Accessible()", "signatureAfterChange": " \tpublic void internal_dispose_Accessible()", "diff": ["-\t\tif (actionNames != null) actionNames.release();", "-\t\tactionNames = null;", "-\t\tif (attributeNames != null) attributeNames.release();", "-\t\tattributeNames = null;", "-\t\tif (parameterizedAttributeNames != null) parameterizedAttributeNames.release();", "-\t\tparameterizedAttributeNames = null;", "-\t\t", "-\t\tCollection delegates = children.values();", "-\t\tIterator iter = delegates.iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tSWTAccessibleDelegate childDelegate = (SWTAccessibleDelegate)iter.next();", "-\t\t\tchildDelegate.internal_dispose_SWTAccessibleDelegate();", "+\t\trelease(true);", "+\t}", "-\t\t", "-\t\tchildren.clear();"]}], "num": 41333}