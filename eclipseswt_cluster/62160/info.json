{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c97bb29722a3008c3b8e7fa368ebe22a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0739418f5361de7ddd626561e3f03d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/internal/mozilla/nsID.java", "commitBeforeChange": "a6f6f0c6da1338c791fd15a091bf8705c5ee725c", "commitAfterChange": "8bf573ee7c876cf0329fbd1d4a8ab0c1b4560a42", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void Parse (String aIDStr)", "signatureAfterChange": "  public void Parse(String aIDStr)", "diff": ["-public void Parse (String aIDStr) {", "-\tif (aIDStr == null) throw new Error ();", "+public void Parse(String aIDStr) {", "+\tif(aIDStr == null) throw new Error ();", "-\tfor (; i < 8; i++) m0 = (m0 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16);", "+\tfor (; i < 8; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm0 = (m0 << 4) + digit;", "+\t}", "-\tfor (; i < 13; i++) m1 = (short)((m1 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 13; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm1 = (short)((m1 << 4) + digit);", "+\t}", "-\tfor (; i < 18; i++) m2 = (short)((m2 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 18; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm2 = (short)((m2 << 4) + digit);", "+\t}", "-\tfor (; i < 21; i++) m3[0] = (byte)((m3[0] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 23; i++) m3[1] = (byte)((m3[1] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 21; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[0] = (byte)((m3[0] << 4) + digit);", "+\t}", "+\tfor (; i < 23; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[1] = (byte)((m3[1] << 4) + digit);", "+\t}", "-\tfor (; i < 26; i++) m3[2] = (byte)((m3[2] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 28; i++) m3[3] = (byte)((m3[3] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 30; i++) m3[4] = (byte)((m3[4] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 32; i++) m3[5] = (byte)((m3[5] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 34; i++) m3[6] = (byte)((m3[6] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "-\tfor (; i < 36; i++) m3[7] = (byte)((m3[7] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 26; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[2] = (byte)((m3[2] << 4) + digit);", "+\t}", "+\tfor (; i < 28; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[3] = (byte)((m3[3] << 4) + digit);", "+\t}", "+\tfor (; i < 30; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[4] = (byte)((m3[4] << 4) + digit);", "+\t}", "+\tfor (; i < 32; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[5] = (byte)((m3[5] << 4) + digit);", "+\t}", "+\tfor (; i < 34; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[6] = (byte)((m3[6] << 4) + digit);", "+\t}", "+\tfor (; i < 36; i++) {", "+\t\tint digit = Character.digit (aIDStr.charAt (i), 16);", "+\t\tif (digit == -1) throw new Error ();", "+\t\tm3[7] = (byte)((m3[7] << 4) + digit);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d1b17550d0f96f0b86914ccc2991c28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/internal/mozilla/nsID.java", "commitBeforeChange": "a6131ac9e2d912fd79a498410994704f80907b17", "commitAfterChange": "e758c60c4fb72428ae282ccc25e3e75b0adf65c4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public boolean Parse(String aIDStr)", "signatureAfterChange": "  public void Parse (String aIDStr)", "diff": ["-public boolean Parse(String aIDStr) {", "-\tint /*long*/ ptr = XPCOM.nsID_new();", "-\tboolean result = XPCOM.nsID_Parse(ptr, aIDStr);", "-\tXPCOM.memmove(this, ptr, nsID.sizeof);", "-\tXPCOM.nsID_delete(ptr);", "-\treturn result;", "-}\t", "+public void Parse (String aIDStr) {", "+\tif(aIDStr == null) throw new Error ();", "+\tint i = 0;", "+\tfor (; i < 8; i++) m0 = (m0 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16);", "+\tif (aIDStr.charAt (i++) != '-') throw new Error ();", "+\tfor (; i < 13; i++) m1 = (short)((m1 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tif (aIDStr.charAt (i++) != '-') throw new Error ();", "+\tfor (; i < 18; i++) m2 = (short)((m2 << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tif (aIDStr.charAt (i++) != '-') throw new Error ();", "+\tfor (; i < 21; i++) m3[0] = (byte)((m3[0] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 23; i++) m3[1] = (byte)((m3[1] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tif (aIDStr.charAt (i++) != '-') throw new Error ();", "+\tfor (; i < 26; i++) m3[2] = (byte)((m3[2] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 28; i++) m3[3] = (byte)((m3[3] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 30; i++) m3[4] = (byte)((m3[4] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 32; i++) m3[5] = (byte)((m3[5] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 34; i++) m3[6] = (byte)((m3[6] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+\tfor (; i < 36; i++) m3[7] = (byte)((m3[7] << 4) + Integer.parseInt (aIDStr.substring (i, i + 1), 16));", "+}"]}], "num": 62160}