{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b6d84f9c35d2a49638541239816e8c6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876cdb27f363c0c2e3024983a882bd43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "78f0c776d53220a44bdf02b852c9a928a5d226ab", "commitAfterChange": "c032f21c78e17ec55f9e5b212dab97d2ca79c2ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " void show(int effect, int x, int y)", "signatureAfterChange": " void show(int effect, int x, int y)", "diff": ["-void show(int effect, int x, int y) {", "-\tTableItem item = findItem(x, y);", "-\tif (item == null) effect = DND.FEEDBACK_NONE;", "-\tif (currentEffect == DND.FEEDBACK_NONE && effect != DND.FEEDBACK_NONE) {", "-\t\ttable.addPaintListener(paintListener);", "-\t}", "-\tscrollHover(effect, item, x, y);", "-\tsetDragUnderEffect(effect, item);", "-\tif (currentEffect != DND.FEEDBACK_NONE && effect == DND.FEEDBACK_NONE) {", "-\t\ttable.removePaintListener(paintListener);", "-\t}", "-\tcurrentEffect = effect;", "-}", "+void show(int effect, int x, int y) {", "+\teffect = checkEffect(effect);", "+\tTableItem item = (TableItem)getItem(x,y);", "+\t", "+\t} else {", "+\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "+\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "+\t\t\t\tRectangle area = table.getClientArea();", "+\t\t\t\tint headerHeight = table.getHeaderHeight();", "+\t\t\t\tint itemHeight= table.getItemHeight();", "+\t\t\t\tPoint pt = new Point(x, y);", "+\t\t\t\tpt = table.getDisplay().map(null, table, pt);", "+\t\t\t\tTableItem nextItem = null;", "+\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "+\t\t\t\t\tint index = Math.max(0, table.indexOf(item)-1);", "+\t\t\t\t\tnextItem = table.getItem(index);", "+\t\t\t\t}", "+\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "+\t\t\t\t\tint index = Math.min(table.getItemCount()-1, table.indexOf(item)+1);", "+\t\t\t\t\tnextItem = table.getItem(index);", "+\t\t\t\t}", "+\t\t\t\tif (nextItem != null) table.showItem(nextItem);", "+\t\t\t\tscrollBeginTime = 0;", "+\t\t\t\tscrollItem = null;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "+\t\t\tscrollItem = item;", "+\t", "+\tif ((effect & DND.FEEDBACK_SELECT) != 0) {", "+\t\tif (currentItem != item || (currentEffect & DND.FEEDBACK_SELECT) == 0) { ", "+\t\t\tsetDropSelection(item); ", "+\t\t\tcurrentEffect = effect;", "+\t\t\tcurrentItem = item;", "+\t\t}", "+\t} else {", "+\t\tsetDropSelection(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5647fb5f2009eecb837a902c827e9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TableDropTargetEffect.java", "commitBeforeChange": "8200799fd4fc9f26a937f37e60a9ef54396d4890", "commitAfterChange": "ce281cb196b10adcbca7d0a8e66ab94ce171eb76", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void dragOver(DropTargetEvent event)", "signatureAfterChange": " \tpublic void dragOver(DropTargetEvent event)", "diff": ["-\t\tTable table = (Table) control;", "-", "-\t\tTableItem item = (TableItem)getItem(table, event.x, event.y);", "-", "-\t\tif ((effect & DND.FEEDBACK_SCROLL) == 0) {", "-\t\t\tscrollBeginTime = 0;", "-\t\t\tscrollItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "-\t\t\t\t\tRectangle area = table.getClientArea();", "-\t\t\t\t\tint headerHeight = table.getHeaderHeight();", "-\t\t\t\t\tint itemHeight= table.getItemHeight();", "-\t\t\t\t\tPoint pt = new Point(event.x, event.y);", "-\t\t\t\t\tpt = table.getDisplay().map(null, table, pt);", "-\t\t\t\t\tTableItem nextItem = null;", "-\t\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.max(0, table.indexOf(item)-1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.min(table.getItemCount()-1, table.indexOf(item)+1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (nextItem != null) table.showItem(nextItem);", "-\t\t\t\t\tscrollBeginTime = 0;", "-\t\t\t\t\tscrollItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "-\t\t\t\tscrollItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\t// store current effect for selection feedback"]}], "num": 62562}