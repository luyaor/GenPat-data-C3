{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d0374959db241cc20bb8759a3c250ac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac6a5ef28edb6b31be0d7d11624522f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tint /*long*/ labelLayout = OS.gtk_label_get_layout (labelHandle);", "+\t\tlong /*int*/ labelLayout = OS.gtk_label_get_layout (labelHandle);", "-\t\tint /*long*/ layout = OS.gtk_label_get_layout (labelHandle);", "-\t\tint /*long*/ context = OS.pango_layout_get_context (layout);", "-\t\tint /*long*/ lang = OS.pango_context_get_language (context);", "-\t\tint /*long*/ font = getFontDescription ();", "-\t\tint /*long*/ metrics = OS.pango_context_get_metrics (context, font, lang);", "+\t\tlong /*int*/ layout = OS.gtk_label_get_layout (labelHandle);", "+\t\tlong /*int*/ context = OS.pango_layout_get_context (layout);", "+\t\tlong /*int*/ lang = OS.pango_context_get_language (context);", "+\t\tlong /*int*/ font = getFontDescription ();", "+\t\tlong /*int*/ metrics = OS.pango_context_get_metrics (context, font, lang);", "-\t\t\tint /*long*/ style = OS.gtk_widget_get_style (frameHandle);", "+\t\t\tlong /*int*/ style = OS.gtk_widget_get_style (frameHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ab2a9158c4b34aedec4c90a26c1379", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ cairo = data.cairo;", "+\tlong /*int*/ cairo = data.cairo;", "-\t\tint /*long*/[] attrs = new int /*long*/[1];", "+\t\tlong /*int*/[] attrs = new long /*int*/[1];", "-\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\t\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "+\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "+\t\tlong /*int*/ iter = OS.pango_layout_get_iter(layout);", "-\t\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "-\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\tlong /*int*/ ptr = OS.pango_layout_get_text(layout);", "-\t\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "+\t\t\t\tlong /*int*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89bdda930f8262c4bb281b38c700a30f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  static Variant createSafeArray(String string)", "signatureAfterChange": "  static Variant createSafeArray(String string)", "diff": ["-\tint /*long*/ pvData = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, length);", "+\tlong /*int*/ pvData = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, length);", "-\tint /*long*/ pSafeArray = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, SAFEARRAY.sizeof);", "+\tlong /*int*/ pSafeArray = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, SAFEARRAY.sizeof);", "-\tint /*long*/ pVariant = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, Variant.sizeof);", "+\tlong /*int*/ pVariant = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, Variant.sizeof);", "-\tOS.MoveMemory(pVariant + 8, new int /*long*/[] {pSafeArray}, C.PTR_SIZEOF);", "+\tOS.MoveMemory(pVariant + 8, new long /*int*/[] {pSafeArray}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4329ad50dd106b3079fa1d3bd3935e49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "e9ae07fd367d911ee6d4e07d42035b0e3fd629db", "commitAfterChange": "87a273517d8662be0d55be7871a1f3a52f123a80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tif (hHint == SWT.DEFAULT && labelHandle != 0) {", "+\t\tint /*long*/ layout = OS.gtk_label_get_layout (labelHandle);", "+\t\tint /*long*/ context = OS.pango_layout_get_context (layout);", "+\t\tint /*long*/ lang = OS.pango_context_get_language (context);", "+\t\tint /*long*/ font = getFontDescription ();", "+\t\tint /*long*/ metrics = OS.pango_context_get_metrics (context, font, lang);", "+\t\tint ascent = OS.PANGO_PIXELS (OS.pango_font_metrics_get_ascent (metrics));", "+\t\tint descent = OS.PANGO_PIXELS (OS.pango_font_metrics_get_descent (metrics));", "+\t\tOS.pango_font_metrics_unref (metrics);", "+\t\tint fontHeight = ascent + descent;", "+\t\tint [] buffer = new int [1];", "+\t\tOS.g_object_get (labelHandle, OS.ypad, buffer, 0);", "+\t\tfontHeight += 2 * buffer [0];", "+\t\tif (frameHandle != 0) {", "+\t\t\tint /*long*/ style = OS.gtk_widget_get_style (frameHandle);", "+\t\t\tfontHeight += 2 * OS.gtk_style_get_ythickness (style);", "+\t\t\tfontHeight += 2 * OS.gtk_container_get_border_width (frameHandle);", "+\t\t}", "+\t\tsize.y = Math.max (size.y, fontHeight);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26e4eb0a773cee6c73eae29756102aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "8a0a64cf86ef9d95ea87456cfa83bd98199a4f72", "commitAfterChange": "bc0c76af69c56f0736b8c5669412a4269f05901f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tint metrics = OS.pango_context_get_metrics(context, font, null);", "+\t//FIXME - figure out correct language", "+\tbyte[] buffer = Converter.wcsToMbcs(null, \"en_US\");", "+\tint lang = OS.pango_language_from_string(buffer);", "+//\tint lang = OS.pango_context_get_language(context);", "+\tint metrics = OS.pango_context_get_metrics(context, font, lang);", "-\tint scale = OS.PANGO_SCALE();", "-\tfm.ascent = OS.pango_font_metrics_get_ascent(metrics) / scale;", "-\tfm.descent = OS.pango_font_metrics_get_descent(metrics) / scale;", "-\tfm.averageCharWidth = OS.pango_font_metrics_get_approximate_char_width(metrics) / scale;", "-\t//TEMPORARY CODE - why do we have to subtract instead of add???", "-\tfm.height = fm.ascent - fm.descent;", "+\tfm.ascent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_ascent(metrics));", "+\tfm.descent = OS.PANGO_PIXELS(OS.pango_font_metrics_get_descent(metrics));", "+\tfm.averageCharWidth = OS.PANGO_PIXELS(OS.pango_font_metrics_get_approximate_char_width(metrics));", "+\tfm.height = fm.ascent + fm.descent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e197968a68d09a7e63545e114bc2316", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "-\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tlong /*int*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "+\t\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, devmodeData.length);", "-\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tlong /*int*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, devmodeData.length);", "+\t\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\tint /*long*/ hMem = pd.hDevMode;", "+\t\tlong /*int*/ hMem = pd.hDevMode;", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baca1b8448ff5c4efc1472220cfde990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ hdc = gc.handle;", "+\tlong /*int*/ hdc = gc.handle;", "-\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tlong /*int*/ gdipGraphics = data.gdipGraphics;", "-\tint /*long*/ gdipForeground = 0;", "-\tint /*long*/ gdipLinkColor = 0;", "+\tlong /*int*/ gdipForeground = 0;", "+\tlong /*int*/ gdipLinkColor = 0;", "-\tint /*long*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "-\tint /*long*/ selBackground = 0;", "+\tlong /*int*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "+\tlong /*int*/ selBackground = 0;", "-\t\t\t\t\t\tint /*long*/ hFont = getItemFont(run);", "+\t\t\t\t\t\tlong /*int*/ hFont = getItemFont(run);", "-\t\t\t\t\t\t\tint /*long*/ oldFont = OS.SelectObject(hdc, hFont);", "+\t\t\t\t\t\t\tlong /*int*/ oldFont = OS.SelectObject(hdc, hFont);", "-\t\t\t\t\t\tint /*long*/ gdipFg = gdipForeground;", "+\t\t\t\t\t\tlong /*int*/ gdipFg = gdipForeground;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a95139cd7b7e5afe87e329a3f82872", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 306, "signatureBeforeChange": " \tint get_indexInParent(int pIndexInParent)", "signatureAfterChange": " \tint get_indexInParent(long pIndexInParent)", "diff": ["-\tint get_indexInParent(int /*long*/ pIndexInParent) {", "+\tint get_indexInParent(long /*int*/ pIndexInParent) {", "-\t\t\t// just create an  int /*long*/ [] ppdispParent - it's not a variant anyhow... ", "-//\t\t\tint /*long*/ ppdispParent = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof);", "+\t\t\t// just create an  long /*int*/ [] ppdispParent - it's not a variant anyhow... ", "+//\t\t\tlong /*int*/ ppdispParent = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof);", "-//\t\t\t\t\tint /*long*/ pcountChildren = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, 4);", "+//\t\t\t\t\tlong /*int*/ pcountChildren = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, 4);", "-//\t\t\t\t\t\tint /*long*/ rgVarChildren = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof * childCount[0]);", "+//\t\t\t\t\t\tlong /*int*/ rgVarChildren = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof * childCount[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63a240c1d6c3950fcf976a1b78d9fa8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " public FontData open ()", "diff": ["-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ lpLogFont = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, LOGFONT.sizeof);", "+\tlong /*int*/ lpLogFont = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, LOGFONT.sizeof);", "-\t\tint /*long*/ hDC = OS.GetDC (0);", "+\t\tlong /*int*/ hDC = OS.GetDC (0);", "-\t\tint /*long*/ hDC = OS.GetDC(0);", "+\t\tlong /*int*/ hDC = OS.GetDC(0);", "-\t\t\tint /*long*/ hFont = OS.CreateFontIndirect(logFont);", "-\t\t\tint /*long*/ oldFont = OS.SelectObject(hDC, hFont);", "+\t\t\tlong /*int*/ hFont = OS.CreateFontIndirect(logFont);", "+\t\t\tlong /*int*/ oldFont = OS.SelectObject(hDC, hFont);"]}], "num": 54595}