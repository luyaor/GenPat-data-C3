{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45a4afe800119df8363e8a1e1ed7fedb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "590c87e0de432236569e1af8091624e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9f7b90f9b2aed3736e0ba3db941f83ebe3a8866a", "commitAfterChange": "94ea49a114eacde877510e937b5228b5619277ce", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " void removeColumn (TreeColumn column)", "signatureAfterChange": " void removeColumn (TreeColumn column)", "diff": ["-\tint lastColumnIndex = columns.length - 1;", "-\tif (lastColumnIndex < 0) {\t/* no more columns */", "-\t\tupdateHorizontalBar ();", "-\t} else {", "-\t\tTreeColumn lastColumn = columns[lastColumnIndex];", "-\t\tgetHorizontalBar ().setMaximum (lastColumn.getX () + lastColumn.width);", "-\t}", "-\t", "-", "+\t", "+\tint lastColumnIndex = columns.length - 1;", "+\tif (lastColumnIndex < 0) {\t/* no more columns */", "+\t\tupdateHorizontalBar ();", "+\t} else {", "+\t\tint newWidth = 0;", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tnewWidth += columns[i].width;", "+\t\t}", "+\t\tScrollBar hBar = getHorizontalBar (); ", "+\t\thBar.setMaximum (newWidth);", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca46950fb81a3346745d4a6f08dad30d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\tif (order [0] != 0) return;\t\t/* column 0 cannot be moved */", "+\t/*", "+\t * If the first ordered column has changed then the old and new ordered column 0's", "+\t * have to recompute their display texts since they will now have just gained/lost", "+\t * space as a result of the hierarchy decorations that appear in ordered column 0.", "+\t */", "+\tif (oldOrder [0] != order [0]) {", "+\t\torderedCol0imageWidth = columns [order [0]].itemImageWidth;", "+\t\tGC gc = new GC (this);", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\titems [i].updateColumnWidth (columns [oldOrder [0]], gc);", "+\t\t\titems [i].updateColumnWidth (columns [order [0]], gc);", "+\t\t}", "+\t\tgc.dispose();", "+\t}"]}], "num": 42790}