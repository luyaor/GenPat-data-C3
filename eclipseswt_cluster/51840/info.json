{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30711536ea180ed1eafbc81536adc198", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26ef17d0d92162fd7c4dc3f98a4c7e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "d4c7da99373f8f0ef2ecf3082d69b8331929a5f1", "commitAfterChange": "e7fb43dbb2484659429530f9cab714cb6e3de9f3", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \tprivate void dragSourceHandleDragFinished(DragSourceEvent event, String[] sourceNames)", "signatureAfterChange": "\r \tprivate void dragSourceHandleDragFinished(DragSourceEvent event, String[] sourceNames)", "diff": ["-\t\tVector /* of File */ dirtyFiles = new Vector();\r", "-\t\tfor (int i = 0; i < sourceNames.length; i++){\r", "-\t\t\tfinal File source = new File(sourceNames[i]);\r", "-\t\t\tdirtyFiles.add(source);\r", "-\t\r", "-\t\t\t// Delete each file\r", "-\t\t\tif (! deleteFileStructure(source)) {\r", "-\t\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r", "-\t\t\t\tbox.setText(getResourceString(\"dialog.FailedDelete.title\"));\r", "-\t\t\t\tbox.setMessage(getResourceString(\"dialog.FailedDelete.description\",\r", "-\t\t\t\t\tnew Object[] { source }));\r", "-\t\t\t\tbox.open();\r", "-\t\t\t\tbreak;\r", "+\t\t// Get array of files that were actually transferred\r", "+\t\tfinal File[] sourceFiles;\r", "+\t\tif (processedDropFiles != null) {\r", "+\t\t\tsourceFiles = processedDropFiles;\r", "+\t\t} else {\r", "+\t\t\tsourceFiles = new File[sourceNames.length];\r", "+\t\t\tfor (int i = 0; i < sourceNames.length; ++i)\r", "+\t\t\t\tsourceFiles[i] = new File(sourceNames[i]);\r", "+\t\t}\t\r", "+\r", "+\t\t// Delete each file\r", "+\t\tfor (int i = 0; i < sourceFiles.length; i++){\r", "+\t\t\tfinal File source = sourceFiles[i];\r", "+\t\t\tfor (;;) {\r", "+\t\t\t\tif (deleteFileStructure(source)) {\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.ABORT | SWT.RETRY | SWT.IGNORE);\r", "+\t\t\t\t\tbox.setText(getResourceString(\"dialog.FailedDelete.title\"));\r", "+\t\t\t\t\tbox.setMessage(getResourceString(\"dialog.FailedDelete.description\",\r", "+\t\t\t\t\t\tnew Object[] { source }));\r", "+\t\t\t\t\tint button = box.open();\r", "+\t\t\t\t\tif (button == SWT.ABORT) i = sourceNames.length;\r", "+\t\t\t\t\tif (button == SWT.RETRY) break;\r", "+\t\t\t\t}\r", "-\t\tnotifyRefreshFiles((File[]) dirtyFiles.toArray(new File[dirtyFiles.size()]));\r", "+\t\tnotifyRefreshFiles(sourceFiles);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c66b065b5de1535782617c2905f18b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "d4c7da99373f8f0ef2ecf3082d69b8331929a5f1", "commitAfterChange": "e7fb43dbb2484659429530f9cab714cb6e3de9f3", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "\r \tprivate void dragSourceHandleDragFinished(DragSourceEvent event, String[] sourceNames)", "signatureAfterChange": "\r \tprivate void dragSourceHandleDragFinished(DragSourceEvent event, String[] sourceNames)", "diff": ["-\t\tVector /* of File */ dirtyFiles = new Vector();\r", "-\t\tfor (int i = 0; i < sourceNames.length; i++){\r", "-\t\t\tfinal File source = new File(sourceNames[i]);\r", "-\t\t\tdirtyFiles.add(source);\r", "-\t\r", "-\t\t\t// Delete each file\r", "-\t\t\tif (! deleteFileStructure(source)) {\r", "-\t\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.OK);\r", "-\t\t\t\tbox.setText(getResourceString(\"dialog.FailedDelete.title\"));\r", "-\t\t\t\tbox.setMessage(getResourceString(\"dialog.FailedDelete.description\",\r", "-\t\t\t\t\tnew Object[] { source }));\r", "-\t\t\t\tbox.open();\r", "-\t\t\t\tbreak;\r", "+\t\t// Get array of files that were actually transferred\r", "+\t\tfinal File[] sourceFiles;\r", "+\t\tif (processedDropFiles != null) {\r", "+\t\t\tsourceFiles = processedDropFiles;\r", "+\t\t} else {\r", "+\t\t\tsourceFiles = new File[sourceNames.length];\r", "+\t\t\tfor (int i = 0; i < sourceNames.length; ++i)\r", "+\t\t\t\tsourceFiles[i] = new File(sourceNames[i]);\r", "+\t\t}\t\r", "+\r", "+\t\t// Delete each file\r", "+\t\tfor (int i = 0; i < sourceFiles.length; i++){\r", "+\t\t\tfinal File source = sourceFiles[i];\r", "+\t\t\tfor (;;) {\r", "+\t\t\t\tif (deleteFileStructure(source)) {\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR | SWT.ABORT | SWT.RETRY | SWT.IGNORE);\r", "+\t\t\t\t\tbox.setText(getResourceString(\"dialog.FailedDelete.title\"));\r", "+\t\t\t\t\tbox.setMessage(getResourceString(\"dialog.FailedDelete.description\",\r", "+\t\t\t\t\t\tnew Object[] { source }));\r", "+\t\t\t\t\tint button = box.open();\r", "+\t\t\t\t\tif (button == SWT.ABORT) i = sourceNames.length;\r", "+\t\t\t\t\tif (button == SWT.RETRY) break;\r", "+\t\t\t\t}\r", "-\t\tnotifyRefreshFiles((File[]) dirtyFiles.toArray(new File[dirtyFiles.size()]));\r", "+\t\tnotifyRefreshFiles(sourceFiles);\r"]}], "num": 51840}