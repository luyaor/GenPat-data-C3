{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f64a6c1cde3423773940b6c390d27fff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0b938a63cc54130e74e4cfe525f411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void setPixelData(byte[] data, ImageData imageData)", "signatureAfterChange": "\r void setPixelData(byte[] data, ImageData imageData)", "diff": ["-\t\t\tint srcBytesPerLine = width * 2;\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tint srcBytesPerLine = getAlignedBytesPerRow();\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68c9b6f36c0818679373901805a688a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "76490404bf5172163d6f6c138307c13c60a21a53", "commitAfterChange": "90e9dfa32312c2a0fc142ca709799f9b0bebf233", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-\t// count number of controls under root before we create the MLTE", "+\t// AW: HACK ALERT!", "+\t// count number of controls under root before we create the MLTE so that we know later", "+\t// how many controls were created by TXNNewObject", "-        short oldCount= cnt[0];", "+\tshort oldCount= cnt[0];", "-\tif (status == 0) {\t\t ", "+\tif (status == OS.kNoErr) {\t\t ", "+\t// determine how many controls were created by TXNNewObject under the root control;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b64f0c4bec506dee99bdb4f29027f15a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "74633fa01aa8c5998245320589a13e924ab066bc", "commitAfterChange": "9aa111009eb55f78239030ddcabfd6bb90983b3a", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " Rectangle getHitBounds ()", "signatureAfterChange": " Rectangle getHitBounds ()", "diff": ["+\t\t/* ", "+\t\t * If there are no columns then this spans from the beginning of the receiver's", "+\t\t * image or text to the end of its text.", "+\t\t */", "-\t\twidth = columns [0].width - parent.horizontalOffset - contentX;", "+\t\t/* ", "+\t\t * If there are columns then this spans from the beginning of the receiver's column 0", "+\t\t * image or text to the end of column 0.", "+\t\t */", "+\t\twidth = columns [0].width - contentX - parent.horizontalOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c2c61e759667aef47a0d8369651962f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public Rectangle getBounds (int columnIndex)", "signatureAfterChange": " public Rectangle getBounds (int columnIndex)", "diff": ["-\t", "+", "-\tif (columnIndex == 0) {", "+\tif (column.getOrderIndex () == 0) {", "-\t\t * For column 0 this is bounds from the beginning of the content to the", "+\t\t * For ordered column 0 this is bounds from the beginning of the content to the", "-\t\tint x = getContentX (0);", "+\t\tint x = getContentX (columnIndex);", "-\t * For columns > 0 this is the bounds of the tree cell.", "+\t * For ordered columns > 0 this is the bounds of the tree cell."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2343bdf92d5d1d52401457cd5dfa88e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "43d84d9dc08ec85dee671f4e785d329f0b02acf6", "commitAfterChange": "16fd572335a195de0c309011a9e9ab3eb978bc8a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void setPixelData(byte[] data, ImageData imageData)", "signatureAfterChange": " void setPixelData(byte[] data, ImageData imageData)", "diff": ["-\t\tcase PngIhdrChunk.COLOR_TYPE_RGB:", "-\t\t\timageData.data = data;", "-\t\t\tbreak;", "+\t\tcase PngIhdrChunk.COLOR_TYPE_RGB:", "-\t\t\timageData.data = data;", "+\t\t\tint height = imageData.height;", "+\t\t\tint destBytesPerLine = imageData.bytesPerLine;", "+\t\t\tint srcBytesPerLine = getAlignedBytesPerRow();", "+\t\t\t/*", "+\t\t\t* If the image uses 16-bit depth, it is converted", "+\t\t\t* to an 8-bit depth image.", "+\t\t\t*/", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;", "+\t\t\tif (destBytesPerLine != srcBytesPerLine) {", "+\t\t\t\tfor (int y = 0; y < height; y++) {", "+\t\t\t\t\tSystem.arraycopy(data, y * srcBytesPerLine, imageData.data, y * destBytesPerLine, srcBytesPerLine);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\timageData.data = data;", "+\t\t\t}"]}], "num": 19593}