{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "353dfea15d07f186e849a41b583c5818", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954d282d88f220ee6f280660c574ea9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Pattern.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "signatureAfterChange": " public Pattern(Device device, float x1, float y1, float x2, float y2, Color color1, int alpha1, Color color2, int alpha2)", "diff": ["-\tpt1 = new NSPoint();", "-\tpt2 = new NSPoint();", "-\tpt1.x = x1;", "-\tpt1.y = y1;", "-\tpt2.x = x2;", "-\tpt2.y = y2;", "-\tthis.color1 = color1.handle;", "-\tthis.color2 = color2.handle;", "-\tthis.alpha1 = alpha1;", "-\tthis.alpha2 = alpha2;", "-\tNSColor start = NSColor.colorWithDeviceRed(color1.handle[0], color1.handle[1], color1.handle[2], alpha1 / 255f);", "-\tNSColor end = NSColor.colorWithDeviceRed(color2.handle[0], color2.handle[1], color2.handle[2], alpha2 / 255f);", "-\tgradient = ((NSGradient)new NSGradient().alloc()).initWithStartingColor(start, end);", "-\tinit();", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tpt1 = new NSPoint();", "+\t\tpt2 = new NSPoint();", "+\t\tpt1.x = x1;", "+\t\tpt1.y = y1;", "+\t\tpt2.x = x2;", "+\t\tpt2.y = y2;", "+\t\tthis.color1 = color1.handle;", "+\t\tthis.color2 = color2.handle;", "+\t\tthis.alpha1 = alpha1;", "+\t\tthis.alpha2 = alpha2;", "+\t\tNSColor start = NSColor.colorWithDeviceRed(color1.handle[0], color1.handle[1], color1.handle[2], alpha1 / 255f);", "+\t\tNSColor end = NSColor.colorWithDeviceRed(color2.handle[0], color2.handle[1], color2.handle[2], alpha2 / 255f);", "+\t\tgradient = ((NSGradient)new NSGradient().alloc()).initWithStartingColor(start, end);", "+\t\tinit();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab30ff651b6c437657bbd8185ddd53db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "baec48b9bf0042e322500cba32f1b9bdac3cbfa0", "commitAfterChange": "f427c1590631b66d91e74b5c591fc671d07e2ff7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": " public void fillGradientRectangle(int x, int y, int width, int height, boolean vertical)", "diff": ["+\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\tNSGraphicsContext.setCurrentContext(handle);", "-\t\treturn;", "+\t} else {", "+\t\tNSColor startingColor = NSColor.colorWithDeviceRed(fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, data.alpha / 255f);", "+\t\tNSColor endingColor = NSColor.colorWithDeviceRed(toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, data.alpha / 255f);", "+\t\tNSGradient gradient = ((NSGradient)new NSGradient().alloc()).initWithStartingColor(startingColor, endingColor);", "+\t\tNSRect rect = new NSRect();", "+\t\trect.x = x;", "+\t\trect.y = y;", "+\t\trect.width = width;", "+\t\trect.height = height;", "+\t\tgradient.drawInRect_angle_(rect, vertical ? 90 : 0);", "+\t\tgradient.release();", "-", "-\tNSColor startingColor = NSColor.colorWithDeviceRed(fromRGB.red / 255f, fromRGB.green / 255f, fromRGB.blue / 255f, data.alpha / 255f);", "-\tNSColor endingColor = NSColor.colorWithDeviceRed(toRGB.red / 255f, toRGB.green / 255f, toRGB.blue / 255f, data.alpha / 255f);", "-\tNSGradient gradient = ((NSGradient)new NSGradient().alloc()).initWithStartingColor(startingColor, endingColor);", "-\tNSRect rect = new NSRect();", "-\trect.x = x;", "-\trect.y = y;", "-\trect.width = width;", "-\trect.height = height;", "-\tgradient.drawInRect_angle_(rect, vertical ? 90 : 0);", "-\tgradient.release();", "+\tNSGraphicsContext.setCurrentContext(context);"]}], "num": 31778}