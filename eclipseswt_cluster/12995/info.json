{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42b1a1274414c69daab34563b51c7564", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84b13f26441411348e366394fc5793e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "810eb254cbe71a3e1637e56f044fa70b981eb39d", "commitAfterChange": "803bd538f4c4c40e1d60df10cb6937bfea9dab26", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 63, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\tdrawBody(event);", "-\t", "+\tPoint size = getSize();", "+\tRectangle bodyRect = new Rectangle(0, 0, size.x, size.y); ", "+\trenderer.draw(CTabFolderRenderer.PART_BODY, SWT.BACKGROUND | SWT.FOREGROUND, bodyRect, gc); ", "+", "-\tdrawTabArea(event);", "+\trenderer.draw(CTabFolderRenderer.PART_HEADER, SWT.BACKGROUND | SWT.FOREGROUND, bodyRect, gc);", "+\tgc.setFont(gcFont);", "+\tgc.setForeground(gcForeground);", "+\tgc.setBackground(gcBackground);\t", "+\t", "+\tif (!single) {", "+\t\tfor (int i=0; i < items.length; i++) {", "+\t\t\tRectangle itemBounds = items[i].getBounds();", "+\t\t\tif (i != selectedIndex && event.getBounds().intersects(itemBounds)) {", "+\t\t\t\trenderer.draw(i, SWT.BACKGROUND | SWT.FOREGROUND, itemBounds, gc);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "+\tgc.setFont(gcFont);", "+\tgc.setForeground(gcForeground);", "+\tgc.setBackground(gcBackground);\t", "+\t", "+\tif (selectedIndex != -1) { ", "+\t\trenderer.draw(selectedIndex, SWT.SELECTED | SWT.BACKGROUND | SWT.FOREGROUND, items[selectedIndex].getBounds(), gc);", "+\t}", "+\t", "+\tgc.setFont(gcFont);", "+\tgc.setForeground(gcForeground);", "+\tgc.setBackground(gcBackground);\t", "+\t", "+\trenderer.draw(CTabFolderRenderer.PART_MAX_BUTTON, maxImageState, maxRect, gc);", "+\trenderer.draw(CTabFolderRenderer.PART_MIN_BUTTON, minImageState, minRect, gc);", "+\trenderer.draw(CTabFolderRenderer.PART_CHEVRON_BUTTON, chevronImageState, chevronRect, gc);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613d5fae2f063d187019102a4a8b035c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "f448e78b642c84da13844938e0d8c3d5867e5953", "commitAfterChange": "551ff14162e1317c79c5e3e93e63800d37cc8a72", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "signatureAfterChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "diff": ["-\t\t\tNSRect fromRect = new NSRect ();", "-\t\t\tNSSize size = image.handle.size();", "-\t\t\tfromRect.width = size.width;", "-\t\t\tfromRect.height = size.height;", "-\t\t\tNSPoint point = new NSPoint();", "-\t\t\tpoint.x = caret.x;", "-\t\t\tpoint.y = caret.y;", "-\t\t \timage.handle.drawAtPoint(point, rect, OS.NSCompositeXOR, 1);", "+\t\t\tNSImage imageHandle = image.handle;", "+\t\t\tNSImageRep imageRep = imageHandle.bestRepresentationForDevice(null);", "+\t\t\tif (!imageRep.isKindOfClass(OS.class_NSBitmapImageRep)) return;", "+\t\t\tNSBitmapImageRep rep = new NSBitmapImageRep(imageRep);", "+\t\t\tCGRect destRect = new CGRect ();", "+\t\t\tdestRect.origin.x = caret.x;", "+\t\t\tdestRect.origin.y = caret.y;", "+\t\t \tNSSize size = imageHandle.size();", "+\t\t\tdestRect.size.width = size.width;", "+\t\t\tdestRect.size.height = size.height;", "+\t\t \tint /*long*/ data = rep.bitmapData();", "+\t\t \tint /*long*/ bpr = rep.bytesPerRow();", "+\t\t\tint alphaInfo = rep.hasAlpha() ? OS.kCGImageAlphaFirst : OS.kCGImageAlphaNoneSkipFirst;", "+\t\t \tint /*long*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "+\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tint /*long*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "+\t\t\tOS.CGColorSpaceRelease(colorspace);", "+\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\tint /*long*/ ctx = context.graphicsPort();", "+\t\t\tOS.CGContextSaveGState(ctx);", "+\t\t \tOS.CGContextScaleCTM (ctx, 1, -1);", "+\t\t \tOS.CGContextTranslateCTM (ctx, 0, -(size.height + 2 * destRect.origin.y));", "+\t\t\tOS.CGContextSetBlendMode (ctx, OS.kCGBlendModeDifference);", "+\t\t\tOS.CGContextDrawImage (ctx, destRect, cgImage);", "+\t\t\tOS.CGContextRestoreGState(ctx);", "+\t\t \tOS.CGImageRelease(cgImage);\t\t\t"]}], "num": 12995}