{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3687d7c046dc3898b33d85f8c31c5d35", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2992aca844342010c41d1b3ebd38b84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "b8feeeeb859ddc5373e72445b6a112d80118d143", "commitAfterChange": "b35a49da6d60208984201c1be34fa638b8bf5fdf", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  int ShowMessage(int hwnd, int lpstrText, int lpstrCaption, int dwType, int lpstrHelpFile, int dwHelpContext, int plResult)", "signatureAfterChange": "  int ShowMessage(int hwnd, int lpstrText, int lpstrCaption, int dwType, int lpstrHelpFile, int dwHelpContext, int plResult)", "diff": ["-\t/*", "-\t* Feature on IE.  When IE navigates to a website that contains an ActiveX that is prevented from", "-\t* being executed, IE displays a message \"Your current security settings prohibit running ActiveX ", "-\t* controls on this page ...\".  The workaround is to selectively block this alert as indicated", "-\t* in the MSDN article \"WebBrowser customization\".", "-\t*/", "-\t/* resource identifier in shdoclc.dll for window caption \"Your current security settings prohibit ", "-\t * running ActiveX controls on this page ...\" ", "-\t */", "-\tint IDS_MESSAGE_BOX_CAPTION = 8033;", "-\t\tif (lpstrText != 0) {", "-\t\tTCHAR lpLibFileName = new TCHAR (0, \"SHDOCLC.DLL\", true); //$NON-NLS-1$", "-\t\tint /*long*/ hModule = OS.LoadLibrary(lpLibFileName);", "-\t\tif (hModule != 0) {", "-\t\t\t/* ", "-\t\t\t* Note.  lpstrText is a LPOLESTR, i.e. a null terminated unicode string LPWSTR, i.e. a WCHAR*.", "-\t\t\t* It is not a BSTR.  A BSTR is a null terminated unicode string that contains its length", "-\t\t\t* at the beginning. ", "-\t\t\t*/", "-\t\t\tint cnt = OS.wcslen(lpstrText);", "-\t\t\tchar[] buffer = new char[cnt];", "-\t\t\t/* ", "-\t\t\t* Note.  lpstrText is unicode on both unicode and ansi platforms.", "-\t\t\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "-\t\t\t* TCHAR.sizeof returns 1 on ansi platforms.", "-\t\t\t*/", "-\t\t\tOS.MoveMemory(buffer, lpstrText, cnt * 2);", "-\t\t\tString text = new String(buffer);", "-\t\t\t/* provide a buffer large enough to hold the string to compare to and a null terminated character */", "-\t\t\tint length = (OS.IsUnicode ? cnt : OS.WideCharToMultiByte (OS.CP_ACP, 0, buffer, cnt, 0, 0, null, null)) + 1;", "-", "-\t\t\tTCHAR lpBuffer = new TCHAR(0, length);", "-\t\t\tint result = OS.LoadString(hModule, IDS_MESSAGE_BOX_CAPTION, lpBuffer, length);", "-\t\t\tOS.FreeLibrary(hModule);", "-\t\t\treturn result > 0 && text.equals(lpBuffer.toString(0, result)) ? COM.S_OK : COM.S_FALSE;", "-\t\t}", "-\t}", "-\treturn COM.S_FALSE;", "+\tboolean ignore = ignoreNextMessage;", "+\tignoreNextMessage = false;", "+\treturn ignore ? COM.S_OK : COM.S_FALSE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3573fa7565a43aa4333e515d0e8af66a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tprivate void processPaintToolTip(int wHandle)", "signatureAfterChange": "  Menu getMenuBar ()", "diff": ["+", "+Menu getMenuBar () {", "+\treturn menuBar;", "+}", "-\t", "-\tprivate void processPaintToolTip(int wHandle) {", "-\t\t\t", "-\t\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);", "-\t\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);", "-\t\tMacUtil.RGBBackColor(infoBackground.handle);", "-\t\tMacUtil.RGBForeColor(infoForeground.handle);", "-\t\t", "-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetWindowBounds(wHandle, OS.kWindowContentRgn, bounds.getData());", "-\t\t", "-\t\tbounds= new MacRect(0, 0, bounds.getWidth(), bounds.getHeight());", "-\t\t", "-\t\tOS.EraseRect(bounds.getData());", "-\t\t", "-\t\tif (fToolTipText != null) {", "-\t\t\tint sHandle= OS.CFStringCreateWithCharacters(fToolTipText);", "-\t\t\tbounds= new MacRect(TOOLTIP_MARGIN, TOOLTIP_MARGIN,", "-\t\t\t\t\t\t\tbounds.getWidth()-2*TOOLTIP_MARGIN, bounds.getHeight()-2*TOOLTIP_MARGIN);", "-\t\t\tOS.DrawThemeTextBox(sHandle, fHoverThemeFont, OS.kThemeStateActive, true, bounds.getData(), (short)0, 0);", "-\t\t\tOS.CFRelease(sHandle);", "-\t\t}", "-\t}"]}], "num": 2084}