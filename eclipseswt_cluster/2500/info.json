{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c3921393e28c0f156dc49c2382c3452", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe4158c1115efc848aea0dd705cf078b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "2b385ebc26547316a8160b0ea7e137048ba66f40", "commitAfterChange": "857fb38d37816042809e56b4ccaf504717ac41c4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate static int find(int cHandle, Rectangle parentBounds, MacRect tmp, Point where)", "signatureAfterChange": " \t \tprivate static int find(int cHandle, Rectangle parentBounds, MacRect tmp, Point where)", "diff": ["-\t\t\tfor (int i= n; i > 0; i--) {", "-\t\t\t\tif (OS.GetIndexedSubControl(cHandle, (short)i, outHandle) == 0) {", "+\t\t\tfor (int i= 0; i < n; i++) {", "+\t\t\t\tint index= (n-1-i);", "+\t\t\t\tif (OS.GetIndexedSubControl(cHandle, (short)(index+1), outHandle) == 0) {\t// indices are 1 based"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c395504bc5f1433e69a324a6959f15b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "2b385ebc26547316a8160b0ea7e137048ba66f40", "commitAfterChange": "857fb38d37816042809e56b4ccaf504717ac41c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\t \tpublic static int getVisibleRegion(int cHandle, int result, boolean includingTop)", "signatureAfterChange": " \t\t \tpublic static int getVisibleRegion(int cHandle, int result, boolean includingTop)", "diff": ["-\t\t\t\tfor (int i= n; i > 0; i--) {", "-\t\t\t\t\tif (OS.GetIndexedSubControl(cHandle, (short)i, outHandle) == 0) {", "+\t\t\t\tfor (int i= 0; i < n; i++) {", "+\t\t\t\t\tint index= i; // was: n-1-i", "+\t\t\t\t\tif (OS.GetIndexedSubControl(cHandle, (short)(index+1), outHandle) == 0) {\t// indices are 1 based"]}], "num": 2500}