{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d818411f09026a90bbfce6d1b889599a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6de00bf3f91dc77bf4c210b135ed0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef9b2ace84f9bf3603ba33e4a4c8fc9ae7227032", "commitAfterChange": "72e691af6bca78442e18184dc1453e5eecb6f768", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " boolean refreshImageForZoom ()", "signatureAfterChange": " boolean refreshImageForZoom ()", "diff": ["-\tif (deviceZoomLevel != imageZoomLevel) {", "+\tboolean refreshed = false;", "+\tif (deviceZoomLevel != currentDeviceZoom) {", "-\t\t\tString filename = imageFileNameProvider.getImagePath(deviceZoomLevel);", "-\t\t\tinitNative(filename);", "+\t\t\tString filename = null;", "+\t\t\tMap <String, Boolean> result = DPIUtil.getImagePathAtZoom (imageFileNameProvider, deviceZoomLevel);", "+\t\t\tif (result != null && !result.isEmpty ()) {", "+\t\t\t\tfor (String str : result.keySet()) {", "+\t\t\t\t\tfilename = str;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (filename == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (result.get (filename) || currentDeviceZoom != 100) {", "+\t\t\t\t/* Release current native resources */", "+\t\t\t\tdestroy ();", "+\t\t\t\tinitNative(filename);", "+\t\t\t\tif (this.pixmap == 0 && this.surface == 0) init(new ImageData(filename));", "+\t\t\t\tinit ();", "+\t\t\t\trefreshed = true;", "+\t\t\t}", "-\t\t\tImageData data = imageDataProvider.getImageData(deviceZoomLevel);", "-\t\t\tinit(data);", "-\t\t} else {", "-\t\t\treturn false;", "+\t\t\tImageData data = null;", "+\t\t\tMap <ImageData, Boolean> result = DPIUtil.getImageDataAtZoom (imageDataProvider, deviceZoomLevel);", "+\t\t\tif (result != null && !result.isEmpty ()) {", "+\t\t\t\tfor (ImageData imageData : result.keySet()) {", "+\t\t\t\t\tdata = imageData;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (data == null) SWT.error(SWT.ERROR_INVALID_IMAGE);\t", "+\t\t\tif (result.get (data) || currentDeviceZoom != 100) {", "+\t\t\t\t/* Release current native resources */", "+\t\t\t\tdestroy ();", "+\t\t\t\tinit(data);", "+\t\t\t\tinit();", "+\t\t\t\trefreshed = true;", "+\t\t\t}", "-\t\timageZoomLevel = deviceZoomLevel;", "-\t\treturn true;", "+\t\tcurrentDeviceZoom = deviceZoomLevel;", "-\treturn false;", "+\treturn refreshed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a000b5769f8938613aea5612da956b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef9b2ace84f9bf3603ba33e4a4c8fc9ae7227032", "commitAfterChange": "72e691af6bca78442e18184dc1453e5eecb6f768", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " boolean refreshImageForZoom ()", "signatureAfterChange": " boolean refreshImageForZoom ()", "diff": ["-\tif (deviceZoomLevel != imageZoomLevel) {", "+\tboolean refreshed = false;", "+\tif (deviceZoomLevel != currentDeviceZoom) {", "-\t\t\tString filename = imageFileNameProvider.getImagePath(deviceZoomLevel);", "-\t\t\tinitNative(filename);", "-\t\t\tinit(new ImageData (filename));", "-\t\t\tinit();", "+\t\t\tString filename = null;", "+\t\t\tMap <String, Boolean> result = DPIUtil.getImagePathAtZoom (imageFileNameProvider, deviceZoomLevel);", "+\t\t\tif (result != null && !result.isEmpty ()) {", "+\t\t\t\tfor (String str : result.keySet()) {", "+\t\t\t\t\tfilename = str;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (filename == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (result.get (filename) || currentDeviceZoom != 100) {", "+\t\t\t\t/* Release current native resources */", "+\t\t\t\tdestroy ();", "+\t\t\t\tinitNative(filename);", "+\t\t\t\tif (this.handle == 0) init(new ImageData (filename));", "+\t\t\t\tinit();", "+\t\t\t\trefreshed = true;", "+\t\t\t}", "-\t\t\tImageData data = imageDataProvider.getImageData(deviceZoomLevel);", "-\t\t\tinit(data);", "-\t\t\tinit();", "-\t\t} else {", "-\t\t\treturn false;", "+\t\t\tImageData data = null;", "+\t\t\tMap <ImageData, Boolean> result = DPIUtil.getImageDataAtZoom (imageDataProvider, deviceZoomLevel);", "+\t\t\tif (result != null && !result.isEmpty ()) {", "+\t\t\t\tfor (ImageData imageData : result.keySet()) {", "+\t\t\t\t\tdata = imageData;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (data == null) SWT.error(SWT.ERROR_INVALID_IMAGE);\t", "+\t\t\tif (result.get (data) || currentDeviceZoom != 100) {", "+\t\t\t\t/* Release current native resources */", "+\t\t\t\tdestroy ();", "+\t\t\t\tinit(data);", "+\t\t\t\tinit();", "+\t\t\t\trefreshed = true;", "+\t\t\t}", "-\t\timageZoomLevel = deviceZoomLevel;", "-\t\treturn true;", "+\t\tcurrentDeviceZoom = deviceZoomLevel;", "-\treturn false;", "+\treturn refreshed;"]}], "num": 53799}