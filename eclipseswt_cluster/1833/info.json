{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b945a8a24f4d14174d1c9bcacc7b5d9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4220861cd3c5108856c16c7c05dae21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9e9b22bcbb72aef5b3bb15c7ddbde8006ef6a7c8", "commitAfterChange": "2e3cc3f2343444e38d6648881ff7de0ee9aea010", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tif (text.length() == 0) {", "-\t\tOS.SelectObject(srcHdc, font != null ? font.handle : device.systemFont);", "-\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\tlptm.tmAscent = Math.max(lptm.tmAscent, this.ascent);", "-\t\tlptm.tmDescent = Math.max(lptm.tmDescent, this.descent);\t\t", "-\t} else {", "-\t\tint ascent = this.ascent, descent = this.descent, leading = 0, aveCharWidth = 0, height = 0;", "+\tOS.SelectObject(srcHdc, font != null ? font.handle : device.systemFont);", "+\tOS.GetTextMetrics(srcHdc, lptm);", "+\tOS.DeleteDC(srcHdc);", "+\tdevice.internal_dispose_GC(hDC, null);", "+\t", "+\tint ascent = Math.max(lptm.tmAscent, this.ascent);", "+\tint descent = Math.max(lptm.tmDescent, this.descent);", "+\tint leading = lptm.tmInternalLeading;", "+\tif (text.length() != 0) {", "-\t\t\tcheckItem(srcHdc, run);", "-\t\t\tOS.SelectObject(srcHdc, getItemFont(run));", "-\t\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\t\tascent = Math.max(ascent, lptm.tmAscent);", "-\t\t\tdescent = Math.max(descent, lptm.tmDescent);", "-\t\t\theight = Math.max(height, lptm.tmHeight);", "-\t\t\tleading = Math.max(leading, lptm.tmInternalLeading);", "-\t\t\taveCharWidth += lptm.tmAveCharWidth;", "+\t\t\tif (run.ascent > ascent) {", "+\t\t\t\tascent = run.ascent;", "+\t\t\t\tleading = run.leading;", "+\t\t\t}", "+\t\t\tdescent = Math.max(descent, run.descent);", "-\t\tlptm.tmAscent = ascent;", "-\t\tlptm.tmDescent = descent;", "-\t\tlptm.tmHeight = height;", "-\t\tlptm.tmInternalLeading = leading;", "-\t\tlptm.tmAveCharWidth = aveCharWidth / lineRuns.length;", "-\tif (srcHdc != 0) OS.DeleteDC(srcHdc);", "-\tdevice.internal_dispose_GC(hDC, null);", "+\tlptm.tmAscent = ascent;", "+\tlptm.tmDescent = descent;", "+\tlptm.tmHeight = ascent + descent;", "+\tlptm.tmInternalLeading = leading;", "+\tlptm.tmAveCharWidth = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282380dcaeebb5294f9f29b7dba69602", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "83ab711b130e32006517cec97ffac6c38f4a9d41", "commitAfterChange": "c325878aac5d164108064cebdebc6fde3975c5e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\t\tPoint size = computeSize (child, flushCache);", "-\t\tdata.cacheWidth = size.x;", "-\t\tdata.cacheHeight = size.y;", "-\t\tdata.cacheLeft = data.cacheRight = data.cacheTop = data.cacheBottom = null;", "+\t\tif (data == null) child.setLayoutData (data = new FormData ());", "+\t\tdata.flushCache ();", "-\t\t\tint x1 = data.getLeftAttachment (spacing).solveX (width);", "-\t\t\tint y1 = data.getTopAttachment (spacing).solveX (height);", "-\t\t\tint x2 = data.getRightAttachment (spacing).solveX (width);", "-\t\t\tint y2 = data.getBottomAttachment (spacing).solveX (height);", "+\t\t\tFormAttachment left = data.getLeftAttachment (child, spacing, flushCache);", "+\t\t\tFormAttachment right = data.getRightAttachment (child, spacing, flushCache);", "+\t\t\tint x1 = left.solveX (width);", "+\t\t\tint x2 = right.solveX (width);", "+//\t\t\tif ((child.getStyle () & SWT.WRAP) != 0) {", "+//\t\t\t\tif (data.width == SWT.DEFAULT && data.cacheWidth == -1) {", "+//\t\t\t\t\t//width favoured over height (calling getLeftAttachment() does this)", "+//\t\t\t\t\t//this means that when y1 and y2 are computed, the cached height values", "+//\t\t\t\t\t//reflect the desired height wrt \"x2 - x1\" rather than \"width\".  This", "+//\t\t\t\t\t//means that the cache is wrong wrt \"width\" and should be cleared", "+//\t\t\t\t\t//bug (x2 - x1) needs to get rid of trim", "+//\t\t\t\t\tint border = child.getBorderWidth ();", "+//\t\t\t\t\tdata.computeCache (child, x2 - x1 - border * 2, data.height, flushCache);", "+//\t\t\t\t}", "+//\t\t\t}", "+\t\t\tint y1 = data.getTopAttachment (child, spacing, flushCache).solveX (height);", "+\t\t\tint y2 = data.getBottomAttachment (child, spacing, flushCache).solveX (height);", "-\t\t\twidth = Math.max (computeWidth (data), width);", "-\t\t\theight = Math.max (computeHeight (data), height);", "+\t\t\twidth = Math.max (computeWidth (child, data, flushCache), width);", "+\t\t\theight = Math.max (computeHeight (child, data, flushCache), height);", "-\t\tdata.cacheWidth = data.cacheHeight = 0;", "-\t\tdata.cacheLeft = data.cacheRight = data.cacheTop = data.cacheBottom = null;", "+\t\tdata.flushCache ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "363790e118ed02c36070ec9cc9c0075c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "97620fe3667502da9f174b22a0db4534a8d8f70b", "commitAfterChange": "a3c8e8904451b6db108629003e63438cb42170e1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void init(ImageData image)", "signatureAfterChange": "  void init(ImageData image)", "diff": ["-\t\tint stride = Cairo.cairo_format_stride_for_width(Cairo.CAIRO_FORMAT_ARGB32, width);", "-\t\tint /*long*/ data = surfaceData = OS.g_malloc(stride * height);", "-\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tboolean hasAlpha = image.transparentPixel != -1 || image.alpha != -1 || image.maskData != null || image.alphaData != null;", "+\t\tint format = hasAlpha ? Cairo.CAIRO_FORMAT_ARGB32 : Cairo.CAIRO_FORMAT_RGB24;", "+\t\tsurface = Cairo.cairo_image_surface_create(format, width, height);", "+\t\tint stride = Cairo.cairo_image_surface_get_stride(surface);", "+\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tfor (int y = 0, offset = 0; y < height; y++) {", "-\t\t\t\t\tfor (int x=0; x<width; x++, offset += 4) {", "-\t\t\t\t\t\tbuffer[offset + oa] = (byte)0xFF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb89123dbc9fa3bcbdaca208256f710e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.browser.demos/src/org/eclipse/swt/examples/browser/demos/views/BrowserDemoView.java", "commitBeforeChange": "58c2fb2b22d141bbf3208dff6b7308f6bedbd875", "commitAfterChange": "609eb57c451ed589ffceab0d54b7c56c247c01c1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void createPartControl(Composite parent)", "signatureAfterChange": " \tpublic void createPartControl(Composite parent)", "diff": ["-\t\ttry {", "-\t\t\tbrowser = new Browser(parent, SWT.NONE);", "-\t\t} catch (SWTError e) {", "-\t\t\te.printStackTrace();", "-\t\t\treturn;", "-\t\t}", "+\t\tthis.parent = parent;", "+\t\tparent.setLayout(new FillLayout());", "+\t\tTabFolder folder = new TabFolder(parent, SWT.NONE);", "+\t\tTabItem item = new TabItem(folder, SWT.NONE);", "+\t\tPawnTab pawnTab = new PawnTab(item);", "-\t\tmenu = new Menu(parent.getShell(), SWT.POP_UP);", "-\t\tMenuItem item = new MenuItem(menu, SWT.PUSH);", "-\t\titem.setText(\"End Game\");", "-\t\titem.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event e) {", "-\t\t\t\tgame = null;", "-\t\t\t\tisWhite = true;", "-\t\t\t\tcntWhite = 0; cntBlack = 0;", "-\t\t\t\tttr = null;", "-\t\t\t\tbrowser.setUrl(URL_WELCOME);", "-\t\t\t}", "-\t\t});", "-\t\tbrowser.setMenu(menu);", "-\t\t", "-\t\treversiListener = new ReversiListener();", "-\t\tbrowser.addLocationListener(reversiListener);", "-\t\tbrowser.setUrl(URL_WELCOME);", "-\t\t", "-", "+\t\titem = new TabItem(folder, SWT.NONE);", "+\t\tEditorTab editorTab = new EditorTab(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e0449e3e76ca120936d800eff1983a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 438, "methodNumberAfterChange": 306, "signatureBeforeChange": " public void showSelection()", "signatureAfterChange": " public void showSelection()", "diff": ["-\tboolean selectionFits;", "-\tint startOffset, startLine, startX, endOffset, endLine, endX, offsetInLine;", "-", "-", "+\tint startOffset, endOffset;", "+\tPoint startPos = getPointAtOffset(startOffset);\t", "+\tPoint endPos = getPointAtOffset(endOffset);\t", "+\t//TODO endPos.y should be the bottom of the line not the top", "-\t// calculate the logical start and end values for the selection", "-\tstartLine = content.getLineAtOffset(startOffset);", "-\toffsetInLine = startOffset - content.getOffsetAtLine(startLine);", "-\tstartX = getXAtOffset(content.getLine(startLine), startLine, offsetInLine);\t", "-\tendLine  = content.getLineAtOffset(endOffset);", "-\toffsetInLine = endOffset - content.getOffsetAtLine(endLine);", "-\tendX = getXAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "-", "-\tif (rightToLeft) {", "-\t\tselectionFits = startX - endX <= w;", "-\t} else {", "-\t\tselectionFits = endX - startX <= w;", "-\t}", "-\t", "+\tboolean selectionFits = rightToLeft ? startPos.x - endPos.x <= w : endPos.x - startPos.x <= w;", "-\t\tshowLocation(startX, startLine);", "-\t\t// endX value could change if showing startX caused a scroll to occur", "-\t\tendX = getXAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "-\t\tshowLocation(endX, endLine);", "+\t\tif (showLocation(startPos)) {", "+\t\t\t// endX value could change if showing startX caused a scroll to occur", "+\t\t\tendPos = getPointAtOffset(endOffset);\t", "+\t\t}", "+\t\tshowLocation(endPos);", "-\t\tshowLocation(endX, endLine);", "-\t}\t ", "-}", "+\t\tshowLocation(endPos);", "+\t}"]}], "num": 1833}