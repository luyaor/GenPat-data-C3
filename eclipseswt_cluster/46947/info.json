{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02818bdf7d2cfdffd65a5d8838c1de42", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc59ef6269f3d4778bb2d0dfdba148b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "5dfc8654f316eec659696b5e26165a217a58ff56", "commitAfterChange": "bf00024833fb67887a91b3cb4e76e886b8ae712c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tif ((style & SWT.SAVE) != 0) {", "-\t\tif (!overwrite) options.optionFlags |= OS.kNavDontConfirmReplacement;", "-\t\tOS.NavCreatePutFileDialog (options, 0, 0, 0, 0, outDialog);\t\t", "-\t} else {", "-\t\tif ((style & SWT.MULTI) != 0) options.optionFlags |= OS.kNavAllowMultipleFiles;", "-\t\tint filterProc = 0, eventProc = 0;", "-\t\tif (filterExtensions != null && filterExtensions.length != 0) {", "-\t\t\textensions = options.popupExtension = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, filterExtensions.length, 0);", "-\t\t\tfor (int i = 0; i < filterExtensions.length; i++) {", "-\t\t\t\tString str = filterExtensions [i];", "-\t\t\t\tif (filterNames != null && filterNames.length > i) {", "-\t\t\t\t\tstr = filterNames [i];", "-\t\t\t\t}", "-\t\t\t\tchar [] chars = new char [str.length ()];", "-\t\t\t\tstr.getChars (0, chars.length, chars, 0);", "-\t\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "-\t\t\t\tif (ptr != 0) OS.CFArrayAppendValue (extensions, ptr);", "-\t\t\t}\t\t\t", "+\tint filterProc = 0, eventProc = 0;", "+\tif (filterExtensions != null && filterExtensions.length != 0) {", "+\t\textensions = options.popupExtension = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, filterExtensions.length, 0);", "+\t\tfor (int i = 0; i < filterExtensions.length; i++) {", "+\t\t\tString str = filterExtensions [i];", "+\t\t\tif (filterNames != null && filterNames.length > i) {", "+\t\t\t\tstr = filterNames [i];", "+\t\t\t}", "+\t\t\tchar [] chars = new char [str.length ()];", "+\t\t\tstr.getChars (0, chars.length, chars, 0);", "+\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "+\t\t\tif (ptr != 0) OS.CFArrayAppendValue (extensions, ptr);", "+\t\t}", "+\t\tif ((style & SWT.SAVE) == 0) {", "-\t\t\teventCallback = new Callback (this, \"eventProc\", 3);", "-\t\t\teventProc = eventCallback.getAddress();", "-\t\t\tif (eventProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\teventCallback = new Callback (this, \"eventProc\", 3);", "+\t\teventProc = eventCallback.getAddress();", "+\t\tif (eventProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t}", "+\tif ((style & SWT.SAVE) != 0) {", "+\t\tif (!overwrite) options.optionFlags |= OS.kNavDontConfirmReplacement;", "+\t\tOS.NavCreatePutFileDialog (options, 0, 0, eventProc, 0, outDialog);\t", "+\t} else {", "+\t\tif ((style & SWT.MULTI) != 0) options.optionFlags |= OS.kNavAllowMultipleFiles;", "+\t\t\t\t\t\t\tif (filterExtensions != null && filterExtensions.length != 0) {", "+\t\t\t\t\t\t\t\tif (0 <= filterIndex && filterIndex < filterExtensions.length) {", "+\t\t\t\t\t\t\t\t\t/* Append extension if not present */", "+\t\t\t\t\t\t\t\t\tint ext = OS.CFURLCopyPathExtension (fullUrl);", "+\t\t\t\t\t\t\t\t\tif (ext == 0) {", "+\t\t\t\t\t\t\t\t\t\tString exts = filterExtensions [filterIndex];", "+\t\t\t\t\t\t\t\t\t\tint length = exts.length ();", "+\t\t\t\t\t\t\t\t\t\tint index = exts.indexOf (EXTENSION_SEPARATOR);", "+\t\t\t\t\t\t\t\t\t\tif (index == -1) index = length;", "+\t\t\t\t\t\t\t\t\t\tString filter = exts.substring (0, index).trim ();", "+\t\t\t\t\t\t\t\t\t\tif (!filter.equals (\"*\") && !filter.equals (\"*.*\")) {", "+\t\t\t\t\t\t\t\t\t\t\tif (filter.startsWith (\"*.\")) filter = filter.substring (2);", "+\t\t\t\t\t\t\t\t\t\t\tchar[] buffer = new char[filter.length()];", "+\t\t\t\t\t\t\t\t\t\t\tfilter.getChars(0, buffer.length, buffer, 0);", "+\t\t\t\t\t\t\t\t\t\t\text = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\t\t\t\t\t\t\t\t\t\tint fullUrlWithExt = OS.CFURLCreateCopyAppendingPathExtension(OS.kCFAllocatorDefault, fullUrl, ext);", "+\t\t\t\t\t\t\t\t\t\t\tOS.CFRelease(fullUrl);", "+\t\t\t\t\t\t\t\t\t\t\tfullUrl = fullUrlWithExt;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tif (ext != 0) OS.CFRelease(ext);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tOS.CFRelease (fullUrl);", "-\t\t\t\t\t\t\tfileName = fileNames [0] = getString (record.saveFileName);", "+\t\t\t\t\t\t\tint file = OS.CFURLCopyLastPathComponent(fullUrl);", "+\t\t\t\t\t\t\tfileName = fileNames [0] = getString (file);", "+\t\t\t\t\t\t\tOS.CFRelease(file);", "+\t\t\t\t\t\t\tOS.CFRelease (fullUrl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea470232d2c5918ca48b27b31162f61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "bf00024833fb67887a91b3cb4e76e886b8ae712c", "commitAfterChange": "68891d933173e8b46658b0380cd9b89c7ee48da8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["+\tif (popup != null) {", "+\t\tfilterIndex = (int)/*64*/popup.indexOfSelectedItem();", "+\t} else {", "+\t\tfilterIndex = -1;", "+\t}", "-\t\tfullPath = filename.getString();", "-\t\tif ((style & SWT.SAVE) == 0) {", "+\t\tif ((style & SWT.SAVE) != 0) {", "+\t\t\tif (filterExtensions != null && filterExtensions.length != 0) {", "+\t\t\t\tif (0 <= filterIndex && filterIndex < filterExtensions.length) {", "+\t\t\t\t\t/* Append extension if not present */", "+\t\t\t\t\tNSString ext = filename.pathExtension();", "+\t\t\t\t\tif (ext == null || ext.length() == 0) {", "+\t\t\t\t\t\tString exts = filterExtensions [filterIndex];", "+\t\t\t\t\t\tint length = exts.length ();", "+\t\t\t\t\t\tint index = exts.indexOf (EXTENSION_SEPARATOR);", "+\t\t\t\t\t\tif (index == -1) index = length;", "+\t\t\t\t\t\tString filter = exts.substring (0, index).trim ();", "+\t\t\t\t\t\tif (!filter.equals (\"*\") && !filter.equals (\"*.*\")) {", "+\t\t\t\t\t\t\tif (filter.startsWith (\"*.\")) filter = filter.substring (2);", "+\t\t\t\t\t\t\tfilename = filename.stringByAppendingPathExtension(NSString.stringWith(filter));", "+\t\t\t\t\t\t}\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tfullPath = filename.getString();", "+\t\t\tfileNames = new String [1];", "+\t\t\tfileName = fileNames [0] = filename.lastPathComponent().getString();", "+\t\t\tfilterPath = filename.stringByDeletingLastPathComponent().getString();", "+\t\t} else {", "+\t\t\tfullPath = filename.getString();", "-\t\tfilterIndex = -1;", "-\t\tfilterIndex = (int)/*64*/popup.indexOfSelectedItem();"]}], "num": 46947}