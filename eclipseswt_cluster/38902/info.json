{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f91947c41f49be0d0785210f74e44716", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97904a7a1c177c75175eda944d5d3d78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "12e57250d90eb2f3108d26c9c27544dd5c3b66df", "commitAfterChange": "eae7c0853de26fee18e86e536bdda063c5abb045", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  LRESULT wmSysKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmSysKeyDown (int hwnd, int wParam, int lParam)", "diff": ["-\t\t\t* Feature in Windows.  Calling to ToAscii() or ToUnicode(), clears", "-\t\t\t* the accented state such that the next WM_CHAR loses the accent.", "-\t\t\t* This makes is critical that the accent key is detected.  Also,", "-\t\t\t* these functions clear the character that is entered using the", "-\t\t\t* special Windows keypad sequence when NumLock is down (ie. typing ", "-\t\t\t* ALT+0231 should gives 'c' with a cedilla when NumLock is down).", "+\t\t\t* A WM_SYSCHAR will be issued for '*', '+', '-', '.' and '/'", "+\t\t\t* on the numeric keypad.  Avoid issuing the key event twice", "+\t\t\t* by checking for these keys.  Note that calling to ToAscii()", "+\t\t\t* or ToUnicode(), clear the character that is entered using", "+\t\t\t* the special Windows keypad sequence when NumLock is down", "+\t\t\t* (ie. typing ALT+0231 should gives 'c' with a cedilla when", "+\t\t\t* NumLock is down).  Do not call either of these from here.", "-\t\t\tif (display.asciiKey (display.lastKey) != 0) return null;", "+\t\t\tswitch (display.lastKey) {", "+\t\t\t\tcase OS.VK_MULTIPLY:", "+\t\t\t\tcase OS.VK_ADD:", "+\t\t\t\tcase OS.VK_SUBTRACT:", "+\t\t\t\tcase OS.VK_DECIMAL:", "+\t\t\t\tcase OS.VK_DIVIDE: return null;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2871421a04d45f4e521f47dd48918813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-*/\r", "+ */\r", "+\t\t\t\t\r", "+\t\t\t/* Bug in Motif: \r", "+\t\t\t * You *must* start outside the menu or it will not show you\r", "+\t\t\t * highlighting until you move the cursor out of and back into\r", "+\t\t\t * the menu. By offsetting the start location by a pixel, it\r", "+\t\t\t * causes highlighting to work if you wait for the menu to\r", "+\t\t\t * pop up before you start moving.(Except for the bottom\r", "+\t\t\t * right corner.)\r", "+\t\t\t */\r", "+\t\t\trootX[0] += 1;\r", "+\t\t\trootY[0] += 1;\r", "+\r"]}], "num": 38902}