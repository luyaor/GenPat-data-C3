{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6d39490a115c706261c05a5dfacdfec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dacdd127258d13189810c6489f0fdd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "-\t\tOS.HIViewGetFrame (handle, oldBounds);", "-\t\tint MIN_SIZE = 100;", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, false);", "-\t\t\tbounds = new CGRect ();", "-\t\t\tbounds.width = bounds.height = 100;", "-\t\t\tOS.HIViewSetFrame (handle, bounds);", "-\t\t}", "-\t\tint rgnHandle = OS.NewRgn ();", "-\t\tOS.GetControlRegion (handle, (short)OS.kControlContentMetaPart, rgnHandle);", "-\t\tRect client = new Rect ();", "-\t\tOS.GetRegionBounds (rgnHandle, client);", "-\t\tOS.DisposeRgn (rgnHandle);", "-\t\twidth += (int) bounds.width - (client.right - client.left);", "-\t\theight += (int) bounds.height - (client.bottom - client.top);", "-\t\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-\t\t\tOS.HIViewSetFrame (handle, oldBounds);", "-\t\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "-\t\t}", "-\t\treturn new Rectangle (-client.left, -client.top, width, height);", "-\t}", "-\tRect bounds, oldBounds = new Rect ();", "-\tOS.GetControlBounds (handle, oldBounds);", "-\tboolean fixBounds = (oldBounds.right - oldBounds.left) < 100 || (oldBounds.bottom - oldBounds.top) < 100;", "-\tif (fixBounds) {", "-\t\tbounds = new Rect ();", "-\t\tbounds.right = bounds.bottom = 100;", "-\t\tOS.SetControlBounds (handle, bounds);", "-\t} else {", "-\t\tbounds = oldBounds;", "+\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "+\tOS.HIViewGetFrame (handle, oldBounds);", "+\tint MIN_SIZE = 100;", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetDrawingEnabled (handle, false);", "+\t\tbounds = new CGRect ();", "+\t\tbounds.width = bounds.height = 100;", "+\t\tOS.HIViewSetFrame (handle, bounds);", "-\tif (fixBounds) OS.SetControlBounds (handle, oldBounds);", "-\tx -= client.left - bounds.left;", "-\ty -= client.top - bounds.top;", "-\twidth += Math.max (8, (bounds.right - bounds.left) - (client.right - client.left));", "-\theight += Math.max (text.length () == 0 ? 8 : 22, (bounds.bottom - bounds.top) - (client.bottom - client.top));", "-\treturn new Rectangle (x, y, width, height);", "+\twidth += (int) bounds.width - (client.right - client.left);", "+\theight += (int) bounds.height - (client.bottom - client.top);", "+\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "+\t\tOS.HIViewSetFrame (handle, oldBounds);", "+\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "+\t}", "+\treturn new Rectangle (-client.left, -client.top, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae0a31ac3bfc140df637357e6b17e6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b410448b2ee30c39984d789197ecbf23e5a160a6", "commitAfterChange": "63863d93c2ee25d0b7bc77cb902dfe9620ae110e", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 112, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tif (data.gdipGraphics != 0) {", "-\t\tPointF pt = new PointF();", "-\t\tRectF bounds = new RectF();", "-\t\tchar[] buffer;", "-\t\tint length = string.length();", "-\t\tif (length != 0) {", "-\t\t\tbuffer = new char [length];", "-\t\t\tstring.getChars(0, length, buffer, 0);", "-\t\t} else {", "-\t\t\tbuffer = new char[]{' '};", "-\t\t}", "-\t\tint /*long*/ format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());", "-\t\tint formatFlags = Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces;", "-\t\tif ((data.style & SWT.MIRRORED) != 0) formatFlags |= Gdip.StringFormatFlagsDirectionRightToLeft;", "-\t\tGdip.StringFormat_SetFormatFlags(format, formatFlags);", "-\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(data.gdipFont, format) * 8} : new float[1];", "-\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); ", "-\t\tGdip.StringFormat_SetHotkeyPrefix(format, (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone);", "-\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, data.gdipFont, pt, format, bounds);", "-\t\tGdip.StringFormat_delete(format);", "-\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));", "+\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\tPoint size = new Point(0, 0);", "+\t\tdrawText(gdipGraphics, string, 0, 0, flags, size);", "+\t\treturn size;"]}], "num": 61033}