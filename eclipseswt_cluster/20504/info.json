{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9199d69ecdbf3e1cbc130bae6bdea3f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80476228a69b4110a1515e68b48028c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": "  void createHandle ()", "diff": ["-void createHandle (int index) {", "-\tstate |= HANDLE;", "-\tint parentHandle = parent.handle;", "-\tint windowHandle= OS.GetControlOwner(parentHandle);", "-\thandle= OS.createDataBrowserControl(windowHandle);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tMacUtil.addControl(handle, parentHandle);", "-\tMacUtil.initLocation(handle);", "-\t", "-\t/* Single or Multiple Selection */", "-\tint mode= OS.kDataBrowserSelectOnlyOne;", "-\tif ((style & SWT.MULTI) != 0)", "-\t\tmode= OS.kDataBrowserDragSelect | OS.kDataBrowserCmdTogglesSelection;", "-\tOS.SetDataBrowserSelectionFlags(handle, mode);", "-\t", "-\t/* hide the neader */", "-\tOS.SetDataBrowserListViewHeaderBtnHeight(handle, (short) 0);", "-\t", "-\t/* enable scrollbars */", "-\tOS.SetDataBrowserHasScrollBars(handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "-\tif ((style & SWT.H_SCROLL) == 0)", "-\t\tOS.AutoSizeDataBrowserListViewColumns(handle);", "-\t\t", "-\tint columnDesc= OS.newColumnDesc(COL_ID, OS.kDataBrowserTextType,", "-\t\t\t\t\tOS.kDataBrowserListViewSelectionColumn | OS.kDataBrowserDefaultPropertyFlags,", "-\t\t\t\t\t(short)0, (short)2000);", "-\tOS.AddDataBrowserListViewColumn(handle, columnDesc, 10000);", "+void createHandle () {", "+\tint [] outControl = new int [1];", "+\tint window = OS.GetControlOwner (parent.handle);", "+\tOS.CreateDataBrowserControl (window, null, OS.kDataBrowserListView, outControl);", "+\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = outControl [0];", "+\tint selectionFlags = (style & SWT.SINGLE) != 0 ? OS.kDataBrowserSelectOnlyOne : OS.kDataBrowserCmdTogglesSelection;", "+\tOS.SetDataBrowserSelectionFlags (handle, selectionFlags);", "+\tOS.SetDataBrowserListViewHeaderBtnHeight (handle, (short) 0);", "+\tOS.SetDataBrowserHasScrollBars (handle, (style & SWT.H_SCROLL) != 0, (style & SWT.V_SCROLL) != 0);", "+\t//NOT DONE", "+\tif ((style & SWT.H_SCROLL) == 0) OS.AutoSizeDataBrowserListViewColumns (handle);", "+\tDataBrowserListViewColumnDesc column = new DataBrowserListViewColumnDesc ();", "+\tcolumn.headerBtnDesc_version = OS.kDataBrowserListViewLatestHeaderDesc;", "+\tcolumn.propertyDesc_propertyID = COLUMN_ID;", "+\tcolumn.propertyDesc_propertyType = OS.kDataBrowserTextType;", "+\tcolumn.propertyDesc_propertyFlags = OS.kDataBrowserListViewSelectionColumn | OS.kDataBrowserDefaultPropertyFlags;", "+\t//NOT DONE", "+\tcolumn.headerBtnDesc_maximumWidth= 0x7FFF;", "+\tcolumn.headerBtnDesc_initialOrder= OS.kDataBrowserOrderIncreasing;", "+\tOS.AddDataBrowserListViewColumn (handle, column, 0);", "+\t//NOT DONE", "+\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, COLUMN_ID, (short)800);", "+", "+\t/*", "+\t* Feature in the Macintosh.  Scroll bars are not created until", "+\t* the widget has a minimum size.  The fix is to force the scroll", "+\t* bars to be created by temporarily giving the widget a size and", "+\t* then restoring it to zero.", "+\t* ", "+\t* NOTE: The widget must be visible and SizeControl() must be used", "+\t* to resize the widget to a minimim size or the widget will not", "+\t* create the scroll bars.  This work around currently flashes.", "+\t*/", "+\tOS.SizeControl (handle, (short) 0xFF, (short) 0xFF);", "+\tOS.SizeControl (handle, (short) 0, (short) 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6522d371c1c5d1147967c2e29ec5db76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a7462f6b30f403b541de53811b1a2d45dd86b987", "commitAfterChange": "37c3fc5edd360862e04e4236fb6d1206ffdadd53", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \t \tprivate void drawFrame(Object callData)", "signatureAfterChange": " \t \tprivate void drawFrame(Object callData)", "diff": ["-\t\t\t\tMacRect bounds= new MacRect();", "-\t\t\t\tOS.GetControlBounds(handle, bounds.getData());", "-\t\t\t\tbounds.setLocation(0, 0);", "+\t\t\t\tRect bounds= new Rect();", "+\t\t\t\tOS.GetControlBounds(handle, bounds);", "+\t\t\t\tOS.SetRect(bounds, (short)0, (short)0, (short)(bounds.right - bounds.left), (short)(bounds.bottom - bounds.top));", "-\t\t\t\tbounds.inset(m, m, m, m+1);", "+\t\t\t\tbounds.left+= m;", "+\t\t\t\tbounds.top+= m;", "+\t\t\t\tbounds.right-= m;", "+\t\t\t\tbounds.bottom-= m+1;", "-\t\t\t\tMacRect fbounds= new MacRect();", "-\t\t\t\tOS.GetControlBounds(handle, fbounds.getData());", "-\t\t\t\tfbounds.setLocation(0, 0);", "+\t\t\t\tRect fbounds= new Rect();", "+\t\t\t\tOS.GetControlBounds(handle, fbounds);", "+\t\t\t\tOS.SetRect(fbounds, (short)0, (short)0, (short)(fbounds.right - fbounds.left), (short)(fbounds.bottom - fbounds.top));", "-\t\t\t\tfbounds.inset(fm, fm+1, fm, fm+1);", "-\t\t\t\t", "+\t\t\t\tfbounds.left+= fm;", "+\t\t\t\tfbounds.top+= fm+1;", "+\t\t\t\tfbounds.right-= fm;", "+\t\t\t\tfbounds.bottom-= fm+1;", "-\t\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds.getData(), OS.kThemeStateActive);", "-\t\t\t\t\t\tOS.DrawThemeFocusRect(fbounds.getData(), true);", "+\t\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds, OS.kThemeStateActive);", "+\t\t\t\t\t\tOS.DrawThemeFocusRect(fbounds, true);", "-\t\t\t\t\t\tOS.DrawThemeFocusRect(fbounds.getData(), false);", "-\t\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds.getData(), OS.kThemeStateActive);", "+\t\t\t\t\t\tOS.DrawThemeFocusRect(fbounds, false);", "+\t\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds, OS.kThemeStateActive);", "-\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds.getData(), OS.kThemeStateActive);", "+\t\t\t\t\tOS.DrawThemeEditTextFrame(bounds, OS.kThemeStateActive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ef7eb670ff211553cea704a4b0bbd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "93745a79da963108a6ee75f8fd35bcdb8794dcb1", "commitAfterChange": "7bc0581513882a87037ea5e561c3e72bdafe2808", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int transparentProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int transparentProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\t\t\tRECT rect1 = new RECT ();", "-\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y, rect.width, bandWidth, OS.PATCOPY);", "-\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y + bandWidth, bandWidth, rect.height - (bandWidth * 2), OS.PATCOPY);", "-\t\t\t\t\tOS.PatBlt (hDC, rect.x + rect.width - bandWidth, rect.y + bandWidth, bandWidth, rect.height - (bandWidth * 2), OS.PATCOPY);", "-\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y + rect.height - bandWidth, rect.width, bandWidth, OS.PATCOPY);", "+\t\t\t\t\trect1.left = rect.x;", "+\t\t\t\t\trect1.top  = rect.y;", "+\t\t\t\t\trect1.right = rect.x + rect.width;", "+\t\t\t\t\trect1.bottom = rect.y + rect.height;", "+\t\t\t\t\tOS.MapWindowPoints (0, hwndOpaque, rect1, 2);", "+\t\t\t\t\tint width = rect1.right - rect1.left;", "+\t\t\t\t\tint height = rect1.bottom - rect1.top;", "+\t\t\t\t\tOS.PatBlt (hDC, rect1.left, rect1.top, width, bandWidth, OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect1.left, rect1.top + bandWidth, bandWidth, height - (bandWidth * 2), OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect1.right - bandWidth, rect1.top + bandWidth, bandWidth, height - (bandWidth * 2), OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect1.left, rect1.bottom - bandWidth, width, bandWidth, OS.PATCOPY);"]}], "num": 20504}