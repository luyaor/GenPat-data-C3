{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecd54866a19d54de53166b23f9300486", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb1059f0f9252fccb7766f2972bb73b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptAuth2.java", "commitBeforeChange": "45b9943e2cf7dcb6df6ebdaf1accf9be50534b90", "commitAfterChange": "c0e8b19693a09635ee2e2549501800c6e492284d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  Browser getBrowser()", "signatureAfterChange": "  Browser getBrowser ()", "diff": ["-Browser getBrowser() {", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = XPCOM.NS_GetServiceManager (result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\t", "-\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "-\tresult[0] = 0;", "-\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FOCUSMANAGER_CONTRACTID, true);", "-\trc = serviceManager.GetServiceByContractID (aContractID, !Mozilla.IsPre_4 ? nsIFocusManager.NS_IFOCUSMANAGER_10_IID : nsIFocusManager.NS_IFOCUSMANAGER_IID, result);", "-\tserviceManager.Release ();", "-", "-\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\tnsIFocusManager focusManager = new nsIFocusManager (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = focusManager.GetActiveWindow (result);", "-\t\tfocusManager.Release ();", "-\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = domWindow.GetTop(result);", "-\t\t\tdomWindow.Release();", "-\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\t\t\treturn Mozilla.getBrowser(result[0]);", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn null;", "+Browser getBrowser () {", "+\tif (parent == 0) return null;", "+\treturn Mozilla.getBrowser (parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e5f32e55f0ac6bfdf66bdfa472d1ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Prompter.java", "commitBeforeChange": "45b9943e2cf7dcb6df6ebdaf1accf9be50534b90", "commitAfterChange": "c0e8b19693a09635ee2e2549501800c6e492284d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 22, "signatureBeforeChange": "  Browser getBrowser()", "signatureAfterChange": "  Browser getBrowser ()", "diff": ["+Browser getBrowser () {", "+\tif (parent == 0) return null;", "+\treturn Mozilla.getBrowser (parent);", "+}", "-", "-Browser getBrowser() {", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = XPCOM.NS_GetServiceManager (result);", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-\t", "-\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "-\tresult[0] = 0;", "-\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FOCUSMANAGER_CONTRACTID, true);", "-\trc = serviceManager.GetServiceByContractID (aContractID, !Mozilla.IsPre_4 ? nsIFocusManager.NS_IFOCUSMANAGER_10_IID : nsIFocusManager.NS_IFOCUSMANAGER_IID, result);", "-\tserviceManager.Release ();", "-", "-\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\tnsIFocusManager focusManager = new nsIFocusManager (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = focusManager.GetActiveWindow (result);", "-\t\tfocusManager.Release ();", "-\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = domWindow.GetTop(result);", "-\t\t\tdomWindow.Release();", "-\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\t\t\treturn Mozilla.getBrowser(result[0]);", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "338a9da6f3b4ba1db3e76d0a167fed46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/win32/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "0cb48e6dc6d4cd7842728d49aab01617b288dc45", "commitAfterChange": "258448430288a4f79a83683cae42bc4aa811db5c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void init ()", "signatureAfterChange": "  void init ()", "diff": ["+\tif (!Mozilla.IsPre_4) {", "+\t\t/*", "+\t\t* In XULRunner versions > 4, sending WM_GETDLGCODE to a WM_KEYDOWN's MSG hwnd answers 0", "+\t\t* instead of the expected DLGC_WANTTAB or DLGC_WANTALLKEYS.  As a result, Tab presses", "+\t\t* always default to traversals out of the browser.  The workaround for this is to add a", "+\t\t* Traverse listener that vetos any tab traversals that are attempted while an element", "+\t\t* in the browser has focus. ", "+\t\t*/", "+\t\tbrowser.addListener (SWT.Traverse, new Listener () {", "+\t\t\tpublic void handleEvent (Event event) {", "+\t\t\t\tif ((event.detail & (SWT.TRAVERSE_TAB_NEXT | SWT.TRAVERSE_TAB_PREVIOUS)) == 0) return;", "+", "+\t\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\t\tint rc = XPCOM.NS_GetServiceManager (result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FOCUSMANAGER_CONTRACTID, true);", "+\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIFocusManager.NS_IFOCUSMANAGER_10_IID, result);", "+\t\t\t\tserviceManager.Release ();", "+", "+\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\tnsIFocusManager focusManager = new nsIFocusManager (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\trc = focusManager.GetFocusedElement (result);", "+\t\t\t\t\tfocusManager.Release ();", "+\t\t\t\t\tevent.doit = result[0] == 0;", "+\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\tnew nsISupports (result[0]).Release ();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t}"]}], "num": 20267}