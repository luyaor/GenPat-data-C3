{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a1971db67da9afc3b3c1a64a661aa03", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91acb4b97036959efa2b6f57a16bd5f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "bd84842070ddbb1c7d4c356159fbb84d263877b7", "commitAfterChange": "17ee310c8a6cf19b889e32ff7bcbe8b32154f6e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\tif (LinkProc != 0) return OS.CallWindowProc (LinkProc, hwnd, msg, wParam, lParam);", "+\tif (LinkProc != 0) {", "+\t\t/*", "+\t\t* Feature in Windows.  By convention, native Windows controls", "+\t\t* check for a non-NULL wParam, assume that it is an HDC and", "+\t\t* paint using that device.  The SysLink control does not.", "+\t\t* The fix is to check for an HDC and use WM_PRINTCLIENT.", "+\t\t*/", "+\t\tswitch (msg) {", "+\t\t\tcase OS.WM_PAINT:", "+\t\t\t\tif (wParam != 0) {", "+\t\t\t\t\tOS.SendMessage (hwnd, OS.WM_PRINTCLIENT, wParam, 0);", "+\t\t\t\t\treturn 0;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t\treturn OS.CallWindowProc (LinkProc, hwnd, msg, wParam, lParam);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3426f8fb26341d672797c32b7759f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "fe01df1082b5613213a59b03292c02660626087d", "commitAfterChange": "e771e3576d1e1ba57ba12fa501dc8174c6ca74e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t", "+\tid id = window.fieldEditor (true, null);", "+\tif (id != null) {", "+\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6e7139b4b283f56f2810da10469f56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "eccb7e6fdaa0083f6f2d6cf61838578b27f8e6eb", "commitAfterChange": "fce4d10ca4757c14bdb3b6653dc272987bd3530f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["+\t\t/*", "+\t\t* Bug in GTK.  When an application opens a new modal top level", "+\t\t* shell from inside the \"select_row\" signal, the GtkCList does not get the", "+\t\t* mouse up and does not release grabs.  The fix is to release the grabs", "+\t\t* when any shell is opened.", "+\t\t*/", "+\t\tint grabHandle = OS.gtk_grab_get_current ();", "+\t\tif (grabHandle != 0) {", "+\t\t\tOS.gtk_grab_remove (grabHandle);", "+\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eac6cd06f019f33cfb57a3f9e791e04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "commitAfterChange": "4d37e69c76f374c82ca18131ce52b31afe7f3b06", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void updateBkImages()", "signatureAfterChange": "  void updateBkImages()", "diff": ["-\t\t\t\t\tif (bounds.y > getTabHeight() || gradientColors == null) {", "+\t\t\t\t\tint tabHeight = getTabHeight();", "+\t\t\t\t\tboolean wrapped = onBottom ? bounds.y > this.getSize().y - tabHeight : bounds.y > tabHeight; ", "+\t\t\t\t\tif (wrapped || gradientColors == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b24d74b49fbc54f79060cdfd57fbf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "2439b276d171b4b95e287c65d9cb5b785eb4b08d", "commitAfterChange": "1f318468b40b77cd410d26c8f93cbdf50c3f696f", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "signatureAfterChange": "  LRESULT wmChar (long hwnd, long wParam, long lParam)", "diff": ["-\t/*", "-\t* Feature in Windows.  For some reason, when the", "-\t* widget is a single line text widget, when the", "-\t* user presses tab, return or escape, Windows beeps.", "-\t* The fix is to look for these keys and not call", "-\t* the window proc.", "-\t* ", "-\t* NOTE: This only happens when the drop down list", "-\t* is not visible.", "-\t*/", "+\t\t/*", "+\t\t* Feature in Windows.  For some reason, when the", "+\t\t* widget is a single line text widget, when the", "+\t\t* user presses tab, return or escape, Windows beeps.", "+\t\t* The fix is to look for these keys and not call", "+\t\t* the window proc.", "+\t\t*", "+\t\t* NOTE: This only happens when the drop down list", "+\t\t* is not visible.", "+\t\t*/", "+\t\t/*", "+\t\t* Bug in Windows.  When the user types CTRL and BS", "+\t\t* in a combo control, a DEL character (0x08) is generated.", "+\t\t* Rather than deleting the text, the DEL character", "+\t\t* is inserted into the control. The fix is to detect", "+\t\t* this case and not call the window proc.", "+\t\t*/", "+\t\tcase SWT.DEL:", "+\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "+\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aaa5d69033758c2411974b7f586f2a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "293242e8da21f46cf098240145f8ff08fd5bd827", "commitAfterChange": "3911eac091ae8a59389a2f42ff94a2a60da98fae", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 58, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t* user presses tab or return, Windows beeps.", "+\t* user presses tab, return or escape, Windows beeps.", "+\t* ", "+\t* NOTE: This only happens when the drop down list", "+\t* is not visible.", "+\t\tcase OS.VK_TAB: return LRESULT.ZERO;", "-\t\tcase OS.VK_TAB: return LRESULT.ZERO;", "+\t\tcase OS.VK_ESCAPE: ", "+\t\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) == 0) {", "+\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "478651aacb1d9919f7bde7a0380d9d59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "0c8487c5a06c4c79a76002d2142712f82d3366f1", "commitAfterChange": "12588946f81ae7cf5b0461707a77688b961e9a21", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void setRowColumn(int row, int column, boolean notify)", "signatureAfterChange": "  void setRowColumn(int row, int column, boolean notify)", "diff": ["-\tif (0 <= row && row < table.getItemCount()) {", "-\t\tif (0 <= column && column < table.getColumnCount()) {", "+\tint itemCount = table.getItemCount();", "+\tint columnCount = table.getColumnCount();", "+\tif (0 <= row && row < itemCount) {", "+\t\tif (0 <= column && column < columnCount) {", "+\t\t\tif (columnCount > 1) {", "+\t\t\t\ttable.showColumn(table.getColumn(column));", "+\t\t\t}"]}], "num": 2281}