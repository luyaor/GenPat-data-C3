{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93e0ff69710b979c49303a067796b745", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "665560fa0ade8ff4d6b563fc634d6fe7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f1b82b762fd7286a39be745bdc0fc9afa0f9d923", "commitAfterChange": "c87aae6d3c31d8056505e084eb4ffdab48e95621", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tif (attributeName.equals (OS.kAXValueAttribute)) {", "-\t\t\tString text = getText ();", "-\t\t\tbuffer = new char [text.length ()];", "-\t\t\ttext.getChars (0, buffer.length, buffer, 0);", "-\t\t\tstringRef [0] = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-\t\t\tif (stringRef [0] != 0) {", "-\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFStringRef, 4, stringRef);", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\treturn OS.noErr;", "-\t\t\t}", "-\t\t}", "-\t\tif (attributeName.equals (OS.kAXTitleAttribute)) {", "+\t\tif (attributeName.equals (OS.kAXValueAttribute) || attributeName.equals (OS.kAXTitleAttribute)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e824be0041de4b0eda4b0ecaa1e1aef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 67, "signatureBeforeChange": " void doScrollHorizontal(Event event)", "signatureAfterChange": " void scrollHorizontal(int numPixel)", "diff": ["-}", "-void doScrollHorizontal(Event event) {", "-\tupdate();", "-\tint newSelection = getHorizontalBar().getSelection();", "-\tRectangle clientArea = getClientArea();", "-\tGC gc = new GC(this);", "-\tgc.copyArea(", "-\t\t0, 0,", "-\t\tclientArea.width, clientArea.height,", "-\t\thorizontalOffset - newSelection, 0);", "-\tgc.dispose();", "-\tif (header.isVisible()) {", "-\t\theader.update();", "-\t\tclientArea = header.getClientArea();", "-\t\tgc = new GC(header);", "-\t\tgc.copyArea(", "-\t\t\t0, 0,", "-\t\t\tclientArea.width, clientArea.height,", "-\t\t\thorizontalOffset - newSelection, 0);", "-\thorizontalOffset = newSelection;", "+ */", "+void scrollHorizontal(int numPixel) {", "+\tRectangle clientArea = getClientArea();", "+", "+\tscroll(", "+\t\tnumPixel, 0, \t\t\t\t\t\t\t\t// destination x, y", "+\t\t0, 0, \t\t\t\t\t\t\t\t\t\t// source x, y", "+\t\tclientArea.width, clientArea.height, true);", "+}"]}], "num": 9444}