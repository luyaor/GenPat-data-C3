{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a38e684261d0d3c73f05cecc0670836", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d04050ebb8f380f162823266673f9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "a9bcfea463127dd8a6c52ce4af29eac7df4a241d", "commitAfterChange": "c5308d73c1e46a1db4edf39db94dfada1b6e65dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (size <= 0) return null;\t\t\t", "-\tchar[] chars = new char [size/2];", "-\tOS.memmove (chars, transferData.pValue, size);", "-\tString string = new String (chars);", "+\tif (size <= 0) return null;", "+\tchar[] bom = new char[1]; // look for a Byte Order Mark", "+\tif (size > 1) OS.memmove (bom, transferData.pValue, 2);", "+\tString string;", "+\tif (bom[0] == '\\ufeff' || bom[0] == '\\ufffe') {", "+\t\t// utf16", "+\t\tchar[] chars = new char [size/2];", "+\t\tOS.memmove (chars, transferData.pValue, size);", "+\t\tstring = new String (chars);", "+\t} else {", "+\t\tbyte[] utf8 = new byte[size];", "+\t\tOS.memmove(utf8, transferData.pValue, size);", "+\t\t// convert utf8 byte array to a unicode string", "+\t\tchar [] unicode = org.eclipse.swt.internal.Converter.mbcsToWcs (null, utf8);", "+\t\tstring = new String (unicode);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a0a300158e481b0b8d1c43c281571e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/wpf/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "8e746dffcecf23a840e3dfc0bae71b16f86cd38f", "commitAfterChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": "   int createDotNetString (String string)", "signatureAfterChange": " protected Object nativeToJava(TransferData transferData)", "diff": ["-", "-int createDotNetString (String string) {", "-\tif (string == null) return 0;", "-\tint length = string.length();", "-\tchar[] buffer = new char[length + 1];", "-\tstring.getChars(0, length, buffer, 0);", "-\treturn OS.gcnew_String(buffer);", "-}", "+\tif ( !isSupportedType(transferData) || transferData.pValue == 0) return null;", "+\tint byteArray = transferData.pValue;", "+\tint length = OS.Array_GetLength(byteArray, 0);", "+\tbyte[] buffer = new byte[length];", "+\tif (length == 0) return buffer;", "+\tOS.memcpy(buffer, transferData.pValue, length);", "+\treturn buffer;"]}], "num": 44962}