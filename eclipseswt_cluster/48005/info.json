{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6c3470e3964ddfd9e9bc1259c39ba40", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e89f3726d2af2ca4eb8d061333bfc43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "115f3e3ceb4f3ae6b51eb27ec3539632d1fa9cff", "commitAfterChange": "b74ae62b82beae503cc3ceeef2dd599062f8ba27", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-//\t\tcase OS.WM_SETFOCUS: {", "-//\t\t\t/*", "-//\t\t\t* Feature in Windows.  When a tree control processes WM_SETFOCUS,", "-//\t\t\t* if no item is selected, the first item in the tree is selected.", "-//\t\t\t* This is unexpected and might clear the previous selection.", "-//\t\t\t* The fix is to detect that there is no selection and set it to", "-//\t\t\t* the first item in the tree.  If the item was not selected,", "-//\t\t\t* only the focus is assigned.", "-//\t\t\t*/", "-//\t\t\tif ((style & SWT.SINGLE) != 0) break;", "-//\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-//\t\t\tif (hItem == 0) {", "-//\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-//\t\t\t\tif (hItem != 0) {", "-//\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-//\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM | OS.TVIF_STATE;", "-//\t\t\t\t\ttvItem.hItem = hItem;", "-//\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-//\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = true;", "-//\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "-//\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) == 0) {", "-//\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-//\t\t\t\t\t}", "-//\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = false;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t\tbreak;", "-//\t\t}", "+\t\tcase OS.WM_SETFOCUS: {", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When a tree control processes WM_SETFOCUS,", "+\t\t\t* if no item is selected, the first item in the tree is selected.", "+\t\t\t* This is unexpected and might clear the previous selection.", "+\t\t\t* The fix is to detect that there is no selection and set it to", "+\t\t\t* the first item in the tree.  If the item was not selected,", "+\t\t\t* only the focus is assigned.", "+\t\t\t*/", "+\t\t\tif ((style & SWT.SINGLE) != 0) break;", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem == 0) {", "+\t\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\t\t\t\tif (hItem != 0) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM | OS.TVIF_STATE;", "+\t\t\t\t\ttvItem.hItem = hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = true;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "+\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) == 0) {", "+\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t\t\t\t}", "+\t\t\t\t\tignoreDeselect = ignoreSelect = lockSelection = false;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437b62ad02d8ea9edea6025b324d736e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b8b3d8d333270c82331f79c34684ac5101f04bf4", "commitAfterChange": "f5441d1714ca7f50c8c942b97ca2567450f3ceff", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* In a multi-select tree, if the user is collapsing a subtree that", "+\t\t* contains selected items, clear the selection from these items and", "+\t\t* issue a selection event.  Only items that are selected and visible", "+\t\t* are cleared.", "+\t\t*/", "+\t\tboolean fixSelection = false, deselected = false;", "+\t\tif ((style & SWT.MULTI) != 0) {", "+\t\t\tif (lpht.hItem != 0 && (lpht.flags & OS.TVHT_ONITEMBUTTON) != 0) {", "+\t\t\t\tint hSelection = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tif (hSelection != 0) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\ttvItem.mask = OS.TVIF_STATE | OS.TVIF_PARAM;", "+\t\t\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tif ((tvItem.state & OS.TVIS_EXPANDED) != 0) {", "+\t\t\t\t\t\tfixSelection = true;", "+\t\t\t\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\t\t\t\t\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, lpht.hItem);", "+\t\t\t\t\t\tint hLast = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\tint hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, lpht.hItem);", "+\t\t\t\t\t\twhile (hNext != 0 && hNext != hLast) {", "+\t\t\t\t\t\t\ttvItem.hItem = hNext;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) deselected = true;", "+\t\t\t\t\t\t\ttvItem.state = 0;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t\t\t\t\t\tif ((hNext = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hNext)) == 0) break;", "+\t\t\t\t\t\t\tif (hParent == OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hNext)) break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = true;", "+\t\tif (fixSelection) ignoreDeselect = ignoreSelect = lockSelection = false;", "+\t\tif (deselected) {", "+\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\ttvItem.mask = OS.TVIF_PARAM;", "+\t\t\ttvItem.hItem = lpht.hItem;", "+\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.item = items [tvItem.lParam];", "+\t\t\tpostEvent (SWT.Selection, event);", "+\t\t}"]}], "num": 48005}