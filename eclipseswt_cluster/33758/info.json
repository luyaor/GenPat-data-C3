{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f4038884ca1f9128f8ab44de1cb1786", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d263c2f71347daf3905ee71264d92b17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public void test_setSelectionI()", "signatureAfterChange": "  public void test_setSelectionI()", "diff": ["-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fcd13838ea6459387dc8a07df3584a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$Ljava_lang_String()", "signatureAfterChange": "  public void test_setSelection$Ljava_lang_String()", "diff": ["-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String [] {\"fred 2\"});", "+\tassertArrayEquals(list.getSelection(), new String [] {\"fred 2\"});", "-\tassertEquals(list.getSelection(), new String [0]);", "+\tassertArrayEquals(list.getSelection(), new String [0]);", "-\tassertEquals(list.getSelection(), new String [0]);", "+\tassertArrayEquals(list.getSelection(), new String [0]);", "-\tassertEquals(list.getSelection(), new String [] {\"fred \" + (number - 1)});", "+\tassertArrayEquals(list.getSelection(), new String [] {\"fred \" + (number - 1)});", "-\tassertEquals(list.getSelection(), new String [] {\"fred 0\"});", "+\tassertArrayEquals(list.getSelection(), new String [] {\"fred 0\"});", "-\tassertEquals(list.getSelection(), new String [0]);", "+\tassertArrayEquals(list.getSelection(), new String [0]);", "-\tassertEquals(list.getSelection(), new String[] {\"fred \" + (number - 1)});", "+\tassertArrayEquals(list.getSelection(), new String[] {\"fred \" + (number - 1)});", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[] {\"fred 2\"});", "+\tassertArrayEquals(list.getSelection(), new String[] {\"fred 2\"});", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[] {});", "+\tassertArrayEquals(list.getSelection(), new String[] {});", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[] {\"fred \" + (number - 1)});", "+\tassertArrayEquals(list.getSelection(), new String[] {\"fred \" + (number - 1)});", "-\tassertEquals(list.getSelection(), new String[] {});", "+\tassertArrayEquals(list.getSelection(), new String[] {});", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[] {});", "+\tassertArrayEquals(list.getSelection(), new String[] {});", "-\tassertEquals(list.getSelection(), new String[] {});", "+\tassertArrayEquals(list.getSelection(), new String[] {});", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);", "-\tassertEquals(list.getSelection(), new String[0]);", "+\tassertArrayEquals(list.getSelection(), new String[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95411521783870a569509bb780a1d01d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test_selectII()", "signatureAfterChange": "  public void test_selectII()", "diff": ["-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(\"empty list\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 0 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 0 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 1 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 1 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 2 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 2 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 3 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 4 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 4 });", "-\tassertEquals(list.getSelectionIndices(), new int[] { 4 });", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] { 4 });", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eab716a18cb1c6c78cecdf7b4e0759c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "ae857a34264d288e1dc57e6e3cb1970e51ca7ffa", "commitAfterChange": "1acbdc06fccff8d6f8ed7a4bad9ea879798c7b62", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test_setSelectionI()", "signatureAfterChange": "  public void test_setSelectionI()", "diff": ["-\tint number = 5;", "-\tfor (int i = 0; i < number; i++)", "+\tint number = 8;", "+\tfor (int i = 0; i < number; i++) {", "+\t}", "-\tint[] ind = new int[32];", "-\tfor (int i = 0, j = 0; i < ind.length; i++, j++)", "-\t\tind[j] = i;", "-", "-\tlist.setSelection(ind);", "-\tassertSame(", "-\t\t\"setSelection(\" + ind + \"):\",", "-\t\tlist.getSelectionIndices(), new int[] { 0, 1, 2, 3, 4 });", "-", "-\tlist.deselectAll();", "-\tint[] ind2 = { -1 };", "-\tlist.setSelection(ind2);", "-\tassertEquals(", "-\t\t\"setSelection(\" + ind2 + \"):\",", "-\t\tlist.getSelectionIndices(), new int[] {});", "-", "-\tlist.deselectAll();", "-\tassertEquals(\"2\", list.getSelectionIndices(), new int[] { 2 });", "-", "-\tlist.setSelection(3);", "-\tassertEquals(\"3\", list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.setSelection(5);", "-\tassertEquals(\"5\", list.getSelectionIndices(), new int[] {});", "-", "+\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertEquals(list.getFocusIndex(), 2);", "+\tlist.setSelection(-5);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 2);", "+\tlist.setSelection(0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\tlist.setSelection(number);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 0);", "+\tlist.setSelection(number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\tlist.setSelection(-1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), number - 1);", "-\tString[] items = { \"item0\", \"item1\", \"item2\", \"item3\" };", "-\tlist.setItems(items);", "+", "+\tfor (int i = 0; i < number; i++) {", "+\t\tlist.add(\"fred\" + i);", "+\t}", "-\tassertEquals(\"2\", list.getSelectionIndices(), new int[] { 2 });", "-", "-\tlist.setSelection(3);", "-\tassertEquals(\"3\", list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.setSelection(4);", "-\tassertEquals(\"4\", list.getSelectionIndices(), new int[] { 3 });", "-", "+\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertEquals(list.getFocusIndex(), 2);", "+\tlist.setSelection(-5);", "+\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertEquals(list.getFocusIndex(), 2);", "+\tlist.setSelection(0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\tlist.setSelection(number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\tlist.setSelection(number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\tlist.setSelection(-1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);"]}], "num": 33758}