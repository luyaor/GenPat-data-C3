{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48f01d78ac116130a573b83c5494468f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716720b3f69280da4d5b8995682b10d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2dbd0ccfe08d6a6997a0e9308c031e61261124ee", "commitAfterChange": "293acdaaff55ea509849ff9da47dacd21701a74a", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\t\t", "+\t", "+\t/* Set the application user model ID */", "+\tif (APP_NAME != null) {", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 1)) {", "+\t\t\tint length = APP_NAME.length ();", "+\t\t\tchar [] buffer = new char [length + 1];", "+\t\t\tAPP_NAME.getChars (0, length, buffer, 0);", "+\t\t\tOS.SetCurrentProcessExplicitAppUserModelID (buffer);", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21e62cfaa25d55eb485b2a4a0356e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2afea353cc124a61703e6e922e965ceea1fb7c3a", "commitAfterChange": "e253003f379a5077ef9bad1970e6ecd3caffe942", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\t/*\r", "-\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "-\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get the\r", "-\t\t\t\t* tool tip text.  The fix is to avoid TTN_GETDISPINFOW, which\r", "-\t\t\t\t* should never be sent on Windows 98.\r", "-\t\t\t\t*/\r", "-\t\t\t\tif (!OS.IsUnicode) break;\r", "-\t\t\t\t// FALL THROUGH\r", "-\t\t\tcase OS.TTN_GETDISPINFOA:\r", "+\t\t\tcase OS.TTN_GETDISPINFOA: {\r", "+\t\t\t\t\tShell shell = getShell ();\r", "-\t\t\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\t\t\tTCHAR buffer = new TCHAR (0, string, true);\r", "-\t\t\t\t\tgetShell ().setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t/*\r", "+\t\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "+\t\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get\r", "+\t\t\t\t\t* the tool tip text and the tab folder control sends only \r", "+\t\t\t\t\t* TTN_GETDISPINFOW.  The fix is to handle only TTN_GETDISPINFOW,\r", "+\t\t\t\t\t* even though it should never be sent on Windows 98.\r", "+\t\t\t\t\t*/\r", "+\t\t\t\t\tif (hdr.code == OS.TTN_GETDISPINFOW) {\r", "+\t\t\t\t\t\tint length = string.length ();\r", "+\t\t\t\t\t\tchar [] buffer = new char [length + 1];\r", "+\t\t\t\t\t\tstring.getChars(0, length, buffer, 0);\r", "+\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t/* Use the character encoding for the default locale */\r", "+\t\t\t\t\t\tTCHAR buffer = new TCHAR (0, string, true);\r", "+\t\t\t\t\t\tshell.setToolTipText (lpnmtdi, buffer);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\treturn LRESULT.ZERO;\r", "-\t\t\t\treturn LRESULT.ZERO;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r"]}], "num": 43059}