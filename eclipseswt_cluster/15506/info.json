{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f08252de72b014845c7b4c979855388", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33faf42819b75b6960f53c72f8a6600e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc96057c7f893fb654973e04db46dab3c5af24b0", "commitAfterChange": "65521bdafcda7b74ad089bafbe99d9f6bc2d5c67", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 69, "signatureBeforeChange": "  int setGC()", "signatureAfterChange": "  int setGC()", "diff": ["-\t\tif ((dirtyBits & (DIRTY_LINESTYLE | DIRTY_LINEWIDTH)) != 0) {", "-\t\t\tOS.PgSetStrokeCap(OS.Pg_ROUND_CAP);", "+\t\tif ((dirtyBits & DIRTY_LINECAP) != 0) {", "+\t\t\tint cap_style = 0;", "+\t\t\tswitch (data.lineCap) {", "+\t\t\t\tcase SWT.CAP_ROUND:cap_style = OS.Pg_ROUND_CAP; break;", "+\t\t\t\tcase SWT.CAP_FLAT:cap_style = OS.Pg_BUTT_CAP; break;", "+\t\t\t\tcase SWT.CAP_SQUARE:cap_style = OS.Pg_SQUARE_CAP; break;", "+\t\t\t}", "+\t\t\tOS.PgSetStrokeCap(cap_style);", "+\t\t}", "+\t\tif ((dirtyBits & DIRTY_LINEJOIN) != 0) {", "+\t\t\tint join_style = 0;", "+\t\t\tswitch (data.lineJoin) {", "+\t\t\t\tcase SWT.JOIN_ROUND:join_style = OS.Pg_ROUND_JOIN; break;", "+\t\t\t\tcase SWT.JOIN_MITER:join_style = OS.Pg_MITER_JOIN; break;", "+\t\t\t\tcase SWT.JOIN_BEVEL:join_style = OS.Pg_BEVEL_JOIN; break;", "+\t\t\t}", "+\t\t\tOS.PgSetStrokeJoin(join_style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c6c3d61b6767aafde451f462ae7938b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c29ffbc7a7d1b55087e0dd49ec4f8b39c8dc4f9d", "commitAfterChange": "7929c76b4d9ae55b8b6d6742de8c84b9e7d16927", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\t\t\t\tcase '\\r': keysym = OS.GDK_Return; break;", "-\t\t\t\t\tdefault: keysym = wcsToMbcs (key);", "+\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "+\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "+\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "+\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "+\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "+\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tkeysym = wcsToMbcs (key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a330f51bf64d5fef5a4337985601e422", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c29ffbc7a7d1b55087e0dd49ec4f8b39c8dc4f9d", "commitAfterChange": "7929c76b4d9ae55b8b6d6742de8c84b9e7d16927", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\t\t\t\tcase 27: inputs.wVk = (short) OS.VK_ESCAPE; break;", "-\t\t\t\t\tcase 127: inputs.wVk = (short) OS.VK_DELETE; break;", "-\t\t\t\t\tdefault : {", "+\t\t\t\t\tcase SWT.BS: inputs.wVk = (short) OS.VK_BACK; break;", "+\t\t\t\t\tcase SWT.CR: inputs.wVk = (short) OS.VK_RETURN; break;", "+\t\t\t\t\tcase SWT.DEL: inputs.wVk = (short) OS.VK_DELETE; break;", "+\t\t\t\t\tcase SWT.ESC: inputs.wVk = (short) OS.VK_ESCAPE; break;", "+\t\t\t\t\tcase SWT.TAB: inputs.wVk = (short) OS.VK_TAB; break;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Since there is no LF key on then keyboard, do not attempt", "+\t\t\t\t\t* to map LF to CR or attempt to post an LF key because no", "+\t\t\t\t\t* such key exists on the keyboard.", "+\t\t\t\t\t*/", "+//\t\t\t\t\tcase SWT.LF: inputs.wVk = (short) OS.VK_RETURN; break;", "+\t\t\t\t\tcase SWT.LF: return false;", "+\t\t\t\t\tdefault: {", "-\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key,0));", "+\t\t\t\t\t\t\tinputs.wVk = OS.VkKeyScan ((short) wcsToMbcs (key, 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cefec5afd22ef7aaee0092c27674bdb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "46a68f0d1948c7c620d9cddf667d96000d831d27", "commitAfterChange": "d6ff58bf90f4713e0876cad7930a9de17c3ad92d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public Image getSystemImage (int id)", "signatureAfterChange": " public Image getSystemImage (int id)", "diff": ["-//\tswitch (id) {", "-//\t\tcase SWT.ICON_ERROR: {\t", "-//\t\t\tif (errorImage != null) return errorImage;", "-//\t\t\tint [] image = createImage (OS.kAlertStopIcon);", "-//\t\t\tif (image == null) break;", "-//\t\t\treturn errorImage = Image.carbon_new (this, SWT.ICON, image [0], image [1]);", "-//\t\t}", "-//\t\tcase SWT.ICON_INFORMATION:", "-//\t\tcase SWT.ICON_QUESTION:", "-//\t\tcase SWT.ICON_WORKING: {", "-//\t\t\tif (infoImage != null) return infoImage;", "-//\t\t\tint [] image = createImage (OS.kAlertNoteIcon);", "-//\t\t\tif (image == null) break;", "-//\t\t\treturn infoImage = Image.carbon_new (this, SWT.ICON, image [0], image [1]);", "-//\t\t}", "-//\t\tcase SWT.ICON_WARNING: {", "-//\t\t\tif (warningImage != null) return warningImage;", "-//\t\t\tint [] image = createImage (OS.kAlertCautionIcon);", "-//\t\t\tif (image == null) break;", "-//\t\t\treturn warningImage = Image.carbon_new (this, SWT.ICON, image [0], image [1]);", "-//\t\t}", "-//\t}", "-\t", "-\t//[[NSWorkspace sharedWorkspace] iconForFileType:NSFileTypeForHFSTypeCode(code)];", "-\treturn null;", "-//\treturn Image.cocoa_new (this, SWT.ICON, NSImage.imageNamed (NSString.stringWith(\"NSImageNameGoRightTemplate\")));", "+\tint code;", "+\tswitch(id) {", "+\t\tcase SWT.ICON_ERROR:", "+\t\t\tcode = OS.kAlertStopIcon;", "+\t\t\tbreak;", "+\t\tcase SWT.ICON_INFORMATION:", "+\t\tcase SWT.ICON_WORKING:", "+\t\tcase SWT.ICON_QUESTION:", "+\t\t\tcode = OS.kAlertNoteIcon;", "+\t\t\tbreak;", "+\t\tcase SWT.ICON_WARNING:", "+\t\t\tcode = OS.kAlertCautionIcon;", "+\t\t\tbreak;", "+\t\tdefault:", "+\t\t\treturn null;", "+\t}", "+\tNSImage nsImage = NSWorkspace.sharedWorkspace().iconForFileType(new NSString(OS.NSFileTypeForHFSTypeCode(code)));", "+\tif (nsImage == null) return null;", "+\treturn Image.cocoa_new(this, SWT.ICON, nsImage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d9900ba460d7530702c6fa63c5c875", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "420c4d2d4bd58aa54ccce10bfffe01345eb83a7a", "commitAfterChange": "86fcd0d89b24f3149eaf42cbf1c3cc407d26adcd", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " void sendMouseEvent (int type, XButtonEvent xEvent)", "signatureAfterChange": " boolean sendMouseEvent (int type, XButtonEvent xEvent)", "diff": ["-void sendMouseEvent (int type, XButtonEvent xEvent) {", "+boolean sendMouseEvent (int type, XButtonEvent xEvent) {", "-\tsendMouseEvent (type, xEvent.button, xEvent.time, x, y, xEvent.state);", "+\tint count = 0, detail = 0, button = xEvent.button;", "+\tboolean send = false;", "+\tswitch (button) {", "+\t\tcase 4:", "+\t\t\tif (type == SWT.MouseUp) return false;", "+\t\t\tdetail = SWT.SCROLL_LINE;", "+\t\t\tcount = 3;", "+\t\t\ttype = SWT.MouseWheel;", "+\t\t\tbutton = 0;", "+\t\t\tbreak;", "+\t\tcase 5:", "+\t\t\tif (type == SWT.MouseUp) return false;", "+\t\t\tdetail = SWT.SCROLL_LINE;", "+\t\t\tcount = -3;", "+\t\t\ttype = SWT.MouseWheel;", "+\t\t\tbutton = 0;", "+\t\tcase 6:", "+\t\t\tbutton = 4;", "+\t\t\tbreak;", "+\t\tcase 7:", "+\t\t\tbutton = 5;", "+\t\t\tbreak;", "+\t}", "+\treturn sendMouseEvent (type, button, count, detail, send, xEvent.time, x, y, xEvent.state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83625954134fd0c9cbbeead9a85de69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "1bdda2f66952666a5d534bd8c32c3f0cacf2f0b1", "commitAfterChange": "59a77812cbcdd24d0b0d127c3907087474ad0fe5", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \r void traversal(Event event)", "signatureAfterChange": "\r \r void traversal(Event event)", "diff": ["+\t\tcase SWT.TRAVERSE_ARROW_NEXT:\r", "+\t\t\tif (selectedIndex < items.length - 1) {\r", "+\t\t\t\tsetSelection(selectedIndex + 1, true);\r", "+\t\t\t}\r", "+\t\t\tevent.doit = true;\r", "+\t\t\tevent.detail = SWT.TRAVERSE_NONE;\r", "+\t\t\tbreak;\r", "+\t\tcase SWT.TRAVERSE_ARROW_PREVIOUS: \r", "+\t\t\tif (selectedIndex > 0) {\r", "+\t\t\t\tsetSelection(selectedIndex - 1, true);\r", "+\t\t\t}\r", "+\t\t\tevent.doit = true;\r", "+\t\t\tevent.detail = SWT.TRAVERSE_NONE;\r", "+\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d733aed7b49e28ea0761a7f5f5b6bc80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "5166e3f43597ad2d92958df4f57dd80d2aa678e8", "commitAfterChange": "78f989916ac40759b64fde860c734a8697fe7870", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean contains(float x, float y, GC gc, boolean outline)", "signatureAfterChange": " public boolean contains(float x, float y, GC gc, boolean outline)", "diff": ["-\tOS.CGContextSetLineCap(context, data.lineCap);", "-\tOS.CGContextSetLineJoin(context, data.lineJoin);", "+\tint capStyle = 0;", "+\tswitch (data.lineCap) {", "+\t\tcase SWT.CAP_ROUND: capStyle = OS.kCGLineCapRound; break;", "+\t\tcase SWT.CAP_FLAT: capStyle = OS.kCGLineCapButt; break;", "+\t\tcase SWT.CAP_SQUARE: capStyle = OS.kCGLineCapSquare; break;", "+\t}", "+\tOS.CGContextSetLineCap(context, capStyle);", "+\tint joinStyle = 0;", "+\tswitch (data.lineJoin) {", "+\t\tcase SWT.JOIN_MITER: joinStyle = OS.kCGLineJoinMiter; break;", "+\t\tcase SWT.JOIN_ROUND: joinStyle = OS.kCGLineJoinRound; break;", "+\t\tcase SWT.JOIN_BEVEL: joinStyle = OS.kCGLineJoinBevel; break;", "+\t}", "+\tOS.CGContextSetLineJoin(context, joinStyle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5246889fef7492ef3510df5bbc152372", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c29ffbc7a7d1b55087e0dd49ec4f8b39c8dc4f9d", "commitAfterChange": "7929c76b4d9ae55b8b6d6742de8c84b9e7d16927", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\t\t\tkeysym = wcsToMbcs (event.character);", "+\t\t\t\tchar key = event.character;", "+\t\t\t\tswitch (key) {", "+\t\t\t\t\tcase SWT.BS: keysym = OS.XK_BackSpace; break;", "+\t\t\t\t\tcase SWT.CR: keysym = OS.XK_Return; break;", "+\t\t\t\t\tcase SWT.DEL: keysym = OS.XK_Delete; break;", "+\t\t\t\t\tcase SWT.ESC: keysym = OS.XK_Escape; break;", "+\t\t\t\t\tcase SWT.TAB: keysym = OS.XK_Tab; break;", "+\t\t\t\t\tcase SWT.LF: keysym = OS.XK_Linefeed; break;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5abb335fe03bb9dbe3f09fe510caa2dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void setLineStyle(int lineStyle)", "signatureAfterChange": " public void setLineStyle(int lineStyle)", "diff": ["-\t/* AW", "-\tint xDisplay = data.display;", "-\t\t\tdata.lineStyle = lineStyle;", "-\t\t\tOS.XSetLineAttributes(xDisplay, handle, 0, OS.LineSolid, OS.CapButt, OS.JoinMiter);", "-\t\t\treturn;", "+\t\t\tOS.CGContextSetLineDash(handle, 0, null, 0);", "+\t\t\tbreak;", "-\t\t\tOS.XSetDashes(xDisplay,handle,0, new byte[] {6, 2},2);", "+\t\t\tOS.CGContextSetLineDash(handle, 0, new float[]{18, 6}, 2);", "-\t\t\tOS.XSetDashes(xDisplay,handle,0, new byte[] {3, 1},2);", "+\t\t\tOS.CGContextSetLineDash(handle, 0, new float[]{3, 3}, 2);", "-\t\t\tOS.XSetDashes(xDisplay,handle,0, new byte[] {6, 2, 3, 1},4);", "+\t\t\tOS.CGContextSetLineDash(handle, 0, new float[]{9, 6, 3, 6}, 4);", "-\t\t\tOS.XSetDashes(xDisplay,handle,0, new byte[] {6, 2, 3, 1, 3, 1},6);", "+\t\t\tOS.CGContextSetLineDash(handle, 0, new float[]{9, 3, 3, 3, 3, 3}, 6);", "-\tOS.XSetLineAttributes(xDisplay, handle, 0, OS.LineDoubleDash, OS.CapButt, OS.JoinMiter);", "-\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c7f3d261315d6b92a96d15ef43b038", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridData.java", "commitBeforeChange": "be4dc30170223e41cf67b207915c69f5214c014f", "commitAfterChange": "9942369d6ab93693724d0bd6dc23cd2652e72f4b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String toString ()", "signatureAfterChange": " public String toString ()", "diff": ["+\t\tcase SWT.LEFT: hAlign = \"SWT.LEFT\"; break; //$NON-NLS-1$", "+\t\tcase END: hAlign = \"GridData.END\"; break; //$NON-NLS-1$", "+\t\tcase SWT.RIGHT: hAlign = \"SWT.RIGHT\"; break; //$NON-NLS-1$", "-\t\tdefault: hAlign = \"Undefined \"+horizontalAlignment; break;", "+\t\tcase CENTER: hAlign = \"GridData.CENTER\"; break; //$NON-NLS-1$", "+\t\tdefault: hAlign = \"Undefined \"+horizontalAlignment; break; //$NON-NLS-1$", "+\t\tcase SWT.TOP: vAlign = \"SWT.TOP\"; break; //$NON-NLS-1$", "+\t\tcase END: vAlign = \"GridData.END\"; break; //$NON-NLS-1$", "+\t\tcase SWT.BOTTOM: vAlign = \"SWT.BOTTOM\"; break; //$NON-NLS-1$", "-\t\tdefault: vAlign = \"Undefined \"+verticalAlignment; break;", "+\t\tcase CENTER: vAlign = \"GridData.CENTER\"; break; //$NON-NLS-1$", "+\t\tdefault: vAlign = \"Undefined \"+verticalAlignment; break; //$NON-NLS-1$", "- \tString string = getName()+\":\";", "- \tif (heightHint != SWT.DEFAULT) string += \" heightHint = \"+heightHint;", "- \tstring += \" horizontalAlignment = \"+hAlign;", "- \tif (horizontalIndent != 0) string +=\" horizontalIndent = \"+horizontalIndent;", "- \tif (horizontalSpan != 1) string += \" horizontalSpan = \"+horizontalSpan;", "- \tif (grabExcessHorizontalSpace) string += \" grabExcessHorizontalSpace = \"+grabExcessHorizontalSpace;", "- \tif (widthHint != SWT.DEFAULT) string += \" widthHint = \"+widthHint;", "- \tstring += \" verticalAlignment = \"+vAlign;", "- \tif (verticalSpan != 1) string += \" verticalSpan = \"+verticalSpan;", "- \tif (grabExcessVerticalSpace) string += \" grabExcessVerticalSpace = \"+grabExcessVerticalSpace;", "+ \tString string = getName()+\":\"; //$NON-NLS-1$", "+ \tif (heightHint != SWT.DEFAULT) string += \" heightHint = \"+heightHint; //$NON-NLS-1$", "+ \tstring += \" horizontalAlignment = \"+hAlign; //$NON-NLS-1$", "+ \tif (horizontalIndent != 0) string +=\" horizontalIndent = \"+horizontalIndent; //$NON-NLS-1$", "+ \tif (horizontalSpan != 1) string += \" horizontalSpan = \"+horizontalSpan; //$NON-NLS-1$", "+ \tif (grabExcessHorizontalSpace) string += \" grabExcessHorizontalSpace = \"+grabExcessHorizontalSpace; //$NON-NLS-1$", "+ \tif (widthHint != SWT.DEFAULT) string += \" widthHint = \"+widthHint; //$NON-NLS-1$", "+ \tstring += \" verticalAlignment = \"+vAlign; //$NON-NLS-1$", "+ \tif (verticalSpan != 1) string += \" verticalSpan = \"+verticalSpan; //$NON-NLS-1$", "+ \tif (grabExcessVerticalSpace) string += \" grabExcessVerticalSpace = \"+grabExcessVerticalSpace; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857eced9ad918515d1fd8c4807741c65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "e7e4bd6d9e7c1565f96dbd642f24d8426ec5e685", "commitAfterChange": "6690d674a484a07e4445df2a5224ec4517b7f791", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void handleDOMEvent (OleEvent e)", "signatureAfterChange": "  void handleDOMEvent (OleEvent e)", "diff": ["+\t\t/*", "+\t\t* keypress events are not received for Enter, Delete and Tab, so", "+\t\t* KeyDown events are sent for them here.  Set the KeyDown event's", "+\t\t* character field and IE's lastCharCode field for these keys so", "+\t\t* that the Browser's key events are consistent with other controls.", "+\t\t*/", "+\t\tswitch (lastKeyCode) {", "+\t\t\tcase SWT.CR: lastCharCode = keyEvent.character = SWT.CR; break;", "+\t\t\tcase SWT.DEL: lastCharCode = keyEvent.character = SWT.DEL; break;", "+\t\t\tcase SWT.TAB: lastCharCode = keyEvent.character = SWT.TAB; break;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a2d34b9a50c3406eec5372c0cdaea56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "d62179de82e7ebb88af5fb1fc69d94c3012fbbb4", "commitAfterChange": "c1b6c4f2ff1aed9a9ac18ebb9c44fcbeeece3d94", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["-\t\t\tint /*long*/ attr = OS.pango_attr_underline_new(OS.PANGO_UNDERLINE_SINGLE);", "-\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "-\t\t\tattribute.start_index = byteStart;", "-\t\t\tattribute.end_index = byteEnd;", "-\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "-\t\t\tOS.pango_attr_list_insert(attrList, attr);", "-\t\t\tif (style.underlineColor != null && OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "-\t\t\t\tGdkColor color = style.underlineColor.handle;", "-\t\t\t\tattr = OS.pango_attr_underline_color_new(color.red, color.green, color.blue);", "+\t\t\tint underlineStyle = OS.PANGO_UNDERLINE_SINGLE;", "+\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "+\t\t\t\t\tunderlineStyle = OS.PANGO_UNDERLINE_NONE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\tcase SWT.UNDERLINE_SINGLE:", "+\t\t\t\t\tunderlineStyle = OS.PANGO_UNDERLINE_SINGLE; ", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_DOUBLE:", "+\t\t\t\t\tunderlineStyle = OS.PANGO_UNDERLINE_DOUBLE; ", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_ERROR:", "+\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 4, 0)) {", "+\t\t\t\t\t\tunderlineStyle = OS.PANGO_UNDERLINE_ERROR;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (underlineStyle != OS.PANGO_UNDERLINE_NONE) {", "+\t\t\t\tint /*long*/ attr = OS.pango_attr_underline_new(underlineStyle);", "+\t\t\t\tif (style.underlineColor != null && OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\t\tGdkColor color = style.underlineColor.handle;", "+\t\t\t\t\tattr = OS.pango_attr_underline_color_new(color.red, color.green, color.blue);", "+\t\t\t\t\tOS.memmove(attribute, attr, PangoAttribute.sizeof);", "+\t\t\t\t\tattribute.start_index = byteStart;", "+\t\t\t\t\tattribute.end_index = byteEnd;", "+\t\t\t\t\tOS.memmove(attr, attribute, PangoAttribute.sizeof);", "+\t\t\t\t\tOS.pango_attr_list_insert(attrList, attr);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd5a1ed26773e9ca62b12d46a76fab8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "41bdae326eb353ce74e20d44ac4455a5c572579f", "commitAfterChange": "45d1394589cdfd3c722aaffee70bb2c66e375216", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tstatic int atkObject_get_role (int atkObject)", "signatureAfterChange": "  \tstatic int atkObject_get_role (int atkObject)", "diff": ["-\t\t\t\t\t\tcase ACC.ROLE_ROW: return ATK.ATK_ROLE_TABLE_CELL;", "+\t\t\t\t\t\tcase ACC.ROLE_ROW: return ROW_ROLE;", "+\t\t\t\t\t\tcase ACC.ROLE_COLUMN: return COLUMN_ROLE;", "+\t\t\t\t\t\tcase ACC.ROLE_ALERT: return ATK.ATK_ROLE_ALERT;", "+\t\t\t\t\t\tcase ACC.ROLE_ANIMATION: return ATK.ATK_ROLE_ANIMATION;", "+\t\t\t\t\t\tcase ACC.ROLE_CANVAS: return ATK.ATK_ROLE_CANVAS;", "+\t\t\t\t\t\tcase ACC.ROLE_GROUP: return ATK.ATK_ROLE_PANEL;", "+\t\t\t\t\t\tcase ACC.ROLE_SPINBUTTON: return ATK.ATK_ROLE_SPIN_BUTTON;", "+\t\t\t\t\t\tcase ACC.ROLE_STATUSBAR: return ATK.ATK_ROLE_STATUSBAR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aced72dd3d8bc2e91f47dff41df000d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "08a3201792a90babab752e4d516ed92e6c754a3c", "commitAfterChange": "b425cf525081ddbdaa194fe6bcbd8a4a00cd4e52", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 116, "signatureBeforeChange": "  void sendMouseEvent (NSEvent nsEvent, int type, int button)", "signatureAfterChange": "  boolean sendMouseEvent (NSEvent nsEvent, int type, boolean send)", "diff": ["-void sendMouseEvent (NSEvent nsEvent, int type, int button) {", "-\tEvent event = new Event ();", "-\tevent.button = button;", "-//\tevent.detail = detail;", "-\tevent.count = nsEvent.clickCount();", "-\tNSPoint location = nsEvent.locationInWindow();", "-\tNSPoint point = view.convertPoint_fromView_(location, null);", "-\tevent.x = (int) point.x;", "-\tevent.y = (int) point.y;", "-\tsetInputState (event, nsEvent, type);", "-\tsendEvent (type, event);", "-}", "+boolean sendMouseEvent (NSEvent nsEvent, int type, boolean send) {", "+\tint button = 0;", "+\tswitch (type) {", "+\t\tcase SWT.MouseDown:", "+\t\tcase SWT.MouseUp:", "+\t\t\tbutton = nsEvent.buttonNumber();", "+\t\t\tswitch (button) {", "+\t\t\t\tcase 0: button = 1; break;", "+\t\t\t\tcase 1: button = 3; break;", "+\t\t\t\tcase 2: button = 2; break;", "+\t\t\t\tcase 3: button = 4; break;", "+\t\t\t\tcase 4: button = 5; break;", "+\t\t\t}", "+\t\t\tbreak;", "+\tEvent event = new Event ();", "+\tevent.button = button;", "+//\tevent.detail = detail;", "+\tif (button != 0) {", "+\t\tevent.count = nsEvent.clickCount();", "+\t}", "+\tNSPoint windowPoint = view.window().convertScreenToBase(NSEvent.mouseLocation());", "+\tNSPoint point = view.convertPoint_fromView_(windowPoint, null);", "+\tevent.x = (int) point.x;", "+\tevent.y = (int) point.y;", "+\tsetInputState (event, nsEvent, type);"]}], "num": 15506}