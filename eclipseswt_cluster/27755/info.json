{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "228c3b910d626ab0fda36ec4a1e590b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94531c41a03d25df7b9bd60ba6c54cc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "112135ebf6fa3f329c25a2ce1e629d3b6d0410e9", "commitAfterChange": "165e842fc520954e5381e7d8f37cf34cc184e7fc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["+\tparent.ignoreResize = true;", "+\tint oldWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "+\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "+\t\t\t* column is expanded to fill the client area.  The fix is to", "+\t\t\t* insert and remove a temporary column last column for the", "+\t\t\t* duration of LVM_SETCOLUMNWIDTH.", "+\t\t\t*/", "+\t\t\tboolean fixWidth = index == parent.getColumnCount () - 1;", "+\t\t\tif (fixWidth) {", "+\t\t\t\tLVCOLUMN lvColumn = new LVCOLUMN ();", "+\t\t\t\tlvColumn.mask = OS.LVCF_WIDTH;", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_INSERTCOLUMN, index + 1, lvColumn);", "+\t\t\t}", "+\t\t\tif (fixWidth) {", "+\t\t\t\tOS.SendMessage (hwnd, OS.LVM_DELETECOLUMN, index + 1, 0);", "+\t\t\t}", "+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "+\t\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "+\t\t\t\t* column is expanded to fill the client area.  The fix is to", "+\t\t\t\t* insert and remove a temporary column last column for the", "+\t\t\t\t* duration of LVM_SETCOLUMNWIDTH.", "+\t\t\t\t*/", "+\t\t\t\tboolean fixWidth = index == parent.getColumnCount () - 1;", "+\t\t\t\tif (fixWidth) {", "+\t\t\t\t\tLVCOLUMN lvColumn = new LVCOLUMN ();", "+\t\t\t\t\tlvColumn.mask = OS.LVCF_WIDTH;", "+\t\t\t\t\tOS.SendMessage (hwnd, OS.LVM_INSERTCOLUMN, index + 1, lvColumn);", "+\t\t\t\t}", "+\t\t\t\tif (fixWidth) {", "+\t\t\t\t\tOS.SendMessage (hwnd, OS.LVM_DELETECOLUMN, index + 1, 0);", "+\t\t\t\t}", "+\tparent.ignoreResize = false;", "+\tint newWidth = OS.SendMessage (hwnd, OS.LVM_GETCOLUMNWIDTH, index, 0);", "+\tif (oldWidth != newWidth) {", "+\t\tsendEvent (SWT.Resize);", "+\t\tif (isDisposed ()) return;", "+\t\tTableColumn [] columns = parent.getColumns ();", "+\t\tfor (int i=index + 1; i<columns.length; i++) {", "+\t\t\tif (!columns [i].isDisposed ()) {", "+\t\t\t\tcolumns [i].sendEvent (SWT.Move);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ed65214acb641a986ce5a751411585", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0f19f7facaa6f5437461d810cf683d633c76ff87", "commitAfterChange": "bd05df9dcb7d1652d6e5b72fffe12747a100cab4", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\tif (ignoreResize) {", "-\t\t\t\t/*", "-\t\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "-\t\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "-\t\t\t\t* column is expanded to fill the client area.  The fix is to", "-\t\t\t\t* insert and remove a temporary last column for the duration", "-\t\t\t\t* of LVM_SETCOLUMNWIDTH.  As a result, LVN_GETDISPINFO should", "-\t\t\t\t* be ignored for the temporary column.", "-\t\t\t\t*/", "-\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\t\tif (count == 1 && columns [0] == null) count = 0;", "-\t\t\t\tif (count - 1 >= plvfi.iSubItem) break;", "-\t\t\t}", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "+\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "+\t\t\t* column is expanded to fill the client area.  The fix is to", "+\t\t\t* insert and remove a temporary last column for the duration", "+\t\t\t* of LVM_SETCOLUMNWIDTH.  As a result, LVN_GETDISPINFO should", "+\t\t\t* be ignored for the temporary column.", "+\t\t\t*/", "+\t\t\tif (ignoreResize && (plvfi.iSubItem >= columns.length || columns [plvfi.iSubItem] == null)) break;", "+"]}], "num": 27755}