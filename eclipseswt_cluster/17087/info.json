{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe341a8fee3c71e22eef2bbcb33a2c52", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7554783c1b389f173273c6b732f7d7c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\tint /*long*/ numberOfGlyphs = layoutManager.numberOfGlyphs();", "+\t\tlong /*int*/ numberOfGlyphs = layoutManager.numberOfGlyphs();", "-\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "-\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "+\t\t\t\tlong /*int*/ [] rectCount = new long /*int*/ [1];", "+\t\t\t\tlong /*int*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "-\t\t\tfloat /*double*/ [] fg = gc.data.foreground;", "+\t\t\tdouble /*float*/ [] fg = gc.data.foreground;", "-\t\t\t\t\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "-\t\t\t\t\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "+\t\t\t\t\t\t\t\tlong /*int*/ [] rectCount = new long /*int*/ [1];", "+\t\t\t\t\t\t\t\tlong /*int*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "-\t\t\t\t\t\t\t\tfloat /*double*/ baseline = layoutManager.typesetter().baselineOffsetInLayoutManager(layoutManager, lineStart);", "-\t\t\t\t\t\t\t\tfloat /*double*/ [] color = null;", "+\t\t\t\t\t\t\t\tdouble /*float*/ baseline = layoutManager.typesetter().baselineOffsetInLayoutManager(layoutManager, lineStart);", "+\t\t\t\t\t\t\t\tdouble /*float*/ [] color = null;", "-\t\t\t\t\t\t\t\t\tfloat /*double*/ underlineX = pt.x + rect.x;", "-\t\t\t\t\t\t\t\t\tfloat /*double*/ underlineY = pt.y + rect.y + rect.height - baseline + 1;", "+\t\t\t\t\t\t\t\t\tdouble /*float*/ underlineX = pt.x + rect.x;", "+\t\t\t\t\t\t\t\t\tdouble /*float*/ underlineY = pt.y + rect.y + rect.height - baseline + 1;", "-\t\t\t\t\t\t\t\t\t\t\tpath.setLineDash(new float /*double*/ []{1, 3f}, 2, 0);", "+\t\t\t\t\t\t\t\t\t\t\tpath.setLineDash(new double /*float*/ []{1, 3f}, 2, 0);", "-\t\t\t\t\t\t\t\t\t\t\tfloat /*double*/ lineBottom = pt.y + rect.y + rect.height;", "+\t\t\t\t\t\t\t\t\t\t\tdouble /*float*/ lineBottom = pt.y + rect.y + rect.height;", "-\t\t\t\t\t\t\t\t\t\t\tfloat /*double*/ squigglyY = Math.min(underlineY - squigglyHeight / 2, lineBottom - squigglyHeight - 1);", "+\t\t\t\t\t\t\t\t\t\t\tdouble /*float*/ squigglyY = Math.min(underlineY - squigglyHeight / 2, lineBottom - squigglyHeight - 1);", "-\t\t\t\t\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "-\t\t\t\t\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "+\t\t\t\t\t\t\t\tlong /*int*/ [] rectCount = new long /*int*/ [1];", "+\t\t\t\t\t\t\t\tlong /*int*/ pArray = layoutManager.rectArrayForCharacterRange(range, range, textContainer, rectCount);", "-\t\t\t\t\t\t\t\tfloat /*double*/ [] color = null;", "+\t\t\t\t\t\t\t\tdouble /*float*/ [] color = null;", "-\t\t\t\t\t\t\t\tfloat /*double*/ [] lengths = null;", "+\t\t\t\t\t\t\t\tdouble /*float*/ [] lengths = null;", "-\t\t\t\t\t\t\t\t\tlengths = new float /*double*/[dashes.length];", "+\t\t\t\t\t\t\t\t\tlengths = new double /*float*/[dashes.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9a8dafc4962dde5cc45f993e743b459", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "signatureAfterChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "diff": ["-\tGtkAdjustment adjustment = new GtkAdjustment ();", "-\tOS.memmove (adjustment, hAdjustment, GtkAdjustment.sizeof);", "-\tadjustment.value = (float) selection;", "-\tadjustment.lower = (float) minimum;", "-\tadjustment.upper = (float) maximum;", "-\tadjustment.page_size = (float) thumb;", "-\tadjustment.step_increment = (float) increment;", "-\tadjustment.page_increment = (float) pageIncrement;", "-\tOS.memmove (hAdjustment, adjustment, GtkAdjustment.sizeof);", "+\tGtkAdjustment adjustment = new GtkAdjustment (hAdjustment);", "+\tadjustment.value = (double) selection;", "+\tadjustment.lower = (double) minimum;", "+\tadjustment.upper = (double) maximum;", "+\tadjustment.page_size = (double) thumb;", "+\tadjustment.step_increment = (double) increment;", "+\tadjustment.page_increment = (double) pageIncrement;", "+\tOS.memmove (hAdjustment, adjustment);"]}], "num": 17087}