{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "599c38a76f1b50e3d1437735dad6f725", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc2f93b0e30555910a401788cad5ca94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "19a3ddd19fed46a429f6c36f8cac59dd43f727f3", "commitAfterChange": "babefdbe16d76e76e5ebaa7f5314f9033a6ac58c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  boolean doCommandBySelector (int id, int sel, int selector)", "signatureAfterChange": "  void doCommandBySelector (int id, int sel, int selector)", "diff": ["-boolean doCommandBySelector (int /*long*/ id, int /*long*/ sel, int /*long*/ selector) {", "+void doCommandBySelector (int /*long*/ id, int /*long*/ sel, int /*long*/ selector) {", "-\t\t\tif (translateTraversal (nsEvent.keyCode (), nsEvent, consume)) return false;", "-\t\t\tif (isDisposed ()) return false;", "-\t\t\tif (!sendKeyEvent (nsEvent, SWT.KeyDown)) return false;", "-\t\t\tif (consume [0]) return false;", "+\t\t\tif (translateTraversal (nsEvent.keyCode (), nsEvent, consume)) return;", "+\t\t\tif (isDisposed ()) return;", "+\t\t\tif (!sendKeyEvent (nsEvent, SWT.KeyDown)) return;", "+\t\t\tif (consume [0]) return;", "-\t\tif ((state & CANVAS) != 0) return true;", "+\t\tif ((state & CANVAS) != 0) return;", "-\treturn super.doCommandBySelector (id, sel, selector);", "+\tsuper.doCommandBySelector (id, sel, selector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50822823645b3ece736edf8c5e83d17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "309644bf324d87b6316efb407a46b35c706d2891", "commitAfterChange": "25e0a88282a8f52572829023c99494b77782afb9", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 65, "signatureBeforeChange": "  boolean runInvalidate ()", "signatureAfterChange": "  void invalidateHandler ()", "diff": ["+void invalidateHandler () {", "+\tinvalidateHandler = 0;", "+\tif (invalidate != null) {", "+\t\tControl[] invalidate = this.invalidate;", "+\t\tthis.invalidate = null;", "+\t\tfor (int i = 0; i < invalidate.length; i++) {", "+\t\t\tControl control = invalidate [i];", "+\t\t\tif (control != null && !control.isDisposed()) {", "+\t\t\t\tcontrol.redraw (true);", "+\t\t\t}", "+\t\t}", "+\t}", "+}", "-", "-boolean runInvalidate () {", "-\tif (invalidate == null) return false;", "-\tControl[] invalidate = this.invalidate;", "-\tthis.invalidate = null;", "-\tfor (int i = 0; i < invalidate.length; i++) {", "-\t\tControl control = invalidate [i];", "-\t\tif (control != null && !control.isDisposed()) {", "-\t\t\tcontrol.redraw (true);", "-\t\t}", "-\t}"]}], "num": 43926}