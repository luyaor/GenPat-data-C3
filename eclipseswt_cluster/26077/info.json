{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb4267bb82dde4c687b701582cbdf514", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a691e83ae54250b6200e90063294ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 70, "signatureBeforeChange": "\r int processModify (int callData)", "signatureAfterChange": "\r int XmNvalueChangedCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processModify (int callData) {\r", "-\tif (!ignoreChange) super.processModify (callData);\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XmNvalueChangedCallback (int w, int client_data, int call_data) {\r", "+\tif (!ignoreChange) sendEvent (SWT.Modify);\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b82d211c15288d9299a1ac6cea1e92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r int processSelection (int callData)", "signatureAfterChange": "\r int XmNvalueChangedCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processSelection (int callData) {\r", "-\tif ((style & SWT.RADIO) != 0) {\r", "-\t\tif ((parent.getStyle () & SWT.NO_RADIO_GROUP) == 0) {\r", "-\t\t\tselectRadio ();\r", "-\t\t}\r", "-\t}\r", "-\tupdateShadows ();\r", "-\treturn super.processSelection (callData);\r", "+}\r", "+int XmNvalueChangedCallback (int w, int client_data, int call_data) {\r", "+\tif ((style & SWT.RADIO) != 0) {\r", "+\t\tif ((parent.getStyle () & SWT.NO_RADIO_GROUP) == 0) {\r", "+\t\t\tselectRadio ();\r", "+\t\t}\r", "+\t}\r", "+\tupdateShadows ();\r", "+\tpostEvent (SWT.Selection);\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888f135b9c1872ca7b672cc26b63e692", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r int processSelection (int callData)", "signatureAfterChange": "\r int XmNselectionCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processSelection (int callData) {\r", "-\t/*\r", "-\t* Bug in MOTIF.  If items have been added and removed from a\r", "-\t* combo then users are able to select an empty drop-down item\r", "-\t* in the combo once and force a resulting callback.  In such\r", "-\t* cases we want to eat this callback so that listeners are not\r", "-\t* notified.\r", "-\t*/\r", "-\tif (ignoreSelect || getSelectionIndex() == -1)\r", "-\t\treturn 0;\r", "-\r", "-\treturn super.processSelection(callData);\r", "+}\r", "+int XmNselectionCallback (int w, int client_data, int call_data) {\r", "+\t/*\r", "+\t* Bug in MOTIF.  If items have been added and removed from a\r", "+\t* combo then users are able to select an empty drop-down item\r", "+\t* in the combo once and force a resulting callback.  In such\r", "+\t* cases we want to eat this callback so that listeners are not\r", "+\t* notified.\r", "+\t*/\r", "+\tif (ignoreSelect || getSelectionIndex() == -1) return 0;\r", "+\tpostEvent (SWT.Selection);\r", "+\treturn 0;\r", "+}\r"]}], "num": 26077}