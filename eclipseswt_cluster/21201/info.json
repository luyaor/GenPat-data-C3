{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcc443a5c58f0dceb0d858f1ddd55ff5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99070db4b1fa9183f252863b866a1c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java", "commitBeforeChange": "73710d9f09ebcac462a9041bda5cf1073ef9e063", "commitAfterChange": "7fbb9d1596162f9ad75a1391db3ebadea0726a58", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void createOperationsGroup(Composite parent, int nr)", "signatureAfterChange": "  private void createDragOperations(Composite parent)", "diff": ["-}", "-private void createOperationsGroup(Composite parent, int nr) {", "-\tGroup group = new Group(parent, 0);", "-\tgroup.setLayoutData(createGridData());", "-\tgroup.setLayout(createGridLayout(1));", "-\tgroup.setText(\"Operations(s)\");", "-", "-\t// Create check buttons", "-\topsMove[nr] = new Button(group, SWT.CHECK);", "-\topsMove[nr].setLayoutData(createGridData());\t", "-\topsMove[nr].setText(\"DND.DROP_MOVE\");", "-\topsMove[nr].addSelectionListener(sl);", "-\topsMove[nr].setSelection(true);", "-", "-\topsCopy[nr] = new Button(group, SWT.CHECK);", "-\topsCopy[nr].setLayoutData(createGridData());\t", "-\topsCopy[nr].setText(\"DND.DROP_COPY\");", "-\topsCopy[nr].addSelectionListener(sl);\t\t", "-\t\t", "-\topsLink[nr] = new Button(group, SWT.CHECK);", "-\topsLink[nr].setLayoutData(createGridData());\t", "-\topsLink[nr].setText(\"DND.DROP_LINK\");", "-\topsLink[nr].addSelectionListener(sl);\t\t\t", "-", "-}", "+", "+private void createDragOperations(Composite parent) {", "+\tparent.setLayout(new RowLayout(SWT.VERTICAL));", "+\tfinal Button moveButton = new Button(parent, SWT.CHECK);", "+\tmoveButton.setText(\"DND.DROP_MOVE\");", "+\tmoveButton.setSelection(true);", "+\tdragOperation = DND.DROP_MOVE;", "+\tmoveButton.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdragOperation |= DND.DROP_MOVE;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdragOperation = dragOperation &~DND.DROP_MOVE;", "+\t\t\t\tif (dragOperation == 0) {", "+\t\t\t\t\tdragOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dragEnabled) {", "+\t\t\t\tcreateDragSource();", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+", "+\tButton b = new Button(parent, SWT.CHECK);", "+\tb.setText(\"DND.DROP_COPY\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdragOperation |= DND.DROP_COPY;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdragOperation = dragOperation &~DND.DROP_COPY;", "+\t\t\t\tif (dragOperation == 0) {", "+\t\t\t\t\tdragOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dragEnabled) {", "+\t\t\t\tcreateDragSource();", "+\t\t\t}", "+\t\t}", "+\t});", "+", "+\tb = new Button(parent, SWT.CHECK);", "+\tb.setText(\"DND.DROP_LINK\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdragOperation |= DND.DROP_LINK;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdragOperation = dragOperation &~DND.DROP_LINK;", "+\t\t\t\tif (dragOperation == 0) {", "+\t\t\t\t\tdragOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dragEnabled) {", "+\t\t\t\tcreateDragSource();", "+\t\t\t}", "+\t\t}", "+\t});", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f36a5a5a9fb914d7e4eae61e53f7b572", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java", "commitBeforeChange": "73710d9f09ebcac462a9041bda5cf1073ef9e063", "commitAfterChange": "7fbb9d1596162f9ad75a1391db3ebadea0726a58", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 16, "signatureBeforeChange": " private GridLayout createGridLayout(int cols)", "signatureAfterChange": "  private void createDropOperations(Composite parent)", "diff": ["-}", "-private GridLayout createGridLayout(int cols) {", "-\tGridLayout layout = new GridLayout();", "-\tlayout.numColumns = cols;", "-\tlayout.marginHeight = layout.marginWidth = 0;", "-\treturn layout;", "-}", "+", "+private void createDropOperations(Composite parent) {", "+\tparent.setLayout(new RowLayout(SWT.VERTICAL));", "+\tfinal Button moveButton = new Button(parent, SWT.CHECK);", "+\tmoveButton.setText(\"DND.DROP_MOVE\");", "+\tmoveButton.setSelection(true);", "+\tdropOperation = DND.DROP_MOVE;", "+\tmoveButton.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropOperation |= DND.DROP_MOVE;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdropOperation = dropOperation & ~DND.DROP_MOVE;", "+\t\t\t\tif (dropOperation == 0) {", "+\t\t\t\t\tdropOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dropEnabled) {", "+\t\t\t\tcreateDropTarget();", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+", "+\tButton b = new Button(parent, SWT.CHECK);", "+\tb.setText(\"DND.DROP_COPY\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropOperation |= DND.DROP_COPY;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdropOperation = dropOperation & ~DND.DROP_COPY;", "+\t\t\t\tif (dropOperation == 0) {", "+\t\t\t\t\tdropOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dropEnabled) {", "+\t\t\t\tcreateDropTarget();", "+\t\t\t}", "+\t\t}", "+\t});", "+", "+\tb = new Button(parent, SWT.CHECK);", "+\tb.setText(\"DND.DROP_LINK\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropOperation |= DND.DROP_LINK;\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdropOperation = dropOperation & ~DND.DROP_LINK;", "+\t\t\t\tif (dropOperation == 0) {", "+\t\t\t\t\tdropOperation = DND.DROP_MOVE;", "+\t\t\t\t\tmoveButton.setSelection(true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (dropEnabled) {", "+\t\t\t\tcreateDropTarget();", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+\tb = new Button(parent, SWT.CHECK);", "+\tb.setText(\"DND.DROP_DEFAULT\");", "+\tdefaultParent = new Composite(parent, SWT.NONE);", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropOperation |= DND.DROP_DEFAULT;", "+\t\t\t\tdefaultParent.setVisible(true);\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdropOperation = dropOperation & ~DND.DROP_DEFAULT;", "+\t\t\t\tdefaultParent.setVisible(false);", "+\t\t\t}", "+\t\t\tif (dropEnabled) {", "+\t\t\t\tcreateDropTarget();", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+\tdefaultParent.setVisible(false);", "+\tGridLayout layout = new GridLayout();", "+\tlayout.marginWidth = 20;", "+\tdefaultParent.setLayout(layout);", "+\tLabel label = new Label(defaultParent, SWT.NONE);", "+\tlabel.setText(\"Value for default operation is:\");", "+\tb = new Button(defaultParent, SWT.RADIO);", "+\tb.setText(\"DND.DROP_MOVE\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropDefaultOperation = DND.DROP_MOVE;", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+\tb = new Button(defaultParent, SWT.RADIO);", "+\tb.setText(\"DND.DROP_COPY\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropDefaultOperation = DND.DROP_COPY;", "+\t\t\t}", "+\t\t}", "+\t});", "+", "+\tb = new Button(defaultParent, SWT.RADIO);", "+\tb.setText(\"DND.DROP_LINK\");", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropDefaultOperation = DND.DROP_LINK;", "+\t\t\t}", "+\t\t}", "+\t});", "+\t", "+\tb = new Button(defaultParent, SWT.RADIO);", "+\tb.setText(\"DND.DROP_NONE\");", "+\tb.setSelection(true);", "+\tb.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tButton b = (Button)e.widget;", "+\t\t\tif (b.getSelection()) {", "+\t\t\t\tdropDefaultOperation = DND.DROP_NONE;", "+\t\t\t}", "+\t\t}", "+\t});", "+}"]}], "num": 21201}