{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96f9bd2d9c5dc7d1086f73cedc3cff4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77636cd503e30f188b76c6c76d1cc72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " static int createGdipFont(int hDC, int hFont, int graphics, int fontCollection, int [] outFamily, int[] outFont)", "signatureAfterChange": " static long createGdipFont(long hDC, long hFont, long graphics, long fontCollection, long [] outFamily, long[] outFont)", "diff": ["-static int /*long*/ createGdipFont(int /*long*/ hDC, int /*long*/ hFont, int /*long*/ graphics, int /*long*/ fontCollection, int /*long*/ [] outFamily, int /*long*/[] outFont) {", "-\tint /*long*/ font = Gdip.Font_new(hDC, hFont);", "+static long /*int*/ createGdipFont(long /*int*/ hDC, long /*int*/ hFont, long /*int*/ graphics, long /*int*/ fontCollection, long /*int*/ [] outFamily, long /*int*/[] outFont) {", "+\tlong /*int*/ font = Gdip.Font_new(hDC, hFont);", "-\tint /*long*/ family = 0;", "+\tlong /*int*/ family = 0;", "-\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\t\tint /*long*/ pLogFont = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, LOGFONTW.sizeof);", "+\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\t\t\tlong /*int*/ pLogFont = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, LOGFONTW.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "181af1c182b1ea77861eba463d18b322", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int Prompt (int aParent, int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int Prompt (long aParent, long aDialogTitle, long aText, long aValue, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int Prompt (int /*long*/ aParent, int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aValue, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int Prompt (long /*int*/ aParent, long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aValue, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\tint /*long*/[] valueAddr = new int /*long*/[1];", "+\tlong /*int*/[] valueAddr = new long /*int*/[1];", "-\t\t\tint /*long*/[] result2 = new int /*long*/[1];", "+\t\t\tlong /*int*/[] result2 = new long /*int*/[1];", "-\t\t\tint /*long*/ ptr = memory.Alloc (size);", "+\t\t\tlong /*int*/ ptr = memory.Alloc (size);", "-\t\t\tXPCOM.memmove (aValue, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\t\tXPCOM.memmove (aValue, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcdcd1e3b572b1ff8f385f5135d1920", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Prompter.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int Prompt (int aDialogTitle, int aText, int aValue, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int Prompt (long aDialogTitle, long aText, long aValue, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int Prompt (int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aValue, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int Prompt (long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aValue, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\tint /*long*/[] valueAddr = new int /*long*/[1];", "+\tlong /*int*/[] valueAddr = new long /*int*/[1];", "-\t\t\tint /*long*/[] result2 = new int /*long*/[1];", "+\t\t\tlong /*int*/[] result2 = new long /*int*/[1];", "-\t\t\tint /*long*/ ptr = memory.Alloc (size);", "+\t\t\tlong /*int*/ ptr = memory.Alloc (size);", "-\t\t\tXPCOM.memmove (aValue, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\t\tXPCOM.memmove (aValue, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}], "num": 59923}