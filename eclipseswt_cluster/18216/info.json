{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0b38dfdfb2f6d542153a2b2b60d53a1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ee3200b247aa37927efab421fc56998", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "46958a15f43936733bc819b97c827c339d68bc9e", "commitAfterChange": "01725ae6a7a6992a9a2b62746d985a9d4dbdb4ca", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "  void addEventMethods (int cls, int proc2, int proc3, int drawRectProc, int hitTestProc, int needsDisplayInRectProc)", "signatureAfterChange": "  void addEventMethods (int cls, int proc2, int proc3, int drawRectProc, int hitTestProc, int needsDisplayInRectProc)", "diff": ["+\t\tOS.class_addMethod(cls, OS.sel_touchesBeganWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_touchesMovedWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_touchesEndedWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_touchesCancelledWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_beginGestureWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_endGestureWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_swipeWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_rotateWithEvent_, proc3, \"@:@\");", "+\t\tOS.class_addMethod(cls, OS.sel_magnifyWithEvent_, proc3, \"@:@\");", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24f53b2be0cbe46ca1b3460f434b8e81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "f05507583ad248e056de17ee27461bd6318c7ede", "commitAfterChange": "16730d77453a25a523d339728b8bef3588750685", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void computeRuns ()", "signatureAfterChange": " void computeRuns ()", "diff": ["-\t\t\t\t\t\tpen = OS.gcnew_Pen(brush, 1);", "+\t\t\t\t\t\tpen = OS.gcnew_Pen(brush, 1f);", "-\t\t\t\t\tint underline = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Underline, pen, 0, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "-\t\t\t\t\tOS.TextDecorationCollection_Add(decorations, underline);", "-\t\t\t\t\tOS.GCHandle_Free(underline);", "+\t\t\t\t\tint underline;", "+\t\t\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR:", "+\t\t\t\t\t\t\tint dashStyle = OS.DashStyles_Dash();", "+\t\t\t\t\t\t\tOS.Pen_DashStyle(pen, dashStyle);", "+\t\t\t\t\t\t\tunderline = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Underline, pen, 0, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "+\t\t\t\t\t\t\tOS.TextDecorationCollection_Add(decorations, underline);", "+\t\t\t\t\t\t\tOS.GCHandle_Free(underline);", "+\t\t\t\t\t\t\tOS.GCHandle_Free(dashStyle);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tcase SWT.UNDERLINE_DOUBLE: ", "+\t\t\t\t\t\t\tunderline = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Underline, pen, 1, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "+\t\t\t\t\t\t\tOS.TextDecorationCollection_Add(decorations, underline);", "+\t\t\t\t\t\t\tOS.GCHandle_Free(underline);", "+\t\t\t\t\t\t\t//FALLTHROU", "+\t\t\t\t\t\tcase SWT.UNDERLINE_SINGLE: ", "+\t\t\t\t\t\t\tunderline = OS.gcnew_TextDecoration(OS.TextDecorationLocation_Underline, pen, 0, OS.TextDecorationUnit_FontRecommended, OS.TextDecorationUnit_FontRecommended);", "+\t\t\t\t\t\t\tOS.TextDecorationCollection_Add(decorations, underline);", "+\t\t\t\t\t\t\tOS.GCHandle_Free(underline);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507912f222c6fcfcd5bfc78dff134697", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a75e038ae6bef39441344ae6b25322ac518d2eea", "commitAfterChange": "b5bb1a8c8abcef7b207f3eb7ed36fde14b3c3d7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\tString className = \"SWTWebViewDelegate\"; //$NON-NLS-1$", "-\tif (OS.objc_lookUpClass(className) == 0) {", "+\tif (delegateClass == 0) {", "+\t\tString className = \"SWTWebViewDelegate\"; //$NON-NLS-1$", "+\t\tdelegateClass = OS.objc_allocateClassPair (OS.class_NSObject, className, 0);", "-\t\tint /*long*/ cls = OS.objc_allocateClassPair(OS.class_NSObject, className, 0);", "-\t\tOS.class_addIvar(cls, SWT_OBJECT, size, (byte)align, types);", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didChangeLocationWithinPageForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didFailProvisionalLoadWithError_forFrame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didFinishLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didReceiveTitle_forFrame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didStartProvisionalLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_didCommitLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_resource_didFinishLoadingFromDataSource_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_resource_didFailLoadingWithError_fromDataSource_, proc6, \"@:@@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_identifierForInitialRequest_fromDataSource_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_resource_willSendRequest_redirectResponse_fromDataSource_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_handleNotification_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_createWebViewWithRequest_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webViewShow_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webViewClose_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_contextMenuItemsForElement_defaultMenuItems_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_setStatusBarVisible_, proc4, \"@:@B\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_setResizable_, proc4, \"@:@B\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_setToolbarsVisible_, proc4, \"@:@B\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_setStatusText_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webViewFocus_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webViewUnfocus_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_runJavaScriptAlertPanelWithMessage_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_runJavaScriptConfirmPanelWithMessage_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_runOpenPanelForFileButtonWithResultListener_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_mouseDidMoveOverElement_modifierFlags_, proc5, \"@:@@I\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_printFrameView_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_decidePolicyForMIMEType_request_frame_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_decidePolicyForNavigationAction_request_frame_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_decidePolicyForNewWindowAction_request_newFrameName_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_unableToImplementPolicyWithError_frame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_download_decideDestinationWithSuggestedFilename_, proc4, \"@:@@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_handleEvent_, proc3, \"@:@\"); //$NON-NLS-1$", "-\t\tOS.class_addMethod(cls, OS.sel_webView_setFrame_, setFrameProc, \"@:@{NSRect}\"); //$NON-NLS-1$", "-\t\tOS.objc_registerClassPair(cls);", "+\t\tOS.class_addIvar(delegateClass, SWT_OBJECT, size, (byte)align, types);", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didChangeLocationWithinPageForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didFailProvisionalLoadWithError_forFrame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didFinishLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didReceiveTitle_forFrame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didStartProvisionalLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_didCommitLoadForFrame_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_resource_didFinishLoadingFromDataSource_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_resource_didFailLoadingWithError_fromDataSource_, proc6, \"@:@@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_identifierForInitialRequest_fromDataSource_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_resource_willSendRequest_redirectResponse_fromDataSource_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_handleNotification_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_createWebViewWithRequest_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webViewShow_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webViewClose_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_contextMenuItemsForElement_defaultMenuItems_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_setStatusBarVisible_, proc4, \"@:@B\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_setResizable_, proc4, \"@:@B\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_setToolbarsVisible_, proc4, \"@:@B\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_setStatusText_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webViewFocus_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webViewUnfocus_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_runJavaScriptAlertPanelWithMessage_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_runJavaScriptConfirmPanelWithMessage_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_runOpenPanelForFileButtonWithResultListener_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_mouseDidMoveOverElement_modifierFlags_, proc5, \"@:@@I\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_printFrameView_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_decidePolicyForMIMEType_request_frame_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_decidePolicyForNavigationAction_request_frame_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_decidePolicyForNewWindowAction_request_newFrameName_decisionListener_, proc7, \"@:@@@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_unableToImplementPolicyWithError_frame_, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_download_decideDestinationWithSuggestedFilename_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_handleEvent_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_setFrame_, setFrameProc, \"@:@{NSRect}\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_webView_windowScriptObjectAvailable_, proc4, \"@:@@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(delegateClass, OS.sel_callJava, proc5, \"@:@@@\"); //$NON-NLS-1$", "+\t\tOS.objc_registerClassPair(delegateClass);", "+", "+ \t\tint /*long*/ metaClass = OS.objc_getMetaClass (className);", "+\t\tOS.class_addMethod(metaClass, OS.sel_isSelectorExcludedFromWebScript_, proc3, \"@:@\"); //$NON-NLS-1$", "+\t\tOS.class_addMethod(metaClass, OS.sel_webScriptNameForSelector_, proc3, \"@:@\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ced44b11ad72200f923d65828ce0b2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ColorMenu.java", "commitBeforeChange": "c327fc3f4b8bf26c4623cadeef77e521a02c4b24", "commitAfterChange": "209f51079f19d7fa93af90aeb940601ba3ef3375", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\t \t\tpublic void handleEvent(Event event)", "signatureAfterChange": "  \t\tpublic void handleEvent(Event event)", "diff": ["-\t\t", "+", "-\t\t\t\tDisplay display = Display.getCurrent();", "+\t\t\t\tDisplay display = event.display;", "+\t\t\t\t\tgb.setThumbNail(customImage);", "+\t\t\t\t\tresources.add(customColor);", "+\t\t\t\t\tresources.add(customImage);", "+\t\t\t\t\tif (customImageThumb != null) customImageThumb.dispose();", "+\t\t\t\t\tcustomImageThumb = GraphicsExample.createThumbnail(display, name);", "+\t\t\t\t\tgb.setThumbNail(customImageThumb);", "-\t\t\t\t\titem.setImage(customImage);", "+\t\t\t\t\titem.setImage(customImageThumb);", "+\t\t\t\t\tresources.add(customImageThumb);", "-\t\t\t\t\tdialog.setFirstColor(background.getBgColor1());", "-\t\t\t\t\tdialog.setSecondColor(background.getBgColor2());", "-\t\t\t\t\t}", "+\t\t\t\t\t\tif (background.getBgColor1() != null)", "+\t\t\t\t\t\t\tdialog.setFirstRGB(background.getBgColor1().getRGB());", "+\t\t\t\t\t\tif (background.getBgColor2() != null)", "+\t\t\t\t\t\t\tdialog.setSecondRGB(background.getBgColor2().getRGB());\t\t\t\t\t\t", "+\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\t\tColor colorA = dialog.getFirstColor();", "-\t\t\t\t\tColor colorB = dialog.getSecondColor();", "+\t\t\t\t\tColor colorA = new Color(display, dialog.getFirstRGB());", "+\t\t\t\t\tColor colorB = new Color(display, dialog.getSecondRGB());", "+\t\t\t\t\tgb.setThumbNail(customImage);", "+\t\t\t\t\tresources.add(customImage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8364acdf0f6bf5b192aa83ffb0e5920e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "4104b9f9d66e403b97927169bc9e5cb2ff154d23", "commitAfterChange": "161705abc7f83a995828d114365e105c5a84b218", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["-\t\t\tlvColumn.mask = OS.LVCF_TEXT;", "+\t\t\tlvColumn.mask = OS.LVCF_TEXT | OS.LVCF_IMAGE | OS.LVCF_WIDTH | OS.LVCF_FMT;", "+\t\t\tlvColumn.iImage = OS.I_IMAGENONE;", "+\t\t\tlvColumn.fmt = OS.LVCFMT_LEFT;", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6) {", "+\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\thdItem.mask = OS.HDI_FORMAT | OS.HDI_IMAGE;", "+\t\t\t\thdItem.fmt &= ~(OS.HDF_SORTUP | OS.HDF_SORTDOWN | OS.HDF_IMAGE);", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_SETITEM, index, hdItem);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf1cbfc6677b1dbeef5b5cd43fbd1e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "d788682177c71b9f6710f57221096232e9be5c17", "commitAfterChange": "da2976a0ad22d6b8fe6461f90d599d2dc4f8dfe5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint osChildID = getChildIDFromEvent(theEvent);", "+\t\tint[] osChildID = new int[1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, null, 4, null, osChildID);", "-\t\tevent.childID = ACC.CHILDID_MULTIPLE; // set to impossible value to test if app resets", "+\t\tevent.childID = ACC.CHILDID_MULTIPLE; // set to invalid value, to test if the application sets it in getFocus()", "+", "+\t\t/* The application can optionally answer an accessible. */", "-\t\t\tif (OS.CFEqual(event.accessible.axuielementref, osChildID)) {", "-\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {true});", "-\t\t\t\treturn OS.noErr;", "-\t\t\t}", "+\t\t\tboolean hasFocus = OS.CFEqual(event.accessible.axuielementref, osChildID[0]);", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "+\t\t\treturn OS.noErr;", "+\t\t}", "+\t\t", "+\t\t/* Or the application can answer a valid child ID, including CHILDID_SELF and CHILDID_NONE. */", "+\t\tif (event.childID == ACC.CHILDID_SELF) {", "+\t\t\tboolean hasFocus = OS.CFEqual(axuielementref, osChildID[0]);", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "+\t\t\treturn OS.noErr;", "-\t\t\tboolean hasFocus = OS.CFEqual(childIDToOs(event.childID), osChildID); // This will test for CHILDID_SELF also.", "+\t\t\t/* Other valid childID. */", "+\t\t\tint childID = osToChildID(osChildID[0]);", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {event.childID == childID});", "+\t\t\treturn OS.noErr;", "+\t\t}", "+", "+\t\t/* Invalid childID means that application did not implement getFocus, so return the native focus. */", "+\t\tif (OS.CFEqual(axuielementref, osChildID[0])) {", "+\t\t\tboolean hasFocus =  control.isFocusControl();", "-\t\t// TODO: If the app does not implement getFocus, return the native focus", "-//\t\tif (OS.CFEqual(axuielementref, osChildID)) {", "-//\t\t\tboolean hasFocus = control.isFocusControl();", "-//\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "-//\t\t\treturn OS.noErr;", "-//\t\t}"]}], "num": 18216}