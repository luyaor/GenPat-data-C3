{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6bb2610002f5c8e6d209aa76c85781b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b53ee26cdf857706e9721fe8ef92f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "7ffe87962046d735f644913e9a196819a8c97052", "commitAfterChange": "8de03a68a55b2a23bdf2a3ae193340326ee0388e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["-\tint[] types = _getAvailableTypes();", "-\tString[] result = new String[types.length];", "+\tint[] types1 = getAvailableClipboardTypes();", "+\tint[] types2 = getAvailablePrimaryTypes();", "+\tString[] result = new String[types1.length + types2.length];", "-\tfor (int i = 0; i < types.length; i++) {", "-\t\tint /*long*/ pName = OS.gdk_atom_name(types[i]);", "+\tfor (int i = 0; i < types1.length; i++) {", "+\t\tint /*long*/ pName = OS.gdk_atom_name(types1[i]);", "-\t\tresult[count++] = new String (Converter.mbcsToWcs (null, buffer));", "+\t\tresult[count++] = \"GTKCLIPBOARD \"+new String (Converter.mbcsToWcs (null, buffer));", "-\tif (count < types.length){", "+\tfor (int i = 0; i < types2.length; i++) {", "+\t\tint /*long*/ pName = OS.gdk_atom_name(types2[i]);", "+\t\tif (pName == 0) {", "+\t\t\tcontinue;", "+\t\t}", "+\t\tbyte[] buffer = new byte [OS.strlen(pName)];", "+\t\tOS.memmove (buffer, pName, buffer.length);", "+\t\tOS.g_free (pName);", "+\t\tresult[count++] = \"GTKPRIMARYCLIPBOARD \"+new String (Converter.mbcsToWcs (null, buffer));", "+\t}", "+\tif (count < result.length){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b9dc6754d172663c87228aa5f4e8d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "8ee5446049832fb95869ef7d88fac7470ab449bb", "commitAfterChange": "8a253af8027db45e0c06af3ad4b673bda61857c6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public String getSelectionText ()", "signatureAfterChange": " public String getSelectionText ()", "diff": ["-\t/*", "-\t* NOTE: The current implementation uses substring ()", "-\t* which can reference a potentially large character", "-\t* array.", "-\t*/", "-\tPoint selection = getSelection ();", "-\treturn getText ().substring (selection.x, selection.y);", "+\tint length = OS.GetWindowTextLength (handle);", "+\tif (length == 0) return \"\";", "+\tint [] start = new int [1], end = new int [1];", "+\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "+\tif (start [0] == end [0]) return \"\";", "+\tTCHAR buffer = new TCHAR (getCodePage (), length + 1);", "+\tOS.GetWindowText (handle, buffer, length + 1);", "+\treturn buffer.toString (start [0], end [0] - start [0]);"]}], "num": 4072}