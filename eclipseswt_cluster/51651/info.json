{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "58d42998d00e93fab1d27ad8f1f868a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9455199d9bfd24df7ba6bf46c0f6f77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tint atkObject_ref_state_set ()", "signatureAfterChange": "  \tstatic int atkObject_ref_state_set (int atkObject)", "diff": ["-\tint atkObject_ref_state_set () {", "+\tstatic int atkObject_ref_state_set (int atkObject) {", "+\t\tif (DEBUG) System.out.println (\"-->atkObject_ref_state_set\");", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object == null) return 0;", "-\t\tint superType = ATK.g_type_class_peek (parentType);", "+\t\tint superType = ATK.g_type_class_peek (object.parentType);", "-\t\t\tparentResult = ATK.call (objectClass.ref_state_set, handle);", "+\t\t\tparentResult = ATK.call (objectClass.ref_state_set, object.handle);", "-\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tAccessibleControlListener[] listeners = object.getControlListeners ();", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\tevent.childID = id;", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (object);", "+\t\tevent.childID = object.id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0ad16eca9f926302a4a2db27290d9c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t  \tint atkObject_get_n_children ()", "signatureAfterChange": "\t  \tstatic int atkObject_get_n_children (int atkObject)", "diff": ["-\tint atkObject_get_n_children () {", "+\tstatic int atkObject_get_n_children (int atkObject) {", "+\t\tif (DEBUG) System.out.println (\"-->atkObject_get_n_children: \" + atkObject);", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object == null) return 0;", "-\t\tint superType = ATK.g_type_class_peek (parentType);", "+\t\tint superType = ATK.g_type_class_peek (object.parentType);", "-\t\t\tparentResult = ATK.call (objectClass.get_n_children, handle);", "+\t\t\tparentResult = ATK.call (objectClass.get_n_children, object.handle);", "-\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tAccessibleControlListener[] listeners = object.getControlListeners ();", "-\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\tevent.childID = id;", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (object);", "+\t\tevent.childID = object.id;"]}], "num": 51651}