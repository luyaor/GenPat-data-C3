{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0a3d006559e4c56b4f24e3368937e78", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ff6278cda28db5773ed136a0f04587", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 17, "signatureBeforeChange": " static String[] getExtensions(Display display)", "signatureAfterChange": " static String[] getExtensions(Display display)", "diff": ["-\tif (desktop == DESKTOP_GNOME) mimeInfo = gnome_getMimeInfo(display);", "+\tswitch (desktop) {", "+\t\tcase DESKTOP_GNOME: mimeInfo = gnome_getMimeInfo(); break;", "+\t\tcase DESKTOP_KDE: mimeInfo = kde_getMimeInfo(); break;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93f3f11f66dc47d0701913490aef5c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "b0ce542f60cb1fa151f351ae95b6b82622586687", "commitAfterChange": "0e44312d8bacf7415657253a36f4b5c4ce37fd23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\t\tif (!OS.IsWinCE) {", "+\t\tif (!OS.IsWinCE && USE_HOOK) {", "-\tif (OS.CommDlgExtendedError () == OS.FNERR_INVALIDFILENAME) {", "-\t\tOS.MoveMemory (lpstrFile, new TCHAR (0, \"\", true), TCHAR.sizeof);", "-\t\tsuccess = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);", "+\tswitch (OS.CommDlgExtendedError ()) {", "+\t\tcase OS.FNERR_INVALIDFILENAME:", "+\t\t\tOS.MoveMemory (lpstrFile, new TCHAR (0, \"\", true), TCHAR.sizeof);", "+\t\t\tsuccess = (save) ? OS.GetSaveFileName (struct) : OS.GetOpenFileName (struct);", "+\t\t\tbreak;", "+\t\tcase OS.FNERR_BUFFERTOOSMALL: ", "+\t\t\tUSE_HOOK = true;", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80095e75bf4ade1e33d353e9709ccb14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "20f0171850697bbd54191846f4b1523289117444", "commitAfterChange": "f462669e970460bddf7baab0e5475c20d3df4fdc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  @Override void updateBackgroundColor ()", "signatureAfterChange": "  @Override void updateBackgroundColor ()", "diff": ["-\tif (applyThemeBackground ()) {", "-\t\tstate |= THEME_BACKGROUND;", "-\t} else {", "-\t\tstate &= ~THEME_BACKGROUND;", "+\tswitch (applyThemeBackground ()) {", "+\t\tcase 0: state &= ~THEME_BACKGROUND; break;", "+\t\tcase 1: state |= THEME_BACKGROUND; break;", "+\t\tdefault: /* No change */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a730d8a4a13db92ec1ebb01e44dfc53d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "b181daebd9df7df3f94c04f9f49871a9297d5975", "commitAfterChange": "e8821205e4acac4ef6d9126d8df658071d8ab9df", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\tif (wParam == OS.VK_RETURN) {", "-\t\tpostEvent (SWT.DefaultSelection);", "+\t/*", "+\t* Feature in Windows.  For some reason, when the", "+\t* widget is a single line text widget, when the", "+\t* user presses tab or return, Windows beeps.", "+\t* The fix is to look for these keys and not call", "+\t* the window proc.", "+\t*/", "+\tswitch (wParam) {", "+\t\tcase OS.VK_RETURN:", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\t// FALL THROUGH", "+\t\tcase OS.VK_TAB: return LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b796d227d7db07f7e5e5be5d5754e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d591115018ac1c3832516a212e7f29553fb725e8", "commitAfterChange": "985580b851b6889e225f6394fc5db0c3f7391879", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void sendFocusEvent (int type, boolean post)", "signatureAfterChange": "  void sendFocusEvent (int type, boolean post)", "diff": ["-\t}", "-\t", "+\t}\t", "-\t\tif (type == SWT.FocusIn) {", "-\t\t\tshell.setActiveControl (this);", "-\t\t} else {", "-\t\t\tDisplay display = shell.display;", "-\t\t\tControl control = display.getFocusControl ();", "-\t\t\tif (control == null || shell != control.getShell () ) {", "-\t\t\t\tshell.setActiveControl (null);", "-\t\t\t}", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn:", "+\t\t\t\tshell.setActiveControl (this);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "+\t\t\t\tDisplay display = shell.display;", "+\t\t\t\tControl control = display.getFocusControl ();", "+\t\t\t\tif (control == null || shell != control.getShell () ) {", "+\t\t\t\t\tshell.setActiveControl (null);", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}], "num": 52267}