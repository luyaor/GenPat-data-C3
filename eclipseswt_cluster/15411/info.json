{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "412824e8ba38d4536cf782da73267e48", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a53ba68d6c576d3ac56afbef08109e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java", "commitBeforeChange": "9cb7cdf84ef357a2976f30c6ee9f378ab567fe22", "commitAfterChange": "56d76e4b0945ff69b2f44650754e87b2a4096c41", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private void createDragTypes(Composite parent)", "signatureAfterChange": "  private void createDragTypes(Composite parent)", "diff": ["-\tComposite c = new Composite(parent, SWT.NONE);", "-\tc.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "-\tGridLayout layout = new GridLayout(3, false);", "-\tlayout.marginHeight = layout.marginWidth = 0;", "-\tc.setLayout(layout);", "-\tb = new Button(c, SWT.CHECK);", "+\t", "+\tb = new Button(parent, SWT.CHECK);", "-\tb = new Button(c, SWT.PUSH);", "+\tb = new Button(parent, SWT.PUSH);", "-\tfileList = new List(c, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);", "+\tfileList = new List(parent, SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b5919b806a5a8a30780cb0c336ae206", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "55ae6661d0e1c4e66dbda2710880e098c59b9197", "commitAfterChange": "fd8c3687aaa8843179b1c8e9057123d1c6cb0072", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["-\tif (!showBorder) {", "+\tif (!showBorder || border == 1) {", "-\t\tColor c = new Color(getDisplay(), borderRGB);", "-\t\tgc.setBackground(c);", "+\t\tgc.setBackground(borderColor);", "-\t\tc.dispose();", "-\t\t\tColor c = new Color(getDisplay(), borderRGB);", "-\t\t\tgc.setForeground(c);", "+\t\t\tif (border == 1) height += 2;", "+\t\t\tgc.setForeground(borderColor);", "-\t\t\tc.dispose();", "-\t\t\tColor c = new Color(getDisplay(), borderRGB);", "-\t\t\tgc.setForeground(c);", "+\t\t\tgc.setForeground(borderColor);", "-\t\t\tc.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fefeaf2ddd33847880f20d314b1018f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a4a495e41bd5013cde5ef5ed11d32b81bdea7974", "commitAfterChange": "1c16a64584c10811be25bc2b538d561bcb86b0e1", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  static int performKeyEquivalent(int id, int sel, int arg)", "signatureAfterChange": "  boolean performKeyEquivalent(NSWindow window, NSEvent nsEvent)", "diff": ["-static int /*long*/ performKeyEquivalent(int /*long*/ id, int /*long*/ sel, int /*long*/ arg) {", "-\tNSEvent nsEvent = new NSEvent(arg);", "+boolean performKeyEquivalent(NSWindow window, NSEvent nsEvent) {", "+\tif (modalDialog == null) return false;", "+\tif (nsEvent.type() != OS.NSKeyDown) return false;", "-\t\t\treturn 1;", "+\t\t\treturn true;", "-", "-\tobjc_super super_struct = new objc_super();", "-\tsuper_struct.receiver = id;", "-\tsuper_struct.super_class = OS.objc_msgSend(id, OS.sel_superclass);", "-\treturn OS.objc_msgSendSuper(super_struct, sel, arg);", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654eb5bbdad0ea055aa4d6556bd3a1e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ec7edbaede68f4fd7608786e759e23fd6dbe2200", "commitAfterChange": "b206c3d5f3a448a2b6dfbc2c13ed7e271cef1597", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r void initializeFonts()", "signatureAfterChange": "\r \tvoid initializeRenderer()", "diff": ["+\t */\r", "+\tvoid initializeRenderer() {\r", "+\t\tRectangle trim = printer.computeTrim(0, 0, 0, 0);\r", "+\t\tPoint dpi = printer.getDPI();\r", "+\t\t\r", "+\t\tprinterFont = new Font(printer, displayFontData.getName(), displayFontData.getHeight(), SWT.NORMAL);\r", "+\t\tclientArea = printer.getClientArea();\r", "+\t\t// one inch margin around text\r", "+\t\tclientArea.x = dpi.x + trim.x; \t\t\t\t\r", "+\t\tclientArea.y = dpi.y + trim.y;\r", "+\t\tclientArea.width -= (clientArea.x + trim.width);\r", "+\t\tclientArea.height -= (clientArea.y + trim.height);\r", "+\t\t\r", "+\t\tgc = new GC(printer);\r", "+\t\tgc.setFont(printerFont);\t\t\t\t\r", "+\t\trenderer = new PrintRenderer(\r", "+\t\t\tprinter, printerFont, isBidi(), gc, printerContent,\r", "+\t\t\tlineBackgrounds, lineStyles, bidiSegments, \r", "+\t\t\ttabLength, clientArea);\r", "+\t\tpageSize = clientArea.height / renderer.getLineHeight();\r", "+\t\tstartLine = (startPage - 1) * pageSize;\r", "+\t\tendLine = Math.max(Integer.MAX_VALUE, endPage * pageSize);\r", "+\t}\r", "-void initializeFonts() {\r", "-\tFontData fontData;\r", "-\tGC gc = new GC(this);\r", "-\r", "-\tlineEndSpaceWidth = gc.stringExtent(\" \").x;\r", "-\tregularFont = getFont();\r", "-\tfontData = regularFont.getFontData()[0];\r", "-\tfontData.setStyle(fontData.getStyle() | SWT.BOLD);\r", "-\tboldFont = new Font(getDisplay(), fontData);\r", "-\tgc.dispose();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8122aacfb7fa473f213fcb01d6fd7bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f7bdfeaca66551459b7c914c135596ff9f1c605a", "commitAfterChange": "10901b0cf7d5fa05215acb3fa519206e874791dd", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 49, "signatureBeforeChange": " public TreeItem[] getSelection ()", "signatureAfterChange": " public TreeItem[] getSelection ()", "diff": ["-\t\tint [] treeSelection = new int [count];", "+\t\tTreeItem [] treeSelection = new TreeItem [count];", "-\t\t\t\tint [] index = new int [1];", "-\t\t\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "-\t\t\t\ttreeSelection [length] = index [0];", "+\t\t\t\ttreeSelection [length] = _getItem (iter);", "-\t\tTreeItem [] result = new TreeItem [length];", "-\t\tfor (int i=0; i<result.length; i++) result [i] = items [treeSelection [i]];", "-\t\treturn result;", "+\t\tif (length < count) {", "+\t\t\tTreeItem [] temp = new TreeItem [length];", "+\t\t\tSystem.arraycopy(treeSelection, 0, temp, 0, length);", "+\t\t\ttreeSelection = temp;", "+\t\t}", "+\t\treturn treeSelection;"]}], "num": 15411}