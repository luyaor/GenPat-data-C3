{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5540a161c6c80229b543c6dcafb4f2ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a7cac56126fda874a8d143833fce5b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public void setText (String string)", "signatureAfterChange": "\r public void setText (String string)", "diff": ["-*/\r", "+ */\r", "-\tchar [] text = new char [string.length ()];\r", "-\tstring.getChars (0, text.length, text, 0);\r", "+\ttext = string;\r", "+\t\r", "+\t/* Strip out mnemonic marker symbols, and remember the mnemonic. */\r", "+\tchar [] unicode = new char [string.length ()];\r", "+\tstring.getChars (0, unicode.length, unicode, 0);\r", "-\twhile (i < text.length) {\r", "-\t\tif ((text [j++] = text [i++]) == Mnemonic) {\r", "-\t\t\tif (i == text.length) {continue;}\r", "-\t\t\tif (text [i] == Mnemonic) {i++; continue;}\r", "-\t\t\tif (mnemonic == 0) mnemonic = text [i];\r", "+\twhile (i < unicode.length) {\r", "+\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {\r", "+\t\t\tif (i == unicode.length) {continue;}\r", "+\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}\r", "+\t\t\tif (mnemonic == 0) mnemonic = unicode [i];\r", "-\twhile (j < text.length) text [j++] = 0;\r", "-\tbyte [] buffer = Converter.wcsToMbcs (null, text, true);\r", "+\twhile (j < unicode.length) unicode [j++] = 0;\r", "+\t\r", "+\t/* Wrap the text if necessary, and convert to mbcs. */\r", "+\tbyte [] buffer;\r", "+\tif ((style & SWT.WRAP) != 0) {\r", "+\t\tint [] argList = {\r", "+\t\t\tOS.XmNfontList, 0,     /* 1 */\r", "+\t\t\tOS.XmNwidth, 0,        /* 3 */\r", "+\t\t\tOS.XmNmarginLeft, 0,   /* 5 */\r", "+\t\t\tOS.XmNmarginRight, 0,  /* 7 */\r", "+\t\t\tOS.XmNborderWidth, 0,  /* 9 */\r", "+\t\t\tOS.XmNmarginWidth, 0,  /* 11 */\r", "+\t\t};\r", "+\t\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\t\tint width = argList [3] - argList [5] - argList [7] - argList [9] * 2 - argList [11] * 2;\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tif (mnemonic != 0) string = new String(unicode);\r", "+\t\tstring = display.wrapText (string, argList [1], width);\r", "+\t\tbuffer = Converter.wcsToMbcs (null, string, true);\r", "+\t} else {\r", "+\t\tbuffer = Converter.wcsToMbcs (null, unicode, true);\r", "+\t}\r", "+\t\r", "-\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);\r", "+\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tif (mnemonic == 0) mnemonic = OS.XK_VoidSymbol;\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e77d088a7af6ce0cb42df372010ee0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r public void setText (String string)", "signatureAfterChange": "\r \r public void setText (String string)", "diff": ["-\tchar [] text = new char [string.length ()];\r", "-\tstring.getChars (0, text.length, text, 0);\r", "+\ttext = string;\r", "+\tchar [] unicode = new char [string.length ()];\r", "+\tstring.getChars (0, unicode.length, unicode, 0);\r", "-\twhile (i < text.length) {\r", "-\t\tif ((text [j++] = text [i++]) == Mnemonic) {\r", "-\t\t\tif (i == text.length) {continue;}\r", "-\t\t\tif (text [i] == Mnemonic) {i++; continue;}\r", "-\t\t\tif (mnemonic == 0) mnemonic = text [i];\r", "+\twhile (i < unicode.length) {\r", "+\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {\r", "+\t\t\tif (i == unicode.length) {continue;}\r", "+\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}\r", "+\t\t\tif (mnemonic == 0) mnemonic = unicode [i];\r", "-\twhile (j < text.length) text [j++] = 0;\r", "-\tbyte [] buffer = Converter.wcsToMbcs (null, text, true);\r", "+\twhile (j < unicode.length) unicode [j++] = 0;\r", "+\t/* Wrap the text if necessary, and convert to mbcs. */\r", "+\tbyte [] buffer;\r", "+\tif ((style & SWT.WRAP) != 0) {\r", "+\t\tint [] args = {\r", "+\t\t\tOS.Pt_ARG_TEXT_FONT, 0, 0,\t\t// 1\r", "+\t\t\tOS.Pt_ARG_WIDTH, 0, 0,\t\t\t// 4\r", "+\t\t\tOS.Pt_ARG_MARGIN_WIDTH, 0, 0,\t// 7\r", "+\t\t\tOS.Pt_ARG_MARGIN_LEFT, 0, 0,\t// 10\r", "+\t\t\tOS.Pt_ARG_MARGIN_RIGHT, 0, 0,\t// 13\r", "+\t\t};\r", "+\t\tOS.PtGetResources (handle, args.length / 3, args);\r", "+\t\tint length = OS.strlen (args [1]);\r", "+\t\tbyte [] font = new byte [length + 1];\r", "+\t\tOS.memmove (font, args [1], length);\r", "+\t\tint border = 0;\r", "+\t\tif ((style & SWT.BORDER) != 0) border = 2;\r", "+\t\tint width = args [4];\r", "+\t\twidth -= (args [7] * 2) + args [10] + args [13] + border * 2;\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tif (mnemonic != '\\0') string = new String (unicode);\r", "+\t\tstring = display.wrapText (string, font, width);\r", "+\t\tbuffer = Converter.wcsToMbcs (null, string, true);\r", "+\t} else {\r", "+\t\tbuffer = Converter.wcsToMbcs (null, unicode, true);\r", "+\t}\r", "+\treplaceMnemonic (mnemonic, 0);\r"]}], "num": 46411}