{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbfae5343492fff6948690468323ae01", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43fe012e177cd2f74da5fca5b76d8a3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "31462aa64c613f1f396a319c52c06f3d03b3cf9e", "commitAfterChange": "7add66a49dd4237025fd3d0537eeee6f7c1d3c8b", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  boolean translateTraversal (MSG msg)", "signatureAfterChange": "  boolean translateTraversal (MSG msg)", "diff": ["-\t\t\t/*", "-\t\t\t* NOTE: This code causes Shift+Tab and Ctrl+Tab to", "-\t\t\t* always attempt traversal which is not correct.", "-\t\t\t* The default should be the same as a plain Tab key.", "-\t\t\t* This behavior is currently relied on by StyledText.", "-\t\t\t*", "-\t\t\t* The correct behavior is to give every key to a", "-\t\t\t* control that answers DLGC_WANTALLKEYS.", "-\t\t\t*/", "-\t\t\t\tif (next && OS.GetKeyState (OS.VK_CONTROL) >= 0) doit = false;", "+\t\t\t\t/*", "+\t\t\t\t* Use DLGC_HASSETSEL to determine that the control is a", "+\t\t\t\t* text widget.  If the control is a text widget, then", "+\t\t\t\t* Ctrl+Tab and Shift+Tab should traverse out of the widget.", "+\t\t\t\t* If the control is not a text widget, the correct behavior", "+\t\t\t\t* is to give every character, including Tab, Ctrl+Tab and", "+\t\t\t\t* Shift+Tab to the control.", "+\t\t\t\t*/", "+\t\t\t\tif ((code & OS.DLGC_HASSETSEL) != 0) {", "+\t\t\t\t\tif (next && OS.GetKeyState (OS.VK_CONTROL) >= 0) {", "+\t\t\t\t\t\tdoit = false;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tdoit = false;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e9d35ef94a3a2bd932bc5741aeb8de9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "61db1d1da314f29181799c8e2b728e6b2f48ab80", "commitAfterChange": "d472cc41c2669a9cae657f96b8773cc2f2aa8890", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  boolean translateTraversal (MSG msg)", "signatureAfterChange": "  boolean translateTraversal (MSG msg)", "diff": ["-\t\t\t/*", "-\t\t\t* The fact that this code is commented causes Ctrl+PgUp", "-\t\t\t* and Ctrl+PgDn to always attempt traversal which is not", "-\t\t\t* correct.  This behavior is relied on by StyledText.", "-\t\t\t* ", "-\t\t\t* The correct behavior is to give every key to a control", "-\t\t\t* that answers DLGC_WANTALLKEYS.", "-\t\t\t*/", "-//\t\t\tint code = OS.SendMessage (hwnd, OS., 0, 0);", "-//\t\t\tif ((code & OS.DLGC_WANTALLKEYS) != 0) doit = false;", "+\t\t\tint code = OS.SendMessage (hwnd, OS.WM_GETDLGCODE, 0, 0);", "+\t\t\tif ((code & OS.DLGC_WANTALLKEYS) != 0) {", "+\t\t\t\t/*", "+\t\t\t\t* Use DLGC_HASSETSEL to determine that the control is a", "+\t\t\t\t* text widget.  If the control is a text widget, then", "+\t\t\t\t* Ctrl+PgUp and Ctrl+PgDn should traverse out of the widget.", "+\t\t\t\t*/", "+\t\t\t\tif ((code & OS.DLGC_HASSETSEL) == 0) doit = false;", "+\t\t\t}"]}], "num": 48635}