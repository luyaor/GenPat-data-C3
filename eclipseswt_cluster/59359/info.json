{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea587c25df5b4a8d60581ae4b63a4d34", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63c2caffd081d3d4c7c596a97e8490fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2da14226ad0194251d73fcc9e143564faa5e089c", "commitAfterChange": "8a38e5075e653df3889cb080a0f04508bee57d8f", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 66, "signatureBeforeChange": " public Point textExtent(String string)", "signatureAfterChange": "\r public Point textExtent(String string, int flags)", "diff": ["+ */\r", "+public Point textExtent(String string, int flags) {\r", "-\tbyte [] textBuffer = Converter.wcsToMbcs (getCodePage (), string, true);\r", "-\tint xmString = OS.XmStringGenerate(textBuffer, null, OS.XmCHARSET_TEXT, _MOTIF_DEFAULT_LOCALE);\r", "+\r", "+\tint tableLength = 0;\r", "+\tDevice device = data.device;\r", "+\tint[] parseTable = new int[2];\r", "+\tchar[] text = new char[string.length()];\r", "+\tstring.getChars(0, text.length, text, 0);\t\r", "+\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;\r", "+\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;\r", "+\tif ((flags & SWT.DRAW_MNEMONIC) != 0) stripMnemonic(text);\t\r", "+\r", "+\tbyte[] buffer = Converter.wcsToMbcs(getCodePage(), text, true);\r", "+\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab110a9916fc449b757d1dbb62b3e795", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "37c2198a0078851bae95adad18ac2bcab12b7c0a", "commitAfterChange": "19989c4fec88a024fca05eb48c8712aef47d01b1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "diff": ["-\tint pos;", "-\tif (OS.IsWinCE) {", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xFFFF;", "-\t} else {", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS32, 0, 0);", "+\t", "+\t/* Increment the value */", "+\tint delta = 0;", "+\tswitch (wParam) {", "+\t\tcase OS.VK_UP: delta = increment; break;", "+\t\tcase OS.VK_DOWN: delta = -increment; break;", "+\t\tcase OS.VK_PRIOR: delta = pageIncrement; break;", "+\t\tcase OS.VK_NEXT: delta = -pageIncrement; break;", "+\tif (delta != 0) {", "+\t\tint pos;", "+\t\tif (OS.IsWinCE) {", "+\t\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xFFFF;", "+\t\t} else {", "+\t\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS32, 0, 0);", "+\t\t}", "+\t\tpos += delta;", "+\t\tint [] max = new int [1], min = new int [1];", "+\t\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "+\t\tif (pos < min [0]) pos = max [0];", "+\t\tif (pos > max [0]) pos = min [0];", "+\t\tsetSelection (pos, true);", "+\t}", "+\t", "+\t/*  Stop the edit control from moving the caret */", "-\t\t\tsetSelection (pos + increment, true, true);", "-\t\t\tbreak;", "-\t\t\tsetSelection (pos - increment, true, true);", "-\t\t\tbreak;", "-\t\tcase OS.VK_PRIOR:", "-\t\t\tsetSelection (pos + pageIncrement, true, true);", "-\t\t\tbreak;", "-\t\tcase OS.VK_NEXT:", "-\t\t\tsetSelection (pos - pageIncrement, true, true);", "-\t\t\tbreak;", "+\t\t\treturn LRESULT.ZERO;"]}], "num": 59359}