{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eaec03b5f52450a4b8ca1f188d6c3681", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f653d7ebf385c732f8eae031f121a912", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "7e81b84a2c12e711d885a4cd4a47a7eab239d8f4", "commitAfterChange": "edcf7c0e3595e65e30021cf83de1448eadf495c1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\t_setImage (this.image = image);", "+\tthis.image = image;", "+\tint oldBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\tint newBits = oldBits & ~(OS.SS_LEFTNOWORDWRAP | OS.SS_CENTER | OS.SS_RIGHT) | OS.SS_OWNERDRAW;", "+\tif (oldBits != newBits) {", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b494f50a7569a35ad31131be2a856ba9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "08d0656d422eb297b35a3ed4e6ff1e149c050fd3", "commitAfterChange": "3739447e714e141898eb04cc2d71353eb71ade23", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \r LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["+\t* SS_BITMAP or SS_ICON and SS_CENTER does not redraw\r", "+\t* properly when resized.  Only the new area is drawn\r", "+\t* and the old area is not cleared.  The fix is to\r", "+\t* force the redraw.\r", "+\t*\r", "+\t* NOTE: SS_BITMAP and SS_ICON are not single bit\r", "+\t* masks so it is necessary to test for all of the\r", "+\t* bits in these masks.\r", "+\t*/\r", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\tboolean isBitmap = (bits & OS.SS_BITMAP) == OS.SS_BITMAP;\r", "+\tboolean isIcon = (bits & OS.SS_ICON) == OS.SS_ICON;\r", "+\tif (isBitmap || isIcon) {\r", "+\t\tOS.InvalidateRect (handle, null, true);\r", "+\t\treturn result;\r", "+\t}\r", "+\t\t\r", "+\t/*\r", "+\t* Bug in Windows.  For some reason, a label with\r", "-\t* Note that SS_LEFTNOWORDWRAP does not have the problem.\r", "-\t* The fix is to force the redraw.\r", "+\t* Note that SS_LEFTNOWORDWRAP does not have the\r", "+\t* problem.  The fix is to force the redraw.\r", "+\t\treturn result;\r", "+\t\r"]}], "num": 47597}