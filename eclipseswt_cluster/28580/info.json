{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "128459f3615c494daca6f3b8bbd92ccf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4135be00a9ebf79fcc46a18919c41af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "03027a31c0afeb7417020be3236f5f6dcb1a04f0", "commitAfterChange": "9355cf7d15370368d311f8805b38484ac393e2c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["+\tif (rectangles == null) return false;", "+\t", "+\t// if exactly one of UP/DOWN is specified as a style then set the cursor", "+\t// orientation accordingly (the same is done for LEFT/RIGHT styles below)", "+\tint vStyle = style & (SWT.UP | SWT.DOWN);", "+\tif (vStyle == SWT.UP || vStyle == SWT.DOWN) {", "+\t\tcursorOrientation |= vStyle;", "+\t}", "+\tint hStyle = style & (SWT.LEFT | SWT.RIGHT);", "+\tif (hStyle == SWT.LEFT || hStyle == SWT.RIGHT) {", "+\t\tcursorOrientation |= hStyle;", "+\t}", "-\t\t\t\t\tfor (int i=0; i<rectangles.length; i++) {", "-\t\t\t\t\t\trectangles [i].x += newX [0] - oldX [0];", "-\t\t\t\t\t\trectangles [i].y += newY [0] - oldY [0];", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.x = newX [0];", "+\t\t\t\t\tevent.y = newY [0];", "+\t\t\t\t\tif ((style & SWT.RESIZE) != 0) {", "+\t\t\t\t\t\tresizeRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\tsendEvent (SWT.Resize, event);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * The following is intentionally commented.  Since gtk does not currently", "+\t\t\t\t\t\t * support pointer warping, the resize cursor cannot be adjusted.  If this", "+\t\t\t\t\t\t * capability is added in the future then the following should be uncommented,", "+\t\t\t\t\t\t * and the #adjustResizeCursor method can be copied from another platform.", "+\t\t\t\t\t\t */", "+//\t\t\t\t\t\tPoint cursorPos = adjustResizeCursor ();", "+//\t\t\t\t\t\tnewX [0] = cursorPos.x; newY [0] = cursorPos.y;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tmoveRectangles (newX [0] - oldX [0], newY [0] - oldY [0]);", "+\t\t\t\t\t\tsendEvent (SWT.Move, event);", "-\t\t\t\t\tEvent event = new Event();", "-\t\t\t\t\tevent.x = newX[0];", "-\t\t\t\t\tevent.y = newY[0];", "-\t\t\t\t\tsendEvent (SWT.Move,event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "544ea36cefe78eb683e750df3edefd49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "9277db025f5d1e75185d248de5cb658eee97ebe3", "commitAfterChange": "dd4ff530af7ae66e3244439d1c4d54273716b149", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["+\t\t\t\t\t/*", "+\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t * could have disposed the widget in the move/resize", "+\t\t\t\t\t * event.  If this happens then return false to indicate", "+\t\t\t\t\t * that the move failed.", "+\t\t\t\t\t */", "+\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\tungrab ();", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\tint stepSize = ((gdkEvent.state & OS.GDK_CONTROL_MASK) != 0) ? STEPSIZE_SMALL : STEPSIZE_LARGE;", "+\t\t\t\tint xChange = 0, yChange = 0;\t", "+\t\t\t\t\tcase OS.GDK_Left:", "+\t\t\t\t\t\txChange = -stepSize;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase OS.GDK_Right:", "+\t\t\t\t\t\txChange = stepSize;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase OS.GDK_Up:", "+\t\t\t\t\t\tyChange = -stepSize;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase OS.GDK_Down:", "+\t\t\t\t\t\tyChange = stepSize;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tif (xChange != 0 || yChange != 0) {", "+\t\t\t\t\tdrawRectangles ();", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.x = oldX[0] + xChange;", "+\t\t\t\t\tevent.y = oldY[0] + yChange;", "+\t\t\t\t\tif ((style & SWT.RESIZE) != 0) {", "+\t\t\t\t\t\tresizeRectangles (xChange, yChange);", "+\t\t\t\t\t\tsendEvent (SWT.Resize, event);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * The following is intentionally commented.  Since gtk does not currently", "+\t\t\t\t\t\t * support pointer warping, the resize cursor cannot be adjusted.  If this", "+\t\t\t\t\t\t * capability is added in the future then the following should be uncommented,", "+\t\t\t\t\t\t * and the #adjustResizeCursor method can be copied from another platform.", "+\t\t\t\t\t\t */", "+//\t\t\t\t\t\tcursorPos = adjustResizeCursor (xDisplay, xWindow);", "+//\t\t\t\t\t\toldX[0] = cursorPos.x;  oldY[0] = cursorPos.y;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tmoveRectangles (xChange, yChange);", "+\t\t\t\t\t\tsendEvent (SWT.Move, event);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t * The following is intentionally commented.  Since gtk does not currently", "+\t\t\t\t\t\t * support pointer warping, the move cursor cannot be adjusted.  If this", "+\t\t\t\t\t\t * capability is added in the future then the following should be uncommented,", "+\t\t\t\t\t\t * and the #adjustMoveCursor method can be copied from another platform.", "+\t\t\t\t\t\t */", "+//\t\t\t\t\t\tcursorPos = adjustMoveCursor (xDisplay, xWindow);", "+//\t\t\t\t\t\toldX[0] = cursorPos.x;  oldY[0] = cursorPos.y;", "+\t\t\t\t\t}", "+\t\t\t\t\t/*", "+\t\t\t\t\t * It is possible (but unlikely) that application code", "+\t\t\t\t\t * could have disposed the widget in the move/resize", "+\t\t\t\t\t * event.  If this happens then return false to indicate", "+\t\t\t\t\t * that the move failed.", "+\t\t\t\t\t */", "+\t\t\t\t\tif (isDisposed ()) {", "+\t\t\t\t\t\tungrab ();", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tdrawRectangles ();"]}], "num": 28580}