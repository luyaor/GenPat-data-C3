{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "161d016ffff681da4f93a7fc5bcf6465", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cd09783ed5e9f79f523ce093668a144", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "25e0a88282a8f52572829023c99494b77782afb9", "commitAfterChange": "4492e7490e450a65a8ceed26e7c2cb00d8b99b49", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  static Program getProgram (String key)", "signatureAfterChange": "  static Program getProgram (int key)", "diff": ["-static Program getProgram (String key) {", "+static Program getProgram (int key) {", "+\tint classesRoot = OS.Registry_ClassesRoot ();", "+\tint registryKey = OS.RegistryKey_OpenSubKey (classesRoot, key);", "+\tOS.GCHandle_Free (classesRoot);", "-\tString name = getKeyValue (key, false);", "-\tif (name == null || name.length () == 0) {", "-\t\tname = key;", "-\t}", "-", "+\tint name = getKeyValue (registryKey, false);", "+\tString programName = createJavaString (name == 0 ? key : name);", "+\tOS.GCHandle_Free (name);", "-\tString DEFAULT_COMMAND = \"\\\\shell\"; //$NON-NLS-1$", "-\tString defaultCommand = getKeyValue (key + DEFAULT_COMMAND, true);", "-\tif (defaultCommand == null || defaultCommand.length() == 0) defaultCommand = \"open\"; //$NON-NLS-1$", "-\tString COMMAND = \"\\\\shell\\\\\" + defaultCommand + \"\\\\command\"; //$NON-NLS-1$", "-\tString command = getKeyValue (key + COMMAND, true);", "-\tif (command == null || command.length () == 0) return null;", "-", "-\t/* Icon */", "-\tString DEFAULT_ICON = \"\\\\DefaultIcon\"; //$NON-NLS-1$", "-\tString iconName = getKeyValue (key + DEFAULT_ICON, true);", "-\tif (iconName == null) iconName = \"\"; //$NON-NLS-1$", "-", "+\tint shellCommand = createDotNetString (\"shell\");", "+\tint shellKey = OS.RegistryKey_OpenSubKey (registryKey, shellCommand);", "+\tOS.GCHandle_Free (shellCommand);", "+\tint command = 0;", "+\tif (shellKey != 0) {", "+\t\tcommand = getKeyValue (shellKey, true);", "+\t\tif (command == 0) {", "+\t\t\tint openCommand = createDotNetString (\"open\");", "+\t\t\tint openKey = OS.RegistryKey_OpenSubKey (shellKey, openCommand);", "+\t\t\tif (openKey != 0) {", "+\t\t\t\tint commandCommand = createDotNetString (\"command\");", "+\t\t\t\tint commandKey = OS.RegistryKey_OpenSubKey (openKey, commandCommand);", "+\t\t\t\tif (commandKey != 0) {", "+\t\t\t\t\tcommand = getKeyValue (commandKey, true);", "+\t\t\t\t\tOS.GCHandle_Free (commandKey);\t\t\t", "+\t\t\t\t}", "+\t\t\t\tOS.GCHandle_Free (commandCommand);", "+\t\t\t\tOS.GCHandle_Free (openKey);", "+\t\t\t}", "+\t\t\tOS.GCHandle_Free (openCommand);", "+\t\t}", "+\t}", "+\tOS.GCHandle_Free (shellKey);", "+\tint iconName = 0;", "+\tif (command != 0) {", "+\t\tint defaultIconCommand = createDotNetString (\"DefaultIcon\");", "+\t\tint defaultIconKey = OS.RegistryKey_OpenSubKey (registryKey, defaultIconCommand);", "+\t\tif (defaultIconKey != 0) {", "+\t\t\ticonName = getKeyValue (defaultIconKey, true);", "+\t\t\tOS.GCHandle_Free (defaultIconKey);", "+\t\t}", "+\t\tOS.GCHandle_Free (defaultIconCommand);", "+\t}", "+\tOS.GCHandle_Free (registryKey);", "+\tif (command == 0) return null;", "-\tprogram.name = name;", "-\tprogram.command = command;", "-\tprogram.iconName = iconName;", "+\tprogram.name = programName;", "+\tprogram.command = createJavaString (command);", "+\tOS.GCHandle_Free (command);", "+\tprogram.iconName = iconName != 0 ? createJavaString (iconName) : \"\";", "+\tOS.GCHandle_Free (iconName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c93e9c8a486d676a9501bddde2e5b33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int createHeaderTemplate ()", "signatureAfterChange": "  int createHeaderTemplate (int columnJniRef)", "diff": ["-int createHeaderTemplate () {", "+int createHeaderTemplate (int columnJniRef) {", "-\tint stackPanelType = OS.StackPanel_typeid ();", "-\tint stackPanelNode = OS.gcnew_FrameworkElementFactory (stackPanelType);", "+\tint stackPanelType = OS.SWTStackPanel_typeid ();", "+\tint stackPanelName = createDotNetString (STACKPANEL_PART_NAME, false);", "+\tint stackPanelNode = OS.gcnew_FrameworkElementFactory (stackPanelType, stackPanelName);", "+\tOS.GCHandle_Free (stackPanelName);", "+\tOS.GCHandle_Free (stackPanelType);", "+\tint jniRefProperty = OS.SWTStackPanel_JNIRefProperty ();", "+\tOS.FrameworkElementFactory_SetValueInt (stackPanelNode, jniRefProperty, columnJniRef);", "+\tOS.GCHandle_Free (jniRefProperty);", "+\tOS.GCHandle_Free (textName);", "+\tOS.GCHandle_Free (textType);", "+\tOS.GCHandle_Free (imageName);", "+\tOS.GCHandle_Free (imageType);", "+\tOS.GCHandle_Free (thickness);", "+\tOS.GCHandle_Free (marginProperty);", "+\tOS.GCHandle_Free (orientationProperty);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, imageNode);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, textNode);", "-\tOS.FrameworkTemplate_VisualTree (template, stackPanelNode);", "-\t//bindings", "-\tint textPath = createDotNetString (\"Text\", false);", "-\tint textBinding = OS.gcnew_Binding (textPath);", "-\tint textProperty = OS.TextBlock_TextProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (textNode, textProperty, textBinding);", "-\tint imagePath = createDotNetString (\"Image\", false);", "-\tint imageBinding = OS.gcnew_Binding (imagePath);", "-\tint imageProperty = OS.Image_SourceProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (imageNode, imageProperty, imageBinding);", "-\tOS.GCHandle_Free (textPath);", "-\tOS.GCHandle_Free (textBinding);", "-\tOS.GCHandle_Free (textProperty);", "-\tOS.GCHandle_Free (imagePath);", "-\tOS.GCHandle_Free (imageBinding);", "-\tOS.GCHandle_Free (imageProperty);", "-\tOS.GCHandle_Free (imageType);", "-\tOS.GCHandle_Free (textName);", "-\tOS.GCHandle_Free (textType);", "-\tOS.GCHandle_Free (stackPanelType);", "-\tOS.GCHandle_Free (stackPanelNode);", "-\tOS.GCHandle_Free (textNode);", "-\tOS.GCHandle_Free (marginProperty);", "-\tOS.GCHandle_Free (thickness);", "-\tOS.GCHandle_Free (imageName);", "-\tOS.GCHandle_Free (imageNode);", "-\tOS.GCHandle_Free (orientationProperty);", "+\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, imageNode);", "+\tOS.GCHandle_Free (imageNode);", "+\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, textNode);", "+\tOS.GCHandle_Free (textNode);", "+\tOS.FrameworkTemplate_VisualTree (template, stackPanelNode);", "+\tOS.GCHandle_Free (stackPanelNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea66e717b402f31f16ef86f3d2fdd29e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "754fc60dab21c0351f92d0ed792d7db8af4bbf6a", "commitAfterChange": "d7f52e244190d0233789b162a34cf1d32f1aac26", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  int createControlTemplate ()", "signatureAfterChange": "  int createControlTemplate ()", "diff": ["-\tint dockPanelType = OS.DockPanel_typeid ();", "-\tint dockPanelNode = OS.gcnew_FrameworkElementFactory (dockPanelType);", "-\tint headerType = OS.GridViewHeaderRowPresenter_typeid ();", "-\tint nameString = createDotNetString (HEADER_PART_NAME, false);", "-\tint headerNode = OS.gcnew_FrameworkElementFactory (headerType, nameString);", "-\tint columnsProperty = OS.GridViewHeaderRowPresenter_ColumnsProperty ();", "-\tOS.FrameworkElementFactory_SetValue (headerNode, columnsProperty, columns);", "-\tint visibilityProperty = OS.UIElement_VisibilityProperty ();", "-\tOS.FrameworkElementFactory_SetValueVisibility (headerNode, visibilityProperty, headerVisibility);", "-\tint dockProperty = OS.DockPanel_DockProperty ();", "-\tOS.FrameworkElementFactory_SetValueDock (headerNode, dockProperty, OS.Dock_Top);", "-\tOS.FrameworkElementFactory_AppendChild (scrollViewerNode, dockPanelNode);", "-\tOS.FrameworkElementFactory_AppendChild (dockPanelNode, headerNode);", "-\tOS.FrameworkElementFactory_AppendChild (dockPanelNode, itemsPresenterNode);", "+\tOS.FrameworkElementFactory_AppendChild (scrollViewerNode, itemsPresenterNode);", "+\tint ptr = createDotNetString(scrollViewerStyle, false);", "+\tint stringReader = OS.gcnew_StringReader (ptr);", "+\tint xmlReader = OS.XmlReader_Create (stringReader);", "+\tint xamlStyle = OS.XamlReader_Load (xmlReader);", "+\tint styleProperty = OS.FrameworkElement_StyleProperty();", "+\tOS.FrameworkElementFactory_SetValue (scrollViewerNode, styleProperty, xamlStyle);", "+\tint columnsProperty = OS.GridViewRowPresenterBase_ColumnsProperty ();", "+\tOS.FrameworkElementFactory_SetValue (scrollViewerNode, columnsProperty, columns);", "+\tOS.GCHandle_Free (ptr);", "+\tOS.GCHandle_Free (stringReader);", "+\tOS.GCHandle_Free (xmlReader);", "+\tOS.GCHandle_Free (styleProperty);", "+\tOS.GCHandle_Free (columnsProperty);", "+\tOS.GCHandle_Free (xamlStyle);", "-\tOS.GCHandle_Free (nameString);", "-\tOS.GCHandle_Free (dockPanelType);", "-\tOS.GCHandle_Free (dockPanelNode);", "-\tOS.GCHandle_Free (headerType);", "-\tOS.GCHandle_Free (headerNode);", "-\tOS.GCHandle_Free (columnsProperty);", "-\tOS.GCHandle_Free (visibilityProperty);", "-\tOS.GCHandle_Free (dockProperty);"]}], "num": 18196}