{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4bfb7b036f6f3f640b3e66384e08b35", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e52ef08199bf0ddd0848e00a6c0b30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "9bf1c7999a1b49f1045c3672d5ea17cfad9052ea", "commitAfterChange": "a920e4e81433a14cac9186d61a1339fba3f843d1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private TableItem findItem(int x, int y)", "signatureAfterChange": " private TableItem findItem(int x, int y)", "diff": ["-\tif (table == null) return null;", "+\tRectangle area = table.getClientArea();", "+\tif (!area.contains(coordinates)) return null;", "+\t", "-\tRectangle area = table.getClientArea();", "+\t// Scan across the width of the table.", "-\t\tcoordinates = new Point(x1, y);", "+\t\tcoordinates = new Point(x1, coordinates.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c9e537fcd80c0c367165a2f389b8bcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "d2b23ce77d0de5b5edbb1b403be8a419f0aeb8a4", "commitAfterChange": "2b888af12d27483b24d0a1bde566785233f1e6ba", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  RECT drawBorder(boolean advance, int graphics, int x, int y, int lineHeight, int color, int selectionColor, boolean fullSelection, RECT clipRect, RECT rect, int alpha, StyleItem[] line, int index, int selectionStart, int selectionEnd)", "signatureAfterChange": "  RECT drawBorder(boolean advance, int graphics, int x, int y, int lineHeight, int color, int selectionColor, boolean fullSelection, RECT clipRect, RECT rect, int alpha, StyleItem[] line, int index, int selectionStart, int selectionEnd)", "diff": ["-\tif (index + 1 >= line.length || line[index + 1].style != style) {", "+\tif (index + 1 >= line.length || !style.isAdherentBorder(line[index + 1].style)) {", "-\t\tfor (int i = index; i > 0 && line[i - 1].style == style; i--) {", "+\t\tfor (int i = index; i > 0 && style.isAdherentBorder(line[i - 1].style); i--) {", "-\t\t\tint /*long*/ newPen = OS.ExtCreatePen (lineStyle | OS.PS_GEOMETRIC, Math.max(1, lineWidth), logBrush, 0, null);", "+\t\t\tint /*long*/ newPen = OS.ExtCreatePen(lineStyle | OS.PS_GEOMETRIC, Math.max(1, lineWidth), logBrush, 0, null);"]}], "num": 1226}