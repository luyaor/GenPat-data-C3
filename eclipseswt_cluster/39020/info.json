{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f9f5bd65b22b9a047f83d73e7abab311", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e714a08a56c403c0a5749333b376c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void generate(JNIMethod method)", "signatureAfterChange": "  public void generate(JNIMethod method)", "diff": ["-\tArrayList tags = new ArrayList();", "+\tArrayList<String> tags = new ArrayList<String>();", "-\t\tString doc = \"/** \" + (String)tags.get(0) + \" */\" + delimiter;", "+\t\tString doc = \"/** \" + tags.get(0) + \" */\" + delimiter;", "-\t\tfor (Iterator iterator = tags.iterator(); iterator.hasNext();) {", "-\t\t\tString tag = (String) iterator.next();", "+\t\tfor (Iterator<String> iterator = tags.iterator(); iterator.hasNext();) {", "+\t\t\tString tag = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac96e46906a821ad1c247556854ffbaf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "c13b22837b30fd90fa15a29afe63a567bc3f87e5", "commitAfterChange": "3a5ece72c305410ded2cd14b2fb9617ac7003ab1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void generateMethods(String className, TreeMap methods)", "signatureAfterChange": "  void generateMethods(String className, ArrayList methods)", "diff": ["-void generateMethods(String className, TreeMap methods) {", "-\tSet methodSelectors = methods.keySet();", "-\tfor (Iterator iterator = methodSelectors.iterator(); iterator.hasNext();) {", "-\t\tString selector = (String) iterator.next();", "-\t\tNode method = (Node)methods.get(selector);", "+void generateMethods(String className, ArrayList methods) {", "+\tfor (Iterator iterator = methods.iterator(); iterator.hasNext();) {", "+\t\tNode method = (Node)iterator.next();", "-\t\tboolean isStatic = mthAttributes.getNamedItem(\"class_method\") != null; ", "+\t\tboolean isStatic = isStatic(method); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2dd852b59c76bed13ae69b87e769139", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "commitAfterChange": "fc949910d259b2f09c2a6d209f57255840ca1162", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void generateStructNatives()", "signatureAfterChange": "  void generateStructNatives()", "diff": ["-\tTreeSet set = new TreeSet();", "+\tTreeSet<String> set = new TreeSet<String>();", "-\tfor (Iterator iterator = set.iterator(); iterator.hasNext();) {", "-\t\tString struct = (String) iterator.next();", "+\tfor (Iterator<String> iterator = set.iterator(); iterator.hasNext();) {", "+\t\tString struct = iterator.next();", "-\tfor (Iterator iterator = set.iterator(); iterator.hasNext();) {", "-\t\tString struct = (String) iterator.next();", "+\tfor (Iterator<String> iterator = set.iterator(); iterator.hasNext();) {", "+\t\tString struct = iterator.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01421df9c6712ec21c740fdad52dc718", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  @Override public void generate(JNIClass clazz)", "signatureAfterChange": "  @Override public void generate(JNIClass clazz)", "diff": ["-\tinserts = new TreeMap();", "+\tinserts = new TreeMap<Integer, String>();", "-\tSet set = inserts.keySet();", "-\tArrayList keys = new ArrayList();", "+\tSet<Integer> set = inserts.keySet();", "+\tArrayList<Integer> keys = new ArrayList<Integer>();", "-\tfor (Iterator iterator = keys.iterator(); iterator.hasNext();) {", "-\t\tInteger index = (Integer) iterator.next();", "-\t\tString doc = (String)inserts.get(index);", "+\tfor (Iterator<Integer> iterator = keys.iterator(); iterator.hasNext();) {", "+\t\tInteger index = iterator.next();", "+\t\tString doc = inserts.get(index);"]}], "num": 39020}