{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b16ffce2f9f0904ce07c97e17f1946e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a3a942c8412d8ffd4a696e6dd513f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void destroyItem (TreeItem item)", "signatureAfterChange": " void destroyItem (TreeItem item)", "diff": ["-\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length - 1];", "-\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableIndex);", "-\t\tSystem.arraycopy (", "-\t\t\tavailableItems,", "-\t\t\tavailableIndex + 1,", "-\t\t\tnewAvailableItems,", "-\t\t\tavailableIndex,", "-\t\t\tnewAvailableItems.length - availableIndex);", "-\t\tavailableItems = newAvailableItems;", "+", "+\t\tif (availableIndex != availableItemsCount - 1) {", "+\t\t\t/* item is not at end of available items list, so must shift items left to reclaim its slot */", "+\t\t\tSystem.arraycopy (", "+\t\t\t\tavailableItems,", "+\t\t\t\tavailableIndex + 1,", "+\t\t\t\tavailableItems,", "+\t\t\t\tavailableIndex,", "+\t\t\t\tavailableItemsCount - availableIndex - 1);", "+\t\t\tavailableItems [availableItemsCount - 1] = null;", "+\t\t} else {", "+\t\t\tavailableItems [availableIndex] = null;\t/* last item, so no array copy needed */", "+\t\t}", "+\t\tavailableItemsCount--;", "+", "+\t\tif (redraw && availableItems.length - availableItemsCount == 4) {", "+\t\t\t/* shrink the items array */", "+\t\t\tTreeItem[] newAvailableItems = new TreeItem [availableItemsCount];", "+\t\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, newAvailableItems.length);", "+\t\t\tavailableItems = newAvailableItems;", "+\t\t}", "+", "-\t\tfor (int i = availableIndex; i < availableItems.length; i++) {", "+\t\tfor (int i = availableIndex; i < availableItemsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7baf4d17e40fa793bbd180f8d543d2e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7e01a6d9771ad5bd12b9af1fbbe393164c9959aa", "commitAfterChange": "c61a57d7a074a80b5b03c4761a563015a2ecc5fa", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void destroyItem (TableItem item)", "signatureAfterChange": " void destroyItem (TableItem item)", "diff": ["-\tTableItem[] newItems = new TableItem [items.length - 1];", "-\tSystem.arraycopy (items, 0, newItems, 0, index);", "-\tSystem.arraycopy (items, index + 1, newItems, index, newItems.length - index);", "-\titems = newItems;", "+\tif (index != itemsCount - 1) {", "+\t\t/* item is not at end of items list, so must shift items left to reclaim its slot */", "+\t\tSystem.arraycopy (items, index + 1, items, index, itemsCount - index - 1);", "+\t\titems [itemsCount - 1] = null;", "+\t} else {", "+\t\titems [index] = null;\t/* last item, so no array copy needed */", "+\t}", "+\titemsCount--;", "+\t", "+\tif (items.length - itemsCount == 4) {", "+\t\t/* shrink the items array */", "+\t\tTableItem[] newItems = new TableItem [itemsCount];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, newItems.length);", "+\t\titems = newItems;", "+\t}", "-\tfor (int i = index; i < items.length; i++) {", "+\tfor (int i = index; i < itemsCount; i++) {", "-\t", "+"]}], "num": 15728}