{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10a0448dbb4289e8456bdbccaaf79082", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69167e5ac59e10e7c3685e13315422df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "e5048f56d6534a718cd3f93bfd8fdd52aca34dcd", "commitAfterChange": "a61caa1cfed4d2ec7b9bccff2e9d74f32593118d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getThumbTrackBounds ()", "signatureAfterChange": " public Rectangle getThumbTrackBounds ()", "diff": ["-\t\t\ty = OS.GTK_RANGE_SLIDER_START (handle);", "+\t\t\tint [] slider_start = new int [1], slider_end = new int [1];", "+\t\t\tgtk_range_get_slider_range (handle, slider_start, slider_end);", "+\t\t\ty = slider_start [0];", "-\t\t\tx = OS.GTK_RANGE_SLIDER_START (handle);", "+\t\t\tint [] slider_start = new int [1], slider_end = new int [1];", "+\t\t\tgtk_range_get_slider_range (handle, slider_start, slider_end);", "+\t\t\tx = slider_start [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31e08a31ec6ce853a70dcc5c192de8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "73975c256a3584f0bc295ffc796bd9322b645d25", "commitAfterChange": "457faea14ee904538aebbb601dcac7e617f88af3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void createSurface()", "signatureAfterChange": " void createSurface()", "diff": ["+\tint [] unused = new int [1];  int [] width = new int [1];  int [] height = new int [1];", "+ \tOS.XGetGeometry (device.xDisplay, pixmap, unused, unused, unused, width, height, unused, unused);", "-\tint xColormap = OS.XDefaultColormap(xDisplay, OS.XDefaultScreen (xDisplay));", "-\tsurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, 0, xColormap);", "+\tsurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, width[0], height[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d614cf1ec0a5304a29cabfec6c4787", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "e5048f56d6534a718cd3f93bfd8fdd52aca34dcd", "commitAfterChange": "a61caa1cfed4d2ec7b9bccff2e9d74f32593118d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Rectangle getThumbBounds ()", "signatureAfterChange": " public Rectangle getThumbBounds ()", "diff": ["-\tint slider_start = OS.GTK_RANGE_SLIDER_START (handle);", "-\tint slider_end = OS.GTK_RANGE_SLIDER_END (handle);", "+\tint [] slider_start = new int [1], slider_end = new int [1];", "+\tgtk_range_get_slider_range (handle, slider_start, slider_end);", "-\t\ty = slider_start;", "-\t\theight = slider_end - slider_start;", "+\t\ty = slider_start [0];", "+\t\theight = slider_end [0] - slider_start [0];", "-\t\tx = slider_start;", "+\t\tx = slider_start [0];", "-\t\twidth = slider_end - slider_start;", "+\t\twidth = slider_end [0] - slider_start [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e96d7d846dd8f005ce1a7c8e7679d4c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void setSize (int width, int height)", "signatureAfterChange": " public void setSize (int width, int height)", "diff": ["-\tRect bounds= new Rect();", "-\tinternalGetControlBounds(topHandle, bounds);", "-\tboolean sameExtent = (bounds.right-bounds.left) == width && (bounds.bottom-bounds.top) == height;", "+\tMacRect br= new MacRect();", "+\tshort[] bounds= br.getData();", "+\tinternalGetControlBounds(topHandle, br);", "+\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "-\tinternalSetBounds(topHandle, bounds.left, bounds.top, width, height);", "+\tinternalSetBounds(topHandle, br, bounds[1], bounds[0], width, height);"]}], "num": 7724}