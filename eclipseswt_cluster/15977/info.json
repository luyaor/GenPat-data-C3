{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a18a412f68100a73ee8c9ac82f39f36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "952e98b565d562d505533eeb6cc785ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "9b4500653984e31e0b219c0cf186dae7605efc88", "commitAfterChange": "52c70666c67573818da17f34fd1a3b38e8311391", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 197, "signatureBeforeChange": "  int OnShowContextMenu (int aContextFlags, long aEvent, long aNode)", "signatureAfterChange": "  int OnShowContextMenu (int aContextFlags, long aEvent, long aNode)", "diff": ["-\tint rc = domEvent.QueryInterface (!IsPre_4 ? (Is_17 ? nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_17_IID : nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_10_IID) :nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_IID, result);", "+\tint rc = domEvent.QueryInterface (IsPre_17 ? (IsPre_4 ? nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_IID : nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_10_IID) :nsIDOMMouseEvent.NS_IDOMMOUSEEVENT_17_IID, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39de2541c2bcc3ee6be0b81029aedd1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "16238098f61f651ce5f68d8befa84829aecf0a2d", "commitAfterChange": "f962c1849b620275a0ff327380a8455da533e688", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void setImage (int columnIndex, Image value)", "signatureAfterChange": " public void setImage (int columnIndex, Image value)", "diff": ["-\t\t\t\tparent.redraw (column.getX (), 0, column.width, parent.getClientArea ().height, false);", "+\t\t\t\tparent.redraw (column.getX (), 0, column.width, parent.clientArea.height, false);", "-\t\tparent.redraw (column.getX (), 0, column.width, parent.getClientArea ().height, false);", "+\t\tparent.redraw (column.getX (), 0, column.width, parent.clientArea.height, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93feac3eec561fa68fffb3d089234076", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "2c810dc09ebe584d949d1446e7fe61dd64fa3e80", "commitAfterChange": "31b7a613958123368d896ee9b0a636412f2a598b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tint monitorNumber = OS.gdk_screen_get_monitor_at_window (screen, OS.GTK_WIDGET_WINDOW (handle));", "+\tint monitorNumber = OS.gdk_screen_get_monitor_at_window (screen, gtk_widget_get_window (handle));", "-\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (handle);", "+\tint /*long*/ window = gtk_widget_get_window (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ececab2ff027eb9912ef4e3b95c8ea9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "86c38a7cbf0f022d40b0255ce7e53569f64727e0", "commitAfterChange": "9c4d95e5740ca0b9b2d0d52c6ef6270a763b8da3", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " void updateRanges(int start, int replaceCharCount, int newCharCount)", "signatureAfterChange": " void updateRanges(int start, int replaceCharCount, int newCharCount)", "diff": ["-\t\t\t\tSystem.arraycopy(ranges, modifyStart + 2, ranges, modifyStart + 4, rangeCount - modifyStart + 2);", "+\t\t\t\tSystem.arraycopy(ranges, modifyStart + 2, ranges, modifyStart + 4, rangeCount - (modifyStart + 2));", "-\t\t\t\tSystem.arraycopy(styles, modifyStart + 1, styles, modifyStart + 2, styleCount - modifyStart + 1);", "+\t\t\t\tSystem.arraycopy(styles, modifyStart + 1, styles, modifyStart + 2, styleCount - (modifyStart + 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955700062c24987a807db290159f4b52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/Rectangle.java", "commitBeforeChange": "3ead8eac7890510dfcd7f5951a990db354ddb856", "commitAfterChange": "50b584631690d5c2c8ad5fdd401f2599d4e81bd7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean contains (int x, int y)", "signatureAfterChange": " public boolean contains (int x, int y)", "diff": ["-\treturn (x >= this.x) && (y >= this.y) && ((x - this.x) < width) && ((y - this.y) < height);", "+\treturn (x >= this.x) && (y >= this.y) && x < (this.x + width) && y < (this.y + height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22860a0508af7edc09c9e42a75c58a29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e8895346ff5ef8d6945118b0500a5ea19f74ca22", "commitAfterChange": "b2738a28cb5231d346c6c5441b6e2379f19da0e4", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  char [] getEditText (int start, int end)", "signatureAfterChange": "  char [] getEditText (int start, int end)", "diff": ["-\t\thiddenText.getChars ((int)/*64*/range.location, (int)/*64*/(range.location + range.length), buffer, 0);", "+\t\tSystem.arraycopy (hiddenText, (int)/*64*/range.location, buffer, 0, buffer.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34a13868d713ce437db92c0093b1711", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "02644f58f3abe8f8fd3f0ad0d2ae8239523a342e", "commitAfterChange": "96e2b03de7000356e0421e39637279b41e0f80c3", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tstatic int atkText_get_selection (int atkObject, int selection_num, int start_offset, int end_offset)", "signatureAfterChange": "  \tstatic int atkText_get_selection (int atkObject, int selection_num, int start_offset, int end_offset)", "diff": ["-\t\t\t\tevent.end = parentEnd[0] - 1;", "+\t\t\t\tevent.end = parentEnd[0];", "-\t\t\t\tparentEnd [0] = event.end + 1;", "+\t\t\t\tparentEnd [0] = event.end;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b170f7a6498ab55fe9c4754fd9374d6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 59, "signatureBeforeChange": "  int widgetStyle ()", "signatureAfterChange": "  int widgetStyle ()", "diff": ["+", "-\t* Set WS_POPUP and clear WS_VISIBLE and WS_TABSTOP.", "-\t* NOTE: WS_TABSTOP is the same as WS_MAXIMIZEBOX so", "-\t* it cannot be used to do tabbing with decorations.", "+\t* Clear WS_VISIBLE and WS_TABSTOP.  NOTE: In Windows, WS_TABSTOP", "+\t* has the same value as WS_MAXIMIZEBOX so these bits cannot be", "+\t* used to control tabbing.", "-\tint bits = super.widgetStyle () | OS.WS_POPUP;", "-\tbits &= ~(OS.WS_VISIBLE | OS.WS_TABSTOP);", "+\tint bits = super.widgetStyle () & ~(OS.WS_TABSTOP | OS.WS_VISIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343f03e7dc23843aa46012265c93eccc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 309, "methodNumberAfterChange": 289, "signatureBeforeChange": " \tint get_cellAt(int row, int column, int ppCell)", "signatureAfterChange": " \tint get_cellAt(int row, int column, int ppCell)", "diff": ["-\t\tif (DEBUG) print(\"IAccessibleTable2::get_cellAt(row=\" + row + \", column=\" + column + \") returning \" + accessible);", "+\t\tif (DEBUG) print(this + \".IAccessibleTable2::get_cellAt(row=\" + row + \", column=\" + column + \") returning \" + accessible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a27dbed22845df3e04045f1ac111b4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "63bb510957dc2c8abd27fac2be7e4080128e6ace", "commitAfterChange": "67664007e67ab633eadf5408d9a04f1d0537ef65", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  static int JSDOMEventProc (int arg0, int event, int user_data)", "signatureAfterChange": "  static int JSDOMEventProc (int arg0, int event, int user_data)", "diff": ["-\t\t\tif (browser != null && !((WebKit)browser.webBrowser).jsEnabled) {", "+\t\t\tif (browser != null && !browser.webBrowser.jsEnabled) {", "-\t\t\t\t\t\t\t\t\t((WebKit)browser.webBrowser).sendKeyEvent (keyEvent);", "+\t\t\t\t\t\t\t\t\tbrowser.webBrowser.sendKeyEvent (keyEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6763f97e29a0a65686a7d124838385a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "2c810dc09ebe584d949d1446e7fe61dd64fa3e80", "commitAfterChange": "31b7a613958123368d896ee9b0a636412f2a598b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int filterProc (int xEvent, int gdkEvent, int data2)", "signatureAfterChange": "  int filterProc (int xEvent, int gdkEvent, int data2)", "diff": ["-\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (OS.GTK_WIDGET_WINDOW (shellHandle), null, false);", "+\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (gtk_widget_get_window (shellHandle), null, false);", "-\t\t\t\t\t\tif (isCustomResize ()) {", "-\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (OS.GTK_WIDGET_WINDOW (shellHandle), null, false);", "+\t\t\t\t\t\tif (isCustomResize ()) {\t\t\t\t", "+\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (gtk_widget_get_window (shellHandle), null, false);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1bd35685c16f4e0ce2dc925e8b980f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "9423e8624301f31221faf0cc38dbe489fbd38f90", "commitAfterChange": "a0154691b486453b5cbdf98d235d22966936f5b6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": "\r \r int widgetStyle ()", "signatureAfterChange": "\r \r int widgetStyle ()", "diff": ["-\r", "-\t/* Set WS_POPUP and clear WS_VISIBLE */\r", "+\t/* \r", "+\t* Set WS_POPUP and clear WS_VISIBLE and WS_TABSTOP.\r", "+\t* NOTE: WS_TABSTOP is the same as WS_MAXIMIZEBOX so\r", "+\t* it cannot be used to do tabbing with decorations.\r", "+\t*/\r", "-\tbits &= ~OS.WS_VISIBLE;\r", "+\tbits &= ~(OS.WS_VISIBLE | OS.WS_TABSTOP);\r", "-\t/*\r", "-\t* Bug in Windows.  The WS_CAPTION style must be\r", "-\t* set when the window is resizable or it does not\r", "-\t* draw properly.\r", "-\t*/\r", "+\t/* Set the resize, dialog border or border bits */\r", "-\t\tbits |= OS.WS_CAPTION | OS.WS_THICKFRAME;\t\r", "+\t\tbits |= OS.WS_THICKFRAME;\t\r", "-\t/*\r", "-\t* Feature in Windows.  Both WS_SYSMENU and WS_CAPTION\r", "-\t* must be set in order to get a system menu.\r", "-\t*/\r", "+\t/* Set the system menu and close box bits */\r", "-\t\tif ((style & SWT.CLOSE) != 0) {\r", "-\t\t\tbits |= OS.WS_SYSMENU | OS.WS_CAPTION;\r", "-\t\t}\r", "+\t\tif ((style & SWT.CLOSE) != 0) bits |= OS.WS_SYSMENU;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9fff58ef5bc011f1117e524b4b2f3e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/MenuTab.java", "commitBeforeChange": "c1b7df422a886c38d896c5764cc2eb33d65d18c3", "commitAfterChange": "817d7598b1de1d1183a51522696bb85d9d4cef92", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void createButtonSelected(SelectionEvent event)", "signatureAfterChange": " \tpublic void createButtonSelected(SelectionEvent event)", "diff": ["-\t\tShell shell = new Shell (SWT.SHELL_TRIM);", "+\t\tShell shell = new Shell (SWT.SHELL_TRIM | orientation);", "-\t\t\tMenu menuBar = new Menu(shell, SWT.BAR | orientation | radioBehavior);", "+\t\t\tMenu menuBar = new Menu(shell, SWT.BAR | radioBehavior);", "-\t\t\t\tMenu dropDownMenu = new Menu(shell, SWT.DROP_DOWN | orientation | radioBehavior);", "+\t\t\t\tMenu dropDownMenu = new Menu(shell, SWT.DROP_DOWN | radioBehavior);", "-\t\t\tMenu popUpMenu = new Menu(shell, SWT.POP_UP | orientation | radioBehavior);", "+\t\t\tMenu popUpMenu = new Menu(shell, SWT.POP_UP | radioBehavior);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d27450fb83df10149aa78ee99517b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "b9adfedfef96c112e346fc2e1ca9b581a392b2cc", "commitAfterChange": "28c92f6dee2d5dab3150206f6aba55d475413032", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void createScrolledHandle (int parentHandle)", "signatureAfterChange": "  void createScrolledHandle (int parentHandle)", "diff": ["-\tfeatures |= OS.kControlSupportsFocus | OS.kControlGetsFocusOnClick;", "+\tfeatures |= OS.kControlSupportsFocus;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2140eed9382a7b33c6b21625bb454398", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "5b97b0673b65b971f49b2410e2bbba4d17b184fb", "commitAfterChange": "8d4a8d36954b727772c9fb84be537887ea3b321d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DragSource(Control control, int style)", "signatureAfterChange": " public DragSource(Control control, int style)", "diff": ["-\tif (control.getData(DRAGSOURCEID) != null) DND.error(DND.ERROR_CANNOT_INIT_DRAG);", "+\tif (control.getData(DRAGSOURCEID) != null)", "+\t\tDND.error(DND.ERROR_CANNOT_INIT_DRAG);", "+\t", "-\t\t\t\tif (!DragSource.this.isDisposed()){", "+\t\t\t\tif (!DragSource.this.isDisposed()) {", "-\t\t\tif (event.type == SWT.DragDetect){", "-\t\t\t\tif (!DragSource.this.isDisposed()){", "+\t\t\tif (event.type == SWT.DragDetect) {", "+\t\t\t\tif (!DragSource.this.isDisposed()) {", "-\tthis.control.addListener (SWT.Dispose, controlListener);", "-\tthis.control.addListener (SWT.DragDetect, controlListener);", "+\tcontrol.addListener (SWT.Dispose, controlListener);", "+\tcontrol.addListener (SWT.DragDetect, controlListener);", "-\tthis.addListener (SWT.Dispose, new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "+\tthis.addListener(SWT.Dispose, new Listener() {", "+\t\tpublic void handleEvent(Event e) {"]}], "num": 15977}