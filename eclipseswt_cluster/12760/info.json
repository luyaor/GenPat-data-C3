{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca2fa30c0b3477cf1fcb82c5f10a21ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b8d1e16d6c9784cceea9f831312d1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "cac38b1f82722a64690acd56a4088417a8ce9ecd", "commitAfterChange": "853eed5461835d50fb4e8007e139a702a8c33cbf", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  void sendToolTipEvent (boolean enter)", "signatureAfterChange": "  void sendToolTipEvent (boolean enter)", "diff": ["-\tif (tooltipTrackingArea == null && isVisible()) {", "-\t\tNSView contentView = window.contentView();", "-\t\tint /*long*/ tag = contentView.addToolTipRect(new NSRect(), window, 0);", "-\t\tif (tag != 0) tooltipTrackingArea = new NSTrackingArea(tag);", "+\tif (isVisible()) return;", "+\tif (tooltipTag == 0) {", "+\t\tNSView view = window.contentView();", "+\t\ttooltipTag = view.addToolTipRect(new NSRect(), window, 0);", "+\t\tif (tooltipTag != 0) {", "+\t\t\tNSTrackingArea trackingArea = new NSTrackingArea(tooltipTag);", "+\t\t\tid owner = trackingArea.owner();", "+\t\t\tif (owner != null) tooltipOwner = owner.id;", "+\t\t\tid userInfo = trackingArea.userInfo();", "+\t\t\tif (userInfo != null) {", "+\t\t\t\ttooltipUserData = userInfo.id;", "+\t\t\t} else {", "+\t\t\t\tint /*long*/ [] value = new int /*long*/ [1];", "+\t\t\t\tOS.object_getInstanceVariable(tooltipTag, new byte[]{'_','u', 's', 'e', 'r', 'I', 'n', 'f', 'o'}, value);", "+\t\t\t\ttooltipUserData = value[0];", "+\t\t\t}", "+\t\t}", "-\tif (tooltipTrackingArea == null) return;", "-\tNSDictionary userInfo = tooltipTrackingArea.userInfo();", "-\tif (userInfo == null) return;", "+\tif (tooltipTag == 0 || tooltipOwner == 0 || tooltipUserData == 0) return;", "-\tNSEvent event = NSEvent.enterExitEventWithType(enter ? OS.NSMouseEntered : OS.NSMouseExited, pt, 0, 0, window.windowNumber(), null, 0, 0, userInfo.id);", "-\tif (OS.class_NSToolTipManager != 0) {", "-\t\tOS.objc_msgSend(OS.objc_msgSend(OS.class_NSToolTipManager, OS.sel_sharedToolTipManager), enter ? OS.sel_mouseEntered_ : OS.sel_mouseExited_, event.id);", "-\t}", "+\tNSEvent event = NSEvent.enterExitEventWithType(enter ? OS.NSMouseEntered : OS.NSMouseExited, pt, 0, 0, window.windowNumber(), null, 0, tooltipTag, tooltipUserData);", "+\tOS.objc_msgSend(tooltipOwner, enter ? OS.sel_mouseEntered_ : OS.sel_mouseExited_, event.id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "486b5962b40f8544bdb2b62ced485ca3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public Point getLocation ()", "signatureAfterChange": " public Point getLocation ()", "diff": ["-\tRect bounds= new Rect();", "-\tinternalGetControlBounds(topHandle, bounds);", "-\treturn new Point(bounds.left, bounds.top);", "+\tMacRect br= new MacRect();", "+    if (MacUtil.USE_FRAME) {", "+\t\tinternalGetControlBounds(topHandle, br);", "+\t\treturn br.getLocation();", "+    } else {", "+\t\tshort[] bounds= br.getData();", "+\t\tshort[] pbounds= new short[4];", "+\t\tinternalGetControlBounds(topHandle, br);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\treturn new Point(bounds[1]-pbounds[1], bounds[0]-pbounds[0]);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc64e03cc698b130fd2fe40f51455e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds ()", "diff": ["-\tRect bounds= new Rect();", "-\tinternalGetControlBounds(topHandle, bounds);", "-\tint width = bounds.right - bounds.left;", "-\tint height = bounds.bottom - bounds.top;", "-\treturn new Rectangle(bounds.left, bounds.top, width, height);", "+    if (MacUtil.USE_FRAME) {", "+\t\tMacRect br= new MacRect();", "+\t\tinternalGetControlBounds(topHandle, br);", "+\t\treturn br.toRectangle();", "+   } else {", "+\t    MacRect br= new MacRect();", "+\t\tshort[] bounds= br.getData();", "+\t\tshort[] pbounds= new short[4];", "+\t\tinternalGetControlBounds(topHandle, br);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\treturn new Rectangle(bounds[1]-pbounds[1], bounds[0]-pbounds[0], bounds[3]-bounds[1], bounds[2]-bounds[0]);", "+    }"]}], "num": 12760}