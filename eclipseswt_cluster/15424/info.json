{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95e2960db5f6ebc79452238551b39307", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb9efb28d2342642e2195a7aea73e4a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "f9f3156adc6e8f40d328c15f0f2aa9510ae00291", "commitAfterChange": "bc452d4d06c4cc115b47acd65667c65720c741f3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void drawWidget (GC gc, RECT clipRect)", "signatureAfterChange": "  void drawWidget (GC gc, RECT clipRect)", "diff": ["+\tint hCaptionFont = 0, oldFont = 0;\t", "+\tif (hTheme == 0) {", "+\t\tif (!OS.IsWinCE && hFont == 0) {", "+\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();", "+\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;", "+\t\t\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {", "+\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT) ((NONCLIENTMETRICSW)info).lfCaptionFont : ((NONCLIENTMETRICSA)info).lfCaptionFont;", "+\t\t\t\thCaptionFont = OS.CreateFontIndirect (logFont);", "+\t\t\t\toldFont = OS.SelectObject (gc.handle, hCaptionFont);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (hCaptionFont != 0) {", "+\t\tOS.SelectObject (gc.handle, oldFont);", "+\t\tOS.DeleteObject (hCaptionFont);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c70e26b4afef11308807b8b925dc7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "f9f3156adc6e8f40d328c15f0f2aa9510ae00291", "commitAfterChange": "bc452d4d06c4cc115b47acd65667c65720c741f3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tint oldHFont = 0;", "-\t\t\tif (hFont != 0) oldHFont = OS.SelectObject (hDC, hFont);", "+\t\t\tint hCurrentFont = 0, oldFont = 0;", "+\t\t\tif (hTheme == 0) {", "+\t\t\t\tif (hFont != 0) {", "+\t\t\t\t\thCurrentFont = hFont;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\t\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();", "+\t\t\t\t\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;", "+\t\t\t\t\t\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {", "+\t\t\t\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT) ((NONCLIENTMETRICSW)info).lfCaptionFont : ((NONCLIENTMETRICSA)info).lfCaptionFont;", "+\t\t\t\t\t\t\thCurrentFont = OS.CreateFontIndirect (logFont);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (hCurrentFont != 0) {", "+\t\t\t\t\toldFont = OS.SelectObject (hDC, hCurrentFont);", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\tif (hFont != 0) OS.SelectObject (hDC, oldHFont);", "+\t\t\tif (hCurrentFont != 0) {", "+\t\t\t\tOS.SelectObject (hDC, oldFont);", "+\t\t\t\tif (hCurrentFont != hFont) OS.DeleteObject (hCurrentFont);", "+\t\t\t}"]}], "num": 15424}