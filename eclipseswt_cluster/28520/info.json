{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee2b770e659791e1972198ae74760e17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e723d1645d90f0a2d1ca170234a6e4cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "46d5c58e9e9f7efe56c99ee8e486fd4948a51fc9", "commitAfterChange": "5efec7858782696a576765aeb725ce585f93dae0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r int processHide (int info)", "signatureAfterChange": "\r \r int processHide (int info)", "diff": ["+\tShell shell = getShell ();\r", "+\tif (shell.activeMenu == this) {\r", "+\t\tshell.activeMenu = null;\r", "+\t\tif (cascade != null) {\r", "+\t\t\tMenu parent = cascade.parent;\r", "+\t\t\tif (parent != null && (parent.style & SWT.BAR) == 0) {\r", "+\t\t\t\tif (OS.PtWidgetIsRealized (parent.handle)) {\r", "+\t\t\t\t\tshell.activeMenu = parent;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\treturn OS.Pt_CONTINUE;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308be4c43193d3ce2615e7a1d874d09c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "2a6e0c9b702b0b502452265cc844e28c66b4245c", "commitAfterChange": "9500727710c9626dc536a0475cdc8a8842b13b33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Object getContents(Transfer transfer, int clipboards)", "signatureAfterChange": " public Object getContents(Transfer transfer, int clipboards)", "diff": ["-\tGtkSelectionData gtkSelectionData = new GtkSelectionData();", "-\tOS.memmove(gtkSelectionData, selection_data, GtkSelectionData.sizeof);", "-\ttdata.type = gtkSelectionData.type;", "-\ttdata.pValue = gtkSelectionData.data;", "-\ttdata.length = gtkSelectionData.length;", "-\ttdata.format = gtkSelectionData.format;", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 14, 0)) {", "+\t\ttdata.type = OS.gtk_selection_data_get_data_type(selection_data);", "+\t\ttdata.pValue = OS.gtk_selection_data_get_data(selection_data);", "+\t\ttdata.length = OS.gtk_selection_data_get_length(selection_data);", "+\t\ttdata.format = OS.gtk_selection_data_get_format(selection_data);", "+\t} else {", "+\t\tGtkSelectionData gtkSelectionData = new GtkSelectionData();", "+\t\tOS.memmove(gtkSelectionData, selection_data, GtkSelectionData.sizeof);", "+\t\ttdata.type = gtkSelectionData.type;", "+\t\ttdata.pValue = gtkSelectionData.data;", "+\t\ttdata.length = gtkSelectionData.length;", "+\t\ttdata.format = gtkSelectionData.format;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "964af3384f60841252abc2faf1a0db12", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "d62ca75a93db110199fc4bd6eaf1279a676d827b", "commitAfterChange": "2f67efb12116378f6c4fe455aa16cedec07ec5d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  ScrollBar createScrollBar (int style)", "signatureAfterChange": "  ScrollBar createScrollBar (int style)", "diff": ["-\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_HSCROLLBAR (scrolledHandle);", "+\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "+\t\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_HSCROLLBAR (scrolledHandle);", "+\t\t} else {", "+\t\t\tbar.handle = OS.gtk_scrolled_window_get_hscrollbar (scrolledHandle);", "+\t\t}", "-\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_VSCROLLBAR (scrolledHandle);", "+\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "+\t\t\tbar.handle = OS.GTK_SCROLLED_WINDOW_VSCROLLBAR (scrolledHandle);", "+\t\t} else {", "+\t\t\tbar.handle = OS.gtk_scrolled_window_get_vscrollbar (scrolledHandle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f7d865f27b40ad7d0040c059a1f028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 194, "signatureBeforeChange": " public boolean setParent (Composite parent)", "signatureAfterChange": " public boolean setParent (Composite parent)", "diff": ["+\tint /*long*/ topHandle = topHandle ();", "+\tint x = OS.GTK_WIDGET_X (topHandle);", "+\tint width = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\tif ((this.parent.style & SWT.MIRRORED) != 0) {", "+\t\tx =  this.parent.getClientWidth () - width - x;", "+\t}", "+\tif ((parent.style & SWT.MIRRORED) != 0) {", "+\t\tx = parent.getClientWidth () - width - x;", "+\t}", "+\tint y = OS.GTK_WIDGET_Y (topHandle);", "-\tint /*long*/ topHandle = topHandle ();", "-\tint x = OS.GTK_WIDGET_X (topHandle);", "-\tint y = OS.GTK_WIDGET_Y (topHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c695140105d6fe07c5b756c5a137687", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ClipboardProxy.java", "commitBeforeChange": "e82b8b13a53753477afeb558213b761755d485b4", "commitAfterChange": "35627c0ace5001989a7f5f3e570904a7d0f66fa5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  boolean setData(Clipboard owner, Object[] data, Transfer[] dataTypes, int clipboards)", "signatureAfterChange": "  boolean setData(Clipboard owner, Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\tOS.gtk_clipboard_set_can_store(Clipboard.GTKCLIPBOARD, 0, 0);", "+\t\t\t}", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\t\tOS.gtk_clipboard_set_can_store(Clipboard.GTKPRIMARYCLIPBOARD, 0, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16c0172c085fe6a0bbf056ede5ee65cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ClipboardProxy.java", "commitBeforeChange": "e82b8b13a53753477afeb558213b761755d485b4", "commitAfterChange": "35627c0ace5001989a7f5f3e570904a7d0f66fa5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void dispose ()", "signatureAfterChange": "  void dispose ()", "diff": ["-\tif (activeClipboard != null) OS.gtk_clipboard_clear(Clipboard.GTKCLIPBOARD);", "-\tif (activePrimaryClipboard != null) OS.gtk_clipboard_clear(Clipboard.GTKPRIMARYCLIPBOARD);", "+\tif (activeClipboard != null) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\tOS.gtk_clipboard_store(Clipboard.GTKCLIPBOARD);", "+\t\t} else {", "+\t\t\tOS.gtk_clipboard_clear(Clipboard.GTKCLIPBOARD);", "+\t\t}", "+\t}", "+\tif (activePrimaryClipboard != null) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 6, 0)) {", "+\t\t\tOS.gtk_clipboard_store(Clipboard.GTKPRIMARYCLIPBOARD);", "+\t\t} else {", "+\t\t\tOS.gtk_clipboard_clear(Clipboard.GTKPRIMARYCLIPBOARD);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d44ca1497b809710d0384b4de16ae11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "b2f2631812bb255ec81879bc4ce8063e64a87354", "commitAfterChange": "0d23f871e57d5ad4ac4223f8da9d549bb534627e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index, boolean fixed, boolean scrolled)", "signatureAfterChange": "  void createHandle (int index, boolean fixed, boolean scrolled)", "diff": ["+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 18, 0)) {", "+\t\t\tOS.gtk_widget_set_has_window(fixedHandle, true);", "+\t\t}else{", "+\t\t}", "-\tOS.gtk_fixed_set_has_window (handle, true);", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 18, 0)) {", "+\t\tOS.gtk_widget_set_has_window(handle, true);", "+\t}else{", "+\t\tOS.gtk_fixed_set_has_window (handle, true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48a1545b0684948fc1f6d4968ad5f00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "148b84f426929c4b1c134024d292f28a1ed47f44", "commitAfterChange": "c3df8a49c9f52cc16785eff26d39728365fcad0d", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void setRedraw (boolean redraw)", "signatureAfterChange": " public void setRedraw (boolean redraw)", "diff": ["+\t\t\t\t/*", "+\t\t\t\t* Bug in GTK. For some reason, the window does not", "+\t\t\t\t* redraw in versions of GTK greater than 2.18. The fix", "+\t\t\t\t* is to hide and show it (without changing the z order).", "+\t\t\t    */", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 17, 0)) OS.gdk_window_hide(window);", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 17, 0)) OS.gdk_window_show_unraised(window);", "+\t\t\t\t\t//System.out.println(\"Redraw \" + redrawWindow + \" WIndow \" + window);", "+//\t\t\t\t\tOS.gdk_x11_drawable_get_xid(redrawWindow);", "+//\t\t\t\t\tOS.gdk_x11_drawable_get_xid(window);"]}], "num": 28520}