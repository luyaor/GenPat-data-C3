{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83df8c45b140abfedd4e7e01be818bd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ecce466f7d79e1ccc379853403f7da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1879f0110762a14d14725c1ff98b0c876188176a", "commitAfterChange": "ec0b807b1bde11bc567a2a3419e26587b448a196", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-", "-//\t\tString text = null;", "-//\t\tif (focusCombo != null && !focusCombo.isDisposed ()) {", "-//\t\t\ttext = focusCombo.getText();", "-//\t\t}", "-", "-//\t\tif (focusCombo != null && !focusCombo.isDisposed ()) {", "-//\t\t\tif (!focusCombo.getText ().equals (text)) {", "-//\t\t\t\tfocusCombo.postEvent (SWT.Selection);", "-//\t\t\t}", "-//\t\t}", "+\t\t/*", "+\t\t* Feature in the Macintosh.  HIComboBox does not send any", "+\t\t* notification when the selection changes.  The fix is to", "+\t\t* detect if the combo text has changed after every event", "+\t\t* has been dispatched.  This is only necessary when the", "+\t\t* combo has focus. ", "+\t\t*/", "+\t\tif (focusCombo != null && !focusCombo.isDisposed ()) {", "+\t\t\tfocusCombo.checkSelection ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a697632a0e429f7f5d2a5f3e7c721ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "91b5711660ae70726404d0e8ee0d181a6a391652", "commitAfterChange": "030b9a0697828459778791517f2c0b080cc21fa6", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": "  void windowDidResignKey(int id, int sel, int notification)", "signatureAfterChange": "  void windowDidResignKey(int id, int sel, int notification)", "diff": ["-//\tDisplay display = this.display;", "-\tif (isDisposed ()) return;", "-\tControl control = display.focusControl;", "-\tif (control != null && !control.isDisposed() && control.getShell() == this) {", "-\t\tdisplay.focusControl = null;", "-\t\tcontrol.sendFocusEvent(SWT.FocusOut, true);", "-\t}", "-//\tsaveFocus ();", "-//\tif (savedFocus != null) {", "-//\t\t/*", "-//\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-//\t\t* the control that has focus gets two kEventControlSetFocus", "-//\t\t* events indicating that focus was lost.  The fix is to ignore", "-//\t\t* both of these and send the focus lost event explicitly.", "-//\t\t*/", "-//\t\tdisplay.ignoreFocus = true;", "-//\t\tOS.ClearKeyboardFocus (shellHandle);", "-//\t\tdisplay.ignoreFocus = false;", "-//\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, false);", "-//\t}"]}], "num": 52045}