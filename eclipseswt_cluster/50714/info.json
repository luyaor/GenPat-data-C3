{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59d49275ef070ac3be6fcc8afff73402", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34ea7516646a81c2de7a6412bf71c307", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 56, "signatureBeforeChange": " public TreeItem [] getSelection ()", "signatureAfterChange": " public TreeItem [] getSelection ()", "diff": ["-\t\treturn new TreeItem [] {items [tvItem.lParam]};", "+\t\treturn new TreeItem [] {_getItem (tvItem.hItem, tvItem.lParam)};", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tTreeItem item = items [i];", "-\t\tif (item != null) {", "-\t\t\ttvItem.hItem = item.handle;", "-\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "-\t\t\t\tif (count < guess.length) guess [count] = item;", "-\t\t\t\tcount++;", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\t\tcount = getSelection (hItem, tvItem, guess, 0);", "+\t} else {", "+\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\tTreeItem item = items [i];", "+\t\t\tif (item != null) {", "+\t\t\t\ttvItem.hItem = item.handle;", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\t\tif (count < guess.length) guess [count] = item;", "+\t\t\t\t\tcount++;", "+\t\t\t\t}", "-\tint index = 0;", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tTreeItem item = items [i];", "-\t\tif (item != null) {", "-\t\t\ttvItem.hItem = item.handle;", "-\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "-\t\t\t\tresult [index++] = item;", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\t\tgetSelection (hItem, tvItem, result, 0);", "+\t} else {", "+\t\tint index = 0;", "+\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\tTreeItem item = items [i];", "+\t\t\tif (item != null) {", "+\t\t\t\ttvItem.hItem = item.handle;", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\t\tresult [index++] = item;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e22133ebfdab6fa21b8a673d89f9815", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "aade523ef1dc5fd1c84ac8f836346b4b6063d6ae", "commitAfterChange": "58ebe84839db8cbd2eaef39398ff27d3fbf5c7d5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, int drawable, int gc)", "signatureAfterChange": "\r static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc)", "diff": ["-static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, int drawable, int gc) {\r", "+static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc) {\r", "+\r", "+\t\tif (!isMask) {\r", "+\t\t\tforeground = 0;\r", "+\t\t\tif (srcReds.length > 1) {\r", "+\t\t\t\tforeground = ImageData.closestMatch(screenDepth, srcReds[1], srcGreens[1], srcBlues[1],\r", "+\t\t\t\t\tdestRedMask, destGreenMask, destBlueMask, destReds, destGreens, destBlues);\r", "+\t\t\t}\r", "+\t\t\tif (srcReds.length > 0) {\r", "+\t\t\t\tbackground = ImageData.closestMatch(screenDepth, srcReds[0], srcGreens[0], srcBlues[0],\r", "+\t\t\t\t\tdestRedMask, destGreenMask, destBlueMask, destReds, destGreens, destBlues);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e079cfbdabc958901fab71023516d167", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "d2b11c9d030e3f8aaf3856a4d3490cccac39d4bf", "commitAfterChange": "ff683e5cf06a749982dd8f9b55aee8e169aeb5ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public int add (Image image)", "signatureAfterChange": "  public int add (Image image)", "diff": ["-\tint width = w [0], height = h [0]; \t", "-\tint /*long*/ pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);", "+\tint /*long*/ pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, w [0], h [0]);", "-\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, width, height);", "+\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, width, height);", "+\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, w [0], h [0]);", "-\t\tfor (int y=0; y<height; y++) {", "+\t\tfor (int y=0; y<h[0]; y++) {", "-\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\tfor (int x=0; x<w[0]; x++) {", "+\tif (width == -1 || height == -1) {", "+\t\twidth = w [0];", "+\t\theight = h [0];", "+\t}", "+\tif (w [0] != width || h [0] != height) {", "+\t\tint /*long*/ scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, width, height, OS.GDK_INTERP_BILINEAR);", "+\t\tOS.g_object_unref (pixbuf);", "+\t\tpixbuf = scaledPixbuf;", "+\t}"]}], "num": 50714}