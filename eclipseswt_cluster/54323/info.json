{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35c18dd3f0f188ad36faadd308eef952", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f17e2815657cf685bb594aff0992819", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "f43e57890fc6f476815884f9c2bf682f2c3f532c", "commitAfterChange": "e43d95e19139605b33300fc4ad84d20c5a9dadf6", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseDown, mouseEvent);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tevent.doit = mouseEvent.doit;", "+\t\t\tif (!event.doit) break;", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseUp, mouseEvent);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tevent.doit = mouseEvent.doit;", "+\t\t\tif (!event.doit) break;", "+\t\tcase SWT.MouseDoubleClick: {", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseDoubleClick, mouseEvent);", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccac288659cc8620144547927ff83833", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "0894512a66f007a1e9c59f8caa85551e06c6fecf", "commitAfterChange": "37a4190dbc5ad26eb692e7bd68ed00c0c4125cab", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\t\tEvent keyEvent = new Event ();", "+\t\t\tkeyEvent.time = event.time;", "+\t\t\tkeyEvent.character = event.character;", "+\t\t\tkeyEvent.keyCode = event.keyCode;", "+\t\t\tkeyEvent.stateMask = event.stateMask;", "+\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tevent.doit = keyEvent.doit;", "+\t\t\tif (!event.doit) break;", "+\t\t\t", "-\t\t\t\tEvent e = new Event ();", "-\t\t\t\te.time = event.time;", "-\t\t\t\te.stateMask = event.stateMask;", "-\t\t\t\tnotifyListeners (SWT.DefaultSelection, e);", "+\t\t\t\tEvent selectionEvent = new Event ();", "+\t\t\t\tselectionEvent.time = event.time;", "+\t\t\t\tselectionEvent.stateMask = event.stateMask;", "+\t\t\t\tnotifyListeners (SWT.DefaultSelection, selectionEvent);", "+\t\t\t\tif (isDisposed ()) break;", "-\t\t\t//At this point the widget may have been disposed.", "-\t\t\t// If so, do not continue.", "-\t\t\tif (isDisposed ()) break;", "-\t\t\t\t//At this point the widget may have been disposed.", "-\t\t\t\t// If so, do not continue.", "-\t\t\t\t\t\t", "-\t\t\tEvent e = new Event ();", "-\t\t\te.time = event.time;", "-\t\t\te.character = event.character;", "-\t\t\te.keyCode = event.keyCode;", "-\t\t\te.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyDown, e);", "+\t\t\tevent.doit = e.doit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4233788f15805fa20080d8039ef0c3f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "a6dd95ac89a2c61fbc3d2bea813b4f7eb4d56af0", "commitAfterChange": "3767c6eed361b44b80df0635982aafe6b7b61705", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\tcase SWT.MouseWheel: {", "+\t\t\tEvent keyEvent = new Event ();", "+\t\t\tkeyEvent.time = event.time;", "+\t\t\tkeyEvent.keyCode = event.count > 0 ? SWT.ARROW_UP : SWT.ARROW_DOWN;", "+\t\t\tkeyEvent.stateMask = event.stateMask;", "+\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tevent.doit = keyEvent.doit;", "+\t\t\tif (!event.doit) break;", "+\t\t\tif (event.count != 0) {", "+\t\t\t\tevent.doit = false;", "+\t\t\t\tint oldIndex = getSelectionIndex ();", "+\t\t\t\tif (event.count > 0) {", "+\t\t\t\t\tselect (Math.max (oldIndex - 1, 0));", "+\t\t\t\t} else {", "+\t\t\t\t\tselect (Math.min (oldIndex + 1, getItemCount () - 1));", "+\t\t\t\t}", "+\t\t\t\tif (oldIndex != getSelectionIndex ()) {", "+\t\t\t\t\tEvent e = new Event();", "+\t\t\t\t\te.time = event.time;", "+\t\t\t\t\te.stateMask = event.stateMask;", "+\t\t\t\t\tnotifyListeners (SWT.Selection, e);", "+\t\t\t\t}", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccb17d5fdd625cf58558f3cc513a1f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "df63744a83b6c4ccafd10c57535b24dd9458ba96", "commitAfterChange": "49d8ee915a6006746596a7d40978b42b50fa61b3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\tcase SWT.DragDetect:", "+\t\tcase SWT.MouseDoubleClick:", "+\t\tcase SWT.MouseMove:", "+\t\tcase SWT.MouseEnter:", "+\t\tcase SWT.MouseExit:", "+\t\tcase SWT.MouseHover: {", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (event.type, event);", "+\t\t\tevent.type = SWT.None;", "+\t\t\tbreak;", "+\t\t}", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "-\t\tcase SWT.MouseDoubleClick: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseDoubleClick, mouseEvent);", "-\t\t\tbreak;", "-\t\t}", "-\t\t\tEvent keyEvent = new Event ();", "-\t\t\tkeyEvent.time = event.time;", "-\t\t\tkeyEvent.keyCode = event.count > 0 ? SWT.ARROW_UP : SWT.ARROW_DOWN;", "-\t\t\tkeyEvent.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tnotifyListeners (SWT.MouseWheel, event);", "+\t\t\tevent.type = SWT.None;", "-\t\t\tevent.doit = keyEvent.doit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1640dc04e480ae2a0b02d3f43c5550b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4d3b01a55a97ac4a054bfd451acec439cbc8df1a", "commitAfterChange": "3e191148ef45a3ccb2e199821e208067a679c1f3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  void handleEvent(int evtId)", "signatureAfterChange": "  void handleEvent(int evtId)", "diff": ["+\tif (DOMEVENT_MOUSEWHEEL.equals(type)) {", "+\t\tDOMWheelEvent event = new DOMWheelEvent(evtId);", "+\t\tint clientX = event.clientX();", "+\t\tint clientY = event.clientY();", "+\t\tint delta = event.wheelDelta();", "+\t\tboolean ctrl = event.ctrlKey();", "+\t\tboolean shift = event.shiftKey();", "+\t\tboolean alt = event.altKey();", "+\t\tboolean meta = event.metaKey();", "+\t\tEvent mouseEvent = new Event();", "+\t\tmouseEvent.type = SWT.MouseWheel;", "+\t\tmouseEvent.widget = browser;", "+\t\tmouseEvent.x = clientX; mouseEvent.y = clientY;", "+\t\tmouseEvent.count = delta / 120;", "+\t\tmouseEvent.stateMask = (alt ? SWT.ALT : 0) | (ctrl ? SWT.CTRL : 0) | (shift ? SWT.SHIFT : 0) | (meta ? SWT.COMMAND : 0);", "+\t\tbrowser.notifyListeners (mouseEvent.type, mouseEvent);", "+\t\treturn;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659233b89d8dad80a53968d94cd1a230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "f43e57890fc6f476815884f9c2bf682f2c3f532c", "commitAfterChange": "e43d95e19139605b33300fc4ad84d20c5a9dadf6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void arrowEvent (Event event)", "signatureAfterChange": " void arrowEvent (Event event)", "diff": ["+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseDown: {", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseDown, mouseEvent);", "+\t\t\tevent.doit = mouseEvent.doit;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseUp: {", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseUp, mouseEvent);", "+\t\t\tevent.doit = mouseEvent.doit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc136213b4f26d937daf1e704178694", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "df63744a83b6c4ccafd10c57535b24dd9458ba96", "commitAfterChange": "49d8ee915a6006746596a7d40978b42b50fa61b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void arrowEvent (Event event)", "signatureAfterChange": " void arrowEvent (Event event)", "diff": ["-\t\tcase SWT.MouseDown: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseDown, mouseEvent);", "-\t\t\tevent.doit = mouseEvent.doit;", "+\t\tcase SWT.DragDetect:", "+\t\tcase SWT.MouseDown:", "+\t\tcase SWT.MouseUp:", "+\t\tcase SWT.MouseMove:", "+\t\tcase SWT.MouseEnter:", "+\t\tcase SWT.MouseExit:", "+\t\tcase SWT.MouseHover: {", "+\t\t\tPoint pt = getDisplay ().map (arrow, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (event.type, event);", "+\t\t\tevent.type = SWT.None;", "-\t\tcase SWT.MouseUp: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseUp, mouseEvent);", "-\t\t\tevent.doit = mouseEvent.doit;", "+\t\tcase SWT.MouseWheel: {", "+\t\t\tPoint pt = getDisplay ().map (arrow, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (SWT.MouseWheel, event);", "+\t\t\tevent.type = SWT.None;", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tif (!event.doit) break;", "+\t\t\tif (event.count != 0) {", "+\t\t\t\tevent.doit = false;", "+\t\t\t\tint oldIndex = getSelectionIndex ();", "+\t\t\t\tif (event.count > 0) {", "+\t\t\t\t\tselect (Math.max (oldIndex - 1, 0));", "+\t\t\t\t} else {", "+\t\t\t\t\tselect (Math.min (oldIndex + 1, getItemCount () - 1));", "+\t\t\t\t}", "+\t\t\t\tif (oldIndex != getSelectionIndex ()) {", "+\t\t\t\t\tEvent e = new Event();", "+\t\t\t\t\te.time = event.time;", "+\t\t\t\t\te.stateMask = event.stateMask;", "+\t\t\t\t\tnotifyListeners (SWT.Selection, e);", "+\t\t\t\t}", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t}"]}], "num": 54323}