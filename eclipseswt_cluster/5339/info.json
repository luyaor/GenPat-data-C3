{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4efff3027a3e3f3cf1e39bc03811437", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e0239cc51c287b0d1a3afe7ecf0ce1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9e31221b049499921b387aa8c55c31be6986dcd0", "commitAfterChange": "e00c0f57cb750bad424ecfff9641fe4c9496df0e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " void doPageUp (int stateMask)", "signatureAfterChange": " void doPageUp (int stateMask)", "diff": ["+\t\t\t/* move focus to top item in viewport */", "-\t\t\treturn;", "+\t\t} else {", "+\t\t\t/* at top of viewport, so set focus to top item one page up */", "+\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\t\tshowItem (availableItems [newFocusIndex]);", "+\t\t\tredrawItem (newFocusIndex, true);", "+\t\treturn;", "-\tint selectIndex = Math.max (0,focusItem.availableIndex - visibleItemCount + 1);", "+\tint selectIndex;", "+\tif (focusItem.availableIndex != topIndex) {", "+\t\t/* select from focus to top item in viewport */", "+\t\tselectIndex = topIndex;", "+\t} else {", "+\t\t/* already at top of viewport, so select to top of one page up */", "+\t\tselectIndex = Math.max (0, topIndex - visibleItemCount);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7a43b87e87883b69758473b5096972", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9e31221b049499921b387aa8c55c31be6986dcd0", "commitAfterChange": "e00c0f57cb750bad424ecfff9641fe4c9496df0e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " void doPageDown (int stateMask)", "signatureAfterChange": " void doPageDown (int stateMask)", "diff": ["+\t\t\t/* move focus to bottom item in viewport */", "-\t\t\treturn;", "+\t\t} else {", "+\t\t\t/* at bottom of viewport, so set focus to bottom item one page down */", "+\t\t\tint newFocusIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\t\tshowItem (availableItems [newFocusIndex]);", "+\t\t\tredrawItem (newFocusIndex, true);", "+\t\treturn;", "-\tint selectIndex = focusItem.availableIndex + visibleItemCount - 1;", "-\tselectIndex = Math.min (selectIndex, availableItems.length - 1);", "+\tint bottomIndex = Math.min (topIndex + visibleItemCount - 1, availableItems.length - 1);", "+\tint selectIndex;", "+\tif (focusItem.availableIndex != bottomIndex) {", "+\t\t/* select from focus to bottom item in viewport */", "+\t\tselectIndex = bottomIndex;", "+\t} else {", "+\t\t/* already at bottom of viewport, so select to bottom of one page down */", "+\t\tselectIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "+\t}"]}], "num": 5339}