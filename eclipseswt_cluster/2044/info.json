{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e7062e1e6c2ae44aa8f2e6bdf857d47", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2676d6b9524bf767c524eb99356a952f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7ee9370fb1f257b0959b64e9c229131ca3b8dbfc", "commitAfterChange": "0311d68036ad50521d345e1a90470acd1e4bf9b4", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int tableView_selectionIndexesForProposedSelection (int id, int sel, int aTableView, int indexSet)", "signatureAfterChange": "  void deselectRow (int id, int sel, int index)", "diff": ["+", "+void deselectRow (int /*long*/ id, int /*long*/ sel, int /*long*/ index) {", "+\tif (preventSelect && !ignoreSelect) return;", "+\tif ((style & SWT.SINGLE) != 0 && !ignoreSelect) {", "+\t\tif ( ((NSTableView)view).selectedRow() == index) return;", "+\t}", "+\tsuper.deselectRow (id, sel, index);", "-int /*long*/ tableView_selectionIndexesForProposedSelection (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ indexSet) {", "-\tNSTableView tableView = new NSTableView(aTableView);", "-", "-\t// If a checkbox is being tracked don't select the row.", "-\tif (display.trackedButtonRow != -1) return tableView.selectedRowIndexes().id;", "-\t", "-\t// If the click was in a checkbox, remove that row from the proposed selection.", "-\tNSMutableIndexSet mutableSelection = (NSMutableIndexSet) new NSMutableIndexSet().alloc();", "-\tmutableSelection = new NSMutableIndexSet(mutableSelection.initWithIndexSet(new NSIndexSet(indexSet)));", "-    int /*long*/ clickedCol = tableView.clickedColumn();", "-    int /*long*/ clickedRow = tableView.clickedRow();", "-    if (clickedRow >= 0 && clickedCol >= 0) {", "-        NSCell cell = tableView.preparedCellAtColumn(clickedCol, clickedRow);", "-        if (cell.isKindOfClass(OS.class_NSButtonCell) && cell.isEnabled()) {", "-            NSRect cellFrame = tableView.frameOfCellAtColumn(clickedCol, clickedRow);", "-            NSRect imageFrame = cell.imageRectForBounds(cellFrame);", "-            NSPoint hitPoint = tableView.convertPoint_fromView_(NSApplication.sharedApplication().currentEvent().locationInWindow(), null);", "-            if (OS.NSPointInRect(hitPoint, imageFrame)) {", "-    \t\t\tmutableSelection.removeIndex(clickedRow);", "-            }", "-        }            ", "-    }", "-", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\t/*", "-\t\t * Feature in Cocoa.  Calling setAllowsEmptySelection will automatically select the first row of the list. ", "-\t\t * And, single-selection NSTable/OutlineViews allow the user to de-select the selected item via command-click.", "-\t\t * This is normal platform behavior, but for compatibility with other platforms, if the SINGLE style is in use,", "-\t\t * force a selection by seeing if the proposed selection set is empty, and if so, put back the currently selected row.  ", "-\t\t */", "-\t\tif (mutableSelection.count() != 1 && tableView.selectedRow() != -1) {", "-\t\t\treturn tableView.selectedRowIndexes().id;", "-\t\t}", "-\t}", "-\t", "-\treturn mutableSelection.id;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "682707f54e3d431e9e0be511561ecdb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "a59fff904b3e7df800e239fd40c3c4caa287ab9c", "commitAfterChange": "af47b10ecd62c321048a89b6e8b7417850c28ef2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void keyDown (int id, int sel, int theEvent)", "signatureAfterChange": " public int getTextLimit ()", "diff": ["-void keyDown (int /*long*/ id, int /*long*/ sel, int /*long*/ theEvent) {", "-\tNSEvent event = new NSEvent(theEvent);", "-\tNSString chars = event.charactersIgnoringModifiers();", "-\t", "-\tint delta = 0;", "-    int keyChar = 0;", "-", "-    if (chars.length() != 1) return;", "-    ", "-    keyChar = (int)/*64*/chars.characterAtIndex(0);", "-", "-    switch (keyChar) {", "-\t    case OS.NSEnterCharacter: /* KP Enter */", "-\t    case OS.NSNewlineCharacter: /* Return */", "-\t    \tpostEvent (SWT.DefaultSelection);", "-\t    \treturn;", "-\t    case OS.NSPageUpFunctionKey: delta = pageIncrement; break;", "-\t    case OS.NSPageDownFunctionKey: delta = -pageIncrement; break;", "-\t    case OS.NSDownArrowFunctionKey: delta = -getIncrement(); break;", "-\t    case OS.NSUpArrowFunctionKey: delta = getIncrement(); break;", "-\t    ", "-\t    default: {", "-\t    \tNSCharacterSet numbers = new NSCharacterSet(NSCharacterSet.decimalDigitCharacterSet().id);", "-\t    \tboolean isANumber = numbers.characterIsMember((short) keyChar);", "-\t    \tboolean isSeparator = (keyChar == textFormatter.decimalSeparator().characterAtIndex(0));", "-\t    \tboolean isMathSymbol = (keyChar == 0x2d || keyChar == 0x2b); // Minus sign, plus sign", "-\t    \tif (isANumber || (isSeparator && digits > 0) || isMathSymbol) super.keyDown(id, sel, theEvent);", "-\t    }", "-    }", "-", "-    if (delta != 0) {", "-    \tboolean [] parseFail = new boolean [1];", "-    \tint value = getSelectionText (parseFail);", "-    \tif (parseFail [0]) {", "-    \t\tvalue = (int)buttonView.doubleValue();", "-    \t}", "-    \tint newValue = value + delta;", "-    \tint max = (int)buttonView.maxValue();", "-    \tint min = (int)buttonView.minValue();", "-    \tif ((style & SWT.WRAP) != 0) {", "-    \t\tif (newValue > max) newValue = min;", "-    \t\tif (newValue < min) newValue = max;", "-    \t}", "-    \tnewValue = Math.min (Math.max (min, newValue), max);", "-    \tif (value != newValue) setSelection (newValue, true, true, true);", "-    \treturn;", "-    } else {", "-    \tboolean [] parseFail = new boolean [1];", "-    \tint value = getSelectionText (parseFail);", "-    \tif (!parseFail [0]) {", "-    \t\tint pos = (int)buttonView.doubleValue();", "-    \t\tif (pos != value) setSelection (value, true, false, true);", "-    \t}", "-    }", "+ */", "+public int getTextLimit () {", "+\tcheckWidget();", "+    return textLimit;"]}], "num": 2044}