{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4eef7f1c67b4dd0be80617e3e1148e36", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ca009312ccedc9b5a6d774af2d4921", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "cf2b66d490bff744ecd1ca3533d187040b308649", "commitAfterChange": "679890a84222ce0160d339b7b083b9284b56677d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-\t/*", "-\t* The OS call gtk_cell_renderer_get_size() provides the width of image to be drawn", "-\t* by the cell renderer.  If there is no image in the cell, the width is zero.  If the table contains", "-\t* images of varying widths, gtk_cell_renderer_get_size() will return the width of the image, ", "-\t* not the width of the area in which the image is drawn.", "-\t* New API was added in GTK 2.1.3 for determining the full width of the renderer area.", "-\t* For earlier versions of GTK, the result is only correct if all rows have images of the same", "-\t* width.", "-\t*/", "-\tif (OS.GTK_VERSION >= OS.VERSION (2, 1, 3)) {", "-\t\tint [] x = new int [1], w = new int[1];", "-\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, x, w);", "-\t\trect.x += x [0];", "-\t\trect.width = w [0];", "-\t} else {", "-\t\tint [] w = new int [1];", "-\t\tOS.gtk_tree_view_column_cell_set_cell_data (column, parent.modelHandle, handle, false, false);", "-\t\tOS.gtk_cell_renderer_get_size (pixbufRenderer, parentHandle, null, null, null, w, null);", "-\t\trect.width = w [0];", "-\t}", "+\tint [] x = new int [1], w = new int[1];", "+\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, x, w);", "+\trect.x += x [0];", "+\trect.width = w [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc2c3caf8d8aa9b6327189acf2193b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "cf2b66d490bff744ecd1ca3533d187040b308649", "commitAfterChange": "679890a84222ce0160d339b7b083b9284b56677d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-\t/*", "-\t* The OS call gtk_cell_renderer_get_size() provides the width of image to be drawn", "-\t* by the cell renderer.  If there is no image in the cell, the width is zero.  If the table contains", "-\t* images of varying widths, gtk_cell_renderer_get_size() will return the width of the image, ", "-\t* not the width of the area in which the image is drawn.", "-\t* New API was added in GTK 2.1.3 for determining the full width of the renderer area.", "-\t* For earlier versions of GTK, the result is only correct if all rows have images of the same", "-\t* width.", "-\t*/", "-\tif (OS.GTK_VERSION >= OS.VERSION (2, 1, 3)) {", "-\t\tint [] x = new int [1], w = new int[1];", "-\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, x, w);", "-\t\trect.x += x [0];", "-\t\trect.width = w [0];", "-\t} else {", "-\t\tint [] w = new int [1];", "-\t\tOS.gtk_tree_view_column_cell_set_cell_data (column, parent.modelHandle, handle, false, false);", "-\t\tOS.gtk_cell_renderer_get_size (pixbufRenderer, parentHandle, null, null, null, w, null);", "-\t\trect.width = w [0];", "-\t}", "+\tint [] x = new int [1], w = new int[1];", "+\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, x, w);", "+\trect.x += x [0];", "+\trect.width = w [0];"]}], "num": 53959}