{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78c6588fe3cb55b6c288acff7ba1ac29", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0997ddc04255b0bfaaecb7cad1d08d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebDownloadDelegate.java", "commitBeforeChange": "d40cbb892cec81ea2b2e87a9b6ae9112c418cd1a", "commitAfterChange": "20038377a45fbdaa1f32f13cbd4067b1a6de9d10", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int decideDestinationWithSuggestedFilename(int download, int filename)", "signatureAfterChange": "  int decideDestinationWithSuggestedFilename (int download, int filename)", "diff": ["-int decideDestinationWithSuggestedFilename(int /*long*/ download, int /*long*/ filename) {", "-\tString name = WebKit.extractBSTR(filename);", "-\tFileDialog dialog = new FileDialog(browser.getShell(), SWT.SAVE);", "-\tdialog.setText(SWT.getMessage (\"SWT_FileDownload\")); //$NON-NLS-1$", "-\tdialog.setFileName(name);", "-\tdialog.setOverwrite(true);", "-\tString path = dialog.open();", "-\tIWebDownload iwebdownload = new IWebDownload(download);", "-\tiwebdownload.setDeletesFileUponFailure(false);", "+int decideDestinationWithSuggestedFilename (int /*long*/ download, int /*long*/ filename) {", "+\tString name = WebKit.extractBSTR (filename);", "+\tFileDialog dialog = new FileDialog (browser.getShell(), SWT.SAVE);", "+\tdialog.setText (SWT.getMessage (\"SWT_FileDownload\")); //$NON-NLS-1$", "+\tdialog.setFileName (name);", "+\tdialog.setOverwrite (true);", "+\tString path = dialog.open ();", "+\tIWebDownload iwebdownload = new IWebDownload (download);", "+\tiwebdownload.setDeletesFileUponFailure (0);", "-\t\tiwebdownload.setDestination(WebKit.createBSTR(\"\"), true); //$NON-NLS-1$", "+\t\tiwebdownload.setDestination (WebKit.createBSTR (\"\"), 1); //$NON-NLS-1$", "-\t\tFile file = new File(path);", "-\t\tif (file.exists()) file.delete();", "-\t\tiwebdownload.setDestination(WebKit.createBSTR(path), true);", "-\t\topenDownloadWindow(download, path);", "+\t\tFile file = new File (path);", "+\t\tif (file.exists ()) file.delete ();", "+\t\tiwebdownload.setDestination (WebKit.createBSTR (path), 1);", "+\t\topenDownloadWindow (download, path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78f4bf52a39a62c343183f2601dd7c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "3b7e04304effe884e33175739d7c3054dcac5e13", "commitAfterChange": "8d895e4bdf05b8234ec4199b4f2b83cc1cbe3aaa", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  int webkit_download_requested (int web_view, int download)", "signatureAfterChange": "  int webkit_download_requested (int web_view, int download)", "diff": ["-\tString nameString = new String (Converter.mbcsToWcs (null, bytes));", "-\tFileDialog dialog = new FileDialog (browser.getShell (), SWT.OPEN);", "-\tdialog.setFileName (nameString);", "-\tString title = Compatibility.getMessage (\"SWT_FileDownload\"); //$NON-NLS-1$", "-\tdialog.setText (title);", "-\tString path = dialog.open ();", "+\tfinal String nameString = new String (Converter.mbcsToWcs (null, bytes));", "-\tif (path != null) {", "-\t\tpath = URI_FILEROOT + path;", "-\t\tbyte[] uriBytes = Converter.wcsToMbcs (null, path, true);", "-\t\tWebKitGTK.webkit_download_set_destination_uri (download, uriBytes);", "-\t\topenDownloadWindow (download);", "-\t} else {", "-\t\tWebKitGTK.webkit_download_cancel (download);", "-\t}", "+\tfinal int /*long*/ request = WebKitGTK.webkit_download_get_network_request (download);", "+\tOS.g_object_ref (request);", "+", "+\t/*", "+\t* As of WebKitGTK 1.8.x attempting to show a FileDialog in this callback causes", "+\t* a hang.  The workaround is to open it asynchronously with a new download.", "+\t*/", "+\tbrowser.getDisplay ().asyncExec (new Runnable () {", "+\t\tpublic void run () {", "+\t\t\tif (!browser.isDisposed ()) {", "+\t\t\t\tFileDialog dialog = new FileDialog (browser.getShell (), SWT.OPEN);", "+\t\t\t\tdialog.setFileName (nameString);", "+\t\t\t\tString title = Compatibility.getMessage (\"SWT_FileDownload\"); //$NON-NLS-1$", "+\t\t\t\tdialog.setText (title);", "+\t\t\t\tString path = dialog.open ();", "+\t\t\t\tif (path != null) {", "+\t\t\t\t\tpath = URI_FILEROOT + path;", "+\t\t\t\t\tint /*long*/ newDownload = WebKitGTK.webkit_download_new (request);", "+\t\t\t\t\tbyte[] uriBytes = Converter.wcsToMbcs (null, path, true);", "+\t\t\t\t\tWebKitGTK.webkit_download_set_destination_uri (newDownload, uriBytes);", "+\t\t\t\t\topenDownloadWindow (newDownload);", "+\t\t\t\t\tWebKitGTK.webkit_download_start (newDownload);", "+\t\t\t\t\tOS.g_object_unref (newDownload);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.g_object_unref (request);", "+\t\t}", "+\t});", "+"]}], "num": 38233}