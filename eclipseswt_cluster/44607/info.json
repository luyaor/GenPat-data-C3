{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b90ce2974596645b35df13092f98e39", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959a0da3558721c27437dece60ba372a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "e454a2c21c9ed733c89f3fa0e67403c0c5f9a0a4", "commitAfterChange": "49869f2610478aa88f0345ffa91c833e4950a16c", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void setZOrder (Control sibling, boolean above)", "signatureAfterChange": "  void setZOrder (Control sibling, boolean above)", "diff": ["-\t setZOrder (sibling, above, false, false);", "+\t/*", "+\t* Bug in GTK+.  Changing the toplevel window Z-order causes", "+\t* X to send a resize event.  Before the shell is mapped, these", "+\t* resize events always have a size of 200x200, causing extra", "+\t* layout work to occur.  The fix is to modify the Z-order only", "+\t* if the shell has already been mapped at least once.", "+\t*/", "+\tif (mapped) setZOrder (sibling, above, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548a4119f875c410efaa1413da2440ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "29dc9217728c0e94326a81442db0117e0e0dc515", "commitAfterChange": "55792ee4835329a21ef651075bccfa0554646fb4", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "  void setWindowVisible (boolean visible)", "signatureAfterChange": "  void setWindowVisible (boolean visible)", "diff": ["-\t\tOS.HideWindow (shellHandle);", "+\t\t/*", "+\t\t* Bug in the Macintosh.  Under certain circumstances, yet to", "+\t\t* be determined, calling HideWindow() and then DisposeWindow()", "+\t\t* causes a segment fault when an application is exiting.  This", "+\t\t* seems to happen to large applications.  The fix is to avoid", "+\t\t* calling HideWindow() when a shell is about to be disposed.", "+\t\t*/", "+\t\tif (!disposed) OS.HideWindow (shellHandle);"]}], "num": 44607}