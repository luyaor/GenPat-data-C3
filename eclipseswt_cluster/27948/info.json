{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abc07c58dd600478b0c39ecf8ca3f9a8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98869c387ac3f48182c7a4199378845d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "83e1dac1af837594e187e72e8d4c2cd60386743f", "commitAfterChange": "aba5823d7335842a1956cc66c799c92c1aafef99", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setSelection (TreeItem [] items)", "signatureAfterChange": " public void setSelection (TreeItem [] items)", "diff": ["-\tint hNewItem = 0;", "+\t", "-\t\thAnchor = hNewItem = item.handle;", "+\t\tint hNewItem = hAnchor = item.handle;", "+\t\t", "+\t\t/*", "+\t\t* Bug in Windows.  When TVM_SELECTITEM is used to ensure", "+\t\t* that an item is visible and the client area of the tree is", "+\t\t* smaller that the size of one item, TVM_SELECTITEM makes", "+\t\t* the next item in the tree visible by making it the top item", "+\t\t* instead of making the desired item visible.  The fix is to", "+\t\t* detect the case when the client area is too small and make", "+\t\t* the desired visible item be the top item in the tree.", "+\t\t*/", "+\t\tboolean fixScroll = checkScroll (hNewItem);", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tignoreSelect = true;", "+\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "+\t\tignoreSelect = false;", "+\t\tif (OS.SendMessage (handle, OS.TVM_GETVISIBLECOUNT, 0, 0) == 0) {", "+\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hNewItem);", "+\t\t}", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t", "+\t\t/*", "+\t\t* Feature in Windows.  When the old and new focused item", "+\t\t* are the same, Windows does not check to make sure that", "+\t\t* the item is actually selected, not just focused.  The", "+\t\t* fix is to force the item to draw selected by setting", "+\t\t* the state mask.", "+\t\t*/", "+\t\tif (hOldItem == hNewItem) {", "+\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\ttvItem.mask = OS.TVIF_STATE;", "+\t\t\ttvItem.state = OS.TVIS_SELECTED;", "+\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\t\ttvItem.hItem = hNewItem;", "+\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t}", "-\tboolean fixScroll = hNewItem != 0 && checkScroll (hNewItem);", "-\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\tignoreSelect = true;", "-\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "-\tignoreSelect = false;", "-\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t/*", "-\t* Feature in Windows.  When the old and new focused item", "-\t* are the same, Windows does not check to make sure that", "-\t* the item is actually selected, not just focused.  The", "-\t* fix is to force the item to draw selected by setting", "-\t* the state mask.", "-\t*/", "-\tif (hOldItem == hNewItem) {", "-\t\tTVITEM tvItem = new TVITEM ();", "-\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\ttvItem.state = OS.TVIS_SELECTED;", "-\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "-\t\ttvItem.hItem = hNewItem;", "-\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-\t}", "-\tfixPinheadScroll (hNewItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f4e6190b3b1dbd95a297a47266d366", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "3467472aa67908051e1d9e3a69c4bb746a4bdceb", "commitAfterChange": "54a28706dd7a2d1a569470ebdec501aa24da7500", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tDisplay display = null;", "+\tDisplay display = parent.getDisplay ();", "-\t\tdisplay = parent.getDisplay ();", "+\t", "+\t/*", "+\t* Bug in Windows.  When a WH_MSGFILTER hook is used to run code", "+\t* during the message loop for SHBrowseForFolder(), running code", "+\t* in the hook can cause a GP.  Specifically, SetWindowText()", "+\t* for static controls seemed to make the problem happen.", "+\t* The fix is to ignore the hook while the directory dialog", "+\t* is open.", "+\t* ", "+\t* NOTE:  This only happens in versions of the comctl32.dll", "+\t* earlier than 6.0.", "+\t*/", "+\tboolean oldIgnore = display.ignoreMsgFilter;", "+\tif (OS.COMCTL32_MAJOR < 6) display.ignoreMsgFilter = true;", "+\tif (OS.COMCTL32_MAJOR < 6) display.ignoreMsgFilter = oldIgnore;"]}], "num": 27948}