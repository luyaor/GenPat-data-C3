{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae097b69d4ea96271b5fcd6fe6f0652c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e9cebdbe26ae5a8c7d82fe9b1edcf2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "e72f7bd4d44706289b63f67ce457d62232713387", "commitAfterChange": "cd6d057fe97b58ab42a52702e1bea64749013640", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": " private int dropProcCallback(int widget, int client_data, int call_data)", "signatureAfterChange": "  public Transfer[] getTransfer()", "diff": ["-}", "-private int dropProcCallback(int widget, int client_data, int call_data) {", "-\tupdateDragOverHover(0, null);", "-\teffect.show(DND.FEEDBACK_NONE, 0, 0);", "-\t", "-\t/* AW", "-\tdroppedEventData = new XmDropProcCallback();", "-\tOS.memmove(droppedEventData, call_data, XmDropProcCallback.sizeof);\t", "-\t", "-\tDNDEvent event = new DNDEvent();", "-\tevent.widget     = this.control;", "-\tevent.time       = droppedEventData.timeStamp;", "-\tshort [] root_x = new short [1];", "-\tshort [] root_y = new short [1];", "-\tOS.XtTranslateCoords (this.control.handle, (short) droppedEventData.x, (short) droppedEventData.y, root_x, root_y);", "-\tevent.x          = root_x[0];", "-\tevent.y          = root_y[0];", "-\tevent.dataTypes  = dataTypes;", "-\tevent.operations = osOpToOp(droppedEventData.operations);", "-\tevent.dataType   = selectedDataType;", "-\tevent.detail     = osOpToOp(droppedEventData.operation);", "-", "-\ttry {", "-\t\tnotifyListeners(DND.DropAccept,event);", "-\t} catch (Throwable err) {", "-\t\tevent.detail = DND.DROP_NONE;", "-\t\tevent.dataType = null;", "-\t}", "-\t", "-\tselectedDataType = null;", "-\tfor (int i = 0; i < dataTypes.length; i++) {", "-\t\tif (dataTypes[i].equals(event.dataType)) {", "-\t\t\tselectedDataType = event.dataType;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\tint lastOperation = DND.DROP_NONE;", "-\tif (selectedDataType != null && ((event.detail & osOpToOp(droppedEventData.operations)) == event.detail)) {", "-\t\tlastOperation = event.detail;", "-\t}", "-\t", "-\tif (lastOperation == DND.DROP_NONE) {", "-\t\t// this was not a successful drop", "-\t\tint[] args = new int[] {OS.XmNtransferStatus, OS.XmTRANSFER_FAILURE,", "-\t\t\t\t\tOS.XmNnumDropTransfers, 0};", "-\t\tdropTransferObject = OS.XmDropTransferStart(droppedEventData.dragContext, args, args.length / 2);", "-\t\treturn 0;", "-\t}", "-", "-\t// ask drag source for dropped data", "-\tint[] transferEntries = new int[2];", "-\ttransferEntries[0]  = 0;", "-\ttransferEntries[1] = selectedDataType.type;", "-\t\t", "-\tint pTransferEntries = OS.XtMalloc(transferEntries.length * 4);", "-\tOS.memmove(pTransferEntries, transferEntries, transferEntries.length * 4);", "-\tif (transferProc == null)", "-\t\ttransferProc = new Callback(this, \"transferProcCallback\", 7);", "-", "-\tif (transferProc != null){", "-\t\tint[] args = new int[] {OS.XmNdropTransfers, pTransferEntries,", "-\t\t\t\t\tOS.XmNnumDropTransfers, transferEntries.length / 2,", "-\t\t\t\t\tOS.XmNtransferProc, transferProc.getAddress()};", "-", "-\t\tdropTransferObject = OS.XmDropTransferStart(droppedEventData.dragContext, args, args.length / 2);", "-\t\tOS.XtFree(pTransferEntries);", "-\t}", "-\t", "-\t*/", "-", "-\treturn 0;", "-}", "+public Transfer[] getTransfer() { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5365bedd6ab17d363812036561425c3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "7a42cc92cd5348bbf0e0886e024fbfe78c23cc9c", "commitAfterChange": "40516ff612bb729c6404f266bc1aa1d071b16ca1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private int dropProcCallback(int widget, int client_data, int call_data)", "signatureAfterChange": "  private void dropProcCallback(int widget, int client_data, int call_data)", "diff": ["-private int dropProcCallback(int widget, int client_data, int call_data) {", "+", "+private void dropProcCallback(int widget, int client_data, int call_data) {", "+\tif (call_data == 0) return;", "+\tif (droppedEventData.dropSiteStatus == OS.XmDROP_SITE_INVALID) {", "+\t\tint[] args = new int[] {OS.XmNtransferStatus, OS.XmTRANSFER_FAILURE, OS.XmNnumDropTransfers, 0};", "+\t\tdropTransferObject = OS.XmDropTransferStart(droppedEventData.dragContext, args, args.length / 2);", "+\t\treturn;", "+\t}", "+\t", "-\tevent.widget     = this.control;", "-\tevent.time       = droppedEventData.timeStamp;", "-\tshort [] root_x = new short [1];", "-\tshort [] root_y = new short [1];", "-\tOS.XtTranslateCoords (this.control.handle, (short) droppedEventData.x, (short) droppedEventData.y, root_x, root_y);", "-\tevent.x          = root_x[0];", "-\tevent.y          = root_y[0];", "-\tevent.dataTypes  = dataTypes;", "-\tint allowedOperations = osOpToOp(droppedEventData.operations);", "-\tevent.operations = allowedOperations;", "-\tevent.dataType   = selectedDataType;", "-\tevent.detail = lastOperation;", "-", "+\tif (!setEventData(droppedEventData.operations, droppedEventData.operation, droppedEventData.dragContext, droppedEventData.x, droppedEventData.y, droppedEventData.timeStamp, event)){", "+\t\treturn;", "+\t}", "+\t", "+\tint allowedOperations = event.operations;", "+\tTransferData[] allowedDataTypes = new TransferData[event.dataTypes.length];", "+\tSystem.arraycopy(event.dataTypes, 0, allowedDataTypes, 0, allowedDataTypes.length);", "+\t", "+\tevent.dataType = selectedDataType;", "+\tevent.detail = selectedOperation;", "-\tfor (int i = 0; i < dataTypes.length; i++) {", "-\t\tif (dataTypes[i].equals(event.dataType)) {", "-\t\t\tselectedDataType = event.dataType;", "-\t\t\tbreak;", "+\tif (event.dataType != null) {", "+\t\tfor (int i = 0; i < allowedDataTypes.length; i++) {", "+\t\t\tif (allowedDataTypes[i].type == event.dataType.type) {", "+\t\t\t\tselectedDataType = event.dataType;", "+\t\t\t\tbreak;", "+\t\t\t}", "-\tlastOperation = DND.DROP_NONE;", "-\tif (selectedDataType != null && ((event.detail & allowedOperations) == event.detail)) {", "-\t\tlastOperation = event.detail;", "-\t}", "-\tif (lastOperation == DND.DROP_NONE) {", "+\tselectedOperation = DND.DROP_NONE;", "+\tif (selectedDataType != null && ((event.detail & allowedOperations) == event.detail)) {", "+\t\tselectedOperation = event.detail;", "+\t}", "+", "+\tif (selectedOperation == DND.DROP_NONE) {", "-\t\treturn 0;", "+\t\treturn;", "-\t\t\t\tOS.XmNnumDropTransfers, transferEntries.length / 2,", "-\t\t\t\tOS.XmNtransferProc, TransferProc.getAddress()};", "+\t\t\t\t            OS.XmNnumDropTransfers, transferEntries.length / 2,", "+\t\t\t\t            OS.XmNtransferProc, TransferProc.getAddress()};", "-\treturn 0;"]}], "num": 28741}