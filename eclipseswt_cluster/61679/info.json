{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4f41cc5a49f06867fe6e026421e5093", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b1579427c61138ad2aafffe75a43dc9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/AllTests.java", "commitBeforeChange": "87cd41ab597ac9d75f03993fe1e70dc616eb4256", "commitAfterChange": "5c54974edbe7d779f3f9a8ae1153aea350594f28", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public AllTests()", "signatureAfterChange": "  public AllTests()", "diff": ["-\tsuper();", "-\t/* The logical order to run the tests in is:", "-\t * - SWT, SWTError, SWTException", "-\t * - Display", "-\t * - graphics classes", "-\t * - items and Caret, etc", "-\t * - widgets", "-\t * - dialogs", "-\t * - layout", "-\t * - custom widgets", "-\t * - printing and program", "-\t * - events", "-\t * - drag & drop", "-\t * - accessibility", "-\t * - OLE", "-\t * - browser", "-\t */", "-\taddTestSuite(Test_org_eclipse_swt_SWT.class);", "-\taddTestSuite(Test_org_eclipse_swt_SWTException.class);", "-\taddTestSuite(Test_org_eclipse_swt_SWTError.class);", "-", "-\t/* NOTE: If the Display test suite is run, it must be run", "-\t * before any other tests that need a display (i.e. graphics", "-\t * or widget tests, etc). Otherwise, an InvalidThreadAccess", "-\t * exception will be thrown for each Display test.", "-\t */", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Display.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Image.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Cursor.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_DeviceData.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_ImageLoaderEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_RGB.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Font.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Rectangle.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_FontData.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_GC.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_ImageData.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Region.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_FontMetrics.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Color.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_Point.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_PaletteData.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_ImageLoader.class);", "-\taddTestSuite(Test_org_eclipse_swt_graphics_TextLayout.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ExpandItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_MenuItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ToolItem.class);", "-\t//addTest(Test_org_eclipse_swt_widgets_CoolItem.suite());", "-\taddTestSuite(Test_org_eclipse_swt_widgets_TabItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_TableItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_TableColumn.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_TreeItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Caret.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Event.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Menu.class);", "-\t//addTest(Test_org_eclipse_swt_widgets_Tracker.suite());", "+\tsuper(AllTests.class.getName());", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Shell.class);", "-\t//addTest(Test_org_eclipse_swt_widgets_Decorations.suite());", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Label.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Button.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ExpandBar.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_List.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Text.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ScrollBar.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Sash.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Tree.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_TabFolder.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Combo.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Group.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ToolBar.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Table.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Canvas.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Scale.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Slider.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ProgressBar.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Composite.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Link.class);", "-\taddTest(new JUnit4TestAdapter(Test_org_eclipse_swt_widgets_DateTime.class));", "-\t//addTestSuite(Test_org_eclipse_swt_widgets_CoolBar.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_widgets_ColorDialog.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_FileDialog.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_DirectoryDialog.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_FontDialog.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_MessageBox.class);", "-\taddTestSuite(Test_org_eclipse_swt_widgets_Monitor.class);", "-\taddTestSuite(Test_org_eclipse_swt_layout_GridData.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_custom_TableTree.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_StyleRange.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_CCombo.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_TableTreeItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_CLabel.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_CTabItem.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_StyledText.class);", "-\taddTestSuite(Test_org_eclipse_swt_custom_CTabFolder.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_events_ControlEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_ModifyEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_ArmEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_ShellEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_TypedEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_PaintEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_VerifyEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_KeyEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_TraverseEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_DisposeEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_SelectionEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_HelpEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_FocusEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_MouseEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_MenuEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_events_TreeEvent.class);", "-\t", "-\taddTestSuite(Test_org_eclipse_swt_printing_PrintDialog.class);", "-\taddTestSuite(Test_org_eclipse_swt_printing_PrinterData.class);", "-\taddTestSuite(Test_org_eclipse_swt_printing_Printer.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_program_Program.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_accessibility_Accessible.class);", "-\taddTestSuite(Test_org_eclipse_swt_accessibility_AccessibleControlEvent.class);", "-\taddTestSuite(Test_org_eclipse_swt_accessibility_AccessibleEvent.class);", "-", "-\taddTestSuite(Test_org_eclipse_swt_browser_Browser.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_CloseWindowListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_LocationAdapter.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_LocationListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_OpenWindowListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_ProgressAdapter.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_ProgressListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_StatusTextListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_TitleListener.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_VisibilityWindowAdapter.class);", "-\taddTestSuite(Test_org_eclipse_swt_browser_VisibilityWindowListener.class);", "-\taddTestSuite(org.eclipse.swt.tests.junit.browser.Test_BrowserSuite.class);", "-", "+\taddTest(AllNonBrowserTests.suite());", "+\taddTest(AllBrowserTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56fe22dbc9c67be0fca81ae3bfef8733", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "9261515ec8255f5a441ba43146e123e19181d535", "commitAfterChange": "a1fedece41e31e9553bf3e514c2a2564f31a9dec", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void popupCalendarEvent (Event event)", "signatureAfterChange": "  void releaseWidget ()", "diff": ["-", "-void popupCalendarEvent (Event event) {", "-\tswitch (event.type) {", "-\t\tcase SWT.Dispose:", "-\t\t\tif (popupShell != null && !popupShell.isDisposed () && !isDisposed() && getShell () != popupShell.getParent ()) {", "-\t\t\t\tint year = popupCalendar.getYear ();", "-\t\t\t\tint month = popupCalendar.getMonth ();", "-\t\t\t\tint day = popupCalendar.getDay ();", "-\t\t\t\tpopupShell = null;", "-\t\t\t\tpopupCalendar = null;", "-\t\t\t\tcreatePopupShell (year, month, day);", "-\t\t\t}", "-\t\tcase SWT.FocusIn: {", "-\t\t\thandleFocus (SWT.FocusIn);", "-\t\t}", "-\t\tcase SWT.MouseUp: {", "-\t\t\tif (event.button != 1) return;", "-\t\t\t/*", "-\t\t\t* The drop-down should stay visible when the year/month ", "-\t\t\t* is changed.", "-\t\t\t*/", "-\t\t\tif (popupCalendar.monthChanged) {", "-\t\t\t\tpopupCalendar.monthChanged = false;", "-\t\t\t} else {", "-\t\t\t\tdropDownCalendar (false);", "-\t\t\t}", "-\t\t}", "-\t\tcase SWT.Selection: {", "-\t\t\tint year = popupCalendar.getYear ();", "-\t\t\tint month = popupCalendar.getMonth ();", "-\t\t\tint day = popupCalendar.getDay ();", "-\t\t\tsetDate(year, month, day);", "-\t\t\tEvent e = new Event ();", "-\t\t\te.time = event.time;", "-\t\t\te.stateMask = event.stateMask;", "-\t\t\te.doit = event.doit;", "-\t\t\tnotifyListeners (SWT.Selection, e);", "-\t\t\tevent.doit = e.doit;", "-\t\t}", "-\t\tcase SWT.Traverse: {", "-\t\t\tswitch (event.detail) {", "-\t\t\t\tcase SWT.TRAVERSE_RETURN:", "-\t\t\t\tcase SWT.TRAVERSE_ESCAPE:", "-\t\t\t\tcase SWT.TRAVERSE_ARROW_PREVIOUS:", "-\t\t\t\tcase SWT.TRAVERSE_ARROW_NEXT:", "-\t\t\t\t\tevent.doit = false;", "-\t\t\t\tcase SWT.TRAVERSE_TAB_NEXT:", "-\t\t\t\tcase SWT.TRAVERSE_TAB_PREVIOUS:", "-\t\t\t\t\tevent.doit = text.traverse(event.detail);", "-\t\t\t\t\tevent.detail = SWT.TRAVERSE_NONE;", "-\t\t\t\t\tif (event.doit) dropDownCalendar (false);", "-\t\t\t\t\treturn;", "-\t\t\t\tcase SWT.TRAVERSE_PAGE_NEXT:", "-\t\t\t\tcase SWT.TRAVERSE_PAGE_PREVIOUS:", "-\t\t\t\t\treturn;", "-\t\t\tEvent e = new Event ();", "-\t\t\te.time = event.time;", "-\t\t\te.detail = event.detail;", "-\t\t\te.doit = event.doit;", "-\t\t\te.character = event.character;", "-\t\t\te.keyCode = event.keyCode;", "-\t\t\tnotifyListeners (SWT.Traverse, e);", "-\t\t\tevent.doit = e.doit;", "-\t\t\tevent.detail = e.detail;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.KeyUp: {\t\t", "-\t\t\tEvent e = new Event ();", "-\t\t\te.time = event.time;", "-\t\t\te.character = event.character;", "-\t\t\te.keyCode = event.keyCode;", "-\t\t\te.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyUp, e);", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.KeyDown: {", "-\t\t\tif (event.character == SWT.ESC) {", "-\t\t\t\t/* Escape key cancels popupCalendar and reverts date */", "-\t\t\t\tpopupCalendar.setDate (savedYear, savedMonth, savedDay);", "-\t\t\t\tsetDate(savedYear, savedMonth, savedDay);", "-\t\t\t\tdropDownCalendar (false);", "-\t\t\t}", "-\t\t\tif (event.keyCode == SWT.CR || (event.stateMask & SWT.ALT) != 0 && (event.keyCode == SWT.ARROW_UP || event.keyCode == SWT.ARROW_DOWN)) {", "-\t\t\t\t/* Return, Alt+Down, and Alt+Up cancel popupCalendar and select date. */", "-\t\t\t\tdropDownCalendar (false);", "-\t\t\t}", "-\t\t\t/* At this point the widget may have been disposed.", "-\t\t\t * If so, do not continue. */", "-\t\t\tif (isDisposed ()) break;", "-\t\t\tEvent e = new Event();", "-\t\t\te.time = event.time;", "-\t\t\te.character = event.character;", "-\t\t\te.keyCode = event.keyCode;", "-\t\t\te.stateMask = event.stateMask;", "-\t\t\tnotifyListeners(SWT.KeyDown, e);", "+", "+void releaseWidget () {", "+\tsuper.releaseWidget();", "+\t//TODO: need to do anything here?"]}], "num": 61679}