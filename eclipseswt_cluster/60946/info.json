{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb14acabe4e0d83c0da042bf5791d97b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efcf7b3f6da9ac22c116da7a0a33d30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "66ce2b458013bbaf13e46024a36e0fe54ace3106", "commitAfterChange": "4b20aa65be996b2fd58ef76031e8571b18c21bd7", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\treturn;", "-\t}", "-", "-\t/* Hide the shell */", "-\tOS.XtSetMappedWhenManaged (shellHandle, false);", "-\tif (OS.XtIsTopLevelShell (shellHandle)) {", "-\t\tOS.XtUnmapWidget (shellHandle);", "-\t\tOS.XtPopdown (shellHandle);", "+\t", "+\t\t/* Hide the shell */", "+\t\tOS.XtSetMappedWhenManaged (shellHandle, false);", "+\t\tif (OS.XtIsTopLevelShell (shellHandle)) {", "+\t\t\tOS.XtUnmapWidget (shellHandle);", "+\t\t} else {", "+\t\t\tOS.XtPopdown (shellHandle);", "+\t\t}", "+\t", "+\t\t/* If the shell is iconified, hide the icon */", "+\t\tint xDisplay = OS.XtDisplay (shellHandle);", "+\t\tif (xDisplay == 0) return;", "+\t\tint xWindow = OS.XtWindow (shellHandle);", "+\t\tif (xWindow == 0) return;", "+\t\tOS.XWithdrawWindow (xDisplay, xWindow, OS.XDefaultScreen (xDisplay));", "+\t", "+\t\tsendEvent (SWT.Hide);", "-", "-\t/* If the shell is iconified, hide the icon */", "-\tint xDisplay = OS.XtDisplay (shellHandle);", "-\tif (xDisplay == 0) return;", "-\tint xWindow = OS.XtWindow (shellHandle);", "-\tif (xWindow == 0) return;", "-\tOS.XWithdrawWindow (xDisplay, xWindow, OS.XDefaultScreen (xDisplay));", "-", "-\tsendEvent (SWT.Hide);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3149ff96e0ea1282cb6409224843e09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "4e4c482e0bbb2f92025865eda544f5f0e394d3ef", "commitAfterChange": "ff923499e12bb3dad33cd8c11976ab6b3d58c1b0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void remove (int start, int end)", "signatureAfterChange": " public void remove (int start, int end)", "diff": ["-\t\treturn;", "-\t} ", "-\tint index = start;", "-\twhile (index <= end) {", "-\t\tignoreSelect = true;", "-\t\tint code = OS.SendMessage (handle, OS.LVM_DELETEITEM, start, 0);", "-\t\tignoreSelect = false;", "-\t\tif (code == 0) break;", "-\t\tif (items [index] != null) items [index].releaseResources ();", "-\t\tindex++;", "+\t} else {", "+\t\tint index = start;", "+\t\twhile (index <= end) {", "+\t\t\tignoreSelect = true;", "+\t\t\tint code = OS.SendMessage (handle, OS.LVM_DELETEITEM, start, 0);", "+\t\t\tignoreSelect = false;", "+\t\t\tif (code == 0) break;", "+\t\t\tif (items [index] != null) items [index].releaseResources ();", "+\t\t\tindex++;", "+\t\t}", "+\t\tSystem.arraycopy (items, index, items, start, count - index);", "+\t\tfor (int i=count-(index-start); i<count; i++) items [i] = null;", "+\t\tif (index <= end) error (SWT.ERROR_ITEM_NOT_REMOVED);", "-\tSystem.arraycopy (items, index, items, start, count - index);", "-\tfor (int i=count-(index-start); i<count; i++) items [i] = null;", "-\tif (index <= end) error (SWT.ERROR_ITEM_NOT_REMOVED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32dfdde1da39beb10bab5329cd4ff506", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void clearArea (int x, int y, int width, int height)", "signatureAfterChange": " void clearArea (int x, int y, int width, int height)", "diff": ["-\tif (OS.IsWindowVisible (handle)) return;", "-\tRECT rect = new RECT ();", "-\tOS.SetRect (rect, x, y, x + width, y + height);", "-\tint hDC = OS.GetDCEx (handle, 0, OS.DCX_CACHE | OS.DCX_CLIPCHILDREN | OS.DCX_CLIPSIBLINGS);", "-\tdrawBackground (hDC, rect);", "-\tOS.ReleaseDC (handle, hDC);", "+\tif (OS.IsWindowVisible (handle)) {", "+\t\tRECT rect = new RECT ();", "+\t\tOS.SetRect (rect, x, y, x + width, y + height);", "+\t\tint hDC = OS.GetDCEx (handle, 0, OS.DCX_CACHE | OS.DCX_CLIPCHILDREN | OS.DCX_CLIPSIBLINGS);", "+\t\tdrawBackground (hDC, rect);", "+\t\tOS.ReleaseDC (handle, hDC);", "+\t}"]}], "num": 60946}