{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f79426b8665293b11e2cc366a4aa7ce8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6202d9566cf8243838c20b9236e805", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "c8bcfab56ea0dc4cdd1bfe69aac5b374a70748a9", "commitAfterChange": "989fb1075097300f58fd768228bdc3c4b88924ed", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint xborder = 0, yborder = 0;", "-\t\tif ((style & SWT.BORDER) != 0) {", "-\t\t\tint /*long*/ style = OS.gtk_widget_get_style (handle);", "-\t\t\txborder += OS.gtk_style_get_xthickness (style);", "-\t\t\tyborder += OS.gtk_style_get_ythickness (style);", "-\t\t}", "-\t\txborder += INNER_BORDER;", "-\t\tyborder += INNER_BORDER;", "+\t}", "+\tint width = OS.PANGO_PIXELS (w [0]);", "+\tint height = OS.PANGO_PIXELS (h [0]);", "+\twidth = wHint == SWT.DEFAULT ? width : wHint;", "+\theight = hHint == SWT.DEFAULT ? height : hHint;", "+\tRectangle trim = computeTrim (0, 0, width, height);", "+\treturn new Point (trim.width, trim.height);", "+}", "-\tint width = OS.PANGO_PIXELS (w [0]);", "-\tint height = OS.PANGO_PIXELS (h [0]);", "-\twidth = wHint == SWT.DEFAULT ? width : wHint;", "-\theight = hHint == SWT.DEFAULT ? height : hHint;", "-\twidth += 2 * xborder;", "-\theight += 2 * yborder;", "-\tRectangle trim = computeTrim (0, 0, width, height);", "-\treturn new Point (trim.width, trim.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76bd7407d2abd825a18a7a38f874154", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "616faf05f2a514ae7f7583f4e4ca3f89f0f62d2b", "commitAfterChange": "3ec43f59725e5a292e734c2cffa19b065c1aeca8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void setMaximized (boolean maximized)", "signatureAfterChange": " public void setMaximized (boolean maximized)", "diff": ["-\t\t* PocketPC windows typically don't have a caption when they are", "-\t\t* maximized. They usually have one when they are not occupying all the", "-\t\t* space. We implement this behavior by default - it can be overriden by", "-\t\t* setting SWT.TITLE or SWT.NO_TRIM.", "-\t\t\tif ((style & SWT.TITLE) == 0) {", "-\t\t\t\t/* Remove caption when maximized */", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tbits &= ~OS.WS_CAPTION;", "-\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif ((style & SWT.NO_TRIM) == 0) {", "-\t\t\t\t/* Insert caption when no longer maximized */", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tbits |= OS.WS_CAPTION;", "-\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "-\t\t\t\tint flags = OS.SWP_NOMOVE | OS.SWP_NOSIZE | OS.SWP_NOZORDER | OS.SWP_DRAWFRAME;", "-\t\t\t\tSetWindowPos (handle, 0, 0, 0, 0, 0, flags);", "-\t\t\t}"]}], "num": 35688}