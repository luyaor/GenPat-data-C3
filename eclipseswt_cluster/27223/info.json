{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68dda8a31d925798d05bccf7f8bbfdd3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0ad26f50c0c6059d349db6aead3574d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "979617063880fb96af17f2e70d01ef24e3824845", "commitAfterChange": "635b5f07fa81c5761af2893b3125cc2d36caa6b6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["+", "+\tdisplay.grabControl = null;", "+\tdisplay.runDeferredEvents ();", "+\t\t\t\tif (outResult [0] == OS.kMouseTrackingMouseUp)  {", "+\t\t\t\t\tOS.GetControlBounds (handle, rect);", "+\t\t\t\t\tshort [] button = new short [1];", "+\t\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);", "+\t\t\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\t\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\t\t\t\tsendMouseEvent (SWT.MouseUp, button [0], true, chord, (short) (x - rect.left), (short) (y - rect.top), modifiers);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db87cc03f2743daa69712531a752b0d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "f6e418ce08de208f524d556323de8e3b12653f8f", "commitAfterChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": "  void releaseWidget ()", "diff": ["-\t\tmenu.releaseHandle ();", "+\t\tmenu.destroyWidget ();", "+\t} else {", "+\t\tif ((parent.style & SWT.BAR) != 0) {", "+\t\t\tshort [] outIndex = new short [1];", "+\t\t\tif (OS.GetIndMenuItemWithCommandID (parent.handle, id, 1, null, outIndex) == OS.noErr) {", "+\t\t\t\tint [] outMenuRef = new int [1];", "+\t\t\t\tOS.GetMenuItemHierarchicalMenu (parent.handle, outIndex [0], outMenuRef);", "+\t\t\t\tif (outMenuRef [0] != 0) {", "+\t\t\t\t\tOS.DeleteMenu (OS.GetMenuID (outMenuRef [0]));", "+\t\t\t\t\tOS.DisposeMenu (outMenuRef [0]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\tif (this == parent.defaultItem) {", "+\t\tparent.defaultItem = null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8412687859b1a7fc946c16ff8bac84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "a49f2cbc4da47f935eb3107bc9632b88888ad41f", "commitAfterChange": "8f88e2ea9dda5fd31ba5034707b2295762e68f5c", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs)", "signatureAfterChange": "  boolean shape (int hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp)", "diff": ["-boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs) {", "+boolean shape (int /*long*/ hdc, StyleItem run, char[] chars, int[] glyphCount, int maxGlyphs, SCRIPT_PROPERTIES sp) {", "+\tboolean useCMAPcheck = !sp.fComplex && !sp.fPrivateUseArea; ", "+\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "+\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "+\tOS.ScriptGetFontProperties(hdc, run.psc, fp);", "+\tif (useCMAPcheck) {", "+\t\tshort[] glyphs = new short[chars.length];", "+\t\tif (OS.ScriptGetCMap(hdc, run.psc, chars, chars.length, 0, glyphs) != OS.S_OK) {", "+\t\t\tif (run.psc != 0) {", "+\t\t\t\tOS.ScriptFreeCache(run.psc);", "+\t\t\t\tglyphCount[0] = 0;", "+\t\t\t\tOS.MoveMemory(run.psc, new int /*long*/ [1], OS.PTR_SIZEOF);", "+\t\t\t}", "+\t\t\treturn false;", "+\t\t}", "+\t}", "+\tif (useCMAPcheck) return true;", "+\t", "-\t\tSCRIPT_FONTPROPERTIES fp = new SCRIPT_FONTPROPERTIES ();", "-\t\tfp.cBytes = SCRIPT_FONTPROPERTIES.sizeof;", "-\t\tOS.ScriptGetFontProperties(hdc, run.psc, fp);"]}], "num": 27223}