{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff0e7e583b36362a36a6c21d7fb0cafe", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f4a0dfede3cb7ebec72a9a8c60d030", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void subtract (int[] pointArray)", "signatureAfterChange": " public void subtract (int[] pointArray)", "diff": ["-\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gdk_region_subtract(handle, polyRgn);", "-\tOS.gdk_region_destroy(polyRgn);", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(handle);", "+\t\t int count = pointArray.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t Cairo.cairo_region_subtract(handle, polyRgn);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\tOS.gdk_region_subtract(handle, polyRgn);", "+\t\tOS.gdk_region_destroy(polyRgn);", "+\t }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ed234d5bf7c730cdc4d4706450f251", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  long convertRgn(long rgn, double[] matrix)", "signatureAfterChange": "  long convertRgn(long rgn, double[] matrix)", "diff": ["-\tlong /*int*/ newRgn = OS.gdk_region_new();", "+\tlong /*int*/ newRgn = cairo_region_create ();", "-\tOS.gdk_region_get_rectangles(rgn, rects, nRects);", "+\tcairo_region_get_rectangles (rgn, rects, nRects);", "-\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\tOS.gdk_region_union(newRgn, polyRgn);", "-\t\tOS.gdk_region_destroy(polyRgn);", "+\t\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t long /*ing*/ cairo = OS.gdk_cairo_create(newRgn);", "+\t\t\t int count = pointArray.length / 2;", "+\t\t\t if (count == 0) return 0;", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t\t for (int n=1,j=2; n<count; n++,j+=2) {", "+\t\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t\t }", "+\t\t\t Cairo.cairo_close_path(cairo);", "+\t\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t\t Cairo.cairo_fill(cairo);", "+\t\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t\t Cairo.cairo_region_union(newRgn, polyRgn);", "+\t\t\t Cairo.cairo_destroy(cairo);", "+\t\t } else {", "+\t\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t\tOS.gdk_region_union(newRgn, polyRgn);", "+\t\t\tOS.gdk_region_destroy(polyRgn);", "+\t\t }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9935bbf5d6fa4ec8f69d60a3ef6dfdc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add (int[] pointArray)", "signatureAfterChange": " public void add (int[] pointArray)", "diff": ["-\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gdk_region_union(handle, polyRgn);", "-\tOS.gdk_region_destroy(polyRgn);", "+\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(handle);", "+\t\t int count = pointArray.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t Cairo.cairo_region_union (handle, polyRgn);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\t long /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t\tOS.gdk_region_union(handle, polyRgn);", "+\t\t\tOS.gdk_region_destroy(polyRgn);", "+\t }", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903b245112f7ecfa321eb3d20d141f10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tlong /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\tOS.gtk_widget_realize (handle);", "-\tlong /*int*/ window = gtk_widget_get_window (handle);", "-\tOS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "-\tOS.gdk_region_destroy (rgn);", "+\tOS.gtk_widget_realize(handle);", "+\tlong /*ing*/ window = gtk_widget_get_window (handle);", "+\t/*", "+\t As methods required to replicate gdk_window_shape_combine_region ()", "+\t are available starting from GTK+ 3, Cairo implementation that replicates", "+\t gdk_region_polygon () should be also available to GTK+ 3.0 and higher.", "+\t */", "+\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t long /*ing*/ cairo = OS.gdk_cairo_create(window);", "+\t\t int count = polyline.length / 2;", "+\t\t if (count == 0) return;", "+\t\t Cairo.cairo_move_to(cairo, polyline[0], polyline[1]);", "+\t\t for (int i=1,j=2; i<count; i++,j+=2) {", "+\t\t\t Cairo.cairo_move_to(cairo, polyline[j]+0.5, polyline[j+1]+0.5);", "+\t\t }", "+\t\t Cairo.cairo_close_path(cairo);", "+\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t Cairo.cairo_fill(cairo);", "+\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t long /*int*/ region = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t OS.gtk_widget_shape_combine_region (window, region);", "+\t\t Cairo.cairo_destroy(cairo);", "+\t } else {", "+\t\t long /*int*/ rgn = OS.gdk_region_polygon (polyline, polyline.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\t OS.gdk_window_shape_combine_region (window, rgn, 0, 0);", "+\t\t OS.gdk_region_destroy (rgn);", "+\t }"]}], "num": 62158}