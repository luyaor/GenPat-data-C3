{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "465633bb8d552579b188de05b0927c67", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1052ecce960ac35db08df2e2a8fa9b2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "c6f6287d8b8fdc02e78b208f87146aa3823ab38c", "commitAfterChange": "eae5c56386c6900bfd7feddaea222ffeb4fcdf2a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 91, "signatureBeforeChange": "\r int getBidiOffsetAtMouseLocation(int x, int line)", "signatureAfterChange": "\r int getBidiOffsetAtMouseLocation(int x, int line)", "diff": ["-}\r", "-int getBidiOffsetAtMouseLocation(int x, int line) {\r", "-\tString lineText = content.getLine(line);\r", "-\tint lineOffset = content.getOffsetAtLine(line);\r", "-\tStyledTextEvent event = getLineStyleData(lineOffset, lineText);\r", "-\tGC gc = new GC(this);\r", "-\tStyleRange[] styles = null;\r", "-\tint[] boldStyles;\r", "-\tStyledTextBidi bidi;\r", "-\tint[] values;\r", "-\tint offsetInLine;\r", "-\r", "-\tx += horizontalScrollOffset;\r", "-\tif (event != null) {\r", "-\t\tstyles = filterLineStyles(event.styles);\r", "-\t}\r", "-\tboldStyles = getBoldRanges(styles, lineOffset, lineText.length());\r", "-\tbidi = new StyledTextBidi(gc, tabWidth, lineText, boldStyles, boldFont, getStyleOffsets (lineText, lineOffset));\r", "-\tvalues = bidi.getCaretOffsetAndDirectionAtX(x);\r", "-\toffsetInLine = values[0];\r", "-\tlastCaretDirection = values[1];\r", "-\tgc.dispose();\r", "-\t\r", "-\treturn lineOffset + offsetInLine;\r", "-}\r", "+}\r", "+int getBidiOffsetAtMouseLocation(int x, int line) {\r", "+\tString lineText = content.getLine(line);\r", "+\tint lineOffset = content.getOffsetAtLine(line);\r", "+\tStyledTextEvent event = getLineStyleData(lineOffset, lineText);\r", "+\tGC gc = new GC(this);\r", "+\tStyleRange[] styles = null;\r", "+\tint[] boldStyles;\r", "+\tStyledTextBidi bidi;\r", "+\tint[] values;\r", "+\tint offsetInLine;\r", "+\r", "+\tx += horizontalScrollOffset;\r", "+\tif (event != null) {\r", "+\t\tstyles = filterLineStyles(event.styles);\r", "+\t}\r", "+\tboldStyles = getBoldRanges(styles, lineOffset, lineText.length());\r", "+\tbidi = new StyledTextBidi(gc, tabWidth, lineText, boldStyles, boldFont, getBidiSegments(lineText, lineOffset));\r", "+\tvalues = bidi.getCaretOffsetAndDirectionAtX(x);\r", "+\toffsetInLine = values[0];\r", "+\tlastCaretDirection = values[1];\r", "+\tgc.dispose();\r", "+\t\r", "+\treturn lineOffset + offsetInLine;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022f368a196b0ace95dc0e30dd744445", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6ef57fc0e6f6427596d6abd342b6a7b03248370d", "commitAfterChange": "9cf20db2863a33762a4a7c547242d28c6ec2ffdf", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 101, "signatureBeforeChange": "\r void doBidiMouseLocationChange(int x, int y, boolean select)", "signatureAfterChange": "\r int doMouseWordSelect(int x, int newCaretOffset, int line)", "diff": ["- */\r", "-void doBidiMouseLocationChange(int x, int y, boolean select) {\r", "-\tint line = (y + verticalScrollOffset) / lineHeight;\r", "-\tint lineCount = content.getLineCount();\r", "-\t\r", "-\tif (line > lineCount - 1) {\r", "-\t\tline = lineCount - 1;\r", "-\t}\t\r", "-\t// allow caret to be placed below first line only if receiver is \r", "-\t// not in single line mode. fixes 4820.\r", "-\tif (line == 0 || (isSingleLine() == false && line > 0)) {\r", "-\t\tint newCaretOffset = getBidiOffsetAtMouseLocation(x, line);\t\r", "-\t\tif (x >= 0 || \r", "-\t\t\tcontent.getLineAtOffset(newCaretOffset) != content.getLineAtOffset(caretOffset)) {\r", "-\t\t\t// Only change the caret offset when the mouse is within \r", "-\t\t\t// the left client area border or on a different line. \r", "-\t\t\t// Otherwise the autoscroll selection may be reset. \r", "-\t\t\t// Fixes 1GKM3XS\r", "-\t\t\tcaretOffset = newCaretOffset;\r", "-\t\t\tcaretLine = line;\r", "-\t\t\tif (select) {\r", "-\t\t\t\tdoMouseSelection();\r", "-\t\t\t}\r", "-\t\t\tsetBidiCaretLocation(null);\r", "-\t\t\tsetBidiKeyboardLanguage();\r", "-\t\t}\r", "-\t\tif (select == false) {\r", "-\t\t\tclearSelection(true);\r", "-\t\t}\r", "+ */\r", "+int doMouseWordSelect(int x, int newCaretOffset, int line) {\r", "+\tint wordOffset;\r", "+\r", "+\t// flip selection anchor based on word selection direction from \r", "+\t// base double click. Always do this here (and don't rely on doAutoScroll)\r", "+\t// because auto scroll only does not cover all possible mouse selections\r", "+\t// (e.g., mouse x < 0 && mouse y > caret line y)\r", "+ \tif (newCaretOffset < selectionAnchor && selectionAnchor == selection.x) {\r", "+\t\tselectionAnchor = doubleClickSelection.y;\r", "+\t}\r", "+\telse\r", "+\tif (newCaretOffset > selectionAnchor && selectionAnchor == selection.y) {\r", "+\t\tselectionAnchor = doubleClickSelection.x;\r", "+\t}\r", "+\tif (x >= 0 && x < getClientArea().width) {\r", "+\t\t// find the previous/next word\r", "+\t\tif (caretOffset == selection.x) {\r", "+\t\t\twordOffset = getWordStart(newCaretOffset);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\twordOffset = getWordEndNoSpaces(newCaretOffset);\r", "+\t\t}\r", "+\t\t// mouse word select only on same line mouse cursor is on\r", "+\t\tif (content.getLineAtOffset(wordOffset) == line) {\r", "+\t\t\tnewCaretOffset = wordOffset;\r", "+\t\t}\r", "+\t}\r", "+\treturn newCaretOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccf57b748498d18f6db9c95faae38abf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r void doCursorRight()", "signatureAfterChange": "\r void doBidiMouseLocationChange(int x, int y, boolean select)", "diff": ["- */\r", "-void doCursorRight() {\r", "-\t\tdoSelectionCursorRight();\r", "+}\r", "+void doBidiMouseLocationChange(int x, int y, boolean select) {\r", "+\tint line = (y + verticalScrollOffset) / lineHeight;\r", "+\tint lineCount = content.getLineCount();\r", "+\t\r", "+\tif (line > lineCount - 1) {\r", "+\t\tline = lineCount - 1;\r", "+\t}\t\r", "+\tif (line >= 0) {\r", "+\t\tString lineText = content.getLine(line);\r", "+\t\tint lineOffset = content.getOffsetAtLine(line);\r", "+\r", "+\r", "+\t\tGC gc = new GC(this);\r", "+\t\tStyleRange[] styles = null;\r", "+\t\tStyledTextEvent event = getLineStyleData(lineOffset, lineText);\r", "+\t\r", "+\t\tx += horizontalScrollOffset;\r", "+\t\tif (event != null) {\r", "+\t\t\tstyles = filterLineStyles(event.styles);\r", "+\t\t}\r", "+\t\tlastCaretDirection = SWT.NULL;\r", "+\t\tint[] boldStyles = getBoldRanges(styles, lineOffset, lineText.length());\r", "+\t\tStyledTextBidi bidi = new StyledTextBidi(gc, tabWidth, lineText, boldStyles, boldFont, getStyleOffsets (lineText, lineOffset));\r", "+\t\tint[] values = bidi.getCaretOffsetAndDirectionAtX(x);\r", "+\t\tint offsetInLine = values[0];\r", "+\t\tlastCaretDirection = values[1];\r", "+\t\tint newCaretOffset = lineOffset + offsetInLine;\r", "+//\t\tif (newCaretOffset != caretOffset) {\r", "+\t\t\tcaretOffset = newCaretOffset;\r", "+\t\t\tif (select) {\r", "+\t\t\t\tdoMouseSelection();\r", "+\t\t\t}\r", "+\t\t\tCaret caret = getCaret();\r", "+\t\t\tif (caret != null) {\r", "+\t\t\t\tint caretX = bidi.getCaretPosition(offsetInLine, lastCaretDirection);\r", "+\t\t\t\tcaretX = caretX - horizontalScrollOffset;\r", "+\t\t\t\tif (StyledTextBidi.getKeyboardLanguageDirection() == SWT.RIGHT) {\r", "+\t\t\t\t\tcaretX -= (getCaretWidth() - 1);\r", "+\t\t\t\t}\r", "+\t\t\t\tcreateBidiCaret();\r", "+\t\t\t\tcaret.setLocation(caretX, line * lineHeight - verticalScrollOffset);\r", "+\t\t\t}\r", "+//\t\t}\r", "+\t\tif (select == false) {\r", "+\t\t\tclearSelection(true);\r", "+\t\t}\r", "+\t}\r", "+}\r"]}], "num": 35318}