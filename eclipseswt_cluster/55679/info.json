{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "647c88bf60d79b544e513bf9e57c6f74", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2acb3748e0ae4b13f2b951fc94fc0a27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r int processMouseDown (int callData)", "signatureAfterChange": "\r int processMouseDown (int callData)", "diff": ["-\r", "-\tgetDisplay ().hideToolTip();\r", "-\tif (set && (style & SWT.RADIO) != 0) return 0;\r", "-\tsetDrawPressed(!set);\r", "-\treturn 0;\r", "-}\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.hideToolTip ();\r", "+\tXButtonEvent xEvent = new XButtonEvent ();\r", "+\tOS.memmove (xEvent, callData, XButtonEvent.sizeof);\r", "+\tif (xEvent.button == 1) {\r", "+\t\tif (!set && (style & SWT.RADIO) == 0) {\r", "+\t\t\tsetDrawPressed (!set);\r", "+\t\t}\r", "+\t/*\r", "+\t* Forward the mouse event to the parent.\r", "+\t* This is necessary so that mouse listeners\r", "+\t* in the parent will be called, despite the\r", "+\t* fact that the event did not really occur\r", "+\t* in X in the parent.  This is done to be\r", "+\t* compatible with Windows.\r", "+\t*/\r", "+\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\txEvent.window = OS.XtWindow (parent.handle);\r", "+\txEvent.x += argList [1];  xEvent.y += argList [3];\r", "+\tOS.memmove (callData, xEvent, XButtonEvent.sizeof);\r", "+\tparent.processMouseDown (callData);\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585d4240a45b05a7f21bd095f9fd0c8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r \r int processMouseMove (int callData)", "signatureAfterChange": "\r int processMouseMove (int callData)", "diff": ["-\r", "-\treturn 0;\r", "-}\r", "+\t/*\r", "+\t* Forward the mouse event to the parent.\r", "+\t* This is necessary so that mouse listeners\r", "+\t* in the parent will be called, despite the\r", "+\t* fact that the event did not really occur\r", "+\t* in X in the parent.  This is done to be\r", "+\t* compatible with Windows.\r", "+\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0};\r", "+\txEvent.window = OS.XtWindow (parent.handle);\r", "+\txEvent.x += argList [1];  xEvent.y += argList [3];\r", "+\t/*\r", "+\t* This code is intentionally commented.\r", "+\t* Currently, the implementation of the\r", "+\t* mouse move code in the parent interferes\r", "+\t* with tool tips for tool items.\r", "+\t*/\r", "+//\tOS.memmove (callData, xEvent, XButtonEvent.sizeof);\r", "+//\tparent.processMouseMove (callData);\r", "+\tparent.sendMouseEvent (SWT.MouseMove, 0, xEvent.state, xEvent);\r"]}], "num": 55679}