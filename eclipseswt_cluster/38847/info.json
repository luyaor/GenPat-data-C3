{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "181fd24038d08efcd99a4b0ce04c62e4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e410afde2bb75dcc8f9ccf7f213404", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "885970fba9f9572edc0cc5d534fd80ee6db9c6f0", "commitAfterChange": "cef4d11ad4fdc8cc42b4a3fde8d2759ee34cb3fa", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 111, "signatureBeforeChange": " public Point toDisplay (Point point)", "signatureAfterChange": "\r \r public Point toDisplay (int x, int y)", "diff": ["+\r", "+public Point toDisplay (int x, int y) {\r", "+\tcheckWidget();\r", "+\tshort [] position_x = new short [1], position_y = new short [1];\r", "+\tOS.PtGetAbsPosition (handle, position_x, position_y);\r", "+\treturn new Point (x + position_x [0], y + position_y [0]);\r", "-\tshort [] x = new short [1], y = new short [1];\r", "-\tOS.PtGetAbsPosition (handle, x, y);\r", "-\treturn new Point (point.x + x [0], point.y + y [0]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89fb4a5d565e9943ed99c96ae80875d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "885970fba9f9572edc0cc5d534fd80ee6db9c6f0", "commitAfterChange": "cef4d11ad4fdc8cc42b4a3fde8d2759ee34cb3fa", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public Point toControl (Point point)", "signatureAfterChange": "\r \r public Point toControl (int x, int y)", "diff": ["+public Point toControl (int x, int y) {\r", "+\tcheckWidget();\r", "+\tshort [] position_x = new short [1], position_y = new short [1];\r", "+\tOS.PtGetAbsPosition (handle, position_x, position_y);\r", "+\treturn new Point (x - position_x [0], y - position_y [0]);\r", "+}\r", "-\tshort [] x = new short [1], y = new short [1];\r", "-\tOS.PtGetAbsPosition (handle, x, y);\r", "-\treturn new Point (point.x - x [0], point.y - y [0]);\r"]}], "num": 38847}