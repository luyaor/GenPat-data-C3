{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "875f9abd3ff9711396070479cb0ede69", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c15fb68fa36d4649a6528f1f5f474b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e424212a508f9f5de7743d6a2d8e402a0d6e1f17", "commitAfterChange": "153580ea96086e7ad0df546df7131dbd98b467e2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["+\tint nsColumnIndex = 0;", "-\t\tint index = (int)/*64*/columnsSet.firstIndex ();", "+\t\tnsColumnIndex = (int)/*64*/columnsSet.firstIndex ();", "-\t\tid nsColumn = nsColumns.objectAtIndex (index);", "+\t\tid nsColumn = nsColumns.objectAtIndex (nsColumnIndex);", "+", "+\t\tif (drawSelection) {", "+\t\t\tNSRect selectionRect = new NSRect ();", "+\t\t\tselectionRect.y = rect.y; selectionRect.height = rect.height;", "+\t\t\tif (columnCount > 0) {", "+\t\t\t\tNSRect columnRect = tableView.rectOfColumn (nsColumnIndex);", "+\t\t\t\tselectionRect.x = columnRect.x; selectionRect.width = columnRect.width;", "+\t\t\t} else {", "+\t\t\t\tNSRect rowRect = tableView.rectOfRow (rowIndex);", "+\t\t\t\tif ((style & SWT.CHECK) != 0) {", "+\t\t\t\t\t/* highlighting at this stage draws over the checkbox, so don't include its column */", "+\t\t\t\t\tint checkWidth = (int)/*64*/checkColumn.width ();", "+\t\t\t\t\tselectionRect.x = checkWidth;", "+\t\t\t\t\tselectionRect.width = rowRect.width - checkWidth;", "+\t\t\t\t} else {", "+\t\t\t\t\tselectionRect.width = rowRect.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcallSuper (tableView.id, OS.sel_highlightSelectionInClipRect_, selectionRect);", "+\t\t}\t", "-\tif (drawSelection) {", "-\t\t// TODO can it be drawn natively in fullRect?", "+\tif (drawBackground && !drawSelection) {", "-\t\tnsSelectionBackground.setFill ();", "+\t\tfloat[] colorRGB = background.handle;", "+\t\tNSColor color = NSColor.colorWithDeviceRed (colorRGB[0], colorRGB[1], colorRGB[2], 1f);", "+\t\tcolor.setFill ();", "-\t} else {", "-\t\tif (drawBackground) {", "-\t\t\tNSGraphicsContext context = NSGraphicsContext.currentContext ();", "-\t\t\tcontext.saveGraphicsState ();", "-\t\t\tfloat[] colorRGB = background.handle;", "-\t\t\tNSColor color = NSColor.colorWithDeviceRed (colorRGB[0], colorRGB[1], colorRGB[2], 1f);", "-\t\t\tcolor.setFill ();", "-\t\t\tNSBezierPath.fillRect (fullRect);", "-\t\t\tcontext.restoreGraphicsState ();", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bdcadbc0d81746bb911c038fe248358", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e424212a508f9f5de7743d6a2d8e402a0d6e1f17", "commitAfterChange": "153580ea96086e7ad0df546df7131dbd98b467e2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["+\tint nsColumnIndex = 0;", "-\t\tint index = (int)/*64*/columnsSet.firstIndex ();", "+\t\tnsColumnIndex = (int)/*64*/columnsSet.firstIndex ();", "-\t\tnsColumn = nsColumns.objectAtIndex (index);", "+\t\tnsColumn = nsColumns.objectAtIndex (nsColumnIndex);", "-\t\t\tint nsColumnIndex = (int)/*64*/outlineView.columnWithIdentifier (nsColumn);", "+\t\tif (drawSelection) {", "+\t\t\tNSRect selectionRect = new NSRect ();", "+\t\t\tselectionRect.y = rect.y; selectionRect.height = rect.height;", "+\t\t\tif (columnCount > 0) {", "+\t\t\t\tNSRect columnRect = outlineView.rectOfColumn (nsColumnIndex);", "+\t\t\t\tselectionRect.x = columnRect.x; selectionRect.width = columnRect.width;", "+\t\t\t} else {", "+\t\t\t\tNSRect rowRect = outlineView.rectOfRow (rowIndex);", "+\t\t\t\tif ((style & SWT.CHECK) != 0) {", "+\t\t\t\t\t/* highlighting at this stage draws over the checkbox, so don't include its column */", "+\t\t\t\t\tint checkWidth = (int)/*64*/checkColumn.width ();", "+\t\t\t\t\tselectionRect.x = checkWidth;", "+\t\t\t\t\tselectionRect.width = rowRect.width - checkWidth;", "+\t\t\t\t} else {", "+\t\t\t\t\tselectionRect.width = rowRect.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcallSuper (outlineView.id, OS.sel_highlightSelectionInClipRect_, selectionRect);", "+\t\t}", "-\tif (drawSelection) {", "-\t\t// TODO can it be drawn natively in fullRect?", "+\tif (drawBackground && !drawSelection) {", "-\t\tnsSelectionBackground.setFill ();", "+\t\tfloat[] colorRGB = background.handle;", "+\t\tNSColor color = NSColor.colorWithDeviceRed (colorRGB[0], colorRGB[1], colorRGB[2], 1f);", "+\t\tcolor.setFill ();", "-\t} else {", "-\t\tif (drawBackground) {", "-\t\t\tNSGraphicsContext context = NSGraphicsContext.currentContext ();", "-\t\t\tcontext.saveGraphicsState ();", "-\t\t\tfloat[] colorRGB = background.handle;", "-\t\t\tNSColor color = NSColor.colorWithDeviceRed (colorRGB[0], colorRGB[1], colorRGB[2], 1f);", "-\t\t\tcolor.setFill ();", "-\t\t\tNSBezierPath.fillRect (fullRect);", "-\t\t\tcontext.restoreGraphicsState ();", "-\t\t}"]}], "num": 13613}