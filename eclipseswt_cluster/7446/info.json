{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e01c66bdd81c26112aae3be0263bef1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d0a4692a5e8ac0bdafa5563f1632361", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["-\tif ((clipboards & DND.CLIPBOARD) == 0) return;", "-\tint xDisplay = OS.XtDisplay (shellHandle);", "-\tif (xDisplay == 0) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\tint xWindow = OS.XtWindow (shellHandle);", "-\tif (xWindow == 0) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);\t", "-\t// Open clipboard for setting", "-\tint[] item_id = new int[1];\t\t\t", "-\tif (OS.XmClipboardStartCopy(xDisplay, xWindow, 0, OS.XtLastTimestampProcessed(xDisplay), shellHandle, 0, item_id) != OS.XmClipboardSuccess){", "+\tif ((clipboards & DND.CLIPBOARD) != 0) {", "+\t\tClipboardData = data;", "+\t\tClipboardDataTypes = dataTypes;", "+\t\t_setContents(data, dataTypes, clipboardAtom);", "+\t\tactiveClipboard = this;", "+\t}", "+\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0) {", "+\t\tPrimaryClipboardData = data;", "+\t\tPrimaryClipboardDataTypes = dataTypes;", "+\t\t_setContents(data, dataTypes, primaryAtom);", "+\t\tactivePrimaryClipboard = this;", "+\t}", "+}", "-\ttry {", "-\t\t// copy data directly over to System clipboard (not deferred)", "-\t\tfor (int i = 0; i < dataTypes.length; i++) {", "-\t\t\tint[] ids = dataTypes[i].getTypeIds();", "-\t\t\tString[] names = dataTypes[i].getTypeNames();", "-\t\t\tfor (int j = 0; j < names.length; j++) {", "-\t\t\t\tTransferData transferData = new TransferData();", "-\t\t\t\ttransferData.type = ids[j];", "-\t\t\t\tdataTypes[i].javaToNative(data[i], transferData);", "-\t\t\t\tif (transferData.result != 1) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t\t\t\ttry {", "-\t\t\t\t\tif (transferData.format != 8) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t\t\t\t\tbyte[] buffer = new byte[transferData.length];", "-\t\t\t\t\tOS.memmove(buffer, transferData.pValue, transferData.length);", "-\t\t\t\t\tbyte[] bName = Converter.wcsToMbcs(null, names[j], true);", "-\t\t\t\t\tif (OS.XmClipboardCopy(xDisplay, xWindow, item_id[0], bName, buffer, transferData.length, 0, null) != OS.XmClipboardSuccess) {", "-\t\t\t\t\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t\t\t\t\t}", "-\t\t\t\t} finally {", "-\t\t\t\t\tOS.XtFree(transferData.pValue);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t} finally {", "-\t\t// close clipboard  for setting", "-\t\tOS.XmClipboardEndCopy(xDisplay, xWindow, item_id[0]);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985f9575781b8b0aac2514665b0144e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5d484c6476bc4892c9825b0c805179fe47e751d4", "commitAfterChange": "2efd019c0428e46dfacf8317bc1b4ae9f271e166", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public void setSelectionBackground(Color[] colors, int[] percents, boolean vertical)", "signatureAfterChange": " public void setSelectionBackground(Image image)", "diff": ["+\tsetSelectionBackground(image, false);", "+}"]}], "num": 7446}