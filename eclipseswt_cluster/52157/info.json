{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "715b0309700bb857d493a3234a693801", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67c58065c6fe0205e5806c84b196a9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean forceFocus ()", "signatureAfterChange": "  public boolean forceFocus ()", "diff": ["- */", "+", "-\tDecorations shell = menuShell ();", "-\tshell.setSavedFocus (this);", "-\tif (!isEnabled () || !isVisible () /* AW || !isActive () */) return false;", "-\tif (isFocusControl ()) return true;", "-\tshell.bringToTop ();", "-\t/*", "-\t* This code is intentionally commented.", "-\t*", "-\t* When setting focus to a control, it is", "-\t* possible that application code can set", "-\t* the focus to another control inside of", "-\t* WM_SETFOCUS.  In this case, the original", "-\t* control will no longer have the focus", "-\t* and the call to setFocus() will return", "-\t* false indicating failure.", "-\t* ", "-\t* We are still working on a solution at", "-\t* this time.", "-\t*/", "-//\tif (OS.GetFocus () != OS.SetFocus (handle)) return false;", "-\t\t", "-\t/* AW", "-\tOS.SetFocus (handle);", "-\t*/", "-\t", "-\tboolean focus= false;", "-\t", "-\tif (this instanceof Text || this instanceof List || this instanceof Combo || this instanceof Canvas)", "-\t\tfocus= true;", "-\tif (!focus && MacUtil.FULL_KBD_NAV && this instanceof Button)", "-\t\tfocus= true;", "-\t", "-\tif (focus) {", "-\t\tDisplay display= getDisplay();", "-\t\tif (display != null)", "-\t\t\tdisplay.setMacFocusHandle(((Shell)shell).shellHandle, handle);", "-\t}", "-", "-\treturn isFocusControl ();", "+\tint window = OS.GetControlOwner (handle);", "+\treturn OS.SetKeyboardFocus (window, handle, (short)OS.kControlFocusNextPart) == OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190004953fcb3631718a75984a3a3d49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2da14226ad0194251d73fcc9e143564faa5e089c", "commitAfterChange": "8a38e5075e653df3889cb080a0f04508bee57d8f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public void drawText (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": "\r public void drawText (String string, int x, int y, boolean isTransparent)", "diff": ["+\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB;\r", "+\tif (isTransparent) flags |= SWT.DRAW_TRANSPARENT;\r", "+\tdrawText(string, x, y, flags);\r", "+}\r", "-\tbyte [] textBuffer = Converter.wcsToMbcs (getCodePage (), string, true);\r", "-\tint xmString = OS.XmStringGenerate(textBuffer, null, OS.XmCHARSET_TEXT, _MOTIF_DEFAULT_LOCALE);\r", "-\tif (isTransparent) {\r", "-\t\tOS.XmStringDraw (data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\r", "-\t\tOS.XmStringDrawImage (data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);\t\r", "-\t}\t\t\r", "-//\tOS.XmStringDrawUnderline (display, drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, 0);\r", "-\tOS.XmStringFree (xmString);\r"]}], "num": 52157}