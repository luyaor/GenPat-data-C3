{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d38292d74cf2f2fe5bebc9f6b861714", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a65f27b33be9053b6771d84a8098a4d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "23e2c5eabb29e7b998d3c9c82bb6754372d62a71", "commitAfterChange": "9927361197d477d52c62f2dc9061f9e7fb7b75e0", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\tboolean events = false;", "-\tevents |= runTimers ();", "-\tevents |= runContexts ();", "-\tevents |= runPopups ();", "-\tNSEvent event = application.nextEventMatchingMask(0, null, OS.NSDefaultRunLoopMode, true);", "-\t", "-\tif (event != null) {", "-\t\tevents = true;", "-\t\tapplication.sendEvent(event);", "-\t}", "-//\t\tNSEvent event = NSEvent.otherEventWithType(OS.NSApplicationDefined, new NSPoint(), 0, 0, 0, null, SWT_IDLE_TYPE, 0, 0);", "-//\t\tapplication.postEvent(event, false);", "-//\t\tidle = true;", "-//\t\tapplication.run();", "-//\t\tevents |= !idle;", "-\t\tif (events) {", "-\t\t\trunDeferredEvents ();", "+\t\tboolean events = false;", "+\t\tevents |= runTimers ();", "+\t\tevents |= runContexts ();", "+\t\tevents |= runPopups ();", "+\t\tNSEvent event = application.nextEventMatchingMask(0, null, OS.NSDefaultRunLoopMode, true);", "+\t\tif (event != null) {", "+\t\t\tevents = true;", "+\t\t\tapplication.sendEvent(event);", "+\t\t}", "+\t\tif (events || runDeferredEvents ()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8add16373c1426e30a21157ee74c9b6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\tNSAutoreleasePool pool = (NSAutoreleasePool)new NSAutoreleasePool().alloc().init();", "-\ttry {", "-\t\tboolean events = false;", "-\t\tevents |= runTimers ();", "-\t\tevents |= runContexts ();", "-\t\tevents |= runPopups ();", "-\t\tNSEvent event = application.nextEventMatchingMask(0, null, OS.NSDefaultRunLoopMode, true);", "-\t\tif (event != null) {", "-\t\t\tevents = true;", "-\t\t\tapplication.sendEvent(event);", "-\t\t}", "+\tpool.release();", "+\tpool = (NSAutoreleasePool)new NSAutoreleasePool().alloc().init();", "+\tboolean events = false;", "+\tevents |= runTimers ();", "+\tevents |= runContexts ();", "+\tevents |= runPopups ();", "+\tNSEvent event = application.nextEventMatchingMask(0, null, OS.NSDefaultRunLoopMode, true);", "+\tif (event != null) {", "+\t\tevents = true;", "+\t\tapplication.sendEvent(event);", "+\t}", "-\t\tif (events) {", "-\t\t\trunDeferredEvents ();", "-\t\t\treturn true;", "-\t\t}", "-\t\treturn runAsyncMessages (false);", "-\t} finally {", "-\t\tpool.release();", "+\tif (events) {", "+\t\trunDeferredEvents ();", "+\t\treturn true;", "+\treturn runAsyncMessages (false);"]}], "num": 45216}