{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5ea3dda742a6da4b8887997abac2174", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b7f9e5031fd19f20777a05ec37d563", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "da5b2096f70170c1ee5967072f15746afe644075", "commitAfterChange": "e1a1a9a2764b9fd42d3fd4db27d8d960a32582f7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public String[] getAvailableTypeNames()", "signatureAfterChange": "\r public String[] getAvailableTypeNames()", "diff": ["-\tint[] count = new int[1];\r", "-\tint[] max_length = new int[1];\r", "-//\tint xDisplay = OS.XtDisplay (shellHandle);\r", "-//\tif (xDisplay == 0)\r", "-//\t\tDND.error(SWT.ERROR_UNSPECIFIED);\r", "-//\tint xWindow = OS.XtWindow (shellHandle);\r", "-//\tif (xWindow == 0)\r", "-//\t\tDND.error(SWT.ERROR_UNSPECIFIED);\r", "-//\tif (OS.XmClipboardInquireCount(xDisplay, xWindow, count, max_length) != OS.XmClipboardSuccess)\r", "-//\t\tDND.error(SWT.ERROR_UNSPECIFIED);\r", "-\tString[] types = new String[count[0]];\r", "-//\tfor (int i = 0; i < count[0]; i++) {\r", "-//\t\tbyte[] buffer = new byte[max_length[0]];\r", "-//\t\tint[] copied_length = new int[1];\r", "-//\t\tint rc = OS.XmClipboardInquireFormat(xDisplay, xWindow, i + 1, buffer, buffer.length, copied_length);\r", "-//\t\tif (rc == OS.XmClipboardNoData){\r", "-//\t\t\ttypes[i] = \"\";\r", "-//\t\t\tcontinue;\r", "-//\t\t}\r", "-//\t\tif (rc != OS.XmClipboardSuccess)\r", "-//\t\t\tDND.error(SWT.ERROR_UNSPECIFIED);\r", "-//\t\tbyte[] buffer2 = new byte[copied_length[0]];\r", "-//\t\tSystem.arraycopy(buffer, 0, buffer2, 0, copied_length[0]);\r", "-//\t\ttypes[i] = new String(buffer2);\r", "-//\t}\r", "+\tString[] types = new String[0];\r", "+\tint ig = OS.PhInputGroup(0);\r", "+\tint cbdata = OS.PhClipboardPasteStart((short)ig);\r", "+\tif (cbdata == 0) return types;\r", "+\ttry {\r", "+\t\tint pClipHeader = 0;\r", "+\t\tint n = 0;\r", "+\t\twhile ((pClipHeader = OS.PhClipboardPasteTypeN(cbdata, n++)) != 0) {\r", "+\t\t\tPhClipHeader clipHeader = new PhClipHeader();\r", "+\t\t\tOS.memmove(clipHeader, pClipHeader, PhClipHeader.sizeof);\r", "+\t\t\tbyte[] buffer = new byte[8];\r", "+\t\t\tbuffer[0] = clipHeader.type_0;\r", "+\t\t\tbuffer[1] = clipHeader.type_1;\r", "+\t\t\tbuffer[2] = clipHeader.type_2;\r", "+\t\t\tbuffer[3] = clipHeader.type_3;\r", "+\t\t\tbuffer[4] = clipHeader.type_4;\r", "+\t\t\tbuffer[5] = clipHeader.type_5;\r", "+\t\t\tbuffer[6] = clipHeader.type_6;\r", "+\t\t\tbuffer[7] = clipHeader.type_7;\r", "+\t\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer);\r", "+\t\t\t\r", "+\t\t\tString[] newTypes = new String[types.length + 1];\r", "+\t\t\tSystem.arraycopy(types, 0, newTypes, 0, types.length);\r", "+\t\t\tnewTypes[types.length] = new String (unicode);\r", "+\t\t\ttypes = newTypes;\r", "+\t\t}\r", "+\t} finally {\r", "+\t\tOS.PhClipboardPasteFinish(cbdata);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5abb76d5f1d2b3348d915cf02d60a2e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private byte[][] _getAvailableTypes()", "signatureAfterChange": "  int[] getAvailableTypes(int xDisplay, int selection)", "diff": ["+", "+int[] getAvailableTypes(int xDisplay, int selection) {", "+\tdone = false;", "+\tselectionValue = null; selectionTransfer = null;", "+\tOS.XtGetSelectionValue(shellHandle, selection, targetsAtom, XtSelectionCallbackCallback.getAddress(), 0, OS.CurrentTime);", "+\tif (!done) {", "+\t\tint xtContext = OS.XtDisplayToApplicationContext(xDisplay);", "+\t\tint selectionTimeout = OS.XtAppGetSelectionTimeout(xtContext);", "+\t\t_wait(selectionTimeout);", "+\t\t", "+\t}", "+\treturn (!done || selectionValue == null) ? new int[0] : (int[])selectionValue;", "-", "-private byte[][] _getAvailableTypes() {", "-\tbyte[][] types = new byte[0][];", "-\tint[] count = new int[1];", "-\tint[] max_length = new int[1];", "-\tint xDisplay = OS.XtDisplay (shellHandle);", "-\tif (xDisplay == 0) return types;", "-\tint xWindow = OS.XtWindow (shellHandle);", "-\tif (xWindow == 0) return types;", "-\tif (OS.XmClipboardInquireCount(xDisplay, xWindow, count, max_length) == 0) {", "-\t\treturn types;", "-\t}", "-\tif (count[0] == 0) return types;", "-\ttypes = new byte[count[0]][];", "-\tfor (int i = 0; i < count[0]; i++) {", "-\t\tbyte[] buffer = new byte[max_length[0]];", "-\t\tint[] copied_length = new int[1];", "-\t\tint rc = OS.XmClipboardInquireFormat(xDisplay, xWindow, i + 1, buffer, buffer.length, copied_length);", "-\t\tif (rc != OS.XmClipboardSuccess) continue;", "-\t\tindex++;", "-\t\tbyte[] buffer2 = new byte[copied_length[0]];", "-\t\tSystem.arraycopy(buffer, 0, buffer2, 0, copied_length[0]);", "-\t\ttypes[index] = buffer2;", "-\t\ttypes = new byte[0][0];", "-\t} else if (index + 1 < types.length) {", "-\t\tbyte[][] newTypes = new byte[index + 1][];", "-\t\tSystem.arraycopy(types, 0, newTypes, 0, index + 1);", "-\t\ttypes = newTypes;", "-\treturn types;"]}], "num": 55037}