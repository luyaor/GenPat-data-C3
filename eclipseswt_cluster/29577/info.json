{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9593bfcbd7ec16f66998d3f78becf4b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d032a99524182cc986d3028f5efd6ab9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "7e2ba37a9ab709064fb7c30a21b2171523d931fb", "commitAfterChange": "44709f164493be891400040d2461b8e125354543", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["+\tRectangle [] bounds = null;", "-\t\t\tchild.setBounds (x + x1, y + y1, x2 - x1, y2 - y1);", "+\t\t\tif (bounds == null) bounds = new Rectangle [children.length];", "+\t\t\tbounds [i] = new Rectangle (x + x1, y + y1, x2 - x1, y2 - y1);", "+\tif (move) {", "+\t\tfor (int i=0; i<children.length; i++) {", "+\t\t\tchildren [i].setBounds (bounds [i]);\t\t", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a83c004ca74f2dacd11677992c5f40fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "9a9dd8754f7df7c894a540a8f31a63af6610f554", "commitAfterChange": "4bf442d9fa0efe7ae5c683a478050fdd1352dbf0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test_getItems()", "signatureAfterChange": "  public void test_getItems()", "diff": ["+\tTreeItem [][] items = new TreeItem [cases.length][];", "+\tfor (int j = 0; j < cases.length; j++) {", "+\t\titems [j] = new TreeItem [cases [j]];", "+\t}", "+\t\t\titems [j][i] = ti;", "-\t\tassertEquals(cases[j], tree.getItems().length);", "+\t\tassertEquals(items[j], tree.getItems());", "-\t\tTreeItem[] items = tree.getItems();", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\tassertEquals(String.valueOf(i), items[i].getText());", "+\t\tTreeItem[] items2 = tree.getItems();", "+\t\tfor (int i = 0; i < items2.length; i++) {", "+\t\t\tassertEquals(String.valueOf(i), items2[i].getText());"]}], "num": 29577}