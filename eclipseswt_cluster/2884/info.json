{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59045b42bb6bc2ec8e9362209a2e742d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47861455a5bbd38d7f4181ded1e36c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/win32/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "e8ed8f866b4554db5f0ce1dcc250dd26fe065f75", "commitAfterChange": "7f82115294c600ab14241dd53ff39833a1822b40", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static String getLibraryName (String mozillaPath)", "signatureAfterChange": "  static String getLibraryName (String mozillaPath)", "diff": ["-\treturn \"xpcom.dll\"; //$NON-NLS-1$", "+\t/*", "+\t * The name of the Gecko library to glue to changed between the XULRunner 10 and", "+\t * 24 releases.  However it's not possible to programmatically know the version", "+\t * of a XULRunner that's being used before it has been glued.  To determine the", "+\t * appropriate Gecko library name to return, look for the presence of an \"xpcom\"", "+\t * library in the mozilla path, which is present in all supported XULRunner releases", "+\t * prior to XULRunner 24.  If this library is there then return it, and if it's not", "+\t * there then assume that XULRunner 24 is being used and return the new library name", "+\t * instead (\"xul\").", "+\t */", "+\tif (IsXULRunner24 == null) { /* IsXULRunner24 not yet initialized */", "+\t\tIsXULRunner24 = new File (mozillaPath, LIB_XPCOM).exists () ? Boolean.FALSE : Boolean.TRUE;", "+\t}", "+\treturn IsXULRunner24.booleanValue () ? LIB_XUL : LIB_XPCOM;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb90f3f1ad516614c521892a2333c5b9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/cocoa/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "3571e079b0e6c7cf01f49c0ce660392fa12c04b6", "commitAfterChange": "2e38aea6e0dfc01c53d7c7a9086d44e5eff3b477", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static String getLibraryName (String mozillaPath)", "signatureAfterChange": "  static String getLibraryName (String mozillaPath)", "diff": ["-\treturn \"libxpcom.dylib\"; //$NON-NLS-1$", "+\t/*", "+\t * The name of the Gecko library to glue to changed between the XULRunner 10 and", "+\t * 24 releases.  However it's not possible to programmatically know the version", "+\t * of a XULRunner that's being used before it has been glued.  To determine the", "+\t * appropriate Gecko library name to return, look for the presence of an \"xpcom\"", "+\t * library in the mozilla path, which is present in all supported XULRunner releases", "+\t * prior to XULRunner 24.  If this library is there then return it, and if it's not", "+\t * there then assume that XULRunner 24 is being used and return the new library name", "+\t * instead (\"XUL\").", "+\t */", "+\tif (IsXULRunner24 == null) { /* IsXULRunner24 not yet initialized */", "+\t\tIsXULRunner24 = new File (mozillaPath, LIB_XPCOM).exists () ? Boolean.FALSE : Boolean.TRUE;", "+\t}", "+\treturn IsXULRunner24.booleanValue () ? LIB_XUL : LIB_XPCOM;"]}], "num": 2884}