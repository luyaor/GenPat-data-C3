{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c60fd5efd856ac181c062b2b04421961", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03056bf9c29c07e44b836421f0e8e50d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " \tint get_selectedRows(int ppSelectedRows, int pNRows)", "signatureAfterChange": " \tint get_selectedRows(long ppSelectedRows, long pNRows)", "diff": ["-\tint get_selectedRows(int /*long*/ ppSelectedRows, int /*long*/ pNRows) {", "+\tint get_selectedRows(long /*int*/ ppSelectedRows, long /*int*/ pNRows) {", "-\t\t\tCOM.MoveMemory(ppSelectedRows, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppSelectedRows, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\tint /*long*/ pv = COM.CoTaskMemAlloc(count * 4);", "+\t\tlong /*int*/ pv = COM.CoTaskMemAlloc(count * 4);", "-\t\tCOM.MoveMemory(ppSelectedRows, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppSelectedRows, new long /*int*/ [] { pv }, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4164c2b842e95cf576a16e8b9737ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 344, "signatureBeforeChange": " \tint get_selectedColumns(int ppSelectedColumns, int pNColumns)", "signatureAfterChange": " \tint get_selectedColumns(long ppSelectedColumns, long pNColumns)", "diff": ["-\tint get_selectedColumns(int /*long*/ ppSelectedColumns, int /*long*/ pNColumns) {", "+\tint get_selectedColumns(long /*int*/ ppSelectedColumns, long /*int*/ pNColumns) {", "-\t\t\tCOM.MoveMemory(ppSelectedColumns, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppSelectedColumns, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\tint /*long*/ pv = COM.CoTaskMemAlloc(count * 4);", "+\t\tlong /*int*/ pv = COM.CoTaskMemAlloc(count * 4);", "-\t\tCOM.MoveMemory(ppSelectedColumns, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(ppSelectedColumns, new long /*int*/ [] { pv }, OS.PTR_SIZEOF);"]}], "num": 26509}