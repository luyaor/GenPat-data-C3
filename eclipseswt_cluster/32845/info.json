{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d6bdac68903b28d64936cf6ec74f2a2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df12bbadc23fac9e3afbba44ad1290f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 90, "signatureBeforeChange": " void doSelectionLineDown()", "signatureAfterChange": " void doSelectionLineDown()", "diff": ["-\tint oldColumnX;", "-\tint caretLine;", "-\tint lineStartOffset;", "-\t", "-\tif (isSingleLine()) {", "-\t\treturn;", "-\t}", "-\tcaretLine = getCaretLine();\t", "-\tlineStartOffset = content.getOffsetAtLine(caretLine);", "-\t// reset columnX on selection", "-\toldColumnX = columnX = getXAtOffset(", "-\t\tcontent.getLine(caretLine), caretLine, caretOffset - lineStartOffset);", "-\tif (caretLine == content.getLineCount() - 1) {", "-\t\tcaretOffset = content.getCharCount();", "-\t}", "-\telse {", "-\t\tcaretLine = doLineDown();", "-\t}", "-\tsetMouseWordSelectionAnchor();\t", "-\t// select first and then scroll to reduce flash when key ", "-\t// repeat scrolls lots of lines", "-\tdoSelection(ST.COLUMN_NEXT);", "-\t// explicitly go to the calculated caret line. may be different ", "-\t// from content.getLineAtOffset(caretOffset) when in word wrap mode", "-\tshowCaret(caretLine);", "-\t// save the original horizontal caret position", "+\tint oldColumnX = columnX = getPointAtOffset(caretOffset).x;", "+\tdoLineDown(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c280b75402f39878ac81f1678b3b4d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "ea7476519b9e21c42e4d4550669901e532bedcab", "commitAfterChange": "76b33e0e494479a9009365afe16385a154f070b7", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " void doSelectionLineDown()", "signatureAfterChange": " void doSelectionLineDown()", "diff": ["-\tif (isSingleLine()) {", "-\t\treturn;", "-\t}", "-\tint lineStartOffset = content.getOffsetAtLine(caretLine);", "+\tint lineOffset = content.getOffsetAtLine(caretLine);", "-\tint oldColumnX = columnX = getPointAtOffset(line, caretLine, caretOffset - lineStartOffset).x;", "-\tif (caretLine == content.getLineCount() - 1) {", "-\t\tcaretOffset = content.getCharCount();", "-\t} else {", "-\t\tcaretLine = doLineDown();", "-\t}", "-\tsetMouseWordSelectionAnchor();\t", "-\t// select first and then scroll to reduce flash when key ", "-\t// repeat scrolls lots of lines", "-\tdoSelection(ST.COLUMN_NEXT);", "-\t// explicitly go to the calculated caret line. may be different ", "-\t// from content.getLineAtOffset(caretOffset) when in word wrap mode", "-\tshowCaret(caretLine);", "-\t// save the original horizontal caret position", "+\tint oldColumnX = columnX = getPointAtOffset(line, caretLine, caretOffset - lineOffset).x;", "+\tdoLineDown(true);"]}], "num": 32845}