{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c6d6ed8f01c4a533fa6367ce20c0910", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa55a32645f2d76962c2b2a52620066", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "9dbb1a9b930bc9f40523638de74b34cd089dd27a", "commitAfterChange": "fa01e290bf435dfab0446b77a2b069698d8013d4", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["-\t\tmapped = false;", "-\t\tOS.gtk_widget_show (shellHandle);", "-\t\tif (isDisposed ()) return;", "-\t\tdisplay.dispatchEvents = new int [] {", "-\t\t\tOS.GDK_EXPOSE,", "-\t\t\tOS.GDK_FOCUS_CHANGE,", "-\t\t\tOS.GDK_CONFIGURE,", "-\t\t\tOS.GDK_MAP,", "-\t\t\tOS.GDK_UNMAP,", "-\t\t\tOS.GDK_NO_EXPOSE,", "-\t\t};", "-\t\tDisplay display = this.display;", "-\t\tdisplay.putGdkEvents();", "-\t\tboolean iconic = false;", "-\t\tShell shell = parent != null ? parent.getShell() : null;", "-\t\tdo {", "-\t\t\tOS.g_main_context_iteration (0, false);", "-\t\t\tif (isDisposed ()) break;", "-\t\t\ticonic = minimized || (shell != null && shell.minimized);", "-\t\t} while (!mapped && !iconic);", "-\t\tdisplay.dispatchEvents = null;", "-\t\tif (isDisposed ()) return;", "-\t\tif (!iconic) {", "-\t\t\tupdate (true, true);", "+\t\tif (!OS.GTK_IS_PLUG (shellHandle)) {", "+\t\t\tmapped = false;", "+\t\t\tOS.gtk_widget_show (shellHandle);", "-\t\t\tadjustTrim ();", "+\t\t\tdisplay.dispatchEvents = new int [] {", "+\t\t\t\tOS.GDK_EXPOSE,", "+\t\t\t\tOS.GDK_FOCUS_CHANGE,", "+\t\t\t\tOS.GDK_CONFIGURE,", "+\t\t\t\tOS.GDK_MAP,", "+\t\t\t\tOS.GDK_UNMAP,", "+\t\t\t\tOS.GDK_NO_EXPOSE,", "+\t\t\t};", "+\t\t\tDisplay display = this.display;", "+\t\t\tdisplay.putGdkEvents();", "+\t\t\tboolean iconic = false;", "+\t\t\tShell shell = parent != null ? parent.getShell() : null;", "+\t\t\tdo {", "+\t\t\t\tOS.g_main_context_iteration (0, false);", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\ticonic = minimized || (shell != null && shell.minimized);", "+\t\t\t} while (!mapped && !iconic);", "+\t\t\tdisplay.dispatchEvents = null;", "+\t\t\tif (isDisposed ()) return;", "+\t\t\tif (!iconic) {", "+\t\t\t\tupdate (true, true);", "+\t\t\t\tif (isDisposed ()) return;", "+\t\t\t\tadjustTrim ();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651694fcc959f12713d279afd689e1cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "78583589ef78fe725513dd2adf8d72b6c314d56e", "commitAfterChange": "f06b65aa74203bc4c95e41d74b0618d21fc594d6", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  void setClipping(int clipRgn)", "signatureAfterChange": "  void setClipping(int clipRgn)", "diff": ["-\t\tif (hRgn != 0) {", "+\t\tif (hRgn != 0 && !OS.IsWinCE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2bdcaf0b7f2810c513b713c3015989", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "commitAfterChange": "228385dfd30f0efd38cd3cc501ea117bc84c7084", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\tcase OS.TTN_GETDISPINFOA:\r", "+\t\t\t\t/*\r", "+\t\t\t\t* Bug in Windows 98.  For some reason, the tool bar control\r", "+\t\t\t\t* sends both TTN_GETDISPINFOW and TTN_GETDISPINFOA to get the\r", "+\t\t\t\t* tool tip text.  The fix is to avoid TTN_GETDISPINFOW, which\r", "+\t\t\t\t* should never be sent on Windows 98.\r", "+\t\t\t\t*/\r", "+\t\t\t\tif (!OS.IsUnicode) break;\r", "+\t\t\t\t// FALL THROUGH\r", "+\t\t\tcase OS.TTN_GETDISPINFOA:\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0b3b60fbd5c9e87a4ca3f14fbdd3ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\tint controlProc = display.controlProc;", "-\tint [] mask = new int [] {", "-\t\tOS.kEventClassControl, OS.kEventControlDraw,", "-\t};", "-\tint controlTarget = OS.GetControlEventTarget (handle);", "-\tOS.InstallEventHandler (controlTarget, controlProc, mask.length / 2, mask, handle, null);", "+\tif (!OS.HIVIEW) {", "+\t\tint controlProc = display.controlProc;", "+\t\tint [] mask = new int [] {", "+\t\t\tOS.kEventClassControl, OS.kEventControlDraw,", "+\t\t};", "+\t\tint controlTarget = OS.GetControlEventTarget (handle);", "+\t\tOS.InstallEventHandler (controlTarget, controlProc, mask.length / 2, mask, handle, null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9979a2100303405174238b999e4d49c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "779a700d107dc01cf1e9a8dd09093ea13a18f75d", "commitAfterChange": "b52ec5f09e28f3d85e604b31c7923c741f97b5a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void computeRuns (GC gc)", "signatureAfterChange": " void computeRuns (GC gc)", "diff": ["-\t\t\tif (lineRunCount == 1 && i == allRuns.length - 1) {", "+\t\t\tif (lineRunCount == 1 && (i == allRuns.length - 1 || !run.softBreak)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab911ab5e2b56111104db25753d8ed34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0354f2fcd681774fe492f4e3d5f23f1a78e0b89a", "commitAfterChange": "1f0268d817d4d6da6a35f97f46ada77b8aa2e671", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int maskPixmap, int maskType)", "signatureAfterChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int maskPixmap, int maskType)", "diff": ["-\tif (data.image == null) {", "+\tif (data.image == null && !data.realDrawable) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7b285d220983aff395c57a57b405875", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "b5a14d1332bff45d133bb74b6913fbce0eb7e171", "commitAfterChange": "edb50b5b429833e789ceb78e01839e9ae47c5d89", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r int widgetStyle ()", "signatureAfterChange": "\r \r int widgetStyle ()", "diff": ["-\tif (!OS.IsPPC) {\r", "+\tif (!OS.IsPPC && !OS.IsSP) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "467967fe29ef914916318a190407b0d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/browser/Browser5.java", "commitBeforeChange": "c40bdf8a744308a3348fef2c1b25835797bd6d6c", "commitAfterChange": "71bce95db2e48a63fb52c99ffea76a1881b01017", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic static boolean test()", "signatureAfterChange": " \t \tpublic static boolean test()", "diff": ["-\t\t\tif (!isMozilla) {", "+\t\t\t// TEST TEMPORARILY disabled for Cocoa due to failure on test machine.", "+\t\t\tif (!isMozilla && !SwtTestUtil.isCocoa) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f0d5ed1d93669d819de0a8293a844b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "a0a9d258e4ba6447d350edb2b6535418f42f6638", "commitAfterChange": "5d553beb026a9c36ce49081735e3a236e6013699", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["-\tif (ie.auto != null && ie.getUrl().startsWith(IE.ABOUT_BLANK)) {", "+\tif (ie.auto != null && ie.getUrl().startsWith(IE.ABOUT_BLANK) && !ie.untrustedText) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b6d5cc000ef17915c97cba35c0c9c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "diff": ["-\tint cmd = wParam & 0xFFF0;\r", "-\tswitch (cmd) {\r", "-\t\tcase OS.SC_HSCROLL:\r", "-\t\tcase OS.SC_VSCROLL:\r", "-\t\t\tboolean showHBar = horizontalBar != null && horizontalBar.getVisible ();\r", "-\t\t\tboolean showVBar = verticalBar != null && verticalBar.getVisible ();\r", "-\t\t\tint code = callWindowProc (OS.WM_SYSCOMMAND, wParam, lParam);\r", "-\t\t\tif ((showHBar != (horizontalBar != null && horizontalBar.getVisible ())) ||\r", "-\t\t\t\t(showVBar != (verticalBar != null && verticalBar.getVisible ()))) {\r", "-\t\t\t\t\tint flags = OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_UPDATENOW;\r", "-\t\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);\r", "-\t\t\t\t}\t\t\r", "-\t\t\tif (code == 0) return LRESULT.ZERO;\r", "-\t\t\treturn new LRESULT (code);\r", "+\tif (!OS.IsWinCE) {\r", "+\t\tint cmd = wParam & 0xFFF0;\r", "+\t\tswitch (cmd) {\r", "+\t\t\tcase OS.SC_HSCROLL:\r", "+\t\t\tcase OS.SC_VSCROLL:\r", "+\t\t\t\tboolean showHBar = horizontalBar != null && horizontalBar.getVisible ();\r", "+\t\t\t\tboolean showVBar = verticalBar != null && verticalBar.getVisible ();\r", "+\t\t\t\tint code = callWindowProc (OS.WM_SYSCOMMAND, wParam, lParam);\r", "+\t\t\t\tif ((showHBar != (horizontalBar != null && horizontalBar.getVisible ())) ||\r", "+\t\t\t\t\t(showVBar != (verticalBar != null && verticalBar.getVisible ()))) {\r", "+\t\t\t\t\t\tint flags = OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_UPDATENOW;\r", "+\t\t\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);\r", "+\t\t\t\t\t}\t\t\r", "+\t\t\t\tif (code == 0) return LRESULT.ZERO;\r", "+\t\t\t\treturn new LRESULT (code);\r", "+\t\t}\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784e0c01919e6281304fa7679d78850e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3d2669669796b58014f37de8ff937abf36021d5b", "commitAfterChange": "4227db73368bb5aa877489f25caa49d1768dfaf1", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  void setClipping(int clipRgn)", "signatureAfterChange": "  void setClipping(int clipRgn)", "diff": ["-\t\t\tpt = new POINT ();", "-\t\t\tOS.GetWindowOrgEx (handle, pt);", "-\t\t\tOS.OffsetRgn (hRgn, -pt.x, -pt.y);", "+\t\t\tpt = new POINT();", "+\t\t\tOS.GetWindowOrgEx(handle, pt);", "+\t\t\tOS.OffsetRgn(hRgn, -pt.x, -pt.y);", "-\t\tif (hRgn != 0) OS.OffsetRgn (hRgn, pt.x, pt.y);", "+\t\tif (hRgn != 0 && !OS.IsWinCE) {", "+\t\t\tOS.OffsetRgn(hRgn, pt.x, pt.y);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a608c202a18286642ca9e10daa001ce4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "47d0546ba3731de37d78b0000e37af058a2168b0", "commitAfterChange": "d2026179ae396d094d63adf974927e48ad96318b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void computeRuns (GC gc)", "signatureAfterChange": " void computeRuns (GC gc)", "diff": ["-\t\tif (wrapWidth != -1 && lineWidth + run.width > wrapWidth && !run.tab) {", "+\t\tif (wrapWidth != -1 && lineWidth + run.width > wrapWidth && !run.tab && !run.lineBreak) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c034f63f88d1ab32e0aaec432848c161", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "27a73ecc70e0749609fa546eb0c4c11fb1b9112b", "commitAfterChange": "512a62fb20982c6d071e68c0b0ba5b9d6475c257", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void setXORMode(boolean xor)", "signatureAfterChange": " public void setXORMode(boolean xor)", "diff": ["-\tOS.gdk_gc_set_function(handle, xor ? OS.GDK_XOR : OS.GDK_COPY);", "+\tif (!OS.USE_CAIRO) {", "+\t\tOS.gdk_gc_set_function(handle, xor ? OS.GDK_XOR : OS.GDK_COPY);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bdc9b56e4ac47df5a4bef34a1cc1696", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "e73d120d5e37884ab50e6301a907bc6b240738dc", "commitAfterChange": "308fb225ca7c50dd338d7be0181861ac767a6584", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void checkWidget ()", "signatureAfterChange": " protected void checkWidget ()", "diff": ["-\tif (display.thread != Thread.currentThread ()) error (SWT.ERROR_THREAD_INVALID_ACCESS);", "+\tif (display.thread != Thread.currentThread () && !display.isEmbedded) error (SWT.ERROR_THREAD_INVALID_ACCESS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9655aa16f9636c6cbaf7a5cdc886337", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/AllTests.java", "commitBeforeChange": "8711b46aa73758862c570f16e5f4b22f73f0553f", "commitAfterChange": "99eec3368ee7b99165620cd8f6704d4aa3c370ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public AllTests()", "signatureAfterChange": "  public AllTests()", "diff": ["+\tif (!SWT.getPlatform().equals(\"cocoa\")) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb949e0c22d1ade11f2bda94bcffcf5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3f445154d137e58abfae6ff77f5af53ad88eaef7", "commitAfterChange": "9ba2e135b23b71b64e9f61b29ca8bb16e737e533", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tif (!column.isDisposed ()) column.pack ();", "+\t\t\t\t\t\tif (!column.isDisposed () && column.getResizable ()) {", "+\t\t\t\t\t\t\tcolumn.pack ();", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51eafbfcb2bb08a24bad09603c6a1e71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r public Rectangle getClientArea ()", "signatureAfterChange": "\r \r public Rectangle getClientArea ()", "diff": ["-\tRECT rect = new RECT ();\r", "-\tif (OS.IsIconic (handle)) {\r", "-\t\tWINDOWPLACEMENT lpwndpl = new WINDOWPLACEMENT ();\r", "-\t\tlpwndpl.length = WINDOWPLACEMENT.sizeof;\r", "-\t\tOS.GetWindowPlacement (handle, lpwndpl);\r", "-\t\tint width = lpwndpl.right - lpwndpl.left;\r", "-\t\tint height = lpwndpl.bottom - lpwndpl.top;\r", "-\t\tOS.SetRect (rect, 0, 0, width, height);\r", "-\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, rect);\r", "-\t\treturn new Rectangle (0, 0, rect.right, rect.bottom);\r", "+\tif (!OS.IsWinCE) {\r", "+\t\tif (OS.IsIconic (handle)) {\r", "+\t\t\tRECT rect = new RECT ();\r", "+\t\t\tWINDOWPLACEMENT lpwndpl = new WINDOWPLACEMENT ();\r", "+\t\t\tlpwndpl.length = WINDOWPLACEMENT.sizeof;\r", "+\t\t\tOS.GetWindowPlacement (handle, lpwndpl);\r", "+\t\t\tint width = lpwndpl.right - lpwndpl.left;\r", "+\t\t\tint height = lpwndpl.bottom - lpwndpl.top;\r", "+\t\t\tOS.SetRect (rect, 0, 0, width, height);\r", "+\t\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, rect);\r", "+\t\t\treturn new Rectangle (0, 0, rect.right, rect.bottom);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac32616425e686e9c29bec45511ed3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "9bff9c57dbcd920318537ab873aa751028f71874", "commitAfterChange": "69f429f048911edb8268cd2746ff91939e28beea", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "signatureAfterChange": "  void initFactories (nsIServiceManager serviceManager, nsIComponentManager componentManager, boolean isXULRunner)", "diff": ["-\tFilePickerFactory pickerFactory = new FilePickerFactory ();", "-\tpickerFactory.AddRef ();", "-\taContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FILEPICKER_CONTRACTID, true);", "-\taClassName = MozillaDelegate.wcsToMbcs (null, \"swtFilePicker\", true); //$NON-NLS-1$", "-\trc = componentRegistrar.RegisterFactory (XPCOM.NS_FILEPICKER_CID, aClassName, aContractID, pickerFactory.getAddress ());", "-\t/* a failure here is fine, it likely indicates that the OS has provided a default implementation */", "-\tpickerFactory.Release ();", "+\tif (!nsISupports.IsXULRunner24) {", "+\t\tFilePickerFactory pickerFactory = new FilePickerFactory ();", "+\t\tpickerFactory.AddRef ();", "+\t\taContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_FILEPICKER_CONTRACTID, true);", "+\t\taClassName = MozillaDelegate.wcsToMbcs (null, \"swtFilePicker\", true); //$NON-NLS-1$", "+\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_FILEPICKER_CID, aClassName, aContractID, pickerFactory.getAddress ());", "+\t\t/* a failure here is fine, it likely indicates that a default implementation is provided */", "+\t\tpickerFactory.Release ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bebce5f5afa26c4e37a076387a78d088", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "38c37c222193bf16187e2c0138d48eab1ff4040a", "commitAfterChange": "4579272cb1d3f009d3592ebce4833a22b9ac11c2", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "  int widgetExtStyle ()", "signatureAfterChange": "  int widgetExtStyle ()", "diff": ["-\tif ((style & SWT.BORDER) != 0) bits |= OS.WS_EX_CLIENTEDGE;", "+\tif (!OS.IsPPC) {", "+\t\tif ((style & SWT.BORDER) != 0) bits |= OS.WS_EX_CLIENTEDGE;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67604ae8a5e77bbdeac95e7e85d3dc6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "dd3b53ce0c05a3da5c9f080255bedfae78e32302", "commitAfterChange": "9c0adf283626cc1c2554fcdb77f127579636062f", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tvoid setExampleWidgetState ()", "signatureAfterChange": " \tvoid setExampleWidgetState ()", "diff": ["-\t\tsetExampleGroupBackgroundMode ();", "-\t\tsetExampleGroupBackgroundColor ();", "-\t\tsetExampleGroupBackgroundImage ();", "-\t\tsetExampleWidgetEnabled ();", "-\t\tsetExampleWidgetVisibility ();", "-\t\tsetExampleWidgetBackgroundImage ();", "-\t\tsetExampleWidgetSize ();", "+\t\tif (!instance.startup) {", "+\t\t\tsetExampleWidgetEnabled ();", "+\t\t\tsetExampleWidgetVisibility ();", "+\t\t\tsetExampleGroupBackgroundMode ();", "+\t\t\tsetExampleGroupBackgroundColor ();", "+\t\t\tsetExampleGroupBackgroundImage ();", "+\t\t\tsetExampleWidgetBackgroundImage ();", "+\t\t\tsetExampleWidgetSize ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17408f7afa8a247efda04fa25d5c5945", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void resetVisibleRegion (int control)", "signatureAfterChange": "  void resetVisibleRegion (int control)", "diff": ["-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (handle, rect);", "-\tRect inset = inset ();", "-\trect.left += inset.left;", "-\trect.top += inset.top;", "-\trect.right -= inset.right;", "-\tif (OS.IsControlVisible (handle)) {", "-\t\trect.bottom -= inset.bottom;", "-\t} else {", "-\t\trect.bottom = rect.top;", "+\tif (!OS.HIVIEW) {", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\tRect inset = inset ();", "+\t\trect.left += inset.left;", "+\t\trect.top += inset.top;", "+\t\trect.right -= inset.right;", "+\t\tif (OS.IsControlVisible (handle)) {", "+\t\t\trect.bottom -= inset.bottom;", "+\t\t} else {", "+\t\t\trect.bottom = rect.top;", "+\t\t}", "+\t\tOS.TXNSetFrameBounds (txnObject, rect.top, rect.left, rect.bottom, rect.right, txnFrameID);", "-\tOS.TXNSetFrameBounds (txnObject, rect.top, rect.left, rect.bottom, rect.right, txnFrameID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "860591d15cbb654bb3a38e0117a81200", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ae952018649022b350dd993d7e6bbe37c7932fdb", "commitAfterChange": "c35dab85e3834e3abbcb8e5e7a478ca24615c78b", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " void releaseDisplay ()", "signatureAfterChange": " void releaseDisplay ()", "diff": ["-\tif (shellHandle != 0) OS.XtDestroyWidget (shellHandle);", "-\tshellHandle = 0;", "+\tif (shellHandle != 0) {", "+\t\tif (!OS.IsSunOS) {", "+\t\t\tOS.XtDestroyWidget (shellHandle);", "+\t\t}", "+\t\tshellHandle = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c57bd44e6506619026f573adb3b54722", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "910df7b7d5ce7ece90221d5b3519098e287de2db", "commitAfterChange": "d20acf6bc5bf02e3ebe32d6b46b87685581f358f", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\t\t\tif (!OS.GDK_WINDOWING_X11()) return false;", "+\t\t\tif (!OS.GDK_WINDOWING_X11() || OS.GDK_WINDOWING_WAYLAND()) {", "+\t\t\t\treturn false;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185d9d28ec1fbcde11eb83a9a15834e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "5faa854ca66c28a1b30477309c293e0279883182", "commitAfterChange": "e184d651d5e7603d133624998cc1cf89013c9ace", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " void destroyDisplay ()", "signatureAfterChange": " void destroyDisplay ()", "diff": ["-\tOS.XtDestroyWidget (OS.XmGetXmDisplay (xDisplay));", "+\tif (!OS.IsSunOS) {", "+\t\tOS.XtDestroyWidget (OS.XmGetXmDisplay (xDisplay));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d93ff07ea1734613026229659c66f644", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8c9e7128c2f2361e45b3d2b098657659f9bf7b11", "commitAfterChange": "a190846340d87bd29425466ef5ed921f7a97af93", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " int xFocusOut (XFocusChangeEvent xEvent)", "signatureAfterChange": " int xFocusOut (XFocusChangeEvent xEvent)", "diff": ["+\t* ", "+\t* NOTE: On AIX, changing the IM font when focus is lost because", "+\t* the shell was resized by the user causes the ConfigureNotify", "+\t* event for the shell to be lost.  The event is not in the", "+\t* event queue and therefore not dispatched.  The fix is to avoid", "+\t* the workaround for AIX.", "-\tint fontList = defaultFont ().handle;", "-\tif (font.handle != fontList) {", "-\t\tint [] argList2 = {OS.XmNfontList, fontList};", "-\t\tOS.XmImSetValues (focusHandle, argList2, argList2.length / 2);", "+\tif (!OS.IsAIX) {", "+\t\tint fontList = defaultFont ().handle;", "+\t\tif (font.handle != fontList) {", "+\t\t\tint [] argList2 = {OS.XmNfontList, fontList};", "+\t\t\tOS.XmImSetValues (focusHandle, argList2, argList2.length / 2);", "+\t\t}"]}], "num": 6814}