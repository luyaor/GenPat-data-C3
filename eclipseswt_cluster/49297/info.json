{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b3e63113336ea96354b9e30b0ea6df0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50da20013f8a1ce2c913fe617583090c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "399156490d22f3d1f71663eed297e579ef25b0fc", "commitAfterChange": "a1f55a007486ea929f61bc360225ffb5df8913db", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tvoid createListenerSelectionDialog ()", "signatureAfterChange": " \tvoid createListenerSelectionDialog ()", "diff": ["-\t\tdata.verticalSpan = 2;", "+\t\tdata.verticalSpan = 3;", "-\t\tfor (int i = 0; i < EVENT_NAMES.length; i++) {", "+\t\tfor (int i = 0; i < EVENT_INFO.length; i++) {", "-\t\t\titem.setText ((String)EVENT_NAMES[i][0]);", "+\t\t\titem.setText (EVENT_INFO[i].name);", "-\t\t\titem.setChecked (eventsFilter[EVENT_NAMES.length + i]);", "+\t\t\titem.setChecked (eventsFilter[EVENT_INFO.length + i]);", "-\t\t\t\tfor (int i = 0; i < EVENT_NAMES.length; i++) {", "+\t\t\t\tfor (int i = 0; i < EVENT_INFO.length; i++) {", "-\t\t\t\t\titems[EVENT_NAMES.length + i].setChecked(true);", "+\t\t\t\t\titems[EVENT_INFO.length + i].setChecked(true);", "-\t\tdeselectAll.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_BEGINNING));", "+\t\tdeselectAll.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));", "-\t\t\t\tfor (int i = 0; i < EVENT_NAMES.length; i++) {", "+\t\t\t\tfor (int i = 0; i < EVENT_INFO.length; i++) {", "-\t\t\t\t\titems[EVENT_NAMES.length + i].setChecked(false);", "+\t\t\t\t\titems[EVENT_INFO.length + i].setChecked(false);", "+\t\tfinal Button editEvent = new Button (dialog, SWT.PUSH);", "+\t\teditEvent.setText (ControlExample.getResourceString (\"Edit_Event\"));", "+\t\teditEvent.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_BEGINNING));", "+\t\teditEvent.addSelectionListener (new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tPoint pt = editEvent.getLocation();", "+\t\t\t\tpt = e.display.map(editEvent, null, pt);", "+\t\t\t\tint index = table.getSelectionIndex();", "+\t\t\t\tif (getExampleWidgets().length > 0 && index != -1) {", "+\t\t\t\t\tcreateEditEventDialog(dialog, pt.x, pt.y, index);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\teditEvent.setEnabled(false);", "+\t\ttable.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tint fields = 0;", "+\t\t\t\tint index = table.getSelectionIndex();", "+\t\t\t\tif (index != -1 && index < EVENT_INFO.length) {  // TODO: Allow custom widgets to specify event info", "+\t\t\t\t\tfields = (EVENT_INFO[index].settableFields);", "+\t\t\t\t}", "+\t\t\t\teditEvent.setEnabled(fields != 0);", "+\t\t\t}", "+\t\t\tpublic void widgetDefaultSelected(SelectionEvent e) {", "+\t\t\t\tif (editEvent.getEnabled()) {", "+\t\t\t\t\tPoint pt = editEvent.getLocation();", "+\t\t\t\t\tpt = e.display.map(editEvent, null, pt);", "+\t\t\t\t\tint index = table.getSelectionIndex();", "+\t\t\t\t\tif (getExampleWidgets().length > 0 && index != -1 && index < EVENT_INFO.length) {", "+\t\t\t\t\t\tcreateEditEventDialog(dialog, pt.x, pt.y, index);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+", "-\t\t\t\tfor (int i = 0; i < EVENT_NAMES.length; i++) {", "+\t\t\t\tfor (int i = 0; i < EVENT_INFO.length; i++) {", "-\t\t\t\t\teventsFilter[EVENT_NAMES.length + i] = items[EVENT_NAMES.length + i].getChecked();", "+\t\t\t\t\teventsFilter[EVENT_INFO.length + i] = items[EVENT_INFO.length + i].getChecked();", "-\t\t * If the preferred size of the dialog is too tall for the screen,", "+\t\t * If the preferred size of the dialog is too tall for the display,", "-\t\tPoint size = dialog.getSize();", "-\t\tRectangle bounds = display.getBounds();", "-\t\tif (size.y > bounds.height) {", "-\t\t\tdialog.setSize(size.x, bounds.height);", "+\t\tRectangle bounds = dialog.getBounds();", "+\t\tRectangle trim = dialog.computeTrim(0, 0, 0, 0);", "+\t\tRectangle clientArea = display.getClientArea();", "+\t\tif (bounds.height > clientArea.height) {", "+\t\t\tdialog.setSize(bounds.width, clientArea.height - trim.height);", "+\t\tdialog.setLocation(bounds.x, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f2508f15d6533f28efe93a1b955cc4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createChildWidgets ()", "signatureAfterChange": " \tvoid createChildWidgets()", "diff": ["-\tvoid createChildWidgets () {", "+\tvoid createChildWidgets() {", "-\t\tfinal TraverseListener traverseListener = new TraverseListener () {", "-\t\t\tpublic void keyTraversed (TraverseEvent e) {", "-\t\t\t\tif (e.detail == SWT.TRAVERSE_RETURN || e.detail == SWT.TRAVERSE_TAB_NEXT)", "-\t\t\t\t\tresetEditors ();", "-\t\t\t\tif (e.detail == SWT.TRAVERSE_ESCAPE)", "-\t\t\t\t\tdisposeEditors ();", "+\t\tfinal TraverseListener traverseListener = new TraverseListener() {", "+\t\t\tpublic void keyTraversed(TraverseEvent e) {", "+\t\t\t\tif(e.detail == SWT.TRAVERSE_RETURN || e.detail == SWT.TRAVERSE_TAB_NEXT)", "+\t\t\t\t\tresetEditors();", "+\t\t\t\tif(e.detail == SWT.TRAVERSE_ESCAPE)", "+\t\t\t\t\tdisposeEditors();", "-\t\tsuper.createChildWidgets ();", "+\t\tsuper.createChildWidgets();", "-\t\tcomboEditor = new TableEditor (table);", "-\t\twidthEditor = new TableEditor (table);", "-\t\theightEditor = new TableEditor (table);", "-\t\tvAlignEditor = new TableEditor (table);", "-\t\thAlignEditor = new TableEditor (table);", "-\t\thIndentEditor = new TableEditor (table);", "-\t\thSpanEditor = new TableEditor (table);", "-\t\tvSpanEditor = new TableEditor (table);", "-\t\thGrabEditor = new TableEditor (table);", "-\t\tvGrabEditor = new TableEditor (table);", "-\t\ttable.addMouseListener (new MouseAdapter () {", "+\t\tnameEditor = new TableEditor(table);", "+\t\tcomboEditor = new TableEditor(table);", "+\t\twidthEditor = new TableEditor(table);", "+\t\theightEditor = new TableEditor(table);", "+\t\tvAlignEditor = new TableEditor(table);", "+\t\thAlignEditor = new TableEditor(table);", "+\t\thIndentEditor = new TableEditor(table);", "+\t\thSpanEditor = new TableEditor(table);", "+\t\tvSpanEditor = new TableEditor(table);", "+\t\thGrabEditor = new TableEditor(table);", "+\t\tvGrabEditor = new TableEditor(table);", "+\t\ttable.addMouseListener(new MouseAdapter() {", "-\t\t\t\tindex = table.getSelectionIndex ();", "-\t\t\t\tPoint pt = new Point (e.x, e.y);", "-                newItem = table.getItem (pt);", "-                if (newItem == null) return;", "-                TableItem oldItem = comboEditor.getItem ();", "-                if (newItem == oldItem || newItem != lastSelected) {", "+\t\t\t\tindex = table.getSelectionIndex();", "+\t\t\t\tPoint pt = new Point(e.x, e.y);", "+                newItem = table.getItem(pt);", "+                if(newItem == null) return;", "+                TableItem oldItem = comboEditor.getItem();", "+                if(newItem == oldItem || newItem != lastSelected) {", "-\t\t\t\ttable.showSelection ();", "+\t\t\t\ttable.showSelection();", "-\t\t\t\tcombo = new CCombo (table, SWT.READ_ONLY);", "-\t\t\t\tcreateComboEditor (combo, comboEditor);", "+\t\t\t\tnameText = new Text(table, SWT.SINGLE);", "+\t\t\t\tnameText.setText(((String [])data.elementAt(index))[NAME_COL]);", "+\t\t\t\tcreateTextEditor(nameText, nameEditor, NAME_COL);", "-\t\t\t\twidthText = new Text (table, SWT.SINGLE);", "-\t\t\t\twidthText.setText (((String [])data.elementAt (index)) [WIDTH_COL]);", "-\t\t\t\tcreateTextEditor (widthText, widthEditor, WIDTH_COL);", "+\t\t\t\tcombo = new CCombo(table, SWT.READ_ONLY);", "+\t\t\t\tcreateComboEditor(combo, comboEditor);", "+\t\t\t\t\t\t\t\t", "+\t\t\t\twidthText = new Text(table, SWT.SINGLE);", "+\t\t\t\twidthText.setText(((String [])data.elementAt(index))[WIDTH_COL]);", "+\t\t\t\tcreateTextEditor(widthText, widthEditor, WIDTH_COL);", "-\t\t\t\theightText = new Text (table, SWT.SINGLE);", "-\t\t\t\theightText.setText (((String [])data.elementAt (index)) [HEIGHT_COL]);", "-\t\t\t\tcreateTextEditor (heightText, heightEditor, HEIGHT_COL);", "-\t\t\t\tString [] alignValues = new String [] {\"BEGINNING\",\"CENTER\",\"END\",\"FILL\"};", "-\t\t\t\thAlign = new CCombo (table, SWT.NONE);", "-\t\t\t\thAlign.setItems (alignValues);", "-\t\t\t\thAlign.setText (newItem.getText (HALIGN_COL));", "+\t\t\t\theightText = new Text(table, SWT.SINGLE);", "+\t\t\t\theightText.setText(((String[])data.elementAt(index))[HEIGHT_COL]);", "+\t\t\t\tcreateTextEditor(heightText, heightEditor, HEIGHT_COL);", "+\t\t\t\tString[] alignValues = new String[] {\"BEGINNING\",\"CENTER\",\"END\",\"FILL\"};", "+\t\t\t\thAlign = new CCombo(table, SWT.NONE);", "+\t\t\t\thAlign.setItems(alignValues);", "+\t\t\t\thAlign.setText(newItem.getText(HALIGN_COL));", "-\t\t\t\thAlignEditor.setEditor (hAlign, newItem, HALIGN_COL);", "-\t\t\t\thAlign.addTraverseListener (traverseListener);", "+\t\t\t\thAlignEditor.setEditor(hAlign, newItem, HALIGN_COL);", "+\t\t\t\thAlign.addTraverseListener(traverseListener);", "-\t\t\t\tvAlign = new CCombo (table, SWT.NONE);", "-\t\t\t\tvAlign.setItems (alignValues);", "-\t\t\t\tvAlign.setText (newItem.getText (VALIGN_COL));", "+\t\t\t\tvAlign = new CCombo(table, SWT.NONE);", "+\t\t\t\tvAlign.setItems(alignValues);", "+\t\t\t\tvAlign.setText(newItem.getText(VALIGN_COL));", "-\t\t\t\tvAlignEditor.setEditor (vAlign, newItem, VALIGN_COL);", "-\t\t\t\tvAlign.addTraverseListener (traverseListener);", "+\t\t\t\tvAlignEditor.setEditor(vAlign, newItem, VALIGN_COL);", "+\t\t\t\tvAlign.addTraverseListener(traverseListener);", "-\t\t\t\thIndent = new Text (table, SWT.SINGLE);", "-\t\t\t\thIndent.setText (((String [])data.elementAt (index)) [HINDENT_COL]);", "-\t\t\t\tcreateTextEditor (hIndent, hIndentEditor, HINDENT_COL);", "+\t\t\t\thIndent = new Text(table, SWT.SINGLE);", "+\t\t\t\thIndent.setText(((String[])data.elementAt(index))[HINDENT_COL]);", "+\t\t\t\tcreateTextEditor(hIndent, hIndentEditor, HINDENT_COL);", "-\t\t\t\thSpan = new Text (table, SWT.SINGLE);", "+\t\t\t\thSpan = new Text(table, SWT.SINGLE);", "-\t\t\t\tvSpan.setText (((String [])data.elementAt (index)) [VSPAN_COL]);", "-\t\t\t\tcreateTextEditor (vSpan, vSpanEditor, VSPAN_COL);", "+\t\t\t\tvSpan.setText(((String[])data.elementAt(index))[VSPAN_COL]);", "+\t\t\t\tcreateTextEditor(vSpan, vSpanEditor, VSPAN_COL);", "-\t\t\t\tString [] boolValues = new String [] {\"false\",\"true\"};", "-\t\t\t\thGrab = new CCombo (table, SWT.NONE);", "-\t\t\t\thGrab.setItems (boolValues);", "-\t\t\t\thGrab.setText (newItem.getText (HGRAB_COL));", "+\t\t\t\tString[] boolValues = new String[] {\"false\",\"true\"};", "+\t\t\t\thGrab = new CCombo(table, SWT.NONE);", "+\t\t\t\thGrab.setItems(boolValues);", "+\t\t\t\thGrab.setText(newItem.getText (HGRAB_COL));", "-\t\t\t\thGrabEditor.setEditor (hGrab, newItem, HGRAB_COL);", "-\t\t\t\thGrab.addTraverseListener (traverseListener);", "+\t\t\t\thGrabEditor.setEditor(hGrab, newItem, HGRAB_COL);", "+\t\t\t\thGrab.addTraverseListener(traverseListener);", "-\t\t\t\tvGrab = new CCombo (table, SWT.NONE);", "-\t\t\t\tvGrab.setItems (boolValues);", "-\t\t\t\tvGrab.setText (newItem.getText (VGRAB_COL));", "+\t\t\t\tvGrab = new CCombo(table, SWT.NONE);", "+\t\t\t\tvGrab.setItems(boolValues);", "+\t\t\t\tvGrab.setText(newItem.getText (VGRAB_COL));", "-\t\t\t\tvGrabEditor.setEditor (vGrab, newItem, VGRAB_COL);", "-\t\t\t\tvGrab.addTraverseListener (traverseListener);", "+\t\t\t\tvGrabEditor.setEditor(vGrab, newItem, VGRAB_COL);", "+\t\t\t\tvGrab.addTraverseListener(traverseListener);", "-                for (int i=0; i<table.getColumnCount (); i++) {", "-                \tRectangle rect = newItem.getBounds (i);", "-                    if (rect.contains (pt)) {", "+                for(int i=0; i<table.getColumnCount(); i++) {", "+                \tRectangle rect = newItem.getBounds(i);", "+                    if(rect.contains(pt)) {", "+                    \t\tcase NAME_COL:", "+                    \t\t\tnameText.setFocus();", "+                    \t\t\tbreak;", "-\t\t\t\t\t\t\t\tcombo.setFocus ();\t", "+\t\t\t\t\t\t\t\tcombo.setFocus();\t", "-\t\t\t\t\t\t\t\twidthText.setFocus ();", "+\t\t\t\t\t\t\t\twidthText.setFocus();", "-\t\t\t\t\t\t\t\theightText.setFocus ();", "+\t\t\t\t\t\t\t\theightText.setFocus();", "-\t\t\t\t\t\t\t\thAlign.setFocus ();", "+\t\t\t\t\t\t\t\thAlign.setFocus();", "-\t\t\t\t\t\t\t\tvAlign.setFocus ();", "+\t\t\t\t\t\t\t\tvAlign.setFocus();", "-\t\t\t\t\t\t\t\thIndent.setFocus ();", "+\t\t\t\t\t\t\t\thIndent.setFocus();", "-\t\t\t\t\t\t\t\thSpan.setFocus ();", "+\t\t\t\t\t\t\t\thSpan.setFocus();", "-\t\t\t\t\t\t\t\tvSpan.setFocus ();", "+\t\t\t\t\t\t\t\tvSpan.setFocus();", "-\t\t\t\t\t\t\t\thGrab.setFocus ();", "+\t\t\t\t\t\t\t\thGrab.setFocus();", "-\t\t\t\t\t\t\t\tvGrab.setFocus ();", "+\t\t\t\t\t\t\t\tvGrab.setFocus();", "-\t\t\t\t\t\t\t\tresetEditors ();", "+\t\t\t\t\t\t\t\tresetEditors();", "-\t\t/* Add listener to add an element to the table */", "-\t\tadd.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected(SelectionEvent e) {", "-\t\t\t\tTableItem item = new TableItem (table, 0);", "-\t\t\t\tString [] insert = new String [] { ", "-\t\t\t\t\tString.valueOf (table.indexOf (item)), \"Button\",", "-\t\t\t\t\t\"-1\",\"-1\",\"BEGINNING\",\"CENTER\",", "-\t\t\t\t\t\"0\",\"1\",\"1\",\"false\",\"false\"};", "-\t\t\t\titem.setText (insert);", "-\t\t\t\tdata.addElement (insert);", "-\t\t\t\tresetEditors ();", "+\t\tadd.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "+\t\t\t\tif(event.detail == SWT.ARROW) {", "+\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "+\t\t\t\t\tToolBar bar = item.getParent();", "+\t\t\t\t\tDisplay display = bar.getDisplay();", "+\t\t\t\t\tShell shell = bar.getShell();", "+\t\t\t\t\tMenu menu = new Menu(shell, SWT.POP_UP);", "+\t\t\t\t\tfor(int i = 0; i < OPTIONS.length; i++) {", "+\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "+\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "+\t\t\t\t\t\tnewItem.addSelectionListener(new SelectionAdapter(){", "+\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "+\t\t\t\t\t\t\t\tif(menuItem.getSelection()) {", "+\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "+\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "+\t\t\t\t\t\t\t\t\tTableItem item = new TableItem(table, SWT.NONE);", "+\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.indexOf(item));", "+\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText(),", "+\t\t\t\t\t\t\t\t\t\t\t\"-1\",\"-1\",\"BEGINNING\",\"CENTER\",", "+\t\t\t\t\t\t\t\t\t\t\t\"0\",\"1\",\"1\",\"false\",\"false\"};", "+\t\t\t\t\t\t\t\t\titem.setText(insert);", "+\t\t\t\t\t\t\t\t\tdata.addElement(insert);", "+\t\t\t\t\t\t\t\t\tresetEditors ();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t});\t\t\t\t\t\t\t", "+\t\t\t\t\t\tnewItem.setSelection(i == prevSelected);", "+\t\t\t\t\t}", "+\t\t\t\t\tPoint pt = display.map(bar, null, event.x, event.y);", "+\t\t\t\t\tmenu.setLocation(pt.x, pt.y);", "+\t\t\t\t\tmenu.setVisible(true);\t\t\t\t\t", "+\t\t\t\t\twhile (menu != null && !menu.isDisposed() && menu.isVisible()) {", "+\t\t\t\t\t\tif (!display.readAndDispatch()) {", "+\t\t\t\t\t\t\tdisplay.sleep();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tmenu.dispose();", "+\t\t\t\t} else {", "+\t\t\t\t\tString selection = OPTIONS[prevSelected];", "+\t\t\t\t\tTableItem item = new TableItem(table, 0);", "+\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf(table.indexOf(item));", "+\t\t\t\t\tString[] insert = new String[] {name, selection,", "+\t\t\t\t\t\t\t\"-1\",\"-1\",\"BEGINNING\",\"CENTER\",", "+\t\t\t\t\t\t\t\"0\",\"1\",\"1\",\"false\",\"false\"};", "+\t\t\t\t\titem.setText(insert);", "+\t\t\t\t\tdata.addElement(insert);", "+\t\t\t\t\tresetEditors();", "+\t\t\t\t}"]}], "num": 49297}