{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e595eee56b313b7d819f0b24b8e60aa5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be3495a464f49c9901ff2a417953f4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "907c4dd47a285571bf0d66e34d1a9323e15dd90b", "commitAfterChange": "e4b1a868ce731255239223c8ff6f43351c81a864", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 63, "signatureBeforeChange": " void onMouse(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\t\t\t\tupdate();", "-\t\t\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.x = rect.x;", "+\t\t\t\te.y = rect.y;", "+\t\t\t\te.width = rect.width;", "+\t\t\t\te.height = rect.height;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "+\t\t\t\t\tfolderListeners[i].showList(e);", "+\t\t\t\t}", "+\t\t\t\tif (e.doit && !isDisposed()) {", "-\t\t\t\t} else {", "-\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\t\te.widget = this;", "-\t\t\t\t\te.time = event.time;", "-\t\t\t\t\te.rect = rect;", "-\t\t\t\t\t", "-\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\t\t\tlistListeners[i].showList(e);", "-\t\t\t\t\t}", "-\t\t\t\tupdate();", "-\t\t\t\tfor (int i = 0; i < minmaxListeners.length; i++) {", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\t\tminmaxListeners[i].restore(e);", "+\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t\tminmaxListeners[i].minimize(e);", "+\t\t\t\t\t\tfolderListeners[i].minimize(e);", "-\t\t\t\tupdate();", "-\t\t\t\tfor (int i = 0; i < minmaxListeners.length; i++) {", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\t\tminmaxListeners[i].restore(e);", "+\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t\tminmaxListeners[i].maximize(e);", "+\t\t\t\t\t\tfolderListeners[i].maximize(e);", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tfor (int j = 0; j < closeListeners.length; j++) {", "-\t\t\t\t\t\tcloseListeners[j].itemClosed(e);", "+\t\t\t\t\tfor (int j = 0; j < folderListeners.length; j++) {", "+\t\t\t\t\t\tCTabFolder2Listener listener = folderListeners[j];", "+\t\t\t\t\t\tlistener.close(e);", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int j = 0; j < tabListeners.length; j++) {", "+\t\t\t\t\t\tCTabFolderListener listener = tabListeners[j];", "+\t\t\t\t\t\tlistener.itemClosed(e);", "-\t\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\t\te.widget = this;", "+\t\t\t\t\te.time = event.time;", "+\t\t\t\t\te.x = rect.x;", "+\t\t\t\t\te.y = rect.y;", "+\t\t\t\t\te.width = rect.width;", "+\t\t\t\t\te.height = rect.height;", "+\t\t\t\t\te.doit = true;", "+\t\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "+\t\t\t\t\t\tfolderListeners[i].showList(e);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (e.doit && !isDisposed()) {", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\t\t\te.widget = this;", "-\t\t\t\t\t\te.time = event.time;", "-\t\t\t\t\t\te.rect = rect;", "-\t\t\t\t\t\t", "-\t\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\t\t\t\tlistListeners[i].showList(e);", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414e8b40e7fa52a96212243d5ff9b719", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "dbf56d36cdf507645ea89bcdaab54b5bf0bd26ff", "commitAfterChange": "b09edce9791823c67c1356847c83053f4c27bd85", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\tupdate ();", "-\tdrawRectangles (rectangles);", "+\tif (!OS.GTK3) {", "+\t\tupdate ();", "+\t\tdrawRectangles (rectangles);", "+\t}", "+\t", "+\tif (OS.GTK3) {", "+\t\toverlay = OS.gtk_window_new (OS.GTK_WINDOW_POPUP);", "+\t\tOS.gtk_window_set_skip_taskbar_hint (overlay, true);", "+\t\tOS.gtk_window_set_title (overlay, new byte [1]);", "+\t\tOS.gtk_widget_realize (overlay);", "+\t\tlong /*int*/ overlayWindow = OS.gtk_widget_get_window (overlay);", "+\t\tOS.gdk_window_set_override_redirect (overlayWindow, true);", "+\t\tOS.gtk_widget_override_background_color (overlay, OS.GTK_STATE_FLAG_NORMAL, new GdkRGBA());", "+\t\tlong /*int*/ region = OS.gdk_region_new ();", "+\t\tOS.gtk_widget_shape_combine_region (overlay, region);", "+\t\tOS.gtk_widget_input_shape_combine_region (overlay, region);", "+\t\tOS.gdk_region_destroy (region);", "+\t\tRectangle bounds = display.getBounds();", "+\t\tOS.gtk_window_move (overlay, bounds.x, bounds.y);", "+\t\tOS.gtk_window_resize (overlay, bounds.width, bounds.height);", "+\t\tOS.gtk_widget_show (overlay);", "+\t}", "-\tGdkEvent gdkEvent = new GdkEvent();", "-\twhile (tracking) {", "-\t\tif (parent != null && parent.isDisposed ()) break;", "-\t\tlong /*int*/ eventPtr;", "-\t\twhile (true) {", "+\tTracker oldTracker = display.tracker;", "+\tdisplay.tracker = this;", "+\ttry {", "+\t\twhile (tracking) {", "+\t\t\tif (parent != null && parent.isDisposed ()) break;", "-\t\t\teventPtr = OS.gdk_event_get ();", "-\t\t\tif (eventPtr != 0) {", "-\t\t\t\tbreak;", "-\t\t\t} else {", "-\t\t\t\tdisplay.runAsyncMessages (false);", "-\t\t\t\ttry { Thread.sleep(50); } catch (Exception ex) {}", "-\t\t\t}", "+\t\t\t/*", "+\t\t\t* This call to gdk_threads_leave() is a temporary work around", "+\t\t\t* to avoid deadlocks when gdk_threads_init() is called by native", "+\t\t\t* code outside of SWT (i.e AWT, etc). It ensures that the current", "+\t\t\t* thread leaves the GTK lock before calling the function below. ", "+\t\t\t*/", "+\t\t\tOS.gdk_threads_leave();", "+\t\t\tOS.g_main_context_iteration (0, true);", "+\t\t\tdisplay.runAsyncMessages (false);", "-\t\tOS.memmove (gdkEvent, eventPtr, GdkEvent.sizeof);", "-\t\tlong /*int*/ widget = OS.gtk_get_event_widget (eventPtr);", "-\t\tswitch (gdkEvent.type) {", "-\t\t\tcase OS.GDK_MOTION_NOTIFY: gtk_motion_notify_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_BUTTON_RELEASE: gtk_button_release_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_KEY_PRESS: gtk_key_press_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_KEY_RELEASE: gtk_key_release_event (widget, eventPtr); break;", "-\t\t\tcase OS.GDK_BUTTON_PRESS:", "-\t\t\tcase OS.GDK_2BUTTON_PRESS:", "-\t\t\tcase OS.GDK_3BUTTON_PRESS:", "-\t\t\tcase OS.GDK_ENTER_NOTIFY:", "-\t\t\tcase OS.GDK_LEAVE_NOTIFY:", "-\t\t\t\t/* Do not dispatch these */", "-\t\t\t\tbreak;", "-\t\t\tcase OS.GDK_EXPOSE:", "-\t\t\t\tupdate ();", "-\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t\t\tdrawRectangles (rectangles);", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t}", "-\t\tOS.gdk_event_free (eventPtr);", "-\t\tdisplay.runAsyncMessages (false);", "+\t} finally {", "+\t\tdisplay.tracker = oldTracker;", "-\t\tupdate ();", "-\t\tdrawRectangles (rectangles);", "+\t\tif (!OS.GTK3) {", "+\t\t\tupdate ();", "+\t\t\tdrawRectangles (rectangles);", "+\t\t}", "+\tif (overlay != 0) {", "+\t\tOS.gtk_widget_destroy (overlay);", "+\t\toverlay = 0;", "+\t}"]}], "num": 45803}