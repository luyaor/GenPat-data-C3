{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62d459f084b94875583312cdee1f20df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1cec9b08ba1f82db229d5da1a9e28d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "796c03966b90a1b4124fbb0de18e2b350a1297b3", "commitAfterChange": "798354856755c1c1542d3925e8afb0a68d8a824f", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tString dataHexDump(String lineDelimiter)", "signatureAfterChange": " \tString dataHexDump(String lineDelimiter)", "diff": ["+\t\tbyte[] alphas = imageData.alphaData;", "-\t\t\tdump = new char[imageData.height * (6 + 3 * imageData.bytesPerLine + lineDelimiter.length())];", "+\t\t\tint length = imageData.height * (6 + 4 * imageData.bytesPerLine + lineDelimiter.length());", "+\t\t\tif (alphas != null && alphas.length > 0) {", "+\t\t\t\tlength += imageData.height * (6 + 3 * imageData.width + lineDelimiter.length()) + 6 + lineDelimiter.length();", "+\t\t\t}", "+\t\t\tdump = new char[length];", "-\t\t\t\t\tif (lineDelimiter.length() > 1)", "+\t\t\t\t\tif (lineDelimiter.length() > 1) {", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (alphas != null && alphas.length > 0) {", "+\t\t\t\tdump[index++] = lineDelimiter.charAt(0);", "+\t\t\t\tif (lineDelimiter.length() > 1) {", "+\t\t\t\t\tdump[index++] = lineDelimiter.charAt(1);", "+\t\t\t\t}", "+\t\t\t\tSystem.arraycopy(new char[]{'A','l','p','h','a',':'}, 0, dump, index, 6);", "+\t\t\t\tindex +=6;", "+\t\t\t\tdump[index++] = lineDelimiter.charAt(0);", "+\t\t\t\tif (lineDelimiter.length() > 1) {", "+\t\t\t\t\tdump[index++] = lineDelimiter.charAt(1);", "+\t\t\t\t}", "+\t\t\t\tfor (int i = 0; i < alphas.length; i++) {", "+\t\t\t\t\tif (i % imageData.width == 0) {", "+\t\t\t\t\t\tint line = i / imageData.width;", "+\t\t\t\t\t\tdump[index++] = Character.forDigit(line / 1000 % 10, 10);", "+\t\t\t\t\t\tdump[index++] = Character.forDigit(line / 100 % 10, 10);", "+\t\t\t\t\t\tdump[index++] = Character.forDigit(line / 10 % 10, 10);", "+\t\t\t\t\t\tdump[index++] = Character.forDigit(line % 10, 10);", "+\t\t\t\t\t\tdump[index++] = ':';", "+\t\t\t\t\t\tdump[index++] = ' ';", "+\t\t\t\t\t}", "+\t\t\t\t\tbyte b = alphas[i];", "+\t\t\t\t\tdump[index++] = Character.forDigit((b & 0xF0) >> 4, 16);", "+\t\t\t\t\tdump[index++] = Character.forDigit(b & 0x0F, 16);", "+\t\t\t\t\tdump[index++] = ' ';", "+\t\t\t\t\tif ((i + 1) % imageData.width == 0) {", "+\t\t\t\t\t\tdump[index++] = lineDelimiter.charAt(0);", "+\t\t\t\t\t\tif (lineDelimiter.length() > 1) {", "+\t\t\t\t\t\t\tdump[index++] = lineDelimiter.charAt(1);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba4e42b0f77a0c26d3488ff5dab3df6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "77b3fbb225bf670e0c417bef815fb7c859299e19", "commitAfterChange": "e0856b8b808f57d665e09a4e0393d4c9c1b2f815", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tString dataHexDump(String lineDelimiter)", "signatureAfterChange": " \tString dataHexDump(String lineDelimiter)", "diff": ["-\t\tchar[] dump = new char[imageData.height * (6 + 3 * imageData.bytesPerLine + lineDelimiter.length())];", "-\t\tint index = 0;", "-\t\tfor (int i = 0; i < imageData.data.length; i++) {", "-\t\t\tif (i % imageData.bytesPerLine == 0) {", "-\t\t\t\tint line = i / imageData.bytesPerLine;", "-\t\t\t\tdump[index++] = Character.forDigit(line / 1000 % 10, 10);", "-\t\t\t\tdump[index++] = Character.forDigit(line / 100 % 10, 10);", "-\t\t\t\tdump[index++] = Character.forDigit(line / 10 % 10, 10);", "-\t\t\t\tdump[index++] = Character.forDigit(line % 10, 10);", "-\t\t\t\tdump[index++] = ':';", "-\t\t\t\tdump[index++] = ' ';", "-\t\t\t}", "-\t\t\tbyte b = imageData.data[i];", "-\t\t\tdump[index++] = Character.forDigit((b & 0xF0) >> 4, 16);", "-\t\t\tdump[index++] = Character.forDigit(b & 0x0F, 16);", "-\t\t\tdump[index++] = ' ';", "-\t\t\tif ((i + 1) % imageData.bytesPerLine == 0) {", "-\t\t\t\tdump[index++] = lineDelimiter.charAt(0);", "-\t\t\t\tif (lineDelimiter.length() > 1)", "-\t\t\t\t\tdump[index++] = lineDelimiter.charAt(1);", "-\t\t\t}", "+\t\tboolean truncated = false;", "+\t\tchar[] dump = null;", "+\t\ttry {", "+\t\t\tdump = new char[imageData.height * (6 + 3 * imageData.bytesPerLine + lineDelimiter.length())];", "+\t\t} catch (OutOfMemoryError e) {", "+\t\t\t/* Too much data to dump - truncate at 4M. */", "+\t\t\tdump = new char[4 * 1024 * 1024];", "+\t\t\ttruncated = true;", "+\t\tint index = 0;", "+\t\ttry {", "+\t\t\tfor (int i = 0; i < imageData.data.length; i++) {", "+\t\t\t\tif (i % imageData.bytesPerLine == 0) {", "+\t\t\t\t\tint line = i / imageData.bytesPerLine;", "+\t\t\t\t\tdump[index++] = Character.forDigit(line / 1000 % 10, 10);", "+\t\t\t\t\tdump[index++] = Character.forDigit(line / 100 % 10, 10);", "+\t\t\t\t\tdump[index++] = Character.forDigit(line / 10 % 10, 10);", "+\t\t\t\t\tdump[index++] = Character.forDigit(line % 10, 10);", "+\t\t\t\t\tdump[index++] = ':';", "+\t\t\t\t\tdump[index++] = ' ';", "+\t\t\t\t}", "+\t\t\t\tbyte b = imageData.data[i];", "+\t\t\t\tdump[index++] = Character.forDigit((b & 0xF0) >> 4, 16);", "+\t\t\t\tdump[index++] = Character.forDigit(b & 0x0F, 16);", "+\t\t\t\tdump[index++] = ' ';", "+\t\t\t\tif ((i + 1) % imageData.bytesPerLine == 0) {", "+\t\t\t\t\tdump[index++] = lineDelimiter.charAt(0);", "+\t\t\t\t\tif (lineDelimiter.length() > 1)", "+\t\t\t\t\t\tdump[index++] = lineDelimiter.charAt(1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch (IndexOutOfBoundsException e) {}", "-\t\t\tresult = new String(dump, 0, 4 * 1024 * 1024) + \"\\n ...data dump truncated at 4M...\";", "+\t\t\tresult = new String(dump, 0, 4 * 1024 * 1024);", "+\t\t\ttruncated = true;", "+\t\tif (truncated) result += \"\\n ...data dump truncated at 4M...\";"]}], "num": 59773}