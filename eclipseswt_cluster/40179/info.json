{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35343e3f4e0de66430082d6925dc8990", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87a95ced5f2684555ecf3749ebb8e71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "c7a9228d80fff1b80a779eaa2302793ec130a6d3", "commitAfterChange": "e3044a41893dace052525d17ede27b288332bdf6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t", "+\t/*", "+\t* Feature in Windows.  When TBSTYLE_FLAT is used to create", "+\t* a flat toolbar, for some reason TBSTYLE_TRANSPARENT is", "+\t* also set.  This causes the toolbar to flicker when it is", "+\t* moved or resized.  The fix is to clear TBSTYLE_TRANSPARENT.", "+\t* ", "+\t* NOTE:  This work around is unnecessary on XP.  There is no", "+\t* flickering and clearing the TBSTYLE_TRANSPARENT interferes", "+\t* with the XP theme.", "+\t*/", "+\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tbits &= ~OS.TBSTYLE_TRANSPARENT;", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217f46b0793338d20cd57f27723fb373", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f564bd037598f91bb0461e06e04daebaf1d4b1ae", "commitAfterChange": "c5942a76a517977b0aac721a00f2eba9968c5b3c", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\t* there is an outstanding timer that runs after the widget is dispoed.", "+\t* there is an outstanding timer that runs after the widget is disposed.", "+\t* ", "+\t* NOTE: Pixel corruption happens on the parent window when the ", "+\t* a drop down combo is not in focus and the contents is scrolled", "+\t* to the left.  This is avoided by clearing the text.  ", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, new char[1], 1);", "+\t\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "+\t\t\tOS.CFRelease (ptr);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61410a62b936f9b1a740df1a6ffe58b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "  void setParent ()", "signatureAfterChange": "  void setParent ()", "diff": ["+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\tbits &= ~OS.WS_CHILD;", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits | OS.WS_POPUP);", "+\tOS.SetWindowLong (handle, OS.GWL_ID, 0);"]}], "num": 40179}