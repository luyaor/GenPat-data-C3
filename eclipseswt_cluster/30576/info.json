{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fd3be020964ad2d57b311083932b4c8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9841804fa8331cf4f218b196b476a7c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7efd368d6401a211d99c1421b1b9e55f80478f3b", "commitAfterChange": "bc304da6875794b285d21258b34146756f9bc25b", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowProc(int id, int sel, int arg0)", "diff": ["+\tif (sel == OS.sel_changeColor_) {", "+\t\tNSColorPanel panel = NSColorPanel.sharedColorPanel();", "+\t\tid delegate = panel.delegate();", "+\t\tif (delegate != null) {", "+\t\t\tif (OS.objc_msgSend_bool(delegate.id, OS.sel_isKindOfClass_, OS.objc_getClass(\"SWTPanelDelegate\"))) {", "+\t\t\t\tOS.objc_msgSend(delegate.id, OS.sel_changeColor_, arg0);", "+\t\t\t}", "+\t\t}", "+\t\treturn 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe88d704c50c46f1689fa0e112af5cba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "289fd35b0cad8e2959ad2aaad800132b21fddb4c", "commitAfterChange": "74bc3bf9e2fa90f65ba4467afaa401244bd32dd3", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "signatureAfterChange": "  int ProcessUrlAction(int pwszUrl, int dwAction, int pPolicy, int cbPolicy, int pContext, int cbContext, int dwFlags, int dwReserved)", "diff": ["+\t/*", "+\t* If the current page is about:blank and is trusted then", "+\t* override default zone elevation settings to allow the action.  ", "+\t*/", "+\tif (dwAction == IE.URLACTION_FEATURE_ZONE_ELEVATION) {", "+\t    IE ie = (IE)((Browser)getParent().getParent()).webBrowser;", "+\t    if (ie.auto != null && ie._getUrl().startsWith(IE.ABOUT_BLANK) && !ie.untrustedText) {", "+\t\t\tif (cbPolicy >= 4) COM.MoveMemory(pPolicy, new int[] {IE.URLPOLICY_ALLOW}, 4);", "+\t\t\treturn COM.S_OK;", "+\t    }", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10999c6e0716d2d8c62cf9b3cc90c9c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "df052de83d7acd1cc399aa5a5220357d3ff18aa2", "commitAfterChange": "64387f2af5241a200363ccc1f0c65ecf0433d6b7", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void onVerify(Event event)", "signatureAfterChange": "  void onVerify(Event event)", "diff": ["+\tif (fieldName == Calendar.AM_PM) {", "+\t\tif (newText.equalsIgnoreCase(\"A\") || newText.equalsIgnoreCase(\"AM\")) {", "+\t\t\tsetTextField(fieldName, Calendar.AM, true);", "+\t\t} else if (newText.equalsIgnoreCase(\"P\") || newText.equalsIgnoreCase(\"PM\")) {", "+\t\t\tsetTextField(fieldName, Calendar.PM, true);", "+\t\t}", "+\t\treturn;", "+\t}", "-\tif (newTextLength + characterCount < length) {", "-\t\tcharacterCount += newTextLength;", "-\t} else {", "-\t\tcharacterCount = 0;", "-\t}", "+\tcharacterCount = (newTextLength < length) ? newTextLength : 0;", "-\t\t\t\tnewValue = Integer.parseInt(newText.substring(newTextLength - length + 1));", "+\t\t\t\tnewText = newText.substring(newTextLength - length + 1);", "+\t\t\t\tnewValue = Integer.parseInt(newText);", "+\t\t\t\tcharacterCount = length - 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4665d8a615087f2ced510b7f43a621c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "e883a8a659993cccfee1bed5a2726ca45d30246f", "commitAfterChange": "369650929c70fa9782777b664ca969d11c190cc4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["+\t\t// If image is the same size as before, ", "+\t\t// redraw only the image", "+\t\tif (oldImage != null && image != null) {", "+\t\t\tRectangle oldBounds = oldImage.getBounds();", "+\t\t\tRectangle bounds = image.getBounds();", "+\t\t\tif (bounds.width == oldBounds.width && bounds.height == oldBounds.height) {", "+\t\t\t\tif (isShowing()) parent.redraw(x, y, width, height, false);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5641439edb8761f092ee78f99af0ebc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7b875feb9aab87fbca7cd80d8d00ddfd577b532c", "commitAfterChange": "cf88a4f46102f955017749fd392f852deca59091", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "signatureAfterChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "diff": ["+\t\t\t\t", "+\t\t\t\tint cursor= 0;", "+\t\t\t\tWidget w= findWidget(fCurrentControl);", "+\t\t\t\tif (w instanceof Control) {", "+\t\t\t\t\tControl c= (Control) w;", "+\t\t\t\t\tif (c.fCursor != null && c.fCursor.handle != -1)", "+\t\t\t\t\t\tcursor= c.fCursor.handle;", "+\t\t\t\t}", "+\t\t\t\tif (cursor == 0)", "+\t\t\t\t\tOS.InitCursor();", "+\t\t\t\telse", "+\t\t\t\t\tOS.SetCursor(cursor);", "+\t\t\t\t"]}], "num": 30576}