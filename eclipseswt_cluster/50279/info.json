{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a9c291ed12ad33f8428290eb7036924", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768c40f0420c5f47af8520f4b39be535", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ac414216d06e13c352ce417d8169a235a33178a0", "commitAfterChange": "3d05d3e9ee0496402e563d4d730019cdd0eede82", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection, RECT clipRect, int alpha)", "diff": ["-void drawLines(boolean advance, int /*long*/ graphics, int x, int y, StyleItem run, int /*long*/ color, boolean selection) {", "-\tif (run.style == null) return;", "-\tif (!run.style.underline && !run.style.strikeout) return;", "+void drawLines(boolean advance, int /*long*/ graphics, int x, int y, StyleItem run, int /*long*/ color, boolean selection, RECT clipRect, int alpha) {", "+\tTextStyle style = run.style;", "+\tif (style == null) return;", "+\tif (!style.underline && !style.strikeout) return;", "-\t\tif (run.style.underline) {", "-\t\t\tif (!selection && run.style.underlineColor != null) {", "-\t\t\t\tint c = run.style.underlineColor.handle;", "-\t\t\t\tint argb = (0xFF << 24) | ((c >> 16) & 0xFF) | (c & 0xFF00) | ((c & 0xFF) << 16);", "+\t\tif (style.underline) {", "+\t\t\tif (!selection && style.underlineColor != null) {", "+\t\t\t\tint fg = style.underlineColor.handle;", "+\t\t\t\tint argb = ((alpha & 0xFF) << 24) | ((fg >> 16) & 0xFF) | (fg & 0xFF00) | ((fg & 0xFF) << 16);", "-\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, underlineY, run.width, run.underlineThickness);", "+\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\tcase SWT.UNDERLINE_ERROR:", "+\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\t\tint squigglyThickness = 1;", "+\t\t\t\t\tint squigglyHeight = 2 * squigglyThickness;", "+\t\t\t\t\tint squigglyY = Math.min(underlineY, y + run.ascent + run.descent - squigglyHeight - 1);", "+\t\t\t\t\tint[] points = computePolyline(x, squigglyY, x + run.width, squigglyY + squigglyHeight);", "+\t\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, squigglyThickness);", "+\t\t\t\t\tGdip.Graphics_DrawLines(graphics, pen, points, points.length / 2);", "+\t\t\t\t\tGdip.Pen_delete(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x - run.underlineThickness, underlineY, run.width, run.underlineThickness * 2);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\tcase SWT.UNDERLINE_SINGLE:", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, underlineY, run.width, run.underlineThickness);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_DOUBLE:", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, underlineY, run.width, run.underlineThickness);", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, underlineY + run.underlineThickness * 2, run.width, run.underlineThickness);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t\tif (run.style.strikeout) {", "-\t\t\tif (!selection && run.style.strikeoutColor != null) {", "-\t\t\t\tint c = run.style.strikeoutColor.handle;", "-\t\t\t\tint argb = (0xFF << 24) | ((c >> 16) & 0xFF) | (c & 0xFF00) | ((c & 0xFF) << 16);", "+\t\tif (style.strikeout) {", "+\t\t\tif (!selection && style.strikeoutColor != null) {", "+\t\t\t\tint fg = style.strikeoutColor.handle;", "+\t\t\t\tint argb = ((alpha & 0xFF) << 24) | ((fg >> 16) & 0xFF) | (fg & 0xFF00) | ((fg & 0xFF) << 16);", "-\t\tif (run.style.underline) {", "-\t\t\tif (!selection && run.style.underlineColor != null) {", "-\t\t\t\tcolorRefUnderline = run.style.underlineColor.handle;", "+\t\tif (style.underline) {", "+\t\t\tif (!selection && style.underlineColor != null) {", "+\t\t\t\tcolorRefUnderline = style.underlineColor.handle;", "-\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "-\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "-\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\tcase SWT.UNDERLINE_ERROR:", "+\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\t\tint squigglyThickness = 1;", "+\t\t\t\t\tint squigglyHeight = 2 * squigglyThickness;", "+\t\t\t\t\tint squigglyY = Math.min(underlineY, y + run.ascent + run.descent - squigglyHeight - 1);", "+\t\t\t\t\tint state = 0;", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\tstate = OS.SaveDC(graphics);", "+\t\t\t\t\t\tOS.IntersectClipRect(graphics, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\t}", "+\t\t\t\t\tint[] points = computePolyline(x, squigglyY, x + run.width, squigglyY + squigglyHeight);", "+\t\t\t\t\tint /*long*/ pen = OS.CreatePen(OS.PS_SOLID, squigglyThickness, colorRefUnderline);", "+\t\t\t\t\tint /*long*/ oldPen = OS.SelectObject(graphics, pen);", "+\t\t\t\t\tOS.Polyline(graphics, points, points.length / 2);", "+\t\t\t\t\tint length = points.length;", "+\t\t\t\t\tif (length >= 2 && squigglyThickness <= 1) {", "+\t\t\t\t\t\tOS.SetPixel (graphics, points[length - 2], points[length - 1], colorRefUnderline);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (state != 0) OS.RestoreDC(graphics, state);", "+\t\t\t\t\tOS.SelectObject(graphics, oldPen);", "+\t\t\t\t\tOS.DeleteObject(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "+\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY - run.underlineThickness, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\tcase SWT.UNDERLINE_SINGLE:", "+\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.UNDERLINE_DOUBLE:", "+\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY + run.underlineThickness * 2, x + run.width, underlineY + run.underlineThickness * 3);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t\tif (run.style.strikeout) {", "-\t\t\tif (!selection && run.style.strikeoutColor != null) {", "-\t\t\t\tcolorRefStrikeout = run.style.strikeoutColor.handle;", "+\t\tif (style.strikeout) {", "+\t\t\tif (!selection && style.strikeoutColor != null) {", "+\t\t\t\tcolorRefStrikeout = style.strikeoutColor.handle;", "+\t\t\tif (clipRect != null) {", "+\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24ad1a45c8d98388f58a3424269dcc08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MessageBox.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int open ()", "signatureAfterChange": "  public int open ()", "diff": ["- */", "+", "-", "-\t/* Compute the MessageBox style */", "-\t/* AW", "-\tint buttonBits = 0;", "-\tif ((style & SWT.OK) == SWT.OK) buttonBits = OS.MB_OK;", "-\tif ((style & (SWT.OK | SWT.CANCEL)) == (SWT.OK | SWT.CANCEL)) buttonBits = OS.MB_OKCANCEL;", "-\tif ((style & (SWT.YES | SWT.NO)) == (SWT.YES | SWT.NO)) buttonBits = OS.MB_YESNO;", "-\tif ((style & (SWT.YES | SWT.NO | SWT.CANCEL)) == (SWT.YES | SWT.NO | SWT.CANCEL)) buttonBits = OS.MB_YESNOCANCEL;", "-\tif ((style & (SWT.RETRY | SWT.CANCEL)) == (SWT.RETRY | SWT.CANCEL)) buttonBits = OS.MB_RETRYCANCEL;", "-\tif ((style & (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) == (SWT.ABORT | SWT.RETRY | SWT.IGNORE)) buttonBits = OS.MB_ABORTRETRYIGNORE;", "-\tif (buttonBits == 0) buttonBits = OS.MB_OK;", "-", "-\tint iconBits = 0;", "-\tif ((style & SWT.ICON_ERROR) != 0) iconBits = OS.MB_ICONERROR;", "-\tif ((style & SWT.ICON_INFORMATION) != 0) iconBits = OS.MB_ICONINFORMATION;", "-\tif ((style & SWT.ICON_QUESTION) != 0) iconBits = OS.MB_ICONQUESTION;", "-\tif ((style & SWT.ICON_WARNING) != 0) iconBits = OS.MB_ICONWARNING;", "-\tif ((style & SWT.ICON_WORKING) != 0) iconBits = OS.MB_ICONINFORMATION;", "-", "-\tint modalBits = 0;", "-\tif ((style & SWT.PRIMARY_MODAL) != 0) modalBits = OS.MB_APPLMODAL;", "-\tif ((style & SWT.APPLICATION_MODAL) != 0) modalBits = OS.MB_TASKMODAL;", "-\tif ((style & SWT.SYSTEM_MODAL) != 0) modalBits = OS.MB_SYSTEMMODAL;", "-", "-\tint bits = buttonBits | iconBits | modalBits;", "-\t*/", "-\t\t", "-\tshort alertType;", "-\tif ((style & SWT.ICON_ERROR) != 0)", "-\t\talertType= OS.kAlertStopAlert;", "-\telse if ((style & SWT.ICON_INFORMATION) != 0)", "-\t\talertType= OS.kAlertNoteAlert;", "-\telse if ((style & SWT.ICON_QUESTION) != 0)", "-\t\talertType= OS.kAlertNoteAlert;", "-\telse if ((style & SWT.ICON_WARNING) != 0)", "-\t\talertType= OS.kAlertCautionAlert;", "-\telse if ((style & SWT.ICON_WORKING) != 0)", "-\t\talertType= OS.kAlertNoteAlert;", "-\telse", "-\t\talertType= OS.kAlertPlainAlert;", "-", "+\tshort alertType = OS.kAlertPlainAlert;", "+\tif ((style & SWT.ICON_ERROR) != 0) alertType = OS.kAlertStopAlert;", "+\tif ((style & SWT.ICON_INFORMATION) != 0) alertType = OS.kAlertNoteAlert;", "+\tif ((style & SWT.ICON_QUESTION) != 0) alertType = OS.kAlertNoteAlert;", "+\tif ((style & SWT.ICON_WARNING) != 0) alertType = OS.kAlertCautionAlert;", "+\tif ((style & SWT.ICON_WORKING) != 0) alertType = OS.kAlertNoteAlert;", "-\t/*", "-\t* Feature in Windows.  System modal is not supported", "-\t* on Windows 95 and NT.  The fix is to convert system", "-\t* modal to task modal.", "-\t*/", "-\t/* AW", "-\tif ((bits & OS.MB_SYSTEMMODAL) != 0) {", "-\t\tbits |= OS.MB_TASKMODAL;", "-\t\tbits &= ~OS.MB_SYSTEMMODAL;", "-\t}", "-\t*/", "-", "-\t/*", "-\t* Bug in Windows.  In order for MB_TASKMODAL to work,", "-\t* the parent HWND of the MessageBox () call must be NULL.", "-\t* The fix is to force the parent to be NULL when this", "-\t* style is set.", "-\t*/", "-\t/* AW", "-\tint hwndOwner = 0;", "-\tif (parent != null && (bits & OS.MB_TASKMODAL) == 0) {", "-\t\thwndOwner = parent.handle;", "-\t}", "-\t*/", "-", "-\t/*", "-\t* Feature in Windows.  The focus window is not saved and", "-\t* and restored automatically by the call to MessageBox().", "-\t* The fix is to save and restore the focus window.", "-\t*/", "-\t/* AW", "-\tint hwndFocus = OS.GetFocus ();", "-\t*/", "-", "-\t/* Open the message box */", "-\t/* Use the character encoding for the default locale */", "-\t/* AW", "-\tTCHAR buffer1 = new TCHAR (0, message, true);", "-\tTCHAR buffer2 = new TCHAR (0, title, true);", "-\tint code = OS.MessageBox (hwndOwner, buffer1, buffer2, bits);", "-\t*/", "-\t", "-\tint errorMessage= 0;", "-\tint[] dialogRef= new int[1];", "-\ttry {", "-\t\terrorMessage= OS.CFStringCreateWithCharacters(message);", "-\t\tOS.CreateStandardAlert(alertType, errorMessage, 0, 0, dialogRef);", "-\t} finally {", "-\t\tif (errorMessage != 0)", "-\t\t\tOS.CFRelease(errorMessage);", "+\tint error = 0;", "+\tint explanation = 0;", "+\tString errorString = (title != \"\") ? title : ((message != \"\") ? message : null);", "+\tString explanationString = (title == \"\") ? null : ((message != \"\") ? message : null);", "+\tif (errorString != null) {", "+\t\tchar [] buffer = new char [errorString.length ()];", "+\t\terrorString.getChars (0, buffer.length, buffer, 0);", "+\t\terror = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t} ", "+\tif (explanationString != null) {", "+\t\tchar [] buffer = new char [explanationString.length ()];", "+\t\texplanationString.getChars (0, buffer.length, buffer, 0);", "+\t\texplanation = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);\t\t", "-\tshort[] itemHit= new short[1];", "-\tif (dialogRef[0] != 0)", "-\t\tOS.RunStandardAlert(dialogRef[0], 0, itemHit);", "+\tAlertStdCFStringAlertParamRec param = new AlertStdCFStringAlertParamRec ();", "+\tparam.version = OS.kStdCFStringAlertVersionOne;", "+\tparam.position = (short)OS.kWindowAlertPositionParentWindowScreen;", "+\tint defaultStr = 0, cancelStr = 0, otherStr = 0;", "+\tint mask = (SWT.YES | SWT.NO | SWT.OK | SWT.CANCEL | SWT.ABORT | SWT.RETRY | SWT.IGNORE);", "+\tint bits = style & mask;", "+\tswitch (bits) {", "+\t\tcase SWT.OK:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = OS.kAlertDefaultOKText;", "+\t\t\tbreak;", "+\t\tcase SWT.CANCEL:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Cancel\");", "+\t\t\tbreak;", "+\t\tcase SWT.OK | SWT.CANCEL:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = OS.kAlertDefaultOKText;", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertCancelButton;", "+\t\t\tparam.cancelText = OS.kAlertDefaultCancelText;", "+\t\t\tbreak;", "+\t\tcase SWT.YES:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Yes\");", "+\t\t\tbreak;", "+\t\tcase SWT.NO:", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.cancelText = defaultStr = getCFString (\"SWT_No\");", "+\t\t\tbreak;", "+\t\tcase SWT.YES | SWT.NO:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Yes\");", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertCancelButton;", "+\t\t\tparam.cancelText = cancelStr = getCFString (\"SWT_No\");", "+\t\t\tbreak;", "+\t\tcase SWT.YES | SWT.NO | SWT.CANCEL:\t\t\t\t", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Yes\");", "+\t\t\tparam.otherText = cancelStr = getCFString (\"SWT_No\");", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertCancelButton;", "+\t\t\tparam.cancelText = OS.kAlertDefaultCancelText;", "+\t\t\tbreak;", "+\t\tcase SWT.RETRY | SWT.CANCEL:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Retry\");", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertCancelButton;", "+\t\t\tparam.cancelText = OS.kAlertDefaultCancelText;", "+\t\t\tbreak;", "+\t\tcase SWT.ABORT | SWT.RETRY | SWT.IGNORE:", "+\t\t\tparam.defaultButton = (short)OS.kAlertStdAlertOKButton;", "+\t\t\tparam.defaultText = defaultStr = getCFString (\"SWT_Abort\");", "+\t\t\tparam.otherText = cancelStr = getCFString (\"SWT_Retry\");", "+\t\t\tparam.cancelButton = (short)OS.kAlertStdAlertCancelButton;", "+\t\t\tparam.cancelText = otherStr = getCFString (\"SWT_Ignore\");", "+\t\t\tbreak;", "+\t}", "-\tSystem.out.println(\"Alert code: \" + itemHit[0]);", "+\tint [] dialogRef= new int [1];", "+\tint result = OS.CreateStandardAlert (alertType, error, explanation, param, dialogRef);", "+\tif (error != 0) OS.CFRelease(error);", "+\tif (explanation != 0) OS.CFRelease(explanation);", "+\tif (defaultStr != 0) OS.CFRelease(defaultStr);", "+\tif (cancelStr != 0) OS.CFRelease(cancelStr);", "+\tif (otherStr != 0) OS.CFRelease(otherStr);", "-\t/* Restore focus */", "-\t/* AW", "-\tOS.SetFocus (hwndFocus);", "-\t*/", "-\t", "-\t/*", "-\t* This code is intentionally commented.  On some", "-\t* platforms, the owner window is repainted right", "-\t* away when a dialog window exits.  This behavior", "-\t* is currently unspecified.", "-\t*/", "-//\tif (hwndOwner != 0) OS.UpdateWindow (hwndOwner);", "-\t", "-\t/* Compute and return the result */", "-\t/* AW", "-\tif (code != 0) {", "-\t\tint type = bits & 0x0F;", "-\t\tif (type == OS.MB_OK) return SWT.OK;", "-\t\tif (type == OS.MB_OKCANCEL) {", "-\t\t\treturn (code == OS.IDOK) ? SWT.OK : SWT.CANCEL;", "-\t\t}", "-\t\tif (type == OS.MB_YESNO) {", "-\t\t\treturn (code == OS.IDYES) ? SWT.YES : SWT.NO;", "-\t\t}", "-\t\tif (type == OS.MB_YESNOCANCEL) {", "-\t\t\tif (code == OS.IDYES) return SWT.YES;", "-\t\t\tif (code == OS.IDNO) return SWT.NO;", "-\t\t\treturn SWT.CANCEL;", "-\t\t}", "-\t\tif (type == OS.MB_RETRYCANCEL) {", "-\t\t\treturn (code == OS.IDRETRY) ? SWT.RETRY : SWT.CANCEL;", "-\t\t}", "-\t\tif (type == OS.MB_ABORTRETRYIGNORE) {", "-\t\t\tif (code == OS.IDRETRY) return SWT.RETRY;", "-\t\t\tif (code == OS.IDABORT) return SWT.ABORT;", "-\t\t\treturn SWT.IGNORE;", "+\tif (dialogRef[0] != 0) {", "+\t\tshort [] outItemHit = new short [1];", "+\t\tOS.RunStandardAlert(dialogRef[0], 0, outItemHit);", "+\t\tif (outItemHit [0] != 0) {", "+\t\t\tswitch (bits) {", "+\t\t\t\tcase SWT.OK:", "+\t\t\t\t\treturn SWT.OK;", "+\t\t\t\tcase SWT.CANCEL:", "+\t\t\t\t\treturn SWT.CANCEL;", "+\t\t\t\tcase SWT.OK | SWT.CANCEL:", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOKButton) return SWT.OK;", "+\t\t\t\t\treturn SWT.CANCEL;", "+\t\t\t\tcase SWT.YES:", "+\t\t\t\t\treturn SWT.YES;", "+\t\t\t\tcase SWT.NO:", "+\t\t\t\t\treturn SWT.NO;", "+\t\t\t\tcase SWT.YES | SWT.NO:", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOKButton) return SWT.YES;", "+\t\t\t\t\treturn SWT.NO;", "+\t\t\t\tcase SWT.YES | SWT.NO | SWT.CANCEL:", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOKButton) return SWT.YES;", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOtherButton) return SWT.NO;", "+\t\t\t\t\treturn SWT.CANCEL;", "+\t\t\t\tcase SWT.RETRY | SWT.CANCEL:", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOKButton) return SWT.RETRY;", "+\t\t\t\t\treturn SWT.CANCEL;", "+\t\t\t\tcase SWT.ABORT | SWT.RETRY | SWT.IGNORE:", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOKButton) return SWT.ABORT;", "+\t\t\t\t\tif (outItemHit [0] == OS.kAlertStdAlertOtherButton) return SWT.RETRY;", "+\t\t\t\t\treturn SWT.IGNORE;", "+\t\t\t}", "-\t*/"]}], "num": 50279}