{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4614fc06406e0f0bb4494e1ab886a053", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba258a33611bf6cef25c2d1e32dbf1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["-\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\t/*", "+\t* This code intentionally commented.", "+\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t* However, what actually happens is the cell is scrolled to the top.", "+\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t* will have no effect. Therefore, it is still neccessary to ", "+\t* call gtk_tree_view_scroll_to_cell.", "+\t*/", "+//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_widget_realize (handle);", "+\tGdkRectangle cellRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\tGdkRectangle visibleRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\tint height = Math.min (visibleRect.height, cellRect.height);", "+\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ab8b5b765e9f0f8d856ecdaa6bae39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  void showItem (int iter)", "signatureAfterChange": "  void showItem (int iter)", "diff": ["-\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\t/*", "+\t* This code intentionally commented.", "+\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t* However, what actually happens is the cell is scrolled to the top.", "+\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t* will have no effect. Therefore, it is still neccessary to ", "+\t* call gtk_tree_view_scroll_to_cell.", "+\t*/", "+//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_widget_realize (handle);", "+\tGdkRectangle cellRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\tGdkRectangle visibleRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\tint height = Math.min (visibleRect.height, cellRect.height);", "+\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ccb2532429ebafd4548f7c82a0c2d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "271ed1c844ca50c299243a268076fdd6a6892082", "commitAfterChange": "4fa97eee183ed5f6552c0fb587b02abe1b40444d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \r private void setButtonBounds()", "signatureAfterChange": "\r \r private void setButtonBounds()", "diff": ["-\t\r", "-\tint tabHeight = getTabHeight();\r", "+\r", "-\t\r", "+\r", "+\tint offset = 0;\r", "+\tif (topRight != null) {\r", "+\t\tPoint size = topRight.computeSize(SWT.DEFAULT, tabHeight);\r", "+\t\tint x = area.x + area.width - borderRight - size.x;\r", "+\t\tint y = onBottom ? area.y + area.height - borderBottom - size.y : area.y + borderTop;\r", "+\t\ttopRight.setBounds(x, y, size.x, size.y);\r", "+\t\toffset = size.x;\r", "+\t\ttopRight.setVisible(true);\r", "+\t}\r", "-\t\tint x = area.x + area.width - borderRight - size.x;\r", "+\t\tint x = area.x + area.width - borderRight - size.x - offset;\r", "-\t\t\tif (scroll_leftVisible() || scroll_rightVisible()) {\r", "-\t\t\t\tRectangle arrowRect = arrowBar.getBounds();\r", "-\t\t\t\tarrowRect.width += borderRight;\r", "-\t\t\t\tcloseBar.setVisible(!arrowRect.contains(x, y));\r", "-\t\t\t} else {\r", "-\t\t\t\tcloseBar.setVisible(true);\r", "-\t\t\t}\r", "+\t\t\tRectangle toolspace = getToolSpace();\r", "+\t\t\tcloseBar.setVisible(!toolspace.contains(x, y));\r"]}], "num": 25184}