{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6566262865614872df8c49cd509cf3c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "835f23f5c2dbf8b19da9c4f7e64f5c85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ced6309d83136191307f59b1d7ca67538883169e", "commitAfterChange": "ec4463e5809457fec0c4e8fa95d96c7900df01c5", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void setBounds (Rectangle rect)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["+", "+void setBounds (int x, int y, int width, int height, int flags, boolean defer) {", "+\tif (defer && parent != null) {", "+\t\tforceResize ();", "+\t\tWINDOWPOS [] lpwp = parent.lpwp;", "+\t\tif (lpwp == null) {", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented.  All widgets that", "+\t\t\t* are created by SWT have WS_CLIPSIBLINGS to ensure that", "+\t\t\t* application code does not draw outside of the control.", "+\t\t\t*/", "+//\t\t\tint count = parent.getChildrenCount ();", "+//\t\t\tif (count > 1) {", "+//\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+//\t\t\t\tif ((bits & OS.WS_CLIPSIBLINGS) == 0) flags |= OS.SWP_NOCOPYBITS;", "+//\t\t\t}", "+\t\t\tSetWindowPos (handle, 0, x, y, width, height, flags);", "+\t\t} else {", "+\t\t\tint index = 0;", "+\t\t\twhile (index < lpwp.length) {", "+\t\t\t\tif (lpwp [index] == null) break;", "+\t\t\t\tindex ++;", "+\t\t\t}", "+\t\t\tif (index == lpwp.length) {", "+\t\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "+\t\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "+\t\t\t\tparent.lpwp = lpwp = newLpwp;", "+\t\t\t}", "+\t\t\tWINDOWPOS wp = new WINDOWPOS ();", "+\t\t\twp.hwnd = handle;", "+\t\t\twp.x = x;", "+\t\t\twp.y = y;", "+\t\t\twp.cx = width;", "+\t\t\twp.cy = height;", "+\t\t\twp.flags = flags;", "+\t\t\tlpwp [index] = wp;", "+\t\t}", "+\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a2280ea2b6d9155607c24c9fd71925", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "0362dc218a46d8f46b93f307ed6b62eabc4a5e4a", "commitAfterChange": "f1d57a4b42a582bb7c3e91175adab2b5cf26d9d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = OS.GTK_WIDGET_WIDTH (fixedHandle);", "-\tint height = OS.GTK_WIDGET_HEIGHT (fixedHandle);", "-\tOS.gtk_widget_set_size_request (handle, wHint, hHint);", "-\tGtkRequisition requisition = new GtkRequisition ();", "-\tOS.gtk_widget_size_request (handle, requisition);", "-\tGtkRequisition entryRequesition = new GtkRequisition ();", "-\tOS.gtk_widget_size_request (entryHandle, entryRequesition);", "+\tint[] w = new int [1], h = new int [1];", "+\tint layout = OS.gtk_entry_get_layout (entryHandle);", "+\tOS.pango_layout_get_size (layout, w, h);", "+\tint xborder = INNER_BORDER, yborder = INNER_BORDER;", "+\tGtkStyle style = new GtkStyle (); ", "+\tOS.memmove (style, OS.gtk_widget_get_style (entryHandle));", "+\txborder += style.xthickness;", "+\tyborder += style.ythickness;", "+\tint [] property = new int [1];", "+\tOS.gtk_widget_style_get (entryHandle, OS.interior_focus, property, 0);", "+\tif (property [0] != 0) {", "+\t\tOS.gtk_widget_style_get (entryHandle, OS.focus_line_width, property, 0);", "+\t\txborder += property [0];", "+\t\tyborder += property [0];", "+\t}", "+\tint width = OS.PANGO_PIXELS (w [0]) + xborder  * 2;", "+\tint height = OS.PANGO_PIXELS (h [0]) + yborder  * 2;", "+", "+\tGtkRequisition arrowRequesition = new GtkRequisition ();", "+\tOS.gtk_widget_size_request (arrowHandle, arrowRequesition);", "-\tOS.gtk_widget_set_size_request (handle, width, height);", "-\twidth = (requisition.width - entryRequesition.width) + listRequesition.width + 2;", "+\t", "+\twidth = Math.max (listRequesition.width, width) + arrowRequesition.width + 4;", "-\theight = hHint == SWT.DEFAULT ? requisition.height : hHint;", "+\theight = hHint == SWT.DEFAULT ? height : hHint;"]}], "num": 62829}