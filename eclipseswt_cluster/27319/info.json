{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffeddb1d71aa7cfc67c60b84279bb275", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd506c45d58d24d627abf7dc22d0264", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1c055a44e1eadebc040cb65824bd32170f63ed4b", "commitAfterChange": "a4f053fcee887bb5f05cb7b17f5e4cad6fef3ef0", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  public boolean readAndDispatch ()", "signatureAfterChange": "  public boolean readAndDispatch ()", "diff": ["-\t\tif (eventClass != WAKE_CLASS || eventKind != WAKE_KIND) return true;", "+\t\t/*", "+\t\t* Feature in the Macintosh.  When an indeterminate progress", "+\t\t* bar is running, it floods the event queue with messages in", "+\t\t* order to show the animation.  This means that async messages", "+\t\t* will never run because there are always messages from the", "+\t\t* operating system.  The fix is to run async messages when ever", "+\t\t* there is a wake message.", "+\t\t*", "+\t\t* NOTE:  This is not the correct behavior.  Operating system", "+\t\t* message are supposed to have priority over async messages.", "+\t\t*/", "+\t\tif (eventClass == WAKE_CLASS && eventKind == WAKE_KIND) {", "+\t\t\trunAsyncMessages ();", "+\t\t}\t\t", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b6d58cb5f809fd726a33b8b4800724", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "68cd21d8e917275fd728236c1338773be5769276", "commitAfterChange": "bba14a1c7c31d94a78eef963aedcb5dcb8769078", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "signatureAfterChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "diff": ["-\tif (!OS.IsWindowVisible (handle) || drawCount > 0) return;", "-\tint hChild = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, hParent);", "-\tif (hChild != 0 && OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) == 0) {", "-\t\tRECT rect = new RECT ();", "-\t\trect.left = hParent;", "-\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "-\t\t\tOS.InvalidateRect (handle, rect, true);", "+\tif (OS.IsWindowVisible (handle) && drawCount == 0) {", "+\t\tint hChild = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, hParent);", "+\t\tif (hChild != 0 && OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) == 0) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\trect.left = hParent;", "+\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "+\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88890c2897a2eb67787a403bf54fc69c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "08b35427b630b058d33816f10064b6c3de68a1f4", "commitAfterChange": "b103fd807559d48c897b2c2c3616c607a2d74179", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void redraw (int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void redraw (int x, int y, int width, int height, boolean all)", "diff": ["-\tif (width <= 0 || height <= 0) return;", "-\tredrawWidget (x, y, width, height, all);", "+\tif (width > 0 && height > 0) {", "+\t\tredrawWidget (x, y, width, height, false, all);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25a5f492897141a8095c071d554fd4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "06fa7cab52230e33d5260a6b87c9954d5d2e2afa", "commitAfterChange": "5f39a3e398ba24020daab3db35a758e585dae7a9", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\tGdkRectangle rect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "-\tif (rect.y != 0 || rect.height != 0) return;", "-\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.5f);", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "+\t\tif (rect.y == 0 && rect.height == 0) {", "+\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.5f);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58daded031983e625996e25a7aa5e038", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4e33ab6a6b184887de2c99db0f551ffeb18ad0f6", "commitAfterChange": "8edb26f7765e14b1b7eb8e23e69c89af78088ea8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "signatureAfterChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "diff": ["-\t* indicator.  The fix is to detect this case and force a redraw.", "+\t* indicator.  The fix is to detect the case when the first", "+\t* child is added to a visible parent item and redraw the parent.", "-\tif (hChild == 0 || OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) != 0) {", "-\t\treturn;", "-\t}", "-\tRECT rect = new RECT ();", "-\trect.left = hParent;", "-\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "-\t\tOS.InvalidateRect (handle, rect, false);", "+\tif (hChild != 0 && OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) == 0) {", "+\t\tRECT rect = new RECT ();", "+\t\trect.left = hParent;", "+\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "+\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "883ba3e9eccf5c56118dd0ebf07f8054", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "c2bb1fba9da0f68f76334b5e962d9a177211f0f0", "commitAfterChange": "c40d460631669ae06b416ff2c335dabd8bb55482", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " void realizeChildren ()", "signatureAfterChange": " void realizeChildren ()", "diff": ["+}", "-\tif (super.cursor != null) return;", "-\tif (!isEnabled ()) return;", "-\tOS.XDefineCursor (xDisplay, xWindow, cursor);", "+\tif (super.cursor == null && isEnabled ()) {", "+\t\tOS.XDefineCursor (xDisplay, xWindow, cursor);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5b22da56ceca459139d1f0d1a39a86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d03ee3ef48d55db63b28ee70d6aa938a064ef2bb", "commitAfterChange": "b7b4e1057fbda36ea8206b61ea0ecd34b053c4a9", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": "  void setCairoClip(int damageRgn, int clipRgn)", "signatureAfterChange": "  void setCairoClip(int damageRgn, int clipRgn)", "diff": ["-\tif (OS.GTK_VERSION < OS.VERSION(2,18,0) || data.drawable == 0) {", "-\t\tCairo.cairo_reset_clip(cairo);", "-\t} else {", "+\tif (OS.GTK_VERSION >= OS.VERSION(2,18,0) && data.drawable != 0) {", "+\t} else {", "+\t\tCairo.cairo_reset_clip(cairo);"]}], "num": 27319}