{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e013a9a427bffbf2680be44685c5e74", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a5935205bcdada4e814fdf84b4c80d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "8fde8fcbb781a32691eb37121e23a20db53e1ea6", "commitAfterChange": "9780776c5c4d623ed8c4e9ba64b74a19e324a8b3", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test_setSelectionI()", "signatureAfterChange": "  public void test_setSelectionI()", "diff": ["-\tassertEquals(list.getFocusIndex(), 2);", "-\tassertEquals(list.getFocusIndex(), 0);", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "+\tlist.removeAll();", "-\t\tlist.setSelection(-2);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.setSelection(-2);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\tlist.setSelection(0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.setSelection(0);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\tlist.setSelection(-1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t}", "+\tlist.setSelection(-1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\tassertEquals(list.getFocusIndex(), 2);", "-\tassertEquals(list.getFocusIndex(), 0);", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "+\tlist.removeAll();", "-\t\tlist.setSelection(0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.setSelection(0);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\tlist.setSelection(-1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.setSelection(-1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\tlist.setSelection(-2);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t}", "+\tlist.setSelection(-2);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bd0e0788bd7447d13a968bdd081375", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/browser/Browser5.java", "commitBeforeChange": "acba6653617dbc6c8a9691039402cfd50aa78788", "commitAfterChange": "673960cefcbd2d4d342588f59075fa9505dbe692", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static boolean test1(String url)", "signatureAfterChange": " \t \tpublic static boolean test1(String url)", "diff": ["-\t\tif (verbose) System.out.println(\"javascript window.open with location and size parameters - args: \"+url+\" Expected Event Sequence: Visibility.open\");", "+\t\tif (verbose) System.out.println(\"javascript window.open with location and size parameters - args: \"+url+\"\\n  Expected Event Sequence: Visibility.show\");", "-\t\t\t\t\t\tif (event.location != null) parent.setLocation(event.location);", "-\t\t\t\t\t\tif (event.size != null) parent.setSize(event.size);", "+\t\t\t\t\t\tPoint location = event.location;", "+\t\t\t\t\t\tPoint size = event.size;", "+\t\t\t\t\t\tif (location != null) parent.setLocation(location);", "+\t\t\t\t\t\tif (size != null) parent.setSize(size);", "-\t\t\t\t\t\t\tif (event.location != null || event.size != null) {", "+\t\t\t\t\t\t\tif (location != null || size != null) {", "+\t\t\t\t\t\t\tif (verbose) System.out.println(\"Visibility.show browser \"+index+\" location \"+location+\" size \"+size);", "-\t\t\t\t\t\t\tif (verbose) System.out.println(\"Visibility.show browser \"+index+\" location \"+event.location+\" size \"+event.size);", "-\t\t\t\t\t\t\t/* Certain browsers include decorations to the expected size. Accept size that are larger or equal than", "-\t\t\t\t\t\t\t * expected. Certain browsers invent size or location when some parameters are missing. If we expect", "-\t\t\t\t\t\t\t * null for one of size or location, also accept non null answers.", "+", "+\t\t\t\t\t\t\t/* Certain browsers include decorations in addition to the expected size.", "+\t\t\t\t\t\t\t * Accept sizes that are greater than or equal to the expected size.", "+\t\t\t\t\t\t\t * Certain browsers invent size or location when some parameters are missing.", "+\t\t\t\t\t\t\t * If we expect null for one of size or location, also accept non null answers.", "-\t\t\t\t\t\t\tboolean checkLocation = (event.location == null && regressionBounds[index][0] == null) ||", "-\t\t\t\t\t\t\t\t(event.location != null && event.location.equals(regressionBounds[index][0]) ||", "-\t\t\t\t\t\t\t\t(event.location != null && regressionBounds[index][0] == null));", "-\t\t\t\t\t\t\tboolean checkSize  = ((event.size == null && regressionBounds[index][1] == null) || ", "-\t\t\t\t\t\t\t(event.size != null && event.size.equals(regressionBounds[index][1])) ||", "-\t\t\t\t\t\t\t(event.size != null && regressionBounds[index][1] == null) ||", "-\t\t\t\t\t\t\t(event.size != null && event.size.x >= regressionBounds[index][1].x && event.size.y >= regressionBounds[index][1].y));", "-\t\t\t\t\t\t\tif (verbose) System.out.println(\"Expected location \"+regressionBounds[index][0]+\" size \"+regressionBounds[index][1]);", "-\t\t\t\t\t\t\tif (!checkSize || !checkLocation || ((event.size != null || event.location != null) && regressionBounds[index][0] == null && regressionBounds[index][1] == null)) {", "+\t\t\t\t\t\t\tPoint expectedLocation = regressionBounds[index][0];", "+\t\t\t\t\t\t\tPoint expectedSize = regressionBounds[index][1];", "+\t\t\t\t\t\t\tif (verbose) System.out.println(\"Expected location \"+expectedLocation+\" size \"+expectedSize);", "+\t\t\t\t\t\t\tboolean checkLocation = (location == null && expectedLocation == null) ||", "+\t\t\t\t\t\t\t\t(location != null && location.equals(expectedLocation) ||", "+\t\t\t\t\t\t\t\t(location != null && expectedLocation == null));", "+\t\t\t\t\t\t\tboolean checkSize  = (size == null && expectedSize == null) || ", "+\t\t\t\t\t\t\t\t(size != null && size.equals(expectedSize)) ||", "+\t\t\t\t\t\t\t\t(size != null && expectedSize == null) ||", "+\t\t\t\t\t\t\t\t(size != null && size.x >= expectedSize.x && size.y >= expectedSize.y);", "+\t\t\t\t\t\t\tif (!checkSize || !checkLocation) {"]}], "num": 49648}