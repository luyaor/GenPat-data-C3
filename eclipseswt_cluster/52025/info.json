{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9b5ea54e19381caa9c94346bb81753b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff191730accbd8ccaaf4da0481ab0150", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "diff": ["-\t\tif (OS.HIVIEW) {", "-\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "-\t\t\trectangle.x += (int) pt.x;", "-\t\t\trectangle.y += (int) pt.y;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\t} else {", "-\t\t\tOS.GetControlBounds (from.handle, rect);", "-\t\t\trectangle.x += rect.left;", "-\t\t\trectangle.y += rect.top;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t}", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "+\t\trectangle.x += (int) pt.x;", "+\t\trectangle.y += (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\tif (OS.HIVIEW) {", "-\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "-\t\t\trectangle.x -= (int) pt.x;", "-\t\t\trectangle.y -= (int) pt.y;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\t} else {", "-\t\t\tOS.GetControlBounds (to.handle, rect);", "-\t\t\trectangle.x -= rect.left;", "-\t\t\trectangle.y -= rect.top;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t}", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "+\t\trectangle.x -= (int) pt.x;", "+\t\trectangle.y -= (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a739d8621071e69a303dfa68e7f638d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public Point map (Control from, Control to, int x, int y)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["-\t\tif (OS.HIVIEW) {", "-\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "-\t\t\tpoint.x += (int) pt.x;", "-\t\t\tpoint.y += (int) pt.y;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\t} else {", "-\t\t\tOS.GetControlBounds (from.handle, rect);", "-\t\t\tpoint.x += rect.left;", "-\t\t\tpoint.y += rect.top;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t}", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "+\t\tpoint.x += (int) pt.x;", "+\t\tpoint.y += (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\tif (OS.HIVIEW) {", "-\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "-\t\t\tpoint.x -= (int) pt.x;", "-\t\t\tpoint.y -= (int) pt.y;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\t} else {", "-\t\t\tOS.GetControlBounds (to.handle, rect);", "-\t\t\tpoint.x -= rect.left;", "-\t\t\tpoint.y -= rect.top;", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t}", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "+\t\tpoint.x -= (int) pt.x;", "+\t\tpoint.y -= (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);"]}], "num": 52025}