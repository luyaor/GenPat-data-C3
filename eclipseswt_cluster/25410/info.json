{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "040194b59300f170312ee87255bd2edf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ace8745cfc9d299869a2fcb79b1c3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 35, "signatureBeforeChange": " void createStyledText()", "signatureAfterChange": " \t \tvoid addControl(Control control)", "diff": ["-}", "-void createStyledText() {", "-\tinitializeColors();", "-\ttext = new StyledText (shell, SWT.BORDER | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL);", "-\tGridData spec = new GridData();", "-\tspec.horizontalAlignment = GridData.FILL;", "-\tspec.grabExcessHorizontalSpace = true;", "-\tspec.verticalAlignment = GridData.FILL;", "-\tspec.grabExcessVerticalSpace = true;", "-\ttext.setLayoutData(spec);", "-\ttext.addExtendedModifyListener(new ExtendedModifyListener() {", "-\t\tpublic void modifyText(ExtendedModifyEvent e) {", "-\t\t\thandleExtendedModify(e);", "-\t\t}", "-\t});", "-}", "+\t", "+\tvoid addControl(Control control) {", "+\t\tint offset = styledText.getCaretOffset();", "+\t\tstyledText.replaceTextRange(offset, 0, \"\\uFFFC\"); //$NON-NLS-1$", "+\t\tint index = 0;\t\t", "+\t\twhile (index < controlOffsets.length) {", "+\t\t\tif (controlOffsets[index] == -1 && controls[index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == controlOffsets.length) {", "+\t\t\tint[] tmpOffsets = new int[index + 1];", "+\t\t\tSystem.arraycopy(controlOffsets, 0, tmpOffsets, 0, controlOffsets.length);", "+\t\t\tcontrolOffsets = tmpOffsets;\t\t", "+\t\t\tControl[] tmpControls = new Control[index + 1];", "+\t\t\tSystem.arraycopy(controls, 0, tmpControls, 0, controls.length);", "+\t\t\tcontrols = tmpControls;", "+\t\t}", "+\t\tcontrolOffsets[index] = offset;", "+\t\tcontrols[index] = control;", "+\t\tStyleRange style = new StyleRange();", "+\t\tPoint size = control.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\tint ascent = 2 * size.y / 3;", "+\t\tint descent = size.y - ascent;", "+\t\tstyle.metrics = new GlyphMetrics(ascent + MARGIN, descent + MARGIN, size.x + 2 * MARGIN);\t\t ", "+\t\tint[] ranges = {offset, 1};", "+\t\tStyleRange[] styles = {style};", "+\t\tstyledText.setStyleRanges(0,0, ranges, styles);", "+\t\tcontrol.setSize(size);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aacb07dd984a983235942bf68e48bc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "e26934ac680ad70439130b120695448c0a630d25", "commitAfterChange": "95842c4b8acd967ae07a3fa166a616e528ae2f66", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 34, "signatureBeforeChange": " void fgColor(Color fg)", "signatureAfterChange": "  \tvoid addImage(Image image)", "diff": ["- */", "-void fgColor(Color fg) {", "-\tPoint sel = text.getSelectionRange();", "-\tif ((sel == null) || (sel.y == 0)) return;", "-\tStyleRange style, range;", "-\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\trange = text.getStyleRangeAtOffset(i);", "-\t\tif (range != null) {", "-\t\t\tstyle = (StyleRange)range.clone();", "-\t\t\tstyle.start = i;", "-\t\t\tstyle.length = 1;", "-\t\t\tstyle.foreground = fg;", "-\t\t} else {", "-\t\t\tstyle = new StyleRange (i, 1, fg, null, SWT.NORMAL);", "-\t\t}", "-\t\ttext.setStyleRange(style);", "-\t}", "-\ttext.setSelectionRange(sel.x + sel.y, 0);", "-}", "+", "+\tvoid addImage(Image image) {", "+\t\tint offset = styledText.getCaretOffset();", "+\t\tstyledText.replaceTextRange(offset, 0, \"\\uFFFC\"); //$NON-NLS-1$", "+\t\tint index = 0;\t\t", "+\t\twhile (index < images.length) {", "+\t\t\tif (imageOffsets[index] == -1 && images[index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == imageOffsets.length) {", "+\t\t\tint[] tmpOffsets = new int[index + 1];", "+\t\t\tSystem.arraycopy(imageOffsets, 0, tmpOffsets, 0, imageOffsets.length);", "+\t\t\timageOffsets = tmpOffsets;\t\t", "+\t\t\tImage[] tmpImages = new Image[index + 1];", "+\t\t\tSystem.arraycopy(images, 0, tmpImages, 0, images.length);", "+\t\t\timages = tmpImages;", "+\t\t}", "+\t\timageOffsets[index] = offset;", "+\t\timages[index] = image;", "+\t\tStyleRange style = new StyleRange();", "+\t\tRectangle rect = image.getBounds();", "+\t\tstyle.metrics = new GlyphMetrics(rect.height, 0, rect.width);", "+\t\tint[] ranges = {offset, 1};", "+\t\tStyleRange[] styles = {style};", "+\t\tstyledText.setStyleRanges(0,0, ranges, styles);", "+\t}"]}], "num": 25410}