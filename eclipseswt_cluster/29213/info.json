{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "883f8209d853fb0701eb2f302c71bf33", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcc7234782039d5a6d7807d2d5335e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public int getDepth ()", "signatureAfterChange": " public int getDepth ()", "diff": ["- */", "-public int getDepth () {", "-\tcheckDevice ();", "-\treturn fScreenDepth;", "+ */", "+public int getDepth () {", "+\tcheckDevice ();\t", "+\tint gdevice = OS.GetMainDevice();", "+\tint[] ptr = new int[1];", "+\tOS.memcpy(ptr, gdevice, 4);", "+\tGDevice device = new GDevice();", "+\tOS.memcpy(device, ptr[0], GDevice.sizeof);", "+\tint depth = OS.GetPixDepth(device.gdPMap);", "+\treturn depth;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b26ad51bd39c313a26209f1de0d119b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public Point getDPI ()", "signatureAfterChange": " public Point getDPI ()", "diff": ["-\t/* AW", "-\tint xScreenNum = OS.XDefaultScreen (xDisplay);", "-\tint width = OS.XDisplayWidth (xDisplay, xScreenNum);", "-\tint height = OS.XDisplayHeight (xDisplay, xScreenNum);", "-\tint mmX = OS.XDisplayWidthMM (xDisplay, xScreenNum);", "-\tint mmY = OS.XDisplayHeightMM (xDisplay, xScreenNum);", "-\t*/", "-\t/* 0.03937 mm/inch */", "-\t/* AW", "-\tdouble inchesX = mmX * 0.03937;", "-\tdouble inchesY = mmY * 0.03937;", "-\tint x = (int)((width / inchesX) + 0.5);", "-\tint y = (int)((height / inchesY) + 0.5);", "-\treturn new Point (x, y);", "-\t*/", "-\t", "-\tif (fGDeviceHandle != 0) {", "-\t\tint pm= OS.getgdPMap(fGDeviceHandle);", "-\t\tif (pm != 0)", "-\t\t\treturn new Point(OS.getPixHRes(pm) >> 16, OS.getPixVRes(pm) >> 16);", "-\t}", "-\treturn new Point(72, 72);", "+\tint gdevice = OS.GetMainDevice();", "+\tint[] ptr = new int[1];", "+\tOS.memcpy(ptr, gdevice, 4);", "+\tGDevice device = new GDevice();", "+\tOS.memcpy(device, ptr[0], GDevice.sizeof);", "+\tOS.memcpy(ptr, device.gdPMap, 4);", "+\tPixMap pixmap = new PixMap();", "+\tOS.memcpy(pixmap, ptr[0], PixMap.sizeof);", "+\treturn new Point (pixmap.hRes >> 16, pixmap.vRes >> 16);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d8371c76756a196ffd8968627ceb1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "78468bca446d96c75fb7a488b69a2588651540b3", "commitAfterChange": "bd2fbb8410192877f5552bd4ede9ef550094b912", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": " public Monitor getPrimaryMonitor ()", "signatureAfterChange": " public Monitor getPrimaryMonitor ()", "diff": ["+\tint gdevice = OS.GetMainDevice ();", "-\tRectangle rect = getBounds ();", "-\tmonitor.x = rect.x;", "-\tmonitor.y = rect.y;", "-\tmonitor.width = rect.width;", "-\tmonitor.height = rect.height;", "-\trect = getClientArea ();", "-\tmonitor.clientX = rect.x;", "-\tmonitor.clientY = rect.y;", "-\tmonitor.clientWidth = rect.width;", "-\tmonitor.clientHeight = rect.height;", "+\tmonitor.handle = gdevice;", "+\tint [] ptr = new int [1];", "+\tOS.memcpy (ptr, gdevice, 4);", "+\tGDevice device = new GDevice ();", "+\tOS.memcpy (device, ptr [0], GDevice.sizeof);\t\t", "+\tmonitor.x = device.left;", "+\tmonitor.y = device.top;", "+\tmonitor.width = device.right - device.left;", "+\tmonitor.height = device.bottom - device.top;", "+\tRect rect = new Rect ();\t\t", "+\tOS.GetAvailableWindowPositioningBounds (gdevice, rect);", "+\tmonitor.clientX = rect.left;", "+\tmonitor.clientY = rect.top;", "+\tmonitor.clientWidth = rect.right - rect.left;", "+\tmonitor.clientHeight = rect.bottom - rect.top;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bb2c70f7106433dd259d9cbe1d8091", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds ()", "diff": ["-\t", "-\tMacRect bounds= new MacRect();", "-\tif (fGDeviceHandle != 0) {", "-\t\tint pm= OS.getgdPMap(fGDeviceHandle);", "-\t\tif (pm != 0)", "-\t\t\tOS.GetPixBounds(pm, bounds.getData());", "-\t}", "-\treturn bounds.toRectangle();", "-}", "+\tint gdevice = OS.GetMainDevice();", "+\tint[] ptr = new int[1];", "+\tOS.memcpy(ptr, gdevice, 4);", "+\tGDevice device = new GDevice();", "+\tOS.memcpy(device, ptr[0], GDevice.sizeof);", "+\tRect rect = new Rect();", "+\tOS.GetPixBounds(device.gdPMap, rect);", "+\treturn new Rectangle(rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec53d18743a33f79fbc138d14525579", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c57bbbc354e79f4476be13ddb59b564f33f991b8", "commitAfterChange": "08433acf7c4ed76e9a9f4bfb92f30ccfa1f0fc04", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\tif (window == 0) window = gcWindow = createOverlayWindow ();", "+\tif (window == 0) {", "+\t\twindow = gcWindow = createOverlayWindow ();", "+\t} else {", "+\t\tint gdevice = OS.GetMainDevice ();", "+\t\tint [] ptr = new int [1];", "+\t\tOS.memcpy (ptr, gdevice, 4);", "+\t\tGDevice device = new GDevice ();", "+\t\tOS.memcpy (device, ptr [0], GDevice.sizeof);", "+\t\tRect rect = new Rect ();\t", "+\t\tOS.SetRect (rect, device.left, device.top, device.right, device.bottom);", "+\t\tOS.SetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t}"]}], "num": 29213}