{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "132f9fd4025274343f9f635d4b736058", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272baad352258e24e5ef657295d048f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "cbe1e7d57e3a86c34a1954206c591ae008390b06", "commitAfterChange": "bd2535620722a56cc93e8593aa26ee420bb505bf", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t/*", "-\t* Bug in the Macintosh.  The default handler of kEventWindowDeactivated", "-\t* segment faults when DisposeWindow() is called in previous handlers.", "-\t* The fix is to use RetainWindow() so that the window does not get", "-\t* disposed until the handler returns.", "-\t*/", "+\t//TEMPORARY CODE - should be send, but causes a GP", "-\tOS.RetainWindow (shellHandle);", "-\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "-\tsendEvent (SWT.Deactivate);", "-\tif (!isDisposed ()) {", "-\t\tsaveFocus ();", "-\t\tif (savedFocus != null) {", "-\t\t\t/*", "-\t\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-\t\t\t* the control that has focus gets two kEventControlSetFocus", "-\t\t\t* events indicating that focus was lost.  The fix is to ignore", "-\t\t\t* both of these and send the focus lost event explicitly.", "-\t\t\t*/", "-\t\t\tdisplay.ignoreFocus = true;", "-\t\t\tOS.ClearKeyboardFocus (shellHandle);", "-\t\t\tdisplay.ignoreFocus = false;", "-\t\t\tif (!savedFocus.isDisposed ()) {", "-\t\t\t\tsavedFocus.sendFocusEvent (SWT.FocusOut);", "-\t\t\t}", "-\t\t}", "+\tpostEvent (SWT.Deactivate);", "+\tif (isDisposed ()) return result;", "+\tsaveFocus ();", "+\tif (savedFocus != null) {", "+\t\t/*", "+\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "+\t\t* the control that has focus gets two kEventControlSetFocus", "+\t\t* events indicating that focus was lost.  The fix is to ignore", "+\t\t* both of these and send the focus lost event explicitly.", "+\t\t*/", "+\t\tdisplay.ignoreFocus = true;", "+\t\tOS.ClearKeyboardFocus (shellHandle);", "+\t\tdisplay.ignoreFocus = false;", "+\t\t//TEMPORARY CODE - should be send, but causes a GP", "+\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "-\tOS.ReleaseWindow (shellHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf4a9952720ab104bafa7fdfe402f734", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "53ba736f4633d3d8389e9f96e6bbede3723ea9dc", "commitAfterChange": "f7b2c9990b237c89473402d89842c681d975cc4f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t//TEMPORARY CODE - should be send, but causes a GP", "-\tpostEvent (SWT.Deactivate);", "-\tif (isDisposed ()) return result;", "-\tsaveFocus ();", "-\tif (savedFocus != null) {", "-\t\t/*", "-\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-\t\t* the control that has focus gets two kEventControlSetFocus", "-\t\t* events indicating that focus was lost.  The fix is to ignore", "-\t\t* both of these and send the focus lost event explicitly.", "-\t\t*/", "-\t\tdisplay.ignoreFocus = true;", "-\t\tOS.ClearKeyboardFocus (shellHandle);", "-\t\tdisplay.ignoreFocus = false;", "-\t\t//TEMPORARY CODE - should be send, but causes a GP", "-\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t/*", "+\t* Bug in the Macintosh.  The default handler of kEventWindowDeactivated", "+\t* segment faults when DisposeWindow() is called in previous handlers.", "+\t* The fix is to use RetainWindow() so that the window does not get", "+\t* disposed until the handler returns.", "+\t*/", "+\tDisplay display = this.display;", "+\tOS.RetainWindow (shellHandle);", "+\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tsendEvent (SWT.Deactivate);", "+\tif (!isDisposed ()) {", "+\t\tsaveFocus ();", "+\t\tif (savedFocus != null) {", "+\t\t\t/*", "+\t\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "+\t\t\t* the control that has focus gets two kEventControlSetFocus", "+\t\t\t* events indicating that focus was lost.  The fix is to ignore", "+\t\t\t* both of these and send the focus lost event explicitly.", "+\t\t\t*/", "+\t\t\tdisplay.ignoreFocus = true;", "+\t\t\tOS.ClearKeyboardFocus (shellHandle);", "+\t\t\tdisplay.ignoreFocus = false;", "+\t\t\tif (!savedFocus.isDisposed ()) {", "+\t\t\t\tsavedFocus.sendFocusEvent (SWT.FocusOut);", "+\t\t\t}", "+\t\t}", "+\tOS.ReleaseWindow (shellHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b4ed2aa7c130a6c15a02d911aac21f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "efcc453b894c8ffd06a1768f8c800b7db7290290", "commitAfterChange": "8188a5d1f9bc4d3f53c8cfcac3571aea29ed7d71", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowDeactivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t//TEMPORARY CODE - should be send, but causes a GP", "-\tDisplay display = this.display;", "-\tpostEvent (SWT.Deactivate);", "-\tif (isDisposed ()) return result;", "-\tsaveFocus ();", "-\tif (savedFocus != null) {", "-\t\t/*", "-\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "-\t\t* the control that has focus gets two kEventControlSetFocus", "-\t\t* events indicating that focus was lost.  The fix is to ignore", "-\t\t* both of these and send the focus lost event explicitly.", "-\t\t*/", "-\t\tdisplay.ignoreFocus = true;", "-\t\tOS.ClearKeyboardFocus (shellHandle);", "-\t\tdisplay.ignoreFocus = false;", "+\tif (active) {", "+\t\tactive = false;", "-\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t\tDisplay display = this.display;", "+\t\tpostEvent (SWT.Deactivate);", "+\t\tif (isDisposed ()) return result;", "+\t\tsaveFocus ();", "+\t\tif (savedFocus != null) {", "+\t\t\t/*", "+\t\t\t* Bug in the Macintosh.  When ClearKeyboardFocus() is called,", "+\t\t\t* the control that has focus gets two kEventControlSetFocus", "+\t\t\t* events indicating that focus was lost.  The fix is to ignore", "+\t\t\t* both of these and send the focus lost event explicitly.", "+\t\t\t*/", "+\t\t\tdisplay.ignoreFocus = true;", "+\t\t\tOS.ClearKeyboardFocus (shellHandle);", "+\t\t\tdisplay.ignoreFocus = false;", "+\t\t\t//TEMPORARY CODE - should be send, but causes a GP", "+\t\t\tif (!savedFocus.isDisposed ()) savedFocus.sendFocusEvent (SWT.FocusOut, true);", "+\t\t}", "+\t\tdisplay.setMenuBar (null);", "-\tdisplay.setMenuBar (null);"]}], "num": 5089}