{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f74f5d2a8001f9477ec81779402ef467", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac1d4df789b09dd573ecf640ba68787", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "commitAfterChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem)", "diff": ["-\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "+\tTreeItem addChild (Node node, TreeItem superItem) {", "-\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "-\t\titem.setText(text);", "+\t\tNode idAttrib = gen.getIDAttribute(node);", "+\t\titem.setText(idAttrib != null ? idAttrib.getNodeValue() : name);", "-\t\tNode extra = (Node)extras.get(gen.getKey(node));", "-\t\tif (extra != null) {", "-\t\t\tNamedNodeMap attributes = extra.getAttributes();", "-\t\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "-\t\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "-\t\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "-\t\t\t\tNode attrib = attributes.item(i);", "-\t\t\t\tString attriName = attrib.getNodeName();", "-\t\t\t\tif (attriName.equals(\"swt_gen\") || !attriName.startsWith(\"swt_\")) continue;", "-\t\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "-\t\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "-\t\t\t}", "-\t\t}", "+\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "+\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "-\t\t\tif (attrib.equals(nameAttrib)) continue;", "-\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "-\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\t\tif (attrib.equals(idAttrib)) continue;", "+\t\t\tString attribName = attrib.getNodeName();", "+\t\t\tif (attribName.equals(\"swt_gen\")) continue;", "+\t\t\titem.setText(getColumnFor(attribName), attrib.getNodeValue());", "-\t\t\taddChild(childNodes.item(i), item, extras);", "+\t\t\taddChild(childNodes.item(i), item);", "-        checkPath(item.getParentItem(), item.getChecked(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56dad08f902fb829a3e79ec17dd8178", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["-\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\titem.setData(node);", "+\t\tNode extra = (Node)extras.get(gen.getKey(node));", "-\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "-\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\titem.setChecked(true);", "+\t\t\tNamedNodeMap attributes = extra.getAttributes();", "+\t\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "+\t\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "+\t\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "+\t\t\t\tNode attrib = attributes.item(i);", "+\t\t\t\tString attriName = attrib.getNodeName();", "+\t\t\t\tif (attriName.equals(\"swt_gen\") || !attriName.startsWith(\"swt_\")) continue;", "+\t\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+\t\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\ttext = attrib.getNodeName();", "-\t\t\tint columnIndex = getColumnFor(text);", "+\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "+        boolean checked = item.getChecked();", "+        checkItems(item, checked);", "+        checkPath(item.getParentItem(), checked, false);"]}], "num": 4796}