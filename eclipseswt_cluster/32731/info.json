{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fda5382076e9e4b7e872a9bde6462b4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcbb7a29ac44a319a45c1e6433e2c9a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "c7b8a47b4f881fe023685c003812d64dd2d51c15", "commitAfterChange": "1b9976550b7657aeb02ff183aeee4687e9c1685e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "-\tint itemHeight = OS.SendMessage (handle, OS.LB_GETITEMHEIGHT, 0, 0);", "-\tint width = 0, height = count * itemHeight;", "-\tif ((style & SWT.H_SCROLL) != 0) {", "-\t\twidth = OS.SendMessage (handle, OS.LB_GETHORIZONTALEXTENT, 0, 0);", "-\t} else {", "-\t\tint newFont, oldFont = 0;", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\t\tRECT rect = new RECT ();", "-\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;", "-\t\tint cp = getCodePage ();", "-\t\tTCHAR buffer = new TCHAR (cp, 64 + 1);", "-\t\tfor (int i=0; i<count; i++) {", "-\t\t\tint length = OS.SendMessage (handle, OS.LB_GETTEXTLEN, i, 0);", "-\t\t\tif (length != OS.LB_ERR) {", "-\t\t\t\tif (length + 1 > buffer.length ()) {", "-\t\t\t\t\tbuffer = new TCHAR (cp, length + 1);", "+\tint width = 0, height = 0;", "+\tif (wHint == SWT.DEFAULT) {", "+\t\tif ((style & SWT.H_SCROLL) != 0) {", "+\t\t\twidth = OS.SendMessage (handle, OS.LB_GETHORIZONTALEXTENT, 0, 0);", "+\t\t} else {", "+\t\t\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "+\t\t\tint newFont, oldFont = 0;", "+\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint flags = OS.DT_CALCRECT | OS.DT_SINGLELINE | OS.DT_NOPREFIX;", "+\t\t\tint cp = getCodePage ();", "+\t\t\tTCHAR buffer = new TCHAR (cp, 64 + 1);", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tint length = OS.SendMessage (handle, OS.LB_GETTEXTLEN, i, 0);", "+\t\t\t\tif (length != OS.LB_ERR) {", "+\t\t\t\t\tif (length + 1 > buffer.length ()) {", "+\t\t\t\t\t\tbuffer = new TCHAR (cp, length + 1);", "+\t\t\t\t\t}", "+\t\t\t\t\tint result = OS.SendMessage (handle, OS.LB_GETTEXT, i, buffer);", "+\t\t\t\t\tif (result != OS.LB_ERR) {", "+\t\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\t\t\t\t}", "-\t\t\t\tint result = OS.SendMessage (handle, OS.LB_GETTEXT, i, buffer);", "-\t\t\t\tif (result != OS.LB_ERR) {", "-\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}\t", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t}\t", "+\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t}", "+\t}", "+\tif (hHint == SWT.DEFAULT) {", "+\t\tint count = OS.SendMessage (handle, OS.LB_GETCOUNT, 0, 0);", "+\t\tint itemHeight = OS.SendMessage (handle, OS.LB_GETITEMHEIGHT, 0, 0);", "+\t \theight = count * itemHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ba9c6e535059058e3546a3ede4e8008", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "c7b8a47b4f881fe023685c003812d64dd2d51c15", "commitAfterChange": "1b9976550b7657aeb02ff183aeee4687e9c1685e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "-\tint itemHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);", "-\tint width = 0, height = 0;", "-\tif ((style & SWT.SIMPLE) != 0) height = count * itemHeight;", "-\tint newFont, oldFont = 0;", "-\tint hDC = OS.GetDC (handle);", "-\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\tRECT rect = new RECT ();", "-\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "-\tif ((style & SWT.READ_ONLY) == 0) flags |= OS.DT_EDITCONTROL;", "-\tint length = OS.GetWindowTextLength (handle);", "-\tint cp = getCodePage ();", "-\tTCHAR buffer = new TCHAR (cp, length + 1);", "-\tOS.GetWindowText (handle, buffer, length + 1);", "-\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\twidth = Math.max (width, rect.right - rect.left);", "-\tfor (int i=0; i<count; i++) {", "-\t\tlength = OS.SendMessage (handle, OS.CB_GETLBTEXTLEN, i, 0);", "-\t\tif (length != OS.CB_ERR) {", "-\t\t\tif (length + 1 > buffer.length ()) buffer = new TCHAR (cp, length + 1);", "-\t\t\tint result = OS.SendMessage (handle, OS.CB_GETLBTEXT, i, buffer);", "-\t\t\tif (result != OS.CB_ERR) {", "-\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\tint width = 0, height = 0, tmInternalLeading = 0;", "+\tif (wHint == SWT.DEFAULT) {", "+\t\tint newFont, oldFont = 0;", "+\t\tint hDC = OS.GetDC (handle);", "+\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "+\t\tRECT rect = new RECT ();", "+\t\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "+\t\tif ((style & SWT.READ_ONLY) == 0) flags |= OS.DT_EDITCONTROL;", "+\t\tint length = OS.GetWindowTextLength (handle);", "+\t\tint cp = getCodePage ();", "+\t\tTCHAR buffer = new TCHAR (cp, length + 1);", "+\t\tOS.GetWindowText (handle, buffer, length + 1);", "+\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tlength = OS.SendMessage (handle, OS.CB_GETLBTEXTLEN, i, 0);", "+\t\t\tif (length != OS.CB_ERR) {", "+\t\t\t\tif (length + 1 > buffer.length ()) buffer = new TCHAR (cp, length + 1);", "+\t\t\t\tint result = OS.SendMessage (handle, OS.CB_GETLBTEXT, i, buffer);", "+\t\t\t\tif (result != OS.CB_ERR) {", "+\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\t\t\t}", "+\t\t}", "+\t\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "+\t\t\tOS.GetTextMetrics (hDC, tm);", "+\t\t\ttmInternalLeading = tm.tmInternalLeading;", "+\t\t}", "+\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\tOS.ReleaseDC (handle, hDC);", "+\t}", "+\tif (hHint == SWT.DEFAULT) {", "+\t\tif ((style & SWT.SIMPLE) != 0) {", "+\t\t\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "+\t\t\tint itemHeight = OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);", "+\t\t\theight = count * itemHeight;", "-\tint border = OS.GetSystemMetrics (OS.SM_CXEDGE);", "-\t\tTEXTMETRIC tm = OS.IsUnicode ? (TEXTMETRIC) new TEXTMETRICW () : new TEXTMETRICA ();", "-\t\tOS.GetTextMetrics (hDC, tm);", "-\t\twidth += tm.tmInternalLeading * 2;", "+\t\twidth += tmInternalLeading * 2;", "+\tint border = OS.GetSystemMetrics (OS.SM_CXEDGE);", "-\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\tOS.ReleaseDC (handle, hDC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af7911cf8a9362ea24b1628f67ffa3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ae389dbe449195e7477ade6fe0e755e5f703e0cd", "commitAfterChange": "8a3f84f19fbbca28960cc423186c3d1a52a1d637", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "-\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "-\t\tif ((bits & OS.LVS_EX_DOUBLEBUFFER) == 0) {", "-\t\t\tGC gc = null;", "-\t\t\tint paintDC = 0;", "-\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "-\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\tGCData data = new GCData ();", "-\t\t\t\tdata.ps = ps;", "-\t\t\t\tdata.hwnd = handle;", "-\t\t\t\tgc = GC.win32_new (this, data);", "-\t\t\t\tpaintDC = gc.handle;", "-\t\t\t} else {", "-\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0 || findImageControl () != null) {", "+\t\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\t\tif ((bits & OS.LVS_EX_DOUBLEBUFFER) == 0) {", "+\t\t\t\tGC gc = null;", "+\t\t\t\tint paintDC = 0;", "+\t\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\tGCData data = new GCData ();", "+\t\t\t\t\tdata.ps = ps;", "+\t\t\t\t\tdata.hwnd = handle;", "+\t\t\t\t\tgc = GC.win32_new (this, data);", "+\t\t\t\t\tpaintDC = gc.handle;", "+\t\t\t\t} else {", "+\t\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t//TODO - only double buffer the damage", "+//\t\t\t\tint x = ps.left, y = ps.top;", "+//\t\t\t\tint width = ps.right - ps.left;", "+//\t\t\t\tint height = ps.bottom - ps.top;", "+\t\t\t\tforceResize ();", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\tint x = rect.left, y = rect.top;", "+\t\t\t\tint width = rect.right - rect.left;", "+\t\t\t\tint height = rect.bottom - rect.top;", "+\t\t\t\t", "+\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "+\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t}", "+\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.gc = gc;", "+\t\t\t\t\tevent.x = ps.left;", "+\t\t\t\t\tevent.y = ps.top;", "+\t\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\t// widget could be disposed at this point", "+\t\t\t\t\tevent.gc = null;", "+\t\t\t\t\tgc.dispose ();", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t\t}", "+\t\t\t\treturn new LRESULT (code);", "-\t\t\t", "-\t\t\t//TODO - only double buffer the damage", "-//\t\t\tint x = ps.left, y = ps.top;", "-//\t\t\tint width = ps.right - ps.left;", "-//\t\t\tint height = ps.bottom - ps.top;", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\tint x = rect.left, y = rect.top;", "-\t\t\tint width = rect.right - rect.left;", "-\t\t\tint height = rect.bottom - rect.top;", "-\t\t\t", "-\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\tOS.DeleteObject (hDC);", "-\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.x = ps.left;", "-\t\t\t\tevent.y = ps.top;", "-\t\t\t\tevent.width = ps.right - ps.left;", "-\t\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\t// widget could be disposed at this point", "-\t\t\t\tevent.gc = null;", "-\t\t\t\tgc.dispose ();", "-\t\t\t} else {", "-\t\t\t\tOS.EndPaint (handle, ps);", "-\t\t\t}", "-\t\t\treturn new LRESULT (code);"]}], "num": 32731}