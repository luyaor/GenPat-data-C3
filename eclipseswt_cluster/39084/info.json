{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4a1e159fc0ce671c49e0a57f19bd7fe", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6859db5d7d26b1b5162666a62468469", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d94617ab8b474088d65ad912710a4b9e96885306", "commitAfterChange": "dd3b53ce0c05a3da5c9f080255bedfae78e32302", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\tOS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+\tif (arcAngle < 0) {", "+\t\tOS.CGContextAddArc(handle, 0, 0, 1, (startAngle + arcAngle) * (float)Compatibility.PI / 180,  startAngle * (float)Compatibility.PI / 180, true);", "+\t} else {", "+\t\tOS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64e63c4a5c02ca23fa20d132c2e18cc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d94617ab8b474088d65ad912710a4b9e96885306", "commitAfterChange": "dd3b53ce0c05a3da5c9f080255bedfae78e32302", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void fillArc(int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+    if (arcAngle < 0) {", "+    \tOS.CGContextAddArc(handle, 0, 0, 1, (startAngle + arcAngle) * (float)Compatibility.PI / 180,  startAngle * (float)Compatibility.PI / 180, true);", "+    } else {", "+        OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+    }"]}], "num": 39084}