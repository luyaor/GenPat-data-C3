{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4278ac81085d6f403790a6a1a0266f8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b0b41f6dc0992bf2c28ceb5afb6242", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "95548f568ccf2d0cabfc6561e1440be263c0c1e7", "commitAfterChange": "a1c0e494851568d744afe1962017864dee4259f2", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "-//\tboolean paste = true;", "-//\tString oldText = null;", "-//\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-//\t\toldText = getClipboardText ();", "-//\t\tif (oldText != null) {", "-//\t\t\tPoint selection = getSelection ();", "-//\t\t\tString newText = verifyText (oldText, selection.x, selection.y, null);", "-//\t\t\tif (newText == null) return;", "-//\t\t\tif (!newText.equals (oldText)) {", "-//\t\t\t\tif (txnObject == 0) {", "-//\t\t\t\t\tinsertEditText (newText);", "-//\t\t\t\t} else {", "-//\t\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "-//\t\t\t\t\tOS.TXNShowSelection (txnObject, false);", "-//\t\t\t\t}", "-//\t\t\t\tpaste = false;", "-//\t\t\t}", "-//\t\t}", "-//\t}", "-//\tif (paste) {", "-//\t\tif (txnObject == 0) {", "-//\t\t\tif (oldText == null) oldText = getClipboardText ();", "-//\t\t\tinsertEditText (oldText);", "-//\t\t} else {", "-//\t\t\tif (textLimit != LIMIT) {", "-//\t\t\t\tif (oldText == null) oldText = getClipboardText ();", "-//\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, oldText);", "-//\t\t\t\tOS.TXNShowSelection (txnObject, false);", "-//\t\t\t} else {", "-//\t\t\t\tOS.TXNPaste (txnObject);", "-//\t\t\t}", "-//\t\t}", "-//\t}", "-//\tsendEvent (SWT.Modify);", "+\tboolean paste = true;", "+\tString oldText = null;", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\toldText = getClipboardText ();", "+\t\tif (oldText != null) {", "+\t\t\tPoint selection = getSelection ();", "+\t\t\tString newText = verifyText (oldText, selection.x, selection.y, null);", "+\t\t\tif (newText == null) return;", "+\t\t\tif (!newText.equals (oldText)) {", "+\t\t\t\tif ((style & SWT.SINGLE) != 0) {", "+\t\t\t\t\tinsertEditText (newText);", "+\t\t\t\t} else {", "+\t\t\t\t\tNSTextView textView = (NSTextView) view;", "+\t\t\t\t\ttextView.replaceCharactersInRange_withString_ (textView.selectedRange (), NSString.stringWith (newText));", "+\t\t\t\t}", "+\t\t\t\tpaste = false;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (paste) {", "+\t\tif ((style & SWT.SINGLE) != 0) {", "+\t\t\tif (oldText == null) oldText = getClipboardText ();", "+\t\t\tinsertEditText (oldText);", "+\t\t} else {", "+\t\t\t//TODO check text limit", "+\t\t\tNSTextView textView = (NSTextView) view;", "+\t\t\ttextView.paste (null);", "+\t\t}", "+\t}", "+\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d387c7140d0a92c17300f118cd1fb41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "95548f568ccf2d0cabfc6561e1440be263c0c1e7", "commitAfterChange": "a1c0e494851568d744afe1962017864dee4259f2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void cut ()", "signatureAfterChange": " public void cut ()", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\t", "-\t} else {", "-\t\t((NSTextView)view).cut(null);", "+\tboolean cut = true;", "+\tchar [] oldText = null;", "+\tPoint oldSelection = getSelection ();", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tif (oldSelection.x != oldSelection.y) {", "+\t\t\toldText = getEditText (oldSelection.x, oldSelection.y - 1);", "+\t\t\tString newText = verifyText (\"\", oldSelection.x, oldSelection.y, null);", "+\t\t\tif (newText == null) return;", "+\t\t\tif (newText.length () != 0) {", "+\t\t\t\tcopyToClipboard (oldText);", "+\t\t\t\tif ((style & SWT.SINGLE) != 0) {", "+\t\t\t\t\tinsertEditText (newText);", "+\t\t\t\t} else {", "+\t\t\t\t\tNSTextView widget = (NSTextView) view;", "+\t\t\t\t\twidget.replaceCharactersInRange_withString_ (widget.selectedRange (), NSString.stringWith (newText));", "+\t\t\t\t}", "+\t\t\t\tcut = false;", "+\t\t\t}", "+\t\t}", "-//\tboolean cut = true;", "-//\tchar [] oldText = null;", "-//\tPoint oldSelection = getSelection ();", "-//\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-//\t\tif (oldSelection.x != oldSelection.y) {", "-//\t\t\toldText = getEditText (oldSelection.x, oldSelection.y - 1);", "-//\t\t\tString newText = verifyText (\"\", oldSelection.x, oldSelection.y, null);", "-//\t\t\tif (newText == null) return;", "-//\t\t\tif (newText.length () != 0) {", "-//\t\t\t\tcopyToClipboard (oldText);", "-//\t\t\t\tif (txnObject == 0) {", "-//\t\t\t\t\tinsertEditText (newText);", "-//\t\t\t\t} else {", "-//\t\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "-//\t\t\t\t\tOS.TXNShowSelection (txnObject, false);", "-//\t\t\t\t}", "-//\t\t\t\tcut = false;", "-//\t\t\t}", "-//\t\t}", "-//\t}", "-//\tif (cut) {", "-//\t\tif (txnObject == 0) {", "-//\t\t\tif (oldText == null) oldText = getEditText (oldSelection.x, oldSelection.y - 1);", "-//\t\t\tcopyToClipboard (oldText);", "-//\t\t\tinsertEditText (\"\");", "-//\t\t} else {", "-//\t\t\tOS.TXNCut (txnObject);", "-//\t", "-//\t\t\t/*", "-//\t\t\t* Feature in the Macintosh.  When an empty string is set in the TXNObject,", "-//\t\t\t* the font attributes are cleared.  The fix is to reset them.", "-//\t\t\t*/", "-//\t\t\tif (OS.TXNDataSize (txnObject) / 2 == 0) setFontStyle (font);", "-//\t\t}", "-//\t}", "-//\tPoint newSelection = getSelection ();", "-//\tif (!cut || !oldSelection.equals (newSelection)) sendEvent (SWT.Modify);", "+\tif (cut) {", "+\t\tif ((style & SWT.SINGLE) != 0) {", "+\t\t\tif (oldText == null) oldText = getEditText (oldSelection.x, oldSelection.y - 1);", "+\t\t\tcopyToClipboard (oldText);", "+\t\t\tinsertEditText (\"\");", "+\t\t} else {", "+\t\t\t((NSTextView) view).cut (null);", "+\t\t}", "+\t}", "+\tPoint newSelection = getSelection ();", "+\tif (!cut || !oldSelection.equals (newSelection)) sendEvent (SWT.Modify);"]}], "num": 10612}