{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43656993d59bac0f2912aaa87b0416a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f3cc7bb2879facd334fdb89daf6325", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4a54739762437bd8066c9b7d36c4c3d14493b18a", "commitAfterChange": "271f940e0df4170fc833286729bdba3441aed75a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void webView_didFailProvisionalLoadWithError_forFrame(int sender, int error, int frame)", "signatureAfterChange": "  void webView_didFailProvisionalLoadWithError_forFrame(int sender, int error, int frame)", "diff": ["-\tif (errorCode <= OS.NSURLErrorBadURL) {", "-\t\tNSString description = nserror.localizedDescription();", "-\t\tif (description != null) {", "-\t\t\tString descriptionString = description.getString();", "-\t\t\tString urlString = null;", "-\t\t\tNSDictionary info = nserror.userInfo();", "-\t\t\tif (info != null) {", "-\t\t\t\tNSString key = new NSString(OS.NSErrorFailingURLStringKey());", "-\t\t\t\tid id = info.valueForKey(key);", "-\t\t\t\tif (id != null) {", "-\t\t\t\t\tNSString url = new NSString(id);", "-\t\t\t\t\turlString = url.getString();", "+\tif (OS.NSURLErrorBadURL < errorCode) return;", "+", "+\tNSURL failingURL = null;", "+\tNSDictionary info = nserror.userInfo();", "+\tif (info != null) {", "+\t\tid id = info.valueForKey(NSString.stringWith(\"NSErrorFailingURLKey\")); //$NON-NLS-1$", "+\t\tif (id != null) failingURL = new NSURL(id);", "+\t}", "+", "+\tif (failingURL != null && OS.NSURLErrorServerCertificateNotYetValid <= errorCode && errorCode <= OS.NSURLErrorSecureConnectionFailed) {", "+\t\t/* handle invalid certificate error */", "+\t\tid certificates = info.objectForKey(NSString.stringWith(\"NSErrorPeerCertificateChainKey\")); //$NON-NLS-1$", "+", "+\t\tint /*long*/[] policySearch = new int /*long*/[1];", "+\t\tint /*long*/[] policyRef = new int /*long*/[1];", "+\t\tint /*long*/[] trustRef = new int /*long*/[1];", "+\t\tboolean success = false;", "+\t\tint result = OS.SecPolicySearchCreate(OS.CSSM_CERT_X_509v3, 0, 0, policySearch);", "+\t\tif (result == 0 && policySearch[0] != 0) {", "+\t\t\tresult = OS.SecPolicySearchCopyNext(policySearch[0], policyRef);", "+\t\t\tif (result == 0 && policyRef[0] != 0) {", "+\t\t\t\tresult = OS.SecTrustCreateWithCertificates(certificates.id, policyRef[0], trustRef);", "+\t\t\t\tif (result == 0 && trustRef[0] != 0) {", "+\t\t\t\t\tSFCertificateTrustPanel panel = SFCertificateTrustPanel.sharedCertificateTrustPanel();", "+\t\t\t\t\tString failingUrlString = failingURL.absoluteString().getString();", "+\t\t\t\t\tString message = Compatibility.getMessage(\"SWT_InvalidCert_Message\", new Object[] {failingUrlString}); //$NON-NLS-1$", "+\t\t\t\t\tpanel.setAlternateButtonTitle(NSString.stringWith(Compatibility.getMessage(\"SWT_Cancel\"))); //$NON-NLS-1$", "+\t\t\t\t\tpanel.setShowsHelp(true);", "+\t\t\t\t\tfailingURL.retain();", "+\t\t\t\t\tNSWindow window = browser.getShell().view.window();", "+\t\t\t\t\tpanel.beginSheetForWindow(window, delegate, OS.sel_createPanelDidEnd, failingURL.id, trustRef[0], NSString.stringWith(message));", "+\t\t\t\t\tsuccess = true;", "-\t\t\tString message = urlString != null ? urlString + \"\\n\\n\" : \"\"; //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tmessage += Compatibility.getMessage (\"SWT_Page_Load_Failed\", new Object[] {descriptionString}); //$NON-NLS-1$", "-\t\t\tMessageBox messageBox = new MessageBox(browser.getShell(), SWT.OK | SWT.ICON_ERROR);", "-\t\t\tmessageBox.setMessage(message);", "-\t\t\tmessageBox.open();", "+", "+\t\tif (trustRef[0] != 0) OS.CFRelease(trustRef[0]);", "+\t\tif (policyRef[0] != 0) OS.CFRelease(policyRef[0]);", "+\t\tif (policySearch[0] != 0) OS.CFRelease(policySearch[0]);", "+\t\tif (success) return;", "+\t}", "+", "+\t/* handle other types of errors */", "+\tNSString description = nserror.localizedDescription();", "+\tif (description != null) {", "+\t\tString descriptionString = description.getString();", "+\t\tString message = failingURL != null ? failingURL.absoluteString().getString() + \"\\n\\n\" : \"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tmessage += Compatibility.getMessage (\"SWT_Page_Load_Failed\", new Object[] {descriptionString}); //$NON-NLS-1$", "+\t\tMessageBox messageBox = new MessageBox(browser.getShell(), SWT.OK | SWT.ICON_ERROR);", "+\t\tmessageBox.setMessage(message);", "+\t\tmessageBox.open();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d02e9429cbae394299f456e8712f622", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4a54739762437bd8066c9b7d36c4c3d14493b18a", "commitAfterChange": "271f940e0df4170fc833286729bdba3441aed75a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void didFailProvisionalLoadWithError(int error, int frame)", "signatureAfterChange": "  void didFailProvisionalLoadWithError(int error, int frame)", "diff": ["+", "+\tint errorCode = Cocoa.objc_msgSend(error, Cocoa.S_code);", "+\tif (Cocoa.NSURLErrorBadURL < errorCode) return;", "+", "+\tint failingURL = 0;", "+\tint info = Cocoa.objc_msgSend(error, Cocoa.S_userInfo);", "+\tif (info != 0) {", "+\t\tint keyString = createNSString(\"NSErrorFailingURLKey\"); //$NON-NLS-1$", "+\t\tfailingURL = Cocoa.objc_msgSend(info, Cocoa.S_valueForKey, keyString);", "+\t\tOS.CFRelease(keyString);", "+\t}", "+", "+\tif (failingURL != 0 && Cocoa.NSURLErrorServerCertificateNotYetValid <= errorCode && errorCode <= Cocoa.NSURLErrorSecureConnectionFailed) {", "+\t\t/* handle invalid certificate error */", "+\t\tint keyString = createNSString(\"NSErrorPeerCertificateChainKey\"); //$NON-NLS-1$", "+\t\tint certificates = Cocoa.objc_msgSend(info, Cocoa.S_objectForKey, keyString);", "+\t\tOS.CFRelease(keyString);", "+", "+\t\tint[] policySearch = new int[1];", "+\t\tint[] policyRef = new int[1];", "+\t\tint[] trustRef = new int[1];", "+\t\tboolean success = false;", "+\t\tint result = OS.SecPolicySearchCreate(OS.CSSM_CERT_X_509v3, 0, 0, policySearch);", "+\t\tif (result == 0 && policySearch[0] != 0) {", "+\t\t\tresult = OS.SecPolicySearchCopyNext(policySearch[0], policyRef);", "+\t\t\tif (result == 0 && policyRef[0] != 0) {", "+\t\t\t\tresult = OS.SecTrustCreateWithCertificates(certificates, policyRef[0], trustRef);", "+\t\t\t\tif (result == 0 && trustRef[0] != 0) {", "+\t\t\t\t\tint panel = Cocoa.objc_msgSend(Cocoa.C_SFCertificateTrustPanel, Cocoa.S_sharedCertificateTrustPanel);", "+\t\t\t\t\tString failingUrlString = getString(Cocoa.objc_msgSend(failingURL, Cocoa.S_absoluteString));", "+\t\t\t\t\tString message = Compatibility.getMessage(\"SWT_InvalidCert_Message\", new Object[] {failingUrlString}); //$NON-NLS-1$", "+\t\t\t\t\tint nsString = createNSString(Compatibility.getMessage(\"SWT_Cancel\")); //$NON-NLS-1$", "+\t\t\t\t\tCocoa.objc_msgSend(panel, Cocoa.S_setAlternateButtonTitle, nsString);", "+\t\t\t\t\tOS.CFRelease(nsString);", "+\t\t\t\t\tCocoa.objc_msgSend(panel, Cocoa.S_setShowsHelp, 1);", "+\t\t\t\t\tCocoa.objc_msgSend(failingURL, Cocoa.S_retain);", "+\t\t\t\t\tint window = Cocoa.objc_msgSend(webView, Cocoa.S_window);", "+\t\t\t\t\tnsString = createNSString(message);", "+\t\t\t\t\tCocoa.objc_msgSend(panel, Cocoa.S_beginSheetForWindow, window, delegate, Cocoa.S_createPanelDidEnd, failingURL, trustRef[0], nsString);", "+\t\t\t\t\tOS.CFRelease(nsString);", "+\t\t\t\t\tsuccess = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+", "+\t\tif (trustRef[0] != 0) OS.CFRelease(trustRef[0]);", "+\t\tif (policyRef[0] != 0) OS.CFRelease(policyRef[0]);", "+\t\tif (policySearch[0] != 0) OS.CFRelease(policySearch[0]);", "+\t\tif (success) return;", "+\t}", "+", "+\t/* handle other types of errors */", "+\tint description = Cocoa.objc_msgSend(error, Cocoa.S_localizedDescription);", "+\tif (description != 0) {", "+\t\tString descriptionString = getString(description);", "+\t\tString message = failingURL != 0 ? getString(Cocoa.objc_msgSend(failingURL, Cocoa.S_absoluteString)) + \"\\n\\n\" : \"\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tmessage += Compatibility.getMessage (\"SWT_Page_Load_Failed\", new Object[] {descriptionString}); //$NON-NLS-1$", "+\t\tMessageBox messageBox = new MessageBox(browser.getShell(), SWT.OK | SWT.ICON_ERROR);", "+\t\tmessageBox.setMessage(message);", "+\t\tmessageBox.open();", "+\t}", "+}"]}], "num": 45332}