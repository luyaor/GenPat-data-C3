{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c2ff51090fc14273b0ad58750373d95", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3ade2600bc52fc6a6b276fdf4cb63b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 68, "signatureBeforeChange": " void columnMouseDoubleClick(Event event)", "signatureAfterChange": " void onMouseDoubleClick (Event event)", "diff": ["- */", "-void columnMouseDoubleClick(Event event) {", "-\tif (isFocusControl () == false) {", "-\t\tforceFocus ();", "-\t}", "-\tif (getIgnoreDoubleClick()) return;\t", "-\tint itemHeight = getItemHeight();", "-\tTableColumn hitColumn = getColumnAtX (event.x);", "-\tboolean isFullSelection = (getStyle () & SWT.FULL_SELECTION) != 0;", "-\tif (hitColumn != null) {", "-\t\tint itemIndex = (event.y - getHeaderHeight()) / itemHeight + getTopIndex();", "-\t\tTableItem hitItem = (TableItem) getVisibleItem(itemIndex);", "-\t\tif (hitItem != null && ", "-\t\t\t(hitColumn.getIndex() == TableColumn.FIRST || isFullSelection)) {", "-\t\t\tif (hitItem.isSelectionHit(event.x) == true) {", "-\t\t\t\tEvent columnDblClickEvent = new Event();", "-\t\t\t\tcolumnDblClickEvent.item = hitItem;", "-\t\t\t\tpostEvent(SWT.DefaultSelection, columnDblClickEvent);", "+}", "+void onMouseDoubleClick (Event event) {", "+\tif (!isFocusControl ()) setFocus ();", "+\tint index = (event.y - getHeaderHeight ()) / itemHeight + topIndex;", "+\tif  (!(0 <= index && index < items.length)) return;\t/* not on an available item */", "+\tTableItem selectedItem = items [index];", "+\t", "+\t/* ", "+\t * If the two clicks of the double click did not occur over the same item then do not", "+\t * consider this to be a default selection.", "+\t */", "+\tif (selectedItem != lastClickedItem) return;", "+", "+\tif (!selectedItem.getHitBounds ().contains (event.x, event.y)) return;\t/* considers x */", "+\t", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tpostEvent (SWT.DefaultSelection, newEvent);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d461b89d93f9302dda320c65b6b14f3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 62, "signatureBeforeChange": " void doMouseDoubleClick (Event event)", "signatureAfterChange": " void onMouseDoubleClick (Event event)", "diff": ["-}", "-void doMouseDoubleClick (Event event) {", "-\tif (!isFocusControl ()) setFocus ();", "-\tint index = (event.y - getHeaderHeight ()) / itemHeight + topIndex;", "-\tif  (!(0 <= index && index < availableItems.length)) return;\t/* not on an available item */", "-\tTreeItem selectedItem = availableItems [index];", "-\t", "-\t/* ", "-\t * If the two clicks of the double click did not occur over the same item then do not", "-\t * consider this to be a default selection.", "-\t */", "-\tif (selectedItem != lastClickedItem) return;", "-", "-\t/* if click was in expander box then don't fire event */", "-\tif (selectedItem.items.length > 0 && selectedItem.getExpanderBounds ().contains (event.x, event.y)) {", "-\t\treturn;", "-\t}", "-\t", "-\tif (!selectedItem.getHitBounds ().contains (event.x, event.y)) return;\t/* considers x */", "-\t", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent (SWT.DefaultSelection, newEvent);", "-}", "+}", "+void onMouseDoubleClick (Event event) {", "+\tif (!isFocusControl ()) setFocus ();", "+\tint index = (event.y - getHeaderHeight ()) / itemHeight + topIndex;", "+\tif  (!(0 <= index && index < availableItems.length)) return;\t/* not on an available item */", "+\tTreeItem selectedItem = availableItems [index];", "+\t", "+\t/* ", "+\t * If the two clicks of the double click did not occur over the same item then do not", "+\t * consider this to be a default selection.", "+\t */", "+\tif (selectedItem != lastClickedItem) return;", "+", "+\t/* if click was in expander box then don't fire event */", "+\tif (selectedItem.items.length > 0 && selectedItem.getExpanderBounds ().contains (event.x, event.y)) {", "+\t\treturn;", "+\t}", "+\t", "+\tif (!selectedItem.getHitBounds ().contains (event.x, event.y)) return;\t/* considers x */", "+\t", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent (SWT.DefaultSelection, newEvent);", "+}"]}], "num": 2847}