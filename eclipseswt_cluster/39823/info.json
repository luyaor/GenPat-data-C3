{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d50cba7f183f53435dd231d54d823216", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8177f75431103d0e8e629f7d337f0fae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 233, "signatureBeforeChange": " public void redraw(int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void redraw(int x, int y, int width, int height, boolean all)", "diff": ["-\t\tint lineCount = content.getLineCount();", "-\t\tint startLine = (getTopPixel() + y) / lineHeight;", "-\t\tint endLine = startLine + Compatibility.ceil(height, lineHeight);", "+\t\tint startLine = getLineIndex(y);", "+\t\tint endLine = getLineIndex(y + height);", "-\t\tstartLine = Math.min(startLine, lineCount);", "-\t\tint itemCount = Math.min(endLine, lineCount) - startLine;", "-\t\tlineCache.reset(startLine, itemCount, true);", "+\t\tlineCache.reset(startLine, endLine + startLine + 1, true);", "-\t\titemCount = getPartialBottomIndex() - topIndex + 1;", "-\t\tlineCache.calculate(topIndex, itemCount);", "-\t\tsetHorizontalScrollBar();", "+\t\tlineCache.calculateClientArea();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1866a7cdbd19cf77adbcad2acc5afcf9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d636f4503e6c6894569c1f5530b46b3e87886345", "commitAfterChange": "d2bd83a1a061070b632f8cef24791707051becdb", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 181, "signatureBeforeChange": "\r void handleTextChanged(TextChangedEvent event)", "signatureAfterChange": "\r void handleTextChanged(TextChangedEvent event)", "diff": ["-\tint clientAreaHeight = getClientArea().height;\r", "-\tint visibleItemCount = Compatibility.ceil(clientAreaHeight, lineHeight);\r", "-\tint firstLine = content.getLineAtOffset(lastTextChangeStart);\r", "-\tint stopLine;\r", "-\t\t\t\r", "-\t// calculate width of visible changed lines\r", "-\tstopLine = firstLine + lastTextChangeNewLineCount + 1;\r", "-\tif (stopLine > topIndex && firstLine < topIndex + visibleItemCount) {\r", "-\t\tint startLine = Math.max(firstLine, topIndex);\r", "-\t\tcalculateContentWidth(\r", "-\t\t\tstartLine, \r", "-\t\t\tMath.min(stopLine, topIndex + visibleItemCount) - startLine);\r", "-\t}\t\r", "+\tcontentWidth.textChanged(\r", "+\t\tcontent.getLineAtOffset(lastTextChangeStart), \r", "+\t\tlastTextChangeNewLineCount, \r", "+\t\tlastTextChangeReplaceLineCount);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d733044df723b0832b0123e69b6941a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 376, "methodNumberAfterChange": 233, "signatureBeforeChange": " public void redraw(int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void redraw(int x, int y, int width, int height, boolean all)", "diff": ["-\t\tint lineCount = content.getLineCount();", "-\t\tint startLine = (getTopPixel() + y) / lineHeight;", "-\t\tint endLine = startLine + Compatibility.ceil(height, lineHeight);", "-\t\tint itemCount;", "-\t\t", "-\t\t// reset all lines in the redraw rectangle", "-\t\tstartLine = Math.min(startLine, lineCount);", "-\t\titemCount = Math.min(endLine, lineCount) - startLine;", "-\t\tlineCache.reset(startLine, itemCount, true);", "-\t\t// only calculate the visible lines", "-\t\titemCount = getPartialBottomIndex() - topIndex + 1;", "-\t\tlineCache.calculate(topIndex, itemCount);", "-\t\tsetHorizontalScrollBar();", "+\t\tint firstLine = getLineIndex(y);", "+\t\tint lastLine = getLineIndex(y + height);", "+\t\tresetCache(firstLine, lastLine - firstLine + 1);"]}], "num": 39823}