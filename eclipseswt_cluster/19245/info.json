{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ce9543b1882901e678b1f7d8778e6fd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcda7f6d70f423086f7ec1958141600d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "25fe9dd1d5b36d931690d4a38e3117d3d67fb4cc", "commitAfterChange": "3114c0771e236970e2e710942b819990aa75f96f", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  void updateText ()", "signatureAfterChange": "  void updateText ()", "diff": ["-\t\t\t\t\tString wholePart = string.substring (0, index);", "+\t\t\t\t\tint startIndex = string.startsWith (\"+\") || string.startsWith (\"-\") ? 1 : 0;", "+\t\t\t\t\tString wholePart = startIndex != index ? string.substring (startIndex, index) : \"0\";", "+\t\t\t\t\tif (string.startsWith (\"-\")) value = -value;", "+\t\t\t\t\tfor (int i = 0; i < digits; i++) value *= 10;", "-\t\tString string = String.valueOf (position);", "+\t\tString string = String.valueOf (Math.abs (position));", "+\t\t\tif (position < 0) buffer.append (\"-\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2343bdf92d5d1d52401457cd5dfa88e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "43d84d9dc08ec85dee671f4e785d329f0b02acf6", "commitAfterChange": "16fd572335a195de0c309011a9e9ab3eb978bc8a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void setPixelData(byte[] data, ImageData imageData)", "signatureAfterChange": " void setPixelData(byte[] data, ImageData imageData)", "diff": ["-\t\tcase PngIhdrChunk.COLOR_TYPE_RGB:", "-\t\t\timageData.data = data;", "-\t\t\tbreak;", "+\t\tcase PngIhdrChunk.COLOR_TYPE_RGB:", "-\t\t\timageData.data = data;", "+\t\t\tint height = imageData.height;", "+\t\t\tint destBytesPerLine = imageData.bytesPerLine;", "+\t\t\tint srcBytesPerLine = getAlignedBytesPerRow();", "+\t\t\t/*", "+\t\t\t* If the image uses 16-bit depth, it is converted", "+\t\t\t* to an 8-bit depth image.", "+\t\t\t*/", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;", "+\t\t\tif (destBytesPerLine != srcBytesPerLine) {", "+\t\t\t\tfor (int y = 0; y < height; y++) {", "+\t\t\t\t\tSystem.arraycopy(data, y * srcBytesPerLine, imageData.data, y * destBytesPerLine, srcBytesPerLine);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\timageData.data = data;", "+\t\t\t}"]}], "num": 19245}