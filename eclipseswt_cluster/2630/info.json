{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09c111673a6f3e56962be2fe34727972", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ee8c2d28fc688f35e902b59bccdc00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "08ed4d34906d3cb004511badd9a3286f04d40b7a", "commitAfterChange": "3587c6fb9068182d41169c6c886f0d5faa0219e6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void destroyItem (TreeItem item)", "signatureAfterChange": "  void destroyItem (TreeItem item)", "diff": ["-\tint node = item.handle;", "-\tCallback GtkCTreeFunc = new Callback (this, \"GtkCTreeDispose\", 3);", "-\tint address = GtkCTreeFunc.getAddress ();", "-\tOS.gtk_ctree_post_recursive (handle, node, address, 0);", "-\tGtkCTreeFunc.dispose ();", "-\tblockSignal (handle, SWT.Collapse);", "-\tboolean fixSelection = false;", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tint selection = OS.GTK_CLIST_SELECTION (handle);", "-\t\tfixSelection = selection == 0 || OS.g_list_length (selection) == 0;", "-\t}", "-\tif (fixSelection) blockSignal (handle, SWT.Selection);", "-\tOS.gtk_ctree_remove_node (handle, node);", "-\tif (fixSelection) {", "-\t\tOS.gtk_clist_unselect_row (handle, 0, 0);", "-\t\tunblockSignal (handle, SWT.Selection);", "-\t}", "-\tunblockSignal (handle, SWT.Collapse);", "-}", "+\t// FIXME - do I need to block Collapse?", "+\tOS.gtk_tree_store_remove (modelHandle, item.handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfae4d17682b35aae047fd51dff5d383", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "696aea6756a0a7d46df771aafb6e94481b81ce87", "commitAfterChange": "29b024ee312f844d4f7ab73dd22326302188e56c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["+\tif (this.control != null && this.control.isDisposed ()) {", "+\t\tthis.control = null;", "+\t}", "-\tint children = OS.Panel_Children (contentHandle);", "-\tint parentHandle = parent.parentingHandle ();", "-\tint parentChildren = OS.Panel_Children (parentHandle);", "+\tint index = parent.indexOf (this);", "+\tif (index != parent.getSelectionIndex ()) {", "+\t\tif (newControl != null) newControl.setVisible (false);", "+\t\treturn;", "+\t}", "-\t\tint topHandle = newControl.topHandle ();", "-\t\tOS.UIElementCollection_Remove (parentChildren, topHandle);", "-\t\tOS.UIElementCollection_Add (children, topHandle);", "-\t\tif (OS.FrameworkElement_IsLoaded (handle)) {", "-\t\t\tnewControl.setBounds (parent.getClientArea ());", "-\t\t}", "+\t\tnewControl.setBounds (parent.getClientArea ());", "+\t\tnewControl.setVisible (true);", "-\tif (oldControl != null) {", "-\t\tint topHandle = oldControl.topHandle ();", "-\t\tOS.UIElementCollection_Remove (children, topHandle);", "-\t\tOS.UIElementCollection_Add (parentChildren, topHandle);", "-\t}", "-\tOS.GCHandle_Free (children);", "-\tOS.GCHandle_Free (parentChildren);", "+\tif (oldControl != null) oldControl.setVisible (false);"]}], "num": 2630}