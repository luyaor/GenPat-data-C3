{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5708918faabc2ce673622ffcc7e5a0c6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20359b6e11b0aeea63d395a324154a15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "30da8be87bc22b7280e4efbcaf1c8144d67dba2a", "commitAfterChange": "527998c9e4be5c58a908b0f0d6081466df8efc7f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t\ttextColor = -1;", "-\t\tignoreDraw = ignoreDrawSelected = false;", "+\t\tselectionForeground = -1;", "+\t\tignoreDraw = ignoreDrawSelection = ignoreDrawBackground = false;", "-\t\t\tRECT cellRect = item.getBounds (index, true, true, true, true, true, hDC);", "+\t\t\tRECT cellRect = null;", "+\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "+\t\t\t\tcellRect = item.getBounds (index, true, true, true, true, true, hDC);", "+\t\t\t} else {", "+\t\t\t\tcellRect = item.getBounds (index, true, true, false, false, true, hDC);", "+\t\t\t}", "-\t\t\tdata.foreground = clrText != -1 ? clrText : OS.GetTextColor (hDC);", "-\t\t\tdata.background = clrTextBk != -1 ? clrTextBk : OS.GetBkColor (hDC);", "+\t\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\t\tdata.background = OS.GetBkColor (hDC);", "+\t\t\tif (!selected) {", "+\t\t\t\tif (clrText != -1) data.foreground = clrText;", "+\t\t\t\tif (clrTextBk != -1) data.background = clrTextBk;", "+\t\t\t}", "+\t\t\tevent.detail |= SWT.FOREGROUND;", "+\t\t\tif (clrTextBk != -1) event.detail |= SWT.BACKGROUND;", "-\t\t\tif ((nmcd.uItemState & OS.CDIS_FOCUS) != 0) event.detail |= SWT.FOCUSED;", "+\t\t\tif ((nmcd.uItemState & OS.CDIS_FOCUS) != 0) {", "+\t\t\t\tif (/*nmcd.iSubItem == 0 ||*/ (style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) event.detail |= SWT.FOCUSED;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\tignoreDraw = !event.doit;", "-\t\t\tif ((event.detail & SWT.SELECTED) != 0) {", "+\t\t\tignoreDraw = (event.detail & SWT.FOREGROUND) == 0;", "+\t\t\tignoreDrawSelection = (event.detail & SWT.SELECTED) == 0;", "+\t\t\tignoreDrawBackground = (event.detail & SWT.BACKGROUND) == 0;", "+\t\t\tif (!selected && !ignoreDrawBackground && clrTextBk != -1) {", "+\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "+\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t} else {", "+\t\t\t\t\tRECT backgroundRect = item.getBounds (index, true, false, true, false, true, hDC);", "+\t\t\t\t\tfillBackground (hDC, clrTextBk, backgroundRect);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (!ignoreDrawSelection) {", "-\t\t\t\t\ttextColor = clrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\t\tselectionForeground = clrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "-\t\t\t\t\ttextColor = clrText = newTextClr;", "-\t\t\t\t\tignoreDrawSelected = true;", "+\t\t\t\t\tselectionForeground = clrText = newTextClr;", "+\t\t\t\t\tignoreDrawSelection = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "697af9fafdf7b0a3f2e3ad1089067cb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4dcd23c7083750557eb8f456083b724778c10df8", "commitAfterChange": "eed0ff404f9aa1a3c7d37ab235cbaa503bcde355", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public boolean dragDetect (int button, int stateMask, int x, int y)", "signatureAfterChange": "  boolean dragDetect (int button, int count, int stateMask, int x, int y)", "diff": ["- */", "-public boolean dragDetect (int button, int stateMask, int x, int y) {", "-\tcheckWidget ();", "-\treturn dragDetect (button, 1, stateMask, x, y);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ddc08f468225109c7e38cc3286e1a13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "14a489530a23f9a98c44510d056f7f726ca954fe", "commitAfterChange": "3518db6648d68a0e9ff0c939ecd457985c6ae47b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\treturn super.XExposure (w, client_data, call_data, continue_to_dispatch);", "-\t}", "-\tXExposeEvent xEvent = new XExposeEvent ();", "-\tOS.memmove (xEvent, call_data, XExposeEvent.sizeof);", "-\tint exposeCount = xEvent.count;", "-\tif (exposeCount == 0) {", "-\t\tif (OS.XEventsQueued (xEvent.display, OS.QueuedAfterReading) != 0) {", "-\t\t\tint xEvent1 = OS.XtMalloc (XEvent.sizeof);", "-\t\t\tdisplay.exposeCount = display.lastExpose = 0;", "-\t\t\tint checkExposeProc = display.checkExposeProc;", "-\t\t\tOS.XCheckIfEvent (xEvent.display, xEvent1, checkExposeProc, xEvent.window);", "-\t\t\texposeCount = display.exposeCount;", "-\t\t\tint lastExpose = display.lastExpose;", "-\t\t\tif (exposeCount != 0 && lastExpose != 0) {", "-\t\t\t\tXExposeEvent xExposeEvent = display.xExposeEvent;", "-\t\t\t\tOS.memmove (xExposeEvent, lastExpose, XExposeEvent.sizeof);", "-\t\t\t\txExposeEvent.count = 0;", "-\t\t\t\tOS.memmove (lastExpose, xExposeEvent, XExposeEvent.sizeof);", "-\t\t\t}", "-\t\t\tOS.XtFree (xEvent1);", "-\t\t}", "-\t}", "-\tif (exposeCount == 0 && damagedRegion == 0) {", "-\t\treturn super.XExposure (w, client_data, call_data, continue_to_dispatch);", "-\t}", "-\tif (exposeCount != 0) return 0;", "+\tif ((style & SWT.NO_MERGE_PAINTS) == 0) {", "+\t\tXExposeEvent xEvent = new XExposeEvent ();", "+\t\tOS.memmove (xEvent, call_data, XExposeEvent.sizeof);", "+\t\tint exposeCount = xEvent.count;", "+\t\tif (exposeCount == 0) {", "+\t\t\tif (OS.XEventsQueued (xEvent.display, OS.QueuedAfterReading) != 0) {", "+\t\t\t\tint xEvent1 = OS.XtMalloc (XEvent.sizeof);", "+\t\t\t\tdisplay.exposeCount = display.lastExpose = 0;", "+\t\t\t\tint checkExposeProc = display.checkExposeProc;", "+\t\t\t\tOS.XCheckIfEvent (xEvent.display, xEvent1, checkExposeProc, xEvent.window);", "+\t\t\t\texposeCount = display.exposeCount;", "+\t\t\t\tint lastExpose = display.lastExpose;", "+\t\t\t\tif (exposeCount != 0 && lastExpose != 0) {", "+\t\t\t\t\tXExposeEvent xExposeEvent = display.xExposeEvent;", "+\t\t\t\t\tOS.memmove (xExposeEvent, lastExpose, XExposeEvent.sizeof);", "+\t\t\t\t\txExposeEvent.count = 0;", "+\t\t\t\t\tOS.memmove (lastExpose, xExposeEvent, XExposeEvent.sizeof);", "+\t\t\t\t}", "+\t\t\t\tOS.XtFree (xEvent1);", "+\t\t\t}", "+\t\t}", "+\t\tif (exposeCount != 0) return 0;", "+\t}", "-\tEvent event = new Event ();", "-\tGCData data = new GCData();", "-\tint rgn = damagedRegion;", "+\tint damageRgn = damagedRegion;", "-\tdata.damageRgn = rgn;", "-\tGC gc = event.gc = GC.motif_new(this, data);", "-\tOS.XSetRegion(xDisplay, gc.handle, rgn);", "+\tGCData data = new GCData ();", "+\tdata.damageRgn = damageRgn;", "+\tGC gc = GC.motif_new (this, data);", "+\tOS.XSetRegion (xDisplay, gc.handle, damageRgn);", "-\tOS.XClipBox (rgn, rect);", "+\tOS.XClipBox (damageRgn, rect);", "+\tGC paintGC = null;", "+\tImage image = null;", "+\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\tRectangle client = getClientArea ();", "+\t\tint width = Math.min (client.width, rect.x + rect.width);", "+\t\tint height = Math.min (client.height, rect.y + rect.height);", "+\t\timage = new Image (display, width, height);", "+\t\tpaintGC = gc;", "+\t\tGCData imageGCData = new GCData ();", "+\t\timageGCData.damageRgn = damageRgn; ", "+\t\tgc = GC.motif_new (image, imageGCData);", "+\t\tgc.setForeground (getForeground ());", "+\t\tgc.setBackground (getBackground ());", "+\t\tgc.setFont (getFont ());", "+\t\tif ((style & SWT.NO_BACKGROUND) != 0) {", "+\t\t\tpaintGC.copyArea(image, 0, 0);", "+\t\t} else {", "+\t\t\tgc.fillRectangle(0, 0, width, height);", "+\t\t}", "+\t}", "+\tEvent event = new Event ();", "+\tevent.gc = gc;", "-\tgc.dispose ();", "-\tOS.XDestroyRegion (rgn);", "+\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\tgc.dispose ();", "+\t\tif (!isDisposed ()) {", "+\t\t\tpaintGC.drawImage (image, 0, 0);", "+\t\t}", "+\t\timage.dispose ();", "+\t\tgc = paintGC;", "+\t}\t", "+\tgc.dispose ();", "+\tOS.XDestroyRegion (damageRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b0dc1be221581f2da0a60ed4385d2e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "7a26d49f7fcf65bf8625393f1af4a67b482a7c35", "commitAfterChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-", "+\tfixedHandle = OS.gtk_fixed_new ();", "+\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_fixed_set_has_window (fixedHandle, true);", "-\t", "-\thandle = ((style&SWT.SEPARATOR) != 0)? (((style&SWT.HORIZONTAL)!= 0)?", "-\t\tOS.gtk_hseparator_new() : OS.gtk_vseparator_new()):", "-\t\tOS.gtk_label_new (null);", "+\tif ((style & SWT.SEPARATOR) != 0) {", "+\t\tif ((style & SWT.HORIZONTAL)!= 0) {", "+\t\t\thandle = OS.gtk_hseparator_new();", "+\t\t} else {", "+\t\t\thandle = OS.gtk_vseparator_new();", "+\t\t}", "+\t} else {", "+\t\thandle = OS.gtk_label_new (null);", "+\t}", "-}", "+\t", "+\tint parentHandle = parent.parentingHandle ();", "+\tOS.gtk_container_add(parentHandle, fixedHandle);", "+\tOS.gtk_container_add(fixedHandle, frameHandle);", "+\tOS.gtk_container_add(frameHandle, handle);", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (frameHandle);", "+\tOS.gtk_widget_show (handle);", "+\t// CHECK THEME"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32dd9b229f263e4c60e45d6575d5009", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "14a489530a23f9a98c44510d056f7f726ca954fe", "commitAfterChange": "3518db6648d68a0e9ff0c939ecd457985c6ae47b", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "+", "+\t\tint rgn = 0;", "+\t\tif ((style & (SWT.NO_MERGE_PAINTS | SWT.DOUBLE_BUFFERED)) != 0) {", "+\t\t\trgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t}", "+", "+\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\t\tOS.DeleteObject (rgn);", "+\t\t\tGC paintGC = null;", "+\t\t\tImage image = null;", "+\t\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\t\t\timage = new Image (display, width, height);", "+\t\t\t\tpaintGC = gc;", "+\t\t\t\tgc = new GC (image);", "+\t\t\t\tgc.setForeground (getForeground ());", "+\t\t\t\tgc.setBackground (getBackground ());", "+\t\t\t\tgc.setFont (getFont ());", "+\t\t\t\tif ((style & SWT.NO_BACKGROUND) != 0) {", "+\t\t\t\t\tpaintGC.copyArea (image, ps.left, ps.top);", "+\t\t\t\t} else {", "+\t\t\t\t\tgc.fillRectangle (0, 0, width, height);", "+\t\t\t\t}", "+\t\t\t\tOS.OffsetRgn (rgn, -ps.left, -ps.top);", "+\t\t\t\tOS.SelectClipRgn (gc.handle, rgn);", "+\t\t\t\tOS.SetMetaRgn (gc.handle);", "+\t\t\t\tOS.SetWindowOrgEx (gc.handle, ps.left, ps.top, null);", "+\t\t\t}", "-\t\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.NO_BACKGROUND)) == 0) {", "-\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.NO_BACKGROUND)) == 0) {", "+\t\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "+\t\t\t\tgc.dispose();", "+\t\t\t\tif (!isDisposed ()) {", "+\t\t\t\t\tpaintGC.drawImage(image, ps.left, ps.top);", "+\t\t\t\t}", "+\t\t\t\timage.dispose();", "+\t\t\t\tgc = paintGC;", "+\t\t\t}", "+\t\tif (rgn != 0) OS.DeleteObject (rgn);"]}], "num": 42577}