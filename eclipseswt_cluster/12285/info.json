{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "26aac6a365e28587238c3723ca67ab6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70d7d161e4beec27b71ab39d2359186", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ee381cdbb51d20b1b982abd146bd7b11a6aba165", "commitAfterChange": "87e8f1d6d951c70eb029728ef76bdcf382acc1af", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-", "-\tint [] x = new int [1], w = new int[1];", "+\t", "+//\tFeature in GTK. When a pixbufRenderer has size of 0x0, gtk_tree_view_column_cell_get_position", "+//\treturns a position of 0 as well. This causes offset issues meaning that images/widgets/etc.", "+//\tcan be placed over the text. We need to account for the base case of a pixbufRenderer that has", "+//\tyet to be sized, as per Bug 469277 & 476419.", "+\tint [] x = new int [1], w = new int [1];", "-\trect.x += x [0];", "+\tif (OS.GTK3) {", "+\t\tif (parent.pixbufSizeSet) {", "+\t\t\tif (x [0] > 0) {", "+\t\t\t\trect.x += x [0];", "+\t\t\t}", "+\t\t} else {", "+//\t\t\tIf the size of the pixbufRenderer hasn't been set, we need to take into account the", "+//\t\t\tposition of the textRenderer, to ensure images/widgets/etc. aren't placed over the TreeItem's", "+//\t\t\ttext.", "+\t\t\tlong /*int*/ textRenderer = parent.getTextRenderer (column);", "+\t\t\tif (textRenderer == 0)  return new Rectangle (0, 0, 0, 0);", "+\t\t\tint [] xText = new int [1], wText = new int [1];", "+\t\t\tOS.gtk_tree_view_column_cell_get_position (column, textRenderer, xText, wText);", "+\t\t\trect.x += xText [0];", "+\t\t}", "+\t} else {", "+\t\trect.x += x [0];", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5963deac65b7ae1c5a47d363003ff0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "d2ebcc3b59cf696fa67efa94efe4675d8b9e723e", "commitAfterChange": "718bc9a9b46e882335770e11dbe5b23a10fe1c0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t/*", "-\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "-\t* where each item has I_IMAGECALLBACK but there are no images in the", "-\t* table, the size computed by LVM_SETCOLUMNWIDTH is too small for the", "-\t* first column, causing long items to be clipped with '...'.  The fix", "-\t* is to increase the value by a small amount. ", "-\t*/", "-\tif (index == 0 && parent.imageList == null) columnWidth += 2;", "+\tif (index == 0) {", "+\t\t/*", "+\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t\t* where each item has I_IMAGECALLBACK but there are no images in the", "+\t\t* table, the size computed by LVM_SETCOLUMNWIDTH is too small for the", "+\t\t* first column, causing long items to be clipped with '...'.  The fix", "+\t\t* is to increase the column width by a small amount.", "+\t\t*/", "+\t\tif (parent.imageList == null) columnWidth += 2;", "+\t\t/*", "+\t\t* Bug in Windows.  When LVM_SETCOLUMNWIDTH is used with LVSCW_AUTOSIZE", "+\t\t* for a table with a state image list, the column is width does not", "+\t\t* include space for the state icon.  The fix is to increase the column", "+\t\t* width by the width of the image list.", "+\t\t*/", "+\t\tif ((parent.style & SWT.CHECK) != 0) {", "+\t\t\tint hStateList = OS.SendMessage (hwnd, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);", "+\t\t\tif (hStateList != 0) {", "+\t\t\t\tint [] cx = new int [1], cy = new int [1];", "+\t\t\t\tOS.ImageList_GetIconSize (hStateList, cx, cy);", "+\t\t\t\tcolumnWidth += cx [0];", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 12285}