{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2640fb169ef91b720a4667c4fe17273e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a6d960a252828bc0271da28fc8bd43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "8a1b7547e8e6e50ca940d0b15e69549a1b12424a", "commitAfterChange": "ad91d16dfdd25e2dfa61e4286b039d204cdf56ed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void scroll (int destX, int destY, int x, int y, int width, int height, boolean all)", "diff": ["-\tboolean isVisible = (caret != null) && (caret.isVisible ());", "+\tboolean isVisible = caret != null && caret.isVisible ();", "-\tint window = OS.GTK_WIDGET_WINDOW(paintHandle());", "+//\t/* Emit a NoExpose Event */", "+//\tint window = paintWindow ();", "+//\tint gc = OS.gdk_gc_new (window);", "+//\tOS.gdk_gc_set_exposures(gc, true);", "+//\tOS.gdk_draw_drawable(window, gc, window, x, y, x, y, width, height);", "+//\tOS.g_object_unref (gc);", "+//", "+//\t/* Flush outstanding Exposes */", "+//\tint gdkEvent = 0;", "+//\twhile ((gdkEvent = OS.gdk_event_get_graphics_expose(window)) != 0) {", "+//\t\tOS.gtk_widget_send_expose (handle, gdkEvent);", "+//\t\tGdkEventExpose event = new GdkEventExpose(gdkEvent);", "+//\t\tOS.gdk_event_free (gdkEvent);", "+//\t\tif (event.count == 0) break;", "+//\t}", "+\tupdate ();", "-\t/* Emit a NoExpose Event */", "-\tint gc = OS.gdk_gc_new (window);", "-\tOS.gdk_gc_set_exposures(gc, true);", "-\tOS.gdk_window_copy_area (window, gc, x, y, window, x, y, width, height);", "-\tOS.g_object_unref (gc);", "-", "-\t/* Flush outstanding Exposes */", "-\tint eventHandle=0;", "-\twhile ((eventHandle = OS.gdk_event_get_graphics_expose(window)) != 0) {", "-\t\tOS.gtk_widget_event(handle, eventHandle);", "-\t\tOS.gdk_event_free(eventHandle);\t", "-\t}", "-", "-\t/* Scroll the window */", "-\tint gc1 = OS.gdk_gc_new (window);", "-\tOS.gdk_gc_set_exposures(gc1, true);", "-\tOS.gdk_window_copy_area (window, gc1, destX, destY, window, x, y, width, height);", "-\tOS.g_object_unref (gc1);", "-\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\tif (disjoint) {", "-\t\tOS.gdk_window_clear_area(window, x, y, width, height);", "-\t} else {", "-\t\tif (deltaX != 0) {", "-\t\t\tint newX = destX - deltaX;", "-\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\tOS.gdk_window_clear_area_e(window, newX, y, Math.abs (deltaX), height);", "-\t\t}", "-\t\tif (deltaY != 0) {", "-\t\t\tint newY = destY - deltaY;", "-\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\tOS.gdk_window_clear_area_e (window, x, newY, width, Math.abs (deltaY));", "-\t\t}", "-\t}", "+\tGC gc = new GC (this);", "+\tgc.copyArea (x, y, width, height, destX, destY);", "+\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f87bdbcfa466d7e2ec7c84ff32080d51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "2e3cc3f2343444e38d6648881ff7de0ee9aea010", "commitAfterChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tint /*long*/ font = this.font != null ? this.font.handle : device.systemFont.handle;", "-\tint /*long*/ lang = OS.pango_context_get_language(context);", "-\tint ascent = 0, descent = 0, averageCharWidth = 0, height = 0;", "-\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font, lang);", "+\tint ascent = 0, descent = 0;", "-\tint /*long*/ runs = line.runs;", "-\tif (text.length() == 0 || runs == 0) {", "+\tif (line.runs == 0) {", "+\t\tint /*long*/ font = this.font != null ? this.font.handle : device.systemFont.handle;", "+\t\tint /*long*/ lang = OS.pango_context_get_language(context);", "+\t\tint /*long*/ metrics = OS.pango_context_get_metrics(context, font, lang);", "-\t\taverageCharWidth = OS.pango_font_metrics_get_approximate_char_width(metrics);", "-\t\theight = ascent + descent;", "+\t\tOS.pango_font_metrics_unref(metrics);", "-\t\tPangoLayoutRun run = new PangoLayoutRun();", "-\t\tPangoItem item = new PangoItem();", "-\t\tint runCount = 0;", "-\t\tascent = Math.max(0, this.ascent * OS.PANGO_SCALE);", "-\t\tdescent = Math.max(0, this.descent * OS.PANGO_SCALE);", "-\t\twhile (runs != 0) {", "-\t\t\tOS.memmove(run, OS.g_slist_data(runs), PangoLayoutRun.sizeof);", "-\t\t\tOS.memmove(item, run.item, PangoItem.sizeof);", "-\t\t\tint /*long*/ runMetrics = metrics;", "-\t\t\tif (item.analysis_font != 0) {", "-\t\t\t\trunMetrics = OS.pango_font_get_metrics(item.analysis_font, item.analysis_language);", "-\t\t\t}", "-\t\t\tint runAscent = OS.pango_font_metrics_get_ascent(runMetrics);", "-\t\t\tint runDescent = OS.pango_font_metrics_get_descent(runMetrics);", "-\t\t\tascent = Math.max(ascent, runAscent);", "-\t\t\tdescent = Math.max(descent, runDescent);", "-\t\t\taverageCharWidth += OS.pango_font_metrics_get_approximate_char_width(runMetrics);", "-\t\t\theight = Math.max(height, runAscent + runDescent);", "-\t\t\tif (metrics != runMetrics) OS.pango_font_metrics_unref(runMetrics);", "-\t\t\trunCount++;", "-\t\t\truns = OS.g_slist_next(runs);", "-\t\t}", "-\t\taverageCharWidth = averageCharWidth / runCount;", "+\t\tPangoRectangle rect = new PangoRectangle();", "+\t\tOS.pango_layout_line_get_extents(OS.pango_layout_get_line(layout, lineIndex), null, rect);", "+\t\tascent = -rect.y;", "+\t\tdescent = rect.height - ascent;", "-\tOS.pango_font_metrics_unref(metrics);", "-\taverageCharWidth = OS.PANGO_PIXELS(averageCharWidth);", "-\theight = OS.PANGO_PIXELS(height);", "-\treturn FontMetrics.gtk_new(ascent, descent, averageCharWidth, 0, height);", "+\treturn FontMetrics.gtk_new(ascent, descent, 0, 0, ascent + descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16329b371bc5cfa6fb5a3b23b8d49899", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "baf95176a8708225157483f4b3724dbe808b4b2d", "commitAfterChange": "08b35427b630b058d33816f10064b6c3de68a1f4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "diff": ["+\tcopyArea(x, y, width, height, destX, destY, true);", "+}", "-\tif (data.image == null) OS.XSetGraphicsExposures (xDisplay, handle, true);", "-\tif (data.image == null) {"]}], "num": 35880}