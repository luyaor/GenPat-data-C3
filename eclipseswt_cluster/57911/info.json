{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5cd7e3e0c887df0f9e5bf84ed8a7df8a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf8869e852a059e255ff5b243394d74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 30, "signatureBeforeChange": " public Rectangle getImageBounds (int columnIndex)", "signatureAfterChange": " int getPaintStopX()", "diff": ["-}", "-public Rectangle getImageBounds (int columnIndex) {", "-\tcheckWidget ();", "-\tint validColumnCount = Math.max (1, parent.getColumnCount ());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return new Rectangle (0,0,0,0);", "-\tint padding = parent.getCellPadding ();", "-\tint startX = getContentX (columnIndex);", "-\tint itemHeight = parent.getItemHeight ();", "-\tint y = parent.getItemY (this);", "-\tImage image = internalGetImage (columnIndex); ", "-\tif (image == null) {", "-\t\treturn new Rectangle (startX, y + padding, 0, itemHeight - 2 * padding);", "-\tRectangle imageBounds = image.getBounds ();", "-\t/* ", "-\t * For column 0 all images have the same width, which may be larger or smaller", "-\t * than the image to be drawn here.  Therefore the image bounds to draw must be", "-\t * specified.", "-\t */", "-\tint drawWidth;", "-\tif (columnIndex == 0) {", "-\t\tint imageSpaceX = parent.col0ImageWidth;", "-\t\tdrawWidth = Math.min (imageSpaceX, imageBounds.width);", "-\t} else {", "-\t\tdrawWidth = imageBounds.width;", "-\tint imageSpaceY = itemHeight - (2 * padding);", "-\tint drawHeight = Math.min (imageSpaceY, imageBounds.height);", "-\treturn new Rectangle(", "-\t\tstartX, y + (itemHeight - drawHeight) / 2,", "-\t\tdrawWidth, drawHeight);", "+ */", "+int getPaintStopX() {", "+\treturn (getItemStartX() + getItemExtent().x - getParent().getHorizontalOffset());", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a29d50d167bf51b9f2b1db3caf8551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java", "commitBeforeChange": "acddacf7da7550accfa2b2e69a28b70a3eb61e9c", "commitAfterChange": "615a9e44c1b1ef15ac246dcd713945b6c0812293", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 51, "signatureBeforeChange": "\r private String[][] merge(String[][] firstHalf, String[][] secondHalf, int column)", "signatureAfterChange": "\r \tpublic int compare(Object obj1, Object obj2)", "diff": ["- */\r", "-private String[][] merge(String[][] firstHalf, String[][] secondHalf, int column) {\r", "-\tint x = firstHalf.length + secondHalf.length;\r", "-\tint y = Math.max(firstHalf[0].length, secondHalf[0].length);\r", "-\tString[][] sorted = new String[x][y];\r", "-\t\r", "-\tint firstHalfIndex = 0;\r", "-\tint secondHalfIndex = 0;\r", "-\tint sortedIndex = 0;\r", "-\r", "-\t//merge\r", "-\twhile(firstHalfIndex < firstHalf.length && secondHalfIndex < secondHalf.length) {\r", "-\t\tif(firstHalf[firstHalfIndex][column].compareToIgnoreCase(secondHalf[secondHalfIndex][column]) <= 0 ) {\r", "-\t\t\tsorted[sortedIndex] = firstHalf[firstHalfIndex];\r", "-\t\t\tsortedIndex++;\r", "-\t\t\tfirstHalfIndex++;\r", "-\t\t} else {\r", "-\t\t\tsorted[sortedIndex] = secondHalf[secondHalfIndex];\r", "-\t\t\tsortedIndex++;\r", "-\t\t\tsecondHalfIndex++;\r", "-\t\t}\r", "-\t}\r", "-\t\r", "-\t//copy remaining items into sorted.\r", "-\twhile(firstHalfIndex < firstHalf.length) {\r", "-\t\tsorted[sortedIndex] = firstHalf[firstHalfIndex];\r", "-\t\tsortedIndex++;\r", "-\t\tfirstHalfIndex++;\r", "-\t}\r", "-\t\r", "-\twhile(secondHalfIndex < secondHalf.length) {\r", "-\t\tsorted[sortedIndex] = secondHalf[secondHalfIndex];\r", "-\t\tsortedIndex++;\r", "-\t\tsecondHalfIndex++;\r", "-\t}\r", "-\t\r", "-\treturn sorted;\r", "-}\r", "+\t */\r", "+\tpublic int compare(Object obj1, Object obj2) {\r", "+\t\tString[] row1 = (String[])obj1;\r", "+\t\tString[] row2 = (String[])obj2;\r", "+\t\t\r", "+\t\treturn row1[column].compareTo(row2[column]);\r", "+\t}\r"]}], "num": 57911}