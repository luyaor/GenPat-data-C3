{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c58653b8a31b81898ed419e5a4688035", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbfb8c0b043e3bde8d2ecf0c01b198d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "diff": ["-LRESULT WM_VSCROLL (int wParam, int lParam) {", "+LRESULT WM_VSCROLL (int /*long*/ wParam, int /*long*/ lParam) {", "-\tint oldHeaderProc = 0, oldTableProc = 0;", "-\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\tint /*long*/ oldHeaderProc = 0, oldTableProc = 0;", "+\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\toldTableProc = OS.SetWindowLong (handle, OS.GWL_WNDPROC, TableProc);", "-\t\toldHeaderProc = OS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, HeaderProc);", "+\t\toldTableProc = OS.SetWindowLongPtr (handle, OS.GWLP_WNDPROC, TableProc);", "+\t\toldHeaderProc = OS.SetWindowLongPtr (hwndHeader, OS.GWLP_WNDPROC, HeaderProc);", "-\t\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldTableProc);", "-\t\tOS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, oldHeaderProc);", "+\t\tOS.SetWindowLongPtr (handle, OS.GWLP_WNDPROC, oldTableProc);", "+\t\tOS.SetWindowLongPtr (hwndHeader, OS.GWLP_WNDPROC, oldHeaderProc);", "-\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\tint bits = (int)/*64*/OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "-\t\t\t\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);", "-\t\t\t\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);", "+\t\t\t\tint /*long*/ empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);", "+\t\t\t\tint /*long*/ oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a00512748505a8177440c1e985acf5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "364f2b857656c5e7701da71aae15e84ab16b2eb2", "commitAfterChange": "b6e03a2efa6ef9d0f4dfe067b326ab3c3a841d89", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "diff": ["-\tint oldProc = 0;", "+\tint oldHeaderProc = 0, oldTableProc = 0;", "+\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\toldProc = OS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, HeaderProc);", "-\t\tunsubclass ();", "+\t\toldTableProc = OS.SetWindowLong (handle, OS.GWL_WNDPROC, TableProc);", "+\t\toldHeaderProc = OS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, HeaderProc);", "-\t\tsubclass ();", "-\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\tOS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, oldProc);", "+\t\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldTableProc);", "+\t\tOS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, oldHeaderProc);", "-\t\t\t\tint headerHeight = 0;", "-\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\t\tif (hwndHeader != 0) {", "-\t\t\t\t\tRECT rect = new RECT ();\t\t\t\t\t", "-\t\t\t\t\tOS.GetWindowRect (hwndHeader, rect);", "-\t\t\t\t\theaderHeight = rect.bottom - rect.top;", "-\t\t\t\t}", "-\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\t\trect.top += headerHeight;", "+\t\t\t\tRECT rect = new RECT ();\t\t\t\t\t", "+\t\t\t\tOS.GetWindowRect (hwndHeader, rect);", "+\t\t\t\tint headerHeight = rect.bottom - rect.top;", "+\t\t\t\tRECT clientRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (handle, clientRect);", "+\t\t\t\tclientRect.top += headerHeight;", "-\t\t\t\t\trect.top = rect.bottom - itemHeight - GRID_WIDTH;", "+\t\t\t\t\tclientRect.top = clientRect.bottom - itemHeight - GRID_WIDTH;", "-\t\t\t\t\trect.bottom = rect.top + itemHeight + GRID_WIDTH;", "+\t\t\t\t\tclientRect.bottom = clientRect.top + itemHeight + GRID_WIDTH;", "-\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t\tOS.InvalidateRect (handle, clientRect, true);"]}], "num": 46695}