{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc9c0184cf1a03d3cb8d598aad845279", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "050e586d4f1276f9115ba6711a5003cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 363, "methodNumberAfterChange": 364, "signatureBeforeChange": " \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "signatureAfterChange": " \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "diff": ["-\t\tevent.start = offset;", "-\t\tevent.end = offset;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tint length = event.count;", "+\t\tevent.count = 0;", "+\t\tevent.start = offset < 0 ? 0 : offset;", "+\t\tevent.end = offset >= length ? length : offset + 1;", "+\t\t/* Note: event.rectangles is not used here, because IAccessibleText::get_characterExtents is just for one character. */", "+\t\tif (event.width == 0 && event.height == 0) return COM.E_INVALIDARG;", "-\t\t// TODO: @retval E_INVALIDARG if bad [in] passed, [out] values are 0s"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5428e0b15322bbb01d2687050a1f424c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 321, "signatureBeforeChange": " \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "signatureAfterChange": "  \tint get_characterExtents(int offset, int coordType, int pX, int pY, int pWidth, int pHeight)", "diff": ["-\t/* IAccessibleText::get_characterExtents([in] offset, [in] coordType, [out] pX, [out] pY, [out] pWidth, [out] pHeight) */", "+\t\tint length = getCharacterCount();", "-\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\tlistener.getCharacterCount(event);", "-\t\t}", "-\t\tint length = event.count;", "-\t\tevent.count = 0;", "-\t\tevent.start = offset < 0 ? 0 : offset;", "-\t\tevent.end = offset >= length ? length : offset + 1;", "+\t\tevent.start = offset == COM.IA2_TEXT_OFFSET_LENGTH ? length : offset < 0 ? 0 : offset;", "+\t\tevent.end = offset == COM.IA2_TEXT_OFFSET_LENGTH || offset >= length ? length : offset + 1;", "+\t\tif (DEBUG) print(this + \".IAccessibleText::get_characterExtents(\" + offset + \") returning \" + event.x + \", \" + event.y + \", \" + event.width + \", \" + event.height);"]}], "num": 39254}