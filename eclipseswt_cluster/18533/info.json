{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c4431ce4d79080eadb798eb3e25f018", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "397e0db5eb580a89ec80e43ef6d043f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "275ce1322d2d2acef8289e7a428bae512f0206b1", "commitAfterChange": "56ca7c39a4fdb71b796d09fde89d6bca48c9f734", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void open()", "signatureAfterChange": " \t \tpublic void open()", "diff": ["+\t\t\t}", "+\t\t});", "+\t\tnodesTree.addListener(SWT.Expand, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tTreeItem item = (TreeItem)event.item;", "+\t\t\t\tif (item.getItemCount() == 1 && item.getItem(0).getData() == null) {", "+\t\t\t\t\titem.getItem(0).dispose();", "+\t\t\t\t\tNode node = (Node)item.getData();", "+\t\t\t\t\tNodeList childNodes = node.getChildNodes();", "+\t\t\t\t\tfor (int i = 0, length = childNodes.getLength(); i < length; i++) {", "+\t\t\t\t\t\taddChild(childNodes.item(i), item);", "+\t\t\t\t\t}", "+\t\t\t\t\tTreeColumn[] columns = nodesTree.getColumns();", "+\t\t\t\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\t\t\t\tcolumns[i].pack();", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t});", "-\t\t", "+\t\t});\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9932883a8bb21a3515edc4a0e4791335", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a6793950af6d017aab139136a30b4f9fd754599e", "commitAfterChange": "e139d0ab76ea26e5296ceee7a81cdb4cd23f3694", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["+\tint orderIndex = 0;", "+\tint [] order = new int [columnCount];", "+\tOS.SendMessage (handle, OS.LVM_GETCOLUMNORDERARRAY, columnCount, order);", "+\twhile (orderIndex < columnCount) {", "+\t\tif (order [orderIndex] == index) break;", "+\t\torderIndex++;", "+\t}", "+\tignoreResize = true;", "+\tignoreResize = false;", "+\tif (columnCount != 0) {", "+\t\tint count = columnCount - orderIndex;", "+\t\tTableColumn [] newColumns = new TableColumn [count];", "+\t\torderIndex++;", "+\t\tfor (int i=orderIndex; i<order.length; i++) {", "+\t\t\tnewColumns [i - orderIndex] = columns [order [i] - 1];", "+\t\t}", "+\t\tfor (int i=0; i<newColumns.length; i++) {", "+\t\t\tif (!newColumns [i].isDisposed ()) {", "+\t\t\t\tnewColumns [i].sendEvent (SWT.Move);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 18533}