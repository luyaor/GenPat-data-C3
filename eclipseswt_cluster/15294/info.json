{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b77a169d4d1c06b39497ba4087446260", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f79772668fa29a82eac59267fa1386", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Color.java", "commitBeforeChange": "f8fac65ce95a55deac635bc30938e847ad93eba0", "commitAfterChange": "cdbe5456e3afafef3a4445c1ddb3c0cfe08c3c3a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test_equalsLjava_lang_Object()", "signatureAfterChange": "  public void test_equalsLjava_lang_Object()", "diff": ["+\ttry {", "+\t\t// Test Color.equals(Object)", "+\t\tassertTrue(\"!color.equals((Object)null)\", !color.equals((Object)null));", "+", "+\t\t// Test Color.equals(Color)", "+\t\tassertTrue(\"!color.equals((Color)null)\", !color.equals((Color)null));", "+\t\tassertTrue(\"color.equals(color)\", color.equals(color));", "+\t\tassertTrue(\"color.equals(sameColor)\", color.equals(sameColor));", "+\t\tassertTrue(\"color.equals(sameColor2)\", color.equals(sameColor2));", "+\t\tassertTrue(\"!color.equals(otherColor)\", !color.equals(otherColor));", "+\t} finally {", "+\t\tcolor.dispose();", "+\t\tsameColor.dispose();", "+\t\tsameColor2.dispose();", "+\t\totherColor.dispose();", "+\t}", "+\t", "+\t// With alpha", "+\tcolor = new Color(display, 1, 2, 3, 0);", "+\tsameColor = new Color(display, 1, 2, 3, 0);", "+\tsameColor2 = new Color(display, new RGB(1, 2, 3), 0);", "+\totherColor = new Color(display, 5, 6, 7, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea7c232804a5dc1cd6f01bacecb30f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_RGB.java", "commitBeforeChange": "2503053f30d7051ae67b1f8960c73f8d3decfc0a", "commitAfterChange": "375593ba6653fa81268e5bfbc6bd7fb0a56adba8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_equalsLjava_lang_Object()", "signatureAfterChange": "  public void test_equalsLjava_lang_Object()", "diff": ["+", "-}", "+\tfloat hue = 220f, sat = 0.6f, bright = 0.7f;", "+\trgb1 = new RGB(hue, sat, bright);", "+\trgb2 = rgb1;", "+\tif (!rgb1.equals(rgb2)) {", "+\t\tfail(\"Two references to the same RGB instance not found equal\");", "+\t}", "+\t", "+\trgb2 = new RGB(hue, sat, bright);", "+\tif (!rgb1.equals(rgb2)) {", "+\t\tfail(\"References to two different RGB instances with same H S B parameters not found equal\");", "+\t}", "+\t", "+\tif (rgb1.equals(new RGB(hue+1, sat, bright)) ||", "+\t    rgb1.equals(new RGB(hue, sat+0.1f, bright)) ||", "+\t    rgb1.equals(new RGB(hue, sat, bright+0.1f)) ||", "+\t    rgb1.equals(new RGB(hue+1, sat+0.1f, bright+0.1f))) {", "+\t\tfail(\"Comparing two RGB instances with different combination of H S B parameters found equal\");    \t", "+\t}", "+}"]}], "num": 15294}