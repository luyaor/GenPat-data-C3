{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a2be2e9181aae01c5def3f9e21e3c94", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecfeb3cb515879a67578b27f8da2ac5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "20b59fb33fb1a1d03e75299b801b82b0a493e702", "commitAfterChange": "856bec56110ce2de9051506cbc1855b2230b262f", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tif (part [0] != OS.kControlFocusNoPart) display.focusControl = this;", "-\t\tsendFocusEvent (part [0] != OS.kControlFocusNoPart, false);", "-\t\tif (part [0] != OS.kControlFocusNoPart) display.focusControl = null;", "+\t\tdisplay.focusControl = this;", "+\t\tdisplay.focusEvent = part [0] != OS.kControlFocusNoPart ? SWT.FocusIn : SWT.FocusOut;", "+\t\tsendFocusEvent (display.focusEvent, false);", "+\t\tdisplay.focusEvent = SWT.None;", "+\t\tdisplay.focusControl = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e631093b90dd216e55b908805e00b5e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "856bec56110ce2de9051506cbc1855b2230b262f", "commitAfterChange": "d591115018ac1c3832516a212e7f29553fb725e8", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void sendFocusEvent (int event, boolean post)", "signatureAfterChange": "  void sendFocusEvent (int type, boolean post)", "diff": ["-void sendFocusEvent (int event, boolean post) {", "+void sendFocusEvent (int type, boolean post) {", "-\t\tpostEvent (event);", "+\t\tpostEvent (type);", "-\t\tsendEvent (event);", "+\t\t/*", "+\t\t* Feature in the Macintosh.  GetKeyboardFocus() returns NULL during", "+\t\t* kEventControlSetFocusPart if the focus part is not kControlFocusNoPart.", "+\t\t* The fix is to remember the focus control and return it during", "+\t\t* kEventControlSetFocusPart.", "+\t\t*/", "+\t\tDisplay display = this.display;", "+\t\tdisplay.focusControl = this;", "+\t\tdisplay.focusEvent = type;", "+\t\tsendEvent (type);", "+\t\tdisplay.focusEvent = SWT.None;", "+\t\tdisplay.focusControl = null;", "-\t\tif (event == SWT.FocusIn) {", "+\t\tif (type == SWT.FocusIn) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c00e32f471ef68de11a65401b6dd20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "91b5711660ae70726404d0e8ee0d181a6a391652", "commitAfterChange": "030b9a0697828459778791517f2c0b080cc21fa6", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": "  void sendFocusEvent (int type, boolean post)", "signatureAfterChange": "  void sendFocusEvent (int type)", "diff": ["-void sendFocusEvent (int type, boolean post) {", "+void sendFocusEvent (int type) {", "-\tif (post) {", "-\t\tpostEvent (type);", "-\t} else {", "-\t\tsendEvent (type);", "-\t}", "+", "+\tdisplay.focusEvent = type;", "+\tdisplay.focusControl = this;", "+\tsendEvent (type);", "+\t// widget could be disposed at this point", "+\tdisplay.focusEvent = SWT.None;", "+\tdisplay.focusControl = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fa2e3dc2ab8bf4287dd7e6ffae2338", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "985580b851b6889e225f6394fc5db0c3f7391879", "commitAfterChange": "3785a48b5eb31a89fd727edd8fea32a7122ede6e", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  void sendFocusEvent (int type)", "signatureAfterChange": "  void sendFocusEvent (int type)", "diff": ["+\tDisplay display = this.display;", "+\tdisplay.focusControl = this;", "+\tdisplay.focusEvent = type;", "-\tswitch (type) {", "-\t\tcase SWT.FocusIn: {", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "+\tdisplay.focusControl = null;", "+\tdisplay.focusEvent = SWT.None;", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/", "+\tif (!shell.isDisposed ()) {", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn: ", "-\t\t\t}\t\t\t", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.FocusOut: {", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\tDisplay display = shell.display;", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "-\t\t\t}", "-\t\t\tbreak;", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f0aa99f962c5726ab72241b47b2a88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6976333087f29aa0c313d19d0f83938006d01e3e", "commitAfterChange": "a141fe53a3370bdde207c536308d14a717b0cac0", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  boolean sendFocusEvent (int type, int hwnd)", "signatureAfterChange": "  boolean sendFocusEvent (int type, int hwnd)", "diff": ["-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in the focus", "-\t* out event.  If this happens keep going to send", "-\t* the deactivate events.", "+\t* Feature in Windows.  During the processing of WM_KILLFOCUS,", "+\t* when the focus window is queried using GetFocus(), it has", "+\t* already been assigned to the new window.  The fix is to", "+\t* remember the control that is losing or gaining focus and", "+\t* answer it during WM_KILLFOCUS.  If a WM_SETFOCUS occurs", "+\t* during WM_KILLFOCUS, the focus control needs to be updated", "+\t* to the current control.  At any other time, the focus", "+\t* control matches Windows.", "+\tDisplay display = this.display;", "+\tdisplay.focusEvent = type;", "+\tdisplay.focusControl = this;", "-\t", "-\tswitch (type) {", "-\t\tcase SWT.FocusIn:", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/\t", "-\t\t\tif (!shell.isDisposed ()) {", "+\tdisplay.focusEvent = SWT.None;", "+\tdisplay.focusControl = null;", "+", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tif (!shell.isDisposed ()) {", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn:", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase SWT.FocusOut:", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\tDisplay display = shell.display;", "-\t\t\t\tControl control = hwnd != -1 ? display.findControl (hwnd) : display.getFocusControl ();", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "+\t\t\t\tControl control = display.findControl (hwnd);", "-\t\t\t}", "-\t\t\tbreak;", "+\t\t\t\tbreak;", "+\t\t}"]}], "num": 25177}