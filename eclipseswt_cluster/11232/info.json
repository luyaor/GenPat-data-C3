{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8981f372a172443f02657777c6503ea", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf845ad5c26b5f14e8778675a1e8c4d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "80f137cfd2db6016880fb35b713904c3f9862024", "commitAfterChange": "3d6268b28bff93d191d7c30b9cc692bcbf536b2f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  int gtk_event_after (int widget, int gdkEvent)", "signatureAfterChange": "  int gtk_event_after (int widget, int gdkEvent)", "diff": ["+\t* ", "+\t* Feature in GTK. When the user clicks anywhere in an editable ", "+\t* combo box, a single focus event should be issued, despite the ", "+\t* fact that focus might switch between the drop down button and", "+\t* the text field. The fix is to use gtk_combo_box_set_focus_on_click ()", "+\t* to eat all focus events while focus is in the combo box. When the ", "+\t* user clicks on the drop down button focus is assigned to the text ", "+\t* field.", "+\t\t\t\t\t}", "+\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "+\t\t\t\t\t\tif ((style & SWT.READ_ONLY) == 0 && widget == buttonHandle) {", "+\t\t\t\t\t\t\tOS.gtk_widget_grab_focus (entryHandle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "+\t\t\t\t\tif ((style & SWT.READ_ONLY) == 0) {", "+\t\t\t\t\t\tGdkEventFocus gdkEventFocus = new GdkEventFocus ();", "+\t\t\t\t\t\tOS.memmove (gdkEventFocus, gdkEvent, GdkEventFocus.sizeof);", "+\t\t\t\t\t\tif (gdkEventFocus.in != 0) {", "+\t\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, false);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, true);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6687eb62911b4f87fe6f89648f9225", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9d92881b3b42b42f713c6b2022fdd425b5bdd96e", "commitAfterChange": "e9c202445b7800e816318f00aed3887885c67efd", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 220, "signatureBeforeChange": " public void setEnabled (boolean enabled)", "signatureAfterChange": " public void setEnabled (boolean enabled)", "diff": ["+\t\t\tif (OS.GTK3 && OS.GTK_VERSION < OS.VERSION (3, 11, 9)) {", "+\t\t\t\tif (enterNotifyEventId > 0)", "+\t\t\t\t\tOS.g_signal_remove_emission_hook(enterNotifyEventSignalId, enterNotifyEventId);", "+\t\t\t\tenterNotifyEventId = 0;", "+", "+\t\t\t\t/*", "+\t\t\t\t * 427776: now we can remove any reference to the GdkWindow", "+\t\t\t\t * in a widget's internal hash table. this internal hash", "+\t\t\t\t * table was removed in GTK 3.11.9 so once only newer GTK is", "+\t\t\t\t * targeted, this workaround can be removed.", "+\t\t\t\t */", "+\t\t\t\tlong /*int*/ grabWidget = OS.g_object_get_qdata(enableWindow, SWT_GRAB_WIDGET);", "+\t\t\t\tif (grabWidget != 0) {", "+\t\t\t\t\tOS.g_object_set_qdata(grabWidget, GTK_POINTER_WINDOW, 0);", "+\t\t\t\t\tOS.g_object_set_qdata(enableWindow, SWT_GRAB_WIDGET, 0);", "+\t\t\t\t}", "+\t\t\t}", "+", "+\t\t\t/* 427776: we need to listen to all enter-notify-event signals to", "+\t\t\t * see if this new GdkWindow has been added to a widget's internal", "+\t\t\t * hash table, so when the GdkWindow is destroyed we can also remove", "+\t\t\t * that reference. */", "+\t\t\tif (OS.GTK3 && OS.GTK_VERSION < OS.VERSION (3, 11, 9))", "+\t\t\t\tenterNotifyEventId = OS.g_signal_add_emission_hook (enterNotifyEventSignalId, 0, enterNotifyEventFunc.getAddress (), enableWindow, 0);", "+"]}], "num": 11232}