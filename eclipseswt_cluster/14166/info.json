{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45608cf718a7eb856fc8856fbc5e4800", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d1e8f48cde70b665bca7e2cf4d74b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "8a9de9788694ec6068094dd7dbbf6980933f8157", "commitAfterChange": "e1489e9b81215ca1244a389d6ad6216d07a6b9c1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void dispose(Event event)", "signatureAfterChange": "  void dispose(Event event)", "diff": ["-\tDisplay display = getDisplay();", "-\tdisplay.asyncExec(new Runnable() {", "-\t\tpublic void run() {", "-\t\t\tif (table.isDisposed()) return;", "-\t\t\ttable.removeListener(SWT.FocusIn, tableListener);", "-\t\t\ttable.removeListener(SWT.MouseDown, tableListener);", "-\t\t\tif (column != -1) {", "-\t\t\t\tTableColumn col = table.getColumn(column);", "-\t\t\t\tcol.removeListener(SWT.Dispose, disposeColumnListener);", "-\t\t\t\tcol.removeListener(SWT.Move, resizeListener);", "-\t\t\t\tcol.removeListener(SWT.Resize, resizeListener);", "-\t\t\t}", "-\t\t\tif (row != -1) {", "-\t\t\t\ttable.getItem(row).removeListener(SWT.Dispose, disposeItemListener);", "-\t\t\t}", "-\t\t\tScrollBar hBar = table.getHorizontalBar();", "-\t\t\tif (hBar != null) {", "-\t\t\t\thBar.removeListener(SWT.Selection, resizeListener);", "-\t\t\t}", "-\t\t\tScrollBar vBar = table.getVerticalBar();", "-\t\t\tif (vBar != null) {", "-\t\t\t\tvBar.removeListener(SWT.Selection, resizeListener);", "-\t\t\t}", "-\t\t}", "-\t});", "+\ttable.removeListener(SWT.FocusIn, tableListener);", "+\ttable.removeListener(SWT.MouseDown, tableListener);", "+\tif (column != null) {", "+\t\tcolumn.removeListener(SWT.Dispose, disposeColumnListener);", "+\t\tcolumn.removeListener(SWT.Move, resizeListener);", "+\t\tcolumn.removeListener(SWT.Resize, resizeListener);", "+\t\tcolumn = null;", "+\t}", "+\tif (row != null) {", "+\t\trow.removeListener(SWT.Dispose, disposeItemListener);", "+\t\trow = null;", "+\t}", "+\tScrollBar hBar = table.getHorizontalBar();", "+\tif (hBar != null) {", "+\t\thBar.removeListener(SWT.Selection, resizeListener);", "+\t}", "+\tScrollBar vBar = table.getVerticalBar();", "+\tif (vBar != null) {", "+\t\tvBar.removeListener(SWT.Selection, resizeListener);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d643b9c53b66b67a7b01653565c52b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableCursor.java", "commitBeforeChange": "8a9de9788694ec6068094dd7dbbf6980933f8157", "commitAfterChange": "e1489e9b81215ca1244a389d6ad6216d07a6b9c1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\tpublic void run()", "signatureAfterChange": " void setRowColumn(TableItem row, TableColumn column, boolean notify)", "diff": ["-\tdisplay.asyncExec(new Runnable() {", "-\t\tpublic void run() {", "-\t\t\tif (table.isDisposed()) return;", "-\t\t\ttable.removeListener(SWT.FocusIn, tableListener);", "-\t\t\ttable.removeListener(SWT.MouseDown, tableListener);", "-\t\t\tif (column != -1) {", "-\t\t\t\tTableColumn col = table.getColumn(column);", "-\t\t\t\tcol.removeListener(SWT.Dispose, disposeColumnListener);", "-\t\t\t\tcol.removeListener(SWT.Move, resizeListener);", "-\t\t\t\tcol.removeListener(SWT.Resize, resizeListener);", "-\t\t\t}", "-\t\t\tif (row != -1) {", "-\t\t\t\ttable.getItem(row).removeListener(SWT.Dispose, disposeItemListener);", "-\t\t\t}", "-\t\t\tScrollBar hBar = table.getHorizontalBar();", "-\t\t\tif (hBar != null) {", "-\t\t\t\thBar.removeListener(SWT.Selection, resizeListener);", "-\t\t\t}", "-\t\t\tScrollBar vBar = table.getVerticalBar();", "-\t\t\tif (vBar != null) {", "-\t\t\t\tvBar.removeListener(SWT.Selection, resizeListener);", "-\t\t\t}", "-\t\t}", "+}", "+void setRowColumn(TableItem row, TableColumn column, boolean notify) {", "+\tif (this.row != null && this.row != row) {", "+\t\tthis.row.removeListener(SWT.Dispose, disposeItemListener);", "+\t\tthis.row = null;", "+\tif (this.column != null && this.column != column) {", "+\t\tthis.column.removeListener(SWT.Dispose, disposeColumnListener);", "+\t\tthis.column.removeListener(SWT.Move, resizeListener);", "+\t\tthis.column.removeListener(SWT.Resize, resizeListener);", "+\t\tthis.column = null;", "+\tif (row != null) {", "+\t\tif (this.row != row) {", "+\t\t\tthis.row = row;", "+\t\t\trow.addListener(SWT.Dispose, disposeItemListener);", "+\t\t\ttable.showItem(row);", "+\t\t}", "+\t\tif (this.column != column && column != null) {", "+\t\t\tthis.column = column;", "+\t\t\tcolumn.addListener(SWT.Dispose, disposeColumnListener);", "+\t\t\tcolumn.addListener(SWT.Move, resizeListener);", "+\t\t\tcolumn.addListener(SWT.Resize, resizeListener);", "+\t\t\ttable.showColumn(column);", "+\t\t}", "+\t\tint columnIndex = column == null ? 0 : table.indexOf(column);", "+\t\tsetBounds(row.getBounds(columnIndex));", "+\t\tredraw();", "+\t\tif (notify) {", "+\t\t\tnotifyListeners(SWT.Selection, new Event());"]}], "num": 14166}