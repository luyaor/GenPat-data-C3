{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5670921d870b1929f3bad931f69f3fed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223ed9a38c73f6a6a194fce6c2df8fff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0636059c6a5b4de3812ff9426295459552bf6910", "commitAfterChange": "8e9705d93325d1390b1c14aa0ba55b9649457ef3", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": " public void timerExec (int milliseconds, Runnable runnable)", "diff": ["+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);\r", "-\tif (timers == null) timers = new int [4];\r", "+\tif (timerIds == null) timerIds = new int [4];\r", "-\t\tif (timerList [index] == null) break;\r", "+\t\tif (timerList [index] == runnable) break;\r", "-\tif (index == timerList.length) {\r", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "-\t\ttimerList = newTimerList;\r", "-\t\tint [] newTimers = new int [timers.length + 4];\r", "-\t\tSystem.arraycopy (timers, 0, newTimers, 0, timers.length);\r", "-\t\ttimers = newTimers;\r", "+\tif (index != timerList.length) {\r", "+\t\tOS.PtDestroyWidget (timerIds [index]);\r", "+\t\ttimerList [index] = null;\r", "+\t\ttimerIds [index] = 0;\r", "+\t\tif (milliseconds < 0) return;\r", "+\t} else {\r", "+\t\tif (milliseconds < 0) return;\r", "+\t\tindex = 0;\r", "+\t\twhile (index < timerList.length) {\r", "+\t\t\tif (timerList [index] == null) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (index == timerList.length) {\r", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "+\t\t\ttimerList = newTimerList;\r", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];\r", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);\r", "+\t\t\ttimerIds = newTimerIds;\r", "+\t\t}\r", "-\tint handle = OS.PtCreateWidget (OS.PtTimer (), timerHandle, args.length / 3, args);\r", "-\tOS.PtRealizeWidget (handle);\r", "-\tif (handle != 0) {\r", "-\t\tOS.PtAddCallback (handle, OS.Pt_CB_TIMER_ACTIVATE, timerProc, index);\r", "+\tint timerId = OS.PtCreateWidget (OS.PtTimer (), timerHandle, args.length / 3, args);\r", "+\tif (timerId != 0) {\r", "+\t\tOS.PtRealizeWidget (timerId);\r", "+\t\tOS.PtAddCallback (timerId, OS.Pt_CB_TIMER_ACTIVATE, timerProc, index);\r", "+\t\ttimerIds [index] = timerId;\r", "-\t\ttimers [index] = handle;\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70c4dddb54e2e9e6065e9830f53b7cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9dc226d0b135388db5e3074e5b43f40b5e92a9f9", "commitAfterChange": "46f3dd5336818efadcf622450220ab04d176e7d4", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "diff": ["+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);\r", "-\tif (timerIDs == null) timerIDs = new int [4];\r", "+\tif (timerIds == null) timerIds = new int [4];\r", "-\t\tif (timerList [index] == null) break;\r", "+\t\tif (timerList [index] == runnable) break;\r", "-\tif (index == timerList.length) {\r", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "-\t\ttimerList = newTimerList;\r", "-\t\tint [] newTimerIDs = new int [timerIDs.length + 4];\r", "-\t\tSystem.arraycopy (timerIDs, 0, newTimerIDs, 0, timerIDs.length);\r", "-\t\ttimerIDs = newTimerIDs;\r", "+\tif (index != timerList.length) {\r", "+\t\tOS.XtRemoveTimeOut (timerIds [index]);\r", "+\t\ttimerList [index] = null;\r", "+\t\ttimerIds [index] = 0;\r", "+\t\tif (milliseconds < 0) return;\r", "+\t} else {\r", "+\t\tif (milliseconds < 0) return;\r", "+\t\tindex = 0;\r", "+\t\twhile (index < timerList.length) {\r", "+\t\t\tif (timerList [index] == null) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (index == timerList.length) {\r", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "+\t\t\ttimerList = newTimerList;\r", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];\r", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);\r", "+\t\t\ttimerIds = newTimerIds;\r", "+\t\t}\r", "-\tint timerID = OS.XtAppAddTimeOut (xtContext, milliseconds, timerProc, index);\r", "-\tif (timerID != 0) {\r", "-\t\ttimerIDs [index] = timerID;\r", "+\tint timerId = OS.XtAppAddTimeOut (xtContext, milliseconds, timerProc, index);\r", "+\tif (timerId != 0) {\r", "+\t\ttimerIds [index] = timerId;\r"]}], "num": 22852}