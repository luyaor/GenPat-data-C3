{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a5e6ecff2a2fd21a4196a71473212fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da68773f3bf91760842a05d6f443ce2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "e9cb28cdd789082d90216aefbf144869f8874451", "commitAfterChange": "9950661a32a2c0708a5c63da008a62f5d1fbb428", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test_setTopItemLorg_eclipse_swt_widgets_TreeItem()", "signatureAfterChange": "  public void test_setTopItemLorg_eclipse_swt_widgets_TreeItem()", "diff": ["+\ttree.setSize(50,50);", "+\tshell.open();", "+\tshell.setVisible(false);", "+\t\tshell.setVisible(true);", "+\t} catch (IllegalArgumentException e) {", "+\t} finally {", "+\t\tshell.setVisible (false);", "-\tcatch (IllegalArgumentException e) {", "-\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f522e5902402e7b72ffcecf1eb8557dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "673aebf832432071bd55ea719a547581e206f776", "commitAfterChange": "680ba5db6dfec388478bf495dd25549c8eb8287a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int getLicenseInfo(GUID clsid)", "signatureAfterChange": " protected int getLicenseInfo(GUID clsid)", "diff": ["-\ttry {", "-\t\tif (unknown.QueryInterface(COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "-\t\t\treturn 0;", "-\t\t}", "-\t\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "-\t\ttry {", "-\t\t\tLICINFO licinfo = new LICINFO();", "-\t\t\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t\tint /*long*/[] pBstrKey = new int /*long*/[1];", "-\t\t\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "-\t\t\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "-\t\t\t\t\treturn pBstrKey[0];", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn 0;", "-\t\t} finally {", "-\t\t\tclassFactory.Release();", "-\t\t}", "-\t} finally {", "+\tif (unknown.QueryInterface(COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "+\t\treturn 0;", "+\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "+\tLICINFO licinfo = new LICINFO();", "+\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "+\t\tunknown.Release();\t", "+\t\tclassFactory.Release();", "+\t\treturn 0;", "+\t}", "+\tint /*long*/[] pBstrKey = new int /*long*/[1];", "+\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "+\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "+\t\t\tunknown.Release();\t", "+\t\t\tclassFactory.Release();", "+\t\t\treturn pBstrKey[0];", "+\t\t}", "+\t}", "+\tunknown.Release();\t", "+\tclassFactory.Release();", "+\treturn 0;"]}], "num": 29411}