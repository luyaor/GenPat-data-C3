{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da7ac3220e7825eeb1164d68bc2912db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9ed4cd1b59db9060e53843e8c495d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\tif (data.renderTable == 0) createRenderTable();", "-\tint renderTable = data.renderTable;", "-", "-\tchar mnemonic=0;", "-\tint tableLength = 0;", "-\tDevice device = data.device;", "-\tint[] parseTable = new int[2];", "-\tchar[] text = new char[string.length()];", "-\tstring.getChars(0, text.length, text, 0);", "-\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;", "-\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;", "-\tif ((flags & SWT.DRAW_MNEMONIC) != 0) mnemonic = stripMnemonic(text);", "-\t", "-\tString codePage = getCodePage();", "-\tbyte[] buffer = Converter.wcsToMbcs(codePage, text, true);", "-\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);", "-\tif (mnemonic != 0) {", "-\t\tbyte [] buffer1 = Converter.wcsToMbcs(codePage, new char[]{mnemonic}, true);", "-\t\tint xmStringUnderline = OS.XmStringCreate (buffer1, OS.XmFONTLIST_DEFAULT_TAG);", "-\t\tOS.XmStringDrawUnderline(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmStringUnderline);", "-\t\tOS.XmStringFree(xmStringUnderline);", "+\tif (string.length() == 0) return;", "+\tsetText(string, flags);", "+\tint xmMnemonic = data.xmMnemonic;", "+\tif (xmMnemonic != 0) {", "+\t\tOS.XmStringDrawUnderline(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);", "-\t\t\tOS.XmStringDraw(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDraw(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\t\t\tOS.XmStringDrawImage(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDrawImage(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\tOS.XmStringFree(xmString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc295a6b319b1c237c8439eb8feea4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 56, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-public Point stringExtent(String string) {", "+public Point stringExtent(String string) {\t", "-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\t/* AW", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreate(buffer, OS.XmFONTLIST_DEFAULT_TAG);", "-\tint fontList = data.fontList;", "-\tint width = OS.XmStringWidth(fontList, xmString);", "-\tint height = OS.XmStringHeight(fontList, xmString);", "-\tOS.XmStringFree(xmString);", "-\t*/", "-\ttry {", "-\t\tfocus(false, null);", "-\t\tinstallFont();", "-\t\tint width= OS.TextWidth(string, data.font.fID, data.font.fSize, data.font.fFace);", "-\t\tshort[] fontInfo= new short[4];", "-\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\t\treturn new Point(width, fontInfo[0] + fontInfo[1]);", "-\t} finally {", "-\t\tunfocus(false);", "-\t}", "+\tint length = string.length();", "+\tif (length == 0) return new Point(0, data.fontAscent + data.fontDescent);", "+\tchar[] buffer = new char[length];", "+\tstring.getChars(0, length, buffer, 0);", "+\tint ptr1 = OS.NewPtr(length * 2);", "+\tOS.memcpy(ptr1, buffer, length * 2);", "+\tOS.ATSUSetTextPointerLocation(data.layout, ptr1, 0, length, length);", "+\tOS.ATSUSetRunStyle(data.layout, data.style, 0, length);", "+\tint ptr2 = OS.NewPtr(ATSTrapezoid.sizeof);", "+\tOS.ATSUGetGlyphBounds(data.layout, 0, 0, 0, length, (short)OS.kATSUseDeviceOrigins, 1, ptr2, null);", "+\tOS.DisposePtr(ptr1);", "+\tATSTrapezoid trapezoid = new ATSTrapezoid();", "+\tOS.memcpy(trapezoid, ptr2, ATSTrapezoid.sizeof);", "+\tOS.DisposePtr(ptr2);", "+\tint width = (trapezoid.upperRight_x >> 16) - (trapezoid.upperLeft_x >> 16);", "+\tint height = (trapezoid.lowerRight_y >> 16) - (trapezoid.upperRight_y >> 16);", "+\treturn new Point(width, height);"]}], "num": 30823}