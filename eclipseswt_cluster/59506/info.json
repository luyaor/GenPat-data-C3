{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f355b68b555229fab2ce355d64c5992", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83c9d5b7f9b2bfeaf4e242635ed1a14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "564af48002efb7dde4608cffc2bddfed66929de1", "commitAfterChange": "25e834c280324b3e7770e2b3f82a7d7ca7a1f981", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (wHint != SWT.DEFAULT && wHint < 0) wHint = 0;", "-\tif (hHint != SWT.DEFAULT && hHint < 0) hHint = 0;", "-\tPoint size = computeNativeSize (handle, wHint, hHint, changed);", "-\tint border = OS.gtk_container_get_border_width (handle);", "-\tsize.x += 2 * border;", "-\tsize.y += 2 * border;", "-\treturn size;", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "+\t\tif (wHint != SWT.DEFAULT && wHint < 0) wHint = 0;", "+\t\tif (hHint != SWT.DEFAULT && hHint < 0) hHint = 0;", "+\t\tPoint size = computeNativeSize (handle, wHint, hHint, changed);", "+\t\tint border = OS.gtk_container_get_border_width (handle);", "+\t\tsize.x += 2 * border;", "+\t\tsize.y += 2 * border;", "+\t\treturn size;", "+\t} else {", "+\t\tint height = 0, width = 0;", "+\t\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\t\tif (itemCount > 0) {", "+\t\t\t\theight += spacing;", "+\t\t\t\tGC gc = new GC (this);", "+\t\t\t\tfor (int i = 0; i < itemCount; i++) {", "+\t\t\t\t\tExpandItem item = items [i];", "+\t\t\t\t\theight += item.getHeaderHeight ();", "+\t\t\t\t\tif (item.expanded) height += item.height;", "+\t\t\t\t\theight += spacing;", "+\t\t\t\t\twidth = Math.max (width, item.getPreferredWidth (gc));", "+\t\t\t\t}", "+\t\t\t\tgc.dispose ();", "+\t\t\t}", "+\t\t}", "+\t\tif (width == 0) width = DEFAULT_WIDTH;", "+\t\tif (height == 0) height = DEFAULT_HEIGHT;", "+\t\tif (wHint != SWT.DEFAULT) width = wHint;", "+\t\tif (hHint != SWT.DEFAULT) height = hHint;", "+\t\treturn new Point (width, height);\t", "+\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11fdccb058a4698888dff7a8a983d40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "54942bc8122ab5be263e29cd3c306c3f16f22421", "commitAfterChange": "b593285f9ac777062f9ad7e57ee6b21c57701934", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 64, height = 64;", "+\tint width = 0, height = 0;", "+\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\tif ((style & SWT.CALENDAR) != 0) {", "+\t\t\t// TODO", "+\t\t\twidth = 100;", "+\t\t\theight = 100;", "+\t\t} else {", "+\t\t\t// TODO: get the height of the current font", "+\t\t\theight = 20;", "+\t\t\t// TODO: max with the height of the up/down buttons", "+\t\t\tint upDownHeight = 24;", "+\t\t\theight = Math.max (height, upDownHeight);", "+\t\t\t", "+\t\t\t// TODO: determine the stringWidth of date or time string in current font (take code from GC)", "+\t\t\tString string = \"00/00/0000\";", "+\t\t\tif ((style & SWT.TIME) != 0) string = \"00:00:00 AM\";", "+\t\t\tGC gc = new GC(this);", "+\t\t\twidth = gc.stringExtent(string).x;", "+\t\t\tgc.dispose();", "+\t\t\t// TODO: max with the height of the up/down buttons (maybe plus some margin?)", "+\t\t\tint upDownWidth = 20;", "+\t\t\twidth += upDownWidth + 5; // MARGIN", "+\t\t}", "+\t}", "+\tif (width == 0) width = DEFAULT_WIDTH;", "+\tif (height == 0) height = DEFAULT_HEIGHT;", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tint border = getBorderWidth ();", "+\twidth += border * 2; height += border * 2;"]}], "num": 59506}