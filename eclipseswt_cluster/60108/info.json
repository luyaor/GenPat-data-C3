{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3427fd2a1008a98764994a1469600f80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c84f542d5183b0b36ee9fc97223d04d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tstatic int atkTable_get_n_rows (int atkObject)", "signatureAfterChange": "  \tstatic int atkTable_get_n_rows (int atkObject)", "diff": ["-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.count = (int)/*64*/parentResult;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getRowCount(event);", "-\t\t\t\tparentResult = event.count;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.count = (int)/*64*/parentResult;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getRowCount(event);", "+\t\t\t\t\tparentResult = event.count;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae1e70e2c75b4edb88e30605a2012f59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tstatic int atkTable_get_n_columns (int atkObject)", "signatureAfterChange": "  \tstatic int atkTable_get_n_columns (int atkObject)", "diff": ["-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.count = (int)/*64*/parentResult;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getColumnCount(event);", "-\t\t\t\tparentResult = event.count;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.count = (int)/*64*/parentResult;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getColumnCount(event);", "+\t\t\t\t\tparentResult = event.count;", "+\t\t\t\t}"]}], "num": 60108}