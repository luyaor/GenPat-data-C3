{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e88674840bfb135d8b1305ed5eb9f95", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aaa78fb2f9eeec5174ad4047f9d0ae5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "5f543edb783691ac010cc1801defbf6238ace7aa", "commitAfterChange": "ffcd121fb7431ca67e0c96c3686d0eb26efd2568", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createAlpha ()", "signatureAfterChange": "  void createAlpha ()", "diff": ["-\t\tint /*long*/ dataFormat = imageRep.bitmapFormat();", "-\t\tboolean alphaFirst = (dataFormat & OS.NSAlphaFirstBitmapFormat) != 0;", "-", "-\t\t\tif (alphaFirst) {", "-\t\t\t\tfor (int i=0; i<dataSize; i+=4) {", "-\t\t\t\t\tint pixel = ((srcData[i+1] & 0xFF) << 16) | ((srcData[i+2] & 0xFF) << 8) | (srcData[i+3] & 0xFF);", "-\t\t\t\t\tsrcData[i] = (byte)(pixel == transparentPixel ? 0 : 0xFF); ", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tfor (int i=0; i<dataSize; i+=4) {", "-\t\t\t\t\tint pixel = ((srcData[i] & 0xFF) << 16) | ((srcData[i+1] & 0xFF) << 8) | (srcData[i+2] & 0xFF);", "-\t\t\t\t\tsrcData[i + 3] = (byte)(pixel == transparentPixel ? 0 : 0xFF); ", "-\t\t\t\t}\t\t\t\t", "+\t\t\tfor (int i=0; i<dataSize; i+=4) {", "+\t\t\t\tint pixel = ((srcData[i+1] & 0xFF) << 16) | ((srcData[i+2] & 0xFF) << 8) | (srcData[i+3] & 0xFF);", "+\t\t\t\tsrcData[i] = (byte)(pixel == transparentPixel ? 0 : 0xFF); ", "-\t\t\tint startByte = alphaFirst ? 0 : 3;", "-\t\t\tfor (int i = startByte; i<dataSize; i+=4) {", "+\t\t\tfor (int i=0; i<dataSize; i+=4) {", "-\t\t\tint startByte = alphaFirst ? 0 : 3;", "-\t\t\tint offset = startByte, alphaOffset = 0;", "+\t\t\tint offset = 0, alphaOffset = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb414cd01db0c5476ed6d1134a34c51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "1571b21a3b1e60f5ff0c7a9bc19396983f515d5e", "commitAfterChange": "d58fca053bfd8af0ab62017d6a7317d79cadaca3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void init(Device device, ImageData image)", "signatureAfterChange": "  void init(Device device, ImageData image)", "diff": ["+\tif (!(((image.depth == 1 || image.depth == 2 || image.depth == 4 || image.depth == 8) && !palette.isDirect) ||", "+\t\t((image.depth == 8) || (image.depth == 16 || image.depth == 24 || image.depth == 32) && palette.isDirect)))", "+\t\t\tSWT.error (SWT.ERROR_UNSUPPORTED_DEPTH);", "-\tif (image.getTransparencyType() == SWT.TRANSPARENCY_MASK || image.transparentPixel != -1) {", "+\tboolean isIcon = image.getTransparencyType() == SWT.TRANSPARENCY_MASK;", "+\tif (isIcon || image.transparentPixel != -1) {", "-\t\tImageData maskImage = image.getTransparencyMask();", "-\t\tbyte[] maskData = maskImage.data;", "-\t\tfor (int i = 0; i < maskData.length; i++) {", "-\t\t\tbyte s = maskData[i];", "-\t\t\tmaskData[i] = (byte)(((s & 0x80) >> 7) | ((s & 0x40) >> 5) |", "-\t\t\t\t((s & 0x20) >> 3) | ((s & 0x10) >> 1) | ((s & 0x08) << 1) |", "-\t\t\t\t((s & 0x04) << 3) | ((s & 0x02) << 5) |\t((s & 0x01) << 7));", "-\t\t}", "-\t\tint /*long*/ mask = OS.gdk_bitmap_create_from_data(0, maskData, maskImage.bytesPerLine * 8, height);", "+\t\tint /*long*/ mask = createMask(image, isIcon);", "-\t\tif (image.getTransparencyType() == SWT.TRANSPARENCY_MASK) {", "+\t\tif (isIcon) {"]}], "num": 35390}