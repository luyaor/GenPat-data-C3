{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce85d7498cdff5000172ffa070ac08cf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b44290e7825e63881b792754c4f7da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ReflectField.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ReflectField(ReflectClass declaringClass, Field field, String source, CompilationUnit unit)", "signatureAfterChange": " \t public ReflectField(ReflectClass declaringClass, Field field, String source, CompilationUnit unit)", "diff": ["-\tClass clazz = field.getType();", "+\tClass<?> clazz = field.getType();", "-\t\tClass result = null;", "+\t\tClass<?> result = null;", "-\t\t\tfor (Iterator iterator = node.fragments().iterator(); iterator.hasNext();) {", "+\t\t\tfor (Iterator<?> iterator = node.fragments().iterator(); iterator.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235b7a4324a7f3385002fac3b1b6b6a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "commitAfterChange": "fc949910d259b2f09c2a6d209f57255840ca1162", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  boolean isUnique(Node method, ArrayList methods)", "signatureAfterChange": "  boolean isUnique(Node method, ArrayList<?> methods)", "diff": ["-boolean isUnique(Node method, ArrayList methods) {", "+boolean isUnique(Node method, ArrayList<?> methods) {", "-\tfor (Iterator iterator = methods.iterator(); iterator.hasNext();) {", "+\tfor (Iterator<?> iterator = methods.iterator(); iterator.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d310c22aab4061b2a1aa55eed04f60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ASTField.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ASTField(ASTClass declaringClass, String source, FieldDeclaration field, VariableDeclarationFragment fragment)", "signatureAfterChange": " \t public ASTField(ASTClass declaringClass, String source, FieldDeclaration field, VariableDeclarationFragment fragment)", "diff": ["-\tList tags = null;", "+\tList<TagElement> tags = null;", "-\t\tfor (Iterator iterator = tags.iterator(); iterator.hasNext();) {", "+\t\tfor (Iterator<TagElement> iterator = tags.iterator(); iterator.hasNext();) {"]}], "num": 61234}