{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0992c7510d175f10a21375d104563448", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9765d84b5d4a2ef5f9c99fdda7188ac1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "533b32a9baa75e76ca7b7877ee9b9581fe18792e", "commitAfterChange": "9fedd0db5879e16f4217a567123278513c1d3514", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r Point layout (int width, boolean resize)", "signatureAfterChange": "\r Point layout (int widthHint)", "diff": ["-Point layout (int width, boolean resize) {\r", "-\tint y = ROW_SPACING, maxWidth = 0;\r", "+Point layout (int widthHint) {\r", "+\tboolean resize = !(widthHint == SWT.DEFAULT);\r", "+\tint y = 0, maxWidth = 0;\r", "+\t\ty += ROW_SPACING;\r", "-\t\t}\t\t\r", "+\t\t}\r", "-\t\tif (resize) adjustItemWidths(row, width);\r", "-\t\ty += ROW_SPACING + rowHeight;\t\r", "+\t\tif (resize) adjustItemWidths(row, widthHint);\r", "+\t\ty += rowHeight;\t\r", "-\treturn new Point(maxWidth, y);\r", "+\tint borders = getBorderWidth() * 2;\r", "+\treturn new Point(maxWidth + borders, y + borders);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0f840cc75aba526d838d7835c953b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ab64db857c3e019ef0ba09e496def137cd358a1e", "commitAfterChange": "949f5828837bef6a22bb8f970c8fe18a0efa5848", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  boolean insertText (int id, int sel, int string)", "signatureAfterChange": "  boolean insertText (int id, int sel, int string)", "diff": ["-\t\tif (!s.keyInputHappened && nsEvent != null && nsEvent.type () == OS.NSKeyDown) {", "-\t\t\tNSString str = new NSString (string);", "-\t\t\tif (str.isKindOfClass (OS.objc_getClass (\"NSAttributedString\"))) {", "-\t\t\t\tstr = new NSAttributedString (string).string ();", "-\t\t\t}", "-\t\t\tint length = (int)/*64*/str.length ();", "-\t\t\tchar[] buffer = new char [length];", "-\t\t\tstr.getCharacters(buffer);", "-\t\t\tfor (int i = 0; i < buffer.length; i++) {", "-\t\t\t\ts.keyInputHappened = true;", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tif (i == 0) setKeyState (event, SWT.KeyDown, nsEvent);", "-\t\t\t\tevent.character = buffer [i];", "-\t\t\t\tif (!sendKeyEvent (SWT.KeyDown, event)) return false;", "+\t\tif (nsEvent != null) {", "+\t\t\tint type = nsEvent.type ();", "+\t\t\tif ((!s.keyInputHappened && type == OS.NSKeyDown) || type == OS.NSSystemDefined) {", "+\t\t\t\tNSString str = new NSString (string);", "+\t\t\t\tif (str.isKindOfClass (OS.objc_getClass (\"NSAttributedString\"))) {", "+\t\t\t\t\tstr = new NSAttributedString (string).string ();", "+\t\t\t\t}", "+\t\t\t\tint length = (int)/*64*/str.length ();", "+\t\t\t\tchar[] buffer = new char [length];", "+\t\t\t\tstr.getCharacters(buffer);", "+\t\t\t\tfor (int i = 0; i < buffer.length; i++) {", "+\t\t\t\t\ts.keyInputHappened = true;", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tif (i == 0 && type == OS.NSKeyDown) setKeyState (event, SWT.KeyDown, nsEvent);", "+\t\t\t\t\tevent.character = buffer [i];", "+\t\t\t\t\tif (!sendKeyEvent (SWT.KeyDown, event)) return false;", "+\t\t\t\t}"]}], "num": 3532}