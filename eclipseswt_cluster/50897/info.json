{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c54c50124f4125d497b5805038bc166b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81811a9478f920d34de0dc37b0f766f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tint atkSelection_ref_selection (int index)", "signatureAfterChange": "  \tint atkSelection_ref_selection (int index)", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getSelection (event);", "-\t\t\t} ", "-\t\t\tAccessibleObject accObj = getChildByID (event.childID);", "-\t\t\tif (accObj != null) {", "-\t\t\t\tOS.g_object_ref (accObj.handle);\t", "-\t\t\t\treturn accObj.handle;", "-\t\t\t}", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\t\tint superType = OS.g_type_class_peek (parentType);", "+\t\t\tint superType = OS.g_type_interface_peek_parent (ATK.ATK_SELECTION_GET_IFACE (handle));", "-\t\t\t\treturn OS.call (selectionIface.ref_selection, handle, index);", "+\t\t\t\tparentResult = OS.call (selectionIface.ref_selection, handle, index);", "-\t\treturn 0;", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t\t", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getSelection (event);", "+\t\t} ", "+\t\tAccessibleObject accObj = getChildByID (event.childID);", "+\t\tif (accObj != null) {", "+\t\t\tif (parentResult > 0) OS.g_object_unref (parentResult);", "+\t\t\tOS.g_object_ref (accObj.handle);\t", "+\t\t\treturn accObj.handle;", "+\t\t}", "+\t\treturn parentResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4652cef87bc134411b42cc1da5d8090", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tint atkSelection_is_child_selected (int index)", "signatureAfterChange": "  \tint atkSelection_is_child_selected (int index)", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getSelection (event);", "-\t\t\t}", "-\t\t\tAccessibleObject accessibleObject = getChildByID (event.childID);", "-\t\t\tif (accessibleObject != null) { ", "-\t\t\t\treturn accessibleObject.index == index ? 1 : 0;", "-\t\t\t}", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\t\tint superType = OS.g_type_class_peek (parentType);", "+\t\t\tint superType = OS.g_type_interface_peek_parent (ATK.ATK_SELECTION_GET_IFACE (handle));", "-\t\t\t\treturn OS.call (selectionIface.is_child_selected, handle, index);", "+\t\t\t\tparentResult = OS.call (selectionIface.is_child_selected, handle, index);", "-\t\treturn 0;", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t\t", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getSelection (event);", "+\t\t}", "+\t\tAccessibleObject accessibleObject = getChildByID (event.childID);", "+\t\tif (accessibleObject != null) { ", "+\t\t\treturn accessibleObject.index == index ? 1 : 0;", "+\t\t}", "+\t\treturn parentResult;"]}], "num": 50897}