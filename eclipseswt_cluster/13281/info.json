{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0df8823cd8cd6ea0e8cfe702b9e18202", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2695d67a72fc1a34e4281b4e8225855", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "e964a36233d5004c1acb324f0083152fd3027185", "commitAfterChange": "20bf6d51528a26e60efa82d957330a1a29c9c9e5", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public void setAccelerator (int accelerator)", "signatureAfterChange": "\r public void setAccelerator (int accelerator)", "diff": ["+\t\t/*\r", "+\t\t* Feature in Motif.  Motif does not activate an accelerator\r", "+\t\t* when the CapsLoc, NumLoc and NumLock+CapsLoc keys are pressed.\r", "+\t\t* In order to activate accelerators when these keys are pressed,\r", "+\t\t* it is necessary to look for all of these key sequences.\r", "+\t\t*/\r", "-\t\tStringBuffer allKeys = new StringBuffer (key);\r", "-\t\tallKeys.append (\",Lock \");\r", "-\t\tallKeys.append (key);\r", "-\t\tallKeys.append (\",Mod2 \");\r", "-\t\tallKeys.append (key);\r", "-\t\tallKeys.append (\",Lock Mod2 \");\r", "-\t\tallKeys.append (key);\r", "+\t\tString allKeys = key + \",Lock \" + key + \",Mod2 \" + key + \",Lock Mod2 \" + key;\r", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, allKeys.toString (), true);\t\t\r", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, allKeys, true);\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d63f2dac9b96bd9135fe56d6f8828ec6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void setControl (Control control)", "signatureAfterChange": "\r public void setControl (Control control)", "diff": ["-\t\tPoint controlSize = control.getSize ();\r", "+\t\tint controlY = ((short) argList[3]) + MARGIN_HEIGHT;\r", "-\t\t\t((short) argList[3]) + MARGIN_HEIGHT, \r", "-\t\t\tcontrolSize.x, \r", "-\t\t\tcontrolSize.y);\r", "+\t\t\tcontrolY, \r", "+\t\t\targList [5] - MINIMUM_WIDTH - MARGIN_WIDTH, \r", "+\t\t\targList [7] - (2 * MARGIN_HEIGHT));\r", "+\t\t\t\r", "-\tPoint size = computeSize(SWT.DEFAULT, SWT.DEFAULT);\r", "-\tsetSize(size);\r", "-\tsetPreferredSize(size);\r"]}], "num": 13281}