{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "508c9bf4ccfa356c89303ad6097374f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14588c62e1c7bba42a21f87517912db9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f672efc1ab66fde135090a77b8f00d2e076c2f62", "commitAfterChange": "047551711731234f55bfa1e053304f3a7d2a17a6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public Point getSelection ()", "signatureAfterChange": " public Point getSelection ()", "diff": ["-\t\t\treturn new Point(str.length (), str.length ());", "+\t\t\treturn new Point((int)/*64*/str.length (), (int)/*64*/str.length ());", "-\t\treturn new Point (selectionRange.location, selectionRange.location + selectionRange.length);", "+\t\treturn new Point ((int)/*64*/selectionRange.location, (int)/*64*/(selectionRange.location + selectionRange.length));", "-\t\treturn new Point (range.location, range.location + range.length);", "+\t\treturn new Point ((int)/*64*/range.location, (int)/*64*/(range.location + range.length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811796e6543a04ec2959e340613ff5d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "32bbc2d3fc6bfe8e8fc34078d362966521e4e07a", "commitAfterChange": "2aff52873acfa10a7da24f7c0214e9271f5321d0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\tbyte[] srcData = new byte[dataSize];", "-\t\tbyte imageData[] = new byte[dataSize];", "+\t\tbyte[] srcData = new byte[(int)/*64*/dataSize];", "+\t\tbyte imageData[] = new byte[(int)/*64*/dataSize];", "-\t\t\tint bytesPerPlane = imageRep.bytesPerPlane();", "-\t\t\tint numPlanes = imageRep.numberOfPlanes();", "+\t\t\tint /*long*/ bytesPerPlane = imageRep.bytesPerPlane();", "+\t\t\tint /*long*/ numPlanes = imageRep.numberOfPlanes();", "-\t\t\tint nativeDataPlanes[] = new int[5];", "+\t\t\tint /*long*/ nativeDataPlanes[] = new int /*long*/ [5];", "-\t\t\tbyte dataPlanes[][] = new byte[numPlanes][bytesPerPlane];", "+\t\t\tbyte dataPlanes[][] = new byte[(int)/*64*/numPlanes][(int)/*64*/bytesPerPlane];", "-\t\t\tint colorComponents = OS.NSNumberOfColorComponents(colorSpace.id);", "+\t\t\tint /*long*/ colorComponents = OS.NSNumberOfColorComponents(colorSpace.id);", "-\t\tint dataFormat = imageRep.bitmapFormat();", "+\t\tint /*long*/ dataFormat = imageRep.bitmapFormat();", "-\t\tImageData data = new ImageData(width, height, (int)/*64*/bpp, palette, 4, srcData);", "+\t\tImageData data = new ImageData((int)/*64*/width, (int)/*64*/height, (int)/*64*/bpp, palette, 4, srcData);", "-\t\t\tint maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "-\t\t\tbyte[] maskData = new byte[height * maskBpl];", "+\t\t\tint /*long*/ maskBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\tbyte[] maskData = new byte[(int)/*64*/(height * maskBpl)];"]}], "num": 26070}