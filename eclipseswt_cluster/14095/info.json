{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d0862076e3dd378d95127855e41d117", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34e7b9e9b0ae3fc01f82bd2d0c432e69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "21188424311849a674f5f02c37376b7dd4a8599c", "commitAfterChange": "5a1b6abfc4ae54bd795a3bc2ffee1a1f4236e55c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " void show(int effect, int x, int y)", "signatureAfterChange": "  void show(int effect, int x, int y)", "diff": ["-void show(int effect, int x, int y) {", "-\teffect = checkEffect(effect);", "-\tTreeItem item = findItem(x, y);", "-\tif (item == null) effect = DND.FEEDBACK_NONE;", "-\tscrollHover(effect, item, x, y);", "-\texpandHover(effect, item, x, y);", "-\tsetDragUnderEffect(effect, item);", "-\tcurrentEffect = effect;", "-}", "+", "+void show(int effect, int x, int y) {", "+\teffect = checkEffect(effect);", "+\tint /*long*/ handle = tree.handle;", "+\tint clientX = coordinates.x - tree.getBorderWidth ();", "+\tint clientY = coordinates.y - tree.getHeaderHeight ();", "+\tOS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null);", "+\tint index = -1;", "+\tif (path[0] != 0) {", "+\t\tint /*long*/ indices = OS.gtk_tree_path_get_indices(path[0]);", "+\t\tif (indices != 0) {\t", "+\t\t\tint depth = OS.gtk_tree_path_get_depth(path[0]);", "+\t\t\tint[] temp = new int[depth];", "+\t\t\tOS.memmove (temp, indices, temp.length * 4);", "+\t\t\tindex = temp[temp.length - 1];", "+\t\t}", "+\t}", "+\t\tscrollIndex = -1;", "+\t} else {", "+\t\tif (index != -1 && scrollIndex == index && scrollBeginTime != 0) {", "+\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "+\t\t\t\tGdkRectangle cellRect = new GdkRectangle ();", "+\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path[0], 0, cellRect);", "+\t\t\t\tif (cellRect.y < cellRect.height) {", "+\t\t\t\t\tint[] tx = new int[1], ty = new int[1];", "+\t\t\t\t\tOS.gtk_tree_view_widget_to_tree_coords(handle, cellRect.x, cellRect.y - cellRect.height, tx, ty);", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "+\t\t\t\t} else {", "+\t\t\t\t\t//scroll down", "+\t\t\t\t\tOS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY + cellRect.height, path, null, null, null);", "+\t\t\t\t\tif (path[0] != 0) {", "+\t\t\t\t\t\tOS.gtk_tree_view_scroll_to_cell(handle, path[0], 0, false, 0, 0);", "+\t\t\t\t\t\tOS.gtk_tree_path_free(path[0]);", "+\t\t\t\t\t\tpath[0] = 0;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null);\t", "+\t\t\t\t}", "+\t\t\t\tscrollBeginTime = 0;", "+\t\t\t\tscrollIndex = -1;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "+\t\t\tscrollIndex = index;", "+\t\texpandIndex = -1;", "+\t} else {", "+\t\tif (index != -1 && expandIndex == index && expandBeginTime != 0) {", "+\t\t\tif (System.currentTimeMillis() >= expandBeginTime) {", "+\t\t\t\tOS.gtk_tree_view_expand_row (handle, path[0], false);", "+\t\t\t\texpandBeginTime = 0;", "+\t\t\t\texpandIndex = -1;", "+\t\t\t}", "+\t\t} else {", "+\t\t\texpandBeginTime = System.currentTimeMillis() + EXPAND_HYSTERESIS;", "+\t\t\texpandIndex = index;", "+\tif (path[0] != 0) {", "+\t\tint position = -1;", "+\t\tif ((effect & DND.FEEDBACK_SELECT) != 0) position = OS.GTK_TREE_VIEW_DROP_INTO_OR_BEFORE;", "+\t\tif ((effect & DND.FEEDBACK_INSERT_BEFORE) != 0) position = OS.GTK_TREE_VIEW_DROP_BEFORE;", "+\t\tif ((effect & DND.FEEDBACK_INSERT_AFTER) != 0) position = OS.GTK_TREE_VIEW_DROP_AFTER;\t\t", "+\t\tif (position != -1) {", "+\t\t\tOS.gtk_tree_view_set_drag_dest_row(handle, path[0], position);", "+\t\t} else {", "+\t\t\tOS.gtk_tree_view_unset_rows_drag_dest(handle);", "+\t\t}", "+\t} else {", "+\t\tOS.gtk_tree_view_unset_rows_drag_dest(handle);", "+\t}", "+\t", "+\tif (path[0] != 0) OS.gtk_tree_path_free (path [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf7fe2b35f995ee227d1054b821b143", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/TableDragUnderEffect.java", "commitBeforeChange": "75c6f4055f9b030beda62e4299778538f4105f47", "commitAfterChange": "4a21ef48e0ba09b2b6e3d5671e2e546d596b8047", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " void show(int effect, int x, int y)", "signatureAfterChange": "  void show(int effect, int x, int y)", "diff": ["-void show(int effect, int x, int y) {", "-\tTableItem item = findItem(x, y);", "-\tif (item == null) effect = DND.FEEDBACK_NONE;", "-\tscrollHover(effect, item, x, y);", "-\tsetDragUnderEffect(effect, item);", "-\tcurrentEffect = effect;", "+", "+void show(int effect, int x, int y) {", "+\teffect = checkEffect(effect);", "+\tint handle = table.handle;", "+\tint clientX = coordinates.x - table.getBorderWidth ();", "+\tint clientY = coordinates.y - table.getHeaderHeight ();", "+\tOS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null);", "+\tint index = -1;", "+\tif (path[0] != 0) {", "+\t\tint /*long*/ indices = OS.gtk_tree_path_get_indices (path[0]);", "+\t\tif (indices != 0) {", "+\t\t\tint[] temp = new int[1];", "+\t\t\tOS.memmove (temp, indices, 4);", "+\t\t\tindex = temp[0];", "+\t\t}", "+\t}", "+\t\tscrollIndex = -1;", "+\t} else {", "+\t\tif (index != -1 && scrollIndex == index && scrollBeginTime != 0) {", "+\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "+\t\t\t\tif (clientY < table.getItemHeight()) {", "+\t\t\t\t\tOS.gtk_tree_path_prev(path[0]);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.gtk_tree_path_next(path[0]);", "+\t\t\t\t}", "+\t\t\t\tif (path[0] != 0) {", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_cell(handle, path[0], 0, false, 0, 0);", "+\t\t\t\t\tOS.gtk_tree_path_free(path[0]);", "+\t\t\t\t\tpath[0] = 0;", "+\t\t\t\t\tOS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null);", "+\t\t\t\t}", "+\t\t\t\tscrollBeginTime = 0;", "+\t\t\t\tscrollIndex = -1;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "+\t\t\tscrollIndex = index;", "+\tif (path[0] != 0) {", "+\t\tint position = 0;", "+\t\tif ((effect & DND.FEEDBACK_SELECT) != 0) position = OS.GTK_TREE_VIEW_DROP_INTO_OR_BEFORE;", "+\t\t//if ((effect & DND.FEEDBACK_INSERT_BEFORE) != 0) position = OS.GTK_TREE_VIEW_DROP_BEFORE;", "+\t\t//if ((effect & DND.FEEDBACK_INSERT_AFTER) != 0) position = OS.GTK_TREE_VIEW_DROP_AFTER;", "+\t\tif (position != 0) {", "+\t\t\tOS.gtk_tree_view_set_drag_dest_row(handle, path[0], OS.GTK_TREE_VIEW_DROP_INTO_OR_BEFORE);", "+\t\t} else {", "+\t\t\tOS.gtk_tree_view_unset_rows_drag_dest(handle);", "+\t\t}", "+\t} else {", "+\t\tOS.gtk_tree_view_unset_rows_drag_dest(handle);", "+\tif (path[0] != 0) OS.gtk_tree_path_free (path [0]);"]}], "num": 14095}