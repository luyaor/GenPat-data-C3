{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4786f4d5e10678649172aa18793f2d2a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2392079b649d65bb1f7fa78cfea10bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void test_setBackgroundLorg_eclipse_swt_graphics_Color()", "signatureAfterChange": "  public void test_setBackgroundLorg_eclipse_swt_graphics_Color()", "diff": ["-\twarnUnimpl(\"Test test_setBackgroundLorg_eclipse_swt_graphics_Color not written\");", "+\tImage image = new Image(display, 10, 10);", "+\tColor color = new Color(display, 255, 255, 255);", "+", "+\ttry {", "+\t\timage.setBackground(null);", "+\t\timage.dispose();", "+\t\tcolor.dispose();", "+\t\tfail(\"No exception thrown for color == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t\timage.dispose();", "+\t\tcolor.dispose();", "+\t}", "+", "+\timage = new Image(display, 10, 10);", "+\tcolor = new Color(display, 255, 255, 255);", "+\tcolor.dispose();", "+\ttry {", "+\t\timage.setBackground(color);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for disposed color\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\timage.dispose();", "+\t\tcolor = new Color(display, 255, 255, 255);", "+\t\timage.setBackground(color);", "+\t\tcolor.dispose();", "+\t\tfail(\"No exception thrown for disposed image\");", "+\t} catch (SWTException e) {", "+\t}", "+\t", "+\t// this image does not have a transparent pixel by default so setBackground has not effect", "+\timage = new Image(display, 10, 10);", "+\timage.setBackground(display.getSystemColor(SWT.COLOR_GREEN));", "+\tcolor = image.getBackground();", "+\timage.dispose();", "+\tassertNull(\":a:\", color);", "+\t", "+\t// simulate a transparent pixel", "+\tImageData imageData = new ImageData(10, 10, 2, new PaletteData(new RGB[] {new RGB(0, 0, 0), new RGB(255, 255, 255), new RGB(50, 100, 150)}));", "+\timageData.transparentPixel = 0;", "+\timage = new Image(display, imageData);", "+\timage.setBackground(display.getSystemColor(SWT.COLOR_GREEN));", "+\tcolor = image.getBackground();", "+\timage.dispose();", "+\tassertEquals(\":b:\", display.getSystemColor(SWT.COLOR_GREEN), color);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7c2d049341c312974a977d2691602b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r private void initScrollButtons(Color foreground, Color background)", "signatureAfterChange": "\r private void initScrollBarImages()", "diff": ["-}\r", "-private void initScrollButtons(Color foreground, Color background) {\r", "-\r", "-\tscrollBar.setBackground(background);\r", "-\tDisplay display = getDisplay();\r", "-\tColor shadow = display.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);\r", "-\tif (arrowLeftImage != null) {\r", "-\t\tarrowLeftImage.dispose();\r", "-\t\tarrowLeftImage = null;\r", "+}\r", "+private void initScrollBarImages() {\r", "+\tif (arrowLeftImage != null) return;\r", "+\r", "+\ttry {\r", "+\t\tDisplay display = getDisplay();\r", "+\t\tImage image = new Image(display, CTabFolder.class.getResourceAsStream(\"leftDisabled.gif\"));\r", "+\t\tImageData source = image.getImageData();\r", "+\t\tImageData mask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowLeftDisabledImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"left.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowLeftImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"rightDisabled.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowRightDisabledImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"right.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowRightImage = new Image(display, source, mask);\r", "+\t} catch (Error e) {\r", "+\t\tif (arrowLeftDisabledImage != null){\r", "+\t\t\tarrowLeftDisabledImage.dispose();\r", "+\t\t\tarrowLeftDisabledImage = null;\r", "+\t\t}\r", "+\t\tif (arrowLeftImage != null){\r", "+\t\t\tarrowLeftImage.dispose();\r", "+\t\t\tarrowLeftImage = null;\r", "+\t\t}\r", "+\t\tif (arrowRightDisabledImage != null){\r", "+\t\t\tarrowRightDisabledImage.dispose();\r", "+\t\t\tarrowRightDisabledImage = null;\r", "+\t\t}\r", "+\t\tif (arrowRightImage != null){\r", "+\t\t\tarrowRightImage.dispose();\r", "+\t\t\tarrowRightImage = null;\r", "+\t\t}\r", "+\t\treturn;\r", "-\tif (arrowLeftDisabledImage != null) {\r", "-\t\tarrowLeftDisabledImage.dispose();\r", "-\t\tarrowLeftDisabledImage = null;\r", "-\t}\r", "-\tarrowLeftImage = drawArrowImage(foreground, background, true);\r", "-\tarrowLeftDisabledImage = drawArrowImage(shadow, background, true);\r", "-\tscrollLeft.setImage(arrowLeftImage);\r", "+\t\r", "-\tscrollLeft.setHotImage(arrowLeftImage);\r", "+\tscrollLeft.setImage(arrowLeftImage);\r", "-\tif (arrowRightImage != null) {\r", "-\t\tarrowRightImage.dispose();\r", "-\t\tarrowRightImage = null;\r", "-\t}\r", "-\tif (arrowRightDisabledImage != null) {\r", "-\t\tarrowRightDisabledImage.dispose();\r", "-\t\tarrowRightDisabledImage = null;\r", "-\t}\r", "-\tarrowRightImage = drawArrowImage(foreground, background, false);\t\t\r", "-\tarrowRightDisabledImage = drawArrowImage(shadow, background, false);\r", "-\tscrollRight.setImage(arrowRightImage);\r", "-\tscrollRight.setHotImage(arrowRightImage);\r", "+\tscrollRight.setImage(arrowRightImage);\r", "+\t\r", "+\tint height = getTabHeight();\r", "+\tPoint size = scrollBar.computeSize(SWT.DEFAULT, height);\r", "+\tscrollBar.setSize(size);\r"]}], "num": 36060}