{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b46497f3058c0a5f472fea75a095d68f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3055dfed684c6ecf18611e67c0680c53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "36fd90c1a5ecca29d6f913959db12e7bfc8d0760", "commitAfterChange": "1cb8c010aa09ed8a59c0b1c064b9e9a57a18470b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int traversalCode (int key, NSEvent theEvent)", "signatureAfterChange": "  int traversalCode (int key, NSEvent theEvent)", "diff": ["-//\t\tif (key == 48 /* Tab */ && theEvent != 0) {", "-//\t\t\tint [] modifiers = new int [1];", "-//\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-//\t\t\tboolean next = (modifiers [0] & OS.shiftKey) == 0;", "-//\t\t\tif (next && (modifiers [0] & OS.controlKey) == 0) {", "-//\t\t\t\tbits &= ~(SWT.TRAVERSE_TAB_NEXT | SWT.TRAVERSE_TAB_PREVIOUS);", "-//\t\t\t}", "-//\t\t}", "+\t\tif (key == 48 /* Tab */ && theEvent != null) {", "+\t\t\tint modifiers = theEvent.modifierFlags ();", "+\t\t\tboolean next = (modifiers & OS.NSShiftKeyMask) == 0;", "+\t\t\tif (next && (modifiers & OS.NSControlKeyMask) == 0) {", "+\t\t\t\tbits &= ~(SWT.TRAVERSE_TAB_NEXT | SWT.TRAVERSE_TAB_PREVIOUS);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91196562357e9c2a6766ce1382c62286", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4356774732669efb538fbe79a04cc9732f4a3bcc", "commitAfterChange": "e291ba558cbbdd0051d4de729d547bbe9c2d503f", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "  boolean translateTraversal (int e)", "signatureAfterChange": "  boolean translateTraversal (int e)", "diff": ["-\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice(e);", "-\t\t\tint modifiers = OS.KeyboardDevice_Modifiers(keyboardDevice);", "-\t\t\tOS.GCHandle_Free(keyboardDevice);", "+\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice (e);", "+\t\t\tint modifiers = OS.KeyboardDevice_Modifiers (keyboardDevice);", "+\t\t\tOS.GCHandle_Free (keyboardDevice);", "-\t\t\t//if ((keyEvent.state & OS.GDK_CONTROL_MASK) == 0) return false;", "+\t\t\tint keyboardDevice = OS.KeyboardEventArgs_KeyboardDevice (e);", "+\t\t\tint modifiers = OS.KeyboardDevice_Modifiers (keyboardDevice);", "+\t\t\tOS.GCHandle_Free (keyboardDevice);", "+\t\t\tif ((modifiers & OS.ModifierKeys_Control) == 0) return false;"]}], "num": 14167}