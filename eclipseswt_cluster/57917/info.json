{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e2be7929a7b4e01b9ce6f5cf53c7cdd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1759aaedd7e0e6e68ab76902dd5bd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "0c70531045e63d8db26c97b283ab23cece057478", "commitAfterChange": "7ad1a4d8dc7d47e7e5827ed95dd254eb9924c06c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem)", "signatureAfterChange": " int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem)", "diff": ["-\t\tNSTableColumn column = parent.columnCount == 0 ? parent.firstColumn : parent.columns[0].nsColumn;", "-\t\tint rowIndex = (int)/*64*/outlineView.rowForItem (handle);", "-\t\tint nsColumnIndex = (int)/*64*/outlineView.columnWithIdentifier (column);", "-\t\tNSRect columnRect = outlineView.rectOfColumn (nsColumnIndex);", "-\t\tNSRect cellRect = outlineView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\twidth += (cellRect.x - columnRect.x);", "+\t\twidth += outlineView.indentationPerLevel () * (1 + outlineView.levelForItem (handle));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c3038b47732a35abc7102f71921f51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "21ad7e1c41ce1d63dd243622044164fd46b26ef4", "commitAfterChange": "1c5467f79f5b1c73782459594b2f72f13320a777", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem)", "signatureAfterChange": " int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem)", "diff": ["+/* note that the result includes tree hierarchy indentation for column 0 */", "-\t\t\t\tif (change != 0) parent.setScrollWidth (this);", "+\t\t\t\tif (change != 0) parent.setScrollWidth (this, false, false);", "+\t}", "+", "+\tif (columnIndex == 0) {", "+\t\tNSTableColumn column = parent.columnCount == 0 ? parent.firstColumn : parent.columns[0].nsColumn;", "+\t\tNSOutlineView outlineView = (NSOutlineView)parent.view;", "+\t\tint rowIndex = (int)/*64*/outlineView.rowForItem (handle);", "+\t\tint nsColumnIndex = (int)/*64*/outlineView.columnWithIdentifier (column);", "+\t\tNSRect columnRect = outlineView.rectOfColumn (nsColumnIndex);", "+\t\tNSRect cellRect = outlineView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "+\t\twidth += (cellRect.x - columnRect.x);"]}], "num": 57917}