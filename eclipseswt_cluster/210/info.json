{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "974949feffcae26daea3885ee3f18377", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1038601da84926c92ed697e10b6ff50a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tint atkComponent_get_size (int width, int height, int coord_type)", "signatureAfterChange": "  \tint atkComponent_get_size (int width, int height, int coord_type)", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tevent.width = event.height = -1;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getLocation (event);", "-\t\t\t}", "-\t\t\tif (event.width != -1 && event.height != -1) { ", "-\t\t\t\tOS.memmove (width, new int[] {event.width}, 4);", "-\t\t\t\tOS.memmove (height, new int[] {event.height}, 4);", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\t\tint superType = OS.g_type_class_peek (parentType);", "+\t\t\tint superType = OS.g_type_interface_peek_parent (ATK.ATK_COMPONENT_GET_IFACE (handle));", "-\t\t\tif (componentIface.get_size != 0) {", "-\t\t\t\treturn OS.call (componentIface.get_size, handle, width, height, coord_type);", "+\t\t\tif (componentIface.get_extents != 0) {", "+\t\t\t\tparentResult = OS.call (componentIface.get_size, width, height, coord_type);", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t", "+\t\tint[] parentWidth = new int [1], parentHeight = new int [1];", "+\t\tOS.memmove (parentWidth, width, 4);", "+\t\tOS.memmove (parentHeight, height, 4);", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tevent.width = parentWidth [0]; event.height = parentHeight [0];", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getLocation (event);", "+\t\t}", "+\t\tOS.memmove (width, new int[] {event.width}, 4);", "+\t\tOS.memmove (height, new int[] {event.height}, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af6ceb52eaa21a1893d92e704e8b7d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t  \tint atkObject_get_n_children ()", "signatureAfterChange": "\t  \tint atkObject_get_n_children ()", "diff": ["-\t\tif (accessible.getControlListeners ().length != 0) {", "-\t\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tevent.detail = -1;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getChildCount (event);", "-\t\t\t} ", "-\t\t\tif (event.detail != -1) return event.detail;", "-\t\t}", "+\t\tint parentResult = 0;", "-\t\tif (objectClass.get_n_children == 0) return 0;", "-\t\treturn OS.call (objectClass.get_n_children, handle);", "+\t\tif (objectClass.get_n_children != 0) { ", "+\t\t\tparentResult = OS.call (objectClass.get_n_children, handle);", "+\t\t}", "+\t\tAccessibleControlListener[] listeners = accessible.getControlListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t\t", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent (this);", "+\t\tevent.childID = id;", "+\t\tevent.detail = parentResult;", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getChildCount (event);", "+\t\t} ", "+\t\treturn event.detail;"]}], "num": 210}