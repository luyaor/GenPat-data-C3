{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "092579cdf7e426fceeb48d6e1cee88a0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d3cda8ae39b27e94cb1684eec334a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "cc6b3d6d056e2bcdf45566e5685ec1899199e927", "commitAfterChange": "e1b09e18c7851478ffa3b022c105ee8cff56a946", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " int getContentWidth (GC gc)", "signatureAfterChange": " int getContentWidth (GC gc)", "diff": ["+ */", "-\tint contentWidth = gc.textExtent (text, SWT.DRAW_MNEMONIC).x;", "+\tint contentWidth = 0;", "+\tif (text.length () > 0) {", "+\t\tcontentWidth += gc.textExtent (text, SWT.DRAW_MNEMONIC).x;", "+\t}", "-\t\tcontentWidth += image.getBounds ().width + Tree.MARGIN_IMAGE;", "+\t\tcontentWidth += image.getBounds ().width;", "+\t\tif (text.length () > 0) contentWidth += Tree.MARGIN_IMAGE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df0b938a63cc54130e74e4cfe525f411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r void setPixelData(byte[] data, ImageData imageData)", "signatureAfterChange": "\r void setPixelData(byte[] data, ImageData imageData)", "diff": ["-\t\t\tint srcBytesPerLine = width * 2;\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tint srcBytesPerLine = getAlignedBytesPerRow();\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r", "+\t\t\t/*\r", "+\t\t\t* If the image uses 16-bit depth, it is converted\r", "+\t\t\t* to an 8-bit depth image.\r", "+\t\t\t*/\r", "+\t\t\tif (headerChunk.getBitDepth() > 8) srcBytesPerLine /= 2;\r", "+\r"]}], "num": 38694}