{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2dd51a397653ec269caf58fdc5ff9aa4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a625f0e3154a0c23f2c23a4a4edbe9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "267efeba946291455291f7e37b5a9adb5c1006b4", "commitAfterChange": "20492b8023f4da8a65e4db2fb7cb69e8486d81b2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t", "-\t\t\t/* If the childID was created by the application, delegate to the accessible for the control. */", "-\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "-\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tint childID = getChildIDFromEvent(theEvent);", "+\t\t\tif (childID != ACC.CHILDID_SELF) {", "+\t\t\t\t/* If the childID was created by the application, delegate to the accessible for the control. */", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "+\t\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf00cafb34a1c3038758107cb54eccf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\tif (code == OS.eventNotHandledErr) {", "-\t\t\tint childID = getChildIDFromEvent(theEvent);", "-\t\t\tif (childID != ACC.CHILDID_SELF) {", "-\t\t\t\t/* If the childID was created by the application, delegate to the accessible for the control. */", "-\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "-\t\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\t\t}", "+\t\t/* Generic handler: first try just calling the default handler. */", "+\t\tint code = userData != OS.eventNotHandledErr ? userData : OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tif (code != OS.noErr && getChildIDFromEvent(theEvent) != ACC.CHILDID_SELF) {", "+\t\t\t/*", "+\t\t\t* If the childID is unknown to the control, then it was created by the application,", "+\t\t\t* so delegate to the application's accessible UIElement for the control.", "+\t\t\t*/", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "+\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);"]}], "num": 16601}