{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64deb08b8732f5138878145c04a7ba7e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7198e36e1635f7921ec397b0a51bfb81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d9dfd82bfea57be5eb6a15f8c2e440de6084ec40", "commitAfterChange": "c5cbd8c4eebd8dd52ab69ee5068130875a54578b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "signatureAfterChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "diff": ["-\t\t\tImageData.stretch1(srcData, xSrcImage.bytes_per_line, bitOrder, 0, 0, srcWidth, srcHeight, buf, bplX, bitOrder, 0, 0, destWidth, destHeight, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 1, xSrcImage.bytes_per_line, bitOrder, 0, 0, srcWidth, srcHeight, null, null, null,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 1, bplX, bitOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\t\tflipX, flipY);\r", "-\t\t\tImageData.stretch4(srcData, xSrcImage.bytes_per_line, 0, 0, srcWidth, srcHeight, buf, bplX, 0, 0, destWidth, destHeight, null, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 4, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, null, null, null,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 4, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\t\tflipX, flipY);\r", "-\t\t\tImageData.stretch8(srcData, xSrcImage.bytes_per_line, 0, 0, srcWidth, srcHeight, buf, bplX, 0, 0, destWidth, destHeight, null, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 8, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, null, null, null,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 8, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\t\tflipX, flipY);\r", "-\t\t\tImageData.stretch16(srcData, xSrcImage.bytes_per_line, 0, 0, srcWidth, srcHeight, buf, xImage.bytes_per_line, 0, 0, destWidth, destHeight, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 16, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 16, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "+\t\t\t\tflipX, flipY);\r", "-\t\t\tImageData.stretch24(srcData, xSrcImage.bytes_per_line, 0, 0, srcWidth, srcHeight, buf, xImage.bytes_per_line, 0, 0, destWidth, destHeight, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 24, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 24, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "+\t\t\t\tflipX, flipY);\r", "-\t\t\tImageData.stretch32(srcData, xSrcImage.bytes_per_line, 0, 0, srcWidth, srcHeight, buf, xImage.bytes_per_line, 0, 0, destWidth, destHeight, flipX, flipY);\r", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\t\tsrcData, 32, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "+\t\t\t\tImageData.ALPHA_OPAQUE, null, 0,\r", "+\t\t\t\tbuf, 32, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "+\t\t\t\tflipX, flipY);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd891de20b257b6e1ab47c576f7618cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e45c8daf8437089db6cbc5e3d29e82678a90a879", "commitAfterChange": "de8a2a56c7d611f04c53b54fd28808f20c983fab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "signatureAfterChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "diff": ["-\t\tcase 16: {\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 16, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "-\t\t\tif (xImagePtr == 0) break;\r", "-\t\t\tXImage xImage = new XImage();\r", "-\t\t\tOS.memmove(xImage, xImagePtr, XImage.sizeof);\r", "-\t\t\tint bufSize = xImage.bytes_per_line * destHeight;\r", "-\t\t\tbyte[] buf = new byte[bufSize];\r", "-\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\t\tsrcData, 16, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "-\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,\r", "-\t\t\t\tbuf, 16, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "-\t\t\t\tflipX, flipY);\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\tOS.memmove(bufPtr, buf, bufSize);\r", "-\t\t\txImage.data = bufPtr;\r", "-\t\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t\tcase 24: {\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 24, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "-\t\t\tif (xImagePtr == 0) break;\r", "-\t\t\tXImage xImage = new XImage();\r", "-\t\t\tOS.memmove(xImage, xImagePtr, XImage.sizeof);\r", "-\t\t\tint bufSize = xImage.bytes_per_line * destHeight;\r", "-\t\t\tbyte[] buf = new byte[bufSize];\r", "-\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\t\tsrcData, 24, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "-\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,\r", "-\t\t\t\tbuf, 24, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "-\t\t\t\tflipX, flipY);\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\tOS.memmove(bufPtr, buf, bufSize);\r", "-\t\t\txImage.data = bufPtr;\r", "-\t\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r", "-\t\t\tbreak;\r", "-\t\t}\r", "+\t\tcase 16:\r", "+\t\tcase 24:\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 24, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "+\t\t\txImagePtr = OS.XCreateImage(display, visual, xSrcImage.depth, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "-\t\t\t\tsrcData, 32, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "+\t\t\t\tsrcData, xSrcImage.bits_per_pixel, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, 0, 0, 0,\r", "-\t\t\t\tbuf, 32, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, 0, 0, 0,\r"]}], "num": 17133}