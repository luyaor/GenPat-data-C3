{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ce0b7bf06813e079cd8ed985e1fc5e2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5674cd8d387b7e509c6729997625dc3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03bf77d16dd9eb63f3855573d83108eba52b0a98", "commitAfterChange": "b7e80235c7aba87bf303961731c884eb6cbe0795", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  static GtkBorder getEntryInnerBorder (long handle)", "signatureAfterChange": "  static GtkBorder getEntryInnerBorder (long handle)", "diff": ["-    if (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t    long /*int*/ border = OS.gtk_entry_get_inner_border (handle);", "-\t    if (border != 0) {", "-\t    \tOS.memmove (gtkBorder, border, GtkBorder.sizeof);", "-\t    \treturn gtkBorder;", "-\t    }", "-\t    long /*int*/ []  borderPtr = new long /*int*/ [1];", "-\t    OS.gtk_widget_style_get (handle, OS.inner_border, borderPtr,0);", "-\t    if (borderPtr[0] != 0) {", "-\t        OS.memmove (gtkBorder, borderPtr[0], GtkBorder.sizeof);", "-\t        OS.gtk_border_free(borderPtr[0]);", "-\t        return gtkBorder;", "-\t    }", "+    long /*int*/ border = OS.gtk_entry_get_inner_border (handle);", "+    if (border != 0) {", "+    \tOS.memmove (gtkBorder, border, GtkBorder.sizeof);", "+    \treturn gtkBorder;", "+    }", "+    long /*int*/ []  borderPtr = new long /*int*/ [1];", "+    OS.gtk_widget_style_get (handle, OS.inner_border, borderPtr,0);", "+    if (borderPtr[0] != 0) {", "+        OS.memmove (gtkBorder, borderPtr[0], GtkBorder.sizeof);", "+        OS.gtk_border_free(borderPtr[0]);", "+        return gtkBorder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7165df13a68821fc1a8eb9bbc33e5c5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6c4a2c166738e67832efca98869d4a51c06db92b", "commitAfterChange": "84d56fe220646f29848300da6bc168504ddc3a77", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String getText (int index)", "signatureAfterChange": " public String getText (int index)", "diff": ["-public String getText (int index) {\r", "-\tcheckWidget ();\r", "-\tif (index == 0) return getText ();\r", "-\tint row = parent.indexOf (this);\r", "-\tif (row == -1) error (SWT.ERROR_CANNOT_GET_TEXT);\r", "-\tint clist = parent.handle;\r", "-\tint [] address = new int [1];\r", "-\tint [] pixmap = new int [1];\r", "-\tOS.gtk_clist_get_pixtext (clist, row, index, address, null, pixmap, null);\r", "-\tif (pixmap [0] == 0) {\r", "-\t\tOS.gtk_clist_get_text (clist, row, index, address);\r", "-\t}\r", "-\tif (address [0] == 0) return \"\";\r", "-\tbyte [] buffer = new byte [OS.strlen (address [0])];\r", "-\tOS.memmove (buffer, address [0], buffer.length);\r", "-\treturn new String (Converter.mbcsToWcs (null, buffer));\r", "-}\r", "+public String getText (int index) {", "+\tcheckWidget ();", "+\tif (index<0) error(SWT.ERROR_CANNOT_GET_TEXT);", "+\tif ((index>0)&&(index>=parent.columnCount)) error(SWT.ERROR_CANNOT_GET_TEXT);", "+\tint[] ptr = new int[1];", "+\tOS.gtk_tree_model_get(parent.modelHandle, handle, index, ptr, -1);", "+\tif (ptr[0]==0) return null;", "+\tint length = OS.strlen(ptr[0]);", "+\tbyte[] bytes = new byte[length+1];", "+\tOS.memmove(bytes, ptr[0], length);", "+\tchar[] chars = Converter.mbcsToWcs(null, bytes);", "+\tOS.g_free(ptr[0]);", "+\treturn new String(chars);", "+}"]}], "num": 37808}