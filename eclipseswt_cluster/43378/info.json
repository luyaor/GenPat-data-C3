{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06791905975bff8963d1f33e160bb26e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188cf71c0265787ad3711cdfec2dc593", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6c4a2c166738e67832efca98869d4a51c06db92b", "commitAfterChange": "84d56fe220646f29848300da6bc168504ddc3a77", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-public Rectangle getImageBounds (int index) {\r", "-\tcheckWidget ();\r", "-\tint CELL_SPACING = 1;\r", "-\tint clist = parent.handle;\r", "-\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);\r", "-\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;\r", "-\tGtkCListColumn column = new GtkCListColumn ();\r", "-\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);\r", "-\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;\r", "-\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);\r", "-\tint row = parent.indexOf (this);\r", "-\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);\r", "-\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;\r", "-\tint width = 0;\r", "-\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {\r", "-\t\tint [] pixmap = new int [1];\r", "-\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);\r", "-\t\tif (pixmap [0] != 0) {\r", "-\t\t\tint [] w = new int [1], h = new int [1];\r", "-\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);\r", "-\t\t\twidth = w [0];\r", "-\t\t}\r", "-\t}\r", "-\treturn new Rectangle (x, y, width, height);\r", "-}\r", "+public Rectangle getImageBounds (int index) {", "+\tcheckWidget ();", "+\t// FIXME - images not implemented yet", "+\treturn new Rectangle(0,0,0,0);", "+/*\tint CELL_SPACING = 1;", "+\tint clist = parent.handle;", "+\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);", "+\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;", "+\tGtkCListColumn column = new GtkCListColumn ();", "+\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);", "+\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;", "+\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);", "+\tint row = parent.indexOf (this);", "+\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);", "+\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;", "+\tint width = 0;", "+\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {", "+\t\tint [] pixmap = new int [1];", "+\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);", "+\t\tif (pixmap [0] != 0) {", "+\t\t\tint [] w = new int [1], h = new int [1];", "+\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);", "+\t\t\twidth = w [0];", "+\t\t}", "+\t}", "+\treturn new Rectangle (x, y, width, height);*/", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4beb588d33a57244da160864ce6b3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "5d4a728d78aff9d58950f0a717e0a00ab88bc4c4", "commitAfterChange": "0a6f4926f8d9bffb18e90e03aeb912226e94bd90", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-\t// FIXME - images not implemented yet", "-\treturn new Rectangle(0,0,0,0);", "-/*\tint CELL_SPACING = 1;", "-\tint clist = parent.handle;", "-\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);", "-\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;", "-\tGtkCListColumn column = new GtkCListColumn ();", "-\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);", "-\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;", "-\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);", "-\tint row = parent.indexOf (this);", "-\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);", "-\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;", "-\tint width = 0;", "-\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {", "-\t\tint [] pixmap = new int [1];", "-\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);", "-\t\tif (pixmap [0] != 0) {", "-\t\t\tint [] w = new int [1], h = new int [1];", "-\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);", "-\t\t\twidth = w [0];", "-\t\t}", "+\tint renderer;", "+\tif (parent.getColumnCount()==0) {", "+\t\tif (index!=0) return new Rectangle(0,0,0,0);", "+\t\trenderer = parent.fakePixbufRenderer;", "+\t} else {", "+\t\tif (index<0 || index>parent.getColumnCount()) return new Rectangle(0,0,0,0);", "+\t\trenderer = parent.columns[index].pixbufRendererHandle;", "-\treturn new Rectangle (x, y, width, height);*/", "+\tint[] x = new int[1];", "+\tint[] y = new int[1];", "+\tint[] w = new int[1];", "+\tint[] h = new int[1];", "+\tGdkRectangle rect = new GdkRectangle();", "+\tOS.gtk_cell_renderer_get_size(renderer, parent.handle, rect, x, y, w, h);", "+\treturn new Rectangle(x[0],y[0],w[0],h[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08ec5d0dd3213071739793df051b75cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-\tint renderer;", "-\tif (parent.getColumnCount()==0) {", "-\t\tif (index!=0) return new Rectangle(0,0,0,0);", "-\t\trenderer = parent.fakePixbufRenderer;", "-\t} else {", "-\t\tif (index<0 || index>parent.getColumnCount()) return new Rectangle(0,0,0,0);", "-\t\trenderer = parent.columns[index].pixbufRendererHandle;", "+\tint parentHandle = parent.handle;", "+\tint column = OS.gtk_tree_view_get_column (parentHandle, index);", "+\tif (column == 0) return new Rectangle (0, 0, 0, 0);", "+\tint list = OS.gtk_tree_view_column_get_cell_renderers (column);", "+\tif (list == 0) return new Rectangle (0, 0, 0, 0);", "+\tint count = OS.g_list_length (list);", "+\tint pixbufRenderer = 0, i = 0;", "+\twhile (i < count) {", "+\t\tint renderer = OS.g_list_nth_data (list, i);", "+\t\tif (OS.GTK_IS_CELL_RENDERER_PIXBUF (renderer)) {", "+\t\t\tpixbufRenderer = renderer;", "+\t\t\tbreak;", "+\t\t}", "+\t\ti++;", "-\tint[] x = new int[1];", "-\tint[] y = new int[1];", "-\tint[] w = new int[1];", "-\tint[] h = new int[1];", "-\tGdkRectangle rect = new GdkRectangle();", "-\tOS.gtk_cell_renderer_get_size(renderer, parent.handle, rect, x, y, w, h);", "-\treturn new Rectangle(x[0],y[0],w[0],h[0]);", "+\tOS.g_list_free (list);\t", "+\tif (pixbufRenderer == 0)  return new Rectangle (0, 0, 0, 0);", "+\tGdkRectangle rect = new GdkRectangle ();", "+\tint path = OS.gtk_tree_model_get_path (parent.modelHandle, handle);", "+\tOS.gtk_tree_view_get_cell_area (parentHandle, path, column, rect);", "+\tOS.gtk_tree_path_free (path);", "+\tint [] w = new int[1], h = new int[1];", "+\tOS.gtk_cell_renderer_get_size (pixbufRenderer, parentHandle, null, null, null, w, h);", "+\tint headerHeight = parent.getHeaderHeight ();", "+\treturn new Rectangle (rect.x, rect.y + headerHeight, w [0], h [0]);"]}], "num": 43378}