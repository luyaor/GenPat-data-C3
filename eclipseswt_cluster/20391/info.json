{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a3b2283c43805fd57acf74f2504c29e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aad30381160ee62a51c32488ef28e16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "4faa718e848bca5a7335031d1c00baad23787159", "commitAfterChange": "a461fda0096599b0ea1295eb5f7364f69acc2719", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test_drawTextLjava_lang_StringIII()", "signatureAfterChange": "  public void test_drawTextLjava_lang_StringIII()", "diff": ["+\tfinal int COUNT = 130000;", "+\tfinal String STRING = \"\\t\\r\\na&bc&\";", "+\t", "-\t\tgc.drawText(\"\\t\\r\\na&bc&\", coords[i][0], coords[i][1], SWT.DRAW_TRANSPARENT);\t\t\t\t", "+\t\tgc.drawText(STRING, coords[i][0], coords[i][1], SWT.DRAW_TRANSPARENT);\t\t\t\t", "-\t\tgc.drawText(\"\\t\\r\\na&bc&\", coords[i][0], coords[i][1], SWT.DRAW_DELIMITER);\t\t\t\t", "+\t\tgc.drawText(STRING, coords[i][0], coords[i][1], SWT.DRAW_DELIMITER);\t\t\t\t", "-\t\tgc.drawText(\"\\t\\r\\na&bc&\", coords[i][0], coords[i][1], SWT.DRAW_MNEMONIC);\t\t\t\t", "+\t\tgc.drawText(STRING, coords[i][0], coords[i][1], SWT.DRAW_MNEMONIC);\t\t\t\t", "-\t\tgc.drawText(\"\\t\\r\\na&bc&\", coords[i][0], coords[i][1], SWT.DRAW_TAB);\t\t\t\t", "+\t\tgc.drawText(STRING, coords[i][0], coords[i][1], SWT.DRAW_TAB);\t\t\t\t", "-\t\tgc.drawText(\"\\t\\r\\na&bc&\", coords[i][0], coords[i][1], SWT.NONE);\t\t\t\t", "+\t\tgc.drawText(STRING, coords[i][0], coords[i][1], SWT.NONE);\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "927da99c3c80bb2089fc020eab65e8c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_ImageLoader.java", "commitBeforeChange": "4faa718e848bca5a7335031d1c00baad23787159", "commitAfterChange": "a461fda0096599b0ea1295eb5f7364f69acc2719", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void test_saveLjava_lang_StringI()", "signatureAfterChange": "  public void test_saveLjava_lang_StringI()", "diff": ["-\t// j2se and j2me(cdc) can load from a filename but, j2me(cldc) throws an exception", "-\tif (isJ2ME()) return;", "-", "-\tImageLoader loader = new ImageLoader();", "-\tString name = getPath(imageFilenames[0] + \".\" + imageFormats[0]);", "-\tInputStream inStream = null;", "-\ttry {", "-\t\tinStream = new FileInputStream(name);", "-\t} catch (FileNotFoundException e) {", "-\t\te.printStackTrace();", "-\t}\t", "-\tloader.load(inStream);", "-\ttry {", "-\t\tinStream.close();", "-\t} catch (IOException e2) {", "-\t\te2.printStackTrace();", "-\t}", "-", "-\tOutputStream outStream = new ByteArrayOutputStream();", "-\t", "-\ttry {", "-\t\tPerformanceMeter meter = createMeter(\"gif\");", "-\t\tmeter.start();", "-\t\tfor (int i = 0; i < COUNT; i++) {", "-\t\t\tloader.save(outStream, SWT.IMAGE_GIF);", "-\t\t}", "-\t\tmeter.stop();", "-\t\t", "-\t\tdisposeMeter(meter);", "-\t", "-\t\tmeter = createMeter(\"ico\");", "-\t\tmeter.start();", "-\t\tfor (int i = 0; i < COUNT; i++) {", "-\t\t\tloader.save(outStream, SWT.IMAGE_ICO);", "-\t\t}", "-\t\tmeter.stop();", "-\t\t", "-\t\tdisposeMeter(meter);", "-\t\t", "-\t\tmeter = createMeter(\"jpg\");", "-\t\tmeter.start();", "-\t\tfor (int i = 0; i < COUNT; i++) {", "-\t\t\tloader.save(outStream, SWT.IMAGE_JPEG);", "-\t\t}", "-\t\tmeter.stop();", "-\t\t", "-\t\tdisposeMeter(meter);", "-\t} finally {", "-\t\ttry {", "-\t\t\toutStream.close();", "-\t\t} catch (IOException e1) {", "-\t\t\te1.printStackTrace();", "-\t\t}", "-\t}", "+\t// TODO", "+//\tfinal int COUNT = 10000;", "+//\t", "+//\t// j2se and j2me(cdc) can load from a filename but, j2me(cldc) throws an exception", "+//\tif (isJ2ME()) return;", "+//", "+//\tImageLoader loader = new ImageLoader();", "+//\tString name = getPath(imageFilenames[0] + \".\" + imageFormats[0]);", "+//\tInputStream inStream = null;", "+//\ttry {", "+//\t\tinStream = new FileInputStream(name);", "+//\t} catch (FileNotFoundException e) {", "+//\t\te.printStackTrace();", "+//\t}\t", "+//\tloader.load(inStream);", "+//\ttry {", "+//\t\tinStream.close();", "+//\t} catch (IOException e2) {", "+//\t\te2.printStackTrace();", "+//\t}", "+//", "+//\tOutputStream outStream = new ByteArrayOutputStream();", "+//\t", "+//\ttry {", "+//\t\tPerformanceMeter meter = createMeter(\"gif\");", "+//\t\tmeter.start();", "+//\t\tfor (int i = 0; i < COUNT; i++) {", "+//\t\t\tloader.save(outStream, SWT.IMAGE_GIF);", "+//\t\t}", "+//\t\tmeter.stop();", "+//\t\t", "+//\t\tdisposeMeter(meter);", "+//\t", "+//\t\tmeter = createMeter(\"ico\");", "+//\t\tmeter.start();", "+//\t\tfor (int i = 0; i < COUNT; i++) {", "+//\t\t\tloader.save(outStream, SWT.IMAGE_ICO);", "+//\t\t}", "+//\t\tmeter.stop();", "+//\t\t", "+//\t\tdisposeMeter(meter);", "+//\t\t", "+//\t\tmeter = createMeter(\"jpg\");", "+//\t\tmeter.start();", "+//\t\tfor (int i = 0; i < COUNT; i++) {", "+//\t\t\tloader.save(outStream, SWT.IMAGE_JPEG);", "+//\t\t}", "+//\t\tmeter.stop();", "+//\t\t", "+//\t\tdisposeMeter(meter);", "+//\t} finally {", "+//\t\ttry {", "+//\t\t\toutStream.close();", "+//\t\t} catch (IOException e1) {", "+//\t\t\te1.printStackTrace();", "+//\t\t}", "+//\t}"]}], "num": 20391}