{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1731dcf0e90b4d8e7ed64acc23b3e924", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0411e14b47f47efbd7bd878155f4285c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "69034fbec33cd347bd09188749206e03e07bed01", "commitAfterChange": "27c351b04bd7240d94b4d90514262eeae03a11ca", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\tif (((style & SWT.DOUBLE_BUFFERED) != 0 && (style & SWT.TRANSPARENT) == 0) || (style & SWT.NO_MERGE_PAINTS) != 0) {", "+\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.TRANSPARENT)) != 0 || (style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\t\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0 && (style & SWT.TRANSPARENT) == 0) {", "+\t\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.TRANSPARENT)) != 0) {", "+\t\t\t\t\tif ((style & SWT.TRANSPARENT) != 0) {", "+\t\t\t\t\t\tOS.BitBlt (gc.handle, 0, 0, width, height, paintGC.handle, ps.left, ps.top, OS.SRCCOPY);\t\t\t\t\t\t", "+\t\t\t\t\t} ", "-\t\t\t\t\t\t//paintGC.copyArea (image, ps.left, ps.top);", "+\t\t\t\t\t\t//paintGC.copyArea (image, ps.left, ps.top);\t\t\t\t\t\t", "-\t\t\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0 && (style & SWT.TRANSPARENT) == 0) {", "+\t\t\t\tif ((style & (SWT.DOUBLE_BUFFERED | SWT.TRANSPARENT)) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bb94e920480084990b0982313030e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5b2c3a06efe9f03e6d0b95d1830abbd80f01c4a5", "commitAfterChange": "7265e03acce403fc13fb49544db1e7781932cd4c", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\tint hNewItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t/*", "+\t* Feature in Windows.  When the tree has the style", "+\t* TVS_FULLROWSELECT, the background color for the", "+\t* entire row is filled when an item is painted,", "+\t* drawing on top of any custom drawing.  The fix", "+\t* is to emulate TVS_FULLROWSELECT.", "+\t*/", "+\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) {", "+\t\t\tif (hNewItem == hOldItem) {", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, lpht.hItem);", "+\t\t\t\thNewItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t}", "+\t\t}", "+\t}", "-\tint hNewItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tint fItemRect = (bits & OS.TVS_FULLROWSELECT) != 0 ? 0 : 1;", "+\t\t\t\tint fItemRect = (style & SWT.FULL_SELECTION) != 0 ? 0 : 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8bbee38ca29b5a1d44dc4193a9b6478", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "cf1fe9a62b0aa80637743d74671152a60629becb", "commitAfterChange": "a6d5c3a070f387df903b1f6594dcfd6eb663372e", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "diff": ["-\tboolean drawSelected = false, drawBackground = false;", "+\tboolean drawSelected = false, drawBackground = false, drawHot = false;", "+\tif (nmcd.iSubItem == 0 || (style & SWT.FULL_SELECTION) != 0) {", "+\t\tdrawHot = hotIndex == nmcd.dwItemSpec;", "+\t}", "+\tif (drawHot) event.detail |= SWT.HOT;", "+\t\tignoreDrawHot = (event.detail & SWT.HOT) == 0;", "-\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = true;", "+\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = true;", "+\t\t\tignoreDrawHot = true;", "-\tif (ignoreDrawForeground) {", "+\tif (ignoreDrawForeground && ignoreDrawHot) {", "-\tif (!ignoreDrawSelection && clrSelectionBk != -1) {", "+\tif (!ignoreDrawHot || (!ignoreDrawSelection && clrSelectionBk != -1)) {", "-\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;", "+\t\t\tboolean hot = drawHot;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e4c8b2fcde8ea1847a2691d9e0aa03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "22182e34c63852d6ad810cea1c40d7cb2b3f0bce", "commitAfterChange": "3b4b1d4ea7d1bdc6eb182e6cf4eab485e831bd1b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int getSelection (int hItem, TVITEM tvItem, TreeItem [] selection, int count)", "signatureAfterChange": "  int getSelection (int hItem, TVITEM tvItem, TreeItem [] selection, int count, boolean full)", "diff": ["-int getSelection (int hItem, TVITEM tvItem, TreeItem [] selection, int count) {", "+int getSelection (int hItem, TVITEM tvItem, TreeItem [] selection, int count, boolean full) {", "-\t\tif (tvItem != null && selection != null && count < selection.length) {", "+\t\tif (OS.IsWinCE) {", "-\t\t\t\tselection [count++] = _getItem (hItem, tvItem.lParam);", "+\t\t\t\tif (selection != null && count < selection.length) {", "+\t\t\t\t\tselection [count] = _getItem (hItem, tvItem.lParam);", "+\t\t\t\t}", "+\t\t\t\tcount++;", "-\t\t\tint state = 0;", "-\t\t\tif (OS.IsWinCE) {", "-\t\t\t\ttvItem.hItem = hItem;", "-\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\t\tstate = tvItem.state;", "-\t\t\t} else {", "-\t\t\t\tstate = OS.SendMessage (handle, OS.TVM_GETITEMSTATE, hItem, OS.TVIS_SELECTED);", "+\t\t\tint state = OS.SendMessage (handle, OS.TVM_GETITEMSTATE, hItem, OS.TVIS_SELECTED);", "+\t\t\tif ((state & OS.TVIS_SELECTED) != 0) {", "+\t\t\t\tif (tvItem != null && selection != null && count < selection.length) {", "+\t\t\t\t\ttvItem.hItem = hItem;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "+\t\t\t\t\tselection [count] = _getItem (hItem, tvItem.lParam);", "+\t\t\t\t}", "+\t\t\t\tcount++;", "-\t\t\tif ((state & OS.TVIS_SELECTED) != 0) count++;", "-\t\tint hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, hItem);", "-\t\tcount = getSelection (hFirstItem, tvItem, selection, count);", "-\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hItem);", "+\t\tif (full) {", "+\t\t\tint hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, hItem);", "+\t\t\tcount = getSelection (hFirstItem, tvItem, selection, count, full);", "+\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hItem);", "+\t\t} else {", "+\t\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hItem);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99652efb0cd54a67906fadc6eb61363", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9739512f8a2bf623cb5528e194c8dee3d357d7f1", "commitAfterChange": "38a1693d0268dd125461ae7b5eb9f64df4bea00b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["+\tboolean hot = explorerTheme && (nmcd.uItemState & OS.CDIS_HOT) != 0;", "-\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreFullSelection = false;", "+\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = ignoreFullSelection = false;", "+\t\t\tif (hot) event.detail |= SWT.HOT;", "+\t\t\t\tignoreDrawHot = (event.detail & SWT.HOT) == 0;", "-\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = true;", "+\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = ignoreDrawHot = true;", "+\t\t\tif (selected && ignoreDrawSelection) ignoreDrawHot = true;", "-\t\t\t\tboolean draw = !selected;", "+\t\t\t\tboolean draw = !selected && !hot;", "-\t\t\tif (!ignoreDrawSelection) {", "-\t\t\t\tif (!selected) {", "+\t\t\tif (!ignoreDrawSelection || !ignoreDrawHot) {", "+\t\t\t\tif (!selected && !hot) {", "-\t\t\t\tif (selected) {", "+\t\t\t\tif (selected || hot) {", "-\t\t\t\t\tignoreDrawSelection = true;", "+\t\t\t\t\tignoreDrawSelection = ignoreDrawHot = true;", "-\t\t\t\tnmcd.uItemState &= ~OS.CDIS_HOT;", "+\t\t\t\tif (selected || (hot && ignoreDrawHot)) nmcd.uItemState &= ~OS.CDIS_HOT;", "-\t\t\t\t\t\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;"]}], "num": 2782}