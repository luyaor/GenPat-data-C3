{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c04d50c4a3f674f7d11669c68ab360a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f95a924240a65c1f7e74bf222b4d1f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "commitAfterChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tvoid buildExtrasNode(Document document, Node parent, TreeItem item, int level)", "signatureAfterChange": " \t \tvoid updateGenAttribute (TreeItem item)", "diff": ["-\t", "-\tvoid buildExtrasNode(Document document, Node parent, TreeItem item, int level) {", "-\t\tTreeItem[] items = item.getItems();", "-\t\tif (item.getData() instanceof Node) {", "-\t\t\tTreeColumn[] columns = item.getParent().getColumns();", "-\t\t\tNode node = (Node)item.getData();", "-\t\t\tString nodeName = node.getNodeName();", "-\t\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\t\tElement newNode = document.createElement(nodeName);", "-\t\t\tif (nameAttrib != null) {", "-\t\t\t\tAttr attr = document.createAttribute(nameAttrib.getNodeName());", "-\t\t\t\tattr.setNodeValue(nameAttrib.getNodeValue());", "-\t\t\t\tnewNode.setAttributeNode(attr);", "-\t\t\t}", "-\t\t\tif (item.getChecked()) {", "-\t\t\t\tAttr attr = document.createAttribute(\"swt_gen\");", "-\t\t\t\tattr.setNodeValue(\"true\");", "-\t\t\t\tnewNode.setAttributeNode(attr);", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\t\tString attrName = columns[i].getText();", "-\t\t\t\tif (attrName.startsWith(\"swt_\")) {", "-\t\t\t\t\tString value = item.getText(i);", "-\t\t\t\t\tif (value.length() != 0) {", "-\t\t\t\t\t\tAttr attr = document.createAttribute(attrName);", "-\t\t\t\t\t\tattr.setNodeValue(value);", "-\t\t\t\t\t\tnewNode.setAttributeNode(attr);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tparent.appendChild(newNode);", "-\t\t\tparent = newNode;", "-\t\t}", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\tbuildExtrasNode(document, parent, items[i], level + 1);", "-\t\t}", "-\t}", "+\tvoid updateGenAttribute (TreeItem item) {", "+\t\tif (item.getData() instanceof Element) {", "+\t\t\tElement node = (Element)item.getData();", "+\t\t\tif (item.getChecked()) {", "+\t\t\t\tnode.setAttribute(\"swt_gen\", \"true\");", "+\t\t\t} else {", "+\t\t\t\tnode.removeAttribute(\"swt_gen\");", "+\t\t\t}", "+\t\t}", "+\t\tTreeItem[] items = item.getItems();", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tupdateGenAttribute(items[i]);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b2f4994868fb2f0a6f040276747c41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tString getKey (Node node)", "signatureAfterChange": " \t \tvoid buildExtrasNode(Document document, Node parent, TreeItem item, int level)", "diff": ["+\t", "+\tvoid buildExtrasNode(Document document, Node parent, TreeItem item, int level) {", "+\t\tTreeItem[] items = item.getItems();", "+\t\tif (item.getData() instanceof Node) {", "+\t\t\tTreeColumn[] columns = item.getParent().getColumns();", "+\t\t\tNode node = (Node)item.getData();", "+\t\t\tString nodeName = node.getNodeName();", "+\t\t\tNode nameAttrib = gen.getNameAttribute(node);", "+\t\t\tElement newNode = document.createElement(nodeName);", "+\t\t\tif (nameAttrib != null) {", "+\t\t\t\tAttr attr = document.createAttribute(nameAttrib.getNodeName());", "+\t\t\t\tattr.setNodeValue(nameAttrib.getNodeValue());", "+\t\t\t\tnewNode.setAttributeNode(attr);", "+\t\t\t}", "+\t\t\tif (item.getChecked()) {", "+\t\t\t\tAttr attr = document.createAttribute(\"swt_gen\");", "+\t\t\t\tattr.setNodeValue(\"true\");", "+\t\t\t\tnewNode.setAttributeNode(attr);", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\t\tString attrName = columns[i].getText();", "+\t\t\t\tif (attrName.startsWith(\"swt_\")) {", "+\t\t\t\t\tString value = item.getText(i);", "+\t\t\t\t\tif (value.length() != 0) {", "+\t\t\t\t\t\tAttr attr = document.createAttribute(attrName);", "+\t\t\t\t\t\tattr.setNodeValue(value);", "+\t\t\t\t\t\tnewNode.setAttributeNode(attr);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tparent.appendChild(newNode);", "+\t\t\tparent = newNode;", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tbuildExtrasNode(document, parent, items[i], level + 1);", "+\t\t}", "+\t}", "-\tString getKey (Node node) {", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\twhile (node != null) {", "-\t\t\tif (buffer.length() > 0) buffer.append(\"_\");", "-\t\t\tString name = node.getNodeName();", "-\t\t\tStringBuffer key = new StringBuffer(name);", "-\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\tNode nameAttrib = getNameAttribute(attributes);", "-\t\t\tif (nameAttrib != null) {", "-\t\t\t\tkey.append(\"-\");", "-\t\t\t\tkey.append(nameAttrib.getNodeValue());", "-\t\t\t}", "-\t\t\tbuffer.append(key.reverse());", "-\t\t\tnode = node.getParentNode();", "-\t\t}", "-\t\tbuffer.reverse();", "-\t\treturn buffer.toString();", "-\t}"]}], "num": 56889}