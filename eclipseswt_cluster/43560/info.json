{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5348ea6334d55a486ed9fe6bdee07523", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38b4492b07919cf28a833d4cd2d1ec8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "34a22f14c35f05c450f0fac45b358c96363f8621", "commitAfterChange": "767bf7de57d901a8d229ffb1c82c7158e0e2615d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  String getSegmentsText()", "signatureAfterChange": "  String getSegmentsText()", "diff": ["-\tif (segments == null) return text;", "-\tint nSegments = segments.length;", "-\tif (nSegments <= 1) return text;", "-\tif (nSegments == 2) {", "-\t\tif (segments[0] == 0 && segments[1] == length) return text;", "+\tif (segments == null) return text;", "+\tint nSegments = segments.length;", "+\tif (nSegments == 0) return text;", "+\tif (segmentsChars == null) {", "+\t\tif (nSegments == 1) return text;", "+\t\tif (nSegments == 2) {", "+\t\t\tif (segments[0] == 0 && segments[1] == length) return text;", "+\t\t}", "-\tchar separator = getOrientation() == SWT.RIGHT_TO_LEFT ? RTL_MARK : LTR_MARK;", "+\tchar defaultSeparator = getOrientation() == SWT.RIGHT_TO_LEFT ? RTL_MARK : LTR_MARK;", "+\t\t\tchar separator = segmentsChars != null && segmentsChars.length > segmentCount ? segmentsChars[segmentCount] : defaultSeparator;", "-\tif (segmentCount < nSegments) {", "+\twhile (segmentCount < nSegments) {", "+\t\tchar separator = segmentsChars != null && segmentsChars.length > segmentCount ? segmentsChars[segmentCount] : defaultSeparator;", "-\tif (segmentCount != nSegments) {", "-\t\tint[] tmp = new int [segmentCount];", "-\t\tSystem.arraycopy(invalidOffsets, 0, tmp, 0, segmentCount);", "-\t\tinvalidOffsets = tmp;", "-\t}", "-\treturn new String(newChars, 0, Math.min(charCount + segmentCount, newChars.length));", "+\treturn new String(newChars, 0, newChars.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bccfc1e3a4818d82185b257b0ad24541", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "382b6421eeae60a651220fe1179967fc453bd91a", "commitAfterChange": "70b00f9fd9ccac15426ee88b1dc6a2b6b783b7fa", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "  String getSegmentsText()", "signatureAfterChange": "  String getSegmentsText()", "diff": ["+", "-\tif (segments == null) return text;", "-\tint nSegments = segments.length;", "-\tif (nSegments <= 1) return text;", "-\tif (nSegments == 2) {", "-\t\tif (segments[0] == 0 && segments[1] == length) return text;", "+\tif (segments == null) return text;", "+\tint nSegments = segments.length;", "+\tif (nSegments == 0) return text;", "+\tif (segmentsChars == null) {", "+\t\tif (nSegments == 1) return text;", "+\t\tif (nSegments == 2) {", "+\t\t\tif (segments[0] == 0 && segments[1] == length) return text;", "+\t\t}", "-\tinvalidOffsets = new int[nSegments];", "-\tchar separator = getOrientation() == SWT.RIGHT_TO_LEFT ? RTL_MARK : LTR_MARK;", "+\tchar defaultSeparator = orientation == SWT.RIGHT_TO_LEFT ? RTL_MARK : LTR_MARK;", "-\t\t\tinvalidOffsets[segmentCount] = charCount + segmentCount;", "+\t\t\tchar separator = segmentsChars != null && segmentsChars.length > segmentCount ? segmentsChars[segmentCount] : defaultSeparator;", "-\tif (segmentCount < nSegments) {", "-\t\tinvalidOffsets[segmentCount] = charCount + segmentCount;", "+\twhile (segmentCount < nSegments) {", "+\t\tchar separator = segmentsChars != null && segmentsChars.length > segmentCount ? segmentsChars[segmentCount] : defaultSeparator;", "-\tif (segmentCount != nSegments) {", "-\t\tint[] tmp = new int [segmentCount];", "-\t\tSystem.arraycopy(invalidOffsets, 0, tmp, 0, segmentCount);", "-\t\tinvalidOffsets = tmp;", "-\t}", "-\treturn new String(newChars, 0, Math.min(charCount + segmentCount, newChars.length));", "+\treturn new String(newChars, 0, newChars.length);"]}], "num": 43560}