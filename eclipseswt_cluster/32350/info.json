{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3c475fb5fca33a4c0365431c6c34527", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49eb0be4a203daaad8acd1ddafb947c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "413c8a539b0cc8dc9533184e03603ed58f62f9a9", "commitAfterChange": "1946f53da43fe63bcaa044f1e6b67fe7f1fdae23", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc)", "signatureAfterChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc)", "diff": ["-\r", "-\t\tint bplX = ((destWidth + 7) / 8 + 3) & 0xFFFC;\r", "-\t\tint bufSize = bplX * destHeight;\r", "-\t\tbyte[] buf = new byte[bufSize];\r", "+\t\tint xImagePtr = OS.XCreateImage(display, visual, 1, OS.XYBitmap, 0, 0, destWidth, destHeight, image.scanlinePad * 8, 0);\r", "+\t\tif (xImagePtr == 0) return SWT.ERROR_NO_HANDLES;\r", "+\t\tXImage xImage = new XImage();\r", "+\t\tOS.memmove(xImage, xImagePtr, XImage.sizeof);\r", "+\t\tint bufSize = xImage.bytes_per_line * xImage.height;\r", "-\t\tint xImagePtr = OS.XCreateImage(display, visual, 1, OS.XYBitmap, 0, bufPtr, destWidth, destHeight, 32, bplX);\r", "-\t\tif (xImagePtr == 0) {\r", "-\t\t\tOS.XtFree(bufPtr);\r", "-\t\t\treturn SWT.ERROR_NO_HANDLES;\r", "-\t\t}\r", "+\t\txImage.data = bufPtr;\r", "+\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r", "+\t\tbyte[] buf = new byte[bufSize];\r", "+\t\tint destOrder = xImage.byte_order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "+\t\tImageData.blit(ImageData.BLIT_SRC,\r", "+\t\t\timage.data, image.depth, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, null, null, null,\r", "+\t\t\tImageData.ALPHA_OPAQUE, null, 0, srcX, srcY,\r", "+\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\tflipX, flipY);\r", "+\t\tOS.memmove(xImage.data, buf, bufSize);\r", "+\r", "-\t\tXImage xImage = new XImage();\r", "-\t\tOS.memmove(xImage, xImagePtr, XImage.sizeof);\r", "-\t\txImage.byte_order = OS.MSBFirst;\r", "-\t\txImage.bitmap_unit = 8;\r", "-\t\txImage.bitmap_bit_order = OS.MSBFirst;\r", "-\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r", "-\t\tint destOrder = ImageData.MSB_FIRST;\r", "-\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\timage.data, 1, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, null, null, null,\r", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0, srcX, srcY,\r", "-\t\t\tbuf, 1, bplX, destOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "-\t\t\tflipX, flipY);\r", "-\t\t\r", "-\t\tOS.memmove(xImage.data, buf, bufSize);\r", "-\tint xImagePtr = OS.XCreateImage(display, visual, screenDepth, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "+\tint xImagePtr = OS.XCreateImage(display, visual, screenDepth, OS.ZPixmap, 0, 0, destWidth, destHeight, image.scanlinePad * 8, 0);\r", "-\tint bufSize = xImage.bytes_per_line * destHeight;\r", "-\tbyte[] buf = new byte[bufSize];\r", "+\tint bufSize = xImage.bytes_per_line * xImage.height;\r", "-\tint srcOrder = image.getByteOrder();\r", "+\tbyte[] buf = new byte[bufSize];\r", "-\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "-\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, palette.redMask, palette.greenMask, palette.blueMask,\r", "-\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r", "-\t\t\t\timage.data, image.depth, image.bytesPerLine, srcOrder, srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r", "+\t\t\t\timage.data, image.depth, image.bytesPerLine, image.getByteOrder(), srcX, srcY, srcWidth, srcHeight, srcReds, srcGreens, srcBlues,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df332786c86179e04ed297ac8574ca89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "1946f53da43fe63bcaa044f1e6b67fe7f1fdae23", "commitAfterChange": "4431f3ef3b71f09021d71b21b34cc8ed79456e38", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc)", "signatureAfterChange": " static int putImage(ImageData image, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, int display, int visual, int screenDepth, XColor[] xcolors, int[] transparentPixel, boolean isMask, int drawable, int gc)", "diff": ["-\t\tint destOrder = xImage.byte_order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "-\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, xImage.bitmap_bit_order, 0, 0, destWidth, destHeight, null, null, null,\r", "-\tint destOrder = xImage.byte_order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, xImage.byte_order, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, xImage.byte_order, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, xImage.byte_order, 0, 0, destWidth, destHeight, xImage.red_mask, xImage.green_mask, xImage.blue_mask,\r", "-\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, xImage.byte_order, 0, 0, destWidth, destHeight, destReds, destGreens, destBlues,\r"]}], "num": 32350}