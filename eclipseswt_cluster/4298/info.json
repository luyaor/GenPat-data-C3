{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6722694bc3f20eeccee3a4f7f752e0c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cf365f23b9f9a3db0af2fe537acd1e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "47b5ee1799c9188b4f2534a9090a7992172b266f", "commitAfterChange": "541e0a794a690bb0f91c5863e2ba46b5f6472282", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 83, "signatureBeforeChange": "\r \r LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t\tif (!isFocus && index == pnmlv.iItem) {\r", "-\t\t\t\t\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {\r", "-\t\t\t\t\t\t\t\t\tboolean isSelected = (pnmlv.uNewState & OS.LVIS_SELECTED) != 0;\r", "-\t\t\t\t\t\t\t\t\tboolean wasSelected = (pnmlv.uOldState & OS.LVIS_SELECTED) != 0;\r", "-\t\t\t\t\t\t\t\t\tisFocus = isSelected != wasSelected;\r", "+\t\t\t\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {\r", "+\t\t\t\t\t\t\t\tif (!isFocus) {\r", "+\t\t\t\t\t\t\t\t\tif (index == pnmlv.iItem) {\r", "+\t\t\t\t\t\t\t\t\t\tboolean isSelected = (pnmlv.uNewState & OS.LVIS_SELECTED) != 0;\r", "+\t\t\t\t\t\t\t\t\t\tboolean wasSelected = (pnmlv.uOldState & OS.LVIS_SELECTED) != 0;\r", "+\t\t\t\t\t\t\t\t\t\tisFocus = isSelected != wasSelected;\r", "+\t\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\t} else {\r", "+\t\t\t\t\t\t\t\t\tisFocus = mouseDown;\r", "-\t\t\t\t\t\t\t\tint itemState = OS.SendMessage (handle, OS.LVM_GETITEMSTATE, index, OS.LVIS_SELECTED);\r", "-\t\t\t\t\t\t\t\tif ((itemState & OS.LVIS_SELECTED) != 0) event.item = items [index];\r", "+\t\t\t\t\t\t\t\tevent.item = items [index];\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15768603ffdabf57ffd6cdd97f8fd2b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "ea64a3586726e69b3a6487ec2ec021a68fc2a5a5", "commitAfterChange": "7b86bb84dfcfe4aea3b7f4a6b9bef988b3d5bbf6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t\t\t\t\t\t\t\tisAboutBlank = false;", "-\t\t\t\t\t\t\tlastNavigateURL = url;", "+\t\t\t\t\t\t\tvarResult = event.arguments[0];", "+\t\t\t\t\t\t\tIDispatch dispatch = varResult.getDispatch();", "+\t\t\t\t\t\t\tVariant variant = new Variant(auto); /* does not need to be disposed */", "+\t\t\t\t\t\t\tIDispatch top = variant.getDispatch();", "+\t\t\t\t\t\t\tif (top.getAddress() == dispatch.getAddress()) {", "+\t\t\t\t\t\t\t\tisAboutBlank = url.startsWith(ABOUT_BLANK);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tVariant variant = new Variant(auto);", "+\t\t\t\t\t\t\tVariant variant = new Variant(auto); /* does not need to be disposed */", "-\t\t\t\t\t\t\t/*", "-\t\t\t\t\t\t\t * This code is intentionally commented.  A Variant constructed from an", "-\t\t\t\t\t\t\t * OleAutomation object does not increase its reference count.  The IDispatch", "-\t\t\t\t\t\t\t * obtained from this Variant did not increase the reference count for the", "-\t\t\t\t\t\t\t * OleAutomation instance either. ", "-\t\t\t\t\t\t\t */", "-\t\t\t\t\t\t\t//top.Release();", "-\t\t\t\t\t\t\t//variant.dispose();", "+", "-\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* This code is intentionally commented.  This IDispatch was received", "-\t\t\t\t\t\t* as an argument from the OleEvent and it will be disposed along with", "-\t\t\t\t\t\t* the other arguments.  ", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\t//dispatch.Release();", "-\t\t\t\t\t\t\tisAboutBlank = url.startsWith(ABOUT_BLANK);", "+\t\t\t\t\t\t\tvarResult = event.arguments[0];", "+\t\t\t\t\t\t\tIDispatch dispatch = varResult.getDispatch();", "+\t\t\t\t\t\t\tVariant variant = new Variant(auto); /* does not need to be disposed */", "+\t\t\t\t\t\t\tIDispatch top = variant.getDispatch();", "+\t\t\t\t\t\t\tif (top.getAddress() == dispatch.getAddress()) {", "+\t\t\t\t\t\t\t\tisAboutBlank = url.startsWith(ABOUT_BLANK);", "+\t\t\t\t\t\t\t\tlastNavigateURL = url;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tVariant variant = new Variant(auto);", "+\t\t\t\t\t\tVariant variant = new Variant(auto); /* does not need to be disposed */", "-\t\t\t\t\t\t\tVariant variant = new Variant(browser.auto);", "+\t\t\t\t\t\t\tVariant variant = new Variant(browser.auto); /* does not need to be disposed */", "-\t\t\t\t\t\t\t/*", "-\t\t\t\t\t\t\t* This code is intentionally commented.  A Variant constructed from an", "-\t\t\t\t\t\t\t* OleAutomation object does not increase its reference count.  The IDispatch", "-\t\t\t\t\t\t\t* obtained from this Variant did not increase the reference count for the", "-\t\t\t\t\t\t\t* OleAutomation instance either. ", "-\t\t\t\t\t\t\t*/", "-\t\t\t\t\t\t\t//variant.dispose();", "-\t\t\t\t\t\t\t//iDispatch.Release();"]}], "num": 4298}