{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d06cd22251ba5cbc756d26002f4642c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8d8a28d46e6af09c660e4830d33442", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void drawBitmapAlpha(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapAlpha(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC(handle);", "-\t\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, srcImage.handle);", "+\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(handle);", "+\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, srcImage.handle);", "-\t\t\tint /*long*/ memDib = Image.createDIB(srcWidth, srcHeight, 32);", "+\t\t\tlong /*int*/ memDib = Image.createDIB(srcWidth, srcHeight, 32);", "-\t\t\tint /*long*/ memHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint /*long*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);", "+\t\t\tlong /*int*/ memHdc = OS.CreateCompatibleDC(handle);", "+\t\t\tlong /*int*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);", "-\tint /*long*/ srcHdc = OS.CreateCompatibleDC(handle);", "-\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, srcImage.handle);", "-\tint /*long*/ memHdc = OS.CreateCompatibleDC(handle);", "-\tint /*long*/ memDib = Image.createDIB(Math.max(srcWidth, destWidth), Math.max(srcHeight, destHeight), 32);", "+\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(handle);", "+\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, srcImage.handle);", "+\tlong /*int*/ memHdc = OS.CreateCompatibleDC(handle);", "+\tlong /*int*/ memDib = Image.createDIB(Math.max(srcWidth, destWidth), Math.max(srcHeight, destHeight), 32);", "-\tint /*long*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);", "+\tlong /*int*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);", "-\t\tint /*long*/ tempHdc = OS.CreateCompatibleDC(handle);", "-\t\tint /*long*/ tempDib = Image.createDIB(destWidth, destHeight, 32);", "+\t\tlong /*int*/ tempHdc = OS.CreateCompatibleDC(handle);", "+\t\tlong /*int*/ tempDib = Image.createDIB(destWidth, destHeight, 32);", "-\t\tint /*long*/ oldTempBitmap = OS.SelectObject(tempHdc, tempDib);", "+\t\tlong /*int*/ oldTempBitmap = OS.SelectObject(tempHdc, tempDib);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78e87df6891740257ff741bac207207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\tint /*long*/ hBitmap = info.hbmColor;", "+\t\t\tlong /*int*/ hBitmap = info.hbmColor;", "-\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "+\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "-\t\t\tint /*long*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hBitmapDC, hBitmap);", "+\t\t\tlong /*int*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hBitmapDC, hBitmap);", "-\t\t\tint /*long*/ oldPalette = 0;", "+\t\t\tlong /*int*/ oldPalette = 0;", "-\t\t\t\tint /*long*/ hPalette = device.hPalette;", "+\t\t\t\tlong /*int*/ hPalette = device.hPalette;", "-\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "+\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "-\t\t\tint /*long*/ handle = this.handle;", "+\t\t\tlong /*int*/ handle = this.handle;", "-\t\t\t\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(memGC.handle, this.handle);", "+\t\t\t\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(memGC.handle, this.handle);", "-\t\t\tint /*long*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hBitmapDC, handle);", "+\t\t\tlong /*int*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hBitmapDC, handle);", "-\t\t\tint /*long*/ oldPalette = 0;", "+\t\t\tlong /*int*/ oldPalette = 0;", "-\t\t\t\tint /*long*/ hPalette = device.hPalette;", "+\t\t\t\tlong /*int*/ hPalette = device.hPalette;"]}], "num": 19775}