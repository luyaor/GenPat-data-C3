{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b68a742341de7ff9c42a1275d3b3db49", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292a9927d35ad08422696e87502f2fe5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9213cc7759276dfbb4dc068628f524b49e86b501", "commitAfterChange": "68636a56d8d850b4f73d1c0b16c1b71a8e851ba7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int calculateWidth (int [] ids, GC gc, boolean recurse)", "signatureAfterChange": "  int calculateWidth (int [] ids, GC gc, boolean recurse, int level, int levelIndent)", "diff": ["-int calculateWidth (int [] ids, GC gc, boolean recurse) {", "+int calculateWidth (int [] ids, GC gc, boolean recurse, int level, int levelIndent) {", "-\t\t\twidth = Math.max (width, item.calculateWidth (0, gc));", "+\t\t\tint itemWidth = item.calculateWidth (0, gc);", "+\t\t\titemWidth += level * levelIndent;", "+\t\t\twidth = Math.max (width, itemWidth);", "-\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc, recurse));", "+\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc, recurse, level + 1, levelIndent));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c878395c54b9949df36c8da53d8fe79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "72473dccc0931885bfe7a6b01078876226c0660e", "commitAfterChange": "dab526a5b07ad05ada04221615d5e89327349c5e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int calculateWidth (int [] ids, GC gc)", "signatureAfterChange": "  int calculateWidth (int [] ids, GC gc, boolean recurse)", "diff": ["-int calculateWidth (int [] ids, GC gc) {", "+int calculateWidth (int [] ids, GC gc, boolean recurse) {", "-\t\t\tif (item._getExpanded ()) {", "-\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc));", "+\t\t\tif (recurse && item._getExpanded ()) {", "+\t\t\t\twidth = Math.max (width, calculateWidth (item.childIds, gc, recurse));"]}], "num": 43145}