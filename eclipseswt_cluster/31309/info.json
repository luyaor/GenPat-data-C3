{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13f1b54199ed591d77618ed5c934df88", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba067d14bc603a436dc29d05a6242f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void createHandle (int index)", "signatureAfterChange": "\r void createHandle (int index)", "diff": ["-\tint backgroundPixel = defaultBackground ();\r", "-\tint [] argList1 = {\r", "+\tint background = defaultBackground ();\r", "+\tint parentHandle = parent.handle;\r", "+\tint [] argList = {\r", "-\t\tOS.XmNtroughColor, backgroundPixel,\r", "-\t\tOS.XmNtopShadowColor, backgroundPixel,\r", "-\t\tOS.XmNbottomShadowColor, backgroundPixel,\r", "+\t\tOS.XmNtroughColor, background,\r", "+\t\tOS.XmNtopShadowColor, background,\r", "+\t\tOS.XmNbottomShadowColor, background,\r", "+\t\tOS.XmNancestorSensitive, 1,\r", "-\thandle = OS.XmCreateScrollBar (parent.handle, null, argList1, argList1.length / 2);\r", "+\thandle = OS.XmCreateScrollBar (parentHandle, null, argList, argList.length / 2);\r", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd27806e55ce18102034e27c541c7f5d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "589c1ec7b77d39c8770bf37f2bb671074c60dc5b", "commitAfterChange": "8d27542b5364358690f55f77bc0c995713708d46", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\t/* AW", "-\tint nIconIndex = 0;", "-\tString fileName = iconName;", "-\tint index = iconName.indexOf (',');", "-\tif (index != -1) {", "-\t\tfileName = iconName.substring (0, index);", "-\t\tString iconIndex = iconName.substring (index + 1, iconName.length ()).trim ();", "-\t\ttry {", "-\t\t\tnIconIndex = Integer.parseInt (iconIndex);", "-\t\t} catch (NumberFormatException e) {};", "-\t}", "-\t*/", "-\t/* Use the character encoding for the default locale */", "-\t/*", "-\tTCHAR lpszFile = new TCHAR (0, fileName, true);", "-\tint [] phiconSmall = new int[1], phiconLarge = null;", "-\tOS.ExtractIconEx (lpszFile, nIconIndex, phiconLarge, phiconSmall, 1);", "-\tif (phiconSmall [0] == 0) return null;", "-\tImage image = Image.win32_new (null, SWT.ICON, phiconSmall[0]);", "-\t*/", "-\t", "-\tif (fImageData == null) {", "-\t\tfImageData= new ImageData(16, 16, 4, ", "-\t\t\tnew PaletteData(", "-\t\t\t\tnew RGB[] {", "-\t\t\t\t\tnew RGB(0xff, 0xff, 0xff), ", "-\t\t\t\t\tnew RGB(0x5f, 0x5f, 0x5f),", "-\t\t\t\t\tnew RGB(0x80, 0x80, 0x80),", "-\t\t\t\t\tnew RGB(0xC0, 0xC0, 0xC0),", "-\t\t\t\t\tnew RGB(0xDF, 0xDF, 0xBF),", "-\t\t\t\t\tnew RGB(0xFF, 0xDF, 0x9F),", "-\t\t\t\t\tnew RGB(0x00, 0x00, 0x00),", "-\t\t\t\t}", "-\t\t\t)", "-\t\t);", "-\t\tfImageData.transparentPixel= 6;\t\t\t// use black for transparency", "-\t", "-\t\tString[] p= {", "-\t\t\t\"CCCCCCCCGGG\",", "-\t\t\t\"CFAAAAACBGG\",", "-\t\t\t\"CAAAAAACFBG\",", "-\t\t\t\"CAAAAAACBBB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CDDDDDDDDDB\",", "-\t\t\t\"CBBBBBBBBBB\"", "-\t\t};", "-\t\t", "-\t\tfor (int y= 0; y < p.length; y++)", "-\t\t\tfor (int x= 0; x < 11; x++)", "-\t\t\t\tfImageData.setPixel(x+3, y+1, p[y].charAt(x)-'A');", "+\tRGB[] rgbs = new RGB[] {", "+\t\tnew RGB(0xff, 0xff, 0xff), ", "+\t\tnew RGB(0x5f, 0x5f, 0x5f),", "+\t\tnew RGB(0x80, 0x80, 0x80),", "+\t\tnew RGB(0xC0, 0xC0, 0xC0),", "+\t\tnew RGB(0xDF, 0xDF, 0xBF),", "+\t\tnew RGB(0xFF, 0xDF, 0x9F),", "+\t\tnew RGB(0x00, 0x00, 0x00),", "+\t};  ", "+\tImageData data = new ImageData(16, 16, 4, new PaletteData(rgbs)\t);", "+\tdata.transparentPixel = 6; // use black for transparency", "+\tString[] p= {", "+\t\t\"CCCCCCCCGGG\",", "+\t\t\"CFAAAAACBGG\",", "+\t\t\"CAAAAAACFBG\",", "+\t\t\"CAAAAAACBBB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CAAAAAAAAEB\",", "+\t\t\"CDDDDDDDDDB\",", "+\t\t\"CBBBBBBBBBB\",", "+\t};", "+\tfor (int y= 0; y < p.length; y++) {", "+\t\tfor (int x= 0; x < 11; x++) {", "+\t\t\tdata.setPixel(x+3, y+1, p[y].charAt(x)-'A');", "+\t\t}", "-\treturn fImageData;", "+\treturn data;"]}], "num": 31309}