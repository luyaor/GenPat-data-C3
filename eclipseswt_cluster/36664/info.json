{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc6143f17c8cefcacd1e760cd19e48fc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2fc92723c14c5d937892dba47725d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "4e2aa03a056cdb0b186f24b54b9a9e25d8e80922", "commitAfterChange": "8f74400627fe378267067a48a1bbad7ee433b09b", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 287, "signatureBeforeChange": " public void setCursor (Cursor cursor)", "signatureAfterChange": " public void setCursor (Cursor cursor)", "diff": ["+\tcheckWidget();", "+\tif (cursor != null && cursor.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tthis.cursor = cursor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3157a4d0f060d132a956fd949942e2e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/widgets/Synchronizer.java", "commitBeforeChange": "9c473160f70ea03f9b06a110ca95335a7fd637d7", "commitAfterChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void syncExec (Runnable runnable)", "signatureAfterChange": " protected void syncExec (Runnable runnable)", "diff": ["-\tif (display.isValidThread ()) {", "+\tRunnableLock lock = null;", "+\tsynchronized (Device.class) {", "+\t\tif (display == null || display.isDisposed ()) SWT.error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (!display.isValidThread ()) {", "+\t\t\tif (runnable == null) {", "+\t\t\t\tdisplay.wake ();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tlock = new RunnableLock (runnable);", "+\t\t\t/*", "+\t\t\t * Only remember the syncThread for syncExec.", "+\t\t\t */", "+\t\t\tlock.thread = Thread.currentThread();", "+\t\t\taddLast (lock);", "+\t\t}", "+\t}", "+\tif (lock == null) {", "-\tif (runnable == null) {", "-\t\tdisplay.wake ();", "-\t\treturn;", "-\t}", "-\tRunnableLock lock = new RunnableLock (runnable);", "-\t/*", "-\t * Only remember the syncThread for syncExec.", "-\t */", "-\tlock.thread = Thread.currentThread();", "-\t\taddLast (lock);"]}], "num": 36664}