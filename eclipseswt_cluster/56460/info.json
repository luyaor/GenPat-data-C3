{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c76aa5029a9f2178d066161233605f75", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e97bd35a201043bcc9967f60e251c3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9927361197d477d52c62f2dc9061f9e7fb7b75e0", "commitAfterChange": "64b3bdb8b0bad26abbee4f725fbbc56d17db43c8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["-\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "-\t\t// there are either 0 columns or that column 0 is still the first physical column.", "-\t\tNSRect eraseItemRect = null;", "-\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || outlineView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "-\t\t\teraseItemRect = new NSRect ();", "-\t\t\teraseItemRect.y = cellRect.y;", "-\t\t\teraseItemRect.width = cellRect.x + cellRect.width;", "-\t\t\teraseItemRect.height = cellRect.height;", "-\t\t} else {", "-\t\t\teraseItemRect = cellRect;", "-\t\t}", "-\t\tdata.paintRect = eraseItemRect;", "+\t\tdata.paintRect = cellRect;", "-\t\tgc.setClipping ((int)eraseItemRect.x, (int)eraseItemRect.y, (int)eraseItemRect.width, (int)eraseItemRect.height);", "+\t\tgc.setClipping ((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "-\t\tevent.x = (int)eraseItemRect.x;", "-\t\tevent.y = (int)eraseItemRect.y;", "-\t\tevent.width = (int)eraseItemRect.width;", "-\t\tevent.height = (int)eraseItemRect.height;", "+\t\tevent.x = (int)cellRect.x;", "+\t\tevent.y = (int)cellRect.y;", "+\t\tevent.width = (int)cellRect.width;", "+\t\tevent.height = (int)cellRect.height;", "-\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "-\t\t// there are either 0 columns or that column 0 is still the first physical column.", "-\t\tNSRect clipRect;", "-\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || outlineView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "-\t\t\tclipRect = new NSRect ();", "-\t\t\tclipRect.y = cellRect.y;", "-\t\t\tclipRect.width = cellRect.x + cellRect.width;", "-\t\t\tclipRect.height = cellRect.height;", "-\t\t} else {", "-\t\t\tclipRect = cellRect;", "-\t\t}", "-\t\tdata.paintRect = clipRect;", "+\t\tdata.paintRect = cellRect;", "-\t\tgc.setClipping ((int)clipRect.x, (int)clipRect.y, (int)clipRect.width, (int)clipRect.height);", "+\t\tgc.setClipping ((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1184fac49eb8b2b9c4fcdd437c5d963d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9927361197d477d52c62f2dc9061f9e7fb7b75e0", "commitAfterChange": "64b3bdb8b0bad26abbee4f725fbbc56d17db43c8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "signatureAfterChange": "  void drawInteriorWithFrame_inView (int id, int sel, int cellFrame, int view)", "diff": ["-\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "-\t\t// there are either 0 columns or that column 0 is still the first physical column.", "-\t\tNSRect eraseItemRect = null;", "-\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || tableView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "-\t\t\teraseItemRect = new NSRect ();", "-\t\t\teraseItemRect.y = cellRect.y;", "-\t\t\teraseItemRect.width = cellRect.x + cellRect.width;", "-\t\t\teraseItemRect.height = cellRect.height;", "-\t\t} else {", "-\t\t\teraseItemRect = cellRect;", "-\t\t}", "-", "-\t\tdata.paintRect = eraseItemRect;", "+\t\tdata.paintRect = cellRect;", "-\t\tgc.setClipping ((int)eraseItemRect.x, (int)eraseItemRect.y, (int)eraseItemRect.width, (int)eraseItemRect.height);", "+\t\tgc.setClipping ((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);", "-\t\tevent.x = (int)eraseItemRect.x;", "-\t\tevent.y = (int)eraseItemRect.y;", "-\t\tevent.width = (int)eraseItemRect.width;", "-\t\tevent.height = (int)eraseItemRect.height;", "+\t\tevent.x = (int)cellRect.x;", "+\t\tevent.y = (int)cellRect.y;", "+\t\tevent.width = (int)cellRect.width;", "+\t\tevent.height = (int)cellRect.height;", "-\t\t// TODO how to handle rearranged columns?  The third clause below ensures that", "-\t\t// there are either 0 columns or that column 0 is still the first physical column.", "-\t\tNSRect clipRect;", "-\t\tif (columnIndex == 0 && (style & SWT.CHECK) != 0 && (columnCount == 0 || tableView.columnWithIdentifier (columns[0].nsColumn) == 1)) {", "-\t\t\tclipRect = new NSRect ();", "-\t\t\tclipRect.y = cellRect.y;", "-\t\t\tclipRect.width = cellRect.x + cellRect.width;", "-\t\t\tclipRect.height = cellRect.height;", "-\t\t} else {", "-\t\t\tclipRect = cellRect;", "-\t\t}", "-", "-\t\tdata.paintRect = clipRect;", "+\t\tdata.paintRect = cellRect;", "-\t\tgc.setClipping ((int)clipRect.x, (int)clipRect.y, (int)clipRect.width, (int)clipRect.height);", "+\t\tgc.setClipping ((int)cellRect.x, (int)cellRect.y, (int)cellRect.width, (int)cellRect.height);"]}], "num": 56460}