{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2726e31ad71b81c72986f4d45eedf78f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc471969efd4c094c28e387e927126b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_SWTError.java", "commitBeforeChange": "2272262fa1ad2a17677f9473dd0c94e9b168217c", "commitAfterChange": "66413abed4d13d9d98291abd8415d641f3043b15", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test_printStackTrace()", "signatureAfterChange": "  public void test_printStackTrace()", "diff": ["-\twarnUnimpl(\"Test test_printStackTrace not written\");", "+\t", "+\t// WARNING: this test is not CLDC safe, because it requires java.io.PrintStream", "+\t", "+\ttry {", "+\t\tClass.forName(\"java.io.PrintStream\");", "+\t} catch (ClassNotFoundException e) {", "+\t\t// ignore test if running on CLDC", "+\t\treturn;", "+\t}", "+\t", "+\t// test default SWTError", "+\t", "+\tByteArrayOutputStream out = new ByteArrayOutputStream();", "+\tSystem.setErr(new PrintStream(out));", "+\tSWTError error = new SWTError();", "+\terror.printStackTrace();", "+\tassertTrue(out.size() > 0);", "+\tassertTrue(new String(out.toByteArray()).indexOf(\"test_printStackTrace\") != -1);", "+\t", "+\t// test SWTError with code", "+\t", "+\tout = new ByteArrayOutputStream();", "+\tSystem.setErr(new PrintStream(out));", "+\terror = new SWTError(SWT.ERROR_INVALID_ARGUMENT);", "+\terror.printStackTrace();", "+\tassertTrue(out.size() > 0);", "+\tassertTrue(new String(out.toByteArray()).indexOf(\"test_printStackTrace\") != -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ccbbde83c4c9fd0ead41a1cd1d5c75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_SWTException.java", "commitBeforeChange": "2272262fa1ad2a17677f9473dd0c94e9b168217c", "commitAfterChange": "66413abed4d13d9d98291abd8415d641f3043b15", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test_printStackTrace()", "signatureAfterChange": "  public void test_printStackTrace()", "diff": ["-\twarnUnimpl(\"Test test_printStackTrace not written\");", "+\t", "+\t// WARNING: this test is not CLDC safe, because it requires java.io.PrintStream", "+\t", "+\ttry {", "+\t\tClass.forName(\"java.io.PrintStream\");", "+\t} catch (ClassNotFoundException e) {", "+\t\t// ignore test if running on CLDC", "+\t\treturn;", "+\t}", "+\t", "+\t// test default SWTException", "+\t", "+\tByteArrayOutputStream out = new ByteArrayOutputStream();", "+\tSystem.setErr(new PrintStream(out));", "+\tSWTException error = new SWTException();", "+\terror.printStackTrace();", "+\tassertTrue(out.size() > 0);", "+\tassertTrue(new String(out.toByteArray()).indexOf(\"test_printStackTrace\") != -1);", "+\t", "+\t// test SWTException with code", "+\t", "+\tout = new ByteArrayOutputStream();", "+\tSystem.setErr(new PrintStream(out));", "+\terror = new SWTException(SWT.ERROR_INVALID_ARGUMENT);", "+\terror.printStackTrace();", "+\tassertTrue(out.size() > 0);", "+\tassertTrue(new String(out.toByteArray()).indexOf(\"test_printStackTrace\") != -1);"]}], "num": 44568}