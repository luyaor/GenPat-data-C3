{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec012527eb9a028fa8aa3c49bb6f223b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850840dee616c8557c7d833f7afaa01b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "e64134ae3baf426ba8aa33bf3751db7cc6368387", "commitAfterChange": "64de8be21d4cc500c36cb666da2c84ecd5d1598a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": " int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+}", "+\tif ((style & SWT.ARROW) != 0 && OS.VERSION >= 0x1050) {", "+\t\tint [] context = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, context);", "+\t\tint state = display.grabControl == this ? OS.kThemeStateActive : OS.kThemeStateInactive;", "+\t\tCGRect rect = new CGRect ();", "+\t\tOS.HIViewGetBounds (handle, rect);", "+\t\tint orientation = OS.kThemeArrowRight;", "+\t\tif ((style & SWT.UP) != 0) orientation = OS.kThemeArrowUp;", "+\t\tif ((style & SWT.DOWN) != 0) orientation = OS.kThemeArrowDown;;", "+\t\tif ((style & SWT.LEFT) != 0) orientation = OS.kThemeArrowLeft;", "+\t\tHIThemePopupArrowDrawInfo info = new HIThemePopupArrowDrawInfo ();", "+\t\tinfo.state = state;", "+\t\tinfo.orientation = (short) orientation;", "+\t\tinfo.size = (short) OS.kThemeArrow9pt;", "+\t\tOS.HIThemeDrawPopupArrow (rect, info, context [0], OS.kHIThemeOrientationNormal);", "+\t\treturn OS.noErr;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd3f0428e01114dfa4b5576435fff01c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "bcbb67364ca132ab020802341c67102fbef2e499", "commitAfterChange": "78f0c776d53220a44bdf02b852c9a928a5d226ab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 3, "signatureBeforeChange": " TreeItem getNextVisibleItem(TreeItem item, boolean includeChildren)", "signatureAfterChange": " TreeItem nextItem(TreeItem item)", "diff": ["+TreeItem nextItem(TreeItem item) {", "+\tif (item == null) return null;", "+\tif (item.getExpanded()) return item.getItem(0);", "+\tTreeItem childItem = item;", "+\tTreeItem parentItem = childItem.getParentItem();", "+\tint index = parentItem == null ? tree.indexOf(childItem) : parentItem.indexOf(childItem);", "+\tint count = parentItem == null ? tree.getItemCount() : parentItem.getItemCount();", "+\twhile (true) {", "+\t\tif (index + 1 < count) return parentItem == null ? tree.getItem(index + 1) : parentItem.getItem(index + 1);", "+\t\tif (parentItem == null) return null;", "+\t\tchildItem = parentItem;", "+\t\tparentItem = childItem.getParentItem();", "+\t\tindex = parentItem == null ? tree.indexOf(childItem) : parentItem.indexOf(childItem);", "+\t\tcount = parentItem == null ? tree.getItemCount() : parentItem.getItemCount();", "-}", "-TreeItem getNextVisibleItem(TreeItem item, boolean includeChildren) {", "-\t// look down", "-\t// neccesary on the first pass only", "-\tif (includeChildren && item.getItemCount() > 0 && item.getExpanded()) {", "-\t\treturn item.getItems()[0];", "-\t}", "-\t// look sideways", "-\tTreeItem parent = item.getParentItem();", "-\tTreeItem[] peers = (parent != null) ? parent.getItems() : tree.getItems();", "-\tfor (int i = 0; i < peers.length - 1; i++) {", "-\t\tif (peers[i] == item) return peers[i + 1];", "-\t}", "-\t// look up", "-\tif (parent != null) return getNextVisibleItem(parent, false);", "-\treturn null;", "-}"]}], "num": 54578}