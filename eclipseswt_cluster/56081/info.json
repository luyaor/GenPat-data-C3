{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98d114c886aab289a11d608b41c84959", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308a7f95e78f9d7963f1c082da1029e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "978d48d42c3262ef5009443e340a15354ba73bc2", "commitAfterChange": "77f807b9b7ad213dd1311a8506237cb73015310d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tint getControlHandle ()", "signatureAfterChange": "  \tint getControlHandle ()", "diff": ["-\t\treturn control.handle;", "+\t\tint /*long*/ result = control.handle;", "+\t\tif (control instanceof Label) {", "+\t\t\tint /*long*/ list = OS.gtk_container_get_children (result);", "+\t\t\tif (list != 0) {", "+\t\t\t\tint /*long*/ temp = list;", "+\t\t\t\twhile (temp != 0) {", "+\t\t\t\t\tint /*long*/ widget = OS.g_list_data( temp);", "+\t\t\t\t\tif (OS.GTK_WIDGET_VISIBLE (widget)) {", "+\t\t\t\t\t\tresult = widget;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\ttemp = OS.g_list_next (temp);", "+\t\t\t\t}", "+\t\t\t\tOS.g_list_free (list);", "+\t\t\t}", "+\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28983ad391a5451c594ddf8c34de30f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "9c5d567d04aa850b8991464cda209f35362e7d77", "commitAfterChange": "f1be65ba0f39f9cd9ae7b1430176adac122402ac", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+", "+\t\t/*", "+\t\t* Feature in GTK.  There is no API to query the button", "+\t\t* handle from a combo box although it is possible to get the", "+\t\t* text field.  The button handle is needed to hook events.  The", "+\t\t* fix is to walk the combo tree and find the first child that is ", "+\t\t* an instance of button.", "+\t\t*/", "+\t\tOS.gtk_container_forall (handle, display.allChildrenProc, 0);", "+\t\tif (display.allChildren != 0) {", "+\t\t\tint /*long*/ list = display.allChildren;", "+\t\t\twhile (list != 0) {", "+\t\t\t\tint /*long*/ widget = OS.g_list_data (list);", "+\t\t\t\tif (OS.GTK_IS_BUTTON (widget)) {", "+\t\t\t\t\tbuttonHandle = widget;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.g_list_free (display.allChildren);", "+\t\t\tdisplay.allChildren = 0;", "+\t\t}", "-\t\t\t\t\tarrowHandle = childHandle;", "+\t\t\t\t\tbuttonHandle = childHandle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57df90eddc11a22baf094abf4f91731e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f98a1ff7c1a27e047092b8cba5cdfe9939093982", "commitAfterChange": "84d02473c764362a6d38be47c67797460ddc5b2c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["-\t\t\tint /*long*/ ptr = OS.getenv (ascii (\"APP_NAME_\" + OS.getpid ()));", "+\t\t\tint pid = OS.getpid ();", "+\t\t\tint /*long*/ ptr = OS.getenv (ascii (\"APP_NAME_\" + pid));", "-//\t\t\tptr = OS.getenv (ascii (\"APP_ICON_\" + pid));", "-//\t\t\tif (ptr != 0) {", "-//\t\t\t\tint image = readImageRef (ptr);", "-//\t\t\t\tif (image != 0) {", "-//\t\t\t\t\tdockImage = image;", "-//\t\t\t\t\tOS.SetApplicationDockTileImage (dockImage);", "-//\t\t\t\t}", "-//\t\t\t}", "+\t\t\tptr = OS.getenv (ascii (\"APP_ICON_\" + pid));", "+\t\t\tif (ptr != 0) {", "+\t\t\t\tNSString path = NSString.stringWithUTF8String (ptr);", "+\t\t\t\tNSImage image = (NSImage) new NSImage().alloc();", "+\t\t\t\tNSImage result = image.initByReferencingFile(path);", "+\t\t\t\tif (result != null) {", "+\t\t\t\t\tdockImage = image;", "+\t\t\t\t\tapplication.setApplicationIconImage(image);", "+\t\t\t\t} else {", "+\t\t\t\t\timage.release();", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881305eb61bba9edff357db2795f2232", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "c4f3dc85f0ccec5c74cb285cf4a25fdd845a37f7", "commitAfterChange": "8226320c2212f07bb2da2ffd0edd37cc6d5d025c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int getSelectionIndex ()", "signatureAfterChange": " public int getSelectionIndex ()", "diff": ["-\t//NOT RIGHT FOR EDITABLE", "-\treturn indexOf (getText ());", "+\tint index = 0, result = -1;", "+\tint /*long*/ children = OS.gtk_container_get_children (listHandle);", "+\tint /*long*/ temp = children;", "+\twhile (temp != 0) {", "+\t\tint /*long*/ item = OS.g_list_data (temp);", "+\t\tif (OS.GTK_WIDGET_STATE (item) == OS.GTK_STATE_SELECTED) {", "+\t\t\tresult = index;", "+\t\t\tbreak;", "+\t\t}", "+\t\tindex++;", "+\t\ttemp = OS.g_list_next (temp);", "+\t}\t", "+\tOS.g_list_free (children);", "+\treturn result;"]}], "num": 56081}