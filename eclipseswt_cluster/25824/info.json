{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "692cc4968332800e9feda6f7a12b42b7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507dfe999ebbb6fb3c86fcd518c579a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f86b9ebe2b0df4c73482603496c165ab5faee1d3", "commitAfterChange": "8980b86038eacdc7bd892692fe36237fa3f5ae14", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": " String getComputeSizeString(int style)", "signatureAfterChange": "  String getComputeSizeString(int style)", "diff": ["-//TODO: switch to using resize instead of layout for sizing. Then may not need this method?", "-String getComputeSizeString(int style) {", "-\t// TODO: this method needs to be more generic (see setFormat)", "-\tif ((style & SWT.TIME) != 0) {", "-\t\tint h = calendar.get(Calendar.HOUR);", "-\t\tint m = calendar.get(Calendar.MINUTE);", "-\t\tint s = calendar.get(Calendar.SECOND);", "-\t\tint a = calendar.get(Calendar.AM_PM);", "-\t\treturn \"\" + (h < 10 ? \" \" : \"\") + h + \":\" + (m < 10 ? \" \" : \"\") + m + \":\" + (s < 10 ? \" \" : \"\") + s + \" \" + (a == Calendar.AM ? \"AM\" : \"PM\");", "-\t}", "-\t/* SWT.DATE */", "-\tint y = calendar.get(Calendar.YEAR);", "-\tint m = calendar.get(Calendar.MONTH);", "-\tint d = calendar.get(Calendar.DAY_OF_MONTH);", "-\treturn \"\" + (m < 10 ? \" \" : \"\") + m + \"/\" + (d < 10 ? \" \" : \"\") + d + \"/\" + y;", "-}", "+String getComputeSizeString(int style) {", "+\t// TODO: this method needs to be more generic (see setFormat)", "+\treturn (style & SWT.TIME) != 0 ? defaultTimeFormat : defaultDateFormat;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e811f84f40d55bfa07c06a09ac251c5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "810eb254cbe71a3e1637e56f044fa70b981eb39d", "commitAfterChange": "803bd538f4c4c40e1d60df10cb6937bfea9dab26", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tint trimX = x - marginWidth - highlight_margin - borderLeft;", "-\tint trimWidth = width + borderLeft + borderRight + 2*marginWidth + 2*highlight_margin;", "-\tif (minimized) {", "-\t\tint trimY = onBottom ? y - borderTop : y - highlight_header - tabHeight - borderTop;", "-\t\tint trimHeight = borderTop + borderBottom + tabHeight + highlight_header;", "-\t\treturn new Rectangle (trimX, trimY, trimWidth, trimHeight);", "-\t} else {", "-\t\tint trimY = onBottom ? y - marginHeight - highlight_margin - borderTop: y - marginHeight - highlight_header - tabHeight - borderTop;", "-\t\tint trimHeight = height + borderTop + borderBottom + 2*marginHeight + tabHeight + highlight_header + highlight_margin;", "-\t\treturn new Rectangle (trimX, trimY, trimWidth, trimHeight);", "-\t}", "+\treturn renderer.computeTrim(CTabFolderRenderer.PART_BODY, SWT.NONE, x, y, width, height);"]}], "num": 25824}