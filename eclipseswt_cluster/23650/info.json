{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1f1925a24bd645eb4e7ec6561a7c808", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ab2e59b3b28dd3c808085a7d600c14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "79e78dbd55125a744a1b1d42197a460d8916d839", "commitAfterChange": "c7b1477f4b3e5a08aa0020fd2c81f4d79120ef0d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   void computeRuns()", "signatureAfterChange": "   void computeRuns()", "diff": ["-\t\t\t//TODO implement metrics ", "+\t\t\tinitClasses();", "+\t\t\tchar [] buffer = new char [(int)range.length];", "+\t\t\tfor (int j = 0; j < buffer.length; j++) {", "+\t\t\t\tbuffer[j] = '\\uFFFC';", "+\t\t\t}", "+\t\t\tNSString string = NSString.stringWithCharacters(buffer, buffer.length);", "+\t\t\tattrStr.replaceCharactersInRange(range, string);", "+\t\t\t", "+\t\t\trun.jniRef =  OS.NewGlobalRef(run);", "+\t\t\tif (run.jniRef == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\trun.cell = (SWTTextAttachmentCell) new SWTTextAttachmentCell().alloc().init();", "+\t\t\tOS.object_setInstanceVariable(run.cell.id, SWT_OBJECT, run.jniRef);", "+", "+\t\t\tNSTextAttachment attachment = ((NSTextAttachment)new NSTextAttachment().alloc()).initWithFileWrapper(null);", "+\t\t\tattachment.setAttachmentCell(run.cell);", "+\t\t\tattrStr.addAttribute(OS.NSAttachmentAttributeName, attachment, range);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14063821c7b01fca99da4165b9829136", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "857230dde8be1397ae2557844c139695d4aaa4a3", "commitAfterChange": "12d130cb4332a4845bcf0cce6120014733136f99", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  synchronized void createDisplay (DeviceData data)", "signatureAfterChange": "  synchronized void createDisplay (DeviceData data)", "diff": ["-\tOS.gtk_widget_set_default_direction (OS.GTK_TEXT_DIR_LTR);", "-\tOS.gdk_rgb_init ();", "+\tif (fixed_type == 0) {", "+\t\tbyte [] type_name = Converter.wcsToMbcs (null, \"SwtFixed\", true);", "+\t\tfixedClassInitCallback = new Callback (getClass (), \"fixedClassInitProc\", 2);", "+\t\tfixedClassInitProc = fixedClassInitCallback.getAddress ();", "+\t\tif (fixedClassInitProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\tfixedMapCallback = new Callback (getClass (), \"fixedMapProc\", 1);", "+\t\tfixedMapProc = fixedMapCallback.getAddress ();", "+\t\tif (fixedMapProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\tGTypeInfo fixed_info = new GTypeInfo ();", "+\t\tfixed_info.class_size = (short) OS.GtkFixedClass_sizeof ();", "+\t\tfixed_info.class_init = fixedClassInitProc;", "+\t\tfixed_info.instance_size = (short) OS.GtkFixed_sizeof ();", "+\t\tfixed_info_ptr = OS.g_malloc (GTypeInfo.sizeof);", "+\t\tOS.memmove (fixed_info_ptr, fixed_info, GTypeInfo.sizeof);", "+\t\tfixed_type = OS.g_type_register_static (OS.GTK_TYPE_FIXED (), type_name, fixed_info_ptr, 0);", "+\t}\t", "+\tOS.gtk_widget_set_default_direction (OS.GTK_TEXT_DIR_LTR);", "+\tOS.gdk_rgb_init ();"]}], "num": 23650}