{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa920517ba718d5251c4c06e5355da1d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "538e908d9b8910bba4091307993095da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 70, "signatureBeforeChange": "  public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["-", "-public void setBackground (Color color) {", "-\tsuper.setBackground(color);", "-\tbackground = color;", "-\t// init inactive close button", "-\tinactiveCloseBar.setBackground(color);", "-\t", "-\t// init scroll buttons", "-\tarrowBar.setBackground(color);", "-", "-\t//init topRight control", "-\tif (topRight != null)", "-\t\ttopRight.setBackground(color);", "-", "-\t// init close button", "-\tif (gradientColors == null) {", "-\t\tcloseBar.setBackground(color);", "+}", "+public void setBackground (Color color) {", "+\tif (color == null) color = getDisplay().getSystemColor(BACKGROUND);", "+\tsuper.setBackground(color);", "+\tredraw();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcf39238bb4351377aa89fff9348879", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "  void setClipping(long clipRgn)", "signatureAfterChange": "  void setClipping(long clipRgn)", "diff": ["-\t\t\tOS.gdk_region_destroy(data.clipRgn);", "+\t\t\tcairo_region_destroy (data.clipRgn);", "-\t\tif (data.clipRgn == 0) data.clipRgn = OS.gdk_region_new();", "-\t\tOS.gdk_region_subtract(data.clipRgn, data.clipRgn);", "-\t\tOS.gdk_region_union(data.clipRgn, clipRgn);", "+\t\tif (data.clipRgn == 0) data.clipRgn = cairo_region_create ();", "+\t\tcairo_region_subtract (data.clipRgn, data.clipRgn);", "+\t\tcairo_region_union (data.clipRgn, clipRgn);", "-\t\t\t\tclipping = OS.gdk_region_new();", "-\t\t\t\tOS.gdk_region_union(clipping, clipRgn);", "-\t\t\t\tOS.gdk_region_intersect(clipping, data.damageRgn);", "+\t\t\t\tclipping = cairo_region_create ();", "+\t\t\t\tcairo_region_union (clipping, clipRgn);", "+\t\t\t\tcairo_region_intersect (clipping, data.damageRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e049d1c5b36680f832c726b19f2da9ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "b6d0ee110e57f3c67bf71b4e96d80baaa044accc", "commitAfterChange": "484b7d7f493fdf964519e917013d0e7051ca8a00", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public Rectangle getTextBounds (int index)", "signatureAfterChange": " public Rectangle getTextBounds (int index)", "diff": ["-\tif (x[0] < getImage(index).getBounds().width && OS.GTK3) {", "-\t\tint difference = getImage(index).getBounds().width - x[0];", "-\t\trect.x += x[0] + difference;", "+\tint imageWidth = _getImage (index).getBounds ().width;", "+\tif (OS.GTK3 && x [0] < imageWidth) {", "+\t\trect.x += imageWidth;", "-\t\trect.x += x[0];", "+\t\trect.x += x [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6222f7fa0173ab9313d146a63bc386e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb3534bcdc2d38bc184b055b59a542f294cf921d", "commitAfterChange": "02978a488ad6a59baa930b6015ae04662bb09af1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "signatureAfterChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "diff": ["-\t\tif (accessibleAttributeListeners.size() == 0) return null;", "+\t\tif (accessibleAttributeListenersSize() == 0) return null;", "-\t\t\tif (accessibleAttributeListeners.size() > 0) {", "-\t\t\t\tfor (int i = 0; i < accessibleAttributeListeners.size(); i++) {", "-\t\t\t\t\tAccessibleAttributeListener listener = (AccessibleAttributeListener) accessibleAttributeListeners.elementAt(i);", "-\t\t\t\t\tlistener.getTextAttributes(event);", "-\t\t\t\t}", "+\t\t\tfor (int i = 0; i < accessibleAttributeListenersSize(); i++) {", "+\t\t\t\tAccessibleAttributeListener listener = (AccessibleAttributeListener) accessibleAttributeListeners.elementAt(i);", "+\t\t\t\tlistener.getTextAttributes(event);", "-\t\tif (accessibleAttributeListeners.size() > 0) {", "-\t\t\tfor (int i = 0; i < accessibleAttributeListeners.size(); i++) {", "-\t\t\t\tAccessibleAttributeListener listener = (AccessibleAttributeListener) accessibleAttributeListeners.elementAt(i);", "-\t\t\t\tlistener.getAttributes(docAttributes);", "-\t\t\t}", "+\t\tfor (int i = 0; i < accessibleAttributeListenersSize(); i++) {", "+\t\t\tAccessibleAttributeListener listener = (AccessibleAttributeListener) accessibleAttributeListeners.elementAt(i);", "+\t\t\tlistener.getAttributes(docAttributes);"]}], "num": 27667}