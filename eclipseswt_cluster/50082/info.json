{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59f60e192187f747779d9539d1ab8887", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd1f87a39ab404b42e7115ef7f3e3bbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-}", "-public Rectangle getBounds () {", "-\tint columnCount = parent.getColumnCount ();", "-\tint focusX = getFocusX ();", "-\t", "-\t/*", "-\t * If there are no columns then this is essentially the bounds of the text", "-\t */", "-\tif (columnCount == 0) {", "-\t\treturn new Rectangle (", "-\t\t\tfocusX,", "-\t\t\tparent.getItemY (this),", "-\t\t\tgetTextPaintWidth (0),", "-\t\t\tparent.getItemHeight ());", "-\t}", "-\t", "-\t/*", "-\t * If there are columns then this runs from the beginning of the column 0", "-\t * text to the end of the last column.", "-\t */", "-\tTreeColumn lastColumn = parent.getColumn (columnCount - 1);", "-\treturn new Rectangle (", "-\t\tfocusX,", "-\t\tparent.getItemY (this),", "-\t\tlastColumn.getX () + lastColumn.getWidth () - focusX,", "-\t\tparent.getItemHeight ());", "-}", "+public Rectangle getBounds() {", "+\tcheckWidget();", "+\tTree2 parent = getParent();", "+\tPoint extent = getItemExtent();", "+\tint x = getTextXPos() - TEXT_INDENT;", "+\t", "+\treturn new Rectangle(x, parent.getRedrawY(this), extent.x - (x - getItemStartX()), extent.y);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa603e917a9881ca3bfac869cc8e0ca2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e36b8bd87f3c0cb0244bfa422034d4e8a40488f5", "commitAfterChange": "66a1a42306555d1bc99e8fa27a27656a65ca8332", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 106, "signatureBeforeChange": "  boolean setScrollWidth (TableItem item, boolean force)", "signatureAfterChange": "  boolean setScrollWidth (TableItem item, boolean force)", "diff": ["+", "-\t\t\t/*", "-\t\t\t* Feature in Windows.  When LVM_SETCOLUMNWIDTH is sent,", "-\t\t\t* Windows draws right away instead of queuing a WM_PAINT.", "-\t\t\t* This can cause recursive calls when called from paint", "-\t\t\t* or from messages that are retrieving the item data,", "-\t\t\t* such as WM_NOTIFY, causing a stack overflow.  The fix", "-\t\t\t* is to turn off redraw and queue a repaint, collapsing", "-\t\t\t* the recursive calls.", "-\t\t\t*/", "-\t\t\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);", "-\t\t\tif (redraw) OS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETCOLUMNWIDTH, 0, newWidth);", "-\t\t\tif (redraw) {", "-\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\t\t\tif (OS.IsWinCE) {", "-\t\t\t\t\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "-\t\t\t\t\tif (hwndHeader != 0) OS.InvalidateRect (hwndHeader, null, true);", "-\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t\t\t} else {", "-\t\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "-\t\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tsetScrollWidth (newWidth);"]}], "num": 50082}