{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1382d77bf004ad32c1e24d9795905ee6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ffe77932fdd45cb5bfa895e8e591d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "ea15a960a853001410e58a3d24c8aee2da7a0620", "commitAfterChange": "20653c6768e7a089a6fded9c39628f2ae0b74cbf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int transparentProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int transparentProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\t\tbreak;", "+\t\tcase OS.WM_PAINT:", "+\t\t\tif (parent == null && !OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT();", "+\t\t\t\tint hDC = OS.BeginPaint (hwnd, ps);", "+\t\t\t\tint hBitmap = 0, hBrush = 0, oldBrush = 0;\t\t\t", "+\t\t\t\tint transparentBrush = OS.CreateSolidBrush(0xFFFFFF);", "+\t\t\t\toldBrush = OS.SelectObject (hDC, transparentBrush);", "+\t\t\t\tOS.PatBlt (hDC, ps.left, ps.top, ps.right - ps.left, ps.bottom - ps.top, OS.PATCOPY);", "+\t\t\t\tOS.SelectObject (hDC, oldBrush);", "+\t\t\t\tOS.DeleteObject (transparentBrush);", "+\t\t\t\tint bandWidth = 1;", "+\t\t\t\tif (stippled) {", "+\t\t\t\t\tbandWidth = 3;", "+\t\t\t\t\tbyte [] bits = {-86, 0, 85, 0, -86, 0, 85, 0, -86, 0, 85, 0, -86, 0, 85, 0};", "+\t\t\t\t\thBitmap = OS.CreateBitmap (8, 8, 1, 1, bits);", "+\t\t\t\t\thBrush = OS.CreatePatternBrush (hBitmap);", "+\t\t\t\t\toldBrush = OS.SelectObject (hDC, hBrush);", "+\t\t\t\t\tOS.SetBkColor (hDC, 0xF0F0F0);", "+\t\t\t\t} else {", "+\t\t\t\t\toldBrush = OS.SelectObject (hDC, OS.GetStockObject(OS.BLACK_BRUSH));", "+\t\t\t\t}", "+\t\t\t\tRectangle[] rects = this.rectangles;", "+\t\t\t\tfor (int i=0; i<rects.length; i++) {", "+\t\t\t\t\tRectangle rect = rects [i];", "+\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y, rect.width, bandWidth, OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y + bandWidth, bandWidth, rect.height - (bandWidth * 2), OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect.x + rect.width - bandWidth, rect.y + bandWidth, bandWidth, rect.height - (bandWidth * 2), OS.PATCOPY);", "+\t\t\t\t\tOS.PatBlt (hDC, rect.x, rect.y + rect.height - bandWidth, rect.width, bandWidth, OS.PATCOPY);", "+\t\t\t\t}", "+\t\t\t\tOS.SelectObject (hDC, oldBrush);", "+\t\t\t\tif (stippled) {", "+\t\t\t\t\tOS.DeleteObject (hBrush);", "+\t\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\t}", "+\t\t\t\tOS.EndPaint (hwnd, ps);", "+\t\t\t\treturn 0;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25aa08275f8b6f017ab5775bd4986e1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "c926aa683b725b279c6c7318e19d80650c45580f", "commitAfterChange": "35e1ba894deda696191ae79f0f2eca2ead117007", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void _setImage (Image image)", "signatureAfterChange": "  void _setImage (Image image)", "diff": ["+\t\t\t", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  The button control mirrors its image when the", "+\t\t\t* flag WS_EX_LAYOUTRTL is set. This behaviour is not desirable in SWT.", "+\t\t\t* The fix is to set a mirrored version of real image in the button.", "+\t\t\t*/", "+\t\t\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (4, 10)) {", "+\t\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\t\t\tint dstHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "+\t\t\t\t\tint oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "+\t\t\t\t\tOS.SetLayout (dstHdc, OS.LAYOUT_RTL);", "+\t\t\t\t\tif (fImageType == OS.IMAGE_BITMAP) {", "+\t\t\t\t\t\tint srcHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\t\tint oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\t\tOS.SetLayout (dstHdc, 0);", "+\t\t\t\t\t\tOS.BitBlt (dstHdc, 0, 0, rect.width, rect.height, srcHdc, 0, 0, OS.SRCCOPY);", "+\t\t\t\t\t\tOS.SelectObject (srcHdc, oldSrcBitmap);", "+\t\t\t\t\t\tOS.DeleteDC (srcHdc);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint newBrush = OS.CreateSolidBrush (getBackgroundPixel ());", "+\t\t\t\t\t\tint oldBrush = OS.SelectObject (dstHdc, newBrush);", "+\t\t\t\t\t\tOS.PatBlt (dstHdc, 0, 0, rect.width, rect.height, OS.PATCOPY);", "+\t\t\t\t\t\tOS.DrawIconEx (dstHdc, 0, 0, hImage, 0, 0, 0, 0, OS.DI_NORMAL);", "+\t\t\t\t\t\tOS.SelectObject (dstHdc, oldBrush);", "+\t\t\t\t\t\tOS.DeleteObject (newBrush);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.SelectObject (dstHdc, oldBitmap);", "+\t\t\t\t\tOS.DeleteDC (dstHdc);", "+\t\t\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t\t\tif (image2 != null) image2.dispose ();", "+\t\t\t\t\timage2 = Image.win32_new (display, SWT.BITMAP, hBitmap);", "+\t\t\t\t\timageBits = OS.BS_BITMAP;", "+\t\t\t\t\tfImageType = OS.IMAGE_BITMAP;", "+\t\t\t\t\thImage = hBitmap;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 18970}