{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1afc9088405a9d4f07c26faa7681280", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31b3ad4c13f1e355b61649f31307728", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "cb50e9d16c9f0d9a994ddbd50461dcdcbccf4ddc", "commitAfterChange": "889e8b5e571d2e4b2e1f70fadd792e5876d526c7", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int kEventControlBoundsChanged (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlBoundsChanged (int nextHandler, int theEvent, int userData)", "diff": ["-\tRectangle rect = getClientArea ();", "-\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, COLUMN_ID, (short) rect.width);", "+\t/*", "+\t* This code is intentionally commented.  Setting the column", "+\t* width to be the size of the client are causes the initial", "+\t* value of the veritcal scroll bar to be wrong and causes", "+\t* '...' to appear in strings that are too long, even though", "+\t* a horizontal scroll bar is present.", "+\t*/", "+//\tRect rect = new Rect (), inset = new Rect ();", "+//\tOS.GetControlBounds (handle, rect);", "+//\tOS.GetDataBrowserScrollBarInset (handle, inset);", "+//\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, COLUMN_ID, (short) (rect.right - rect.left + inset.right));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfa76effd3f2aa977446bd736a01b976", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ScrolledCompositeLayout.java", "commitBeforeChange": "eb2260889f92d1f0b0c647bdff8ed5c032c78f8a", "commitAfterChange": "bb4740bd53a3218058e471eb366b47c18ae7dd29", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": " \t protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["-\t\tRectangle trim = sc.computeTrim(0, 0, w, h);", "-\t\treturn new Point(trim.width, trim.height);", "+\t\treturn new Point(w, h);"]}], "num": 28192}