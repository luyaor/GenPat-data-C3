{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f8eb46603e322b47ddff489af8f151a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5c53c80f2416c13ae57fbd27a04bb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r public Font getSystemFont ()", "signatureAfterChange": " public Font getSystemFont ()", "diff": ["+ */", "-\tint shellHandle, widgetHandle;\r", "-\tint widgetClass = OS.TopLevelShellWidgetClass ();\r", "-\tshellHandle = OS.XtAppCreateShell (null, null, widgetClass, xDisplay, null, 0);\r", "-\twidgetHandle = OS.XmCreateLabel (shellHandle, null, null, 0);\r", "-\tint [] argList = {OS.XmNfontList, 0};\r", "-\tOS.XtGetValues (widgetHandle, argList, argList.length / 2);\r", "-\t/**\r", "-\t * Feature in Motif. Querying the font list from the widget and\r", "-\t * then destroying the shell (and the widget) could cause the\r", "-\t * font list to be freed as well. The fix is to make a copy of\r", "-\t * the font list, then to free it when the display is disposed.\r", "-\t */ \r", "-\tint labelFont = OS.XmFontListCopy (argList [1]);\r", "-\tOS.XtDestroyWidget (shellHandle);\r", "-\treturn Font.motif_new (this, labelFont);\r", "+\treturn Font.motif_new (this, systemFont);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0914ec178dbc999a7a0522a3120548fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": " static boolean cde_init(Display display)", "signatureAfterChange": "  static boolean cde_init(Display display)", "diff": ["+", "-\tint widgetClass = OS.topLevelShellWidgetClass();", "-\tint shell = OS.XtAppCreateShell(appName, appName, widgetClass, display.xDisplay, null, 0);", "-\tboolean initOK = CDE.DtAppInitialize(xtContext, display.xDisplay, shell, appName, appName);", "-\tif (!initOK) {", "-\t\tOS.XtDestroyWidget(shell);", "-\t}", "-\telse {", "-\t\tCDE.DtDbLoad();", "-\t\tdisplay.setData(CDE_SHELL, new Integer(shell));", "-\t\tdisplay.disposeExec(new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\t/* This logic assumes that when the corresponding display is", "-\t\t\t\t * being disposed, it must be the current one.", "-\t\t\t\t */", "-\t\t\t\tInteger shellData = (Integer)Display.getCurrent().getData(CDE_SHELL);", "-\t\t\t\tif (shellData != null) OS.XtDestroyWidget(shellData.intValue());", "-\t\t\t}", "-\t\t});", "-\t}\t", "+\tInteger shell = (Integer)display.getData(SHELL_HANDLE_KEY);", "+\tboolean initOK = CDE.DtAppInitialize(xtContext, display.xDisplay, shell.intValue(), appName, appName);", "+\tif (initOK) CDE.DtDbLoad();", "+}"]}], "num": 9758}