{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eae36af1e4e777ada1558119e3724679", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d327d86b01a2f3fc57288792c15d750", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f86b9ebe2b0df4c73482603496c165ab5faee1d3", "commitAfterChange": "8980b86038eacdc7bd892692fe36237fa3f5ae14", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public DateTime(Composite parent, int style)", "signatureAfterChange": "  public DateTime(Composite parent, int style)", "diff": ["-\tsuper(parent, checkStyle(style) | SWT.NO_REDRAW_RESIZE | (((style & SWT.CALENDAR) != 0)? 0 : SWT.BORDER));", "+\tsuper(parent, checkStyle(style) | SWT.NO_REDRAW_RESIZE);", "-\t\t\t\tswitch(event.type) {", "-\t\t\t\t\tcase SWT.Selection: handleSelection(event); break;", "-\t\t\t\t}", "+\t\t\t\thandleSelection(event);", "-\t\tGridLayout layout = new GridLayout();", "-\t\tlayout.marginWidth = 0;", "-\t\tlayout.marginHeight = 0;", "-\t\tlayout.horizontalSpacing = 0;", "-\t\tlayout.verticalSpacing = 0;", "-\t\tsuper.setLayout(layout); // TODO: use resize, not layout", "-\t\ttext.setText(getComputeSizeString(this.style));", "+\t\ttext.setText(getFormattedString(this.style));", "+\t\t// TODO: move tooltip strings to .properties", "+\t\tup = new Button(this, SWT.ARROW | SWT.UP);", "+\t\tup.setToolTipText(\"Up\");", "+\t\tdown = new Button(this, SWT.ARROW | SWT.DOWN);", "+\t\tdown.setToolTipText(\"Down\");", "+\t\tup.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(+1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});", "+\t\tdown.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(-1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});", "+\t\taddListener(SWT.Resize, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tonResize(event);", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525d3a0ab9d0bf7c30450aeebe816612", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "6a70c67479eb26b2d748955d53c11f666234ce97", "commitAfterChange": "59e2013647955a8e2ef81c8184838da6b1f1e401", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CBanner(Composite parent, int style)", "signatureAfterChange": " public CBanner(Composite parent, int style)", "diff": ["-\t", "+\tresizeCursor = new Cursor(getDisplay(), SWT.CURSOR_SIZEWE);", "+\t", "-\t", "-\t});\t", "+\t});", "+\taddListener(SWT.MouseMove, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonMouseMove(event.x, event.y);", "+\t\t}", "+\t});", "+\taddListener(SWT.MouseExit, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonMouseExit();", "+\t\t}", "+\t});", "+\taddListener(SWT.MouseDown, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonMouseDown (event.x, event.y);", "+\t\t}", "+\t});", "+\taddListener(SWT.MouseUp, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonMouseUp ();", "+\t\t}", "+\t});"]}], "num": 28098}