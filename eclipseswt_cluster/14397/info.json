{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2367d2e3ae0c44ede31ffd0c681d41a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b3fc486fdc75889f70c9995c7932a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "7b1329ce4559c314d7caaf6d49255a2e36ae8db9", "commitAfterChange": "24fd6f27ac88e7d1cba0fa9d22650617bd958c27", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createCOMInterfaces ()", "signatureAfterChange": "  void createCOMInterfaces ()", "diff": ["-\t\tpublic int /*long*/ method3 (int /*long*/[] args) {", "-\t\t\t// int /*long*/ globalObject = XPCOM.nsIScriptContext_GetGlobalObject(args[0]);", "-\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "-\t\t\tif (Mozilla.jsLibPathBytes == null) {", "-\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "-\t\t\t\ttry {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "-\t\t\tint /*long*/ globalJSObject1 = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, args[0]);", "-\t\t\tint /*long*/ globalJSObject2 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, nativeContext);", "-//\t\t\tint /*long*/ globalJSObject3 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, args[0]);", "-\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "-\t\t\t", "-\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "-\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, nativeContext, newObject, functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "-\t\t\tSystem.out.println(newFunction);", "-\t\t\t", "-\t\t\tXPCOM.memmove(args[1], new int /*long*/[] {newObject}, C.PTR_SIZEOF);", "-\t\t\treturn XPCOM.NS_OK;", "-\t\t}", "-\t\tpublic int /*long*/ method4 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_OK;", "-\t\t\t//\treturn SetScriptObject (args[0]);}", "-\t\t}", "+\t\tpublic int /*long*/ method3 (int /*long*/[] args) {return getScriptObject (args[0], args[1]);}", "+\t\tpublic int /*long*/ method4 (int /*long*/[] args) {return setScriptObject (args[0]);}", "-", "-\txpcScriptable = new XPCOMObject (new int[] {2, 0, 0, 1, 1, 4, 3, 3, 6, 6, 6, 6, 4, 7, 7, 6, 3, 7, 7, 7, 6, 3, 5, 4, 2}) {", "-\t\tpublic int /*long*/ method0 (int /*long*/[] args) {return QueryInterface (args[0], args[1]);}", "-\t\tpublic int /*long*/ method1 (int /*long*/[] args) {return AddRef ();}", "-\t\tpublic int /*long*/ method2 (int /*long*/[] args) {return Release ();}", "-\t\tpublic int /*long*/ method3 (int /*long*/[] args) {", "-\t\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\t\tint rc = XPCOM.NS_GetServiceManager (result);", "-\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "-", "-\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result);", "-\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "-\t\t\tserviceManager.Release ();", "-", "-\t\t\tnsIMemory memory = new nsIMemory (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"External\", true); //$NON-NLS-1$", "-\t\t\tint /*long*/ ptr = memory.Alloc (bytes.length);", "-\t\t\tC.memmove (ptr, bytes, bytes.length);", "-\t\t\tC.memmove(args[0], new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "-\t\t\treturn XPCOM.NS_OK;}", "-\t\tpublic int /*long*/ method4 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"Get scriptable flags\");", "-\t\t\tXPCOM.memmove(args[0], new int[] {/*WANT_NEWRESOLVE 512 |*/  /* WANT_GETPROPERTY */ 32 | /* WANT_CALL */ 8192}, 4);", "-\t\t//\tXPCOM.memmove(args[0], new int[] {0xFFFF}, 4);", "-\t\t\treturn XPCOM.NS_OK;}", "-\t\tpublic int /*long*/ method5 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"pre-create\");", "-\t\t\treturn XPCOM.NS_OK;}", "-\t\tpublic int /*long*/ method6 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"create\");", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method7 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"post-create\");", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method8 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method9 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method10 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"Get property\");", "-//\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "-\t\t\tif (Mozilla.jsLibPathBytes == null) {", "-\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "-\t\t\t\ttry {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "-\t\t\t\t}", "-\t\t\t}", "-//\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "-//\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "-\t\t\t", "-\t\t\tint /*long*/ stringPtr = XPCOM.JS_ValueToString(Mozilla.jsLibPathBytes, args[1], args[3]);", "-\t\t\tint /*long*/ stringLength = XPCOM.JS_GetStringLength(Mozilla.jsLibPathBytes, stringPtr);", "-\t\t\tint /*long*/ nativePtr = XPCOM.JS_GetStringCharsZ(Mozilla.jsLibPathBytes, args[1], stringPtr);", "-\t\t\t", "-\t\t\tint length = XPCOM.strlen_PRUnichar (nativePtr);", "-\t\t\tchar[] dest = new char[length];", "-\t\t\tXPCOM.memmove (dest, nativePtr, length * 2);", "-\t\t\tSystem.out.println(new String (dest));", "-", "-\t\t\t", "-\t\t\t", "-\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "-\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, /*nativeContext*/args[1], /*newObject*/args[2], functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "-\t\t\tSystem.out.println(newFunction);", "-\t\t\t", "-\t\t\treturn /* PR_TRUE */ 1;}", "-", "-\t\tpublic int /*long*/ method11 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method12 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method13 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method14 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"New Resolve\");", "-\t\t\t", "-\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "-\t\t\tif (Mozilla.jsLibPathBytes == null) {", "-\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "-\t\t\t\ttry {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t", "-\t\t\tint /*long*/ stringPtr = XPCOM.JS_ValueToString(Mozilla.jsLibPathBytes, /*args[1]*/nativeContext, args[3]);", "-\t\t\tint /*long*/ stringLength = XPCOM.JS_GetStringLength(Mozilla.jsLibPathBytes, stringPtr);", "-\t\t\tint /*long*/ nativePtr = XPCOM.JS_GetStringCharsZ(Mozilla.jsLibPathBytes, /*args[1]*/nativeContext, stringPtr);", "-\t\t\t", "-\t\t\tint length = XPCOM.strlen_PRUnichar (nativePtr);", "-\t\t\tchar[] dest = new char[length];", "-\t\t\tXPCOM.memmove (dest, nativePtr, length /** 2*/);", "-\t\t\tSystem.out.println(new String (dest));", "-\t\t\t", "-//\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "-//\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "-\t\t\t", "-\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "-\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, /*nativeContext*/args[1], /*newObject*/args[2], functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "-\t\t\tSystem.out.println(newFunction);", "-\t\t\t", "-\t\t\tXPCOM.memmove(args[5], new int /*long*/[] {args[2]}, C.PTR_SIZEOF);", "-\t\t\treturn /* PR_TRUE */ 1;}", "-\t\tpublic int /*long*/ method15 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method16 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method17 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method18 (int /*long*/[] args) {", "-\t\t\tSystem.out.println(\"Call\");", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method19 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method20 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method21 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method22 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method23 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t\tpublic int /*long*/ method24 (int /*long*/[] args) {", "-\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "-\t};", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a91cee12319c111ba03b91663beb11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "5b4363330acbbd4eecdd36d4c211071a9e9ed361", "commitAfterChange": "7b1329ce4559c314d7caaf6d49255a2e36ae8db9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createCOMInterfaces ()", "signatureAfterChange": "  void createCOMInterfaces ()", "diff": ["-\t", "+", "+\tscriptObjectOwner = new XPCOMObject (new int[] {2, 0, 0, 2, 1}) {", "+\t\tpublic int /*long*/ method0 (int /*long*/[] args) {return QueryInterface (args[0], args[1]);}", "+\t\tpublic int /*long*/ method1 (int /*long*/[] args) {return AddRef ();}", "+\t\tpublic int /*long*/ method2 (int /*long*/[] args) {return Release ();}", "+\t\tpublic int /*long*/ method3 (int /*long*/[] args) {", "+\t\t\t// int /*long*/ globalObject = XPCOM.nsIScriptContext_GetGlobalObject(args[0]);", "+\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "+\t\t\tif (Mozilla.jsLibPathBytes == null) {", "+\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "+\t\t\t\ttry {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "+\t\t\tint /*long*/ globalJSObject1 = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, args[0]);", "+\t\t\tint /*long*/ globalJSObject2 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, nativeContext);", "+//\t\t\tint /*long*/ globalJSObject3 = XPCOM.JS_GetGlobalForScopeChain (Mozilla.jsLibPathBytes, args[0]);", "+\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "+\t\t\t", "+\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "+\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, nativeContext, newObject, functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "+\t\t\tSystem.out.println(newFunction);", "+\t\t\t", "+\t\t\tXPCOM.memmove(args[1], new int /*long*/[] {newObject}, C.PTR_SIZEOF);", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t}", "+\t\tpublic int /*long*/ method4 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t\t//\treturn SetScriptObject (args[0]);}", "+\t\t}", "+\t};", "+", "+\txpcScriptable = new XPCOMObject (new int[] {2, 0, 0, 1, 1, 4, 3, 3, 6, 6, 6, 6, 4, 7, 7, 6, 3, 7, 7, 7, 6, 3, 5, 4, 2}) {", "+\t\tpublic int /*long*/ method0 (int /*long*/[] args) {return QueryInterface (args[0], args[1]);}", "+\t\tpublic int /*long*/ method1 (int /*long*/[] args) {return AddRef ();}", "+\t\tpublic int /*long*/ method2 (int /*long*/[] args) {return Release ();}", "+\t\tpublic int /*long*/ method3 (int /*long*/[] args) {", "+\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\tint rc = XPCOM.NS_GetServiceManager (result);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "+\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);\t\t", "+\t\t\tserviceManager.Release ();", "+", "+\t\t\tnsIMemory memory = new nsIMemory (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tbyte[] bytes = MozillaDelegate.wcsToMbcs (null, \"External\", true); //$NON-NLS-1$", "+\t\t\tint /*long*/ ptr = memory.Alloc (bytes.length);", "+\t\t\tC.memmove (ptr, bytes, bytes.length);", "+\t\t\tC.memmove(args[0], new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\t\treturn XPCOM.NS_OK;}", "+\t\tpublic int /*long*/ method4 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"Get scriptable flags\");", "+\t\t\tXPCOM.memmove(args[0], new int[] {/*WANT_NEWRESOLVE 512 |*/  /* WANT_GETPROPERTY */ 32 | /* WANT_CALL */ 8192}, 4);", "+\t\t//\tXPCOM.memmove(args[0], new int[] {0xFFFF}, 4);", "+\t\t\treturn XPCOM.NS_OK;}", "+\t\tpublic int /*long*/ method5 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"pre-create\");", "+\t\t\treturn XPCOM.NS_OK;}", "+\t\tpublic int /*long*/ method6 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"create\");", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method7 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"post-create\");", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method8 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method9 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method10 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"Get property\");", "+//\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "+\t\t\tif (Mozilla.jsLibPathBytes == null) {", "+\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "+\t\t\t\ttry {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "+\t\t\t\t}", "+\t\t\t}", "+//\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "+//\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "+\t\t\t", "+\t\t\tint /*long*/ stringPtr = XPCOM.JS_ValueToString(Mozilla.jsLibPathBytes, args[1], args[3]);", "+\t\t\tint /*long*/ stringLength = XPCOM.JS_GetStringLength(Mozilla.jsLibPathBytes, stringPtr);", "+\t\t\tint /*long*/ nativePtr = XPCOM.JS_GetStringCharsZ(Mozilla.jsLibPathBytes, args[1], stringPtr);", "+\t\t\t", "+\t\t\tint length = XPCOM.strlen_PRUnichar (nativePtr);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove (dest, nativePtr, length * 2);", "+\t\t\tSystem.out.println(new String (dest));", "+", "+\t\t\t", "+\t\t\t", "+\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "+\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, /*nativeContext*/args[1], /*newObject*/args[2], functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "+\t\t\tSystem.out.println(newFunction);", "+\t\t\t", "+\t\t\treturn /* PR_TRUE */ 1;}", "+", "+\t\tpublic int /*long*/ method11 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method12 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method13 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method14 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"New Resolve\");", "+\t\t\t", "+\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (args[0]);", "+\t\t\tif (Mozilla.jsLibPathBytes == null) {", "+\t\t\t\tString mozillaPath = Mozilla.getMozillaPath () + MozillaDelegate.getJSLibraryName() + '\\0';", "+\t\t\t\ttry {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\tMozilla.jsLibPathBytes = mozillaPath.getBytes ();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t\tint /*long*/ stringPtr = XPCOM.JS_ValueToString(Mozilla.jsLibPathBytes, /*args[1]*/nativeContext, args[3]);", "+\t\t\tint /*long*/ stringLength = XPCOM.JS_GetStringLength(Mozilla.jsLibPathBytes, stringPtr);", "+\t\t\tint /*long*/ nativePtr = XPCOM.JS_GetStringCharsZ(Mozilla.jsLibPathBytes, /*args[1]*/nativeContext, stringPtr);", "+\t\t\t", "+\t\t\tint length = XPCOM.strlen_PRUnichar (nativePtr);", "+\t\t\tchar[] dest = new char[length];", "+\t\t\tXPCOM.memmove (dest, nativePtr, length /** 2*/);", "+\t\t\tSystem.out.println(new String (dest));", "+\t\t\t", "+//\t\t\tint /*long*/ globalJSObject = XPCOM.JS_GetGlobalObject (Mozilla.jsLibPathBytes, nativeContext);", "+//\t\t\tint /*long*/ newObject = XPCOM.JS_NewObject(Mozilla.jsLibPathBytes, nativeContext, 0, 0, globalJSObject);", "+\t\t\t", "+\t\t\tbyte[] functionName = MozillaDelegate.wcsToMbcs(null, \"callJava\", true);", "+\t\t\tint /*long*/ newFunction = XPCOM.JS_DefineFunction(Mozilla.jsLibPathBytes, /*nativeContext*/args[1], /*newObject*/args[2], functionName, CallJavaProc.getAddress(), 3, /*JSPROP_ENUMERATE*/ 0x1 | /*JSPROP_READONLY*/ 0x2 | /*JSPROP_PERMANENT*/ 0x4);", "+\t\t\tSystem.out.println(newFunction);", "+\t\t\t", "+\t\t\tXPCOM.memmove(args[5], new int /*long*/[] {args[2]}, C.PTR_SIZEOF);", "+\t\t\treturn /* PR_TRUE */ 1;}", "+\t\tpublic int /*long*/ method15 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method16 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method17 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method18 (int /*long*/[] args) {", "+\t\t\tSystem.out.println(\"Call\");", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method19 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method20 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method21 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method22 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method23 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t\tpublic int /*long*/ method24 (int /*long*/[] args) {", "+\t\t\treturn XPCOM.NS_ERROR_NOT_IMPLEMENTED;}", "+\t};", "+"]}], "num": 14397}