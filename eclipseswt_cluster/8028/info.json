{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19cf3cd34cabfe26cd93cee8514b5fe3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d35d9c8204ca93b670f12cf68dec39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "fc8fe3caad1c5f06a96a7fb83db82f272c86ebc8", "commitAfterChange": "cc63730058ca2b6a6d44ab865dbd83fd434ee110", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   int gtk_changed (int widget)", "signatureAfterChange": "   int gtk_changed (int widget)", "diff": ["-\tif ((style & SWT.ICON_CANCEL) != 0) {", "-\t\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "-\t\tOS.gtk_entry_set_icon_sensitive (handle, OS.GTK_ENTRY_ICON_SECONDARY, OS.g_utf8_strlen (ptr, -1) > 0);", "+\tif ((style & SWT.SEARCH) != 0) {", "+\t\tif ((style & SWT.ICON_CANCEL) != 0) {", "+\t\t\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "+\t\t\tOS.gtk_entry_set_icon_sensitive (handle, OS.GTK_ENTRY_ICON_SECONDARY, OS.g_utf8_strlen (ptr, -1) > 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daae5d1a128ae666c4e5f702a646bad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6d671179e56122bf4c75081a96a44e45b06a5b27", "commitAfterChange": "33615efba6b3b14d1b8ee0928c8a1f12f629315a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public ToolBar getToolBar()", "signatureAfterChange": " public ToolBar getToolBar()", "diff": ["-\tif (toolBar == null) toolBar = new ToolBar(this, SWT.HORIZONTAL | SWT.SMOOTH, true);", "+\tif ((style & SWT.NO_TRIM) == 0) {", "+\t\tif (toolBar == null) toolBar = new ToolBar(this, SWT.HORIZONTAL | SWT.SMOOTH, true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46bdf76e1e8dc8a3b6f7021b71caa34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "3f92c6f0fc3dca30dca82dabb4b8ec80f538abd5", "commitAfterChange": "6f7e13302682818f09eae23755fc604e97a36287", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void setSpacing (int spacing)", "signatureAfterChange": "  public void setSpacing (int spacing)", "diff": ["-\t\tint width = Math.max (0, getClientArea ().width - spacing * 2);", "-\t\tfor (int i = 0; i < itemCount; i++) {", "-\t\t\tExpandItem item = items[i];", "-\t\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);", "+\t\tif ((style & SWT.V_SCROLL) == 0) {", "+\t\t\tint width = Math.max (0, getClientArea ().width - spacing * 2);", "+\t\t\tfor (int i = 0; i < itemCount; i++) {", "+\t\t\t\tExpandItem item = items [i];", "+\t\t\t\tif (item.width != width) item.setBounds (0, 0, width, item.height, false, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e07ab22a915c6f91c0b48ffac7c590", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "d99830b9dc889f9a89bda98cdd4a92b116044815", "commitAfterChange": "beca6310b5a08f08f4d4efeb88b832d208de8eb6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createWidget (int index)", "signatureAfterChange": "  void createWidget (int index)", "diff": ["-//\tif ((style & SWT.CALENDAR) != 0) {", "+\tif ((style & SWT.CALENDAR) != 0) {", "-//\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfeefb92497a9b5b786ef8357461b75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "364bc551573f7c1c8e6f7362c22d320d70d40f34", "commitAfterChange": "d4ba4ba3092d3f6e9ac539271bf860a2604431a5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void destroyItem (TreeItem item, int hItem)", "signatureAfterChange": "  void destroyItem (TreeItem item, int hItem)", "diff": ["+\t* ", "+\t* NOTE: This fix is not necessary when double buffering and", "+\t* can cause problems for virtual trees due to the call to", "+\t* UpdateWindow() that flushes outstanding WM_PAINT events,", "+\t* allowing application code to add or remove items.", "-\tif (drawCount == 0 && OS.IsWindowVisible (handle)) {", "-\t\tRECT rect = new RECT ();", "-\t\trect.left = hItem;", "-\t\tfixRedraw = OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) == 0;", "+\tif ((style & SWT.DOUBLE_BUFFERED) == 0) {", "+\t\tif (drawCount == 0 && OS.IsWindowVisible (handle)) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\trect.left = hItem;", "+\t\t\tfixRedraw = OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) == 0;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d1d24318274ea8bf758064664b4efb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3a71e3fa702def69bec5f8fc774bf667aeff88c4", "commitAfterChange": "ab1753cc7e6a85add435348de956934094048eee", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setEnabled (boolean enabled)", "signatureAfterChange": " public void setEnabled (boolean enabled)", "diff": ["-\tif (image != null) updateImages (enabled && parent.getEnabled ());", "+\tif ((style & SWT.SEPARATOR) == 0) {", "+\t\tif (image != null) updateImages (enabled && parent.getEnabled ());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea93b988a937cdd56814400896ce939", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "e0e01594fad484e2d4d28a4924eb49a6a235a2c2", "commitAfterChange": "0563c6b25cc2d4d30b7f3986e41fc7b03e35d1b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createHandle (int index, int parentHandle, boolean scrolled)", "signatureAfterChange": "  void createHandle (int index, int parentHandle, boolean scrolled)", "diff": ["-\tif ((state & CANVAS) != 0 && (style & SWT.NO_FOCUS) == 0) {", "-\t\timHandle = OS.gtk_im_multicontext_new ();", "-\t\tif (imHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.EMBEDDED) == 0) {", "+\t\tif ((state & CANVAS) != 0 && (style & SWT.NO_FOCUS) == 0) {", "+\t\t\timHandle = OS.gtk_im_multicontext_new ();", "+\t\t\tif (imHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c12b2734ad342a66682d0f0c2d77f576", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "69fd5aad90c2ba9ff4cb002864e79998fd798284", "commitAfterChange": "addc9b9fddfa90f6f62bcfe79752def2943376a0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  int kEventMenuOpening (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMenuOpening (int nextHandler, int theEvent, int userData)", "diff": ["-\tsendEvent (SWT.Show);", "-\tmodified = false;", "+\t/*", "+\t* Bug in the Macintosh.  When a menu is open with ContextualMenuSelect() the", "+\t* system will add other items before displaying it and remove the items before", "+\t* returning from the function.  If the menu is changed in kEventMenuOpening, the", "+\t* system will fail to remove those items.  The fix is to send SWT.Show before", "+\t* calling ContextualMenuSelect() instead of in kEventMenuOpening.", "+\t*/\t", "+\tif ((style & SWT.POP_UP) == 0) {", "+\t\tsendEvent (SWT.Show);", "+\t\tmodified = false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f5e6e95058f4f3c55e8ee06a78e061", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "c67d184d9042ce7393dce544a5e37f6b1052ddf3", "commitAfterChange": "251573b429c7dd5879fb4172e3933c43addd3b8a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "-\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\tbits &= ~OS.TBSTYLE_TRANSPARENT;", "-\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "+\tif ((style & SWT.FLAT) != 0) {", "+\t\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\tbits &= ~OS.TBSTYLE_TRANSPARENT;", "+\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bafef244f074df07148272a23c9955a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "d99830b9dc889f9a89bda98cdd4a92b116044815", "commitAfterChange": "beca6310b5a08f08f4d4efeb88b832d208de8eb6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-//\tif ((style & SWT.CALENDAR) != 0) {", "+\tif ((style & SWT.CALENDAR) != 0) {", "-//\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ea7afa0313ba4dca7522eefcb9cab9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ddc3f0299d2d4a54bb08a0771f63e8b98b228c66", "commitAfterChange": "16b2de43cdf71ea608974d60c1bb31ee4bf471dc", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void select (int index)", "signatureAfterChange": " public void select (int index)", "diff": ["+\t\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t\t/*", "+\t\t\t* Feature in GTK. Read Only combo boxes do not get a chance to send out a ", "+\t\t\t* Modify event in the gtk_changed callback. The fix is to send a Modify event ", "+\t\t\t* here.", "+\t\t\t*/", "+\t\t\tsendEvent (SWT.Modify);", "+\t\t}", "-\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f060058ec6d1f6b92ae82f0f283aa4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "705dcd9bcc10be8f192d55478f68ca694c46b318", "commitAfterChange": "008439e1fc14ec0f2b54d227754d42ab74229650", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  boolean traverseEscape ()", "signatureAfterChange": "  boolean traverseEscape ()", "diff": ["-\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) != 0) {", "-\t\tOS.SendMessage (handle, OS.CB_SHOWDROPDOWN, 0, 0);", "-\t\treturn true;", "+\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) != 0) {", "+\t\t\tOS.SendMessage (handle, OS.CB_SHOWDROPDOWN, 0, 0);", "+\t\t\treturn true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f380c08b648a1e4edc72ccd3f61ea723", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "245adacdd3c549e407a08d43342c95b9cd8ad22a", "commitAfterChange": "10c76b5036e5f6a92bd49926fd04f9727f6d6a4c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  @Override void createHandle (int index)", "signatureAfterChange": "  @Override void createHandle (int index)", "diff": ["-\t\t\tOS.gtk_window_set_skip_taskbar_hint(shellHandle, true);", "+\t\t\t// if child shells are minimizable, we want them to have a", "+\t\t\t// taskbar icon, so they can be unminimized", "+\t\t\tif ((style & SWT.MIN) == 0) {", "+\t\t\t\tOS.gtk_window_set_skip_taskbar_hint(shellHandle, true);", "+\t\t\t}"]}], "num": 8028}