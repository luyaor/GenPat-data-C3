{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0db90d1734962df2eaadf326af119435", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a014bc9b0356bbbb904e33e247eef27d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.launcher/org/eclipse/swt/examples/launcher/LauncherView.java", "commitBeforeChange": "4eac41d6c46a13eaa4a76c1adf66a72ff6ce9e23", "commitAfterChange": "3a6319f696840c92e09b8885ebaae6f2c3c42f28", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprivate void importItem(final ItemDescriptor itemDescriptor)", "signatureAfterChange": "\r \tprivate void launchItem(ItemDescriptor itemDescriptor)", "diff": ["+\tprivate void launchItem(ItemDescriptor itemDescriptor) {\r", "+\t\t/* Case 1: The launch item is a view */\r", "+\t\tString pluginViewId = itemDescriptor.getView ();\r", "+\t\tif (pluginViewId != null) {\r", "+\t\t\tfinal IWorkbenchPart workbenchPart = this;\r", "+\t\t\tfinal IWorkbenchPartSite workbenchPartSite = workbenchPart.getSite();\r", "+\t\t\tfinal IWorkbenchPage workbenchPage = workbenchPartSite.getPage();\r", "+\t\t\ttry {\r", "+\t\t\t\tworkbenchPage.showView(pluginViewId);\r", "+\t\t\t} catch (PartInitException e) {\r", "+\t\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.Invocation\"), e);\r", "+\t\t\t}\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\t/* Case 2: The launch item is a standalone program */\r", "+\t\tif (workbenchShell == null) return;\r", "+\t\ttry {\r", "+\t\t\tClass cl = Class.forName(itemDescriptor.getMainType());\r", "+\t\t\tField displayField = cl.getField(\"display\");\r", "+\t\t\tdisplayField.set(cl, workbenchShell.getDisplay());\r", "+\t\t\tObject exampleInstance = cl.newInstance();\r", "+\t\t\tMethod openMethod = cl.getDeclaredMethod(\"open\", new Class[] {});\r", "+\t\t\topenMethod.invoke(exampleInstance, new Object[] {});\r", "+\t\t} catch (NoSuchFieldException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.DoesNotImplementField\"), null);\r", "+\t\t} catch (NoSuchMethodException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.DoesNotImplementMethod\"), null);\r", "+\t\t} catch (ClassNotFoundException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.CouldNotFindClass\"), e);\r", "+\t\t} catch (Exception e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.CouldNotInstantiateClass\"), e);\r", "+\t\t}\t\t\r", "-\t */\r", "-\tprivate void importItem(final ItemDescriptor itemDescriptor) {\r", "-\t\tif ((workbenchShell == null) || (itemDescriptor == null)) return;\r", "-\r", "-\t\tURL sourceUrl = itemDescriptor.getSourceCodePath();\r", "-\t\tif (sourceUrl == null) return; // oops! can't do that!\r", "-\t\t\r", "-\t\tImportProjectTask task = new ImportProjectTask(workbenchShell, itemDescriptor.getName(),\r", "-\t\t\tsourceUrl);\r", "-\t\tboolean success = task.execute();\r", "-\t\ttask.dispose();\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e9728cdb4f63b47f40a2a5cec4a1b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.launcher/src/org/eclipse/swt/examples/launcher/LauncherView.java", "commitBeforeChange": "4eac41d6c46a13eaa4a76c1adf66a72ff6ce9e23", "commitAfterChange": "3a6319f696840c92e09b8885ebaae6f2c3c42f28", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprivate void importItem(final ItemDescriptor itemDescriptor)", "signatureAfterChange": "\r \tprivate void launchItem(ItemDescriptor itemDescriptor)", "diff": ["+\tprivate void launchItem(ItemDescriptor itemDescriptor) {\r", "+\t\t/* Case 1: The launch item is a view */\r", "+\t\tString pluginViewId = itemDescriptor.getView ();\r", "+\t\tif (pluginViewId != null) {\r", "+\t\t\tfinal IWorkbenchPart workbenchPart = this;\r", "+\t\t\tfinal IWorkbenchPartSite workbenchPartSite = workbenchPart.getSite();\r", "+\t\t\tfinal IWorkbenchPage workbenchPage = workbenchPartSite.getPage();\r", "+\t\t\ttry {\r", "+\t\t\t\tworkbenchPage.showView(pluginViewId);\r", "+\t\t\t} catch (PartInitException e) {\r", "+\t\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.Invocation\"), e);\r", "+\t\t\t}\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\t/* Case 2: The launch item is a standalone program */\r", "+\t\tif (workbenchShell == null) return;\r", "+\t\ttry {\r", "+\t\t\tClass cl = Class.forName(itemDescriptor.getMainType());\r", "+\t\t\tField displayField = cl.getField(\"display\");\r", "+\t\t\tdisplayField.set(cl, workbenchShell.getDisplay());\r", "+\t\t\tObject exampleInstance = cl.newInstance();\r", "+\t\t\tMethod openMethod = cl.getDeclaredMethod(\"open\", new Class[] {});\r", "+\t\t\topenMethod.invoke(exampleInstance, new Object[] {});\r", "+\t\t} catch (NoSuchFieldException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.DoesNotImplementField\"), null);\r", "+\t\t} catch (NoSuchMethodException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.DoesNotImplementMethod\"), null);\r", "+\t\t} catch (ClassNotFoundException e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.CouldNotFindClass\"), e);\r", "+\t\t} catch (Exception e) {\r", "+\t\t\tLauncherPlugin.logError(LauncherPlugin.getResourceString(\"run.error.CouldNotInstantiateClass\"), e);\r", "+\t\t}\t\t\r", "-\t */\r", "-\tprivate void importItem(final ItemDescriptor itemDescriptor) {\r", "-\t\tif ((workbenchShell == null) || (itemDescriptor == null)) return;\r", "-\r", "-\t\tURL sourceUrl = itemDescriptor.getSourceCodePath();\r", "-\t\tif (sourceUrl == null) return; // oops! can't do that!\r", "-\t\t\r", "-\t\tImportProjectTask task = new ImportProjectTask(workbenchShell, itemDescriptor.getName(),\r", "-\t\t\tsourceUrl);\r", "-\t\tboolean success = task.execute();\r", "-\t\ttask.dispose();\r", "-\t}\r"]}], "num": 35066}