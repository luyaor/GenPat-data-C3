{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "afef99949f163d5ee0557100b9f77a25", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31912c8701dbaf0d0d83fcac5497449f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r int processSelection (int int0, int int1, int int2)", "signatureAfterChange": "\r \r int gtk_switch_page (int widget, int page, int page_num)", "diff": ["+int gtk_switch_page (int widget, int page, int page_num) {\r", "+\tint index = OS.gtk_notebook_get_current_page (handle);\r", "+\tif (index != -1) {\r", "+\t\tControl control = items [index].getControl ();\r", "+\t\tif (control != null && !control.isDisposed ()) {\r", "+\t\t\tcontrol.setVisible (false);\r", "+\t\t}\r", "+\t}\r", "+\tControl control = items [page_num].getControl ();\r", "+\tif (control != null && !control.isDisposed ()) {\r", "+\t\tcontrol.setBounds(getClientArea());\r", "+\t\tcontrol.setVisible (true);\r", "+\t}\r", "+\tEvent event = new Event();\r", "+\tevent.item = items[page_num];\r", "+\tpostEvent(SWT.Selection, event);\r", "+\treturn 0;\r", "+}\r", "-\r", "-int processSelection (int int0, int int1, int int2) {\r", "-\tint index = OS.gtk_notebook_get_current_page (handle);\r", "-\tif (index != -1) {\r", "-\t\tControl control = items [index].getControl ();\r", "-\t\tif (control != null && !control.isDisposed ()) {\r", "-\t\t\tcontrol.setVisible (false);\r", "-\t\t}\r", "-\t}\r", "-\tControl control = items [int1].getControl ();\r", "-\tif (control != null && !control.isDisposed ()) {\r", "-\t\tcontrol.setBounds(getClientArea());\r", "-\t\tcontrol.setVisible (true);\r", "-\t}\r", "-\tEvent event = new Event();\r", "-\tevent.item = items[int1];\r", "-\tpostEvent(SWT.Selection, event);\r", "-\treturn 0;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71f9c8d121576de997a2e0a5a2a4598", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  private void handleSelectionChange(int newValue)", "signatureAfterChange": "  private void handleSelectionChange(int newValue)", "diff": ["-", "-\tTabItem item = null;", "-\tint index= oldValue;", "-", "-\tif (index != -1) item = items [index];", "-\tif (item != null) {", "-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setVisible (false);", "-\t\t}", "-\t}", "-\t\t", "-\tindex= newValue;", "-\tif (index != -1) item = items [index];", "-\tif (item != null) {", "-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setBounds (getClientArea ());", "-\t\t\tcontrol.setVisible (true);", "-\t\t}", "-\t}", "-\tEvent event = new Event ();", "-\tevent.item = item;", "-\tpostEvent (SWT.Selection, event);", "+\tif (false)", "+\t\tsetSelection (newValue, true);", "+\t", "+\telse {", "+\t\tTabItem item = null;", "+\t\tint index= oldValue;", "+\t", "+\t\tif (index != -1) item = items [index];", "+\t\tif (item != null) {", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null && !control.isDisposed ()) {", "+\t\t\t\tcontrol.setVisible (false);", "+\t\t\t}", "+\t\t}", "+\t\t\t", "+\t\tindex= newValue;", "+\t\tif (index != -1) item = items [index];", "+\t\tif (item != null) {", "+\t\t\tControl control = item.control;", "+\t\t\tif (control != null && !control.isDisposed ()) {", "+\t\t\t\tcontrol.setBounds (getClientArea ());", "+\t\t\t\tcontrol.setVisible (true);", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tEvent event = new Event ();", "+\t\tevent.item = item;", "+\t\tpostEvent (SWT.Selection, event);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdd4bcecbd38c16dc1b516a23bfa92b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "8441f12d6ada4d27017e3804c96d1ed14997228b", "commitAfterChange": "2cf3ee8a90a61023aabe141092758df6194fb47f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r public void setSelection(int index)", "signatureAfterChange": "\r public void setSelection(int index)", "diff": ["-\tint oldIndex = selectedIndex;\r", "-\t\r", "-\tif (selectedIndex == index || index >= getItemCount()) return;\r", "-\tif (selectedIndex != -1) {\r", "-\t\tControl control = items[selectedIndex].control;\r", "-\t\tif (control != null && !control.isDisposed()) {\r", "-\t\t\tcontrol.setVisible(false);\r", "-\t\t}\t\t\r", "-\t}\r", "-\tif (index < 0) {\r", "-\t\tindex = -1;\t\t\t\t\t\t\t\t\t\t// make sure the index is always -1 if it's negative\r", "-\t}\r", "-\tselectedIndex = index;\r", "-\tlayoutItems();\r", "-\tensureVisible(index);\t\r", "-\tredrawSelectionChange(oldIndex, index);\r", "-\tif (index >= 0) {\r", "-\t\tControl control = items[index].control;\r", "-\t\tif (control != null && !control.isDisposed()) {\r", "-\t\t\tcontrol.setBounds(getClientArea());\r", "-\t\t\tcontrol.setVisible(true);\r", "-\t\t}\r", "-\t}\r", "+\tsetSelection(index, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a551971cc04099e7b29acdecb0d7c19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "8441f12d6ada4d27017e3804c96d1ed14997228b", "commitAfterChange": "2cf3ee8a90a61023aabe141092758df6194fb47f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r void setSelectionNotify(int index)", "signatureAfterChange": "\r void setSelection(int index, boolean notify)", "diff": ["-void setSelectionNotify(int index) {\r", "-\tint oldSelectedIndex = selectedIndex;\r", "+void setSelection(int index, boolean notify) {\r", "-\tsetSelection(index);\r", "-\tif (selectedIndex != oldSelectedIndex && selectedIndex != -1) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.item = getSelection()[0];\r", "-\t\tnotifyListeners(SWT.Selection, event);\r", "+\tint oldIndex = selectedIndex;\r", "+\t\r", "+\tif (selectedIndex == index || index >= getItemCount()) return;\r", "+\tif (selectedIndex != -1) {\r", "+\t\tControl control = items[selectedIndex].control;\r", "+\t\tif (control != null && !control.isDisposed()) {\r", "+\t\t\tcontrol.setVisible(false);\r", "+\t\t}\t\t\r", "+\tif (index < 0) {\r", "+\t\tindex = -1; // make sure the index is always -1 if it's negative\r", "+\t}\r", "+\tselectedIndex = index;\r", "+\tlayoutItems();\r", "+\tensureVisible(index);\t\r", "+\tredrawSelectionChange(oldIndex, index);\r", "+\tif (index >= 0) {\r", "+\t\tControl control = items[index].control;\r", "+\t\tif (control != null && !control.isDisposed()) {\r", "+\t\t\tcontrol.setBounds(getClientArea());\r", "+\t\t\tcontrol.setVisible(true);\r", "+\t\t}\r", "+\t}\r", "+\t\r", "+\tif (notify) {\r", "+\t\tif (selectedIndex != oldIndex && selectedIndex != -1) {\r", "+\t\t\tEvent event = new Event();\r", "+\t\t\tevent.item = getSelection()[0];\r", "+\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dd1c605bf13bddd6df9a4108bc1b213", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 18, "signatureBeforeChange": "  private void handleSelectionChange(int newValue)", "signatureAfterChange": "  int kEventControlHit (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventControlHit (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventControlHit (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;", "+\tint index = OS.GetControl32BitValue (handle) - 1;", "+\tint count = OS.GetControl32BitMaximum (handle);", "+\tfor (int i = 0; i < count; i++) {", "+\t\tif (i != index) {", "+\t\t\tControl control = items [i].control;", "+\t\t\tif (control != null && !control.isDisposed ())", "+\t\t\t\tcontrol.setVisible (false);", "+\tTabItem item = null;", "+\tif (index != -1) item = items [index];", "+\tif (item != null) {", "+\t\tControl control = item.control;", "+\t\tif (control != null && !control.isDisposed ()) {", "+\t\t\tcontrol.setBounds (getClientArea ());", "+\t\t\tcontrol.setVisible (true);", "+\tEvent event = new Event ();", "+\tevent.item = item;", "+\tpostEvent (SWT.Selection, event);", "+\tredraw ();", "+\treturn OS.eventNotHandledErr;", "-", "-private void handleSelectionChange(int newValue)  {", "-", "-\tTabItem item = null;", "-\tint index= oldValue;", "-", "-\tif (index != -1) item = items [index];", "-\tif (item != null) {", "-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setVisible (false);", "-\t\t}", "-\t}", "-\t\t", "-\tindex= newValue;", "-\tif (index != -1) item = items [index];", "-\tif (item != null) {", "-\t\tControl control = item.control;", "-\t\tif (control != null && !control.isDisposed ()) {", "-\t\t\tcontrol.setBounds (getClientArea ());", "-\t\t\tcontrol.setVisible (true);", "-\t\t}", "-\t}", "-\t", "-\tEvent event = new Event ();", "-\tevent.item = item;", "-\tpostEvent (SWT.Selection, event);", "-}"]}], "num": 7706}