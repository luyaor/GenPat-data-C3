{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aedf3e058d598e25ccd3bf768033fdf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b73651eda5b1a35fde488d11bbfa84c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f027e65f362a4197ce516f6998da11767ff4ed6f", "commitAfterChange": "9d80fa41aebed8140fd6eb7eab6449cb2fe17efe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  NSAttributedString createString(String string, int flags)", "signatureAfterChange": "  NSAttributedString createString(String string, int flags)", "diff": ["-//\tint breakCount = 0;", "-//\tint[] breaks = null;", "-//\tif ((flags & (SWT.DRAW_MNEMONIC | SWT.DRAW_DELIMITER)) != 0) {", "-//\t\tint i=0, j=0;", "-//\t\twhile (i < chars.length) {", "-//\t\t\tchar c = chars [j++] = chars [i++];", "-//\t\t\tswitch (c) {", "-//\t\t\t\tcase '&': {", "-//\t\t\t\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0) {", "-//\t\t\t\t\t\tif (i == chars.length) {continue;}", "-//\t\t\t\t\t\tif (chars [i] == '&') {i++; continue;}", "-//\t\t\t\t\t\tj--;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-//\t\t\t\tcase '\\r':", "-//\t\t\t\tcase '\\n': {", "-//\t\t\t\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {", "-//\t\t\t\t\t\tif (c == '\\r' && i != chars.length && chars[i] == '\\n') i++;", "-//\t\t\t\t\t\tj--;", "-//\t\t\t\t\t\tif (breaks == null) {", "-//\t\t\t\t\t\t\tbreaks = new int[4];", "-//\t\t\t\t\t\t} else if (breakCount == breaks.length) {", "-//\t\t\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "-//\t\t\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "-//\t\t\t\t\t\t\tbreaks = newBreaks;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tbreaks[breakCount++] = j;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t}", "-//\t\tlength = j;", "-//\t}", "+\tint breakCount = 0;", "+\tint[] breaks = null;", "+\tif ((flags & (SWT.DRAW_MNEMONIC | SWT.DRAW_DELIMITER)) != 0) {", "+\t\tint i=0, j=0;", "+\t\twhile (i < chars.length) {", "+\t\t\tchar c = chars [j++] = chars [i++];", "+\t\t\tswitch (c) {", "+\t\t\t\tcase '&': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0) {", "+\t\t\t\t\t\tif (i == chars.length) {continue;}", "+\t\t\t\t\t\tif (chars [i] == '&') {i++; continue;}", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase '\\r':", "+\t\t\t\tcase '\\n': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {", "+\t\t\t\t\t\tif (c == '\\r' && i != chars.length && chars[i] == '\\n') i++;", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t\tif (breaks == null) {", "+\t\t\t\t\t\t\tbreaks = new int[4];", "+\t\t\t\t\t\t} else if (breakCount == breaks.length) {", "+\t\t\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "+\t\t\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "+\t\t\t\t\t\t\tbreaks = newBreaks;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreaks[breakCount++] = j;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tlength = j;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70fbe522b4e62a3e831e11e69b403f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9414284ac2a6dbcaa73cbd09fff45a557e340e58", "commitAfterChange": "9e4aa7212e6b6176593bc755f9bb7d93433431f0", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  int setString(String string, int flags)", "signatureAfterChange": "  int setString(String string, int flags)", "diff": ["-\t\t\tif (c == '&' && (flags & SWT.DRAW_MNEMONIC) != 0) {", "-\t\t\t\tif (i == chars.length) {continue;}", "-\t\t\t\tif (chars [i] == '&') {i++; continue;}", "-\t\t\t\tj--;", "-\t\t\t} else if (c == '\\n' && (flags & SWT.DRAW_DELIMITER) != 0) {", "-\t\t\t\tj--;", "-\t\t\t\tif (breaks == null) {", "-\t\t\t\t\tbreaks = new int[4];", "-\t\t\t\t} else if (breakCount == breaks.length) {", "-\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "-\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "-\t\t\t\t\tbreaks = newBreaks;", "+\t\t\tswitch (c) {", "+\t\t\t\tcase '&': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0) {", "+\t\t\t\t\t\tif (i == chars.length) {continue;}", "+\t\t\t\t\t\tif (chars [i] == '&') {i++; continue;}", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "-\t\t\t\tbreaks[breakCount++] = j;", "-\t\t\t}\t\t\t", "+\t\t\t\tcase '\\r':", "+\t\t\t\tcase '\\n': {", "+\t\t\t\t\tif ((flags & SWT.DRAW_DELIMITER) != 0) {", "+\t\t\t\t\t\tif (c == '\\r' && i != chars.length && chars[i] == '\\n') i++;", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t\tif (breaks == null) {", "+\t\t\t\t\t\t\tbreaks = new int[4];", "+\t\t\t\t\t\t} else if (breakCount == breaks.length) {", "+\t\t\t\t\t\t\tint[] newBreaks = new int[breaks.length + 4];", "+\t\t\t\t\t\t\tSystem.arraycopy(breaks, 0, newBreaks, 0, breaks.length);", "+\t\t\t\t\t\t\tbreaks = newBreaks;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreaks[breakCount++] = j;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 59340}