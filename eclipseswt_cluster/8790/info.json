{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3619e84d240bcd4a64c3de63f6847f04", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e12786193b0a759ad52091f6d8bdc56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "5ba9287f6caa82e9989a01a562fc97d015948ef7", "commitAfterChange": "8c259c2fdd0bffd2ea76820f5d04cd4a52c2e4a7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " int[] getCaretOffsetAndDirectionAtX(int x)", "signatureAfterChange": " int[] getCaretOffsetAndDirectionAtX(int x)", "diff": ["-\tint offset;", "-\tint direction;", "-\tboolean visualLeft = (x <= halfway);", "-\toffset = getLogicalOffset(visualOffset);", "+\tboolean visualLeft;", "+\tint offset = getLogicalOffset(visualOffset);", "+\tint direction;", "+\tif (isRightOriented) {", "+\t\tvisualLeft = (x > halfway);", "+\t}", "+\telse {", "+\t\tvisualLeft = (x <= halfway);", "+\t}", "-\t\t\t// of the character at location x and the PREVIOUS key is", "-\t\t\t// pressed", "-\t\t\tdirection = ST.COLUMN_PREVIOUS;", "+\t\t\t// of the character at location x and the PREVIOUS ", "+\t\t\t// key is pressed\t\t\t\t", "+\t\t \tdirection = ST.COLUMN_PREVIOUS;", "-\t\t\t// position the caret as if the caret is to the right", "-\t\t\t// of the character at location x and the PREVIOUS key is", "-\t\t\t// pressed", "-\t\t\tdirection = ST.COLUMN_PREVIOUS;", "+\t\t\t// position the caret as if the caret is to the left", "+\t\t\t// of the character at location x and the PREVIOUS ", "+\t\t\t// key is pressed\t\t\t\t", "+\t\t \tdirection = ST.COLUMN_PREVIOUS;", "-\t\t\t// position the caret as if the caret is to the left", "+\t\t\toffset++;", "+\t\t\t// position the caret as if the caret is to the right", "-\t\t\toffset++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31c585b713920d2e0d03421ff45dda57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 289, "methodNumberAfterChange": 293, "signatureBeforeChange": " void showCaret(int caretLine)", "signatureAfterChange": " void showCaret(int caretLine)", "diff": ["-\tint newCaretX = getXAtOffset(line, caretLine, offsetInLine);\t", "-\tboolean scrolled = showLocation(newCaretX, caretLine);", "-\tboolean setWrapCaretLocation = false;", "-\tCaret caret = getCaret();", "-\tif (wordWrap && caret != null) {", "-\t\tint caretY = caret.getLocation().y;", "-\t\tif ((caretY + verticalScrollOffset) / getVerticalIncrement() - 1 != caretLine) {", "-\t\t\tsetWrapCaretLocation = true;", "-\t\t}", "-\t}", "-\tif (!scrolled || setWrapCaretLocation) {", "-\t\t// set the caret location if a scroll operation did not set it (as a ", "-\t\t// sideeffect of scrolling) or when in word wrap mode and the caret ", "-\t\t// line was explicitly specified (i.e., because getWrapCaretLine does ", "-\t\t// not return the desired line causing scrolling to not set it correctly)", "-\t\tsetCaretLocation(newCaretX, caretLine, getCaretDirection());", "+\tPoint newCaretPos = getPointAtOffset(line, caretLine, offsetInLine);\t", "+\tboolean scrolled = showLocation(newCaretPos);\t", "+\tif (!scrolled) {", "+\t\t// set the caret location if a scroll operation did not set it", "+\t\tsetCaretLocation(newCaretPos, caretLine, getCaretDirection());"]}], "num": 8790}