{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46d4cbb03db1ced5d2665a006416eebb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a4059da93cfcfc5f20739092e1cf54f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/builders/Check64CompilationParticipant.java", "commitBeforeChange": "4d8daf0e3e81d301cc7e2c778b9beea2a5b1e9e7", "commitAfterChange": "eec00175c85fc62816701fee36d553b89dc3e28d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void buildFinished(IJavaProject project)", "signatureAfterChange": "  public void buildFinished(IJavaProject project)", "diff": ["-//\t\tlong time = System.currentTimeMillis();", "-\t\tboolean hasProblems = false;", "-\t\tIMarker[] markers = project.getProject().findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "-\t\tfor (int i = 0; i < markers.length; i++) {", "-\t\t\tIMarker marker = markers[i];", "-\t\t\tif (SOURCE_ID.equals(marker.getAttribute(IMarker.SOURCE_ID))) {", "-\t\t\t\tmarker.delete();", "-\t\t\t} else {", "-\t\t\t\tObject severity = marker.getAttribute(IMarker.SEVERITY);", "-\t\t\t\thasProblems |= severity != null && ((Integer)severity).intValue() == IMarker.SEVERITY_ERROR;", "-\t\t\t}", "-\t\t}", "-\t\tif (hasProblems) return;", "+//\t\tlong time = System.currentTimeMillis();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f20d5cd61f277dd722f0777df9e7714", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/builders/Check64CompilationParticipant.java", "commitBeforeChange": "5ae377b8d4361b2ac376e3ffa09869cd33aee0bc", "commitAfterChange": "8e8fa71f074931dc9f4fed52bb9084e601c365f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void buildFinished(IJavaProject project)", "signatureAfterChange": "  public void buildFinished(IJavaProject project)", "diff": ["+//\t\tlong time = System.currentTimeMillis();", "+\t\tboolean hasProblems = false;", "+\t\tIMarker[] markers = proj.findMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\tfor (int i = 0; i < markers.length; i++) {", "+\t\t\tIMarker marker = markers[i];", "+\t\t\tif (SOURCE_ID.equals(marker.getAttribute(IMarker.SOURCE_ID))) {", "+\t\t\t\tmarker.delete();", "+\t\t\t} else {", "+\t\t\t\thasProblems = true;", "+\t\t\t}", "+\t\t}", "+\t\tif (hasProblems) return;", "-\t\tsources = null;", "-//\t\tSystem.out.println(\"start\");", "-//\t\tlong time = System.currentTimeMillis();", "+//\t\tSystem.out.println(\"start=\" + sources.size());", "+\t\tproj.findMember(new Path(buildDir)).refreshLocal(IResource.DEPTH_INFINITE, null);\t\t", "-//\t\tSystem.out.println(\"time=\" +( System.currentTimeMillis() - time));", "+//\t\tSystem.out.println(\"copiling time=\" +( System.currentTimeMillis() - time));"]}], "num": 52089}