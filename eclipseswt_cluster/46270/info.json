{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cedf6bc8362d4d1b5cfb20aae3417c20", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6c6d6e70a8db625912e2996233c4e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "dbea67a910389ee7d738866aa8ecd95dd99f2aa1", "commitAfterChange": "8954b62f4c2f33c78ff5628d2cfc0549f4c650df", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tvoid createMenuBar()", "signatureAfterChange": "  \tvoid createMenuBar()", "diff": ["-\t\t        \tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "-\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_loadfile\") + fileName); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.open();", "-\t\t        \tstyledText.setText(\"\"); //$NON-NLS-1$", "+\t\t        \tshowError(getResourceString(\"Error\"), exception.getMessage()); //$NON-NLS-1$", "-\t\t        \t} catch (IOException ex) {", "-\t\t        \t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "-\t\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "-\t\t\t\t\t\tmessageBox.setMessage(ex.getMessage());", "-\t\t\t\t\t\tmessageBox.open();", "+\t\t        \t} catch (IOException exception) {", "+\t\t        \t\tshowError(getResourceString(\"Error\"), exception.getMessage()); //$NON-NLS-1$", "-\t\t\t\tFile file = new File(fileName);", "-\t\t\t\ttry {\t\t\t\t\t", "-\t\t\t       \tFileWriter fileWriter = new FileWriter(file);", "-\t\t\t       \tfileWriter.write(styledText.getText());", "-\t\t\t       \tfileWriter.close();", "-\t\t\t\t} catch (IOException ex) {", "-\t\t\t\t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "-\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_writefile\") + fileName); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.open();", "-\t\t\t\t}", "+\t\t\t\tsaveFile();", "-\t\t\t\tdialog.setText(getResourceString(\"Save_fileitem\")); //$NON-NLS-1$", "-\t\t\t\tdialog.setFilterPath(\"c:\\\\\"); //$NON-NLS-1$", "-\t\t\t\tdialog.setFileName(\"*.txt\"); //$NON-NLS-1$", "-\t\t\t\tfileName = dialog.open(); ", "-\t\t\t\tif (fileName == null) return;\t\t\t\t", "-\t\t        File file = new File(fileName);", "-\t\t        FileWriter fileWriter = null;", "-\t\t        try {", "-\t\t        \tfileWriter = new FileWriter(file);", "-\t\t        \tfileWriter.write(styledText.getText());", "-\t\t        } catch (IOException ex) {", "-\t\t        \tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "-\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.setMessage(getResourceString(\"Error_savefile\") + fileName); //$NON-NLS-1$", "-\t\t\t\t\tmessageBox.open();", "-\t\t        } finally {", "-\t\t        \ttry {", "-\t\t        \t\tif (fileWriter != null) fileWriter.close();", "-\t\t        \t} catch (IOException ex) {", "-\t\t        \t\tMessageBox messageBox = new MessageBox(shell, SWT.ICON_ERROR | SWT.CLOSE);", "-\t\t\t\t\t\tmessageBox.setText(getResourceString(\"Error\")); //$NON-NLS-1$", "-\t\t\t\t\t\tmessageBox.setMessage(ex.getMessage());", "-\t\t\t\t\t\tmessageBox.open();", "-\t\t        \t}", "-\t\t        }", "+\t\t\t\tif (fileName != null) dialog.setFileName(fileName);", "+\t\t\t\tString name = dialog.open(); ", "+\t\t\t\tif (name != null) {", "+\t\t\t\t\tfileName = name;", "+\t\t\t\t\tsaveFile();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8b69db84237e020a2b841c9d67f9e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CTabFolderTab.java", "commitBeforeChange": "646c14c459db780d16f386a9a63437d50caf1876", "commitAfterChange": "740ffee05c104bcff57a8c6063262c192e8e3207", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid createOtherGroup ()", "signatureAfterChange": " \tvoid createOtherGroup ()", "diff": ["-\t\tsetSimpleTabButton = new Button (otherGroup, SWT.CHECK);", "-\t\tsetSimpleTabButton.setText (ControlExample.getResourceString(\"Set_Simple_Tabs\"));", "-\t\tsetSimpleTabButton.setSelection(true);", "-\t\tsetImageButton = new Button (otherGroup, SWT.CHECK);", "-\t\tsetImageButton.setText (ControlExample.getResourceString(\"Set_Image\"));", "-\t", "-\t\t/* Add the listeners */", "-\t\tsetSimpleTabButton.addSelectionListener (new SelectionAdapter () {", "+\t\tsimpleTabButton = new Button (otherGroup, SWT.CHECK);", "+\t\tsimpleTabButton.setText (ControlExample.getResourceString(\"Set_Simple_Tabs\"));", "+\t\tsimpleTabButton.setSelection(true);", "+\t\tsimpleTabButton.addSelectionListener (new SelectionAdapter () {", "-\t\tsetImageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\t\t", "+\t\tsingleTabButton = new Button (otherGroup, SWT.CHECK);", "+\t\tsingleTabButton.setText (ControlExample.getResourceString(\"Set_Single_Tabs\"));", "+\t\tsingleTabButton.setSelection(false);", "+\t\tsingleTabButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetSingleTabs();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tshowMinButton = new Button (otherGroup, SWT.CHECK);", "+\t\tshowMinButton.setText (ControlExample.getResourceString(\"Set_Min_Visible\"));", "+\t\tshowMinButton.setSelection(false);", "+\t\tshowMinButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetMinimizeVisible();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tshowMaxButton = new Button (otherGroup, SWT.CHECK);", "+\t\tshowMaxButton.setText (ControlExample.getResourceString(\"Set_Max_Visible\"));", "+\t\tshowMaxButton.setSelection(false);", "+\t\tshowMaxButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetMaximizeVisible();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\timageButton = new Button (otherGroup, SWT.CHECK);", "+\t\timageButton.setText (ControlExample.getResourceString(\"Set_Image\"));", "+\t\timageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tunselectedImageButton = new Button (otherGroup, SWT.CHECK);", "+\t\tunselectedImageButton.setText (ControlExample.getResourceString(\"Set_Unselected_Image_Visible\"));", "+\t\tunselectedImageButton.setSelection(true);", "+\t\tunselectedImageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetUnselectedImageVisible();", "+\t\t\t}", "+\t\t});", "+\t\tunselectedCloseButton = new Button (otherGroup, SWT.CHECK);", "+\t\tunselectedCloseButton.setText (ControlExample.getResourceString(\"Set_Unselected_Close_Visible\"));", "+\t\tunselectedCloseButton.setSelection(true);", "+\t\tunselectedCloseButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetUnselectedCloseVisible();"]}], "num": 46270}