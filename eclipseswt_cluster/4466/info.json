{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41ee4d331afc393fb6c2b22f8b7d6150", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8198c9f8d0f3c744c973861e6e53a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/internal/Converter.java", "commitBeforeChange": "a2b9bca1b2547b13d86917552eeb3b52c207b9e4", "commitAfterChange": "4510458698a44cfe0ebb614544242955fbc20f7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public static byte [] wcsToMbcs (String codePage, String string, boolean terminate)", "signatureAfterChange": "\r public static byte [] wcsToMbcs (String codePage, String string, boolean terminate)", "diff": ["-public static byte [] wcsToMbcs (String codePage, String string, boolean terminate) {\r", "-\t//SLOW AND BOGUS\r", "-\tint count = string.length ();\r", "-\tif (terminate) count++;\r", "-\tchar [] buffer = new char [count];\r", "-\tstring.getChars (0, string.length (), buffer, 0);\r", "-\treturn wcsToMbcs (codePage, buffer, false);\r", "-}\r", "+ */\r", "+public static byte [] wcsToMbcs (String codePage, String string, boolean terminate) {\r", "+\tif (terminate) {\r", "+\t\tif (string == null) return NULL_BYTE_ARRAY;\r", "+\t\tint count = string.length ();\r", "+\t\tchar [] buffer = new char [count + 1];\r", "+\t\tstring.getChars (0, count, buffer, 0);\r", "+\t\treturn wcsToMbcs (codePage, buffer, false);\r", "+\t} else {\r", "+\t\tif (string == null) return EMPTY_BYTE_ARRAY;\r", "+\t\tint count = string.length ();\r", "+\t\tchar [] buffer = new char [count];\r", "+\t\tstring.getChars (0, count, buffer, 0);\r", "+\t\treturn wcsToMbcs (codePage, buffer, false);\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab24795061f049c5be32722069cf07fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "25e0a88282a8f52572829023c99494b77782afb9", "commitAfterChange": "4492e7490e450a65a8ceed26e7c2cb00d8b99b49", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static String [] getExtensions ()", "signatureAfterChange": " public static String [] getExtensions ()", "diff": ["-\t//TODO", "-\treturn new String[0];", "+\tString [] extensions = new String [1024];", "+\tint classesRoot = OS.Registry_ClassesRoot ();", "+\tint subKeys = OS.RegistryKey_GetSubKeyNames (classesRoot);", "+\tOS.GCHandle_Free (classesRoot);", "+\tint count = 0, length = OS.ICollection_Count (subKeys);", "+\tfor (int i=0; i<length; i++) {", "+\t\tint key = OS.IList_default (subKeys, i);", "+\t\tString extension = createJavaString (key);", "+\t\tOS.GCHandle_Free (key);", "+\t\tif (extension.length () > 0 && extension.charAt (0) == '.') {", "+\t\t\tif (count == extensions.length) {", "+\t\t\t\tString [] newExtensions = new String [extensions.length + 1024];", "+\t\t\t\tSystem.arraycopy (extensions, 0, newExtensions, 0, extensions.length);", "+\t\t\t\textensions = newExtensions;", "+\t\t\t}", "+\t\t\textensions [count++] = extension;", "+\t\t}", "+", "+\t}", "+\tOS.GCHandle_Free (subKeys);", "+\tif (count != extensions.length) {", "+\t\tString [] newExtension = new String [count];", "+\t\tSystem.arraycopy (extensions, 0, newExtension, 0, count);", "+\t\textensions = newExtension;", "+\t}", "+\treturn extensions;"]}], "num": 4466}