{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abbe1fc2caf6fc7d273c65a389666888", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6197ed0fb25268514b7afe6a87fb207a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "b5b144c870a845c6b674bd3aa5351bdf169ec16c", "commitAfterChange": "257956b6dd31f969247b68558fac32348be012a7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void setState (int state)", "signatureAfterChange": " void setState (int state)", "diff": ["-public void setState (int state) {", "+/*public*/ void setState (int state) {", "-\tswitch (state) {", "-\t\tcase SWT.NORMAL:", "-\t\tcase SWT.ERROR:", "-\t\tcase SWT.PAUSED:", "-\t\t\tOS.SendMessage (handle, OS.PBM_SETSTATE, state, 0);", "+\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\tswitch (state) {", "+\t\t\tcase SWT.NORMAL:", "+\t\t\t\tOS.SendMessage (handle, OS.PBM_SETSTATE, OS.PBST_NORMAL, 0);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.ERROR:", "+\t\t\t\tOS.SendMessage (handle, OS.PBM_SETSTATE, OS.PBST_ERROR, 0);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.PAUSED:", "+\t\t\t\tOS.SendMessage (handle, OS.PBM_SETSTATE, OS.PBST_PAUSED, 0);", "+\t\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e442128c7ec5365130b6903b7655e6ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "e9af8004a671b39c0abf5b1c916bae731486bc4e", "commitAfterChange": "df3c9f82cc5e05dc08780fd1c1b12cad770c48b8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 24, "signatureBeforeChange": " void onMouseDown(Event event)", "signatureAfterChange": " void onMouseDown(Event event)", "diff": ["+void onMouseDown(Event event) {", "+\tif (isLocked || event.button != 1) return;", "+\tfixEvent(event);", "+\tdragging = getGrabbedItem(event.x, event.y);", "+\tif (dragging != null) {", "+\t\tmouseXOffset = event.x;", "+\t\titemXOffset = mouseXOffset - dragging.internalGetBounds().x;", "+\t\tsetCursor(dragCursor);", "+\tfixEvent(event);", "-}", "-void onMouseDown(Event event) {", "-\tdragging = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d020fac04beff26450e62f36e3ac1def", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "9557ec5f83857c038e16871230af1bc8baa0d33e", "commitAfterChange": "4690e712f150524e76cd83cdc530ca56d134651d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  void setCheckboxImageList (int width, int height, boolean fixScroll)", "signatureAfterChange": "  void setCheckboxImageList (int width, int height, boolean fixScroll)", "diff": ["+\t/*", "+\t* Bug in Windows.  Setting the LVSIL_STATE state image list", "+\t* when the table already has a LVSIL_SMALL image list causes", "+\t* pixel corruption of the images.  The fix is to reset the", "+\t* LVSIL_SMALL image list.", "+\t*/", "+\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\tint hImageList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "+\t\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_SMALL, hImageList);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80cf9c487b2fde58bb53cb108823bff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "36e56391cd23da7679ad472475543734665f47fc", "commitAfterChange": "6bcc0a20eac3c19a3dbab5b76bfcdd2c2f5b68e6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  private int dragTrackingHandler(int message, int theWindow, int handlerRefCon, int theDrag)", "signatureAfterChange": "  private int dragTrackingHandler(int message, int theWindow, int handlerRefCon, int theDrag)", "diff": ["+\tif (event.operations == 0 || event.dataTypes == null || event.dataTypes.length == 0) {", "+\t\tif (message == OS.kDragTrackingLeaveWindow) {", "+\t\t\tOS.SetThemeCursor(OS.kThemeArrowCursor);", "+\t\t} else {", "+\t\t\tOS.SetThemeCursor(OS.kThemeNotAllowedCursor);", "+\t\t}", "+\t\treturn OS.dragNotAcceptedErr;", "+\t}", "+\t"]}], "num": 24187}