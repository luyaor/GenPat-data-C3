{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41ed313ea47fb6a6f8542f1a903f4409", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3faaa8dca7a1cac245db3daca23f19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tint /*long*/ hBitmap = srcImage.handle;", "-\tint /*long*/ srcHdc = OS.CreateCompatibleDC(handle);", "-\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "+\tlong /*int*/ hBitmap = srcImage.handle;", "+\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(handle);", "+\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "-\t\tint /*long*/ maskHdc = OS.CreateCompatibleDC(handle);", "-\t\tint /*long*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "-\t\tint /*long*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "+\t\tlong /*int*/ maskHdc = OS.CreateCompatibleDC(handle);", "+\t\tlong /*int*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "+\t\tlong /*int*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "-\t\t\tint /*long*/ tempHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint /*long*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "-\t\t\tint /*long*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);", "+\t\t\tlong /*int*/ tempHdc = OS.CreateCompatibleDC(handle);", "+\t\t\tlong /*int*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "+\t\t\tlong /*int*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d78e87df6891740257ff741bac207207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\tint /*long*/ hBitmap = info.hbmColor;", "+\t\t\tlong /*int*/ hBitmap = info.hbmColor;", "-\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "+\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "-\t\t\tint /*long*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hBitmapDC, hBitmap);", "+\t\t\tlong /*int*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hBitmapDC, hBitmap);", "-\t\t\tint /*long*/ oldPalette = 0;", "+\t\t\tlong /*int*/ oldPalette = 0;", "-\t\t\t\tint /*long*/ hPalette = device.hPalette;", "+\t\t\t\tlong /*int*/ hPalette = device.hPalette;", "-\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "+\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "-\t\t\tint /*long*/ handle = this.handle;", "+\t\t\tlong /*int*/ handle = this.handle;", "-\t\t\t\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(memGC.handle, this.handle);", "+\t\t\t\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(memGC.handle, this.handle);", "-\t\t\tint /*long*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hBitmapDC, handle);", "+\t\t\tlong /*int*/ hBitmapDC = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hBitmapDC, handle);", "-\t\t\tint /*long*/ oldPalette = 0;", "+\t\t\tlong /*int*/ oldPalette = 0;", "-\t\t\t\tint /*long*/ hPalette = device.hPalette;", "+\t\t\t\tlong /*int*/ hPalette = device.hPalette;"]}], "num": 16833}