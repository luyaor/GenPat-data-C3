{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67c17881491eed20768744592cedf386", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d88e0b7c3841b77d751ac923120c13bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "33a75618afb3130e0b85c6636582400a9caf1eba", "commitAfterChange": "c0d6cbff96c326561e4817afe6a259d640c23e55", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["-\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);", "-\tOS.gtk_window_set_title (shellHandle, buffer);", "+\t", "+\t/*", "+\t* Feature in GTK.  It is not possible to set a shell", "+\t* title to an empty string.  The fix is to set the title", "+\t* to be a single space.", "+\t*/", "+\tif (string.length () == 0) string = \" \";", "+\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, true);", "+\tint length = buffer1.length - 1;", "+\t", "+\t/* ", "+\t* Bug in GTK.  For some reason, if the title string", "+\t* length is not a multiple of 4, some window managers", "+\t* occasionally draw garbage after the last character in", "+\t* the title.  The fix is to pad the title.", "+\t*/", "+\tbyte [] buffer2 = buffer1;", "+\tif ((length % 4) != 0) {", "+\t\tbuffer2 = new byte [(length + 3) / 4 * 4];", "+\t\tSystem.arraycopy (buffer1, 0, buffer2, 0, length);", "+\t}", "+", "+\tOS.gtk_window_set_title (shellHandle, buffer2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14c5eed34a52727bfc9bd5f5870d6d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "c5308d73c1e46a1db4edf39db94dfada1b6e65dc", "commitAfterChange": "b57747abb0a6d500538c509fbd694a7f0fb31a30", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic static void main(String[] args)", "signatureAfterChange": "  \tpublic static void main(String[] args)", "diff": ["-//\t\targs = new String[]{", "-//\t\t\t\"./Mac Generation/org/eclipse/swt/tools/internal/AppKitFull.bridgesupport\",", "-//\t\t\t\"./Mac Generation/org/eclipse/swt/tools/internal/FoundationFull.bridgesupport\",", "-//\t\t\t\"./Mac Generation/org/eclipse/swt/tools/internal/WebKitFull.bridgesupport\",", "-//\t\t};", "+\t\tString mainClass = args.length > 0 ? args[0] : \"org.eclipse.swt.internal.cocoa.OS\";", "+\t\tString outputDir = args.length > 1 ? args[1] : \"../org.eclipse.swt/Eclipse SWT PI/cocoa/\";", "+\t\tString[] xmls = {};", "+\t\tif (args.length > 2) {", "+\t\t\txmls = new String[args.length - 2];", "+\t\t\tSystem.arraycopy(args, 2, xmls, 0, xmls.length);", "+\t\t}", "-\t\t\tgen.setXmls(args);", "-\t\t\tgen.setOutputDir(\"../org.eclipse.swt/Eclipse SWT PI/cocoa/\");", "-\t\t\tgen.setMainClass(\"org.eclipse.swt.internal.cocoa.OS\");", "+\t\t\tgen.setXmls(xmls);", "+\t\t\tgen.setOutputDir(outputDir);", "+\t\t\tgen.setMainClass(mainClass);"]}], "num": 48569}