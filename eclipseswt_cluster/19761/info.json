{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94870d2269e94cf988eb05f83a2cd85c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48e54799ec968bab084831369166f6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "99a3df6c8ce874e01effe08dd456a028c1d8ee3d", "commitAfterChange": "e369a3feeab7e3acef925dafd874b588f0fe8f44", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t//This code is intentionally commented", "-//\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "-//\t\tGC gc = new GC (this);", "-//\t\tPoint size = gc.stringExtent (message);", "-//\t\twidth = Math.max (width, size.x);", "-//\t\tgc.dispose ();", "-//\t}", "+\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, message, true);", "+\t\tint /*long*/ layout = OS.gtk_widget_create_pango_layout (handle, buffer);", "+\t\tOS.pango_layout_get_size (layout, w, h);", "+\t\tOS.g_object_unref (layout);", "+\t\twidth = Math.max (width, OS.PANGO_PIXELS (w [0]));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22390d721b4676f93901fe0e3e96d234", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "c777120398b711f5f85455fcd5e6f2f8b663ebf5", "commitAfterChange": "99a3df6c8ce874e01effe08dd456a028c1d8ee3d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tif (wHint == SWT.DEFAULT) width = OS.XmStringWidth(fontList, xmString);", "+\t\t\tif (wHint == SWT.DEFAULT) width = OS.XmStringWidth (fontList, xmString);", "+\t\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "+\t\t\tif (wHint == SWT.DEFAULT) {", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), message, true);", "+\t\t\t\tint xmString = OS.XmStringGenerate (", "+\t\t\t\t\t\tbuffer,", "+\t\t\t\t\t\tOS.XmFONTLIST_DEFAULT_TAG,", "+\t\t\t\t\t\tOS.XmCHARSET_TEXT,", "+\t\t\t\t\t\tnull);", "+\t\t\t\tint fontList = font.handle;", "+\t\t\t\twidth = Math.max (width, OS.XmStringWidth (fontList, xmString));", "+\t\t\t\tOS.XmStringFree (xmString);", "+\t\t\t}", "+\t\t}", "-\t//This code is intentionally commented", "-//\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "-//\t\tGC gc = new GC (this);", "-//\t\tPoint size = gc.stringExtent (message);", "-//\t\twidth = Math.max (width, size.x);", "-//\t\tgc.dispose ();", "-//\t}"]}], "num": 19761}