{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "175fce279b7a22d444f277bad822873f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ca0dcb9c53245e3e9ca650ce7b9d17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CBanner.java", "commitBeforeChange": "4f6cacc9f76349f45c7a4f16b88a3566ae23ff3b", "commitAfterChange": "8e878fd2cf08a4ff98d0bd94fbda608760fdcee1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CBanner(Composite parent, int style)", "signatureAfterChange": " public CBanner(Composite parent, int style)", "diff": ["-\taddPaintListener(new PaintListener() {", "-\t\tpublic void paintControl(PaintEvent event) {", "-\t\t\tonPaint(event.gc);", "-\t\t}", "-\t});", "-\taddControlListener(new ControlAdapter(){", "-\t\tpublic void controlResized(ControlEvent e) {", "-\t\t\tonResize();", "-\t\t}", "-\t});", "-\taddListener(SWT.Dispose, new Listener() {", "+\tListener listener = new Listener() {", "-\t\t\tonDispose();", "+\t\t\tswitch (e.type) {", "+\t\t\t\tcase SWT.Dispose:", "+\t\t\t\t\tonDispose(); break;", "+\t\t\t\tcase SWT.MouseDown:", "+\t\t\t\t\tonMouseDown (e.x, e.y); break;", "+\t\t\t\tcase SWT.MouseExit:", "+\t\t\t\t\tonMouseExit(); break;", "+\t\t\t\tcase SWT.MouseMove:", "+\t\t\t\t\tonMouseMove(e.x, e.y); break;", "+\t\t\t\tcase SWT.MouseUp:", "+\t\t\t\t\tonMouseUp(); break;", "+\t\t\t\tcase SWT.Paint:", "+\t\t\t\t\tonPaint(e.gc); break;", "+\t\t\t\tcase SWT.Resize:", "+\t\t\t\t\tonResize(); break;", "+\t\t\t}", "-\t});", "-\taddListener(SWT.MouseMove, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tonMouseMove(event.x, event.y);", "-\t\t}", "-\t});", "-\taddListener(SWT.MouseExit, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tonMouseExit();", "-\t\t}", "-\t});", "-\taddListener(SWT.MouseDown, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tonMouseDown (event.x, event.y);", "-\t\t}", "-\t});", "-\taddListener(SWT.MouseUp, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tonMouseUp ();", "-\t\t}", "-\t});", "-}", "+\t};", "+\tint[] events = new int[] {SWT.Dispose, SWT.MouseDown, SWT.MouseExit, SWT.MouseMove, SWT.MouseUp, SWT.Paint, SWT.Resize};", "+\tfor (int i = 0; i < events.length; i++) {", "+\t\taddListener(events[i], listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad00f92e71cd99520dfa58926ab954dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "a7f55348122e685e185be79f1e61c482f210f9b0", "commitAfterChange": "7b9bd176a3b0bcedf3e37bac78e4b0ee77698321", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public TableTree(Composite parent, int style)", "signatureAfterChange": "\r public TableTree(Composite parent, int style)", "diff": ["-\ttable.addListener(SWT.MouseDown, new Listener() {\r", "+\tListener tableListener = new Listener() {\r", "-\t\t\tonMouseDown(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.MouseDown: onMouseDown(e); break;\r", "+\t\t\tcase SWT.Selection: onSelection(e); break;\r", "+\t\t\tcase SWT.DefaultSelection: onSelection(e); break;\r", "+\t\t\tcase SWT.Traverse: onTraverse(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.Selection, new Listener() {\r", "+\t};\r", "+\tint[] tableEvents = new int[]{SWT.MouseDown, \r", "+\t\t                           SWT.Selection, \r", "+\t\t                           SWT.DefaultSelection, \r", "+\t\t                           SWT.Traverse};\r", "+\tfor (int i = 0; i < tableEvents.length; i++) {\r", "+\t\ttable.addListener(tableEvents[i], tableListener);\r", "+\t}\r", "+\t\r", "+\tListener listener = new Listener() {\r", "-\t\t\tonSelection(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.Dispose: onDispose(e); break;\r", "+\t\t\tcase SWT.Resize:  onResize(e); break;\r", "+\t\t\tcase SWT.FocusIn: onFocusIn(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.DefaultSelection, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonSelection(e);\r", "-\t\t}\r", "-\t});\r", "-\r", "-\taddListener(SWT.Dispose, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonDispose();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.Resize, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonResize();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.FocusIn, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonFocusIn();\r", "-\t\t}\r", "-\t});\r", "+\t};\r", "+\tint[] events = new int[]{SWT.Dispose, \r", "+\t\t                      SWT.Resize, \r", "+\t\t                      SWT.FocusIn};\r", "+\tfor (int i = 0; i < events.length; i++) {\r", "+\t\taddListener(events[i], listener);\r", "+\t}\t                      \r"]}], "num": 15567}