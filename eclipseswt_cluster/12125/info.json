{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee55d8460b9d975e8fb93e788a60b3c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c3addf1bdd3ff1605a98e6e09c2a201", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Decorations.java", "commitBeforeChange": "e3b3895ab4dae7d82ff4ee1965153f9ffdacb4b6", "commitAfterChange": "01f2a277618f1956f9a104e730dbfc9ec2828935", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " private void loadImages()", "signatureAfterChange": " private void loadImages()", "diff": ["-\timages [0] = new Image (shell.getDisplay(), this.getClass().getResourceAsStream(\"folder.bmp\"));", "-\timages [1] = new Image (shell.getDisplay(), this.getClass().getResourceAsStream(\"folderOpen.bmp\"));", "-\timages [2] = new Image (shell.getDisplay(), this.getClass().getResourceAsStream(\"target.bmp\"));", "+\tint numFormats = SwtTestCase.imageFormats.length;", "+\tint numFiles = SwtTestCase.imageFilenames.length;", "+\tfor (int i=0; i<numFormats; i++) {", "+\t\tString format = SwtTestCase.imageFormats[i];", "+\t\tint index = i*numFiles;", "+\t\tfor (int j=0; j<numFiles; j++){", "+\t\t\tString fileName = SwtTestCase.imageFilenames[j];", "+\t\t\tInputStream  resource = this.getClass().getResourceAsStream(fileName + \".\" + format);", "+\t\t\timages [index+j] = new Image (shell.getDisplay(), resource);", "+\t\t\ttry {", "+\t\t\t\tresource.close();", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// continue;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdead20759609688d1e248a3374650bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Item.java", "commitBeforeChange": "e3b3895ab4dae7d82ff4ee1965153f9ffdacb4b6", "commitAfterChange": "01f2a277618f1956f9a104e730dbfc9ec2828935", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  private void loadImages()", "signatureAfterChange": "  private void loadImages()", "diff": ["-\tjava.io.InputStream in1 = this.getClass().getResourceAsStream(\"folder.bmp\");", "-\tjava.io.InputStream in2 = this.getClass().getResourceAsStream(\"folderOpen.bmp\");", "-\tjava.io.InputStream in3 = this.getClass().getResourceAsStream(\"target.bmp\");", "-\tDisplay display = shell.getDisplay();", "-\t\t", "-\timages [0] = new Image (display, in1);", "-\timages [1] = new Image (display, in2);", "-\timages [2] = new Image (display, in3);", "-\t", "-\ttry {", "-\t\tin1.close();", "-\t\tin2.close();", "-\t\tin3.close();", "-\t} catch (java.io.IOException e) {", "+\tint numFormats = SwtTestCase.imageFormats.length;", "+\tint numFiles = SwtTestCase.imageFilenames.length;", "+\tfor (int i=0; i<numFormats; i++) {", "+\t\tString format = SwtTestCase.imageFormats[i];", "+\t\tint index = i*numFiles;", "+\t\tfor (int j=0; j<numFiles; j++){", "+\t\t\tString fileName = SwtTestCase.imageFilenames[j];", "+\t\t\tInputStream  resource = this.getClass().getResourceAsStream(fileName + \".\" + format);", "+\t\t\timages [index+j] = new Image (shell.getDisplay(), resource);", "+\t\t\ttry {", "+\t\t\t\tresource.close();", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// continue;", "+\t\t\t}", "+\t\t}"]}], "num": 12125}