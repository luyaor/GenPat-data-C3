{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1fa7cdb3bcadefa320e27c352c2dcc2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75758658c06f627af99e3abd6aa9be15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a67064f2ba7661bc8ac060cad6b32fe1e6f5936", "commitAfterChange": "e204f9acdfc99e6e29d970c4d42f50fb2ccf4ebb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void showItem (int hItem)", "signatureAfterChange": "  void showItem (int hItem)", "diff": ["-\t/*", "-\t* Bug in Windows.  When TVM_ENSUREVISIBLE is used to ensure", "-\t* that an item is visible and the client area of the tree is", "-\t* smaller that the size of one item, TVM_ENSUREVISIBLE makes", "-\t* the next item in the tree visible by making it the top item", "-\t* instead of making the desired item visible.  The fix is to", "-\t* detect the case when the client area is too small and make", "-\t* the desired visible item be the top item in the tree.", "-\t*/", "-\tif (OS.SendMessage (handle, OS.TVM_GETVISIBLECOUNT, 0, 0) == 0) {", "+\tif (fixPinheadScroll (hItem)) return;", "+\tboolean scroll = true;", "+\tRECT itemRect = new RECT ();", "+\titemRect.left = hItem;", "+\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, itemRect) != 0) {", "+\t\tforceResize ();", "+\t\tRECT rect = new RECT ();", "+\t\tOS.GetClientRect (handle, rect);", "+\t\tPOINT pt = new POINT ();", "+\t\tpt.x = itemRect.left;", "+\t\tpt.y = itemRect.top;", "+\t\tif (OS.PtInRect (rect, pt)) {", "+\t\t\tpt.y = itemRect.bottom;", "+\t\t\tif (OS.PtInRect (rect, pt)) scroll = false;", "+\t\t}", "+\t}", "+\tif (scroll) {", "-\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hItem);", "-\t\tOS.SendMessage (handle, OS.WM_HSCROLL, OS.SB_TOP, 0);", "+\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "-\t} else {", "-\t\tboolean scroll = true;", "-\t\tRECT itemRect = new RECT ();", "-\t\titemRect.left = hItem;", "-\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, itemRect) != 0) {", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\tPOINT pt = new POINT ();", "-\t\t\tpt.x = itemRect.left;", "-\t\t\tpt.y = itemRect.top;", "-\t\t\tif (OS.PtInRect (rect, pt)) {", "-\t\t\t\tpt.y = itemRect.bottom;", "-\t\t\t\tif (OS.PtInRect (rect, pt)) scroll = false;", "-\t\t\t}", "-\t\t}", "-\t\tif (scroll) {", "-\t\t\tboolean fixScroll = checkScroll (hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d22fb4ebfc84dd85a905ba7ab74f965", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a67064f2ba7661bc8ac060cad6b32fe1e6f5936", "commitAfterChange": "e204f9acdfc99e6e29d970c4d42f50fb2ccf4ebb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\t\tif (hItem != 0) {", "-\t\t\t/*", "-\t\t\t* NOTE: TVM_SELECTITEM will not make an item that is already", "-\t\t\t* focused become selected but this does not matter because", "-\t\t\t* every item is explicilty selected later in this method.", "-\t\t\t*/", "-\t\t\tboolean fixScroll = checkScroll (hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\t\tignoreSelect = true;", "-\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "-\t\t\tignoreSelect = false;", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\t}"]}], "num": 49692}