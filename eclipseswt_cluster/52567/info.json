{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "733ef3f99b888b50bbee202f12401765", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c01d3c393316dcd39540ae86340521ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "e72f7bd4d44706289b63f67ce457d62232713387", "commitAfterChange": "cd6d057fe97b58ab42a52702e1bea64749013640", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DragSource(Control control, int style)", "signatureAfterChange": " public DragSource(Control control, int style)", "diff": ["-\tsuper (control, checkStyle(style));", "-\t", "-\tthis.control = control;", "-", "-\tcontrolListener = new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tif (event.type == SWT.Dispose) {", "-\t\t\t\tif (!DragSource.this.isDisposed()){", "-\t\t\t\t\tDragSource.this.dispose();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (event.type == SWT.DragDetect){", "-\t\t\t\tDragSource.this.drag();", "-\t\t\t}", "-\t\t\t", "-\t\t}", "-\t};", "-\tthis.control.addListener (SWT.Dispose, controlListener);", "-\tthis.control.addListener (SWT.DragDetect, controlListener);", "-\t", "-\tthis.addListener (SWT.Dispose, new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tonDispose();", "-\t\t}", "-\t});", "+\tsuper (control, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af87c266adfa4011c983bb15bce495f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "e72f7bd4d44706289b63f67ce457d62232713387", "commitAfterChange": "cd6d057fe97b58ab42a52702e1bea64749013640", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DropTarget(Control control, int style)", "signatureAfterChange": " public DropTarget(Control control, int style)", "diff": ["-", "-\tsuper (control, checkStyle(style));", "-\t", "-\tthis.control = control;", "-\t", "-\t/* AW", "-\tdropProc = new Callback(this, \"dropProcCallback\", 3);", "-\tif (dropProc == null)", "-\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);", "-", "-\tdragProc = new Callback(this, \"dragProcCallback\", 3);", "-\tif (dragProc == null)", "-\t\tDND.error(DND.ERROR_CANNOT_INIT_DROP);", "-\t", "-\tint[] args = new int[]{", "-\t\tOS.XmNdropSiteOperations, opToOsOp(style),", "-\t\tOS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,", "-\t\tOS.XmNdropProc,           dropProc.getAddress(),", "-\t\tOS.XmNdragProc,           dragProc.getAddress(),", "-\t\tOS.XmNanimationStyle,     OS.XmDRAG_UNDER_NONE,", "-\t\tOS.XmNdropSiteType,       OS.XmDROP_SITE_COMPOSITE,", "-\t};", "-", "-\t// the OS may have registered this widget as a drop site on creation.", "-\t// Remove the registered drop site because it has preconfigured values which we do not want.", "-\t//OS.XmDropSiteUnregister(control.handle);", "-\t// Register drop site with our own values", "-\tOS.XmDropSiteRegister(control.handle, args, args.length / 2);", "-\t*/", "-\t", "-\tcontrolListener = new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tif (!DropTarget.this.isDisposed()){", "-\t\t\t\tDropTarget.this.dispose();", "-\t\t\t}", "-\t\t}", "-\t};", "-\tcontrol.addListener (SWT.Dispose, controlListener);", "-\t", "-\tthis.addListener (SWT.Dispose, new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tonDispose();", "-\t\t}", "-\t});", "-\t", "-\tif (control instanceof Tree) {", "-\t\teffect = new TreeDragUnderEffect((Tree)control);", "-\t} else if (control instanceof Table) {", "-\t\teffect = new TableDragUnderEffect((Table)control);", "-\t} else {", "-\t\teffect = new NoDragUnderEffect(control);", "-\t}", "+\tsuper(control, style);"]}], "num": 52567}