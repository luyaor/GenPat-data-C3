{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8188a7b9e68945e79bb526df65c2420d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c6808104ba0f5334fdcc5991c2e4ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "59cc62059de5a7cbd294e3ea222ec6fa71e833fd", "commitAfterChange": "77a4408403daf08b0503a3ba2026817bdb0d840b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void drawRect(int id, NSRect rect)", "signatureAfterChange": "  void drawWidget (int id, NSRect rect)", "diff": ["-void drawRect(int id, NSRect rect) {", "-\tsuper.drawRect(id, rect);", "-\tif ((style & SWT.ARROW) == 0) return;", "-", "-\tNSRect frame = view.frame();", "-\tint arrowSize = Math.min((int)frame.height, (int)frame.width) / 2;", "-\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "-\tcontext.saveGraphicsState();", "-\tNSPoint p1 = new NSPoint();", "-\tp1.x = (float)Math.floor(-arrowSize / 2);", "-\tp1.y = (float)Math.floor(-arrowSize / 2);", "-\tNSPoint p2 = new NSPoint();", "-\tp2.x = (float)Math.ceil(arrowSize / 2);", "-\tp2.y = p1.y;", "-\tNSPoint p3 = new NSPoint();", "-\tp3.y = (float)Math.ceil(arrowSize / 2);", "-", "-\tNSBezierPath path = NSBezierPath.bezierPath();", "-\tpath.moveToPoint(p1);", "-\tpath.lineToPoint(p2);", "-\tpath.lineToPoint(p3);", "-\tpath.closePath();", "-", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tif ((style & SWT.LEFT) != 0) {", "-\t\ttransform.rotateByDegrees(90);", "-\t} else if ((style & SWT.UP) != 0) {", "-\t\ttransform.rotateByDegrees(180);", "-\t} else if ((style & SWT.RIGHT) != 0) {", "-\t\ttransform.rotateByDegrees(-90);", "+void drawWidget (int id, NSRect rect) {", "+\tif ((style & SWT.ARROW) != 0) {\t", "+\t\tNSRect frame = view.frame();", "+\t\tint arrowSize = Math.min((int)frame.height, (int)frame.width) / 2;", "+\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\tcontext.saveGraphicsState();", "+\t\tNSPoint p1 = new NSPoint();", "+\t\tp1.x = (float)Math.floor(-arrowSize / 2);", "+\t\tp1.y = (float)Math.floor(-arrowSize / 2);", "+\t\tNSPoint p2 = new NSPoint();", "+\t\tp2.x = (float)Math.ceil(arrowSize / 2);", "+\t\tp2.y = p1.y;", "+\t\tNSPoint p3 = new NSPoint();", "+\t\tp3.y = (float)Math.ceil(arrowSize / 2);", "+\t", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tpath.moveToPoint(p1);", "+\t\tpath.lineToPoint(p2);", "+\t\tpath.lineToPoint(p3);", "+\t\tpath.closePath();", "+\t", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tif ((style & SWT.LEFT) != 0) {", "+\t\t\ttransform.rotateByDegrees(90);", "+\t\t} else if ((style & SWT.UP) != 0) {", "+\t\t\ttransform.rotateByDegrees(180);", "+\t\t} else if ((style & SWT.RIGHT) != 0) {", "+\t\t\ttransform.rotateByDegrees(-90);", "+\t\t}", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\ttransform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(frame.width / 2, frame.height / 2);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t", "+\t\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "+\t\tcolor.set();", "+\t\tpath.fill();", "+\t\tcontext.restoreGraphicsState();", "-\tpath.transformUsingAffineTransform(transform);", "-\ttransform = NSAffineTransform.transform();", "-\ttransform.translateXBy(frame.width / 2, frame.height / 2);", "-\tpath.transformUsingAffineTransform(transform);", "-", "-\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "-\tcolor.set();", "-\tpath.fill();", "-\tcontext.restoreGraphicsState();", "+\tsuper.drawWidget (id, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8411f9117c101f103a8e29e621a846a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "7ea7044dce58068771791c523ae5bf28b951b0a6", "commitAfterChange": "216f5ab7fb691dae8d48f705c5a563bf2b62146e", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  Variant convertToJS (Object value)", "signatureAfterChange": "  Variant convertToJS (Object value)", "diff": ["+\t\t/* get IHTMLDocument2 */", "+\t\tIE browser = (IE)((Browser)getParent ().getParent ()).webBrowser;", "+\t\tOleAutomation auto = browser.auto;", "+\t\tint[] rgdispid = auto.getIDsOfNames (new String[] {\"Document\"}); //$NON-NLS-1$", "+\t\tif (rgdispid == null) return new Variant ();", "+\t\tVariant pVarResult = auto.getProperty (rgdispid[0]);", "+\t\tif (pVarResult == null) return new Variant ();", "+\t\tif (pVarResult.getType () == COM.VT_EMPTY) {", "+\t\t\tpVarResult.dispose ();", "+\t\t\treturn new Variant ();", "+\t\t}", "+\t\tOleAutomation document = pVarResult.getAutomation ();", "+\t\tpVarResult.dispose ();", "+", "+\t\t/* get IHTMLWindow2 */", "+\t\trgdispid = document.getIDsOfNames (new String[] {\"parentWindow\"}); //$NON-NLS-1$", "+\t\tif (rgdispid == null) {", "+\t\t\tdocument.dispose ();", "+\t\t\treturn new Variant ();", "+\t\t}", "+\t\tpVarResult = document.getProperty (rgdispid[0]);", "+\t\tif (pVarResult == null || pVarResult.getType () == COM.VT_EMPTY) {", "+\t\t\tif (pVarResult != null) pVarResult.dispose ();", "+\t\t\tdocument.dispose ();", "+\t\t\treturn new Variant ();\t", "+\t\t}", "+\t\tOleAutomation ihtmlWindow2 = pVarResult.getAutomation ();", "+\t\tpVarResult.dispose ();", "+\t\tdocument.dispose ();", "+", "+\t\t/* create a new JS array to be returned */", "+\t\trgdispid = ihtmlWindow2.getIDsOfNames (new String[] {\"Array\"}); //$NON-NLS-1$", "+\t\tif (rgdispid == null) {", "+\t\t\tihtmlWindow2.dispose ();", "+\t\t\treturn new Variant ();", "+\t\t}", "+\t\tVariant arrayType = ihtmlWindow2.getProperty (rgdispid[0]);", "+\t\tihtmlWindow2.dispose ();", "+\t\tIDispatch arrayTypeDispatch = arrayType.getDispatch ();", "+\t\tarrayType.dispose ();", "+", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc = arrayTypeDispatch.QueryInterface (COM.IIDIDispatchEx, result);", "+\t\tif (rc != COM.S_OK) return new Variant ();", "+\t\tIDispatchEx arrayTypeDispatchEx = new IDispatchEx (result[0]);", "+\t\tresult[0] = 0;", "+\t\tint /*long*/ resultPtr = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof);", "+\t\tDISPPARAMS params = new DISPPARAMS ();", "+\t\trc = arrayTypeDispatchEx.InvokeEx (COM.DISPID_VALUE, COM.LOCALE_USER_DEFAULT, COM.DISPATCH_CONSTRUCT, params, resultPtr, null, 0);", "+\t\tif (rc != COM.S_OK) {", "+\t\t\tOS.GlobalFree (resultPtr);", "+\t\t\treturn new Variant ();\t", "+\t\t}", "+\t\tVariant array = Variant.win32_new (resultPtr);", "+\t\tOS.GlobalFree (resultPtr);", "+", "+\t\t/* populate the array */", "-\t\tif (length > 0) {", "-\t\t\t/* get IHTMLDocument2 */", "-\t\t\tIE browser = (IE)((Browser)getParent ().getParent ()).webBrowser;", "-\t\t\tOleAutomation auto = browser.auto;", "-\t\t\tint[] rgdispid = auto.getIDsOfNames (new String[] {\"Document\"}); //$NON-NLS-1$", "-\t\t\tif (rgdispid == null) return new Variant ();", "-\t\t\tVariant pVarResult = auto.getProperty (rgdispid[0]);", "-\t\t\tif (pVarResult == null) return new Variant ();", "-\t\t\tif (pVarResult.getType () == COM.VT_EMPTY) {", "-\t\t\t\tpVarResult.dispose ();", "-\t\t\t\treturn new Variant ();", "-\t\t\t}", "-\t\t\tOleAutomation document = pVarResult.getAutomation ();", "-\t\t\tpVarResult.dispose ();", "-", "-\t\t\t/* get IHTMLWindow2 */", "-\t\t\trgdispid = document.getIDsOfNames (new String[] {\"parentWindow\"}); //$NON-NLS-1$", "-\t\t\tif (rgdispid == null) {", "-\t\t\t\tdocument.dispose ();", "-\t\t\t\treturn new Variant ();", "-\t\t\t}", "-\t\t\tpVarResult = document.getProperty (rgdispid[0]);", "-\t\t\tif (pVarResult == null || pVarResult.getType () == COM.VT_EMPTY) {", "-\t\t\t\tif (pVarResult != null) pVarResult.dispose ();", "-\t\t\t\tdocument.dispose ();", "-\t\t\t\treturn new Variant ();\t", "-\t\t\t}", "-\t\t\tOleAutomation ihtmlWindow2 = pVarResult.getAutomation ();", "-\t\t\tpVarResult.dispose ();", "-\t\t\tdocument.dispose ();", "-", "-\t\t\t/* create a new JS array to be returned */", "-\t\t\trgdispid = ihtmlWindow2.getIDsOfNames (new String[] {\"Array\"}); //$NON-NLS-1$", "-\t\t\tif (rgdispid == null) {", "-\t\t\t\tihtmlWindow2.dispose ();", "-\t\t\t\treturn new Variant ();", "-\t\t\t}", "-\t\t\tVariant arrayType = ihtmlWindow2.getProperty (rgdispid[0]);", "-\t\t\tihtmlWindow2.dispose ();", "-\t\t\tIDispatch arrayTypeDispatch = arrayType.getDispatch ();", "-\t\t\tarrayType.dispose ();", "-", "-\t\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\t\tint rc = arrayTypeDispatch.QueryInterface (COM.IIDIDispatchEx, result);", "-\t\t\tif (rc != COM.S_OK) return new Variant ();", "-\t\t\tIDispatchEx arrayTypeDispatchEx = new IDispatchEx (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tint /*long*/ resultPtr = OS.GlobalAlloc (OS.GMEM_FIXED | OS.GMEM_ZEROINIT, VARIANT.sizeof);", "-\t\t\tDISPPARAMS params = new DISPPARAMS ();", "-\t\t\trc = arrayTypeDispatchEx.InvokeEx (COM.DISPID_VALUE, COM.LOCALE_USER_DEFAULT, COM.DISPATCH_CONSTRUCT, params, resultPtr, null, 0);", "-\t\t\tif (rc != COM.S_OK) {", "-\t\t\t\tOS.GlobalFree (resultPtr);", "-\t\t\t\treturn new Variant ();\t", "-\t\t\t}", "-\t\t\tVariant array = Variant.win32_new (resultPtr);", "-\t\t\tOS.GlobalFree (resultPtr);", "-", "-\t\t\t/* populate the array */", "-\t\t\tauto = array.getAutomation ();", "-\t\t\tint[] rgdispids = auto.getIDsOfNames (new String[] {\"push\"}); //$NON-NLS-1$", "-\t\t\tif (rgdispids != null) {", "-\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\tObject currentObject = arrayValue[i];", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tVariant variant = convertToJS (currentObject);", "-\t\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "-\t\t\t\t\t\tvariant.dispose ();", "-\t\t\t\t\t} catch (SWTException e) {", "-\t\t\t\t\t\t/* invalid return value type */", "-\t\t\t\t\t\tauto.dispose ();", "-\t\t\t\t\t\tarray.dispose ();", "-\t\t\t\t\t\tthrow e;", "-\t\t\t\t\t}", "+\t\tauto = array.getAutomation ();", "+\t\tint[] rgdispids = auto.getIDsOfNames (new String[] {\"push\"}); //$NON-NLS-1$", "+\t\tif (rgdispids != null) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tObject currentObject = arrayValue[i];", "+\t\t\t\ttry {", "+\t\t\t\t\tVariant variant = convertToJS (currentObject);", "+\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "+\t\t\t\t\tvariant.dispose ();", "+\t\t\t\t} catch (SWTException e) {", "+\t\t\t\t\t/* invalid return value type */", "+\t\t\t\t\tauto.dispose ();", "+\t\t\t\t\tarray.dispose ();", "+\t\t\t\t\tthrow e;", "-\t\t\tauto.dispose ();", "-\t\t\treturn array;", "+\t\tauto.dispose ();", "+\t\treturn array;"]}], "num": 61563}