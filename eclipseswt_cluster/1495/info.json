{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f872cc5c966ed9b91c5110404c9102a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "303a494b95738371dfbbcd79ae94b379", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bf221f66369037ceea33728d5ed71d69549dd596", "commitAfterChange": "73be0ec89889e2c1322c1bfa09d83f81f689ab7f", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 263, "signatureBeforeChange": " void setCaretLocation(Point location, int direction)", "signatureAfterChange": " void setCaretLocation(Point location, int direction)", "diff": ["-\t\t\tint caretLine = content.getLineAtOffset(caretOffset);", "-\t\t\tint lineOffset = content.getOffsetAtLine(caretLine);", "-\t\t\tTextLayout layout = renderer.getTextLayout(caretLine);", "-\t\t\tint lineInParagraph = layout.getLineIndex(caretOffset - lineOffset);", "-\t\t\tcaretHeight = layout.getLineBounds(lineInParagraph).height;", "-\t\t\trenderer.disposeTextLayout(layout);", "+\t\t\tcaretHeight = getBoundsAtOffset(caretOffset).height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334f4e5c0168b85853f76dad781fa5da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "0bcce8701fee7076e5f1dd2db6410f49b6638dae", "commitAfterChange": "bd48e2b84a6482ec594a06a3c3531b924107c392", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 303, "signatureBeforeChange": "\r void wordWrapResize(int oldClientAreaWidth)", "signatureAfterChange": "\r void wordWrapResize(int oldClientAreaWidth)", "diff": ["-\tString oldCaretLine = content.getLine(caretLine);\r", "-\tString topLine = content.getLine(topIndex);\t\r", "-\tint topOffset = content.getOffsetAtLine(topIndex) + topLine.length();\r", "-\tint newTopIndex;\r", "+\tint newTopIndex;\r", "+\r", "-    // has word wrap changed on the caret line? \r", "-    if (caretLine >= content.getLineCount() || \r", "-    \tcontent.getLine(caretLine).equals(oldCaretLine) == false) {\r", "-    \t// caret may now be on a different line\r", "-\t    caretLine = content.getLineAtOffset(caretOffset);\r", "-\t    setCaretLocation();\r", "-    }    \r", "-\t// make sure top line remains the same\r", "-\t// topOffset is the end of the top line. otherwise top index would be \r", "-\t// set to the preceeding visual line if top line is wrapped (because \r", "-\t// end of preceeding line == start of next line). fixes 8503.\r", "-    newTopIndex = content.getLineAtOffset(topOffset);\r", "+    \r", "+    // adjust the top index so that top line remains the same\r", "+\tnewTopIndex = content.getLineAtOffset(topOffset);\r", "+\t// topOffset is the beginning of the top line. therefore it \r", "+\t// needs to be adjusted because in a wrapped line this is also \r", "+\t// the end of the preceeding line.  \r", "+\tif (newTopIndex < content.getLineCount() - 1 &&\r", "+\t\ttopOffset == content.getOffsetAtLine(newTopIndex + 1)) {\r", "+\t\tnewTopIndex++;\r", "+\t}\r", "+    \ttopOffset = content.getOffsetAtLine(topIndex);\r", "+  \t// caret may be on a different line after a rewrap.\r", "+  \t// call setCaretLocation after fixing vertical scroll offset.\r", "+\tsetCaretLocation();    \r"]}], "num": 1495}