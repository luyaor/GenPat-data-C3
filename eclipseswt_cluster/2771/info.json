{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0017bf46c743d98fb1f8aa1d484fc65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa153711c912785d143671588461567", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PngEncoder.java", "commitBeforeChange": "b49f46e0a414eeeb15686b31418ddb08e4b429ec", "commitAfterChange": "829b4ac95ed3d0817ef3cd99dde448234e58b644", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void writeImageData() throws IOException", "signatureAfterChange": "  void writeImageData() throws IOException", "diff": ["-\t\tos = Compatibility.newDeflaterOutputStream(baos, NO_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(NO_COMPRESSION));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_SPEED);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(BEST_SPEED));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(BEST_COMPRESSION));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, DEFAULT_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(DEFAULT_COMPRESSION));", "-\tif (os == null) os = baos; // returns null for J2ME"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d801aa52e29caa983113bfc16b5c5195", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "c29a5344dc2e0789f09ee8a74f2d57a0b6fb0279", "commitAfterChange": "90c2aa8f1a65a2906cfdc6af977ac217b3024777", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\tNMTTDISPINFO lpnmtdi = new NMTTDISPINFO ();", "+\t\t\t\tNMTTDISPINFO lpnmtdi;", "-\t\t\t\t\tOS.MoveMemoryA (lpnmtdi, lParam, NMTTDISPINFO.sizeofA);", "+\t\t\t\t\tlpnmtdi = new NMTTDISPINFOA ();", "+\t\t\t\t\tOS.MoveMemory ((NMTTDISPINFOA)lpnmtdi, lParam, NMTTDISPINFOA.sizeof);", "-\t\t\t\t\tOS.MoveMemoryW (lpnmtdi, lParam, NMTTDISPINFO.sizeofW);", "+\t\t\t\t\tlpnmtdi = new NMTTDISPINFOW ();", "+\t\t\t\t\tOS.MoveMemory ((NMTTDISPINFOW)lpnmtdi, lParam, NMTTDISPINFOW.sizeof);", "-\t\t\t\t\t\tOS.MoveMemoryA (lParam, lpnmtdi, NMTTDISPINFO.sizeofA);", "+\t\t\t\t\t\tOS.MoveMemory (lParam, (NMTTDISPINFOA)lpnmtdi, NMTTDISPINFOA.sizeof);", "-\t\t\t\t\t\tOS.MoveMemoryW (lParam, lpnmtdi, NMTTDISPINFO.sizeofW);", "+\t\t\t\t\t\tOS.MoveMemory (lParam, (NMTTDISPINFOW)lpnmtdi, NMTTDISPINFOW.sizeof);"]}], "num": 2771}