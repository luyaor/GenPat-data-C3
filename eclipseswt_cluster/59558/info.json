{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1be09af7f481dc3a80a7f6731cfb90a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8959b2e2f0ab00a5119fce3b34e15323", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "02c7e8fbdb10b222f8d1e2635055c3a06dfd6bce", "commitAfterChange": "7ebed4b25c577490446ba68dfccd18feab0eef8f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t", "-\t\t/* Get the damage */", "-\t\tint [] lpRgnData = null;", "-\t\tboolean isComplex = false;", "-\t\tboolean exposeRegion = false;", "-\t\tint rgn = 0;", "-\t\tif ((style & (SWT.NO_MERGE_PAINTS | SWT.DOUBLE_BUFFERED)) != 0) {", "-\t\t\trgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\t\tisComplex = OS.GetUpdateRgn (handle, rgn, false) == OS.COMPLEXREGION;", "-\t\t}", "-", "-\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\t\tif (isComplex) {", "-\t\t\t\tint nBytes = OS.GetRegionData (rgn, 0, null);", "-\t\t\t\tlpRgnData = new int [nBytes / 4];", "-\t\t\t\texposeRegion = OS.GetRegionData (rgn, nBytes, lpRgnData) != 0;", "-\t\t\t}", "-\t\t}", "-\t", "+", "+\t\t/* Get the system region for the paint HDC */", "+\t\tint sysRgn = 0;", "+\t\tif ((style & (SWT.NO_MERGE_PAINTS | SWT.DOUBLE_BUFFERED)) != 0) {", "+\t\t\tsysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tif (OS.GetRandomRgn (gc.handle, sysRgn, OS.SYSRGN) == 1) {", "+\t\t\t\tif (OS.IsWinNT) {", "+\t\t\t\t\tPOINT pt = new POINT();", "+\t\t\t\t\tOS.MapWindowPoints (0, handle, pt, 1);", "+\t\t\t\t\tOS.OffsetRgn (sysRgn, pt.x, pt.y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-\t\t\t\tOS.OffsetRgn (rgn, -ps.left, -ps.top);", "-\t\t\t\tOS.SelectClipRgn (gc.handle, rgn);", "-\t\t\t\tOS.SetMetaRgn (gc.handle);", "+\t\t\t\tOS.OffsetRgn (sysRgn, -ps.left, -ps.top);", "+\t\t\t\tOS.SelectClipRgn (gc.handle, sysRgn);", "+\t\t\t\tOS.OffsetRgn (sysRgn, ps.left, ps.top);", "+\t\t\t\tOS.SetMetaRgn (gc.handle);\t", "-\t\t\tevent.gc = gc;", "-\t\t\tif (isComplex && exposeRegion) {", "-\t\t\t\tRECT rect = new RECT ();", "+\t\t\tevent.gc = gc;\t\t\t", "+\t\t\tRECT rect = null;", "+\t\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0 && OS.GetRgnBox (sysRgn, rect = new RECT ()) == OS.COMPLEXREGION) {", "+\t\t\t\tint nBytes = OS.GetRegionData (sysRgn, 0, null);", "+\t\t\t\tint [] lpRgnData = new int [nBytes / 4];", "+\t\t\t\tOS.GetRegionData (sysRgn, nBytes, lpRgnData);", "-\t\t\t\t\tOS.SetRect (rect,", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2)],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t\t\t\tint offset = 8 + (i << 2);", "+\t\t\t\t\tOS.SetRect (rect, lpRgnData [offset], lpRgnData [offset + 1], lpRgnData [offset + 2], lpRgnData [offset + 3]);", "-\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tif (rect == null) rect = new RECT ();", "-\t\t\t\t\tpaintGC.drawImage(image, ps.left, ps.top);", "+\t\t\t\t\tpaintGC.drawImage (image, ps.left, ps.top);", "-\t\t\t\timage.dispose();", "+\t\t\t\timage.dispose ();", "-\t\tif (rgn != 0) OS.DeleteObject (rgn);", "+\t\tif (sysRgn != 0) OS.DeleteObject (sysRgn);", "-\tif (!OS.IsWinCE) { ", "+\tif (!OS.IsWinCE && !isDisposed ()) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3296da1c2893ee640ec171246a0369", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OpenGL/carbon/org/eclipse/swt/opengl/GLCanvas.java", "commitBeforeChange": "c22459984b634ac2fa9062cf3800f00b6f368d23", "commitAfterChange": "2f936f69312a9448a129e0fd5972442e772bfaf7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void fixBounds ()", "signatureAfterChange": "  void fixBounds ()", "diff": ["-\tGCData data = new GCData ();", "-\tint gc = internal_new_GC (data);", "-\tOS.GetRegionBounds (data.visibleRgn, bounds);", "+\tOS.GetControlBounds (handle, bounds);", "+\tint window = OS.GetControlOwner (handle);", "+\tif (OS.HIVIEW) {", "+\t\tint [] contentView = new int [1];", "+\t\tOS.HIViewFindByID (OS.HIViewGetRoot (window), OS.kHIViewWindowContentID (), contentView);", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, OS.HIViewGetSuperview (handle), contentView [0]);", "+\t\tbounds.left += (int) pt.x;", "+\t\tbounds.top += (int) pt.y;", "+\t\tbounds.right += (int) pt.x;", "+\t\tbounds.bottom += (int) pt.y;", "+\t}", "+\tint x = bounds.left;", "+\tint y = bounds.top;", "-\tRect rect = new Rect ();", "-\tint window = OS.GetControlOwner (handle);", "-\tOS.GetPortBounds (port, rect);", "+\tOS.GetPortBounds (port, bounds);", "-\tglbounds[0] = bounds.left;", "-\tglbounds[1] = rect.bottom - rect.top - bounds.top - height;", "+\tglbounds[0] = x;", "+\tglbounds[1] = bounds.bottom - bounds.top - y - height;", "+\tGCData data = new GCData ();", "+\tint gc = internal_new_GC (data);", "-\tAGL.aglUpdateContext (context);", "+\tAGL.aglEnable (context, AGL.AGL_CLIP_REGION);"]}], "num": 59558}