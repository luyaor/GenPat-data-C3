{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "787eb07df1ae8d77c34ae2c2bb2646da", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0673c66c8509ca20a2437461acb7c54e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  void decidePolicyForMIMEType(int type, int request, int frame, int listener)", "signatureAfterChange": "  void webView_decidePolicyForMIMEType_request_frame_decisionListener(int sender, int type, int request, int frame, int listenerID)", "diff": ["-void decidePolicyForMIMEType(int type, int request, int frame, int listener) {", "-\tboolean canShow = Cocoa.objc_msgSend(Cocoa.C_WebView, Cocoa.S_canShowMIMEType, type) != 0;", "-\tCocoa.objc_msgSend(listener, canShow ? Cocoa.S_use : Cocoa.S_download);", "+void webView_decidePolicyForMIMEType_request_frame_decisionListener(int sender, int type, int request, int frame, int listenerID) {", "+\tboolean canShow = WebView.canShowMIMEType(new NSString(type));", "+\tWebPolicyDecisionListener listener = new WebPolicyDecisionListener(listenerID);", "+\tif (canShow) {", "+\t\tlistener.use();", "+\t} else {", "+\t\tlistener.download();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e15764efdb5351d6622ab3533e81491", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "  void decidePolicyForNewWindowAction(int actionInformation, int request, int frameName, int listener)", "signatureAfterChange": "  void webView_decidePolicyForNewWindowAction_request_newFrameName_decisionListener(int sender, int actionInformation, int request, int frameName, int listenerID)", "diff": ["-void decidePolicyForNewWindowAction(int actionInformation, int request, int frameName, int listener) {", "-\tCocoa.objc_msgSend(listener, Cocoa.S_use);", "+void webView_decidePolicyForNewWindowAction_request_newFrameName_decisionListener(int sender, int actionInformation, int request, int frameName, int listenerID) {", "+\tWebPolicyDecisionListener listener = new WebPolicyDecisionListener(listenerID);", "+\tlistener.use();"]}], "num": 47296}