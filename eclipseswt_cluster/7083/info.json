{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbbf280dcaaad334e574afdcc4da2a67", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab626e81eb241d195b08a838d47683c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6ef57fc0e6f6427596d6abd342b6a7b03248370d", "commitAfterChange": "9cf20db2863a33762a4a7c547242d28c6ec2ffdf", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "signatureAfterChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "diff": ["+\tint newCaretOffset;\r", "+\tint newCaretLine;\r", "-\tif (line == 0 || (isSingleLine() == false && line > 0)) {\r", "-\t\tint newCaretOffset = getOffsetAtMouseLocation(x, line);\r", "-\t\t\r", "+\tif (line < 0 || (isSingleLine() && line > 0)) {\r", "+\t\treturn;\r", "+\t}\r", "+\tif (isBidi()) {\r", "+\t\tnewCaretOffset = getBidiOffsetAtMouseLocation(x, line);\t\r", "+\t}\r", "+\telse {\r", "+\t\tnewCaretOffset = getOffsetAtMouseLocation(x, line);\r", "+\t}\r", "+\tif (mouseDoubleClick) {\r", "+\t\t// double click word select the previous/next word. fixes bug 15610\r", "+\t\tnewCaretOffset = doMouseWordSelect(x, newCaretOffset, line);\r", "+\t}\r", "+\tnewCaretLine = content.getLineAtOffset(newCaretOffset);\r", "+\tif (x >= 0 || \r", "+\t\tnewCaretLine != content.getLineAtOffset(caretOffset)) {\r", "+\t\t// Only change the caret offset when the mouse is within \r", "+\t\t// the left client area border or on a different line. \r", "+\t\t// Otherwise the autoscroll selection may be reset. \r", "+\t\t// Fixes 1GKM3XS\r", "-\t\t\tcaretLine = line;\r", "+\t\t\tcaretLine = newCaretLine;\r", "-\t\t\tsetCaretLocation();\r", "+\t\t\tshowCaret();\r", "-\t\tif (select == false) {\r", "-\t\t\tclearSelection(true);\r", "-\t\t}\r", "+\t}\r", "+\tif (select == false) {\r", "+\t\tclearSelection(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88251c117095052edb965f0f77434e98", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 75, "signatureBeforeChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "signatureAfterChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "diff": ["-\tint line = (y + verticalScrollOffset) / getLineHeight();\r", "+\tif (isBidi()) {\r", "+\t\tdoBidiMouseLocationChange(x, y, select);\r", "+\t\treturn;\r", "+\t}\r", "+\tint line = (y + verticalScrollOffset) / lineHeight;\r", "-\t\tint offsetInLine = -1;\r", "-\t\tint newCaretOffset;\r", "+\t\tint offsetInLine = getCaretOffsetAtX(lineText, lineOffset, x);\r", "+\t\tint newCaretOffset = lineOffset + offsetInLine;\r", "-\t\tif (select && selectionAnchor == lineOffset && line < lineCount - 1) {\r", "-\t\t\tGC gc = new GC(this);\t\t\r", "-\t\t\tint lineLength = lineText.length();\r", "-\t\t\t// represent the line break as one additional white space\r", "-\t\t\t// if the selection mouse event occurs beyond the line end\r", "-\t\t\tif (x + horizontalScrollOffset > textWidth(lineText, line, lineLength, gc)) {\r", "-\t\t\t\tline++;\r", "-\t\t\t\toffsetInLine = 0;\r", "-\t\t\t\tlineOffset = content.getOffsetAtLine(line);\r", "-\t\t\t}\r", "-\t\t\tgc.dispose();\r", "-\t\t}\r", "-\t\tif (offsetInLine == -1) {\r", "-\t\t\toffsetInLine = getOffsetAtX(lineText, lineOffset, x);\r", "-\t\t}\r", "-\t\tnewCaretOffset = lineOffset + offsetInLine;\r", "-\t\t\tshowCaret();\r", "+\t\t\tsetCaretLocation();\r"]}], "num": 7083}