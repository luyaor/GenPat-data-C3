{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b4fce82de2531769bb8b27b61755daa", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02ac1c12eec4120ffe44616dbf2a7e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f387cedab0a11fb8c290dcad92bd0503c5f0facb", "commitAfterChange": "41b69c14dce23c701db1a7f29e7a144c701cde03", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t} else {", "-\t\t/*", "-\t\t* Feature in GTK. When the list is empty and the first item", "-\t\t* is added, the combo box selects that item replacing the", "-\t\t* text in the entry field.  The fix is to avoid this by", "-\t\t* stopping the \"delete\" and \"insert_text\" signal emission. ", "-\t\t*/", "-\t\tignoreSelect = lockText = true;", "-\t\tint /*long*/ item = OS.gtk_list_item_new_with_label (buffer);", "-\t\tint /*long*/ label = OS.gtk_bin_get_child (item); ", "-\t\tsetForegroundColor (label, getForegroundColor ());", "-\t\tOS.gtk_widget_modify_font (label, getFontDescription ());", "-\t\tOS.gtk_widget_set_direction (label, OS.gtk_widget_get_direction (handle));", "-\t\tOS.gtk_widget_show (item);", "-\t\tint /*long*/ items = OS.g_list_append (0, item);", "-\t\tOS.gtk_list_insert_items (listHandle, items, index);", "-\t\tignoreSelect = lockText = false;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee6c65181e16f576e699934d6759abca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "108b9dd38cc7c1124205fb1899f8aad5ad317989", "commitAfterChange": "5014eebfedd0f623cdc5c8c21ddc6fda2b771129", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  int gtk_changed (int widget)", "signatureAfterChange": "  int gtk_changed (int widget)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t\tif (widget == handle) {", "-\t\t\tif (entryHandle == 0) {", "-\t\t\t\tsendEvent(SWT.Modify);", "-\t\t\t\tif (isDisposed ()) return 0;", "-\t\t\t}", "-\t\t\t/*", "-\t\t\t* Feature in GTK.  GTK emits a changed signal whenever", "-\t\t\t* the contents of a combo box are altered by typing or", "-\t\t\t* by selecting an item in the list, but the event should", "-\t\t\t* only be sent when the list is selected. The fix is to", "-\t\t\t* only send out a selection event when there is a selected", "-\t\t\t* item. ", "-\t\t\t* ", "-\t\t\t* NOTE: This code relies on GTK clearing the selected", "-\t\t\t* item and not matching the item as the user types.", "-\t\t\t*/", "-\t\t\tint index = OS.gtk_combo_box_get_active (handle);", "-\t\t\tif (index != -1) sendSelectionEvent (SWT.Selection);", "-\t\t\tindexSelected = -1;", "-\t\t\treturn 0;", "+\tif (widget == handle) {", "+\t\tif (entryHandle == 0) {", "+\t\t\tsendEvent(SWT.Modify);", "+\t\t\tif (isDisposed ()) return 0;", "-\t} else {", "-\t\tif (!ignoreSelect) {", "-\t\t\tint /*long*/ ptr = OS.gtk_entry_get_text (entryHandle);", "-\t\t\tint length = OS.strlen (ptr);", "-\t\t\tbyte [] buffer = new byte [length];", "-\t\t\tOS.memmove (buffer, ptr, length);", "-\t\t\tString text = new String (Converter.mbcsToWcs (null, buffer));", "-\t\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\t\tif (items [i].equals (text)) {", "-\t\t\t\t\tsendSelectionEvent (SWT.Selection);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\t/*", "+\t\t* Feature in GTK.  GTK emits a changed signal whenever", "+\t\t* the contents of a combo box are altered by typing or", "+\t\t* by selecting an item in the list, but the event should", "+\t\t* only be sent when the list is selected. The fix is to", "+\t\t* only send out a selection event when there is a selected", "+\t\t* item. ", "+\t\t* ", "+\t\t* NOTE: This code relies on GTK clearing the selected", "+\t\t* item and not matching the item as the user types.", "+\t\t*/", "+\t\tint index = OS.gtk_combo_box_get_active (handle);", "+\t\tif (index != -1) sendSelectionEvent (SWT.Selection);", "+\t\tindexSelected = -1;", "+\t\treturn 0;"]}], "num": 44344}