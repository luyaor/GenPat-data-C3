{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2728015fd4a09151813ba862175efcf7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6cb0efbef902bd6782a95792524865d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "ca45fe430ed44fea42c49b26ae3ce2c4c2ad8354", "commitAfterChange": "e8c8fc165f050f47ac2b161e31aa754f630d6915", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int widgetStyle ()", "signatureAfterChange": "  int widgetStyle ()", "diff": ["-\tif ((style & SWT.RIGHT) != 0) bits |= OS.TBSTYLE_LIST;", "+\t/*", "+\t* Feature in Windows.  When a tool bar has the style", "+\t* TBSTYLE_LIST and has a drop down item, Window leaves", "+\t* too much padding around the button.  This affects", "+\t* every button in the tool bar and makes the preferred", "+\t* height too big.  The fix is to set the TBSTYLE_LIST", "+\t* when the tool bar contains both text and images.", "+\t* ", "+\t* NOTE: Tool bars with CCS_VERT must have TBSTYLE_LIST", "+\t* set before any item is added or the tool bar does", "+\t* not lay out properly.  The work around does not run", "+\t* in this case.", "+\t*/", "+\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\tif ((style & SWT.RIGHT) != 0) bits |= OS.TBSTYLE_LIST;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1dd1052bed1402e1d377f8eb448584", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "1a635cd453498e0bde182d23d234c150cf7c3b49", "commitAfterChange": "667736f9e031edca5f82dab923bf555505ef670d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["-\t\t\tint hwnd = parent.handle;", "-\t\t\tparent.forceResize ();", "-\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\tOS.GetClientRect (hwnd, rect);", "-\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\t\t\trect.left = headerRect.left;", "-\t\t\trect.right = headerRect.right;", "-\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\tint hwnd = parent.handle;", "+\t\t\t\tparent.forceResize ();", "+\t\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwnd, rect);", "+\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "+\t\t\t\trect.left = headerRect.left;", "+\t\t\t\trect.right = headerRect.right;", "+\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017663a2ca999fa3de70bdd9d346095e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "6098d8fe89a4e89a038cacb6e75bf5bb8c188a13", "commitAfterChange": "77759d3ca4f6dce1af6dfc45d9d6664c9ae312fc", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void setExpanded (boolean value)", "signatureAfterChange": " public void setExpanded (boolean value)", "diff": ["-\t\tparent.update ();", "-\t\tGC gc = new GC (parent);", "-\t\tgc.copyArea (0, startY, clientArea.width, clientArea.height - startY, 0, y);", "-\t\tgc.dispose ();", "-\t\tint redrawY = clientArea.height - startY + y;", "-\t\tparent.redraw (0, redrawY, clientArea.width, clientArea.height - redrawY, false);", "+\t\tif (y < clientArea.height && 0 < startY) {\t/* determine whether any some visual update is actually needed */", "+\t\t\tparent.update ();", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.copyArea (0, startY, clientArea.width, clientArea.height - startY, 0, y);", "+\t\t\tgc.dispose ();", "+\t\t\tint redrawY = clientArea.height - startY + y;", "+\t\t\tparent.redraw (0, redrawY, clientArea.width, clientArea.height - redrawY, false);", "+\t\t}", "+\t\t/* ", "+\t\t * If all collapsed items are above the viewport then adjust topIndex and", "+\t\t * the vertical scrollbar so that the current viewport items will not change.", "+\t\t */", "+\t\tint bottomIndex = availableIndex + descendents.length - 1;", "+\t\tif (bottomIndex < parent.topIndex) {", "+\t\t\tparent.topIndex = parent.topIndex - descendents.length + 1;", "+\t\t\tparent.getVerticalBar ().setSelection (parent.topIndex);", "+\t\t}", "+\t\t", "-\t\tint oldTopIndex = parent.topIndex;", "-\t\t} else {", "-\t\t\t/* ", "-\t\t\t * If all collapsed items are above the viewport then adjust topIndex and", "-\t\t\t * the vertical scrollbar so that the current viewport items will not change.", "-\t\t\t */", "-\t\t\tint bottomIndex = availableIndex + descendents.length - 1;", "-\t\t\tif (bottomIndex < parent.topIndex) {", "-\t\t\t\tparent.topIndex = oldTopIndex - descendents.length + 1;", "-\t\t\t\tparent.getVerticalBar ().setSelection (parent.topIndex);", "-\t\t\t\treturn;", "-\t\t\t}"]}], "num": 50558}