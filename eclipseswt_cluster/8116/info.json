{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76ab83a7c4b55bfbbb12b47fa8d68ef1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db6dd837b0fcb5dc32d2534cbbb20f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Scale.java", "commitBeforeChange": "6064bf54f9c02b013a6336de92e98261a6d27bb2", "commitAfterChange": "ab7a1436e4ef701e89dc80eaedb4dc69f6c11fec", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tNSSize size = widget.cell().cellSizeForBounds(widget.bounds());", "+\tfloat /*double*/ thickness = widget.knobThickness();", "-\t\theight = (int)Math.ceil(size.height);", "+\t\theight = (int)Math.ceil(thickness);", "-\t\twidth = (int)Math.ceil(size.width);", "+\t\twidth = (int)Math.ceil(thickness);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016d8659ceca4ba9a08966746cbd29bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-void hookEvents () {", "-\tsuper.hookEvents ();", "-\tif ((style & SWT.SEPARATOR) != 0) return;", "-\tDisplay display = getDisplay ();", "-\tint windowProc2 = display.windowProc2;", "-\tint windowProc3 = display.windowProc3;", "-\tOS.g_signal_connect (handle, OS.clicked, windowProc2, SWT.Selection);", "-\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, SWT.MouseEnter);", "-\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, SWT.MouseExit);", "-", "-\t/*", "-\t * Feature in GTK.", "-\t * Usually, GTK widgets propagate all events to their parent when they", "-\t * are done their own processing.  However, in contrast to other widgets,", "-\t * the buttons that make up the tool items, do not propagate the mouse", "-\t * up/down events.", "-\t * (It is interesting to note that they DO propagate mouse motion events.)", "-\t */", "-\tint mask =", "-\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "-\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "-\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "-\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "-\t\tOS.GDK_FOCUS_CHANGE_MASK;", "-\tOS.gtk_widget_add_events (handle, mask);", "-\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-}", "+", "+void hookEvents () {", "+\tsuper.hookEvents ();", "+\tif ((style & SWT.SEPARATOR) != 0) return;", "+\tDisplay display = getDisplay ();", "+\tint windowProc2 = display.windowProc2;", "+\tint windowProc3 = display.windowProc3;", "+\tOS.g_signal_connect (handle, OS.clicked, windowProc2, CLICKED);", "+\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+", "+\t/*", "+\t * Feature in GTK.", "+\t * Usually, GTK widgets propagate all events to their parent when they", "+\t * are done their own processing.  However, in contrast to other widgets,", "+\t * the buttons that make up the tool items, do not propagate the mouse", "+\t * up/down events.", "+\t * (It is interesting to note that they DO propagate mouse motion events.)", "+\t */", "+\tint mask =", "+\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "+\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "+\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "+\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "+\t\tOS.GDK_FOCUS_CHANGE_MASK;", "+\tOS.gtk_widget_add_events (handle, mask);", "+\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+}"]}], "num": 8116}