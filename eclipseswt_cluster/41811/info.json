{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f34b630ec6ac97ca2b5d84ad871db1ce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb80cba31450cdfcf66d4a694e78e2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Transform.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void invert()", "signatureAfterChange": " public void invert()", "diff": ["-\tNSAffineTransformStruct struct = handle.transformStruct();", "-\tif ((struct.m11 * struct.m22 - struct.m12 * struct.m21) == 0) {", "-\t\tSWT.error(SWT.ERROR_CANNOT_INVERT_MATRIX);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSAffineTransformStruct struct = handle.transformStruct();", "+\t\tif ((struct.m11 * struct.m22 - struct.m12 * struct.m21) == 0) {", "+\t\t\tSWT.error(SWT.ERROR_CANNOT_INVERT_MATRIX);", "+\t\t}", "+\t\thandle.invert();", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\thandle.invert();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a2632841c4e11810e1d766c82e5c08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void internal_dispose_GC (int context, GCData data)", "signatureAfterChange": " public void internal_dispose_GC (int context, GCData data)", "diff": ["-\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "-\tdata.bitmapDataAddress = 0;", "-//\thandle.setCacheMode(OS.NSImageCacheDefault);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "+\t\tdata.bitmapDataAddress = 0;", "+//\t\thandle.setCacheMode(OS.NSImageCacheDefault);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}], "num": 41811}