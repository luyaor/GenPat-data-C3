{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4da549052e1de3df9a2120b63104ea2e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dea28d3317b09f71b0f7b8d122376f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "3b81d72682a33b10172bb53703a33aa758018789", "commitAfterChange": "6649e3dc373e7f396e6d4c694b6592b898c56422", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 159, "signatureBeforeChange": " public int[] getBlockSelectionRanges()", "signatureAfterChange": " public int[] getSelectionRanges()", "diff": ["- */", "-public int[] getBlockSelectionRanges() {", "-\tcheckWidget();", "-\tif (blockSelection && blockXLocation != -1) {", "-\t\tint firstLine = getLineIndex(blockYAnchor - getVerticalScrollOffset());", "-\t\tint lastLine = getLineIndex(blockYLocation - getVerticalScrollOffset()); ", "-\t\tif (firstLine > lastLine) {", "-\t\t\tint temp = firstLine;", "-\t\t\tfirstLine = lastLine;", "-\t\t\tlastLine = temp;", "-\t\t}", "-\t\tint left = blockXAnchor;", "-\t\tint right = blockXLocation;", "-\t\tif (left > right) {", "-\t\t\tleft = blockXLocation;", "-\t\t\tright = blockXAnchor;", "-\t\t}", "-\t\tint[] ranges = new int[(lastLine - firstLine + 1) * 2];", "-\t\tint index = 0;", "-\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "-\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "-\t\t\tranges[index++] = start;", "-\t\t\tranges[index++] = getOffsetAtPoint(right, 0, lineIndex) - start;", "-\t\t}", "-\t\treturn ranges;", "-\t}", "-\treturn new int[] {selection.x, selection.y - selection.x};", "-}", "+ */", "+public int[] getSelectionRanges() {", "+\tcheckWidget();", "+\tif (blockSelection && blockXLocation != -1) {", "+\t\tint firstLine = getLineIndex(blockYAnchor - getVerticalScrollOffset());", "+\t\tint lastLine = getLineIndex(blockYLocation - getVerticalScrollOffset()); ", "+\t\tif (firstLine > lastLine) {", "+\t\t\tint temp = firstLine;", "+\t\t\tfirstLine = lastLine;", "+\t\t\tlastLine = temp;", "+\t\t}", "+\t\tint left = blockXAnchor;", "+\t\tint right = blockXLocation;", "+\t\tif (left > right) {", "+\t\t\tleft = blockXLocation;", "+\t\t\tright = blockXAnchor;", "+\t\t}", "+\t\tint[] ranges = new int[(lastLine - firstLine + 1) * 2];", "+\t\tint index = 0;", "+\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "+\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "+\t\t\tranges[index++] = start;", "+\t\t\tranges[index++] = getOffsetAtPoint(right, 0, lineIndex) - start;", "+\t\t}", "+\t\treturn ranges;", "+\t}", "+\treturn new int[] {selection.x, selection.y - selection.x};", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c6bf88f0ca5530a3d29130734a2256", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "4e2aa03a056cdb0b186f24b54b9a9e25d8e80922", "commitAfterChange": "8f74400627fe378267067a48a1bbad7ee433b09b", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void copy(int clipboardType)", "signatureAfterChange": " public void copy(int clipboardType)", "diff": ["+\tif (blockSelection && blockXLocation != -1) {", "+\t\tint firstLine = getLineIndex(blockYAnchor - getVerticalScrollOffset());", "+\t\tint lastLine = getLineIndex(blockYLocation - getVerticalScrollOffset()); ", "+\t\tif (firstLine > lastLine) {", "+\t\t\tint temp = firstLine;", "+\t\t\tfirstLine = lastLine;", "+\t\t\tlastLine = temp;", "+\t\t}", "+\t\tint left = blockXAnchor;", "+\t\tint right = blockXLocation;", "+\t\tif (left > right) {", "+\t\t\tleft = blockXLocation;", "+\t\t\tright = blockXAnchor;", "+\t\t}", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tString lineDelimiter = PlatformLineDelimiter;", "+\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "+\t\t\t//TODO BAD DOESN'T HANDLE BIDI", "+\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "+\t\t\tint end = getOffsetAtPoint(right, 0, lineIndex);", "+\t\t\tString text = content.getTextRange(start, end - start);", "+\t\t\tbuffer.append(text);", "+\t\t\tif (lineIndex < lastLine) buffer.append(lineDelimiter); ", "+\t\t}", "+\t\tif (buffer.length() > 0) {", "+\t\t\t//TODO RTF support - refactor Writers", "+\t\t\tTextTransfer plainTextTransfer = TextTransfer.getInstance();", "+//\t\t\tTextWriter plainTextWriter = new TextWriter(start, length);", "+//\t\t\tString plainText = getPlatformDelimitedText(plainTextWriter);", "+\t\t\tString plainText = buffer.toString();", "+\t\t\tObject[] data = new Object[]{plainText};", "+\t\t\tTransfer[] types = new Transfer[]{plainTextTransfer};", "+\t\t\tclipboard.setContents(data, types, clipboardType);", "+\t\t}", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "625f92edc99bc42dfa8c84a3c9d16c67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "52308c904cf8c22877dc33c521ff2edbe6099dca", "commitAfterChange": "22031a45aee5d018b4a761000d1a188a7e2b6848", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void copy(int clipboardType)", "signatureAfterChange": " public void copy(int clipboardType)", "diff": ["-\tif (clipboardType != DND.CLIPBOARD && clipboardType != DND.SELECTION_CLIPBOARD) return;", "-\tif (blockSelection && blockXLocation != -1) {", "-\t\tRectangle rect = getBlockSelectonPosition();", "-\t\tint firstLine = rect.y;", "-\t\tint lastLine = rect.height;", "-\t\tint left = rect.x;", "-\t\tint right = rect.width;", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tString lineDelimiter = PlatformLineDelimiter;", "-\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "-\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "-\t\t\tint end = getOffsetAtPoint(right, 0, lineIndex);", "-\t\t\tString text = content.getTextRange(start, end - start);", "-\t\t\tbuffer.append(text);", "-\t\t\tif (lineIndex < lastLine) buffer.append(lineDelimiter); ", "-\t\t}", "-\t\tif (buffer.length() > 0) {", "-\t\t\t//TODO RTF support - refactor Writers", "-\t\t\tTextTransfer plainTextTransfer = TextTransfer.getInstance();", "-//\t\t\tTextWriter plainTextWriter = new TextWriter(start, length);", "-//\t\t\tString plainText = getPlatformDelimitedText(plainTextWriter);", "-\t\t\tString plainText = buffer.toString();", "-\t\t\tObject[] data = new Object[]{plainText};", "-\t\t\tTransfer[] types = new Transfer[]{plainTextTransfer};", "-\t\t\tclipboard.setContents(data, types, clipboardType);", "-\t\t}", "-\t\treturn;", "-\t}", "-\tint length = selection.y - selection.x;", "-\tif (length > 0) {", "-\t\ttry {", "-\t\t\tsetClipboardContent(selection.x, length, clipboardType);", "-\t\t} catch (SWTError error) {", "-\t\t\t// Copy to clipboard failed. This happens when another application ", "-\t\t\t// is accessing the clipboard while we copy. Ignore the error.", "-\t\t\t// Fixes 1GDQAVN", "-\t\t\t// Rethrow all other errors. Fixes bug 17578.", "-\t\t\tif (error.code != DND.ERROR_CANNOT_SET_CLIPBOARD) {", "-\t\t\t\tthrow error;", "+\tcopySelection(clipboardType);", "+}"]}], "num": 54813}