{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "883e9875dac8c80e306a10002f30d9f1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226eae5929f0cc044f44106f61a50938", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void removeAll()", "signatureAfterChange": " public void removeAll()", "diff": ["+}", "-\tsetRedraw(false);", "-\tgetRoot().dispose();", "-\tresetRoot();", "-\treset();", "-\tcalculateWidestShowingItem();", "-\tcalculateVerticalScrollbar();", "-\tsetRedraw(true);\t", "+\tsetFocusItem (null, false);", "+\tTreeItem[] items = this.items;", "+\tthis.items = new TreeItem[0];", "+\tselectedItems = new TreeItem[0];", "+\tavailableItems = new TreeItem[0];", "+\tanchorItem = insertMarkItem = lastClickedItem = null;", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems[i].dispose(false);", "+\t}", "+\tgetVerticalBar().setMaximum(1);", "+\tgetHorizontalBar().setMaximum(1);", "+\tredraw();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda9f75c58bdc1935dab70accf41dcc9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "5c68959aa3c8a158b8d1cbe561a922a0aad1ca99", "commitAfterChange": "5580062089dcce6f11ce3077ccd977251c018cf2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void columnRemoved (TreeColumn column, int index)", "signatureAfterChange": " void columnRemoved (TreeColumn column, int index)", "diff": ["-\tif (columnCount == 0) return;\t/* reverts to normal tree when last column disposed */", "+\tif (columnCount == 0) {", "+\t\t/* reverts to normal tree when last column disposed */", "+\t\tcellBackgrounds = cellForegrounds = null;", "+\t\tboolean recomputeTextWidths = cellFonts != null;", "+\t\tcellFonts = null;", "+\t\tif (recomputeTextWidths) {", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.setFont (getFont ());", "+\t\t\trecomputeTextWidths (gc);", "+\t\t\tgc.dispose ();", "+\t\t}", "+\t\t/* notify all child items as well */", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\titems[i].columnRemoved (column, index);", "+\t\t}", "+\t\treturn;", "+\t}"]}], "num": 55117}