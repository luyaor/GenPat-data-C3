{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5af6ab916d57dd570624d444f0a8d942", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8ec7afa3e9317d77a305f4c1a2b167", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void open()", "signatureAfterChange": " \t \tpublic void open()", "diff": ["-", "-\t\tshell.setLayout(new GridLayout(1, false));", "+\t\tshell.setLayout(new GridLayout(2, false));", "-\t\tnodesColumn.setWidth(300);", "+\t\tString[] extraAttributes = gen.getExtraAttributes();", "+\t\tfor (int i = 0; i < extraAttributes.length; i++) {", "+\t\t\tTreeColumn column = new TreeColumn(nodesTree, SWT.NONE);", "+\t\t\tcolumn.setText(extraAttributes[i]);", "+\t\t}", "+\t\t", "+\t\tnodesTree.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tif (event.detail != SWT.CHECK) return;", "+\t\t\t\tTreeItem item = (TreeItem)event.item;", "+\t\t\t\tif (item == null) return;", "+\t\t\t\tboolean checked = item.getChecked();", "+                checkItems(item, checked);", "+                checkPath(item.getParentItem(), checked, false);", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tnodesTree.addListener(SWT.MouseDown, new Listener() {", "+\t\t\tpublic void handleEvent(final Event e) {", "+\t\t\t\te.display.asyncExec (new Runnable () {", "+\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\tif (nodesTree.isDisposed ()) return;", "+\t\t\t\t\t\tif (e.button != 1) return;", "+\t\t\t\t\t\tPoint pt = new Point(e.x, e.y);", "+\t\t\t\t\t\tTreeItem item = nodesTree.getItem(pt);", "+\t\t\t\t\t\tif (item == null) return;", "+\t\t\t\t\t\tint column = -1;", "+\t\t\t\t\t\tfor (int i = 0; i < nodesTree.getColumnCount(); i++) {", "+\t\t\t\t\t\t\tif (item.getBounds(i).contains(pt)) {", "+\t\t\t\t\t\t\t\tcolumn = i;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (column == -1) return;", "+\t\t\t\t\t\tif (!nodesTree.getColumn(column).getText().startsWith(\"swt_\")) return;", "+\t\t\t\t\t\tfinal TreeEditor editor = new TreeEditor(nodesTree);", "+\t\t\t\t\t\teditor.grabHorizontal = true;", "+\t\t\t\t\t\tfinal Text editorTx = new Text(nodesTree, SWT.SINGLE);", "+\t\t\t\t\t\tListener memberTextListener = new Listener() {", "+\t\t\t\t\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\t\t\t\t\tif (e.type == SWT.Traverse) {", "+\t\t\t\t\t\t\t\t\tswitch (e.detail) {", "+\t\t\t\t\t\t\t\t\t\tcase SWT.TRAVERSE_ESCAPE:", "+\t\t\t\t\t\t\t\t\t\t\teditor.setItem(null);", "+\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\teditorTx.setVisible(false);", "+\t\t\t\t\t\t\t\tTreeItem item = editor.getItem();", "+\t\t\t\t\t\t\t\tif (item == null) return;", "+\t\t\t\t\t\t\t\tint column = editor.getColumn();", "+\t\t\t\t\t\t\t\titem.setText(column, editorTx.getText());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t};", "+\t\t\t\t\t\teditorTx.addListener(SWT.DefaultSelection, memberTextListener);", "+\t\t\t\t\t\teditorTx.addListener(SWT.FocusOut, memberTextListener);", "+\t\t\t\t\t\teditorTx.addListener(SWT.Traverse, memberTextListener);", "+\t\t\t\t\t\teditor.setEditor(editorTx);", "+\t\t\t\t\t\teditor.setColumn(column);", "+\t\t\t\t\t\teditor.setItem(item);", "+\t\t\t\t\t\teditorTx.setText(item.getText(column));", "+\t\t\t\t\t\teditorTx.selectAll();", "+\t\t\t\t\t\teditorTx.setVisible(true);", "+\t\t\t\t\t\teditorTx.setFocus();", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tComposite panel = new Composite(parent, SWT.NONE);", "+\t\tpanel.setLayout(new GridLayout(1, true));", "+\t\t", "+\t\tButton generate = new Button(panel, SWT.PUSH);", "+\t\tgenerate.setText(\"Generate\");", "+\t\tgenerate.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tTreeItem[] items = nodesTree.getItems();", "+\t\t\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\t\t\tTreeItem item = items[i];", "+\t\t\t\t\tDocument document = buildExtrasDocument(item);", "+\t\t\t\t\tif (document != null) {", "+\t\t\t\t\t\tgen.saveExtraAttributes((String)item.getData(), document);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00dca3800586cb0ba52eaa14fb9bf26b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "commitAfterChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void open()", "signatureAfterChange": " \t \tpublic void open()", "diff": ["+\t\t\tif (extraAttributes[i].equals(\"swt_gen\")) continue;", "-\t\t", "+", "+\t\tfinal Text editorTx = new Text(nodesTree, SWT.SINGLE);", "+\t\tfinal TreeEditor editor = new TreeEditor(nodesTree);", "+\t\teditor.grabHorizontal = true;", "+\t\teditor.setEditor(editorTx);", "+\t\tListener memberTextListener = new Listener() {", "+\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\tif (e.type == SWT.Traverse) {", "+\t\t\t\t\tswitch (e.detail) {", "+\t\t\t\t\t\tcase SWT.TRAVERSE_ESCAPE:", "+\t\t\t\t\t\t\teditor.setItem(null);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\teditorTx.setVisible(false);", "+\t\t\t\tTreeItem item = editor.getItem();", "+\t\t\t\tif (item == null) return;", "+\t\t\t\tint column = editor.getColumn();", "+\t\t\t\tString value = editorTx.getText();", "+\t\t\t\titem.setText(column, value);", "+\t\t\t\tElement node = (Element)item.getData();", "+\t\t\t\tString name = nodesTree.getColumn(column).getText();", "+\t\t\t\tif (value.length() != 0) {", "+\t\t\t\t\tnode.setAttribute(name, value);", "+\t\t\t\t} else {", "+\t\t\t\t\tnode.removeAttribute(name);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\teditorTx.addListener(SWT.DefaultSelection, memberTextListener);", "+\t\teditorTx.addListener(SWT.FocusOut, memberTextListener);", "+\t\teditorTx.addListener(SWT.Traverse, memberTextListener);", "+\t\t\t\t\t\tif (!(item.getData() instanceof Element)) return;", "-\t\t\t\t\t\tfinal TreeEditor editor = new TreeEditor(nodesTree);", "-\t\t\t\t\t\teditor.grabHorizontal = true;", "-\t\t\t\t\t\tfinal Text editorTx = new Text(nodesTree, SWT.SINGLE);", "-\t\t\t\t\t\tListener memberTextListener = new Listener() {", "-\t\t\t\t\t\t\tpublic void handleEvent(Event e) {", "-\t\t\t\t\t\t\t\tif (e.type == SWT.Traverse) {", "-\t\t\t\t\t\t\t\t\tswitch (e.detail) {", "-\t\t\t\t\t\t\t\t\t\tcase SWT.TRAVERSE_ESCAPE:", "-\t\t\t\t\t\t\t\t\t\t\teditor.setItem(null);", "-\t\t\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\teditorTx.setVisible(false);", "-\t\t\t\t\t\t\t\tTreeItem item = editor.getItem();", "-\t\t\t\t\t\t\t\tif (item == null) return;", "-\t\t\t\t\t\t\t\tint column = editor.getColumn();", "-\t\t\t\t\t\t\t\titem.setText(column, editorTx.getText());", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t};", "-\t\t\t\t\t\teditorTx.addListener(SWT.DefaultSelection, memberTextListener);", "-\t\t\t\t\t\teditorTx.addListener(SWT.FocusOut, memberTextListener);", "-\t\t\t\t\t\teditorTx.addListener(SWT.Traverse, memberTextListener);", "-\t\t\t\t\t\teditor.setEditor(editorTx);", "-\t\t\t\t\tTreeItem item = items[i];", "-\t\t\t\t\tDocument document = buildExtrasDocument(item);", "-\t\t\t\t\tif (document != null) {", "-\t\t\t\t\t\tgen.saveExtraAttributes((String)item.getData(), document);", "-\t\t\t\t\t}", "+\t\t\t\t\tupdateGenAttribute(items[i]);", "-\t\t\t\tgen.reloadExtraAttributes();", "+\t\t\t\tgen.generateAll();"]}], "num": 8100}