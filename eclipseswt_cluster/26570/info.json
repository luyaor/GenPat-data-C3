{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a5569ceb7b4dbb7cee27488f220c9f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1866739b746db98ed0e7e7cc77577674", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d275367926b9c3fe04d845851a73783bb3c0275f", "commitAfterChange": "c90593d76671c8a21df0faea4fa38db7faf97ace", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "diff": ["+\t/*", "+\t* Bug in the Macintosh.  Despite the that a window has scope", "+\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "+\t* events but does not get kEventWindowDeactivated events.  The", "+\t* fix is to ignore kEventWindowActivated events.", "+\t*/", "+\tint [] outScope = new int [1];", "+\tOS.GetWindowActivationScope (shellHandle, outScope); ", "+\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "-\t\t/*", "-\t\t* Bug in the Macintosh.  Despite the that a window has scope", "-\t\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "-\t\t* events but does not get kEventWindowDeactivated events.  The", "-\t\t* fix is to ignore kEventWindowActivated events.", "-\t\t*/", "-\t\tint [] outScope = new int [1];", "-\t\tOS.GetWindowActivationScope (shellHandle, outScope); ", "-\t\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "-\t\trestoreFocus ();", "+\t\tif (!restoreFocus () && !traverseGroup (true)) setFocus ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a793536bb4f2e2827cad8a52abd269d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "efcc453b894c8ffd06a1768f8c800b7db7290290", "commitAfterChange": "8188a5d1f9bc4d3f53c8cfcac3571aea29ed7d71", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowActivated (int nextHandler, int theEvent, int userData)", "diff": ["-\t/*", "-\t* Bug in the Macintosh.  Despite the that a window has scope", "-\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "-\t* events but does not get kEventWindowDeactivated events.  The", "-\t* fix is to ignore kEventWindowActivated events.", "-\t*/", "-\tint [] outScope = new int [1];", "-\tOS.GetWindowActivationScope (shellHandle, outScope); ", "-\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "-\tdisplay.setMenuBar (menuBar);", "-\tif (menuBar != null) OS.DrawMenuBar ();", "-\tactivate = true;", "-\tsendEvent (SWT.Activate);", "-\tif (isDisposed ()) return result;", "-\trestoreFocus ();", "-\tactivate = false;", "+\tif (!active) {", "+\t\tactive = true;", "+\t\t/*", "+\t\t* Bug in the Macintosh.  Despite the that a window has scope", "+\t\t* kWindowActivationScopeNone, it gets kEventWindowActivated", "+\t\t* events but does not get kEventWindowDeactivated events.  The", "+\t\t* fix is to ignore kEventWindowActivated events.", "+\t\t*/", "+\t\tint [] outScope = new int [1];", "+\t\tOS.GetWindowActivationScope (shellHandle, outScope); ", "+\t\tif (outScope [0] == OS.kWindowActivationScopeNone) return result;", "+\t\tdisplay.setMenuBar (menuBar);", "+\t\tif (menuBar != null) OS.DrawMenuBar ();", "+\t\tactivate = true;", "+\t\tsendEvent (SWT.Activate);", "+\t\tif (isDisposed ()) return result;", "+\t\trestoreFocus ();", "+\t\tactivate = false;", "+\t}"]}], "num": 26570}