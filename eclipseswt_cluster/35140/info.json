{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d184e57ceefc1e11bc2f5c630b9898c5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8439700ffe625a8b0849143c879b9527", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f295d81c96c5f0cad60547a25236d1a3bb649162", "commitAfterChange": "a8b66e5526c4d5742c189dc14fbd5713d660c0e6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\tif (event != null) {", "+\t\tif (styledText.compositionStart != -1 && styledText.compositionLength > 0) {", "+\t\t\tint compositionLine = styledText.getContent().getLineAtOffset(styledText.compositionStart);", "+\t\t\tif (compositionLine == lineIndex) {", "+\t\t\t\tStyleRange[] imeStyles = getStyleRanges(styledText.compositionStart, styledText.compositionLength, false);", "+\t\t\t\tint[] imeRanges = getRanges(styledText.compositionStart, styledText.compositionLength);", "+\t\t\t\tif (imeStyles != null && imeRanges != null) {", "+\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "+\t\t\t\t\t\tint start = imeRanges[i*2] - lineOffset;", "+\t\t\t\t\t\tlayout.setStyle(imeStyles[i], start, start + imeRanges[i*2+1] - 1);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a621b2fb6ce7e134fdd32a2b438004", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 83, "signatureBeforeChange": "  String verifyText (String string, int start, int end, Event keyEvent)", "signatureAfterChange": "  String verifyText (String string, int start, int end, Event keyEvent)", "diff": ["+\tif (event.text != null) {", "+\t\tif (txnObject == 0 && (style & SWT.PASSWORD) == 0 && echoCharacter != '\\0') {", "+\t\t\tif (!(hiddenText.length () - (end - start) + event.text.length () > textLimit)) {", "+\t\t\t\tString prefix = hiddenText.substring (0, start);", "+\t\t\t\tString sufix = hiddenText.substring(end, hiddenText.length ());", "+\t\t\t\thiddenText = prefix + event.text + sufix;", "+\t\t\t\tchar [] buffer = new char [event.text.length ()];", "+\t\t\t\tfor (int i = 0; i < buffer.length; i++) buffer [i] = echoCharacter;", "+\t\t\t\tevent.text = new String (buffer);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 35140}