{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f637ecba1e3fa58aaf0f9a6bb030ad37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fbdb68f361db8044faa9772e58050b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7062e8fe1522be954953abe736d74a670f61f8b5", "commitAfterChange": "84b2f7384099fd4b35f3cdd74a78ca15b410fdfe", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public Monitor[] getMonitors()", "signatureAfterChange": " public Monitor [] getMonitors ()", "diff": ["-public Monitor[] getMonitors() {", "+public Monitor [] getMonitors () {", "-\t\tMonitor monitor = new Monitor();", "-\t\tmonitor.handle = 0;", "-\t\tint width = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "-\t\tint height = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\tmonitor.bounds = new Rectangle (0, 0, width, height);", "-\t\tRECT rect = new RECT ();", "-\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "-\t\tmonitor.clientArea = new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);", "-\t\treturn new Monitor[] { monitor };", "+\t\treturn new Monitor [] {getPrimaryMonitor ()};", "-\tmonitors = new Monitor[4];", "+\tmonitors = new Monitor [4];", "-\tOS.EnumDisplayMonitors(0, null, lpfnEnum, 0);", "-\tcallback.dispose();", "-\tMonitor[] result = new Monitor[monitorCount];", "-\tSystem.arraycopy(monitors, 0, result, 0, monitorCount);", "+\tOS.EnumDisplayMonitors (0, null, lpfnEnum, 0);", "+\tcallback.dispose ();", "+\tMonitor [] result = new Monitor [monitorCount];", "+\tSystem.arraycopy (monitors, 0, result, 0, monitorCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bb99585bb1aca50c5669c9cc28a0dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "fbb292af69fce7799a14de7c3256ae3196bbbc23", "commitAfterChange": "d3b70aad7149876ba42093794d2909bb52409b12", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\tint maxWidth = 0;", "-\t\tif (OS.IsWinCE || OS.WIN32_VERSION < OS.VERSION (4, 10)) {", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "-\t\t\tmaxWidth = (rect.right - rect.left) / 4;", "-\t\t} else {", "-\t\t\tlong /*int*/ hmonitor = OS.MonitorFromWindow (hwnd, OS.MONITOR_DEFAULTTONEAREST);", "-\t\t\tMONITORINFO lpmi = new MONITORINFO ();", "-\t\t\tlpmi.cbSize = MONITORINFO.sizeof;", "-\t\t\tOS.GetMonitorInfo (hmonitor, lpmi);", "-\t\t\tmaxWidth = (lpmi.rcWork_right - lpmi.rcWork_left) / 4;", "-\t\t}", "-\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, maxWidth);", "+\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, getWidth ());"]}], "num": 26035}