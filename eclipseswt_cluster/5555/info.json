{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e33eed0ca347ffcb96e8ecec368b839d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12155808cb69059563416c199884f0de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "2fdc8d599df52d66affa581633830192e3d9dee9", "commitAfterChange": "494a07a91e999bc680c78e11c98014ab6f49ad58", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  int tableView_validateDrop_proposedRow_proposedDropOperation(int id, int sel, int tableView, int info, int row, int operation)", "signatureAfterChange": "  int tableView_validateDrop_proposedRow_proposedDropOperation(int id, int sel, int tableView, int info, int row, int operation)", "diff": ["-\t\twidget.setDropRow(row, OS.NSTableViewDropOn);", "+\t\tif (feedback == 0) {", "+\t\t\twidget.setDropRow(-1, OS.NSTableViewDropOn);\t\t", "+\t\t} else {", "+\t\t\tif ((feedback & DND.FEEDBACK_SELECT) != 0) {", "+\t\t\t\twidget.setDropRow(row, OS.NSTableViewDropOn);", "+\t\t\t} else {", "+\t\t\t\tif ((feedback & DND.FEEDBACK_INSERT_AFTER) != 0) {", "+\t\t\t\t\twidget.setDropRow(row + 1, OS.NSTableViewDropAbove);", "+\t\t\t\t}", "+\t\t\t\tif ((feedback & DND.FEEDBACK_INSERT_BEFORE) != 0) {", "+\t\t\t\t\twidget.setDropRow(row, OS.NSTableViewDropAbove);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b172bee8113d86e18ffc3731b7a1675c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f4da7aa22938eff9386ced5a68efc75f6a4c2005", "commitAfterChange": "b211e36e1ca2c23763932d86cc9e30f9e7b827d0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t\tignoreDraw = ignoreDrawSelection = ignoreDrawBackground = false;", "+\t\tignoreDrawForeground = ignoreDrawSelection = ignoreFullSelection = ignoreDrawBackground = false;", "-\t\t\t\tignoreDraw = (event.detail & SWT.FOREGROUND) == 0;", "+\t\t\t\tignoreDrawForeground = (event.detail & SWT.FOREGROUND) == 0;", "-\t\t\t\tignoreDraw = ignoreDrawSelection = ignoreDrawBackground = true;", "+\t\t\t\tignoreDrawForeground = ignoreDrawSelection = ignoreDrawBackground = true;", "-\t\t\tif (!selected && !ignoreDrawBackground && clrTextBk != -1) {", "-\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "-\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\tif (!ignoreDrawBackground && clrTextBk != -1) {", "+\t\t\t\tif (count == 0) {", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, true, false, true, hDC);", "+\t\t\t\t\t\tfillBackground (hDC, clrTextBk, textRect);", "+\t\t\t\t\t}", "-\t\t\t\t\tRECT backgroundRect = item.getBounds (index, true, false, true, false, true, hDC);", "-\t\t\t\t\tfillBackground (hDC, clrTextBk, backgroundRect);", "+\t\t\t\t\tfillBackground (hDC, clrTextBk, cellRect);", "+\t\t\tif (ignoreDrawSelection) ignoreFullSelection = true;", "-\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "+\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), cellRect);", "+\t\t\t\t\t}", "-\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t\tif (OS.IsWindowEnabled (handle)) drawBackground (hDC, rect);"]}], "num": 5555}