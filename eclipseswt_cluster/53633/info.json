{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4558c710842f955b7c5d7c6858305219", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2f31a4792023249a3244c1eb99cd58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f6e418ce08de208f524d556323de8e3b12653f8f", "commitAfterChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-", "-\tDisplay display= getDisplay();", "-\tint menuHandle[]= new int[1];", "-\tif (OS.CreateNewMenu(display.nextMenuId(), 0, menuHandle) == OS.noErr)", "-\t\thandle= menuHandle[0];", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.RetainMenu(handle);", "-\tint[] mask = new int[] {", "+\tDisplay display = getDisplay ();", "+\tshort menuID = display.nextMenuId ();", "+\tint outMenuRef [] = new int [1];", "+\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "+\t\terror (SWT.ERROR_NO_HANDLES);", "+\t}", "+\thandle = outMenuRef [0];", "+\tint [] mask = new int [] {", "-\t\tOS.kEventClassMenu, OS.kEventMenuClosed", "+\t\tOS.kEventClassMenu, OS.kEventMenuClosed,", "-\tOS.InstallEventHandler(OS.GetMenuEventTarget(handle), display.fMenuProc, mask.length / 2, mask, handle, null);", "+\tOS.InstallEventHandler (OS.GetMenuEventTarget (handle), display.fMenuProc, mask.length / 2, mask, handle, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faed402565588fd8b81c4f0dc9984474", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "70b00f9fd9ccac15426ee88b1dc6a2b6b783b7fa", "commitAfterChange": "11bc4a368151700b23786d7f7d417c288754443c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\toffset = translateOffset(offset);", "+\toffset += step;", "+\tint internalOffset = translateOffset(offset);", "-\toffset = validateOffset(offset, step);", "-\twhile (0 < offset && offset < length) {", "-\t\tOS.memmove(logAttr, attrs[0] + offset * PangoLogAttr.sizeof, PangoLogAttr.sizeof);", "+\twhile (0 < internalOffset && internalOffset < length) {", "+\t\tOS.memmove(logAttr, attrs[0] + internalOffset * PangoLogAttr.sizeof, PangoLogAttr.sizeof);", "-\t\toffset = validateOffset(offset, step);", "+\t\toffset += step;", "+\t\tinternalOffset = translateOffset(offset);", "-\treturn Math.min(Math.max(0, untranslateOffset(offset)), text.length());", "+\treturn Math.min(Math.max(0, offset), text.length());"]}], "num": 53633}