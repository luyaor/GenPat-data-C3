{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac33d7568d22dacf0acb719af705c45d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23cfe934a2e8fc887228682cc11a2990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \t\tpublic void widgetSelected (SelectionEvent event)", "signatureAfterChange": "\r \t\t\r \t\tpublic void widgetSelected(SelectionEvent event)", "diff": ["-\titem.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tdropDownToolItemSelected (event);\r", "-\t\t}\r", "+\t\t\r", "+\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t// Create the menu if it has not already been created\r", "+\t\t\tif (menu == null) {\r", "+\t\t\t\t// Lazy create the menu.\r", "+\t\t\t\tShell shell = tabFolderPage.getShell();\r", "+\t\t\t\tmenu = new Menu(shell);\r", "+\t\t\t\tfor (int i = 0; i < 9; ++i) {\r", "+\t\t\t\t\tfinal String text = ControlExample.getResourceString(\"DropDownData_\" + i);\r", "+\t\t\t\t\tif (text.length() != 0) {\r", "+\t\t\t\t\t\tMenuItem menuItem = new MenuItem(menu, SWT.NONE);\r", "+\t\t\t\t\t\tmenuItem.setText(text);\r", "+\t\t\t\t\t\t/*\r", "+\t\t\t\t\t\t * Add a menu selection listener so that the menu is hidden\r", "+\t\t\t\t\t\t * when the user selects an item from the drop down menu.\r", "+\t\t\t\t\t\t */\r", "+\t\t\t\t\t\tmenuItem.addSelectionListener(new SelectionAdapter() {\r", "+\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent e) {\r", "+\t\t\t\t\t\t\t\tsetMenuVisible(false);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t});\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tMenuItem menuItem = new MenuItem(menu, SWT.SEPARATOR);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\t/**\r", "+\t\t\t * A selection event will be fired when a drop down tool\r", "+\t\t\t * item is selected in the main area and in the drop\r", "+\t\t\t * down arrow.  Examine the event detail to determine\r", "+\t\t\t * where the widget was selected.\r", "+\t\t\t */\t\t\r", "+\t\t\tif (event.detail == SWT.ARROW) {\r", "+\t\t\t\t/*\r", "+\t\t\t\t * The drop down arrow was selected.\r", "+\t\t\t\t */\r", "+\t\t\t\tif (visible) {\r", "+\t\t\t\t\t// Hide the menu to give the Arrow the appearance of being a toggle button.\r", "+\t\t\t\t\tsetMenuVisible(false);\r", "+\t\t\t\t} else {\t\r", "+\t\t\t\t\t// Position the menu below and vertically aligned with the the drop down tool button.\r", "+\t\t\t\t\tfinal ToolItem toolItem = (ToolItem) event.widget;\r", "+\t\t\t\t\tfinal ToolBar  toolBar = toolItem.getParent();\r", "+\t\t\t\t\t\r", "+\t\t\t\t\tRectangle toolItemBounds = toolItem.getBounds();\r", "+\t\t\t\t\tPoint point = toolBar.toDisplay(new Point(toolItemBounds.x, toolItemBounds.y));\r", "+\t\t\t\t\tmenu.setLocation(point.x, point.y + toolItemBounds.height);\r", "+\t\t\t\t\tsetMenuVisible(true);\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\t/*\r", "+\t\t\t\t * Main area of drop down tool item selected.\r", "+\t\t\t\t * An application would invoke the code to perform the action for the tool item.\r", "+\t\t\t\t */\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3648acb2c8ba1cff7c7cdf2a0681e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \t\tpublic void widgetSelected (SelectionEvent event)", "signatureAfterChange": "\r \t\t\r \t\tpublic void widgetSelected(SelectionEvent event)", "diff": ["-\titem.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tdropDownToolItemSelected (event);\r", "-\t\t}\r", "+\t\t\r", "+\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t// Create the menu if it has not already been created\r", "+\t\t\tif (menu == null) {\r", "+\t\t\t\t// Lazy create the menu.\r", "+\t\t\t\tShell shell = tabFolderPage.getShell();\r", "+\t\t\t\tmenu = new Menu(shell);\r", "+\t\t\t\tfor (int i = 0; i < 9; ++i) {\r", "+\t\t\t\t\tfinal String text = ControlExample.getResourceString(\"DropDownData_\" + i);\r", "+\t\t\t\t\tif (text.length() != 0) {\r", "+\t\t\t\t\t\tMenuItem menuItem = new MenuItem(menu, SWT.NONE);\r", "+\t\t\t\t\t\tmenuItem.setText(text);\r", "+\t\t\t\t\t\t/*\r", "+\t\t\t\t\t\t * Add a menu selection listener so that the menu is hidden\r", "+\t\t\t\t\t\t * when the user selects an item from the drop down menu.\r", "+\t\t\t\t\t\t */\r", "+\t\t\t\t\t\tmenuItem.addSelectionListener(new SelectionAdapter() {\r", "+\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent e) {\r", "+\t\t\t\t\t\t\t\tsetMenuVisible(false);\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t});\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tMenuItem menuItem = new MenuItem(menu, SWT.SEPARATOR);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\t/**\r", "+\t\t\t * A selection event will be fired when a drop down tool\r", "+\t\t\t * item is selected in the main area and in the drop\r", "+\t\t\t * down arrow.  Examine the event detail to determine\r", "+\t\t\t * where the widget was selected.\r", "+\t\t\t */\t\t\r", "+\t\t\tif (event.detail == SWT.ARROW) {\r", "+\t\t\t\t/*\r", "+\t\t\t\t * The drop down arrow was selected.\r", "+\t\t\t\t */\r", "+\t\t\t\tif (visible) {\r", "+\t\t\t\t\t// Hide the menu to give the Arrow the appearance of being a toggle button.\r", "+\t\t\t\t\tsetMenuVisible(false);\r", "+\t\t\t\t} else {\t\r", "+\t\t\t\t\t// Position the menu below and vertically aligned with the the drop down tool button.\r", "+\t\t\t\t\tfinal ToolItem toolItem = (ToolItem) event.widget;\r", "+\t\t\t\t\tfinal ToolBar  toolBar = toolItem.getParent();\r", "+\t\t\t\t\t\r", "+\t\t\t\t\tRectangle toolItemBounds = toolItem.getBounds();\r", "+\t\t\t\t\tPoint point = toolBar.toDisplay(new Point(toolItemBounds.x, toolItemBounds.y));\r", "+\t\t\t\t\tmenu.setLocation(point.x, point.y + toolItemBounds.height);\r", "+\t\t\t\t\tsetMenuVisible(true);\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\t/*\r", "+\t\t\t\t * Main area of drop down tool item selected.\r", "+\t\t\t\t * An application would invoke the code to perform the action for the tool item.\r", "+\t\t\t\t */\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 10703}