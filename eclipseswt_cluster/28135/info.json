{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aadd4bdbd2af0feaf606e692ba57b05", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ede4855574e41c9fa6007b03f00329c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "7867f4333df3401f2d9ceb7dab2dbc0c4b8c2343", "commitAfterChange": "d2e5dcd7efd5667e08cacd2f0a4973952e5a602f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\thandle = OS.gtk_plug_new (0);", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\timageHandle = OS.gtk_image_new ();", "-\tif (imageHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_container_add (handle, imageHandle);", "-\tOS.gtk_widget_show (handle);", "-\tOS.gtk_widget_show (imageHandle);", "-\tint /*long*/ id = OS.gtk_plug_get_id (handle);", "-\tint monitor = 0;", "-\tint /*long*/ screen = OS.gdk_screen_get_default ();", "-\tif (screen != 0) {", "-\t\tmonitor = OS.gdk_screen_get_number (screen);", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "+\t\thandle = OS.gtk_status_icon_new ();", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\timageHandle = OS.gtk_image_new ();", "+\t\tOS.gtk_status_icon_set_visible (handle,true);", "+\t} else {", "+\t\thandle = OS.gtk_plug_new (0);", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\timageHandle = OS.gtk_image_new ();", "+\t\tif (imageHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_container_add (handle, imageHandle);", "+\t\tOS.gtk_widget_show (handle);", "+\t\tOS.gtk_widget_show (imageHandle);", "+\t\tint /*long*/ id = OS.gtk_plug_get_id (handle);", "+\t\tint monitor = 0;", "+\t\tint /*long*/ screen = OS.gdk_screen_get_default ();", "+\t\tif (screen != 0) {", "+\t\t\tmonitor = OS.gdk_screen_get_number (screen);", "+\t\t}", "+\t\tbyte [] trayBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_S\" + monitor, true);", "+\t\tint /*long*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "+\t\tint /*long*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "+\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\tint /*long*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "+\t\tbyte [] messageBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_OPCODE\", true);", "+\t\tint /*long*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "+\t\tint /*long*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "+\t\tXClientMessageEvent event = new XClientMessageEvent ();", "+\t\tevent.type = OS.ClientMessage;", "+\t\tevent.window = trayWindow;", "+\t\tevent.message_type = xMessageAtom;", "+\t\tevent.format = 32;", "+\t\tevent.data [0] = OS.GDK_CURRENT_TIME;", "+\t\tevent.data [1] = OS.SYSTEM_TRAY_REQUEST_DOCK;", "+\t\tevent.data [2] = id;", "+\t\tint /*long*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);", "+\t\tOS.memmove (clientEvent, event, XClientMessageEvent.sizeof);", "+\t\tOS.XSendEvent (xDisplay, trayWindow, false, OS.NoEventMask, clientEvent);", "+\t\tOS.g_free (clientEvent);", "-\tbyte [] trayBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_S\" + monitor, true);", "-\tint /*long*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "-\tint /*long*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "-\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\tint /*long*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "-\tbyte [] messageBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_OPCODE\", true);", "-\tint /*long*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "-\tint /*long*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "-\tXClientMessageEvent event = new XClientMessageEvent ();", "-\tevent.type = OS.ClientMessage;", "-\tevent.window = trayWindow;", "-\tevent.message_type = xMessageAtom;", "-\tevent.format = 32;", "-\tevent.data [0] = OS.GDK_CURRENT_TIME;", "-\tevent.data [1] = OS.SYSTEM_TRAY_REQUEST_DOCK;", "-\tevent.data [2] = id;", "-\tint /*long*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);", "-\tOS.memmove (clientEvent, event, XClientMessageEvent.sizeof);", "-\tOS.XSendEvent (xDisplay, trayWindow, false, OS.NoEventMask, clientEvent);", "-\tOS.g_free (clientEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "273167cdf20f9c40e404834bfb01d5f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "6d2109680e67f01ec005aa6e7ba9c30428f9e77a", "commitAfterChange": "dd2aca966bc039ce9a2eb77aaa5738d3e28bb872", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t\thandle = OS.gtk_status_icon_new ();", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\timageHandle = OS.gtk_image_new ();", "-\t\tOS.gtk_status_icon_set_visible (handle,true);", "-\t} else {", "-\t\thandle = OS.gtk_plug_new (0);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\timageHandle = OS.gtk_image_new ();", "-\t\tif (imageHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_container_add (handle, imageHandle);", "-\t\tOS.gtk_widget_show (handle);", "-\t\tOS.gtk_widget_show (imageHandle);", "-\t\tlong /*int*/ id = OS.gtk_plug_get_id (handle);", "-\t\tint monitor = 0;", "-\t\tlong /*int*/ screen = OS.gdk_screen_get_default ();", "-\t\tif (screen != 0) {", "-\t\t\tmonitor = OS.gdk_screen_get_number (screen);", "-\t\t}", "-\t\tbyte [] trayBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_S\" + monitor, true);", "-\t\tlong /*int*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "-\t\tlong /*int*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "-\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\tlong /*int*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "-\t\tbyte [] messageBuffer = Converter.wcsToMbcs (null, \"_NET_SYSTEM_TRAY_OPCODE\", true);", "-\t\tlong /*int*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "-\t\tlong /*int*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "-\t\tXClientMessageEvent event = new XClientMessageEvent ();", "-\t\tevent.type = OS.ClientMessage;", "-\t\tevent.window = trayWindow;", "-\t\tevent.message_type = xMessageAtom;", "-\t\tevent.format = 32;", "-\t\tevent.data [0] = OS.GDK_CURRENT_TIME;", "-\t\tevent.data [1] = OS.SYSTEM_TRAY_REQUEST_DOCK;", "-\t\tevent.data [2] = id;", "-\t\tlong /*int*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);", "-\t\tOS.memmove (clientEvent, event, XClientMessageEvent.sizeof);", "-\t\tOS.XSendEvent (xDisplay, trayWindow, false, OS.NoEventMask, clientEvent);", "-\t\tOS.g_free (clientEvent);", "-\t}", "+\thandle = OS.gtk_status_icon_new ();", "+\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\timageHandle = OS.gtk_image_new ();", "+\tOS.gtk_status_icon_set_visible (handle,true);"]}], "num": 28135}