{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5a8cfae4cf0fabb39d670e17c0d7107", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b53ee26cdf857706e9721fe8ef92f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "7ffe87962046d735f644913e9a196819a8c97052", "commitAfterChange": "8de03a68a55b2a23bdf2a3ae193340326ee0388e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["-\tint[] types = _getAvailableTypes();", "-\tString[] result = new String[types.length];", "+\tint[] types1 = getAvailableClipboardTypes();", "+\tint[] types2 = getAvailablePrimaryTypes();", "+\tString[] result = new String[types1.length + types2.length];", "-\tfor (int i = 0; i < types.length; i++) {", "-\t\tint /*long*/ pName = OS.gdk_atom_name(types[i]);", "+\tfor (int i = 0; i < types1.length; i++) {", "+\t\tint /*long*/ pName = OS.gdk_atom_name(types1[i]);", "-\t\tresult[count++] = new String (Converter.mbcsToWcs (null, buffer));", "+\t\tresult[count++] = \"GTKCLIPBOARD \"+new String (Converter.mbcsToWcs (null, buffer));", "-\tif (count < types.length){", "+\tfor (int i = 0; i < types2.length; i++) {", "+\t\tint /*long*/ pName = OS.gdk_atom_name(types2[i]);", "+\t\tif (pName == 0) {", "+\t\t\tcontinue;", "+\t\t}", "+\t\tbyte[] buffer = new byte [OS.strlen(pName)];", "+\t\tOS.memmove (buffer, pName, buffer.length);", "+\t\tOS.g_free (pName);", "+\t\tresult[count++] = \"GTKPRIMARYCLIPBOARD \"+new String (Converter.mbcsToWcs (null, buffer));", "+\t}", "+\tif (count < result.length){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47614a80939e617c69fe8c5cbdfd273e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "0793b321b96b3cfafc61b8c0f24ba38ca5c68df8", "commitAfterChange": "a5490f742de762bde49c46db68fac4cb9a6040a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["-\tString[] types = new String[0];", "+\tPhClipHeader[] types = _getAvailableTypes();", "+\tString[] names = new String[types.length];", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tbyte[] buffer = new byte[8];", "+\t\tbuffer[0] = types[i].type_0;", "+\t\tbuffer[1] = types[i].type_1;", "+\t\tbuffer[2] = types[i].type_2;", "+\t\tbuffer[3] = types[i].type_3;", "+\t\tbuffer[4] = types[i].type_4;", "+\t\tbuffer[5] = types[i].type_5;", "+\t\tbuffer[6] = types[i].type_6;", "+\t\tbuffer[7] = types[i].type_7;", "+\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "+\t\tnames[i] = new String (unicode).trim();", "+\t}", "+\treturn names;", "+}", "-\t\t\tbyte[] buffer = new byte[8];", "-\t\t\tbuffer[0] = clipHeader.type_0;", "-\t\t\tbuffer[1] = clipHeader.type_1;", "-\t\t\tbuffer[2] = clipHeader.type_2;", "-\t\t\tbuffer[3] = clipHeader.type_3;", "-\t\t\tbuffer[4] = clipHeader.type_4;", "-\t\t\tbuffer[5] = clipHeader.type_5;", "-\t\t\tbuffer[6] = clipHeader.type_6;", "-\t\t\tbuffer[7] = clipHeader.type_7;", "-\t\t\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "-\t\t\t", "-\t\t\tString[] newTypes = new String[types.length + 1];", "-\t\t\tnewTypes[types.length] = new String (unicode).trim();"]}], "num": 48663}