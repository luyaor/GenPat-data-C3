{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b162ff35221e1cffd0274adc01bb1c0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "271b2056e31b2ca48398e6e56a0256de", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When an index is out of range,", "-\t* the list widget adds the item at the end.  This", "-\t* behavior is not wrong but it is unwanted.  The", "-\t* fix is to check the range before adding the item.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t*/", "-\t/* AW", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\tif (xmString == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "-\tOS.XmListAddItemUnselected (handle, xmString, index + 1);", "-\tOS.XmStringFree (xmString);", "-    */", "-\tOS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, 1, new int[] { p.fId }, 0);", "+\tif (OS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, 1, new int[] { p.fId }, 0) != OS.kNoErr)", "+\t\terror (SWT.ERROR_ITEM_NOT_ADDED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2090404d920bce0ca87e43f70821d37f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When an index is out of range,", "-\t* the list widget adds the item at the end.  This", "-\t* behavior is not wrong but it is unwanted.  The", "-\t* fix is to check the range before adding the item.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tif (!(0 <= index && index <= argList [1])) {", "-\t\terror (SWT.ERROR_INVALID_RANGE);", "-\t}", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), encodeString(string), true);", "-\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\tif (xmString == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "-\tOS.XmComboBoxAddItem(handle, xmString, index + 1, false);", "-\tOS.XmStringFree (xmString);", "-    */", "-\t", "-\t\tif (OS.InsertMenuItemTextWithCFString(fMenuHandle, sHandle, (short)index, 0, fgCommandID++) != OS.kNoErr)", "-\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\tOS.SetControl32BitMaximum(fPopupButton, OS.CountMenuItems(fMenuHandle));\t", "+\t\tif (fMenuHandle != 0) {", "+\t\t\tif (OS.InsertMenuItemTextWithCFString(fMenuHandle, sHandle, (short)index, 0, fgCommandID++) != OS.kNoErr)", "+\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\tOS.SetControl32BitMaximum(handle, OS.CountMenuItems(fMenuHandle));\t", "+\t\t} else {", "+\t\t\tOS.HIComboBoxInsertTextItemAtIndex(handle, index, sHandle);", "+\t\t}"]}], "num": 58753}