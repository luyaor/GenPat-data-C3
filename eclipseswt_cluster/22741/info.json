{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a479fbf5dad03d2bd8d42158375298e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "896e8dd61e757c26c946bd107d289a83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static int getByteCount(Class clazz)", "signatureAfterChange": "  static String loadFile (String file)", "diff": ["-static int getByteCount(Class clazz) {", "-\tif (clazz == Integer.TYPE) return 4;", "-\tif (clazz == Boolean.TYPE) return 4;", "-\tif (clazz == Long.TYPE) return 8;", "-\tif (clazz == Short.TYPE) return 2;", "-\tif (clazz == Character.TYPE) return 2;", "-\tif (clazz == Byte.TYPE) return 1;", "-\tif (clazz == Float.TYPE) return 4;", "-\tif (clazz == Double.TYPE) return 8;", "-\treturn 4;", "-}", "+static String loadFile (String file) {", "+\ttry {", "+\t\tFileReader fr = new FileReader(file);", "+\t\tBufferedReader br = new BufferedReader(fr);", "+\t\tStringBuffer str = new StringBuffer();", "+\t\tchar[] buffer = new char[1024];", "+\t\tint read;", "+\t\twhile ((read = br.read(buffer)) != -1) {", "+\t\t\tstr.append(buffer, 0, read);", "+\t\t}", "+\t\tfr.close();", "+\t\treturn str.toString();", "+\t} catch (IOException e) {", "+\t\tthrow new RuntimeException(\"File not found:\" + file, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f932a0e7fb56b2724e28a08bbb81d27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "9d4bb5b4ce77a05ecc0d7640bf75e1befec445c7", "commitAfterChange": "dbea67a910389ee7d738866aa8ecd95dd99f2aa1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tvoid createMenuBar()", "signatureAfterChange": "  \tvoid createMenuBar()", "diff": ["-\t\t        dialog.setText(getResourceString(\"Open_fileitem\")); //$NON-NLS-1$", "-\t\t\t\tdialog.setFilterPath(\"c:\\\\\"); //$NON-NLS-1$", "-\t\t\t\tdialog.setFileName(\"*.txt\"); //$NON-NLS-1$", "-\t\t        FileReader file = null;", "+\t\t        FileInputStream file = null;", "-\t\t        \tfile = new FileReader(name);", "-\t\t        \tBufferedReader fileInput = new BufferedReader(file);", "-\t\t        \tString line = null;", "-\t\t        \tStringBuffer buffer = new StringBuffer();", "-\t\t        \twhile ((line = fileInput.readLine()) != null) {", "-\t\t        \t\tbuffer.append(line);", "-\t\t        \t\tif (fileInput.ready()) buffer.append(styledText.getLineDelimiter());", "-\t\t        \t}", "-\t\t        \tstyledText.setText(buffer.toString());", "+\t\t        \tfile = new FileInputStream(name);", "+\t\t        \tstyledText.setText(openFile(file));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1aa2511bd6a1b5ed1b8220f75c21fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "9d4bb5b4ce77a05ecc0d7640bf75e1befec445c7", "commitAfterChange": "dbea67a910389ee7d738866aa8ecd95dd99f2aa1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tString getText(InputStream stream)", "signatureAfterChange": "  \tString openFile(InputStream stream) throws IOException", "diff": ["-", "-\tString getText(InputStream stream) {", "-\t\ttry {", "-\t\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(stream));", "-\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\tString line;", "-\t\t\twhile ((line = reader.readLine()) != null) {", "-\t\t\t\tbuffer.append(line);", "-\t\t\t\tbuffer.append(\"\\r\\n\");  //$NON-NLS-1$", "-\t\t\t}", "-\t\t\treturn buffer.toString();", "-\t\t} catch (IOException e) {", "-\t\t\treturn e.getMessage();", "-\t\t}", "-\t}", "+\tString openFile(InputStream stream) throws IOException {", "+\t\tBufferedReader reader = new BufferedReader(new InputStreamReader(stream));", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tString line;", "+\t\tString lineDelimiter = styledText.getLineDelimiter();", "+\t\twhile ((line = reader.readLine()) != null) {", "+\t\t\tbuffer.append(line);", "+\t\t\tbuffer.append(lineDelimiter);", "+\t\t}", "+\t\treturn buffer.toString();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5f902a7f1140ae333a01064a645a30e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet133.java", "commitBeforeChange": "bcf17a5b40f08be13e354f23b9b5268478a155f7", "commitAfterChange": "f3301548d851656ab0edea491c3107b50bc63d93", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\t \tvoid menuOpen()", "signatureAfterChange": " \t\t \tvoid menuOpen()", "diff": ["-\t\tdialog.setFilterExtensions(new String[] {\"*.java\", \"*.*\"});", "+\t\tdialog.setFilterExtensions(new String[] { \"*.java\", \"*.*\" });", "-\t\tif ((name == null) || (name.length() == 0)) return;", "-\t", "-\t\ttry {", "-\t\t\tFile file = new File(name);", "-\t\t\tFileInputStream stream= new FileInputStream(file.getPath());", "-\t\t\ttry {", "-\t\t\t\tReader in = new BufferedReader(new InputStreamReader(stream));", "-\t\t\t\tchar[] readBuffer= new char[2048];", "-\t\t\t\tStringBuffer buffer= new StringBuffer((int) file.length());", "-\t\t\t\tint n;", "-\t\t\t\twhile ((n = in.read(readBuffer)) > 0) {", "-\t\t\t\t\tbuffer.append(readBuffer, 0, n);", "-\t\t\t\t}", "-\t\t\t\ttextString = buffer.toString();", "-\t\t\t\tstream.close();", "-\t\t\t} catch (IOException e) {", "-\t\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR);", "-\t\t\t\tbox.setMessage(\"Error reading file:\\n\" + name);", "-\t\t\t\tbox.open();", "-\t\t\t\treturn;", "+\t\tif ((name == null) || (name.length() == 0))", "+\t\t\treturn;", "+", "+\t\tFile file = new File(name);", "+\t\ttry (FileInputStream stream = new FileInputStream(file.getPath())) {", "+\t\t\tReader in = new BufferedReader(new InputStreamReader(stream));", "+\t\t\tchar[] readBuffer = new char[2048];", "+\t\t\tStringBuffer buffer = new StringBuffer((int) file.length());", "+\t\t\tint n;", "+\t\t\twhile ((n = in.read(readBuffer)) > 0) {", "+\t\t\t\tbuffer.append(readBuffer, 0, n);", "+\t\t\ttextString = buffer.toString();", "+\t\t\tstream.close();", "-\t\t}\t", "+\t\t} catch (IOException e) {", "+\t\t\tMessageBox box = new MessageBox(shell, SWT.ICON_ERROR);", "+\t\t\tbox.setMessage(\"Error reading file:\\n\" + name);", "+\t\t\tbox.open();", "+\t\t\treturn;", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe47aa475560a5f6b4e7952d361d2b8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/BrowserTab.java", "commitBeforeChange": "0b6498cfd2a3d17343aba5a6dab547f692dc41bf", "commitAfterChange": "85fb12b848205366556a56348fab9f84032ee6f2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["-\t\t", "-        InputStream htmlStream= ControlExample.class.getResourceAsStream(\"browser-content.html\");", "-\t\tBufferedReader br= new BufferedReader(new InputStreamReader(htmlStream));", "-\t\tStringBuffer sb= new StringBuffer(300);", "-\t\ttry {", "-\t\t\tint read= 0;", "-\t\t\twhile ((read= br.read()) != -1)", "-\t\t\t\tsb.append((char) read);", "-\t\t} catch (IOException e) {", "-\t\t\tlog(e.getMessage());", "-\t\t} finally {", "+", "+\t\tif (lastUrl != null) {", "+\t\t\tbrowser.setUrl(lastUrl);", "+\t\t} else if (lastText != null) {", "+\t\t\tbrowser.setText(lastText);", "+\t\t} else {", "+\t        InputStream htmlStream= ControlExample.class.getResourceAsStream(\"browser-content.html\");", "+\t\t\tBufferedReader br= new BufferedReader(new InputStreamReader(htmlStream));", "+\t\t\tStringBuffer sb= new StringBuffer(300);", "-\t\t\t\tbr.close();", "+\t\t\t\tint read= 0;", "+\t\t\t\twhile ((read= br.read()) != -1)", "+\t\t\t\t\tsb.append((char) read);", "+\t\t\t} finally {", "+\t\t\t\ttry {", "+\t\t\t\t\tbr.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\tlog(e.getMessage());", "+\t\t\t\t}", "+\t\t\tString text= sb.toString();", "+\t\t\tbrowser.setText(text);", "-\t\tString text= sb.toString();", "-\t\tbrowser.setText(text);", "+\t\tlastText = lastUrl = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c34da002effef1ed0ffe93270a8d6f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "df052de83d7acd1cc399aa5a5220357d3ff18aa2", "commitAfterChange": "64387f2af5241a200363ccc1f0c65ecf0433d6b7", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void setTextField(int fieldName, int value, boolean commit)", "signatureAfterChange": "  void setTextField(int fieldName, int value, boolean commit)", "diff": ["-\t\t\tif (value < 30) value += 1900;", "-\t\t\telse if (value <= 99) value += 2000;", "+\t\t\tif (value < 30) value += 2000;", "+\t\t\telse if (value <= 99) value += 1900;", "-\tStringBuffer buffer = new StringBuffer(String.valueOf(value));", "-\tint prependCount = end - start - buffer.length();", "-\tfor (int i = 0; i < prependCount; i++) {", "-\t\tbuffer.insert(0, ' ');", "+\tString newValue;", "+\tif (fieldName == Calendar.AM_PM) {", "+\t\tnewValue = value == Calendar.AM ? \"AM\" : \"PM\";", "+\t} else {", "+\t\tStringBuffer buffer = new StringBuffer(String.valueOf(value));", "+\t\tint prependCount = end - start - buffer.length();", "+\t\tfor (int i = 0; i < prependCount; i++) {", "+\t\t\tbuffer.insert(0, ' ');", "+\t\t}", "+\t\tnewValue = buffer.toString();", "-\ttext.insert(buffer.toString()); // TODO: ampm needs special treatment", "+\ttext.insert(newValue);"]}], "num": 22741}