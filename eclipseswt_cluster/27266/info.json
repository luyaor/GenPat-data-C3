{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15580f581dc7b80b634658154e7aa51d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f975894f0dd7b640fae0bcb6cc0332", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/StyledTextTab.java", "commitBeforeChange": "e6541458aeb239a7b18a3fa9c57d955860902680", "commitAfterChange": "6bd71c6ec6b2c60bb89e2c802674546f3a0786cd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createStyledTextStyleGroup ()", "signatureAfterChange": " \tvoid createStyledTextStyleGroup ()", "diff": ["-\t\tstyledTextStyleGroup.setLayout (new GridLayout(5, false));", "+\t\tstyledTextStyleGroup.setLayout (new GridLayout(7, false));", "+\t\tunderlineImage = createBitmapImage (display, \"underline\");", "+\t\tstrikeoutImage = createBitmapImage (display, \"strikeout\");", "-\t\tdata.horizontalSpan = 5;", "+\t\tdata.horizontalSpan = 7;", "-\t\tboldButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tPoint sel = styledText.getSelectionRange();", "-\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "-\t\t\t\tStyleRange style;", "-\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "-\t\t\t\t\tif (range == null) {style = new StyleRange(i, 1, null, null, SWT.BOLD);}", "-\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.BOLD);}", "-\t\t\t\t\tstyledText.setStyleRange(style);", "-\t\t\t\t}", "-\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);", "-\t\t\t}", "-\t\t});", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Underline\"));", "+\t\tunderlineButton = new Button (styledTextStyleGroup, SWT.PUSH);", "+\t\tunderlineButton.setImage (underlineImage);", "-\t\titalicButton.addSelectionListener(new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tPoint sel = styledText.getSelectionRange();", "-\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "-\t\t\t\tStyleRange style;", "-\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "-\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "-\t\t\t\t\tif (range == null) {style = new StyleRange(i, 1, null, null, SWT.ITALIC);}", "-\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.ITALIC);}", "-\t\t\t\t\tstyledText.setStyleRange(style);", "-\t\t\t\t}", "-\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);", "-\t\t\t}", "-\t\t});", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Strikeout\"));", "+\t\tstrikeoutButton = new Button (styledTextStyleGroup, SWT.PUSH);", "+\t\tstrikeoutButton.setImage (strikeoutImage);", "+\t\tSelectionListener styleListener = new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tPoint sel = styledText.getSelectionRange();", "+\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "+\t\t\t\tStyleRange style;", "+\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "+\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "+\t\t\t\t\tif (range != null) {", "+\t\t\t\t\t\tstyle = (StyleRange)range.clone();", "+\t\t\t\t\t\tstyle.start = i;", "+\t\t\t\t\t\tstyle.length = 1;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstyle = new StyleRange(i, 1, null, null, SWT.NORMAL);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (e.widget == boldButton) {", "+\t\t\t\t\t\tstyle.fontStyle ^= SWT.BOLD;", "+\t\t\t\t\t} else if (e.widget == italicButton) {", "+\t\t\t\t\t\tstyle.fontStyle ^= SWT.ITALIC;\t\t\t\t\t\t", "+\t\t\t\t\t} else if (e.widget == underlineButton) {", "+\t\t\t\t\t\tstyle.underline = !style.underline;", "+\t\t\t\t\t} else if (e.widget == strikeoutButton) {", "+\t\t\t\t\t\tstyle.strikeout = !style.strikeout;", "+\t\t\t\t\t}", "+\t\t\t\t\tstyledText.setStyleRange(style);", "+\t\t\t\t}", "+\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);\t\t\t", "+\t\t\t}", "+\t\t};", "-\t\t\t\tColor fg, bg;", "+\t\t\t\tColor fg = null, bg = null;", "-\t\t\t\t\tbg = null;", "-\t\t\t\t\tfg = null;", "-\t\t\t\t} else {", "-\t\t\t\t\tfg = bg = null;", "-\t\t\t\t\tif (range == null) {", "-\t\t\t\t\t\tstyle = new StyleRange(i, 1, fg, bg, SWT.NORMAL);", "-\t\t\t\t\t}", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tif (range.foreground != null) fg = range.foreground;", "-\t\t\t\t\t\tif (range.background != null) bg = range.background;", "-\t\t\t\t\t\tstyle = new StyleRange(i, 1, fg, bg, range.fontStyle);", "+\t\t\t\t\tif (range != null) {", "+\t\t\t\t\t\tstyle = (StyleRange)range.clone();", "+\t\t\t\t\t\tstyle.start = i;", "+\t\t\t\t\t\tstyle.length = 1;", "+\t\t\t\t\t\tstyle.foreground = style.foreground != null ? null : fg;", "+\t\t\t\t\t\tstyle.background = style.background != null ? null : bg;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tstyle = new StyleRange (i, 1, fg, bg, SWT.NORMAL);", "+\t\tboldButton.addSelectionListener(styleListener);", "+\t\titalicButton.addSelectionListener(styleListener);", "+\t\tunderlineButton.addSelectionListener(styleListener);", "+\t\tstrikeoutButton.addSelectionListener(styleListener);", "+\t\t\t\tunderlineImage.dispose();", "+\t\t\t\tstrikeoutImage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6b4d360d2c13304f9bfc4f58a61ef2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "810eb254cbe71a3e1637e56f044fa70b981eb39d", "commitAfterChange": "803bd538f4c4c40e1d60df10cb6937bfea9dab26", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 82, "signatureBeforeChange": " boolean setItemSize()", "signatureAfterChange": " boolean setItemSize(GC gc)", "diff": ["-boolean setItemSize() {", "+boolean setItemSize(GC gc) {", "-\txClient = borderLeft + marginWidth + highlight_margin;", "-\tif (onBottom) {", "-\t\tyClient = borderTop + highlight_margin + marginHeight;", "-\t} else {", "-\t\tyClient = borderTop + tabHeight + highlight_header + marginHeight; ", "-\t}", "+", "+\tRectangle trim = renderer.computeTrim(CTabFolderRenderer.PART_HEADER, SWT.NONE, 0, 0, 0, 0);", "+\tint borderRight = trim.width + trim.x;", "+\tint borderLeft = -trim.x;", "+\t", "-\t\t\tGC gc = new GC(this);", "-\t\t\tint width = tab.preferredWidth(gc, true, false);", "-\t\t\tgc.dispose();", "-\t\t\twidth = Math.min(width, getRightItemEdge() - borderLeft);", "+\t\t\tint width = renderer.computeSize(selectedIndex, SWT.SELECTED, gc).x;", "+\t\t\twidth = Math.min(width, getRightItemEdge(gc) - borderLeft);", "-\t\t\t\t\ttab.closeRect.width = BUTTON_SIZE;", "-\t\t\t\t\ttab.closeRect.height = BUTTON_SIZE;", "+\t\t\t\t\tPoint closeSize = renderer.computeSize(selectedIndex, SWT.SELECTED, gc);", "+\t\t\t\t\ttab.closeRect.width = closeSize.x;", "+\t\t\t\t\ttab.closeRect.height = closeSize.y;", "-\tGC gc = new GC(this);", "-\tif (showMin) tabAreaWidth -= BUTTON_SIZE;", "-\tif (showMax) tabAreaWidth -= BUTTON_SIZE;", "+\tif (showMin) tabAreaWidth -= renderer.computeSize(CTabFolderRenderer.PART_MIN_BUTTON, SWT.NONE, gc).x;", "+\tif (showMax) tabAreaWidth -= renderer.computeSize(CTabFolderRenderer.PART_MAX_BUTTON, SWT.NONE, gc).x;", "-\tif (!simple) tabAreaWidth -= curveWidth - 2*curveIndent;", "-\t", "+", "-\t\tminWidths[index] = items[index].preferredWidth(gc, index == selectedIndex, true);", "+\t\tint state = CTabFolderRenderer.MINIMUM_SIZE;", "+\t\tif (index == selectedIndex) state |= SWT.SELECTED;", "+\t\tminWidths[index] = renderer.computeSize(index, state, gc).x;", "-\t\tif (showChevron) tabAreaWidth -= 3*BUTTON_SIZE/2;", "+\t\tif (showChevron) tabAreaWidth -= renderer.computeSize(CTabFolderRenderer.PART_CHEVRON_BUTTON, SWT.NONE, gc).x;", "-\t\t\tmaxWidths[i] = items[i].preferredWidth(gc, i == selectedIndex, false);", "+\t\t\tint state = 0;", "+\t\t\tif (i == selectedIndex) state |= SWT.SELECTED;", "+\t\t\tmaxWidths[i] = renderer.computeSize(i, state, gc).x;", "-\tgc.dispose();", "-\t\t\t\t\ttab.closeRect.width = BUTTON_SIZE;", "-\t\t\t\t\ttab.closeRect.height = BUTTON_SIZE;", "+\t\t\t\t\tPoint closeSize = renderer.computeSize(CTabFolderRenderer.PART_CLOSE_BUTTON, SWT.NONE, gc);", "+\t\t\t\t\ttab.closeRect.width = closeSize.x;", "+\t\t\t\t\ttab.closeRect.height = closeSize.y;"]}], "num": 27266}