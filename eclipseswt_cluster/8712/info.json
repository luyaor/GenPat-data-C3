{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14a04ee6c184eaa1b99458a33cc65496", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9b30d76ea8130ff12685a6e470a9945", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "9abc23faabf8b5bcd4e6b6e2275455ee69e4f44d", "commitAfterChange": "d73a02e12c986cd7d019bde2d5ae081d9675824b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tvoid drawImage (Image image, Color color)", "signatureAfterChange": " \t \tImage fontImage (Font font)", "diff": ["-\tvoid drawImage (Image image, Color color) {", "+\t", "+\tImage fontImage (Font font) {", "+\t\tImage image = new Image (display, IMAGE_SIZE, IMAGE_SIZE);", "+\t\tGC gc = new GC(image);", "+\t\tRectangle bounds = image.getBounds();", "+\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_WHITE));", "+\t\tgc.fillRectangle(0, 0, bounds.width, bounds.height);", "+\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));", "+\t\tgc.drawRectangle(0, 0, bounds.width - 1, bounds.height - 1);", "+\t\tFontData data[] = font.getFontData();", "+\t\tint style = data[0].getStyle();", "+\t\tswitch (style) {", "+\t\tcase SWT.NORMAL:", "+\t\t\tgc.drawLine(3, 3, 3, 8);", "+\t\t\tgc.drawLine(4, 3, 7, 8);", "+\t\t\tgc.drawLine(8, 3, 8, 8);", "+\t\t\tbreak;", "+\t\tcase SWT.BOLD:", "+\t\t\tgc.drawLine(3, 2, 3, 9);", "+\t\t\tgc.drawLine(4, 2, 4, 9);", "+\t\t\tgc.drawLine(5, 2, 7, 2);", "+\t\t\tgc.drawLine(5, 3, 8, 3);", "+\t\t\tgc.drawLine(5, 5, 7, 5);", "+\t\t\tgc.drawLine(5, 6, 7, 6);", "+\t\t\tgc.drawLine(5, 8, 8, 8);", "+\t\t\tgc.drawLine(5, 9, 7, 9);", "+\t\t\tgc.drawLine(7, 4, 8, 4);", "+\t\t\tgc.drawLine(7, 7, 8, 7);", "+\t\t\tbreak;", "+\t\tcase SWT.ITALIC:", "+\t\t\tgc.drawLine(6, 2, 8, 2);", "+\t\t\tgc.drawLine(7, 3, 4, 8);", "+\t\t\tgc.drawLine(3, 9, 5, 9);", "+\t\t\tbreak;", "+\t\tcase SWT.BOLD | SWT.ITALIC:", "+\t\t\tgc.drawLine(5, 2, 8, 2);", "+\t\t\tgc.drawLine(5, 3, 8, 3);", "+\t\t\tgc.drawLine(6, 4, 4, 7);", "+\t\t\tgc.drawLine(7, 4, 5, 7);", "+\t\t\tgc.drawLine(3, 8, 6, 8);", "+\t\t\tgc.drawLine(3, 9, 6, 9);", "+\t\t\tbreak;", "+\t\t}", "+\t\tgc.dispose();", "+\t\treturn image;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8af9e7afb4c37dd06b329ab994e4153b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_clone()", "signatureAfterChange": "  public void test_clone()", "diff": ["-\twarnUnimpl(\"Test test_clone not written\");", "+\tInputStream stream = null;", "+\ttry {", "+\t\tstream = SwtTestCase.class.getResourceAsStream(SwtTestCase.imageFilenames[0] + \".\" + SwtTestCase.imageFormats[0]);", "+\t\tImageLoader loader = new ImageLoader();", "+\t\tImageData data1 = loader.load(stream)[0];", "+\t\tImageData data2 = (ImageData) data1.clone();", "+\t\t// imageData does not implement an equals(Object) method", "+\t\tassertEquals(\":a:\", data1.alpha, data2.alpha);", "+\t\tassertEquals(\":b:\", data1.alphaData, data2.alphaData);", "+\t\tassertEquals(\":c:\", data1.bytesPerLine, data2.bytesPerLine);", "+\t\tassertEquals(\":d:\", data1.data, data2.data);", "+\t\tassertEquals(\":e:\", data1.delayTime, data2.delayTime);", "+\t\tassertEquals(\":f:\", data1.depth, data2.depth);", "+\t\tassertEquals(\":g:\", data1.disposalMethod, data2.disposalMethod);", "+\t\tassertEquals(\":h:\", data1.height, data2.height);", "+\t\tassertEquals(\":i:\", data1.maskData, data2.maskData);", "+\t\tassertEquals(\":j:\", data1.maskPad, data2.maskPad);", "+\t\tassertEquals(\":k:\", data1.palette, data2.palette);", "+\t\tassertEquals(\":l:\", data1.scanlinePad, data2.scanlinePad);", "+\t\tassertEquals(\":m:\", data1.transparentPixel, data2.transparentPixel);", "+\t\tassertEquals(\":n:\", data1.type, data2.type);", "+\t\tassertEquals(\":o:\", data1.width, data2.width);", "+\t\tassertEquals(\":p:\", data1.x, data2.x);", "+\t\tassertEquals(\":q:\", data1.y, data2.y);", "+\t} finally {", "+\t\ttry {", "+\t\t\tstream.close();", "+\t\t} catch (Exception e) {", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b44e827471b2c6796cae941e38f5bd48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "603a45f7eb3ac6d507869451321a13384caeb656", "commitAfterChange": "83cf88d4fdbc88e6a753967c01ef504fbfef45f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test_getNextOffset()", "signatureAfterChange": " public void test_getNextOffset()", "diff": ["+\tassertEquals(4, layout.getNextOffset(2, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(4, layout.getNextOffset(3, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(9, layout.getNextOffset(8, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(14, layout.getNextOffset(10, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(14, layout.getNextOffset(13, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(14, layout.getNextOffset(14, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(0, layout.getPreviousOffset(0, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(0, layout.getPreviousOffset(4, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(4, layout.getPreviousOffset(5, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(9, layout.getPreviousOffset(10, SWT.MOVEMENT_WORD_END));", "+\tassertEquals(9, layout.getPreviousOffset(11, SWT.MOVEMENT_WORD_END));", "+\toffset = 0;", "+\tassertEquals(5, layout.getNextOffset(2, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(5, layout.getNextOffset(4, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(10, layout.getNextOffset(9, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(14, layout.getNextOffset(10, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(14, layout.getNextOffset(13, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(14, layout.getNextOffset(14, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(0, layout.getPreviousOffset(0, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(0, layout.getPreviousOffset(3, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(0, layout.getPreviousOffset(4, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(0, layout.getPreviousOffset(5, SWT.MOVEMENT_WORD_START));", "+\tassertEquals(5, layout.getPreviousOffset(6, SWT.MOVEMENT_WORD_START));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4e13ef8c4ca552c8a377f6491b9659", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "57f622faa0149851e15aa3fb09d20bed6fe19df9", "commitAfterChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void test_getSegments()", "signatureAfterChange": " public void test_getSegments()", "diff": ["-\t//int[][] segments = {null, {0,1,2}, {0,0,1,2}, {0,1,1,2}, {0,1,2,2}};", "-\tint[][] segments = {null, {0,1,2}};", "+\tint[][] segments = {null, {0,1,2}, {0,0,1,2}, {0,1,1,2}, {0,1,2,2}};", "+\t", "+\t// Bug 241482 comment 74", "+\tlayout.setText(\"word word word\");", "+\tlayout.setSegments(new int[] {0, 5, 10});", "+\tint offset = 0;", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(5, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(10, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(14, offset);", "+", "+\tlayout.setWidth(layout.getBounds().width / 2);", "+\tlayout.setAscent(20);", "+\tlayout.setDescent(6);", "+\toffset = 0;", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(5, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(10, offset);", "+\toffset = layout.getNextOffset(offset, SWT.MOVEMENT_WORD_START);", "+\tassertEquals(14, offset);", "+\tlayout.setWidth(-1);", "+", "+", "+\t//Lina's bug (bug 241482, comment 37)", "+\tboolean doit = false; //known to be broken", "+\tif (doit) {", "+\t\tint length = layout.getText().length();", "+\t\tlayout.setSegments(new int[] { length});", "+\t\tint[] trailing = new int [1];", "+\t\tint width = layout.getBounds().width + 20;", "+\t\tassertEquals(\"hit test to the left\", 0, layout.getOffset(0, 0, trailing));", "+\t\tassertEquals(\"hit test to the left (trailing)\", 0, trailing[0]);", "+\t\tassertEquals(\"hit test to the right\", length - 1, layout.getOffset(width, 0, trailing));", "+\t\tassertEquals(\"hit test to the right (trailing)\", 1, trailing[0]);", "+\t\tlayout.setSegmentsChars(new char[] { '*' });", "+\t\tassertEquals(\"hit test to the left\", 0, layout.getOffset(0, 0, trailing));", "+\t\tassertEquals(\"hit test to the left (trailing)\", 0, trailing[0]);", "+\t\tassertEquals(\"hit test to the right\", length - 1, layout.getOffset(width, 0, trailing));", "+\t\tassertEquals(\"hit test to the right (trailing)\", 1, trailing[0]);", "+\t}", "+\t"]}], "num": 8712}