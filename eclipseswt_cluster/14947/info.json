{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c44393ba13bb1f054ef2cd0c2b0c952", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c81709cb82df853271bb88ead981e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "f817d34150035d0860329767e1206c1ab75fd9fe", "commitAfterChange": "81aca485ef9d8730e0f9544960edb57a0f6bf82b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void setTabList (Control [] tabList)", "signatureAfterChange": " public void setTabList (Control [] tabList)", "diff": ["+\tcheckWidget ();", "+\tif (tabList != null) {", "+\t\tfor (int i=0; i<tabList.length; i++) {", "+\t\t\tControl control = tabList [i];", "+\t\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented.", "+\t\t\t* Tab lists are currently only supported", "+\t\t\t* for the direct children of a composite.", "+\t\t\t*/", "+//\t\t\tShell shell = control.getShell ();", "+//\t\t\twhile (control != shell && control != this) {", "+//\t\t\t\tcontrol = control.parent;", "+//\t\t\t}", "+//\t\t\tif (control != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t}", "+\t\tControl [] newList = new Control [tabList.length];", "+\t\tSystem.arraycopy (tabList, 0, newList, 0, tabList.length);", "+\t\ttabList = newList;", "+\t} ", "+\tthis.tabList = tabList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9a49a11461d07770510abc47ea493c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "0ad0a601d34f9b89eab0eb65f5e8c1953894af48", "commitAfterChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setTabList (Control [] tabList)", "signatureAfterChange": " public void setTabList (Control [] tabList)", "diff": ["-\tif (tabList == null) error (SWT.ERROR_NULL_ARGUMENT);", "-    /* AW", "-\tint [] argList1 = new int [] {OS.XmNnavigationType, OS.XmTAB_GROUP};", "-\tControl [] children = _getChildren ();", "-\tfor (int i=0; i<children.length; i++) {", "-\t\tControl control = children [i];", "-\t\tOS.XtSetValues (control.handle, argList1, argList1.length / 2);", "-\t}", "-\tint [] argList2 = new int [] {OS.XmNnavigationType, OS.XmEXCLUSIVE_TAB_GROUP};", "-\tfor (int i=0; i<tabList.length; i++) {", "-        */", "-\t\t/*", "-\t\t* Set the XmNnavigationType twice, once to clear the", "-\t\t* old value and once to set the new.  If the old value", "-\t\t* is not cleared, Motif detects that the values are the", "-\t\t* same and does not change the tab order.", "-\t\t*/", "-\t\t/* AW", "-\t\tControl control = tabList [i];", "-\t\tOS.XtSetValues (control.handle, argList1, argList1.length / 2);", "-\t\tOS.XtSetValues (control.handle, argList2, argList2.length / 2);", "-\t}", "-\t*/", "+\tif (tabList != null) {", "+\t\tfor (int i=0; i<tabList.length; i++) {", "+\t\t\tControl control = tabList [i];", "+\t\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented.", "+\t\t\t* Tab lists are currently only supported", "+\t\t\t* for the direct children of a composite.", "+\t\t\t*/", "+//\t\t\tShell shell = control.getShell ();", "+//\t\t\twhile (control != shell && control != this) {", "+//\t\t\t\tcontrol = control.parent;", "+//\t\t\t}", "+//\t\t\tif (control != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t}", "+\t\tControl [] newList = new Control [tabList.length];", "+\t\tSystem.arraycopy (tabList, 0, newList, 0, tabList.length);", "+\t\ttabList = newList;", "+\t} ", "+\tthis.tabList = tabList;"]}], "num": 14947}