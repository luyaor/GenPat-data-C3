{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f50d4ed1b6bbe86c8f32829ffa11e53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c91ed3c10b8f26b86e0875b22ddfea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "14078c6cea0024a7d7d4c528de3a2899fd9c76c1", "commitAfterChange": "52dc36005eb42a7e878496dc9577c07df2612e30", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t\t\t\tpublic void run()", "signatureAfterChange": " void handleFocus (int type)", "diff": ["+void handleFocus (int type) {", "+\tif (isDisposed()) return;", "+\tswitch (type) {", "+\t\tcase SWT.FocusIn: {", "+\t\t\tif (hasFocus) return;", "+\t\t\tif (getEditable ()) text.selectAll ();", "+\t\t\thasFocus = true;", "+\t\t\tShell shell = getShell ();", "+\t\t\tshell.removeListener(SWT.Deactivate, listener);", "+\t\t\tshell.addListener(SWT.Deactivate, listener);", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tdisplay.removeFilter(SWT.FocusIn, filter);", "+\t\t\tdisplay.addFilter(SWT.FocusIn, filter);", "+\t\t\tEvent e = new Event();", "+\t\t\tnotifyListeners(SWT.FocusIn, e);", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.FocusOut: {", "+\t\t\tif (!hasFocus) return;", "+\t\t\tControl focusControl = getDisplay().getFocusControl();", "+\t\t\tif (focusControl == arrow || focusControl == list || focusControl == text) return;", "+\t\t\thasFocus = false;", "+\t\t\tShell shell = getShell ();", "+\t\t\tshell.removeListener(SWT.Deactivate, listener);", "+\t\t\tDisplay display = getDisplay();", "+\t\t\tdisplay.removeFilter(SWT.FocusIn, filter);", "+\t\t\tEvent e = new Event();", "+\t\t\tnotifyListeners(SWT.FocusOut, e);", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+}", "-\t\t\tevent.display.asyncExec(new Runnable() {", "-\t\t\t\tpublic void run() {", "-\t\t\t\t\tif (CCombo.this.isDisposed()) return;", "-\t\t\t\t\tControl focusControl = getDisplay().getFocusControl();", "-\t\t\t\t\tif (focusControl == arrow || focusControl == list || focusControl == text) return;", "-\t\t\t\t\thasFocus = false;", "-\t\t\t\t\tEvent e = new Event();", "-\t\t\t\t\tnotifyListeners(SWT.FocusOut, e);", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8bed2df998746dcaa3069fc6b2d8488", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a950d59cad36be3ba2dfe58ad8c3d4ffa9d627e", "commitAfterChange": "7af48bb9f090f0eca9c603b9f05937ffc4d0e7d9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\tif ((selected || findImageControl () == null) && !ignoreDrawSelection && !ignoreDrawBackground) {", "+\t\t\t\tboolean hot = explorerTheme && (nmcd.uItemState & OS.CDIS_HOT) != 0;", "+\t\t\t\tif ((selected || hot) && !ignoreDrawSelection && !ignoreDrawBackground) {", "-\t\t\t\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;", "-\t\t\t\t\t\tif (selected || hot) {", "-\t\t\t\t\t\t\tRECT pRect = new RECT ();", "-\t\t\t\t\t\t\tOS.SetRect (pRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "-\t\t\t\t\t\t\t\tint totalWidth = 0;", "-\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "-\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "-\t\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "-\t\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "-\t\t\t\t\t\t\t\t\ttotalWidth += hdItem.cxy;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (totalWidth > clientRect.right - clientRect.left) {", "-\t\t\t\t\t\t\t\t\tpRect.left = 0;", "-\t\t\t\t\t\t\t\t\tpRect.right = totalWidth;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tpRect.left = clientRect.left;", "-\t\t\t\t\t\t\t\t\tpRect.right = clientRect.right;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tRECT pRect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (pRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\tint totalWidth = 0;", "+\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "+\t\t\t\t\t\t\t\ttotalWidth += hdItem.cxy;", "-\t\t\t\t\t\t\tdraw = false;", "-\t\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\t\t\t\tint iStateId = selected ? OS.TREIS_SELECTED : OS.TREIS_HOT;", "-\t\t\t\t\t\t\tif (OS.GetFocus () != handle && selected && !hot) iStateId = OS.TREIS_SELECTEDNOTFOCUS;", "-\t\t\t\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.TVP_TREEITEM, iStateId, pRect, pClipRect);\t", "-\t\t\t\t\t\t\tOS.CloseThemeData (hTheme);", "+\t\t\t\t\t\t\tif (totalWidth > clientRect.right - clientRect.left) {", "+\t\t\t\t\t\t\t\tpRect.left = 0;", "+\t\t\t\t\t\t\t\tpRect.right = totalWidth;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tpRect.left = clientRect.left;", "+\t\t\t\t\t\t\t\tpRect.right = clientRect.right;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tdraw = false;", "+\t\t\t\t\t\tint hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "+\t\t\t\t\t\tint iStateId = selected ? OS.TREIS_SELECTED : OS.TREIS_HOT;", "+\t\t\t\t\t\tif (OS.GetFocus () != handle && selected && !hot) iStateId = OS.TREIS_SELECTEDNOTFOCUS;", "+\t\t\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.TVP_TREEITEM, iStateId, pRect, pClipRect);\t", "+\t\t\t\t\t\tOS.CloseThemeData (hTheme);", "-\t\t\t\t\tdrawItem = drawText = drawBackground = true;", "-\t\t\t\t\trect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\trect.left += 2;", "-\t\t\t\t\tif (linesVisible) {", "-\t\t\t\t\t\trect.right++;", "-\t\t\t\t\t\trect.bottom++;", "+\t\t\t\t\tif (explorerTheme) {", "+\t\t\t\t\t\tif (OS.IsWindowEnabled (handle)) {", "+\t\t\t\t\t\t\tImage image = null;", "+\t\t\t\t\t\t\tif (index == 0) {", "+\t\t\t\t\t\t\t\timage = item.image;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tImage [] images  = item.images;", "+\t\t\t\t\t\t\t\tif (images != null) image = images [index];", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (image != null) {", "+\t\t\t\t\t\t\t\tRectangle bounds = image.getBounds ();", "+\t\t\t\t\t\t\t\tif (size == null) size = getImageSize ();", "+\t\t\t\t\t\t\t\tif (!ignoreDrawForeground) {", "+\t\t\t\t\t\t\t\t\tGCData data = new GCData();", "+\t\t\t\t\t\t\t\t\tdata.device = display;", "+\t\t\t\t\t\t\t\t\tGC gc = GC.win32_new (hDC, data);", "+\t\t\t\t\t\t\t\t\tRECT iconRect = item.getBounds (index, false, true, false, false, true, hDC);", "+\t\t\t\t\t\t\t\t\tgc.setClipping (iconRect.left, iconRect.top, iconRect.right - iconRect.left, iconRect.bottom - iconRect.top);", "+\t\t\t\t\t\t\t\t\tgc.drawImage (image, 0, 0, bounds.width, bounds.height, iconRect.left, iconRect.top, size.x, size.y);", "+\t\t\t\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);", "+\t\t\t\t\t\t\t\t\tgc.dispose ();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tdrawItem = drawText = drawBackground = true;", "+\t\t\t\t\t\trect = item.getBounds (index, true, false, false, false, true, hDC);", "+\t\t\t\t\t\trect.left += 2;", "+\t\t\t\t\t\tif (linesVisible) {", "+\t\t\t\t\t\t\trect.right++;", "+\t\t\t\t\t\t\trect.bottom++;", "+\t\t\t\t\t\t}"]}], "num": 11109}