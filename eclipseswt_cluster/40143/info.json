{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b577384c3e4cd7d1bbe323606855409a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74655db243258075f35801da178183ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 254, "methodNumberAfterChange": 259, "signatureBeforeChange": " void setCaretLocation(Point location, int direction)", "signatureAfterChange": " void setCaretLocation(Point location, int direction)", "diff": ["+}", "-\tif (caret != null) {", "+\tif (caret != null) {\t\t", "+\t\tif (!isFixedLineHeight()) {", "+\t\t\tint caretLine = content.getLineAtOffset(caretOffset);", "+\t\t\tint lineOffset = content.getOffsetAtLine(caretLine);", "+\t\t\tString text = content.getLine(caretLine);", "+\t\t\tTextLayout layout = renderer.getTextLayout(text, lineOffset);", "+\t\t\tint lineInParagraph = layout.getLineIndex(caretOffset - lineOffset);", "+\t\t\tint caretHeight = layout.getLineBounds(lineInParagraph).height - lineSpacing;", "+\t\t\trenderer.disposeTextLayout(layout);", "+\t\t\tcaret.setSize(0, caretHeight);", "+\t\t\tif (caretHeight != lineHeight) {", "+\t\t\t\tdirection = SWT.DEFAULT;", "+\t\t\t}", "+\t\t}", "-\t\t}\t\t", "-\t\tcaret.setLocation(location);", "-\t\tif (direction != caretDirection || !fixedLineHeight) {", "-\t\t\tint height;", "-\t\t\tif (fixedLineHeight) {", "-\t\t\t\theight = lineHeight;", "-\t\t\t} else {", "-\t\t\t\tint caretLine = content.getLineAtOffset(caretOffset);", "-\t\t\t\tif (!wordWrap) {", "-\t\t\t\t\theight = lineCache.getLineHeight(caretLine);", "-\t\t\t\t} else {", "-\t\t\t\t\tint lineOffset = content.getOffsetAtLine(caretLine);", "-\t\t\t\t\tString text = content.getLine(caretLine);", "-\t\t\t\t\tTextLayout layout = renderer.getTextLayout(text, lineOffset);", "-\t\t\t\t\tint lineInParagraph = layout.getLineIndex(caretOffset - lineOffset);", "-\t\t\t\t\theight = layout.getLineBounds(lineInParagraph).height;", "-\t\t\t\t\trenderer.disposeTextLayout(layout);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tcaret.setSize(caret.getSize().x, height);", "+\t\tcaret.setLocation(location);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02571dd9fe393d7a97436f058aa20b4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "cc500238418d38b85dc837cf8469541ca5f69f28", "commitAfterChange": "5381f36cd2ee3ebae345f390df5e1c6d63d37a50", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "\r \r boolean translateTraversal (MSG msg)", "signatureAfterChange": "\r \r boolean translateTraversal (MSG msg)", "diff": ["-\tint detail = 0;\r", "+\tint detail = SWT.TRAVERSE_NONE;\r", "-\tif (all || hooks (SWT.Traverse)) {\r", "-\t\tEvent event = new Event ();\r", "-\t\tevent.doit = doit;\r", "-\t\tevent.detail = detail;\r", "-\t\tDisplay display = getDisplay ();\r", "-\t\tdisplay.lastKey = lastKey;\r", "-\t\tdisplay.lastAscii = lastAscii;\r", "-\t\tdisplay.lastVirtual = lastVirtual;\r", "-\t\tif (!setKeyState (event, SWT.Traverse)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tShell shell = getShell ();\r", "-\t\tControl control = this;\r", "-\t\tdo {\r", "-\t\t\t/*\r", "-\t\t\t* It is possible (but unlikely), that application\r", "-\t\t\t* code could have disposed the widget in the traverse\r", "-\t\t\t* event.  If this happens, return true to stop further\r", "-\t\t\t* event processing.\r", "-\t\t\t*/\t\r", "-\t\t\tcontrol.sendEvent (SWT.Traverse, event);\r", "-\t\t\tif (control.isDisposed ()) return true;\r", "-\t\t\tdoit = event.doit;\r", "-\t\t\tdetail = event.detail;\r", "-\t\t\tif (control == shell) break;\r", "-\t\t\tcontrol = control.parent;\r", "-\t\t} while (all && doit);\r", "+\tEvent event = new Event ();\r", "+\tevent.doit = doit;\r", "+\tevent.detail = detail;\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.lastKey = lastKey;\r", "+\tdisplay.lastAscii = lastAscii;\r", "+\tdisplay.lastVirtual = lastVirtual;\r", "+\tif (!setKeyState (event, SWT.Traverse)) {\r", "+\t\treturn false;\r", "-\tif (doit) return traverse (detail);\r", "+\tShell shell = getShell ();\r", "+\tControl control = this;\r", "+\tdo {\r", "+\t\tif (control.traverse (event)) return true;\r", "+\t\tif (control == shell) return false;\r", "+\t\tcontrol = control.parent;\r", "+\t} while (all && control != null);\r", "+\treturn false;\r", "+}\r"]}], "num": 40143}