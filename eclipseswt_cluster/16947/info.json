{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9136c0634906697004df7420195ca495", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa5ce0344ed50ae549f19febe565ba9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 66, "signatureBeforeChange": " void doPageUp (int stateMask)", "signatureAfterChange": " void onPageUp (int stateMask)", "diff": ["-}", "-void doPageUp (int stateMask) {", "-\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\t/* PageUp with no modifiers */", "-\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "-\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tshowItem (item);", "-\t\tredrawItem (item.availableIndex, true);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "-\t\t/* CTRL+Shift+PageUp */", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem (availableItems [newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* Shift+PageUp */", "-\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "-\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\t\tselectItem (item, false);", "-\t\t\tsetFocusItem (item, true);", "-\t\t\tshowItem (item);", "-\t\t\tredrawItem (item.availableIndex, true);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+PageUp */", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem (availableItems [newTopIndex]);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t/* CTRL+PageUp */", "-\t\tif (focusItem.availableIndex != topIndex) {", "-\t\t\t/* move focus to top item in viewport */", "-\t\t\tsetFocusItem (availableItems [topIndex], true);", "-\t\t\tredrawItem (topIndex, true);", "-\t\t} else {", "-\t\t\t/* at top of viewport, so set focus to top item one page up */", "-\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount);", "-\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "-\t\t\tshowItem (availableItems [newFocusIndex]);", "-\t\t\tredrawItem (newFocusIndex, true);", "-\t\t}", "-\t\treturn;", "-\t}", "-\t/* Shift+PageUp */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint selectIndex;", "-\tif (focusItem.availableIndex != topIndex) {", "-\t\t/* select from focus to top item in viewport */", "-\t\tselectIndex = topIndex;", "-\t} else {", "-\t\t/* already at top of viewport, so select to top of one page up */", "-\t\tselectIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;", "-\t}", "-\tTreeItem selectedItem = availableItems [selectIndex];", "-\tTreeItem[] newSelection = new TreeItem [Math.abs (anchorIndex - selectIndex) + 1];", "-\tint step = anchorIndex < selectIndex ? 1 : -1;", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "-\t\tnewSelection [writeIndex++] = availableItems [i];", "-\t}", "-\tnewSelection [writeIndex] = availableItems [selectIndex];", "-\tsetSelection (newSelection);", "-\tsetFocusItem (selectedItem, true);", "-\tshowItem (selectedItem);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+}", "+void onPageUp (int stateMask) {", "+\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "+\t\t/* PageUp with no modifiers */", "+\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "+\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tshowItem (item);", "+\t\tredrawItem (item.availableIndex, true);", "+\t\treturn;", "+\t}", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "+\t\t/* CTRL+Shift+PageUp */", "+\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem (availableItems [newTopIndex]);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* Shift+PageUp */", "+\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\t\tselectItem (item, false);", "+\t\t\tsetFocusItem (item, true);", "+\t\t\tshowItem (item);", "+\t\t\tredrawItem (item.availableIndex, true);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+PageUp */", "+\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem (availableItems [newTopIndex]);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t/* CTRL+PageUp */", "+\t\tif (focusItem.availableIndex != topIndex) {", "+\t\t\t/* move focus to top item in viewport */", "+\t\t\tsetFocusItem (availableItems [topIndex], true);", "+\t\t\tredrawItem (topIndex, true);", "+\t\t} else {", "+\t\t\t/* at top of viewport, so set focus to top item one page up */", "+\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\t\tshowItem (availableItems [newFocusIndex]);", "+\t\t\tredrawItem (newFocusIndex, true);", "+\t\t}", "+\t\treturn;", "+\t}", "+\t/* Shift+PageUp */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex;", "+\tif (focusItem.availableIndex != topIndex) {", "+\t\t/* select from focus to top item in viewport */", "+\t\tselectIndex = topIndex;", "+\t} else {", "+\t\t/* already at top of viewport, so select to top of one page up */", "+\t\tselectIndex = Math.max (0, topIndex - visibleItemCount);", "+\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;", "+\t}", "+\tTreeItem selectedItem = availableItems [selectIndex];", "+\tTreeItem[] newSelection = new TreeItem [Math.abs (anchorIndex - selectIndex) + 1];", "+\tint step = anchorIndex < selectIndex ? 1 : -1;", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "+\t\tnewSelection [writeIndex++] = availableItems [i];", "+\t}", "+\tnewSelection [writeIndex] = availableItems [selectIndex];", "+\tsetSelection (newSelection);", "+\tsetFocusItem (selectedItem, true);", "+\tshowItem (selectedItem);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26454dd89d5d781dd490370477698696", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 65, "signatureBeforeChange": " void doPageDown (int stateMask)", "signatureAfterChange": " void onPageDown (int stateMask)", "diff": ["-}", "-void doPageDown (int stateMask) {", "-\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\t/* PageDown with no modifiers */", "-\t\tint newFocusIndex = focusItem.availableIndex + visibleItemCount - 1;", "-\t\tnewFocusIndex = Math.min (newFocusIndex, availableItems.length - 1);", "-\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tshowItem (item);", "-\t\tredrawItem (item.availableIndex, true);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "-\t\t/* CTRL+Shift+PageDown */", "-\t\tint newTopIndex = topIndex + visibleItemCount;", "-\t\tnewTopIndex = Math.min (newTopIndex, availableItems.length - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem (availableItems [newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* Shift+PageDown */", "-\t\t\tint newFocusIndex = focusItem.availableIndex + visibleItemCount - 1;", "-\t\t\tnewFocusIndex = Math.min (newFocusIndex, availableItems.length - 1);", "-\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\t\tTreeItem item = availableItems [newFocusIndex];", "-\t\t\tselectItem (item, false);", "-\t\t\tsetFocusItem (item, true);", "-\t\t\tshowItem (item);", "-\t\t\tredrawItem (item.availableIndex, true);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+PageDown */", "-\t\tint newTopIndex = topIndex + visibleItemCount;", "-\t\tnewTopIndex = Math.min (newTopIndex, availableItems.length - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem (availableItems [newTopIndex]);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t/* CTRL+PageDown */", "-\t\tint bottomIndex = Math.min (topIndex + visibleItemCount - 1, availableItems.length - 1);", "-\t\tif (focusItem.availableIndex != bottomIndex) {", "-\t\t\t/* move focus to bottom item in viewport */", "-\t\t\tsetFocusItem (availableItems [bottomIndex], true);", "-\t\t\tredrawItem (bottomIndex, true);", "-\t\t} else {", "-\t\t\t/* at bottom of viewport, so set focus to bottom item one page down */", "-\t\t\tint newFocusIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "-\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "-\t\t\tshowItem (availableItems [newFocusIndex]);", "-\t\t\tredrawItem (newFocusIndex, true);", "-\t\t}", "-\t\treturn;", "-\t}", "-\t/* Shift+PageDown */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint bottomIndex = Math.min (topIndex + visibleItemCount - 1, availableItems.length - 1);", "-\tint selectIndex;", "-\tif (focusItem.availableIndex != bottomIndex) {", "-\t\t/* select from focus to bottom item in viewport */", "-\t\tselectIndex = bottomIndex;", "-\t} else {", "-\t\t/* already at bottom of viewport, so select to bottom of one page down */", "-\t\tselectIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "-\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;", "-\t}", "-\tTreeItem selectedItem = availableItems [selectIndex];", "-\tTreeItem[] newSelection = new TreeItem [Math.abs (anchorIndex - selectIndex) + 1];", "-\tint step = anchorIndex < selectIndex ? 1 : -1;", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "-\t\tnewSelection [writeIndex++] = availableItems [i];", "-\t}", "-\tnewSelection [writeIndex] = availableItems [selectIndex];", "-\tsetSelection (newSelection);", "-\tsetFocusItem (selectedItem, true);", "-\tshowItem (selectedItem);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+}", "+void onPageDown (int stateMask) {", "+\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "+\t\t/* PageDown with no modifiers */", "+\t\tint newFocusIndex = focusItem.availableIndex + visibleItemCount - 1;", "+\t\tnewFocusIndex = Math.min (newFocusIndex, availableItems.length - 1);", "+\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tshowItem (item);", "+\t\tredrawItem (item.availableIndex, true);", "+\t\treturn;", "+\t}", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "+\t\t/* CTRL+Shift+PageDown */", "+\t\tint newTopIndex = topIndex + visibleItemCount;", "+\t\tnewTopIndex = Math.min (newTopIndex, availableItems.length - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem (availableItems [newTopIndex]);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* Shift+PageDown */", "+\t\t\tint newFocusIndex = focusItem.availableIndex + visibleItemCount - 1;", "+\t\t\tnewFocusIndex = Math.min (newFocusIndex, availableItems.length - 1);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tTreeItem item = availableItems [newFocusIndex];", "+\t\t\tselectItem (item, false);", "+\t\t\tsetFocusItem (item, true);", "+\t\t\tshowItem (item);", "+\t\t\tredrawItem (item.availableIndex, true);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+PageDown */", "+\t\tint newTopIndex = topIndex + visibleItemCount;", "+\t\tnewTopIndex = Math.min (newTopIndex, availableItems.length - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem (availableItems [newTopIndex]);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t/* CTRL+PageDown */", "+\t\tint bottomIndex = Math.min (topIndex + visibleItemCount - 1, availableItems.length - 1);", "+\t\tif (focusItem.availableIndex != bottomIndex) {", "+\t\t\t/* move focus to bottom item in viewport */", "+\t\t\tsetFocusItem (availableItems [bottomIndex], true);", "+\t\t\tredrawItem (bottomIndex, true);", "+\t\t} else {", "+\t\t\t/* at bottom of viewport, so set focus to bottom item one page down */", "+\t\t\tint newFocusIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tsetFocusItem (availableItems [newFocusIndex], true);", "+\t\t\tshowItem (availableItems [newFocusIndex]);", "+\t\t\tredrawItem (newFocusIndex, true);", "+\t\t}", "+\t\treturn;", "+\t}", "+\t/* Shift+PageDown */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint bottomIndex = Math.min (topIndex + visibleItemCount - 1, availableItems.length - 1);", "+\tint selectIndex;", "+\tif (focusItem.availableIndex != bottomIndex) {", "+\t\t/* select from focus to bottom item in viewport */", "+\t\tselectIndex = bottomIndex;", "+\t} else {", "+\t\t/* already at bottom of viewport, so select to bottom of one page down */", "+\t\tselectIndex = Math.min (availableItems.length - 1, bottomIndex + visibleItemCount);", "+\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;", "+\t}", "+\tTreeItem selectedItem = availableItems [selectIndex];", "+\tTreeItem[] newSelection = new TreeItem [Math.abs (anchorIndex - selectIndex) + 1];", "+\tint step = anchorIndex < selectIndex ? 1 : -1;", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "+\t\tnewSelection [writeIndex++] = availableItems [i];", "+\t}", "+\tnewSelection [writeIndex] = availableItems [selectIndex];", "+\tsetSelection (newSelection);", "+\tsetFocusItem (selectedItem, true);", "+\tshowItem (selectedItem);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}], "num": 16947}