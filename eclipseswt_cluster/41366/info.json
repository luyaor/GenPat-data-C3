{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "774b3c4f1df04fa7128af818b406ce5c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b277c7866f8eea20bf882084446d4339", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "71ea2af4a199f874b508a4573479cf30b5363533", "commitAfterChange": "ff728216ba9172f5729c76260f5a331c8419aa50", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t\tSWT.error(SWT.ERROR_NO_HANDLES, null, \" [Unknown mozilla path]\");", "+\t\t\tSWT.error(SWT.ERROR_NO_HANDLES, null, \" [Unknown mozilla path]\"); //$NON-NLS-1$", "-\t\t", "-//\t\tString filename = mozillaPath+\"/libgtkembedmoz.so\\0\";", "-//\t\tString libname = \"libgtk-1.2.so.0\\0\";", "-//\t\tboolean isGTK12 = false;", "-//\t\ttry {", "-//\t\t\tisGTK12 = XPCOM.isDependent(filename.getBytes(\"UTF-8\"), libname.getBytes(\"UTF-8\"));", "-//\t\t} catch (UnsupportedEncodingException e) {", "-//\t\t}", "-//\t\tif (isGTK12) {", "-//\t\t\tSWT.error(SWT.ERROR_NO_HANDLES, null, \" [INCOMPATIBLE MOZILLA GTK1.2 DETECTED. MUST INSTALL MOZILLA GTK2.]\");\t\t\t\t", "-//\t\t}", "+", "+\t\t/*", "+\t\t* Note.  Embedding a Mozilla GTK1.2 causes a crash.  The workaround", "+\t\t* is to check the version of GTK used by Mozilla by looking for", "+\t\t* the libwidget_gtk.so library used by Mozilla GTK1.2. Mozilla GTK2", "+\t\t* uses the libwidget_gtk2.so library.   ", "+\t\t*/", "+\t\tFile file = new File(mozillaPath, \"components/libwidget_gtk.so\"); //$NON-NLS-1$", "+\t\tif (file.exists()) {", "+\t\t\tSWT.error(SWT.ERROR_NO_HANDLES, null, \" [Mozilla GTK2 required (GTK1.2 detected)]\"); //$NON-NLS-1$\t\t\t\t\t\t\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c348cd6ce4b45716df1b317b4ca5a43c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "36e64893324aed478d030f7598a602621a5bcfe8", "commitAfterChange": "534780413e6ae17f100718b437459385b1a7c041", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\tbrowserCount++;", "-\tif (browserCount == 1) {", "+\tif (browserCount == 0) {", "+\t\ttry {", "+\t\t\tLibrary.loadLibrary (\"swt-mozilla\"); //$NON-NLS-1$", "+\t\t} catch (UnsatisfiedLinkError e) {", "+\t\t\tdispose();", "+\t\t\tSWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t}", "+\t\t", "-\t\tif (mozillaPath == null) throw new SWTError(XPCOM.errorMsg(XPCOM.NS_ERROR_FAILURE));", "+\t\tif (mozillaPath == null) {", "+\t\t\tdispose();", "+\t\t\tSWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t}", "-\t\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "-\t\tlocalFile.Release(); ", "+\t\tlocalFile.Release();", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tlocProvider.Release();", "+\t\t\tlocProvider = null;", "+\t\t\tdispose();", "+\t\t\tSWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t}", "+\tbrowserCount++;"]}], "num": 41366}