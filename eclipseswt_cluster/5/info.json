{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1551715a3e5f3ddfbeff8a5062030ee1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4875a3d29248a7a6a24425a9559d5a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c2e5c64fa87cfa0b743787ab3aab15475f91a858", "commitAfterChange": "67d9ca7e27e6eb82fa90d30cd3be710a772bdfe3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["-\tint controlRight = rect.right;", "+\tif (drawBackground) {", "+\t\tdrawBackground = false;", "+\t\tRegion region = null;", "+\t\tif ((style & SWT.CHECK) != 0 || gridWidth != 0) {", "+\t\t\tregion = new Region (display);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tint headerHeight = getHeaderHeight ();", "+\t\t\tclientArea.y += headerHeight;", "+\t\t\tclientArea.height -= headerHeight;", "+\t\t\tregion.add (clientArea);", "+\t\t\tint rgn = OS.NewRgn();", "+\t\t\tif ((style & SWT.CHECK) != 0) {", "+\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, Table.CHECK_COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.left, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (gridWidth != 0) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, Table.COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, columns[i].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.DisposeRgn (rgn);", "+\t\t}", "+\t\tif (region != null) gc.setClipping (region);", "+\t\tfillBackground (handle, gc.handle, null);", "+\t\tif (region != null) {", "+\t\t\tgc.setClipping ((Rectangle)null);", "+\t\t\tregion.dispose ();", "+\t\t}", "+\t}", "-\tboolean focused = false;", "-\tControl control = findBackgroundControl ();", "-\tboolean controlBackground = control != null && (control.background != null || control.backgroundImage != null);", "-\tboolean itemBackground = item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null);", "-\tif (controlBackground || itemBackground) {", "-\t\tif (itemBackground || !OS.HIVIEW) {", "-\t\t\tgc.setBackground (item.getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\t} else {", "-\t\t\tRectangle bounds = new Rectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\t\tfillBackground (handle, gc.handle, bounds);", "-\t\t\tif (columnCount == 0 || columnCount - 1 == columnIndex) {", "-\t\t\t\tbounds.x = itemX + itemWidth + gridWidth;", "-\t\t\t\tbounds.width = controlRight - itemX;", "-\t\t\t\tfillBackground (handle, gc.handle, bounds);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t\tif (focused) event.detail |= SWT.FOCUSED;", "-\t\tfocused = (event.detail & SWT.FOCUSED) != 0;", "-\t\tif (selected && (style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tif ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {", "-\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);", "-\t\t\t}", "-\t\t}", "-\t\tif (image != null) {", "-\t\t\tgc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, x, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);", "-\t\t\tx += this.imageBounds.width + gap;", "-\t\t}", "-\t\tif (selected) {", "-\t\t\tif (columnIndex == 0 && (style & SWT.FULL_SELECTION) == 0) {", "-\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {", "-\t\t\t\t\tgc.fillRectangle (x - 1, y, extent.x + 2, itemHeight - 1);", "-\t\t\t\t}", "+\t\tint stringX = x, imageX = x;", "+\t\tif (image != null) stringX += this.imageBounds.width + gap;", "+\t\tif (selected && ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ())) {", "+\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);", "+\t\t\t} else if (columnIndex == 0) {", "+\t\t\t\tgc.fillRectangle (stringX - 1, y, extent.x + 2, itemHeight - 1);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null)) {", "+\t\t\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\tgc.drawString (text, x, y + (height - extent.y) / 2, true);", "+\t\tif (image != null) {", "+\t\t\tgc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, imageX, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);", "+\t\t}", "+\t\tgc.drawString (text, stringX, y + (height - extent.y) / 2, true);", "-\t\tif (focused) event.detail |= SWT.FOCUSED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8be490064b524f9edcdaa3c08b4a0eef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c2e5c64fa87cfa0b743787ab3aab15475f91a858", "commitAfterChange": "67d9ca7e27e6eb82fa90d30cd3be710a772bdfe3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["-\tint controlRight = rect.right;", "+\tif (drawBackground) {", "+\t\tdrawBackground = false;", "+\t\tRegion region = null;", "+\t\tif ((style & SWT.CHECK) != 0 || gridWidth != 0) {", "+\t\t\tregion = new Region (display);", "+\t\t\tRectangle clientArea = getClientArea ();", "+\t\t\tint headerHeight = getHeaderHeight ();", "+\t\t\tclientArea.y += headerHeight;", "+\t\t\tclientArea.height -= headerHeight;", "+\t\t\tregion.add (clientArea);", "+\t\t\tint rgn = OS.NewRgn();", "+\t\t\tif ((style & SWT.CHECK) != 0) {", "+\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, Table.CHECK_COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.left, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (gridWidth != 0) {", "+\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, Table.COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, id, columns[i].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\t\tOS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));", "+\t\t\t\t\t\t\tOS.DiffRgn (region.handle, rgn, region.handle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.DisposeRgn (rgn);", "+\t\t}", "+\t\tif (region != null) gc.setClipping (region);", "+\t\tfillBackground (handle, gc.handle, null);", "+\t\tif (region != null) {", "+\t\t\tgc.setClipping ((Rectangle)null);", "+\t\t\tregion.dispose ();", "+\t\t}", "+\t}", "-\tboolean focused = false;", "-\tControl control = findBackgroundControl ();", "-\tboolean controlBackground = control != null && (control.background != null || control.backgroundImage != null);", "-\tboolean itemBackground = item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null);", "-\tif (controlBackground || itemBackground) {", "-\t\tif (itemBackground || !OS.HIVIEW) {", "-\t\t\tgc.setBackground (item.getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\t} else {", "-\t\t\tRectangle bounds = new Rectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\t\tfillBackground (handle, gc.handle, bounds);", "-\t\t\tif (columnCount == 0 || columnCount - 1 == columnIndex) {", "-\t\t\t\tbounds.x = itemX + itemWidth + gridWidth;", "-\t\t\t\tbounds.width = controlRight - itemX;", "-\t\t\t\tfillBackground (handle, gc.handle, bounds);", "-\t\t\t}", "-\t\t}", "-\t}", "-\t\tif (focused) event.detail |= SWT.FOCUSED;", "-\t\tfocused = (event.detail & SWT.FOCUSED) != 0;", "-\t\tif (selected && (style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tif ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {", "-\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);", "-\t\t\t}", "-\t\t}", "-\t\tif (image != null) {", "-\t\t\tgc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, x, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);", "-\t\t\tx += this.imageBounds.width + gap;", "-\t\t}", "-\t\tif (selected) {", "-\t\t\tif (columnIndex == 0 && (style & SWT.FULL_SELECTION) == 0) {", "-\t\t\t\tif ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {", "-\t\t\t\t\tgc.fillRectangle (x - 1, y, extent.x + 2, itemHeight - 1);", "-\t\t\t\t}", "+\t\tint stringX = x, imageX = x;", "+\t\tif (image != null) stringX += this.imageBounds.width + gap;", "+\t\tif (selected && ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ())) {", "+\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);", "+\t\t\t} else if (columnIndex == 0) {", "+\t\t\t\tgc.fillRectangle (stringX - 1, y, extent.x + 2, itemHeight - 1);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null)) {", "+\t\t\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\t\t\tgc.fillRectangle (itemX, itemY, itemWidth, itemHeight);", "-\t\tgc.drawString (text, x, y + (height - extent.y) / 2, true);", "+\t\tif (image != null) {", "+\t\t\tgc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, imageX, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);", "+\t\t}", "+\t\tgc.drawString (text, stringX, y + (height - extent.y) / 2, true);", "-\t\tif (focused) event.detail |= SWT.FOCUSED;"]}], "num": 5}