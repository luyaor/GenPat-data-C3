{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63d567acdedde7565156e8f395a314a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d72efe5a9781649ed4e83d11613dbf27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "447dc13aedb5b734fa5967d09039d0879d387091", "commitAfterChange": "55b1424764e39b9136b8d04de6c87a5aea15c2ba", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void setItemSizes (Point [] sizes)", "signatureAfterChange": "\r void setItemSizes (Point [] sizes)", "diff": ["-\tif (sizes.length != count) error (SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (sizes.length != count) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\tRECT rect = new RECT ();\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDBORDERS, i, rect);\r", "-\t\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "-\t\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "-\t\r", "-\t\t/* Get the child size fields first so we don't overwrite them. */\r", "-\t\trbBand.fMask = OS.RBBIM_CHILDSIZE;\r", "-\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "-\t\t\r", "-\t\t/* Set the size fields we are currently modifying. */\r", "-\t\trbBand.fMask = OS.RBBIM_CHILDSIZE | OS.RBBIM_SIZE | OS.RBBIM_IDEALSIZE;\r", "-\t\tint width = sizes [i].x, height = sizes [i].y;\r", "-\t\trbBand.cx = width;\r", "-\t\trbBand.cxIdeal = width - rect.left - rect.right;\r", "-\t\trbBand.cyChild = rbBand.cyMinChild = rbBand.cyMaxChild = height;\r", "-\t\tOS.SendMessage (handle, OS.RB_SETBANDINFO, i, rbBand);\r", "+\t\titems [i].setSize (sizes [i].x, sizes [i].y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "433c4ff407621d794813765fbb047e00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "\r public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\r", "-\t/* Get the size of the trimmings */\r", "-\tboolean hasMenu = ((bits & OS.WS_CHILD) == 0) && (OS.GetMenu (handle) != 0);\r", "-\tOS.AdjustWindowRectEx (rect, bits, hasMenu, OS.GetWindowLong (handle, OS.GWL_EXSTYLE));\r", "-\r", "-\t/* Get the size of the scroll bars */\r", "+\tOS.AdjustWindowRectEx (rect, bits, false, OS.GetWindowLong (handle, OS.GWL_EXSTYLE));\r", "-\r", "-\t/* Get the height of the menu bar */\r", "-\tif (hasMenu) {\r", "-\t\tRECT testRect = new RECT ();\r", "-\t\tOS.SetRect (testRect, 0, 0, rect.right - rect.left, rect.bottom - rect.top);\r", "-\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, testRect);\r", "-\t\twhile ((testRect.bottom - testRect.top) < height) {\r", "-\t\t\trect.top -= OS.GetSystemMetrics (OS.SM_CYMENU) - OS.GetSystemMetrics (OS.SM_CYBORDER);\r", "-\t\t\tOS.SetRect(testRect, 0, 0, rect.right - rect.left, rect.bottom - rect.top);\r", "-\t\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, testRect);\r", "-\t\t}\r", "-\t}\r", "-\treturn new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);\r", "+\tint nWidth = rect.right - rect.left, nHeight = rect.bottom - rect.top;\r", "+\treturn new Rectangle (rect.left, rect.top, nWidth, nHeight);\r"]}], "num": 4529}