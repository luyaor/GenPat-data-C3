{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3578eafb4ec56678517f5e536882a67", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932ee8be1f6a940fea98507db6ec251a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createControlWidgets ()", "signatureAfterChange": "\r \tvoid createControlWidgets ()", "diff": ["-*/\r", "-void createControlWidgets () {\r", "-\r", "-\t/* Create the combo */\r", "-\tString [] strings = {\r", "-\t\tresControls.getString(\"ColorDialog\"), \r", "-\t\tresControls.getString(\"DirectoryDialog\"),\r", "-\t\tresControls.getString(\"FileDialog\"),\r", "-\t\tresControls.getString(\"FontDialog\"),\r", "-\t\tresControls.getString(\"MessageBox\"),\r", "-\t};\r", "-\tdialogCombo = new Combo (dialogStyleGroup, SWT.READ_ONLY);\r", "-\tdialogCombo.setItems (strings);\r", "-\tdialogCombo.setText (strings [0]);\r", "-\r", "-\t/* Create the create dialog button */\r", "-\tButton createButton = new Button(dialogStyleGroup, SWT.NULL);\r", "-\tcreateButton.setText (resControls.getString(\"Create_Dialog\"));\r", "-\tcreateButton.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_CENTER));\r", "-\r", "-\t/* Create a group for the various dialog button style controls */\r", "-\tGroup buttonStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tbuttonStyleGroup.setLayout (new GridLayout ());\r", "-\tbuttonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tbuttonStyleGroup.setText (resControls.getString(\"Button_Styles\"));\r", "-\r", "-\t/* Create the button style buttons */\r", "-\tokButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tokButton.setText (resControls.getString(\"SWT_OK\"));\r", "-\tcancelButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tcancelButton.setText (resControls.getString(\"SWT_CANCEL\"));\r", "-\tyesButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tyesButton.setText (resControls.getString(\"SWT_YES\"));\r", "-\tnoButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tnoButton.setText (resControls.getString(\"SWT_NO\"));\r", "-\tretryButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tretryButton.setText (resControls.getString(\"SWT_RETRY\"));\r", "-\tabortButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tabortButton.setText (resControls.getString(\"SWT_ABORT\"));\r", "-\tignoreButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tignoreButton.setText (resControls.getString(\"SWT_IGNORE\"));\r", "-\r", "-\t/* Create a group for the icon style controls */\r", "-\tGroup iconStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\ticonStyleGroup.setLayout (new GridLayout ());\r", "-\ticonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ticonStyleGroup.setText (resControls.getString(\"Icon_Styles\"));\r", "-\r", "-\t/* Create the icon style buttons */\r", "-\ticonErrorButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonErrorButton.setText (resControls.getString(\"SWT_ICON_ERROR\"));\r", "-\ticonInformationButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonInformationButton.setText (resControls.getString(\"SWT_ICON_INFORMATION\"));\r", "-\ticonQuestionButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonQuestionButton.setText (resControls.getString(\"SWT_ICON_QUESTION\"));\r", "-\ticonWarningButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonWarningButton.setText (resControls.getString(\"SWT_ICON_WARNING\"));\r", "-\ticonWorkingButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonWorkingButton.setText (resControls.getString(\"SWT_ICON_WORKING\"));\r", "-\r", "-\t/* Create a group for the modal style controls */\r", "-\tGroup modalStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tmodalStyleGroup.setLayout (new GridLayout ());\r", "-\tmodalStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tmodalStyleGroup.setText (resControls.getString(\"Modal_Styles\"));\r", "-\r", "-\t/* Create the modal style buttons */\r", "-\tmodelessButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tmodelessButton.setText (resControls.getString(\"SWT_MODELESS\"));\r", "-\tprimaryModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tprimaryModalButton.setText (resControls.getString(\"SWT_PRIMARY_MODAL\"));\r", "-\tapplicationModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tapplicationModalButton.setText (resControls.getString(\"SWT_APPLICATION_MODAL\"));\r", "-\tsystemModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tsystemModalButton.setText (resControls.getString(\"SWT_SYSTEM_MODAL\"));\r", "-\r", "-\t/* Create a group for the file dialog style controls */\r", "-\tGroup fileDialogStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tfileDialogStyleGroup.setLayout (new GridLayout ());\r", "-\tfileDialogStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tfileDialogStyleGroup.setText (resControls.getString(\"File_Dialog_Styles\"));\r", "-\r", "-\t/* Create the file dialog style buttons */\r", "-\tsaveButton = new Button (fileDialogStyleGroup, SWT.RADIO);\r", "-\tsaveButton.setText (resControls.getString(\"SWT_SAVE\"));\r", "-\topenButton = new Button(fileDialogStyleGroup, SWT.RADIO);\r", "-\topenButton.setText(resControls.getString(\"SWT_OPEN\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\tdialogCombo.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tdialogSelected (event);\r", "-\t\t};\r", "-\t});\r", "-\tcreateButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tcreateButtonSelected (event);\r", "-\t\t};\r", "-\t});\r", "-\tSelectionListener buttonStyleListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tbuttonStyleSelected (event);\r", "-\t\t};\r", "-\t};\r", "-\tokButton.addSelectionListener (buttonStyleListener);\r", "-\tcancelButton.addSelectionListener (buttonStyleListener);\r", "-\tyesButton.addSelectionListener (buttonStyleListener);\r", "-\tnoButton.addSelectionListener (buttonStyleListener);\r", "-\tretryButton.addSelectionListener (buttonStyleListener);\r", "-\tabortButton.addSelectionListener (buttonStyleListener);\r", "-\tignoreButton.addSelectionListener (buttonStyleListener);\r", "-\r", "-\t/* Set default values for style buttons */\r", "-\tokButton.setEnabled (false);\r", "-\tcancelButton.setEnabled (false);\r", "-\tyesButton.setEnabled (false);\r", "-\tnoButton.setEnabled (false);\r", "-\tretryButton.setEnabled (false);\r", "-\tabortButton.setEnabled (false);\r", "-\tignoreButton.setEnabled (false);\r", "-\ticonErrorButton.setEnabled (false);\r", "-\ticonInformationButton.setEnabled (false);\r", "-\ticonQuestionButton.setEnabled (false);\r", "-\ticonWarningButton.setEnabled (false);\r", "-\ticonWorkingButton.setEnabled (false);\r", "-\tsaveButton.setEnabled (false);\r", "-\topenButton.setEnabled (false);\r", "-\topenButton.setSelection (true);\r", "-\ticonInformationButton.setSelection (true);\r", "-\tmodelessButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createControlWidgets () {\r", "+\t\r", "+\t\t/* Create the combo */\r", "+\t\tString [] strings = {\r", "+\t\t\tinstance.getResourceString(\"ColorDialog\"), \r", "+\t\t\tinstance.getResourceString(\"DirectoryDialog\"),\r", "+\t\t\tinstance.getResourceString(\"FileDialog\"),\r", "+\t\t\tinstance.getResourceString(\"FontDialog\"),\r", "+\t\t\tinstance.getResourceString(\"MessageBox\"),\r", "+\t\t};\r", "+\t\tdialogCombo = new Combo (dialogStyleGroup, SWT.READ_ONLY);\r", "+\t\tdialogCombo.setItems (strings);\r", "+\t\tdialogCombo.setText (strings [0]);\r", "+\t\r", "+\t\t/* Create the create dialog button */\r", "+\t\tButton createButton = new Button(dialogStyleGroup, SWT.NULL);\r", "+\t\tcreateButton.setText (instance.getResourceString(\"Create_Dialog\"));\r", "+\t\tcreateButton.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_CENTER));\r", "+\t\r", "+\t\t/* Create a group for the various dialog button style controls */\r", "+\t\tGroup buttonStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tbuttonStyleGroup.setLayout (new GridLayout ());\r", "+\t\tbuttonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tbuttonStyleGroup.setText (instance.getResourceString(\"Button_Styles\"));\r", "+\t\r", "+\t\t/* Create the button style buttons */\r", "+\t\tokButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tokButton.setText (instance.getResourceString(\"SWT_OK\"));\r", "+\t\tcancelButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tcancelButton.setText (instance.getResourceString(\"SWT_CANCEL\"));\r", "+\t\tyesButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tyesButton.setText (instance.getResourceString(\"SWT_YES\"));\r", "+\t\tnoButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tnoButton.setText (instance.getResourceString(\"SWT_NO\"));\r", "+\t\tretryButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tretryButton.setText (instance.getResourceString(\"SWT_RETRY\"));\r", "+\t\tabortButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tabortButton.setText (instance.getResourceString(\"SWT_ABORT\"));\r", "+\t\tignoreButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tignoreButton.setText (instance.getResourceString(\"SWT_IGNORE\"));\r", "+\t\r", "+\t\t/* Create a group for the icon style controls */\r", "+\t\tGroup iconStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\ticonStyleGroup.setLayout (new GridLayout ());\r", "+\t\ticonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ticonStyleGroup.setText (instance.getResourceString(\"Icon_Styles\"));\r", "+\t\r", "+\t\t/* Create the icon style buttons */\r", "+\t\ticonErrorButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonErrorButton.setText (instance.getResourceString(\"SWT_ICON_ERROR\"));\r", "+\t\ticonInformationButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonInformationButton.setText (instance.getResourceString(\"SWT_ICON_INFORMATION\"));\r", "+\t\ticonQuestionButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonQuestionButton.setText (instance.getResourceString(\"SWT_ICON_QUESTION\"));\r", "+\t\ticonWarningButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonWarningButton.setText (instance.getResourceString(\"SWT_ICON_WARNING\"));\r", "+\t\ticonWorkingButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonWorkingButton.setText (instance.getResourceString(\"SWT_ICON_WORKING\"));\r", "+\t\r", "+\t\t/* Create a group for the modal style controls */\r", "+\t\tGroup modalStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tmodalStyleGroup.setLayout (new GridLayout ());\r", "+\t\tmodalStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tmodalStyleGroup.setText (instance.getResourceString(\"Modal_Styles\"));\r", "+\t\r", "+\t\t/* Create the modal style buttons */\r", "+\t\tmodelessButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tmodelessButton.setText (instance.getResourceString(\"SWT_MODELESS\"));\r", "+\t\tprimaryModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tprimaryModalButton.setText (instance.getResourceString(\"SWT_PRIMARY_MODAL\"));\r", "+\t\tapplicationModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tapplicationModalButton.setText (instance.getResourceString(\"SWT_APPLICATION_MODAL\"));\r", "+\t\tsystemModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tsystemModalButton.setText (instance.getResourceString(\"SWT_SYSTEM_MODAL\"));\r", "+\t\r", "+\t\t/* Create a group for the file dialog style controls */\r", "+\t\tGroup fileDialogStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tfileDialogStyleGroup.setLayout (new GridLayout ());\r", "+\t\tfileDialogStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tfileDialogStyleGroup.setText (instance.getResourceString(\"File_Dialog_Styles\"));\r", "+\t\r", "+\t\t/* Create the file dialog style buttons */\r", "+\t\tsaveButton = new Button (fileDialogStyleGroup, SWT.RADIO);\r", "+\t\tsaveButton.setText (instance.getResourceString(\"SWT_SAVE\"));\r", "+\t\topenButton = new Button(fileDialogStyleGroup, SWT.RADIO);\r", "+\t\topenButton.setText(instance.getResourceString(\"SWT_OPEN\"));\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tdialogCombo.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tdialogSelected (event);\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\tcreateButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tcreateButtonSelected (event);\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\tSelectionListener buttonStyleListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tbuttonStyleSelected (event);\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tokButton.addSelectionListener (buttonStyleListener);\r", "+\t\tcancelButton.addSelectionListener (buttonStyleListener);\r", "+\t\tyesButton.addSelectionListener (buttonStyleListener);\r", "+\t\tnoButton.addSelectionListener (buttonStyleListener);\r", "+\t\tretryButton.addSelectionListener (buttonStyleListener);\r", "+\t\tabortButton.addSelectionListener (buttonStyleListener);\r", "+\t\tignoreButton.addSelectionListener (buttonStyleListener);\r", "+\t\r", "+\t\t/* Set default values for style buttons */\r", "+\t\tokButton.setEnabled (false);\r", "+\t\tcancelButton.setEnabled (false);\r", "+\t\tyesButton.setEnabled (false);\r", "+\t\tnoButton.setEnabled (false);\r", "+\t\tretryButton.setEnabled (false);\r", "+\t\tabortButton.setEnabled (false);\r", "+\t\tignoreButton.setEnabled (false);\r", "+\t\ticonErrorButton.setEnabled (false);\r", "+\t\ticonInformationButton.setEnabled (false);\r", "+\t\ticonQuestionButton.setEnabled (false);\r", "+\t\ticonWarningButton.setEnabled (false);\r", "+\t\ticonWorkingButton.setEnabled (false);\r", "+\t\tsaveButton.setEnabled (false);\r", "+\t\topenButton.setEnabled (false);\r", "+\t\topenButton.setSelection (true);\r", "+\t\ticonInformationButton.setSelection (true);\r", "+\t\tmodelessButton.setSelection (true);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5137f0799f9c22568a69974ed2142147", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "3b350dd4c4b9460951698e03648662ba16994245", "commitAfterChange": "21e23b791a319e5180c60f1da8d0340d3dcffe74", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 73, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\toldX = closeRect.x;", "-\toldY = closeRect.y;", "-\toldWidth = closeRect.width;", "-\toldHeight = closeRect.height;", "-\tcloseRect.x = closeRect.y = closeRect.height = closeRect.width = 0;", "-\tif (showClose && single && selectedIndex != -1) {", "-\t\tcloseRect.x = size.x - borderRight - BUTTON_SIZE;", "-\t\tif (borderRight > 0) closeRect.x += 1; // align with first line of trim", "-\t\tif (single) closeRect.x -= 3;", "-\t\tcloseRect.y = onBottom ? size.y - borderBottom - tabHeight : borderTop + 1;", "-\t\tcloseRect.width = BUTTON_SIZE;", "-\t\tcloseRect.height = tabHeight;", "+\toldX = maxRect.x;", "+\toldY = maxRect.y;", "+\toldWidth = maxRect.width;", "+\toldHeight = maxRect.height;", "+\tmaxRect.x = maxRect.y = maxRect.width = maxRect.height = 0;", "+\tif (showMax) {", "+\t\tmaxRect.x = size.x - borderRight - BUTTON_SIZE;", "+\t\tif (borderRight > 0) maxRect.x += 1;", "+\t\tif (single) maxRect.x -= 3;", "+\t\tmaxRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tmaxRect.width = BUTTON_SIZE;", "+\t\tmaxRect.height = tabHeight;", "-\tif (oldX != closeRect.x || oldWidth != closeRect.width ||", "-\t    oldY != closeRect.y || oldHeight != closeRect.height) changed = true;", "+\tif (oldX != maxRect.x || oldWidth != maxRect.width ||", "+\t    oldY != maxRect.y || oldHeight != maxRect.height) changed = true;", "-\toldX = expandRect.x;", "-\toldY = expandRect.y;", "-\toldWidth = expandRect.width;", "-\toldHeight = expandRect.height;", "-\texpandRect.x = expandRect.y = expandRect.width = expandRect.height = 0;", "-\tif (showExpand) {", "-\t\texpandRect.x = size.x - borderRight - closeRect.width - BUTTON_SIZE;", "-\t\tif (borderRight > 0) expandRect.x += 1;", "-\t\tif (single) expandRect.x -= 3;", "-\t\texpandRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\texpandRect.width = BUTTON_SIZE;", "-\t\texpandRect.height = tabHeight;", "+\toldX = minRect.x;", "+\toldY = minRect.y;", "+\toldWidth = minRect.width;", "+\toldHeight = minRect.height;", "+\tminRect.x = minRect.y = minRect.width = minRect.height = 0;", "+\tif (showMin) {", "+\t\tminRect.x = size.x - borderRight - maxRect.width - BUTTON_SIZE;", "+\t\tif (borderRight > 0) minRect.x += 1;", "+\t\tif (single) minRect.x -= 3;", "+\t\tminRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tminRect.width = BUTTON_SIZE;", "+\t\tminRect.height = tabHeight;", "-\tif (oldX != expandRect.x || oldWidth != expandRect.width ||", "-\t    oldY != expandRect.y || oldHeight != expandRect.height) changed = true;", "+\tif (oldX != minRect.x || oldWidth != minRect.width ||", "+\t    oldY != minRect.y || oldHeight != minRect.height) changed = true;", "-\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x - 3);", "+\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t\ttopRightRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x;", "+\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x;", "-\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE - 3);", "+\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE - 3);", "-\t\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE;", "+\t\t\t\tchevronRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891fd2888f075b3ceeb285a60895dff9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "00d9a929233cc0e4c7aa22a7ff5b7562dd581371", "commitAfterChange": "82a169db2ad1731cac41b8c9102e1999ac7a1ef7", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "  int windowDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  int windowDelegateProc(int id, int sel, int arg0)", "diff": ["-\tif (sel == OS.sel_timerProc_1) {", "+\tif (sel == OS.sel_timerProc_) {", "-\tif (widget == null && (sel == OS.sel_keyDown_1 ||sel == OS.sel_keyUp_1 ||sel == OS.sel_insertText_1 ||sel == OS.sel_doCommandBySelector_1))  {", "+\tif (widget == null && (sel == OS.sel_keyDown_ ||sel == OS.sel_keyUp_ ||sel == OS.sel_insertText_ ||sel == OS.sel_doCommandBySelector_))  {", "-\tif (sel == OS.sel_windowWillClose_1) {", "+\tif (sel == OS.sel_windowWillClose_) {", "-\t} else if (sel == OS.sel_drawRect_1) {", "+\t} else if (sel == OS.sel_drawRect_) {", "-\t\twidget.drawRect(id, rect);", "-\t} else if (sel == OS.sel_setFrameOrigin_1) {", "+\t\twidget.drawRect(id, sel, rect);", "+\t} else if (sel == OS.sel_setFrameOrigin_) {", "-\t} else if (sel == OS.sel_setFrameSize_1) {", "+\t} else if (sel == OS.sel_setFrameSize_) {", "-\t} else if (sel == OS.sel_hitTest_1) {", "+\t} else if (sel == OS.sel_hitTest_) {", "-\t} else if (sel == OS.sel_windowShouldClose_1) {", "+\t} else if (sel == OS.sel_windowShouldClose_) {", "-\t} else if (sel == OS.sel_mouseDown_1) {", "+\t} else if (sel == OS.sel_mouseDown_) {", "-\t} else if (sel == OS.sel_keyDown_1) {", "+\t} else if (sel == OS.sel_keyDown_) {", "-\t} else if (sel == OS.sel_keyUp_1) {", "+\t} else if (sel == OS.sel_keyUp_) {", "-\t} else if (sel == OS.sel_flagsChanged_1) {", "+\t} else if (sel == OS.sel_flagsChanged_) {", "-\t} else if (sel == OS.sel_mouseUp_1) {", "+\t} else if (sel == OS.sel_mouseUp_) {", "-\t} else if (sel == OS.sel_rightMouseDown_1) {", "+\t} else if (sel == OS.sel_rightMouseDown_) {", "-\t} else if (sel == OS.sel_rightMouseUp_1) {", "+\t} else if (sel == OS.sel_rightMouseUp_) {", "-\t} else if (sel == OS.sel_otherMouseDown_1) {", "+\t} else if (sel == OS.sel_otherMouseDown_) {", "-\t} else if (sel == OS.sel_otherMouseUp_1) {", "+\t} else if (sel == OS.sel_otherMouseUp_) {", "-\t} else if (sel == OS.sel_mouseMoved_1) {", "+\t} else if (sel == OS.sel_mouseMoved_) {", "-\t} else if (sel == OS.sel_mouseDragged_1) {", "+\t} else if (sel == OS.sel_mouseDragged_) {", "-\t} else if (sel == OS.sel_mouseEntered_1) {", "+\t} else if (sel == OS.sel_mouseEntered_) {", "-\t} else if (sel == OS.sel_mouseExited_1) {", "+\t} else if (sel == OS.sel_mouseExited_) {", "-\t} else if (sel == OS.sel_menuForEvent_1) {", "+\t} else if (sel == OS.sel_menuForEvent_) {", "-\t} else if (sel == OS.sel_numberOfRowsInTableView_1) {", "+\t} else if (sel == OS.sel_numberOfRowsInTableView_) {", "-\t} else if (sel == OS.sel_comboBoxSelectionDidChange_1) {", "+\t} else if (sel == OS.sel_comboBoxSelectionDidChange_) {", "-\t} else if (sel == OS.sel_tableViewSelectionDidChange_1) {", "+\t} else if (sel == OS.sel_tableViewSelectionDidChange_) {", "-\t} else if (sel == OS.sel_windowDidResignKey_1) {", "+\t} else if (sel == OS.sel_windowDidResignKey_) {", "-\t} else if (sel == OS.sel_windowDidBecomeKey_1) {", "+\t} else if (sel == OS.sel_windowDidBecomeKey_) {", "-\t} else if (sel == OS.sel_windowDidResize_1) {", "+\t} else if (sel == OS.sel_windowDidResize_) {", "-\t} else if (sel == OS.sel_windowDidMove_1) {", "+\t} else if (sel == OS.sel_windowDidMove_) {", "-\t} else if (sel == OS.sel_menuWillOpen_1) {", "+\t} else if (sel == OS.sel_menuWillOpen_) {", "-\t} else if (sel == OS.sel_menuWillClose_1) {", "-\t\twidget.menuWillClose(arg0);", "-\t} else if (sel == OS.sel_menuNeedsUpdate_1) {", "+\t} else if (sel == OS.sel_menuDidClose_) {", "+\t\twidget.menuDidClose(arg0);", "+\t} else if (sel == OS.sel_menuNeedsUpdate_) {", "-\t} else if (sel == OS.sel_outlineViewSelectionDidChange_1) {", "+\t} else if (sel == OS.sel_outlineViewSelectionDidChange_) {", "-\t} else if (sel == OS.sel_sendEvent_1) {", "-\t\twidget.windowSendEvent(id, arg0);", "-\t} else if (sel == OS.sel_helpRequested_1) {", "+\t} else if (sel == OS.sel_sendEvent_) {", "+\t\twidget.windowSendEvent(id, sel, arg0);", "+\t} else if (sel == OS.sel_helpRequested_) {", "-\t} else if (sel == OS.sel_scrollWheel_1) {", "+\t} else if (sel == OS.sel_scrollWheel_) {", "-\t} else if (sel == OS.sel_pageDown_1) {", "+\t} else if (sel == OS.sel_pageDown_) {", "-\t} else if (sel == OS.sel_pageUp_1) {", "+\t} else if (sel == OS.sel_pageUp_) {", "-\t} else if (sel == OS.sel_textViewDidChangeSelection_1) {", "+\t} else if (sel == OS.sel_textViewDidChangeSelection_) {", "-\t} else if (sel == OS.sel_textDidChange_1) {", "+\t} else if (sel == OS.sel_textDidChange_) {", "-\t} else if (sel == OS.sel_attributedSubstringFromRange_1) {", "+\t} else if (sel == OS.sel_attributedSubstringFromRange_) {", "-\t} else if (sel == OS.sel_characterIndexForPoint_1) {", "+\t} else if (sel == OS.sel_characterIndexForPoint_) {", "-\t} else if (sel == OS.sel_firstRectForCharacterRange_1) {", "+\t} else if (sel == OS.sel_firstRectForCharacterRange_) {", "-\t} else if (sel == OS.sel_insertText_1) {", "+\t} else if (sel == OS.sel_insertText_) {", "-\t} else if (sel == OS.sel_doCommandBySelector_1) {", "+\t} else if (sel == OS.sel_doCommandBySelector_) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68b009c9b4644ff9183a96bbb7c1b134", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r void createControlWidgets ()", "signatureAfterChange": "\r \tvoid createControlWidgets ()", "diff": ["-*/\r", "-void createControlWidgets () {\r", "-\r", "-\t/* Create the combo */\r", "-\tString [] strings = {\r", "-\t\tresControls.getString(\"ColorDialog\"), \r", "-\t\tresControls.getString(\"DirectoryDialog\"),\r", "-\t\tresControls.getString(\"FileDialog\"),\r", "-\t\tresControls.getString(\"FontDialog\"),\r", "-\t\tresControls.getString(\"MessageBox\"),\r", "-\t};\r", "-\tdialogCombo = new Combo (dialogStyleGroup, SWT.READ_ONLY);\r", "-\tdialogCombo.setItems (strings);\r", "-\tdialogCombo.setText (strings [0]);\r", "-\r", "-\t/* Create the create dialog button */\r", "-\tButton createButton = new Button(dialogStyleGroup, SWT.NULL);\r", "-\tcreateButton.setText (resControls.getString(\"Create_Dialog\"));\r", "-\tcreateButton.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_CENTER));\r", "-\r", "-\t/* Create a group for the various dialog button style controls */\r", "-\tGroup buttonStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tbuttonStyleGroup.setLayout (new GridLayout ());\r", "-\tbuttonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tbuttonStyleGroup.setText (resControls.getString(\"Button_Styles\"));\r", "-\r", "-\t/* Create the button style buttons */\r", "-\tokButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tokButton.setText (resControls.getString(\"SWT_OK\"));\r", "-\tcancelButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tcancelButton.setText (resControls.getString(\"SWT_CANCEL\"));\r", "-\tyesButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tyesButton.setText (resControls.getString(\"SWT_YES\"));\r", "-\tnoButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tnoButton.setText (resControls.getString(\"SWT_NO\"));\r", "-\tretryButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tretryButton.setText (resControls.getString(\"SWT_RETRY\"));\r", "-\tabortButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tabortButton.setText (resControls.getString(\"SWT_ABORT\"));\r", "-\tignoreButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "-\tignoreButton.setText (resControls.getString(\"SWT_IGNORE\"));\r", "-\r", "-\t/* Create a group for the icon style controls */\r", "-\tGroup iconStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\ticonStyleGroup.setLayout (new GridLayout ());\r", "-\ticonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ticonStyleGroup.setText (resControls.getString(\"Icon_Styles\"));\r", "-\r", "-\t/* Create the icon style buttons */\r", "-\ticonErrorButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonErrorButton.setText (resControls.getString(\"SWT_ICON_ERROR\"));\r", "-\ticonInformationButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonInformationButton.setText (resControls.getString(\"SWT_ICON_INFORMATION\"));\r", "-\ticonQuestionButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonQuestionButton.setText (resControls.getString(\"SWT_ICON_QUESTION\"));\r", "-\ticonWarningButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonWarningButton.setText (resControls.getString(\"SWT_ICON_WARNING\"));\r", "-\ticonWorkingButton = new Button (iconStyleGroup, SWT.RADIO);\r", "-\ticonWorkingButton.setText (resControls.getString(\"SWT_ICON_WORKING\"));\r", "-\r", "-\t/* Create a group for the modal style controls */\r", "-\tGroup modalStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tmodalStyleGroup.setLayout (new GridLayout ());\r", "-\tmodalStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tmodalStyleGroup.setText (resControls.getString(\"Modal_Styles\"));\r", "-\r", "-\t/* Create the modal style buttons */\r", "-\tmodelessButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tmodelessButton.setText (resControls.getString(\"SWT_MODELESS\"));\r", "-\tprimaryModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tprimaryModalButton.setText (resControls.getString(\"SWT_PRIMARY_MODAL\"));\r", "-\tapplicationModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tapplicationModalButton.setText (resControls.getString(\"SWT_APPLICATION_MODAL\"));\r", "-\tsystemModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "-\tsystemModalButton.setText (resControls.getString(\"SWT_SYSTEM_MODAL\"));\r", "-\r", "-\t/* Create a group for the file dialog style controls */\r", "-\tGroup fileDialogStyleGroup = new Group (controlGroup, SWT.NULL);\r", "-\tfileDialogStyleGroup.setLayout (new GridLayout ());\r", "-\tfileDialogStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tfileDialogStyleGroup.setText (resControls.getString(\"File_Dialog_Styles\"));\r", "-\r", "-\t/* Create the file dialog style buttons */\r", "-\tsaveButton = new Button (fileDialogStyleGroup, SWT.RADIO);\r", "-\tsaveButton.setText (resControls.getString(\"SWT_SAVE\"));\r", "-\topenButton = new Button(fileDialogStyleGroup, SWT.RADIO);\r", "-\topenButton.setText(resControls.getString(\"SWT_OPEN\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\tdialogCombo.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tdialogSelected (event);\r", "-\t\t};\r", "-\t});\r", "-\tcreateButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tcreateButtonSelected (event);\r", "-\t\t};\r", "-\t});\r", "-\tSelectionListener buttonStyleListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tbuttonStyleSelected (event);\r", "-\t\t};\r", "-\t};\r", "-\tokButton.addSelectionListener (buttonStyleListener);\r", "-\tcancelButton.addSelectionListener (buttonStyleListener);\r", "-\tyesButton.addSelectionListener (buttonStyleListener);\r", "-\tnoButton.addSelectionListener (buttonStyleListener);\r", "-\tretryButton.addSelectionListener (buttonStyleListener);\r", "-\tabortButton.addSelectionListener (buttonStyleListener);\r", "-\tignoreButton.addSelectionListener (buttonStyleListener);\r", "-\r", "-\t/* Set default values for style buttons */\r", "-\tokButton.setEnabled (false);\r", "-\tcancelButton.setEnabled (false);\r", "-\tyesButton.setEnabled (false);\r", "-\tnoButton.setEnabled (false);\r", "-\tretryButton.setEnabled (false);\r", "-\tabortButton.setEnabled (false);\r", "-\tignoreButton.setEnabled (false);\r", "-\ticonErrorButton.setEnabled (false);\r", "-\ticonInformationButton.setEnabled (false);\r", "-\ticonQuestionButton.setEnabled (false);\r", "-\ticonWarningButton.setEnabled (false);\r", "-\ticonWorkingButton.setEnabled (false);\r", "-\tsaveButton.setEnabled (false);\r", "-\topenButton.setEnabled (false);\r", "-\topenButton.setSelection (true);\r", "-\ticonInformationButton.setSelection (true);\r", "-\tmodelessButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createControlWidgets () {\r", "+\t\r", "+\t\t/* Create the combo */\r", "+\t\tString [] strings = {\r", "+\t\t\tinstance.getResourceString(\"ColorDialog\"), \r", "+\t\t\tinstance.getResourceString(\"DirectoryDialog\"),\r", "+\t\t\tinstance.getResourceString(\"FileDialog\"),\r", "+\t\t\tinstance.getResourceString(\"FontDialog\"),\r", "+\t\t\tinstance.getResourceString(\"MessageBox\"),\r", "+\t\t};\r", "+\t\tdialogCombo = new Combo (dialogStyleGroup, SWT.READ_ONLY);\r", "+\t\tdialogCombo.setItems (strings);\r", "+\t\tdialogCombo.setText (strings [0]);\r", "+\t\r", "+\t\t/* Create the create dialog button */\r", "+\t\tButton createButton = new Button(dialogStyleGroup, SWT.NULL);\r", "+\t\tcreateButton.setText (instance.getResourceString(\"Create_Dialog\"));\r", "+\t\tcreateButton.setLayoutData (new GridData(GridData.HORIZONTAL_ALIGN_CENTER));\r", "+\t\r", "+\t\t/* Create a group for the various dialog button style controls */\r", "+\t\tGroup buttonStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tbuttonStyleGroup.setLayout (new GridLayout ());\r", "+\t\tbuttonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tbuttonStyleGroup.setText (instance.getResourceString(\"Button_Styles\"));\r", "+\t\r", "+\t\t/* Create the button style buttons */\r", "+\t\tokButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tokButton.setText (instance.getResourceString(\"SWT_OK\"));\r", "+\t\tcancelButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tcancelButton.setText (instance.getResourceString(\"SWT_CANCEL\"));\r", "+\t\tyesButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tyesButton.setText (instance.getResourceString(\"SWT_YES\"));\r", "+\t\tnoButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tnoButton.setText (instance.getResourceString(\"SWT_NO\"));\r", "+\t\tretryButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tretryButton.setText (instance.getResourceString(\"SWT_RETRY\"));\r", "+\t\tabortButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tabortButton.setText (instance.getResourceString(\"SWT_ABORT\"));\r", "+\t\tignoreButton = new Button (buttonStyleGroup, SWT.CHECK);\r", "+\t\tignoreButton.setText (instance.getResourceString(\"SWT_IGNORE\"));\r", "+\t\r", "+\t\t/* Create a group for the icon style controls */\r", "+\t\tGroup iconStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\ticonStyleGroup.setLayout (new GridLayout ());\r", "+\t\ticonStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ticonStyleGroup.setText (instance.getResourceString(\"Icon_Styles\"));\r", "+\t\r", "+\t\t/* Create the icon style buttons */\r", "+\t\ticonErrorButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonErrorButton.setText (instance.getResourceString(\"SWT_ICON_ERROR\"));\r", "+\t\ticonInformationButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonInformationButton.setText (instance.getResourceString(\"SWT_ICON_INFORMATION\"));\r", "+\t\ticonQuestionButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonQuestionButton.setText (instance.getResourceString(\"SWT_ICON_QUESTION\"));\r", "+\t\ticonWarningButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonWarningButton.setText (instance.getResourceString(\"SWT_ICON_WARNING\"));\r", "+\t\ticonWorkingButton = new Button (iconStyleGroup, SWT.RADIO);\r", "+\t\ticonWorkingButton.setText (instance.getResourceString(\"SWT_ICON_WORKING\"));\r", "+\t\r", "+\t\t/* Create a group for the modal style controls */\r", "+\t\tGroup modalStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tmodalStyleGroup.setLayout (new GridLayout ());\r", "+\t\tmodalStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tmodalStyleGroup.setText (instance.getResourceString(\"Modal_Styles\"));\r", "+\t\r", "+\t\t/* Create the modal style buttons */\r", "+\t\tmodelessButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tmodelessButton.setText (instance.getResourceString(\"SWT_MODELESS\"));\r", "+\t\tprimaryModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tprimaryModalButton.setText (instance.getResourceString(\"SWT_PRIMARY_MODAL\"));\r", "+\t\tapplicationModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tapplicationModalButton.setText (instance.getResourceString(\"SWT_APPLICATION_MODAL\"));\r", "+\t\tsystemModalButton = new Button (modalStyleGroup, SWT.RADIO);\r", "+\t\tsystemModalButton.setText (instance.getResourceString(\"SWT_SYSTEM_MODAL\"));\r", "+\t\r", "+\t\t/* Create a group for the file dialog style controls */\r", "+\t\tGroup fileDialogStyleGroup = new Group (controlGroup, SWT.NULL);\r", "+\t\tfileDialogStyleGroup.setLayout (new GridLayout ());\r", "+\t\tfileDialogStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tfileDialogStyleGroup.setText (instance.getResourceString(\"File_Dialog_Styles\"));\r", "+\t\r", "+\t\t/* Create the file dialog style buttons */\r", "+\t\tsaveButton = new Button (fileDialogStyleGroup, SWT.RADIO);\r", "+\t\tsaveButton.setText (instance.getResourceString(\"SWT_SAVE\"));\r", "+\t\topenButton = new Button(fileDialogStyleGroup, SWT.RADIO);\r", "+\t\topenButton.setText(instance.getResourceString(\"SWT_OPEN\"));\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tdialogCombo.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tdialogSelected (event);\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\tcreateButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tcreateButtonSelected (event);\r", "+\t\t\t};\r", "+\t\t});\r", "+\t\tSelectionListener buttonStyleListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tbuttonStyleSelected (event);\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tokButton.addSelectionListener (buttonStyleListener);\r", "+\t\tcancelButton.addSelectionListener (buttonStyleListener);\r", "+\t\tyesButton.addSelectionListener (buttonStyleListener);\r", "+\t\tnoButton.addSelectionListener (buttonStyleListener);\r", "+\t\tretryButton.addSelectionListener (buttonStyleListener);\r", "+\t\tabortButton.addSelectionListener (buttonStyleListener);\r", "+\t\tignoreButton.addSelectionListener (buttonStyleListener);\r", "+\t\r", "+\t\t/* Set default values for style buttons */\r", "+\t\tokButton.setEnabled (false);\r", "+\t\tcancelButton.setEnabled (false);\r", "+\t\tyesButton.setEnabled (false);\r", "+\t\tnoButton.setEnabled (false);\r", "+\t\tretryButton.setEnabled (false);\r", "+\t\tabortButton.setEnabled (false);\r", "+\t\tignoreButton.setEnabled (false);\r", "+\t\ticonErrorButton.setEnabled (false);\r", "+\t\ticonInformationButton.setEnabled (false);\r", "+\t\ticonQuestionButton.setEnabled (false);\r", "+\t\ticonWarningButton.setEnabled (false);\r", "+\t\ticonWorkingButton.setEnabled (false);\r", "+\t\tsaveButton.setEnabled (false);\r", "+\t\topenButton.setEnabled (false);\r", "+\t\topenButton.setSelection (true);\r", "+\t\ticonInformationButton.setSelection (true);\r", "+\t\tmodelessButton.setSelection (true);\r", "+\t}\r"]}], "num": 3184}