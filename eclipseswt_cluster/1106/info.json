{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b7b6856fd2cd423ac10dde6a92e3130", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b69e9f1c3dd3e5846aba1ce52d88a55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "22c78994f0ec6a28835def6220a4b518252d37e2", "commitAfterChange": "cbdd91157986b85a261cf2dcb490e1e504e3a9d3", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "-\t\t\tbreak;", "+\t\t\tsendSettings = true;", "+\t\t\t//FALL THROUGH", "+\t\t\t/*", "+\t\t\t* Bug in Windows.  When high contrast is cleared using", "+\t\t\t* the key sequence, Alt + Left Shift + Print Screen, the", "+\t\t\t* system parameter is set to false, but WM_SETTINGCHANGE", "+\t\t\t* is not sent with SPI_SETHIGHCONTRAST.  The fix is to", "+\t\t\t* detect the change when any WM_SETTINGCHANGE message", "+\t\t\t* is sent.", "+\t\t\t*/", "+\t\t\tif (lastHighContrast != getHighContrast ()) {", "+\t\t\t\tsendSettings = true;", "+\t\t\t\tlastHighContrast = getHighContrast ();", "+\t\t\t}", "-\t\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "-\t\t\t\tbreak;", "+\t\t\t\tsendSettings = true;", "-\t\t\t\tcase OS.SPI_SETHIGHCONTRAST:", "-\t\t\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "+\t\t\t\tcase OS.SPI_SETHIGHCONTRAST: {", "+\t\t\t\t\tsendSettings = true;", "+\t\t\t\t\tlastHighContrast = getHighContrast ();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t/* Set the initial timer or push the time out period forward */", "+\t\t\tif (sendSettings) {", "+\t\t\t\tOS.SetTimer (hwndMessage, SETTINGS_ID, SETTINGS_DELAY, 0);", "+\t\t\t\tsendSettings = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f23eb75400ded88b4888cf6e556b1b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d08e64c0824f1fa1ab40a95c5211499418af6357", "commitAfterChange": "41b9258099a895f4455cd3536c59b2fd7d83cc51", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  public void setMinimumSize (int width, int height)", "signatureAfterChange": "  public void setMinimumSize (int width, int height)", "diff": ["+\tminWidth = minHeight = 0;", "+\tif (width != SWT.DEFAULT) {", "+\t\twidth = Math.max (width, trimWidth ());", "+\t\tminWidth = width - trimWidth ();", "+\t}", "+\tif (height != SWT.DEFAULT) {", "+\t\theight = Math.max (height, trimHeight ());", "+\t\tminHeight = height - trimHeight ();", "+\t}", "-\tgeometry.min_width = minWidth = Math.max (0, width - trimWidth ());", "-\tgeometry.min_height = minHeight = Math.max (0, height - trimHeight ());", "+\tgeometry.min_width = Math.max (1, minWidth);", "+\tgeometry.min_height = Math.max (1, minHeight);"]}], "num": 1106}