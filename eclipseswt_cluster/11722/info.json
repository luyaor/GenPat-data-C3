{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b0dd22955e55cb26aa3d1e8c1b51bea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41f7c88a87c5f014b64e8d3145049f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5f92d2edf4e3a011d521b2c6ed1abf7441c8f4c3", "commitAfterChange": "97bce29b3542285d238003e567987d8ebdedb6ff", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tboolean singleLine = (getStyle() & SWT.SINGLE) != 0;", "-\tint lineCount = singleLine ? 1 : content.getLineCount();", "+\tint lineCount = (getStyle() & SWT.SINGLE) != 0 ? 1 : content.getLineCount();", "-\t\tint lineIndex = 0;", "-\t\twhile (lineIndex < lineCount && height < maxHeight) {", "+\t\tfor (int lineIndex = 0; lineIndex < lineCount; lineIndex++) {", "-\t\t\tif (wordWrap) {", "-\t\t\t\tlayout.setWidth(wHint == 0 ? 1 : wHint);", "-\t\t\t}", "+\t\t\tif (wordWrap) layout.setWidth(wHint == 0 ? 1 : wHint);", "-\t\t\tlineIndex++;", "+\t\t\tif (isFixedLineHeight() && height < maxHeight) break;", "+\t\t}", "+\t\tif (isFixedLineHeight()) {", "+\t\t\theight = lineCount * renderer.getLineHeight();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5777b4932241ca4bd293cc19365885e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "32c90bc6548eedcd9ff86eb3b07fa5d9b7d0fb20", "commitAfterChange": "c1df1ba2a1e6a57893caf639664ac1ec129b2bf9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (labelType == OS.XmSTRING && (style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) {", "+\tif (labelType == OS.XmSTRING && (style & SWT.WRAP) != 0) {", "-\t\tint unavailable = 2 * (argList4 [7] + getBorderWidth());", "-\t\tString string = display.wrapText (text, font, wHint - unavailable);", "+\t\tString string = text;", "+\t\tif (wHint != SWT.DEFAULT) {", "+\t\t\tint unavailable = 2 * (argList4 [7] + getBorderWidth());", "+\t\t\tstring = display.wrapText (string, font, wHint - unavailable);", "+\t\t}", "+\t\tif (wHint == SWT.DEFAULT) {", "+\t\t\twidth += extent.x + 2 * argList4 [7];", "+\t\t}"]}], "num": 11722}