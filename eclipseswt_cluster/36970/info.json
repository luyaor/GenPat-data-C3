{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30f874bebefa83f3d5c1ed7bb92be5ef", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b2ab6044e66d58a03cd002bb82d2de5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "8012b40c7fbcd20ce3aea43ed347b6615788b1a9", "commitAfterChange": "bc390e523ad33cdcb413efc8c75a8067340424aa", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "signatureAfterChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "diff": ["-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif (new_text == 0 || new_text_length == 0) return 0;", "-\t\tbyte [] buffer = new byte [(int)/*64*/new_text_length];", "-\t\tOS.memmove (buffer, new_text, buffer.length);", "-\t\tString oldText = new String (Converter.mbcsToWcs (null, buffer));", "-\t\tint [] pos = new int [1];", "-\t\tOS.memmove (pos, position, 4);", "-\t\tif (pos [0] == -1) {", "-\t\t\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "-\t\t\tpos [0] = (int)/*64*/OS.g_utf8_strlen (ptr, -1);", "-\t\t}", "-\t\tString newText = verifyText (oldText, pos [0], pos [0]);", "-\t\tif (newText != oldText) {", "-\t\t\tint [] newStart = new int [1], newEnd = new int [1];", "-\t\t\tOS.gtk_editable_get_selection_bounds (handle, newStart, newEnd);", "-\t\t\tif (newText != null) {", "-\t\t\t\tif (newStart [0] != newEnd [0]) {", "-\t\t\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, DELETE_TEXT);", "-\t\t\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\t\t\tOS.gtk_editable_delete_selection (handle);", "-\t\t\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, DELETE_TEXT);", "-\t\t\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\t\t}", "-\t\t\t\tbyte [] buffer3 = Converter.wcsToMbcs (null, newText, false);", "-\t\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "-\t\t\t\tOS.gtk_editable_insert_text (handle, buffer3, buffer3.length, pos);", "-\t\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "-\t\t\t}", "-\t\t\tpos [0] = newEnd [0];", "+\tif (new_text == 0 || new_text_length == 0) return 0;", "+\tbyte [] buffer = new byte [(int)/*64*/new_text_length];", "+\tOS.memmove (buffer, new_text, buffer.length);", "+\tString oldText = new String (Converter.mbcsToWcs (null, buffer));", "+\tint [] pos = new int [1];", "+\tOS.memmove (pos, position, 4);", "+\tif (pos [0] == -1) {", "+\t\tint /*long*/ ptr = OS.gtk_entry_get_text (handle);", "+\t\tpos [0] = (int)/*64*/OS.g_utf8_strlen (ptr, -1);", "+\t}", "+\tString newText = verifyText (oldText, pos [0], pos [0]);", "+\tif (newText != oldText) {", "+\t\tint [] newStart = new int [1], newEnd = new int [1];", "+\t\tOS.gtk_editable_get_selection_bounds (handle, newStart, newEnd);", "+\t\tif (newText != null) {", "-\t\t\t\tfixStart = newStart [0];", "-\t\t\t\tfixEnd = newEnd [0];", "+\t\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, DELETE_TEXT);", "+\t\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\t\tOS.gtk_editable_delete_selection (handle);", "+\t\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, DELETE_TEXT);", "+\t\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\tOS.memmove (position, pos, 4);", "-\t\t\tOS.g_signal_stop_emission_by_name (handle, OS.insert_text);", "+\t\t\tbyte [] buffer3 = Converter.wcsToMbcs (null, newText, false);", "+\t\t\tOS.g_signal_handlers_block_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "+\t\t\tOS.gtk_editable_insert_text (handle, buffer3, buffer3.length, pos);", "+\t\t\tOS.g_signal_handlers_unblock_matched (handle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "-\t} else {", "-\t\tbyte [] iter = new byte [ITER_SIZEOF];", "-\t\tOS.memmove (iter, new_text, iter.length);", "-\t\tint start = OS.gtk_text_iter_get_offset (iter);", "-\t\tbyte [] buffer = new byte [(int)/*64*/position];", "-\t\tOS.memmove (buffer, new_text_length, buffer.length);", "-\t\tString oldText = new String (Converter.mbcsToWcs (null, buffer));", "-\t\tString newText = verifyText (oldText, start, start);", "-\t\tif (newText == null) {", "-\t\t\tOS.g_signal_stop_emission_by_name (bufferHandle, OS.insert_text);", "-\t\t} else {", "-\t\t\tif (newText != oldText) {", "-\t\t\t\tbyte [] buffer1 = Converter.wcsToMbcs (null, newText, false);", "-\t\t\t\tOS.g_signal_handlers_block_matched (bufferHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "-\t\t\t\tOS.gtk_text_buffer_insert (bufferHandle, new_text, buffer1, buffer1.length);", "-\t\t\t\tOS.g_signal_handlers_unblock_matched (bufferHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, INSERT_TEXT);", "-\t\t\t\tOS.g_signal_stop_emission_by_name (bufferHandle, OS.insert_text);", "-\t\t\t}", "+\t\tpos [0] = newEnd [0];", "+\t\tif (newStart [0] != newEnd [0]) {", "+\t\t\tfixStart = newStart [0];", "+\t\t\tfixEnd = newEnd [0];", "+\t\tOS.memmove (position, pos, 4);", "+\t\tOS.g_signal_stop_emission_by_name (handle, OS.insert_text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceaea7cc2abb635525e83bfccf583d66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9c01a3f45d573f08d8b7a2e1b0b9b9e7b1cebb0a", "commitAfterChange": "b55930c1b042058439d042ea5c49694a2329e40e", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void setSelection (TreeItem [] items)", "signatureAfterChange": "  public void setSelection (TreeItem item)", "diff": ["+public void setSelection (TreeItem item) {", "+\tcheckWidget ();", "+\tif (item == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tsetSelection (new TreeItem [] {item});", "+}"]}], "num": 36970}