{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9afab997f9296769150618d06759cd02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6522bef681e80ec0486a13ee18aad5c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0b66692057c7b8e5e6ba08c35cd8643753a93cdc", "commitAfterChange": "02b69f0a6c1a178141e1f22f2c967af8a5787207", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void setStyle (TextStyle style, int start, int end)", "signatureAfterChange": "  public void setStyle (TextStyle style, int start, int end)", "diff": ["-\tfreeRuns();", "-\tend = Math.min(Math.max(0, end), length - 1);\t", "+\tend = Math.min(Math.max(0, end), length - 1);", "+\tint low = -1;", "+\tint high = styles.length;", "+\twhile (high - low > 1) {", "+\t\tint index = (high + low) / 2;", "+\t\tif (start <= styles[index].start) {", "+\t\t\thigh = index;", "+\t\t} else {", "+\t\t\tlow = index;", "+\t\t}", "+\t}", "+\tif (0 <= high && high < styles.length) {", "+\t\tStyleItem item = styles[high];", "+\t\tif (item.start == start && styles[high + 1].start - 1 == end) {", "+\t\t\tif (style == item.style) return;", "+\t\t\tif (style != null && style.equals(item.style)) return;", "+\t\t}", "+\t}", "+\tfreeRuns();", "-\tfor (; i<styles.length; i++) {", "-\t\tStyleItem item = styles[i];", "-\t\tif (item.start >= end) break;", "+\tif (styles[i].start > end) {", "+\t\tnewItem = new StyleItem();", "+\t\tnewItem.start = end + 1;", "+\t\tnewItem.style = styles[i -1].style;", "+\t\tnewStyles[count++] = newItem;", "+\t} else {", "+\t\tfor (; i<styles.length; i++) {", "+\t\t\tStyleItem item = styles[i];", "+\t\t\tif (item.start > end) break;", "+\t\t}", "+\t\tif (end != styles[i].start - 1) {", "+\t\t\ti--;", "+\t\t\tstyles[i].start = end + 1;", "+\t\t}", "-\tnewItem = new StyleItem();", "-\tnewItem.style = styles[Math.max(0, i - 1)].style;", "-\tnewItem.start = end + 1;", "-\tnewStyles[count++] = newItem;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "650720e002f7005ae43a03f0bf90e02f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "00044d960d22ae0ff107fa60b140159a76aa4f68", "commitAfterChange": "e3652a50c88e949df733c4507943c28f05cffd6f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void setStyle (TextStyle style, int start, int end)", "signatureAfterChange": "  public void setStyle (TextStyle style, int start, int end)", "diff": ["+\tint low = -1;", "+\tint high = styles.length;", "+\twhile (high - low > 1) {", "+\t\tint index = (high + low) / 2;", "+\t\tif (start <= styles[index].start) {", "+\t\t\thigh = index;", "+\t\t} else {", "+\t\t\tlow = index;", "+\t\t}", "+\t}", "+\tif (0 <= high && high < styles.length) {", "+\t\tStyleItem item = styles[high];", "+\t\tif (item.start == start && styles[high + 1].start - 1 == end) {", "+\t\t\tif (style == item.style) return;", "+\t\t\tif (style != null && style.equals(item.style)) return;", "+\t\t}", "+\t}", "+\tfreeRuns();", "-\tStyleItem previousStyle = null;", "-\t\tif (item.start >= start) {", "-\t\t\tif (item.start >= start) previousStyle = item; ", "-\t\t\tbreak;", "-\t\t}", "+\t\tif (item.start >= start) break;", "-\tfor (; i<styles.length; i++) {", "-\t\tStyleItem item = styles[i];", "-\t\tif (item.start >= end) break;", "-\t\tpreviousStyle = null;", "+\tif (styles[i].start > end) {", "+\t\tnewItem = new StyleItem();", "+\t\tnewItem.start = end + 1;", "+\t\tnewItem.style = styles[i -1].style;", "+\t\tnewStyles[count++] = newItem;", "+\t} else {", "+\t\tfor (; i<styles.length; i++) {", "+\t\t\tStyleItem item = styles[i];", "+\t\t\tif (item.start > end) break;", "+\t\t}", "+\t\tif (end != styles[i].start - 1) {", "+\t\t\ti--;", "+\t\t\tstyles[i].start = end + 1;", "+\t\t}", "-\tnewItem = new StyleItem();", "-\tnewItem.style = previousStyle != null ? previousStyle.style : styles[Math.max(0, i - 1)].style;", "-\tnewItem.start = end + 1;", "-\tnewStyles[count++] = newItem;", "-\t", "-\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\tint byteStart = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, start) - ptr);", "-\tint byteEnd = (int)/*64*/(OS.g_utf8_offset_to_pointer(ptr, end + 1) - ptr);", "-\tint /*long*/[] attributes = style.createAttributes();", "-\tPangoAttribute attribute = new PangoAttribute();", "-\tint /*long*/ attribList = OS.pango_layout_get_attributes(layout);", "-\tboolean newList = attribList == 0;", "-\tif (newList) attribList = OS.pango_attr_list_new();", "-\tfor (i = 0; i < attributes.length; i++) {", "-\t\tint /*long*/ attr = attributes[i];", "-\t\tif (attr == 0) break;", "-\t\tOS.memmove (attribute, attr, PangoAttribute.sizeof);", "-\t\tattribute.start_index = byteStart;", "-\t\tattribute.end_index = byteEnd;", "-\t\tOS.memmove (attr, attribute, PangoAttribute.sizeof);", "-\t\tOS.pango_attr_list_change(attribList, attr);", "-\t}", "-\tOS.pango_layout_set_attributes(layout, attribList);", "-\tif (newList) OS.pango_attr_list_unref(attribList);"]}], "num": 60847}