{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c728cea534b0fc67fd3bdfdac69793a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d22ba76ac14df0c91049d7fd00f92b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 188, "signatureBeforeChange": " void internalRedrawRange(int start, int length, boolean clearBackground)", "signatureAfterChange": "  void internalRedrawRange1(int start, int length, boolean clearBackground)", "diff": ["+", "+void internalRedrawRange1(int start, int length, boolean clearBackground) {", "+\tif (length <= 0) return;", "+\tint end = start + length - 1;", "+\tint firstLine = content.getLineAtOffset(start);", "+\tint lastLine = content.getLineAtOffset(end);", "+\tint partialBottomIndex = getPartialBottomIndex();", "+\tint partialTopIndex = getPartialTopIndex();", "+\tif (firstLine > partialBottomIndex || lastLine < partialTopIndex) {", "+\t\treturn;", "+\t}", "+\tint lineOffset = content.getOffsetAtLine(firstLine);", "+\tif (partialTopIndex > firstLine) {", "+\t\tfirstLine = partialTopIndex;", "+\t\tstart = lineOffset;", "+\t}", "+\tif (partialBottomIndex < lastLine) {", "+\t\tlastLine = partialBottomIndex;", "+\t\tend = content.getOffsetAtLine(lastLine) + content.getLine(lastLine).length();", "+\t}", "+\tRectangle clientArea = getClientArea();\t", "+\tTextLayout firstLayout = renderer.getTextLayout(firstLine), lastLayout;", "+\tstart = Math.min(firstLayout.getText().length() - 1, start - lineOffset);", "+\tif (firstLine == lastLine) {", "+\t\tend = Math.min(firstLayout.getText().length() - 1, end - lineOffset);", "+\t\tif (!wordWrap || firstLayout.getLineIndex(start) == firstLayout.getLineIndex(end)) {", "+\t\t\tRectangle rect = firstLayout.getBounds(start, end);", "+\t\t\trect.x += leftMargin - horizontalScrollOffset;", "+\t\t\trect.y += getLinePixel(firstLine);", "+\t\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "+\t\t\treturn;", "+\t\t}", "+\t\tlastLayout = firstLayout;", "+\t} else {", "+\t\tlineOffset = content.getOffsetAtLine(lastLine);", "+\t\tlastLayout = renderer.getTextLayout(lastLine);", "+\t\tend = Math.min(lastLayout.getText().length() - 1, end - lineOffset);", "+\t}", "+\tint[] firstOffsets = firstLayout.getLineOffsets();", "+\tint[] lastOffsets = firstLayout == lastLayout ? firstOffsets : lastLayout.getLineOffsets();", "+\tRectangle firstRect;", "+\tif (firstLayout.getText().length() != 0) {", "+\t\tfirstRect = firstLayout.getBounds(start, firstOffsets[firstLayout.getLineIndex(start + 1)] - 1);", "+\t} else {", "+\t\tfirstRect = firstLayout.getBounds();", "+\t}", "+\tfirstRect.x += leftMargin - horizontalScrollOffset;", "+\tfirstRect.y += getLinePixel(firstLine);", "+\tfirstRect.width = clientArea.x + clientArea.width - firstRect.x;", "+\t\t", "+\tRectangle lastRect = lastLayout.getBounds(lastOffsets[lastLayout.getLineIndex(end)], end);", "+\tlastRect.x += leftMargin - horizontalScrollOffset;", "+\tlastRect.y += getLinePixel(lastLine);", "+", "+\tsuper.redraw(firstRect.x, firstRect.y, firstRect.width, firstRect.height, false);", "+\tsuper.redraw(lastRect.x, lastRect.y, lastRect.width, lastRect.height, false);", "+\tsuper.redraw(clientArea.x, firstRect.y + firstRect.height, clientArea.width, lastRect.y - (firstRect.y + firstRect.height), false);", "+\t// TODO - clearBackground", "+", "-void internalRedrawRange(int start, int length, boolean clearBackground) {", "-\tint end = start + length;", "-\tint offsetInFirstLine;", "-\tint partialTopIndex = verticalScrollOffset / lineHeight;", "-\t// do nothing if redraw range is completely invisible\t", "-\t// only redraw visible lines", "-\t\toffsetInFirstLine = 0;", "-\telse {", "-\t\toffsetInFirstLine = start - content.getOffsetAtLine(firstLine);", "-\tif (partialBottomIndex + 1 < lastLine) {", "-\t\tlastLine = partialBottomIndex + 1;\t// + 1 to redraw whole bottom line, including line break", "-\t\tend = content.getOffsetAtLine(lastLine);", "-\t}", "-\tredrawLines(firstLine, offsetInFirstLine, lastLine, end, clearBackground);", "-\t// redraw entire center lines if redraw range includes more than two lines", "-\tif (lastLine - firstLine > 1) {", "-\t\tRectangle clientArea = getClientArea();", "-\t\tint redrawStopY = lastLine * lineHeight - verticalScrollOffset;\t\t", "-\t\tint redrawY = (firstLine + 1) * lineHeight - verticalScrollOffset;\t\t", "-\t\tdraw(0, redrawY, clientArea.width, redrawStopY - redrawY, clearBackground);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd26108ae11a1d8912e728d94923f7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "41d99c512e02b1744240e3ac81cae270ede0652b", "commitAfterChange": "414c5f57bcd8b7f1ced149e77e34b505be997c4f", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 250, "signatureBeforeChange": "  void internalRedrawRange1(int start, int length, boolean clearBackground)", "signatureAfterChange": " void scrollText(int srcY, int destY)", "diff": ["-", "-void internalRedrawRange1(int start, int length, boolean clearBackground) {", "-\tif (length <= 0) return;", "-\tint end = start + length - 1;", "-\tint firstLine = content.getLineAtOffset(start);", "-\tint lastLine = content.getLineAtOffset(end);", "-\tint partialBottomIndex = getPartialBottomIndex();", "-\tint partialTopIndex = getPartialTopIndex();", "-\tif (firstLine > partialBottomIndex || lastLine < partialTopIndex) {", "-\t\treturn;", "-\t}", "-\tint lineOffset = content.getOffsetAtLine(firstLine);", "-\tif (partialTopIndex > firstLine) {", "-\t\tfirstLine = partialTopIndex;", "-\t\tstart = lineOffset;", "-\t}", "-\tif (partialBottomIndex < lastLine) {", "-\t\tlastLine = partialBottomIndex;", "-\t\tend = content.getOffsetAtLine(lastLine) + content.getLine(lastLine).length();", "-\t}", "-\tRectangle clientArea = getClientArea();\t", "-\tTextLayout firstLayout = renderer.getTextLayout(firstLine), lastLayout;", "-\tstart = Math.min(firstLayout.getText().length() - 1, start - lineOffset);", "-\tif (firstLine == lastLine) {", "-\t\tend = Math.min(firstLayout.getText().length() - 1, end - lineOffset);", "-\t\tif (!wordWrap || firstLayout.getLineIndex(start) == firstLayout.getLineIndex(end)) {", "-\t\t\tRectangle rect = firstLayout.getBounds(start, end);", "-\t\t\trect.x += leftMargin - horizontalScrollOffset;", "-\t\t\trect.y += getLinePixel(firstLine);", "-\t\t\tsuper.redraw(rect.x, rect.y, rect.width, rect.height, false);", "-\t\t\treturn;", "-\t\t}", "-\t\tlastLayout = firstLayout;", "-\t} else {", "-\t\tlineOffset = content.getOffsetAtLine(lastLine);", "-\t\tlastLayout = renderer.getTextLayout(lastLine);", "-\t\tend = Math.min(lastLayout.getText().length() - 1, end - lineOffset);", "-\t}", "-\tint[] firstOffsets = firstLayout.getLineOffsets();", "-\tint[] lastOffsets = firstLayout == lastLayout ? firstOffsets : lastLayout.getLineOffsets();", "-\tRectangle firstRect;", "-\tif (firstLayout.getText().length() != 0) {", "-\t\tfirstRect = firstLayout.getBounds(start, firstOffsets[firstLayout.getLineIndex(start + 1)] - 1);", "-\t} else {", "-\t\tfirstRect = firstLayout.getBounds();", "-\t}", "-\tfirstRect.x += leftMargin - horizontalScrollOffset;", "-\tfirstRect.y += getLinePixel(firstLine);", "-\tfirstRect.width = clientArea.x + clientArea.width - firstRect.x;", "-\t\t", "-\tRectangle lastRect = lastLayout.getBounds(lastOffsets[lastLayout.getLineIndex(end)], end);", "-\tlastRect.x += leftMargin - horizontalScrollOffset;", "-\tlastRect.y += getLinePixel(lastLine);", "-", "-\tsuper.redraw(firstRect.x, firstRect.y, firstRect.width, firstRect.height, false);", "-\tsuper.redraw(lastRect.x, lastRect.y, lastRect.width, lastRect.height, false);", "-\tsuper.redraw(clientArea.x, firstRect.y + firstRect.height, clientArea.width, lastRect.y - (firstRect.y + firstRect.height), false);", "-\t// TODO - clearBackground", "-", "-}", "+}", "+void scrollText(int srcY, int destY) {", "+\tif (srcY == destY) return;", "+\tint deltaY = destY - srcY;", "+\tint scrollWidth = clientAreaWidth - leftMargin - rightMargin, scrollHeight;", "+\tif (deltaY > 0) {", "+\t\tscrollHeight = clientAreaHeight - srcY - bottomMargin;", "+\t} else {", "+\t\tscrollHeight = clientAreaHeight - destY - bottomMargin;", "+\t}", "+\tscroll(leftMargin, destY, leftMargin, srcY, scrollWidth, scrollHeight, true);", "+\tif ((0 < srcY + scrollHeight) && (topMargin > srcY)) {", "+\t\tsuper.redraw(leftMargin, deltaY, scrollWidth, topMargin, false);", "+\t}", "+\tif ((0 < destY + scrollHeight) && (topMargin > destY)) {", "+\t\tsuper.redraw(leftMargin, 0, scrollWidth, topMargin, false);", "+\t}", "+\tif ((clientAreaHeight - bottomMargin < srcY + scrollHeight) && (clientAreaHeight > srcY)) {", "+\t\tsuper.redraw(leftMargin, clientAreaHeight - bottomMargin + deltaY, scrollWidth, bottomMargin, false);", "+\t}", "+\tif ((clientAreaHeight - bottomMargin < destY + scrollHeight) && (clientAreaHeight > destY)) {", "+\t\tsuper.redraw(leftMargin, clientAreaHeight - bottomMargin, scrollWidth, bottomMargin, false);", "+\t}"]}], "num": 31482}