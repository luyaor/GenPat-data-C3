{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf6d9271d6e001579c97b826757220e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46adc89f9609f92012c2e1f9f509595", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "17a2abe4bc42062a492b649309d8eb9791b8cc17", "commitAfterChange": "92473cb6a6e6936c37238579818c6c3e9da60c5a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\tint [] lpcbData = new int [] {256};", "-\t\tTCHAR lpData = new TCHAR (0, lpcbData [0]);", "-\t\tint result = OS.RegQueryValueEx (phkResult [0], null, 0, null, lpData, lpcbData);", "-\t\tOS.RegCloseKey (phkResult [0]);", "+\t\tint [] lpcbData = new int [1];", "+\t\tint result = OS.RegQueryValueEx (phkResult [0], null, 0, null, (TCHAR) null, lpcbData);", "-\t\t\tString clsid = lpData.toString (0, lpData.strlen ());", "-\t\t\tif (clsid.equals (CLSID_SHELLEXPLORER1)) {", "-\t\t\t\t/* Shell.Explorer.1 is the default, ensure that Shell.Explorer.2 is available */", "-\t\t\t\tkey = new TCHAR (0, \"Shell.Explorer.2\", true);\t//$NON-NLS-1$", "-\t\t\t\tphkResult [0] = 0;", "-\t\t\t\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) == 0) {", "-\t\t\t\t\t/* specify that Shell.Explorer.2 is to be used */", "-\t\t\t\t\tOS.RegCloseKey (phkResult [0]);", "-\t\t\t\t\tprogId = \"Shell.Explorer.2\";\t//$NON-NLS-1$", "+\t\t\tTCHAR lpData = new TCHAR (0, lpcbData [0] / TCHAR.sizeof);", "+\t\t\tresult = OS.RegQueryValueEx (phkResult [0], null, 0, null, lpData, lpcbData);", "+\t\t\tif (result == 0) {", "+\t\t\t\tString clsid = lpData.toString (0, lpData.strlen ());", "+\t\t\t\tif (clsid.equals (CLSID_SHELLEXPLORER1)) {", "+\t\t\t\t\t/* Shell.Explorer.1 is the default, ensure that Shell.Explorer.2 is available */", "+\t\t\t\t\tkey = new TCHAR (0, \"Shell.Explorer.2\", true);\t//$NON-NLS-1$", "+\t\t\t\t\tint [] phkResult2 = new int [1];", "+\t\t\t\t\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult2) == 0) {", "+\t\t\t\t\t\t/* specify that Shell.Explorer.2 is to be used */", "+\t\t\t\t\t\tOS.RegCloseKey (phkResult2 [0]);", "+\t\t\t\t\t\tprogId = \"Shell.Explorer.2\";\t//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\tOS.RegCloseKey (phkResult [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3eff755a596b14abcc80487cfbc5424", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "a0380cac0ecd45334ddf8d2e0a8e63bf175c89eb", "commitAfterChange": "0a3c80307dbad6a08cf72509d33cdbe111867a34", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["+", "+\t/*", "+\t* Registry entry HKEY_CLASSES_ROOT\\Shell.Explorer\\CLSID indicates which version of", "+\t* Shell.Explorer to use by default.  We usually want to use this value because it", "+\t* typically points at the newest one that is available.  However it is possible for", "+\t* this registry entry to be changed by another application to point at some other", "+\t* Shell.Explorer version.", "+\t*", "+\t* The Browser depends on the Shell.Explorer version being at least Shell.Explorer.2.", "+\t* If it is detected in the registry to be Shell.Explorer.1 then change the progId that", "+\t* will be embedded to explicitly specify Shell.Explorer.2.", "+\t*/", "+\tString progId = \"Shell.Explorer\";\t//$NON-NLS-1$", "+\tTCHAR key = new TCHAR (0, \"Shell.Explorer\\\\CLSID\", true);\t//$NON-NLS-1$", "+\tint [] phkResult = new int [1];", "+\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) == 0) {", "+\t\tint [] lpcbData = new int [] {256};", "+\t\tTCHAR lpData = new TCHAR (0, lpcbData [0]);", "+\t\tint result = OS.RegQueryValueEx (phkResult [0], null, 0, null, lpData, lpcbData);", "+\t\tOS.RegCloseKey (phkResult [0]);", "+\t\tif (result == 0) {", "+\t\t\tString clsid = lpData.toString (0, lpData.strlen ());", "+\t\t\tif (clsid.equals (CLSID_SHELLEXPLORER1)) {", "+\t\t\t\t/* Shell.Explorer.1 is the default, ensure that Shell.Explorer.2 is available */", "+\t\t\t\tkey = new TCHAR (0, \"Shell.Explorer.2\", true);\t//$NON-NLS-1$", "+\t\t\t\tphkResult [0] = 0;", "+\t\t\t\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) == 0) {", "+\t\t\t\t\t/* specify that Shell.Explorer.2 is to be used */", "+\t\t\t\t\tOS.RegCloseKey (phkResult [0]);", "+\t\t\t\t\tprogId = \"Shell.Explorer.2\";\t//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "-\t\tsite = new WebSite(frame, SWT.NONE, \"Shell.Explorer\"); //$NON-NLS-1$", "+\t\tsite = new WebSite(frame, SWT.NONE, progId); //$NON-NLS-1$"]}], "num": 31803}