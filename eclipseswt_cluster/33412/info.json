{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68ad53db67b6acd1365bf777bd345501", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5416e642df8fe2ff10e876c1608041b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 49, "signatureBeforeChange": " static String convertToLf(String text)", "signatureAfterChange": "  Menu [] getMenus (Decorations shell)", "diff": ["+", "+Menu [] getMenus (Decorations shell) {", "+\tif (menus == null) return new Menu [0];", "+\tint count = 0;", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) count++;", "+\t}", "+\tint index = 0;", "+\tMenu[] result = new Menu[count];", "+\tfor (int i = 0; i < menus.length; i++) {", "+\t\tMenu menu = menus[i];", "+\t\tif (menu != null && menu.parent == shell) {", "+\t\t\tresult[index++] = menu;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-}", "-static String convertToLf(String text) {", "-\tchar Cr = '\\r';", "-\tchar Lf = '\\n';", "-\tint length = text.length ();", "-\tif (length == 0) return text;", "-\t", "-\t/* Check for an LF or CR/LF.  Assume the rest of the string ", "-\t * is formatted that way.  This will not work if the string ", "-\t * contains mixed delimiters. */", "-\tint i = text.indexOf (Lf, 0);", "-\tif (i == -1 || i == 0) return text;", "-\tif (text.charAt (i - 1) != Cr) return text;", "-", "-\t/* The string is formatted with CR/LF.", "-\t * Create a new string with the LF line delimiter. */", "-\ti = 0;", "-\tStringBuffer result = new StringBuffer ();", "-\twhile (i < length) {", "-\t\tint j = text.indexOf (Cr, i);", "-\t\tif (j == -1) j = length;", "-\t\tString s = text.substring (i, j);", "-\t\tresult.append (s);", "-\t\ti = j + 2;", "-\t\tresult.append (Lf);", "-\t}", "-\treturn result.toString ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f98fd95b239c2805da42d8a0cb1e7459", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 30, "signatureBeforeChange": " int itemAction(TreeItem item, int x, int y)", "signatureAfterChange": " TreeItem[] getAllItems()", "diff": ["+TreeItem[] getAllItems() {", "+\tint childCount = items.length;", "+\tTreeItem[][] childResults = new TreeItem[childCount][];", "+\tint count = 0;", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tchildResults[i] = items[i].computeAllDescendents();", "+\t\tcount += childResults[i].length;", "+\tTreeItem[] result = new TreeItem[count];", "+\tint index = 0;", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tSystem.arraycopy(childResults[i], 0, result, index, childResults[i].length);", "+\t\tindex += childResults[i].length;", "+\t}", "+\treturn result;", "- */", "-int itemAction(TreeItem item, int x, int y) {", "-\tint action = ActionNone;", "-\tint itemHeight = getItemHeight();", "-\tint offsetX;", "-\tint offsetY;", "-\tPoint offsetPoint;", "-", "-\tif (item != null) {", "-\t\toffsetX = x - item.getPaintStartX();", "-\t\toffsetY = y - itemHeight * (y / itemHeight);\t", "-\t\toffsetPoint = new Point(offsetX, offsetY);\t", "-\t\tif ((item.isLeaf() == false) &&", "-\t\t\t(getHierarchyIndicatorRect().contains(offsetPoint) == true)) {", "-\t\t\taction |= ActionExpandCollapse;", "-\t\t}", "-\t\telse", "-\t\tif (item.isSelectionHit(offsetPoint) == true) {", "-\t\t\taction |= ActionSelect;", "-\t\t}", "-\t\telse", "-\t\tif (item.isCheckHit(new Point(x, y)) == true) {", "-\t\t\taction |= ActionCheck;", "-\t\t}", "-\t}", "-\treturn action;", "-}"]}], "num": 33412}