{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "420470c03e36699cb282ae584f1693dd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7423bfe9ec01b6107152d6eb671670e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "382b6421eeae60a651220fe1179967fc453bd91a", "commitAfterChange": "70b00f9fd9ccac15426ee88b1dc6a2b6b783b7fa", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\toffset = translateOffset(offset);", "-\tlength = translateOffset(length);", "-\t\t\tboolean invalid = false;", "-\t\t\tdo {", "-\t\t\t\tint newOffset = offset;", "-\t\t\t\t\tif (newOffset < length) newOffset++;", "+\t\t\t\t\tif (offset < length) offset++;", "-\t\t\t\t\tif (newOffset > 0) newOffset--;", "+\t\t\t\t\tif (offset > 0) offset--;", "-\t\t\t\tif (newOffset == offset) break;", "-\t\t\t\toffset = newOffset;", "-\t\t\t\tinvalid = false;", "-\t\t\t\tif (invalidOffsets != null) {", "-\t\t\t\t\tfor (int i = 0; i < invalidOffsets.length; i++) {", "-\t\t\t\t\t\tif (offset == invalidOffsets[i]) {", "-\t\t\t\t\t\t\tinvalid = true;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} while (invalid);", "-\t\t\treturn untranslateOffset(offset);", "+\t\t\t\treturn offset;", "-\t\t\treturn untranslateOffset((int)/*64*/textStorage.nextWordFromIndex(offset, forward));", "+\t\t\toffset = translateOffset(offset);", "+\t\t\toffset = (int)/*64*/textStorage.nextWordFromIndex(offset, forward);", "+\t\t\treturn untranslateOffset(offset);", "+\t\t\toffset = translateOffset(offset);", "+\t\t\tlength = translateOffset(length);", "-\t\t\treturn untranslateOffset((int)/*64*/(range.location + range.length));", "+\t\t\toffset = (int)/*64*/ (range.location +  range.length);", "+\t\t\treturn untranslateOffset(offset);", "+\t\t\toffset = translateOffset(offset);", "+\t\t\tlength = translateOffset(length);", "-\t\t\treturn untranslateOffset((int)/*64*/range.location);", "+\t\t\toffset = (int)/*64*/ range.location;", "+\t\t\treturn untranslateOffset(offset);", "-\treturn untranslateOffset(offset);", "+\treturn offset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afe88cb4c1ffe1d7cad197bfb7f8040", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "8302dcae845b1fe69dae77b303345ce4bebc2e77", "commitAfterChange": "cd2b53b4a9279ed54f58046e25d52b26e8ff215a", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 195, "signatureBeforeChange": " void handleCompositionChanged(Event event)", "signatureAfterChange": " void handleCompositionChanged(Event event)", "diff": ["+\trenderer.imeRanges = null;", "+\trenderer.imeStyles = null;", "-\t\tif (event.styles != null) {", "-\t\t\tint[] ranges = event.ranges;", "-\t\t\tStyleRange[] styles = new StyleRange[event.styles.length]; ", "-\t\t\tfor (int i = 0; i < event.styles.length; i++) {", "-\t\t\t\tstyles[i] = new StyleRange (event.styles[i]);", "-\t\t\t\tranges[i*2] += compositionStart;", "-\t\t\t}", "-\t\t\tsetStyleRanges(0, 0, ranges, styles, false);", "-\t\t}", "+\t\tint lineIndex = getCaretLine();", "+\t\trenderer.imeRanges = event.ranges;", "+\t\trenderer.imeStyles = event.styles;", "+\t\trenderer.reset(lineIndex, 1);", "-\t\t\tint lineIndex = getCaretLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd73e147f640918281ec7bacd3093f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "982cd53e0d78db18706bf0846ac669e298de32e2", "commitAfterChange": "165673b92d78dcd017af081458f5cae6d2eb17c6", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["-\t\t\t\tif (item == anchor) OS.TreeViewItem_IsSelected (item.handle, !selected);", "-\t\t\t\tif (selected) {", "-\t\t\t\t\tint selectedItem = OS.TreeView_SelectedItem (handle);", "-\t\t\t\t\tif (selectedItem != 0) {", "-\t\t\t\t\t\tif (OS.Object_Equals (item.handle, selectedItem)) {", "-\t\t\t\t\t\t\tOS.TreeViewItem_IsSelected (selectedItem, false);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tOS.GCHandle_Free (selectedItem);", "-\t\t\t\t\t}", "+\t\t\t\tif (widget.equals (lastSelection)) {", "+\t\t\t\t\tOS.TreeViewItem_IsSelected (item.handle, !selected);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (selected) unselect = item;", "+\t\t\t\t\tif (lastSelection != null && OS.TreeViewItem_IsSelected (lastSelection.handle)) reselect = lastSelection;", "-\t\t\tif (!shiftDown || anchor == null) anchor = item;", "-\t\t\t\tboolean selected = false;", "-\t    \t\tfor (int i = 0; i < selectedItemCount; i++) {", "-\t    \t\t\tif (selectedItems [i] == item) {", "-\t    \t\t\t\tselected = true;", "-\t    \t\t\t\tbreak;", "-\t    \t\t\t}", "-\t    \t\t}", "+\t\t\t\tboolean selected = OS.TreeViewItem_IsSelected (item.handle);", "-\t   \t\t\tinsertSelectedItem (item, 0);", "+\t\tlastSelection = item;"]}], "num": 3788}