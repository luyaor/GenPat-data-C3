{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05c08bfdb1a2365bb987c3c53c2ad345", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "277b4a70c4fe5d2b22730e1896c46b80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  void initializeCallbacks ()", "signatureAfterChange": "  void initializeCallbacks ()", "diff": ["-\tkeyCallback = new Callback (this, \"keyProc\", 3);", "-\tkeyProc = keyCallback.getAddress ();", "-\tif (keyProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t", "-\ttimerCallback = new Callback (this, \"timerProc\", 2);", "+\ttimerCallback = new Callback (this, \"timerProc\", 1);", "-\twindowTimerCallback = new Callback (this, \"windowTimerProc\", 2);", "+\twindowTimerCallback = new Callback (this, \"windowTimerProc\", 1);", "-\tmouseHoverCallback = new Callback (this, \"mouseHoverProc\", 2);", "+\tmouseHoverCallback = new Callback (this, \"mouseHoverProc\", 1);", "-\tcaretCallback = new Callback(this, \"caretProc\", 2);", "+\tcaretCallback = new Callback(this, \"caretProc\", 1);", "-\t", "-\ttreeColumnSelectionCallback = new Callback(this, \"treeColumnSelectionProc\", 2);", "-\ttreeColumnSelectionProc = treeColumnSelectionCallback.getAddress();", "-\tif (treeColumnSelectionProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t", "-\ttreeToggleCallback = new Callback(this, \"treeToggleProc\", 3);", "-\ttreeToggleProc = treeToggleCallback.getAddress();", "-\tif (treeToggleProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b4b8a8e727d41fcb58f0fcfef25c8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3456cb9fb0ac36f3b3e195a468d3e346ef799347", "commitAfterChange": "3f588df53ebead01cfb65efa9e6bd4a562d4ae95", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  void sort (int hParent, boolean all)", "signatureAfterChange": "  void sort (int hParent, boolean all)", "diff": ["-\tif (sortDirection == SWT.NONE) return;", "-\tif (itemCount == 0) return;", "+\tif (itemCount == 0 || itemCount == 1) return;", "-\tif (sortDirection == SWT.UP) {", "+\tif (sortDirection == SWT.UP || sortDirection == SWT.NONE) {", "-\t\treturn;", "+\t} else {", "+\t\tCallback compareCallback = new Callback (this, \"CompareFunc\", 3);", "+\t\tint lpfnCompare = compareCallback.getAddress ();", "+\t\tTVSORTCB psort = new TVSORTCB ();", "+\t\tpsort.hParent = hParent;", "+\t\tpsort.lpfnCompare = lpfnCompare;", "+\t\tpsort.lParam = sortColumn == null ? 0 : indexOf (sortColumn);", "+\t\tOS.SendMessage (handle, OS.TVM_SORTCHILDRENCB, all ? 1 : 0, psort);", "+\t\tcompareCallback.dispose ();", "-\tCallback compareCallback = new Callback (this, \"CompareFunc\", 3);", "-\tint lpfnCompare = compareCallback.getAddress ();", "-\tTVSORTCB psort = new TVSORTCB ();", "-\tpsort.hParent = hParent;", "-\tpsort.lpfnCompare = lpfnCompare;", "-\tpsort.lParam = sortColumn == null ? 0 : indexOf (sortColumn);", "-\tOS.SendMessage (handle, OS.TVM_SORTCHILDRENCB, all ? 1 : 0, psort);", "-\tcompareCallback.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19449bf512105bb51ea658e1c31258e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f5eb06c9804241f856206de14e875665a6f3a84a", "commitAfterChange": "4846c1a90b46c82b860efd9a6413e3cc3db7c0b8", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \t void initializeCallbacks ()", "signatureAfterChange": " \t void initializeCallbacks ()", "diff": ["-\tpollingCallback = new Callback (this, \"pollingProc\", 2);", "-\tpollingProc = pollingCallback.getAddress ();", "-\tif (pollingProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tobserverCallback = new Callback (this, \"observerProc\", 3);", "+\tobserverProc = observerCallback.getAddress ();", "+\tif (observerProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tsourceCallback = new Callback (this, \"sourceProc\", 1);", "+\tsourceProc = sourceCallback.getAddress ();", "+\tif (sourceProc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "+", "+\tint mode = OS.kCFRunLoopCommonModes ();", "+\tint activities = OS.kCFRunLoopBeforeWaiting;", "+\tint observer = OS.CFRunLoopObserverCreate (OS.kCFAllocatorDefault, activities, true, 0, observerProc, 0);", "+\tif (observer == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.CFRunLoopAddObserver (runLoop, observer, mode);", "+\tOS.CFRelease (observer);", "+\tCFRunLoopSourceContext context = new CFRunLoopSourceContext ();", "+\tcontext.version = 0;", "+\tcontext.perform = sourceProc;", "+\trunLoopSource = OS.CFRunLoopSourceCreate (OS.kCFAllocatorDefault, 0, context);", "+\tif (runLoopSource == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.CFRunLoopAddSource (runLoop, runLoopSource, mode);"]}], "num": 55422}