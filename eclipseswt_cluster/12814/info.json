{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52360ce13bfb87b19c6bbeaf7a529f0c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d808eb0ebc1c37306a5152b55bc66a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "6f0750b9f79e4e41a1736b026a1dddaa973a1066", "commitAfterChange": "a66c70976fc9f2576a52a82c07e33a082fdba4f2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["-\t/*", "-\t* This code intentionally commented.", "-\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "-\t* should scroll the minimum amount to show the cell if use_align is false.", "-\t* However, what actually happens is the cell is scrolled to the top.", "-\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "-\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "-\t* will have no effect. Therefore, it is still neccessary to", "-\t* call gtk_tree_view_scroll_to_cell.", "-\t*/", "-//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "-\tOS.gtk_widget_realize (handle);", "-\tGdkRectangle visibleRect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\tGdkRectangle cellRect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "-\tint[] tx = new int[1], ty = new int[1];", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 12, 0)) {", "-\t\tOS.gtk_tree_view_convert_bin_window_to_tree_coords(handle, cellRect.x, cellRect.y, tx, ty);", "-\t} else {", "-\t\tOS.gtk_tree_view_widget_to_tree_coords(handle, cellRect.x, cellRect.y, tx, ty);", "-\t}", "-\tif (ty[0] < visibleRect.y ) {", "-\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 0f, 0f);", "-\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "-\t} else {", "-\t\tint height = Math.min (visibleRect.height, cellRect.height);", "-\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "-\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 1f, 0f);", "-\t\t\tty[0] += cellRect.height - visibleRect.height;", "-\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "-\t\t}", "-\t}", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4d5c0002c21c08a262865ee2f8f64c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6f0750b9f79e4e41a1736b026a1dddaa973a1066", "commitAfterChange": "a66c70976fc9f2576a52a82c07e33a082fdba4f2", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 133, "signatureBeforeChange": "  void showItem (long iter)", "signatureAfterChange": "  void showItem (long iter)", "diff": ["-\t/*", "-\t* This code intentionally commented.", "-\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "-\t* should scroll the minimum amount to show the cell if use_align is false.", "-\t* However, what actually happens is the cell is scrolled to the top.", "-\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "-\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "-\t* will have no effect. Therefore, it is still neccessary to", "-\t* call gtk_tree_view_scroll_to_cell.", "-\t*/", "-//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "-\tOS.gtk_widget_realize (handle);", "-\tGdkRectangle visibleRect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\tGdkRectangle cellRect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "-\tint[] tx = new int[1], ty = new int[1];", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 12, 0)) {", "-\t\tOS.gtk_tree_view_convert_bin_window_to_tree_coords(handle, cellRect.x, cellRect.y, tx, ty);", "-\t} else {", "-\t\tOS.gtk_tree_view_widget_to_tree_coords(handle, cellRect.x, cellRect.y, tx, ty);", "-\t}", "-\tif (ty[0] < visibleRect.y ) {", "-\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 0f, 0f);", "-\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "-\t} else {", "-\t\tint height = Math.min (visibleRect.height, cellRect.height);", "-\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "-\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 1f, 0f);", "-\t\t\tty[0] += cellRect.height - visibleRect.height;", "-\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "-\t\t}", "-\t}", "+", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);"]}], "num": 12814}