{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fa2cb8ac3c63971130d32e830a2c83f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9e2e3f9e2df9dcfaa2f4051c542da2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/common/org/eclipse/swt/dnd/DropTargetEffect.java", "commitBeforeChange": "2d8dccc0bf0acf6709a3c33bb25c077f9fc91ab3", "commitAfterChange": "40e03d12fce7a3c56e73771f91990b85f5d1342d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tWidget getItem(Table table, int x, int y)", "signatureAfterChange": " \t \tWidget getItem(Table table, int x, int y)", "diff": ["-\t\tItem item = table.getItem(coordinates);", "-\t\tif (item == null) {", "-\t\t\tRectangle area = table.getClientArea();", "-\t\t\tif (area.contains(coordinates)) {", "-\t\t\t\t// Scan across the width of the table.", "-\t\t\t\tfor (int x1 = area.x; x1 < area.x + area.width; x1++) {", "-\t\t\t\t\tPoint pt = new Point(x1, coordinates.y);", "-\t\t\t\t\titem = table.getItem(pt);", "-\t\t\t\t\tif (item != null) {", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\tTableItem item = table.getItem(coordinates);", "+\t\tif (item != null) return item;", "+\t\tRectangle area = table.getClientArea();", "+\t\tint itemCount = table.getItemCount();", "+\t\tfor (int i=table.getTopIndex(); i<itemCount; i++) {", "+\t\t\titem = table.getItem(i);", "+\t\t\tRectangle rect = item.getBounds();", "+\t\t\trect.x = area.x;", "+\t\t\trect.width = area.width;", "+\t\t\tif (rect.contains(coordinates)) return item;", "+\t\t\tif (!(area.contains(rect.x, rect.y))) break;", "-\t\treturn item;", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd322772e9e8176fb445671dc0e2aed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f7bdfeaca66551459b7c914c135596ff9f1c605a", "commitAfterChange": "10901b0cf7d5fa05215acb3fa519206e874791dd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 27, "signatureBeforeChange": "   void destroyItem (TreeItem item)", "signatureAfterChange": "   void destroyItem (TreeItem item)", "diff": ["-\t\tTreeItem [] roots = getItems (0);", "-\t\tfor (int i = 0; i < roots.length; i++) {", "-\t\t\tif (item == roots [i]) {", "-\t\t\t\titem.setExpanded (false);", "-\t\t\t\tbreak;", "+\t\tint length = OS.gtk_tree_model_iter_n_children (modelHandle, 0);", "+\t\tif (length > 0) {", "+\t\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\tboolean valid = OS.gtk_tree_model_iter_children (modelHandle, iter, 0);", "+\t\t\twhile (valid) {", "+\t\t\t\tif (item.handle == iter) {", "+\t\t\t\t\titem.setExpanded (false);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tvalid = OS.gtk_tree_model_iter_next (modelHandle, iter);", "+\t\t\tOS.g_free (iter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f259d340b94fff66f56fbd2235c83cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f7bdfeaca66551459b7c914c135596ff9f1c605a", "commitAfterChange": "10901b0cf7d5fa05215acb3fa519206e874791dd", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 75, "signatureBeforeChange": "  void releaseItems (TreeItem [] nodes, int [] index)", "signatureAfterChange": "  void releaseItems (int parentIter)", "diff": ["-void releaseItems (TreeItem [] nodes, int [] index) {", "-\tfor (int i=0; i<nodes.length; i++) {", "-\t\tTreeItem item = nodes [i];", "-\t\tTreeItem [] sons = item.getItems ();", "-\t\tif (sons.length != 0) {", "-\t\t\treleaseItems (sons, index);", "-\t\t}", "+void releaseItems (int /*long*/ parentIter) {", "+\tint[] index = new int [1];", "+\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\tboolean valid = OS.gtk_tree_model_iter_children (modelHandle, iter, parentIter);", "+\twhile (valid) {", "+\t\treleaseItems (iter);", "-\t\t\treleaseItem (item, index, true);", "+\t\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "+\t\t\tif (index [0] != -1) {", "+\t\t\t\tTreeItem item = items [index [0]];", "+\t\t\t\tif (item != null) releaseItem (item, true);", "+\t\t\t}", "+\t\tvalid = OS.gtk_tree_model_iter_next (modelHandle, iter);", "+\tOS.g_free (iter);"]}], "num": 27176}