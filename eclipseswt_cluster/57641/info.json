{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "290626684563a9e88901cbbb8f70e541", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18cd64b9a6090cc31964ad2f51f67db4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cfc333bbe2b128a115e5de12123e48f467e87945", "commitAfterChange": "3cca36152c7f506de49197234b7c9eacb065058e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t/*", "-\t* Bug in Windows.  For some reason, when the user clicks", "-\t* on this control, the Windows hook WH_MSGFILTER is sent", "-\t* despite the fact that an input event from a dialog box,", "-\t* message box, menu, or scroll bar did not seem to occur.", "-\t* The fix is to ignore the hook.", "-\t*/", "+\t\t/*", "+\t\t* Bug in Windows.  For some reason, when the user clicks", "+\t\t* on this control, the Windows hook WH_MSGFILTER is sent", "+\t\t* despite the fact that an input event from a dialog box,", "+\t\t* message box, menu, or scroll bar did not seem to occur.", "+\t\t* The fix is to ignore the hook.", "+\t\t*/", "-\t\tcase OS.WM_XBUTTONDOWN:", "+\t\tcase OS.WM_XBUTTONDOWN: {", "+\t\t}", "+\t\tcase OS.WM_MOUSEWHEEL: {", "+\t\t\tint code = OS.CallWindowProc (TreeProc, hwnd, msg, wParam, lParam);", "+\t\t\tupdateScrollBar ();", "+\t\t\treturn code;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781e5cf983441098e3c2389c28e40e3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c9a111805e7d43eff594c3bfa24a10cf588f0278", "commitAfterChange": "ebfd059ad3aeefc603063140f789c339b0fde311", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t/*", "-\t* Bug in Windows.  For some reason, when the user clicks", "-\t* on this control, the Windows hook WH_MSGFILTER is sent", "-\t* despite the fact that an input event from a dialog box,", "-\t* message box, menu, or scroll bar did not seem to occur.", "-\t* The fix is to ignore the hook.", "-\t*/", "+\t\t/*", "+\t\t* Bug in Windows.  For some reason, when the user clicks", "+\t\t* on this control, the Windows hook WH_MSGFILTER is sent", "+\t\t* despite the fact that an input event from a dialog box,", "+\t\t* message box, menu, or scroll bar did not seem to occur.", "+\t\t* The fix is to ignore the hook.", "+\t\t*/", "-\t\tcase OS.WM_RBUTTONDOWN:", "+\t\tcase OS.WM_RBUTTONDOWN: {", "+\t\t}", "+\t\t/*", "+\t\t* Feature in Windows.  Windows sends LVN_ITEMACTIVATE from WM_KEYDOWN", "+\t\t* instead of WM_CHAR.  This means that application code that expects", "+\t\t* to consume the key press and therefore avoid a SWT.DefaultSelection", "+\t\t* event will fail.  The fix is to ignore LVN_ITEMACTIVATE when it is", "+\t\t* caused by WM_KEYDOWN and send SWT.DefaultSelection from WM_CHAR.", "+\t\t*/", "+\t\tcase OS.WM_KEYDOWN: {", "+\t\t\tignoreActivate = true;", "+\t\t\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "+\t\t\tignoreActivate = false;", "+\t\t\treturn code;", "+\t\t}"]}], "num": 57641}