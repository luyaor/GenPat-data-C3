{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72018bb5647c1173d223e0761459cc18", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "257203ab11a4e6ea28daf60696adee66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "6d4caa70d2f46772fe741df0f485437fa25a57be", "commitAfterChange": "a362034cf3e3a53d0fa3fd9e885adfdd71b79feb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r int itemSelected (int widget, int client, int call)", "signatureAfterChange": "\r \r int itemSelected (int widget, int client, int call)", "diff": ["-\tXmListCallbackStruct callback = new XmListCallbackStruct ();\r", "-\tOS.memmove (callback, call, XmListCallbackStruct.sizeof);\r", "-\tcallback.reason = OS.XmCR_BROWSE_SELECT;\r", "-\tOS.memmove (call, callback, XmListCallbackStruct.sizeof);\r", "-\t/* Use the character encoding for the default locale */\r", "-\tbyte [] buffer = Converter.wcsToMbcs (null, \"singleSelectionCallback\", true);\r", "-\tOS.XtCallCallbacks(fileList, buffer, call);\r", "+\tint selectionText = OS.XmFileSelectionBoxGetChild (dialog, OS.XmDIALOG_TEXT);\r", "+\tif (selectionText == 0) return 0;\r", "+\t\r", "+\tint [] argList = {OS.XmNselectedItems, 0, OS.XmNselectedItemCount, 0};\r", "+\tOS.XtGetValues (fileList, argList, argList.length / 2);\r", "+\tint items = argList [1], itemCount = argList [3];\r", "+\tint ptr = 0;\r", "+\tif (itemCount == 0) {\r", "+\t\tint [] argList2 = {OS.XmNdirectory, 0};\r", "+\t\tOS.XtGetValues (dialog, argList2, argList2.length / 2);\r", "+\t\tptr = argList2 [1];\r", "+\t} else {\r", "+\t\tint [] buffer = new int [1];\r", "+\t\tOS.memmove (buffer, items, 4);\r", "+\t\tptr = buffer [0];\r", "+\t}\r", "+\t\r", "+\tint address = OS.XmStringUnparse (\r", "+\t\tptr,\r", "+\t\tnull,\r", "+\t\tOS.XmCHARSET_TEXT,\r", "+\t\tOS.XmCHARSET_TEXT,\r", "+\t\tnull,\r", "+\t\t0,\r", "+\t\tOS.XmOUTPUT_ALL);\r", "+\t\r", "+\tif (address == 0) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\tint length = OS.strlen (address);\r", "+\tbyte [] buffer = new byte [length + 1];\r", "+\tOS.memmove (buffer, address, length);\r", "+\tOS.XtFree (address);\r", "+\t\r", "+\tOS.XmTextSetString (selectionText, buffer);\r", "+\tOS.XmTextSetInsertionPosition (selectionText, OS.XmTextGetLastPosition (selectionText));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9b562ccb5e35adc45c47fa555daa55d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/FontData.java", "commitBeforeChange": "daa2e3b2a72646e1ec016748054dc47ef1a447f2", "commitAfterChange": "bf08d579419148691d68ff3d58785f1979e00e55", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r FontData(byte[] stem)", "signatureAfterChange": "\r \t\r FontData(byte[] stem)", "diff": ["+\tthis.stem = stem;\r", "+\tint fontID = OS.PfDecomposeStemToID(stem);\r", "+\tif (fontID != 0) {\r", "+\t\tint desc = OS.PfFontDescription(fontID);\r", "+\t\tint size = OS.PfFontSize(fontID);\r", "+\t\tint flags = OS.PfFontFlags(fontID);\r", "+\t\tint length = OS.strlen(desc);\r", "+\t\tbyte[] buffer = new byte[length];\r", "+\t\tOS.memmove(buffer, desc, length);\r", "+\t\tname = new String(Converter.mbcsToWcs(null, buffer));\r", "+\t\theight = size;\r", "+\t\tstyle = SWT.NORMAL;\r", "+\t\tif ((flags & OS.PF_STYLE_BOLD) != 0) style |= SWT.BOLD;\r", "+\t\tif ((flags & OS.PF_STYLE_ITALIC) != 0) style |= SWT.ITALIC;\r", "+\t\tOS.PfFreeFont(fontID);\r", "+\t\treturn;\r", "+\t}\r", "+\t/*\r", "+\t* For some reason, PfDecomposeStemToID sometimes fails to decompose\r", "+\t* a valid stem (e.g. TextFont09bi).\r", "+\t*/\r", "-\t\tname = new String(Converter.mbcsToWcs(null, info.desc)).trim();\r", "+\t\tchar[] chars = Converter.mbcsToWcs(null, info.desc);\r", "+\t\tint index = 0;\r", "+\t\twhile (index < chars.length) {\r", "+\t\t\tif (chars[index] == 0) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tname = new String(chars, 0, index);\r", "-\t\t* For some reason, sometimes PfQueryFontInfo does not\r", "+\t\t* For some reason, PfQueryFontInfo sometimes does not\r", "-\t\t\tString fontName = new String(Converter.mbcsToWcs(null, this.stem)).trim();\r", "+\t\t\tchars = Converter.mbcsToWcs(null, this.stem);\r", "+\t\t\tindex = 0;\r", "+\t\t\twhile (index < chars.length) {\r", "+\t\t\t\tif (chars[index] == 0) break;\r", "+\t\t\t\tindex++;\r", "+\t\t\t}\r", "+\t\t\tString fontName = new String(chars, 0, index);\r", "-\t} else {\r", "-\t\tthis.stem = stem;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b71c5843e7092273a02d509113a4e789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["+ */", "+public String[] getAvailableTypeNames() {", "+\tcheckWidget();", "+\tint xDisplay = OS.XtDisplay (shellHandle);", "+\tif (xDisplay == 0) return new String[0];", "+\tint[] types = getAvailableTypes(xDisplay, clipboardAtom);", "+\tint[] primaryTypes = getAvailableTypes(xDisplay, primaryAtom);", "+\tString[] names = new String[types.length + primaryTypes.length];", "+\tint index = 0;", "+\tfor (int i = 0; i < types.length; i++) {", "+\t\tint ptr = OS.XmGetAtomName(xDisplay, types[i]);", "+\t\tint length = OS.strlen(ptr);", "+\t\tbyte[] nameBuf = new byte[length];", "+\t\tOS.memmove(nameBuf, ptr, length);", "+\t\tOS.XtFree(ptr);", "+\t\t/* Use the character encoding for the default locale */", "+\t\tString name = new String(Converter.mbcsToWcs(null, nameBuf));", "+\t\tnames[index++] = \"CLIPBOARD \"+name;", "+\t}", "+\tfor (int i = 0; i < primaryTypes.length; i++) {", "+\t\tint ptr = OS.XmGetAtomName(xDisplay, primaryTypes[i]);", "+\t\tint length = OS.strlen(ptr);", "+\t\tbyte[] nameBuf = new byte[length];", "+\t\tOS.memmove(nameBuf, ptr, length);", "+\t\tOS.XtFree(ptr);", "+\t\t/* Use the character encoding for the default locale */", "+\t\tString name = new String(Converter.mbcsToWcs(null, nameBuf));", "+\t\tnames[index++] = \"PRIMARY \"+name;", "+\t}", "+\treturn names;", "+}", "- */", "-public String[] getAvailableTypeNames() {", "-\tcheckWidget();", "-\tbyte[][] types = _getAvailableTypes();", "-\tString[] names = new String[types.length];", "-\tfor (int i = 0; i < names.length; i++) {", "-\t\t/* Use the character encoding for the default locale */", "-\t\tnames[i] = new String(Converter.mbcsToWcs(null, types[i]));", "-\t}", "-\treturn names;", "-}"]}], "num": 15707}