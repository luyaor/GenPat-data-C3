{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2bf6992605f86bfc00ca1b6374abcb0a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4f88da144e9d99f24709fb2b5dc11cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Button.java", "commitBeforeChange": "57bfa9524366e2532260b57a2f89c88c70885ac1", "commitAfterChange": "dbaeb017fa8743be4b376f4ce8fd6661dd6d9b13", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener()", "signatureAfterChange": "  public void test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener()", "diff": ["-\twarnUnimpl(\"Test test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener not written\");", "+\tlistenerCalled = false;", "+\tSelectionListener listener = new SelectionListener() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tlistenerCalled = true;", "+\t\t};", "+\t\tpublic void widgetDefaultSelected(SelectionEvent e) {", "+\t\t};", "+\t};", "+\t", "+\ttry {", "+\t\tbutton.addSelectionListener(null);", "+\t\tfail(\"No exception thrown for addSelectionListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tbutton.addSelectionListener(listener);", "+\tbutton.notifyListeners(SWT.Selection, new Event());", "+\tassertTrue(listenerCalled);", "+\t", "+\ttry {", "+\t\tbutton.removeSelectionListener(null);", "+\t\tfail(\"No exception thrown for removeSelectionListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\tlistenerCalled = false;", "+\tbutton.removeSelectionListener(listener);", "+\tbutton.notifyListeners(SWT.Selection, new Event());", "+\tassertFalse(listenerCalled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2bdccd14d68575357e7a340505c841a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_MenuItem.java", "commitBeforeChange": "9e9b22e7fbddf56a56c3b41ab019977d0d81ffb2", "commitAfterChange": "98d19b62ddd24b9e1c302a3fa8659cc554d75e7d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener()", "signatureAfterChange": "  public void test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener()", "diff": ["-\twarnUnimpl(\"Test test_addSelectionListenerLorg_eclipse_swt_events_SelectionListener not written\");", "+\tlistenerCalled = false;", "+\tSelectionListener listener = new SelectionListener() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tlistenerCalled = true;", "+\t\t};", "+\t\tpublic void widgetDefaultSelected(SelectionEvent e) {", "+\t\t};", "+\t};", "+\t", "+\ttry {", "+\t\tmenuItem.addSelectionListener(null);", "+\t\tfail(\"No exception thrown for addSelectionListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tmenuItem.addSelectionListener(listener);", "+\tmenuItem.notifyListeners(SWT.Selection, new Event());", "+\tassertTrue(listenerCalled);", "+\t", "+\ttry {", "+\t\tmenuItem.removeSelectionListener(null);", "+\t\tfail(\"No exception thrown for removeSelectionListener with null argument\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\tlistenerCalled = false;", "+\tmenuItem.removeSelectionListener(listener);", "+\tmenuItem.notifyListeners(SWT.Selection, new Event());", "+\tassertFalse(listenerCalled);"]}], "num": 13682}