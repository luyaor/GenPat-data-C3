{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4a261c55fa0b570b46de8c0e9699112", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66aab4feb067bca721df9219295d573c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " public Point toControl (int x, int y)", "signatureAfterChange": " public Point toControl (int x, int y)", "diff": ["-\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\tif (OS.HIVIEW) {", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, handle, 0);", "+\t\tx -= (int) pt.x;", "+\t\ty -= (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t} else {", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\tx -= rect.left;", "+\t\ty -= rect.top;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t}", "+\tx -= rect.left;", "+\ty -= rect.top;", "-\tx -= rect.left - inset.left;", "-\ty -= rect.top - inset.top;", "-\tOS.GetControlBounds (handle, rect);", "-    return new Point (x - rect.left, y - rect.top);", "+\tx += inset.left;", "+\ty += inset.top;", "+    return new Point (x, y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b025935d8c35fdd75d4b7bd140057e34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " public Point toDisplay (int x, int y)", "signatureAfterChange": " public Point toDisplay (int x, int y)", "diff": ["-\tOS.GetControlBounds (handle, rect);", "-\tRect inset = getInset ();", "-\tx += rect.left - inset.left;", "-\ty += rect.top - inset.top;", "-\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-    return new Point (x + rect.left, y + rect.top);", "+\tif (OS.HIVIEW) {", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.HIViewConvertPoint (pt, handle, 0);", "+\t\tx += (int) pt.x;", "+\t\ty += (int) pt.y;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t} else {", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\tx += rect.left;", "+\t\ty += rect.top;", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t}", "+\tx += rect.left;", "+\ty += rect.top;", "+\tRect inset = getInset ();", "+\tx -= inset.left;", "+\ty -= inset.top;", "+    return new Point (x, y);"]}], "num": 24752}