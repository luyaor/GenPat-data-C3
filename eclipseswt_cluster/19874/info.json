{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "369be6feb584e2b42e3b9a7d9349e17c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd4a70aea749def353a83cf97d28c875", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "424d35dbe479f6c496fbe9cbb3f5c77349b337c3", "commitAfterChange": "4d209d85f7eb4f34979ff8a7077fc0bcadbfa87a", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t\t\t\tfillBackground (hDC, nmcd.clrTextBk, rect);", "+\t\t\t\t\t\t\t\t\tif (clrTextBk == -1) {", "+\t\t\t\t\t\t\t\t\t\tControl control = findImageControl ();", "+\t\t\t\t\t\t\t\t\t\tif (control != null) {", "+\t\t\t\t\t\t\t\t\t\t\tfillImageBackground (hDC, control, rect);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tfillBackground (hDC, nmcd.clrTextBk, rect);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tint clrTextBk = -1;", "-\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : -1;", "-\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (useColor && clrTextBk == -1) {", "+\t\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\t\t\t\t\tint right = Math.min (rect.right, width);", "-\t\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.left, rect.top, right, rect.bottom);", "-\t\t\t\t\t\t\t\t\t\t\tfillImageBackground (hDC, control, rect);", "-\t\t\t\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "-\t\t\t\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tif (hItem == item.handle) OS.DrawFocusRect (hDC, rect);", "-\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\trect.left = Math.min (rect.right, rect.left + 2);", "+\t\t\t\t\t\t\tint clrTextBk = -1;", "+\t\t\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : -1;", "+\t\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tfillImageBackground (hDC, control, rect);", "+\t\t\t\t\t\t\t\t\tif (i == 0 && (bits & OS.TVS_FULLROWSELECT) == 0) {", "+\t\t\t\t\t\t\t\t\t\tint right = Math.min (rect.right, width);", "+\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.left, rect.top, right, rect.bottom);", "+\t\t\t\t\t\t\t\t\t\tfillImageBackground (hDC, control, rect);", "+\t\t\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\t\t\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\t\t\t\t\t\t\t\t\tif (hItem == item.handle) OS.DrawFocusRect (hDC, rect);", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\trect.left = Math.min (rect.right, rect.left + 2);", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tfillImageBackground (hDC, control, rect);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0) != 0 && printClient) {", "+\t\t\t\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0) != 0) {", "-\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6 || (bits & OS.TVS_FULLROWSELECT) != 0) {", "-\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\trect.left = item.handle;", "-\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\t\tif (hItem == item.handle) {", "-\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.right, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\t\t\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\t\t\t\t\t\t\t\ttvItem.hItem = item.handle;", "-\t\t\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\t\t\t\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {", "-\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.right, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\t\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) {", "+\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "+\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\t\t\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\t\t\t\t\t\t\t\trect.left = item.handle;", "+\t\t\t\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "+\t\t\t\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\t\t\t\t\t\t\t\tif (hItem == item.handle) {", "+\t\t\t\t\t\t\t\t\t\t\t\tOS.SetRect (rect, rect.right, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\trect.left = nmcd.left;", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\trect.left = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31092702ab10a2fd47ff7c61d5ea1d95", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "64effad0f66392d90fe436b2cdfb9750628edbf7", "commitAfterChange": "80a49f89c5a8052f1a382214fc771eca7a097cd6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative(Object object, TransferData transferData)", "diff": ["-\tif (transferData.type == URILISTID) {", "-\t\t// create a string separated by \"new lines\" to represent list of files", "-\t\tStringBuffer sb = new StringBuffer();", "-\t\tfor (int i = 0, length = files.length; i < length; i++){", "-\t\t\tsb.append(URILIST_PREFIX);", "-\t\t\tsb.append(files[i]);", "-\t\t\tsb.append(URILIST_SEPARATOR);", "-\t\t}", "-\t\tString str = sb.toString();", "-\t\tchar[] chars = new char[str.length()];", "-\t\tstr.getChars (0, chars.length, chars, 0);", "-\t\tbyte[] buffer = new byte[chars.length * 2];", "-\t\tOS.memcpy(buffer, chars, buffer.length);", "-\t\ttransferData.data = new byte[1][];", "-\t\ttransferData.data[0] = buffer;", "-\t\ttransferData.result = 0;", "-\t}", "-\tif (transferData.type == HFSID) {", "-\t\tbyte[][] data = new byte[files.length][];", "-\t\tfor (int i = 0; i < data.length; i++) {", "-\t\t\tFile file = new File(files[i]);", "-\t\t\tboolean isDirectory = file.isDirectory();", "-\t\t\tString fileName = files[i];", "-\t\t\tchar [] chars = new char [fileName.length ()];", "-\t\t\tfileName.getChars (0, chars.length, chars, 0);", "-\t\t\tint cfstring = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "-\t\t\tif (cfstring == 0) return;", "+\tbyte[][] data = new byte[files.length][];", "+\tfor (int i = 0; i < data.length; i++) {", "+\t\tFile file = new File(files[i]);", "+\t\tboolean isDirectory = file.isDirectory();", "+\t\tString fileName = files[i];", "+\t\tchar [] chars = new char [fileName.length ()];", "+\t\tfileName.getChars (0, chars.length, chars, 0);", "+\t\tint cfstring = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, chars, chars.length);", "+\t\tif (cfstring == 0) return;", "+\t\ttry {", "+\t\t\tint url = OS.CFURLCreateWithFileSystemPath(OS.kCFAllocatorDefault, cfstring, OS.kCFURLPOSIXPathStyle, isDirectory);", "+\t\t\tif (url == 0) return;", "-\t\t\t\tint url = OS.CFURLCreateWithFileSystemPath(OS.kCFAllocatorDefault, cfstring, OS.kCFURLPOSIXPathStyle, isDirectory);", "-\t\t\t\tif (url == 0) return;", "-\t\t\t\ttry {", "+\t\t\t\tif (transferData.type == HFSID) {", "-\t\t\t\t} finally {", "-\t\t\t\t\tOS.CFRelease(url);", "+\t\t\t\t}", "+\t\t\t\tif (transferData.type == FURLID) {", "+\t\t\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "+\t\t\t\t\tint theData = OS.CFURLCreateData(OS.kCFAllocatorDefault, url, encoding, true);", "+\t\t\t\t\tif (theData == 0) return;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tint length = OS.CFDataGetLength(theData);", "+\t\t\t\t\t\tbyte[] buffer = new byte[length];", "+\t\t\t\t\t\tCFRange range = new CFRange();", "+\t\t\t\t\t\trange.length = length;", "+\t\t\t\t\t\tOS.CFDataGetBytes(theData, range, buffer);", "+\t\t\t\t\t\tdata[i] = buffer;", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tOS.CFRelease(theData);", "+\t\t\t\t\t}", "-\t\t\t\tOS.CFRelease(cfstring);", "+\t\t\t\tOS.CFRelease(url);", "+\t\t} finally {", "+\t\t\tOS.CFRelease(cfstring);", "-\t\ttransferData.data = data;", "-\t\ttransferData.result = 0;", "+\ttransferData.data = data;", "+\ttransferData.result = 0;"]}], "num": 19874}