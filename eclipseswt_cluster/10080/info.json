{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "508e273d00c8b309e3f66107abf5e56f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea67d4bae1af83a5db52c69016860bbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "diff": ["+\tRect rect = new Rect ();", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (from.handle, rect);", "-\t\tRect inset = from.getInset ();", "-\t\trectangle.x += rect.left - inset.left; ", "-\t\trectangle.y += rect.top - inset.top;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "+\t\t\trectangle.x += (int) pt.x;", "+\t\t\trectangle.y += (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (from.handle, rect);", "+\t\t\trectangle.x += rect.left;", "+\t\t\trectangle.y += rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}", "+\t\tRect inset = from.getInset ();", "+\t\trectangle.x -= inset.left; ", "+\t\trectangle.y -= inset.top;", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (to.handle, rect);", "-\t\tRect inset = to.getInset ();", "-\t\trectangle.x -= rect.left - inset.left; ", "-\t\trectangle.y -= rect.top - inset.top;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "+\t\t\trectangle.x -= (int) pt.x;", "+\t\t\trectangle.y -= (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (to.handle, rect);", "+\t\t\trectangle.x -= rect.left;", "+\t\t\trectangle.y -= rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}", "+\t\tRect inset = to.getInset ();", "+\t\trectangle.x += inset.left; ", "+\t\trectangle.y += inset.top;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7083791cfcb149c8a9adf670c0981650", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public Point map (Control from, Control to, int x, int y)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["+\tRect rect = new Rect ();", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (from.handle, rect);", "-\t\tRect inset = from.getInset ();", "-\t\tpoint.x += rect.left - inset.left; ", "-\t\tpoint.y += rect.top - inset.top;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.HIViewConvertPoint (pt, from.handle, 0);", "+\t\t\tpoint.x += (int) pt.x;", "+\t\t\tpoint.y += (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (from.handle, rect);", "+\t\t\tpoint.x += rect.left;", "+\t\t\tpoint.y += rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}", "+\t\tRect inset = from.getInset ();", "+\t\tpoint.x -= inset.left; ", "+\t\tpoint.y -= inset.top;", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (to.handle, rect);", "-\t\tRect inset = to.getInset ();", "-\t\tpoint.x -= rect.left - inset.left; ", "-\t\tpoint.y -= rect.top - inset.top;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.HIViewConvertPoint (pt, to.handle, 0);", "+\t\t\tpoint.x -= (int) pt.x;", "+\t\t\tpoint.y -= (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (to.handle, rect);", "+\t\t\tpoint.x -= rect.left;", "+\t\t\tpoint.y -= rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}", "+\t\tRect inset = to.getInset ();", "+\t\tpoint.x += inset.left; ", "+\t\tpoint.y += inset.top;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d58002d846a9663fe191e7a20a093a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "03a94c558053b3ed9d02e16929534449bce35247", "commitAfterChange": "661902bf7ee70a356b86fa6a9079f1e6fe9f6a55", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["-\t} else if (data.window != 0 || data.control != 0) {", "+\t} else if (data.control != 0) {", "-\t\tif (data.control != 0) {", "-\t\t\tRect rect = new Rect ();", "-\t\t\tint window = OS.GetControlOwner (data.control);", "-\t\t\tif (OS.HIVIEW) {", "-\t\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\t\tOS.HIViewConvertPoint (pt, data.control, 0);", "-\t\t\t\tx += (int) pt.x;", "-\t\t\t\ty += (int) pt.y;", "-\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t\t\t} else {", "-\t\t\t\tOS.GetControlBounds (data.control, rect);", "-\t\t\t\tx += rect.left;", "-\t\t\t\ty += rect.top;", "-\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t\t}", "-\t\t\tx += rect.left;", "-\t\t\ty += rect.top;", "-\t\t\trect = data.insetRect;", "-\t\t\tx -= rect.left;", "-\t\t\ty -= rect.top;", "+\t\tint width = OS.CGImageGetWidth(imageHandle);", "+\t\tint height = OS.CGImageGetHeight(imageHandle);", "+\t\tint window = OS.GetControlOwner(data.control);", "+\t\tRect srcRect = new Rect ();", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tint[] contentView = new int[1];", "+\t\t\tOS.HIViewFindByID(OS.HIViewGetRoot(window), OS.kHIViewWindowContentID(), contentView);", "+\t\t\tOS.HIViewConvertPoint (pt, data.control, contentView[0]);", "+\t\t\tx += (int) pt.x;", "+\t\t\ty += (int) pt.y;", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (data.control, srcRect);", "+\t\t\tx += srcRect.left;", "+\t\t\ty += srcRect.top;", "+\t\tRect inset = data.insetRect;", "+\t\tx -= inset.left;", "+\t\ty -= inset.top;", "+\t\tsrcRect.left = (short)x;", "+\t\tsrcRect.top = (short)y;", "+\t\tsrcRect.right = (short)(x + width);", "+\t\tsrcRect.bottom = (short)(y + height);", "+\t\tRect destRect = new Rect();", "+\t\tdestRect.right = (short)width;", "+\t\tdestRect.bottom = (short)height;", "+\t\tint bpl = width * 4;", "+\t\tint[] gWorld = new int[1];", "+\t\tint port = OS.GetWindowPort(window);\t\t", "+\t\tOS.NewGWorldFromPtr(gWorld, OS.k32ARGBPixelFormat, destRect, 0, 0, 0, image.data, bpl);", "+\t\tOS.CopyBits(OS.GetPortBitMapForCopyBits(port), OS.GetPortBitMapForCopyBits(gWorld[0]), srcRect, destRect, (short)OS.srcCopy, 0);\t\t\t", "+\t\tOS.DisposeGWorld(gWorld [0]);", "+\t} else if (data.window != 0) {", "+\t\tint imageHandle = image.handle;"]}], "num": 10080}