{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7559b91d35b078953cdf8b1e0f2dbd24", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f2d18e8f7033fe0ece8b69831624c12", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "b91a30793e7e8c5606152cc812bcc01c1c2328b1", "commitAfterChange": "441ed9e06bf32a499ab28cffbd9de4abcf50c019", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["+ */", "+public void setContents(Object[] data, Transfer[] dataTypes, int clipboards) {", "-\tif (data == null || dataTypes == null || data.length != dataTypes.length) {", "+\tif (data == null || dataTypes == null || data.length != dataTypes.length || data.length == 0) {", "-\t", "+\tfor (int i = 0; i < data.length; i++) {", "+\t\tif (data[i] == null || dataTypes[i] == null || !dataTypes[i].validate(data[i])) {", "+\t\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tif ((clipboards & DND.CLIPBOARD) == 0) return;", "-", "-\tint result = COM.OleSetClipboard(this.iDataObject.getAddress());", "+\tint result = COM.OleSetClipboard(iDataObject.getAddress());", "-\t\ttry { Thread.sleep(50);} catch (Throwable t) {}", "+\t\ttry {Thread.sleep(50);} catch (Throwable t) {}", "-\t\tCOM.PeekMessage (msg, 0, 0, 0, OS.PM_NOREMOVE | OS.PM_NOYIELD);", "-\t\tresult = COM.OleSetClipboard(this.iDataObject.getAddress());", "+\t\tOS.PeekMessage(msg, 0, 0, 0, OS.PM_NOREMOVE | OS.PM_NOYIELD);", "+\t\tresult = COM.OleSetClipboard(iDataObject.getAddress());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d6026e72cdaa4d72b642bb5fb51875", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "0a3250432c091984e54020b803ff60b72c89c419", "commitAfterChange": "6eee8cc76bf8bf747789f3f292824ad582cc9c24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["+ */", "+public void setContents(Object[] data, Transfer[] dataTypes, int clipboards) {", "-\tif (data == null || dataTypes == null || data.length != dataTypes.length) {", "+\tif (data == null || dataTypes == null || data.length != dataTypes.length || data.length == 0) {", "+\tfor (int i = 0; i < data.length; i++) {", "+\t\tif (data[i] == null || dataTypes[i] == null || !dataTypes[i].validate(data[i])) {", "+\t\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tif ((clipboards & DND.CLIPBOARD) == 0) return;", "-\tint[] scrap = new int[1];", "-\tif (OS.GetCurrentScrap(scrap) != OS.noErr) {", "+\tscrap = 0;", "+\tint[] currentScrap = new int[1];", "+\tif (OS.GetCurrentScrap(currentScrap) != OS.noErr) {", "+\tscrap = currentScrap[0];", "-\t\t\tif (OS.PutScrapFlavor(scrap[0], transferData.type, 0, datum.length, datum) != OS.noErr){", "+\t\t\tif (OS.PutScrapFlavor(scrap, transferData.type, 0, datum.length, datum) != OS.noErr){"]}], "num": 8532}