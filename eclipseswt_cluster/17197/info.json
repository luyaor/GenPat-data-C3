{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e42c7111e7b3cdc2101f21da302dce5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b40708ff010739b6f09009d481484ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "f4abd83d57d77245094f225bf96065fc437b4479", "commitAfterChange": "8ab0cb1a59e576205e88d233b12556089108ede1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Rectangle getClientArea()", "signatureAfterChange": " public Rectangle getClientArea()", "diff": ["-//\tPMRect pageRect = new PMRect();", "-//\tOS.PMGetAdjustedPageRect(pageFormat, pageRect);", "-//\treturn new Rectangle(0, 0, (int)(pageRect.right-pageRect.left), (int)(pageRect.bottom-pageRect.top));", "-\treturn null;", "+\tNSRect rect = printInfo.imageablePageBounds();", "+\treturn new Rectangle((int)rect.x, (int)rect.y, (int)rect.width, (int)rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a82215718d2d0e406bd7bd0ed380baeb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1abca3de880ca8fa3712038f321ffb3a0803dd38", "commitAfterChange": "1fcdb5569a20cdd8ecab2986180db47c5142ee2d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public Point getLocation(int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation(int offset, boolean trailing)", "diff": ["-\t\toffset = translateOffset(offset);", "-\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "-\t\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "-\t\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "-\t\tboolean rtl = false;", "-\t\tNSRange range  = new NSRange();", "-\t\trange.location = glyphIndex;", "-\t\trange.length = 1;", "-\t\tbyte[] bidiLevels = new byte[1];", "-\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, bidiLevels);", "-\t\tif (result > 0) {", "-\t\t\trtl = (bidiLevels[0] & 1) != 0;", "-\t\t}", "-\t\tif (trailing != rtl) {", "-\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "-\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, rectCount);", "-\t\t\tif (rectCount[0] > 0) {", "-\t\t\t\tNSRect bounds = new NSRect();", "-\t\t\t\tOS.memmove(bounds, pArray, NSRect.sizeof);", "-\t\t\t\tfixRect(bounds);", "-\t\t\t\tpoint.x += bounds.width;", "+\t\tif (offset == length) {", "+\t\t\tNSRect rect = lineBounds[lineBounds.length - 1];", "+\t\t\treturn new Point((int)(rect.x + rect.width), (int)rect.y);", "+\t\t} else {", "+\t\t\toffset = translateOffset(offset);", "+\t\t\tint /*long*/ glyphIndex = layoutManager.glyphIndexForCharacterAtIndex(offset);", "+\t\t\tNSRect rect = layoutManager.lineFragmentUsedRectForGlyphAtIndex(glyphIndex, 0);", "+\t\t\tNSPoint point = layoutManager.locationForGlyphAtIndex(glyphIndex);", "+\t\t\tboolean rtl = false;", "+\t\t\tNSRange range  = new NSRange();", "+\t\t\trange.location = glyphIndex;", "+\t\t\trange.length = 1;", "+\t\t\tbyte[] bidiLevels = new byte[1];", "+\t\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, bidiLevels);", "+\t\t\tif (result > 0) {", "+\t\t\t\trtl = (bidiLevels[0] & 1) != 0;", "+\t\t\tif (trailing != rtl) {", "+\t\t\t\tint /*long*/ [] rectCount = new int /*long*/ [1];", "+\t\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, rectCount);", "+\t\t\t\tif (rectCount[0] > 0) {", "+\t\t\t\t\tNSRect bounds = new NSRect();", "+\t\t\t\t\tOS.memmove(bounds, pArray, NSRect.sizeof);", "+\t\t\t\t\tfixRect(bounds);", "+\t\t\t\t\tpoint.x += bounds.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn new Point((int)point.x, (int)rect.y);", "-\t\treturn new Point((int)point.x, (int)rect.y);"]}], "num": 17197}