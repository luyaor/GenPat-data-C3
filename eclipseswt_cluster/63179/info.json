{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01ba209ca589fe3762011eae9e4f9ca5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ec8a49703c139efc2205294d43efdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "79b22d4c9299867b5e6bfd292d5eba2d4bba29ca", "commitAfterChange": "6e253d4ff28b7025cf133ad01c32b03815ca7642", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tprivate void syncBounds()", "signatureAfterChange": " \tprivate void syncBounds()", "diff": ["-\t * Synchronize the size of the MLTEtext with the underlying HIView.\r\t */", "+\t * Synchronize the size and visibilty of the MLTEtext with the underlying HIView.\r\t */", "-\t\t", "+\t\t\t\t\t", "+\t\t", "+\t\tboolean isShowing= isShowing();", "+\t\t", "+\t\tif (isShowing != fVisible) {", "+\t\t\tfVisible= isShowing;", "+\t\t\tint[] tags= new int[] { OS.kTXNVisibilityTag };", "+\t\t\tint[] data= new int[] { fVisible ? 1 : 0 };", "+\t\t\tOS.TXNSetTXNObjectControls(fTX, false, tags.length, tags, data);", "+\t\t\t", "+\t\t\tif (!isShowing)", "+\t\t\t\treturn;", "+\t\t}", "+\t\t", "+//\t\tif (e2 && !e1) {\t\t", "+//\t\t\tSystem.out.println(\"sync: \" + e1 + \" \"  + e2);", "+//\t\t\tSystem.out.println(\"  \" + new Rectangle(b.left, b.top, b.right-b.left, b.bottom-b.top));", "+//\t\t}", "+\t\t\tOS.HIViewSetNeedsDisplay(handle, true);", "-\t\tOS.TXNDraw(fTX, 0);", "+\t\tif (isShowing)", "+\t\t\tOS.TXNDraw(fTX, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b198963397e2b692c71e18aad8d088b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \t \tprivate void syncBounds(Rect b)", "signatureAfterChange": " \tprivate void syncBounds()", "diff": ["-\tprivate void syncBounds(Rect b) {", "+\t * Synchronize the size of the MLTEtext with the underlying HIView.\r\t */", "+\tprivate void syncBounds() {", "-\t", "-\t\tif (b == null) {", "-\t\t\tb= new Rect();", "-\t\t\tOS.GetControlBounds(handle, b);", "-\t\t}", "-\t", "-\t\tint x= b.left;", "-\t\tint y= b.top;", "-\t\tint w= b.right - b.left;", "-\t\tint h= b.bottom - b.top;", "+\t\tRect b= new Rect();", "+\t\tMacUtil.getControlBounds(handle, b);", "+\t\t", "+\t\t// this is just too hard to explain...", "+\t\tOS.HIViewSetBoundsOrigin(handle, b.left, b.top);", "+\t\t\t\t", "-\t\t\tx+= FOCUS_BORDER;", "-\t\t\ty+= FOCUS_BORDER;", "-\t\t\tw-= 2*FOCUS_BORDER;", "-\t\t\th-= 2*FOCUS_BORDER;", "+\t\t\tb.left+= FOCUS_BORDER;", "+\t\t\tb.top+= FOCUS_BORDER;", "+\t\t\tb.right-= FOCUS_BORDER;", "+\t\t\tb.bottom-= FOCUS_BORDER;", "-\t\tfFrameBounds= new Rectangle(x, y, w, h);", "+\t\tfFrameBounds= new Rectangle(b.left, b.top, b.right-b.left, b.bottom-b.top);", "-\t\t\tOS.TXNSetFrameBounds(fTX, y, x, y+h, x+w, fFrameID);", "+\t\t\tOS.TXNSetFrameBounds(fTX, b.top, b.left, b.bottom, b.right, fFrameID);"]}], "num": 63179}