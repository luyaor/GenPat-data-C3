{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33ad31f22444cfb6f6ee6416b0bf1878", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29a0ed69ab351fafa337594b125eb8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6b905c3eb76c3c0c8d47ed9e88c64f2954530229", "commitAfterChange": "8b66a88111a5c0bbf49bacf4f87f8d702b5567a8", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 71, "signatureBeforeChange": "  public void setItemCount (int count)", "signatureAfterChange": "  public void setItemCount (int count)", "diff": ["-\tfor (int i=0; i<itemCount; i++) {", "-\t\titems [i] = new TableItem (this, SWT.NONE, -1, false);", "+\tif ((style & SWT.VIRTUAL) == 0) {", "+\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\titems [i] = new TableItem (this, SWT.NONE, i, true);", "+\t\t}", "+", "+\t/*", "+\t* Feature in the Mac. When AddDataBrowserItems() is used", "+\t* to add items, item notification callbacks are issued with", "+\t* the message kDataBrowserItemAdded.  When many items are", "+\t* added, this is slow.  The fix is to temporarily remove", "+\t* the item notification callback.", "+\t*/", "+\tDataBrowserCallbacks callbacks = new DataBrowserCallbacks ();", "+\tOS.GetDataBrowserCallbacks (handle, callbacks);", "+\tcallbacks.v1_itemNotificationCallback = 0;", "+\tOS.SetDataBrowserCallbacks (handle, callbacks);", "+\tcallbacks.v1_itemNotificationCallback = display.itemNotificationProc;", "+\tOS.SetDataBrowserCallbacks (handle, callbacks);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "452ccc420769dd9d320ebdeff7b8734b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 12, "signatureBeforeChange": " int processKeyUp (Object callData)", "signatureAfterChange": "  void drawWidget (int control)", "diff": ["+", "+void drawWidget (int control) {", "+\tdrawBackground (control, null);", "+\tif ((style & SWT.SEPARATOR) != 0) {", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\trect.top += 2;", "+\t\trect.bottom -= 2;", "+\t\tOS.DrawThemeSeparator (rect, 0);", "-}", "-int processKeyUp (Object callData) {", "-\t/* AW", "-\tXKeyEvent xEvent = new XKeyEvent ();", "-\tOS.memmove (xEvent, callData, XKeyEvent.sizeof);", "-\tint [] keysym = new int [1];", "-\tOS.XLookupString (xEvent, null, 0, keysym, null);", "-\tkeysym [0] &= 0xFFFF;", "-\tswitch (keysym [0]) {", "-\t\tcase OS.XK_space:", "-\t\tcase OS.XK_Return:", "-\t\t\tclick (keysym [0] == OS.XK_Return, xEvent);", "-\t\t\tbreak;", "-\t}", "-\t*/", "-\t/*", "-\t* Forward the key event to the parent.", "-\t* This is necessary so that mouse listeners", "-\t* in the parent will be called, despite the", "-\t* fact that the event did not really occur", "-\t* in X in the parent.  This is done to be", "-\t* compatible with Windows.", "-\t*/", "-\t/* AW", "-\txEvent.window = OS.XtWindow (parent.handle);", "-//\tOS.memmove (callData, xEvent, XKeyEvent.sizeof);", "-\t*/", "-\tparent.processKeyUp (callData);", "-\treturn 0;", "-}"]}], "num": 9272}