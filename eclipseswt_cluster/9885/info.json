{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40802e1feac085fe305649a28610c980", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c62ab6a0096cfd5e9602f5b06ff1201", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "1c50eff53dc85ab784f3be9eddff2d8981b79b1a", "commitAfterChange": "eb253346e0d2ad7850f43d0121e1fb12dc46a2a1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \r boolean restoreFocus ()", "signatureAfterChange": "\r \r boolean restoreFocus ()", "diff": ["-\tif (savedFocus == null) return false;\r", "-\treturn savedFocus.forceFocus ();\r", "+\tif (savedFocus != null && savedFocus.forceFocus ()) return true;\r", "+\tif (defaultButton != null && !defaultButton.isDisposed ()) {\r", "+\t\tif (defaultButton.setFocus ()) return true;\r", "+\t}\r", "+\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd25baf1556127bea0577ee6cab4f96c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "458e4c818aa0cfc5b0c3e53721bf8b222d93458f", "commitAfterChange": "eac8b15d9501efb6127f7d0e1ad25255ce6aa2a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void dispose ()", "signatureAfterChange": "\r public void dispose ()", "diff": ["-\tif (arrowImage != null) arrowImage.dispose();\r", "+\t\r", "+\t/* The parent for the chevron is the coolbar (coolItem can not be the parent)\r", "+\t * but it has to be disposed with the item \r", "+\t */\r", "+\tif (chevron != null && !chevron.isDisposed()) chevron.dispose();\r", "+\tchevron = null;\r", "+\tif (arrowImage != null && !arrowImage.isDisposed()) arrowImage.dispose();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a043e34d74190ab4ff83a773171718d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTreeEditor.java", "commitBeforeChange": "b3b12507ebeba4a8ffbdb02ea3586141d0d03d53", "commitAfterChange": "f1a7f0cfddb58548617c4cc1605587e2f8e18d20", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (treeListener != null) ", "-\t\ttableTree.removeTreeListener(treeListener);", "-\ttreeListener = null;\t", "-\tTable table = tableTree.getTable();", "-\tif (this.column > -1 && this.column < table.getColumnCount()){", "-\t\tTableColumn tableColumn = table.getColumn(this.column);", "-\t\ttableColumn.removeControlListener(columnListener);", "+\tif (tableTree != null && !tableTree.isDisposed()) {", "+\t\tTable table = tableTree.getTable();", "+\t\tif (table != null && !table.isDisposed()) {", "+\t\t\tif (this.column > -1 && this.column < table.getColumnCount()){", "+\t\t\t\tTableColumn tableColumn = table.getColumn(this.column);", "+\t\t\t\ttableColumn.removeControlListener(columnListener);", "+\t\t\t}", "+\t\t}", "+\t\tif (treeListener != null) tableTree.removeTreeListener(treeListener);", "+\ttreeListener = null;", "+\tcolumnListener = null;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc726ad535b9b513b811ee47ceb34316", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "971a8d58a7bbc8d85b15b2fb709768fd88737149", "commitAfterChange": "76745e7c3ba490c9a585129f47a0eb510552d745", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkEnterExit (Control control, NSEvent nsEvent, boolean send)", "signatureAfterChange": "  void checkEnterExit (Control control, NSEvent nsEvent, boolean send)", "diff": ["-\t\tif (currentControl != null) {", "+\t\tif (currentControl != null && !currentControl.isDisposed()) {", "+\t\tif (control != null && control.isDisposed()) control = null;", "-\ttimerExec (control != null ? getToolTipTime () : -1, hoverTimer);", "+\ttimerExec (control != null && !control.isDisposed() ? getToolTipTime () : -1, hoverTimer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a076a51e8249c95821d5fa2cf85d89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "\r \r boolean traverseGroup (boolean next)", "signatureAfterChange": "\r \r boolean traverseGroup (boolean next)", "diff": ["+\t/*\r", "+\t* It is possible (but unlikely), that application\r", "+\t* code could have disposed the widget in focus in\r", "+\t* or out events.  Ensure that a disposed widget is\r", "+\t* not accessed.\r", "+\t*/\r", "-\t\tif (list [index].setTabGroupFocus () && !isFocusControl ()) return true;\r", "+\t\tControl control = list [index];\r", "+\t\tif (!control.isDisposed () && control.setTabGroupFocus ()) {\r", "+\t\t\tif (!isDisposed () && !isFocusControl ()) return true;\r", "+\t\t}\r", "+\tif (group.isDisposed ()) return false;\r"]}], "num": 9885}