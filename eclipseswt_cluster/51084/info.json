{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efaac3132c2432bdfc243b1440891c5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d37535abf5cf6f8cce6dd45964de60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/ImageData.java", "commitBeforeChange": "881f889067c32dc9cc929042fa81de775a852ed3", "commitAfterChange": "3157b86f8a6b5c49725c9486eede898beaf8ba2d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r static void stretch4(byte[] srcData, int srcStride, int srcX, int srcY, int srcWidth, int srcHeight, byte[] destData, int destStride, int destX, int destY, int destWidth, int destHeight, int[] mapping, boolean flipX, boolean flipY)", "signatureAfterChange": "\r static void stretch4(\r \tbyte[] srcData, int srcStride,\r \tint srcX, int srcY, int srcWidth, int srcHeight,\r \tbyte[] destData, int destStride,\r \tint destX, int destY, int destWidth, int destHeight,\r \tint[] paletteMapping, boolean flipX, boolean flipY)", "diff": ["- */\r", "-static void stretch4(byte[] srcData, int srcStride, int srcX, int srcY, int srcWidth, int srcHeight, byte[] destData, int destStride, int destX, int destY, int destWidth, int destHeight, int[] mapping, boolean flipX, boolean flipY) {\r", "-\tint xs1, ys1, xs2, ys2, xd1, yd1, xd2, yd2;\r", "-\tint dyd, dys, ey, dy, dyd2, dys2, yd, ys;\r", "-\tshort syd, sys;\r", "-\tint dxd, dxs, ex, dx, dxd2, dxs2, xs, xd;\r", "-\tshort sxd, sxs;\r", "-\tbyte pixel;\r", "-\tint sp, dp;\r", "-\t\r", "-\txs1 = srcX; xs2 = srcX + srcWidth - 1;\r", "-\tys1 = srcY; ys2 = srcY + srcHeight - 1;\r", "-\tif (flipX) {\r", "-\t\txd1 = destX + destWidth - 1;\r", "-\t\txd2 = destX;\r", "-\t} else {\r", "-\t\txd1 = destX;\r", "-\t\txd2 = destX + destWidth - 1;\r", "-\t}\r", "-\tif (flipY) {\r", "-\t\tyd1 = destY + destHeight - 1;\r", "-\t\tyd2 = destY;\r", "-\t} else {\r", "-\t\tyd1 = destY;\r", "-\t\tyd2 = destY + destHeight - 1;\r", "-\t}\r", "-\r", "-\t/* Y preliminary calculations */\r", "-\tdyd = yd2 - yd1;\r", "-\tif (dyd < 0) dyd = -dyd;\r", "-\tdys = ys2 - ys1;\r", "-\tif (dys < 0) dys = -dys;\r", "-\tdyd2 = dyd << 1;\r", "-\tdys2 = dys << 1;\r", "-\tsyd = (short)((yd2 - yd1) > 0 ? 1 : -1);\r", "-\tsys = (short)((ys2 - ys1) > 0 ? 1 : -1);\r", "-\tey = dys2 - dyd;\r", "-\tys = ys1;\r", "-\tyd = yd1;\r", "-\t/* X preliminary calculations */\r", "-\tdxd = xd2 - xd1;\r", "-\tif (dxd < 0) dxd = -dxd;\r", "-\tdxs = xs2 - xs1;\r", "-\tif (dxs < 0) dxs = -dxs;\r", "-\tdxd2 = dxd << 1;\r", "-\tdxs2 = dxs << 1;\r", "-\tsxd = (short)((xd2 - xd1) > 0 ? 1 : -1);\r", "-\tsxs = (short)((xs2 - xs1) > 0 ? 1 : -1);\r", "-\t\r", "-\tfor (dy = 0; dy <= dyd; dy++) {\r", "-\t\t/* X stretch starts here */\r", "-\t\tex = dxs2 - dxd;\r", "-\t\txs = xs1;\r", "-\t\txd = xd1;\r", "-\t\tsp = ys * srcStride;\r", "-\t\tdp = yd * destStride;\r", "-\t\tint x = srcData[sp + (xs >> 1)];\r", "-\t\tif ((xs & 1) != 0) {\r", "-\t\t\tpixel = (byte)((mapping == null) ? (x & 0x0F) : (mapping[x & 0x0F] & 0x0F));\r", "-\t\t} else {\r", "-\t\t\tpixel = (byte)((mapping == null) ? (x >> 4) : (mapping[x >> 4] & 0x0F));\r", "-\t\t}\r", "-\t\tfor (dx = 0; dx < dxd; dx++) {\r", "-\t\t\tif ((xd & 1) != 0)\r", "-\t\t\t\tdestData[dp + (xd >> 1)] = (byte)((destData[dp + (xd >> 1)] & 0xF0) | pixel);\r", "-\t\t\telse\r", "-\t\t\t\tdestData[dp + (xd >> 1)] = (byte)((destData[dp + (xd >> 1)] & 0x0F) | (pixel << 4));\r", "-\t\t\tif (ex >= 0) {\r", "-\t\t\t\tdo {\r", "-\t\t\t\t\txs += sxs;\r", "-\t\t\t\t\tex -= dxd2;\r", "-\t\t\t\t} while (ex >= 0);\r", "-\t\t\t\tx = srcData[sp + (xs >> 1)];\r", "-\t\t\t\tif ((xd & 1) != 0) {\r", "-\t\t\t\t\tpixel = (byte)((mapping == null) ? (x & 0x0F) : (mapping[x & 0x0F] & 0x0F));\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tpixel = (byte)((mapping == null) ? ((x >> 4) & 0x0F) : (mapping[x >> 4] & 0x0F));\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t\txd += sxd;\r", "-\t\t\tex += dxs2;\r", "-\t\t}\r", "-\t\tif ((xd & 1) != 0)\r", "-\t\t\tdestData[dp + (xd >> 1)] = (byte)((destData[dp + (xd >> 1)] & 0xF0) | pixel);\r", "-\t\telse\r", "-\t\t\tdestData[dp + (xd >> 1)] = (byte)((destData[dp + (xd >> 1)] & 0x0F) | (pixel << 4));\r", "-\t\t/* X stretch ends here */\r", "-\t\tif (dy == dyd)\r", "-\t\t\tbreak;\r", "-\t\twhile (ey >= 0) {\r", "-\t\t\tys += sys;\r", "-\t\t\tey -= dyd2;\r", "-\t\t}\r", "-\t\tyd += syd;\r", "-\t\tey += dys2;\r", "-\t}\r", "+ */\r", "+static void stretch4(\r", "+\tbyte[] srcData, int srcStride,\r", "+\tint srcX, int srcY, int srcWidth, int srcHeight,\r", "+\tbyte[] destData, int destStride,\r", "+\tint destX, int destY, int destWidth, int destHeight,\r", "+\tint[] paletteMapping, boolean flipX, boolean flipY) {\r", "+\tblit(BLIT_SRC,\r", "+\t\tsrcData, 2, srcStride, MSB_FIRST, srcX, srcY, srcWidth, srcHeight, null, null, null,\r", "+\t\tALPHA_OPAQUE, null, 0,\r", "+\t\tdestData, 2, destStride, MSB_FIRST, destX, destY, destWidth, destHeight, null, null, null,\r", "+\t\tflipX, flipY);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4a4781c95d7776fa7b366b3b93dedd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/ImageData.java", "commitBeforeChange": "881f889067c32dc9cc929042fa81de775a852ed3", "commitAfterChange": "3157b86f8a6b5c49725c9486eede898beaf8ba2d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r static void stretch2(byte[] srcData, int srcStride, int srcX, int srcY, int srcWidth, int srcHeight, byte[] destData, int destStride, int destX, int destY, int destWidth, int destHeight, int[] mapping, boolean flipX, boolean flipY)", "signatureAfterChange": "\r static void stretch2(\r \tbyte[] srcData, int srcStride,\r \tint srcX, int srcY, int srcWidth, int srcHeight,\r \tbyte[] destData, int destStride,\r \tint destX, int destY, int destWidth, int destHeight,\r \tint[] paletteMapping, boolean flipX, boolean flipY)", "diff": ["-static void stretch2(byte[] srcData, int srcStride, int srcX, int srcY, int srcWidth, int srcHeight, byte[] destData, int destStride, int destX, int destY, int destWidth, int destHeight, int[] mapping, boolean flipX, boolean flipY) {\r", "-\tint xs1, ys1, xs2, ys2, xd1, yd1, xd2, yd2;\r", "-\tint dyd, dys, ey, dy, dyd2, dys2, yd, ys;\r", "-\tshort syd, sys;\r", "-\tint dxd, dxs, ex, dx, dxd2, dxs2, xs, xd;\r", "-\tshort sxd, sxs;\r", "-\tbyte pixel;\r", "-\tint sp, dp, x;\r", "-\tbyte [] masks = { (byte)0x03, (byte)0x0C, (byte)0x30, (byte)0xC0 };\r", "-\tbyte [] inverseMasks = { (byte)0xFC, (byte)0xF3, (byte)0xCF, (byte)0x3F };\r", "-\t\r", "-\txs1 = srcX; xs2 = srcX + srcWidth - 1;\r", "-\tys1 = srcY; ys2 = srcY + srcHeight - 1;\r", "-\tif (flipX) {\r", "-\t\txd1 = destX + destWidth - 1;\r", "-\t\txd2 = destX;\r", "-\t} else {\r", "-\t\txd1 = destX;\r", "-\t\txd2 = destX + destWidth - 1;\r", "-\tif (flipY) {\r", "-\t\tyd1 = destY + destHeight - 1;\r", "-\t\tyd2 = destY;\r", "-\t} else {\r", "-\t\tyd1 = destY;\r", "-\t\tyd2 = destY + destHeight - 1;\r", "-\t}\r", "-\t/* Y preliminary calculations */\r", "-\tdyd = yd2 - yd1;\r", "-\tif (dyd < 0) dyd = -dyd;\r", "-\tdys = ys2 - ys1;\r", "-\tif (dys < 0) dys = -dys;\r", "-\tdyd2 = dyd << 1;\r", "-\tdys2 = dys << 1;\r", "-\tsyd = (short)((yd2 - yd1) > 0 ? 1 : -1);\r", "-\tsys = (short)((ys2 - ys1) > 0 ? 1 : -1);\r", "-\tey = dys2 - dyd;\r", "-\tys = ys1;\r", "-\tyd = yd1;\r", "-\t/* X preliminary calculations */\r", "-\tdxd = xd2 - xd1;\r", "-\tif (dxd < 0) dxd = -dxd;\r", "-\tdxs = xs2 - xs1;\r", "-\tif (dxs < 0) dxs = -dxs;\r", "-\tdxd2 = dxd << 1;\r", "-\tdxs2 = dxs << 1;\r", "-\tsxd = (short)((xd2 - xd1) > 0 ? 1 : -1);\r", "-\tsxs = (short)((xs2 - xs1) > 0 ? 1 : -1);\r", "-\t\r", "-\tfor (dy = 0; dy <= dyd; dy++) {\r", "-\t\t/* X stretch starts here */\r", "-\t\tint offset = 3 - (srcX % 4);\r", "-\t\tex = dxs2 - dxd;\r", "-\t\txs = xs1;\r", "-\t\txd = xd1;\r", "-\t\tsp = ys * srcStride;\r", "-\t\tdp = yd * destStride;\r", "-\t\tx = (byte)(((srcData[sp + (xs >> 2)] & masks[offset]) & 0xFF) >> (offset * 2));\r", "-\t\tpixel = (byte)(mapping == null ? x : mapping[x]);\r", "-\t\tfor (dx = 0; dx < dxd; dx++) {\r", "-\t\t\tdestData[dp + (xd >> 2)] = (byte)((destData[dp + (xd >> 2)] & inverseMasks[offset]) | (pixel << (offset * 2)));\r", "-\t\t\tif (ex >= 0) {\r", "-\t\t\t\tdo {\r", "-\t\t\t\t\txs += sxs;\r", "-\t\t\t\t\tex -= dxd2;\r", "-\t\t\t\t} while (ex >= 0);\r", "-\t\t\t\tx = (byte)(((srcData[sp + (xs >> 2)] & masks[offset]) & 0xFF) >> (offset * 2));\r", "-\t\t\t\tpixel = (byte)(mapping == null ? x : mapping[x]);\r", "-\t\t\t}\r", "-\t\t\txd += sxd;\r", "-\t\t\tex += dxs2;\r", "-\t\t\tif (offset == 0) {\r", "-\t\t\t\toffset = 3;\r", "-\t\t\t} else {\r", "-\t\t\t\toffset--;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tdestData[dp + (xd >> 2)] = (byte)((destData[dp + (xd >> 2)] & inverseMasks[offset]) | (pixel << (offset * 2)));\r", "-\t\t/* X stretch ends here */\r", "-\t\tif (dy == dyd)\r", "-\t\t\tbreak;\r", "-\t\twhile (ey >= 0) {\r", "-\t\t\tys += sys;\r", "-\t\t\tey -= dyd2;\r", "-\t\t}\r", "-\t\tyd += syd;\r", "-\t\tey += dys2;\r", "-\t}\r", "+ */\r", "+static void stretch2(\r", "+\tbyte[] srcData, int srcStride,\r", "+\tint srcX, int srcY, int srcWidth, int srcHeight,\r", "+\tbyte[] destData, int destStride,\r", "+\tint destX, int destY, int destWidth, int destHeight,\r", "+\tint[] paletteMapping, boolean flipX, boolean flipY) {\r", "+\tblit(BLIT_SRC,\r", "+\t\tsrcData, 2, srcStride, MSB_FIRST, srcX, srcY, srcWidth, srcHeight, null, null, null,\r", "+\t\tALPHA_OPAQUE, null, 0,\r", "+\t\tdestData, 2, destStride, MSB_FIRST, destX, destY, destWidth, destHeight, null, null, null,\r", "+\t\tflipX, flipY);\r", "+}\r"]}], "num": 51084}