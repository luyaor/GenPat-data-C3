{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abca9f5b89aa3d31a60f90387b32c94a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc1e7145c68387c4f7b5c90cda6130e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "c6f6287d8b8fdc02e78b208f87146aa3823ab38c", "commitAfterChange": "eae5c56386c6900bfd7feddaea222ffeb4fcdf2a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r private Vector getDirectionRuns(int logicalStart, int length)", "signatureAfterChange": "\r private Vector getDirectionRuns(int logicalStart, int length)", "diff": ["+\t\tint bidiSegmentIndex = 0;\r", "+\t\tint bidiSegmentEnd = bidiSegments[bidiSegmentIndex + 1];\t\t\t\r", "+\r", "+\t\t// Find the bidi segment that the direction runs start in.\r", "+\t\t// There will always be at least on bidi segment (for the entire line).\r", "+\t\twhile (bidiSegmentIndex < bidiSegments.length - 2 && bidiSegmentEnd <= logicalStart) {\r", "+\t\t\tbidiSegmentIndex++;\r", "+\t\t\tbidiSegmentEnd = bidiSegments[bidiSegmentIndex + 1];\r", "+\t\t}\r", "-\t\t\twhile (segmentLogicalEnd < logicalEnd && segType == classBuffer[segmentLogicalEnd + 1]) {\r", "+\t\t\twhile (segmentLogicalEnd < logicalEnd &&\r", "+\t\t\t\t\tsegType == classBuffer[segmentLogicalEnd + 1] &&\r", "+\t\t\t\t\tsegmentLogicalEnd + 1 < bidiSegmentEnd) {\r", "+\t\t\t// The current direction run ends at a bidi segment end. Get the next bidi segment.\r", "+\t\t\tif (segmentLogicalEnd == bidiSegmentEnd && bidiSegmentIndex < bidiSegments.length - 2) {\r", "+\t\t\t\tbidiSegmentIndex++;\r", "+\t\t\t\tbidiSegmentEnd = bidiSegments[bidiSegmentIndex + 1];\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66bd194ecac58762bc8d943615e4d9bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "db8003c8f90beb76b88b1209aa0ad9e6c8d8c3d2", "commitAfterChange": "d3c0efa94b11c766b17f4670a7e8438e97a87bdc", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": " StyledTextEvent getBidiSegments(int lineOffset, String line)", "signatureAfterChange": " StyledTextEvent getBidiSegments(int lineOffset, String line)", "diff": ["-\tint segmentCount = segments.length;", "-\tif (event.segmentsChars == null) {", "-\t\t// test segment index consistency", "-\t\tif (segments[0] != 0) {", "+\tif (segments[0] > lineLength) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tfor (int i = 1; i < segments.length; i++) {", "+\t\tif (segments[i] <= segments[i - 1] || segments[i] > lineLength) {", "-\t\t}", "-\t\tfor (int i = 1; i < segmentCount; i++) {", "-\t\t\tif (segments[i] <= segments[i - 1] || segments[i] > lineLength) {", "-\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\t}", "-\t\t}", "-\t\t// ensure that last segment index is line end offset", "-\t\tif (segments[segmentCount - 1] != lineLength) {", "-\t\t\tsegments = new int[segmentCount + 1];", "-\t\t\tSystem.arraycopy(event.segments, 0, segments, 0, segmentCount);", "-\t\t\tsegments[segmentCount] = lineLength;", "-\t\t}", "-\t\tevent.segments = segments;", "-\t} else {", "-\t\tfor (int i = 1; i < segmentCount; i++) {", "-\t\t\tif (event.segments[i] < event.segments[i - 1] || event.segments[i] > lineLength) {", "-\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\t}"]}], "num": 23955}