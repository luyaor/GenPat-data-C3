{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e74cb0a9ff6716c0dac61b8e79cc657d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8f2cf9ea94a2270704c41a7a893055", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createChildWidgets ()", "signatureAfterChange": " \tvoid createChildWidgets ()", "diff": ["-\t\t\t}", "-\t\t});", "-\t\t", "-\t\t/* Add listener to add an element to the table */", "-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tfinal Menu menu = new Menu(shell, SWT.POP_UP);\t\t\t\t\t", "-\t\t\t\t\tfor (int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener(new SelectionAdapter () {", "-\t\t\t\t\t\t\tpublic void widgetSelected (SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem (table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.getItemCount() - 1);", "-\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText()};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\t\t\t\t\tresetEditors();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection(i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map(bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation(pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible(true);", "-\t\t\t\t\t", "-\t\t\t\t\twhile (menu != null && !menu.isDisposed() && menu.isVisible()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch()) {", "-\t\t\t\t\t\t\tdisplay.sleep();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem(table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf(table.indexOf(item));", "-\t\t\t\t\tString[] insert = new String[] {name, selection }; ", "-\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\tresetEditors();", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e85ac0731b65662ea65931228507b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createChildWidgets ()", "signatureAfterChange": " \tvoid createChildWidgets ()", "diff": ["-\t\t\t}", "-\t\t});", "-\t\t", "-\t\t/* Add listener to add an element to the table */", "-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tMenu menu = new Menu (shell, SWT.POP_UP);", "-\t\t\t\t\tfor(int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener (new SelectionAdapter(){", "-\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem(table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.indexOf (item));", "-\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText(), \"-1\", \"-1\", \"false\"};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement (insert);", "-\t\t\t\t\t\t\t\t\tresetEditors ();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection (i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map (bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation (pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible (true);", "-\t\t\t\t\t", "-\t\t\t\t\twhile (menu != null && !menu.isDisposed () && menu.isVisible ()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch ()) {", "-\t\t\t\t\t\t\tdisplay.sleep ();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose ();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem (table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf (table.indexOf(item));", "-\t\t\t\t\tString[] insert = new String[] {name, selection, \"-1\", \"-1\", \"false\"};", "-\t\t\t\t\titem.setText (insert);", "-\t\t\t\t\tdata.addElement (insert);", "-\t\t\t\t\tresetEditors ();", "-\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acb0cf86493ce0f604980cbac3215071", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createChildWidgets ()", "signatureAfterChange": " \tvoid createChildWidgets ()", "diff": ["-\t\t", "-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tMenu menu = new Menu(shell, SWT.POP_UP);", "-\t\t\t\t\tfor(int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener(new SelectionAdapter(){", "-\t\t\t\t\t\t\tpublic void widgetSelected (SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem (table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.indexOf(item));", "-\t\t\t\t\t\t\t\t\tString [] insert = new String [] {name, menuItem.getText(),", "-\t\t\t\t\t\t\t\t\t\t\t\"-1\",\"-1\",\"BEGINNING\",\"CENTER\",", "-\t\t\t\t\t\t\t\t\t\t\t\"false\",\"false\",\"1\",\"1\",\"0\",\"0\",", "-\t\t\t\t\t\t\t\t\t\t\t\"0\",\"0\",\"false\"};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\t\t\t\t\tresetEditors ();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection(i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map(bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation(pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible(true);\t\t\t\t\t", "-\t\t\t\t\twhile (menu != null && !menu.isDisposed() && menu.isVisible()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch()) {", "-\t\t\t\t\t\t\tdisplay.sleep();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem (table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase () + String.valueOf(table.indexOf (item));", "-\t\t\t\t\tString[] insert = new String[] {name, selection,", "-\t\t\t\t\t\t\t\"-1\",\"-1\",\"BEGINNING\",\"CENTER\",", "-\t\t\t\t\t\t\t\"false\",\"false\",\"1\",\"1\",\"0\",\"0\",", "-\t\t\t\t\t\t\t\"0\",\"0\",\"false\"};", "-\t\t\t\t\titem.setText (insert);", "-\t\t\t\t\tdata.addElement (insert);", "-\t\t\t\t\tresetEditors ();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t});"]}], "num": 61237}