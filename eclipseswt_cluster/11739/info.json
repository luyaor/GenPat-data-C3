{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcbdf5aad73706bcf4724677610ae82f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707efcbe9891bebd5e54cc61d8076d8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d60307042554a2ad80509163fd1d15e5566b488d", "commitAfterChange": "501cddef55d98c472a410dbb933c0adba1cf9644", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 120, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t\t\tif (hooks (SWT.EraseItem) || hooks (SWT.PaintItem)) fItemRect = 0;", "-\t\t\t\tif (OS.IsWinCE) {", "-\t\t\t\t\tOS.InvalidateRect (handle, rect1, false);", "-\t\t\t\t\tOS.InvalidateRect (handle, rect2, false);", "-\t\t\t\t\tOS.UpdateWindow (handle);", "-\t\t\t\t} else {", "-\t\t\t\t\tint flags = OS.RDW_UPDATENOW | OS.RDW_INVALIDATE;", "-\t\t\t\t\tOS.RedrawWindow (handle, rect1, 0, flags);", "-\t\t\t\t\tOS.RedrawWindow (handle, rect2, 0, flags);", "-\t\t\t\t} ", "+\t\t\t\tOS.InvalidateRect (handle, rect1, true);", "+\t\t\t\tOS.InvalidateRect (handle, rect2, true);", "+\t\t\t\tOS.UpdateWindow (handle);", "-\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect1) != 0) {", "+\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect1) != 0) {", "-\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, rect2);", "+\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c752c193d494f1ae33abf2cc4f6815", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef785e65c5666e705660b195ef7d2da7b6c1f35c", "commitAfterChange": "1571b21a3b1e60f5ff0c7a9bc19396983f515d5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\t\tint desiredScanline = (width + 7) / 8;", "-\t\t\t\tdesiredScanline = desiredScanline + (desiredScanline % 2);", "-\t\t\t\tint realScanline = imageSize / height;", "-\t\t\t\tif (realScanline != desiredScanline) {", "-\t\t\t\t\tbyte[] newData = new byte[desiredScanline * height];", "-\t\t\t\t\tint srcIndex = 0;", "-\t\t\t\t\tint destIndex = 0;", "-\t\t\t\t\tfor (int i = 0; i < height; i++) {", "-\t\t\t\t\t\tSystem.arraycopy(maskData, srcIndex, newData, destIndex, desiredScanline);", "-\t\t\t\t\t\tdestIndex += desiredScanline;", "-\t\t\t\t\t\tsrcIndex += realScanline;", "-\t\t\t\t\t}", "-\t\t\t\t\tmaskData = newData;", "+\t\t\t\tint maskPad;", "+\t\t\t\tint bpl = imageSize / height;", "+\t\t\t\tfor (maskPad = 1; maskPad < 128; maskPad++) {", "+\t\t\t\t\tint calcBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\t\t\tif (calcBpl == bpl) break;", "+\t\t\t\tmaskData = ImageData.convertPad(maskData, width, height, 1, maskPad, 2);", "-//\t\t\timageData.maskPad = 4;"]}], "num": 11739}