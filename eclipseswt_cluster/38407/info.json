{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "135eb7569f228738c545956001709500", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa3abff4cc00003fd86dc7ea299c591f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "commitAfterChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tfocus(false);", "-\tinstallFont();", "-\tint width= OS.TextWidth(string, data.font.fID, data.font.fSize, data.font.fFace);", "-\tshort[] fontInfo= new short[4];", "-\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\tunfocus(false);", "-\treturn new Point(width, fontInfo[0] + fontInfo[1]);", "+\ttry {", "+\t\tfocus(false, null);", "+\t\tinstallFont();", "+\t\tint width= OS.TextWidth(string, data.font.fID, data.font.fSize, data.font.fFace);", "+\t\tshort[] fontInfo= new short[4];", "+\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "+\t\treturn new Point(width, fontInfo[0] + fontInfo[1]);", "+\t} finally {", "+\t\tunfocus(false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd84a90317332f058c8e5507353e11c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "cfd5bffcc0dd0a4a8fefea06eb38ae4851419630", "commitAfterChange": "c1aba778243ea48d9c50325364383cafedd816d2", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  int timerProc (int id, int sel, int timerID)", "signatureAfterChange": "  int timerProc (int id, int sel, int timerID)", "diff": ["-\tNSNumber number = new NSNumber(timer.userInfo());", "-\tint index = number.intValue();", "-\tif (timerList == null) return 0;", "-\tif (0 <= index && index < timerList.length) {", "-\t\tif (allowTimers) {", "-\t\t\tRunnable runnable = timerList [index];", "-\t\t\ttimerList [index] = null;", "-\t\t\tnsTimers [index] = null;", "-\t\t\tif (runnable != null) runnable.run ();", "-\t\t} else {", "-\t\t\tnsTimers [index] = null;", "-\t\t\twakeThread ();", "+\ttry {", "+\t\tNSNumber number = new NSNumber(timer.userInfo());", "+\t\tint index = number.intValue();", "+\t\tif (timerList == null) return 0;", "+\t\tif (0 <= index && index < timerList.length) {", "+\t\t\tif (allowTimers) {", "+\t\t\t\tRunnable runnable = timerList [index];", "+\t\t\t\ttimerList [index] = null;", "+\t\t\t\tnsTimers [index] = null;", "+\t\t\t\tif (runnable != null) runnable.run ();", "+\t\t\t} else {", "+\t\t\t\tnsTimers [index] = null;", "+\t\t\t\twakeThread ();", "+\t\t\t}", "+\t} finally {", "+\t\ttimer.invalidate();", "+\t\ttimer.release();", "-\ttimer.invalidate();", "-\ttimer.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aca7b550ede7a9f8886fdd4fe504a12", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "commitAfterChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tfocus(false);", "-\tinstallFont();", "-\tshort[] fontInfo= new short[4];", "-\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\tunfocus(false);\t", "-\t", "-\treturn FontMetrics.carbon_new(fontInfo[0], fontInfo[1], fontInfo[2], fontInfo[3], fontInfo[0]+fontInfo[1]);", "+\ttry {", "+\t\tfocus(false, null);", "+\t\tinstallFont();", "+\t\tshort[] fontInfo= new short[4];", "+\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "+\t\treturn FontMetrics.carbon_new(fontInfo[0], fontInfo[1], fontInfo[2], fontInfo[3], fontInfo[0]+fontInfo[1]);", "+\t} finally {", "+\t\tunfocus(false);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a88dcd69503feed4a98d8b584d4e2d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public boolean open ()", "signatureAfterChange": " public boolean open ()", "diff": ["-\t\tNSEvent event = application.nextEventMatchingMask(0, NSDate.distantFuture(), OS.NSDefaultRunLoopMode, true);", "-\t\tif (event == null) continue;", "-\t\tint type = (int)/*64*/event.type();", "-\t\tswitch (type) {", "-\t\t\tcase OS.NSLeftMouseUp:", "-\t\t\tcase OS.NSRightMouseUp:", "-\t\t\tcase OS.NSOtherMouseUp:", "-\t\t\tcase OS.NSMouseMoved:", "-\t\t\tcase OS.NSLeftMouseDragged:", "-\t\t\tcase OS.NSRightMouseDragged:", "-\t\t\tcase OS.NSOtherMouseDragged:", "-\t\t\t\tmouse(event);", "-\t\t\t\tbreak;", "-\t\t\tcase OS.NSKeyDown:", "-//\t\t\tcase OS.NSKeyUp:", "-\t\t\tcase OS.NSFlagsChanged:", "-\t\t\t\tkey(event);", "-\t\t\t\tbreak;", "+\t\ttry {", "+\t\t\tNSEvent event = application.nextEventMatchingMask(0, NSDate.distantFuture(), OS.NSDefaultRunLoopMode, true);", "+\t\t\tif (event == null) continue;", "+\t\t\tint type = (int)/*64*/event.type();", "+\t\t\tswitch (type) {", "+\t\t\t\tcase OS.NSLeftMouseUp:", "+\t\t\t\tcase OS.NSRightMouseUp:", "+\t\t\t\tcase OS.NSOtherMouseUp:", "+\t\t\t\tcase OS.NSMouseMoved:", "+\t\t\t\tcase OS.NSLeftMouseDragged:", "+\t\t\t\tcase OS.NSRightMouseDragged:", "+\t\t\t\tcase OS.NSOtherMouseDragged:", "+\t\t\t\t\tmouse(event);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase OS.NSKeyDown:", "+//\t\t\t\tcase OS.NSKeyUp:", "+\t\t\t\tcase OS.NSFlagsChanged:", "+\t\t\t\t\tkey(event);", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tboolean dispatch = true;", "+\t\t\tswitch (type) {", "+\t\t\t\tcase OS.NSLeftMouseDown:", "+\t\t\t\tcase OS.NSLeftMouseUp:", "+\t\t\t\tcase OS.NSRightMouseDown:", "+\t\t\t\tcase OS.NSRightMouseUp:", "+\t\t\t\tcase OS.NSOtherMouseDown:", "+\t\t\t\tcase OS.NSOtherMouseUp:", "+\t\t\t\tcase OS.NSMouseMoved:", "+\t\t\t\tcase OS.NSLeftMouseDragged:", "+\t\t\t\tcase OS.NSRightMouseDragged:", "+\t\t\t\tcase OS.NSOtherMouseDragged:", "+\t\t\t\tcase OS.NSMouseEntered:", "+\t\t\t\tcase OS.NSMouseExited:", "+\t\t\t\tcase OS.NSKeyDown:", "+\t\t\t\tcase OS.NSKeyUp:", "+\t\t\t\tcase OS.NSFlagsChanged:", "+\t\t\t\t\tdispatch = false;", "+\t\t\t}", "+\t\t\tif (dispatch) application.sendEvent(event);", "+\t\t\tif (clientCursor != null && resizeCursor == null) {", "+\t\t\t\tdisplay.lockCursor = false;", "+\t\t\t\tclientCursor.handle.set();", "+\t\t\t\tdisplay.lockCursor = true;", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tpool.release();", "-\t\tboolean dispatch = true;", "-\t\tswitch (type) {", "-\t\t\tcase OS.NSLeftMouseDown:", "-\t\t\tcase OS.NSLeftMouseUp:", "-\t\t\tcase OS.NSRightMouseDown:", "-\t\t\tcase OS.NSRightMouseUp:", "-\t\t\tcase OS.NSOtherMouseDown:", "-\t\t\tcase OS.NSOtherMouseUp:", "-\t\t\tcase OS.NSMouseMoved:", "-\t\t\tcase OS.NSLeftMouseDragged:", "-\t\t\tcase OS.NSRightMouseDragged:", "-\t\t\tcase OS.NSOtherMouseDragged:", "-\t\t\tcase OS.NSMouseEntered:", "-\t\t\tcase OS.NSMouseExited:", "-\t\t\tcase OS.NSKeyDown:", "-\t\t\tcase OS.NSKeyUp:", "-\t\t\tcase OS.NSFlagsChanged:", "-\t\t\t\tdispatch = false;", "-\t\t}", "-\t\tif (dispatch) application.sendEvent(event);", "-\t\tif (clientCursor != null && resizeCursor == null) {", "-\t\t\tdisplay.lockCursor = false;", "-\t\t\tclientCursor.handle.set();", "-\t\t\tdisplay.lockCursor = true;", "-\t\t}", "-\t\tpool.release();"]}], "num": 38407}