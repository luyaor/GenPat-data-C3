{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c5e2b58521c4628c9e73e6010ba4145", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f95cfe65bc75c8cc62280f0725e7c166", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "eac38fbada000ebeb5e167aed73167c11f050417", "commitAfterChange": "9be2a371d8dec2bc20108dfdd65e7097431ac646", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tint get_accState(int variant, int pvarState)", "signatureAfterChange": " \t \tint get_accState(int varChild, int pvarState)", "diff": ["-\tint get_accState(int /*long*/ variant, int /*long*/ pvarState) {", "+\tint get_accState(int /*long*/ varChild, int /*long*/ pvarState) {", "-\t\tVARIANT v = new VARIANT();", "-\t\tCOM.MoveMemory(v, variant, VARIANT.sizeof);", "-\t\tif ((v.vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;", "+\t\tVARIANT v = getVARIANT(varChild);", "+\t\tif (v.vt != COM.VT_I4) return COM.E_INVALIDARG;", "-\t\tint code = iaccessible.get_accState(variant, pvarState);", "+\t\tint code = iaccessible.get_accState(varChild, pvarState);", "-\t\t\t//TODO - use VARIANT structure", "-\t\t\tshort[] pvt = new short[1];", "-\t\t\tCOM.MoveMemory(pvt, pvarState, 2);", "-\t\t\tif (pvt[0] == COM.VT_I4) {", "-\t\t\t\tint[] pState = new int[1];", "-\t\t\t\tCOM.MoveMemory(pState, pvarState + 8, 4);", "-\t\t\t\tosState = pState[0];", "-\t\t\t}", "+\t\t\tVARIANT v2 = getVARIANT(pvarState);", "+\t\t\tif (v2.vt == COM.VT_I4) osState = v2.lVal;", "-\t\tCOM.MoveMemory(pvarState, new short[] { COM.VT_I4 }, 2);", "-\t\tCOM.MoveMemory(pvarState + 8, new int[] { state }, 4);", "+\t\tsetVARIANT(pvarState, COM.VT_I4, state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437c40f17b414f0e78a8d263ab6207c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "eac38fbada000ebeb5e167aed73167c11f050417", "commitAfterChange": "9be2a371d8dec2bc20108dfdd65e7097431ac646", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t \tint get_accRole(int variant, int pvarRole)", "signatureAfterChange": " \t \tint get_accRole(int varChild, int pvarRole)", "diff": ["-\tint get_accRole(int /*long*/ variant, int /*long*/ pvarRole) {", "+\tint get_accRole(int /*long*/ varChild, int /*long*/ pvarRole) {", "-\t\tVARIANT v = new VARIANT();", "-\t\tCOM.MoveMemory(v, variant, VARIANT.sizeof);", "-\t\tif ((v.vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;", "+\t\tVARIANT v = getVARIANT(varChild);", "+\t\tif (v.vt != COM.VT_I4) return COM.E_INVALIDARG;", "-\t\tint code = iaccessible.get_accRole(variant, pvarRole);", "+\t\tint code = iaccessible.get_accRole(varChild, pvarRole);", "-\t\t\t//TODO - use VARIANT structure", "-\t\t\tshort[] pvt = new short[1];", "-\t\t\tCOM.MoveMemory(pvt, pvarRole, 2);", "-\t\t\tif (pvt[0] == COM.VT_I4) {", "-\t\t\t\tint[] pRole = new int[1];", "-\t\t\t\tCOM.MoveMemory(pRole, pvarRole + 8, 4);", "-\t\t\t\tosRole = pRole[0];", "-\t\t\t}", "+\t\t\tVARIANT v2 = getVARIANT(pvarRole);", "+\t\t\tif (v2.vt == COM.VT_I4) osRole = osToChildID(v2.lVal);", "-\t\tint role = roleToOs(event.detail);", "-\t\tCOM.MoveMemory(pvarRole, new short[] { COM.VT_I4 }, 2);", "-\t\tCOM.MoveMemory(pvarRole + 8, new int[] { role }, 4);", "+\t\tsetVARIANT(pvarRole, COM.VT_I4, roleToOs(event.detail));"]}], "num": 11691}