{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6665874dbbffbddfd6b4cbe38e71015a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba7af65314eff4eabe325baaa5d423f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "472560e1d448a16da0f65b5c23e0f809841b158f", "commitAfterChange": "3abd2072402f54cda1b717d8fbba9fcde68b6a64", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " void hookEvents ()", "signatureAfterChange": " void hookEvents ()", "diff": ["-\tint [] argList = {OS.XmNtextField, 0};", "+\tint [] argList = {OS.XmNlist, 0, OS.XmNtextField, 0};", "-\tOS.XtAddCallback (argList[1], OS.XmNactivateCallback, windowProc, ACTIVATE_CALLBACK);", "-\tOS.XtAddCallback (argList[1], OS.XmNvalueChangedCallback, windowProc, VALUE_CHANGED_CALLBACK);", "-\tOS.XtAddCallback (argList[1], OS.XmNmodifyVerifyCallback, windowProc, MODIFY_VERIFY_CALLBACK);", "-\tOS.XtAddEventHandler (argList[1], OS.KeyPressMask, false, windowProc, KEY_PRESS);", "-\tOS.XtAddEventHandler (argList[1], OS.KeyReleaseMask, false, windowProc, KEY_RELEASE);", "-\tOS.XtInsertEventHandler (argList[1], OS.FocusChangeMask, false, windowProc, FOCUS_CHANGE, OS.XtListTail);", "+\tint listHandle = argList [1];", "+\tint textHandle = argList [3];", "+\tOS.XtAddEventHandler (listHandle, OS.KeyPressMask, false, windowProc, KEY_PRESS);", "+\tOS.XtAddEventHandler (listHandle, OS.KeyReleaseMask, false, windowProc, KEY_RELEASE);", "+\tOS.XtAddCallback (textHandle, OS.XmNactivateCallback, windowProc, ACTIVATE_CALLBACK);", "+\tOS.XtAddCallback (textHandle, OS.XmNvalueChangedCallback, windowProc, VALUE_CHANGED_CALLBACK);", "+\tOS.XtAddCallback (textHandle, OS.XmNmodifyVerifyCallback, windowProc, MODIFY_VERIFY_CALLBACK);", "+\tOS.XtAddEventHandler (textHandle, OS.ButtonPressMask, false, windowProc, BUTTON_PRESS);", "+\tOS.XtAddEventHandler (textHandle, OS.ButtonReleaseMask, false, windowProc, BUTTON_RELEASE);", "+\tOS.XtAddEventHandler (textHandle, OS.EnterWindowMask, false, windowProc, ENTER_WINDOW);", "+\tOS.XtAddEventHandler (textHandle, OS.LeaveWindowMask, false, windowProc, LEAVE_WINDOW);", "+\tOS.XtAddEventHandler (textHandle, OS.KeyPressMask, false, windowProc, KEY_PRESS);", "+\tOS.XtAddEventHandler (textHandle, OS.KeyReleaseMask, false, windowProc, KEY_RELEASE);", "+\tOS.XtInsertEventHandler (textHandle, OS.FocusChangeMask, false, windowProc, FOCUS_CHANGE, OS.XtListTail);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3824ca565a1f5e710cb12872abaddf6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "b3dd2d1a5564d306325437ce8857fd1c767861e9", "commitAfterChange": "38ab03a4343f3ee96636b2b1dd7704d77ac27f65", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url)", "diff": ["-\tif (url.startsWith(PROTOCOL_FILE)) {", "-\t\turl = url.substring(PROTOCOL_FILE.length());", "+\tif (url.indexOf('/') == 0) {", "+\t\turl = PROTOCOL_FILE + url;", "+\t} else if (url.indexOf(':') == -1) {", "+\t\turl = PROTOCOL_HTTP + url;", "-\tint selector = Cocoa.S_fileURLWithPath;", "-\tboolean isHttpURL = url.indexOf('/') != 0;", "-\tif (isHttpURL) {", "-\t\tselector = Cocoa.S_URLWithString;", "-\t\tif (url.indexOf(':') == -1) {", "-\t\t\turl = PROTOCOL_HTTP + \"//\" + url; //$NON-NLS-1$", "+", "+\tint inURL = 0;", "+\tchar[] chars = new char[url.length()];", "+\turl.getChars(0, chars.length, chars, 0);", "+\tint str = OS.CFStringCreateWithCharacters(0, chars, chars.length);", "+\tif (str != 0) {", "+\t\tchar[] unescapedChars = new char[] {'%', '#'};", "+\t\tint unescapedStr = OS.CFStringCreateWithCharacters(0, unescapedChars, unescapedChars.length);", "+\t\tint escapedStr = OS.CFURLCreateStringByAddingPercentEscapes(OS.kCFAllocatorDefault, str, unescapedStr, 0, OS.kCFStringEncodingUTF8);", "+\t\tif (escapedStr != 0) {", "+\t\t\tinURL = OS.CFURLCreateWithString(OS.kCFAllocatorDefault, escapedStr, 0);", "+\t\t\tOS.CFRelease(escapedStr);", "+\t\tif (unescapedStr != 0) OS.CFRelease(unescapedStr);", "+\t\tOS.CFRelease(str);", "-\tint length = url.length();", "-\tchar[] chars = new char[length];", "-\turl.getChars(0, length, chars, 0);", "-\tint sHandle = OS.CFStringCreateWithCharacters(0, chars, length);", "-\t/* NSURL.fileURLWithPath and NSURL.URLWithString do autorelease */", "-\tint inURL = Cocoa.objc_msgSend(Cocoa.C_NSURL, selector, sHandle);", "-\tOS.CFRelease(sHandle);", "-\tint request= Cocoa.objc_msgSend(Cocoa.C_NSURLRequest, Cocoa.S_requestWithURL, inURL);", "+\tint request = Cocoa.objc_msgSend(Cocoa.C_NSURLRequest, Cocoa.S_requestWithURL, inURL);", "+\tOS.CFRelease(inURL);", "-\tint mainFrame= Cocoa.objc_msgSend(webView, Cocoa.S_mainFrame);", "+\tint mainFrame = Cocoa.objc_msgSend(webView, Cocoa.S_mainFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "557a914daaabd3771f16633f5416c7fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "8e9a6c03e46ed391e84d2aa651ce2b4cd45b150b", "commitAfterChange": "13a90f542f303654f630bdd0e08b6be1da656750", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\t\tNSFont font = data.font.handle;", "-\t\tint ascent = (int)(0.5f + font.ascender());", "-\t\tint descent = (int)(0.5f + (-font.descender() + font.leading()));\t", "-\t\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"; ", "-\t\tint averageCharWidth = stringExtent(s).x / s.length();", "-\t\treturn FontMetrics.cocoa_new(ascent, descent, averageCharWidth, 0, ascent + descent);", "+\t\tif (data.textStorage == null) createLayout();", "+\t\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";  //$NON-NLS-1$", "+\t\tNSAttributedString attribStr = createString(s, 0, false);", "+\t\tdata.textStorage.setAttributedString(attribStr);", "+\t\tattribStr.release();", "+\t\tNSLayoutManager layoutManager = data.layoutManager;", "+\t\tlayoutManager.glyphRangeForTextContainer(data.textContainer);", "+\t\tNSRect rect = layoutManager.usedRectForTextContainer(data.textContainer);", "+\t\tint width = (int)Math.ceil(rect.width);", "+\t\tint ascent = (int)layoutManager.defaultBaselineOffsetForFont(data.font.handle);", "+\t\tint height = (int)layoutManager.defaultLineHeightForFont(data.font.handle);", "+\t\treturn FontMetrics.cocoa_new(ascent, height - ascent, width / s.length(), 0, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e50b31d1b194bb333ad2f7a107d5320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "56be0fe37ca1af9ea98ede0e3e5cd97eacd2c979", "commitAfterChange": "8194530b93e592466abdbefb92aaf6a99040597b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\t\t\t\t\t\tint drawRunY = drawY + (baseline - run.ascent);", "-\t\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, brush, drawX, drawRunY, run.width, run.ascent + run.descent);", "+\t\t\t\t\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, brush, drawX, drawY, run.width, lineHeight - lineSpacing);", "-\t\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawRunY, run.width, run.ascent + run.descent, OS.PATCOPY);", "+\t\t\t\t\t\t\t\tOS.PatBlt(hdc, drawX, drawY, run.width, lineHeight - lineSpacing, OS.PATCOPY);", "+\t\tRECT borderClip = null;", "+\t\t\t\t\t\tborderClip = drawBorder(gdip, gdipGraphics, x, drawY, lineHeight - lineSpacing, foregroundBrush, selBrushFg, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);", "+\t\t\t\t\t\tint selForeground = selectionForeground != null ? selectionForeground.handle : 0;", "+\t\t\t\t\t\tborderClip = drawBorder(gdip, hdc, x, drawY, lineHeight - lineSpacing, foreground, selForeground, fullSelection, borderClip, partialSelection ? rect : null, alpha, lineRuns, i, selectionStart, selectionEnd);"]}], "num": 36333}