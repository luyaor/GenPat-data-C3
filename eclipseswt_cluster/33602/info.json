{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f45e7369b194a4ae6f2ba2308fbcd681", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d79c83cc4280e4ef42ab95fc29b561", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet151.java", "commitBeforeChange": "fb5b460d0cd1322d5dade6f3cc57c1e1f7f85066", "commitAfterChange": "71a079a82aecf22804fbd623b6b9ddb2a35a45b5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["-\tfinal Display display = new Display ();", "-\tShell shell = new Shell (display);", "+\tfinal Display display = new Display();", "+\tShell shell = new Shell(display);", "-\tfinal Random random = new Random();", "-\tthread = new Thread() {", "+\tThread thread = new Thread() {", "+\t\t\tRandom random = new Random();", "-\t\t\t\t// add 1000 random numbers to a sorted array", "-\t\t\t\tfor (int j = 0; j < 1000; j++) {", "-\t\t\t\t\tint next  = random.nextInt();", "-\t\t\t\t\tint[] newItems = new int[values.length + 1];", "-\t\t\t\t\tint index = 0;", "-\t\t\t\t\tfor (int i = 0; i < values.length; i++) {", "-\t\t\t\t\t\tif (values[i] > next) break;", "-\t\t\t\t\t\tindex++;", "-\t\t\t\t\t}", "-\t\t\t\t\tSystem.arraycopy(values, 0, newItems, 0, index);", "-\t\t\t\t\tnewItems[index] = next;", "-\t\t\t\t\tSystem.arraycopy(values, index, newItems, index+1, values.length-index);", "-\t\t\t\t\tvalues = newItems;", "+\t\t\t\tfinal int[] newValues = new int[1000];", "+\t\t\t\tfor (int i = 0; i < newValues.length; i++) {", "+\t\t\t\t\tnewValues[i] = random.nextInt();", "+\t\t\t\tArrays.sort(newValues);", "-\t\t\t\t\t\ttable.setItemCount(values.length);", "+\t\t\t\t\t\tif (values == null) {", "+\t\t\t\t\t\t\ttable.setItemCount(1000);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tvalues = newValues;", "-\t\t\t\t\t\t// bug 69398 on Windows", "-\t\t\t\t\t\ttable.redraw();", "-\tshell.open ();", "-\twhile (!shell.isDisposed ()) {", "-\t\tif (!display.readAndDispatch ()) display.sleep ();", "+\tshell.open();", "+\twhile (!shell.isDisposed() || thread.isAlive()) {", "+\t\tif (!display.readAndDispatch()) display.sleep();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc5822f674b849c8340cf47f6258cc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet164.java", "commitBeforeChange": "3862c6b3b8f0c2a32415ba364d344d184c244114", "commitAfterChange": "8515d73625205434c3e8ac5f78baa0d4112fffff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main(String[] args)", "signatureAfterChange": "  public static void main (String[] args)", "diff": ["-public static void main(String[] args) {", "-\tDisplay display = new Display();", "-\tShell shell = new Shell(display);", "-\tshell.setBounds(10, 10, 200, 200);", "+public static void main (String[] args) {", "+\tDisplay display = new Display( );", "+\tShell shell = new Shell (display);", "+\tshell.setLayout (new GridLayout ());", "+\tImage image = new Image (display, Snippet164.class.getResourceAsStream (\"eclipse.png\"));", "-\tbutton1.setText(\"&Typical button\");", "-\tbutton1.setBounds(10,10,180,30);", "+\tbutton1.setText (\"&Typical button\");", "+\t", "-\tbutton2.setText(\"&Overidden button\");", "-\tbutton2.setBounds(10,50,180,30);", "-\tbutton2.getAccessible().addAccessibleListener(new AccessibleAdapter() {", "-\t\tpublic void getName(AccessibleEvent e) {", "-\t\t\te.result = \"Speak this instead of the button text\";", "+\tbutton2.setImage (image);", "+\tbutton2.getAccessible ().addAccessibleListener (new AccessibleAdapter() {", "+\t\tpublic void getName (AccessibleEvent e) {", "+\t\t\te.result = \"Eclipse logo\";", "-\tshell.open();", "-\twhile (!shell.isDisposed()) {", "-\t\tif (!display.readAndDispatch()) display.sleep();", "+\tshell.pack ();", "+\tshell.open ();", "+\twhile (!shell.isDisposed ()) {", "+\t\tif (!display.readAndDispatch ()) display.sleep ();", "-\tdisplay.dispose();", "+\timage.dispose ();", "+\tdisplay.dispose ();"]}], "num": 33602}