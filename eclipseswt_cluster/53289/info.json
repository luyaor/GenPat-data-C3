{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c591497c5f5a2849a90500ddd8f96220", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119b17c00b3d6754445e3ffc6d87eb2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CTabFolderTab.java", "commitBeforeChange": "646c14c459db780d16f386a9a63437d50caf1876", "commitAfterChange": "740ffee05c104bcff57a8c6063262c192e8e3207", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorGroup ()", "diff": ["-\t\tsuper.createColorGroup();", "+\t\t/* Create the group */", "+\t\tcolorGroup = new Group(controlGroup, SWT.NONE);", "+\t\tcolorGroup.setLayout (new GridLayout (2, false));", "+\t\tcolorGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));", "+\t\tcolorGroup.setText (ControlExample.getResourceString (\"Colors\"));", "-\t\titemGroup = new Group (colorGroup, SWT.NONE);", "-\t\titemGroup.setText (ControlExample.getResourceString (\"CTab_Item_Colors\"));", "-\t\tGridData data = new GridData ();", "-\t\tdata.horizontalSpan = 2;", "-\t\titemGroup.setLayoutData (data);", "-\t\titemGroup.setLayout (new GridLayout (2, false));", "-\t\titemFontButton = new Button (itemGroup, SWT.PUSH);", "-\t\titemFontButton.setText(ControlExample.getResourceString(\"Font\"));", "-\t\titemFontButton.setLayoutData(new GridData (GridData.HORIZONTAL_ALIGN_FILL));", "+\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Foreground_Color\"));", "+\t\tforegroundButton = new Button (colorGroup, SWT.PUSH);", "-\t\tShell shell = colorGroup.getShell ();", "+\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Background_Color\"));", "+\t\tbackgroundButton = new Button (colorGroup, SWT.PUSH);", "+\t\t", "+\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Selection_Foreground_Color\"));", "+\t\tforegroundSelectionButton = new Button (colorGroup, SWT.PUSH);", "+\t\t", "+\t\tnew Label (colorGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Selection_Background_Color\"));", "+\t\tbackgroundSelectionButton = new Button (colorGroup, SWT.PUSH);", "+\t\t", "+\t\tfontButton = new Button (colorGroup, SWT.PUSH);", "+\t\tfontButton.setText(ControlExample.getResourceString(\"Font\"));", "+\t\tfontButton.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false, 2, 1));", "+\t", "+\t\titemFontButton = new Button (colorGroup, SWT.PUSH);", "+\t\titemFontButton.setText(ControlExample.getResourceString(\"Item_Font\"));", "+\t\titemFontButton.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, false, false, 2, 1));", "+\t\t", "+\t\tButton defaultsButton = new Button (colorGroup, SWT.PUSH);", "+\t\tdefaultsButton.setText(ControlExample.getResourceString(\"Defaults\"));", "+", "+\t\tShell shell = controlGroup.getShell ();", "+\t\tfinal ColorDialog colorDialog = new ColorDialog (shell);", "+", "+\t\t/* Create images to display current colors */", "+\t\tint imageSize = 12;", "+\t\tDisplay display = shell.getDisplay ();", "+\t\tforegroundImage = new Image (display, imageSize, imageSize);", "+\t\tbackgroundImage = new Image (display, imageSize, imageSize);", "+\t\tforegroundSelectionImage = new Image (display, imageSize, imageSize);", "+\t\tbackgroundSelectionImage = new Image (display, imageSize, imageSize);", "+", "+\t\t/* Add listeners to set the colors and font */", "+\t\tforegroundButton.setImage(foregroundImage); // sets the size of the button", "+\t\tforegroundButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = foregroundColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = foregroundColor; // save old foreground color to dispose when done", "+\t\t\t\tforegroundColor = new Color (event.display, rgb);", "+\t\t\t\tsetExampleWidgetForeground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tbackgroundButton.setImage(backgroundImage); // sets the size of the button", "+\t\tbackgroundButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = backgroundColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground (); // seed dialog with current color", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB());", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = backgroundColor; // save old background color to dispose when done", "+\t\t\t\tbackgroundColor = new Color (event.display, rgb);", "+\t\t\t\tsetExampleWidgetBackground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tforegroundSelectionButton.setImage(foregroundSelectionImage); // sets the size of the button", "+\t\tforegroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = foregroundSelectionColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getForeground ();", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB()); // seed dialog with current color", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = foregroundSelectionColor; // save old foreground color to dispose when done", "+\t\t\t\tforegroundSelectionColor = new Color (event.display, rgb);", "+\t\t\t\tsetExampleWidgetForeground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tbackgroundSelectionButton.setImage(backgroundSelectionImage); // sets the size of the button", "+\t\tbackgroundSelectionButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tColor oldColor = backgroundSelectionColor;", "+\t\t\t\tif (oldColor == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldColor = controls [0].getBackground (); // seed dialog with current color", "+\t\t\t\t}", "+\t\t\t\tif (oldColor != null) colorDialog.setRGB(oldColor.getRGB());", "+\t\t\t\tRGB rgb = colorDialog.open();", "+\t\t\t\tif (rgb == null) return;", "+\t\t\t\toldColor = backgroundSelectionColor; // save old background color to dispose when done", "+\t\t\t\tbackgroundSelectionColor = new Color (event.display, rgb);", "+\t\t\t\tsetExampleWidgetBackground ();", "+\t\t\t\tif (oldColor != null) oldColor.dispose ();", "+\t\t\t}", "+\t\t});", "+\t\tfontButton.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tFont oldFont = font;", "+\t\t\t\tif (oldFont == null) {", "+\t\t\t\t\tControl [] controls = getExampleWidgets ();", "+\t\t\t\t\tif (controls.length > 0) oldFont = controls [0].getFont ();", "+\t\t\t\t}", "+\t\t\t\tif (oldFont != null) fontDialog.setFontList(oldFont.getFontData()); // seed dialog with current font", "+\t\t\t\tFontData fontData = fontDialog.open ();", "+\t\t\t\tif (fontData == null) return;", "+\t\t\t\toldFont = font; // dispose old font when done", "+\t\t\t\tfont = new Font (event.display, fontData);", "+\t\t\t\tsetExampleWidgetFont ();", "+\t\t\t\tsetExampleWidgetSize ();", "+\t\t\t\tif (oldFont != null) oldFont.dispose ();", "+\t\t\t}", "+\t\t});", "+\t", "+\t\t", "+\t\tdefaultsButton.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tresetColorsAndFonts ();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\t\t\tif (foregroundImage != null) foregroundImage.dispose();", "+\t\t\t\tif (backgroundImage != null) backgroundImage.dispose();", "+\t\t\t\tif (foregroundColor != null) foregroundColor.dispose();", "+\t\t\t\tif (backgroundColor != null) backgroundColor.dispose();", "+\t\t\t\tif (font != null) font.dispose();", "+\t\t\t\tforegroundColor = null;", "+\t\t\t\tbackgroundColor = null;", "+\t\t\t\tfont = null;\t\t\t\t", "+\t\t\t\tif (foregroundSelectionImage != null) foregroundSelectionImage.dispose();", "+\t\t\t\tif (backgroundSelectionImage != null) backgroundSelectionImage.dispose();", "+\t\t\t\tif (foregroundSelectionColor != null) foregroundSelectionColor.dispose();", "+\t\t\t\tif (backgroundSelectionColor != null) backgroundSelectionColor.dispose();", "+\t\t\t\tforegroundSelectionColor = null;", "+\t\t\t\tbackgroundSelectionColor = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53499b915dffc8a2ed8a22dd46377bf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "1c620522c51a270f40c2d23df3c326f48275d8bd", "commitAfterChange": "58c80ff0565eaf7cdcac1e8ac1379b16f9b58992", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " void createEmptyRow ()", "signatureAfterChange": "  void createControls (Composite parent)", "diff": ["+", "+void createControls (Composite parent) {", "+\tComposite composite = new Composite (parent, SWT.NONE);", "+\tlayout.numColumns = 2;", "+\tcomposite.setLayout (layout);", "+\tComposite controls = new Composite (composite, SWT.NONE);", "+\tlayout = new GridLayout ();", "+\tlayout.marginHeight = layout.marginWidth = 0;", "+\tlayout.numColumns = 3;", "+\tcontrols.setLayout (layout);", "+\t// font sets group", "+\tGroup fontSetGroup = new Group (controls, SWT.NONE);", "+\tfontSetGroup.setText(SWT.getMessage (\"SWT_FontSet\"));", "+\tlayout = new GridLayout ();", "+\tlayout.numColumns = 2;", "+\tfontSetGroup.setLayout (layout);", "+\tGridData data = new GridData (GridData.FILL_BOTH);", "+\tdata.horizontalSpan = 3;", "+\tfontSetGroup.setLayoutData (data);", "+\tfontSetList = new List (fontSetGroup, SWT.V_SCROLL);", "+\tdata = new GridData (GridData.FILL_BOTH);", "+\tdata.grabExcessHorizontalSpace = true;", "+\tfontSetList.setLayoutData (data);", "+\tComposite buttonsGroup = new Composite (fontSetGroup, SWT.NONE);", "+\tlayout = new GridLayout ();", "+\tlayout.numColumns = 3;", "+\tlayout.makeColumnsEqualWidth = false;", "+\tlayout.marginHeight = layout.marginWidth = 0;", "+\tlayout.horizontalSpacing = layout.verticalSpacing = 0; ", "+\tbuttonsGroup.setLayout (layout);", "+\tComposite upDownButtonsGroup = new Composite (buttonsGroup, SWT.NONE);", "+\tlayout = new GridLayout ();", "+\tlayout.marginHeight = layout.marginWidth = 0;", "+\tlayout.horizontalSpacing = layout.verticalSpacing = 0; ", "+\tupDownButtonsGroup.setLayout(layout);", "+", "+\tint buttonAlignment = GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_BEGINNING;", "+\tupButton = new Button (upDownButtonsGroup, SWT.PUSH);", "+\tupButton.setLayoutData (new GridData (buttonAlignment));", "+\tupButton.setText (SWT.getMessage (\"SWT_Up\"));", "+\tdownButton = new Button (upDownButtonsGroup, SWT.PUSH);", "+\tdownButton.setLayoutData (new GridData (buttonAlignment));", "+\tdownButton.setText (SWT.getMessage (\"SWT_Down\"));", "+", "+\tnew Label (buttonsGroup, SWT.SEPARATOR | SWT.VERTICAL);\t", "+", "+\tComposite newRemoveButtonsGroup = new Composite (buttonsGroup, SWT.NONE);", "+\tlayout = new GridLayout ();", "+\tlayout.marginHeight = layout.marginWidth = 0;", "+\tlayout.horizontalSpacing = layout.verticalSpacing = 0; ", "+\tnewRemoveButtonsGroup.setLayout(layout);", "+\t\t", "+\tnewButton = new Button (newRemoveButtonsGroup, SWT.PUSH);", "+\tnewButton.setLayoutData (new GridData (buttonAlignment));", "+\tnewButton.setText (SWT.getMessage (\"SWT_NewFont\"));", "+\tremoveButton = new Button (newRemoveButtonsGroup, SWT.PUSH);", "+\tremoveButton.setLayoutData (new GridData (buttonAlignment));", "+\tremoveButton.setText (SWT.getMessage (\"SWT_Remove\"));", "+\t", "+\t// labels row (1)", "+\tnew Label (controls, SWT.NONE).setText (SWT.getMessage (\"SWT_Character_set\") + \":\");", "+\tnew Label (controls, SWT.NONE).setText (SWT.getMessage (\"SWT_Font\") + \":\");", "+\tnew Label (controls, SWT.NONE).setText (SWT.getMessage (\"SWT_Extended_style\") + \":\");\t", "+", "+\t// lists row (2)", "+\tcharSetList = new List (controls, SWT.V_SCROLL);", "+\tGridData gridData = new GridData (GridData.FILL_HORIZONTAL);", "+\tgridData.heightHint = LIST_HEIGHT;", "+\tgridData.widthHint = LIST_WIDTH;", "+\tcharSetList.setLayoutData (gridData);", "+", "+\tfaceNameList = new List (controls, SWT.V_SCROLL);", "+\tgridData = new GridData (GridData.FILL_HORIZONTAL);", "+\tgridData.heightHint = LIST_HEIGHT;", "+\tgridData.widthHint = LIST_WIDTH;", "+\tfaceNameList.setLayoutData (gridData);", "+", "+\textStyleList = new List (controls, SWT.V_SCROLL | SWT.MULTI);", "+\tgridData = new GridData (GridData.FILL_HORIZONTAL);", "+\tgridData.heightHint = LIST_HEIGHT;", "+\tgridData.widthHint = EXTSTYLE_WIDTH;", "+\textStyleList.setLayoutData (gridData);", "+", "+\t// labels row (3)", "+\tnew Label (controls, SWT.NONE).setText (SWT.getMessage (\"SWT_Size\") + \":\");\t", "+\tnew Label (controls, SWT.NONE).setText (SWT.getMessage (\"SWT_Style\") + \":\");", "+\tnew Label (controls, SWT.NONE);\t\t// filler", "+", "+\t// lists row (4)", "+\tfontSizeList = new List (controls, SWT.V_SCROLL);", "+\tgridData = new GridData (GridData.FILL_HORIZONTAL);", "+\tgridData.heightHint = LIST_HEIGHT;", "+\tgridData.widthHint = LIST_WIDTH;", "+\tfontSizeList.setLayoutData (gridData);", "+", "+\tfontStyleList = new List (controls, SWT.V_SCROLL);", "+\tgridData = new GridData (GridData.FILL_HORIZONTAL);", "+\tgridData.heightHint = LIST_HEIGHT;", "+\tgridData.widthHint = LIST_WIDTH;", "+\tfontStyleList.setLayoutData (gridData);", "+", "+\tnew Label (controls, SWT.NONE);\t\t// filler", "+\t", "+\t// font sample group", "+\tGroup sampleGroup = new Group (controls, SWT.NONE);", "+\tgridData.heightHint = SAMPLE_HEIGHT;\t", "- */", "-void createEmptyRow () {", "-\tLabel fillLabel = new Label (shell, SWT.NONE);", "-\tGridData gridData = new GridData ();", "-\tgridData.heightHint = 5;", "-\tgridData.horizontalSpan = ((GridLayout) shell.getLayout ()).numColumns;", "-\tfillLabel.setLayoutData (gridData);", "-}", "+\tComposite okCancelGroup = new Composite (composite, SWT.NONE);", "+\tlayout = new GridLayout ();", "+\tlayout.marginHeight = layout.marginWidth = layout.verticalSpacing = 0;", "+\tokCancelGroup.setLayout (layout);", "+\tokCancelGroup.setLayoutData (new GridData (GridData.VERTICAL_ALIGN_BEGINNING));", "+\tcreateButtons (okCancelGroup);"]}], "num": 53289}