{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e8b80dfb01ff50c16bc5ee02f3a3130", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b39982db0b873c8c4bfb9ea755aa297a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "63402932f4d7a2fe6eda19dc05c2a513ed8a0519", "commitAfterChange": "da97dbe5133d08e305a00a80c45d4dd608fb5936", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " private int checkEffect(int effect)", "signatureAfterChange": "  private int checkEffect(int effect)", "diff": ["-}", "+", "-\tint mask = DND.FEEDBACK_INSERT_AFTER | DND.FEEDBACK_INSERT_BEFORE | DND.FEEDBACK_SELECT;", "-\tint bits = effect & mask;", "-\tif (bits == DND.FEEDBACK_INSERT_AFTER || bits == DND.FEEDBACK_INSERT_BEFORE || bits == DND.FEEDBACK_SELECT) return effect;", "-\treturn (effect & ~mask);", "+\tif ((effect & DND.FEEDBACK_SELECT) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER & ~DND.FEEDBACK_INSERT_BEFORE;", "+\tif ((effect & DND.FEEDBACK_INSERT_BEFORE) != 0) effect = effect & ~DND.FEEDBACK_INSERT_AFTER;", "+\treturn effect;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c7f511a7856852ba2dde8429e1c2b58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ea22e75daf1e5a78bec82cabfec3ce13c52b23bb", "commitAfterChange": "6c565a51ee8e2b37d15f210e658b7758d4131406", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public Rectangle getClientArea ()", "signatureAfterChange": "  public Rectangle getClientArea ()", "diff": ["-\t//TODO why super implementation fails", "-\tif (window == null) {", "-\t\t// In embedded frames, the whole view is the client area.", "-\t\tNSRect rect = view.frame();", "-\t\tint width = (int)rect.width, height = (int)rect.height;", "-\t\treturn new Rectangle (0, 0, width, height);", "+\tNSRect rect;", "+\tif (window != null) {", "+\t\trect = window.frame();", "+\t\tif (!fixResize ()) {", "+\t\t\trect = window.contentRectForFrameRect(rect);", "+\t\t}", "+\t} else {", "+\t\trect = scrollView != null ? scrollView.frame() : view.frame();", "-", "-\tNSRect rect = window.contentRectForFrameRect(window.frame());"]}], "num": 43101}