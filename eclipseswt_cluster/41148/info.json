{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d775a23f7b145d9bc864ca69e3cc5bf3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b80425d1f4c0dcdbfe2394ab85f2dbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "f7feddd1f8f228c51cfa762dae98caf617b99fa6", "commitAfterChange": "2df8e1e4bb5d34a77fd51370ebed5b9622bfedee", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": " void doBlockSelectionMoveByKeyboard(int direction)", "signatureAfterChange": " void doBlockLine(boolean up)", "diff": ["-void doBlockSelectionMoveByKeyboard(int direction) {", "-\tif (blockSelection) {", "-\t\tif (blockXLocation == -1) {", "-\t\t\tsetBlockSelectionOffset(caretOffset);", "-\t\tint x = blockXLocation - horizontalScrollOffset;", "-\t\tint y = blockYLocation - getVerticalScrollOffset();", "-\t\tint lineIndex = getLineIndex(y);", "-\t\tswitch (direction) {", "-\t\t\tcase SWT.UP:", "-\t\t\t\tif (lineIndex > 0) {", "-\t\t\t\t\ty -= getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.DOWN:", "-\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\tif (lineIndex < lineCount - 1) {", "-\t\t\t\t\ty += getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase ST.COLUMN_PREVIOUS: {", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, null, true);", "-\t\t\t\tint newOffset = offset != -1 ? getClusterPrevious(offset, lineIndex) : offset;  ", "-\t\t\t\tif (offset != newOffset) {", "-\t\t\t\t\tx = getPointAtOffset(newOffset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx -= 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase ST.COLUMN_NEXT: {", "-\t\t\t\tint[] trailing = new int[1];", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, trailing, true);", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tString line = content.getLine(lineIndex);", "-\t\t\t\t\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\t\t\t\t\tif (offset + trailing[0] - lineOffset < line.length()) {", "-\t\t\t\t\t\toffset = getClusterNext(offset + trailing[0], lineIndex);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\toffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tx = getPointAtOffset(offset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx += 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+}", "+void doBlockLine(boolean up) {", "+\tif (blockXLocation == -1) setBlockSelectionOffset(caretOffset);", "+\tint y = blockYLocation - getVerticalScrollOffset();", "+\tint lineIndex = getLineIndex(y);", "+\tif (up) {", "+\t\tif (lineIndex > 0) {", "+\t\t\ty = getLinePixel(lineIndex - 1);", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tif (y < topMargin) {", "+\t\t\t\tscrollVertical(y - topMargin, true);", "-\t\tif (x != (blockXLocation - horizontalScrollOffset) || y != (blockYLocation - getVerticalScrollOffset())) {", "-\t\t\tsetBlockSelectionLocation(x, y);", "-\t\t\t//TODO BETTER AUTO SCROLL ", "-\t\t\tshowCaret();", "+\t} else {", "+\t\tint lineCount = content.getLineCount();", "+\t\tif (lineIndex + 1 < lineCount) {", "+\t\t\ty = getLinePixel(lineIndex + 2) - 1;", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tint bottom = clientAreaHeight - bottomMargin; ", "+\t\t\tif (y > bottom) {", "+\t\t\t\tscrollVertical(y - bottom, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5320dfd379caae898f8ffa2bf4d38f82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 69, "signatureBeforeChange": " void redrawAfterModify(SelectableItem modifiedItem, int modifiedIndex)", "signatureAfterChange": " void removeColumn(TreeColumn column)", "diff": ["- */", "-void redrawAfterModify(SelectableItem modifiedItem, int modifiedIndex) {", "-\tint redrawStartY;", "-\tint redrawStopY;", "-\tint itemChildIndex = ((TreeItem) modifiedItem).getIndex();", "-\tint topIndex = getTopIndex();", "-\tint itemHeight = getItemHeight();", "-\tint redrawItemIndex;", "-\tint itemCount;", "-\tAbstractTreeItem parentItem = ((TreeItem) modifiedItem).getParentItem();", "-\tAbstractTreeItem redrawItem = null;", "-", "-\tif (redrawParentItem(modifiedItem) == false) {", "-\tif (parentItem == null) {\t\t\t\t\t\t\t// a root item is added/removed", "-\t\tparentItem = getRoot();", "-\titemCount = parentItem.getItemCount();", "-\t// redraw hierarchy decorations of preceeding item if the last item at a tree ", "-\t// level was added/removed", "-\t// otherwise, if the first item was removed, redraw the parent to update hierarchy icon", "-\tif (itemChildIndex > 0) {\t\t\t\t\t\t\t// more than one item left at this tree level", "-\t\t// added/removed last item at this tree level? have to test >=.", "-\t\t// when removing last item, item index is outside itemCount ", "-\t\tif (itemChildIndex >= itemCount - 1) { ", "-\t\t\tredrawItem = (AbstractTreeItem) parentItem.getChildren().elementAt(itemChildIndex - 1);", "-\telse ", "-\tif (getVisibleItemCount() > 0 && itemCount < 2) {\t// last item at this level removed/first item added?", "-\t\tredrawItem = parentItem;\t\t\t\t\t\t// redraw parent item to update hierarchy icon", "-\t}", "-\tif (redrawItem != null) {", "-\t\tredrawItemIndex = redrawItem.getVisibleIndex();", "-\t\tif (modifiedIndex == -1) {", "-\t\t\tmodifiedIndex = redrawItemIndex + 1;", "-\t\t}", "-\t\tredrawStartY = (redrawItemIndex - topIndex) * itemHeight;", "-\t\tredrawStopY = (modifiedIndex - topIndex) * itemHeight;", "-\t\tredraw(", "-\t\t\t0, ", "-\t\t\tredrawStartY, ", "-\t\t\tredrawItem.getCheckboxXPosition(), \t\t\t// only redraw up to and including hierarchy icon to avoid flashing", "-\t\t\tredrawStopY - redrawStartY, false);", "-\t}\t", "-\tif (modifiedIndex == 0) {\t\t\t\t\t\t\t\t\t\t\t// added/removed first item ?", "-\t\tredraw(0, 0, getClientArea().width, getItemHeight() * 2, false);// redraw new first two items to ", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fix vertical hierarchy line", "+void removeColumn(TreeColumn column) {", "+\tint numColumns = getColumnCount();", "+\tint index = column.getIndex();", "+", "+\tTreeColumn[] newColumns = new TreeColumn[columns.length - 1];", "+\tSystem.arraycopy(columns, 0, newColumns, 0, index);", "+\tSystem.arraycopy(columns, index + 1, newColumns, index, columns.length - index);", "+\tcolumns = newColumns;", "+\t", "+\tTreeColumn lastColumn = columns[columns.length - 1];", "+\tgetHorizontalBar().setMaximum(lastColumn.getX() + lastColumn.width);"]}], "num": 41148}