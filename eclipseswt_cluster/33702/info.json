{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b0e5ed22fef31c337cbc34171e62675", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd347ce718baf603fcc16279455638b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "7a2d94369e5ad6120bc0572ea6ad8f9f75b8147c", "commitAfterChange": "e84f4d8769abe77ed12791626675853956e621d2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\tboolean isDib = false;", "-\t\t\tDIBSECTION dib = null;", "-\t\t\tif (bm.bmBits != 0) {", "-\t\t\t\t/* Only use DIB if image is top-down. */", "-\t\t\t\tdib = new DIBSECTION();", "-\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "-\t\t\t\tif (dib.biHeight < 0) isDib = true; ", "-\t\t\t}", "+\t\t\tboolean isDib = (bm.bmBits != 0);", "-\t\t\t\t\tdib = new DIBSECTION();", "-\t\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "+\t\t\t}", "+\t\t\tDIBSECTION dib = null;", "+\t\t\tif (isDib) {", "+\t\t\t\tdib = new DIBSECTION();", "+\t\t\t\tOS.GetObject(handle, DIBSECTION.sizeof, dib);", "-\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "+\t\t\t\t\tif (dib.biHeight < 0) {", "+\t\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint stride = dib.bmWidthBytes;", "+\t\t\t\t\t\tint offset = 0;", "+\t\t\t\t\t\tbyte[] scanline = new byte[dib.bmWidthBytes];", "+\t\t\t\t\t\tfor (int i = 0; i < dib.biHeight; i++) {", "+\t\t\t\t\t\t\tint cur = dib.bmBits + dib.biHeight * stride - (i + 1) * stride;", "+\t\t\t\t\t\t\tOS.MoveMemory(scanline, cur, dib.bmWidthBytes);", "+\t\t\t\t\t\t\tSystem.arraycopy(scanline, 0, data, offset, dib.bmWidthBytes);", "+\t\t\t\t\t\t\toffset += stride;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c437872fe7fd1c344beb717be2236d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "81a33fbed3eb272c93a82c3f5eae3c1f2166f25e", "commitAfterChange": "1bffcc668dddef37395056cc439e6737b02c5e67", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\t\t\tif (!gdiPlus) {", "-\t\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint stride = dib.bmWidthBytes;", "-\t\t\t\t\t\tint offset = 0;", "-\t\t\t\t\t\tbyte[] scanline = new byte[dib.bmWidthBytes];", "-\t\t\t\t\t\tfor (int i = 0; i < dib.biHeight; i++) {", "-\t\t\t\t\t\t\tint cur = dib.bmBits + dib.biHeight * stride - (i + 1) * stride;", "-\t\t\t\t\t\t\tOS.MoveMemory(scanline, cur, dib.bmWidthBytes);", "-\t\t\t\t\t\t\tSystem.arraycopy(scanline, 0, data, offset, dib.bmWidthBytes);", "-\t\t\t\t\t\t\toffset += stride;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);"]}], "num": 33702}