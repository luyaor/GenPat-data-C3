{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48efaced20c8e2f245727b5faf56ff15", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1d0b7aa8faaa96cfcc8366f04e86267", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "28b2a5957d8e361e1f4069809624ce028585ebac", "commitAfterChange": "0933b21008b56d4f3a1f93ebc204304baf98372f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Frame new_Frame (final Composite parent)", "signatureAfterChange": " public static Frame new_Frame (final Composite parent)", "diff": ["-\t\t\t\t\t\t\t} else if (Library.JAVA_VERSION < Library.JAVA_VERSION(1, 5, 0)) {", "+\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "-\t\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Boolean(true)});", "-\t\t\t\t\t\t\t\t} catch (Throwable e) {}", "-\t\t\t\t\t\t\t} else if (Library.JAVA_VERSION < Library.JAVA_VERSION(1, 5, 0)) {", "+\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "-\t\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Boolean(false)});", "-\t\t\t\t\t\t\t\t} catch (Throwable e) {}", "+\tif (Library.JAVA_VERSION >= Library.JAVA_VERSION(1, 5, 0)){", "+\t\tframe.addWindowListener(new WindowAdapter() {", "+\t\t\tpublic void windowActivated(WindowEvent event) {", "+\t\t\t\ttry {", "+\t\t\t\t\tClass clazz = frame.getClass();", "+\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[] { boolean.class });", "+\t\t\t\t\tif (method != null) method.invoke(frame, new Object[] { new Boolean(true) });", "+\t\t\t\t} catch (Throwable e) {}", "+\t\t\t}", "+\t\t\tpublic void windowDeactivated(WindowEvent event) {", "+\t\t\t\ttry {", "+\t\t\t\t\tClass clazz = frame.getClass();", "+\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[] { boolean.class });", "+\t\t\t\t\tif (method != null) method.invoke(frame, new Object[] { new Boolean(false) });", "+\t\t\t\t} catch (Throwable e) {}", "+\t\t\t}", "+\t\t});", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610e8dd8434df53b897cf6eee9632dd0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "ab5b105a53d68e99dc517b6c6f113d523c2d909d", "commitAfterChange": "b6627f48ba1a8864fa9727b1507730370fdc2264", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Frame new_Frame (final Composite parent)", "signatureAfterChange": " public static Frame new_Frame (final Composite parent)", "diff": ["-\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t} else if (Library.JAVA_VERSION < Library.JAVA_VERSION(1, 5, 0)) {", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "+\t\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "+\t\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "+\t\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Boolean(true)});", "+\t\t\t\t\t\t\t\t} catch (Throwable e) {}", "-\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t} else if (Library.JAVA_VERSION < Library.JAVA_VERSION(1, 5, 0)) {", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "+\t\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "+\t\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "+\t\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Boolean(false)});", "+\t\t\t\t\t\t\t\t} catch (Throwable e) {}", "-\tif (Library.JAVA_VERSION >= Library.JAVA_VERSION(1, 5, 0)){", "-\t\tframe.addWindowListener(new WindowAdapter() {", "-\t\t\tpublic void windowActivated(WindowEvent event) {", "-\t\t\t\ttry {", "-\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[] { boolean.class });", "-\t\t\t\t\tif (method != null) method.invoke(frame, new Object[] { new Boolean(true) });", "-\t\t\t\t} catch (Throwable e) {}", "-\t\t\t}", "-\t\t\tpublic void windowDeactivated(WindowEvent event) {", "-\t\t\t\ttry {", "-\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[] { boolean.class });", "-\t\t\t\t\tif (method != null) method.invoke(frame, new Object[] { new Boolean(false) });", "-\t\t\t\t} catch (Throwable e) {}", "-\t\t\t}", "-\t\t});", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbec167983718e0deddf6ebc5fcab69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/cocoa/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "30aa0c3826135aac4e58bd6f57548574ac5ba309", "commitAfterChange": "62396e7f197b93c20522ab3007183e0650d01964", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Frame new_Frame(final Composite parent)", "signatureAfterChange": " public static Frame new_Frame(final Composite parent)", "diff": ["-\tfinal Class [] clazz = new Class [1];", "+\tfinal Class<?> [] clazz = new Class [1];", "-\t\t\tConstructor constructor = null;", "+\t\t\tConstructor<?> constructor = null;", "-\t\t\t\tconstructor = clazz[0].getConstructor (new Class [] {long.class});", "-\t\t\t\tresult [0] = (Frame) (constructor.newInstance (new Object [] {new Long(handle)}));", "+\t\t\t\tconstructor = clazz[0].getConstructor (long.class);", "+\t\t\t\tresult [0] = (Frame) (constructor.newInstance (new Long(handle)));", "-\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{Boolean.TRUE});", "+\t\t\t\t\t\t\t\tClass<?> clazz = frame.getClass();", "+\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", boolean.class);", "+\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, Boolean.TRUE);", "-\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{Boolean.FALSE});", "+\t\t\t\t\t\t\t\tClass<?> clazz = frame.getClass();", "+\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", boolean.class);", "+\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, Boolean.FALSE);", "-\t\t\t\t\tMethod method = frame.getClass().getMethod(\"validateWithBounds\", new Class[] {int.class, int.class, int.class, int.class});", "-\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Integer(clientArea.x), new Integer(clientArea.y), new Integer(clientArea.width), new Integer(clientArea.height)});", "+\t\t\t\t\tMethod method = frame.getClass().getMethod(\"validateWithBounds\", int.class, int.class, int.class, int.class);", "+\t\t\t\t\tif (method != null) method.invoke(frame, new Integer(clientArea.x), new Integer(clientArea.y), new Integer(clientArea.width), new Integer(clientArea.height));"]}], "num": 46155}