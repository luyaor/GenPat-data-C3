{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f6ca60d5431a323abbb1f9fbad6536e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2cb1198c520d656ea7ba0dd3c4e625f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "08627b8f2edae89ba88b83322a63b53be6640d9c", "commitAfterChange": "4eaa6e52c68deb9b1675aded171ec8dd4df1c383", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r public void setText (String string)", "signatureAfterChange": "\r \r public void setText (String string)", "diff": ["+\tboolean fixPPCMenuBar = false;\r", "+\tif (OS.IsWinCE) {\r", "+\t\tDecorations shell = parent.parent;\r", "+\t\tif (parent == shell.menuBar) {\r", "+\t\t\tfixPPCMenuBar = true;\r", "+\t\t\t/*\r", "+\t\t\t* Bug in WinCE PPC.  Tool items on the menubar don't resize\r", "+\t\t\t* correctly when the character '&' is used (even when it\r", "+\t\t\t* is a sequence '&&'.  \r", "+\t\t\t* The workaround is to remove all '&' in the string. \r", "+\t\t\t*/\r", "+\t\t\tint length = string.length();\r", "+\t\t\tchar[] text = new char[length];\r", "+\t\t\tstring.getChars(0, length, text, 0);\r", "+\t\t\tint i = 0, j = 0;\r", "+\t\t\tfor (i = 0; i < length; i++) {\r", "+\t\t\t\tif (text[i] != '&') text[j++] = text[i];\r", "+\t\t\t}\r", "+\t\t\tif (j < i) string = new String(text, 0, j);\r", "+\t\t}\r", "+\t}\r", "-\tif (OS.IsWinCE) {\r", "+\tif (fixPPCMenuBar) {\r", "-\t\tif (parent == shell.menuBar) {\r", "-\t\t\t/* set text on corresponding tool item */\r", "-\t\t\tTBBUTTONINFO info2 = new TBBUTTONINFO ();\r", "-\t\t\tinfo2.cbSize = TBBUTTONINFO.sizeof;\r", "-\t\t\tinfo2.dwMask = OS.TBIF_TEXT;\r", "-\t\t\tinfo2.pszText = pszText;\r", "-\t\t\tOS.SendMessage (shell.hwndTB, OS.TB_SETBUTTONINFO, id, info2);\r", "-\t\t}\r", "+\t\t/* set text on corresponding tool item */\r", "+\t\tTBBUTTONINFO info2 = new TBBUTTONINFO ();\r", "+\t\tinfo2.cbSize = TBBUTTONINFO.sizeof;\r", "+\t\tinfo2.dwMask = OS.TBIF_TEXT;\r", "+\t\tinfo2.pszText = pszText;\r", "+\t\tOS.SendMessage (shell.hwndTB, OS.TB_SETBUTTONINFO, id, info2);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa203da30fa105af8f53cf9afcef6b09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/internal/Converter.java", "commitBeforeChange": "db2d946a7c6ecb566ffb28e8bf4f645d9076034a", "commitAfterChange": "6bb59e60cd9d6a4ffcaf4504ffaefb299ed7f020", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r static boolean is7BitAscii (char [] buffer)", "signatureAfterChange": "\r \r public static byte [] wcsToMbcs (String codePage, char [] buffer, boolean terminate)", "diff": ["-}\r", "-static boolean is7BitAscii (char [] buffer) {\r", "-\tfor (int i=0; i<buffer.length; i++) {\r", "-\t\tif (buffer [i] > 0x7F) return false;\r", "-\t}\r", "-\treturn true;\r", "-}\r", "+\r", "+\tString cp = codePage == null ? defaultCodePage () : codePage;\r", "+\ttry {\r", "+\t\tif (!terminate) return new String (buffer).getBytes (cp);\r", "+\t\tbyte [] buffer1 = new String (buffer).getBytes (cp);\r", "+\t\tbyte [] buffer2 = new byte [buffer1.length + 1];\r", "+\t\tSystem.arraycopy (buffer1, 0, buffer2, 0, buffer1.length);\r", "+\t\treturn buffer2;\r", "+\t} catch (Exception e) {\r", "+\t\treturn terminate ? NullByteArray : EmptyByteArray;\r", "+\t}\r"]}], "num": 32855}