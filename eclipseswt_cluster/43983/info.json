{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c3e11f56147d17d68c26e4f1598e66e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e1b592ea12515e270775779b6f66f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_PaletteData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_getPixelLorg_eclipse_swt_graphics_RGB()", "signatureAfterChange": "  public void test_getPixelLorg_eclipse_swt_graphics_RGB()", "diff": ["-\twarnUnimpl(\"Test test_getPixelLorg_eclipse_swt_graphics_RGB not written\");", "+\t// indexed palette tests\t", "+\tRGB[] rgbs = {new RGB(0, 0, 0), new RGB(255, 255, 255), new RGB(50, 100, 150)};", "+\tPaletteData data = new PaletteData(rgbs);", "+\t", "+\ttry {", "+\t\tdata.getPixel(null);", "+\t\tfail(\"No exception thrown for indexed palette with rgb == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t", "+\ttry {", "+\t\tdata.getPixel(new RGB(0, 0, 1));", "+\t\tfail(\"No exception thrown for rgb not found\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":a:\", rgbs.length-1, data.getPixel(rgbs[rgbs.length-1]));", "+\t", "+\t// direct palette tests\t", "+\tRGB rgb =new RGB(0x32, 0x64, 0x96);", "+\tdata = new PaletteData(0xff0000, 0x00ff00, 0x0000ff);", "+\t", "+\ttry {", "+\t\tdata.getPixel(null);", "+\t\tfail(\"No exception thrown for direct palette with rgb == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":b:\", 0x326496, data.getPixel(rgb));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395015c987bc322117165e810fe78e0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "commitAfterChange": "ada390d7f7bab25f0f00a6be268d2fac0261a612", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\tSystem.out.println(\"Program.getImageData: nyi\");", "-\tImageData id= new ImageData(16, 16, 2, ", "-\t\tnew PaletteData(", "-\t\t\tnew RGB[] {", "-\t\t\t\tnew RGB(0, 0, 0), ", "-\t\t\t\tnew RGB(128, 128, 128)", "-\t\t\t}", "-\t\t)", "-\t);", "-\tid.transparentPixel= 0;\t\t\t// use black for transparency", "+\tif (fImageData == null) {", "+\t\tfImageData= new ImageData(16, 16, 4, ", "+\t\t\tnew PaletteData(", "+\t\t\t\tnew RGB[] {", "+\t\t\t\t\tnew RGB(0xff, 0xff, 0xff), ", "+\t\t\t\t\tnew RGB(0x5f, 0x5f, 0x5f),", "+\t\t\t\t\tnew RGB(0x80, 0x80, 0x80),", "+\t\t\t\t\tnew RGB(0xC0, 0xC0, 0xC0),", "+\t\t\t\t\tnew RGB(0xDF, 0xDF, 0xBF),", "+\t\t\t\t\tnew RGB(0xFF, 0xDF, 0x9F),", "+\t\t\t\t\tnew RGB(0x00, 0x00, 0x00),", "+\t\t\t\t}", "+\t\t\t)", "+\t\t);", "+\t\tfImageData.transparentPixel= 6;\t\t\t// use black for transparency", "-\tfor (int y= 2; y < 14; y++) ", "-\t\tfor (int x= 2; x < 14; x++)", "-\t\t\tif (x == 2 || x == 13 || y == 2 || y == 13)", "-\t\t\t\tid.setPixel(x, y, 1);", "-\t\t\t\t", "-\t//Image im= new Image(null, id);", "-\t//id= im.getImageData();", "-", "-\treturn id;", "+\t\tString[] p= {", "+\t\t\t\"CCCCCCCCGGG\",", "+\t\t\t\"CFAAAAACBGG\",", "+\t\t\t\"CAAAAAACFBG\",", "+\t\t\t\"CAAAAAACBBB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CAAAAAAAAEB\",", "+\t\t\t\"CDDDDDDDDDB\",", "+\t\t\t\"CBBBBBBBBBB\"", "+\t\t};", "+\t\t", "+\t\tfor (int y= 0; y < p.length; y++)", "+\t\t\tfor (int x= 0; x < 11; x++)", "+\t\t\t\tfImageData.setPixel(x+3, y+1, p[y].charAt(x)-'A');", "+\t}\t\t", "+\treturn fImageData;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527f0f58ff349c9202f515601dd438fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_PaletteData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test_getRGBI()", "signatureAfterChange": "  public void test_getRGBI()", "diff": ["-\twarnUnimpl(\"Test test_getRGBI not written\");", "+\t// indexed palette tests\t", "+\tRGB[] rgbs = {new RGB(0, 0, 0), new RGB(255, 255, 255), new RGB(50, 100, 150)};", "+\tPaletteData data = new PaletteData(rgbs);", "+", "+\ttry {", "+\t\tdata.getRGB(rgbs.length);", "+\t\tfail(\"No exception thrown for nonexistent pixel\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":a:\", rgbs[rgbs.length-1], data.getRGB(rgbs.length-1));", "+", "+\t// direct palette tests\t", "+\tRGB rgb =new RGB(0x32, 0x64, 0x96);", "+\tdata = new PaletteData(0xff0000, 0x00ff00, 0x0000ff);", "+\t", "+\tassertEquals(\":b:\", rgb, data.getRGB(0x326496));"]}], "num": 43983}