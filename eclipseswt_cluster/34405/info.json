{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f433818aa359fca98327a1348185979", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fb18aec61327e53881f9a8823309e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "68ae3d639309450a37c4680ca715e80dae580df0", "commitAfterChange": "1c829e2b02e3c5c545a9adcc1f1772320bdb342d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tNSTextView widget = (NSTextView) view;", "-\t\tNSSize oldSize = null;", "-\t\tNSTextContainer textContainer = widget.textContainer ();", "+\t\tNSLayoutManager layoutManager = (NSLayoutManager)new NSLayoutManager ().alloc ().init ();", "+\t\tNSTextContainer textContainer = (NSTextContainer)new NSTextContainer ().alloc ();", "+\t\tNSSize size = new NSSize ();", "+\t\tsize.width = size.height = Float.MAX_VALUE;", "-\t\t\twidget.setHorizontallyResizable (true);", "-\t\t\ttextContainer.setWidthTracksTextView (false);", "-\t\t\toldSize = textContainer.containerSize ();", "-\t\t\tNSSize csize = new NSSize ();", "-\t\t\tcsize.width = wHint != SWT.DEFAULT ? wHint : Float.MAX_VALUE;", "-\t\t\tcsize.height = hHint != SWT.DEFAULT ? hHint : Float.MAX_VALUE;", "-\t\t\ttextContainer.setContainerSize (csize);", "+\t\t\tif (wHint != SWT.DEFAULT) size.width = wHint;", "+\t\t\tif (hHint != SWT.DEFAULT) size.height = hHint;", "-\t\tNSRect oldRect = widget.frame ();", "-\t\twidget.sizeToFit ();", "-\t\tNSRect newRect = widget.frame ();", "-\t\twidget.setFrame (oldRect);", "-\t\tif ((style & SWT.WRAP) != 0) {", "-\t\t\twidget.setHorizontallyResizable (false);", "-\t\t\ttextContainer.setWidthTracksTextView (true);", "-\t\t\ttextContainer.setContainerSize (oldSize);", "-\t\t}", "-\t\twidth = (int)(newRect.width + 1);", "-\t\theight = (int)(newRect.height + 1);", "+\t\ttextContainer.initWithContainerSize (size);", "+\t\tlayoutManager.addTextContainer (textContainer);", "+", "+\t\tNSTextStorage textStorage = (NSTextStorage)new NSTextStorage ().alloc ();", "+\t\tNSString string = ((NSTextView)view).textStorage ().string ();", "+\t\ttextStorage.initWithString (string);", "+\t\tNSRange range = new NSRange ();", "+\t\trange.length = string.length ();", "+\t\ttextStorage.addAttribute (OS.NSFontAttributeName, getFont ().handle, range);", "+\t\tlayoutManager.setTextStorage (textStorage);", "+\t\tlayoutManager.glyphRangeForTextContainer (textContainer);", "+", "+\t\tNSRect rect = layoutManager.usedRectForTextContainer (textContainer);", "+\t\twidth = layoutManager.numberOfGlyphs () == 0 ? DEFAULT_WIDTH : (int)Math.ceil (rect.width);", "+\t\theight = (int)Math.ceil (rect.height);", "+\t\ttextStorage.release ();", "+\t\ttextContainer.release ();", "+\t\tlayoutManager.release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9550ed46cc4846e7f8d9a301bd3d719c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "111f07e445c6fbc435cd4eff0e9eb3a65f3082dc", "commitAfterChange": "c01029f869b4bfb2ed8f6ef83d44c2a1a442a495", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width, height;", "-\t//TODO wrapping, wHint", "-\tint borderStyle = hasBorder() ? OS.NSBezelBorder : OS.NSNoBorder;", "-\tNSSize borderSize = NSScrollView.frameSizeForContentSize(new NSSize(), false, false, borderStyle);", "-\tNSTextView widget = (NSTextView)view;", "-\tNSSize size = widget.textStorage().size();", "-\twidth = (int)(size.width + borderSize.width);", "-\theight = (int)(size.height + borderSize.height);", "+", "+\tint width = 0, height = 0;", "+\tNSLayoutManager layoutManager = (NSLayoutManager)new NSLayoutManager ().alloc ().init ();", "+\tNSTextContainer textContainer = (NSTextContainer)new NSTextContainer ().alloc ();", "+\tNSSize size = new NSSize ();", "+\tsize.width = size.height = Float.MAX_VALUE;", "+\tif (wHint != SWT.DEFAULT) size.width = wHint;", "+\tif (hHint != SWT.DEFAULT) size.height = hHint;", "+\ttextContainer.initWithContainerSize (size);", "+\ttextContainer.setLineFragmentPadding(2);", "+\tlayoutManager.addTextContainer (textContainer);", "+", "+\tNSTextStorage textStorage = (NSTextStorage)new NSTextStorage ().alloc ().init ();", "+\ttextStorage.setAttributedString (((NSTextView)view).textStorage ());", "+\tlayoutManager.setTextStorage (textStorage);", "+\tlayoutManager.glyphRangeForTextContainer (textContainer);", "+", "+\tNSRect rect = layoutManager.usedRectForTextContainer (textContainer);", "+\twidth = layoutManager.numberOfGlyphs () == 0 ? DEFAULT_WIDTH : (int)Math.ceil (rect.width);", "+\theight = (int)Math.ceil (rect.height);", "+\ttextStorage.release ();", "+\ttextContainer.release ();", "+\tlayoutManager.release ();", "+", "+\tif (width <= 0) width = DEFAULT_WIDTH;", "+\tif (height <= 0) height = DEFAULT_HEIGHT;", "-\tint border = getBorderWidth ();", "-\twidth += border * 2;", "-\theight += border * 2;", "-\t// TODO is this true?  if so, can this rounding be turned off?", "-\t/*", "-\t * Bug in Cocoa.  NSTextStorage.size() seems to return a width", "-\t * value that is rounded down, because its result is never", "-\t * fractional.  The workaround is to increment width by 1", "-\t * to ensure that it is wide enough to show the full text.  ", "-\t */", "-\twidth += 1;", "+\t// Accommodate any border.", "+\tsize.width = width;", "+\tsize.height = height;", "+\tint border = hasBorder() ? OS.NSBezelBorder : OS.NSNoBorder;", "+\tsize = NSScrollView.frameSizeForContentSize(size, false, false, border);", "+\twidth = (int)size.width;", "+\theight = (int)size.height;", "+", "+\tif (!hasBorder()) {", "+\t\twidth += 2;", "+\t\theight += 2;", "+\t}"]}], "num": 34405}