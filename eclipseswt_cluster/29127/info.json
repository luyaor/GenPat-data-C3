{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4520d39e49b6763955907e86216c17a9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc3e74d5f7d8cf06b3e05aa3a8edaee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e4692e5cbd7a1c3e2c445a2649b50a1fdba6d571", "commitAfterChange": "7c0714d2b96ea5373a8249de1d951780e6fa9ffd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["+\t\tint xDisplay = OS.XtDisplay (handle);\r", "+\t\tif (xDisplay == 0) return;\r", "+\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\tif (xWindow == 0) return;\r", "+\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "+\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "+\t\t\treturn;\r", "+\t\t}\r", "-\t\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\t\tif (xDisplay == 0) return;\r", "-\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\t\t\tif (xWindow == 0) return;\r", "-\t\t\tint [] unused = new int [1];\r", "-\t\t\tint [] rootX = new int [1], rootY = new int [1];\r", "-\t\t\tif (OS.XQueryPointer (\r", "-\t\t\t\txDisplay, xWindow, unused, unused,\r", "-\t\t\t\trootX, rootY,\r", "-\t\t\t\tunused, unused, unused) == 0) return;\r", "-\t\t\t\t\r", "-\t\t\t/* Bug in Motif: \r", "-\t\t\t * You *must* start outside the menu or it will not show you\r", "-\t\t\t * highlighting until you move the cursor out of and back into\r", "-\t\t\t * the menu. By offsetting the start location by a pixel, it\r", "-\t\t\t * causes highlighting to work if you wait for the menu to\r", "-\t\t\t * pop up before you start moving.(Except for the bottom\r", "-\t\t\t * right corner.)\r", "-\t\t\t */\r", "-\t\t\trootX[0] += 1;\r", "-\t\t\trootY[0] += 1;\r", "-\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "+\t\t\t* under the mouse, the menu will not highlight until the\r", "+\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "+\t\t\t* to pop the menu up outside the current mouse position\r", "+\t\t\t* causing highlighting to work properly when the user\r", "+\t\t\t* waits for the menu to appear.\r", "+\t\t\t*/\r", "+\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "+\t\t/*\r", "+\t\t* Feature in Motif.  There is no API to force the menu\r", "+\t\t* to accept keyboard traversal when popped up using\r", "+\t\t* XtManageChild.  The fix is to call undocumented API\r", "+\t\t* to do this.\r", "+\t\t*/\r", "+\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "+\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabf384b0d98f562f68ed3592a685ebd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e7472be62a35d340ded1ff8e0de89ae6506d1723", "commitAfterChange": "c65bd10509fc4e3f55dcb1376fcd8c5e65786199", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\tif (xDisplay == 0) return;\r", "-\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\t\tif (xWindow == 0) return;\r", "-\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "-\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t\tif (!hasLocation) {\r", "+\t\tsendEvent (SWT.Show);\r", "+\t\tif (getItemCount () != 0) {\r", "+\t\t\tint xDisplay = OS.XtDisplay (handle);\r", "+\t\t\tif (xDisplay == 0) return;\r", "+\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\t\tif (xWindow == 0) return;\r", "+\t\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "+\t\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t\tif (!hasLocation) {\r", "+\t\t\t\t/*\r", "+\t\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "+\t\t\t\t* under the mouse, the menu will not highlight until the\r", "+\t\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "+\t\t\t\t* to pop the menu up outside the current mouse position\r", "+\t\t\t\t* causing highlighting to work properly when the user\r", "+\t\t\t\t* waits for the menu to appear.\r", "+\t\t\t\t*/\r", "+\t\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "+\t\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};\r", "+\t\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t\t\t}\r", "+\t\t\tOS.XtManageChild (handle);\r", "-\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "-\t\t\t* under the mouse, the menu will not highlight until the\r", "-\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "-\t\t\t* to pop the menu up outside the current mouse position\r", "-\t\t\t* causing highlighting to work properly when the user\r", "-\t\t\t* waits for the menu to appear.\r", "+\t\t\t* Feature in Motif.  There is no API to force the menu\r", "+\t\t\t* to accept keyboard traversal when popped up using\r", "+\t\t\t* XtManageChild.  The fix is to call undocumented API\r", "+\t\t\t* to do this.\r", "-\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "-\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};\r", "-\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "+\t\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r", "+\t\t} else {\r", "+\t\t\tsendEvent (SWT.Hide);\r", "-\t\tOS.XtManageChild (handle);\r", "-\t\t/*\r", "-\t\t* Feature in Motif.  There is no API to force the menu\r", "-\t\t* to accept keyboard traversal when popped up using\r", "-\t\t* XtManageChild.  The fix is to call undocumented API\r", "-\t\t* to do this.\r", "-\t\t*/\r", "-\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "-\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a43fb14871b70dbdd96fae1578243fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "044fd90b6f02270ce85cc919371a3e049679ef13", "commitAfterChange": "3b7c754a64f4896cc12aead5bba291fc54708bf4", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\tdisplay.runDeferredEvents ();", "-\t\tsendEvent (SWT.Show);", "-\t\tif (getItemCount () != 0) {", "-\t\t\tint xDisplay = OS.XtDisplay (handle);", "-\t\t\tif (xDisplay == 0) return;", "-\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);", "-\t\t\tif (xWindow == 0) return;", "-\t\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];", "-\t\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (!hasLocation) {", "-\t\t\t\t/*", "-\t\t\t\t* Bug in Motif.  For some reason, when a menu is popped up", "-\t\t\t\t* under the mouse, the menu will not highlight until the", "-\t\t\t\t* mouse exits and then enters the menu again.  The fix is", "-\t\t\t\t* to pop the menu up outside the current mouse position", "-\t\t\t\t* causing highlighting to work properly when the user", "-\t\t\t\t* waits for the menu to appear.", "-\t\t\t\t*/", "-\t\t\t\trootX[0] += 1;  rootY[0] += 1;", "-\t\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};", "-\t\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t\t\t}", "-\t\t\t/*", "-\t\t\t* Feature in Motif.  If an X grab is active, then", "-\t\t\t* the menu pops us but issues and error message an", "-\t\t\t* fails to grab the pointer.  The fix is to ensure", "-\t\t\t* that no grab is active before showing the menu.", "-\t\t\t*/", "-\t\t\tOS.XUngrabPointer (xDisplay, OS.CurrentTime);", "-\t\t\tOS.XtManageChild (handle);", "-\t\t\t/*", "-\t\t\t* Feature in Motif.  There is no API to force the menu", "-\t\t\t* to accept keyboard traversal when popped up using", "-\t\t\t* XtManageChild.  The fix is to call undocumented API", "-\t\t\t* to do this.", "-\t\t\t*/", "-\t\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;", "-\t\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);", "-\t\t} else {", "-\t\t\tsendEvent (SWT.Hide);", "-\t\t}", "+\t\tdisplay.addPopup (this);", "-\t\tOS.XtUnmanageChild (handle);", "+\t\tdisplay.removePopup (this);", "+\t\t_setVisible (false);"]}], "num": 29127}