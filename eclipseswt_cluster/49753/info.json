{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a13fcf5d3c88aa1f3ab73960cf62bd5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2ccaeb2399036a4fe17872617fca97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "876ed09a49de9fd074ee75d74aaa5be9ca7961f3", "commitAfterChange": "ddffafae4e896b2e9ec78e332a5997a3daf99c21", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  When the font is set for one cell in a table,", "+\t\t\t\t\t* Windows does not reset the font for the next cell.  As a result,", "+\t\t\t\t\t* all subsequent cells are drawn using the new font.  The fix is to", "+\t\t\t\t\t* reset the font to the default.", "+\t\t\t\t\t* ", "+\t\t\t\t\t* NOTE: This does not happen for foreground and background.", "+\t\t\t\t\t*/", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\t\t\t\tif (count == 1) break;", "-\t\t\t\t\tif (hFont != -1) OS.SelectObject(nmcd.hdc, hFont);", "+\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\tOS.SelectObject(nmcd.hdc, hFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3df8a9c9a000007038f208df91fe012", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5279fb43a214afc43b3c9cdcd1dfd93d23a5a5bd", "commitAfterChange": "d94d01b4d71bbf5e85d7f9e44c609b877ecde200", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t* Feature in Windows.  When the font is set for one cell in a table,", "-\t* Windows does not reset the font for the next cell.  As a result,", "-\t* all subsequent cells are drawn using the new font.  The fix is to", "-\t* reset the font to the default.", "-\t* ", "-\t* NOTE: This does not happen for foreground and background.", "+\t* Bug in Windows.  When the attibutes are for one cell in a table,", "+\t* Windows does not reset them for the next cell.  As a result, all", "+\t* subsequent cells are drawn using the previous font, foreground and", "+\t* background colors.  The fix is to set the all attributes when any", "+\t* attribute could have changed.", "-\t\t\tif (columnCount == 1) hasAttributes = false;", "+\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\tif (count == 1) hasAttributes = false;", "-\t\t\t\tif (control.backgroundImage == null && !hooks (SWT.EraseItem)) {", "-\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "-\t\t\t\t}", "+\t\t\t\tnmcd.clrTextBk  = control.backgroundImage == null ? control.getBackgroundPixel () : OS.CLR_NONE;"]}], "num": 49753}