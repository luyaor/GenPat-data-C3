{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a9e9951e147bee361ea008592686f0d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1fa826f784f5b7aaea88be198a65b6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "ef99308454376741558f5c126ed26e1e2ef85341", "commitAfterChange": "1ed6e017318ca3de09b2840c45fb2e4dc1dfd857", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  int menuPositionProc (int menu, int x, int y, int push_in, int user_data)", "signatureAfterChange": "  int menuPositionProc (int menu, int x, int y, int push_in, int user_data)", "diff": ["-\tif (x != 0) OS.memmove (x, new int [] {this.x}, 4);", "-\tif (y != 0) OS.memmove (y, new int [] {this.y}, 4);", "+\t/*", "+\t* Feature in GTK.  The menu position function sets the position of the", "+\t* top-left pixel of the menu.  If the menu would be off-screen, GTK will", "+\t* add a scroll arrow at the bottom and position the first menu entry at", "+\t* the specified position.  The fix is to flip the menu location to be", "+\t* completely inside the screen.", "+\t*/", "+    GtkRequisition requisition = new GtkRequisition ();", "+    OS.gtk_widget_size_request (menu, requisition);", "+    int screenHeight = OS.gdk_screen_height ();", "+\tint reqy = this.y;", "+\tif (reqy + requisition.height > screenHeight && reqy - requisition.height >= 0) {", "+    \treqy -= requisition.height;", "+    }", "+    int screenWidth = OS.gdk_screen_width ();", "+\tint reqx = this.x;", "+    if ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+    \tif (reqx - requisition.width >= 0) reqx -= requisition.width;", "+    } else {", "+    \tif (reqx + requisition.width > screenWidth) reqx -= requisition.width;", "+    }", "+\tif (x != 0) OS.memmove (x, new int [] {reqx}, 4);", "+\tif (y != 0) OS.memmove (y, new int [] {reqy}, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb477a3d6857ae98fd32ee5a4ed16b0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "32debd3b792f6dea3cbde01bcd2ea792207752aa", "commitAfterChange": "9b0ccc5ced24e16f6b8b75ef174d7898cf5deb38", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t* alignment to fail. The fix is to set the child size to all available space", "-\t* excluding trimmings.", "+\t* alignment to fail. The fix is to set the child size to the size", "+\t* of the button.", "-\t\tint childHeight = 0, buttonWidth = 0, buttonHeight = 0;", "-\t\tGtkRequisition requisition = new GtkRequisition ();", "-\t\tOS.gtk_widget_size_request (handle, requisition);", "-\t\tbuttonWidth = requisition.width;", "-\t\tbuttonHeight = requisition.height;", "-\t\tOS.gtk_widget_size_request (boxHandle, requisition);", "-\t\tchildHeight = requisition.height;", "-\t\tOS.gtk_widget_set_size_request (handle, -1, -1);", "-\t\tOS.gtk_widget_set_size_request (boxHandle, -1, -1);", "-\t\tOS.gtk_widget_size_request (handle, requisition);", "-\t\tint trim = requisition.width;", "-\t\tOS.gtk_widget_size_request (boxHandle, requisition);", "-\t\ttrim -= requisition.width;", "-\t\tOS.gtk_widget_set_size_request (handle, buttonWidth, buttonHeight);", "-\t\tOS.gtk_widget_set_size_request (boxHandle, Math.max (1, width - trim), childHeight);", "+\t\tOS.gtk_widget_set_size_request (boxHandle, width, -1);"]}], "num": 24926}