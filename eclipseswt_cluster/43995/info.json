{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "597e7ca2f5e32f700fb23410c0725b4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a76f63685e76af1976a634fb5fa2f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "7e01a6d9771ad5bd12b9af1fbbe393164c9959aa", "commitAfterChange": "c61a57d7a074a80b5b03c4761a563015a2ecc5fa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tTableItem[] availableItems = parent.items;", "-\tif (availableItems.length == 0) return;", "+\tif (parent.itemsCount == 0) return;", "+\tTableItem[] items = parent.items;", "-\tfor (int i = 0; i < availableItems.length; i++) {", "-\t\tnewWidth = Math.max (newWidth, availableItems [i].getPreferredWidth (index));", "+\tfor (int i = 0; i < parent.itemsCount; i++) {", "+\t\tnewWidth = Math.max (newWidth, items [i].getPreferredWidth (index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d628b7855def6beacd917586545473", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "22bf858acf3b0c5dae2bcf5b62d2abebb52a5a3f", "commitAfterChange": "5a857fe694139af30432c0d2f47581ce9f52d623", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t", "+\tTreeItem[] availableItems = parent.availableItems;", "+\tif (availableItems.length == 0) return;", "+\tint index = getIndex ();", "+\tint width = -1;", "+\tfor (int i = 0; i < availableItems.length; i++) {", "+\t\twidth = Math.max (width, availableItems [i].getPreferredWidth (index));", "+\t}", "+\tsetWidth (width);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59fbe55c46c0714b427d9f8f4472226", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "8d0b48a25603cd51a4f40a03ee4a20a03407b958", "commitAfterChange": "5479bfb7066e66292947abd087547ed1ac0e1b66", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "signatureAfterChange": " boolean removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "diff": ["-void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {", "+boolean removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {", "+\tint oldRowHeight = itemBounds.height;", "-\t\treturn;", "+\t\treturn true;", "+\tint newRowHeight = 0;", "+\tfor (int i = 0; i < newLength; i++) {", "+\t\tnewRowHeight = Math.max(newRowHeight, items[rowIndex][i].preferredHeight);", "+\t}", "+\treturn newRowHeight != oldRowHeight;"]}], "num": 43995}