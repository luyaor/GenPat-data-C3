{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61d2c557feefd5ee72f622b1920f8693", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507f86eb5da30c48444f36cbb37aedda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e21499d8e0ce99464817c01247ac2cfe606f7af1", "commitAfterChange": "24ee51cda626767793aae59eaf8489a458a84622", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": " public boolean setText(String html)", "signatureAfterChange": " public boolean setText(String html)", "diff": ["-", "-\t/*", "-\t* If the html field is non-null then the about:blank page is already being", "-\t* loaded, so no Stop or Navigate is required.  Just set the html that is to", "-\t* be shown.", "-\t*/", "-\tboolean blankLoading = this.html != null;", "-\tthis.html = html;", "-\tif (blankLoading) return true;", "-\t", "-\t/*", "-\t* Navigate to the blank page and insert the given html when", "-\t* receiving the next DocumentComplete notification.  See the", "-\t* MSDN article \"Loading HTML content from a Stream\".", "-\t* ", "-\t* Note.  Stop any pending request.  This is required to avoid displaying a", "-\t* blank page as a result of consecutive calls to setUrl and/or setText.  ", "-\t* The previous request would otherwise render the new html content and", "-\t* reset the html field before the browser actually navigates to the blank", "-\t* page as requested below.", "-\t* ", "-\t* Feature in Internet Explorer.  Stopping pending requests when no request", "-\t* is pending causes a default page 'Action cancelled' to be displayed.  The", "-\t* workaround is to not invoke 'stop' when no request has been set since", "-\t* that instance was created.", "-\t*/", "-\tint[] rgdispid;", "-\tif (navigate) {", "-\t\t/*", "-\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "-\t\t* requests to be received before the DocumentComplete for this page.  In such", "-\t\t* cases we must be sure to not set the html into the browser too soon, since", "-\t\t* doing so could result in its page being cleared out by a subsequent", "-\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "-\t\t* these extra events will be received or not.", "-\t\t*/", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\tif (pVarResult == null) return false;", "-\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\t\tpVarResult.dispose();", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tnavigate = true;", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(ABOUT_BLANK);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "+\treturn webBrowser.setText(html);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d58908a1e1c49393730d7c54f5be17d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e21499d8e0ce99464817c01247ac2cfe606f7af1", "commitAfterChange": "24ee51cda626767793aae59eaf8489a458a84622", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 27, "signatureBeforeChange": " public boolean setUrl(String url)", "signatureAfterChange": " public boolean setUrl(String url)", "diff": ["-\thtml = null;", "-", "-\t/*", "-\t* Bug in Internet Explorer.  For some reason, Navigating to an xml document before", "-\t* a previous Navigate has completed will leave the Browser in a bad state if the", "-\t* Navigate to the xml document does not complete.  This bad state causes a GP when", "-\t* the parent window is eventually disposed.  The workaround is to issue a Stop before", "-\t* navigating to any xml document. ", "-\t*/", "-\tif (url.endsWith(\".xml\")) {\t//$NON-NLS-1$", "-\t\t/*", "-\t\t* Feature in Internet Explorer.  Stopping pending requests when no request has been", "-\t\t* issued causes a default 'Action cancelled' page to be displayed.  Since Stop must", "-\t\t* be issued here, the workaround is to first Navigate to the about:blank page before", "-\t\t* issuing Stop so that the 'Action cancelled' page is not displayed.", "-\t\t*/", "-\t\tif (!navigate) {", "-\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tVariant[] rgvarg = new Variant[1];", "-\t\t\trgvarg[0] = new Variant(ABOUT_BLANK);", "-\t\t\tint[] rgdispidNamedArgs = new int[1];", "-\t\t\trgdispidNamedArgs[0] = rgdispid[1];", "-\t\t\tauto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\t\t\trgvarg[0].dispose();", "-\t\t}", "-\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "-", "-\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tnavigate = true;", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(url);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "+\treturn webBrowser.setUrl(url);"]}], "num": 37329}