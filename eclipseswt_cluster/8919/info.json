{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42fa86ac36efd006c8d2389ddf1a50ee", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67211f6e3e4582bd413c0bab2bed0fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "076d7e6631759f044ff06ad2f1c1fe3f1cb2f340", "commitAfterChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_VSCROLL (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* Feature in Windows.  On Vista only, it is faster to", "+\t\t* compute and answer the data for the visible columns", "+\t\t* of a table when scrolling, rather than just return", "+\t\t* the data for each column when asked.", "+\t\t*/", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\tRECT headerRect = new RECT (), rect = new RECT ();", "+\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\tboolean [] visible = new boolean [columnCount];", "+\t\t\tfor (int i=0; i<columnCount; i++) {", "+\t\t\t\tvisible [i] = true;", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, i, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, handle, headerRect, 2);", "+\t\t\t\t\tvisible [i] = OS.IntersectRect(headerRect, rect, headerRect);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\ttry {", "+\t\t\t\tdisplay.hwndParent = OS.GetParent (handle);", "+\t\t\t\tdisplay.columnVisible = visible;", "+\t\t\t\tOS.UpdateWindow (handle);", "+\t\t\t} finally {", "+\t\t\t\tdisplay.columnVisible = null;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21569fcd0d154361173e9352886a296f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "076d7e6631759f044ff06ad2f1c1fe3f1cb2f340", "commitAfterChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* Feature in Windows.  On Vista only, it is faster to", "+\t\t* compute and answer the data for the visible columns", "+\t\t* of a table when scrolling, rather than just return", "+\t\t* the data for each column when asked.", "+\t\t*/", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\tRECT headerRect = new RECT (), rect = new RECT ();", "+\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\tboolean [] visible = new boolean [columnCount];", "+\t\t\tfor (int i=0; i<columnCount; i++) {", "+\t\t\t\tvisible [i] = true;", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, i, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, handle, headerRect, 2);", "+\t\t\t\t\tvisible [i] = OS.IntersectRect(headerRect, rect, headerRect);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\ttry {", "+\t\t\t\tdisplay.hwndParent = OS.GetParent (handle);", "+\t\t\t\tdisplay.columnVisible = visible;", "+\t\t\t\tOS.UpdateWindow (handle);", "+\t\t\t} finally {", "+\t\t\t\tdisplay.columnVisible = null;", "+\t\t\t}", "+\t\t}"]}], "num": 8919}