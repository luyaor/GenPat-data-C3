{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "375da03e8a8afad359214cbcd9ede15d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96c22e683eb367c9636b96bf1e582a61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_program_Program.java", "commitBeforeChange": "2272262fa1ad2a17677f9473dd0c94e9b168217c", "commitAfterChange": "66413abed4d13d9d98291abd8415d641f3043b15", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test_launchLjava_lang_String()", "signatureAfterChange": "  public void test_launchLjava_lang_String()", "diff": ["-\twarnUnimpl(\"Test test_launchLjava_lang_String not written\");", "+", "+\t// This test is incomplete because a true test of launch would open", "+\t// an application that cannot be programmatically closed.", "+\t", "+\t// Cannot test empty string argument because it may launch something.", "+\t", "+\t// test null argument", "+\t", "+\ttry {", "+\t\tProgram.launch(null);", "+\t\tfail(\"Failed to throw ERROR_NULL_ARGUMENT\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Failed to throw ERROR_NULL_ARGUMENT\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t} catch (Exception e) {", "+\t\tfail(\"Invalid Exception thrown of type \"+e.getClass());", "+\t} catch (Error e) {", "+\t\tfail(\"Invalid Error thrown of type \"+e.getClass());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14964a044abde2b841a39363fee43462", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_program_Program.java", "commitBeforeChange": "2272262fa1ad2a17677f9473dd0c94e9b168217c", "commitAfterChange": "66413abed4d13d9d98291abd8415d641f3043b15", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_executeLjava_lang_String()", "signatureAfterChange": "  public void test_executeLjava_lang_String()", "diff": ["-\twarnUnimpl(\"Test test_executeLjava_lang_String not written\");", "+\t", "+\t// This test is incomplete because a true test of execute would open", "+\t// an application that cannot be programmatically closed.", "+\t", "+\ttry {", "+\t\tProgram[] programs = Program.getPrograms();", "+\t\tif (programs != null && programs.length > 0) {", "+", "+\t\t\t// Cannot test empty string argument because it may launch something.", "+\t\t\t//boolean result = programs[0].execute(\"\");", "+\t\t\t//assertFalse(result);", "+\t\t\t", "+\t\t\t// test null argument", "+\t\t\t\t", "+\t\t\tprograms[0].execute(null);", "+\t\t\tfail(\"Failed to throw ERROR_NULL_ARGUMENT\");", "+\t\t}", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Failed to throw ERROR_NULL_ARGUMENT\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t} catch (Exception e) {", "+\t\tfail(\"Invalid Exception thrown of type \"+e.getClass());", "+\t} catch (Error e) {", "+\t\tfail(\"Invalid Error thrown of type \"+e.getClass());", "+\t}"]}], "num": 42670}