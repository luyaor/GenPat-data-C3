{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e74cf9f7012c56928449b057638f931f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d411ea4f529e021aa7c8e2da27a0b1a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "92de623497255f31dfd065b167609a2f1b4433a3", "commitAfterChange": "ee17ecd760368d125d237a5ec62ef10269720437", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\tOS.gtk_window_set_policy (shellHandle, 1, 1, 0);", "+\tOS.gtk_window_set_title (shellHandle, new byte [1]);", "-\tfixedHandle = OS.gtk_fixed_new ();", "-\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint vadj = OS.gtk_adjustment_new(0, 0, 100, 1, 10, 10);", "-\tif (vadj == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint hadj = OS.gtk_adjustment_new(0, 0, 100, 1, 10, 10);", "-\tif (hadj == 0) error (SWT.ERROR_NO_HANDLES);", "-\tscrolledHandle = OS.gtk_scrolled_window_new (hadj, vadj);", "-\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\thandle = OS.gtk_fixed_new ();", "-\tif (handle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_fixed_set_has_window (handle, true);", "-\t//??", "-\tOS.GTK_WIDGET_SET_FLAGS(handle, OS.GTK_CAN_FOCUS);", "-\t", "-\tOS.gtk_container_add (shellHandle, fixedHandle);", "-\tOS.gtk_container_add (fixedHandle, scrolledHandle);", "-", "-\t//COMMENT", "-\tOS.GTK_BIN_SET_CHILD(scrolledHandle, handle);", "-\tOS.gtk_widget_set_parent(handle, scrolledHandle);", "-\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-\t", "-\tOS.gtk_window_set_policy (shellHandle, 1, 1, 0);", "-\t", "-\tint hsp = (style & SWT.H_SCROLL) == 0 ? OS.GTK_POLICY_NEVER : OS.GTK_POLICY_ALWAYS;", "-\tint vsp = (style & SWT.V_SCROLL) == 0 ? OS.GTK_POLICY_NEVER : OS.GTK_POLICY_ALWAYS;", "-\tOS.gtk_scrolled_window_set_policy (scrolledHandle, hsp, vsp);", "-\t", "-\taccelGroup = OS.gtk_accel_group_new ();", "-\tOS.gtk_window_add_accel_group (shellHandle, accelGroup);", "-\tOS.gtk_window_set_title (shellHandle, new byte [1]);", "+\tcreateScrolledHandle (shellHandle);", "+\t", "+\taccelGroup = OS.gtk_accel_group_new ();", "+\tOS.gtk_window_add_accel_group (shellHandle, accelGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb16fe7561b4ed04fe3f17baa7be5d5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "dd4423d6a25e296b3131820cf1f98771823ddd19", "commitAfterChange": "9559d48b4912b67ace5428d33abe4c7215a1d5a0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\t\tcurrWindowClass = OS.object_getClass(hostWindow.id);", "-\t\tint /*long*/ sendEventImpl = OS.class_getMethodImplementation(currWindowClass, OS.sel_sendEvent_);", "-\t\tif (sendEventImpl != Display.windowCallback3.getAddress()) {", "-\t\t\tint /*long*/ embeddedSubclass = display.createWindowSubclass(currWindowClass, \"SWTAWTWindow\", true);", "-\t\t\tOS.object_setClass(hostWindow.id, embeddedSubclass);", "-\t\t}", "-", "-\t\tif (windowEmbedCounts == null) windowEmbedCounts = new HashMap();", "-\t\tInteger embedCount = (Integer) windowEmbedCounts.get(hostWindow);", "-\t\tif (embedCount == null) embedCount = new Integer(0);", "-\t\tembedCount = new Integer(embedCount.intValue() + 1);", "-\t\twindowEmbedCounts.put(hostWindow, embedCount);", "-\t\t", "-\t\t// Register for notifications. An embedded shell has no control over the host window,", "-\t\t// so it isn't correct to install a delegate.", "-\t\tNSNotificationCenter defaultCenter = NSNotificationCenter.defaultCenter();", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidBecomeKey_, OS.NSWindowDidBecomeKeyNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidDeminiaturize_, OS.NSWindowDidDeminiaturizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMiniaturize_, OS.NSWindowDidMiniaturizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidMove_, OS.NSWindowDidMoveNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResize_, OS.NSWindowDidResizeNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowDidResignKey_, OS.NSWindowDidResignKeyNotification, hostWindow);", "-\t\tdefaultCenter.addObserver(windowDelegate, OS.sel_windowWillClose_, OS.NSWindowWillCloseNotification, hostWindow);", "+\t\tattachObserversToWindow(hostWindow);"]}], "num": 14694}