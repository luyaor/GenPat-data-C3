{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0b43c98022e6442dbf648b1eb7c1207", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7774ecbfa4493b1b3799bbfc13daf9e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 492, "signatureBeforeChange": " public static final synchronized native void gdk_pixbuf_render_pixmap_and_mask(int pixbuf, int[] pixmap_return, int[] mask_return, int alpha_threshold);", "signatureAfterChange": " public static final void gdk_pixbuf_render_pixmap_and_mask(int pixbuf, int[] pixmap_return, int[] mask_return, int alpha_threshold)", "diff": ["-public static final synchronized native void gdk_pixbuf_render_to_drawable_alpha(int /*long*/ pixbuf, int /*long*/ drawable, int src_x, int src_y, int dest_x, int dest_y, int width, int height, int alpha_mode, int alpha_threshold, int dither, int x_dither, int y_dither);", "-public static final synchronized native void gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold);", "+public static final native void _gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold);", "+public static final void gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_pixbuf_render_pixmap_and_mask(pixbuf, pixmap_return, mask_return, alpha_threshold);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ae35c37e3f875df9b48ce51b664bda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 691, "methodNumberAfterChange": 1302, "signatureBeforeChange": " public static final synchronized native void gtk_tree_view_column_add_attribute(int treeColumn, int cellRenderer, byte[] attribute, int column);", "signatureAfterChange": " public static final void gtk_tree_view_column_add_attribute(int treeColumn, int cellRenderer, byte[] attribute, int column)", "diff": ["-public static final synchronized native boolean gtk_tree_view_collapse_row(int /*long*/ view, int /*long*/ path);", "-public static final synchronized native void gtk_tree_view_column_add_attribute(int /*long*/ treeColumn, int /*long*/ cellRenderer, byte[] attribute, int column);", "+public static final native void _gtk_tree_view_column_add_attribute(int /*long*/ treeColumn, int /*long*/ cellRenderer, byte[] attribute, int column);", "+public static final void gtk_tree_view_column_add_attribute(int /*long*/ treeColumn, int /*long*/ cellRenderer, byte[] attribute, int column) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gtk_tree_view_column_add_attribute(treeColumn, cellRenderer, attribute, column);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a338d9f71315a86a80143d629ccc3e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 939, "methodNumberAfterChange": 1748, "signatureBeforeChange": " public static final synchronized native void pango_tab_array_set_tab(int tab_array, int tab_index, int alignment, int location);", "signatureAfterChange": " public static final void pango_tab_array_set_tab(int tab_array, int tab_index, int alignment, int location)", "diff": ["-public static final synchronized native int /*long*/ pango_tab_array_new(int initial_size, boolean positions_in_pixels);", "-public static final synchronized native void pango_tab_array_set_tab(int /*long*/ tab_array, int tab_index, int /*long*/ alignment, int location);", "+public static final native void _pango_tab_array_set_tab(int /*long*/ tab_array, int tab_index, int /*long*/ alignment, int location);", "+public static final void pango_tab_array_set_tab(int /*long*/ tab_array, int tab_index, int /*long*/ alignment, int location) {", "+\tlock.lock();", "+\ttry {", "+\t\t_pango_tab_array_set_tab(tab_array, tab_index, alignment, location);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 12794}