{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28a2a695a6a6ede5ce213d885e97b333", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5aaf067b2ad85c508b3e6aba9327f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+\t//TO DO - get rid of enter/exit for mouse crossing border", "-\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, SWT.Show);", "-\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SWT.Help);", "-\tOS.g_signal_connect (eventHandle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\tOS.g_signal_connect (eventHandle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, SWT.KeyDown);", "-\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, SWT.KeyUp);", "-\tOS.g_signal_connect (eventHandle, OS.motion_notify_event, windowProc3, SWT.MouseMove);", "-\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, SWT.FocusIn);", "-\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, SWT.FocusOut);", "-\tOS.g_signal_connect_after (eventHandle, OS.button_press_event, windowProc3, -SWT.MouseDown);", "-\tOS.g_signal_connect_after (eventHandle, OS.button_release_event, windowProc3, -SWT.MouseUp);", "-\tOS.g_signal_connect_after (eventHandle, OS.motion_notify_event, windowProc3, -SWT.MouseMove);", "-\tOS.g_signal_connect_after (eventHandle, OS.enter_notify_event, windowProc3, SWT.MouseEnter);", "-\tOS.g_signal_connect_after (eventHandle, OS.leave_notify_event, windowProc3, SWT.MouseExit);", "-\tOS.g_signal_connect_after (eventHandle, OS.expose_event, windowProc3, SWT.Paint);", "+\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, POPUP_MENU);", "+\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SHOW_HELP);", "+\tOS.g_signal_connect (eventHandle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.motion_notify_event, windowProc3, MOTION_NOTIFY_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, FOCUS_IN_EVENT);", "+\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, FOCUS_OUT_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.expose_event, windowProc3, EXPOSE_EVENT);", "+\t", "+\t/*", "+\t* Feature in GTK.  Events such as mouse move are propagate up", "+\t* the widget hierarchy and are seen by the parent.  This is the", "+\t* correct GTK behavior but not correct for SWT.  The fix is to", "+\t* hook a signal after and stop the propagation using a negative", "+\t* event number to distinguish this case.", "+\t*/", "+\tOS.g_signal_connect_after (eventHandle, OS.button_press_event, windowProc3, -BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.button_release_event, windowProc3, -BUTTON_RELEASE_EVENT);", "+\tOS.g_signal_connect_after (eventHandle, OS.motion_notify_event, windowProc3, -MOTION_NOTIFY_EVENT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed54b805a909e209591f34ef8958e38d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint)", "diff": ["-\tcheckWidget ();\r", "-\tPoint size;\r", "-\tif (control != null) {\r", "-\t\tsize = control.computeSize (wHint, hHint);\r", "-\t}\r", "-\telse {\r", "-\t\tsize = new Point (0,0);\t\r", "-\t}\r", "-\tif (wHint != SWT.DEFAULT) size.x = wHint;\r", "-\tif (hHint != SWT.DEFAULT) size.y = hHint;\r", "-\tint width = size.x + MINIMUM_WIDTH + MARGIN_WIDTH;\r", "-\tint height = Math.max (MINIMUM_CHILD_HEIGHT, size.y) + MARGIN_HEIGHT;\r", "+\tcheckWidget();\r", "+\tif (preferredWidth > -1) return new Point(preferredWidth, preferredHeight);\r", "+\tint width = MINIMUM_WIDTH;\r", "+\tint height = DEFAULT_HEIGHT;\r", "+\tif (wHint != SWT.DEFAULT) width = wHint + MINIMUM_WIDTH + MARGIN_WIDTH; \r", "+\tif (hHint != SWT.DEFAULT) height = hHint + (2 + MARGIN_HEIGHT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40e7bb1236b0eb591cc4b614afc46e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f6a78259c00d650ff90e53c82940af7858b5277b", "commitAfterChange": "3e57ee0ed42c71cf5b75eff6d71364caee02a643", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 274, "signatureBeforeChange": "  \tint queryAccessible2Interfaces(GUID guid, long ppvObject)", "signatureAfterChange": "  \tint queryAccessible2Interfaces(GUID guid, long ppvObject)", "diff": ["-\t\t\tif (accessibleActionListeners.size() > 0 || accessibleAttributeListeners.size() > 0 ||", "-\t\t\t\t\taccessibleHyperlinkListeners.size() > 0 || accessibleTableListeners.size() > 0 ||", "-\t\t\t\t\taccessibleTableCellListeners.size() > 0 || accessibleTextExtendedListeners.size() > 0 ||", "-\t\t\t\t\taccessibleValueListeners.size() > 0 || getRelationCount() > 0", "+\t\t\tif (accessibleActionListenersSize() > 0 || accessibleAttributeListenersSize() > 0 ||", "+\t\t\t\t\taccessibleHyperlinkListenersSize() > 0 || accessibleTableListenersSize() > 0 ||", "+\t\t\t\t\taccessibleTableCellListenersSize() > 0 || accessibleTextExtendedListenersSize() > 0 ||", "+\t\t\t\t\taccessibleValueListenersSize() > 0 || getRelationCount() > 0", "-\t\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\tif (accessibleActionListenersSize() > 0) {", "-//\t\t\tif (accessibleControlListeners.size() > 0) { // TO DO: can we reduce the scope of this somehow?", "+//\t\t\tif (accessibleControlListenersSize() > 0) { // TO DO: can we reduce the scope of this somehow?", "-\t\t\tif (accessibleEditableTextListeners.size() > 0) {", "+\t\t\tif (accessibleEditableTextListenersSize() > 0) {", "-\t\t\tif (accessibleHyperlinkListeners.size() > 0) {", "+\t\t\tif (accessibleHyperlinkListenersSize() > 0) {", "-\t\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tif (accessibleTextExtendedListenersSize() > 0) {", "-//\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "+//\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleAccessibleListenersSize() > 0 || accessibleControlListenersSize() > 0)) {", "-\t\t\tif (accessibleTableListeners.size() > 0) {", "+\t\t\tif (accessibleTableListenersSize() > 0) {", "-\t\t\tif (accessibleTableCellListeners.size() > 0) {", "+\t\t\tif (accessibleTableCellListenersSize() > 0) {", "-\t\t\tif (accessibleTextExtendedListeners.size() > 0 || accessibleAttributeListeners.size() > 0) {", "+\t\t\tif (accessibleTextExtendedListenersSize() > 0 || accessibleAttributeListenersSize() > 0) {", "-\t\t\tif (accessibleValueListeners.size() > 0) {", "+\t\t\tif (accessibleValueListenersSize() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3f1794cddb4f49f777b7c05ff6b715", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\t// TO DO - expose, enter/exit, focus in/out", "-\tOS.g_signal_connect (listHandle, OS.select_child, windowProc3, SWT.Selection);", "-\tOS.g_signal_connect_after (entryHandle, OS.changed, windowProc2, SWT.Modify);", "-\tOS.g_signal_connect (entryHandle, OS.activate, windowProc2, SWT.DefaultSelection);", "+\tOS.g_signal_connect (listHandle, OS.select_child, windowProc3, SELECT_CHILD);", "+\tOS.g_signal_connect_after (entryHandle, OS.changed, windowProc2, CHANGED);", "+\tOS.g_signal_connect (entryHandle, OS.activate, windowProc2, ACTIVATE);", "-\t\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\t\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-\t\tOS.g_signal_connect (handle, OS.key_press_event, windowProc3, SWT.KeyDown);", "-\t\tOS.g_signal_connect (handle, OS.key_release_event, windowProc3, SWT.KeyUp);", "-\t\tOS.g_signal_connect (handle, OS.motion_notify_event, windowProc3, SWT.MouseMove);", "-\t\tOS.g_signal_connect_after (handle, OS.button_press_event, windowProc3, -SWT.MouseDown);", "-\t\tOS.g_signal_connect_after (handle, OS.button_release_event, windowProc3, -SWT.MouseUp);", "-\t\tOS.g_signal_connect_after (handle, OS.key_press_event, windowProc3, -SWT.KeyDown);", "-\t\tOS.g_signal_connect_after (handle, OS.key_release_event, windowProc3, -SWT.KeyUp);", "-\t\tOS.g_signal_connect_after (handle, OS.motion_notify_event, windowProc3, -SWT.MouseMove);", "+\t\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\t\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+\t\tOS.g_signal_connect (handle, OS.motion_notify_event, windowProc3, MOTION_NOTIFY_EVENT);", "+\t\tOS.g_signal_connect (handle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "+\t\tOS.g_signal_connect (handle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "+\t", "+\t\t/*", "+\t\t* Feature in GTK.  Events such as mouse move are propagate up", "+\t\t* the widget hierarchy and are seen by the parent.  This is the", "+\t\t* correct GTK behavior but not correct for SWT.  The fix is to", "+\t\t* hook a signal after and stop the propagation using a negative", "+\t\t* event number to distinguish this case.", "+\t\t*/", "+\t\tOS.g_signal_connect_after (handle, OS.button_press_event, windowProc3, -BUTTON_PRESS_EVENT);", "+\t\tOS.g_signal_connect_after (handle, OS.button_release_event, windowProc3, -BUTTON_RELEASE_EVENT);", "+\t\tOS.g_signal_connect_after (handle, OS.motion_notify_event, windowProc3, -MOTION_NOTIFY_EVENT);"]}], "num": 34868}