{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "097cda21cb4116b66873dd197178dd2d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1246325c0c0cf52691f683084ae3cfa8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int _createColumnHandle(int index, TableColumn column)", "signatureAfterChange": "  void createColumn (TableColumn column, int index)", "diff": ["-int _createColumnHandle(int index, TableColumn column) {", "-\tint columnHandle = OS.gtk_tree_view_column_new();", "-\tif (columnHandle == 0) error(SWT.ERROR_NO_HANDLES);", "-\tint textRenderer = OS.gtk_cell_renderer_text_new();", "-\tif (textRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end(columnHandle, textRenderer, true);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"text\", index);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"foreground-gdk\", 2*MAX_COLUMNS+1);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"background-gdk\", 2*MAX_COLUMNS+2);", "-\tint pixbufRenderer = OS.gtk_cell_renderer_pixbuf_new();", "-\tif (pixbufRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end(columnHandle, pixbufRenderer, false);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, pixbufRenderer, \"pixbuf\", index+MAX_COLUMNS);", "-\tif ((style & SWT.CHECK) != 0 && (index==0)) {", "-\t\tint checkRenderer = OS.gtk_cell_renderer_toggle_new();", "-\t\tif (checkRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_tree_view_column_pack_end(columnHandle, checkRenderer, false);", "-\t\tOS.gtk_tree_view_column_add_attribute(columnHandle, checkRenderer, \"active\", 2*MAX_COLUMNS);", "-\t\tOS.g_signal_connect(checkRenderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "+void createColumn (TableColumn column, int index) {", "+\tint modelIndex = 3;", "+\tif (columnCount != 0) {", "+\t\tint modelLength = OS.gtk_tree_model_get_n_columns (modelHandle);", "+\t\tboolean [] usedColumns = new boolean [modelLength];", "+\t\tfor (int i=0; i<columnCount; i++) {", "+\t\t\tint columnIndex = columns [i].modelIndex;", "+\t\t\tusedColumns [columnIndex] = usedColumns [columnIndex + 1] = true;", "+\t\t}", "+\t\twhile (modelIndex < modelLength) {", "+\t\t\tif (!usedColumns [modelIndex]) break;", "+\t\t\tmodelIndex++;", "+\t\t}", "+\t\tif (modelIndex == modelLength) {", "+\t\t\tint oldModel = modelHandle;", "+\t\t\tint[] types = getColumnTypes (columnCount + 4);", "+\t\t\tint newModel = OS.gtk_list_store_newv (types.length, types);", "+\t\t\tif (newModel == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\tint [] ptr = new int [1];", "+\t\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\t\tTableItem item = items [i];", "+\t\t\t\tint oldItem = item.handle;", "+\t\t\t\tint newItem = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\t\tif (newItem == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tOS.gtk_list_store_insert (newModel, newItem, i);", "+\t\t\t\tfor (int j=0; j<modelLength; j++) {", "+\t\t\t\t\tOS.gtk_tree_model_get (oldModel, oldItem, j, ptr, -1);", "+\t\t\t\t\tOS.gtk_list_store_set (newModel, newItem, j, ptr [0], -1);", "+\t\t\t\t\tif (types [j] == OS.G_TYPE_STRING ()) OS.g_free ((ptr [0]));", "+\t\t\t\t}", "+\t\t\t\tOS.gtk_list_store_remove (oldModel, oldItem);", "+\t\t\t\tOS.g_free (oldItem);", "+\t\t\t\titem.handle = newItem;", "+\t\t\t}", "+\t\t\tOS.gtk_tree_view_set_model (handle, newModel);", "+\t\t\tOS.g_object_unref (oldModel);", "+\t\t\tmodelHandle = newModel;", "+\t\t}", "-\tOS.gtk_tree_view_column_set_resizable(columnHandle, true);", "-\tWidgetTable.put (columnHandle, this);", "-\tOS.gtk_tree_view_column_set_clickable(columnHandle, true);", "-\tOS.g_signal_connect(columnHandle, OS.clicked, getDisplay().windowProc2, SWT.Activate);\t", "-\tif (column!=null) {", "-\t\tcolumn.pixbufRendererHandle = pixbufRenderer;", "-\t} else {", "-\t\tfakePixbufRenderer = pixbufRenderer;", "+\tint columnHandle = OS.gtk_tree_view_column_new ();", "+\tif (columnHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif (index == 0 && columnCount > 0) {", "+\t\tTableColumn checkColumn = columns [0];", "+\t\tcreateRenderers (checkColumn.handle, checkColumn.modelIndex, false);", "-\treturn columnHandle;", "+\tcreateRenderers (columnHandle, modelIndex, index == 0);", "+\tDisplay display = getDisplay ();", "+\tOS.g_signal_connect (columnHandle, OS.clicked, display.treeColumnSelectionProc, handle);", "+\tOS.gtk_tree_view_column_set_resizable (columnHandle, true);", "+\tOS.gtk_tree_view_column_set_clickable (columnHandle, true);", "+\tOS.gtk_tree_view_insert_column (handle, columnHandle, index);", "+\tif (column != null) {", "+\t\tcolumn.handle = columnHandle;", "+\t\tcolumn.modelIndex = modelIndex;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fef87fb81efb768f5ed4a0ec92d39ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "108b9dd38cc7c1124205fb1899f8aad5ad317989", "commitAfterChange": "5014eebfedd0f623cdc5c8c21ddc6fda2b771129", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  int gtk_event_after (int widget, int gdkEvent)", "signatureAfterChange": "  int gtk_event_after (int widget, int gdkEvent)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t\tGdkEvent event = new GdkEvent ();", "-\t\tOS.memmove (event, gdkEvent, GdkEvent.sizeof);", "-\t\tswitch (event.type) {", "-\t\t\tcase OS.GDK_BUTTON_PRESS: {", "-\t\t\t\tif (OS.GTK_VERSION < OS.VERSION (2, 8, 0) && !selectionAdded) {", "-\t\t\t\t\tint /*long*/ grabHandle = OS.gtk_grab_get_current ();", "-\t\t\t\t\tif (grabHandle != 0) {", "-\t\t\t\t\t\tif (OS.G_OBJECT_TYPE (grabHandle) == OS.GTK_TYPE_MENU ()) {", "-\t\t\t\t\t\t\tmenuHandle = grabHandle;", "-\t\t\t\t\t\t\tOS.g_signal_connect_closure_by_id (menuHandle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT], false);", "-\t\t\t\t\t\t\tOS.g_signal_connect_closure_by_id (menuHandle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT_INVERSE], true);", "-\t\t\t\t\t\t\tOS.g_signal_connect_closure (menuHandle, OS.selection_done, display.closures [SELECTION_DONE], false);", "-\t\t\t\t\t\t\tdisplay.addWidget (menuHandle, this);", "-\t\t\t\t\t\t\tselectionAdded = true;", "-\t\t\t\t\t\t}", "+\tGdkEvent event = new GdkEvent ();", "+\tOS.memmove (event, gdkEvent, GdkEvent.sizeof);", "+\tswitch (event.type) {", "+\t\tcase OS.GDK_BUTTON_PRESS: {", "+\t\t\tif (OS.GTK_VERSION < OS.VERSION (2, 8, 0) && !selectionAdded) {", "+\t\t\t\tint /*long*/ grabHandle = OS.gtk_grab_get_current ();", "+\t\t\t\tif (grabHandle != 0) {", "+\t\t\t\t\tif (OS.G_OBJECT_TYPE (grabHandle) == OS.GTK_TYPE_MENU ()) {", "+\t\t\t\t\t\tmenuHandle = grabHandle;", "+\t\t\t\t\t\tOS.g_signal_connect_closure_by_id (menuHandle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT], false);", "+\t\t\t\t\t\tOS.g_signal_connect_closure_by_id (menuHandle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT_INVERSE], true);", "+\t\t\t\t\t\tOS.g_signal_connect_closure (menuHandle, OS.selection_done, display.closures [SELECTION_DONE], false);", "+\t\t\t\t\t\tdisplay.addWidget (menuHandle, this);", "+\t\t\t\t\t\tselectionAdded = true;", "-\t\t\t\tGdkEventButton gdkEventButton = new GdkEventButton ();", "-\t\t\t\tOS.memmove (gdkEventButton, gdkEvent, GdkEventButton.sizeof);", "-\t\t\t\tif (gdkEventButton.button == 1) {", "-\t\t\t\t\tif (!sendMouseEvent (SWT.MouseDown, gdkEventButton.button, display.clickCount, 0, false, gdkEventButton.time, gdkEventButton.x_root, gdkEventButton.y_root, false, gdkEventButton.state)) {", "-\t\t\t\t\t\treturn 1;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "-\t\t\t\t\t\tif ((style & SWT.READ_ONLY) == 0 && widget == buttonHandle) {", "-\t\t\t\t\t\t\tOS.gtk_widget_grab_focus (entryHandle);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\tGdkEventButton gdkEventButton = new GdkEventButton ();", "+\t\t\tOS.memmove (gdkEventButton, gdkEvent, GdkEventButton.sizeof);", "+\t\t\tif (gdkEventButton.button == 1) {", "+\t\t\t\tif (!sendMouseEvent (SWT.MouseDown, gdkEventButton.button, display.clickCount, 0, false, gdkEventButton.time, gdkEventButton.x_root, gdkEventButton.y_root, false, gdkEventButton.state)) {", "+\t\t\t\t\treturn 1;", "+\t\t\t\t}", "-\t\t\t\t\tif ((style & SWT.READ_ONLY) == 0) {", "-\t\t\t\t\t\tGdkEventFocus gdkEventFocus = new GdkEventFocus ();", "-\t\t\t\t\t\tOS.memmove (gdkEventFocus, gdkEvent, GdkEventFocus.sizeof);", "-\t\t\t\t\t\tif (gdkEventFocus.in != 0) {", "-\t\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, false);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, true);", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif ((style & SWT.READ_ONLY) == 0 && widget == buttonHandle) {", "+\t\t\t\t\t\tOS.gtk_widget_grab_focus (entryHandle);", "-\t\t\t\tbreak;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "+\t\t\t\tif ((style & SWT.READ_ONLY) == 0) {", "+\t\t\t\t\tGdkEventFocus gdkEventFocus = new GdkEventFocus ();", "+\t\t\t\t\tOS.memmove (gdkEventFocus, gdkEvent, GdkEventFocus.sizeof);", "+\t\t\t\t\tif (gdkEventFocus.in != 0) {", "+\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, false);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gtk_combo_box_set_focus_on_click (handle, true);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}], "num": 15957}