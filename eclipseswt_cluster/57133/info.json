{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f1a98c95126cb1b97c7c47729637803", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60318d653cc90d9c522b268c2c8a0ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processDefaultSelection (int int0, int int1, int int2)", "diff": ["-int processEvent (int eventNumber, int int0, int int1, int int2) {", "-\tif (eventNumber == 0) {", "-\t\tGdkEvent gdkEvent = new GdkEvent ();", "-\t\tOS.memmove (gdkEvent, int0, GdkEvent.sizeof);", "-\t\tswitch (gdkEvent.type) {", "-\t\t\tcase OS.GDK_BUTTON_PRESS:", "-\t\t\tcase OS.GDK_2BUTTON_PRESS: {", "-\t\t\t\tOS.GTK_CLIST_RESYNC_SELECTION (handle);", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase OS.GDK_BUTTON_RELEASE: {", "-\t\t\t\t/*", "-\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "-\t\t\t\t* does not issue notification.  The fix is to detect", "-\t\t\t\t* that the mouse was released over a selected item when", "-\t\t\t\t* no selection signal was set and issue a fake selection", "-\t\t\t\t* event.", "-\t\t\t\t*/", "-\t\t\t\tif ((style & SWT.MULTI) != 0) {", "-\t\t\t\t\tif (selected) {", "-\t\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "-\t\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "-\t\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "-\t\t\t\t\t\tint [] row = new int [1], column = new int [1];", "-\t\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "-\t\t\t\t\t\t\tint list = OS.GTK_CLIST_SELECTION (handle);", "-\t\t\t\t\t\t\tif (list != 0) {", "-\t\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "-\t\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tselected = false;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "-\t\t\t\t/*", "-\t\t\t\t* Bug in GTK.  When an application opens a new modal top level", "-\t\t\t\t* shell from inside the \"select_row\" signal, the GtkCList does not get the", "-\t\t\t\t* mouse up and does not release grabs.  The fix is to release the grabs", "-\t\t\t\t* when focus is lost.", "-\t\t\t\t*/", "-\t\t\t\tGdkEventFocus focusEvent = new GdkEventFocus ();", "-\t\t\t\tOS.memmove (focusEvent, int0, GdkEventFocus.sizeof);", "-\t\t\t\tif (focusEvent.in == 0) {", "-\t\t\t\t\tif (OS.gtk_grab_get_current () == handle) {", "-\t\t\t\t\t\tOS.gtk_grab_remove (handle);", "-\t\t\t\t\t\tOS.gdk_pointer_ungrab (OS.GDK_CURRENT_TIME);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\treturn 1;", "-\t}", "-\treturn super.processEvent (eventNumber, int0, int1, int2);", "+int processDefaultSelection (int int0, int int1, int int2) {", "+\tpostEvent (SWT.DefaultSelection);", "+\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e6321a4efbbd1df07542a96eef821e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "b53c6f58164ca4bd4b5c26fa2abcb16f58f59b67", "commitAfterChange": "abcda6211c0bcc3a908332242b9d1409108c82ba", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": "  int processMouseUp (int callData, int arg1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["+int processEvent (int eventNumber, int int0, int int1, int int2) {", "+\tif (eventNumber == 0) {", "+\t\tswitch (OS.GDK_EVENT_TYPE (int0)) {", "+\t\t\tcase OS.GDK_BUTTON_PRESS:", "+\t\t\tcase OS.GDK_2BUTTON_PRESS: {", "+\t\t\t\tif ((style & SWT.MULTI) != 0) selected = true;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase OS.GDK_BUTTON_RELEASE: {", "+\t\t\t\tif ((style & SWT.MULTI) != 0) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "+\t\t\t\t\t* does not issue notification.  The fix is to detect", "+\t\t\t\t\t* that the mouse was released over a selected item when", "+\t\t\t\t\t* no selection signal was set and issue a fake selection", "+\t\t\t\t\t* event.", "+\t\t\t\t\t*/", "+\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "+\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "+\t\t\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\t\t\t\tGtkCList clist = new GtkCList (handle);", "+\t\t\t\t\t\tif (selected && clist.selection != 0) {", "+\t\t\t\t\t\t\tint list = clist.selection;", "+\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "+\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tselected = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\treturn 1;", "+\t}", "+\treturn super. processEvent (eventNumber, int0, int1, int2);", "+}", "-", "-int processMouseUp (int callData, int arg1, int int2) {", "-\tint result = super.processMouseUp (callData, arg1, int2);", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\t/*", "-\t\t* Feature in GTK.  When an item is reselected, GTK", "-\t\t* does not issue notification.  The fix is to detect", "-\t\t* that the mouse was released over a selected item when", "-\t\t* no selection signal was set and issue a fake selection", "-\t\t* event.", "-\t\t*/", "-\t\tdouble[] px = new double [1], py = new double [1];", "-\t\tOS.gdk_event_get_coords(callData, px, py);", "-\t\tint x = (int) (px[0]), y = (int) (py[0]);", "-\t\tint [] row = new int [1], column = new int [1];", "-\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "-\t\t\tGtkCList clist = new GtkCList (handle);", "-\t\t\tif (selected && clist.selection != 0) {", "-\t\t\t\tint list = clist.selection;", "-\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "-\t\t\t\t\t\tpostEvent (SWT.Selection);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tselected = false;", "-\t}", "-\treturn result;", "-}"]}], "num": 57133}