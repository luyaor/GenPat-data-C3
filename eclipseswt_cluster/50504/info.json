{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "294c721cd579bd4b14a3aeca07a58471", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb08c8f7506cc4987cdbbaa51274e0a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Item.java", "commitBeforeChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "commitAfterChange": "61108effd627c72a8074475656abbceb5f48f2f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test_setTextLjava_lang_String()", "signatureAfterChange": "  public void test_setTextLjava_lang_String()", "diff": ["-\tif (fCheckSwtNullExceptions) {", "-\t\ttry {", "-\t\t\titem.setText(null);", "-\t\t\tfail(\"No exception thrown for string == null\");", "-\t\t}", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "+\ttry {", "+\t\titem.setText(null);", "+\t\tfail(\"No exception thrown for string == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ba4d61499144f84d79be1a0a5dd949", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "3b350dd4c4b9460951698e03648662ba16994245", "commitAfterChange": "21e23b791a319e5180c60f1da8d0340d3dcffe74", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void setSelection(int index)", "signatureAfterChange": " public void setSelection(int index)", "diff": ["-\tif (!single) {", "-\t\tif (oldIndex != -1) {", "-\t\t\titems[oldIndex].closeImageState = NONE;", "-\t\t}", "-\t\titems[selectedIndex].closeImageState = NORMAL;", "+\tif (oldIndex != -1) {", "+\t\titems[oldIndex].closeImageState = NONE;", "+\titems[selectedIndex].closeImageState = NORMAL;", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abad9e1e44ad12b11e5b7176e63da579", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  \tstatic int atkValue_set_current_value (int atkObject, int value)", "signatureAfterChange": "  \tstatic int atkValue_set_current_value (int atkObject, int value)", "diff": ["-\t\t\tif (accessible != null) {", "-\t\t\t\tVector listeners = accessible.accessibleValueListeners;", "-\t\t\t\tint length = listeners.size();", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "-\t\t\t\t\tevent.value = getGValue(value);", "-\t\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "-\t\t\t\t\t\tlistener.setCurrentValue(event);", "-\t\t\t\t\t}", "-\t\t\t\t\treturn 0;", "+\t\t\tVector listeners = accessible.accessibleValueListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "+\t\t\t\tevent.value = getGValue(value);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.setCurrentValue(event);", "+\t\t\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a51901e578b513dd8530bac27ed9cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TabItem.java", "commitBeforeChange": "83d6ac660631333559b2be85b6372ffe54ef80a0", "commitAfterChange": "7796403a5484cdccd2611dd07869f19c5f4699db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "diff": ["-\tif (fCheckOutOfRangeBehaviour) {", "-\t\ttry {", "-\t\t\tnew TabItem(tabFolder, SWT.NULL, tabFolder.getItemCount() + 1);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t}", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "-\t\tfinally {", "-\t\t\tassertTrue(\":e:\", tabFolder.getItems()[1] == tItem);", "-\t\t}", "+\ttry {", "+\t\tnew TabItem(tabFolder, SWT.NULL, tabFolder.getItemCount() + 1);", "+\t\tfail(\"No exception thrown\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\tfinally {", "+\t\tassertTrue(\":e:\", tabFolder.getItems()[1] == tItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e2e4a109b7de4855de43a1d1c946c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TabItem.java", "commitBeforeChange": "4fb1598ef1bb8a9b94a0425d7ca133725ba1c8ca", "commitAfterChange": "18743c636f67f829c4f1bf39fb403963b3cf90a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "diff": ["-\tif (fCheckOutOfRangeBehaviour) {", "-\t\ttry {", "-\t\t\tnew TabItem(tabFolder, SWT.NULL, -1);\t", "-\t\t\tfail(\"No exception thrown\");", "-\t\t}", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "-\t\tfinally {", "-\t\t\tassertTrue(\":d:\", tabFolder.getItems()[1] == tItem);\t\t\t", "-\t\t}", "+\ttry {", "+\t\tnew TabItem(tabFolder, SWT.NULL, -1);\t", "+\t\tfail(\"No exception thrown\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\tfinally {", "+\t\tassertTrue(\":d:\", tabFolder.getItems()[1] == tItem);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2282f60d021eb72fc54d0edc4f5f94b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "c89bab5bedb26789fc55835a14938a4fc6d4cc5c", "commitAfterChange": "8b04106dcfac2380b6792586458d07b21132dfcb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void init(Device device, String name, int height, int style)", "signatureAfterChange": "  void init(Device device, String name, int height, int style)", "diff": ["-\tif (USE_ATSUI) {", "-\t\tthis.atsuiStyle = createStyle();", "-\t}", "+\tthis.atsuiStyle = createStyle();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0680706c8451a77960ef4716dfd71a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TabItem.java", "commitBeforeChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "commitAfterChange": "61108effd627c72a8074475656abbceb5f48f2f4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TabFolderII()", "diff": ["-\tif (fCheckSwtNullExceptions) {", "-\t\ttry {", "-\t\t\tnew TabItem(null, SWT.NULL, 0);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t}", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "+\ttry {", "+\t\tnew TabItem(null, SWT.NULL, 0);", "+\t\tfail(\"No exception thrown\");", "+\t}", "+\tcatch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7aae02693e87acdb21fea09b55c5ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bba3865ca3ba149a92f0433b6df2642bc29423fc", "commitAfterChange": "f8e6aae825ab5035491b635587a57ae0afe89185", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "signatureAfterChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "diff": ["-\t\t\tif (image != null) {\r", "-\t\t\t\timage.handle = hIcon;\r", "-\t\t\t\timage.type = SWT.ICON;\r", "-\t\t\t\tif (OS.IsWinCE) image.data = i;\r", "-\t\t\t}\r", "+\t\t\timage.handle = hIcon;\r", "+\t\t\timage.type = SWT.ICON;\r", "+\t\t\tif (OS.IsWinCE) image.data = i;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70ff29bfb39c2bbe6ae16991d993d23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Dialog.java", "commitBeforeChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "commitAfterChange": "61108effd627c72a8074475656abbceb5f48f2f4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test_setTextLjava_lang_String()", "signatureAfterChange": "  public void test_setTextLjava_lang_String()", "diff": ["-\tif (fCheckSwtNullExceptions) {", "-\t\ttry {", "-\t\t\tdialog.setText(null);", "-\t\t\tfail(\"No exception thrown for string = null\");", "-\t\t}", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "+\ttry {", "+\t\tdialog.setText(null);", "+\t\tfail(\"No exception thrown for string = null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b1f539063012c05f22eb3beef077fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "50bab172db4667d28b76ef7ac7275d2b8707bd84", "commitAfterChange": "fa5f6cd08d0a23ce9199f460c304324c571770ca", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r public void setSelectionBackground(Image image)", "signatureAfterChange": "\r public void setSelectionBackground(Image image)", "diff": ["- */\r", "-\tcheckWidget();\r", "-\tif (image != null) {\r", "-\t\tgradientColors = null;\r", "-\t\tgradientPercents = null;\r", "-\t}\r", "+\tgradientColors = null;\r", "+\tgradientPercents = null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a08dddbf80e14d97d234a8f060834188", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_MessageBox.java", "commitBeforeChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "commitAfterChange": "61108effd627c72a8074475656abbceb5f48f2f4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void test_setMessageLjava_lang_String()", "signatureAfterChange": " public void test_setMessageLjava_lang_String()", "diff": ["-\tif (fCheckSwtNullExceptions) {", "-\t\ttry {", "-\t\t\tmessageBox.setMessage(null);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t} ", "-\t\tcatch (IllegalArgumentException e) {", "-\t\t}", "+\ttry {", "+\t\tmessageBox.setMessage(null);", "+\t\tfail(\"No exception thrown\");", "+\t} ", "+\tcatch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bfc1e300260213985834899feb79983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1e98dbe1530e9e3b1a311cfb51720f74be64f75f", "commitAfterChange": "77d1bc1dfbf7a3037e5eee68eb8d96fd67f55440", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  boolean setScrollWidth (TableItem item, boolean force)", "signatureAfterChange": "  boolean setScrollWidth (TableItem item, boolean force)", "diff": ["-\t\tif (EXPLORER_THEME) {", "-\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\tnewWidth += EXPLORER_EXTRA;", "-\t\t\t}", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\tnewWidth += VISTA_EXTRA;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2675199c473d38b364a9cdde6527870c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["-\tif (!isEmbedded) {", "-\t\t/*", "-\t\t * Feature in the Macintosh.  On OS 10.2, it is necessary", "-\t\t * to explicitly check in with the Process Manager and set", "-\t\t * the current process to be the front process in order for", "-\t\t * windows to come to the front by default.  The fix is call", "-\t\t * both GetCurrentProcess() and SetFrontProcess().", "-\t\t * ", "-\t\t * NOTE: It is not actually necessary to use the process", "-\t\t * serial number returned by GetCurrentProcess() in the", "-\t\t * call to SetFrontProcess() (ie. kCurrentProcess can be", "-\t\t * used) but both functions must be called in order for", "-\t\t * windows to come to the front.", "-\t\t */", "-\t\tint [] psn = new int [2];", "-\t\tif (OS.GetCurrentProcess (psn) == OS.noErr) {", "-\t\t\tint pid = OS.getpid ();", "-\t\t\tint /*long*/ ptr = getAppName().UTF8String();", "-\t\t\tif (ptr != 0) OS.CPSSetProcessName (psn, ptr);", "-\t\t\tOS.TransformProcessType (psn, OS.kProcessTransformToForegroundApplication);", "-\t\t\tOS.SetFrontProcess (psn);", "-\t\t\tptr = OS.getenv (ascii (\"APP_ICON_\" + pid));", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tNSString path = NSString.stringWithUTF8String (ptr);", "-\t\t\t\tNSImage image = (NSImage) new NSImage().alloc();", "-\t\t\t\timage = image.initByReferencingFile(path);", "-\t\t\t\tdockImage = image;", "-\t\t\t\tapplication.setApplicationIconImage(image);", "-\t\t\t}", "+\t/*", "+\t * Feature in the Macintosh.  On OS 10.2, it is necessary", "+\t * to explicitly check in with the Process Manager and set", "+\t * the current process to be the front process in order for", "+\t * windows to come to the front by default.  The fix is call", "+\t * both GetCurrentProcess() and SetFrontProcess().", "+\t * ", "+\t * NOTE: It is not actually necessary to use the process", "+\t * serial number returned by GetCurrentProcess() in the", "+\t * call to SetFrontProcess() (ie. kCurrentProcess can be", "+\t * used) but both functions must be called in order for", "+\t * windows to come to the front.", "+\t */", "+\tint [] psn = new int [2];", "+\tif (OS.GetCurrentProcess (psn) == OS.noErr) {", "+\t\tint pid = OS.getpid ();", "+\t\tint /*long*/ ptr = getAppName().UTF8String();", "+\t\tif (ptr != 0) OS.CPSSetProcessName (psn, ptr);", "+\t\tOS.TransformProcessType (psn, OS.kProcessTransformToForegroundApplication);", "+\t\tOS.SetFrontProcess (psn);", "+\t\tptr = OS.getenv (ascii (\"APP_ICON_\" + pid));", "+\t\tif (ptr != 0) {", "+\t\t\tNSString path = NSString.stringWithUTF8String (ptr);", "+\t\t\tNSImage image = (NSImage) new NSImage().alloc();", "+\t\t\timage = image.initByReferencingFile(path);", "+\t\t\tdockImage = image;", "+\t\t\tapplication.setApplicationIconImage(image);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bf507019d47690776909d62fcdae04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "a0b17ddcd82034f148c4a13380770610bd7a9c5a", "commitAfterChange": "95e3cb8908d279494afb41e5472d5319ecdee12e", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight, boolean force)", "signatureAfterChange": " boolean updateTabHeight(int oldHeight, boolean force)", "diff": ["-\tif (!simple) {", "-\t\tif (onBottom) {", "-\t\t\tcurve = bezier(0, tabHeight + 2,", "-\t\t\t               CURVE_LEFT, tabHeight + 2,", "-\t\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "-\t\t\t               CURVE_WIDTH, 1,", "-\t\t\t               CURVE_WIDTH);", "-\t\t\t// workaround to get rid of blip at end of bezier", "-\t\t\tint index = -1;", "-\t\t\tfor (int i = 0; i < curve.length/2; i++) {", "-\t\t\t\tif (curve[2*i+1] > tabHeight) {", "-\t\t\t\t\tindex = i;", "-\t\t\t\t} else {", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\tif (onBottom) {", "+\t\tcurve = bezier(0, tabHeight + 2,", "+\t\t               CURVE_LEFT, tabHeight + 2,", "+\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "+\t\t               CURVE_WIDTH, 1,", "+\t\t               CURVE_WIDTH);", "+\t\t// workaround to get rid of blip at end of bezier", "+\t\tint index = -1;", "+\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\tif (curve[2*i+1] > tabHeight) {", "+\t\t\t\tindex = i;", "+\t\t\t} else {", "+\t\t\t\tbreak;", "-\t\t\tif (index > 0) {", "-\t\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "-\t\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "-\t\t\t\tcurve = newCurve;", "-\t\t\t}\t", "-\t\t} else {", "-\t\t\tcurve = bezier(0, 0,", "-\t\t\t               CURVE_LEFT, 0, ", "-\t\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "-\t\t\t               CURVE_WIDTH, tabHeight + 1,", "-\t\t\t               CURVE_WIDTH);", "+\t\tif (index > 0) {", "+\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "+\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "+\t\t\tcurve = newCurve;", "+\t\t}\t", "+\t} else {", "+\t\tcurve = bezier(0, 0,", "+\t\t               CURVE_LEFT, 0, ", "+\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "+\t\t               CURVE_WIDTH, tabHeight + 1,", "+\t\t               CURVE_WIDTH);"]}], "num": 50504}