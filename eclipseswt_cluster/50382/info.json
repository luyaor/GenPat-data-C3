{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "174a9eaff756b8e87a012b5439d1aee2", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96cc7d72cd0477f09fc3477dca9d5fb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  nsIVariant convertToJS (Object value, nsIComponentManager componentManager)", "signatureAfterChange": "  nsIVariant convertToJS (Object value, nsIComponentManager componentManager)", "diff": ["+\tif (value == null) {", "+\t\trc = variant.SetAsVoid ();", "+\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\treturn variant;", "+\t}", "-\t\t\t\tnsIVariant currentVariant = convertToJS (currentObject, componentManager);", "-\t\t\t\tC.memmove (arrayPtr + C.PTR_SIZEOF * i, new int /*long*/[] {currentVariant.getAddress ()}, C.PTR_SIZEOF);", "+\t\t\t\ttry {", "+\t\t\t\t\tnsIVariant currentVariant = convertToJS (currentObject, componentManager);", "+\t\t\t\t\tC.memmove (arrayPtr + C.PTR_SIZEOF * i, new int /*long*/[] {currentVariant.getAddress ()}, C.PTR_SIZEOF);", "+\t\t\t\t} catch (SWTException e) {", "+\t\t\t\t\t/* invalid return value type */", "+\t\t\t\t\tC.free (arrayPtr);", "+\t\t\t\t\tvariant.Release ();", "+\t\t\t\t\t/* release the variants that had previously been added to the array */", "+\t\t\t\t\tfor (int j = 0; j < i; j++) {", "+\t\t\t\t\t\tint /*long*/[] ptr = new int /*long*/[1];", "+\t\t\t\t\t\tC.memmove (ptr, arrayPtr + C.PTR_SIZEOF * j, C.PTR_SIZEOF);", "+\t\t\t\t\t\tnew nsISupports (ptr[0]).Release ();", "+\t\t\t\t\t}", "+\t\t\t\t\tthrow e;", "+\t\t\t\t}", "-\trc = variant.SetAsVoid();", "-\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\treturn variant;", "+", "+\tvariant.Release ();", "+\tSWT.error (SWT.ERROR_INVALID_RETURNVALUE);", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18870efa571147cca8ca392d977ae9a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  Object convertToJava (nsIVariant variant, short type)", "signatureAfterChange": "  Object convertToJava (nsIVariant variant, short type)", "diff": ["-\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant, currentType[0]);", "-\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant, currentType[0]);", "+\t\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t\t\t/* invalid argument value type */", "+\t\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase nsIDataType.VTYPE_BOOL:", "+\t\t\t\t\t\tarrayReturn = new Object[count[0]];", "+\t\t\t\t\t\tfor (int i = 0; i < count[0]; i++) {", "+\t\t\t\t\t\t\tint[] boolValue = new int[1]; /* PRUInt32 */", "+\t\t\t\t\t\t\tC.memmove (boolValue, ptr[0] + i * 4, 4);", "+\t\t\t\t\t\t\tarrayReturn[i] = new Boolean (boolValue[0] != 0);", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);"]}], "num": 50382}