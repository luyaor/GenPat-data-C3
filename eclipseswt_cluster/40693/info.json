{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b19507a3f5b58b3ca29a8cc0ef93c718", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5073e2f3beca0986aa211f1384d10612", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.CHECK) != 0 && wParam == OS.VK_SPACE) {", "-\t\tint index = OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED);", "-\t\tif (index != -1) {", "-\t\t\tTableItem item = _getItem (index);", "-\t\t\titem.setChecked (!item.getChecked (), true);", "-\t\t\tif (!OS.IsWinCE) {", "-\t\t\t\tOS.NotifyWinEvent (OS.EVENT_OBJECT_FOCUS, handle, OS.OBJID_CLIENT, index + 1);", "-\t\t\t}", "-\t\t}", "+\tswitch (wParam) {", "+\t\tcase OS.VK_SPACE:", "+\t\t\t/*", "+\t\t\t* Ensure that the window proc does not process VK_SPACE", "+\t\t\t* so that it can be handled in WM_CHAR.  This allows the", "+\t\t\t* application to cancel an operation that is normally", "+\t\t\t* performed in WM_KEYDOWN from WM_CHAR.", "+\t\t\t*/", "+\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33312e075aeb26808408843dd117ffeb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\t\tcase OS.VK_SPACE:", "-\t\t\tint index = OS.SendMessage (handle, OS.TB_GETHOTITEM, 0, 0);", "-\t\t\tif (index != -1) {", "-\t\t\t\tTBBUTTON lpButton = new TBBUTTON ();", "-\t\t\t\tint code = OS.SendMessage (handle, OS.TB_GETBUTTON, index, lpButton);", "-\t\t\t\tif (code != 0) {", "-\t\t\t\t\titems [lpButton.idCommand].click (false);", "-\t\t\t\t\treturn LRESULT.ZERO;", "-\t\t\t\t}", "-\t\t\t}", "+\t\tcase OS.VK_SPACE:\t", "+\t\t\t/*", "+\t\t\t* Ensure that the window proc does not process VK_SPACE", "+\t\t\t* so that it can be handled in WM_CHAR.  This allows the", "+\t\t\t* application the opportunity to cancel the operation.", "+\t\t\t*/", "+\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ae50ffe2152e2570df569b28c4946a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\tif (focusIndex == -1) return result;", "+\tif (OS.COMCTL32_MAJOR >= 6) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.text = ids [focusIndex];", "-\t\t\t\tsendEvent (SWT.Selection, event);", "-\t\t\t\tbreak;", "-\t\t\t\tboolean next = OS.GetKeyState (OS.VK_SHIFT) >= 0;", "-\t\t\t\tif (next) {", "-\t\t\t\t\tif (focusIndex < offsets.length - 1) {", "-\t\t\t\t\t\tfocusIndex++;", "-\t\t\t\t\t\tredraw ();", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (focusIndex > 0) {", "-\t\t\t\t\t\tfocusIndex--;", "-\t\t\t\t\t\tredraw ();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\t\t\t/*", "+\t\t\t\t* Ensure that the window proc does not process VK_SPACE,", "+\t\t\t\t* VK_RETURN or VK_TAB so that it can be handled in WM_CHAR.", "+\t\t\t\t* This allows the application to cancel an operation that", "+\t\t\t\t* is normally performed in WM_KEYDOWN from WM_CHAR.", "+\t\t\t\t*/", "+\t\t\t\treturn LRESULT.ZERO;"]}], "num": 40693}