{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ded38884c9ca1d7730844d340d753fb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811138bfaffa44c139f47e4dca8e9437", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "d5ba1ee9b3215ff421971a8a01d921cb236b8521", "commitAfterChange": "785119c366dfc73b5ee859a6c109dd355f874175", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void show(int effect, int x, int y)", "signatureAfterChange": "  void show(int effect, int x, int y)", "diff": ["-\t\tOS.SendMessage (handle, OS.TVM_SETINSERTMARK, (before) ? 0 : 1, hItem);", "-\t\tclearInsert = true;", "+\t\t/*", "+\t\t* Bug in Windows.  When TVM_SETINSERTMARK is used to set", "+\t\t* an insert mark for a tree and an item is expanded or", "+\t\t* collapsed near the insert mark, the tree does not redraw", "+\t\t* the insert mark properly.  The fix is to hide and show", "+\t\t* the insert mark whenever an item is expanded or collapsed.", "+\t\t* Since the insert mark can not be queried from the tree,", "+\t\t* use the Tree API rather than calling the OS directly.", "+\t\t*/", "+\t\tTreeItem insertItem = (TreeItem)tree.getDisplay().findWidget(tree.handle, hItem);", "+\t\tif (insertItem != null) {", "+\t\t\ttree.setInsertMark(insertItem, before);", "+\t\t\tclearInsert = true;", "+\t\t}", "-\t\tif (clearInsert) OS.SendMessage (handle, OS.TVM_SETINSERTMARK, 0, 0);", "+\t\tif (clearInsert) tree.setInsertMark(null, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfc5822f674b849c8340cf47f6258cc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet164.java", "commitBeforeChange": "3862c6b3b8f0c2a32415ba364d344d184c244114", "commitAfterChange": "8515d73625205434c3e8ac5f78baa0d4112fffff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main(String[] args)", "signatureAfterChange": "  public static void main (String[] args)", "diff": ["-public static void main(String[] args) {", "-\tDisplay display = new Display();", "-\tShell shell = new Shell(display);", "-\tshell.setBounds(10, 10, 200, 200);", "+public static void main (String[] args) {", "+\tDisplay display = new Display( );", "+\tShell shell = new Shell (display);", "+\tshell.setLayout (new GridLayout ());", "+\tImage image = new Image (display, Snippet164.class.getResourceAsStream (\"eclipse.png\"));", "-\tbutton1.setText(\"&Typical button\");", "-\tbutton1.setBounds(10,10,180,30);", "+\tbutton1.setText (\"&Typical button\");", "+\t", "-\tbutton2.setText(\"&Overidden button\");", "-\tbutton2.setBounds(10,50,180,30);", "-\tbutton2.getAccessible().addAccessibleListener(new AccessibleAdapter() {", "-\t\tpublic void getName(AccessibleEvent e) {", "-\t\t\te.result = \"Speak this instead of the button text\";", "+\tbutton2.setImage (image);", "+\tbutton2.getAccessible ().addAccessibleListener (new AccessibleAdapter() {", "+\t\tpublic void getName (AccessibleEvent e) {", "+\t\t\te.result = \"Eclipse logo\";", "-\tshell.open();", "-\twhile (!shell.isDisposed()) {", "-\t\tif (!display.readAndDispatch()) display.sleep();", "+\tshell.pack ();", "+\tshell.open ();", "+\twhile (!shell.isDisposed ()) {", "+\t\tif (!display.readAndDispatch ()) display.sleep ();", "-\tdisplay.dispose();", "+\timage.dispose ();", "+\tdisplay.dispose ();"]}], "num": 48645}