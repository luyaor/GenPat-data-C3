{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cec856b627fb5a3aea2fa9ad5191ce7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cde388560b0ab48cf2f81f6dd0ddbc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "baf95176a8708225157483f4b3724dbe808b4b2d", "commitAfterChange": "08b35427b630b058d33816f10064b6c3de68a1f4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["+}", "+public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint) {", "-\t\tint invalRgn = OS.NewRgn();", "-\t\tOS.DiffRgn(srcRgn, data.visibleRgn, invalRgn);", "-\t\tOS.OffsetRgn(invalRgn, (short)deltaX, (short)deltaY);", "-\t\tOS.DiffRgn(srcRgn, destRgn, srcRgn);", "-\t\tOS.UnionRgn(srcRgn, invalRgn, invalRgn);", "-\t\tOS.SectRgn(data.visibleRgn, invalRgn, invalRgn);", "-\t\tOS.InvalWindowRgn(window, invalRgn);", "-\t\tOS.DisposeRgn(invalRgn);", "+\t\tif (paint) {", "+\t\t\tint invalRgn = OS.NewRgn();", "+\t\t\tOS.DiffRgn(srcRgn, data.visibleRgn, invalRgn);", "+\t\t\tOS.OffsetRgn(invalRgn, (short)deltaX, (short)deltaY);", "+\t\t\tOS.DiffRgn(srcRgn, destRgn, srcRgn);", "+\t\t\tOS.UnionRgn(srcRgn, invalRgn, invalRgn);", "+\t\t\tOS.SectRgn(data.visibleRgn, invalRgn, invalRgn);", "+\t\t\tOS.InvalWindowRgn(window, invalRgn);", "+\t\t\tOS.DisposeRgn(invalRgn);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "720c22ad9e602549f972eebc54d5b7dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "063b74352e22e9e02c20953e2009de687202b5c2", "commitAfterChange": "3f5a4e4f5d672d8a0d0ada50a923d1d07dab435e", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void hookDOMListeners (nsIDOMEventTarget target)", "signatureAfterChange": "  void hookDOMListeners (nsIDOMEventTarget target, boolean isTop)", "diff": ["-void hookDOMListeners (nsIDOMEventTarget target) {", "+void hookDOMListeners (nsIDOMEventTarget target, boolean isTop) {", "-\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOVER);", "-\trc = target.AddEventListener (string.getAddress (), domEventListener.getAddress (), false);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tstring.dispose ();", "-\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOUT);", "-\trc = target.AddEventListener (string.getAddress (), domEventListener.getAddress (), false);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tstring.dispose ();", "+", "+\t/*", "+\t* Only hook mouseover and mouseout if the target is a top-level frame, so that mouse moves", "+\t* between frames will not generate events.", "+\t*/", "+\tif (isTop) {", "+\t\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOVER);", "+\t\trc = target.AddEventListener (string.getAddress (), domEventListener.getAddress (), false);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tstring.dispose ();", "+\t\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOUT);", "+\t\trc = target.AddEventListener (string.getAddress (), domEventListener.getAddress (), false);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tstring.dispose ();", "+\t}"]}], "num": 62322}