{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4567aaee7c1d00772b0a9137f9f46d0c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c238e31a7d70c857784dd69400f182b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4cda8e340a0be534e7bdcf61e2c92c91dd66a637", "commitAfterChange": "07959d909e8636c9d0fc8d0533ebc814870527be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\t/*", "-\t\t\t\t* Feature in Windows.  When the tree has the style", "-\t\t\t\t* TVS_FULLROWSELECT, the background color for the", "-\t\t\t\t* entire row is filled when an item is painted,", "-\t\t\t\t* drawing on top of any custom drawing.  The fix", "-\t\t\t\t* is to emulate TVS_FULLROWSELECT.", "-\t\t\t\t*/", "-\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "-\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "+\t\t\t\tif (!explorerTheme) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  When the tree has the style", "+\t\t\t\t\t* TVS_FULLROWSELECT, the background color for the", "+\t\t\t\t\t* entire row is filled when an item is painted,", "+\t\t\t\t\t* drawing on top of any custom drawing.  The fix", "+\t\t\t\t\t* is to emulate TVS_FULLROWSELECT.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0 && count == 0) {", "+\t\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), cellRect);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), cellRect);", "+\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, false, false, true, hDC);", "+\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), textRect);", "-\t\t\t\t} else {", "-\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), textRect);", "+\t\t\t\tif (explorerTheme) {", "+\t\t\t\t\tnmcd.uItemState |= OS.CDIS_DISABLED;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  On Vista only, when the text", "+\t\t\t\t\t* color is unchanged and an item is asked to draw", "+\t\t\t\t\t* disabled, it uses the disabled color.  The fix is", "+\t\t\t\t\t* to modify the color slightly by adding one.", "+\t\t\t\t\t*/", "+\t\t\t\t\tint newColor = clrText == -1 ? getForegroundPixel () : clrText;", "+\t\t\t\t\tnmcd.clrText = nmcd.clrText == newColor ? newColor + 1 : newColor;", "+\t\t\t\t\tOS.MoveMemory (lParam, nmcd, NMTVCUSTOMDRAW.sizeof);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (explorerTheme) {", "+\t\t\t\tnmcd.uItemState &= ~OS.CDIS_HOT;", "+\t\t\t\tOS.MoveMemory (lParam, nmcd, NMTVCUSTOMDRAW.sizeof);", "+\t\t\tif (explorerTheme) {", "+\t\t\t\titemRect.left -= EXPLORER_EXTRA;", "+\t\t\t\titemRect.right += EXPLORER_EXTRA;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af07208e820b92c4f0f9db18e2353ad1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3172b30bf1c6ff0d5e001b36bd7fac99461f15aa", "commitAfterChange": "5fbc52b7c83b0484a144116d8aa460a44c562aed", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t\t\tif (event.doit) {", "-\t\t\t\tif ((event.detail & SWT.SELECTED) != 0) {", "-\t\t\t\t\tif (!selected) {", "-\t\t\t\t\t\ttextColor = clrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "-\t\t\t\t\t}", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in Windows.  When the tree has the style", "-\t\t\t\t\t* TVS_FULLROWSELECT, the background color for the", "-\t\t\t\t\t* entire row is filled when an item is painted,", "-\t\t\t\t\t* drawing on top of any custom drawing.  The fix", "-\t\t\t\t\t* is to emulate TVS_FULLROWSELECT.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\t\tdrawBackground (hDC, textRect, OS.GetBkColor (hDC));", "-\t\t\t\t\t}", "+\t\t\tif ((event.detail & SWT.SELECTED) != 0) {", "+\t\t\t\tif (!selected) {", "+\t\t\t\t\ttextColor = clrText = OS.GetSysColor (OS.COLOR_HIGHLIGHTTEXT);", "+\t\t\t\t}", "+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  When the tree has the style", "+\t\t\t\t* TVS_FULLROWSELECT, the background color for the", "+\t\t\t\t* entire row is filled when an item is painted,", "+\t\t\t\t* drawing on top of any custom drawing.  The fix", "+\t\t\t\t* is to emulate TVS_FULLROWSELECT.", "+\t\t\t\t*/", "+\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), rect);", "-\t\t\t\t\tif (selected) {", "-\t\t\t\t\t\ttextColor = clrText = newTextClr;", "-\t\t\t\t\t\tignoreDrawSelected = true;", "-\t\t\t\t\t}", "+\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, false, false, true, hDC);", "+\t\t\t\t\tfillBackground (hDC, OS.GetBkColor (hDC), textRect);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (selected) {", "+\t\t\t\t\ttextColor = clrText = newTextClr;", "+\t\t\t\t\tignoreDrawSelected = true;"]}], "num": 9545}