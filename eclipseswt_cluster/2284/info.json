{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52b24e7b7e5919824b3f08534b41ae51", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25aa08275f8b6f017ab5775bd4986e1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "c926aa683b725b279c6c7318e19d80650c45580f", "commitAfterChange": "35e1ba894deda696191ae79f0f2eca2ead117007", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void _setImage (Image image)", "signatureAfterChange": "  void _setImage (Image image)", "diff": ["+\t\t\t", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  The button control mirrors its image when the", "+\t\t\t* flag WS_EX_LAYOUTRTL is set. This behaviour is not desirable in SWT.", "+\t\t\t* The fix is to set a mirrored version of real image in the button.", "+\t\t\t*/", "+\t\t\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (4, 10)) {", "+\t\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\t\t\tint dstHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "+\t\t\t\t\tint oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "+\t\t\t\t\tOS.SetLayout (dstHdc, OS.LAYOUT_RTL);", "+\t\t\t\t\tif (fImageType == OS.IMAGE_BITMAP) {", "+\t\t\t\t\t\tint srcHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\t\tint oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\t\tOS.SetLayout (dstHdc, 0);", "+\t\t\t\t\t\tOS.BitBlt (dstHdc, 0, 0, rect.width, rect.height, srcHdc, 0, 0, OS.SRCCOPY);", "+\t\t\t\t\t\tOS.SelectObject (srcHdc, oldSrcBitmap);", "+\t\t\t\t\t\tOS.DeleteDC (srcHdc);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint newBrush = OS.CreateSolidBrush (getBackgroundPixel ());", "+\t\t\t\t\t\tint oldBrush = OS.SelectObject (dstHdc, newBrush);", "+\t\t\t\t\t\tOS.PatBlt (dstHdc, 0, 0, rect.width, rect.height, OS.PATCOPY);", "+\t\t\t\t\t\tOS.DrawIconEx (dstHdc, 0, 0, hImage, 0, 0, 0, 0, OS.DI_NORMAL);", "+\t\t\t\t\t\tOS.SelectObject (dstHdc, oldBrush);", "+\t\t\t\t\t\tOS.DeleteObject (newBrush);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.SelectObject (dstHdc, oldBitmap);", "+\t\t\t\t\tOS.DeleteDC (dstHdc);", "+\t\t\t\t\tOS.ReleaseDC (handle, hDC);", "+\t\t\t\t\tif (image2 != null) image2.dispose ();", "+\t\t\t\t\timage2 = Image.win32_new (display, SWT.BITMAP, hBitmap);", "+\t\t\t\t\timageBits = OS.BS_BITMAP;", "+\t\t\t\t\tfImageType = OS.IMAGE_BITMAP;", "+\t\t\t\t\thImage = hBitmap;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb98d329262a3bb222d8ac90e8f42be1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "735e9a9bdbb6a114195dba9738a0d9f8f6b1edcf", "commitAfterChange": "f098e8b179a28a23bfb0b63407491b2e68e55ba9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "diff": ["+\tif (length == 0) return;", "+\tint rop2 = 0;", "+\tif (OS.IsWinCE) {", "+\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);", "+\t\tOS.SetROP2(handle, rop2);", "+\t} else {", "+\t\trop2 = OS.GetROP2(handle);", "+\t}", "-\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\tif (rop2 != OS.R2_XORPEN) {", "+\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\t} else {", "+\t\tint foreground = OS.GetTextColor(handle);", "+\t\tif (isTransparent) {", "+\t\t\tSIZE size = new SIZE();", "+\t\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);", "+\t\t\tint width = size.cx, height = size.cy;", "+\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);", "+\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tint memDC = OS.CreateCompatibleDC(handle);", "+\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);", "+\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);", "+\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);", "+\t\t\tOS.SetTextColor(memDC, foreground);", "+\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\t\tOS.ExtTextOutW(memDC, 0, 0, 0, null, buffer, length, null);", "+\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);", "+\t\t\tOS.SelectObject(memDC, hOldBitmap);", "+\t\t\tOS.DeleteDC(memDC);", "+\t\t\tOS.DeleteObject(hBitmap);", "+\t\t} else {", "+\t\t\tint background = OS.GetBkColor(handle);", "+\t\t\tOS.SetTextColor(handle, foreground ^ background);", "+\t\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\t\t\tOS.SetTextColor(handle, foreground);", "+\t\t}", "+\t}"]}], "num": 2284}