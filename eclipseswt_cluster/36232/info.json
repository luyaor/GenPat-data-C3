{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2cdc785727778b733cf71fb4deab958", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a0aec29e427bb9a030b84752899427", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "4b62dc0006f2abe917957a9ee2d5b1ef341cb9f5", "commitAfterChange": "46582c910be397c961aaaee8545cb7afc157368f", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void setWindowVisible (boolean visible, boolean key)", "signatureAfterChange": "  void setWindowVisible (boolean visible, boolean key)", "diff": ["-\t\tif (display.loopCounter == 0) {", "-\t\t\tdisplay.pool.release();", "-\t\t\tdisplay.pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\t\tif (display.sendEventCount == 0 && display.loopCount == display.poolCount - 1) {", "+\t\t\tdisplay.removePool ();", "+\t\t\tdisplay.addPool ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149c3873100ed93b12b657a0c2c7823b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ac716cc2761c06ce895795d52c93cc9326d54fa3", "commitAfterChange": "a69e6c83c8a519463fb81c79bec48584d8e6673d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public Rectangle getBounds (int start, int end)", "signatureAfterChange": " public Rectangle getBounds (int start, int end)", "diff": ["-\tint lineIndex = 0;", "-\t\tif (run.lineBreak) lineIndex++;", "+\t\tint lineIndex = 0;", "+\t\twhile (lineIndex < runs.length && lineOffset[lineIndex + 1] <= run.start) {", "+\t\t\tlineIndex++;", "+\t\t}", "-\t\ttop = Math.min(top, lineY[run.lineBreak ? lineIndex - 1 : lineIndex]);", "-\t\tbottom = Math.max(bottom, lineY[run.lineBreak ? lineIndex : lineIndex + 1] - lineSpacing);", "+\t\ttop = Math.min(top, lineY[lineIndex]);", "+\t\tbottom = Math.max(bottom, lineY[lineIndex + 1] - lineSpacing);"]}], "num": 36232}