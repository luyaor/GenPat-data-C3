{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df8d2a931c5dd9bc9cb5880a47882bb5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d34c013fc9b1dd756e426a5b4ba01016", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "960b778cd29f39602256437735e3a4d46add2d85", "commitAfterChange": "aac1e895cec971aa32d4b9d48dfb432a9a753155", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["-\t//TODO ", "-//\tControl oldControl = this.control, newControl = control;", "-//\tthis.control = control;", "-//\tint parentHandle = parent.parentingHandle ();", "-//\tint parentChildren = OS.Panel_Children (parentHandle);", "-//\tif (oldControl != null) {", "-//\t\tint topHandle = oldControl.topHandle ();", "-//\t\tOS.UIElementCollection_Remove (parentChildren, topHandle);", "-//\t}", "-//\tOS.GCHandle_Free (parentChildren);", "-//\t", "-//\tparent.setControl (this, newControl);", "-\tthis.control = control;", "+\tif (control == null) {", "+\t\tint property = OS.Control_BackgroundProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tControl oldControl = this.control;", "+\t\tif (oldControl != null && !oldControl.isDisposed ()) OS.Panel_SetZIndex (oldControl.handle, 0);", "+\t} else {", "+\t\tint brush = OS.Brushes_Transparent ();", "+\t\tOS.Control_Background (handle, brush);", "+\t\tOS.GCHandle_Free (brush);", "+\t\tint pt = OS.gcnew_Point (0, 0);", "+\t\tif (pt == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tint loc = OS.UIElement_TranslatePoint (handle, pt, parent.parentingHandle);", "+\t\tOS.GCHandle_Free (pt);", "+\t\tOS.Canvas_SetLeft (control.handle, OS.Point_X (loc));", "+\t\tOS.Canvas_SetTop (control.handle, OS.Point_Y (loc));", "+\t\tOS.Panel_SetZIndex (control.handle, parent.childCount);", "+\t\tOS.GCHandle_Free (loc);", "+\t}", "+\tthis.control = control;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a251f4ab60ed408dd941fcdb4ba4cc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a62cb4f3b5a52f32bd2e8a19c653c47c8c62cdfd", "commitAfterChange": "12917518bee3a227f438e29fb003e026839ee122", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 275, "signatureBeforeChange": "  LRESULT WM_WINDOWPOSCHANGING (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_WINDOWPOSCHANGING (int wParam, int lParam)", "diff": ["-\t\t\t\tint /*long*/ hwndParent = parent == null ? 0 : parent.handle;", "-\t\t\t\tOS.MapWindowPoints (0, hwndParent, rect, 2);", "-\t\t\t\tOS.InvalidateRect (hwndParent, rect, true);", "+\t\t\t\tint width = rect.right - rect.left;", "+\t\t\t\tint height = rect.bottom - rect.top;", "+\t\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\t\tint /*long*/ hwndParent = parent == null ? 0 : parent.handle;", "+\t\t\t\t\tOS.MapWindowPoints (0, hwndParent, rect, 2);", "+\t\t\t\t\tif (OS.IsWinCE) {", "+\t\t\t\t\t\tOS.InvalidateRect (hwndParent, rect, true);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint /*long*/ rgn1 = OS.CreateRectRgn (rect.left, rect.top, rect.right, rect.bottom);", "+\t\t\t\t\t\tint /*long*/ rgn2 = OS.CreateRectRgn (lpwp.x, lpwp.y, lpwp.x + lpwp.cx, lpwp.y + lpwp.cy);", "+\t\t\t\t\t\tOS.CombineRgn (rgn1, rgn1, rgn2, OS.RGN_DIFF);", "+\t\t\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\t\t\t\t\tOS.RedrawWindow (hwndParent, null, rgn1, flags);", "+\t\t\t\t\t\tOS.DeleteObject (rgn1);", "+\t\t\t\t\t\tOS.DeleteObject (rgn2);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1becad4b84387c8c9db19863d1d0a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 59, "signatureBeforeChange": " boolean hasFirstColumnImage()", "signatureAfterChange": " void onArrowRight (int stateMask)", "diff": ["- */", "-boolean hasFirstColumnImage() {", "-\treturn firstColumnImage;", "+}", "+void onArrowRight (int stateMask) {", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint maximum = hBar.getMaximum ();", "+\tint clientWidth = getClientArea ().width;", "+\tif ((horizontalOffset + getClientArea ().width) == maximum) return;", "+\tif (maximum <= clientWidth) return;", "+\tint newSelection = Math.min (horizontalOffset + SIZE_HORIZONTALSCROLL, maximum - clientWidth);", "+\tRectangle clientArea = getClientArea ();", "+\tupdate ();", "+\tGC gc = new GC (this);", "+\tgc.copyArea (", "+\t\t0, 0,", "+\t\tclientArea.width, clientArea.height,", "+\t\thorizontalOffset - newSelection, 0);", "+\tgc.dispose ();", "+\tif (getHeaderVisible ()) {", "+\t\tclientArea = header.getClientArea ();", "+\t\theader.update ();", "+\t\tgc = new GC (header);", "+\t\tgc.copyArea (", "+\t\t\t0, 0,", "+\t\t\tclientArea.width, clientArea.height,", "+\t\t\thorizontalOffset - newSelection, 0);", "+\t\tgc.dispose();", "+\t}", "+\thorizontalOffset = newSelection;", "+\thBar.setSelection (horizontalOffset);", "+}"]}], "num": 32821}