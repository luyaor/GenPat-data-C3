{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8742dfa6811ce5701c347450e6422a8b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e617df24114edf7c9601a23b191ac425", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3694fb95e12aad95ee485aae585ca4f5333dcb41", "commitAfterChange": "7f898a1a8a77a42ff2b31c839931eae5fb31adfe", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  TouchSource findTouchSource(NSTouch touch)", "signatureAfterChange": "  TouchSource findTouchSource(NSTouch touch)", "diff": ["-\tif (touchSourceMap == null) {", "-\t\ttouchSourceMap = new HashMap();", "-\t}", "+\tif (touchSources == null) touchSources = new TouchSource [4];", "+\tint index = 0;", "+\tint length = touchSources.length;", "-\tLong touchDeviceObj = new Long(touchDevice.id);", "-\tTouchSource returnVal = (TouchSource) touchSourceMap.get(touchDeviceObj);", "+\tTouchSource source = null;", "+", "+\twhile (index < length) {", "+\t\tif (touchSources[index] != null && touchSources[index].handle == touchDevice.id) {", "+\t\t\tsource = touchSources[index];", "+\t\t\tbreak;", "+\t\t}", "+\t\tindex++;", "+\t}", "-\tif (returnVal == null) {", "-\t\tRectangle bounds = new Rectangle(0, 0, (int)Math.ceil(touch.deviceSize().width), (int)Math.ceil(touch.deviceSize().height));", "-\t\treturnVal = new TouchSource(false, bounds);;", "-\t\ttouchSourceMap.put(touchDeviceObj, returnVal);", "+\tif (source != null) return source;", "+\t", "+\tif (index == length) {", "+\t\tTouchSource [] newList = new TouchSource [length + 4];", "+\t\tSystem.arraycopy(touchSources, 0, newList, 0, length);", "+\t\ttouchSources = newList;", "-\treturn returnVal;", "+\tRectangle bounds = new Rectangle(0, 0, (int)Math.ceil(touch.deviceSize().width), (int)Math.ceil(touch.deviceSize().height));", "+\tsource = new TouchSource(touchDevice.id, false, bounds);", "+\tSystem.out.println(\"New source \" + source);", "+\ttouchSources [index] = source;", "+\treturn source;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a1e724ff80b2c293078cd9067f98a6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3694fb95e12aad95ee485aae585ca4f5333dcb41", "commitAfterChange": "7f898a1a8a77a42ff2b31c839931eae5fb31adfe", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  TouchSource findTouchSource(int touchDevice, Monitor sourceMonitor)", "signatureAfterChange": "  TouchSource findTouchSource(int touchDevice, Monitor sourceMonitor)", "diff": ["-\tif (touchSourceMap == null) {", "-\t\ttouchSourceMap = new Hashtable();", "-\t}", "-\tLONG touchDeviceObj = new LONG(touchDevice);", "-\tTouchSource returnVal = (TouchSource) touchSourceMap.get(touchDeviceObj);", "-\t", "-\tif (returnVal == null) {", "-\t\treturnVal = new TouchSource(true, sourceMonitor.getBounds());", "-\t\ttouchSourceMap.put(touchDeviceObj, returnVal);", "+\tif (touchSources == null) touchSources = new TouchSource [4];", "+\tint index = 0;", "+\tint length = touchSources.length;", "+\tTouchSource source = null;", "+", "+\twhile (index < length) {", "+\t\tif (touchSources[index] != null && touchSources[index].handle == touchDevice) {", "+\t\t\tsource = touchSources[index];", "+\t\t\tbreak;", "+\t\t}", "+\t\tindex++;", "-\treturn returnVal;", "+\tif (source != null) return source;", "+", "+\tif (index == length) {", "+\t\tTouchSource [] newList = new TouchSource [length + 4];", "+\t\tSystem.arraycopy(touchSources, 0, newList, 0, length);", "+\t\ttouchSources = newList;", "+\t}", "+", "+\tsource = new TouchSource(touchDevice, true, sourceMonitor.getBounds());", "+\ttouchSources [index] = source;", "+\treturn source;"]}], "num": 9651}