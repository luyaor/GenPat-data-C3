{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5ac43e690fbdf0883b5741318462824", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71fc47033c7a82a99387fdd7cd9f7d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "0ba623ef4d802f244612c1c4fe21b933adc36142", "commitAfterChange": "d8b0b58e64dc2419a67c9fa6b837f07315976cf9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\tint[] tabs = {tabWidth};", "+\t\tif (styledText.tabs != null) tabs = styledText.tabs;", "-\tlayout.setTabs(new int[]{tabWidth});", "+\tlayout.setTabs(tabs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1650a89ad0d4667378c1fa243e8f403d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "156b3671e8f8498d491d682297aab9ef33479ff6", "commitAfterChange": "5b8ec97507819a2e1009af624b5cf172a5f148bf", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void setLineStyle(int lineStyle)", "signatureAfterChange": " public void setLineStyle(int lineStyle)", "diff": ["+\t\t\tbreak;", "+\t\tcase SWT.LINE_CUSTOM:", "+\t\t\tif (data.dashes == null) lineStyle = SWT.LINE_SOLID;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e61f7a86ce02f8b7918bfc9e237c20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "fec0d691465789ed5f8cc6a20256c17056f52d4b", "commitAfterChange": "9d697938dc497ce745bc08c56805f2f48704f2bf", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "  int widgetStyle ()", "signatureAfterChange": "  int widgetStyle ()", "diff": ["-\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\tbits |= OS.TVS_FULLROWSELECT;", "+\tif (EXPLORER_THEME && !OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\tbits |= OS.TVS_TRACKSELECT;", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) bits |= OS.TVS_FULLROWSELECT;", "-\t\tif (EXPLORER_THEME && !OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\tbits |= OS.TVS_TRACKSELECT;", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tbits |= OS.TVS_FULLROWSELECT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31346ddc93e26ed09023dd4432e15aa7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ba15a17bffa6c8eb89d53206146f9b8b25aa2bfb", "commitAfterChange": "530f47b45d39211d2a7b021bd35992a052f00cb4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tint type;", "-\tif ((style&SWT.NO_TRIM) == 0) type = OS.GTK_WINDOW_TOPLEVEL;", "-\t\telse type = OS.GTK_WINDOW_POPUP;", "+\tint type = (style & SWT.NO_TRIM) == 0 ? OS.GTK_WINDOW_TOPLEVEL : OS.GTK_WINDOW_POPUP;", "+\tOS.gtk_window_set_title (shellHandle, new byte [1]);", "-\tboolean modal = (style & (SWT.PRIMARY_MODAL | SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL)) != 0;", "-\tOS.gtk_window_set_modal (shellHandle, modal);\t", "+\t/*", "+\t* High level GTK helpers, like gtk_window_set_decorated, simply", "+\t* use gdk_window_set_decorations() with specific values.", "+\t* Therefore we use that function manually.", "+\t*/", "-\tint decorations = 0;", "-\t/*", "-\t * High level GTK helpers, like gtk_window_set_decorated, simply", "-\t * use gdk_window_set_decorations() with specific values.", "-\t * Therefore we use that function manually.", "-\t */", "-\tif ((style & SWT.NO_TRIM) == 0) {", "-\t\tOS.gtk_window_set_title (shellHandle, new byte [1]);", "-\t\tif ((style & SWT.MIN) != 0) decorations |= OS.GDK_DECOR_MINIMIZE;", "-\t\tif ((style & SWT.MAX) != 0) decorations |= OS.GDK_DECOR_MAXIMIZE;", "-\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_RESIZEH;", "-\t\tif ((style & SWT.BORDER) != 0) decorations |= OS.GDK_DECOR_BORDER;", "-\t\tif ((style & SWT.MENU) != 0) decorations |= OS.GDK_DECOR_MENU;", "-\t\tif ((style & SWT.TITLE) != 0) decorations |= OS.GDK_DECOR_TITLE;", "-\t\t/*", "-\t\t * Under some Window Managers (Sawmill), in order", "-\t\t * to get any border at all from the window manager it is necessary", "-\t\t * to set GDK_DECOR_BORDER.  The fix is to force these bits when any", "-\t\t * kind of border is requested.", "-\t\t */", "-\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_BORDER;", "+\tif ((style & SWT.ON_TOP) != 0) {", "+\t\tOS.gdk_window_set_override_redirect (window, true);", "+\t} else {", "+\t\tint decorations = 0;", "+\t\tif ((style & SWT.NO_TRIM) == 0) {", "+\t\t\tif ((style & SWT.MIN) != 0) decorations |= OS.GDK_DECOR_MINIMIZE;", "+\t\t\tif ((style & SWT.MAX) != 0) decorations |= OS.GDK_DECOR_MAXIMIZE;", "+\t\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_RESIZEH;", "+\t\t\tif ((style & SWT.BORDER) != 0) decorations |= OS.GDK_DECOR_BORDER;", "+\t\t\tif ((style & SWT.MENU) != 0) decorations |= OS.GDK_DECOR_MENU;", "+\t\t\tif ((style & SWT.TITLE) != 0) decorations |= OS.GDK_DECOR_TITLE;", "+\t\t\t/*", "+\t\t\t* Feature in GTK.  Under some Window Managers (Sawmill), in order", "+\t\t\t* to get any border at all from the window manager it is necessary", "+\t\t\t* to set GDK_DECOR_BORDER.  The fix is to force these bits when any", "+\t\t\t* kind of border is requested.", "+\t\t\t*/", "+\t\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_BORDER;", "+\t\t}", "-\telse OS.gdk_window_set_override_redirect(window, true);", "-\t", "+\tboolean modal = (style & (SWT.PRIMARY_MODAL | SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL)) != 0;", "+\tOS.gtk_window_set_modal (shellHandle, modal);"]}], "num": 28504}