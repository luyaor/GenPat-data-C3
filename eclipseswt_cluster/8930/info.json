{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ddd5101183e37fbe858e59042b56fce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f3744f129a8ada9d2c79a4359cf26f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "fb6985a6c3c2a2721b38a8390ce747b43f09fc90", "commitAfterChange": "65025a7edc821ab692899a998f097ee59dcca651", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void createFunction (BrowserFunction function)", "signatureAfterChange": "  public void createFunction (BrowserFunction function)", "diff": ["-\tStringBuffer buffer = new StringBuffer (\"window.\"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\" = function \"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\"() {var result = window.external.callJava(\"); //$NON-NLS-1$", "-\tbuffer.append (function.index);", "-\tbuffer.append (\",'\"); //$NON-NLS-1$", "-\tbuffer.append (function.token);", "-\tbuffer.append (\"',Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID);", "-\tbuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID.length ());", "-\tbuffer.append (\")); throw error;} return result;};\"); //$NON-NLS-1$", "-\tbuffer.append (\"for (var i = 0; i < frames.length; i++) {try { frames[i].\"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\" = window.\"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\";} catch (e) {} };\"); //$NON-NLS-1$", "+\tStringBuffer functionBuffer = new StringBuffer (function.name);", "+\tfunctionBuffer.append (\" = function \"); //$NON-NLS-1$", "+\tfunctionBuffer.append (function.name);", "+\tfunctionBuffer.append (\"() {var result = callJava(\"); //$NON-NLS-1$", "+\tfunctionBuffer.append (function.index);", "+\tfunctionBuffer.append (\",'\"); //$NON-NLS-1$", "+\tfunctionBuffer.append (function.token);", "+\tfunctionBuffer.append (\"',Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "+\tfunctionBuffer.append (ERROR_ID);", "+\tfunctionBuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "+\tfunctionBuffer.append (ERROR_ID.length ());", "+\tfunctionBuffer.append (\")); throw error;} return result;};\"); //$NON-NLS-1$", "+", "+\tStringBuffer buffer = new StringBuffer (\"if (!window.callJava) {window.callJava = function callJava(index, token, args) {\"); //$NON-NLS-1$", "+\tbuffer.append (\"return external.callJava(index,token,args);}};\"); //$NON-NLS-1$", "+\tif (function.top) {", "+\t\tbuffer.append (functionBuffer.toString ());", "+\t}", "+", "+\tbuffer.append (\"var frameIds = null;\"); //$NON-NLS-1$", "+\tif (function.frameNames != null) {", "+\t\tbuffer.append (\"frameIds = {\"); //$NON-NLS-1$", "+\t\tfor (int i = 0; i < function.frameNames.length; i++) {", "+\t\t\tbuffer.append ('\\'');", "+\t\t\tbuffer.append (function.frameNames[i]);", "+\t\t\tbuffer.append (\"':1,\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (function.frameNames.length > 0) {", "+\t\t\tbuffer.deleteCharAt(buffer.length () - 1);", "+\t\t}", "+\t\tbuffer.append (\"};\"); //$NON-NLS-1$", "+\t}", "+", "+\tbuffer.append (\"for (var i = 0; i < frames.length; i++) {try {if (!frameIds || (frames[i].name && frameIds[frames[i].name])) {\"); //$NON-NLS-1$", "+\tbuffer.append (\"if (!frames[i].callJava) {frames[i].callJava = window.callJava;} frames[i].\"); //$NON-NLS-1$", "+\tbuffer.append (functionBuffer.toString ());", "+\tbuffer.append (\"}} catch(e) {}};\"); //$NON-NLS-1$", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c58563490115a203fcb804404d35527", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "754da3e12d3ae9fd2c85bf06f23ede42c6f49859", "commitAfterChange": "828bb598ffea029296304120bac0896dc4445d73", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void addFunction (BrowserFunction function)", "signatureAfterChange": "  public void createFunction (BrowserFunction function)", "diff": ["-", "-public void addFunction (BrowserFunction function) {", "-\t/* ", "-\t * If an existing function with the same name is found then", "-\t * remove it so that it is not recreated on subsequent pages", "-\t * (the new function overwrites the old one).", "-\t */", "-\tEnumeration keys = functions.keys ();", "-\twhile (keys.hasMoreElements ()) {", "-\t\tObject key = keys.nextElement ();", "-\t\tBrowserFunction current = (BrowserFunction)functions.get (key);", "-\t\tif (current.name.equals (function.name)) {", "-\t\t\tfunctions.remove (key);", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-", "-\tfunction.index = getNextFunctionIndex ();", "-\tfunctions.put (new Integer (function.index), function);", "-", "-\tStringBuffer buffer = new StringBuffer (\"window.\"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\" = function \"); //$NON-NLS-1$", "-\tbuffer.append (function.name);", "-\tbuffer.append (\"() {var result = window.external.callJava(\"); //$NON-NLS-1$", "-\tbuffer.append (function.index);", "-\tbuffer.append (\",Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID);", "-\tbuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "-\tbuffer.append (ERROR_ID.length () + 1);", "-\tbuffer.append (\")); throw error;} return result;}\"); //$NON-NLS-1$", "-\tfunction.functionString = buffer.toString ();", "-\texecute (function.functionString);\t", "+public void createFunction (BrowserFunction function) {", "+\t/* ", "+\t * If an existing function with the same name is found then", "+\t * remove it so that it is not recreated on subsequent pages", "+\t * (the new function overwrites the old one).", "+\t */", "+\tEnumeration keys = functions.keys ();", "+\twhile (keys.hasMoreElements ()) {", "+\t\tObject key = keys.nextElement ();", "+\t\tBrowserFunction current = (BrowserFunction)functions.get (key);", "+\t\tif (current.name.equals (function.name)) {", "+\t\t\tfunctions.remove (key);", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+", "+\tfunction.index = getNextFunctionIndex ();", "+\tregisterFunction (function);", "+", "+\tStringBuffer buffer = new StringBuffer (\"window.\"); //$NON-NLS-1$", "+\tbuffer.append (function.name);", "+\tbuffer.append (\" = function \"); //$NON-NLS-1$", "+\tbuffer.append (function.name);", "+\tbuffer.append (\"() {var result = window.external.callJava(\"); //$NON-NLS-1$", "+\tbuffer.append (function.index);", "+\tbuffer.append (\",Array.prototype.slice.call(arguments)); if (typeof result == 'string' && result.indexOf('\"); //$NON-NLS-1$", "+\tbuffer.append (ERROR_ID);", "+\tbuffer.append (\"') == 0) {var error = new Error(result.substring(\"); //$NON-NLS-1$", "+\tbuffer.append (ERROR_ID.length () + 1);", "+\tbuffer.append (\")); throw error;} return result;}\"); //$NON-NLS-1$", "+\tfunction.functionString = buffer.toString ();", "+\tif (!execute (function.functionString)) {", "+\t\tderegisterFunction (function);\t", "+\t}", "+}"]}], "num": 8930}