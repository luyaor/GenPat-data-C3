{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc2b4e8409559d93293324cfc1edf079", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7179b9ccb67bad72c4f278889333e04f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 35, "signatureBeforeChange": "  TreeItem [] getItems (int parent)", "signatureAfterChange": "  TreeItem [] getItems (int parent)", "diff": ["-\tint length = OS.gtk_tree_model_iter_n_children (modelHandle, parent);", "-\tTreeItem[] result = new TreeItem [length];", "-\tif (length == 0) return result;", "-\tint i = 0;", "-\tint[] index = new int [1];", "-\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "-\tboolean valid = OS.gtk_tree_model_iter_children (modelHandle, iter, parent);", "-\twhile (valid) {", "-\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "-\t\tresult [i++] = items [index [0]];", "-\t\tvalid = OS.gtk_tree_model_iter_next (modelHandle, iter);", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t// TODO support for SWT.VIRTUAL", "+\t\treturn new TreeItem [0];", "+\t} else {", "+\t\tint length = OS.gtk_tree_model_iter_n_children (modelHandle, parent);", "+\t\tTreeItem[] result = new TreeItem [length];", "+\t\tif (length == 0) return result;", "+\t\tint i = 0;", "+\t\tint[] index = new int [1];", "+\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\tboolean valid = OS.gtk_tree_model_iter_children (modelHandle, iter, parent);", "+\t\twhile (valid) {", "+\t\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "+\t\t\tresult [i++] = items [index [0]];", "+\t\t\tvalid = OS.gtk_tree_model_iter_next (modelHandle, iter);", "+\t\t}", "+\t\tOS.g_free (iter);", "+\t\treturn result;", "-\tOS.g_free (iter);", "-\treturn result;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6110dbbb3c3294cbfa198b9f899340", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": " public String getText ()", "signatureAfterChange": " public String getText ()", "diff": ["-\tint address = OS.gtk_editable_get_chars (handle, 0, -1);", "-\tint length = OS.strlen (address);", "-\tbyte [] buffer1 = new byte [length];", "-\tOS.memmove (buffer1, address, length);", "-\tOS.g_free (address);", "-\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\treturn new String (buffer2, 0, buffer2.length);", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\t/* FIXME - MIXING LENGTH WITH SIZE! */", "+\t\tint address = OS.gtk_entry_get_text (handle);", "+\t\tint length = OS.strlen (address);", "+\t\tbyte [] buffer1 = new byte [length];", "+\t\tOS.memmove (buffer1, address, length);", "+\t\tOS.g_free (address);", "+\t\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "+\t\treturn new String (buffer2, 0, buffer2.length);", "+\t}", "+\treturn \"\";"]}], "num": 35069}