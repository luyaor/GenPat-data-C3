{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1acb5728ec96fbc0c1ce1ebe8bb52fab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd413854f6848f87664936c89709120", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "754da3e12d3ae9fd2c85bf06f23ede42c6f49859", "commitAfterChange": "828bb598ffea029296304120bac0896dc4445d73", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void removeFunction (BrowserFunction function)", "signatureAfterChange": " \tpublic Object function (Object[] arguments)", "diff": ["+\t}", "+\tpublic Object function (Object[] arguments) {", "+\t\tif (arguments[0] instanceof String) {", "+\t\t\tString string = (String)arguments[0];", "+\t\t\tif (string.startsWith (ERROR_ID)) {", "+\t\t\t\tString errorString = string.substring (ERROR_ID.length () + 1);", "+\t\t\t\tevaluateResult = new SWTException (SWT.ERROR_FAILED_EVALUATE, errorString);", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t}", "+\t\tevaluateResult = arguments[0];", "+\t\treturn null;", "+\t}", "-", "-public void removeFunction (BrowserFunction function) {", "-\texecute (getDeleteFunctionString (function.name));", "-\tfunctions.remove (new Integer (function.index));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad37c706467f555d856e15dd5741c42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "c06ac26e3cd52269c39845aa24ea287eeae8a753", "commitAfterChange": "eb67f2c6e29498837f2808cbf8605b4ae090f4cd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tTreeItem addChild (Node node, TreeItem superItem)", "signatureAfterChange": " \t \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["-\tTreeItem addChild (Node node, TreeItem superItem) {", "+\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "-\t\tNode nameAttrib = attributes.getNamedItem(\"name\");", "-\t\tif (nameAttrib == null) nameAttrib = attributes.getNamedItem(\"selector\");", "-\t\tif (nameAttrib == null) nameAttrib = attributes.getNamedItem(\"path\");", "+\t\tNode nameAttrib = getNameAttrib(attributes);", "+\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\tif (extra != null) {", "+\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "+\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "+\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "+\t\t\t\titem.setChecked(true);", "+\t\t\t}", "+\t\t}", "-\t\t\taddChild(childNodes.item(i), item);", "+\t\t\taddChild(childNodes.item(i), item, extras);"]}], "num": 37073}