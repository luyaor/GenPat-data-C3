{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5916efcae29249d8b6efe4b9179b51db", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2180a861fffdec3383f012f51fdead5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d81e473e483ae4fce965f43d47dd34220fc3e0cd", "commitAfterChange": "a38b0e1c16db17f32238a4af0323e106634ade69", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  int textCellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "diff": ["-int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data) {", "-\tint [] ptr = new int [1];", "+int textCellDataProc (int tree_column, int cell, int tree_model, int iter, int data) {", "+\tint [] ptr = new int [1];", "+\t}", "+\tptr = new int [1];", "+\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 4, ptr, -1); //font-desc", "+\tif (ptr [0] != 0) {", "+\t\tOS.g_object_set(cell, OS.font_desc, ptr[0], 0);", "+\t}", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb1f2052287396cffb38540586c404b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "ec4e255015c7a32d59dadcb5cec9343826eb683d", "commitAfterChange": "c49f89f619b0335e38f9cf353e1c8746ff3df38e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void updateText ()", "signatureAfterChange": "  void updateText ()", "diff": ["+\tint [] outHierMenu = new int [1];", "+\tOS.GetMenuItemHierarchicalMenu (parent.handle, outIndex [0], outHierMenu);", "+\tif (outHierMenu [0] != 0) OS.SetMenuTitleWithCFString (outHierMenu [0], str);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbc10e67e8d9935595a9daad70fcaf44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "eccb5765e67884d3747be267d9dd56e9daf3eca6", "commitAfterChange": "2c4873016229203477f7e44fc832b4690b65c9ec", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\t\t\tOS.SetCurrentProcessExplicitAppUserModelID (appName);", "+\t\t\tint /*long*/ [] appID = new int /*long*/ [1];", "+\t\t\tif (OS.GetCurrentProcessExplicitAppUserModelID(appID) != 0) {", "+\t\t\t\tOS.SetCurrentProcessExplicitAppUserModelID (appName);", "+\t\t\t}", "+\t\t\tif (appID[0] != 0) OS.CoTaskMemFree(appID[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf18db4a1f4a8ab6c51e457487aff5be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/Variant.java", "commitBeforeChange": "1d30538b61fc1d3338deac9690f7c0e2b3232c66", "commitAfterChange": "9dd23b48be262624780e447e519442bd1c80b477", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void dispose()", "signatureAfterChange": "\r public void dispose()", "diff": ["+\t\tif (byRefPtr == 0) return;\r", "+\t\tint[] data = new int[1];\r", "+\t\tCOM.MoveMemory(data, byRefPtr, 4);\r", "+\t\tif (data[0] != 0) COM.VariantClear(data[0]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9cd273e54c541f3c5cf7352719e654", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "3d21a131281d7c115551d5f594051d10e48c3376", "commitAfterChange": "39761fa048aefa1a878714d458857654776aec8f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Font getFont ()", "signatureAfterChange": " public Font getFont ()", "diff": ["-\treturn parent.getFont ();", "+\tint [] ptr = new int [1];", "+\tOS.gtk_tree_model_get (parent.modelHandle, handle, Table.FONT_COLUMN, ptr, -1);", "+\tif (ptr [0] == 0) return parent.getFont ();", "+\treturn Font.gtk_new (display, ptr[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b923dbc1931552ad6a4a76f1d6500ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TaskBar.java", "commitBeforeChange": "0544ffbaf949c05028b91361d0bf926a7e149162", "commitAfterChange": "233384070d65d990e7a811caac5ba3509a11381e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void setMenu (Menu menu)", "signatureAfterChange": "  void setMenu (Menu menu)", "diff": ["-\t\t\t/*ICustomDestinationList::AddUserTasks*/", "-\t\t\thr = OS.VtblCall (7, pDestList, poa);", "-\t\t\tif (hr != OS.S_OK) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tint [] count = new int [1];", "+\t\t\t/*IObjectArray::GetCount*/", "+\t\t\tOS.VtblCall (3, poa, count);", "+\t\t\tif (count [0] != 0) {", "+\t\t\t\t/*ICustomDestinationList::AddUserTasks*/", "+\t\t\t\thr = OS.VtblCall (7, pDestList, poa);", "+\t\t\t\tif (hr != OS.S_OK) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t}", "-\t\t\t\t\t\t\tString text = item.getText ();", "-\t\t\t\t\t\t\tint length = text.length ();", "-\t\t\t\t\t\t\tbuffer = new char [length + 1];", "-\t\t\t\t\t\t\ttext.getChars (0, length, buffer, 0);", "-\t\t\t\t\t\t\t/*ICustomDestinationList::AppendCategory*/ ", "-\t\t\t\t\t\t\thr = OS.VtblCall (5, pDestList, buffer, poa2); ", "-\t\t\t\t\t\t\tif (hr != OS.S_OK) error (SWT.ERROR_INVALID_ARGUMENT); ", "+\t\t\t\t\t\t\t/*IObjectArray::GetCount*/", "+\t\t\t\t\t\t\tOS.VtblCall (3, poa2, count);", "+\t\t\t\t\t\t\tif (count [0] != 0) {", "+\t\t\t\t\t\t\t\tString text = item.getText ();", "+\t\t\t\t\t\t\t\tint length = text.length ();", "+\t\t\t\t\t\t\t\tbuffer = new char [length + 1];", "+\t\t\t\t\t\t\t\ttext.getChars (0, length, buffer, 0);", "+\t\t\t\t\t\t\t\t/*ICustomDestinationList::AppendCategory*/", "+\t\t\t\t\t\t\t\thr = OS.VtblCall (5, pDestList, buffer, poa2);", "+\t\t\t\t\t\t\t\tif (hr != OS.S_OK) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe7d3d77229a1367972efc76661e1b04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c70c8714d724cd049a48ae7ac3a142bd5905a6e4", "commitAfterChange": "8fa39aab346ecfa10d358e8eb07ef97363d6b595", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tint [] docID = new int [1];", "+\tOS.NewTSMDocument ((short)1, new int [] {OS.kUnicodeDocument}, docID, 0);", "+\tif (docID [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\timHandle = docID [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acebce602abd43818b14d923244566ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "1fc9d817da3861f5e67eed2d83e4edc3fcb7625f", "commitAfterChange": "15cff3037e981fe6b0208388cfa94b5199a9c262", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r private void onFocusIn()", "signatureAfterChange": "\r private void onFocusIn(Event e)", "diff": ["-private void onFocusIn() {\r", "-\tsetInplaceFocus();\r", "+private void onFocusIn(Event e) {\r", "+\tif (objIOleInPlaceObject == null) return;\r", "+\tif (isFocusControl()) return;\r", "+\tint[] phwnd = new int[1];\r", "+\tobjIOleInPlaceObject.GetWindow(phwnd);\r", "+\tif (phwnd[0] == 0) return;\r", "+\tOS.SetFocus(phwnd[0]);\r"]}], "num": 61521}