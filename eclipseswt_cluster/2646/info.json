{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15e9f9a39338313a8677e4d4f98589db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69c556366ee303158506c713b79cf19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r public void removeAll ()", "signatureAfterChange": "\r public void removeAll ()", "diff": ["-\tignoreSelect = true;\r", "-\tint code = OS.SendMessage (handle, OS.LVM_DELETEALLITEMS, 0, 0);\r", "-\tignoreSelect = false;\r", "-\tif (code == 0) error (SWT.ERROR_ITEM_NOT_REMOVED);\r", "-\tfor (int i=0; i<count; i++) {\r", "-\t\tTableItem item = items [i];\r", "-\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "+\t\r", "+\t/*\r", "+\t* Feature in Windows.  When there are a large number\r", "+\t* of items in a table (>1000), it is much faster to\r", "+\t* delete each item with LVM_DELETEITEM rather than\r", "+\t* using LVM_DELETEALLITEMS.  The fix is to delete the\r", "+\t* items, one by one.\r", "+\t*\r", "+\t* NOTE: LVM_DELETEALLITEMS is also sent by the table\r", "+\t* when the table is destroyed.\r", "+\t*/\r", "+\tboolean redraw = drawCount == 0 && OS.IsWindowVisible (handle);\r", "+\tif (redraw) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);\r", "+\tint index = count - 1;\r", "+\twhile (index >= 0) {\r", "+\t\tignoreSelect = true;\r", "+\t\tint code = OS.SendMessage (handle, OS.LVM_DELETEITEM, index, 0);\r", "+\t\tignoreSelect = false;\r", "+\t\tif (code == 0) break;\r", "+\t\t\r", "+\t\t// BUG - disposed callback could remove an item\r", "+\t\titems [index].releaseWidget ();\r", "+\t\t--index;\r", "+\tif (redraw) {\r", "+\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);\r", "+\t\t/*\r", "+\t\t* This code is intentionally commented.  The window proc\r", "+\t\t* for the table implements WM_SETREDRAW to invalidate\r", "+\t\t* and erase the table so it is not necessary to do this\r", "+\t\t* again.\r", "+\t\t*/\r", "+//\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE;\r", "+//\t\tOS.RedrawWindow (handle, null, 0, flags);\r", "+\t}\r", "+\tif (index != -1) error (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\r", "+\t/*\r", "+\t* This code is intentionally commmented.  This is\r", "+\t* the correct code, assuming that the problem with\r", "+\t* LVM_DELETEALLITEMS did not occur.\r", "+\t*/\r", "+//\tignoreSelect = true;\r", "+//\tint code = OS.SendMessage (handle, OS.LVM_DELETEALLITEMS, 0, 0);\r", "+//\tignoreSelect = false;\r", "+//\tif (code == 0) error (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+//\tfor (int i=0; i<count; i++) {\r", "+//\t\tTableItem item = items [i];\r", "+//\t\tif (!item.isDisposed ()) item.releaseWidget ();\r", "+//\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd5ad5a2184a3e07675c9727da1670a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "d0ee4617af94e6c383376208953b6bca66c570cb", "commitAfterChange": "884a6f87dfa0fe55ce0c971f394060dc477fe2a7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "signatureAfterChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "diff": ["-\tmoved = true;", "-\t\tOS.CGPathAddArc(handle, cmt, 0, 0, 1, -(startAngle + arcAngle) * (float)Compatibility.PI / 180,  -startAngle * (float)Compatibility.PI / 180, true);", "+\t\tfloat angle = -(startAngle + arcAngle) * (float)Compatibility.PI / 180;", "+\t\tif (closed) OS.CGPathMoveToPoint(handle, cmt, (float)Math.cos(angle), (float)Math.sin(angle));", "+\t\tOS.CGPathAddArc(handle, cmt, 0, 0, 1, angle, -startAngle * (float)Compatibility.PI / 180, true);", "-\t\tOS.CGPathAddArc(handle, cmt, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180,  -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+\t\tfloat angle = -startAngle * (float)Compatibility.PI / 180;", "+\t\tif (closed) OS.CGPathMoveToPoint(handle, cmt, (float)Math.cos(angle), (float)Math.sin(angle));", "+\t\tOS.CGPathAddArc(handle, cmt, 0, 0, 1, angle, -(startAngle + arcAngle) * (float)Compatibility.PI / 180, true);", "+\tmoved = true;", "+\tclosed = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6470cef03ff77fcc35aea00950bb302", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cairo/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "884a6f87dfa0fe55ce0c971f394060dc477fe2a7", "commitAfterChange": "0385a7e20dd805fa484e633ec9d97b3b45da3796", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "signatureAfterChange": " public void addArc(float x, float y, float width, float height, float startAngle, float arcAngle)", "diff": ["-\tmove = true;", "+\tmoved = true;", "+\t\tfloat angle = -startAngle * (float)Compatibility.PI / 180;", "+\t\tif (closed) Cairo.cairo_move_to(handle, (x + width / 2f) + width / 2f * Math.cos(angle), (y + height / 2f) + height / 2f * Math.sin(angle));", "-\t\t\tCairo.cairo_arc_negative(handle, x + width / 2f, y + height / 2f, width / 2f, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\t\t\tCairo.cairo_arc_negative(handle, x + width / 2f, y + height / 2f, width / 2f, angle, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "-\t\t\tCairo.cairo_arc(handle, x + width / 2f, y + height / 2f, width / 2f, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\t\t\tCairo.cairo_arc(handle, x + width / 2f, y + height / 2f, width / 2f, angle, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\t\tfloat angle = -startAngle * (float)Compatibility.PI / 180;", "+\t\tif (closed) Cairo.cairo_move_to(handle, Math.cos(angle), Math.sin(angle));", "-\t\t\tCairo.cairo_arc_negative(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\t\t\tCairo.cairo_arc_negative(handle, 0, 0, 1, angle, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "-\t\t\tCairo.cairo_arc(handle, 0, 0, 1, -startAngle * (float)Compatibility.PI / 180, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\t\t\tCairo.cairo_arc(handle, 0, 0, 1, angle, -(startAngle + arcAngle) * (float)Compatibility.PI / 180);", "+\tclosed = false;", "+\tif (Math.abs(arcAngle) >= 360) close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95790da3a05a647229bb8ef6e3e89751", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "75613ad8acd6747941822f84720ce27c938bcb54", "commitAfterChange": "376095fdf66c1b831ad5252eeda210931946760b", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "  void showItem (int hItem)", "signatureAfterChange": "  void showItem (int hItem)", "diff": ["+\t\tboolean fixScroll = fixScroll(hItem);", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\tOS.SendMessage (handle, OS.WM_HSCROLL, OS.SB_TOP ,0);", "+\t\tOS.SendMessage (handle, OS.WM_HSCROLL, OS.SB_TOP, 0);", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\tif (scroll) OS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "+\t\tif (scroll) {", "+\t\t\tboolean fixScroll = fixScroll(hItem);", "+\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "+\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t}"]}], "num": 2646}