{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf52eee5f3d26d51293d45dc07cd8053", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a93a0da13d54554193c243ac95450a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "3654966d37611f4d9d2c9f01b9ca8fa3554b426a", "commitAfterChange": "b2b34fbc2579012e9628a9fa709c082791d6ec37", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["-\t\tprintInfo.setOrientation(data.orientation == PrinterData.LANDSCAPE ? OS.NSLandscapeOrientation : OS.NSPortraitOrientation);", "+\t\tif (data.duplex != SWT.DEFAULT) {", "+\t\t\tint /*long*/ settings = printInfo.PMPrintSettings();", "+\t\t\tint duplex = data.duplex == PrinterData.DUPLEX_SHORT_EDGE ? OS.kPMDuplexTumble", "+\t\t\t\t\t: data.duplex == PrinterData.DUPLEX_LONG_EDGE ? OS.kPMDuplexNoTumble", "+\t\t\t\t\t: OS.kPMDuplexNone;", "+\t\t\tOS.PMSetDuplex(settings, duplex);", "+\t\t}", "+\t\t/* Updating printInfo from PMPrintSettings overrides values in the printInfo dictionary. */", "+\t\tprintInfo.updateFromPMPrintSettings();", "+\t\tdict.setValue(NSNumber.numberWithInt(data.orientation == PrinterData.LANDSCAPE ? OS.NSLandscapeOrientation : OS.NSPortraitOrientation), OS.NSPrintOrientation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46dd09578f32818e4d586ed96c202f55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "dc8212ec50bdd5e996c0c424b5f98eee79b85b71", "commitAfterChange": "11160fc32a5e37bb28a8748e12eb1179612748aa", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Point getDPI()", "signatureAfterChange": " public Point getDPI()", "diff": ["-\t\t//TODO get output resolution", "+\t\tint /*long*/ pmPrintSession = printInfo.PMPrintSession();", "+\t\tint /*long*/ printer[] = new int /*long*/ [1]; ", "+\t\tint /*long*/ err = OS.PMSessionGetCurrentPrinter(pmPrintSession, printer);", "+\t\t", "+\t\tif (err == OS.noErr) {", "+\t\t\tint /*long*/ printSettings = printInfo.PMPrintSettings();", "+\t\t\tshort[] destType = new short[1];", "+\t\t\tif (OS.PMSessionGetDestinationType(pmPrintSession, printSettings, destType) == OS.noErr) {", "+\t\t\t\tif (destType[0] == OS.kPMDestinationPrinter) {", "+\t\t\t\t\tPMResolution resolution =  new PMResolution();", "+\t\t\t\t\t", "+\t\t\t\t\tif (OS.PMPrinterGetOutputResolution(printer[0], printSettings, resolution) != OS.noErr) {", "+\t\t\t\t\t\tint numberOfResolutions[] = new int[1];", "+\t\t\t\t\t\tif (OS.PMPrinterGetPrinterResolutionCount(printer[0], numberOfResolutions) == OS.noErr) {", "+\t\t\t\t\t\t\tPMResolution tempResolution = new PMResolution();", "+\t\t\t\t\t\t\ttempResolution.hRes = tempResolution.vRes = 300.0;\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tfor (int i = 1; i <= numberOfResolutions[0]; i++) {", "+\t\t\t\t\t\t\t\t// PMPrinterGetIndexedPrinterResolution indexes are 1-based.", "+\t\t\t\t\t\t\t\tif (OS.PMPrinterGetIndexedPrinterResolution(printer[0], i, tempResolution) == OS.noErr) {", "+\t\t\t\t\t\t\t\t\tif (tempResolution.vRes > resolution.vRes && tempResolution.hRes > resolution.hRes) {", "+\t\t\t\t\t\t\t\t\t\tresolution = tempResolution;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\treturn new Point((int)resolution.hRes, (int)resolution.vRes);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t"]}], "num": 40303}