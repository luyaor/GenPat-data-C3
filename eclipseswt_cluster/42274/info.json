{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35dd7cfadbc6062022cc67e24e0de046", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "872f9871906373e59a7c25d2e1b3d88c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/Variant.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " void getData(int pData)", "signatureAfterChange": " void getData(long pData)", "diff": ["-void getData(int /*long*/ pData){", "+void getData(long /*int*/ pData){", "-\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{byRefPtr}, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(pData + 8, new long /*int*/[]{byRefPtr}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{dispatchData.getAddress()}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(pData + 8, new long /*int*/[]{dispatchData.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{unknownData.getAddress()}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(pData + 8, new long /*int*/[]{unknownData.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tint /*long*/ ptr = COM.SysAllocString(data);", "-\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[] {ptr}, OS.PTR_SIZEOF);", "+\t\t\tlong /*int*/ ptr = COM.SysAllocString(data);", "+\t\t\tCOM.MoveMemory(pData + 8, new long /*int*/[] {ptr}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494819c81e2c34e349effe9f54eddeee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/Variant.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " void getData(int pData)", "signatureAfterChange": " void getData(int pData)", "diff": ["-void getData(int pData){", "+void getData(int /*long*/ pData){", "+\t\t//TODO - use VARIANT structure", "-\t\tCOM.MoveMemory(pData + 8, new int[]{byRefPtr}, 4);", "+\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{byRefPtr}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(pData + 8, new int[]{(booleanData) ? COM.VARIANT_TRUE : COM.VARIANT_FALSE}, 2);", "+\t\t\tCOM.MoveMemory(pData + 8, new short[]{(booleanData) ? COM.VARIANT_TRUE : COM.VARIANT_FALSE}, 2);", "-\t\t\tCOM.MoveMemory(pData + 8, new int[]{dispatchData.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{dispatchData.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(pData + 8, new int[]{unknownData.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[]{unknownData.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tint ptr = COM.SysAllocString(data);", "-\t\t\tCOM.MoveMemory(pData + 8, new int[] {ptr}, 4);", "+\t\t\tint /*long*/ ptr = COM.SysAllocString(data);", "+\t\t\tCOM.MoveMemory(pData + 8, new int /*long*/[] {ptr}, OS.PTR_SIZEOF);"]}], "num": 42274}