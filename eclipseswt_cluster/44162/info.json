{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "901514b74fb18defda48769352ac9438", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c527587996881eb72a8e6e0545961291", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "bb7d6277c4df65eeb3d89017add0f14480095c41", "commitAfterChange": "c83934bfcbe22fd70fac53d083a5b4f4184475b5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-\t\tmenu.cascade = this;", "-\t} else {", "-\t\tif ((parent.style & SWT.BAR) != 0) {", "-\t\t\tmenu = new Menu (parent.parent, SWT.DROP_DOWN);", "-\t\t}\t", "-\t}", "-\t", "+\t} ", "-\tNSMenuItem menuItem = (NSMenuItem) nsItem;", "-\tif (menu != null) menuItem.setSubmenu (menu.nsMenu);", "-\telse menuItem.setSubmenu (null);", "+\tNSMenu menuHandle;", "+\tif (menu == null) {", "+\t\tmenuHandle = createEmptyMenu ();", "+\t} else {", "+\t\tmenu.cascade = this;", "+\t\tmenuHandle = menu.nsMenu;", "+\t}", "+\tnsItem.setSubmenu (menuHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1eeda3510c47d941bd22269cac246f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint code = OS.eventNotHandledErr;", "-\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\tif (stringRef [0] != 0) {", "+\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\treturn OS.noErr;", "-\t\t\t}", "-\t\t}", "-\t\tif (attributeName.equals (OS.kAXRoleDescriptionAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\t\t} else { // kAXRoleDescriptionAttribute", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\treturn OS.noErr;", "+\t\t\tOS.CFRelease(stringRef [0]);", "+\t\t\tcode = OS.noErr;", "-\t\treturn accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "+\t\tcode = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, code);"]}], "num": 44162}