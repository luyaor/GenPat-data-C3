{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a52d7e8ca9a3b0ed0629843400c0ebe3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8949c18f744c4ef0bb379df6ea11290f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "30005ec31327bf492e89c83d8cc99b536cf437a0", "commitAfterChange": "078a3d8a947c3d5dcb2d1501d6463b5d2d62f25e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DragSource(Control control, int style)", "signatureAfterChange": " public DragSource(Control control, int style)", "diff": ["-\tsuper (control, style);", "+\tsuper (control, checkStyle(style));", "+\tthis.control = control;\t", "+\t", "+\t// Drag Get Data Callback\t", "+\tdragGetData = new Callback(this, \"dragGetData\", 6);", "+\tbyte[] buffer = Converter.wcsToMbcs(null, \"drag_data_get\", true);", "+\tOS.g_signal_connect(control.handle, buffer, dragGetData.getAddress(), 0);", "+", "+\t// Drag End Callback\t", "+\tdragEnd = new Callback(this, \"dragEnd\", 3);", "+\tbuffer = Converter.wcsToMbcs(null, \"drag_end\", true);", "+\tOS.g_signal_connect(control.handle, buffer, dragEnd.getAddress(), 0);", "+", "+\t// Drag Data Delete Callback\t", "+\tdragDataDelete = new Callback(this, \"dragDataDelete\", 3);", "+\tbuffer = Converter.wcsToMbcs(null, \"drag_data_delete\", true);", "+\tOS.g_signal_connect(control.handle, buffer, dragDataDelete.getAddress(), 0);", "+\t", "+\tcontrolListener = new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\tif (event.type == SWT.Dispose) {", "+\t\t\t\tif (!DragSource.this.isDisposed()){", "+\t\t\t\t\tDragSource.this.dispose();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (event.type == SWT.DragDetect){", "+\t\t\t\tif (!DragSource.this.isDisposed()){", "+\t\t\t\t\tDragSource.this.drag(event);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t", "+\t\t}", "+\t};", "+\tthis.control.addListener (SWT.Dispose, controlListener);", "+\tthis.control.addListener (SWT.DragDetect, controlListener);", "+\t", "+\tthis.addListener (SWT.Dispose, new Listener () {", "+\t\tpublic void handleEvent (Event event) {", "+\t\t\tonDispose();", "+\t\t}", "+\t});", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3424b59afc9800e66c47723240e9b5d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java", "commitBeforeChange": "907fbb4d2d14bef9475805f01333b03d86171d0a", "commitAfterChange": "fabb3930d4a5071422b6ecf11bbdfd24adcd3570", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createToolBar(final Composite parent)", "signatureAfterChange": "  void createToolBar(final Composite parent)", "diff": ["+\t", "+\tToolItem  back = new ToolItem(toolBar, SWT.PUSH);", "+\tback.setText(getResourceString(\"Back\")); //$NON-NLS-1$", "+\tback.setImage(loadImage(display, \"back.gif\")); //$NON-NLS-1$", "+\t", "+\tback.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tint index = tabs_in_order.indexOf(tab) - 1;", "+\t\t\tif (index < 0)", "+\t\t\t\tindex = tabs_in_order.size() - 1;", "+\t\t\tsetTab((GraphicsTab)tabs_in_order.get(index));", "+\t\t}", "+\t});", "+\t", "+\tToolItem  next = new ToolItem(toolBar, SWT.PUSH);", "+\tnext.setText(getResourceString(\"Next\")); //$NON-NLS-1$", "+\tnext.setImage(loadImage(display, \"next.gif\")); //$NON-NLS-1$", "+\tnext.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tint index = (tabs_in_order.indexOf(tab) + 1)%tabs_in_order.size();", "+\t\t\tsetTab((GraphicsTab)tabs_in_order.get(index));", "+\t\t}", "+\t});"]}], "num": 58062}