{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31f62ecaac2169eed60058c6f4173d1c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f90d5a70e1bfeed2de23ffdcb04b3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "0e6fd9fd38f9e1fcc9f2e95d4219009e605e7ee9", "commitAfterChange": "dd7a4ef251453dc2eb3a210e467eec1edf642a27", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 67, "signatureBeforeChange": "  LRESULT WM_SETCURSOR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SETCURSOR (int wParam, int lParam)", "diff": ["-\tint msg = lParam >> 16;", "+\tint msg = (short) (lParam >> 16);", "+\t/*", "+\t* When the shell that contains a cursor is disabled,", "+\t* WM_SETCURSOR is called with HTERROR.  Normally,", "+\t* when a control is disabled, the parent will get", "+\t* mouse and cursor events.  In the case of a disabled", "+\t* shell, there is no enabled parent.  In order to", "+\t* show the cursor when a shell is disabled, it is", "+\t* necessary to override WM_SETCURSOR when called", "+\t* with HTERROR to set the cursor but only when the", "+\t* mouse is in the client area of the shell.", "+\t*/", "+\tint hitTest = (short) (lParam & 0xFFFF);", "+\tif (hitTest == OS.HTERROR) {", "+\t\tif (!getEnabled ()) {", "+\t\t\tControl control = display.getControl (wParam);", "+\t\t\tif (control == this && cursor != null) {", "+\t\t\t\tPOINT pt = new POINT ();", "+\t\t\t\tif (OS.GetCursorPos (pt)) {", "+\t\t\t\t\tOS.ScreenToClient (handle, pt);", "+\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\tif (OS.PtInRect (rect, pt)) {", "+\t\t\t\t\t\tOS.SetCursor (cursor.handle);", "+\t\t\t\t\t\treturn LRESULT.ONE;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b5deaa1756353728dff13c603a4e65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7bb9625eaf17f2d808c7a3030e773ca59228f497", "commitAfterChange": "e429c1fa2f667ecb3fe93176354bcf3743610780", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 108, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\tif (!item.cached) {", "+\t\t\t\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t\t\t\tif (drawCount == 0 && OS.IsWindowVisible (handle)) {", "+\t\t\t\t\t\tRECT itemRect = new RECT ();", "+\t\t\t\t\t\titemRect.left = lptvdi.hItem;", "+\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, itemRect) != 0) {", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\t\t\tif (OS.IntersectRect (rect, rect, itemRect)) {", "+\t\t\t\t\t\t\t\tif (!checkData (item, false)) break;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\titem.cached = true;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 55829}