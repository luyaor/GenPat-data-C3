{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb1b8b535320868603f603af13fd8284", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924d7f09eec1a81641ebc3c642e37c99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic boolean internal_accessibilityIsIgnored(int childID)", "signatureAfterChange": " \tpublic boolean internal_accessibilityIsIgnored(int childID)", "diff": ["-\t\treturn false;", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\tevent.childID = childID;", "+\t\tevent.detail = -1;", "+\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\tlistener.getRole(event);", "+\t\t}", "+", "+\t\tboolean shouldIgnore = (event.detail == -1);", "+\t\t", "+\t\tif (shouldIgnore) {", "+\t\t\tshouldIgnore = getTitleAttribute(childID) == null && getHelpAttribute(childID) == null && getDescriptionAttribute(childID) == null;", "+\t\t}", "+\t\t", "+\t\treturn shouldIgnore;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b92fe2d282edc972fd043b23f6a73f16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 305, "methodNumberAfterChange": 306, "signatureBeforeChange": " \tint get_localizedName(int actionIndex, int pbstrLocalizedName)", "signatureAfterChange": " \tint get_localizedName(int actionIndex, int pbstrLocalizedName)", "diff": ["-\t\t// TODO: Maybe return getName here also?", "-\t\treturn COM.S_FALSE;", "+\t\tAccessibleActionEvent event = new AccessibleActionEvent(this);", "+\t\tevent.index = actionIndex;", "+\t\tevent.localized = true;", "+\t\tfor (int i = 0; i < accessibleActionListeners.size(); i++) {", "+\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(i);", "+\t\t\tlistener.getName(event);", "+\t\t}", "+\t\tif (event.result == null || event.result.length() == 0) {", "+\t\t\tsetString(pbstrLocalizedName, null);", "+\t\t\treturn COM.S_FALSE;", "+\t\t}", "+\t\tsetString(pbstrLocalizedName, event.result);", "+\t\treturn COM.S_OK;"]}], "num": 51245}