{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b99647ab6a52da52eeb131cf47766cf8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1469d46b5e955a6967c0b3ed9679c120", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "88e64e12e56dcb63257af0ec793ea95cf719e15e", "commitAfterChange": "98243fcb95591cca979715a18e7f52e3dc925eb7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tint address;", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\taddress = OS.gtk_editable_get_chars (handle, start, end + 1);", "-\t} else {", "-\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "-\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "-\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, startIter, start);", "-\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, endIter, end + 1);", "-\t\taddress = OS.gtk_text_buffer_get_text (bufferHandle, startIter, endIter, true);", "-\t}", "-\tif (address == 0) return \"\";", "-\tint length = OS.strlen (address);", "-\tbyte [] buffer = new byte [length];", "-\tOS.memmove (buffer, address, length);", "-\tOS.g_free (address);", "-\tif (length <= end) error (SWT.ERROR_INVALID_RANGE); ", "-\treturn new String (Converter.mbcsToWcs (null, buffer));", "+\tString text = getText ();", "+\tint length = text.length ();", "+\tif (length <= end) error (SWT.ERROR_INVALID_RANGE);", "+\treturn text.substring (start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1146959c591b92e7385785b0d04c1e76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "56201926f64ad6ea7f48b4affd1bb7e12a2c8db2", "commitAfterChange": "55a22ab9240db91b3cefd3f1694927c9a71b6ad8", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tint /*long*/ address;", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tstart = Math.max (0, start);", "-\t\taddress = OS.gtk_editable_get_chars (handle, start, end + 1);", "-\t} else {", "-\t\tint length = OS.gtk_text_buffer_get_char_count (bufferHandle);", "-\t\tend = Math.min (end, length - 1);", "-\t\tif (start > end) return \"\";", "-\t\tstart = Math.max (0, start);", "-\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "-\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "-\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, startIter, start);", "-\t\tOS.gtk_text_buffer_get_iter_at_offset (bufferHandle, endIter, end + 1);", "-\t\taddress = OS.gtk_text_buffer_get_text (bufferHandle, startIter, endIter, true);", "-\t}", "-\tif (address == 0) error (SWT.ERROR_CANNOT_GET_TEXT);", "-\tint length = OS.strlen (address);", "-\tbyte [] buffer = new byte [length];", "-\tOS.memmove (buffer, address, length);", "-\tOS.g_free (address);", "-\treturn new String (Converter.mbcsToWcs (null, buffer));", "+\tString str = getText ();", "+\tint length = str.length ();", "+\tend = Math.min (end, length - 1);", "+\tif (start > end) return \"\";", "+\tstart = Math.max (0, start);", "+\t/*", "+\t* NOTE: The current implementation uses substring ()", "+\t* which can reference a potentially large character", "+\t* array.", "+\t*/", "+\treturn str.substring (start, end + 1);"]}], "num": 41650}