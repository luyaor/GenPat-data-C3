{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "650e452410d237c1188163adafe5d548", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "572fc0d8f7bb3ff7a1d7486b6c234ecd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "64605ca991b55a1d0eb43e382d0c6cb2dad19bc2", "commitAfterChange": "791bb30d56cbcd4b6bb6c636ef3a3f5c9f75a550", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\tint clrText = item.cellForeground != null ? item.cellForeground [0] : -1;", "-\t\t\t\t\t\t\tif (clrText == -1) clrText = item.foreground;", "-\t\t\t\t\t\t\tnmcd.clrText = clrText == -1 ? getForegroundPixel () : clrText;", "-\t\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [0] : -1;", "-\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "-\t\t\t\t\t\t\tif (clrTextBk == -1) {", "-\t\t\t\t\t\t\t\tControl control = findBackgroundControl ();", "-\t\t\t\t\t\t\t\tif (control == null) control = this;", "-\t\t\t\t\t\t\t\tif (control.backgroundImage == null) {", "-\t\t\t\t\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tnmcd.clrTextBk = clrTextBk;", "+\t\t\t\t\t\tint clrText = item.cellForeground != null ? item.cellForeground [0] : -1;", "+\t\t\t\t\t\tif (clrText == -1) clrText = item.foreground;", "+\t\t\t\t\t\tnmcd.clrText = clrText == -1 ? getForegroundPixel () : clrText;", "+\t\t\t\t\t\tint clrTextBk = item.cellBackground != null ? item.cellBackground [0] : -1;", "+\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "+\t\t\t\t\t\tif (clrTextBk == -1) {", "+\t\t\t\t\t\t\tControl control = findBackgroundControl ();", "+\t\t\t\t\t\t\tif (control == null) control = this;", "+\t\t\t\t\t\t\tif (control.backgroundImage == null) {", "+\t\t\t\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "-\t\t\t\t\t\t\tOS.MoveMemory (lParam, nmcd, NMTVCUSTOMDRAW.sizeof);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tnmcd.clrTextBk = clrTextBk;", "+\t\t\t\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) {", "+\t\t\t\t\t\t\tif (hwndHeader != 0) {", "+\t\t\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\t\t\t\t\tif (count != 0) {", "+\t\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "+\t\t\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.left + hdItem.cxy, nmcd.bottom);", "+\t\t\t\t\t\t\t\t\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\t\t\t\t\t\t\t\t\tRECT itemRect = new RECT ();", "+\t\t\t\t\t\t\t\t\t\titemRect.left = item.handle;", "+\t\t\t\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, itemRect) != 0) {", "+\t\t\t\t\t\t\t\t\t\t\trect.left = Math.min (itemRect.left, rect.right);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tfillBackground (hDC, nmcd.clrTextBk, rect);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (useColor) OS.MoveMemory (lParam, nmcd, NMTVCUSTOMDRAW.sizeof);", "+\t\t\t\t\t\tint clrTextBk = -1;", "+\t\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : -1;", "+\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (useColor) {", "+\t\t\t\t\t\t\tif (useColor && clrTextBk == -1) {", "-\t\t\t\t\t\t\tint clrTextBk = -1;", "-\t\t\t\t\t\t\tif (useColor) {", "-\t\t\t\t\t\t\t\tclrTextBk = item.cellBackground != null ? item.cellBackground [index] : -1;", "-\t\t\t\t\t\t\t\tif (clrTextBk == -1) clrTextBk = item.background;", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ce18d59ba95bbcda55175ef9342841f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "ff0daed0c34bdafa77f196a69ef9e894ca562fd4", "commitAfterChange": "a66a54624c683271f76e3e3dc3642fbb59fd1036", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+\t}", "+\tif (OS.HIVIEW && control == iconHandle && OS.VERSION >= 0x1040) {", "+\t\tImage image = null;", "+\t\tif (hotImage != null) {", "+\t\t\timage = hotImage;", "+\t\t} else {", "+\t\t\tif (this.image != null) {", "+\t\t\t\timage = this.image;", "+\t\t\t} else {", "+\t\t\t\timage = disabledImage;", "+\t\t\t}", "+\t\t}", "+\t\tif (image != null) {", "+\t\t\tint imageHandle = image.handle;", "+\t\t\tint alphaInfo = OS.CGImageGetAlphaInfo (imageHandle);", "+\t\t\tif (alphaInfo == OS.kCGImageAlphaFirst) {", "+\t\t\t\tint [] buffer = new int [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamCGContextRef, OS.typeCGContextRef, null, 4, null, buffer);", "+\t\t\t\tint context = buffer [0];", "+\t\t\t\tCGRect rect = new CGRect ();", "+\t\t\t\tOS.HIViewGetBounds (iconHandle, rect);", "+\t\t\t\tif (partCode != 0) {", "+\t\t\t\t\tOS.HICreateTransformedCGImage (imageHandle, OS.kHITransformSelected, buffer);", "+\t\t\t\t\timageHandle = buffer [0];", "+\t\t\t\t}", "+\t\t\t\tOS.HIViewDrawCGImage (context, rect, imageHandle);", "+\t\t\t\tif (imageHandle != image.handle) OS.CGImageRelease (imageHandle);", "+\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf35f2a00a5dd161c7cd79b9e3af9f1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "1b4bf2560a13cbe7bbaefe761d35208d64534690", "commitAfterChange": "4dfb9b2e7115a7b57c3f5b8a9e47ea812d940f92", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\tRECT clientRect = new RECT (), focusRect = null;", "+\tRECT clientRect = new RECT ();", "-\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = false;", "+\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = false;", "+\t\t\t\t\t\t\tignoreDrawFocus = (event.detail & SWT.FOCUSED) == 0;", "-\t\t\t\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = true;", "+\t\t\t\t\t\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = true;", "-\t\t\t\t\t\t\t\tif (!ignoreDrawSelection) {", "-\t\t\t\t\t\t\t\t\tif (handle == OS.GetFocus ()) {", "-\t\t\t\t\t\t\t\t\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "-\t\t\t\t\t\t\t\t\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "-\t\t\t\t\t\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\t\t\t\t\t\t\tif (hItem == item.handle) {", "-\t\t\t\t\t\t\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfocusRect = new RECT ();", "-\t\t\t\t\t\t\t\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "-\t\t\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tfocusRect = item.getBounds (index, true, false, false, false, true, hDC);", "-\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\tif (focusRect != null) OS.DrawFocusRect (hDC, focusRect);", "+\tif (handle == OS.GetFocus ()) {", "+\t\tint uiState = OS.SendMessage (handle, OS.WM_QUERYUISTATE, 0, 0);", "+\t\tif ((uiState & OS.UISF_HIDEFOCUS) == 0) {", "+\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\tif (hItem == item.handle) {", "+\t\t\t\tif ((!ignoreDrawFocus && hooks (SWT.PaintItem)) || findImageControl () != null) {", "+\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\tRECT focusRect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (focusRect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\tint width = 0;", "+\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\tfor (int j=0; j<count; j++) {", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, j, hdItem);", "+\t\t\t\t\t\t\t\twidth += hdItem.cxy;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tfocusRect.left = 0;", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\t\t\tfocusRect.right = Math.max (width, rect.right);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tRECT focusRect = item.getBounds (0, true, false, false, false, false, hDC);", "+\t\t\t\t\t\tRECT clipRect = item.getBounds (0, true, false, false, false, true, hDC);", "+\t\t\t\t\t\tOS.IntersectClipRect (hDC, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\t\tOS.DrawFocusRect (hDC, focusRect);", "+\t\t\t\t\t\tOS.SelectClipRgn (hDC, 0);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44b4b56f03c02e302e3d89ac755712d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e3e154ce011d51193da4847c8df29202bada7842", "commitAfterChange": "c92daeea501dae8c5dcfaa8b9229c42746f8980b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\tif (count == 0) {", "-\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\tif (!explorerTheme || !selected) {", "+\t\t\t\t\tif (count == 0) {", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, true, false, true, hDC);", "+\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, textRect);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, true, false, true, hDC);", "-\t\t\t\t\t\tfillBackground (hDC, clrTextBk, textRect);", "+\t\t\t\t\t\tfillBackground (hDC, clrTextBk, cellRect);", "-\t\t\t\t} else {", "-\t\t\t\t\tfillBackground (hDC, clrTextBk, cellRect);", "-\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t\tif (explorerTheme) {", "+\t\t\t\t\t\t\t\tboolean hot = (nmcd.uItemState & OS.CDIS_HOT) != 0;", "+\t\t\t\t\t\t\t\tif (!selected && !hot) fillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (clrTextBk != -1) {", "+\t\t\t\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\tif (count != 0) {", "+\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "+\t\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.left + hdItem.cxy, nmcd.bottom);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, rect);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tRECT textRect = item.getBounds (index, true, false, true, false, true, hDC);", "+\t\t\t\t\t\t\tfillBackground (hDC, clrTextBk, textRect);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "941f5f1546f52cc629df06aa1f3df19e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5d3d4f8a0634d37ea3c767f15ab983499a20a102", "commitAfterChange": "7c6a6a52114b77938fdd5a3bca97d0ec53be58c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_PREPAINT (NMLVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_PREPAINT (NMLVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["+\t\t\t\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\t\t\t\tif (sortColumn != null && sortDirection != SWT.NONE) {", "+\t\t\t\t\t\t\t\tint index = indexOf (sortColumn);", "+\t\t\t\t\t\t\t\tif (index != -1) {", "+\t\t\t\t\t\t\t\t\tparent.forceResize ();", "+\t\t\t\t\t\t\t\t\tint clrSortBk = getSortColumnPixel ();", "+\t\t\t\t\t\t\t\t\tRECT columnRect = new RECT (), headerRect = new RECT ();", "+\t\t\t\t\t\t\t\t\tOS.GetClientRect (handle, columnRect);", "+\t\t\t\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\t\t\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect) != 0) {", "+\t\t\t\t\t\t\t\t\t\tOS.MapWindowPoints (hwndHeader, handle, headerRect, 2);", "+\t\t\t\t\t\t\t\t\t\tcolumnRect.left = headerRect.left;", "+\t\t\t\t\t\t\t\t\t\tcolumnRect.right = headerRect.right;", "+\t\t\t\t\t\t\t\t\t\tif (OS.IntersectRect(columnRect, columnRect, rect)) {", "+\t\t\t\t\t\t\t\t\t\t\tfillBackground (nmcd.hdc, clrSortBk, columnRect);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43581b14c2dfb4007149a98418375dca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f53adb34530c9ea79987a97ca8b1f0d90d3f49f9", "commitAfterChange": "dab9408fe75fa7845756fb5f59bebb963ba6f502", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT CDDS_POSTPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_POSTPAINT (int wParam, int lParam)", "diff": ["+\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\tif (sortColumn != null && sortDirection != SWT.NONE) {", "+\t\t\t\tif (findImageControl () == null) {", "+\t\t\t\t\tint index = indexOf (sortColumn);", "+\t\t\t\t\tif (index != -1) {", "+\t\t\t\t\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_LASTVISIBLE, 0);", "+\t\t\t\t\t\tif (hItem != 0) {", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\trect.left = hItem;", "+\t\t\t\t\t\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "+\t\t\t\t\t\t\t\tNMTVCUSTOMDRAW nmcd = new NMTVCUSTOMDRAW ();", "+\t\t\t\t\t\t\t\tOS.MoveMemory (nmcd, lParam, NMTVCUSTOMDRAW.sizeof);", "+\t\t\t\t\t\t\t\tOS.SetRect (rect, nmcd.left, rect.bottom, nmcd.right, nmcd.bottom);", "+\t\t\t\t\t\t\t\tRECT headerRect = new RECT ();", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "+\t\t\t\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\t\t\t\tdrawBackground (nmcd.hdc, rect, getSortColumnPixel ());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c02f27531da36d549a2af6627af08a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "d3d852fb4b2590731b3961d9cc84a7465bdc990c", "commitAfterChange": "696aea6756a0a7d46df771aafb6e94481b81ce87", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC)", "signatureAfterChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC)", "diff": ["-\t\tif (getText && getImage) {", "-\t\t\trect.left = OS.LVIR_SELECTBOUNDS;", "+\t\tif (hDC != 0 && parent.explorerTheme) {", "+\t\t\trect.left = OS.LVIR_ICON;", "+\t\t\tparent.ignoreCustomDraw = true;", "+\t\t\tint code = OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect);", "+\t\t\tparent.ignoreCustomDraw = false;", "+\t\t\tif (code == 0) return new RECT ();", "+\t\t\tRECT textRect = new RECT ();", "+\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, false);", "+\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "+\t\t\tOS.DrawText (hDC, buffer, buffer.length (), textRect, flags);", "+\t\t\trect.right += textRect.right - textRect.left + Table.INSET * 3 + 1;", "-\t\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\t\tif (getText && getImage) {", "+\t\t\t\trect.left = OS.LVIR_SELECTBOUNDS;", "+\t\t\t} else {", "+\t\t\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\t\t}", "+\t\t\tparent.ignoreCustomDraw = true;", "+\t\t\tint code = OS.SendMessage (hwnd, OS.LVM_GETITEMRECT, row, rect);", "+\t\t\tparent.ignoreCustomDraw = false;", "+\t\t\tif (code == 0) return new RECT ();", "-\t\tparent.ignoreCustomDraw = true;", "-\t\tint code = OS.SendMessage (hwnd, OS. LVM_GETITEMRECT, row, rect);", "-\t\tparent.ignoreCustomDraw = false;", "-\t\tif (code == 0) return new RECT ();", "+\t\t\tif (column == 0 && fullImage) {", "+\t\t\t\tRECT headerRect = new RECT ();", "+\t\t\t\tint hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, 0, headerRect);", "+\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\trect.left = headerRect.left;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563aec70f2a7cd41c7123055015300fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "17dca6877d3252823ef9769610c3a735be00a027", "commitAfterChange": "8ed0ca574b7d9dc725b56511af8febe1e07d6ab9", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r public void showSelection ()", "signatureAfterChange": "\r public void showSelection ()", "diff": ["-\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);\r", "+\tint hItem = 0;\r", "+\tif ((style & SWT.SINGLE) != 0) {\t\r", "+\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);\r", "+\t\tif (hItem == 0) return;\r", "+\t\tTVITEM tvItem = new TVITEM ();\r", "+\t\ttvItem.mask = OS.TVIF_STATE;\r", "+\t\ttvItem.hItem = hItem;\r", "+\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);\r", "+\t\tif ((tvItem.state & OS.TVIS_SELECTED) == 0) return;\r", "+\t} else {\r", "+\t\tTVITEM tvItem = new TVITEM ();\r", "+\t\ttvItem.mask = OS.TVIF_STATE;\r", "+\t\tint oldProc = OS.GetWindowLong (handle, OS.GWL_WNDPROC);\r", "+\t\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, TreeProc);\r", "+\t\tint index = 0;\r", "+\t\twhile (index <items.length) {\r", "+\t\t\tTreeItem item = items [index];\r", "+\t\t\tif (item != null) {\r", "+\t\t\t\ttvItem.hItem = item.handle;\r", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);\r", "+\t\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {\r", "+\t\t\t\t\thItem = tvItem.hItem;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldProc);\r", "+\t}\r"]}], "num": 12605}