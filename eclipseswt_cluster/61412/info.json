{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b36cb390d21aa7acc1a8ce4845db2d80", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "422024248a0b558f54b9f1a0b1ae6f08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 297, "signatureBeforeChange": " public static final synchronized native int XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id);", "signatureAfterChange": " public static final int XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id)", "diff": ["-public static final synchronized native void XmChangeColor(int widget, int pixel);", "-public static final synchronized native int XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id);", "+public static final native int _XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id);", "+public static final int XmClipboardCopy(int display, int window, int item_id, byte[] format_name, byte[] buffer, int length, int private_id, int[] data_id) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XmClipboardCopy(display, window, item_id, format_name, buffer, length, private_id, data_id);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f70718afe744dd9094188c4d73a516ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 309, "signatureBeforeChange": " public static final synchronized native int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id);", "signatureAfterChange": " public static final int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id)", "diff": ["-public static final synchronized native int XmClipboardInquireLength(int display, int widget, byte[] format_name, int[] length);", "-public static final synchronized native int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id);", "+public static final native int _XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id);", "+public static final int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XmClipboardRetrieve(display, window, format_name, buffer, length, num_bytes, private_id);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d661f1b7a8850dc721669911b327ef81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 147, "signatureBeforeChange": " public static final synchronized native int XGetImage(int display, int drawable, int x, int y, int width, int height, int plane_mask, int format);", "signatureAfterChange": " public static final int XGetImage(int display, int drawable, int x, int y, int width, int height, int plane_mask, int format)", "diff": ["-public static final synchronized native int XGetGeometry(int display, int drawable, int[] root_return, int[] x_return, int[] y_return, int[] width_return, int[] height_return, int[] border_width_return, int[] depth_return);", "-public static final synchronized native int XGetImage(int display, int drawable, int x, int y, int width, int height, int plane_mask, int format);", "+public static final native int _XGetImage(int display, int drawable, int x, int y, int width, int height, int plane_mask, int format);", "+public static final int XGetImage(int display, int drawable, int x, int y, int width, int height, int plane_mask, int format) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XGetImage(display, drawable, x, y, width, height, plane_mask, format);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ed8b1cba46c2033ead6972698f0035", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 382, "signatureBeforeChange": " public static final synchronized native void gdk_draw_layout_with_colors(int drawable, int gc, int x, int y, int layout, GdkColor foreground, GdkColor background);", "signatureAfterChange": " public static final void gdk_draw_layout_with_colors(int drawable, int gc, int x, int y, int layout, GdkColor foreground, GdkColor background)", "diff": ["-public static final synchronized native void gdk_draw_layout(int /*long*/ drawable, int /*long*/ gc, int x, int y, int /*long*/ layout);", "-public static final synchronized native void gdk_draw_layout_with_colors(int /*long*/ drawable, int /*long*/ gc, int x, int y, int /*long*/ layout, GdkColor foreground, GdkColor background);", "+public static final native void _gdk_draw_layout_with_colors(int /*long*/ drawable, int /*long*/ gc, int x, int y, int /*long*/ layout, GdkColor foreground, GdkColor background);", "+public static final void gdk_draw_layout_with_colors(int /*long*/ drawable, int /*long*/ gc, int x, int y, int /*long*/ layout, GdkColor foreground, GdkColor background) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_draw_layout_with_colors(drawable, gc, x, y, layout, foreground, background);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d24f6701f728932a45698bd1563bfa9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 311, "signatureBeforeChange": " public static final synchronized native int XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id);", "signatureAfterChange": " public static final int XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id)", "diff": ["-public static final synchronized native int XmClipboardRetrieve(int display, int window, byte[] format_name, byte[] buffer, int length, int[] num_bytes, int[] private_id);", "-public static final synchronized native int XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id);", "+public static final native int _XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id);", "+public static final int XmClipboardStartCopy(int display, int window, int clip_label, int timestamp, int widget, int callback, int[] item_id) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XmClipboardStartCopy(display, window, clip_label, timestamp, widget, callback, item_id);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42412a15d72dba87daa34e11d95c89a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 269, "signatureBeforeChange": " public static final synchronized native boolean XTranslateCoordinates(int display, int src_w, int dest_w, int src_x, int src_y, int[] dest_x_return, int[] dest_y_return, int[] child_return);", "signatureAfterChange": " public static final boolean XTranslateCoordinates(int display, int src_w, int dest_w, int src_x, int src_y, int[] dest_x_return, int[] dest_y_return, int[] child_return)", "diff": ["-public static final synchronized native void XTestFakeMotionEvent(int display, int screen_number, int x, int y, int delay);", "-public static final synchronized native boolean XTranslateCoordinates(int display, int src_w, int dest_w, int src_x, int src_y, int[] dest_x_return, int[] dest_y_return, int[] child_return);", "+public static final native boolean _XTranslateCoordinates(int display, int src_w, int dest_w, int src_x, int src_y, int[] dest_x_return, int[] dest_y_return, int[] child_return);", "+public static final boolean XTranslateCoordinates(int display, int src_w, int dest_w, int src_x, int src_y, int[] dest_x_return, int[] dest_y_return, int[] child_return) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XTranslateCoordinates(display, src_w, dest_w, src_x, src_y, dest_x_return, dest_y_return, child_return);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af8dfc768a67d6bb1e7a7484e3618ba2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 378, "signatureBeforeChange": " public static final synchronized native void gdk_draw_drawable(int drawable, int gc, int src, int xsrc, int ysrc, int xdest, int ydest, int width, int height);", "signatureAfterChange": " public static final void gdk_draw_drawable(int drawable, int gc, int src, int xsrc, int ysrc, int xdest, int ydest, int width, int height)", "diff": ["-public static final synchronized native void gdk_draw_arc(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height, int angle1, int angle2);", "-public static final synchronized native void gdk_draw_drawable(int /*long*/ drawable, int /*long*/ gc, int /*long*/ src, int xsrc, int ysrc, int xdest, int ydest, int width, int height);", "+public static final native void _gdk_draw_drawable(int /*long*/ drawable, int /*long*/ gc, int /*long*/ src, int xsrc, int ysrc, int xdest, int ydest, int width, int height);", "+public static final void gdk_draw_drawable(int /*long*/ drawable, int /*long*/ gc, int /*long*/ src, int xsrc, int ysrc, int xdest, int ydest, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_draw_drawable(drawable, gc, src, xsrc, ysrc, xdest, ydest, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc27365a7559705b2bc75741d4ac677", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 392, "signatureBeforeChange": " public static final synchronized native void gdk_draw_rectangle(int drawable, int gc, int filled, int x, int y, int width, int height);", "signatureAfterChange": " public static final void gdk_draw_rectangle(int drawable, int gc, int filled, int x, int y, int width, int height)", "diff": ["-public static final synchronized native void gdk_draw_polygon(int /*long*/ drawable, int /*long*/ gc, int filled, int[] points, int npoints);", "-public static final synchronized native void gdk_draw_rectangle(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height);", "+public static final native void _gdk_draw_rectangle(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height);", "+public static final void gdk_draw_rectangle(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_draw_rectangle(drawable, gc, filled, x, y, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b43de0bfcddd93d415e76eb27c75c5ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 376, "signatureBeforeChange": " public static final synchronized native void gdk_draw_arc(int drawable, int gc, int filled, int x, int y, int width, int height, int angle1, int angle2);", "signatureAfterChange": " public static final void gdk_draw_arc(int drawable, int gc, int filled, int x, int y, int width, int height, int angle1, int angle2)", "diff": ["-public static final synchronized native void gdk_drag_status(int /*long*/ context, int action, int time);", "-public static final synchronized native void gdk_draw_arc(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height, int angle1, int angle2);", "+public static final native void _gdk_draw_arc(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height, int angle1, int angle2);", "+public static final void gdk_draw_arc(int /*long*/ drawable, int /*long*/ gc, int filled, int x, int y, int width, int height, int angle1, int angle2) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_draw_arc(drawable, gc, filled, x, y, width, height, angle1, angle2);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 61412}