{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a418609296c991d21ddee9981d2b6aa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac6a5ef28edb6b31be0d7d11624522f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tint /*long*/ labelLayout = OS.gtk_label_get_layout (labelHandle);", "+\t\tlong /*int*/ labelLayout = OS.gtk_label_get_layout (labelHandle);", "-\t\tint /*long*/ layout = OS.gtk_label_get_layout (labelHandle);", "-\t\tint /*long*/ context = OS.pango_layout_get_context (layout);", "-\t\tint /*long*/ lang = OS.pango_context_get_language (context);", "-\t\tint /*long*/ font = getFontDescription ();", "-\t\tint /*long*/ metrics = OS.pango_context_get_metrics (context, font, lang);", "+\t\tlong /*int*/ layout = OS.gtk_label_get_layout (labelHandle);", "+\t\tlong /*int*/ context = OS.pango_layout_get_context (layout);", "+\t\tlong /*int*/ lang = OS.pango_context_get_language (context);", "+\t\tlong /*int*/ font = getFontDescription ();", "+\t\tlong /*int*/ metrics = OS.pango_context_get_metrics (context, font, lang);", "-\t\t\tint /*long*/ style = OS.gtk_widget_get_style (frameHandle);", "+\t\t\tlong /*int*/ style = OS.gtk_widget_get_style (frameHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ffc9cf51eaf7808a75138d0a6d6bb16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void init(int width, int height)", "signatureAfterChange": "  void init(int width, int height)", "diff": ["-\t\t\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\t\tint /*long*/ xDrawable = OS.gdk_x11_drawable_get_xid(OS.gdk_get_default_root_window());", "-\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "-\t\t\tint /*long*/ rootSurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, 1, 1);", "+\t\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\t\t\tlong /*int*/ xDrawable = OS.gdk_x11_drawable_get_xid(OS.gdk_get_default_root_window());", "+\t\t\tlong /*int*/ xVisual = OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system());", "+\t\t\tlong /*int*/ rootSurface = Cairo.cairo_xlib_surface_create(xDisplay, xDrawable, xVisual, 1, 1);", "-\t\tint /*long*/ cairo = Cairo.cairo_create(surface);", "+\t\tlong /*int*/ cairo = Cairo.cairo_create(surface);", "-\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\tlong /*int*/ colormap = OS.gdk_colormap_get_system();", "-\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "+\tlong /*int*/ gdkGC = OS.gdk_gc_new(pixmap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2df4c120f6ae51ea983b0c43ce9180", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tstatic void registerAccessible (Accessible accessible)", "signatureAfterChange": "  \tstatic void registerAccessible (Accessible accessible)", "diff": ["-\t\tint /*long*/ widget = accessible.getControlHandle ();", "-\t\tint /*long*/ widgetType = OS.G_OBJECT_TYPE (widget);", "-\t\tint /*long*/ registry = ATK.atk_get_default_registry ();", "-\t\tint /*long*/ factory = ATK.atk_registry_get_factory (registry, widgetType);", "+\t\tlong /*int*/ widget = accessible.getControlHandle ();", "+\t\tlong /*int*/ widgetType = OS.G_OBJECT_TYPE (widget);", "+\t\tlong /*int*/ registry = ATK.atk_get_default_registry ();", "+\t\tlong /*int*/ factory = ATK.atk_registry_get_factory (registry, widgetType);", "-\t\t\tint /*long*/ info = OS.g_malloc (GTypeInfo.sizeof); ", "+\t\t\tlong /*int*/ info = OS.g_malloc (GTypeInfo.sizeof); ", "-\t\t\tint /*long*/ swtFactoryType = OS.g_type_register_static (ATK.ATK_TYPE_OBJECT_FACTORY(), factoryName, info, 0);", "-\t\t\tint /*long*/ parentType = ATK.atk_object_factory_get_accessible_type(factory);", "+\t\t\tlong /*int*/ swtFactoryType = OS.g_type_register_static (ATK.ATK_TYPE_OBJECT_FACTORY(), factoryName, info, 0);", "+\t\t\tlong /*int*/ parentType = ATK.atk_object_factory_get_accessible_type(factory);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "474046752261404371200658f348cc1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\tint /*long*/ focusHandle = focusHandle ();", "+\tlong /*int*/ focusHandle = focusHandle ();", "-\tint /*long*/ eventHandle = eventHandle ();", "+\tlong /*int*/ eventHandle = eventHandle ();", "-\tint /*long*/ enterExitHandle = enterExitHandle ();", "+\tlong /*int*/ enterExitHandle = enterExitHandle ();", "-\tint /*long*/ blockHandle = fixedHandle != 0 ? fixedHandle : eventHandle;", "+\tlong /*int*/ blockHandle = fixedHandle != 0 ? fixedHandle : eventHandle;", "-\tint /*long*/ paintHandle = paintHandle ();", "+\tlong /*int*/ paintHandle = paintHandle ();", "-\tint /*long*/ imHandle = imHandle ();", "+\tlong /*int*/ imHandle = imHandle ();", "-\tint /*long*/ topHandle = topHandle ();", "+\tlong /*int*/ topHandle = topHandle ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11de251916a6f820e5938c703988b3f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/cocoa/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\tint /*long*/ proc3 = Callback3.getAddress();", "+\t\tlong /*int*/ proc3 = Callback3.getAddress();", "-\t\tint /*long*/ proc4 = Callback4.getAddress();", "+\t\tlong /*int*/ proc4 = Callback4.getAddress();", "-\t\tint /*long*/ proc5 = Callback5.getAddress();", "+\t\tlong /*int*/ proc5 = Callback5.getAddress();", "-\t\tint /*long*/ proc6 = Callback6.getAddress();", "+\t\tlong /*int*/ proc6 = Callback6.getAddress();", "-\t\tint /*long*/ proc7 = Callback7.getAddress();", "+\t\tlong /*int*/ proc7 = Callback7.getAddress();", "-\t\tint /*long*/ setFrameProc = OS.CALLBACK_webView_setFrame_(proc4);", "+\t\tlong /*int*/ setFrameProc = OS.CALLBACK_webView_setFrame_(proc4);", "- \t\tint /*long*/ metaClass = OS.objc_getMetaClass (className);", "+ \t\tlong /*int*/ metaClass = OS.objc_getMetaClass (className);"]}], "num": 58304}