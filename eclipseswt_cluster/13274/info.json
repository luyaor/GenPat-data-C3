{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6ec9f5548b5dd66b34bf1edaaaa3603", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a4f4a88b31dfb9ec5a2038c0356334", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " private int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " private int QueryInterface(int riid, int ppvObject)", "diff": ["-private int QueryInterface(int riid, int ppvObject) {", "+private int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iOleInPlaceFrame.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/ [] {iOleInPlaceFrame.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tCOM.MoveMemory(ppvObject, new int /*long*/ [] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2a4d00ea6d6ced918bc4212ac0e9f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " private int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " private int QueryInterface(int riid, int ppvObject)", "diff": ["-private int QueryInterface(int riid, int ppvObject) {", "+private int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tOS.MoveMemory(ppvObject, new int[] {iDataObject.getAddress()}, 4);", "+\t\tOS.MoveMemory(ppvObject, new int /*long*/[] {iDataObject.getAddress()}, OS.PTR_SIZEOF);", "-\tOS.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tOS.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e63c6fcf335d54b1889c59f1b958de85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected int GetWindow(int phwnd)", "signatureAfterChange": " protected int GetWindow(int phwnd)", "diff": ["-protected int GetWindow(int phwnd) {", "+protected int GetWindow(int /*long*/ phwnd) {", "-\t\tCOM.MoveMemory(phwnd, new int[] {0}, 4);", "+\t\tCOM.MoveMemory(phwnd, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(phwnd, new int[] {handle}, 4);", "+\tCOM.MoveMemory(phwnd, new int /*long*/[] {handle}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e266de69a1bd924af0e9b9f925c56b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleEventSink.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " private int QueryInterface(int riid, int ppvObject)", "diff": ["-private int QueryInterface(int riid, int ppvObject) {", "+private int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iDispatch.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDispatch.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af7e3e5eadbaa0636f64bae184c78d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "a016d09fe92fafd1dfc110f82a9b2cb8ff8c6200", "commitAfterChange": "f8500e186a498428f3e1d946e4db818184e6f78b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  void moveAbove (int child, int sibling)", "signatureAfterChange": "  void moveAbove (int child, int sibling)", "diff": ["-\tint [] data = new int [1];", "-\tint [] widget = new int [1];", "+\tint /*long*/ [] data = new int /*long*/ [1];", "+\tint /*long*/ [] widget = new int /*long*/ [1];", "-\t\tOS.memmove (data, temp, 4);", "-\t\tOS.memmove (widget, data [0], 4);", "+\t\tOS.memmove (data, temp, OS.PTR_SIZEOF);", "+\t\tOS.memmove (widget, data [0], OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c95ea57ef055ab47c7002db3d9fb6fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " protected int GetWindow(int phwnd)", "signatureAfterChange": " protected int GetWindow(int phwnd)", "diff": ["-protected int GetWindow(int phwnd) {", "+protected int GetWindow(int /*long*/ phwnd) {", "-\t\tCOM.MoveMemory(phwnd, new int[] {0}, 4);", "+\t\tCOM.MoveMemory(phwnd, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(phwnd, new int[] {frame.handle}, 4);", "+\tCOM.MoveMemory(phwnd, new int /*long*/[] {frame.handle}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff1b22834f50f643136efeef87387e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet123.java", "commitBeforeChange": "12c4cc1bd29c0eaeb000551aa05a840abc643bb8", "commitAfterChange": "ca106afa04e8937822db9d92930157301650ea40", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " \tprivate int QueryInterface(int riid, int ppvObject)", "diff": ["-\tprivate int QueryInterface(int riid, int ppvObject) {", "+\tprivate int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tif ( COM.IsEqualGUID(guid, COM.IIDIUnknown) || COM.IsEqualGUID(guid, COM.IIDIDispatch)) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int[] {iDispatch.getAddress()}, 4);", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown) || COM.IsEqualGUID(guid, COM.IIDIDispatch)) {", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDispatch.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dadc783e9e6bad26fddede86f343d670", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": "  int QueryService(int guidService, int riid, int ppvObject)", "signatureAfterChange": "  int QueryService(int guidService, int riid, int ppvObject)", "diff": ["-int QueryService(int guidService, int riid, int ppvObject) {", "+int QueryService(int /*long*/ guidService, int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iInternetSecurityManager.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iInternetSecurityManager.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc15a6f0686d574a470c83c40f462c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "a016d09fe92fafd1dfc110f82a9b2cb8ff8c6200", "commitAfterChange": "f8500e186a498428f3e1d946e4db818184e6f78b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void moveBelow (int child, int sibling)", "signatureAfterChange": "  void moveBelow (int child, int sibling)", "diff": ["-\tint [] data = new int [1];", "-\tint [] widget = new int [1];", "+\tint /*long*/ [] data = new int /*long*/ [1];", "+\tint /*long*/ [] widget = new int /*long*/ [1];", "-\t\tOS.memmove (data, temp, 4);", "-\t\tOS.memmove (widget, data [0], 4);", "+\t\tOS.memmove (data, temp, OS.PTR_SIZEOF);", "+\t\tOS.memmove (widget, data [0], OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17636fc7ef419bcb0e7aacf6be28a266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " static Hashtable gnome_getMimeInfo()", "signatureAfterChange": " static Hashtable gnome_getMimeInfo()", "diff": ["+ */", "+static Hashtable gnome_getMimeInfo() {", "+\tHashtable mimeInfo = new Hashtable();", "+\tint /*long*/[] mimeData = new int /*long*/[1];", "+\tint /*long*/[] extensionData = new int /*long*/[1];", "+\tint /*long*/ mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "+\tint /*long*/ mimeElement = mimeList;", "+\twhile (mimeElement != 0) {", "+\t\tOS.memmove (mimeData, mimeElement, OS.PTR_SIZEOF);", "+\t\tint /*long*/ mimePtr = mimeData[0];", "+\t\tint mimeLength = OS.strlen(mimePtr);", "+\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "+\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "+\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "+\t\tint /*long*/ extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "+\t\tif (extensionList != 0) {", "+\t\t\tVector extensions = new Vector();", "+\t\t\tint /*long*/ extensionElement = extensionList;", "+\t\t\twhile (extensionElement != 0) {", "+\t\t\t\tOS.memmove(extensionData, extensionElement, OS.PTR_SIZEOF);", "+\t\t\t\tint /*long*/ extensionPtr = extensionData[0];", "+\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "+\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "+\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "+\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "+\t\t\t\textension = '.' + extension;", "+\t\t\t\textensions.addElement(extension);", "+\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "+\t\t\t}", "+\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "+\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "+\t\t}", "+\t\tmimeElement = GNOME.g_list_next(mimeElement);", "+\t}", "+\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "+\treturn mimeInfo;", "+}", "- */", "-static Hashtable gnome_getMimeInfo() {", "-\tHashtable mimeInfo = new Hashtable();", "-\tint[] mimeData = new int[1];", "-\tint[] extensionData = new int[1];", "-\tint mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "-\tint mimeElement = mimeList;", "-\twhile (mimeElement != 0) {", "-\t\tOS.memmove (mimeData, mimeElement, 4);", "-\t\tint mimePtr = mimeData[0];", "-\t\tint mimeLength = OS.strlen(mimePtr);", "-\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "-\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "-\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "-\t\tint extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "-\t\tif (extensionList != 0) {", "-\t\t\tVector extensions = new Vector();", "-\t\t\tint extensionElement = extensionList;", "-\t\t\twhile (extensionElement != 0) {", "-\t\t\t\tOS.memmove(extensionData, extensionElement, 4);", "-\t\t\t\tint extensionPtr = extensionData[0];", "-\t\t\t\tint extensionLength = OS.strlen(extensionPtr);", "-\t\t\t\tbyte[] extensionBuffer = new byte[extensionLength];", "-\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extensionLength);", "-\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "-\t\t\t\textension = '.' + extension;", "-\t\t\t\textensions.addElement(extension);", "-\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "-\t\t\t}", "-\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "-\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "-\t\t}", "-\t\tmimeElement = GNOME.g_list_next(mimeElement);", "-\t}", "-\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);", "-\treturn mimeInfo;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f855314544aa2e6da89e819c5a4ce5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "ba37366be2ce4b81c2ea0b47314627621478b774", "commitAfterChange": "2c04ec257a967dc9b71448cc82c356c64107e558", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tint get_accFocus(int pvarChild)", "signatureAfterChange": " \tint get_accFocus(int pvarChild)", "diff": ["-\tint get_accFocus(int pvarChild) {", "+\tint get_accFocus(int /*long*/ pvarChild) {", "-\t\t\tCOM.MoveMemory(pvarChild + 8, new int[] { accessible.objIAccessible.getAddress() }, 4);", "+\t\t\tCOM.MoveMemory(pvarChild + 8, new int /*long*/[] { accessible.objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(pvarChild + 8, new int[] { objIAccessible.getAddress() }, 4);", "+\t\t\tCOM.MoveMemory(pvarChild + 8, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);"]}], "num": 13274}