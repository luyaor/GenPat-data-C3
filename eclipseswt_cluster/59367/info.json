{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4cd38bdda5a96af64851b771e81294a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f72ba30f2e62b5be50f45f04d74547", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "70fed7586064df83841bf23cc3bbbf080c822668", "commitAfterChange": "05fa8251b9ef2b3f6a0320b4459410a59e0eab46", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public int [] getSelectionIndices ()", "signatureAfterChange": " public int [] getSelectionIndices ()", "diff": ["-\tif (OS.GTK_VERSION < OS.VERSION (2, 2, 0)) {", "-\t\tdisplay.treeSelectionLength  = 0;", "-\t\tdisplay.treeSelection = new int [itemCount];", "-\t\tOS.gtk_tree_selection_selected_foreach (selection, display.treeSelectionProc, handle);", "-\t\tif (display.treeSelectionLength == display.treeSelection.length) return display.treeSelection;", "-\t\tint [] result = new int [display.treeSelectionLength];", "-\t\tSystem.arraycopy (display.treeSelection, 0, result, 0, display.treeSelectionLength);", "-\t\treturn result;", "-\t}", "-\t/*", "-\t* Bug in GTK.  gtk_tree_selection_get_selected_rows() segmentation faults", "-\t* in versions smaller than 2.2.4 if the model is NULL.  The fix is", "-\t* to give a valid pointer instead.", "-\t*/", "-\tint /*long*/ [] model = OS.GTK_VERSION < OS.VERSION (2, 2, 4) ? new int /*long*/ [1] : null;", "+\tint /*long*/ [] model = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "612b1c4968c715e22dbff4f8884cb0db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public Image(Device display, ImageData source, ImageData mask)", "signatureAfterChange": " public Image(Device display, ImageData source, ImageData mask)", "diff": ["-\tif (display == null) display = Display.getDefault();", "-\tif (source.width != mask.width || source.height != mask.height) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (source.width != mask.width || source.height != mask.height) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "-\tImageData image;", "-\tif (source.depth != 1)", "-\t\timage = new ImageData(source.width, source.height, source.depth, source.palette, source.scanlinePad, source.data);", "-\telse {", "-\t\timage = source.getTransparencyMask(); //create an imagedata with scanlinepad == 1 and invalid data", "-\t\tint[] row = new int[source.width];", "-\t\tfor (int y = 0; y < source.height; y++) {", "-\t\t\tsource.getPixels(0, y, source.width, row, 0);", "-\t\t\timage.setPixels(0, y, source.width, row, 0);", "-\t\t}//change source data format from scanlinePad == 4 to scanlinePad == 1;", "-\t\t", "-\t}\t\t", "-\timage.type = SWT.ICON;", "+\tImageData image = new ImageData(source.width, source.height, source.depth, source.palette, source.scanlinePad, source.data);", "-\tinit(display, image);", "-\t", "-\tif (pixmap==0) SWT.error(SWT.ERROR_CANNOT_BE_ZERO);", "+\tinit(device, image);"]}], "num": 59367}