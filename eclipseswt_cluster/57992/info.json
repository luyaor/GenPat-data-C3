{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d1a47019f84b1a66a961be085b53079", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d928a0da27e3dec34ffccdcab163ee5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "905b3909331e9158540f896976d5079deb353ba1", "commitAfterChange": "49ec03c84e5dd4da3a34a5d736fc9d86bb7e427c", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\tMacRect br= new MacRect();", "-\tOS.GetControlBounds(widgetHandle, br.getData());", "-    if (!br.isEmpty()) {", "-        x+= br.getX();", "-        y+= br.getY();", "-        if (width == 0)", "-        \twidth= br.getWidth();", "-        else", "-\t\t\twidth+= 1; // AW strange workaround for Caret", "-        if (height == 0)", "-\t\t\theight= br.getHeight();", "-                ", "-        int rgn= OS.NewRgn();", "-        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-                ", "-        int region= OS.NewRgn();", "-        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "-        ", "-            OS.SectRgn(region, rgn, region);", "-        ", "-            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-        }", "-        ", "-        OS.DisposeRgn(rgn);", "-        OS.DisposeRgn(region);", "-    }", "+\tif (false) {", "+\t\tint rgn= OS.NewRgn();", "+\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\t\tOS.DisposeRgn(rgn);", "+\t} else {", "+\t\tMacRect br= new MacRect();", "+\t\tOS.GetControlBounds(widgetHandle, br.getData());", "+\t    if (!br.isEmpty()) {", "+\t        x+= br.getX();", "+\t        y+= br.getY();", "+\t        if (width == 0)", "+\t        \twidth= br.getWidth();", "+\t        else", "+\t\t\t\twidth+= 1; // AW strange workaround for Caret", "+\t        if (height == 0)", "+\t\t\t\theight= br.getHeight();", "+\t                ", "+\t        int rgn= OS.NewRgn();", "+\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t                ", "+\t        int region= OS.NewRgn();", "+\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "+\t        ", "+\t            OS.SectRgn(region, rgn, region);", "+\t        ", "+\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "+\t        }", "+\t        ", "+\t        OS.DisposeRgn(rgn);", "+\t        OS.DisposeRgn(region);", "+\t    }", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9806c84be3328b4404a3a13dc937fad8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 78, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": "  void redrawWidget (int control)", "diff": ["+", "+void redrawWidget (int control) {", "+\tif (!OS.IsControlVisible (control)) return;", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (control, rect);", "+\tint window = OS.GetControlOwner (control);", "+\tOS.InvalWindowRect (window, rect);", "-}", "-final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all) {", "-    /* AW", "-\tint display = OS.XtDisplay (widgetHandle);", "-\tif (display == 0) return;", "-\tint window = OS.XtWindow (widgetHandle);", "-\tif (window == 0) return;", "-\tint [] argList = {OS.XmNborderWidth, 0, OS.XmNborderColor, 0};", "-\tOS.XtGetValues (widgetHandle, argList, argList.length / 2);", "-\tif (argList [1] != 0) {", "-        */", "-\t\t/* Force the border to repaint by setting the color */", "-\t\t/*", "-\t\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "-\t}", "-\tOS.XClearArea (display, window, x, y, width, height, true);", "-\t*/", "-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tMacRect br= new MacRect();", "-\t\tOS.GetControlBounds(widgetHandle, br.getData());", "-\t    if (!br.isEmpty()) {", "-\t        x+= br.getX();", "-\t        y+= br.getY();", "-\t        if (width == 0)", "-\t        \twidth= br.getWidth();", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.getHeight();", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "-\t}", "-}"]}], "num": 57992}