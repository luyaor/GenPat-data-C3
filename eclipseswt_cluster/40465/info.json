{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "074ba8b76a02edcee6ed64ec00f304f3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4a47720647a25aaf5e5ea9da34e3b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/wpf/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "8e746dffcecf23a840e3dfc0bae71b16f86cd38f", "commitAfterChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  String createJavaString (int ptr)", "signatureAfterChange": " \t boolean checkByteArray(Object object)", "diff": ["-", "-String createJavaString (int ptr) {", "-\tint charArray = OS.String_ToCharArray(ptr);", "-\tchar[] chars = new char[OS.String_Length(ptr)];", "-\tOS.memcpy(chars, charArray, chars.length * 2);", "-\tOS.GCHandle_Free(charArray);", "-\treturn new String(chars);", "-}", "+boolean checkByteArray(Object object) {", "+\treturn (object != null && object instanceof byte[] && ((byte[])object).length > 0);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d63d67bb9532c8221cecd64f3810507", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "e490c124e2459ac874fc7c4f7b8c9a20c5a4a702", "commitAfterChange": "5c4b8231729870597968d83acc7163053ee45227", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void HandleLoaded (int sender, int e)", "signatureAfterChange": "  void setThumbVisibility (byte visibility)", "diff": ["-void HandleLoaded (int sender, int e) {", "-\tif (!checkEvent (e)) return;", "-\tint template = OS.Control_Template (handle);", "-\tint buttonName = createDotNetString (\"OverflowButton\", false);", "-\tint button = OS.FrameworkTemplate_FindName (template, buttonName, handle);", "-\tif (button != 0) {", "-\t\tOS.UIElement_Visibility (button, OS.Visibility_Collapsed);", "-\t\tOS.GCHandle_Free (button);", "-\t}", "-\tOS.GCHandle_Free (buttonName);", "-\tint thumbName = createDotNetString (\"ToolBarThumb\", false);", "-\tint thumb = OS.FrameworkTemplate_FindName (template, thumbName, handle);", "-\tif (thumb != 0) {", "-\t\tOS.UIElement_Visibility (thumb, OS.Visibility_Collapsed);", "-\t\tOS.GCHandle_Free (thumb);", "-\t}", "-\tOS.GCHandle_Free (thumbName);", "-\tOS.GCHandle_Free (template);", "-}", "+void setThumbVisibility (byte visibility) {", "+\tint template = OS.Control_Template (handle);", "+\tint thumbName = createDotNetString (\"ToolBarThumb\", false);", "+\tint thumb = OS.FrameworkTemplate_FindName (template, thumbName, handle);", "+\tif (thumb != 0) {", "+\t\tOS.UIElement_Visibility (thumb, visibility);", "+\t\tOS.GCHandle_Free (thumb);", "+\t}", "+\tOS.GCHandle_Free (thumbName);", "+\tOS.GCHandle_Free (template);\t", "+}"]}], "num": 40465}