{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0af65e1c761f1ee16aeff5159a4a9df0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016371eb1136454c3778e9390c4a77a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TreeDragAndDropEffect.java", "commitBeforeChange": "62ad874bbf1eb5cd79736eae7970272f5dd7f805", "commitAfterChange": "a3f5ca78a9a757f67007e90931f528488156c2d8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": "  void showDropTargetEffect(int effect, int x, int y)", "diff": ["-\t\t\t\t\tOS.ImageList_DragShowNolock(false);", "-\t\t\t\t\ttree.update();", "-\t\t\t\t\tOS.ImageList_DragShowNolock(true);", "-\t\t\t\t\t\tOS.ImageList_DragShowNolock(false);", "-\t\t\t\t\t\ttree.update();", "-\t\t\t\t\t\tOS.ImageList_DragShowNolock(true);", "-\t\tOS.ImageList_DragShowNolock(false);", "-\t\ttree.update();", "-\t\tOS.ImageList_DragShowNolock(true);", "-\t\tOS.ImageList_DragShowNolock(false);", "-\t\ttree.update();", "-\t\tOS.ImageList_DragShowNolock(true);", "-\t\t\tOS.ImageList_DragShowNolock(false);", "-\t\t\ttree.update();", "-\t\t\tOS.ImageList_DragShowNolock(true);", "-\t\t\tOS.ImageList_DragShowNolock(false);", "-\t\t\ttree.update();", "-\t\t\tOS.ImageList_DragShowNolock(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef389b03bebf4fa4721c2912565a0eb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "32c09d8f3234247ca1b573423e5d4d72bbdbf08a", "commitAfterChange": "940e0a0cd5dddd2d3fdf0714f46e96d2b27435e7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic NSArray internal_accessibilityAttributeNames(int childID)", "signatureAfterChange": " \tpublic NSArray internal_accessibilityAttributeNames(int childID)", "diff": ["-\t\t\t\t", "-\t\tif ((childID == ACC.CHILDID_SELF) && (attributeNames != null)) {", "-\t\t\t// See if this object has a label or is a label for something else. If so, add that to the list.", "-\t\t\tif (relations[ACC.RELATION_LABEL_FOR] != null) {", "-\t\t\t\tif (!attributeNames.containsObject(OS.NSAccessibilityServesAsTitleForUIElementsAttribute)) attributeNames.addObject(OS.NSAccessibilityServesAsTitleForUIElementsAttribute);", "-\t\t\t} else {", "-\t\t\t\tattributeNames.removeObject(OS.NSAccessibilityServesAsTitleForUIElementsAttribute);", "-\t\t\t}", "-\t\t\t", "-\t\t\tif (relations[ACC.RELATION_LABELLED_BY] != null) {", "-\t\t\t\tif (!attributeNames.containsObject(OS.NSAccessibilityTitleUIElementAttribute)) attributeNames.addObject(OS.NSAccessibilityTitleUIElementAttribute);", "-\t\t\t} else {", "-\t\t\t\tattributeNames.removeObject(OS.NSAccessibilityTitleUIElementAttribute);", "-\t\t\t}", "-", "-\t\t\treturn retainedAutoreleased(attributeNames);", "-\t\t}", "+\t\t// If the attributes haven't changed return the cached list.", "+\t\tif (attributeNames != null) return retainedAutoreleased(attributeNames);", "+\t\t", "+\t\t// Set up the base set of attributes.", "-\t\t/* Add our list of supported attributes to the array.", "-\t\t * Make sure each attribute name is not already in the array before appending.", "-\t\t */", "-\t\t\tif (!returnValue.containsObject(baseAttributes[i])) {", "-\t\t\t\treturnValue.addObject(baseAttributes[i]);", "-\t\t\t}", "+\t\t\treturnValue.addObject(baseAttributes[i]);"]}], "num": 51029}