{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7916c6b9983bfe184230033e5a5b0c5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c66c9842705496894491c2411f9f5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  void fillPattern(NSBezierPath path, Pattern pattern)", "signatureAfterChange": "  void fillPattern(NSBezierPath path, Pattern pattern)", "diff": ["-\tfloat /*double*/ difx = end.x - start.x;", "-\tfloat /*double*/ dify = end.y - start.y;", "+\tdouble /*float*/ difx = end.x - start.x;", "+\tdouble /*float*/ dify = end.y - start.y;", "-\t\tfloat /*double*/ [] color = pattern.color1;\t\t", "+\t\tdouble /*float*/ [] color = pattern.color1;\t\t", "-\tfloat /*double*/ startx, starty, endx, endy;", "+\tdouble /*float*/ startx, starty, endx, endy;", "-\t\tfloat /*double*/ m = (end.y-start.y)/(end.x - start.x);", "-\t\tfloat /*double*/ b = end.y - (m * end.x);", "-\t\tfloat /*double*/ m2 = -1/m; //perpendicular slope", "-\t\tfloat /*double*/ b2 = bounds.y - (m2 * bounds.x);", "+\t\tdouble /*float*/ m = (end.y-start.y)/(end.x - start.x);", "+\t\tdouble /*float*/ b = end.y - (m * end.x);", "+\t\tdouble /*float*/ m2 = -1/m; //perpendicular slope", "+\t\tdouble /*float*/ b2 = bounds.y - (m2 * bounds.x);", "-\t\tfloat /*double*/ x2 = (b - b2) / (m2 - m);", "+\t\tdouble /*float*/ x2 = (b - b2) / (m2 - m);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0baddc16de2299d367aeefbdec06b0f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  NSAutoreleasePool checkGC (int mask)", "signatureAfterChange": "  NSAutoreleasePool checkGC (int mask)", "diff": ["-\t\t\t\t\tfloat /*double*/ userSpaceScaleFactor = view.window().userSpaceScaleFactor();", "+\t\t\t\t\tdouble /*float*/ userSpaceScaleFactor = view.window().userSpaceScaleFactor();", "-\t\t\tfloat /*double*/ [] color = data.foreground;", "+\t\t\tdouble /*float*/ [] color = data.foreground;", "-\t\t\tfloat /*double*/ [] color = data.foreground;", "+\t\t\tdouble /*float*/ [] color = data.foreground;", "-\t\t\tfloat /*double*/ [] color = data.background;", "+\t\t\tdouble /*float*/ [] color = data.background;", "-\t\t\tfloat /*double*/[] lengths = new float /*double*/[dashes.length];", "+\t\t\tdouble /*float*/[] lengths = new double /*float*/[dashes.length];", "-\t\tfloat /*double*/ scaling = size.width;", "+\t\tdouble /*float*/ scaling = size.width;", "-\t\tfloat /*double*/ strokeWidth = data.lineWidth * scaling;", "+\t\tdouble /*float*/ strokeWidth = data.lineWidth * scaling;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16e269156ba56cd0d0dffb67a288c48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  NSBezierPath createNSBezierPath (int  cgPath)", "signatureAfterChange": "  NSBezierPath createNSBezierPath (long  cgPath)", "diff": ["-NSBezierPath createNSBezierPath (int /*long*/  cgPath) {", "+NSBezierPath createNSBezierPath (long /*int*/  cgPath) {", "-\tint /*long*/  proc = callback.getAddress();", "+\tlong /*int*/  proc = callback.getAddress();", "-\tpoints = new float /*double*/ [count];", "-\tpoint = new float /*double*/ [6];", "+\tpoints = new double /*float*/ [count];", "+\tpoint = new double /*float*/ [6];", "-\t\t\t\tfloat /*double*/ currentX = nsPoint.x;", "-\t\t\t\tfloat /*double*/ currentY = nsPoint.y;", "+\t\t\t\tdouble /*float*/ currentX = nsPoint.x;", "+\t\t\t\tdouble /*float*/ currentY = nsPoint.y;", "-\t\t\t\tfloat /*double*/ x0 = currentX;", "-\t\t\t\tfloat /*double*/ y0 = currentY;", "-\t\t\t\tfloat /*double*/ cx1 = x0 + 2 * (nsPoint2.x - x0) / 3;", "-\t\t\t\tfloat /*double*/ cy1 = y0 + 2 * (nsPoint2.y - y0) / 3;", "-\t\t\t\tfloat /*double*/ cx2 = cx1 + (nsPoint.x - x0) / 3;", "-\t\t\t\tfloat /*double*/ cy2 = cy1 + (nsPoint.y - y0) / 3;", "+\t\t\t\tdouble /*float*/ x0 = currentX;", "+\t\t\t\tdouble /*float*/ y0 = currentY;", "+\t\t\t\tdouble /*float*/ cx1 = x0 + 2 * (nsPoint2.x - x0) / 3;", "+\t\t\t\tdouble /*float*/ cy1 = y0 + 2 * (nsPoint2.y - y0) / 3;", "+\t\t\t\tdouble /*float*/ cx2 = cx1 + (nsPoint.x - x0) / 3;", "+\t\t\t\tdouble /*float*/ cy2 = cy1 + (nsPoint.y - y0) / 3;"]}], "num": 43613}