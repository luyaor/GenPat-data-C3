{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af5f5f5109225b1318219a5b32f3e2fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99f562fa19c4bcd00e4206394754772a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1abca3de880ca8fa3712038f321ffb3a0803dd38", "commitAfterChange": "1fcdb5569a20cdd8ecab2986180db47c5142ee2d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\tif (length == 0) return 0;", "+\tif (forward && offset == length) return length;", "+\tif (!forward && offset == 0) return 0;", "+\tint step = forward ? 1 : -1;", "+\tif ((movement & SWT.MOVEMENT_CHAR) != 0) return offset + step;", "-\t\tcase SWT.MOVEMENT_CLUSTER://TODO cluster", "-\t\tcase SWT.MOVEMENT_CHAR: {", "-\t\t\t\tif (forward) {", "-\t\t\t\t\tif (offset < length) offset++;", "-\t\t\t\t} else {", "-\t\t\t\t\tif (offset > 0) offset--;", "+\t\tcase SWT.MOVEMENT_CLUSTER:", "+\t\t\t//TODO cluster", "+\t\t\toffset += step;", "+\t\t\tif (0 <= offset && offset < length) {", "+\t\t\t\tchar ch = text.charAt(offset);", "+\t\t\t\tif (0xDC00 <= ch && ch <= 0xDFFF) {", "+\t\t\t\t\tif (offset > 0) {", "+\t\t\t\t\t\tch = text.charAt(offset - 1);", "+\t\t\t\t\t\tif (0xD800 <= ch && ch <= 0xDBFF) {", "+\t\t\t\t\t\t\toffset += step;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "-\t\t\t\treturn offset;", "-\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac17446b6fccc1feb0d8b807842a4909", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4b1109db58ecb9bb9b1b51bb55e420f663b89727", "commitAfterChange": "a38cdec12de35954521831ad0e8e78895c25ed1c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["+\tlength = translateOffset(length);", "-\t\t\tif (forward) {", "-\t\t\t\toffset++;", "-\t\t\t} else {", "-\t\t\t\toffset--;", "-\t\t\t}", "-\t\t\treturn Math.max(0, Math.min(length, untranslateOffset(offset)));", "+\t\t\tboolean invalid = false;", "+\t\t\tdo {", "+\t\t\t\tint newOffset = offset;", "+\t\t\t\tif (forward) {", "+\t\t\t\t\tif (newOffset < length) newOffset++;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (newOffset > 0) newOffset--;", "+\t\t\t\t}", "+\t\t\t\tif (newOffset == offset) break;", "+\t\t\t\toffset = newOffset;", "+\t\t\t\tinvalid = false;", "+\t\t\t\tif (invalidOffsets != null) {", "+\t\t\t\t\tfor (int i = 0; i < invalidOffsets.length; i++) {", "+\t\t\t\t\t\tif (offset == invalidOffsets[i]) {", "+\t\t\t\t\t\t\tinvalid = true;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} while (invalid);", "+\t\t\treturn untranslateOffset(offset);", "-\t\tdefault:", "-\t\t\tbreak;", "-\treturn -1;", "+\treturn untranslateOffset(offset);"]}], "num": 17627}