{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2547d3590d70db753cd5e45cd0b767a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91ecde6e878e9514708c7abdc7cb2fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "ed30b41a9f49fdd9292a9997223e42cf5d5f4c63", "commitAfterChange": "3f829157e84e6f42e86ed587cb5458d2e969dac6", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 21, "signatureBeforeChange": " void setScrollbarVisible (ScrollBar bar, boolean visible)", "signatureAfterChange": " void manageChildren ()", "diff": ["+void manageChildren () {", "+\tif (focusHandle != 0) {\t", "+\t\tOS.XtSetMappedWhenManaged (focusHandle, false);", "+\t\tOS.XtManageChild (focusHandle);", "+\t}", "+\tsuper.manageChildren ();", "+\tif (focusHandle != 0) {", "+\t\tOS.XtConfigureWidget(focusHandle, 0, 0, 1, 1, 0);", "+\t\tOS.XtSetMappedWhenManaged (focusHandle, true);", "+\t}", "+}", "-void setScrollbarVisible (ScrollBar bar, boolean visible) {", "-\t/*", "-\t* Feature in Motif.  When XtManageChild() is used to", "-\t* show or hide a scroll bar and the composite that", "-\t* owns the scroll bars has focus and also has a child", "-\t* that would take focus, Motif assigns focus to the", "-\t* child.  The fix is to detect the case and temporarily", "-\t* turn traversal off for the children of the composite", "-\t* so that Motif will leave focus on the composite.", "-\t*/", "-\tif (!hasFocus ()) {", "-\t\tsuper.setScrollbarVisible (bar, visible);", "-\t\treturn;", "-\t}", "-\tControl [] children = _getChildren ();", "-\tint [] traversals = new int [children.length];", "-\tint [] argList = new int [] {OS.XmNtraversalOn, 0};", "-\tfor (int i=0; i<children.length; i++) {", "-\t\tint childHandle = children [i].topHandle ();", "-\t\tOS.XtGetValues (childHandle, argList, argList.length / 2);", "-\t\tif ((traversals [i] = argList [1]) != 0) {", "-\t\t\targList [1] = 0;", "-\t\t\tOS.XtSetValues (children [i].handle, argList, argList.length / 2);", "-\t\t}", "-\t}", "-\tsuper.setScrollbarVisible (bar, visible);", "-\tfor (int i=0; i<children.length; i++) {", "-\t\targList [1] = traversals [i];", "-\t\tControl control = children [i];", "-\t\tif (!control.isDisposed ()) {", "-\t\t\tint childHandle = control.topHandle ();", "-\t\t\tOS.XtSetValues (childHandle, argList, argList.length / 2);", "-\t\t\tif (argList [1] != 0) control.overrideTranslations ();", "-\t\t}", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "806dc48c0222f412dca19760d9627d3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "c75e5a46dfa5a6ae2936deb92a731d55f2e06f9e", "commitAfterChange": "68f98f0eeeef8db0fe30e20d0e3f84de07e79333", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " void setScrollbarVisible (ScrollBar bar, boolean visible)", "signatureAfterChange": " void setScrollbarVisible (ScrollBar bar, boolean visible)", "diff": ["-\t* Bug in Motif.  When XtDestroyWidget() is called from", "-\t* within a FocusOut event handler, Motif GP's.  The fix", "-\t* is to post focus events and run them when the handler", "-\t* has returned.", "+\t* Feature in Motif.  When XtManageChild() is used to", "+\t* show or hide a scroll bar and the composite that", "+\t* owns the scroll bars has focus and also has a child", "+\t* that would take focus, Motif assigns focus to the", "+\t* child.  The fix is to detect the case and temporarily", "+\t* turn traversal off for the children of the composite", "+\t* so that Motif will leave focus on the composite.", "-\tDisplay display = getDisplay ();", "-\tboolean oldFocusOut = display.postFocusOut;", "+\tif (!hasFocus ()) {", "+\t\tsuper.setScrollbarVisible (bar, visible);", "+\t\treturn;", "+\t}", "-\t\t\tif (!children[i].hasFocus ()) {", "-\t\t\t\targList [1] = 0;", "-\t\t\t\tdisplay.postFocusOut = true;", "-\t\t\t\tOS.XtSetValues (children [i].handle, argList, argList.length / 2);", "-\t\t\t}", "+\t\t\targList [1] = 0;", "+\t\t\tOS.XtSetValues (children [i].handle, argList, argList.length / 2);", "-\tdisplay.postFocusOut = oldFocusOut;", "-\tif (!display.postFocusOut) display.runFocusOutEvents ();"]}], "num": 18103}