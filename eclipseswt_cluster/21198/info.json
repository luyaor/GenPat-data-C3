{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b0ffa6bc34d1c578e6cf47d58728e56", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ccf1a7071a0253a36a9cc27f723e3cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "6ecd25119dc9e10cc1e71671e946417df246d260", "commitAfterChange": "9ce9802fd45008b10ebdc4f00df4632b23f5e8eb", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public Rectangle getImageBounds (int columnIndex)", "signatureAfterChange": " public Rectangle getImageBounds (int columnIndex)", "diff": ["-", "-\tif (image == null) {", "-\t\tint width = 0;", "-\t\t/* for ordered column 0, image space is reserved even for null images */", "-\t\tif (orderedIndex == 0) width = parent.orderedCol0imageWidth;\t", "-\t\treturn new Rectangle (startX, y + padding, width, imageSpaceY);", "-\t}", "-", "-\tRectangle imageBounds = image.getBounds ();", "-\tint drawWidth;", "+\tint drawWidth = 0;", "-\t\tdrawWidth = imageBounds.width;", "+\t\tif (image != null) drawWidth = image.getBounds ().width;", "-\tint drawHeight = Math.min (imageSpaceY, imageBounds.height);", "-\treturn new Rectangle (", "-\t\tstartX, y + (itemHeight - drawHeight) / 2,", "-\t\tdrawWidth, drawHeight);", "+\treturn new Rectangle (startX, y + padding, drawWidth, imageSpaceY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc871d494c8d5f5e63152a3538fa8d7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6ecd25119dc9e10cc1e71671e946417df246d260", "commitAfterChange": "9ce9802fd45008b10ebdc4f00df4632b23f5e8eb", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public Rectangle getImageBounds (int columnIndex)", "signatureAfterChange": " public Rectangle getImageBounds (int columnIndex)", "diff": ["-\tif (image == null) {", "-\t\treturn new Rectangle (startX, y + padding, 0, imageSpaceY);", "-\t}", "-\t", "-\tRectangle imageBounds = image.getBounds ();", "-\t/* ", "-\t * For column 0 all images have the same width, which may be larger or smaller", "-\t * than the image to be drawn here.  Therefore the image bounds to draw must be", "-\t * specified.", "-\t */", "-\tint drawWidth;", "+\tint drawWidth = 0;", "-\t\tint imageSpaceX = parent.col0ImageWidth;", "-\t\tdrawWidth = Math.min (imageSpaceX, imageBounds.width);", "+\t\t/* for column 0 all images have the same width */", "+\t\tdrawWidth = parent.col0ImageWidth;", "-\t\tdrawWidth = imageBounds.width;", "+\t\tif (image != null) drawWidth = image.getBounds ().width;", "-\tint drawHeight = Math.min (imageSpaceY, imageBounds.height);", "-\treturn new Rectangle (", "-\t\tstartX, y + (itemHeight - drawHeight) / 2,", "-\t\tdrawWidth, drawHeight);", "+\treturn new Rectangle (startX, y + padding, drawWidth, imageSpaceY);"]}], "num": 21198}