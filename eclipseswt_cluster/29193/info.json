{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0755a8ea26edc3f608df705349cf3c38", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "149df57a6dbb034e0591ef62f11f2116", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " Control [] _getChildren ()", "signatureAfterChange": "  Control [] _getChildren ()", "diff": ["+", "-\tshort[] cnt= new short[1];", "-\tOS.CountSubControls(handle, cnt);", "-\tint count= cnt[0];", "-\tif (count == 0) return new Control [0];", "-\tint[] outControl= new int[1];", "-\tControl [] children = new Control [count];", "+\tshort [] count = new short [1];", "+\tOS.CountSubControls (handle, count);", "+\tif (count [0] == 0) return new Control [0];", "+\tControl [] children = new Control [count [0]];", "+\tint [] outControl= new int [1];", "-\twhile (i < count) {", "-\t\tif (MacUtil.getChild(handle, outControl, count, i) != OS.kNoErr)", "-\t\t\terror (SWT.ERROR_CANNOT_GET_ITEM);", "-\t\tint handle = outControl [0];", "-\t\tif (handle != 0) {", "-\t\t\tWidget widget = WidgetTable.get (handle);", "+\twhile (i < count [0]) {", "+\t\tint status = OS.GetIndexedSubControl (handle, (short)(i+1), outControl);", "+\t\tif (status == OS.noErr) {", "+\t\t\tWidget widget = WidgetTable.get (outControl [0]);", "-\tif (i == j) return children;", "+\tif (j == count [0]) return children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710b8b8345c8bb069390e1865ca0dc7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 115, "signatureBeforeChange": " void setZOrder (Control control, boolean above)", "signatureAfterChange": "  void setZOrder (Control control, boolean above)", "diff": ["+", "-\t", "-\tif (control != null && control.parent != parent) return;", "-\t", "-\tint thisHandle= topHandle();", "-\tif (parent == null)", "-\t\terror (SWT.ERROR_INVALID_PARENT);", "-\tint destHandle= parent.handle;", "-\tint otherHandle= 0;", "-\tif (control != null)", "-\t\totherHandle= control.topHandle();", "-\t\t", "-\t// AW: doesn't handle reparenting case yet!", "-\tOS.HIViewSetZOrder(thisHandle, above ? OS.kHIViewZOrderAbove : OS.kHIViewZOrderBelow, otherHandle);", "+\tint inOp = above ?  OS.kHIViewZOrderBelow :  OS.kHIViewZOrderAbove;", "+\tint inOther = control == null ? 0 : control.topHandle ();", "+\tOS.HIViewSetZOrder (topHandle (), inOp, inOther);"]}], "num": 29193}