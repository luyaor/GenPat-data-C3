{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46df1d225ac540af035ffa20749f8f90", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858fc3867b99cd0828630cd39ee2f870", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0aeae037b40ae3633eee47680185432adda44201", "commitAfterChange": "9d2452cf08dad914b637c1b1e5dd72e4544a4953", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void dispose()", "signatureAfterChange": " public void dispose()", "diff": ["-\t/*", "-\t* The only way for pens and brushes to get", "-\t* selected into the HDC is for the receiver to", "-\t* create them. When we are destroying the", "-\t* hDC we also destroy any pens and brushes that", "-\t* we have allocated. This code assumes that it ", "-\t* is OK to delete stock objects. This will ", "-\t* happen when a GC is disposed and the user has ", "-\t* not caused new pens or brushes to be allocated.", "-\t*/", "-\tif (data.foreground != -1) {", "+\t/* Select stock pen and brush objects and free resources */", "+\tif (data.hPen != 0) {", "-\t\tint oldPen = OS.SelectObject(handle, nullPen);", "-\t\tOS.DeleteObject(oldPen);", "+\t\tOS.SelectObject(handle, nullPen);", "+\t\tOS.DeleteObject(data.hPen);", "+\t\tdata.hPen = 0;", "-\tif (data.background != -1) {", "+\tif (data.hBrush != 0) {", "-\t\tint oldBrush = OS.SelectObject(handle, nullBrush);", "-\t\tOS.DeleteObject(oldBrush);", "+\t\tOS.SelectObject(handle, nullBrush);", "+\t\tOS.DeleteObject(data.hBrush);", "+\t\tdata.hBrush = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "594c97c65be706e538fc87115c193fe6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "98c6f69fa8161c32de538e355728bb324ae2b917", "commitAfterChange": "2e45d5416828f3b0bb52adac29f41e56427dcb88", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  void setCGClipping ()", "signatureAfterChange": "  void setCGClipping ()", "diff": ["+\tdata.updateClip = false;", "-\tRect rect = new Rect();", "-\tOS.GetControlBounds(data.control, rect);", "-\tRect portRect = new Rect();", "-\tOS.GetPortBounds(port, portRect);", "-\tint portHeight = portRect.bottom - portRect.top;", "-\tOS.CGContextTranslateCTM(handle, -rect.left, portHeight - rect.top);", "+\tRect portRect = data.portRect;", "+\tRect rect = data.controlRect;", "+\tOS.CGContextTranslateCTM(handle, -rect.left, (portRect.bottom - portRect.top) - rect.top);", "+\tOS.GetPortBounds(port, portRect);", "+\tOS.GetControlBounds(data.control, rect);", "-\tOS.CGContextTranslateCTM(handle, rect.left, -portHeight + rect.top);", "+\tOS.CGContextTranslateCTM(handle, rect.left, -(portRect.bottom - portRect.top) + rect.top);"]}], "num": 49165}