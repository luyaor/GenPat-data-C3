{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05881d27b62bd08bd7312c40608fe844", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f379cdcc74b7e911cb8189d8a8cf4b19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "24afc87cb602db2d27627c2dd7cd871761d9fed7", "commitAfterChange": "4451ea47bf3285433bb2fdce9fc84543d1e914d3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " String openChooserDialog ()", "signatureAfterChange": " String openChooserDialog ()", "diff": ["-\t\tif (folder == 0) {", "-\t\t\tOS.gtk_widget_destroy (handle);", "-\t\t\treturn null;", "-\t\t}", "-\t\tint length = OS.strlen (folder);", "-\t\tbyte [] buffer = new byte [length];", "-\t\tOS.memmove (buffer, folder, length);", "+\t\tOS.gtk_widget_destroy (handle);", "+\t\tif (folder == 0) return null;", "+\t\tint /*long*/ utf8Ptr = OS.g_filename_to_utf8 (folder, -1, null, null, null);", "-\t\tanswer = new String (Converter.mbcsToWcs (null, buffer));", "+\t\tif (utf8Ptr == 0) return null;", "+\t\tint /*long*/ [] items_written = new int /*long*/ [1];", "+\t\tint /*long*/ utf16Ptr = OS.g_utf8_to_utf16 (utf8Ptr, -1, null, items_written, null);", "+\t\tOS.g_free (utf8Ptr);", "+\t\tif (utf16Ptr == 0) return null;", "+\t\tint clength = (int)/*64*/items_written [0];", "+\t\tchar [] chars = new char [clength];", "+\t\tOS.memmove (chars, utf16Ptr, clength * 2);", "+\t\tOS.g_free (utf16Ptr);", "+\t\tanswer = new String (chars);", "+\t\treturn answer;", "-\treturn answer;", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3541dfc0fbc662efa546bc2ae83054f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "da194abf36dfeaf1cef432501bc0d6c396c87dde", "commitAfterChange": "21af898a5d6ec508de2042508e5800867bc3cbcd", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " private boolean saveToStorageFile(File file)", "signatureAfterChange": " private boolean saveToStorageFile(File file)", "diff": ["-\t// Note: if the file already exists, some applications will not overwrite the file", "-\t// In these cases, you should delete the file first (probably save the contents of the file in case the", "-\t// save fails)", "-\tif (file == null || file.isDirectory())", "-\t\treturn false;", "-\t\t", "-\tif (!updateStorage())", "-\t\treturn false;", "-\t", "-\t// get access to the persistant storage mechanism", "-\tint[] address = new int[1];", "-\tif (objIOleObject.QueryInterface(COM.IIDIPersistStorage, address) != COM.S_OK)", "-\t\treturn false;", "-\tIPersistStorage permStorage = new IPersistStorage(address[0]);", "-\t", "-", "-\tboolean success = false;", "-\tOleFile oleFile = new OleFile(file, null, OleFile.WRITE);", "-\tIStorage storage = oleFile.getRootStorage();", "-\tstorage.AddRef();", "-\tif (COM.OleSave(permStorage.getAddress(), storage.getAddress(), false) == COM.S_OK) {", "-\t\tif (storage.Commit(COM.STGC_DEFAULT) == COM.S_OK)", "-\t\t\tsuccess = true;", "-\t}", "-\tstorage.Release();", "-\toleFile.dispose();", "-\tpermStorage.Release();", "+\t// Note: if the file already exists, some applications will not overwrite the file", "+\t// In these cases, you should delete the file first (probably save the contents of the file in case the", "+\t// save fails)", "+\tif (file == null || file.isDirectory()) return false;", "+\tif (!updateStorage()) return false;", "-\treturn success;", "+\t// get access to the persistant storage mechanism", "+\tint[] address = new int[1];", "+\tif (objIOleObject.QueryInterface(COM.IIDIPersistStorage, address) != COM.S_OK) return false;", "+\tIPersistStorage permStorage = new IPersistStorage(address[0]);", "+\ttry {", "+\t\taddress = new int[1];", "+\t\tchar[] path = (file.getAbsolutePath()+\"\\0\").toCharArray();", "+\t\tint mode = COM.STGM_TRANSACTED | COM.STGM_READWRITE | COM.STGM_SHARE_EXCLUSIVE | COM.STGM_CREATE;", "+\t\tint result = COM.StgCreateDocfile(path, mode, 0, address); //Does an AddRef if successful", "+\t\tif (result != COM.S_OK) return false;", "+\t\tIStorage storage =  new IStorage(address[0]);", "+\t\ttry {", "+\t\t\tif (COM.OleSave(permStorage.getAddress(), storage.getAddress(), false) == COM.S_OK) {", "+\t\t\t\tif (storage.Commit(COM.STGC_DEFAULT) == COM.S_OK) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tstorage.Release();", "+\t\t}", "+\t} finally {", "+\t\tpermStorage.Release();", "+\t}", "+\treturn false;"]}], "num": 46244}