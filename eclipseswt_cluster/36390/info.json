{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1f41a49e49a74b9533bbce2f91aec0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cff4b08c59e109e067463138bc080a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c839d5daedccbcd6f6eb7787d9475744709a184b", "commitAfterChange": "df770484cf971bd1ec66ac250146e0aa48f0618e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void open ()", "signatureAfterChange": " public void open ()", "diff": ["-\t* bar does not get updated until a new icon is set into the", "-\t* window or the window text is changed.  The fix is to call", "-\t* PeekMessage() with the flag PM_NOREMOVE to touch the event", "-\t* queue but not dispatch events.", "+\t* bar does not get updated.  The fix is to call PeekMessage()", "+\t* with the flag PM_NOREMOVE and PM_QS_SENDMESSAGE to respond", "+\t* to a cross thread WM_GETICON.", "+\t* ", "+\t* NOTE: This allows other cross thread messages to be delivered,", "+\t* most notably WM_ACTIVATE.", "-\tOS.PeekMessage (msg, 0, 0, 0, OS.PM_NOREMOVE | OS.PM_NOYIELD);", "+\tint flags = OS.PM_NOREMOVE | OS.PM_NOYIELD | OS.PM_QS_SENDMESSAGE;", "+\tOS.PeekMessage (msg, 0, 0, 0, flags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec3dc79a2197c73121b497f721703b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "37c6f595080f964b1fa474fa272a079a299b0b8b", "commitAfterChange": "30d92a134934e78b62c620c26855c53f7e6957ca", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\tOS.SetRect(rect, x, y, 0x7FFF, 0x7FFF);", "+\t/*", "+\t* Note that the maximum value of each rectangle coordinate", "+\t* is different on various platforms. On Win95, the limit is", "+\t* 0x7FFF. On Win2k and WinNT, it is 0x6FFFFFF. And on WinXp,", "+\t* it is 0x7FFFFFFF.", "+\t*/", "+\tint limit = OS.IsWin95 ? 0x7FFF : 0x6FFFFFF;", "+\tOS.SetRect(rect, x, y, limit, limit);"]}], "num": 36390}