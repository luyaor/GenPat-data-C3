{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0f9ed3069864596dd368825e3525a93", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c9715f7bc064bfd1a5970a058a27b96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "0fe0e789edc99baaa0ef377f6d40692c6b08f013", "commitAfterChange": "b1cc243c2a014d8968b54382daf6c28f7205ac7f", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 36, "signatureBeforeChange": "  int update (int value, boolean notify, boolean force)", "signatureAfterChange": "  int setSelection (int value, boolean clamp, boolean notify)", "diff": ["+", "+int setSelection (int value, boolean clamp, boolean notify) {", "+\tif (clamp) {", "+\t\tint [] max = new int [1], min = new int [1];", "+\t\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "+\t\tvalue = Math.min (Math.max (min [0], value), max [0]);", "+\t}", "+\tOS.SendMessage (hwndUpDown , OS.IsWinCE ? OS.UDM_SETPOS : OS.UDM_SETPOS32, 0, value);", "+\tString oldText = String.valueOf (value);", "+\tint length = OS.GetWindowTextLength (hwndText);", "+\tString newText = verifyText (oldText, 0, length, null, false);", "+\tif (newText != null) {", "+\t\tTCHAR buffer = new TCHAR (getCodePage (), newText, true);", "+\t\tOS.SetWindowText (hwndText, buffer);", "+\t}", "+\tif (notify) postEvent (SWT.Selection);", "+\treturn value;", "-int update (int value, boolean notify, boolean force) {", "-\tint [] max = new int [1], min = new int [1];", "-\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "-\tif (value < min [0]) {", "-\t\tvalue = (style & SWT.WRAP) != 0 ? max [0] : min [0];", "-\t}", "-\tif (value > max [0]) {", "-\t\tvalue = (style & SWT.WRAP) != 0 ? min [0] : max [0];", "-\t}", "-\tint pos;", "-\tif (OS.IsWinCE) {", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xffff;", "-\t} else {", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS32, 0, 0);", "-\t}", "-\tif (pos != value || force) {", "-\t\tOS.SendMessage (hwndUpDown , OS.IsWinCE ? OS.UDM_SETPOS : OS.UDM_SETPOS32, 0, value);", "-\t\tString string = String.valueOf (value);", "-\t\tint length = OS.GetWindowTextLength (hwndText);", "-\t\tstring = verifyText (string, 0, length, null);", "-\t\tif (string != null) {", "-\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, true);", "-\t\t\tOS.SetWindowText (hwndText, buffer);", "-\t\t}", "-\t\tif (notify) {", "-\t\t\tpostEvent (SWT.Selection);", "-\t\t}", "-\t}", "-\treturn value;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10c2becabc3a7987c2f195181aa8abf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  boolean hooksKeys ()", "diff": ["-void hookEvents () {", "-\tsuper.hookEvents ();", "-\tif ((state & CANVAS) != 0) {", "-        /* AW", "-\t\tint windowProc = getDisplay ().windowProc;", "-\t\tOS.XtAddEventHandler (handle, 0, true, windowProc, -1);", "-        */", "-\t\tDisplay display= getDisplay();\t\t", "-\t\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneDrawProcTag, display.fUserPaneDrawProc);", "-\t\tOS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneHitTestProcTag, display.fUserPaneHitTestProc);", "-", "-", "-\t\tif (MacUtil.HIVIEW) {", "-\t\t\t// OS.SetControlData(handle, OS.kControlEntireControl, OS.kControlUserPaneTrackingProcTag, display.fUserPaneTrackingProc);", "-\t\t\tint ref= OS.GetControlEventTarget(handle);", "-\t\t\tint[] mask= new int[] {", "-\t\t\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "-\t\t\t\tOS.kEventClassMouse, OS.kEventMouseWheelMoved,", "-\t\t\t};", "-\t\t\tOS.InstallEventHandler(ref, display.fMouseProc, mask, handle);", "+", "+boolean hooksKeys () {", "+\treturn hooks (SWT.KeyDown) || hooks (SWT.KeyUp) || hooks (SWT.Traverse);", "+}"]}], "num": 1367}