{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4db52f22953505f7c92b17dd49cb503", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2547713813b0d9397f44a38b56fe322a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "commitAfterChange": "f5b51f9fa78317c0ef2a0858063080d8888cb01d", "methodNumberBeforeChange": 348, "methodNumberAfterChange": 348, "signatureBeforeChange": " \tint get_textAfterOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "signatureAfterChange": " \tint get_textAfterOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "diff": ["-\t\tevent.end = event.start == charCount ? event.start : event.start + 1;", "+\t\tevent.end = event.start;", "+\t\tint eventStart = event.start;", "+\t\tint eventEnd = event.end;", "+\t\t}", "+\t\tif (event.end < charCount) {", "+\t\t\tswitch (boundaryType) {", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_WORD:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_SENTENCE:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_PARAGRAPH:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_LINE:", "+\t\t\t\t\tint start = event.start;", "+\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\tevent.count = 2;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\tevent.start = start;", "+\t\t\t\t\tevent.type = COM.IA2_TEXT_BOUNDARY_ALL;", "+\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3db65a98aaa14bf602438c7aa75dcef1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "commitAfterChange": "f5b51f9fa78317c0ef2a0858063080d8888cb01d", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": " \tint get_textBeforeOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "signatureAfterChange": " \tint get_textBeforeOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "diff": ["-\t\tevent.end = event.start == charCount ? event.start : event.start + 1;", "+\t\tevent.end = event.start;", "+\t\tint eventStart = event.start;", "+\t\tint eventEnd = event.end;", "+\t\t}", "+\t\tif (event.end < charCount) {", "+\t\t\tswitch (boundaryType) {", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_WORD:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_SENTENCE:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_PARAGRAPH:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_LINE:", "+\t\t\t\t\tint start = event.start;", "+\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\tevent.start = start;", "+\t\t\t\t\tevent.type = COM.IA2_TEXT_BOUNDARY_ALL;", "+\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90de5623ef6feba70a7daf9b3a2628c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "commitAfterChange": "f5b51f9fa78317c0ef2a0858063080d8888cb01d", "methodNumberBeforeChange": 349, "methodNumberAfterChange": 349, "signatureBeforeChange": " \tint get_textAtOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "signatureAfterChange": " \tint get_textAtOffset(int offset, int boundaryType, int pStartOffset, int pEndOffset, int pbstrText)", "diff": ["-\t\tevent.end = event.start == charCount ? event.start : event.start + 1;", "+\t\tevent.end = event.start;", "+\t\tint eventStart = event.start;", "+\t\tint eventEnd = event.end;", "+\t\tif (event.end < charCount) {", "+\t\t\tswitch (boundaryType) {", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_WORD:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_SENTENCE:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_PARAGRAPH:", "+\t\t\t\tcase COM.IA2_TEXT_BOUNDARY_LINE:", "+\t\t\t\t\tint start = event.start;", "+\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\tevent.count = 1;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\tevent.start = start;", "+\t\t\t\t\tevent.type = COM.IA2_TEXT_BOUNDARY_ALL;", "+\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 49408}