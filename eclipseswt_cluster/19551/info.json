{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "145b713db44e32a1b59c832d50a0b5c4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963297dcb260f4fb685fe960d2974f99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "72353ac7f94b26380383764a3b22b9ce8d44a91e", "commitAfterChange": "5b05aa6f4689e570a02934dff54fc1aa76a4eafb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["-\t\t\t\tif ((style & SWT.MULTI) != 0) selected = true;", "-\t\t\t\tif ((style & SWT.CHECK) != 0) {", "-\t\t\t\t\tdouble [] px = new double [1], py = new double [1];", "-\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "-\t\t\t\t\tint x = (int) (px [0]);", "-\t\t\t\t\tint y = (int) (py [0]);", "-\t\t\t\t\tif (y > 0) {", "-\t\t\t\t\t\tint [] row = new int [1], column = new int [1];", "-\t\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {\t", "-\t\t\t\t\t\t\tint nX = OS.GTK_CLIST_HOFFSET (handle) + 4;", "-\t\t\t\t\t\t\tint nY = OS.GTK_CLIST_VOFFSET (handle) + (OS.GTK_CLIST_ROW_HEIGHT (handle) + 1) * row [0] + 2;", "-\t\t\t\t\t\t\tint [] check_width = new int [1], check_height = new int [1];", "-\t\t\t\t\t\t\tOS.gdk_drawable_get_size (check, check_width, check_height);", "-\t\t\t\t\t\t\tif (nX <= x && x <= nX + check_width [0]) {", "-\t\t\t\t\t\t\t\tif (nY <= y && y <= nY + check_height [0]) {", "-\t\t\t\t\t\t\t\t\tTableItem item = items [row [0]];", "-\t\t\t\t\t\t\t\t\tbyte [] spacing = new byte [1];", "-\t\t\t\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "-\t\t\t\t\t\t\t\t\tOS.gtk_clist_get_pixtext (handle, row [0], 0, null, spacing, pixmap, mask);", "-\t\t\t\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, item.getText (), true);", "-\t\t\t\t\t\t\t\t\tpixmap [0] = pixmap [0] == check ? uncheck : check;", "-\t\t\t\t\t\t\t\t\tOS.gtk_clist_set_pixtext (handle, row [0], 0, text, spacing [0], pixmap [0], mask [0]);", "-\t\t\t\t\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\t\t\t\t\tevent.detail = SWT.CHECK;", "-\t\t\t\t\t\t\t\t\tevent.item = item;", "-\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tsuper.processMouseDown (int0, int1, int2);", "+\t\t\t\tOS.GTK_CLIST_RESYNC_SELECTION (handle);", "+\t\t\t\t/*", "+\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "+\t\t\t\t* does not issue notification.  The fix is to detect", "+\t\t\t\t* that the mouse was released over a selected item when", "+\t\t\t\t* no selection signal was set and issue a fake selection", "+\t\t\t\t* event.", "+\t\t\t\t*/", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "-\t\t\t\t\t* does not issue notification.  The fix is to detect", "-\t\t\t\t\t* that the mouse was released over a selected item when", "-\t\t\t\t\t* no selection signal was set and issue a fake selection", "-\t\t\t\t\t* event.", "-\t\t\t\t\t*/", "-\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "-\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "-\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "-\t\t\t\t\tint [] row = new int [1], column = new int [1];", "-\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "-\t\t\t\t\t\tint list = OS.GTK_CLIST_SELECTION (handle);", "-\t\t\t\t\t\tif (selected && list != 0) {", "-\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "-\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\tif (selected) {", "+\t\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "+\t\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "+\t\t\t\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\t\t\t\t\tint list = OS.GTK_CLIST_SELECTION (handle);", "+\t\t\t\t\t\t\tif (list != 0) {", "+\t\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "+\t\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "+\t\t\t\t\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\t\t\t\t\tevent.item = items [row [0]];", "+\t\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\tsuper.processMouseUp (int0, int1, int2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41757f1d0ee68fa923636a9f49114667", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b53c6f58164ca4bd4b5c26fa2abcb16f58f59b67", "commitAfterChange": "abcda6211c0bcc3a908332242b9d1409108c82ba", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int processMouseUp (int callData, int arg1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["+int processEvent (int eventNumber, int int0, int int1, int int2) {", "+\tif (eventNumber == 0) {", "+\t\tswitch (OS.GDK_EVENT_TYPE (int0)) {", "+\t\t\tcase OS.GDK_BUTTON_PRESS:", "+\t\t\tcase OS.GDK_2BUTTON_PRESS: {", "+\t\t\t\tif ((style & SWT.MULTI) != 0) selected = true;", "+\t\t\t\tif ((style & SWT.CHECK) != 0) {", "+\t\t\t\t\tdouble [] px = new double [1], py = new double [1];", "+\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\t\t\t\tGtkCList clist = new GtkCList (handle);", "+\t\t\t\t\tint x = (int) (px [0]);", "+\t\t\t\t\tint y = (int) (py [0]) - clist.column_title_area_height;", "+\t\t\t\t\tif (y > 0) {", "+\t\t\t\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {\t", "+\t\t\t\t\t\t\tint nX = clist.hoffset + 4;", "+\t\t\t\t\t\t\tint nY = clist.voffset + (clist.row_height + 1) * row [0] + 2;", "+\t\t\t\t\t\t\tint [] check_width = new int [1], check_height = new int [1];", "+\t\t\t\t\t\t\tOS.gdk_drawable_get_size (check, check_width, check_height);", "+\t\t\t\t\t\t\tif (nX <= x && x <= nX + check_width [0]) {", "+\t\t\t\t\t\t\t\tif (nY <= y && y <= nY + check_height [0]) {", "+\t\t\t\t\t\t\t\t\tTableItem item = items [row [0]];", "+\t\t\t\t\t\t\t\t\tbyte [] spacing = new byte [1];", "+\t\t\t\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "+\t\t\t\t\t\t\t\t\tOS.gtk_clist_get_pixtext (handle, row [0], 0, null, spacing, pixmap, mask);", "+\t\t\t\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, item.getText (), true);", "+\t\t\t\t\t\t\t\t\tpixmap [0] = pixmap [0] == check ? uncheck : check;", "+\t\t\t\t\t\t\t\t\tOS.gtk_clist_set_pixtext (handle, row [0], 0, text, spacing [0], pixmap [0], mask [0]);", "+\t\t\t\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\t\t\t\tevent.detail = SWT.CHECK;", "+\t\t\t\t\t\t\t\t\tevent.item = item;", "+\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase OS.GDK_BUTTON_RELEASE: {", "+\t\t\t\tif ((style & SWT.MULTI) != 0) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "+\t\t\t\t\t* does not issue notification.  The fix is to detect", "+\t\t\t\t\t* that the mouse was released over a selected item when", "+\t\t\t\t\t* no selection signal was set and issue a fake selection", "+\t\t\t\t\t* event.", "+\t\t\t\t\t*/", "+\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "+\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "+\t\t\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\t\t\t\tGtkCList clist = new GtkCList (handle);", "+\t\t\t\t\t\tif (selected && clist.selection != 0) {", "+\t\t\t\t\t\t\tint list = clist.selection;", "+\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "+\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tselected = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+//\t\treturn 1;", "+\t}", "+\treturn super. processEvent (eventNumber, int0, int1, int2);", "+}", "-", "-int processMouseUp (int callData, int arg1, int int2) {", "-\tint result = super.processMouseUp (callData, arg1, int2);", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\t/*", "-\t\t* Feature in GTK.  When an item is reselected, GTK", "-\t\t* does not issue notification.  The fix is to detect", "-\t\t* that the mouse was released over a selected item when", "-\t\t* no selection signal was set and issue a fake selection", "-\t\t* event.", "-\t\t*/", "-\t\tdouble[] px = new double [1], py = new double [1];", "-\t\tOS.gdk_event_get_coords(callData, px, py);", "-\t\tint x = (int) (px[0]), y = (int) (py[0]);", "-\t\tint [] row = new int [1], column = new int [1];", "-\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "-\t\t\tGtkCList clist = new GtkCList (handle);", "-\t\t\tif (selected && clist.selection != 0) {", "-\t\t\t\tint list = clist.selection;", "-\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "-\t\t\t\t\t\tpostEvent (SWT.Selection);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tselected = false;"]}], "num": 19551}