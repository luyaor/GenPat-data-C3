{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cabc0563df3a3da43d8748c4efa707d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc025b9167dcbd0acc488fbdf295237", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "17caf8b5f40adf1530e44958f27621ead405c3d6", "commitAfterChange": "978ea11c631116c3a1a28b676bc6a2629bb2b7fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void addColumn(TreeColumn column)", "signatureAfterChange": " void addColumn(TreeColumn column, int index)", "diff": ["-void addColumn(TreeColumn column) {", "-\tint index = column.getIndex();", "-\t", "+void addColumn(TreeColumn column, int index) {", "-\t/* initialize the new column's x based on its position in the Tree */", "-\tif (index > 0) {", "-\t\tTreeColumn previousColumn = columns [index - 1];", "-\t\tcolumn.setX(previousColumn.getRightmostX());", "-\t}", "-\t", "-\t/* update the index on columns bumped to the right by this new column */", "-\tfor (int i = index + 1; i < columns.length; i++) {", "-\t\tcolumns[i].setIndex(columns[i].getIndex());", "-\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "503b027715886b2e3fe01fda6381cd6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "17caf8b5f40adf1530e44958f27621ead405c3d6", "commitAfterChange": "978ea11c631116c3a1a28b676bc6a2629bb2b7fe", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " void updateColumnWidth (TreeColumn column, int width)", "signatureAfterChange": " void updateColumnWidth (TreeColumn column, int width)", "diff": ["-\tcolumn.internalSetWidth(width);", "-\tint diff = width - oldWidth;", "-\tfor (int i = column.getIndex() + 1; i < columns.length; i++) {", "-\t\tcolumns[i].setX(columns[i].getX() + diff);", "-\t}", "+\tcolumn.width = width;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b4ab0161721ca079f93b40500459ed8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "271ed1c844ca50c299243a268076fdd6a6892082", "commitAfterChange": "4fa97eee183ed5f6552c0fb587b02abe1b40444d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public int getTabHeight()", "signatureAfterChange": "\r public int getTabHeight()", "diff": ["-\tif (fixedTabHeight > 0) return fixedTabHeight;\r", "-\r", "-\tint tempHeight = 0;\r", "-\tGC gc = new GC(this);\r", "-\tfor (int i=0; i < items.length; i++) { \r", "-\t\ttempHeight = Math.max(tempHeight, items[i].preferredHeight(gc));\r", "-\t}\r", "-\tgc.dispose();\r", "-\treturn tempHeight;\r", "+\treturn tabHeight;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "908cdf6e5d91ce4dce14ec7c12c165f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "d2b2731da124108eb5bccfe6363ec342d70dfbc1", "commitAfterChange": "6fa64c0ca137224ae52d6423153f9854a4e2c074", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": "  void releaseWidget ()", "diff": ["-void releaseWidget () {", "-\tint count = OS.SendMessage (handle, OS.TCM_GETITEMCOUNT, 0, 0);", "-\tfor (int i=0; i<count; i++) {", "-\t\tTabItem item = items [i];", "-\t\tif (!item.isDisposed ()) item.releaseResources ();", "-\titems = null;", "+", "+void releaseWidget () {", "+\tsuper.releaseWidget ();", "-\tsuper.releaseWidget ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78e59635beca0a4e40828a12eb8defa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "b4c737594fb0083225a368c66a25f03acbe9515b", "commitAfterChange": "1a49efbb25136d6dfe28f67d55d33796921e91e1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tTextStyle mnemonicStyle = new TextStyle (null, null, null);", "-\tmnemonicStyle.underline = true;", "-\tfor (int i = 0; i < mnemonics.length; i++) {", "-\t\tint mnemonic  = mnemonics [i];", "-\t\tif (mnemonic != -1) {", "-\t\t\tlayout.setStyle (mnemonicStyle, mnemonic, mnemonic);", "-\t\t}", "-\t}", "+\t/*", "+\t* This code is intentionally commented. Mnemonics are ", "+\t* drawn in Macintosh.", "+\t*/", "+//\tTextStyle mnemonicStyle = new TextStyle (null, null, null);", "+//\tmnemonicStyle.underline = true;", "+//\tfor (int i = 0; i < mnemonics.length; i++) {", "+//\t\tint mnemonic  = mnemonics [i];", "+//\t\tif (mnemonic != -1) {", "+//\t\t\tlayout.setStyle (mnemonicStyle, mnemonic, mnemonic);", "+//\t\t}", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696e2328049b1481b811c56044e0c8c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "c4ba93113a54b909b837f2ee93eac0b9faa2deef", "commitAfterChange": "1aabdfcf321362ce14a79dda1cbf06d908949843", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "signatureAfterChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "diff": ["-\tif (hasFocus () && focusIndex != -1) {", "-\t\tRectangle [] rects = getRectangles (focusIndex);", "-\t\tfor (int i = 0; i < rects.length; i++) {", "-\t\t\tRectangle rect = rects [i];", "-//\t\t\tgc.drawFocus (rect.x, rect.y, rect.width, rect.height);\t\t\t\t\t", "-\t\t\tgc.drawRectangle (rect.x, rect.y, rect.width, rect.height);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "092c1a513d777e2e239d454c57a03744", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "17caf8b5f40adf1530e44958f27621ead405c3d6", "commitAfterChange": "978ea11c631116c3a1a28b676bc6a2629bb2b7fe", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " void removeColumn(TreeColumn column)", "signatureAfterChange": " void removeColumn(TreeColumn column)", "diff": ["-\tint width = column.getWidth();", "-\tfor (int i = index + 1; i < numColumns; i++) {", "-\t\tcolumns[i].setX(columns[i].getX() - width);", "-\t}", "+", "-\tcolumn.setIndex(-1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a7ef01246d9f710137fa8d4689b1cfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f487013cbc9e09b4bb7b1f6dbc960ae0afea2553", "commitAfterChange": "90293a77ffa6443efd70a229e16699e67afa7559", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\tif (wParam == 0 || wParam == 1) {", "-\t\t\t\tFont oldFont = getSystemFont ();", "-\t\t\t\tupdateImages ();", "-\t\t\t\tupdateFonts ();", "-\t\t\t\tsendEvent (SWT.Settings, null);", "-\t\t\t\tFont newFont = getSystemFont ();", "-\t\t\t\tShell [] shells = getShells ();", "-\t\t\t\tfor (int i=0; i<shells.length; i++) {", "-\t\t\t\t\tShell shell = shells [i];", "-\t\t\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\t\t\tshell.updateFont (oldFont, newFont);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tif (wParam == 0 || wParam == 1) runSettings ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "408c978295ae1138c158190b83ba2497", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "26b8fef66d19a7c27ba4f57f168ba9cf709084a2", "commitAfterChange": "8023917e1e4a91baff7ca6d6a25b5301647cc521", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\tif ((style & SWT.VIRTUAL) != 0) {", "-\t\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-\t\tselect (hItem, tvItem);", "-\t} else {", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tTreeItem item = items [i];", "-\t\t\tif (item != null) {", "-\t\t\t\ttvItem.hItem = item.handle;", "-\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-\t\t\t}", "-\t\t}", "-\t}", "+\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\tselect (hItem, tvItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5aa65ec00a088021efe1689c11025c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "e02a0d1804fe51e384deff8fc1d1c7d76c883b35", "commitAfterChange": "dd8992109fa30bb57d880152a45ce27990ec959b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void dropDown (boolean drop)", "signatureAfterChange": " void dropDown (boolean drop)", "diff": ["+", "-\tRectangle displayRect = display.getClientArea();", "-\t// Get Monitor for CCombo widget", "-\tMonitor[] monitors = display.getMonitors ();", "-\tif (monitors.length > 1) {", "-\t\tfor (int i = 0; i < monitors.length; i++) {", "-\t\t\tRectangle monitorRect = monitors[i].getClientArea();", "-\t\t\tif (monitorRect.contains(parentRect.x, parentRect.y)) {", "-\t\t\t\tdisplayRect = monitorRect;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "+\tRectangle displayRect = getMonitor().getClientArea();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c57f7fbca4656af81abe5532a3e96d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d73f8f0bcf60169fe33b6dbd2d883c2f48f8638f", "commitAfterChange": "5ce9e32287c36f4649c3c726d93f7ff6e2af5bd1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " void makeDescendentsAvailable (TreeItem item, TreeItem[] descendents)", "signatureAfterChange": " void makeDescendentsAvailable (TreeItem item, TreeItem[] descendents)", "diff": ["-\t", "-\tupdateVerticalBar ();", "-\tint rightX = 0;", "-\tfor (int i = 1; i < descendents.length; i++) {", "-\t\tRectangle bounds = descendents [i].getBounds ();", "-\t\trightX = Math.max (rightX, bounds.x + bounds.width);", "-\t}", "-\tupdateHorizontalBar (rightX, rightX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "341301277a5e5f390fe12b7bb6b47a68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Button.java", "commitBeforeChange": "0461f74b67375ddab2ba44f6763a1f498daff215", "commitAfterChange": "97e38307cc492c75c11b3f0b863d803dfbe32dac", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test_setTextLjava_lang_String()", "signatureAfterChange": "  public void test_setTextLjava_lang_String()", "diff": ["-", "-\tif (performanceTesting) {", "-\t    Performance perf = Performance.getDefault();", "-\t    PerformanceMeter meter =", "-\t       perf.createPerformanceMeter(perf.getDefaultScenarioId(this,\"setText*1000\"));", "-\t    try {", "-\t    \tmeter.start();", "-\t\t\tfor (int i = 0; i < 1000; i++) {", "-\t\t\t\tbutton.setText(\"some name \");", "-\t\t\t}", "-\t\t\tmeter.stop();", "-\t\t\tmeter.commit();", "-\t\t\tperf.assertPerformance(meter);", "-\t    } finally {", "-\t        meter.dispose();", "-\t    }", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b5ddc2d74c2e0c15beb2349d6323ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  Point textExtent ()", "signatureAfterChange": "  Point textExtent ()", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tint [] ptr = new int [1];", "-\t\tOS.GetControlData (labelHandle, (short) 0, OS.kControlStaticTextCFStringTag, 4, ptr, null);", "-\t\tPoint result = parent.textExtent (ptr [0], 0);", "-\t\tif (ptr [0] != 0) OS.CFRelease (ptr [0]);", "-\t\treturn result;", "-\t} else {", "-\t\tGC gc = new GC (parent);", "-\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC | SWT.DRAW_TRANSPARENT;", "-\t\tPoint size = gc.textExtent (text, flags);", "-\t\tgc.dispose ();", "-\t\treturn size;\t\t", "-\t}", "+\tint [] ptr = new int [1];", "+\tOS.GetControlData (labelHandle, (short) 0, OS.kControlStaticTextCFStringTag, 4, ptr, null);", "+\tPoint result = parent.textExtent (ptr [0], 0);", "+\tif (ptr [0] != 0) OS.CFRelease (ptr [0]);", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9badbaee5c6271e73f1f2df17dbbec0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "4e692e594829c957204f8759719ba27bd5c7bed5", "commitAfterChange": "1bd4a6d238f246b1a33b1e165b82bcbcf963d2f9", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": "  void releaseWidget ()", "diff": ["-void releaseWidget () {", "-\tint count = OS.CountMenuItems (handle);", "-\tfor (int i=0; i<count; i++) {", "-\t\tMenuItem item = items [i];", "-\t\tif (!item.isDisposed ()) item.releaseResources ();", "-\titems = null;", "+", "+void releaseWidget () {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2875a280e53fb2af8ff29ce1374b7b4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f03e766173b2256e49ea9a5eba3664e850b85dc3", "commitAfterChange": "c9097f46591731833d080fcd86ca38ea7f12e09d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  int eventProc (int event, int data)", "signatureAfterChange": "  int eventProc (int event, int data)", "diff": ["-\tif (dispatchEvents == null && gdkEventCount != 0) {", "-\t\tfor (int i = 0; i < gdkEventCount; i++) {", "-\t\t\tif (gdkEventWidgets [i] == null || !gdkEventWidgets [i].isDisposed ()) {", "-\t\t\t\tOS.gdk_event_put (gdkEvents [i]);", "-\t\t\t\tOS.gdk_event_free (gdkEvents [i]);", "-\t\t\t}", "-\t\t}", "-\t\tgdkEventCount = 0;", "-\t\tgdkEvents = null;", "-\t}", "+\tif (dispatchEvents == null) putGdkEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39aeb912dd41f607132210173eb9240", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "caf0e50f2ed69e8f3417f92170052b7ad55e7e66", "commitAfterChange": "6e5f0eee4d45442c0288f27c28fcb62ccfb28775", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void release ()", "signatureAfterChange": " protected void release ()", "diff": ["-\tif (scriptCache != null) {", "-\t\tint hHeap = OS.GetProcessHeap();", "-\t\tfor (int i = 0; i < scriptCache.length; i++) {", "-\t\t\tint cache = scriptCache[i];", "-\t\t\tif (cache != 0) {", "-\t\t\t\tOS.ScriptFreeCache (cache);", "-\t\t\t\tOS.HeapFree(hHeap, 0, cache);", "-\t\t\t}", "-\t\t}", "-\t}", "-\tscriptCache = null;", "+\tscripts = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec70009e65f117b1130a17db1650d010", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "18e7e04ac89e0858fd5a71299b298b60c59aceca", "commitAfterChange": "40380ce5d9970d4e8ee85b12f1b8e8665770c90f", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  void updateFonts ()", "signatureAfterChange": "  void updateFonts ()", "diff": ["-\tFont oldFont = getSystemFont ();", "-\tFont newFont = getSystemFont ();", "-\tShell [] shells = getShells ();", "-\tfor (int i=0; i<shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (!shell.isDisposed ()) {", "-\t\t\tshell.updateFont (oldFont, newFont);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba2e83c3d77d6eb9a8919821116f2866", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tint columnWidth = 0;", "-\t\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\t\tTableItem item = items [i];", "-\t\t\t\tif (item != null) {", "-\t\t\t\t\tcolumnWidth = Math.max (columnWidth, item.calculateWidth (0, gc, false));", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\twidth += calculateWidth (items, 0, gc);", "-\t\t\twidth += columnWidth + getInsetWidth ();"]}], "num": 55600}