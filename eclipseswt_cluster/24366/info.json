{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3041a7e36048fae62f49429371bd429", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ace056eeeb77d19c773e821fcb5b07", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "97ec9a32696bacaa354998d3ea0c1338465e3bf1", "commitAfterChange": "d361500b3959086a03112578e3a3cafd55b674c1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static int getMsgProc(int code, int wParam, int lParam)", "signatureAfterChange": " static int getMsgProc(int code, int wParam, int lParam)", "diff": ["-\t\t\t\t\tif (frame.translateOleAccelerator(msg)) {", "-\t\t\t\t\t\t// In order to prevent this message from also being processed", "-\t\t\t\t\t\t// by the application, zero out message, wParam and lParam", "-\t\t\t\t\t\tmsg.message = OS.WM_NULL;", "-\t\t\t\t\t\tmsg.wParam = 0;", "-\t\t\t\t\t\tmsg.lParam = 0;", "-\t\t\t\t\t\tOS.MoveMemory(lParam, msg, MSG.sizeof);", "-\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t/*", "+\t\t\t\t\t * Do not allow the activeX control to translate key down arrow ", "+\t\t\t\t\t * events because this interferes with context menu traversal.", "+\t\t\t\t\t */", "+\t\t\t\t\tif (message != OS.WM_KEYDOWN ||", "+\t\t\t\t\t\t(msg.wParam != OS.VK_UP && msg.wParam != OS.VK_DOWN && msg.wParam != OS.VK_LEFT && msg.wParam != OS.VK_RIGHT)) {", "+\t\t\t\t\t\tif (frame.translateOleAccelerator(msg)) {", "+\t\t\t\t\t\t\t// In order to prevent this message from also being processed", "+\t\t\t\t\t\t\t// by the application, zero out message, wParam and lParam", "+\t\t\t\t\t\t\tmsg.message = OS.WM_NULL;", "+\t\t\t\t\t\t\tmsg.wParam = 0;", "+\t\t\t\t\t\t\tmsg.lParam = 0;", "+\t\t\t\t\t\t\tOS.MoveMemory(lParam, msg, MSG.sizeof);", "+\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b7f19294d8cafcff748b9ed09c03dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "c3aa5c7e0128a8f707614484bb210d2959707428", "commitAfterChange": "a2a262c6abd6101e3ab3413a3a61c9b3cc787e1c", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\t* the Internet Explorer shortcuts. F5 causes refresh).  This behaviour is undesired when", "-\t* rendering HTML in memory as it causes the empty page about:blank page to be reloaded.  ", "-\t* The workaround is to block the default F5 handling by IE when the URL is about:blank.", "+\t* the Internet Explorer shortcuts.  F5 causes refresh.  CTRL-N opens a standalone Internet ", "+\t* Explorer.  These behaviours are undesired when rendering HTML in memory.", "+\t* The workaround is to block the default CTRL-N and F5 handling by IE when the URL is about:blank.", "+\t\t\t\tif (msg.message == OS.WM_KEYDOWN && msg.wParam == OS.VK_N && OS.GetKeyState (OS.VK_CONTROL) < 0) result = COM.S_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4526638d55c1227ca165a0412fb1d142", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "78a8f740f3c6b657a393a18384703a04727c8884", "commitAfterChange": "9ff9d9222d7fdb61c93507f2b2ab53ff9e4332fb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t/*", "-\t\t\t\t* Tabbing out of the browser can fail as a result of the WebSite", "-\t\t\t\t* control embedded within the Browser.  The workaround is to", "-\t\t\t\t* listen for traversals and re-perform the traversal on the", "-\t\t\t\t* appropriate control.", "-\t\t\t\t*/", "+\t\t\t\t\t/*", "+\t\t\t\t\t * Tabbing out of the browser can fail as a result of the WebSite", "+\t\t\t\t\t * control embedded within the Browser.  The workaround is to", "+\t\t\t\t\t * listen for traversals and re-perform the traversal on the", "+\t\t\t\t\t * appropriate control.", "+\t\t\t\t\t */", "+\t\t\t\t\t/*", "+\t\t\t\t\t * Return traversals can sometimes come through TranslateAccelerator,", "+\t\t\t\t\t * depending on where focus is within the Browser.  Traversal", "+\t\t\t\t\t * events should always be triggered by a key event from the DOM,", "+\t\t\t\t\t * so if a Traversal from TranslateAccelerator is detected", "+\t\t\t\t\t * (e.doit == true) then stop its propagation.", "+\t\t\t\t\t */", "+\t\t\t\t\tif (e.detail == SWT.TRAVERSE_RETURN && e.doit && e.widget instanceof Browser) {", "+\t\t\t\t\t\te.type = SWT.None;", "+\t\t\t\t\t\te.doit = false;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8c4420a42b6d3b8cee3fb5222b6a11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "743721acb61e4bb66b55d33f0144d4fdea2bb923", "commitAfterChange": "c1e796df24482dd5ff5117c4561486196c0bb415", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["-\tif (url.startsWith(\"http://download.macromedia.com/pub/shockwave/cabs/director/sw.cab\") || //$NON-NLS-1$", "-\t\t(url.startsWith(\"http://java.sun.com/products/plugin/autodl/jinstall\") && url.indexOf(\".cab\") != -1)) { //$NON-NLS-1$ //$NON-NLS-2$", "+", "+\tif (url.startsWith(Browser.URL_DIRECTOR) ||", "+\t\t(url.startsWith(Browser.URL_JAVA) && url.indexOf(Browser.URL_CAB) != -1) ||", "+\t\t(url.startsWith(Browser.URL_JAVA_15) && url.indexOf(Browser.URL_CAB) != -1)) {"]}], "num": 24366}