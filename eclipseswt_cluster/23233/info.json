{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f90cd203f2c6f2f96ab899a55519f4df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee51f55be0cfd9bd679927018d0722d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "68864ed7c9ad64ce59d0a80b5122e67a238d21ef", "commitAfterChange": "14d8d0d3e1117aced9ac9d0460bf8e1bf18b9d70", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": "\r void modifyContent(Event event, boolean updateCaret)", "signatureAfterChange": "\r void modifyContent(Event event, boolean updateCaret)", "diff": ["+\t\tboolean isCharacterRemove = replacedLength == 1 && event.text.length() == 0;\r", "-\t\t\r", "-\t\tif (updateCaret && isBidi()) {\r", "+\t\t\t\t\r", "+\t\tif (updateCaret && isBidi() && isCharacterRemove) {\r", "+\t\t\t// set the keyboard language to the language of the deleted character.\r", "+\t\t\t// determine direction boundary so that caret location can be updated \r", "+\t\t\t// properly.\r", "-\t\t\tStyledTextBidi bidi = new StyledTextBidi(gc, lineText, getBidiSegments(lineStartOffset, lineText));\r", "-\t\t\t\r", "-\t\t\tisDirectionBoundary = (offsetInLine > 0 && bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1));\r", "+\t\t\tStyledTextBidi bidi = new StyledTextBidi(gc, lineText, getBidiSegments(lineStartOffset, lineText));\t\t\t\r", "+\t\t\tif (isBackspace) {\r", "+\t\t\t\tif (offsetInLine > 0) {\r", "+\t\t\t\t\t// the line start/end does not represent a direction boundary \r", "+\t\t\t\t\t// even if the previous/next line has a different direction.\r", "+\t\t\t\t\tisDirectionBoundary = \r", "+\t\t\t\t\t\toffsetInLine < lineText.length() && \r", "+\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || \r", "+\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));\r", "+\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine - 1);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\telse {\r", "+\t\t\t\tif (offsetInLine < lineText.length()) {\r", "+\t\t\t\t\t// the line start/end does not represent a direction boundary \r", "+\t\t\t\t\t// even if the previous/next line has a different direction.\r", "+\t\t\t\t\tisDirectionBoundary = \r", "+\t\t\t\t\t\toffsetInLine > 0 && \r", "+\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || \r", "+\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));\r", "+\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "-\t\t\t\tif (replacedLength == 1 && event.text.length() == 0) {\r", "+\t\t\t\tif (isCharacterRemove) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25cf8b27f07f34fc570f6ad6a156cd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 235, "signatureBeforeChange": " void modifyContent(Event event, boolean updateCaret)", "signatureAfterChange": " void modifyContent(Event event, boolean updateCaret)", "diff": ["-\t\tboolean isCharacterRemove = replacedLength == 1 && event.text.length() == 0;", "-\t\tboolean isBackspace = event.start < caretOffset;", "-\t\tboolean isDirectionBoundary = false;", "-\t\t\t\t", "-\t\tif (updateCaret && isBidi() && isCharacterRemove) {", "-\t\t\t// set the keyboard language to the language of the deleted character.", "-\t\t\t// determine direction boundary so that caret location can be updated ", "-\t\t\t// properly.", "-\t\t\tint line = content.getLineAtOffset(caretOffset);", "-\t\t\tint lineStartOffset = content.getOffsetAtLine(line);\t\t", "-\t\t\tint offsetInLine = caretOffset - lineStartOffset;", "-\t\t\tString lineText = content.getLine(line);", "-\t\t\tGC gc = getGC();", "-\t\t\tStyledTextBidi bidi = new StyledTextBidi(gc, lineText, getBidiSegments(lineStartOffset, lineText));\t\t\t", "-\t\t\tif (isBackspace) {", "-\t\t\t\tif (offsetInLine > 0) {", "-\t\t\t\t\t// the line start/end does not represent a direction boundary ", "-\t\t\t\t\t// even if the previous/next line has a different direction.", "-\t\t\t\t\tisDirectionBoundary = ", "-\t\t\t\t\t\toffsetInLine < lineText.length() && ", "-\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || ", "-\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));", "-\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine - 1);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tif (offsetInLine < lineText.length()) {", "-\t\t\t\t\t// the line start/end does not represent a direction boundary ", "-\t\t\t\t\t// even if the previous/next line has a different direction.", "-\t\t\t\t\tisDirectionBoundary = ", "-\t\t\t\t\t\toffsetInLine > 0 && ", "-\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || ", "-\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));", "-\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tgc.dispose();", "-\t\t}\t\t\t\t\t\t", "-\t\tif (updateCaret) {\t\t", "+\t\tif (updateCaret) {", "-\t\t\tif (isBidi()) {", "-\t\t\t\t// Update the caret direction so that the caret moves to the ", "-\t\t\t\t// typed/deleted character. Fixes 1GJLQ16.", "-\t\t\t\tif (isCharacterRemove) {", "-\t\t\t\t\tupdateBidiDirection(isBackspace, isDirectionBoundary);", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tlastCaretDirection = ST.COLUMN_NEXT;", "-\t\t\t\t}", "-\t\t\t\tshowBidiCaret();", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tshowCaret();", "-\t\t\t}", "+\t\t\tshowCaret();"]}], "num": 23233}