{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7642e360065c9f2b113c9f57ce64fee6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ea52ab6ef8abbe242ae8fb5d6018f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "b13cb0959e0afe3c17aa178a3bca80d7d1fd22d7", "commitAfterChange": "e1ddb07c7c0cc45210739f25c19adbd93ffa639d", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void setOrientation (int orientation)", "signatureAfterChange": " public void setOrientation (int orientation)", "diff": ["-\tcheckWidget();", "-\tif (OS.IsWinCE) return;", "-\tif (OS.WIN32_VERSION < OS.VERSION (4, 10)) return;", "-\tint flags = SWT.RIGHT_TO_LEFT | SWT.LEFT_TO_RIGHT;", "-\tif ((orientation & flags) == 0 || (orientation & flags) == flags) return;", "-\tstyle &= ~flags;", "-\tstyle |= orientation & flags;", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_EXSTYLE);", "-\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "-\t\tbits |= OS.WS_EX_RTLREADING | OS.WS_EX_LEFTSCROLLBAR;", "-\t} else {", "-\t\tbits &= ~(OS.WS_EX_RTLREADING | OS.WS_EX_LEFTSCROLLBAR);", "-\t}", "-\tOS.SetWindowLong (handle, OS.GWL_EXSTYLE, bits);", "-\tfixAlignment ();", "+\tsuper.setOrientation (orientation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9624f3fcbad3083ae46310f5bef82fe1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "40cc64959d5119bf3b04b67587b8994ada23e8e0", "commitAfterChange": "02b99d3aa6b86917194c42b95e6fbca04ab77b6a", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  LRESULT wmCommandChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmCommandChild (int wParam, int lParam)", "diff": ["+\t\tcase OS.EN_ALIGN_LTR_EC:", "+\t\tcase OS.EN_ALIGN_RTL_EC:", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.doit = true;", "+\t\t\tsendEvent (SWT.OrientationChange, event);", "+\t\t\tif (!event.doit) {", "+\t\t\t\tint /*long*/ hwnd = lParam;", "+\t\t\t\tint bits1 = OS.GetWindowLong (hwnd, OS.GWL_EXSTYLE);", "+\t\t\t\tint bits2 = OS.GetWindowLong (hwnd, OS.GWL_STYLE);", "+\t\t\t\tif (code == OS.EN_ALIGN_LTR_EC) {", "+\t\t\t\t\tbits1 |= (OS.WS_EX_RTLREADING | OS.WS_EX_RIGHT);", "+\t\t\t\t\tbits2 |= OS.ES_RIGHT;", "+\t\t\t\t} else {", "+\t\t\t\t\tbits1 &= ~(OS.WS_EX_RTLREADING | OS.WS_EX_RIGHT);", "+\t\t\t\t\tbits2 &= ~OS.ES_RIGHT;", "+\t\t\t\t}", "+\t\t\t\tOS.SetWindowLong (hwnd, OS.GWL_EXSTYLE, bits1);", "+\t\t\t\tOS.SetWindowLong (hwnd, OS.GWL_STYLE, bits2);", "+\t\t\t}", "+\t\t\tbreak;"]}], "num": 1821}