{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfacbc00059ff2322cc00217a45dfc10", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9758ba783b5b977645fac03fc23345c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "de1ef9e5dd8e2f657b19ac5e5eaa6cbf2017d8bb", "commitAfterChange": "bcac6ad70ee319247deb043444a858ffd48b487d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public boolean isFocusControl ()", "signatureAfterChange": "  public void selectAll ()", "diff": ["-", "-public boolean isFocusControl () {", "-\tcheckWidget();", "-\tif ((style & SWT.DROP_DOWN) != 0 && (text.isFocusControl () || popupShell.isFocusControl () || popupCalendar.isFocusControl())) {", "-\t\treturn true;", "-\t} ", "-\treturn super.isFocusControl ();", "+", "+public void selectAll () {", "+\tcheckWidget ();", "+\tif (handle != 0)", "+\t\tOS.gtk_editable_select_region (handle, 0, -1);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f89ee525295ed5bad1d4d14218a35f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6c627a8139ef18188f49f84c11acd2dfd56235c5", "commitAfterChange": "40cfd902af2e0589c0797a7d81427d00b9fdb4d1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\tboolean factoriesRegistered = false;", "-\t\tString propertyString = System.getProperty (FACTORIES_REGISTERED);", "-\t\tif (TRUE.equals (propertyString)) {", "-\t\t\tfactoriesRegistered = true;", "-\t\t}", "+\t\tboolean factoriesRegistered = Boolean.getBoolean (FACTORIES_REGISTERED);", "-\t\t * Check for the property indicating that factories have already been registered,", "-\t\t * in which case this browser should not overwrite them with its own.", "-\t\t */", "-\t\tboolean factoriesRegistered = false;", "-\t\tString propertyString = System.getProperty (FACTORIES_REGISTERED);", "-\t\tif (TRUE.equals (propertyString)) {", "-\t\t\tfactoriesRegistered = true;", "-\t\t}", "-", "+\t\t* Check for the property indicating that factories have already been registered,", "+\t\t* in which case this browser should not overwrite them with its own.", "+\t\t*/", "+\t\tboolean factoriesRegistered = Boolean.getBoolean (FACTORIES_REGISTERED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd77d9397335a0a94496710bd8fccfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "647ee8ac0b4674688a64286f665d0bc51c0718e8", "commitAfterChange": "8c113a426e5f05549192616bd0df00498451eac3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public OleClientSite(Composite parent, int style, File file)", "signatureAfterChange": " public OleClientSite(Composite parent, int style, File file)", "diff": ["-\t\tif (result != COM.S_OK)", "-\t\t\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);", "+\t\tif (result != COM.S_OK)\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);", "-\t\tappClsid = fileClsid;", "-\t\tString progID = getProgramID(); ", "-\t\tif (progID == null)", "-\t\t\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);", "+\t\tString progID = getProgID(fileClsid); ", "+\t\tif (progID == null)\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);", "-\t\t/* Bug in Windows. In some machines running Windows Vista and ", "-\t\t * Office 2007, OleCreateFromFile() fails to open files from ", "-\t\t * Office Word 97 - 2003. The fix is to detect this case and create", "-\t\t * the activeX using CoCreateInstance() and then load the file", "-\t\t * using IPersistStorage.Load().", "-\t\t */", "-\t\tif (progID.equals(\"Word.Document.8\")) { //$NON-NLS-1$", "-\t\t\tGUID clsid = getClassID(WORDPROGID);", "-\t\t\tString latestProgID = getProgID(clsid);", "-\t\t\tif (latestProgID.equals(\"Word.Document.12\")) { //$NON-NLS-1$", "-\t\t\t\tappClsid = clsid;", "-\t\t\t}", "-\t\t}", "-\t\t", "+\t\tappClsid = fileClsid;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67cd270384d68fab46467683e1c05e24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "ad32dbae94517783f5fa536b7c5323ff9f0a723d", "commitAfterChange": "27e45e71cf6d0ed82d8fedf57f0959da6b5ee607", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  static String[] gio_getExtensions()", "signatureAfterChange": "  static String[] gio_getExtensions()", "diff": ["-\tHashtable<String, List<String>> mimeInfo = gio_getMimeInfo();", "+\tMap<String, List<String>> mimeInfo = gio_getMimeInfo();", "-\tList<String> extensions = new ArrayList<String>();", "-\tEnumeration<String> keys = mimeInfo.keys();", "-\twhile (keys.hasMoreElements()) {", "-\t\tString extension = keys.nextElement();", "-\t\textensions.add(extension);", "-\t}", "+\tList<String> extensions = new ArrayList<String>(mimeInfo.keySet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37d249f9feaacb4100818688507318c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "306f95301b97e9d8ba82cad67812ad605a6ab86b", "commitAfterChange": "de5b9b1f68cbb466a86733b45d1a63f217e8c701", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 83, "signatureBeforeChange": " public boolean save(File file, boolean includeOleInfo)", "signatureAfterChange": " public boolean save(File file, boolean includeOleInfo)", "diff": ["-\tString programID = getProgramID();", "-\t", "-\t/*", "-\t* Bug in Office 2007. Saving Office 2007 documents to compound file storage object", "-\t* causes the output file to be corrupted. The fix is to detect Office 2007 documents", "-\t* using the program ID and save only the content of the 'Package' stream. ", "-\t*/", "-\tif (programID != null && (programID.equals(\"Word.Document.12\") || programID.equals(\"Excel.Sheet.12\") || programID.equals(\"PowerPoint.Show.12\"))) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ ", "-\t\treturn saveOffice2007(file);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb60c294c7bd774fa905bfca48320d23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "6a5289e12cc5f3cfb65b7d7ada5e0a13c5dce2cb", "commitAfterChange": "148a6e167cc83bf5eb877911514b7218031b3950", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "signatureAfterChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "diff": ["-\t\t/* re-install registered functions */", "-\t\tEnumeration elements = functions.elements ();", "-\t\twhile (elements.hasMoreElements ()) {", "-\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "-\t\t\texecute (function.functionString);", "-\t\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "185e46e1e37f8c3e20477d49be24e516", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 65, "signatureBeforeChange": "  @Override public boolean isFocusControl ()", "signatureAfterChange": "  private boolean isReadOnly ()", "diff": ["-@Override", "-public boolean isFocusControl () {", "-\tcheckWidget();", "-\tif ((style & SWT.DROP_DOWN) != 0 && (text.isFocusControl () || popupShell.isFocusControl () || popupCalendar.isFocusControl())) {", "-\t\treturn true;", "-\t} ", "-\treturn super.isFocusControl ();", "+", "+private boolean isReadOnly () {", "+\treturn ((style & SWT.READ_ONLY) != 0);", "+}"]}], "num": 44606}