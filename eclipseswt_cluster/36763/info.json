{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "345e2089ab154edd4d71cd1dbee982af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee2a0ecbe420a0f94bfaded791be41f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "909e1a06fed0dbfc82d0a44151c40af807d7aecb", "commitAfterChange": "c21968359f6a934ba649dedb1f104022676d11f0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tRect rect = new Rect ();", "-\tOS.GetAvailableWindowPositioningBounds (OS.GetMainDevice (), rect);", "-\tint width = (rect.right - rect.left) * 5 / 8;", "-\tint height = (rect.bottom - rect.top) * 5 / 8;", "-\tOS.SetRect (rect, (short) 0, (short) 0, (short) width, (short) height);", "+\tMonitor monitor = getMonitor ();", "+\tRectangle rect = monitor.getClientArea ();", "+\tint width = rect.width * 5 / 8;", "+\tint height = rect.height * 5 / 8;", "+\tRect bounds = new Rect ();", "+\tOS.SetRect (bounds, (short) 0, (short) 0, (short) width, (short) height);", "-\tOS.CreateNewWindow (windowClass, attributes, rect, outWindow);", "+\tOS.CreateNewWindow (windowClass, attributes, bounds, outWindow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7cc620f6b1d384d1afbf3b61e895f09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "2e9aa0e5f65ef9d49fc6351163c6d9fcf70fa8f6", "commitAfterChange": "909e1a06fed0dbfc82d0a44151c40af807d7aecb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " void manageChildren ()", "signatureAfterChange": " void manageChildren ()", "diff": ["-\tint xDisplay = OS.XtDisplay (shellHandle);", "-\tif (xDisplay == 0) return;", "-\tint width = OS.XDisplayWidth (xDisplay, OS.XDefaultScreen (xDisplay)) * 5 / 8;", "-\tint height = OS.XDisplayHeight (xDisplay, OS.XDefaultScreen (xDisplay)) * 5 / 8;", "+\tint width = 0, height = 0;", "+\tif (OS.IsLinux) {", "+\t\tMonitor monitor = getMonitor ();", "+\t\tRectangle rect = monitor.getClientArea ();", "+\t\twidth = rect.width * 5 / 8;", "+\t\theight = rect.height * 5 / 8;", "+\t} else {", "+\t\tint xDisplay = OS.XtDisplay (shellHandle);", "+\t\tif (xDisplay == 0) return;", "+\t\twidth = OS.XDisplayWidth (xDisplay, OS.XDefaultScreen (xDisplay)) * 5 / 8;", "+\t\theight = OS.XDisplayHeight (xDisplay, OS.XDefaultScreen (xDisplay)) * 5 / 8;", "+\t}"]}], "num": 36763}