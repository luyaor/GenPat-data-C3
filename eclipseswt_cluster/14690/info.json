{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b41d45e740216988f81d86efecf7a24", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480d84d4e194af564dad16fce0e31a53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "b9508528acf7b4c851129bbf83385ebf25fb7ac7", "commitAfterChange": "68186795eeb93699f471751288b801119b920d23", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public FontData[] getFontList (String faceName, boolean scalable)", "signatureAfterChange": " public FontData[] getFontList (String faceName, boolean scalable)", "diff": ["-\tNSArray fonts = NSFontManager.sharedFontManager().availableFonts();", "-\tint count = 0;", "-\tFontData[] fds = new FontData[(int)/*64*/fonts.count()];", "-\tfor (int i = 0; i < fds.length; i++) {", "-\t\tNSString str = new NSString(fonts.objectAtIndex(i));", "-\t\tString nsName = str.getString();", "-\t\tString name = nsName;", "-\t\tint index = nsName.indexOf('-');", "-\t\tif (index != -1) name = name.substring(0, index);", "-\t\tint style = SWT.NORMAL;", "-\t\tif (nsName.indexOf(\"Italic\") != -1) style |= SWT.ITALIC;", "-\t\tif (nsName.indexOf(\"Bold\") != -1) style |= SWT.BOLD;", "-\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "-\t\t\tFontData data = new FontData(name, 0, style);", "-\t\t\tdata.nsName = nsName;", "-\t\t\tfds[count++] = data;", "+\tNSArray families = NSFontManager.sharedFontManager().availableFontFamilies();", "+\tint famCount = families.count();", "+\tint count = 0;\t", "+\tFontData[] fds = new FontData[100];", "+\tfor (int i = 0; i < famCount; i++) {", "+\t\tNSString nsfamily = new NSString(families.objectAtIndex(i));", "+\t\tString family = nsfamily.getString();", "+\t\tNSArray fonts = NSFontManager.sharedFontManager().availableMembersOfFontFamily(nsfamily);", "+\t\tint fontCount = fonts.count();", "+\t\tfor (int j = 0; j < fontCount; j++) {", "+\t\t\tNSArray fontDetails = new NSArray(fonts.objectAtIndex(j));", "+\t\t\tNSString str = new NSString(fontDetails.objectAtIndex(0));", "+\t\t\tString nsName = str.getString();", "+\t\t\tString name  = nsName;", "+\t\t\tint index = nsName.indexOf('-');", "+\t\t\tif (index != -1) name = name.substring(0, index);", "+\t\t\tint style = SWT.NORMAL;", "+\t\t\tif (nsName.indexOf(\"Italic\") != -1) style |= SWT.ITALIC;", "+\t\t\tif (nsName.indexOf(\"Bold\") != -1) style |= SWT.BOLD;", "+\t\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "+\t\t\t\tFontData data = new FontData(family, 0, style);", "+\t\t\t\tdata.nsName = nsName;", "+\t\t\t\tif (count == fds.length) {", "+\t\t\t\t\tFontData[] newFds = new FontData[fds.length + 100];", "+\t\t\t\t\tSystem.arraycopy(fds, 0, newFds, 0, fds.length);", "+\t\t\t\t\tfds = newFds;", "+\t\t\t\t}", "+\t\t\t\tfds[count++] = data;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a2dcd2a0bec9e6c2385ce9547a0efae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "a591c307db2115d003217325024332e73226039d", "commitAfterChange": "5ebddbbaf7f59f067561bd1654b50a730223ba57", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public FontData[] getFontList (String faceName, boolean scalable)", "signatureAfterChange": " public FontData[] getFontList (String faceName, boolean scalable)", "diff": ["-\tint count = 0;", "+\tList fdsList = new ArrayList();", "-\tint /*long*/ familyCount = families.count();", "-\tFontData[] fds = new FontData[100];", "-\tfor (int i = 0; i < familyCount; i++) {", "-\t\tNSString nsFamily = new NSString(families.objectAtIndex(i));", "-\t\tString name = nsFamily.getString();", "-\t\tNSArray fonts = NSFontManager.sharedFontManager().availableMembersOfFontFamily(nsFamily);", "-\t\tint fontCount = (int)/*64*/fonts.count();", "-\t\tfor (int j = 0; j < fontCount; j++) {", "-\t\t\tNSArray fontDetails = new NSArray(fonts.objectAtIndex(j));", "-\t\t\tString nsName = new NSString(fontDetails.objectAtIndex(0)).getString();", "-\t\t\tint /*long*/ weight = new NSNumber(fontDetails.objectAtIndex(2)).integerValue();", "-\t\t\tint /*long*/ traits = new NSNumber(fontDetails.objectAtIndex(3)).integerValue();", "-\t\t\tint style = SWT.NORMAL;", "-\t\t\tif ((traits & OS.NSItalicFontMask) != 0) style |= SWT.ITALIC;", "-\t\t\tif (weight == 9) style |= SWT.BOLD;", "-\t\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "-\t\t\t\tFontData data = new FontData(name, 0, style);", "-\t\t\t\tdata.nsName = nsName;", "-\t\t\t\tif (count == fds.length) {", "-\t\t\t\t\tFontData[] newFds = new FontData[fds.length + 100];", "-\t\t\t\t\tSystem.arraycopy(fds, 0, newFds, 0, fds.length);", "-\t\t\t\t\tfds = newFds;", "+\tif (families != null) {", "+\t\tint /*long*/ familyCount = families.count();", "+\t\tfor (int i = 0; i < familyCount; i++) {", "+\t\t\tNSString nsFamily = new NSString(families.objectAtIndex(i));", "+\t\t\tString name = nsFamily.getString();", "+\t\t\tNSArray fonts = NSFontManager.sharedFontManager().availableMembersOfFontFamily(nsFamily);", "+\t\t\t", "+\t\t\tif (fonts != null) {", "+\t\t\t\tint fontCount = (int)/*64*/fonts.count();", "+\t\t\t\tfor (int j = 0; j < fontCount; j++) {", "+\t\t\t\t\tNSArray fontDetails = new NSArray(fonts.objectAtIndex(j));", "+\t\t\t\t\tString nsName = new NSString(fontDetails.objectAtIndex(0)).getString();", "+\t\t\t\t\tint /*long*/ weight = new NSNumber(fontDetails.objectAtIndex(2)).integerValue();", "+\t\t\t\t\tint /*long*/ traits = new NSNumber(fontDetails.objectAtIndex(3)).integerValue();", "+\t\t\t\t\tint style = SWT.NORMAL;", "+\t\t\t\t\tif ((traits & OS.NSItalicFontMask) != 0) style |= SWT.ITALIC;", "+\t\t\t\t\tif (weight == 9) style |= SWT.BOLD;", "+\t\t\t\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "+\t\t\t\t\t\tFontData data = new FontData(name, 0, style);", "+\t\t\t\t\t\tdata.nsName = nsName;", "+\t\t\t\t\t\tfdsList.add(data);", "+\t\t\t\t\t}", "-\t\t\t\tfds[count++] = data;", "-\tif (count == fds.length) return fds;", "-\tFontData[] result = new FontData[count];", "-\tSystem.arraycopy(fds, 0, result, 0, count);", "-\treturn result;", "+\treturn (FontData[])fdsList.toArray();"]}], "num": 14690}