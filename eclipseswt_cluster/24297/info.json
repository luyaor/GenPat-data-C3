{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5de5b1856fbaa2049049245dcdfbcde8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e51eade44b058f19e58e9be57ed7e18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "4dbd43ed751e696d63968dcc6b542d9240c6eaa6", "commitAfterChange": "dbb4cb6bf8780b7378ba48097fc7c37f103b73a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  ImageData kde_getImageData()", "signatureAfterChange": "  ImageData kde_getImageData()", "diff": ["+\tif (iconPath.endsWith(\"xpm\")) {", "+\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY();", "+\t\tint /*long*/ rootWindow = OS.XDefaultRootWindow(xDisplay);\t\t", "+\t\t/* Use the character encoding for the default locale */", "+\t\tbyte[] iconName = Converter.wcsToMbcs(null, iconPath, true);", "+\t\tint /*long*/ [] pixmap = new int /*long*/ [1];", "+\t\tint /*long*/ [] mask = new int /*long*/ [1];", "+\t\tKDE.XpmReadFileToPixmap(xDisplay, rootWindow, iconName, pixmap, mask, 0);", "+\t\tif (pixmap[0] == 0 || pixmap[0] == KDE.XmUNSPECIFIED_PIXMAP) {", "+\t\t\treturn null;", "+\t\t}", "+\t\tint /*long*/ gdkPixmap = OS.gdk_pixmap_foreign_new(pixmap[0]);", "+\t\tint /*long*/ gdkMask = mask[0] != 0 ? OS.gdk_pixmap_foreign_new(mask[0]) : 0;", "+\t\tImage image = Image.gtk_new(display, gdkMask != 0 ? SWT.ICON : SWT.BITMAP, gdkPixmap, gdkMask);", "+\t\tImageData imageData = image.getImageData();", "+\t\tif (gdkPixmap != 0) OS.g_object_unref(gdkPixmap);", "+\t\tif (gdkMask != 0) OS.g_object_unref(gdkMask);", "+\t\tif (pixmap[0] == 0) KDE.XFreePixmap(xDisplay, pixmap[0]);", "+\t\tif (mask[0] == 0) KDE.XFreePixmap(xDisplay, mask[0]);", "+\t\treturn imageData;\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d73fbc34e8e2d332b3bde0727f82d0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ImageTransfer.java", "commitBeforeChange": "5bfbfd6550d25db2695eb695eae08fb135ba96b1", "commitAfterChange": "9f3e004f4f231562877a62ca1bbca78c904abee3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (transferData.length > 0)", "-\t{", "+\tif (transferData.length > 0) {", "-\t\tOS.gdk_pixbuf_loader_write(loader, transferData.pValue, transferData.length, null);", "-\t\tOS.gdk_pixbuf_loader_close(loader, null);", "-\t\tint /*long*/ pixbuf = OS.gdk_pixbuf_loader_get_pixbuf(loader);", "-\t\tif (pixbuf != 0) {", "-\t\t\tint /*long*/ [] pixmap_return = new int /*long*/ [1];", "-\t\t\tOS.gdk_pixbuf_render_pixmap_and_mask(pixbuf, pixmap_return, null, 0);", "-\t\t\tint /*long*/ handle = pixmap_return[0];", "-\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\ttry {", "+\t\t\tOS.gdk_pixbuf_loader_write(loader, transferData.pValue, transferData.length, null);", "+\t\t\tOS.gdk_pixbuf_loader_close(loader, null);", "+\t\t\tint /*long*/ pixbuf = OS.gdk_pixbuf_loader_get_pixbuf(loader);", "+\t\t\tif (pixbuf != 0) {", "+\t\t\t\tImage img = Image.gtk_new_from_pixbuf(Display.getCurrent(), SWT.BITMAP, pixbuf);", "+\t\t\t\timgData = img.getImageData();", "+\t\t\t\timg.dispose();", "+\t\t\t}\t\t", "+\t\t} finally {", "-\t\t\tImage img = Image.gtk_new(Display.getCurrent(), SWT.BITMAP, handle, 0);\t\t", "-\t\t\timgData = img.getImageData();", "-\t\t\timg.dispose();", "-\t\t}\t\t", "+\t\t}"]}], "num": 24297}