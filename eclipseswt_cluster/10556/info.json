{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc84f3a9a39e253c84c402054bccc1d0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f615434e60b7154ca3cf599ef2a4b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0e6f96d1df103688568679efe5c6f52eb4baa86c", "commitAfterChange": "58f181425ac99cdd29070515e69fe5c833083a71", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void setBackgroundPattern (Pattern pattern)", "signatureAfterChange": " public void setBackgroundPattern (Pattern pattern)", "diff": ["-\tif (pattern == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (pattern != null && pattern.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);", "+\tif (pattern != null) {", "+\t\tdata.gdipBrush = Gdip.Brush_Clone(pattern.handle);", "+\t} else {", "+\t\tdata.gdipBrush = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d775c7c3d7de078f2a0454d264468063", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["+ */", "+public int internal_new_GC (GCData data) {", "+\tif (pixmap == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (type != SWT.BITMAP || memGC != null) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint gdkGC = OS.gdk_gc_new(pixmap);", "+\tif (data != null) {", "+\t\tdata.device = device;", "+\t\tdata.drawable = pixmap;", "+\t\tdata.image = this;", "+\t}", "+\treturn gdkGC;", "+}", "- */", "-public int internal_new_GC (GCData data) {", "-\tif (pixmap == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "-\tif (data == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (type != SWT.BITMAP || memGC != null) {", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-", "-\tdata.image = this;", "-\tint gc = OS.gdk_gc_new(pixmap);", "-\tdata.drawable = pixmap;", "-\treturn gc;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5274d2201b6323549b78431eba6287ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "commitAfterChange": "b51460367b4bfb6b2ca1fdb99b57e7894f87e5c0", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void setTransform(Transform transform)", "signatureAfterChange": " public void setTransform(Transform transform)", "diff": ["-\tif (transform == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\tif (transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (transform != null && transform.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\tOS.CGContextConcatCTM(handle, transform.handle);", "-\tSystem.arraycopy(transform.handle, 0, data.transform, 0, data.transform.length);", "-\tSystem.arraycopy(transform.handle, 0, data.inverseTransform, 0, data.inverseTransform.length);", "-\tOS.CGAffineTransformInvert(data.inverseTransform, data.inverseTransform);", "+\tif (transform != null) {", "+\t\tOS.CGContextConcatCTM(handle, transform.handle);", "+\t\tSystem.arraycopy(transform.handle, 0, data.transform, 0, data.transform.length);", "+\t\tSystem.arraycopy(transform.handle, 0, data.inverseTransform, 0, data.inverseTransform.length);", "+\t\tOS.CGAffineTransformInvert(data.inverseTransform, data.inverseTransform);", "+\t} else {", "+\t\tdata.transform = new float[]{1, 0, 0, 1, 0, 0};", "+\t\tdata.inverseTransform = new float[]{1, 0, 0, 1, 0, 0};", "+\t}"]}], "num": 10556}