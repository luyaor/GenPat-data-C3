{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e60b0ef21651f7bca2576fa037bd1be9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399518c62a78d8c718452ad3343be553", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/wpf/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "8e746dffcecf23a840e3dfc0bae71b16f86cd38f", "commitAfterChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["+ */", "+protected void javaToNative (Object object, TransferData transferData) {", "+\tif (!checkByteArray(object) || !isSupportedType(transferData)) {", "+\t\tDND.error(DND.ERROR_INVALID_DATA);", "+\t}", "+\tbyte[] buffer = (byte[])object;", "+\tif (buffer.length == 0) return;", "+\tint typeid = OS.Byte_typeid();", "+\tint pValue = OS.Array_CreateInstance(typeid, buffer.length);", "+\tOS.GCHandle_Free(typeid);", "+\tif (pValue == 0) return;", "+\tOS.memcpy(pValue, buffer, buffer.length);", "+\ttransferData.pValue = pValue;", "- */", "-protected void javaToNative (Object object, TransferData transferData) {", "-\t//TEMPORARY CODE FAIL WITHOUT EXCEPTION", "-\tif (!checkText(object)) return;", "-\t//if (!checkText(object)) DND.error(DND.ERROR_INVALID_DATA);", "-\t", "-\tif (isSupportedType(transferData)) {", "-\t\ttransferData.pValue = createDotNetString((String)object);", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c92a5ec00c3d4dc4e9e940783a15fe65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "02b6cb36ad1c2dce27bd3810bc24ab9a523e494f", "commitAfterChange": "40e15e68f5fa0b6fe1e8ba9d3ffd820b3dca362f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int accessibilityActionNames(int id, int sel)", "signatureAfterChange": "  int accessibilityActionNames(int id, int sel)", "diff": ["-\tif (handleIsAccessible(id) && accessible != null) {", "-\t\tNSArray returnValue = accessible.internal_accessibilityActionNames(ACC.CHILDID_SELF);", "-\t\tif (returnValue != null) return returnValue.id;", "+\tint /*long*/ returnValue = super.accessibilityActionNames(id, sel);", "+\tif (handleIsAccessible(id)) {", "+\t\tif (accessible != null) {", "+\t\t\tNSArray baseArray = accessible.internal_accessibilityActionNames(ACC.CHILDID_SELF);", "+\t\t\tif (baseArray != null) returnValue = baseArray.id;", "+\t\t}", "+\t\tif (hooks(SWT.MenuDetect) || (menu != null && !menu.isDisposed())) {", "+\t\t\tNSArray baseArray = new NSArray(returnValue);", "+\t\t\tNSMutableArray ourNames = NSMutableArray.arrayWithCapacity(baseArray.count() + 1);", "+\t\t\tourNames.addObjectsFromArray(baseArray);", "+\t\t\tourNames.addObject(OS.NSAccessibilityShowMenuAction);", "+\t\t\treturnValue = ourNames.id;", "+\t\t}", "-\t", "-\treturn super.accessibilityActionNames(id, sel);", "+\treturn returnValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d88039a47c9692d14734a45048acb705", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "c4f3dc85f0ccec5c74cb285cf4a25fdd845a37f7", "commitAfterChange": "8226320c2212f07bb2da2ffd0edd37cc6d5d025c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void deselect (int index)", "signatureAfterChange": " public void deselect (int index)", "diff": ["-\tboolean isSelected = getSelectionIndex () == index;", "-\tsetItems (items, !isSelected, !isSelected);", "+\tif (index < 0 || index >= items.length) return;", "+\tignoreSelect = true;", "+\tint /*long*/ children = OS.gtk_container_get_children (listHandle);", "+\tint /*long*/ item = OS.g_list_nth_data (children, index);", "+\tboolean selected = OS.GTK_WIDGET_STATE (item) == OS.GTK_STATE_SELECTED;", "+\tOS.gtk_list_unselect_all (listHandle);", "+\tif (selected) OS.gtk_entry_set_text (entryHandle, new byte[1]);", "+\tOS.g_list_free (children);", "+\tignoreSelect = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddcd54fbf8c55aa249375538ef1855ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f6e418ce08de208f524d556323de8e3b12653f8f", "commitAfterChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void createItem (MenuItem item, int index)", "signatureAfterChange": "  void createItem (MenuItem item, int index)", "diff": ["-\tboolean success = false;", "-\t/*", "-\tif (OS.IsWinCE) {", "-\t\tint flags = OS.MF_BYPOSITION;", "-\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;", "-\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); ", "-\t} else {", "-\t\tint hHeap = OS.GetProcessHeap ();", "-\t\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, TCHAR.sizeof);", "-\t\tMENUITEMINFO info = new MENUITEMINFO ();", "-\t\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;", "-\t\tinfo.wID = item.id;", "-\t\tinfo.fType = item.widgetStyle ();", "-\t\tinfo.dwTypeData = pszText;", "-\t\tsuccess = OS.InsertMenuItem (handle, index, true, info);", "-\t\tif (pszText != 0) OS.HeapFree (hHeap, 0, pszText);", "-\t}", "-\t*/", "-\t", "-\t/*", "-\tif ((style & SWT.SEPARATOR) != 0) return OS.MFT_SEPARATOR;", "-\tif ((style & SWT.RADIO) != 0) return OS.MFT_RADIOCHECK;", "-\treturn OS.MFT_STRING;", "-\t*/", "-\t", "-\tint attributes= 0;", "-\tif ((item.style & SWT.SEPARATOR) != 0) ", "-\t\tattributes= OS.kMenuItemAttrSeparator;", "-\tif (OS.InsertMenuItemTextWithCFString(handle, 0, (short) index, attributes, item.id) == OS.noErr)", "-\t\tsuccess= true;", "-\t", "-\tif (!success) {", "+\tint attributes = 0;", "+\tif ((item.style & SWT.SEPARATOR) != 0) attributes = OS.kMenuItemAttrSeparator;", "+\tint result = OS.InsertMenuItemTextWithCFString (handle, 0, (short) index, attributes, item.id);", "+\tif (result != OS.noErr) {", "-\t/* AW\t", "-\tredraw ();", "-\t*/", "+\tif ((style & SWT.BAR) != 0) {", "+\t\tDisplay display = getDisplay ();", "+\t\tshort menuID = display.nextMenuId ();", "+\t\tint outMenuRef [] = new int [1];", "+\t\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "+\t\t\terror (SWT.ERROR_NO_HANDLES);", "+\t\t}", "+\t\tOS.SetMenuItemHierarchicalMenu (handle, (short) (index + 1), outMenuRef [0]);", "+\t}"]}], "num": 12009}