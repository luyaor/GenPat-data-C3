{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fccd83765aa7bbf540510af44c1392b3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e478ae463df204c690a63bc2d2fa11cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TreeDropTargetEffect.java", "commitBeforeChange": "8200799fd4fc9f26a937f37e60a9ef54396d4890", "commitAfterChange": "ce281cb196b10adcbca7d0a8e66ab94ce171eb76", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void dragOver(DropTargetEvent event)", "signatureAfterChange": " \tpublic void dragOver(DropTargetEvent event)", "diff": ["-\t\tTree tree = (Tree) control;", "-\t\tTreeItem item = (TreeItem)getItem(tree, event.x, event.y);", "-\t\tif ((effect & DND.FEEDBACK_EXPAND) == 0) {", "-\t\t\texpandBeginTime = 0;", "-\t\t\texpandItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(expandItem) && expandBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= expandBeginTime) {", "-\t\t\t\t\tif (item.getItemCount() > 0 && !item.getExpanded()) {", "-\t\t\t\t\t\tEvent e = new Event();", "-\t\t\t\t\t\te.x = event.x;", "-\t\t\t\t\t\te.y = event.y;", "-\t\t\t\t\t\te.item = item;", "-\t\t\t\t\t\te.time = (int) System.currentTimeMillis();", "-\t\t\t\t\t\ttree.notifyListeners(SWT.Expand, e);", "-\t\t\t\t\t\tif (item.isDisposed()) return;", "-\t\t\t\t\t\titem.setExpanded(true);", "-\t\t\t\t\t}", "-\t\t\t\t\texpandBeginTime = 0;", "-\t\t\t\t\texpandItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\texpandBeginTime = System.currentTimeMillis() + EXPAND_HYSTERESIS;", "-\t\t\t\texpandItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\tif ((effect & DND.FEEDBACK_SCROLL) == 0) {", "-\t\t\tscrollBeginTime = 0;", "-\t\t\tscrollItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "-\t\t\t\t\tRectangle area = tree.getClientArea();", "-\t\t\t\t\tint headerHeight = tree.getHeaderHeight();", "-\t\t\t\t\tint itemHeight= tree.getItemHeight();", "-\t\t\t\t\tPoint pt = new Point(event.x, event.y);", "-\t\t\t\t\tpt = tree.getDisplay().map(null, tree, pt);", "-\t\t\t\t\tTreeItem nextItem = null;", "-\t\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "-\t\t\t\t\t\tnextItem = previousItem(tree, item);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "-\t\t\t\t\t\tnextItem = nextItem(tree, item);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (nextItem != null) tree.showItem(nextItem);", "-\t\t\t\t\tscrollBeginTime = 0;", "-\t\t\t\t\tscrollItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "-\t\t\t\tscrollItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\tif ((effect & DND.FEEDBACK_INSERT_AFTER) != 0 ||", "-\t\t\t(effect & DND.FEEDBACK_INSERT_BEFORE) != 0) {", "-\t\t\tif (currentItem != item || ", "-\t\t\t\t ((effect & DND.FEEDBACK_INSERT_AFTER) != (currentEffect & DND.FEEDBACK_INSERT_AFTER)) ||", "-\t\t\t\t ((effect & DND.FEEDBACK_INSERT_BEFORE) != (currentEffect & DND.FEEDBACK_INSERT_BEFORE))) { ", "-\t\t\t\tsetInsertMark(tree, item, (effect & DND.FEEDBACK_INSERT_BEFORE) != 0);", "-\t\t\t\tcurrentEffect = effect;", "-\t\t\t\tcurrentItem = item;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tsetInsertMark(tree, null, false);", "-\t\t}", "-\t\t// save current effect for selection feedback", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5647fb5f2009eecb837a902c827e9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TableDropTargetEffect.java", "commitBeforeChange": "8200799fd4fc9f26a937f37e60a9ef54396d4890", "commitAfterChange": "ce281cb196b10adcbca7d0a8e66ab94ce171eb76", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void dragOver(DropTargetEvent event)", "signatureAfterChange": " \tpublic void dragOver(DropTargetEvent event)", "diff": ["-\t\tTable table = (Table) control;", "-", "-\t\tTableItem item = (TableItem)getItem(table, event.x, event.y);", "-", "-\t\tif ((effect & DND.FEEDBACK_SCROLL) == 0) {", "-\t\t\tscrollBeginTime = 0;", "-\t\t\tscrollItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "-\t\t\t\t\tRectangle area = table.getClientArea();", "-\t\t\t\t\tint headerHeight = table.getHeaderHeight();", "-\t\t\t\t\tint itemHeight= table.getItemHeight();", "-\t\t\t\t\tPoint pt = new Point(event.x, event.y);", "-\t\t\t\t\tpt = table.getDisplay().map(null, table, pt);", "-\t\t\t\t\tTableItem nextItem = null;", "-\t\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.max(0, table.indexOf(item)-1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.min(table.getItemCount()-1, table.indexOf(item)+1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (nextItem != null) table.showItem(nextItem);", "-\t\t\t\t\tscrollBeginTime = 0;", "-\t\t\t\t\tscrollItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "-\t\t\t\tscrollItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\t// store current effect for selection feedback"]}], "num": 57851}