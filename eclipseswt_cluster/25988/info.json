{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3d15cf18615bdfbe307bed471dcf580", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b259aa2e912dcf5159baf53cca1df91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "commitAfterChange": "49a0d281d71c7b0b4f050c8585ea47184b029cc7", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  int gtk_preedit_changed (int imcontext)", "signatureAfterChange": "  int gtk_preedit_changed (int imcontext)", "diff": ["-\tif (hooks (SWT.ImeComposition)) {", "-\t\tint /*long*/ imHandle = imHandle ();", "-\t\tint /*long*/ [] preeditString = new int /*long*/ [1];", "-\t\tint /*long*/ [] pangoAttrs = new int /*long*/ [1];", "-\t\tint [] cursorPos = new int [1];", "-\t\tOS.gtk_im_context_get_preedit_string (imHandle, preeditString, pangoAttrs, cursorPos);", "-\t\tchar [] chars = null;", "-\t\tint [] ranges = null;", "-\t\tTextStyle [] styles = null;", "-\t\tif (preeditString [0] != 0) {", "-\t\t\tint length = OS.strlen (preeditString [0]);", "-\t\t\tbyte [] buffer = new byte [length];", "-\t\t\tOS.memmove (buffer, preeditString [0], length);", "-\t\t\tchars = Converter.mbcsToWcs (null, buffer);", "-\t\t\tif (pangoAttrs [0] != 0) {", "-\t\t\t\tint count = 0;", "-\t\t\t\tint /*long*/ iterator = OS.pango_attr_list_get_iterator (pangoAttrs [0]);", "-\t\t\t\twhile (OS.pango_attr_iterator_next (iterator)) count++;", "-\t\t\t\tOS.pango_attr_iterator_destroy (iterator);", "-\t\t\t\tranges = new int [count * 2];", "-\t\t\t\tstyles = new TextStyle [count];", "-\t\t\t\titerator = OS.pango_attr_list_get_iterator (pangoAttrs [0]);", "-\t\t\t\tPangoAttrColor attrColor = new PangoAttrColor ();", "-\t\t\t\tPangoAttrInt attrInt = new PangoAttrInt ();", "-\t\t\t\tint [] start = new int [1];", "-\t\t\t\tint [] end = new int [1];", "-\t\t\t\tfor (int i = 0; i < count; i++) {", "-\t\t\t\t\tOS.pango_attr_iterator_range (iterator, start, end);", "-\t\t\t\t\tranges [i * 2] = (int)/*64*/OS.g_utf8_pointer_to_offset (preeditString [0], preeditString [0] + start [0]);", "-\t\t\t\t\tranges [i * 2 + 1] = (int)/*64*/OS.g_utf8_pointer_to_offset (preeditString [0], preeditString [0] + end [0]) - ranges [i * 2];", "-\t\t\t\t\tstyles [i] = new TextStyle (null, null, null);", "-\t\t\t\t\tint /*long*/ attr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_FOREGROUND);", "-\t\t\t\t\tif (attr != 0) {", "-\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "-\t\t\t\t\t\tGdkColor color = new GdkColor ();", "-\t\t\t\t\t\tcolor.red = attrColor.color_red;", "-\t\t\t\t\t\tcolor.green = attrColor.color_green;", "-\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "-\t\t\t\t\t\tstyles [i].foreground = Color.gtk_new (display, color);", "-\t\t\t\t\t}", "-\t\t\t\t\tattr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_BACKGROUND);", "-\t\t\t\t\tif (attr != 0) {", "-\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "-\t\t\t\t\t\tGdkColor color = new GdkColor ();", "-\t\t\t\t\t\tcolor.red = attrColor.color_red;", "-\t\t\t\t\t\tcolor.green = attrColor.color_green;", "-\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "-\t\t\t\t\t\tstyles [i].background = Color.gtk_new (display, color);", "-\t\t\t\t\t}", "-\t\t\t\t\tattr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_UNDERLINE);", "-\t\t\t\t\tif (attr != 0) {", "-\t\t\t\t\t\tOS.memmove (attrInt, attr, PangoAttrInt.sizeof);", "-\t\t\t\t\t\tstyles [i].underline = attrInt.value != OS.PANGO_UNDERLINE_NONE;;", "-\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_SINGLE;", "-\t\t\t\t\t\tswitch (attrInt.value) {", "-\t\t\t\t\t\t\tcase OS.PANGO_UNDERLINE_DOUBLE:", "-\t\t\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_DOUBLE;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\tcase OS.PANGO_UNDERLINE_ERROR:", "-\t\t\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_ERROR;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (styles [i].underline) {", "-\t\t\t\t\t\t\tattr = OS.pango_attr_iterator_get(iterator, OS.PANGO_ATTR_UNDERLINE_COLOR);", "-\t\t\t\t\t\t\tif (attr != 0) {", "-\t\t\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "-\t\t\t\t\t\t\t\tGdkColor color = new GdkColor ();", "-\t\t\t\t\t\t\t\tcolor.red = attrColor.color_red;", "-\t\t\t\t\t\t\t\tcolor.green = attrColor.color_green;", "-\t\t\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "-\t\t\t\t\t\t\t\tstyles [i].underlineColor = Color.gtk_new (display, color);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.pango_attr_iterator_next (iterator);", "-\t\t\t\t}", "-\t\t\t\tOS.pango_attr_iterator_destroy (iterator);", "-\t\t\t\tOS.pango_attr_list_unref (pangoAttrs [0]);\t", "-\t\t\t}", "-\t\t\tOS.g_free (preeditString [0]);", "-\t\t}", "-\t\tif (chars != null) {", "-\t\t\tdisplay.inComposition = true;", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.detail = SWT.COMPOSITION_CHANGED;", "-\t\t\tevent.text = new String (chars);", "-\t\t\tevent.index = cursorPos [0];", "-\t\t\tevent.ranges = ranges;", "-\t\t\tevent.styles = styles;", "-\t\t\tsendEvent (SWT.ImeComposition, event);", "-\t\t}", "-\t} else {", "-\t\tdisplay.showIMWindow (this);", "-\t}", "+\tdisplay.showIMWindow (this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e1d0df066c2319cc859db0725351a29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "536f955c2387b36f82f96dd59e83e27146c886e4", "commitAfterChange": "4e02bbdb33d2b1414d624d9aef6fa11969701767", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  int gtk_preedit_changed (int imcontext)", "signatureAfterChange": "  int gtk_preedit_changed (int imcontext)", "diff": ["-\tdisplay.showIMWindow (this);", "+\tif (hooks (SWT.ImeComposition)) {", "+\t\tint /*long*/ imHandle = imHandle ();", "+\t\tint /*long*/ [] preeditString = new int /*long*/ [1];", "+\t\tint /*long*/ [] pangoAttrs = new int /*long*/ [1];", "+\t\tint [] cursorPos = new int [1];", "+\t\tOS.gtk_im_context_get_preedit_string (imHandle, preeditString, pangoAttrs, cursorPos);", "+\t\tchar [] chars = null;", "+\t\tint [] ranges = null;", "+\t\tTextStyle [] styles = null;", "+\t\tif (preeditString [0] != 0) {", "+\t\t\tint length = OS.strlen (preeditString [0]);", "+\t\t\tbyte [] buffer = new byte [length];", "+\t\t\tOS.memmove (buffer, preeditString [0], length);", "+\t\t\tchars = Converter.mbcsToWcs (null, buffer);", "+\t\t\tif (pangoAttrs [0] != 0) {", "+\t\t\t\tint count = 0;", "+\t\t\t\tint /*long*/ iterator = OS.pango_attr_list_get_iterator (pangoAttrs [0]);", "+\t\t\t\twhile (OS.pango_attr_iterator_next (iterator)) count++;", "+\t\t\t\tOS.pango_attr_iterator_destroy (iterator);", "+\t\t\t\tranges = new int [count * 2];", "+\t\t\t\tstyles = new TextStyle [count];", "+\t\t\t\titerator = OS.pango_attr_list_get_iterator (pangoAttrs [0]);", "+\t\t\t\tPangoAttrColor attrColor = new PangoAttrColor ();", "+\t\t\t\tPangoAttrInt attrInt = new PangoAttrInt ();", "+\t\t\t\tint [] start = new int [1];", "+\t\t\t\tint [] end = new int [1];", "+\t\t\t\tfor (int i = 0; i < count; i++) {", "+\t\t\t\t\tOS.pango_attr_iterator_range (iterator, start, end);", "+\t\t\t\t\tranges [i * 2] = (int)/*64*/OS.g_utf8_pointer_to_offset (preeditString [0], preeditString [0] + start [0]);", "+\t\t\t\t\tranges [i * 2 + 1] = (int)/*64*/OS.g_utf8_pointer_to_offset (preeditString [0], preeditString [0] + end [0]) - ranges [i * 2];", "+\t\t\t\t\tstyles [i] = new TextStyle (null, null, null);", "+\t\t\t\t\tint /*long*/ attr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_FOREGROUND);", "+\t\t\t\t\tif (attr != 0) {", "+\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "+\t\t\t\t\t\tGdkColor color = new GdkColor ();", "+\t\t\t\t\t\tcolor.red = attrColor.color_red;", "+\t\t\t\t\t\tcolor.green = attrColor.color_green;", "+\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "+\t\t\t\t\t\tstyles [i].foreground = Color.gtk_new (display, color);", "+\t\t\t\t\t}", "+\t\t\t\t\tattr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_BACKGROUND);", "+\t\t\t\t\tif (attr != 0) {", "+\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "+\t\t\t\t\t\tGdkColor color = new GdkColor ();", "+\t\t\t\t\t\tcolor.red = attrColor.color_red;", "+\t\t\t\t\t\tcolor.green = attrColor.color_green;", "+\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "+\t\t\t\t\t\tstyles [i].background = Color.gtk_new (display, color);", "+\t\t\t\t\t}", "+\t\t\t\t\tattr = OS.pango_attr_iterator_get (iterator, OS.PANGO_ATTR_UNDERLINE);", "+\t\t\t\t\tif (attr != 0) {", "+\t\t\t\t\t\tOS.memmove (attrInt, attr, PangoAttrInt.sizeof);", "+\t\t\t\t\t\tstyles [i].underline = attrInt.value != OS.PANGO_UNDERLINE_NONE;;", "+\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_SINGLE;", "+\t\t\t\t\t\tswitch (attrInt.value) {", "+\t\t\t\t\t\t\tcase OS.PANGO_UNDERLINE_DOUBLE:", "+\t\t\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_DOUBLE;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase OS.PANGO_UNDERLINE_ERROR:", "+\t\t\t\t\t\t\t\tstyles [i].underlineStyle = SWT.UNDERLINE_ERROR;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (styles [i].underline) {", "+\t\t\t\t\t\t\tattr = OS.pango_attr_iterator_get(iterator, OS.PANGO_ATTR_UNDERLINE_COLOR);", "+\t\t\t\t\t\t\tif (attr != 0) {", "+\t\t\t\t\t\t\t\tOS.memmove (attrColor, attr, PangoAttrColor.sizeof);", "+\t\t\t\t\t\t\t\tGdkColor color = new GdkColor ();", "+\t\t\t\t\t\t\t\tcolor.red = attrColor.color_red;", "+\t\t\t\t\t\t\t\tcolor.green = attrColor.color_green;", "+\t\t\t\t\t\t\t\tcolor.blue = attrColor.color_blue;", "+\t\t\t\t\t\t\t\tstyles [i].underlineColor = Color.gtk_new (display, color);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.pango_attr_iterator_next (iterator);", "+\t\t\t\t}", "+\t\t\t\tOS.pango_attr_iterator_destroy (iterator);", "+\t\t\t\tOS.pango_attr_list_unref (pangoAttrs [0]);\t", "+\t\t\t}", "+\t\t\tOS.g_free (preeditString [0]);", "+\t\t}", "+\t\tif (chars != null) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.detail = SWT.COMPOSITION_CHANGED;", "+\t\t\tevent.text = new String (chars);", "+\t\t\tevent.index = cursorPos [0];", "+\t\t\tevent.ranges = ranges;", "+\t\t\tevent.styles = styles;", "+\t\t\tsendEvent (SWT.ImeComposition, event);", "+\t\t}", "+\t} else {", "+\t\tdisplay.showIMWindow (this);", "+\t}"]}], "num": 25988}