{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "738b6b74d3bd944695c2f956db2af056", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fad5f28e7e5bb8c6198ef82919c998d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "4d7a5617c7fd9b4d56124b2a05a51b83b51caab1", "commitAfterChange": "d474035c5d20e929e4ad7bf4aedf2c50355572cf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\t\t\t\t\tint pathString = 0;", "-\t\t\t\t\tint fullString = 0;", "-\t\t\t\t\tint fileString = 0;", "-\t\t\t\t\t\t\tint fullUrl = OS.CFURLCreateCopyAppendingPathComponent(OS.kCFAllocatorDefault, pathUrl, record.saveFileName, false);", "-\t\t\t\t\t\t\tpathString = OS.CFURLCopyFileSystemPath(pathUrl, OS.kCFURLPOSIXPathStyle);", "-\t\t\t\t\t\t\tfullString = OS.CFURLCopyFileSystemPath(fullUrl, OS.kCFURLPOSIXPathStyle);", "-\t\t\t\t\t\t\tfileString = record.saveFileName;", "-\t\t\t\t\t\t\tOS.CFRelease (pathUrl);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t/* Filter path */", "+\t\t\t\t\t\t\tint pathString = OS.CFURLCopyFileSystemPath (pathUrl, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\t\t\t\tfilterPath = getString (pathString);", "+\t\t\t\t\t\t\tOS.CFRelease (pathString);", "+", "+\t\t\t\t\t\t\t/* Full path */", "+\t\t\t\t\t\t\tint fullUrl = OS.CFURLCreateCopyAppendingPathComponent (OS.kCFAllocatorDefault, pathUrl, record.saveFileName, false);", "+\t\t\t\t\t\t\tint fullString = OS.CFURLCopyFileSystemPath (fullUrl, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\t\t\t\tfullPath = getString (fullString);", "+\t\t\t\t\t\t\tOS.CFRelease (fullString);", "+", "+\t\t\t\t\t\t\t/* File name */", "+\t\t\t\t\t\t\tfileName = fileNames [0] = getString (record.saveFileName);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tOS.CFRelease (pathUrl);", "+\t\t\t\t\t\t\t\tint fullString = OS.CFURLCopyFileSystemPath (url, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t/* File path */", "+\t\t\t\t\t\t\t\tint pathUrl = OS.CFURLCreateCopyDeletingLastPathComponent (OS.kCFAllocatorDefault, url);", "+\t\t\t\t\t\t\t\tint pathString = OS.CFURLCopyFileSystemPath (pathUrl, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\t\t\t\t\tString path = getString (pathString);", "+\t\t\t\t\t\t\t\tOS.CFRelease (pathString);", "+\t\t\t\t\t\t\t\tOS.CFRelease (pathUrl);", "+", "-\t\t\t\t\t\t\t\t\tint pathUrl = OS.CFURLCreateCopyDeletingLastPathComponent(OS.kCFAllocatorDefault, url);", "-\t\t\t\t\t\t\t\t\tpathString = OS.CFURLCopyFileSystemPath (pathUrl, OS.kCFURLPOSIXPathStyle);", "-\t\t\t\t\t\t\t\t\tfullString = OS.CFURLCopyFileSystemPath (url, OS.kCFURLPOSIXPathStyle);", "-\t\t\t\t\t\t\t\t\tfileString = OS.CFURLCopyLastPathComponent (url);", "-\t\t\t\t\t\t\t\t\tOS.CFRelease (pathUrl);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tint lastString = OS.CFURLCopyLastPathComponent (url);", "-\t\t\t\t\t\t\t\t\tint length = OS.CFStringGetLength (lastString);", "-\t\t\t\t\t\t\t\t\tchar [] buffer= new char [length];", "-\t\t\t\t\t\t\t\t\tCFRange range = new CFRange ();", "-\t\t\t\t\t\t\t\t\trange.length = length;", "-\t\t\t\t\t\t\t\t\tOS.CFStringGetCharacters (lastString, range, buffer);", "-\t\t\t\t\t\t\t\t\tfileNames [i] = new String (buffer);", "-\t\t\t\t\t\t\t\t\tOS.CFRelease (lastString);", "+\t\t\t\t\t\t\t\t\t/* Full path */", "+\t\t\t\t\t\t\t\t\tfullPath = getString (fullString);", "+", "+\t\t\t\t\t\t\t\t\t/* Filter path */", "+\t\t\t\t\t\t\t\t\tfilterPath = path;", "+", "+\t\t\t\t\t\t\t\t\t/* File name */", "+\t\t\t\t\t\t\t\t\tint fileString = OS.CFURLCopyLastPathComponent (url);", "+\t\t\t\t\t\t\t\t\tfileName = fileNames [0] = getString (fileString);", "+\t\t\t\t\t\t\t\t\tOS.CFRelease (fileString);", "+\t\t\t\t\t\t\t\t} else {\t\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\t\tif (path.equals (filterPath)) {", "+\t\t\t\t\t\t\t\t\t\tint fileString = OS.CFURLCopyLastPathComponent (url);", "+\t\t\t\t\t\t\t\t\t\tfileNames [i] = getString (fileString);", "+\t\t\t\t\t\t\t\t\t\tOS.CFRelease (fileString);", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tfileNames [i] = getString (fullString);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tOS.CFRelease (fullString);", "-\t\t\t\t\t", "-\t\t\t\t\tif (pathString != 0) {\t\t", "-\t\t\t\t\t\tint length = OS.CFStringGetLength (pathString);", "-\t\t\t\t\t\tchar [] buffer= new char [length];", "-\t\t\t\t\t\tCFRange range = new CFRange ();", "-\t\t\t\t\t\trange.length = length;", "-\t\t\t\t\t\tOS.CFStringGetCharacters (pathString, range, buffer);", "-\t\t\t\t\t\tOS.CFRelease (pathString);", "-\t\t\t\t\t\tfilterPath = new String (buffer);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (fullString != 0) {", "-\t\t\t\t\t\tint length = OS.CFStringGetLength (fullString);", "-\t\t\t\t\t\tchar [] buffer= new char [length];", "-\t\t\t\t\t\tCFRange range = new CFRange ();", "-\t\t\t\t\t\trange.length = length;", "-\t\t\t\t\t\tOS.CFStringGetCharacters (fullString, range, buffer);", "-\t\t\t\t\t\tOS.CFRelease (fullString);", "-\t\t\t\t\t\tfullPath = new String (buffer);", "-\t\t\t\t\t} ", "-\t\t\t\t\tif (fileString != 0) {", "-\t\t\t\t\t\tint length = OS.CFStringGetLength (fileString);", "-\t\t\t\t\t\tchar [] buffer= new char [length];", "-\t\t\t\t\t\tCFRange range = new CFRange ();", "-\t\t\t\t\t\trange.length = length;", "-\t\t\t\t\t\tOS.CFStringGetCharacters (fileString, range, buffer);", "-\t\t\t\t\t\tOS.CFRelease (fileString);", "-\t\t\t\t\t\tfileName = fileNames [0] = new String (buffer);", "-\t\t\t\t\t}", "+\t\t\t\tOS.NavDisposeReply (record);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adff18d736c39f558ea46d01c055146", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "43edc8526cd83c21442a0953e22b63d80dc5f862", "commitAfterChange": "105b5a42fd897b8ae6aa22075fae14da8947b7af", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": "  int NotifyCertProblem (long socketInfo, long status, long targetSite, long _suppressError)", "signatureAfterChange": "  int NotifyCertProblem (long socketInfo, long status, long targetSite, long _suppressError)", "diff": ["-\t\tlong /*int*/ ptr = XPCOM.nsEmbedString_new ();", "-\t\trc = cert.GetCommonName (ptr);", "+\t\tnsEmbedString ptr = new nsEmbedString ();", "+\t\trc = cert.GetCommonName (ptr.getAddress());", "-\t\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\t\tbuffer = XPCOM.nsEmbedString_get (ptr);", "-\t\tchar[] chars = new char[length];", "-\t\tXPCOM.memmove (chars, buffer, length * 2);", "-\t\tString name = new String (chars);", "+\t\tString name = ptr.toString ();", "-\t\tXPCOM.nsEmbedString_delete (ptr);", "+\t\tptr.dispose ();", "-\t\tlong /*int*/ ptr = XPCOM.nsEmbedString_new ();", "-\t\trc = validity.GetNotBeforeGMT (ptr);", "+\t\tnsEmbedString ptr = new nsEmbedString ();", "+\t\trc = validity.GetNotBeforeGMT (ptr.getAddress());", "-\t\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\t\tbuffer = XPCOM.nsEmbedString_get (ptr);", "-\t\tchar[] chars = new char[length];", "-\t\tXPCOM.memmove (chars, buffer, length * 2);", "-\t\tString notBefore = new String (chars);", "-\t\tXPCOM.nsEmbedString_delete (ptr);", "+\t\tString notBefore = ptr.toString ();", "+\t\tptr.dispose ();", "-\t\tptr = XPCOM.nsEmbedString_new ();", "-\t\trc = validity.GetNotAfterGMT (ptr);", "+\t\tptr = new nsEmbedString ();", "+\t\trc = validity.GetNotAfterGMT (ptr.getAddress());", "-\t\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\t\tbuffer = XPCOM.nsEmbedString_get (ptr);", "-\t\tchars = new char[length];", "-\t\tXPCOM.memmove (chars, buffer, length * 2);", "-\t\tString notAfter = new String (chars);", "-\t\tXPCOM.nsEmbedString_delete (ptr);", "+\t\tString notAfter = ptr.toString ();", "+\t\tptr.dispose ();", "-\t\tlong /*int*/ ptr = XPCOM.nsEmbedString_new ();", "-\t\trc = cert.GetIssuerCommonName (ptr);", "+\t\tnsEmbedString ptr = new nsEmbedString ();", "+\t\trc = cert.GetIssuerCommonName (ptr.getAddress());", "-\t\tlength = XPCOM.nsEmbedString_Length (ptr);", "-\t\tbuffer = XPCOM.nsEmbedString_get (ptr);", "-\t\tchar[] chars = new char[length];", "-\t\tXPCOM.memmove (chars, buffer, length * 2);", "-\t\tString name = new String (chars);", "+\t\tString name = ptr.toString ();", "-\t\tXPCOM.nsEmbedString_delete (ptr);", "+\t\tptr.dispose ();"]}], "num": 27617}