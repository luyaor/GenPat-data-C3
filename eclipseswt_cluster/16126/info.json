{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "656135df87fba664d652293dd3409403", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "408cb012fe95dd593fb746faee55f431", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 227, "signatureBeforeChange": " public static final synchronized native int XSetDashes(int display, int gc, int dash_offset, byte[] dash_list, int n);", "signatureAfterChange": " public static final int XSetDashes(int display, int gc, int dash_offset, byte[] dash_list, int n)", "diff": ["-public static final synchronized native void XSetClipRectangles(int display, int gc, int clip_x_origin, int clip_y_origin, XRectangle rectangles, int n, int ordering);", "-public static final synchronized native int XSetDashes(int display, int gc, int dash_offset, byte[] dash_list, int n);", "+public static final native int _XSetDashes(int display, int gc, int dash_offset, byte[] dash_list, int n);", "+public static final int XSetDashes(int display, int gc, int dash_offset, byte[] dash_list, int n) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XSetDashes(display, gc, dash_offset, dash_list, n);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19de7129b43fa9b0e79c2e463e2cbcdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 53, "signatureBeforeChange": " public static final synchronized native int XCreateBitmapFromData(int display, int drawable, byte[] data, int width, int height);", "signatureAfterChange": " public static final int XCreateBitmapFromData(int display, int drawable, byte[] data, int width, int height)", "diff": ["-public static final synchronized native void XCopyPlane(int display, int src, int dest, int gc, int src_x, int src_y, int width, int height, int dest_x, int dest_y, int plane);", "-public static final synchronized native int XCreateBitmapFromData(int display, int drawable, byte[] data, int width, int height);", "+public static final native int _XCreateBitmapFromData(int display, int drawable, byte[] data, int width, int height);", "+public static final int XCreateBitmapFromData(int display, int drawable, byte[] data, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XCreateBitmapFromData(display, drawable, data, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d743569fa26e8f9d7aa7b971d8966c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 246, "signatureBeforeChange": " public static final synchronized native int g_locale_from_utf8(int utf8string, int len, int[] bytes_read, int[] bytes_written, int[] error);", "signatureAfterChange": " public static final int g_locale_from_utf8(int utf8string, int len, int[] bytes_read, int[] bytes_written, int[] error)", "diff": ["-public static final synchronized native int /*long*/ g_list_reverse(int /*long*/ list);", "-public static final synchronized native int /*long*/ g_locale_from_utf8(int /*long*/ utf8string, int /*long*/ len, int /*long*/[] bytes_read, int /*long*/[] bytes_written, int /*long*/[] error);", "+public static final native int /*long*/ _g_locale_from_utf8(int /*long*/ utf8string, int /*long*/ len, int /*long*/[] bytes_read, int /*long*/[] bytes_written, int /*long*/[] error);", "+public static final int /*long*/ g_locale_from_utf8(int /*long*/ utf8string, int /*long*/ len, int /*long*/[] bytes_read, int /*long*/[] bytes_written, int /*long*/[] error) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _g_locale_from_utf8(utf8string, len, bytes_read, bytes_written, error);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa1cd352e2cdfe46ca3b4b0644e80fa7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 934, "methodNumberAfterChange": 1738, "signatureBeforeChange": " public static final synchronized native boolean pango_layout_xy_to_index(int layout, int x, int y, int[] index, int[] trailing);", "signatureAfterChange": " public static final boolean pango_layout_xy_to_index(int layout, int x, int y, int[] index, int[] trailing)", "diff": ["-public static final synchronized native void pango_layout_set_wrap (int /*long*/ layout, int wrap);", "-public static final synchronized native boolean pango_layout_xy_to_index(int /*long*/ layout, int x, int y, int[] index, int[] trailing);", "+public static final native boolean _pango_layout_xy_to_index(int /*long*/ layout, int x, int y, int[] index, int[] trailing);", "+public static final boolean pango_layout_xy_to_index(int /*long*/ layout, int x, int y, int[] index, int[] trailing) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _pango_layout_xy_to_index(layout, x, y, index, trailing);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84feeb940a4d5cf2e52f33a33e0cbd9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 478, "signatureBeforeChange": " public static final synchronized native int gdk_pango_layout_get_clip_region(int layout, int x_origin, int y_origin, int[] index_ranges, int n_ranges);", "signatureAfterChange": " public static final int gdk_pango_layout_get_clip_region(int layout, int x_origin, int y_origin, int[] index_ranges, int n_ranges)", "diff": ["-public static final synchronized native void gdk_pango_context_set_colormap(int /*long*/ context, int /*long*/ colormap);", "-public static final synchronized native int /*long*/ gdk_pango_layout_get_clip_region(int /*long*/ layout, int x_origin, int y_origin, int[] index_ranges, int n_ranges);", "+public static final native int /*long*/ _gdk_pango_layout_get_clip_region(int /*long*/ layout, int x_origin, int y_origin, int[] index_ranges, int n_ranges);", "+public static final int /*long*/ gdk_pango_layout_get_clip_region(int /*long*/ layout, int x_origin, int y_origin, int[] index_ranges, int n_ranges) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _gdk_pango_layout_get_clip_region(layout, x_origin, y_origin, index_ranges, n_ranges);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea24f34399b009a887a126626a95a0ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 211, "signatureBeforeChange": " public static final synchronized native int XReparentWindow(int display, int win, int parent, int x, int y);", "signatureAfterChange": " public static final int XReparentWindow(int display, int win, int parent, int x, int y)", "diff": ["-public static final synchronized native int XRectInRegion(int region, int x, int y, int width, int height);", "-public static final synchronized native int XReparentWindow(int display, int win, int parent, int x, int y);", "+public static final native int _XReparentWindow(int display, int win, int parent, int x, int y);", "+public static final int XReparentWindow(int display, int win, int parent, int x, int y) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XReparentWindow(display, win, parent, x, y);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1f473834c38c97f7c658bc03ea1cc37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 486, "signatureBeforeChange": " public static final synchronized native int gdk_pixbuf_new(int colorspace, boolean has_alpha, int bits_per_sample, int width, int height);", "signatureAfterChange": " public static final int gdk_pixbuf_new(int colorspace, boolean has_alpha, int bits_per_sample, int width, int height)", "diff": ["-public static final synchronized native int gdk_pixbuf_get_rowstride(int /*long*/ pixbuf);", "-public static final synchronized native int /*long*/ gdk_pixbuf_new(int colorspace, boolean has_alpha, int bits_per_sample, int width, int height);", "+public static final native int /*long*/ _gdk_pixbuf_new(int colorspace, boolean has_alpha, int bits_per_sample, int width, int height);", "+public static final int /*long*/ gdk_pixbuf_new(int colorspace, boolean has_alpha, int bits_per_sample, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _gdk_pixbuf_new(colorspace, has_alpha, bits_per_sample, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb1630429163218dae22280ba155004", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/motif/org/eclipse/swt/internal/motif/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 431, "signatureBeforeChange": " public static final synchronized native int XmGetPixmapByDepth(int screen, byte[] image_name, int foreground, int background, int depth);", "signatureAfterChange": " public static final int XmGetPixmapByDepth(int screen, byte[] image_name, int foreground, int background, int depth)", "diff": ["-public static final synchronized native int XmGetPixmap(int screen, byte[] name, int fgPixel, int bgPixel);", "-public static final synchronized native int XmGetPixmapByDepth(int screen, byte[] image_name, int foreground, int background, int depth);", "+public static final native int _XmGetPixmapByDepth(int screen, byte[] image_name, int foreground, int background, int depth);", "+public static final int XmGetPixmapByDepth(int screen, byte[] image_name, int foreground, int background, int depth) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _XmGetPixmapByDepth(screen, image_name, foreground, background, depth);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e83d139308f9f901c8cf34212c27b6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gnome/org/eclipse/swt/internal/gnome/GNOME.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 10, "signatureBeforeChange": " public static final synchronized native int gnome_icon_theme_lookup_icon(int theme, int icon_name, int size, int[] icon_data, int[] base_size);", "signatureAfterChange": " public static final int gnome_icon_theme_lookup_icon(int theme, int icon_name, int size, int[] icon_data, int[] base_size)", "diff": ["-public static final synchronized native int /*long*/ gnome_icon_lookup(int /*long*/ icon_theme, int /*long*/ thumbnail_factory, byte[] file_uri, byte[] custom_icon, int /*long*/ file_info, byte[] mime_type, int flags, int[] result);", "-public static final synchronized native int /*long*/ gnome_icon_theme_lookup_icon(int /*long*/ theme, int /*long*/ icon_name, int size, int /*long*/[] icon_data, int[] base_size);", "+public static final native int /*long*/ _gnome_icon_theme_lookup_icon(int /*long*/ theme, int /*long*/ icon_name, int size, int /*long*/[] icon_data, int[] base_size);", "+public static final int /*long*/ gnome_icon_theme_lookup_icon(int /*long*/ theme, int /*long*/ icon_name, int size, int /*long*/[] icon_data, int[] base_size) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _gnome_icon_theme_lookup_icon(theme, icon_name, size, icon_data, base_size);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764c504bbf17e3a46892a299e8a99249", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "2651399e384e9c4829133440651b843cd4086a42", "commitAfterChange": "ac97e9de76dcc2aa6055a132a144ae7128e3ee2d", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 273, "signatureBeforeChange": " public static final synchronized native int cairo_xlib_surface_create (int dpy, int drawable, int visual, int width, int height);", "signatureAfterChange": " public static final int cairo_xlib_surface_create(int dpy, int drawable, int visual, int width, int height)", "diff": ["-public static final synchronized native void cairo_matrix_transform_point (double[] matrix, double[] x, double[] y);", "-public static final synchronized native int /*long*/ cairo_xlib_surface_create (int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height);", "+public static final native int /*long*/ _cairo_xlib_surface_create(int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height);", "+public static final int /*long*/ cairo_xlib_surface_create(int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _cairo_xlib_surface_create(dpy, drawable, visual, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815a79875777e5d947e192e0be9de7db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "2651399e384e9c4829133440651b843cd4086a42", "commitAfterChange": "ac97e9de76dcc2aa6055a132a144ae7128e3ee2d", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 88, "signatureBeforeChange": " public static final synchronized native int cairo_image_surface_create_for_data (int data, int format, int width, int height, int stride);", "signatureAfterChange": " public static final int cairo_image_surface_create_for_data(int data, int format, int width, int height, int stride)", "diff": ["-public static final synchronized native int /*long*/ cairo_image_surface_create (int format, int width, int height);", "-public static final synchronized native int /*long*/ cairo_image_surface_create_for_data (int /*long*/ data, int format, int width, int height, int stride);", "+public static final native int /*long*/ _cairo_image_surface_create_for_data(int /*long*/ data, int format, int width, int height, int stride);", "+public static final int /*long*/ cairo_image_surface_create_for_data(int /*long*/ data, int format, int width, int height, int stride) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _cairo_image_surface_create_for_data(data, format, width, height, stride);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 16126}