{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "745fbd8164cc90df3112afdb5882614f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7557773f9e3e94b87150c064ce77bcfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "0e9eca964966bb82a22ad770be6909c085a417eb", "commitAfterChange": "3fda6e1df3fe1ec04875443c74099395f2ec69b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public static Frame new_Frame (final Composite parent)", "signatureAfterChange": "  public static Frame new_Frame (final Composite parent)", "diff": ["-\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "-\tif (\"1.3\".equals(System.getProperty(\"java.specification.version\"))) {", "-\t\tparent.addListener (SWT.Activate, new Listener () {", "-\t\t\tpublic void handleEvent (Event e) {", "-\t\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\t\tpublic void run () {", "+\t", "+\t/*", "+\t* Generate the appropriate events to activate and deactivate", "+\t* the embedded frame. This is needed in order to make keyboard", "+\t* focus work properly for lightweights.", "+\t*/", "+\tparent.addListener (SWT.Activate, new Listener () {", "+\t\tpublic void handleEvent (Event e) {", "+\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tif (JDK1_3) {", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_GAINED_FOCUS));", "-\t\t\t\t});", "-\t\t\t}", "-\t\t});", "-\t\tparent.addListener (SWT.Deactivate, new Listener () {", "-\t\t\tpublic void handleEvent (Event e) {", "-\t\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\t\tpublic void run () {", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t});", "+\tparent.addListener (SWT.Deactivate, new Listener () {", "+\t\tpublic void handleEvent (Event e) {", "+\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tif (JDK1_3) {", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_LOST_FOCUS));", "-\t\t\t\t});", "-\t\t\t}", "-\t\t});", "-\t}", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t});", "+", "-\t\t\tframe.dispose ();", "+\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\tpublic void run () {", "+\t\t\t\t\tframe.dispose ();", "+\t\t\t\t}", "+\t\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593034ff09abb5b4e0af8e9d2208d409", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/internal/awt/SWT_AWT.java", "commitBeforeChange": "92aa0fec2473a32a0983f7b949e90272fe8e3070", "commitAfterChange": "fcfbb1d1dcfd77e9015fae74357f421a3eca90ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Frame new_Frame (final Composite parent)", "signatureAfterChange": "  public static Frame new_Frame (final Composite parent)", "diff": ["-\tfinal Frame frame = (Frame) value;\t", "-\tparent.addListener (SWT.Activate, new Listener () {", "-\t\tpublic void handleEvent (Event e) {", "-\t\t\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "-\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\tpublic void run () {", "-\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_ACTIVATED));", "-\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_GAINED));", "-\t\t\t\t}", "-\t\t\t});", "-\t\t}", "-\t});", "-\tparent.addListener (SWT.Deactivate, new Listener () {", "-\t\tpublic void handleEvent (Event e) {", "-\t\t\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "-\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\tpublic void run () {", "-\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEACTIVATED));", "-\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_LOST));", "-\t\t\t\t}", "-\t\t\t});", "-\t\t}", "-\t});", "+\tfinal Frame frame = (Frame) value;", "+\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "+\tif (\"1.3\".equals(System.getProperty(\"java.specification.version\"))) {", "+\t\tparent.addListener (SWT.Activate, new Listener () {", "+\t\t\tpublic void handleEvent (Event e) {", "+\t\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_ACTIVATED));", "+\t\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_GAINED));", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t});", "+\t\tparent.addListener (SWT.Deactivate, new Listener () {", "+\t\t\tpublic void handleEvent (Event e) {", "+\t\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEACTIVATED));", "+\t\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_LOST));", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t});", "+\t}"]}], "num": 21759}