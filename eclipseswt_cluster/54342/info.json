{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36c5485bc518692ab4b0277014e3bc1a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6b2ccd1753ae028b1eca56a6529c77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "5c289e99567660a271d673d3f8a969595f0eacd6", "commitAfterChange": "744101254cdbd3dcb566c9055e53893bc3bfba42", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " boolean paint (GC gc, TableColumn column, boolean backgroundOnly)", "signatureAfterChange": " boolean paint (GC gc, TableColumn column, boolean backgroundOnly)", "diff": ["+\t/* ", "+\t * Capture GC attributes that will need to be restored later in the paint", "+\t * process to ensure that the item paints as intended without being affected", "+\t * by GC changes made in MeasureItem/EraseItem/PaintItem callbacks.", "+\t */", "+\tint oldAlpha = gc.getAlpha ();", "+\tboolean oldAdvanced = gc.getAdvanced ();", "+\tint oldAntialias = gc.getAntialias ();", "+\tPattern oldBackgroundPattern = gc.getBackgroundPattern ();", "+\tPattern oldForegroundPattern = gc.getForegroundPattern ();", "+\tint oldInterpolation = gc.getInterpolation ();", "+\tint oldTextAntialias = gc.getTextAntialias ();", "+", "+\t\tgc.setAdvanced (oldAdvanced);", "+\t\tgc.setAlpha (oldAlpha);", "+\t\tgc.setAntialias (oldAntialias);", "+\t\tgc.setBackgroundPattern (oldBackgroundPattern);", "+\t\tgc.setForegroundPattern (oldForegroundPattern);", "+\t\tgc.setInterpolation (oldInterpolation);", "+\t\tgc.setTextAntialias (oldTextAntialias);", "-\t\tgc.setClipping (event.x, event.y, event.width, event.height);", "+\t\tgc.setClipping (cellBounds);", "+\t\tgc.setAdvanced (oldAdvanced);", "+\t\tgc.setAlpha (oldAlpha);", "+\t\tgc.setAntialias (oldAntialias);", "+\t\tgc.setBackgroundPattern (oldBackgroundPattern);", "+\t\tgc.setClipping (cellBounds);", "+\t\tgc.setForegroundPattern (oldForegroundPattern);", "+\t\tgc.setInterpolation (oldInterpolation);", "+\t\tgc.setTextAntialias (oldTextAntialias);", "-\t\tgc.setClipping (cellBounds.x, cellBounds.y, cellBounds.width, cellBounds.height);", "+\t\tgc.setClipping (cellBounds);", "-\t\tdrawFocus = isFocusItem && (event.detail & SWT.FOCUSED) != 0;", "+\t\tgc.setAdvanced (oldAdvanced);", "+\t\tgc.setAlpha (oldAlpha);", "+\t\tgc.setAntialias (oldAntialias);", "+\t\tgc.setBackgroundPattern (oldBackgroundPattern);", "+\t\tgc.setClipping (cellBounds);", "+\t\tgc.setForegroundPattern (oldForegroundPattern);", "+\t\tgc.setInterpolation (oldInterpolation);", "+\t\tgc.setTextAntialias (oldTextAntialias);", "+\t\tdrawFocus = isFocusItem && (event.detail & SWT.FOCUSED) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6203980ace9d2e1232054cd5757d4aa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void setFont(Font font)", "signatureAfterChange": " public void setFont (Font value)", "diff": ["-}", "-public void setFont(Font font) {", "-\tcheckWidget();", "-\tint itemCount = getItemCount();", "-", "-\tif (font != null && font.equals(getFont()) == true) {", "-\t\treturn;", "-\t}", "-\tsetRedraw(false);\t\t\t\t\t\t// disable redraw because itemChanged() triggers undesired redraw\t", "-\tresetItemData();\t", "-\tsuper.setFont(font);", "+public void setFont (Font value) {", "+\tcheckWidget ();", "+\tFont oldFont = getFont ();", "+\tsuper.setFont (value);", "+\tFont font = getFont ();", "+\tif (font.equals (oldFont)) return;", "+\t\t", "+\tGC gc = new GC (this);", "-\tGC gc = new GC(this);", "-\tPoint extent = gc.stringExtent(\"String\");", "-\tfontHeight = extent.y;", "-\tgc.dispose();", "+\t/* recompute the receiver's cached font height and item height values */", "+\tfontHeight = gc.getFontMetrics ().getHeight ();", "+\titemHeight = Math.max (fontHeight, imageHeight) + 2 * getCellPadding ();", "+\tPoint headerSize = header.getSize ();", "+\tint newHeaderHeight = Math.max (fontHeight, headerImageHeight) + 2 * getHeaderPadding ();", "+\tif (headerSize.y != newHeaderHeight) {", "+\t\theader.setSize (headerSize.x, newHeaderHeight);", "+\t}", "+\theader.setFont (font);", "+", "+\t/* ", "+\t * Notify all columns and items of the font change so that elements that", "+\t * use the receiver's font can recompute their cached string widths.", "+\t */", "+\tfor (int i = 0; i < columns.length; i++) {", "+\t\tcolumns [i].updateFont (gc);", "+\t}", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems [i].updateFont (gc);", "+\t}", "-\tfor (int i = 0; i < itemCount; i++) {", "-\t\tTableItem item = getItem (i);", "-\t\titem.clearTextWidths ();", "-\t\titemChanged (item, 0, getClientArea ().width);", "-\t}", "-\tsetRedraw(true);\t\t\t\t\t\t// re-enable redraw", "-\tgetHeader().setFont(font);", "+\tgc.dispose ();", "+\t", "+\tif (header.isVisible ()) header.redraw ();", "+\t", "+\t/* update scrollbars */", "+\tupdateHorizontalBar ();", "+\tScrollBar vBar = getVerticalBar ();", "+\tint thumb = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\tvBar.setThumb (thumb);", "+\tvBar.setPageIncrement (thumb);", "+\ttopIndex = vBar.getSelection ();", "+\tvBar.setVisible (thumb < vBar.getMaximum ());", "+\tredraw ();"]}], "num": 54342}