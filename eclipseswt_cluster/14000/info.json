{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34e8bb69d77d860ae06771c64727ad1c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e551c996f1e6ed3bce33ea4f9bc902a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb3534bcdc2d38bc184b055b59a542f294cf921d", "commitAfterChange": "02978a488ad6a59baa930b6015ae04662bb09af1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tid getSelectedColumnsAttribute(int childID)", "signatureAfterChange": "  \tid getSelectedColumnsAttribute(int childID)", "diff": ["-\t\tif (accessibleTableListeners.size() == 0) return null;", "+\t\tif (accessibleTableListenersSize() == 0) return null;", "-\t\tfor (int i = 0; i < accessibleTableListeners.size(); i++) {", "+\t\tfor (int i = 0; i < accessibleTableListenersSize(); i++) {", "-\t\t\t\tfor (int j = 0; j < accessibleTableListeners.size(); j++) {", "+\t\t\t\tfor (int j = 0; j < accessibleTableListenersSize(); j++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b16d5634b222cc22869ae5ec72d1752", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb3534bcdc2d38bc184b055b59a542f294cf921d", "commitAfterChange": "02978a488ad6a59baa930b6015ae04662bb09af1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tid getSelectedRowsAttribute(int childID)", "signatureAfterChange": "  \tid getSelectedRowsAttribute(int childID)", "diff": ["-\t\tif (accessibleTableListeners.size() == 0) return null;\t\t", "+\t\tif (accessibleTableListenersSize() == 0) return null;\t\t", "-\t\tfor (int i = 0; i < accessibleTableListeners.size(); i++) {", "+\t\tfor (int i = 0; i < accessibleTableListenersSize(); i++) {", "-\t\t\t\tfor (int j = 0; j < accessibleTableListeners.size(); j++) {", "+\t\t\t\tfor (int j = 0; j < accessibleTableListenersSize(); j++) {"]}], "num": 14000}