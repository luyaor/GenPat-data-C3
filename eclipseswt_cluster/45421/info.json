{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbaae38fb3bf6889fa87fe63b3604748", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae38e3e6b03a252e642a1909b7110e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5e3779cbfb81893a2f47925ddff3b334560bae92", "commitAfterChange": "58cf5ba2f8601f6ef2b80b8ff24a99a54b8d5882", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void moveBelow (Control control)", "signatureAfterChange": " public void moveBelow (Control control)", "diff": ["+\t} else {", "+\t\t/*", "+\t\t* Bug in Windows.  When SetWindowPos() is called", "+\t\t* with HWND_BOTTOM on a dialog shell, the dialog", "+\t\t* and the parent are moved to the bottom of the", "+\t\t* desktop stack.  The fix is to move the dialog", "+\t\t* to the bottom of the dialog window stack by", "+\t\t* moving behind the first dialog child.", "+\t\t*/", "+\t\tShell shell = getShell ();", "+\t\tif (this == shell && parent != null) {", "+\t\t\t/* ", "+\t\t\t* Bug in Windows.  For some reason, when GetWindow ()", "+\t\t\t* with GW_HWNDPREV is used to query the previous window", "+\t\t\t* in the z-order with the first child, Windows returns", "+\t\t\t* the first child instead of NULL.  The fix is to detect", "+\t\t\t* this case and do nothing because the control is already", "+\t\t\t* at the bottom.", "+\t\t\t*/", "+\t\t\tint hwndParent = parent.handle, hwnd = hwndParent;", "+\t\t\thwndAbove = OS.GetWindow (hwnd, OS.GW_HWNDPREV);", "+\t\t\twhile (hwndAbove != 0 && hwndAbove != hwnd) {", "+\t\t\t\tif (OS.GetWindow (hwndAbove, OS.GW_OWNER) == hwndParent) break;", "+\t\t\t\thwndAbove = OS.GetWindow (hwnd = hwndAbove, OS.GW_HWNDPREV);", "+\t\t\t}", "+\t\t\tif (hwndAbove == hwnd) return;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7397e28244d9bd6240e59fe57f02810", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "3904059bf8c9516b6fc6b7ae23e1e90ef14e72e4", "commitAfterChange": "8d1ee59ac161edeeabf3b30a65f970ab33f748aa", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["-\tif (showWithParent == visible) return;", "-\tshowWithParent = visible;", "+\tif (showWithParent != visible) {", "+\t\tshowWithParent = visible;", "+\t\tif (visible) {", "+\t\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, true);\t\t", "+\t\t}", "+\t}", "+\t", "+\t/* Make the splash screen appear in the task bar */", "-\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, true);", "+\t\tif (parent != null && (parent.state & FOREIGN_HANDLE) != 0) {", "+\t\t\tint /*long*/ hwndParent = parent.handle;", "+\t\t\tint style = OS.GetWindowLong (hwndParent, OS.GWL_EXSTYLE);", "+\t\t\tif ((style & OS.WS_EX_APPWINDOW) == 0) {", "+\t\t\t\tOS.SetWindowLong (hwndParent, OS.GWL_EXSTYLE, style | OS.WS_EX_APPWINDOW);", "+\t\t\t}", "+\t\t}"]}], "num": 45421}