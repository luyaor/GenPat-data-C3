{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4603e7d3a2e6ccc6509af82d4711eac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d966b12c4014dd32717e765f9bf62882", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "18a77004921c958d7933e6a4bf2f9879ef0cfdc3", "commitAfterChange": "235449f60e73b051bff45b523d24758455cf4aa9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-//\tif (OS.VERSION < 0x1040) return launch(fileName);", "-//\tint rc = -1;", "-//\tint fsRefPtr = OS.NewPtr(fsRef.length);", "-//\tif (fsRefPtr != 0) {", "-//\t\tOS.memmove(fsRefPtr, fsRef, fsRef.length);", "-//\t\tLSApplicationParameters params = new LSApplicationParameters();", "-//\t\tparams.version = 0;", "-//\t\tparams.flags = 0;", "-//\t\tparams.application = fsRefPtr;", "-//\t\tif (fileName.length() == 0) {", "-//\t\t\trc = OS.LSOpenApplication(params, null);", "-//\t\t} else {", "-//\t\t\tif (fileName.indexOf(':') == -1) fileName = \"file://\" + fileName;", "-//\t\t\tchar[] chars = new char[fileName.length()];", "-//\t\t\tfileName.getChars(0, chars.length, chars, 0);", "-//\t\t\tint str = OS.CFStringCreateWithCharacters(0, chars, chars.length);", "-//\t\t\tif (str != 0) {", "-//\t\t\t\tint unscapedStr = OS.CFStringCreateWithCharacters(0, new char[]{'%'}, 1);", "-//\t\t\t\tint escapedStr = OS.CFURLCreateStringByAddingPercentEscapes(OS.kCFAllocatorDefault, str, unscapedStr, 0, OS.kCFStringEncodingUTF8);", "-//\t\t\t\tif (escapedStr != 0) {", "-//\t\t\t\t\tint urls = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "-//\t\t\t\t\tif (urls != 0) {", "-//\t\t\t\t\t\tint url = OS.CFURLCreateWithString(OS.kCFAllocatorDefault, escapedStr, 0);", "-//\t\t\t\t\t\tif (url != 0) {", "-//\t\t\t\t\t\t\tOS.CFArrayAppendValue(urls, url);", "-//\t\t\t\t\t\t\trc = OS.LSOpenURLsWithRole(urls, OS.kLSRolesAll, 0, params, null, 0);", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tOS.CFRelease(urls);", "-//\t\t\t\t\t}", "-//\t\t\t\t\tOS.CFRelease(escapedStr);", "-//\t\t\t\t}", "-//\t\t\t\tif (unscapedStr != 0) OS.CFRelease(unscapedStr);", "-//\t\t\t\tOS.CFRelease(str);", "-//\t\t\t}", "-//\t\t}", "-//\t\tOS.DisposePtr(fsRefPtr);", "-//\t}", "-//\treturn rc == OS.noErr;", "-\treturn false;", "+\tNSWorkspace workspace = NSWorkspace.sharedWorkspace();", "+\tNSString fullPath = NSString.stringWith(fileName);", "+\treturn workspace.openFile_withApplication_(fullPath, NSString.stringWith(name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e74e3d40eec3c08fdf8e90504b4a15fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "a6131ac9e2d912fd79a498410994704f80907b17", "commitAfterChange": "e758c60c4fb72428ae282ccc25e3e75b0adf65c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser (Composite parent, int style)", "diff": ["-public Browser(Composite parent, int style) {", "-\tsuper (checkParent(parent), checkStyle (style));", "+public Browser (Composite parent, int style) {", "+\tsuper (checkParent (parent), checkStyle (style));", "+\tString platform = SWT.getPlatform ();", "+\tDisplay display = parent.getDisplay ();", "+\tif (\"gtk\".equals (platform)) display.setData (NO_INPUT_METHOD, null); //$NON-NLS-1$", "-\tif ((style & SWT.NONE /*MOZILLA*/) != 0) { // TODO", "-\t\tclassName = \"org.eclipse.swt.browser.Mozilla\";", "+\tif ((style & SWT.MOZILLA) != 0) {", "+\t\tclassName = \"org.eclipse.swt.browser.Mozilla\"; //$NON-NLS-1$", "-\t\tString platform = SWT.getPlatform();", "-\t\tif (\"win32\".equals(platform)) {", "-\t\t\tclassName = \"org.eclipse.swt.browser.IE\";", "-\t\t} else if (\"motif\".equals(platform)) {", "-\t\t\tclassName = \"org.eclipse.swt.browser.Mozilla\";", "-\t\t} else if (\"gtk\".equals(platform)) {", "-\t\t\tclassName = \"org.eclipse.swt.browser.Mozilla\";", "-\t\t} else if (\"carbon\".equals(platform)) {", "-\t\t\tclassName = \"org.eclipse.swt.browser.Safari\";", "-\t\t} else if (\"photon\".equals(platform)) {", "-\t\t\tclassName = \"org.eclipse.swt.browser.Voyager\";", "+\t\tif (\"win32\".equals (platform)) { //$NON-NLS-1$", "+\t\t\tclassName = \"org.eclipse.swt.browser.IE\"; //$NON-NLS-1$", "+\t\t} else if (\"motif\".equals (platform)) { //$NON-NLS-1$", "+\t\t\tclassName = \"org.eclipse.swt.browser.Mozilla\"; //$NON-NLS-1$", "+\t\t} else if (\"gtk\".equals (platform)) { //$NON-NLS-1$", "+\t\t\tclassName = \"org.eclipse.swt.browser.Mozilla\"; //$NON-NLS-1$", "+\t\t} else if (\"carbon\".equals (platform)) { //$NON-NLS-1$", "+\t\t\tclassName = \"org.eclipse.swt.browser.Safari\"; //$NON-NLS-1$", "+\t\t} else if (\"photon\".equals (platform)) { //$NON-NLS-1$", "+\t\t\tclassName = \"org.eclipse.swt.browser.Voyager\"; //$NON-NLS-1$", "-\t\t\tSWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tdispose ();", "+\t\t\tSWT.error (SWT.ERROR_NO_HANDLES);", "-\t\tClass clazz = Class.forName(className);", "-\t\twebBrowser = (WebBrowser)clazz.newInstance();", "+\t\tClass clazz = Class.forName (className);", "+\t\twebBrowser = (WebBrowser)clazz.newInstance ();", "-\tif (webBrowser == null) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (webBrowser == null) {", "+\t\tdispose ();", "+\t\tSWT.error (SWT.ERROR_NO_HANDLES);", "+\t}", "-\twebBrowser.setBrowser(this);", "-\twebBrowser.create(parent, style);", "+\twebBrowser.setBrowser (this);", "+\twebBrowser.create (parent, style);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67a603b6e20cf5ee6aa7f0d1f7a1bab0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "9b6c349efaa71e743e1dcd3e453df870111052ab", "commitAfterChange": "281808db23573648491782578db680004a829404", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t\t\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\t\t\tfor (int i = 0; i < locationListeners.length; i++) {", "+\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\t\t\t\tfor (int i = 0; i < locationListeners.length; i++) {", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tfor (int i = 0; i < progressListeners.length; i++)", "+\t\t\t\t\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < openWindowListeners.length; i++)", "+\t\t\t\t\tfor (int i = 0; i < openWindowListeners.length; i++) {", "+\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int i = 0; i < visibilityWindowListeners.length; i++)", "+\t\t\t\t\t\tfor (int i = 0; i < visibilityWindowListeners.length; i++) {", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int i = 0; i < progressListeners.length; i++)", "+\t\t\t\t\t\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int i = 0; i < statusTextListeners.length; i++)", "+\t\t\t\t\t\tfor (int i = 0; i < statusTextListeners.length; i++) {", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tfor (int i = 0; i < titleListeners.length; i++)", "+\t\t\t\t\t\tfor (int i = 0; i < titleListeners.length; i++) {", "+\t\t\t\t\t\t}", "-\t\t\t\t\tfor (int i = 0; i < closeWindowListeners.length; i++)", "+\t\t\t\t\tfor (int i = 0; i < closeWindowListeners.length; i++) {", "+\t\t\t\t\t}", "-\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{COM.VARIANT_FALSE}, 2);", "+\t\t\t\t\tVariant arg1 = event.arguments[0];", "+\t\t\t\t\tboolean isChildWindow = arg1.getBoolean();", "+\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{isChildWindow ? COM.VARIANT_FALSE : COM.VARIANT_TRUE}, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d1d91e56e66764cb4d8a8d7e7dacd5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ff62aa5e7c7f3d11ec529d730cde567330dcd9e8", "commitAfterChange": "ac42e8fd2deef73d52a56aa5bceb9a5ad7ecc239", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 96, "signatureBeforeChange": "  void tableView_setObjectValue_forTableColumn_row (int id, int sel, int aTableView, int anObject, int aTableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_setObjectValue_forTableColumn_row (int id, int sel, int aTableView, int anObject, int aTableColumn, int rowIndex)", "diff": ["-\tTableItem item = items [(int)/*64*/rowIndex];", "+\t\tTableItem item = items [(int)/*64*/rowIndex];", "+\t\tNSTableView tableView = (NSTableView)view;", "+\t\tNSRect rect = tableView.rectOfRow (rowIndex);", "+\t\ttableView.setNeedsDisplayInRect (rect);"]}], "num": 28180}