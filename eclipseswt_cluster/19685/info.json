{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e5a6474630093c4cd0714a31e9c5765", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81145f5db3380be2c9553bcdc89d5873", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6b905c3eb76c3c0c8d47ed9e88c64f2954530229", "commitAfterChange": "8b66a88111a5c0bbf49bacf4f87f8d702b5567a8", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["+\t\tif (image != null && image.type == SWT.ICON) {", "+\t\t\tif (image.equals (this.image)) return;", "+\t\t}", "-\tint columnCount = parent.columnCount;", "-\tif (0 <= index && index < columnCount) {", "-\t\tif (images == null) images = new Image [columnCount];", "+\tint count = Math.max (1, parent.columnCount);", "+\tif (0 <= index && index < count) {", "+\t\tif (images == null) images = new Image [count];", "+\t\tif (image != null && image.type == SWT.ICON) {", "+\t\t\tif (image.equals (images [index])) return;", "+\t\t}", "-\tif (parent.ignoreRedraw) return;", "-\tif (parent.drawCount == 0) {", "-\t\tif (index == 0) parent.setScrollWidth (this);", "-\t\tint [] id = new int [] {itemIndex + 1};", "-\t\tOS.UpdateDataBrowserItems (parent.handle, 0, id.length, id, OS.kDataBrowserItemNoProperty, OS.kDataBrowserNoItem);", "-\t}", "+\tif (index == 0) parent.setScrollWidth (this);", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cefd8584a1174cd5bd6ea032b01cbdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "21c8d5f83e6c06364f86afffd0c7ead357d5a5dd", "commitAfterChange": "ea2ccf983a5ced4ad5d39e8c5088af77d10cf792", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DropTarget(Control control, int style)", "signatureAfterChange": " public DropTarget(Control control, int style)", "diff": ["-\t\t\r", "-\tint[] args = new int[]{\r", "-\t\tOS.XmNdropSiteOperations, opToOsOp(style),\r", "-\t\tOS.XmNdropSiteActivity,   OS.XmDROP_SITE_ACTIVE,\r", "-\t\tOS.XmNdropProc,           dropProc.getAddress(),\r", "-\t\tOS.XmNdragProc,           dragProc.getAddress(),\r", "-\t\tOS.XmNanimationStyle,     OS.XmDRAG_UNDER_NONE,\r", "-\t\tOS.XmNdropSiteType,       OS.XmDROP_SITE_COMPOSITE,\r", "-\t};\r", "-\r", "-\t// This code is intentionally commented.\r", "-\t// the OS may have registered this widget as a drop site on creation.\r", "-\t// Remove the registered drop site because it has preconfigured values which we do not want.\r", "-\t//OS.XmDropSiteUnregister(control.handle);\r", "-\t\r", "-\t// Register drop site with our own values\r", "-\tOS.XmDropSiteRegister(control.handle, args, args.length / 2);\r", "-\t\t\tif (!DropTarget.this.isDisposed()){\r", "-\t\t\t\tDropTarget.this.dispose();\r", "+\t\t\tswitch (event.type) {\r", "+\t\t\t\tcase SWT.Dispose:\r", "+\t\t\t\t\tif (!DropTarget.this.isDisposed()){\r", "+\t\t\t\t\t\tDropTarget.this.dispose();\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase SWT.Show:\r", "+\t\t\t\t\tregisterDropTarget();\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase SWT.Hide:\r", "+\t\t\t\t\tunregisterDropTarget();\r", "+\t\t\t\t\tbreak;\r", "+\tcontrol.addListener (SWT.Show, controlListener);\r", "+\tcontrol.addListener (SWT.Hide, controlListener);\r", "+\t\r", "+\tregisterDropTarget();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2634a31a1b15aeb128536b8f9e3d93a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/expand/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "90b00ebfdec0daa7bdd7c39c16236fd3c23cf6c8", "commitAfterChange": "d42ee8fbf7af101bb2203346e9cc60000f519f21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ExpandBar (Composite parent, int style)", "signatureAfterChange": " \t public ExpandBar (Composite parent, int style)", "diff": ["+\t\t\t\tcase SWT.Traverse:\t\tonTraverse (event);   \t\tbreak;", "-\tint [] events = new int [] { ", "-\t\tSWT.Dispose, ", "-\t\tSWT.MouseDown,", "-\t\tSWT.MouseUp, ", "-\t\tSWT.Paint,", "-\t\tSWT.Resize,", "-\t\tSWT.KeyDown,", "-\t\tSWT.FocusIn,", "-\t\tSWT.FocusOut,", "-\t};", "-\tfor (int i = 0; i < events.length; i++) {", "-\t\taddListener (events [i], listener);\t", "-\t}", "+\taddListener (SWT.Dispose, listener);", "+\taddListener (SWT.MouseDown, listener);", "+\taddListener (SWT.MouseUp, listener);", "+\taddListener (SWT.Paint, listener);", "+\taddListener (SWT.Resize, listener);", "+\taddListener (SWT.KeyDown, listener);", "+\taddListener (SWT.FocusIn, listener);", "+\taddListener (SWT.FocusOut, listener);", "+\taddListener (SWT.Traverse, listener);", "+\t"]}], "num": 19685}