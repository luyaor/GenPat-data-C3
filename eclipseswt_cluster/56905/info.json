{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4aeb14d28ff4da2c30d7b1e203db3a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ae2568d7dd4f3d9194cc984772526c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "30c4cdd7062f4af87924a8b8e2661a5d5218efd0", "commitAfterChange": "e7aa92a27e6b740979d19305582d881526b93c81", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+\tif (result != 0) return result;", "+", "+\t/*", "+\t* Note on GTK. When multiple items are already selected, the default handler", "+\t* toggles the selection state of the item and clears any former selection.", "+\t* This is not the desired behaviour when bringing up a popup menu. The", "+\t* workaround is to detect that case and not run the default handler when the", "+\t* item is already part of the current selection.", "+\t*/", "+\tif (menu != null && (style & SWT.MULTI) != 0) {", "+\t\tint button = gdkEvent.button;", "+\t\tif (button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {", "+\t\t\tint [] path = new int [1];", "+\t\t\tif (OS.gtk_tree_view_get_path_at_pos (handle, (int)gdkEvent.x, (int)gdkEvent.y, path, null, null, null)) {", "+\t\t\t\tif (path [0] != 0) {", "+\t\t\t\t\tint selection = OS.gtk_tree_view_get_selection (handle);", "+\t\t\t\t\tif (OS.gtk_tree_selection_path_is_selected (selection, path [0])) result = 1;", "+\t\t\t\t\tOS.gtk_tree_path_free (path [0]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d61f0ce6a198dab5f249bc9fd326872", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a48f630750d15613aaaf7bccf15bfa856a4f6cad", "commitAfterChange": "6469b6ac1443313dfad342fb0f70f963b021fe4f", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void setTopIndex (int index)", "signatureAfterChange": " public void setTopIndex (int index)", "diff": ["-\t//NOT DONE", "-//\tRect oViewRect = new Rect ();", "-//\tTXNLongRect oDestinationRect = new TXNLongRect ();", "-//\tTXNLongRect oTextRect = new TXNLongRect ();", "-//\tOS.TXNGetRectBounds (txnObject, oViewRect, oDestinationRect, oTextRect);", "-//\tint topPixel = oDestinationRect.top - oTextRect.top;", "-//\tint [] oOffset = new int [1];", "-//\torg.eclipse.swt.internal.carbon.Point iPoint = new org.eclipse.swt.internal.carbon.Point ();", "-//\tOS.SetPt (iPoint, (short)0, (short)(-topPixel + (index * getLineHeight ())));", "-//\tOS.TXNPointToOffset (txnObject, iPoint, oOffset);", "-//\tSystem.out.println (oOffset [0]);", "-//\tint [] oStartOffset = new int [1], oEndOffset = new int [1];", "-//\tOS.TXNGetSelection (txnObject, oStartOffset, oEndOffset);", "-//\tOS.TXNSetSelection (txnObject, oOffset [0], oOffset [0]);", "-//\tOS.TXNShowSelection (txnObject, false);", "-//\tOS.TXNSetSelection (txnObject, oStartOffset [0], oEndOffset [0]);", "+\tif (OS.HIVIEW) {", "+\t\tint[] event = new int[1];", "+\t\tOS.CreateEvent (0, OS.kEventClassScrollable, OS.kEventScrollableScrollTo, 0.0, 0, event);", "+\t\tif (event [0] != 0) {", "+\t\t\tint lineHeight = getLineHeight ();", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tpt.y = lineHeight * Math.min(getLineCount (), index);", "+\t\t\tOS.SetEventParameter (event[0], OS.kEventParamOrigin, OS.typeHIPoint, CGPoint.sizeof, pt);", "+\t\t\tOS.SendEventToEventTarget (event[0], OS.GetControlEventTarget (handle));", "+\t\t\tOS.ReleaseEvent (event[0]);", "+\t\t}", "+\t}"]}], "num": 56905}