{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98a6b8288ee638f036de5251e0ff9faa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d6c9893a8e7fb5729ea5b903e27543", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "ca756696b1132d5ad2f87e1c9fea67246854d75b", "commitAfterChange": "b8b7fdfd088dc19ba4e4e4c7b64fd1ccee720f62", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize(int wHint, int hHint, boolean changed)", "diff": ["-public Point computeSize (int wHint, int hHint, boolean changed) {", "+public Point computeSize(int wHint, int hHint, boolean changed) {", "-\tPoint textSize = text.computeSize (wHint, SWT.DEFAULT, changed);", "+\tString[] items = list.getItems();", "+\tint textWidth = 0;", "+\tGC gc = new GC(text);", "+\tint spacer = gc.stringExtent(\" \").x; //$NON-NLS-1$", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\ttextWidth = Math.max(gc.stringExtent(items[i]).x, textWidth);", "+\t}", "+\tgc.dispose();", "+\tPoint textSize = text.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "-\tPoint listSize = list.computeSize (wHint, SWT.DEFAULT, changed);", "-\theight = Math.max (hHint, Math.max(textSize.y, arrowSize.y)  + 2*borderWidth);", "-\twidth = Math.max (wHint, Math.max(textSize.x + arrowSize.x + 2*borderWidth, listSize.x + 2)  );", "-\treturn new Point (width, height);", "+\theight = Math.max(hHint, Math.max(textSize.y, arrowSize.y) + 2*borderWidth);", "+\twidth = Math.max(wHint, textWidth + 2*spacer + arrowSize.x + 2*borderWidth);", "+\treturn new Point(width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5383fa1960b72f0a7825d47ea16986fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/GtkFileDialog.java", "commitBeforeChange": "7996d8405892a4a58e0083da5d5bc47199c1a1a1", "commitAfterChange": "a70d2e9009f5c248af33f97a37a3226fb19f6ab1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void createGtkDialog()", "signatureAfterChange": "  public String open ()", "diff": ["- */", "-void createGtkDialog() {", "-\t/* create */", "-\tbyte [] buffer = Converter.wcsToMbcs (null, title, true);", "-\thandle = OS.gtk_file_selection_new (buffer);", "+public String open () {", "+\tbyte [] titleBytes = Converter.wcsToMbcs (null, title, true);", "+\thandle = OS.gtk_file_selection_new (titleBytes);", "-\t\tOS.gtk_window_set_modal(handle, true);", "-\tokButtonHandle = OS.GTK_FILE_SELECTION_OK_BUTTON(handle);", "-\tcancelButtonHandle = OS.GTK_FILE_SELECTION_OK_BUTTON(handle);", "-}", "+\tpreset();", "+\tint response = OS.gtk_dialog_run(handle);", "+\tif (response == OS.GTK_RESPONSE_OK) {", "+\t\tint lpFilename = OS.gtk_file_selection_get_filename (handle);", "+\t\tint filenameLength = OS.strlen (lpFilename);", "+\t\tbyte [] filenameBytes = new byte [filenameLength];", "+\t\tOS.memmove (filenameBytes, lpFilename, filenameLength);", "+\t\tString osAnswer = new String( Converter.mbcsToWcs (null, filenameBytes) );", "+\t\tinterpretOsAnswer(osAnswer);", "+\t}", "+\tOS.gtk_widget_destroy(handle);"]}], "num": 13637}