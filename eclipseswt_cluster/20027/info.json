{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "806afa8590711251b5ef25dce820f3e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd8be8c900247342a1a80b0d80e1085", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "a73836b62f7b4598932e8c5312c4b064291c921f", "commitAfterChange": "9e104f73db7a2c845f9e17635faa75853418512a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic static Accessible internal_new_Accessible (Control control, int handle)", "signatureAfterChange": " \tboolean isValidThread ()", "diff": ["-\tpublic static Accessible internal_new_Accessible (Control control, int handle) {", "-\t\treturn new Accessible (control, handle);", "+\t/* isValidThread was copied from Widget, and rewritten to work in this package */", "+\tboolean isValidThread () {", "+\t\treturn control.getDisplay ().getThread () == Thread.currentThread ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d0ea37070a043a0982600700079712", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 84, "signatureBeforeChange": " int processSetFocus (Object callData)", "signatureAfterChange": " \t void sendFocusEvent (boolean focusIn)", "diff": ["-}", "-int processSetFocus (Object callData) {", "-\t/*", "-\t* Ignore focus change events when the window getting or losing", "-\t* focus is a menu.  Because XmGetFocusWidget() does not answer", "-\t* the menu shell (it answers the menu parent), it is necessary", "-\t* to use XGetInputFocus() to get the real X focus window.", "-\t*/", "-    /* AW", "-\tint xDisplay = xEvent.display;", "-\tif (xDisplay == 0) return 0;", "-\tint [] unused = new int [1], xWindow = new int [1];", "-\tOS.XGetInputFocus (xDisplay, xWindow, unused);", "-\tif (xWindow [0] != 0) {", "-\t\tint widget = OS.XtWindowToWidget (xDisplay, xWindow [0]);", "-\t\tif (widget != 0 && OS.XtClass (widget) == OS.XmMenuShellWidgetClass ()) return 0;", "-\t}", "-    */", "-\t/* Process the focus change for the widget */", "-\tShell shell = getShell ();", "-\tBoolean b = (Boolean) callData;", "-\tif (b.booleanValue ()) {", "-\t", "-\t\tprocessFocusIn ();", "-\t\t// widget could be disposed at this point", "-\t\t/*", "-\t\t* It is possible that the shell may be", "-\t\t* disposed at this point.  If this happens", "-\t\t* don't send the activate and deactivate", "-\t\t* events.", "-\t\t*/", "-\t\tif (!shell.isDisposed ()) {", "-\t\t\tshell.setActiveControl (this);", "-\t\t}", "-\t} else {", "-\t\tDisplay display = getDisplay ();", "-\t\tprocessFocusOut ();", "-\t\t// widget could be disposed at this point", "-\t\t/*", "-\t\t * It is possible that the shell may be", "-\t\t * disposed at this point.  If this happens", "-\t\t * don't send the activate and deactivate", "-\t\t * events.", "-\t\t */", "-\t\tif (!shell.isDisposed ()) {", "-\t\t\tControl control = display.getFocusControl ();", "-\t\t\tif (control == null || shell != control.getShell () ) {", "-\t\t\t\tshell.setActiveControl (null);", "-\t\t\t}", "-\t\t}", "-\treturn 0;", "+\t", "+void sendFocusEvent (boolean focusIn) {", "+\tShell shell = getShell ();", "+\tif (focusIn) {", "+\t\tsendEvent (SWT.FocusIn);", "+\t} else {", "+\t\tsendEvent (SWT.FocusOut);", "+\t}", "+\t", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/", "+\tif (focusIn) {", "+\t\tif (!shell.isDisposed ()) {", "+\t\t\tshell.setActiveControl (this);", "+\t} else {", "+\t\tif (!shell.isDisposed ()) {", "+\t\t\tDisplay display = shell.getDisplay ();", "+\t\t\tControl control = display.getFocusControl ();", "+\t\t\tif (control == null || shell != control.getShell () ) {", "+\t\t\t\tshell.setActiveControl (null);", "+\t\t\t}", "+\t\t}"]}], "num": 20027}