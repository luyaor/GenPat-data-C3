{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6ba2bd41a02b97f7833f906415d5795", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3c2c2874d226b56198e35b992eb0e9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ff62aa5e7c7f3d11ec529d730cde567330dcd9e8", "commitAfterChange": "ac42e8fd2deef73d52a56aa5bceb9a5ad7ecc239", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 98, "signatureBeforeChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "diff": ["+\tint columnIndex = 0;", "+\t\t\tcolumnIndex = i;", "+\tcell.setFont (item.getFont (columnIndex).handle);", "+", "+\tif (hooks (SWT.MeasureItem)) {", "+\t\tNSTableView tableView = (NSTableView)this.view;", "+\t\tint nsColumnIndex = (int)/*64*/tableView.columnWithIdentifier (new id (aTableColumn));", "+\t\tNSRect rect = tableView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "+\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "+\t\tNSSize contentSize = cell.cellSizeForBounds (rect);", "+", "+\t\tGCData data = new GCData ();", "+\t\tdata.paintRect = tableView.frame ();", "+\t\tGC gc = GC.cocoa_new (this, data);", "+\t\tgc.setFont (item.getFont (columnIndex));", "+\t\tint rowHeight = (int)tableView.rowHeight ();", "+\t\tEvent event = new Event ();", "+\t\tevent.item = item;", "+\t\tevent.gc = gc;", "+\t\tevent.index = columnIndex;", "+\t\tevent.x = (int)contentRect.x;", "+\t\tevent.y = (int)contentRect.y;", "+\t\tevent.width = (int)contentSize.width;", "+\t\tevent.height = rowHeight;", "+\t\tsendEvent (SWT.MeasureItem, event);", "+\t\tgc.dispose ();", "+\t\tif (isDisposed ()) return;", "+\t\tif (rowHeight < event.height) {", "+\t\t\ttableView.setRowHeight(event.height);", "+\t\t}", "+\t\tif (columnCount == 0) {", "+\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)contentSize.width);", "+\t\t\tif (item.customWidth != -1 || event.width != (int)contentSize.width) {", "+\t\t\t\titem.customWidth = event.width;\t", "+\t\t\t}", "+\t\t\tif (change != 0) setScrollWidth (item, false);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8216cdcb33c15ee7c6e57b5ba60d9294", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "signatureAfterChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "diff": ["-\tImage image = item.image;", "-\t\t\timage = item.getImage (i);", "+\t\t\tbreak;", "+\tImage image = item.getImage (columnIndex);", "-\tbrowserCell.setFont (item.getFont (columnIndex).handle);", "-", "-\tif (hooks (SWT.MeasureItem)) {", "-\t\tNSOutlineView view = (NSOutlineView)this.view;", "-\t\tint nsColumnIndex = (int)/*64*/view.columnWithIdentifier (new id (tableColumn));", "-\t\tint rowIndex = (int)/*64*/view.rowForItem (new id (itemID));", "-\t\tNSRect rect = view.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\tNSRect contentRect = browserCell.titleRectForBounds (rect);", "-\t\tNSSize contentSize = browserCell.cellSizeForBounds (rect);", "-", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = view.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tint rowHeight = (int)view.rowHeight ();", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "-\t\tevent.width = (int)Math.ceil (contentSize.width);", "-\t\tevent.height = rowHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (rowHeight < event.height) {", "-\t\t\tview.setRowHeight (event.height);", "-\t\t}", "-\t\tif (columnCount == 0) {", "-\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)Math.ceil (contentSize.width));", "-\t\t\tif (item.customWidth != -1 || event.width != (int)Math.ceil (contentSize.width)) {", "-\t\t\t\titem.customWidth = event.width;\t", "-\t\t\t}", "-\t\t\tif (change != 0) setScrollWidth (item, false, false);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43b814a6252a69e4fa7d7f51714a391", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b787d7e445aeaf49b4df48026678b967b8427b13", "commitAfterChange": "db3d81f202062db2f281c5f20f8cbd71fe995d01", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "signatureAfterChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "diff": ["+\tint columnIndex = 0;", "+\t\t\tcolumnIndex = i;", "+\tbrowserCell.setFont (item.getFont (columnIndex).handle);", "+", "+\tif (hooks (SWT.MeasureItem)) {", "+\t\tNSOutlineView view = (NSOutlineView)this.view;", "+\t\tint nsColumnIndex = (int)/*64*/view.columnWithIdentifier (new id (tableColumn));", "+\t\tint rowIndex = (int)/*64*/view.rowForItem(new id (itemID));", "+\t\tNSRect rect = view.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "+\t\tNSRect contentRect = browserCell.titleRectForBounds (rect);", "+\t\tNSSize contentSize = browserCell.cellSizeForBounds (rect);", "+", "+\t\tGCData data = new GCData ();", "+\t\tdata.paintRect = view.frame ();", "+\t\tGC gc = GC.cocoa_new (this, data);", "+\t\tgc.setFont (item.getFont (columnIndex));", "+\t\tint rowHeight = (int)view.rowHeight ();", "+\t\tEvent event = new Event ();", "+\t\tevent.item = item;", "+\t\tevent.gc = gc;", "+\t\tevent.index = columnIndex;", "+\t\tevent.x = (int)contentRect.x;", "+\t\tevent.y = (int)contentRect.y;", "+\t\tevent.width = (int)contentSize.width;", "+\t\tevent.height = rowHeight;", "+\t\tsendEvent (SWT.MeasureItem, event);", "+\t\tgc.dispose ();", "+\t\tif (isDisposed ()) return;", "+\t\tif (rowHeight < event.height) {", "+\t\t\tview.setRowHeight (event.height);", "+\t\t}", "+\t\tif (columnCount == 0) {", "+\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)contentSize.width);", "+\t\t\tif (item.customWidth != -1 || event.width != (int)contentSize.width) {", "+\t\t\t\titem.customWidth = event.width;\t", "+\t\t\t}", "+\t\t\tif (change != 0) setScrollWidth (item);", "+\t\t}", "+\t}"]}], "num": 23413}