{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4e15377660b93aed8eabbfc902b8ebd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea069ca356011289f258ebce4d3fcf18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 224, "signatureBeforeChange": "  LRESULT WM_SYSKEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSKEYDOWN (int wParam, int lParam)", "diff": ["-\t/*", "-\t* Feature in Windows.  When WM_SYSKEYDOWN is sent,", "-\t* the user pressed ALT+<key> or F10 to get to the", "-\t* menu bar.  In order to issue events for F10 but", "-\t* ignore other key presses when the ALT is not down,", "-\t* make sure that either F10 was pressed or that ALT", "-\t* is pressed.", "-\t*/", "-\tif (wParam != OS.VK_F10) {", "-\t\t/* Make sure WM_SYSKEYDOWN was sent by ALT-<aKey>. */", "-\t\tif ((lParam & 0x20000000) == 0) return null;", "-\t}", "-\t", "-\t/* Ignore well known system keys */", "-\tswitch (wParam) {", "-\t\tcase OS.VK_F4: return null;", "-\t}", "-\t", "-\t/* Ignore repeating modifier keys by testing key down state */", "-\tswitch (wParam) {", "-\t\tcase OS.VK_SHIFT:", "-\t\tcase OS.VK_MENU:", "-\t\tcase OS.VK_CONTROL:", "-\t\tcase OS.VK_CAPITAL:", "-\t\tcase OS.VK_NUMLOCK:", "-\t\tcase OS.VK_SCROLL:", "-\t\t\tif ((lParam & 0x40000000) != 0) return null;", "-\t}", "-\t", "-\t/* Clear last key and last ascii because a new key has been typed */", "-\tdisplay.lastAscii = display.lastKey = 0;", "-\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-", "-\t/* If are going to get a WM_SYSCHAR, ignore this message. */", "-\t/*", "-\t* Bug in WinCE.  MapVirtualKey() returns incorrect values.", "-\t* The fix is to rely on a key mappings table to determine", "-\t* whether the key event must be sent now or if a WM_CHAR", "-\t* event will follow.  The key mappings table maps virtual", "-\t* keys to SWT key codes and does not contain mappings for", "-\t* Windows virtual keys like VK_A.  Virtual keys that are", "-\t* both virtual and ASCII are a special case.", "-\t*/", "-\tint mapKey = 0;", "-\tif (OS.IsWinCE) {", "-\t\tswitch (wParam) {", "-\t\t\tcase OS.VK_BACK: mapKey = SWT.BS; break;", "-\t\t\tcase OS.VK_RETURN: mapKey = SWT.CR; break;", "-\t\t\tcase OS.VK_DELETE: mapKey = SWT.DEL; break;", "-\t\t\tcase OS.VK_ESCAPE: mapKey = SWT.ESC; break;", "-\t\t\tcase OS.VK_TAB: mapKey = SWT.TAB; break;", "-\t\t}", "-\t} else {", "-\t\tmapKey = OS.MapVirtualKey (wParam, 2);", "-\t}", "-\tdisplay.lastVirtual = mapKey == 0 || display.numpadKey (wParam) != 0;", "-\tif (display.lastVirtual) {", "-\t \tdisplay.lastKey = wParam;", "-\t\t/*", "-\t\t* Feature in Windows.  The virtual key VK_DELETE is not", "-\t\t* treated as both a virtual key and an ASCII key by Windows.", "-\t\t* Therefore, we will not receive a WM_SYSCHAR for this key.", "-\t\t* The fix is to treat VK_DELETE as a special case and map", "-\t\t* the ASCII value explictly (Delete is 0x7F).", "-\t\t*/", "-\t\tif (display.lastKey == OS.VK_DELETE) display.lastAscii = 0x7F;", "-", "-\t\t/* When a keypad key is typed, a WM_SYSCHAR is not issued */", "-\t\tif (OS.VK_NUMPAD0 <= display.lastKey && display.lastKey <= OS.VK_DIVIDE) {", "-\t\t\tdisplay.lastAscii = display.numpadKey (display.lastKey);", "-\t\t}", "-\t} else {", "-\t\t/*", "-\t\t* Convert LastKey to lower case because Windows non-virtual", "-\t\t* keys that are also ASCII keys, such as like VK_A, are have", "-\t\t* upper case values in WM_SYSKEYDOWN despite the fact that the ", "-\t\t* Shift was not pressed.", "-\t\t*/", "-\t \tdisplay.lastKey = OS.CharLower ((short) mapKey);", "-", "-\t\t/*", "-\t\t* Feature in Windows 98.  MapVirtualKey() indicates that", "-\t\t* a WM_SYSCHAR message will occur for Alt+Enter but", "-\t\t* this message never happens.  The fix is to issue the", "-\t\t* event from WM_SYSKEYDOWN and map VK_RETURN to '\\r'.", "-\t\t*/", "-\t\tif (OS.IsWinNT) return null;", "-\t\tif (wParam != OS.VK_RETURN) return null;", "-\t\tdisplay.lastAscii = '\\r';", "-\t}", "-", "-\tif (!sendKeyEvent (SWT.KeyDown, OS.WM_SYSKEYDOWN, wParam, lParam)) {", "-\t\treturn LRESULT.ONE;", "-\t}", "-\t// widget could be disposed at this point", "-\treturn null;", "+\treturn wmSysKeyDown (handle, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04006acdf5a45afbc6f4d39702014b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "diff": ["-\tDisplay display = this.display;", "-\t", "-\t/* Check for hardware keys */", "-\tif (OS.IsWinCE) {", "-\t\tif (OS.VK_APP1 <= wParam && wParam <= OS.VK_APP6) {", "-\t\t\tdisplay.lastKey = display.lastAscii = 0;", "-\t\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.detail = wParam - OS.VK_APP1 + 1;", "-\t\t\t/* Check the bit 30 to get the key state */", "-\t\t\tint type = (lParam & 0x40000000) != 0 ? SWT.HardKeyUp : SWT.HardKeyDown;", "-\t\t\tif (setInputState (event, type)) sendEvent (type, event);", "-\t\t\t// widget could be disposed at this point", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* If the key up is not hooked, reset last key", "-\t* and last ascii in case the key down is hooked.", "-\t*/", "-\tif (!hooks (SWT.KeyUp) && !display.filters (SWT.KeyUp)) {", "-\t\tdisplay.lastKey = display.lastAscii = 0;", "-\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t\treturn null;", "-\t}", "-\t", "-\t/* Map the virtual key. */", "-\t/*", "-\t* Bug in WinCE.  MapVirtualKey() returns incorrect values.", "-\t* The fix is to rely on a key mappings table to determine", "-\t* whether the key event must be sent now or if a WM_CHAR", "-\t* event will follow.  The key mappings table maps virtual", "-\t* keys to SWT key codes and does not contain mappings for", "-\t* Windows virtual keys like VK_A.  Virtual keys that are", "-\t* both virtual and ASCII are a special case.", "-\t*/", "-\tint mapKey = 0;", "-\tif (OS.IsWinCE) {", "-\t\tswitch (wParam) {", "-\t\t\tcase OS.VK_BACK: mapKey = SWT.BS; break;", "-\t\t\tcase OS.VK_RETURN: mapKey = SWT.CR; break;", "-\t\t\tcase OS.VK_DELETE: mapKey = SWT.DEL; break;", "-\t\t\tcase OS.VK_ESCAPE: mapKey = SWT.ESC; break;", "-\t\t\tcase OS.VK_TAB: mapKey = SWT.TAB; break;", "-\t\t}", "-\t} else {", "-\t\tmapKey = OS.MapVirtualKey (wParam, 2);", "-\t}", "-", "-\t/*", "-\t* Bug in Windows 95 and NT.  When the user types an accent key such", "-\t* as ^ to get an accented character on a German keyboard, the accent", "-\t* key should be ignored and the next key that the user types is the", "-\t* accented key. The fix is to detect the accent key stroke (called", "-\t* a dead key) by testing the high bit of the value returned by", "-\t* MapVirtualKey ().  A further problem is that the high bit on", "-\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "-\t* They should both be bit 32.", "-\t*/", "-\tif (OS.IsWinNT) {", "-\t\tif ((mapKey & 0x80000000) != 0) return null;", "-\t} else {", "-\t\tif ((mapKey & 0x8000) != 0) return null;", "-\t}", "-\tif (display.lastDead) return null;", "-", "-\t/*", "-\t* NOTE: On Windows 98, keypad keys are virtual despite the", "-\t* fact that a WM_CHAR is issued.  On Windows 2000 and XP,", "-\t* they are not virtual.  Therefore it is necessary to force", "-\t* numeric keypad keys to be virtual.", "-\t*/", "-\tdisplay.lastVirtual = mapKey == 0 || display.numpadKey (wParam) != 0;", "-\tif (display.lastVirtual) {", "-\t\tdisplay.lastKey = wParam;", "-\t} else {", "-\t\t/*", "-\t\t* Feature in Windows. The virtual key VK_CANCEL is treated", "-\t\t* as both a virtual key and ASCII key by Windows.  This", "-\t\t* means that a WM_CHAR with WPARAM=3 will be issued for", "-\t\t* this key.  In order to distingush between this key and", "-\t\t* Ctrl+C, mark the key as virtual.", "-\t\t*/", "-\t\tif (wParam == OS.VK_CANCEL) display.lastVirtual = true;", "-\t\tif (display.lastKey == 0) {", "-\t\t\tdisplay.lastAscii = 0;", "-\t\t\tdisplay.lastNull = display.lastDead = false;", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\tLRESULT result = null;", "-\tif (!sendKeyEvent (SWT.KeyUp, OS.WM_KEYUP, wParam, lParam)) {", "-\t\tresult = LRESULT.ONE;", "-\t}", "-\t// widget could be disposed at this point", "-\tdisplay.lastKey = display.lastAscii = 0;", "-\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\treturn result;", "+\treturn wmKeyUp (handle, wParam, lParam);"]}], "num": 33167}