{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efb7f442994c0f9a1d69f2e110a2cbe9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f5305777f25ebe5be71fcc1f8bd1b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["- */", "+", "-    if (this.visible != visible) {", "-\t    this.visible= visible;", "-\t\tint topHandle = topHandle ();", "-\t\tif (OS.IsControlVisible(topHandle) != visible) {", "-\t\t\tOS.HIViewSetVisible(topHandle, visible);", "-\t\t\tsendEvent (visible ? SWT.Show : SWT.Hide);", "-\t\t}", "-    }", "+\tif (visible) {", "+\t\tif ((state & HIDDEN) == 0) return;", "+\t\tstate &= ~HIDDEN;", "+\t} else {", "+\t\tif ((state & HIDDEN) != 0) return;", "+\t\tstate |= HIDDEN;", "+\t}", "+\tif (visible) {", "+\t\t/*", "+\t\t* It is possible (but unlikely), that application", "+\t\t* code could have disposed the widget in the show", "+\t\t* event.  If this happens, just return.", "+\t\t*/", "+\t\tsendEvent (SWT.Show);", "+\t\tif (isDisposed ()) return;", "+\t}", "+\t", "+\t/*", "+\t* Feature in the Macintosh.  If the receiver has focus, hiding", "+\t* the receiver causes no control to have focus.  Also, the focus", "+\t* needs to be cleared from any TXNObject so that it stops blinking", "+\t* the caret.  The fix is to assign focus to the first ancestor", "+\t* control that takes focus.  If no control will take focus, clear", "+\t* the focus control.", "+\t*/", "+\tboolean fixFocus = false;", "+\tif (!visible) fixFocus = isFocusAncestor ();", "+\tOS.HIViewSetVisible (topHandle (), visible);", "+\tif (!visible) {", "+\t\t/*", "+\t\t* It is possible (but unlikely), that application", "+\t\t* code could have disposed the widget in the show", "+\t\t* event.  If this happens, just return.", "+\t\t*/", "+\t\tsendEvent (SWT.Hide);", "+\t\tif (isDisposed ()) return;", "+\t}", "+\tif (fixFocus) fixFocus ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574e9f8c012c3c7195f32a544868bf33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "152392ec2ff526f378f0939564a3335720e95a9f", "commitAfterChange": "a7303e5a756e52a0e1811641bad27b00c0e3f9a7", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\tparent.setScrollBarVisible (this, visible);", "+\tif (visible) {", "+\t\tif ((state & HIDDEN) == 0) return;", "+\t\tstate &= ~HIDDEN;", "+\t} else {", "+\t\tif ((state & HIDDEN) != 0) return;", "+\t\tstate |= HIDDEN;", "+\t}", "+\tif (parent.setScrollBarVisible (this, visible)) {", "+\t\tsendEvent (visible ? SWT.Show : SWT.Hide);", "+\t\tparent.sendEvent (SWT.Resize);", "+\t}"]}], "num": 4311}