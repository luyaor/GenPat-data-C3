{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8051d4cd3c130827cebe3ecd1351bc91", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff387636545a9dd5bea20d714b0dd41e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "075c887253f0cefd890a9a61d9429ad9d6685f5e", "commitAfterChange": "22e21dcd874408f0f998ca6e28b9f1308d6cbdb3", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\t\tint[] width = new int[1], height = new int[1];", "-\t\t\tOS.pango_layout_get_size(data.layout, width, height);", "-\t\t\tCairo.cairo_rectangle(cairo, x, y, OS.PANGO_PIXELS(width[0]), OS.PANGO_PIXELS(height[0]));", "+\t\t\tif (data.stringWidth == -1) {", "+\t\t\t\tcomputeStringSize();", "+\t\t\t}", "+\t\t\tCairo.cairo_rectangle(cairo, x, y, data.stringWidth, data.stringHeight);", "-\t\t\tint[] width = new int[1], height = new int[1];", "-\t\t\tOS.pango_layout_get_size(data.layout, width, height);", "+\t\t\tif (data.stringWidth == -1) {", "+\t\t\t\tcomputeStringSize();", "+\t\t\t}", "-\t\t\tCairo.cairo_translate(cairo, -2 * x - OS.PANGO_PIXELS(width[0]), 0);", "+\t\t\tCairo.cairo_translate(cairo, -2 * x - data.stringWidth, 0);", "-\t\tint[] w = new int[1], h = new int[1];", "-\t\tOS.pango_layout_get_size(layout, w, h);", "-\t\tint width = OS.PANGO_PIXELS(w[0]);", "-\t\tint height = OS.PANGO_PIXELS(h[0]);", "-\t\tint /*long*/ pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);", "+\t\tif (data.stringWidth == -1) {", "+\t\t\tcomputeStringSize();", "+\t\t}", "+\t\tint /*long*/ pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), data.stringWidth, data.stringHeight, -1);", "-\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);", "+\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, data.stringWidth, data.stringHeight);", "-\t\tOS.gdk_draw_drawable(data.drawable, handle, pixmap, 0, 0, x, y, width, height);", "+\t\tOS.gdk_draw_drawable(data.drawable, handle, pixmap, 0, 0, x, y, data.stringWidth, data.stringHeight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a701d89c63e0a2c488d49fc8655c479", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "7a42cc92cd5348bbf0e0886e024fbfe78c23cc9c", "commitAfterChange": "40516ff612bb729c6404f266bc1aa1d071b16ca1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 25, "signatureBeforeChange": " private int transferProcCallback(int widget, int client_data, int pSelection, int pType, int pValue, int pLength, int pFormat)", "signatureAfterChange": " private void transferProcCallback(int widget, int client_data, int pSelection, int pType, int pValue, int pLength, int pFormat)", "diff": ["-private int transferProcCallback(int widget, int client_data, int pSelection, int pType, int pValue, int pLength, int pFormat) {", "+private void transferProcCallback(int widget, int client_data, int pSelection, int pType, int pValue, int pLength, int pFormat) {", "+\tif (pType == 0 || pValue == 0 || pLength == 0 || pFormat == 0) return;", "+\t", "-", "-\t// get dropped data object", "-\tTransfer transferAgent = null;", "+\tif (type[0] == NULL_TYPE) {", "+\t\treturn;", "+\t}", "+\t", "+\tDNDEvent event = new DNDEvent();", "+\tif (!setEventData(droppedEventData.operations, droppedEventData.operation, droppedEventData.dragContext, droppedEventData.x, droppedEventData.y, droppedEventData.timeStamp, event)){", "+\t\treturn;", "+\t}", "+\t", "+\tint allowedOperations = event.operations;", "+\t", "+\t// Get Data in a Java format", "+\tObject object = null;", "+\tint[] length = new int[1];", "+\tOS.memmove(length, pLength, 4);", "+\tint[] format = new int[1];", "+\tOS.memmove(format, pFormat, 4);", "+\ttransferData.length = length[0];", "+\ttransferData.pValue = pValue;", "+\ttransferData.format = format[0];", "-\t\t\ttransferAgent = transferAgents[i];", "+\t\t\tobject = transferAgents[i].nativeToJava(transferData);", "-\tif (transferAgent != null) {", "-\t\ttransferData.pValue = pValue;", "-\t\tint[] length = new int[1];", "-\t\tOS.memmove(length, pLength, 4);", "-\t\ttransferData.length = length[0];", "-\t\tint[] format = new int[1];", "-\t\tOS.memmove(format, pFormat, 4);", "-\t\ttransferData.format = format[0];", "-\t\tObject data = transferAgent.nativeToJava(transferData);", "-\t\t", "-\t\tOS.XtFree(transferData.pValue); //?? Should we be freeing this, and what about the other memory?", "+\tOS.XtFree(pValue);", "-\t\t// notify listeners of drop", "-\t\tDNDEvent event = new DNDEvent();", "-\t\tevent.widget     = this.control;", "-\t\tevent.time       = droppedEventData.timeStamp;", "-\t\tshort [] root_x = new short [1];", "-\t\tshort [] root_y = new short [1];", "-\t\tOS.XtTranslateCoords (this.control.handle, (short) droppedEventData.x, (short) droppedEventData.y, root_x, root_y);", "-\t\tevent.x          = root_x[0];", "-\t\tevent.y          = root_y[0];", "-\t\tevent.dataTypes  = dataTypes;", "-\t\tevent.operations = osOpToOp(droppedEventData.operations);", "-\t\tevent.dataType = transferData;", "-\t\tevent.detail = lastOperation;", "-\t\tevent.data       = data;", "-\t", "-\t\ttry {", "-\t\t\tnotifyListeners(DND.Drop,event);", "-\t\t} catch (Throwable err) {", "-\t\t\tevent.detail = DND.DROP_NONE;", "+\tevent.detail = selectedOperation;", "+\tevent.dataType = transferData;", "+\tevent.data = object;", "+\ttry {", "+\t\tnotifyListeners(DND.Drop, event);", "+\t\tselectedOperation = DND.DROP_NONE;", "+\t\tif ((allowedOperations & event.detail) == event.detail) {", "+\t\t\tselectedOperation = event.detail;", "-", "-\t\tint xtContext = OS.XtDisplayToApplicationContext (getDisplay().xDisplay);", "-\t\tOS.XtAppSetSelectionTimeout (xtContext, selectionTimeout);", "-\t\t", "-\t\tif ((event.detail & DND.DROP_MOVE) == DND.DROP_MOVE) {", "-\t\t\tint[] args = new int[]{control.handle, DELETE_TYPE};", "-\t\t\tOS.XmDropTransferAdd(dropTransferObject, args, args.length / 2);", "-\t\t}", "+\t} catch (Throwable e) {", "+\t\tselectedOperation = DND.DROP_NONE;", "-\treturn 0;", "+\t", "+\tint xtContext = OS.XtDisplayToApplicationContext (getDisplay().xDisplay);", "+\tOS.XtAppSetSelectionTimeout (xtContext, selectionTimeout);", "+\t\t", "+\tif ((selectedOperation & DND.DROP_MOVE) == DND.DROP_MOVE) {", "+\t\tint[] args = new int[]{control.handle, DELETE_TYPE};", "+\t\tOS.XmDropTransferAdd(dropTransferObject, args, args.length / 2);", "+\t}"]}], "num": 2090}