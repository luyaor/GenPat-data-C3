{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7c3b0648ce3ef67fc70faded87948c5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a34515a984e6b1ca027313dc53d382", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d97d105ad2e32278f8b437528f42d75cf13b55bc", "commitAfterChange": "f9bb5d40accd622147de6079abe42fd37fe5f2d7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["+", "+\t/* Merge clipping with mask if necessary */", "+\tif (data.clipRgn != 0)\t {", "+\t\tint newWidth =  imgWidth;", "+\t\tint newHeight = imgHeight;", "+\t\tint bytesPerLine = (((newWidth + 7) / 8) + 3) / 4 * 4;", "+\t\tbyte[] maskData = new byte[bytesPerLine * newHeight];", "+\t\tint mask = OS.gdk_bitmap_create_from_data(0, maskData, bytesPerLine * 8, newHeight);", "+\t\tif (mask != 0) {", "+\t\t\tint gc = OS.gdk_gc_new(mask);", "+\t\t\tOS.gdk_region_offset(data.clipRgn, -destX + srcX, -destY + srcY);", "+\t\t\tOS.gdk_gc_set_clip_region(gc, data.clipRgn);", "+\t\t\tOS.gdk_region_offset(data.clipRgn, -destX, -destY);", "+\t\t\tGdkColor color = new GdkColor();", "+\t\t\tcolor.pixel = 1;", "+\t\t\tOS.gdk_gc_set_foreground(gc, color);", "+\t\t\tOS.gdk_draw_rectangle(mask, gc, 1, 0, 0, newWidth, newHeight);", "+\t\t\tOS.gdk_gc_set_function(gc, OS.GDK_AND);", "+\t\t\tOS.gdk_draw_drawable(mask, gc, maskPixmap, 0, 0, 0, 0, newWidth, newHeight);", "+\t\t\tOS.g_object_unref(gc);", "+\t\t\tif (maskPixmap != 0 && srcImage.mask != maskPixmap) OS.g_object_unref(maskPixmap);", "+\t\t\tmaskPixmap = mask;", "+\t\t}", "+\t}", "+", "-\t\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "-\t\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "-\t\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) == 0) {", "-\t\t\t\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "-\t\t\t\t\t\tscaledPixbuf, data.drawable,", "-\t\t\t\t\t\t0, 0, destX, destY, destWidth, destHeight,", "-\t\t\t\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\t\t\t\tint[] colorBuffer = new int[1];", "+\t\t\t\t\tint[] maskBuffer = new int[1];", "+\t\t\t\t\tOS.gdk_pixbuf_render_pixmap_and_mask(scaledPixbuf, colorBuffer, maskBuffer, 128);", "+\t\t\t\t\tcolorPixmap = colorBuffer[0];", "+\t\t\t\t\tmaskPixmap = maskBuffer[0];", "-\t} else {", "-\t", "-\t\t/* Blit cliping the mask */", "-\t\tGdkGCValues values = new GdkGCValues();", "-\t\tOS.gdk_gc_get_values(handle, values);", "-\t\tOS.gdk_gc_set_clip_mask(handle, maskPixmap);", "-\t\tOS.gdk_gc_set_clip_origin(handle, destX - srcX, destY - srcY);", "-\t\tOS.gdk_draw_drawable(drawable, handle, colorPixmap, srcX, srcY, destX, destY, srcWidth, srcHeight);", "-\t\tOS.gdk_gc_set_values(handle, values, OS.GDK_GC_CLIP_MASK | OS.GDK_GC_CLIP_X_ORIGIN | OS.GDK_GC_CLIP_Y_ORIGIN);", "+\t\tsrcX = 0;", "+\t\tsrcY = 0;", "+\t\tsrcWidth = destWidth;", "+\t\tsrcHeight = destHeight;", "+\t/* Blit cliping the mask */", "+\tGdkGCValues values = new GdkGCValues();", "+\tOS.gdk_gc_get_values(handle, values);", "+\tOS.gdk_gc_set_clip_mask(handle, maskPixmap);", "+\tOS.gdk_gc_set_clip_origin(handle, destX - srcX, destY - srcY);", "+\tOS.gdk_draw_drawable(drawable, handle, colorPixmap, srcX, srcY, destX, destY, srcWidth, srcHeight);", "+\tOS.gdk_gc_set_values(handle, values, OS.GDK_GC_CLIP_MASK | OS.GDK_GC_CLIP_X_ORIGIN | OS.GDK_GC_CLIP_Y_ORIGIN);", "+\tif (data.clipRgn != 0) OS.gdk_gc_set_clip_region(handle, data.clipRgn);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a692cda630753fd046a19489e2048aad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f9bb5d40accd622147de6079abe42fd37fe5f2d7", "commitAfterChange": "f50ec8ab73fb1f222ede738d89c8418386b1b69b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["-\t/* Merge clipping with mask if necessary */", "-\tif (data.clipRgn != 0)\t {", "-\t\tint newWidth =  imgWidth;", "-\t\tint newHeight = imgHeight;", "-\t\tint bytesPerLine = (((newWidth + 7) / 8) + 3) / 4 * 4;", "-\t\tbyte[] maskData = new byte[bytesPerLine * newHeight];", "-\t\tint mask = OS.gdk_bitmap_create_from_data(0, maskData, bytesPerLine * 8, newHeight);", "-\t\tif (mask != 0) {", "-\t\t\tint gc = OS.gdk_gc_new(mask);", "-\t\t\tOS.gdk_region_offset(data.clipRgn, -destX + srcX, -destY + srcY);", "-\t\t\tOS.gdk_gc_set_clip_region(gc, data.clipRgn);", "-\t\t\tOS.gdk_region_offset(data.clipRgn, -destX, -destY);", "-\t\t\tGdkColor color = new GdkColor();", "-\t\t\tcolor.pixel = 1;", "-\t\t\tOS.gdk_gc_set_foreground(gc, color);", "-\t\t\tOS.gdk_draw_rectangle(mask, gc, 1, 0, 0, newWidth, newHeight);", "-\t\t\tOS.gdk_gc_set_function(gc, OS.GDK_AND);", "-\t\t\tOS.gdk_draw_drawable(mask, gc, maskPixmap, 0, 0, 0, 0, newWidth, newHeight);", "-\t\t\tOS.g_object_unref(gc);", "-\t\t\tif (maskPixmap != 0 && srcImage.mask != maskPixmap) OS.g_object_unref(maskPixmap);", "-\t\t\tmaskPixmap = mask;", "-\t\t}", "-\t}", "-", "+\t/* Merge clipping with mask if necessary */", "+\tif (data.clipRgn != 0)\t {", "+\t\tint newWidth =  srcX + srcWidth;", "+\t\tint newHeight = srcY + srcHeight;", "+\t\tint bytesPerLine = (((newWidth + 7) / 8) + 3) / 4 * 4;", "+\t\tbyte[] maskData = new byte[bytesPerLine * newHeight];", "+\t\tint mask = OS.gdk_bitmap_create_from_data(0, maskData, bytesPerLine * 8, newHeight);", "+\t\tif (mask != 0) {", "+\t\t\tint gc = OS.gdk_gc_new(mask);", "+\t\t\tOS.gdk_region_offset(data.clipRgn, -destX + srcX, -destY + srcY);", "+\t\t\tOS.gdk_gc_set_clip_region(gc, data.clipRgn);", "+\t\t\tOS.gdk_region_offset(data.clipRgn, -destX, -destY);", "+\t\t\tGdkColor color = new GdkColor();", "+\t\t\tcolor.pixel = 1;", "+\t\t\tOS.gdk_gc_set_foreground(gc, color);", "+\t\t\tOS.gdk_draw_rectangle(mask, gc, 1, 0, 0, newWidth, newHeight);", "+\t\t\tOS.gdk_gc_set_function(gc, OS.GDK_AND);", "+\t\t\tOS.gdk_draw_drawable(mask, gc, maskPixmap, 0, 0, 0, 0, newWidth, newHeight);", "+\t\t\tOS.g_object_unref(gc);", "+\t\t\tif (maskPixmap != 0 && srcImage.mask != maskPixmap) OS.g_object_unref(maskPixmap);", "+\t\t\tmaskPixmap = mask;", "+\t\t}", "+\t}", "+"]}], "num": 24884}