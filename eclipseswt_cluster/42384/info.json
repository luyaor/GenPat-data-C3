{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f94ba8922c2ef4b2a1f1f5559c08ea6a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86ab954821e93d448d880c38cce1a3b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "dbfdea5a6ace7254c9bcb69a7489276f3b9d3e35", "commitAfterChange": "f1fbb8716f7eb6144440edb1c7a2f83e3f63fe10", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 181, "signatureBeforeChange": "  void applicationWillFinishLaunching (int id, int sel, int notification)", "signatureAfterChange": "  void applicationWillFinishLaunching (int id, int sel, int notification)", "diff": ["+\t\t\tint /*long*/ newTag = 0;", "+\t\t\tswitch(i) {", "+\t\t\t\tcase 0:", "+\t\t\t\t\tnewTag = SWT.ID_ABOUT;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 2:", "+\t\t\t\t\tnewTag = SWT.ID_PREFERENCES;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 6:", "+\t\t\t\t\tnewTag = SWT.ID_HIDE;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 7:", "+\t\t\t\t\tnewTag = SWT.ID_HIDE_OTHERS;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 8:", "+\t\t\t\t\tnewTag = SWT.ID_SHOW_ALL;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 10:", "+\t\t\t\t\tnewTag = SWT.ID_QUIT;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (newTag != 0) ni.setTag(newTag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e889765fd5a944b90305a5225bae7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "8c26d9a9eefdd82a00e12564061ed2f6a7f4ee19", "commitAfterChange": "dabb371250244a42d0a102e16d31217d0a0ef72f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r void fillAccel (ACCEL accel)", "signatureAfterChange": "\r \r void fillAccel (ACCEL accel)", "diff": ["+\tint fVirt = OS.FVIRTKEY;\r", "-\tint newKey = Display.untranslateKey (key);\r", "-\tif (newKey != 0) {\r", "-\t\tkey = newKey;\r", "+\tint vKey = Display.untranslateKey (key);\r", "+\tif (vKey != 0) {\r", "+\t\tkey = vKey;\t\r", "-\t\tif (key == 0x7F) {\r", "-\t\t\tkey = OS.VK_DELETE;\r", "-\t\t} else {\r", "-\t\t\tshort ch = (short) wcsToMbcs ((char) key);\r", "-\t\t\tkey = OS.CharUpper (ch);\r", "+\t\tswitch (key) {\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows.  For some reason, VkKeyScan\r", "+\t\t\t* fails to map ESC to VK_ESCAPE and DEL to\r", "+\t\t\t* VK_DELETE.  The fix is to map these keys\r", "+\t\t\t* as a special case.\r", "+\t\t\t*/\r", "+\t\t\tcase 27: key = OS.VK_ESCAPE; break;\r", "+\t\t\tcase 127: key = OS.VK_DELETE; break;\r", "+\t\t\tdefault: {\r", "+\t\t\t\tkey = wcsToMbcs ((char) key);\r", "+\t\t\t\tif (key == 0) return;\r", "+\t\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\t\tkey = OS.CharUpper ((short) key);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tvKey = OS.VkKeyScan ((short) key) & 0xFF;\r", "+\t\t\t\t\tif (vKey == -1) {\r", "+\t\t\t\t\t\tfVirt = 0;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tkey = vKey;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "-\taccel.fVirt = (byte) OS.FVIRTKEY;\r", "+\taccel.fVirt = (byte) fVirt;\r"]}], "num": 42384}