{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f032eca6ef475ae7eb5c6e8efc028119", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9340d8446497b840a254ba92efe52ba1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "982cd53e0d78db18706bf0846ac669e298de32e2", "commitAfterChange": "165673b92d78dcd017af081458f5cae6d2eb17c6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void deselectAll ()", "signatureAfterChange": " public void deselectAll ()", "diff": ["-\tint itemRef = OS.TreeView_SelectedItem (handle);", "-\tif (itemRef != 0) {", "+\tif ((style & SWT.SINGLE) != 0) {", "+\tint tvItem = OS.TreeView_SelectedItem (handle);", "+\tif (tvItem != 0) {", "-\t\tOS.TreeViewItem_IsSelected (itemRef, false);", "+\t\tOS.TreeViewItem_IsSelected (tvItem, false);", "-\t\tOS.GCHandle_Free (itemRef);", "+\t\tOS.GCHandle_Free (tvItem);", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\tfor (int i = 0; i < selectedItemCount; i++) {", "-\t    \tTreeItem item = selectedItems [i];", "-\t    \tOS.TreeViewItem_IsSelected (item.handle, false);", "-\t    }", "-\t    selectedItems = new TreeItem [4];", "-\t    selectedItemCount = 0;", "+\t} else {", "+\t    int items = OS.ItemsControl_Items (handle);", "+\t    int itemCount = OS.ItemCollection_Count (items);", "+\t    boolean[] selecting = new boolean[] {false};", "+\t    for (int i = 0; i < itemCount; i++) {", "+\t\t\tint item = OS.ItemCollection_GetItemAt (items, i);", "+\t\t\tfixSelection (item, null, null, selecting);", "+\t\t\tOS.GCHandle_Free (item);", "+\t\t}", "+\t    OS.GCHandle_Free (items);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc747fb5d79a9f5234cf8185b1a0825c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9ade075934d06466df3892806ec1a57b1bbcd630", "commitAfterChange": "b6e17b5d4e6e6c4b2e2ee3aeeea4decdd00e9eee", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-\t//TODO - get rid of enter/exit for mouse crossing border", "-\tint eventHandle = eventHandle ();", "-\tint mask =", "-\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "-\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "-\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "-\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "-\t\tOS.GDK_FOCUS_CHANGE_MASK;", "-\tOS.gtk_widget_add_events (eventHandle, mask);", "-\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, POPUP_MENU);", "-\tOS.g_signal_connect_after (handle, OS.realize, windowProc2, REALIZE);", "-\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SHOW_HELP);", "+\t", "+\t/* Connect the keyboard signals */", "+\tint focusHandle = focusHandle ();", "+\tint focusMask = OS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK | OS.GDK_FOCUS_CHANGE_MASK;", "+\tOS.gtk_widget_add_events (focusHandle, focusMask);", "+\tOS.g_signal_connect (focusHandle, OS.popup_menu, windowProc2, POPUP_MENU);", "+\tOS.g_signal_connect (focusHandle, OS.show_help, windowProc3, SHOW_HELP);", "+\tOS.g_signal_connect (focusHandle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "+\tOS.g_signal_connect (focusHandle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "+\tOS.g_signal_connect (focusHandle, OS.focus, windowProc3, FOCUS);", "+\tOS.g_signal_connect (focusHandle, OS.focus_in_event, windowProc3, FOCUS_IN_EVENT);", "+\tOS.g_signal_connect (focusHandle, OS.focus_out_event, windowProc3, FOCUS_OUT_EVENT);", "+", "+\t/* Connect the mouse signals */", "+\tint eventHandle = eventHandle ();", "+\tint eventMask = OS.GDK_POINTER_MOTION_MASK | OS.GDK_BUTTON_PRESS_MASK |", "+\t\tOS.GDK_BUTTON_RELEASE_MASK | OS.GDK_ENTER_NOTIFY_MASK |", "+\t\tOS.GDK_LEAVE_NOTIFY_MASK;", "+\tOS.gtk_widget_add_events (eventHandle, eventMask);", "-\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "-\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "-\tOS.g_signal_connect (eventHandle, OS.focus, windowProc3, FOCUS);", "-\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, FOCUS_IN_EVENT);", "-\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, FOCUS_OUT_EVENT);", "-\tOS.g_signal_connect (eventHandle, OS.event_after, windowProc3, EVENT_AFTER);", "-\tOS.g_signal_connect_after (eventHandle, OS.expose_event, windowProc3, EXPOSE_EVENT);", "-\tint imHandle = imHandle ();", "-\tif (imHandle != 0) {", "-\t\tOS.g_signal_connect (handle, OS.unrealize, windowProc2, UNREALIZE);", "-\t\tOS.g_signal_connect (imHandle, OS.commit, windowProc3, COMMIT);", "-\t\tOS.g_signal_connect (imHandle, OS.preedit_changed, windowProc2, PREEDIT_CHANGED);", "-\t}", "+", "+\t/* Connect the event_after signal for both key and mouse */", "+\tOS.g_signal_connect (eventHandle, OS.event_after, windowProc3, EVENT_AFTER);", "+\tif (focusHandle != eventHandle) {", "+\t\tOS.g_signal_connect (focusHandle, OS.event_after, windowProc3, EVENT_AFTER);", "+\t}", "+\t", "+\t/* Connect the paint signal */", "+\tint paintHandle = paintHandle ();", "+\tint paintMask = OS.GDK_EXPOSURE_MASK;", "+\tOS.gtk_widget_add_events (paintHandle, paintMask);", "+\tOS.g_signal_connect_after (paintHandle, OS.expose_event, windowProc3, EXPOSE_EVENT);", "+", "+\t/* Connect the Input Method signals */", "+\tOS.g_signal_connect_after (handle, OS.realize, windowProc2, REALIZE);", "+\tOS.g_signal_connect (handle, OS.unrealize, windowProc2, UNREALIZE);", "+\tint imHandle = imHandle ();", "+\tif (imHandle != 0) {", "+\t\tOS.g_signal_connect (imHandle, OS.commit, windowProc3, COMMIT);", "+\t\tOS.g_signal_connect (imHandle, OS.preedit_changed, windowProc2, PREEDIT_CHANGED);", "+\t}"]}], "num": 36516}