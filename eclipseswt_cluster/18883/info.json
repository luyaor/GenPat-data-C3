{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31525de8d5273a3599f42d4ad1b0b700", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7a21e02e6ec333dc559b3cda13578c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "c8d5e49d5a2c0817d6316dd3dfcd4087e493d9a8", "commitAfterChange": "f0d054d7a9996f07cb303334a0e3badcf3b70f15", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["+", "+\tint width = 0;", "+", "+\t/* compute header width */", "+\tif (displayText != null) {", "+\t\tNSMutableDictionary dict = NSMutableDictionary.dictionaryWithCapacity (4);", "+\t\tdict.setObject (getParent ().getFont ().handle, OS.NSFontAttributeName);", "+\t\tNSString string = NSString.stringWith (displayText);", "+\t\tNSAttributedString attrString = ((NSAttributedString)new NSAttributedString ().alloc ()).initWithString (string, dict);", "+\t\tNSSize stringSize = attrString.size ();", "+\t\tattrString.release ();", "+\t\twidth += Math.ceil (stringSize.width);", "+\t\tif (image != null) width += MARGIN; /* space between image and text */", "+\t}", "+\tif (image != null) {", "+\t\tNSSize imageSize = image.handle.size ();", "+\t\twidth += Math.ceil (imageSize.width);", "+\t}", "+\tif (parent.sortColumn == this && parent.sortDirection != SWT.NONE) {", "+\t\tNSTableHeaderCell headerCell = nsColumn.headerCell ();", "+\t\tNSRect rect = new NSRect ();", "+\t\trect.width = rect.height = Float.MAX_VALUE;", "+\t\tNSSize cellSize = headerCell.cellSizeForBounds (rect);", "+\t\trect.height = cellSize.height;", "+\t\tNSRect sortRect = headerCell.sortIndicatorRectForBounds (rect);", "+\t\twidth += Math.ceil (sortRect.width);", "+\t}", "+", "+\t/* compute item widths down column */", "-\tint width = gc.stringExtent (text).x;", "-\t//TODO header extra"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21ac98b7ff52a0a64beb2fbecf2d96e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "c8d5e49d5a2c0817d6316dd3dfcd4087e493d9a8", "commitAfterChange": "f0d054d7a9996f07cb303334a0e3badcf3b70f15", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["+", "+\tint width = 0;", "+", "+\t/* compute header width */", "+\tif (displayText != null) {", "+\t\tNSMutableDictionary dict = NSMutableDictionary.dictionaryWithCapacity (4);", "+\t\tdict.setObject (getParent ().getFont ().handle, OS.NSFontAttributeName);", "+\t\tNSString string = NSString.stringWith (displayText);", "+\t\tNSAttributedString attrString = ((NSAttributedString)new NSAttributedString ().alloc ()).initWithString (string, dict);", "+\t\tNSSize stringSize = attrString.size ();", "+\t\tattrString.release ();", "+\t\twidth += Math.ceil (stringSize.width);", "+\t\tif (image != null) width += MARGIN; /* space between image and text */", "+\t}", "+\tif (image != null) {", "+\t\tNSSize imageSize = image.handle.size ();", "+\t\twidth += Math.ceil (imageSize.width);", "+\t}", "+\tif (parent.sortColumn == this && parent.sortDirection != SWT.NONE) {", "+\t\tNSTableHeaderCell headerCell = nsColumn.headerCell ();", "+\t\tNSRect rect = new NSRect ();", "+\t\trect.width = rect.height = Float.MAX_VALUE;", "+\t\tNSSize cellSize = headerCell.cellSizeForBounds (rect);", "+\t\trect.height = cellSize.height;", "+\t\tNSRect sortRect = headerCell.sortIndicatorRectForBounds (rect);", "+\t\twidth += Math.ceil (sortRect.width);", "+\t}", "+", "+\t/* compute item widths down column */", "-\tint width = gc.stringExtent (text).x;", "-\t//TODO header extra"]}], "num": 18883}