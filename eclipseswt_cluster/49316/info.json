{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a6baf1a12ad00837fabc34b11f85c60", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "493269fc1f5bf8fd00a9cbb8e9623da1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tstatic int atkHypertext_get_n_links (int atkObject)", "signatureAfterChange": "  \tstatic int atkHypertext_get_n_links (int atkObject)", "diff": ["-\t\treturn 0;\t/* read hyperlink's name */", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getHyperlinkCount(event);", "+\t\t\t\t}", "+\t\t\t\treturn event.count;", "+\t\t\t}", "+\t\t}", "+\t\tint /*long*/ parentResult = 0;", "+\t\tAtkHypertextIface iface = getHypertextIface (atkObject);", "+\t\tif (iface != null && iface.get_n_links != 0) {", "+\t\t\tparentResult = ATK.call (iface.get_n_links, atkObject);", "+\t\t}", "+\t\treturn parentResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1ff22ef7efb58f857dbce1630b34c1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tstatic int atkHypertext_get_link_index (int atkObject, int char_index)", "signatureAfterChange": "  \tstatic int atkHypertext_get_link_index (int atkObject, int char_index)", "diff": ["-\t\treturn 0;", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tevent.offset = (int)/*int*/char_index;", "+\t\t\t\tevent.index = -1;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getHyperlinkIndex(event);", "+\t\t\t\t}", "+\t\t\t\treturn event.index;", "+\t\t\t}", "+\t\t}", "+\t\tint /*long*/ parentResult = 0;", "+\t\tAtkHypertextIface iface = getHypertextIface (atkObject);", "+\t\tif (iface != null && iface.get_link != 0) {", "+\t\t\tparentResult = ATK.call (iface.get_link, atkObject, char_index);", "+\t\t}", "+\t\treturn parentResult;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7d70590fd3e4fd693403062c01eef3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": "\t  \tstatic int atkHypertext_get_link (int atkObject, int link_index)", "signatureAfterChange": " \t \tstatic int atkHypertext_get_link (int atkObject, int link_index)", "diff": ["+\t", "-\t\treturn 0;", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tevent.index = (int)/*int*/link_index;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getHyperlink(event);", "+\t\t\t\t}", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\treturn result != null ? result.accessibleObject.handle : 0;", "+\t\t\t}", "+\t\t}", "+\t\tint /*long*/ parentResult = 0;", "+\t\tAtkHypertextIface iface = getHypertextIface (atkObject);", "+\t\tif (iface != null && iface.get_link != 0) {", "+\t\t\tparentResult = ATK.call (iface.get_link, atkObject, link_index);", "+\t\t}", "+\t\treturn parentResult;"]}], "num": 49316}