{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aac3593128b47fb9591f3b6be7f07e98", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5137f0799f9c22568a69974ed2142147", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "3b350dd4c4b9460951698e03648662ba16994245", "commitAfterChange": "21e23b791a319e5180c60f1da8d0340d3dcffe74", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 73, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\toldX = closeRect.x;", "-\toldY = closeRect.y;", "-\toldWidth = closeRect.width;", "-\toldHeight = closeRect.height;", "-\tcloseRect.x = closeRect.y = closeRect.height = closeRect.width = 0;", "-\tif (showClose && single && selectedIndex != -1) {", "-\t\tcloseRect.x = size.x - borderRight - BUTTON_SIZE;", "-\t\tif (borderRight > 0) closeRect.x += 1; // align with first line of trim", "-\t\tif (single) closeRect.x -= 3;", "-\t\tcloseRect.y = onBottom ? size.y - borderBottom - tabHeight : borderTop + 1;", "-\t\tcloseRect.width = BUTTON_SIZE;", "-\t\tcloseRect.height = tabHeight;", "+\toldX = maxRect.x;", "+\toldY = maxRect.y;", "+\toldWidth = maxRect.width;", "+\toldHeight = maxRect.height;", "+\tmaxRect.x = maxRect.y = maxRect.width = maxRect.height = 0;", "+\tif (showMax) {", "+\t\tmaxRect.x = size.x - borderRight - BUTTON_SIZE;", "+\t\tif (borderRight > 0) maxRect.x += 1;", "+\t\tif (single) maxRect.x -= 3;", "+\t\tmaxRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tmaxRect.width = BUTTON_SIZE;", "+\t\tmaxRect.height = tabHeight;", "-\tif (oldX != closeRect.x || oldWidth != closeRect.width ||", "-\t    oldY != closeRect.y || oldHeight != closeRect.height) changed = true;", "+\tif (oldX != maxRect.x || oldWidth != maxRect.width ||", "+\t    oldY != maxRect.y || oldHeight != maxRect.height) changed = true;", "-\toldX = expandRect.x;", "-\toldY = expandRect.y;", "-\toldWidth = expandRect.width;", "-\toldHeight = expandRect.height;", "-\texpandRect.x = expandRect.y = expandRect.width = expandRect.height = 0;", "-\tif (showExpand) {", "-\t\texpandRect.x = size.x - borderRight - closeRect.width - BUTTON_SIZE;", "-\t\tif (borderRight > 0) expandRect.x += 1;", "-\t\tif (single) expandRect.x -= 3;", "-\t\texpandRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "-\t\texpandRect.width = BUTTON_SIZE;", "-\t\texpandRect.height = tabHeight;", "+\toldX = minRect.x;", "+\toldY = minRect.y;", "+\toldWidth = minRect.width;", "+\toldHeight = minRect.height;", "+\tminRect.x = minRect.y = minRect.width = minRect.height = 0;", "+\tif (showMin) {", "+\t\tminRect.x = size.x - borderRight - maxRect.width - BUTTON_SIZE;", "+\t\tif (borderRight > 0) minRect.x += 1;", "+\t\tif (single) minRect.x -= 3;", "+\t\tminRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tminRect.width = BUTTON_SIZE;", "+\t\tminRect.height = tabHeight;", "-\tif (oldX != expandRect.x || oldWidth != expandRect.width ||", "-\t    oldY != expandRect.y || oldHeight != expandRect.height) changed = true;", "+\tif (oldX != minRect.x || oldWidth != minRect.width ||", "+\t    oldY != minRect.y || oldHeight != minRect.height) changed = true;", "-\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x - 3);", "+\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "-\t\t\ttopRightRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x;", "+\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x;", "-\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE - 3);", "+\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE - 3);", "-\t\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE;", "+\t\t\t\tchevronRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0de447e824b0d86f6cd7e67a5901e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "2cef3fa78da7f2885ce55fa509348982e00b2225", "commitAfterChange": "bbeab947327689cb203638e742e58f555e6c1b64", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 75, "signatureBeforeChange": "  private void setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-", "-private void setButtonBounds() {", "-\tupdateArrowBar();", "-\tupdateCloseBar();", "-", "-\tRectangle area = super.getClientArea();", "-", "-\tint offset = 0;", "-\tif (topRight != null) {", "-\t\tPoint size = topRight.computeSize(SWT.DEFAULT, tabHeight);", "-\t\tint x = area.x + area.width - borderRight - size.x;", "-\t\tint y = onBottom ? area.y + area.height - borderBottom - size.y : area.y + borderTop;", "-\t\ttopRight.setBounds(x, y, size.x, size.y);", "-\t\toffset = size.x;", "-\t}", "-\tboolean leftVisible = scroll_leftVisible();", "-\tboolean rightVisible = scroll_rightVisible();", "-\tif (leftVisible || rightVisible) {", "-\t\tPoint size = arrowBar.computeSize(SWT.DEFAULT, tabHeight);", "-\t\tint x = area.x + area.width - borderRight - size.x - offset;", "-\t\tint y = (onBottom) ? area.y + area.height - borderBottom - size.y : area.y + borderTop;", "-\t\t", "-\t\tarrowBar.setBounds(x, y, size.x, size.y);", "-\t\tToolItem[] items = arrowBar.getItems();", "-\t\titems[0].setEnabled(leftVisible);", "-\t\titems[1].setEnabled(rightVisible);", "-\t\tarrowBar.setVisible(true);", "-\t} else {", "-\t\tarrowBar.setVisible(false);", "-\t}", "-\t", "-\t// When the close button is right at the edge of the Tab folder, hide it because", "-\t// otherwise it may block off a part of the border on the right", "-\tif (showClose) {", "-\t\tinactiveCloseBar.setVisible(false);", "-\t\tCTabItem item = getSelection();", "-\t\tif (item == null) {", "-\t\t\tcloseBar.setVisible(false);", "-\t\t} else {", "-\t\t\tint toolbarHeight = tabHeight - CTabItem.TOP_MARGIN - CTabItem.BOTTOM_MARGIN + 2; // +2 to ignore gap between focus rectangle", "-\t\t\tPoint size = closeBar.computeSize(SWT.DEFAULT, toolbarHeight);", "-\t\t\tint x = item.x + item.width - size.x - 2; // -2 to not overlap focus rectangle and trim", "-\t\t\tint y = item.y + Math.max(0, (item.height - toolbarHeight)/2);\t\t", "-\t\t\tcloseBar.setBounds(x, y, size.x, toolbarHeight);", "-\t\t\tRectangle toolspace = getToolSpace();", "-\t\t\tPoint folderSize = getSize();", "-\t\t\tboolean visible = (toolspace.width == 0 || x < toolspace.x) && x + size.x < folderSize.x - borderRight;", "-\t\t\tcloseBar.setVisible(visible);", "-}", "+}", "+boolean setButtonBounds() {", "+\tint oldX, oldY, oldWidth, oldHeight;", "+\tboolean changed = false;", "+\tPoint size = getSize();", "+\t", "+\toldX = maxRect.x;", "+\toldY = maxRect.y;", "+\toldWidth = maxRect.width;", "+\toldHeight = maxRect.height;", "+\tmaxRect.x = maxRect.y = maxRect.width = maxRect.height = 0;", "+\tif (showMax) {", "+\t\tmaxRect.x = size.x - borderRight - BUTTON_SIZE - 3;", "+\t\tif (borderRight > 0) maxRect.x += 1;", "+\t\tmaxRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tmaxRect.width = BUTTON_SIZE;", "+\t\tmaxRect.height = tabHeight - 1;", "+\t}", "+\tif (oldX != maxRect.x || oldWidth != maxRect.width ||", "+\t    oldY != maxRect.y || oldHeight != maxRect.height) changed = true;", "+\t", "+\toldX = minRect.x;", "+\toldY = minRect.y;", "+\toldWidth = minRect.width;", "+\toldHeight = minRect.height;", "+\tminRect.x = minRect.y = minRect.width = minRect.height = 0;", "+\tif (showMin) {", "+\t\tminRect.x = size.x - borderRight - maxRect.width - BUTTON_SIZE - 3;", "+\t\tif (borderRight > 0) minRect.x += 1;", "+\t\tminRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\tminRect.width = BUTTON_SIZE;", "+\t\tminRect.height = tabHeight - 1;", "+\t}", "+\tif (oldX != minRect.x || oldWidth != minRect.width ||", "+\t    oldY != minRect.y || oldHeight != minRect.height) changed = true;", "+\t", "+\toldX = topRightRect.x;", "+\toldY = topRightRect.y;", "+\toldWidth = topRightRect.width;", "+\toldHeight = topRightRect.height;", "+\ttopRightRect.x = topRightRect.y = topRightRect.width = topRightRect.height = 0;", "+\tif (topRight != null) {", "+\t\tPoint topRightSize = topRight.computeSize(SWT.DEFAULT, tabHeight);", "+\t\tif (single && selectedIndex > -1) {", "+\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3);", "+\t\t} else {", "+\t\t\ttopRightRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightSize.x - 3;", "+\t\t}", "+\t\ttopRightRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\ttopRightRect.width = topRightSize.x;", "+\t\ttopRightRect.height = tabHeight - 1;", "+\t\ttopRight.setBounds(topRightRect);", "+\t}", "+\tif (oldX != topRightRect.x || oldWidth != topRightRect.width ||", "+\t\toldY != topRightRect.y || oldHeight != topRightRect.height) {\t", "+\t\tchanged = true;", "+\t}", "+\t\t", "+\toldX = chevronRect.x;", "+\toldY = chevronRect.y;", "+\toldWidth = chevronRect.width;", "+\toldHeight = chevronRect.height;", "+\tchevronRect.x = chevronRect.y = chevronRect.height = chevronRect.width = 0;", "+\tif (items.length > 1) {", "+\t\tif (single && selectedIndex > -1){", "+\t\t\tCTabItem item = items[selectedIndex];", "+\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE - 3);", "+\t\t\tif (borderRight > 0) chevronRect.x += 1;", "+\t\t\tchevronRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\tchevronRect.width = BUTTON_SIZE;", "+\t\t\tchevronRect.height = tabHeight - 1;", "+\t\t} else {", "+\t\t\tint rightEdge = getRightItemEdge();", "+\t\t\tCTabItem item = items[items.length-1];", "+\t\t\tif (topTabIndex > 0 || item.x + item.width >= rightEdge) {", "+\t\t\t\tchevronRect.x = size.x - borderRight - minRect.width - maxRect.width - topRightRect.width - BUTTON_SIZE - 3;", "+\t\t\t\tif (borderRight > 0) chevronRect.x += 1;", "+\t\t\t\tchevronRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\tchevronRect.width = BUTTON_SIZE;", "+\t\t\t\tchevronRect.height = tabHeight - 1;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (oldX != chevronRect.x || oldWidth != chevronRect.width ||", "+\t    oldY != chevronRect.y || oldHeight != chevronRect.height) changed = true;", "+\t", "+\treturn changed;", "+}"]}], "num": 11466}