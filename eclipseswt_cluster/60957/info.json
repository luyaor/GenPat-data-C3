{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad51ff3b5811eaefa319142b68ff057c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4d6423b2aebc479368deb1f20b7ecf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fb6920c510124e2d3ea09709989519763ccdf9b7", "commitAfterChange": "c6cf6eb059c461c19c9da950a3ea986288bc4406", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["-\tOS.gdk_flush ();", "-\tint pendingCount = 0;", "-\tint /*long*/ eventPtr = 0;", "-\tint /*long*/ [] pendingEvents = new int [4];", "-\tGdkEvent event = new GdkEvent ();", "-\twhile ((eventPtr = OS.gdk_event_get ()) != 0) {", "-\t\tOS.memmove (event, eventPtr, GdkEvent.sizeof);", "-\t\tswitch (event.type) {", "-\t\t\tcase OS.GDK_EXPOSE:", "-\t\t\tcase OS.GDK_NO_EXPOSE:", "-\t\t\t\t/* Note: does not call eventProc() */", "-\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t\t\tOS.gdk_event_free (eventPtr);", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tif (pendingCount == pendingEvents.length) {", "-\t\t\t\t\tint[] newEvents = new int [pendingCount + 4];", "-\t\t\t\t\tSystem.arraycopy (pendingEvents, 0, newEvents, 0, pendingCount);", "-\t\t\t\t\tpendingEvents = newEvents;", "-\t\t\t\t}", "-\t\t\t\tpendingEvents [pendingCount++] = eventPtr;", "-\t\t}", "-\t}", "-\tfor (int i=pendingCount - 1; i>=0; i--) {", "-\t\teventPtr = pendingEvents [i];", "-\t\tOS.gdk_event_put (eventPtr);", "-\t\tOS.gdk_event_free (eventPtr);", "-\t}", "+\tflushExposes ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27664c9248fb21e7d96f7cbed7b96619", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fb6920c510124e2d3ea09709989519763ccdf9b7", "commitAfterChange": "c6cf6eb059c461c19c9da950a3ea986288bc4406", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "  void update (boolean all)", "signatureAfterChange": "  void update (boolean all)", "diff": ["-\tif (all) {", "-\t\tdisplay.update ();", "-\t} else {", "-\t\tOS.gdk_flush ();", "-\t\tint pendingCount = 0;", "-\t\tint /*long*/ eventPtr = 0;", "-\t\tint /*long*/ [] pendingEvents = new int [4];", "-\t\tint /*long*/ window = paintWindow ();", "-\t\tGdkEventExpose event = new GdkEventExpose ();", "-\t\twhile ((eventPtr = OS.gdk_event_get ()) != 0) {", "-\t\t\tOS.memmove (event, eventPtr, GdkEventExpose.sizeof);", "-\t\t\tswitch (event.type) {", "-\t\t\t\tcase OS.GDK_EXPOSE:", "-\t\t\t\tcase OS.GDK_NO_EXPOSE:", "-\t\t\t\t\tif (event.window == window) {", "-\t\t\t\t\t\t/* Note: does not call eventProc() */", "-\t\t\t\t\t\tOS.gtk_main_do_event (eventPtr);", "-\t\t\t\t\t\tOS.gdk_event_free (eventPtr);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\t//FALL THROUGH", "-\t\t\t\tdefault:", "-\t\t\t\t\tif (pendingCount == pendingEvents.length) {", "-\t\t\t\t\t\tint[] newEvents = new int [pendingCount + 4];", "-\t\t\t\t\t\tSystem.arraycopy (pendingEvents, 0, newEvents, 0, pendingCount);", "-\t\t\t\t\t\tpendingEvents = newEvents;", "-\t\t\t\t\t}", "-\t\t\t\t\tpendingEvents [pendingCount++] = eventPtr;", "-\t\t\t}", "-\t\t}", "-\t\tfor (int i=pendingCount - 1; i>=0; i--) {", "-\t\t\teventPtr = pendingEvents [i];", "-\t\t\tOS.gdk_event_put (eventPtr);", "-\t\t\tOS.gdk_event_free (eventPtr);", "-\t\t}", "-\t\tOS.gdk_window_process_updates (window, all);", "-\t}", "+\tdisplay.flushExposes ();", "+\tint /*long*/ window = paintWindow ();", "+\tOS.gdk_window_process_updates (window, all);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfd892b602fa58507dfb41f83d1dbfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "23ff9977e02e4f1793c839acbb19de2361111097", "commitAfterChange": "134a5acfc60ad162f9a55473072bf72fbf6d0a56", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "  void update (boolean all)", "signatureAfterChange": "  void update (boolean all)", "diff": ["-\tOS.gdk_flush ();", "-\tint /*long*/ window = paintWindow ();", "-\tint /*long*/ gc = OS.gdk_gc_new (window);", "-\tOS.gdk_gc_set_exposures (gc, true);", "-\tOS.gdk_draw_drawable (window, gc, window, 0, 0, 0, 0, 0, 0);", "-\tOS.g_object_unref (gc);", "-\tint /*long*/ event = 0;", "-\twhile ((event = OS.gdk_event_get_graphics_expose (window)) != 0) {", "-\t\tOS.gtk_main_do_event (event);", "-\t\tOS.gdk_event_free (event);\t", "+//\tcheckWidget();", "+\tif (all) {", "+\t\tdisplay.update ();", "+\t} else {", "+\t\tOS.gdk_flush ();", "+\t\tint pendingCount = 0;", "+\t\tint /*long*/ eventPtr = 0;", "+\t\tint /*long*/ [] pendingEvents = new int [4];", "+\t\tint /*long*/ window = paintWindow ();", "+\t\tGdkEventExpose event = new GdkEventExpose ();", "+\t\twhile ((eventPtr = OS.gdk_event_get ()) != 0) {", "+\t\t\tOS.memmove (event, eventPtr, GdkEventExpose.sizeof);", "+\t\t\tswitch (event.type) {", "+\t\t\t\tcase OS.GDK_EXPOSE:", "+\t\t\t\tcase OS.GDK_NO_EXPOSE:", "+\t\t\t\t\tif (event.window == window) {", "+\t\t\t\t\t\t/* Note: does not call eventProc() */", "+\t\t\t\t\t\tOS.gtk_main_do_event (eventPtr);", "+\t\t\t\t\t\tOS.gdk_event_free (eventPtr);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\t//FALL THROUGH", "+\t\t\t\tdefault:", "+\t\t\t\t\tif (pendingCount == pendingEvents.length) {", "+\t\t\t\t\t\tint[] newEvents = new int [pendingCount + 4];", "+\t\t\t\t\t\tSystem.arraycopy (pendingEvents, 0, newEvents, 0, pendingCount);", "+\t\t\t\t\t\tpendingEvents = newEvents;", "+\t\t\t\t\t}", "+\t\t\t\t\tpendingEvents [pendingCount++] = eventPtr;", "+\t\t\t}", "+\t\t}", "+\t\tfor (int i=pendingCount - 1; i>=0; i--) {", "+\t\t\teventPtr = pendingEvents [i];", "+\t\t\tOS.gdk_event_put (eventPtr);", "+\t\t\tOS.gdk_event_free (eventPtr);", "+\t\t}", "+\t\tOS.gdk_window_process_updates (window, all);", "-\tOS.gdk_window_process_updates (window, all);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8dd025c0b80dc9c89bfd30554f7a17e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "23ff9977e02e4f1793c839acbb19de2361111097", "commitAfterChange": "134a5acfc60ad162f9a55473072bf72fbf6d0a56", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["-\t// NOT IMPLEMENTED - need to flush only pending exposes", "-\twhile ((OS.gtk_events_pending ()) != 0) {", "-\t\tOS.gtk_main_iteration ();", "-\t}\t", "+\tint pendingCount = 0;", "+\tint /*long*/ eventPtr = 0;", "+\tint /*long*/ [] pendingEvents = new int [4];", "+\tGdkEvent event = new GdkEvent ();", "+\twhile ((eventPtr = OS.gdk_event_get ()) != 0) {", "+\t\tOS.memmove (event, eventPtr, GdkEvent.sizeof);", "+\t\tswitch (event.type) {", "+\t\t\tcase OS.GDK_EXPOSE:", "+\t\t\tcase OS.GDK_NO_EXPOSE:", "+\t\t\t\t/* Note: does not call eventProc() */", "+\t\t\t\tOS.gtk_main_do_event (eventPtr);", "+\t\t\t\tOS.gdk_event_free (eventPtr);", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tif (pendingCount == pendingEvents.length) {", "+\t\t\t\t\tint[] newEvents = new int [pendingCount + 4];", "+\t\t\t\t\tSystem.arraycopy (pendingEvents, 0, newEvents, 0, pendingCount);", "+\t\t\t\t\tpendingEvents = newEvents;", "+\t\t\t\t}", "+\t\t\t\tpendingEvents [pendingCount++] = eventPtr;", "+\t\t}", "+\t}", "+\tfor (int i=pendingCount - 1; i>=0; i--) {", "+\t\teventPtr = pendingEvents [i];", "+\t\tOS.gdk_event_put (eventPtr);", "+\t\tOS.gdk_event_free (eventPtr);", "+\t}", "+\tOS.gdk_window_process_all_updates ();"]}], "num": 60957}