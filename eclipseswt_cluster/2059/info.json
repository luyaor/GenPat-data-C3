{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7d58032f3ceb9da345fbba7c2d666f7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1d4ec112144961da0452ab5972ee91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f520a8dcf7987a68442ef89495b4518db5c9b2f5", "commitAfterChange": "f1256286e0498a43b82e383228c40b73b19b7e29", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\tif (styledText.isFixedLineHeight()) {", "+\t\tint height = layout.getBounds().height;", "+\t\tif (height > getLineHeight()) {", "+\t\t\tFontMetrics metrics = layout.getLineMetrics(0);", "+\t\t\tascent = metrics.getAscent() + metrics.getLeading();", "+\t\t\tdescent = metrics.getDescent();", "+\t\t\tif (layouts != null) {", "+\t\t\t\tfor (int i = 0; i < layouts.length; i++) {", "+\t\t\t\t\tif (layouts[i] != null && layouts[i] != layout) {", "+\t\t\t\t\t\tlayouts[i].setAscent(ascent);", "+\t\t\t\t\t\tlayouts[i].setDescent(descent);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (styledText.verticalScrollOffset != 0) {", "+\t\t\t\tint topIndex = styledText.topIndex;", "+\t\t\t\tint topIndexY = styledText.topIndexY;", "+\t\t\t\tint lineHeight = getLineHeight();", "+\t\t\t\tif (topIndexY >= 0) {", "+\t\t\t\t\tstyledText.verticalScrollOffset = (topIndex - 1) * lineHeight + lineHeight - topIndexY;", "+\t\t\t\t} else {", "+\t\t\t\t\tstyledText.verticalScrollOffset = topIndex * lineHeight - topIndexY;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (styledText.isBidiCaret()) {", "+\t\t\t\tstyledText.createCaretBitmaps();", "+\t\t\t\tstyledText.caretDirection = SWT.NULL;", "+\t\t\t}", "+\t\t\tstyledText.setCaretLocation();", "+\t\t\tstyledText.redraw();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40d7eb1ecf6bdf967a250cfd12fa72a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "00ab7ba97307f7142de21aaa6b2d7b6421433f05", "commitAfterChange": "10231dd46cdb0ffe767fa67d328ac62df935992a", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " public Rectangle getTextBounds(int start, int end)", "signatureAfterChange": " public Rectangle getTextBounds(int start, int end)", "diff": ["-\t\tif (i == lineStart && i == lineEnd) {", "-\t\t\trect = layout.getBounds(start - lineOffset, end - lineOffset);", "-\t\t} else if (i == lineStart) {", "-\t\t\tString line = content.getLine(i);", "-\t\t\trect = layout.getBounds(start - lineOffset, line.length());", "-\t\t} else if (i == lineEnd) {", "-\t\t\trect = layout.getBounds(0, end - lineOffset);", "+\t\tif (layout.getText().length() > 0) {", "+\t\t\tif (i == lineStart && i == lineEnd) {", "+\t\t\t\trect = layout.getBounds(start - lineOffset, end - lineOffset);", "+\t\t\t} else if (i == lineStart) {", "+\t\t\t\tString line = content.getLine(i);", "+\t\t\t\trect = layout.getBounds(start - lineOffset, line.length());", "+\t\t\t} else if (i == lineEnd) {", "+\t\t\t\trect = layout.getBounds(0, end - lineOffset);", "+\t\t\t} else {", "+\t\t\t\trect = layout.getBounds();", "+\t\t\t}", "+\t\t\tleft = Math.min(left, rect.x);", "+\t\t\tright = Math.max(right, rect.x + rect.width);", "+\t\t\theight += rect.height;", "-\t\t\trect = layout.getBounds();", "+\t\t\theight += renderer.getLineHeight();", "-\t\tleft = Math.min (left, rect.x);", "-\t\tright = Math.max (right, rect.x + rect.width);", "-\t\theight += rect.height;"]}], "num": 2059}