{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c01ff144a815e49a68b5b64d2521eab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a096b3a02cb06a39d9f0fdd92865191c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "22182e34c63852d6ad810cea1c40d7cb2b3f0bce", "commitAfterChange": "3b4b1d4ea7d1bdc6eb182e6cf4eab485e831bd1b", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public TreeItem [] getSelection ()", "signatureAfterChange": " public TreeItem [] getSelection ()", "diff": ["-\tTreeItem [] guess = new TreeItem [8];", "+\tTreeItem [] guess = new TreeItem [(style & SWT.VIRTUAL) != 0 ? 8 : 1];", "-\t\tcount = getSelection (hItem, tvItem, guess, 0);", "+\t\tcount = getSelection (hItem, tvItem, guess, 0, true);", "-\tif ((style & SWT.VIRTUAL) != 0) {", "-\t\tTVITEM tvItem = new TVITEM ();", "-\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_PARAM | OS.TVIF_STATE;", "-\t\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-\t\tgetSelection (hItem, tvItem, result, 0);", "-\t} else {", "-\t\tTVITEM tvItem = null;", "-\t\tif (OS.IsWinCE) {", "-\t\t\ttvItem = new TVITEM ();", "-\t\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\t}", "-\t\tint index = 0;", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tTreeItem item = items [i];", "-\t\t\tif (item != null) {", "-\t\t\t\tint hItem = item.handle, state = 0;", "-\t\t\t\tif (OS.IsWinCE) {", "-\t\t\t\t\ttvItem.hItem = hItem;", "-\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\t\t\t\tstate = tvItem.state;", "-\t\t\t\t} else {", "-\t\t\t\t\tstate = OS.SendMessage (handle, OS.TVM_GETITEMSTATE, hItem, OS.TVIS_SELECTED);", "-\t\t\t\t}", "-\t\t\t\tif ((state & OS.TVIS_SELECTED) != 0) {", "-\t\t\t\t\tresult [index++] = item;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\tTVITEM tvItem = new TVITEM ();", "+\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_PARAM | OS.TVIF_STATE;", "+\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\tif (count != getSelection (hItem, tvItem, result, 0, false)) {", "+\t\tgetSelection (hItem, tvItem, result, 0, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd3302943544d7b9d7d6f4b3a91e6b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c994babaa1659805645b48c403e4c6012b78e2aa", "commitAfterChange": "ba7cb9d2759df89227e3be715f1bd3795450908d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public TreeItem getItem (Point point)", "signatureAfterChange": "  public TreeItem getItem (int index)", "diff": ["+public TreeItem getItem (int index) {", "+\tcheckWidget ();", "+\tif (index < 0) error (SWT.ERROR_INVALID_RANGE);", "+\tint i = 0;", "+\tTreeItem item = null;", "+\twhile (item == null && i < items.length) {", "+\t\tTreeItem next = items [i++];", "+\t\tif (next != null && next.parentItem == null &&  next.index == index) {", "+\t\t\titem = next;", "+\t\t}", "+\t}", "+\tif (item == null) error (SWT.ERROR_INVALID_RANGE);", "+\treturn item;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947ea53f138248b676f3883bd2daa503", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "46681b23e8dc6042870eb85281e648e24dba5395", "commitAfterChange": "46ea09f17b92290fac648afe2b3c1de2b4343835", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  NSAutoreleasePool checkGC (int mask)", "signatureAfterChange": "  NSAutoreleasePool checkGC (int mask)", "diff": ["-\t\tif (view != null && data.paintRect == null) {", "-\t\t\tNSRect rect = view.convertRect_toView_(view.bounds(), null);", "-\t\t\tNSRect visibleRect = view.visibleRect();", "-\t\t\tif (data.windowRect == null || rect.x != data.windowRect.x || rect.y != data.windowRect.y ||", "-\t\t\t\trect.width != data.windowRect.width || rect.height != data.windowRect.height ||", "-\t\t\t\tvisibleRect.x != data.visibleRect.x || visibleRect.y != data.visibleRect.y ||", "-\t\t\t\tvisibleRect.width != data.visibleRect.width || visibleRect.height != data.visibleRect.height)", "-\t\t\t{", "-\t\t\t\tdata.state &= ~CLIPPING;", "-\t\t\t\tdata.windowRect = rect;", "-\t\t\t\tdata.visibleRect = visibleRect;", "-\t\t\t}", "-\t\t}", "-\t\tif ((data.state & CLIPPING) == 0 || (data.state & TRANSFORM) == 0) {", "+\t\tif ((data.state & CLIPPING) == 0 || (data.state & TRANSFORM) == 0 || (data.state & VISIBLE_REGION) == 0) {", "-\t\t\t\tNSRect rect = data.windowRect;", "+\t\t\t\tNSRect rect = view.convertRect_toView_(view.bounds(), null);", "-\t\t\t\tNSBezierPath.bezierPathWithRect(data.visibleRect).addClip();", "+\t\t\t\tif (data.visibleRgn != 0) {", "+\t\t\t\t\tif (data.visiblePath == null || (data.state & VISIBLE_REGION) == 0) {", "+\t\t\t\t\t\tif (data.visiblePath != null) data.visiblePath.release();", "+\t\t\t\t\t\tdata.visiblePath = Region.cocoa_new(device, data.visibleRgn).getPath();", "+\t\t\t\t\t}", "+\t\t\t\t\tdata.visiblePath.addClip();", "+\t\t\t\t\tdata.state |= VISIBLE_REGION;", "+\t\t\t\t}"]}], "num": 54534}