{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f13daa57a7d1a6c907afd1490ce6a4be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d03f8492a18b3ea31fed849788617b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "4bcf525baeab89805196495f16e987b6301ec196", "commitAfterChange": "559b15b4991bf282c48f97c8daab01e57169da1c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["+\t/*\r", "+\t* Feature in Windows. Is possible that the item at index zero\r", "+\t* has the RBBS_BREAK flag set. When a new item is inserted at\r", "+\t* position zero, the previous item at position zero moves to\r", "+\t* a new line.  The fix is to detect this case and clear the\r", "+\t* RBBS_BREAK flag on the previous item before inserting the\r", "+\t* new item.\r", "+\t*/\r", "+\tif (index == 0 && count > 0) {\r", "+\t\tgetItem (0).setWrap (false); \r", "+\t}\r", "+\t\r", "+\t/* Insert the item */\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99edcbb9cc176f169125b7a9b73c8765", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5f2f9722fb558345b2e1962ac41660a1bc2aed06", "commitAfterChange": "6d9ffc9776ed53230601b1f118f94e4523e13f00", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public int indexOf (String string, int start)", "signatureAfterChange": "\r public int indexOf (String string, int start)", "diff": ["+\t\r", "+\t/*\r", "+\t* Bug in Windows.  For some reason, CB_FINDSTRINGEXACT\r", "+\t* will not find empty strings even though it is legal\r", "+\t* to insert an empty string into a combo.  The fix is\r", "+\t* to search the combo, an item at a time.\r", "+\t*/\r", "+\tif (string.length () == 0) {\r", "+\t\tint count = getItemCount ();\r", "+\t\tfor (int i=start; i<count; i++) {\r", "+\t\t\tif (string.equals (getItem (i))) return i;\r", "+\t\t}\r", "+\t\treturn -1;\r", "+\t}\r", "+\r", "+\t/* Use CB_FINDSTRINGEXACT to search for the item */\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3188493d3b46e44089cb879cda4836e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "3f7682b6cb6c6e3127b760817a29f9fa2a42650d", "commitAfterChange": "adbe660241a76f9cdf530730678adecbee4e2a50", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public String open ()", "signatureAfterChange": "\r public String open ()", "diff": ["-\t* Bug/Feature in Windows.  Verify that the file name is valid.\r", "-\t* If an invalid file name is passed to the standard dialog, it\r", "-\t* does not open and returns an error code.  The fix is to avoid\r", "-\t* this behavior by verifying the file name before opening the\r", "-\t* dialog.  If the file name is not valid, use an empty string.\r", "-\t*/\r", "-\tif (!OS.IsWinCE) {\r", "-\t\tif (OS.GetFileTitle (name, null, (short) 0) < 0) {\r", "-\t\t\tname = new TCHAR (0, \"\", true);\r", "-\t\t}\r", "-\t}\r", "-\t\r", "-\t/*\r"]}], "num": 4551}