{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43cc88e957a98b10d203b9046c4675c5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ac5b4b454c67817b5c01380bc6935b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "95d338add199c785c6787d425bc27251c4bca2d5", "commitAfterChange": "052631f59a9a00719abe7032a2d2b156e640164c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void createChild (TabItem item, int index)", "signatureAfterChange": " void createChild (TabItem item, int index)", "diff": ["-\tif (items == null) {\r", "-\t\titems = new TabItem[1];\r", "-\t\titems[0] = item;\r", "-\t} else {\r", "-\t\t// grow by one and rearrange the array.\r", "-\t\tTabItem[] newItems = new TabItem [items.length + 1];\r", "-\t\tSystem.arraycopy(items, 0, newItems, 0, index);\r", "-\t\tnewItems[index] = item;\r", "-\t\tSystem.arraycopy(items, index, newItems, index + 1, items.length - index);\r", "-\t\titems = newItems;\r", "-\t\tif (selectedIndex >= index) selectedIndex ++;\r", "-\t}\r", "+\r", "+\t// grow by one and rearrange the array.\r", "+\tTabItem[] newItems = new TabItem [items.length + 1];\r", "+\tSystem.arraycopy(items, 0, newItems, 0, index);\r", "+\tnewItems[index] = item;\r", "+\tSystem.arraycopy(items, index, newItems, index + 1, items.length - index);\r", "+\titems = newItems;\r", "+\tif (selectedIndex >= index) selectedIndex ++;\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75a3a942c8412d8ffd4a696e6dd513f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void destroyItem (TreeItem item)", "signatureAfterChange": " void destroyItem (TreeItem item)", "diff": ["-\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length - 1];", "-\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableIndex);", "-\t\tSystem.arraycopy (", "-\t\t\tavailableItems,", "-\t\t\tavailableIndex + 1,", "-\t\t\tnewAvailableItems,", "-\t\t\tavailableIndex,", "-\t\t\tnewAvailableItems.length - availableIndex);", "-\t\tavailableItems = newAvailableItems;", "+", "+\t\tif (availableIndex != availableItemsCount - 1) {", "+\t\t\t/* item is not at end of available items list, so must shift items left to reclaim its slot */", "+\t\t\tSystem.arraycopy (", "+\t\t\t\tavailableItems,", "+\t\t\t\tavailableIndex + 1,", "+\t\t\t\tavailableItems,", "+\t\t\t\tavailableIndex,", "+\t\t\t\tavailableItemsCount - availableIndex - 1);", "+\t\t\tavailableItems [availableItemsCount - 1] = null;", "+\t\t} else {", "+\t\t\tavailableItems [availableIndex] = null;\t/* last item, so no array copy needed */", "+\t\t}", "+\t\tavailableItemsCount--;", "+", "+\t\tif (redraw && availableItems.length - availableItemsCount == 4) {", "+\t\t\t/* shrink the items array */", "+\t\t\tTreeItem[] newAvailableItems = new TreeItem [availableItemsCount];", "+\t\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, newAvailableItems.length);", "+\t\t\tavailableItems = newAvailableItems;", "+\t\t}", "+", "-\t\tfor (int i = availableIndex; i < availableItems.length; i++) {", "+\t\tfor (int i = availableIndex; i < availableItemsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49b64eaf8e2466615265efba3fb6c2d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7e01a6d9771ad5bd12b9af1fbbe393164c9959aa", "commitAfterChange": "c61a57d7a074a80b5b03c4761a563015a2ecc5fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void createItem (TableItem item)", "signatureAfterChange": " void createItem (TableItem item)", "diff": ["-\tTableItem[] newItems = new TableItem [items.length + 1];", "-\tSystem.arraycopy (items, 0, newItems, 0, index);", "-\tnewItems [index] = item;", "-\tSystem.arraycopy (items, index, newItems, index + 1, items.length - index);", "-\titems = newItems;", "+\tif (itemsCount == items.length) {", "+\t\tTableItem[] newItems = new TableItem [items.length + 4];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, items.length);", "+\t\titems = newItems;", "+\t}", "+\tif (index != itemsCount) {", "+\t\t/* new item is not at end of list, so shift other items right to create space for it */", "+\t\tSystem.arraycopy (items, index, items, index + 1, itemsCount - index);", "+\t}", "+\titems [index] = item;", "+\titemsCount++;", "-\tfor (int i = index + 1; i < items.length; i++) {", "+\tfor (int i = index + 1; i < itemsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab7c70d9b823c51a1362cac07a48f7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createItem (TreeItem item, int index)", "signatureAfterChange": " void createItem (TreeItem item, int index)", "diff": ["-\t\tstartIndex = availableItems.length;\t\t/* last item */", "+\t\tstartIndex = availableItemsCount;\t\t/* last item */", "-\t", "-\t/* root items are always available so insert into available items collection */", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + 1];", "-\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, startIndex);", "-\tnewAvailableItems [startIndex] = item;", "-\tSystem.arraycopy (availableItems, startIndex, newAvailableItems, startIndex + 1, newAvailableItems.length - startIndex - 1);", "-\tavailableItems = newAvailableItems;", "-\t", "+", "+\tif (availableItemsCount == availableItems.length) {", "+\t\tint grow = redraw ? 4 : Math.max (4, availableItems.length * 3 / 2);", "+\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + grow];", "+\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableItems.length);", "+\t\tavailableItems = newAvailableItems;", "+\t}", "+\tif (startIndex != availableItemsCount) {", "+\t\t/* new item is not at end of list, so shift other items right to create space for it */", "+\t\tSystem.arraycopy (", "+\t\t\tavailableItems,", "+\t\t\tstartIndex,", "+\t\t\tavailableItems,", "+\t\t\tstartIndex + 1,", "+\t\t\tavailableItemsCount - startIndex);", "+\t}", "+\tavailableItems [startIndex] = item;", "+\tavailableItemsCount++;", "+", "-\tfor (int i = startIndex; i < availableItems.length; i++) {", "+\tfor (int i = startIndex; i < availableItemsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7baf4d17e40fa793bbd180f8d543d2e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7e01a6d9771ad5bd12b9af1fbbe393164c9959aa", "commitAfterChange": "c61a57d7a074a80b5b03c4761a563015a2ecc5fa", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void destroyItem (TableItem item)", "signatureAfterChange": " void destroyItem (TableItem item)", "diff": ["-\tTableItem[] newItems = new TableItem [items.length - 1];", "-\tSystem.arraycopy (items, 0, newItems, 0, index);", "-\tSystem.arraycopy (items, index + 1, newItems, index, newItems.length - index);", "-\titems = newItems;", "+\tif (index != itemsCount - 1) {", "+\t\t/* item is not at end of items list, so must shift items left to reclaim its slot */", "+\t\tSystem.arraycopy (items, index + 1, items, index, itemsCount - index - 1);", "+\t\titems [itemsCount - 1] = null;", "+\t} else {", "+\t\titems [index] = null;\t/* last item, so no array copy needed */", "+\t}", "+\titemsCount--;", "+\t", "+\tif (items.length - itemsCount == 4) {", "+\t\t/* shrink the items array */", "+\t\tTableItem[] newItems = new TableItem [itemsCount];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, newItems.length);", "+\t\titems = newItems;", "+\t}", "-\tfor (int i = index; i < items.length; i++) {", "+\tfor (int i = index; i < itemsCount; i++) {", "-\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15fc8b4aac741e22d28aaf44e7f0c6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " void makeAvailable (TreeItem item)", "signatureAfterChange": " void makeAvailable (TreeItem item)", "diff": ["-\t", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + 1];", "-\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, index);", "-\tnewAvailableItems [index] = item;", "-\tSystem.arraycopy (availableItems, index, newAvailableItems, index + 1, availableItems.length - index);", "-\tavailableItems = newAvailableItems;", "-\t", "+", "+\tif (availableItemsCount == availableItems.length) {", "+\t\tint grow = redraw ? 4 : Math.max (4, availableItems.length * 3 / 2);", "+\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + grow];", "+\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableItems.length);", "+\t\tavailableItems = newAvailableItems;", "+\t}", "+\tif (index != availableItemsCount) {", "+\t\t/* new item is not at end of list, so shift other items right to create space for it */", "+\t\tSystem.arraycopy (availableItems, index, availableItems, index + 1, availableItemsCount - index);", "+\t}", "+\tavailableItems [index] = item;", "+\tavailableItemsCount++;", "+", "-\tfor (int i = index; i < availableItems.length; i++) {", "+\tfor (int i = index; i < availableItemsCount; i++) {"]}], "num": 28164}