{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e577391ef70dd9e20c235d3fa1d0f91", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d836e642ac9adb5ef368614dace0aa18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_layout_RowLayout.java", "commitBeforeChange": "41c40b23576dc01603ba956fac31d1e827093573", "commitAfterChange": "e4c3639bff8df046ea3348751caaca3c7b901035", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector<String> methodNames()", "diff": ["-public static java.util.Vector methodNames() {", "-\tjava.util.Vector methodNames = new java.util.Vector();", "+public static java.util.Vector<String> methodNames() {", "+\tjava.util.Vector<String> methodNames = new java.util.Vector<String>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4b44290e7825e63881b792754c4f7da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/ReflectField.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ReflectField(ReflectClass declaringClass, Field field, String source, CompilationUnit unit)", "signatureAfterChange": " \t public ReflectField(ReflectClass declaringClass, Field field, String source, CompilationUnit unit)", "diff": ["-\tClass clazz = field.getType();", "+\tClass<?> clazz = field.getType();", "-\t\tClass result = null;", "+\t\tClass<?> result = null;", "-\t\t\tfor (Iterator iterator = node.fragments().iterator(); iterator.hasNext();) {", "+\t\t\tfor (Iterator<?> iterator = node.fragments().iterator(); iterator.hasNext();) {"]}], "num": 49189}