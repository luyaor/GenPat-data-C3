{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd9aa44a0cb9127d2ac5f886e6f2c34b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f1dc02fa50f63d5b7dce4424d47b4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "d9eb41389caec5f452b5d8d515be40a4c5119018", "commitAfterChange": "6e5a30c16ae549824cbfd9ebe355a04012ff6598", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["+\tint cnt = OS.wcslen(pwszUrl);", "+\tchar[] buffer = new char[cnt];", "+\t/* ", "+\t* Note.  pwszUrl is unicode on both unicode and ansi platforms.", "+\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "+\t* TCHAR.sizeof returns 1 on ansi platforms.", "+\t*/", "+\tOS.MoveMemory(buffer, pwszUrl, cnt * 2);", "+\tString url = new String(buffer);", "+\t", "-\tCOM.MoveMemory(pdwZone, new int[] {Browser.URLZONE_INTRANET}, 4);", "+\tint zone = Browser.URLZONE_INTRANET;", "+\t", "+\t/*", "+\t* Note.  Some ActiveX plugins crash when executing", "+\t* inside the embedded explorer itself running into", "+\t* a JVM.  The current workaround is to detect when", "+\t* such ActiveX is about to be started and refuse", "+\t* to execute it.", "+\t* ActiveX blocked in an object tag:", "+\t* - Shockwave director plugin (mime: application/x-director)", "+\t* - Java plugin", "+\t*/", "+\tif (url.startsWith(\"http://download.macromedia.com/pub/shockwave/cabs/director/sw.cab\") || //$NON-NLS-1$", "+\t\t(url.startsWith(\"http://java.sun.com/products/plugin/autodl/jinstall\") && url.indexOf(\".cab\") != -1)) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tzone = Browser.URLZONE_LOCAL_MACHINE;", "+\t}", "+\tCOM.MoveMemory(pdwZone, new int[] {zone}, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37e42649078fc39e3c3c077f6e81b056", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "03edd7b43308fb2bd6bab979851adfca23e11b74", "commitAfterChange": "44be5983a5fff33f337bb260817cc50987bb398a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] transferAgents)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] transferAgents)", "diff": ["+\t/*", "-\t\tif (transferAgents[i] instanceof TextTransfer && data[i] instanceof String){", "-\t\t\tdisplay.setData(\"TextTransfer\", data[i]);", "-\t\t\treturn;", "+\t\tSystem.out.println(\"Clipboard.setContents: \" + transferAgents[i]);", "+\t}", "+\t*/", "+\t", "+\tOS.ClearCurrentScrap();", "+\tint[] scrapHandle= new int[1];", "+\tOS.GetCurrentScrap(scrapHandle);", "+\tint scrap= scrapHandle[0];", "+\t", "+\tfor (int i = 0; i < transferAgents.length; i++) {", "+\t\tif (transferAgents[i] instanceof TextTransfer && data[i] instanceof String) {", "+\t\t\tString s= (String) data[i];", "+\t\t\tint flavorType= ('T'<<24) + ('E'<<16) + ('X'<<8) + 'T';", "+\t\t\tif (OS.PutScrapFlavor(scrap, flavorType, 0, s.getBytes()) == OS.kNoErr)", "+\t\t\t\treturn;"]}], "num": 50835}