{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fb5b36565cc2d8f5c41073e8e1194a6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c3f8c8b2c3bd2bec490884f135f9a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "03f23aa773469b8a3f3e0a770076508526525b40", "commitAfterChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 58, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\t\t\t\tint x = 0;", "-\t\t\t\tint y = size.y-borderBottom-tabHeight+SELECTION_BORDER;", "-\t\t\t\tint width = item.x;", "-\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tint x = Math.max(0, borderLeft - 1);", "+\t\t\t\tint y = size.y - borderBottom - tabHeight;", "+\t\t\t\tint width = item.x - x;", "+\t\t\t\tint height = tabHeight;", "-\t\t\t\tint x = 0;", "+\t\t\t\tint x = Math.max(0, borderLeft - 1);", "-\t\t\t\tint width = item.x;", "-\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tint width = item.x - x;", "+\t\t\t\tint height = tabHeight;", "-\t\t\tint x = 0;", "-\t\t\tint y = onBottom ? size.y-borderBottom-tabHeight+SELECTION_BORDER: borderTop;", "-\t\t\tint width = item.x;", "-\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\tint x = Math.max(0, borderLeft - 1);", "+\t\t\tint y = onBottom ? size.y - borderBottom - tabHeight : borderTop;", "+\t\t\tint width = item.x - x;", "+\t\t\tint height = tabHeight;", "-\t\t\tr.subtract(r); // clear region", "-\t\t\tx = item.x + item.width;", "-\t\t\twidth = size.x - borderRight - x;", "-\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "-\t\t\tr.add(new Rectangle(x, y, width, height));", "-\t\t\tr.subtract(shapeRight);", "-\t\t\tgc.setBackground(getParent().getBackground());", "-\t\t\tfillRegion(gc, r);", "-\t\t\tr.dispose();", "-\t\t\tgc.fillPolygon(shapeRight);", "+\t\t\t", "+\t\t\tx = item.x + item.width;", "+\t\t\twidth = size.x - borderRight - x;", "+\t\t\tif (width > 0) {", "+\t\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\t\tr.subtract(r); // clear region", "+\t\t\t\tr.add(new Rectangle(x, y, width, height));", "+\t\t\t\tr.subtract(shapeRight);", "+\t\t\t\tgc.setBackground(getParent().getBackground());", "+\t\t\t\tfillRegion(gc, r);", "+\t\t\t\tgc.setBackground(background);", "+\t\t\t\tgc.fillPolygon(shapeRight);", "+\t\t\t}", "+\t\t\tr.dispose();", "-\t\t\tint y = onBottom ? size.y-borderBottom-tabHeight+SELECTION_BORDER-1 : borderTop;", "-\t\t\tint width = size.x-edge-borderRight+1;", "-\t\t\tint height = tabHeight-SELECTION_BORDER+1;", "+\t\t\tint y = onBottom ? size.y - borderBottom - tabHeight - 1 : borderTop;", "+\t\t\tint width = size.x - edge - borderRight + 1;", "+\t\t\tint height = tabHeight + 1;", "-", "-\t\t// Draw the unselected tabs first.", "+\t}", "+\t", "+\t// Draw the unselected tabs.", "+\tif (!single) {", "+\t", "-\tint height = size.y - borderTop - borderBottom - tabHeight;", "+\tint height = size.y - borderTop - borderBottom - tabHeight - HIGHLIGHT_HEADER;", "-\tdrawSelectionBackground(gc, y, new int[] {x,y, x,y+height, x+width,y+height, x+width,y});", "+\tdrawSelectionBackground(gc, new int[] {x,y, x,y+height, x+width,y+height, x+width,y});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa2a0b854bec49c2f6cee8bbabc7797", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d8955edbe9f5c9464b222d0331748137a5a534b7", "commitAfterChange": "b533c1ac7667bcd66286ef15cde6bafc62a4cf97", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "  @Override public boolean setText (String html, boolean trusted)", "signatureAfterChange": "  @Override public boolean setText (String html, boolean trusted)", "diff": ["-\tint rc = webBrowser.QueryInterface (nsIWebBrowserStream.NS_IWEBBROWSERSTREAM_IID, result);", "+\tint rc = webBrowser.QueryInterface (IIDStore.GetIID (nsIWebBrowserStream.class), result);", "-\t\trc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_24_IID, result);", "-\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\trc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "-\t\t}", "+\t\trc = webBrowser.QueryInterface (IIDStore.GetIID (nsIWebNavigation.class), result);", "-\t\trc = serviceManager.GetService (XPCOM.NS_IOSERVICE_CID, nsIIOService.NS_IIOSERVICE_IID, result);", "+\t\trc = serviceManager.GetService (XPCOM.NS_IOSERVICE_CID, IIDStore.GetIID (nsIIOService.class), result);", "-\t\trc = webBrowser.QueryInterface (nsIInterfaceRequestor.NS_IINTERFACEREQUESTOR_IID, result);", "+\t\trc = webBrowser.QueryInterface (IIDStore.GetIID (nsIInterfaceRequestor.class), result);", "-\t\trc = interfaceRequestor.GetInterface (nsIDocShell.NS_IDOCSHELL_IID, result);", "+\t\trc = interfaceRequestor.GetInterface (IIDStore.GetIID (nsIDocShell.class, MozillaVersion.VERSION_BASE), result);"]}], "num": 1345}