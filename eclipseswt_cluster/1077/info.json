{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7774e4aa5ece7b755c8a8ab458710213", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca51ee417e0b1b8143fc78f12a74882", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void setSelection(TableItem items[])", "signatureAfterChange": " public void setSelection (TableItem[] items)", "diff": ["- */", "-public void setSelection(TableItem items[]) {", "+}", "+public void setSelection (TableItem[] items) {", "-\tint length = items.length;", "-\tif (length == 0 || ((style & SWT.SINGLE) != 0 && length > 1)) {", "+\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "-\tsetSelectableSelection(items);", "-}", "+\tTableItem[] oldSelection = selectedItems;", "+\t", "+\t/* remove null and duplicate items */", "+\tint index = 0;", "+\tselectedItems = new TableItem [items.length];\t/* assume all valid items */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\tTableItem item = items [i];", "+\t\tif (item != null && item.parent == this && !item.isSelected ()) {", "+\t\t\tselectedItems [index++] = item;", "+\t\t}", "+\t}", "+\tif (index != items.length) {", "+\t\t/* an invalid item was provided so resize the array accordingly */", "+\t\tTableItem[] temp = new TableItem [index];", "+\t\tSystem.arraycopy (selectedItems, 0, temp, 0, index);", "+\t\tselectedItems = temp;", "+\t}", "+\tif (selectedItems.length == 0) {\t/* no valid items */", "+", "+\tif (hasFocus () || (style & SWT.HIDE_SELECTION) == 0) {", "+\t\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\t\tif (!oldSelection [i].isSelected ()) {", "+\t\t\t\tredrawItem (oldSelection [i].index, true);", "+\t\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\t\tredrawItem (selectedItems [i].index, true);", "+\tshowItem (selectedItems [0]);", "+\tsetFocusItem (selectedItems [0], true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b113fcc376fe421d0a116035063001e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "1338b222e8fc4ec17a59048d25fbe907c6449246", "commitAfterChange": "3af337e8a4ee357dca7904022351ca6f859cc723", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void setSelection(TreeItem2[] items)", "signatureAfterChange": " public void setSelection(TreeItem2[] items)", "diff": ["+\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (items.length == 0 || ((style & SWT.SINGLE) != 0 && items.length > 1)) {", "+\t\tdeselectAll();", "+\t\treturn;", "+\t}", "-\tinternalSetSelection(items);", "-\tfor (int i = 0; i < oldSelection.length; i++) {", "-\t\tif (!oldSelection[i].selected) {", "-\t\t\tredrawItem(oldSelection[i].availableIndex);", "+\t", "+\t/* remove null and duplicate items */", "+\tint index = 0;", "+\tselectedItems = new TreeItem2[items.length];\t/* assume all valid items initially */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\tTreeItem2 item = items[i];", "+\t\tif (item != null && !item.isSelected()) {", "+\t\t\tselectedItems[index++] = item;", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tredrawItem(items[i].availableIndex);", "+\tif (index != items.length) {", "+\t\t/* an invalid item was provided, so resize the array accordingly */", "+\t\tTreeItem2[] temp = new TreeItem2[index];", "+\t\tSystem.arraycopy(selectedItems, 0, temp, 0, index);", "+\t\tselectedItems = temp;", "+\t}", "+", "+\tfor (int i = 0; i < oldSelection.length; i++) {", "+\t\tif (!oldSelection[i].isSelected()) {", "+\t\t\tint availableIndex = oldSelection[i].availableIndex;", "+\t\t\tif (availableIndex != -1) {", "+\t\t\t\tredrawItem(availableIndex);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tfor (int i = 0; i < selectedItems.length; i++) {", "+\t\tint availableIndex = selectedItems[i].availableIndex;", "+\t\tif (availableIndex != -1) {", "+\t\t\tredrawItem(availableIndex);", "+\t\t}"]}], "num": 1077}