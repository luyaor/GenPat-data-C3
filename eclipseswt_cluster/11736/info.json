{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45b4bc39198aaef58647d918d64932c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8d2975896c322e406b0a8a25b4af0a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3b20952033c3ff6d8807f930ab9063e3d3ddd11f", "commitAfterChange": "4d3c9b805344fb3f1684b0393a0a72589969e0a8", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void showItem (TreeItem item)", "signatureAfterChange": " public void showItem (TreeItem item)", "diff": ["-\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tint depth = OS.gtk_tree_path_get_depth (path);", "+\tif (depth > 1) {", "+\t\tint [] indices = new int [depth - 1];", "+\t\tint indicesPtr = OS.gtk_tree_path_get_indices (path);", "+\t\tOS.memmove (indices, indicesPtr, indices.length * 4);", "+\t\tint tempPath = OS.gtk_tree_path_new ();", "+\t\tfor (int i=0; i<indices.length; i++) {", "+\t\t\tOS.gtk_tree_path_append_index (tempPath, indices [i]);", "+\t\t\tOS.gtk_tree_view_expand_row (handle, tempPath, false);", "+\t\t}", "+\t\tOS.gtk_tree_path_free (tempPath);\t\t", "+\t}", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.5f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf0ae36ebdf280c2674e545039dc8203", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "406db03bcafc2b495e59d46a0657712938a45c8c", "commitAfterChange": "c1fa670bb90c807acbab628f565e2e14bd885825", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["+\t/* Modify the source image to contain black wherever the mask is 0 */", "+\tImageData mask = source.getTransparencyMask();", "+\tint[] sourcePixels = new int[source.width];", "+\tint[] maskPixels = new int[mask.width];", "+\tfor (int y = 0; y < source.height; y++) {", "+\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "+\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "+\t\tfor (int i = 0; i < sourcePixels.length; i++) {", "+\t\t\tif (maskPixels[i] == 0) sourcePixels[i] = 0;", "+\t\t}", "+\t\tsource.setPixels(0, y, source.width, sourcePixels, 0);", "+\t}", "-\t\tImageData mask = source.getTransparencyMask();", "-\t}\t", "+\t}"]}], "num": 11736}