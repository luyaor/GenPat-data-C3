{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee4930a8dd703f331ccbd078f544cae0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52874eb6adb3cfed5ba8b01f482ee75a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "e86035e65ddb9883c55bfd1d1805aa43058a91c8", "commitAfterChange": "ee9b40960339cb073a160f4a991908b1b404f3db", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  boolean sendKeyEvent (Event event)", "signatureAfterChange": "  boolean sendKeyEvent (Event event)", "diff": ["-\tboolean all = false;", "+\tboolean traverseDoit = true;", "-\t\t\tall = true;", "-\t\t\tnextTraverseDoit = true;", "+\t\t\ttraverseDoit = true;", "-\t\t\tall = true;", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "-\t\tcase SWT.ARROW_RIGHT:", "+\t\tcase SWT.ARROW_RIGHT: {", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "+\t\t}", "-\t\tcase SWT.ARROW_LEFT:", "+\t\tcase SWT.ARROW_LEFT: {", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "-\t\tcase SWT.TAB:", "+\t\t}", "+\t\tcase SWT.TAB: {", "-\t\t\tnextTraverseDoit = (event.stateMask & SWT.CTRL) != 0;", "+\t\t\ttraverseDoit = (event.stateMask & SWT.CTRL) != 0;", "-\t\tcase SWT.PAGE_DOWN:", "+\t\t}", "+\t\tcase SWT.PAGE_DOWN: {", "-\t\t\t\tall = true;", "-\t\t\t\tnextTraverseDoit = true;", "+\t\t\t\ttraverseDoit = true;", "-\t\tcase SWT.PAGE_UP:", "+\t\t}", "+\t\tcase SWT.PAGE_UP: {", "-\t\t\t\tall = true;", "-\t\t\t\tnextTraverseDoit = true;", "+\t\t\t\ttraverseDoit = true;", "+\t\t}", "+\t\tdefault: {", "+\t\t\tif (translateMnemonics ()) {", "+\t\t\t\tif (event.character != 0 && (event.stateMask & (SWT.ALT | SWT.CTRL)) == SWT.ALT) {", "+\t\t\t\t\ttraversal = SWT.TRAVERSE_MNEMONIC;", "+\t\t\t\t\ttraverseDoit = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+", "-\t\tControl control = browser;", "-\t\tShell shell = control.getShell ();", "-\t\tfinal Event[] traverseEvent = new Event[1];", "-\t\tListener listener = new Listener () {", "-\t\t\tpublic void handleEvent (Event event) {", "-\t\t\t\ttraverseEvent[0] = event;", "-\t\t\t}", "-\t\t};", "-\t\tDisplay display = browser.getDisplay ();", "-\t\tdisplay.addFilter (SWT.Traverse, listener);", "-\t\ttry {", "-\t\t\tdo {", "-\t\t\t\tif (control.traverse (traversal)) {", "-\t\t\t\t\tdoit = false;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tif (!traverseEvent[0].doit && control.isListening (SWT.Traverse)) break;", "-\t\t\t\tif (control == shell) break;", "-\t\t\t\tcontrol = control.getParent ();", "-\t\t\t} while (all && control != null);", "-\t\t} finally {", "-\t\t\tdisplay.removeFilter (SWT.Traverse, listener);", "-\t\t\tnextTraverseDoit = true;", "-\t\t}", "+\t\tboolean oldEventDoit = event.doit;", "+\t\tevent.doit = traverseDoit;\t", "+\t\tdoit = !browser.traverse (traversal, event);", "+\t\tevent.doit = oldEventDoit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bdaee27e3d27e0cc31e6d64dea744b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "94a5701004de0b95fe8497574b0ba3074f8c94a1", "commitAfterChange": "7b7e7a22b9cad0264ceb1c3f2dfd3d995d8a4b4e", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 120, "signatureBeforeChange": "\r \r boolean translateTraversal (MSG msg)", "signatureAfterChange": "\r \r boolean translateTraversal (MSG msg)", "diff": ["-\tboolean doit = true;\r", "+\tboolean doit = true, all = false;\r", "-\t\t\tdetail = SWT.TRAVERSE_TAB_PREVIOUS;\r", "-\t\t\tif (next) detail = SWT.TRAVERSE_TAB_NEXT;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;\r", "-\t\t\tif ((code & OS.DLGC_WANTARROWS) != 0) doit = false;\r", "-\t\t\tdetail = SWT.TRAVERSE_ARROW_PREVIOUS;\r", "-\t\t\tif (key == OS.VK_DOWN || key == OS.VK_RIGHT) {\t\r", "-\t\t\t\tdetail = SWT.TRAVERSE_ARROW_NEXT;\r", "-\t\t\t}\r", "+\t\t\tif ((code & (OS.DLGC_WANTARROWS /*| OS.DLGC_WANTALLKEYS*/)) != 0) doit = false;\r", "+\t\t\tboolean next = key == OS.VK_DOWN || key == OS.VK_RIGHT;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_ARROW_NEXT : SWT.TRAVERSE_ARROW_PREVIOUS;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t\tcase OS.VK_PRIOR:\r", "+\t\tcase OS.VK_NEXT: {\r", "+\t\t\tall = true;\r", "+\t\t\tlastVirtual = true;\r", "+\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) >= 0) return false;\r", "+\t\t\tint code = OS.SendMessage (hwnd, OS.WM_GETDLGCODE, 0, 0);\r", "+\t\t\tif ((code & OS.DLGC_WANTALLKEYS) != 0) doit = false;\r", "+\t\t\tdetail = key == OS.VK_PRIOR ? SWT.TRAVERSE_PAGE_PREVIOUS : SWT.TRAVERSE_PAGE_NEXT;\r", "-\t\t/*\r", "-\t\t* It is possible (but unlikely), that application\r", "-\t\t* code could have disposed the widget in the traverse\r", "-\t\t* event.  If this happens, return true to stop further\r", "-\t\t* event processing.\r", "-\t\t*/\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tif (isDisposed ()) return true;\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "+\t\tShell shell = getShell ();\r", "+\t\tControl control = this;\r", "+\t\tdo {\r", "+\t\t\t/*\r", "+\t\t\t* It is possible (but unlikely), that application\r", "+\t\t\t* code could have disposed the widget in the traverse\r", "+\t\t\t* event.  If this happens, return true to stop further\r", "+\t\t\t* event processing.\r", "+\t\t\t*/\t\r", "+\t\t\tcontrol.sendEvent (SWT.Traverse, event);\r", "+\t\t\tif (control.isDisposed ()) return true;\r", "+\t\t\tdoit = event.doit;\r", "+\t\t\tdetail = event.detail;\r", "+\t\t\tif (control == shell) break;\r", "+\t\t\tcontrol = control.parent;\r", "+\t\t} while (all && !doit);\r"]}], "num": 9789}