{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "216c1fe5e1dd6940fe1178589e61ba8d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4775a86050ab373bb9563684a393c9af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8fd543c924826dfc972ef6a8022268f1984aa82b", "commitAfterChange": "a6b48034db4656132c943ef122f732c8fe096a59", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 90, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public void setLayout (Layout layout)", "diff": ["-}", "-public Point computeSize (int wHint, int hHint, boolean changed) {", "-\tcheckWidget();\t", "-\t// preferred width of tab area to show all tabs", "-\tint tabW = 0;", "-\tGC gc = new GC(this);", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tif (single) {", "-\t\t\ttabW = Math.max(tabW, items[i].preferredWidth(gc, true, false));", "-\t\t} else {", "-\t\t\ttabW += items[i].preferredWidth(gc, i == selectedIndex, false);", "-\t\t}", "-\t}", "-\tgc.dispose();", "-\ttabW += 3;", "-\tif (showMax) tabW += BUTTON_SIZE;", "-\tif (showMin) tabW += BUTTON_SIZE;", "-\tif (single) tabW += 3*BUTTON_SIZE/2; //chevron", "-\tif (topRight != null) tabW += topRight.computeSize(SWT.DEFAULT, tabHeight).x;", "-\tif (!single && !simple) tabW += curveWidth - 2*curveIndent;", "-\t", "-\tint controlW = 0;", "-\tint controlH = 0;", "-\t// preferred size of controls in tab items", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tControl control = items[i].getControl();", "-\t\tif (control != null && !control.isDisposed()){", "-\t\t\tPoint size = control.computeSize (wHint, hHint);", "-\t\t\tcontrolW = Math.max (controlW, size.x);", "-\t\t\tcontrolH = Math.max (controlH, size.y);", "-\t\t}", "-\t}", "-", "-\tint minWidth = Math.max(tabW, controlW);", "-\tint minHeight = (minimized) ? 0 : controlH;", "-\tif (minWidth == 0) minWidth = DEFAULT_WIDTH;", "-\tif (minHeight == 0) minHeight = DEFAULT_HEIGHT;", "-\t", "-\tif (wHint != SWT.DEFAULT) minWidth  = wHint;", "-\tif (hHint != SWT.DEFAULT) minHeight = hHint;", "-", "-\tRectangle trim = computeTrim(0, 0, minWidth, minHeight);", "-\treturn new Point (trim.width, trim.height);", "+ */", "+public void setLayout (Layout layout) {", "+\tcheckWidget();", "+\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b38f7606ea353ca4dfb32db70d5b2b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "9f963bfbea4d5fb9e9cfb300aed51e5121e608b5", "commitAfterChange": "1b2bdab895e00806660fea2a313de0c468fe9d84", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void drawClose(GC gc)", "signatureAfterChange": " void drawClose(GC gc)", "diff": ["-\tint[] shape = null;", "-\tif (onBottom) {", "-\t\tshape = new int[BOTTOM_LEFT_CORNER.length+BOTTOM_RIGHT_CORNER.length+4];", "-\t\tint index = 0;", "-\t\tshape[index++] = x+2;", "-\t\tshape[index++] = y;", "-\t\tfor (int i = 0; i < BOTTOM_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+2+BOTTOM_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_LEFT_CORNER[2*i+1];", "-\t\t}", "-\t\tfor (int i = 0; i < BOTTOM_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width+BOTTOM_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_CORNER[2*i+1];", "-\t\t}", "-\t\tshape[index++] = x+width;", "-\t\tshape[index++] = y;", "-\t} else {", "-\t\tshape = new int[TOP_LEFT_CORNER.length+TOP_RIGHT_CORNER.length+4];", "-\t\tint index = 0;", "-\t\tshape[index++] = x+2;", "-\t\tshape[index++] = y+height;", "-\t\tfor (int i = 0; i < TOP_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+2+TOP_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_LEFT_CORNER[2*i+1];", "-\t\t}", "-\t\tfor (int i = 0; i < TOP_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width+TOP_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_RIGHT_CORNER[2*i+1];", "-\t\t}", "-\t\tshape[index++] = x+width;", "-\t\tshape[index++] = y+height;", "-\t}", "+//\tint[] shape = null;", "+//\tif (onBottom) {", "+//\t\tshape = new int[BOTTOM_LEFT_CORNER.length+BOTTOM_RIGHT_CORNER.length+4];", "+//\t\tint index = 0;", "+//\t\tshape[index++] = x+2;", "+//\t\tshape[index++] = y;", "+//\t\tfor (int i = 0; i < BOTTOM_LEFT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+2+BOTTOM_LEFT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+height+BOTTOM_LEFT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tfor (int i = 0; i < BOTTOM_RIGHT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+width+BOTTOM_RIGHT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tshape[index++] = x+width;", "+//\t\tshape[index++] = y;", "+//\t} else {", "+//\t\tshape = new int[TOP_LEFT_CORNER.length+TOP_RIGHT_CORNER.length+4];", "+//\t\tint index = 0;", "+//\t\tshape[index++] = x+2;", "+//\t\tshape[index++] = y+height;", "+//\t\tfor (int i = 0; i < TOP_LEFT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+2+TOP_LEFT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+TOP_LEFT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tfor (int i = 0; i < TOP_RIGHT_CORNER.length/2; i++) {", "+//\t\t\tshape[index++] = x+width+TOP_RIGHT_CORNER[2*i];", "+//\t\t\tshape[index++] = y+TOP_RIGHT_CORNER[2*i+1];", "+//\t\t}", "+//\t\tshape[index++] = x+width;", "+//\t\tshape[index++] = y+height;", "+//\t}", "+//\t", "+//\t// Shape is non-rectangular, fill in gaps with parent colours\t", "+//\tRegion r = new Region();", "+//\tr.add(closeRect);", "+//\tr.subtract(shape);", "+//\tgc.setBackground(getParent().getBackground());", "+//\tfillRegion(gc, r);", "+//\tr.dispose();", "+//\t", "+//\t// draw shape", "+//\tdrawSelectionBackground(gc, y, shape);", "-\t// Shape is non-rectangular, fill in gaps with parent colours\t", "-\tRegion r = new Region();", "-\tr.add(closeRect);", "-\tr.subtract(shape);", "-\tfillRegion(gc, r);", "-\tr.dispose();", "-\t", "-\t// draw shape", "-\tdrawSelectionBackground(gc, y, shape);", "+\tgc.fillRectangle(closeRect);"]}], "num": 7763}