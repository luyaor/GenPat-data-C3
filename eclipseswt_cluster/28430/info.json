{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4bfd54c7636247060136bcac037b602a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91bfc23c285ba40a414c17bd719e25f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c70794332fc3e9d08cc7a0de2c926d998f7a5df4", "commitAfterChange": "a639dcfc9f27dbda94ac7c0249d861fc2e5ff3d9", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  boolean runEnterExit ()", "signatureAfterChange": "  boolean runEnterExit ()", "diff": ["-\t//OPTIMIZE - use OS calls, no garbage, widget already hit tested in mouse move", "+\t//OPTIMIZE - use OS calls, no garbage, widget hit tested again in mouse move", "+\t} else {", "+\t\tif (control != null && mouseHoverID != 0) {", "+\t\t\tint [] outDelay = new int [1];", "+\t\t\tOS.HMGetTagDelay (outDelay);", "+\t\t\tOS.SetEventLoopTimerNextFireTime (mouseHoverID, outDelay [0] / 1000.0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ca648d99ce870c287b6b70aaff649d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "fabfac354ba77dfbc16a5fdfaff79beee369b36f", "commitAfterChange": "77f06688bfac39a45b447aab335a7b06b05d1b28", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int kEventMenuMeasureItemWidth (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMenuMeasureItemWidth (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\tString accelText = item.text.substring (accelIndex);", "-\t\t\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\t\tchar [] buffer = new char [accelText.length ()];", "-\t\t\taccelText.getChars (0, buffer.length, buffer, 0);", "-\t\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "-\t\t\torg.eclipse.swt.internal.carbon.Point size = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\tOS.GetThemeTextDimensions (str, (short) OS.kThemeMenuItemCmdKeyFont, 0, false, size, null);", "-\t\t\tOS.CFRelease (str);", "-\t\t\tshort [] width = new short [1];", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMenuItemWidth, OS.typeSInt16, null, 2, null, width);", "-\t\t\twidth [0] += 5 + size.h;", "-\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamMenuItemWidth, OS.typeSInt16, 2, width);", "-\t\t\treturn result;", "+\t\t\tString accelText = item.text.substring (accelIndex + 1);", "+\t\t\tif (accelText.length () != 0) {", "+\t\t\t\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t\tchar [] buffer = new char [accelText.length ()];", "+\t\t\t\taccelText.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\t\t\torg.eclipse.swt.internal.carbon.Point size = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\t\tOS.GetThemeTextDimensions (str, (short) OS.kThemeMenuItemCmdKeyFont, 0, false, size, null);", "+\t\t\t\tOS.CFRelease (str);", "+\t\t\t\tshort [] width = new short [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMenuItemWidth, OS.typeSInt16, null, 2, null, width);", "+\t\t\t\tint [] metric = new int [1];", "+\t\t\t\tOS.GetThemeMetric (OS.kThemeMetricMenuTextTrailingEdgeMargin, metric);", "+\t\t\t\twidth [0] += metric [0] + size.h;", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamMenuItemWidth, OS.typeSInt16, 2, width);", "+\t\t\t\treturn result;", "+\t\t\t}"]}], "num": 28430}