{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25434c84b32415abd96c1bbe9c478ae2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccac288659cc8620144547927ff83833", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "0894512a66f007a1e9c59f8caa85551e06c6fecf", "commitAfterChange": "37a4190dbc5ad26eb692e7bd68ed00c0c4125cab", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\t\tEvent keyEvent = new Event ();", "+\t\t\tkeyEvent.time = event.time;", "+\t\t\tkeyEvent.character = event.character;", "+\t\t\tkeyEvent.keyCode = event.keyCode;", "+\t\t\tkeyEvent.stateMask = event.stateMask;", "+\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tevent.doit = keyEvent.doit;", "+\t\t\tif (!event.doit) break;", "+\t\t\t", "-\t\t\t\tEvent e = new Event ();", "-\t\t\t\te.time = event.time;", "-\t\t\t\te.stateMask = event.stateMask;", "-\t\t\t\tnotifyListeners (SWT.DefaultSelection, e);", "+\t\t\t\tEvent selectionEvent = new Event ();", "+\t\t\t\tselectionEvent.time = event.time;", "+\t\t\t\tselectionEvent.stateMask = event.stateMask;", "+\t\t\t\tnotifyListeners (SWT.DefaultSelection, selectionEvent);", "+\t\t\t\tif (isDisposed ()) break;", "-\t\t\t//At this point the widget may have been disposed.", "-\t\t\t// If so, do not continue.", "-\t\t\tif (isDisposed ()) break;", "-\t\t\t\t//At this point the widget may have been disposed.", "-\t\t\t\t// If so, do not continue.", "-\t\t\t\t\t\t", "-\t\t\tEvent e = new Event ();", "-\t\t\te.time = event.time;", "-\t\t\te.character = event.character;", "-\t\t\te.keyCode = event.keyCode;", "-\t\t\te.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyDown, e);", "+\t\t\tevent.doit = e.doit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f65eab5fdbb4817b509b1b19e613b05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "1001335a053916393508117a5ee98a23a5333376", "commitAfterChange": "db25a08ca1c9d9c822c66f8d5e69d2d39e9326a2", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "signatureAfterChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "diff": ["-\t\tif (accessibleTextExtendedListeners.size() > 0) {", "-\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\t\tlistener.getCharacterCount(event);", "-\t\t\t}", "-\t\t\treturnValue = NSNumber.numberWithInt(event.count);", "-\t\t} else {", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tevent.result = null;", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.count = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tif (event.count == -1) {", "+\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "+\t\t\te.childID = ACC.CHILDID_SELF;", "-\t\t\t\tlistener.getValue(event);", "+\t\t\t\tlistener.getRole(e);", "+\t\t\t\tlistener.getValue(e);", "-\t\t\tString appValue = event.result;", "-\t\t\tif (appValue != null) {", "-\t\t\t\treturnValue = NSNumber.numberWithInt(appValue.length());", "-\t\t\t}", "+\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "+\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "+\t\t\treturnValue = NSNumber.numberWithInt(event.count);"]}], "num": 23587}