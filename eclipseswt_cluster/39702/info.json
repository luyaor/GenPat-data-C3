{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e468dedf70d9b084fed5807c9a35f033", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a079d9d0e5fea0db6a9b446aa78d4b77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "fc59b19065f60bbcb485c797c7ff1561e9bb73f6", "commitAfterChange": "6079b58ee7045c020f911594524a48a4bc5cb888", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void _setImages (Image [] images)", "signatureAfterChange": "  void _setImages (Image [] images)", "diff": ["-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "-\t\t\tint [] w = new int [1], h = new int [1];", "-\t\t\tOS.gdk_drawable_get_size (image.pixmap, w, h);", "-\t\t\tint /*long*/ pixbuf;", "-\t\t\tboolean hasMask = image.mask != 0;", "-\t\t\tif (hasMask) {", "-\t\t\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, true, 8, w [0], h [0]);", "-\t\t\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);\t\t\t\t", "-\t\t\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, w [0], h [0]);", "-\t\t\t\tif (gdkMaskImagePtr == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\t\tbyte [] line = new byte [stride];", "-\t\t\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\t\t\tif (OS.gdk_image_get_pixel (gdkMaskImagePtr, x, y) == 0) {", "-\t\t\t\t\t\t\tline[x*4+3] = 0;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t\t}", "-\t\t\t\tOS.g_object_unref (gdkMaskImagePtr);", "-\t\t\t} else {", "-\t\t\t\tImageData data = image.getImageData ();", "-\t\t\t\tboolean hasAlpha = data.getTransparencyType () == SWT.TRANSPARENCY_ALPHA;", "-\t\t\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasAlpha, 8, w [0], h [0]);", "-\t\t\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\t\t\tif (hasAlpha) {", "-\t\t\t\t\tbyte [] alpha = data.alphaData;", "-\t\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\t\t\tbyte [] line = new byte [stride];", "-\t\t\t\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\t\t\t\tline [x*4+3] = alpha [y*w [0]+x];", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t\t", "-\t\t\t}", "+\t\t\tint /*long*/ pixbuf = Display.createPixbuf (image);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10964aa2aa5540a55231973b91190194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "4b06fe5c5659f4a3f01ebbe16f0814da3dbc06dd", "commitAfterChange": "acc6dd2d5917dc00b39c7e0d615183d2ef0f852e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void setImages (Image image, Image [] images)", "signatureAfterChange": "  void _setImages (Image [] images)", "diff": ["+void _setImages (Image [] images) {", "+\tint pixbufs = 0;", "+\tif (images != null) {", "+\t\tfor (int i = 0; i < images.length; i++) {", "+\t\t\tImage icon = images [i];", "+\t\t\tint [] w = new int [1], h = new int [1];", "+\t\t\tOS.gdk_drawable_get_size (icon.pixmap, w, h);", "+\t\t\tint width = w [0], height = h [0]; \t", "+\t\t\tboolean hasMask = icon.mask != 0;", "+\t\t\tint pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);", "+\t\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+\t\t\tint colormap = OS.gdk_colormap_get_system ();", "+\t\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, icon.pixmap, colormap, 0, 0, 0, 0, width, height);", "+\t\t\tif (hasMask) {", "+\t\t\t\tint gdkMaskImagePtr = OS.gdk_drawable_get_image (icon.mask, 0, 0, width, height);", "+\t\t\t\tif (gdkMaskImagePtr == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "+\t\t\t\tint pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "+\t\t\t\tbyte [] line = new byte [stride];", "+\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\tint offset = pixels + (y * stride);", "+\t\t\t\t\tOS.memmove (line, offset, stride);", "+\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\tif (OS.gdk_image_get_pixel (gdkMaskImagePtr, x, y) == 0) {", "+\t\t\t\t\t\t\tline[x*4+3] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove (offset, line, stride);", "+\t\t\t\t}", "+\t\t\t\tOS.g_object_unref (gdkMaskImagePtr);", "+\t\t\t}", "+\t\t\tpixbufs = OS.g_list_append (pixbufs, pixbuf);\t\t\t", "+\t\t}", "+\t}", "+\tint window = OS.GTK_WIDGET_WINDOW (topHandle ());", "+\tOS.gdk_window_set_icon_list (window, pixbufs);", "+\tint [] data = new int [1];", "+\tint temp = pixbufs;", "+\twhile (temp != 0) {", "+\t\tOS.memmove (data, temp, 4);", "+\t\tOS.g_object_unref (data [0]);", "+\t\ttemp = OS.g_list_next (temp);", "+\t}", "+\tif (pixbufs != 0) OS.g_list_free (pixbufs);", "+}", "-", "-void setImages (Image image, Image [] images) {", "-\tif (image != null) {", "-\t\tImage [] tmp = new Image [images.length + 1];", "-\t\tSystem.arraycopy (images, 0, tmp, 1, images.length);", "-\t\ttmp [0] = image;", "-\t\timages = tmp;", "-\t}", "-\tint pixbufs = 0;", "-\tfor (int i = 0; i < images.length; i++) {", "-\t\tImage icon = images [i];", "-\t\tint [] w = new int [1], h = new int [1];", "-\t\tOS.gdk_drawable_get_size (icon.pixmap, w, h);", "-\t\tint width = w [0], height = h [0]; \t", "-\t\tboolean hasMask = icon.mask != 0;", "-\t\tint pixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasMask, 8, width, height);", "-\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\tint colormap = OS.gdk_colormap_get_system ();", "-\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, icon.pixmap, colormap, 0, 0, 0, 0, width, height);", "-\t\tif (hasMask) {", "-\t\t\tint gdkMaskImagePtr = OS.gdk_drawable_get_image (icon.mask, 0, 0, width, height);", "-\t\t\tif (gdkMaskImagePtr == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\tint pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\tbyte [] line = new byte [stride];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tint offset = pixels + (y * stride);", "-\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tif (OS.gdk_image_get_pixel (gdkMaskImagePtr, x, y) == 0) {", "-\t\t\t\t\t\tline[x*4+3] = 0;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t}", "-\t\t\tOS.g_object_unref (gdkMaskImagePtr);", "-\t\t}", "-\t\tpixbufs = OS.g_list_append (pixbufs, pixbuf);\t\t\t", "-\t}", "-\tint window = OS.GTK_WIDGET_WINDOW (topHandle ());", "-\tOS.gdk_window_set_icon_list (window, pixbufs);", "-\tint [] data = new int [1];", "-\tint temp = pixbufs;", "-\twhile (temp != 0) {", "-\t\tOS.memmove (data, temp, 4);", "-\t\tOS.g_object_unref (data [0]);", "-\t\ttemp = OS.g_list_next (temp);", "-\t}", "-\tif (pixbufs != 0) OS.g_list_free (pixbufs);"]}], "num": 39702}