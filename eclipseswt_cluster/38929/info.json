{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "955a0d275b0802a0ab6e73ec334a2eb5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351a864a1bba69b367912a47dc4bc4ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "83c9333013999c765b46d110d792c9a6b6c0769c", "commitAfterChange": "165b64e31dc8827b5323174f4937541565300207", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void resizeRectangles (int xChange, int yChange)", "signatureAfterChange": "  void resizeRectangles (int xChange, int yChange)", "diff": ["-\tRectangle bounds = computeBounds ();", "-\t// if the bounds will flip about the x or y axis then apply the adjustment", "-\t// up to the axis (ie.- where bounds width/height becomes 0) and change the", "-\t// cursor's orientation accordingly", "+\t/*", "+\t * If the bounds will flip about the x or y axis then apply the adjustment", "+\t * up to the axis (ie.- where bounds width/height becomes 0), change the", "+\t * cursor's orientation accordingly, and flip each Rectangle's origin (only", "+\t * necessary for > 1 Rectangles) ", "+\t */", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.x = 100 - proportion.x - proportion.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.x = 100 - proportion.x - proportion.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.y = 100 - proportion.y - proportion.height;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.y = 100 - proportion.y - proportion.height;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1125506fac7a8b616174f22918540bfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "5d1cc2c24ec360cb59b84e6f51e06eba85a2ee01", "commitAfterChange": "797743ec0cdd9c4b2a2893f449c595005ad4adfc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void resizeRectangles (int xChange, int yChange)", "signatureAfterChange": " void resizeRectangles (int xChange, int yChange)", "diff": ["-\tRectangle bounds = computeBounds ();", "-\t// if the bounds will flip about the x or y axis then apply the adjustment", "-\t// up to the axis (ie.- where bounds width/height becomes 0) and change the", "-\t// cursor's orientation accordingly", "+\t/*", "+\t * If the bounds will flip about the x or y axis then apply the adjustment", "+\t * up to the axis (ie.- where bounds width/height becomes 0), change the", "+\t * cursor's orientation accordingly, and flip each Rectangle's origin (only", "+\t * necessary for > 1 Rectangles) ", "+\t */", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.x = 100 - proportion.x - proportion.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.x = 100 - proportion.x - proportion.width;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.y = 100 - proportion.y - proportion.height;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (proportions.length > 1) {", "+\t\t\t\tfor (int i = 0; i < proportions.length; i++) {", "+\t\t\t\t\tRectangle proportion = proportions [i];", "+\t\t\t\t\tproportion.y = 100 - proportion.y - proportion.height;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 38929}