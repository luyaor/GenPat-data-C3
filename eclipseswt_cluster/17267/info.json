{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc9dfec8695b4df4987f95486c4bf069", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6463c98c267891e45876a6c86f3874", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/motif/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "e98339cc7fb1c72d59ae0703dfdb477f6c4de9c5", "commitAfterChange": "697358ce3235fa7c9f7df6b81c2eaac5ddca47d9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": " public boolean startJob(String jobName)", "signatureAfterChange": " public boolean startJob(String jobName)", "diff": ["-public boolean startJob(String jobName) {\r", "-\tcheckDevice();\r", "-\t/* Use the character encoding for the default locale */\r", "-\tbyte [] buffer = Converter.wcsToMbcs(null, \"*job-name: \" + jobName, true);\r", "-\tOS.XpSetAttributes(xDisplay, printContext, OS.XPJobAttr, buffer, OS.XPAttrMerge);\r", "-\tOS.XpStartJob(xDisplay, OS.XPSpool);\r", "-\r", "-\t/* Create the xDrawable */\r", "-\tXRectangle rect = new XRectangle();\r", "-\tshort [] width = new short [1];\r", "-\tshort [] height = new short [1];\r", "-\tOS.XpGetPageDimensions(xDisplay, printContext, width, height, rect);\r", "-\txDrawable = OS.XCreateWindow(xDisplay, OS.XRootWindowOfScreen(xScreen), \r", "-\t\t0, 0, rect.width, rect.height, 0,\r", "-\t\tOS.CopyFromParent, OS.CopyFromParent, OS.CopyFromParent, 0, 0);\r", "-\treturn true;\r", "-}\r", "+public boolean startJob(String jobName) {", "+\tcheckDevice();", "+\t/* Use the character encoding for the default locale */", "+\tbyte [] buffer = Converter.wcsToMbcs(null, \"*job-name: \" + jobName, true);", "+\tOS.XpSetAttributes(xDisplay, printContext, OS.XPJobAttr, buffer, OS.XPAttrMerge);", "+\tOS.XpStartJob(xDisplay, OS.XPSpool);", "+\treturn true;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad35fdf271c5bcf52663a3af38e2be2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "97b210bb01dd329b9dbbc9673e72685ed11a024f", "commitAfterChange": "e3308f9f0493c2bb17a8d65f308eed9c0cc340c9", "methodNumberBeforeChange": 226, "methodNumberAfterChange": 226, "signatureBeforeChange": "  int windowProc (int handle, int arg0, int user_data)", "signatureAfterChange": "  int windowProc (int handle, int arg0, int user_data)", "diff": ["-\t\t\tif (((OS.GTK_VERSION <  OS.VERSION (2, 8, 0)) && ((state & OBSCURED) == 0)) ||", "-\t\t\t\t((style & SWT.MIRRORED) != 0)) {", "+\t\t\tif ((OS.GTK_VERSION <  OS.VERSION (2, 8, 0)) && ((state & OBSCURED) == 0)) {", "-\t\t\t\t\tint /*long*/ pixmap = control.backgroundImage.pixmap;", "-\t\t\t\t\tif ((style & SWT.MIRRORED) != 0) {\t\t", "-\t\t\t\t\t\tint [] w = new int [1], h = new int [1];", "-\t\t\t\t\t\tOS.gdk_drawable_get_size (pixmap, w, h);", "-\t\t\t\t\t\tdest_x[0] = getClientWidth () - w[0];", "-\t\t\t\t\t\tOS.gdk_gc_set_ts_origin (gdkGC, dest_x [0], dest_y [0]);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.gdk_gc_set_ts_origin (gdkGC, -dest_x [0], -dest_y [0]);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.gdk_gc_set_tile (gdkGC, pixmap); ", "+\t\t\t\t\tOS.gdk_gc_set_ts_origin (gdkGC, -dest_x [0], -dest_y [0]);", "+\t\t\t\t\tOS.gdk_gc_set_tile (gdkGC, control.backgroundImage.pixmap); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1373da9d9c62244df9db6127a167973", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ad9e4c7cb4e85f9de20630936ecc2b154a562c71", "commitAfterChange": "cea50da610c26e76615c8eaec7dfd0146a36b0fd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public int[] getTabs()", "signatureAfterChange": " public int[] getTabs()", "diff": ["-\tint /*long*/ tabArray = OS.pango_layout_get_tabs(layout);", "-\tif (tabArray == 0) return null;", "-\tint nTabs = OS.pango_tab_array_get_size(tabArray);", "-\tint[] tabs = new int[nTabs];", "-\tif (nTabs > 0) {", "-\t\tint /*long*/[] locations = new int /*long*/[1];", "-\t\tOS.pango_tab_array_get_tabs(tabArray, null, locations);", "-\t\tif (locations[0] != 0) {", "-\t\t\tOS.memmove(tabs, locations[0], nTabs * 4);", "-\t\t\tOS.g_free(locations[0]);", "-\t\t}", "-\t}", "-\tOS.pango_tab_array_free(tabArray);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11ec03f28f63be4af4085d149bbcbe6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "06dc38e623afcc69453149a4908e940401d48a28", "commitAfterChange": "0f19e4967bd7565d0b817b526213289acd242b74", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\t\tint /*long*/ fileNamePtr = OS.gtk_file_selection_get_filename (handle);", "-\t\tint /*long*/ utf8Ptr = OS.g_filename_to_utf8 (fileNamePtr, -1, null, null, null);", "-\t\tint /*long*/ [] items_written = new int /*long*/ [1];", "-\t\tint /*long*/ utf16Ptr = OS.g_utf8_to_utf16 (utf8Ptr, -1, null, items_written, null);", "-\t\tint length = (int)/*64*/items_written [0];", "-\t\tchar [] buffer = new char [length];", "-\t\tOS.memmove (buffer, utf16Ptr, length * 2);", "-\t\tString osAnswer = new String (buffer);", "-\t\tOS.g_free (utf16Ptr);", "-\t\tOS.g_free (utf8Ptr);", "-\t\tanswer = interpretOsAnswer (osAnswer);", "+\t\tanswer = computeResult ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8cc9d78d42c6ea90178a31ddd15f3ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "d92832f7f35479b68af178a8f84b854951fa1498", "commitAfterChange": "99fcc5706076e4a6fca5bfd237bf24c8fa098873", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void bringToTop (boolean force)", "signatureAfterChange": "\r void bringToTop (boolean force)", "diff": ["-\t/*\r", "-\t* Feature in X.  Calling XSetInputFocus() when the\r", "-\t* widget is not viewable causes an X bad match error.\r", "-\t* The fix is to call XSetInputFocus() when the widget\r", "-\t* is viewable.\r", "-\t*/\r", "-\tif (minimized) return;\r", "-\tif (!isVisible ()) return;\r", "-\tint xDisplay = OS.XtDisplay (handle);\r", "-\tif (xDisplay == 0) return;\r", "-\tint xWindow = OS.XtWindow (handle);\r", "-\tif (xWindow == 0) return;\r", "-\tif (!force) {\r", "-\t\tint [] buffer1 = new int [1], buffer2 = new int [1];\r", "-\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "-\t\tif (buffer1 [0] == 0) return;\r", "-\t\tint handle = OS.XtWindowToWidget (xDisplay, buffer1 [0]);\r", "-\t\tif (handle == 0) return;\r", "-\t}\r", "-\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);\r", "+\tmoveAbove (null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15a915189ea301e7d5991d5a79f4a93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "6c51b909eb6afeed8622bc4c75203ec999cba4ab", "commitAfterChange": "92df954973cbffd8b7d43710033a40107cbfeb0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\t\t\tint[] width = new int[1], height = new int[1];", "-\t\t\t\tOS.pango_layout_get_size(layout, width, height);", "-\t\t\t\tCairo.cairo_scale(cairo, -1f,  1);", "-\t\t\t\tCairo.cairo_translate(cairo, -2 * x - OS.PANGO_PIXELS(width[0]), 0);", "+\t\t\t\tCairo.cairo_scale(cairo, -1,  1);", "+\t\t\t\tCairo.cairo_translate(cairo, -2 * x - width(), 0);", "-\t\t\t\t\tint[] width = new int[1], height = new int[1];", "-\t\t\t\t\tOS.pango_layout_get_size(layout, width, height);", "-\t\t\t\t\tCairo.cairo_scale(cairo, -1f,  1);", "-\t\t\t\t\tCairo.cairo_translate(cairo, -2 * x - OS.PANGO_PIXELS(width[0]), 0);", "+\t\t\t\t\tCairo.cairo_scale(cairo, -1,  1);", "+\t\t\t\t\tCairo.cairo_translate(cairo, -2 * x - width(), 0);", "-\t\t\t\t\tint[] width = new int[1], height = new int[1];", "-\t\t\t\t\tOS.pango_layout_get_size(layout, width, height);", "-\t\t\t\t\tCairo.cairo_scale(cairo, -1f,  1);", "-\t\t\t\t\tCairo.cairo_translate(cairo, -2 * x - OS.PANGO_PIXELS(width[0]), 0);", "+\t\t\t\t\tCairo.cairo_scale(cairo, -1,  1);", "+\t\t\t\t\tCairo.cairo_translate(cairo, -2 * x - width(), 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39d522cb238b3ea60b41af7a5a9d137", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "cd5e09d6a79f616524b7988215af7bd3d4bb58bd", "commitAfterChange": "b334d44ba3c70fd8db4e08687ef0db9af2bd2587", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": "  String getTXNText (int iStartOffset, int iEndOffset)", "signatureAfterChange": "  String getTXNText (int iStartOffset, int iEndOffset)", "diff": ["-String getTXNText (int iStartOffset, int iEndOffset) {", "-\tif (oDataHandle [0] == 0) return \"\";", "-\tif (length == 0) return \"\";", "-\treturn new String (buffer);", "+", "+String getTXNText (int iStartOffset, int iEndOffset) {", "+\treturn new String (getTXNChars (iStartOffset, iEndOffset));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e174737527c07041e1e902adbd28c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c89bab5bedb26789fc55835a14938a4fc6d4cc5c", "commitAfterChange": "8b04106dcfac2380b6792586458d07b21132dfcb", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void setGCFont()", "signatureAfterChange": "  void setGCFont()", "diff": ["+\tint tabs = data.tabs;", "+\tif (tabs != 0) OS.DisposePtr(tabs);", "+\tdata.tabs = 0;\t", "-\tif (Font.USE_ATSUI) {", "-\t\tif (font.atsuiStyle == 0) {", "-\t\t\tif (data.atsuiStyle != 0) OS.ATSUDisposeStyle(data.atsuiStyle);", "-\t\t\tdata.atsuiStyle = font.createStyle();", "-\t\t}", "-\t\tdata.string = null;", "-\t} else {", "-\t\tint atsFontRef = OS.FMGetATSFontRefFromFont(font.handle);", "-\t\tint [] ptr = new int[1];", "-\t\tOS.ATSFontGetPostScriptName(atsFontRef, 0, ptr);", "-\t\tint length = OS.CFStringGetLength(ptr[0]);", "-\t\tchar[] buffer = new char[length];", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = length;", "-\t\tOS.CFStringGetCharacters(ptr[0], range, buffer);", "-\t\tOS.CFRelease(ptr[0]);", "-\t\tString name = new String(buffer);", "-\t\tOS.CGContextSelectFont(handle, name.getBytes(), font.size, OS.kCGEncodingMacRoman);", "+\tif (font.atsuiStyle == 0) {", "+\t\tif (data.atsuiStyle != 0) OS.ATSUDisposeStyle(data.atsuiStyle);", "+\t\tdata.atsuiStyle = font.createStyle();", "+\tdata.string = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0ac40bb7ec97621dfe8d697f7b42cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9fe22630372ea72bd403baac373eb8df3cc0e053", "commitAfterChange": "373614e5da821c03a73fa3a11c8e5d2cd2e624e4", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r void manageChildren ()", "signatureAfterChange": "\r void manageChildren ()", "diff": ["-\tboolean fixFocus = false;\r", "-\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\tif (xDisplay != 0) {\r", "-\t\t\tint [] buffer1 = new int [1], buffer2 = new int [1];\r", "-\t\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "-\t\t\tint xWindow = buffer1 [0];\r", "-\t\t\tif (xWindow != 0) {\r", "-\t\t\t\tint focusHandle = OS.XtWindowToWidget (xDisplay, xWindow);\r", "-\t\t\t\tif (focusHandle != 0) {\r", "-\t\t\t\t\tfocusHandle = OS.XmGetFocusWidget (focusHandle);\r", "-\t\t\t\t\tif (focusHandle != 0) {\r", "-\t\t\t\t\t\tint tempHandle = handle;\r", "-\t\t\t\t\t\tdo {\r", "-\t\t\t\t\t\t\tif (tempHandle == focusHandle) break;\r", "-\t\t\t\t\t\t} while ((tempHandle = OS.XtParent (tempHandle)) != 0);\r", "-\t\t\t\t\t\tfixFocus = tempHandle != 0;\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\t\r", "-\tif (fixFocus) {\r", "-\tif (fixFocus) {\r", "+\tif (argList1 [1] != 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571f5c7aa120da0703bb96d683f6b808", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ed8f32b56b812cdf00115072db13b1229571e186", "commitAfterChange": "ab9053c170cd5f8a90daf93de82e0a79f1e92b73", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\t/*", "-\t* Ignore focus change events when the window getting or losing", "-\t* focus is a menu.  Because XmGetFocusWidget() does not answer", "-\t* the menu shell (it answers the menu parent), it is necessary", "-\t* to use XGetInputFocus() to get the real X focus window.", "-\t*/", "-\tint xDisplay = xEvent.display;", "-\tif (xDisplay == 0) return 0;", "-\tint [] unused = new int [1], xWindow = new int [1];", "-\tOS.XGetInputFocus (xDisplay, xWindow, unused);", "-\tif (xWindow [0] != 0) {", "-\t\tint widget = OS.XtWindowToWidget (xDisplay, xWindow [0]);", "-\t\tif (widget != 0 && OS.XtClass (widget) == OS.xmMenuShellWidgetClass ()) return 0;", "-\t}", "-\t"]}], "num": 17267}