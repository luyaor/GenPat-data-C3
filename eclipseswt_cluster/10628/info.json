{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef6fffadf73487e0bc805e7413a05495", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be7c4d0b7b2cbee114a8d685fe319b04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c57fab65dda96cfca7aac9c7fe579c6f52aa004b", "commitAfterChange": "1c7e4692f8719849ee5fd828a714451919319449", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  public void setRedraw (boolean redraw)", "signatureAfterChange": "  public void setRedraw (boolean redraw)", "diff": ["+\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+\t\t\tif (hwndHeader != 0) OS.SendMessage (hwndHeader, OS.WM_SETREDRAW, 1, 0);", "-\t\t\t\t", "-\t\t\t\t/*", "-\t\t\t\t* This code is intentionally commented.  The window proc", "-\t\t\t\t* for the table implements WM_SETREDRAW to invalidate", "-\t\t\t\t* and erase the table and the header.  This is undocumented", "-\t\t\t\t* behavior.  The commented code below shows what is actually", "-\t\t\t\t* happening and reminds us that we are relying on this", "-\t\t\t\t* undocumented behavior.", "-\t\t\t\t*/", "-//\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "-//\t\t\t\tif (hwndHeader != 0) OS.SendMessage (hwndHeader, OS.WM_SETREDRAW, 1, 0);", "-//\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "-//\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "-//\t\t\t\tif (hwndHeader != 0) OS.RedrawWindow (hwndHeader, null, 0, flags);", "-\t", "-\t\t\t\t/*", "-\t\t\t\t* NOTE: The window proc for the table does not redraw the", "-\t\t\t\t* non-client area (ie. the border and scroll bars).  This ", "-\t\t\t\t* must be explicitly redrawn.  This code can be removed", "-\t\t\t\t* if we stop relying on the undocuemented behavior described", "-\t\t\t\t* above.", "-\t\t\t\t*/", "-\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.WM_SETREDRAW, 1, 0);", "-\t\t\t\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_FRAME | OS.RDW_INVALIDATE);", "+\t\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+\t\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e4dd040c00f9479da9bf9b8987a21a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d85046115e9ca6d847416c2699efeccc0f831f02", "commitAfterChange": "e672625482279f9d4377f19afcd93a8553346f16", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  public void setRedraw (boolean redraw)", "signatureAfterChange": "  public void setRedraw (boolean redraw)", "diff": ["-\t\t\t/*", "-\t\t\t* Bug in Windows.  For some reason, when WM_SETREDRAW is used ", "-\t\t\t* to turn redraw back on this may result in a WM_SIZE.  If the", "-\t\t\t* table column widths are adjusted in WM_SIZE, blank lines may", "-\t\t\t* be inserted at the top of the widget.  A call to LVM_GETTOPINDEX", "-\t\t\t* will return a negative number (this is an impossible result).", "-\t\t\t* The fix is to ignore any resize generated by WM_SETREDRAW and", "-\t\t\t* defer the work until the WM_SETREDRAW has returned.", "-\t\t\t*/", "-\t\t\tignoreResize = true;", "-\t\t\t}", "-\t\t\tif (!ignoreResize) {", "-\t\t\t\tsetResizeChildren (false);", "-\t\t\t\tsendEvent (SWT.Resize);", "-\t\t\t\t// widget may be disposed at this point", "-\t\t\t\tif (isDisposed ()) return;", "-\t\t\t\tif (layout != null) layout.layout (this, false);", "-\t\t\t\tsetResizeChildren (true);", "-\t\t\t}", "-\t\t\tignoreResize = false;", "-\t\t\t", "-\t\t\t/*", "-\t\t\t* This code is intentionally commented.  The window proc", "-\t\t\t* for the table implements WM_SETREDRAW to invalidate", "-\t\t\t* and erase the table and the header.  This is undocumented", "-\t\t\t* behavior.  The commented code below shows what is actually", "-\t\t\t* happening and reminds us that we are relying on this", "-\t\t\t* undocumented behavior.", "-\t\t\t*/", "-//\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "-//\t\t\tif (hwndHeader != 0) OS.SendMessage (hwndHeader, OS.WM_SETREDRAW, 1, 0);", "-//\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "-//\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "-//\t\t\tif (hwndHeader != 0) OS.RedrawWindow (hwndHeader, null, 0, flags);", "-", "-\t\t\t/*", "-\t\t\t* NOTE: The window proc for the table does not redraw the", "-\t\t\t* non-client area (ie. the border and scroll bars).  This ", "-\t\t\t* must be explicitly redrawn.  This code can be removed", "-\t\t\t* if we stop relying on the undocuemented behavior described", "-\t\t\t* above.", "-\t\t\t*/", "-\t\t\tif (OS.IsWinCE) {", "-\t\t\t\tOS.InvalidateRect (handle, null, false);", "-\t\t\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_FRAME | OS.RDW_INVALIDATE);", "+\t\t\t\t", "+\t\t\t\t/*", "+\t\t\t\t* This code is intentionally commented.  The window proc", "+\t\t\t\t* for the table implements WM_SETREDRAW to invalidate", "+\t\t\t\t* and erase the table and the header.  This is undocumented", "+\t\t\t\t* behavior.  The commented code below shows what is actually", "+\t\t\t\t* happening and reminds us that we are relying on this", "+\t\t\t\t* undocumented behavior.", "+\t\t\t\t*/", "+//\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+//\t\t\t\tif (hwndHeader != 0) OS.SendMessage (hwndHeader, OS.WM_SETREDRAW, 1, 0);", "+//\t\t\t\tint flags = OS.RDW_ERASE | OS.RDW_FRAME | OS.RDW_INVALIDATE | OS.RDW_ALLCHILDREN;", "+//\t\t\t\tOS.RedrawWindow (handle, null, 0, flags);", "+//\t\t\t\tif (hwndHeader != 0) OS.RedrawWindow (hwndHeader, null, 0, flags);", "+\t", "+\t\t\t\t/*", "+\t\t\t\t* NOTE: The window proc for the table does not redraw the", "+\t\t\t\t* non-client area (ie. the border and scroll bars).  This ", "+\t\t\t\t* must be explicitly redrawn.  This code can be removed", "+\t\t\t\t* if we stop relying on the undocuemented behavior described", "+\t\t\t\t* above.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.IsWinCE) {", "+\t\t\t\t\tOS.InvalidateRect (handle, null, false);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.RedrawWindow (handle, null, 0, OS.RDW_FRAME | OS.RDW_INVALIDATE);", "+\t\t\t\t}"]}], "num": 10628}