{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff1db8318b5d8b38a9007a39ce77be45", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7bf72bbfefd6a279b2a6083fe4c240d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "38a4564f45bb94d6fbc14b05cd8ef1c7922c4ac2", "commitAfterChange": "8cfc2f3bd1b2a6a72c92cc1760844c33f5f077dc", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  static int applicationDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int applicationDelegateProc(int id, int sel, int arg0)", "diff": ["-\t} ", "+\t} else if (sel == OS.sel_applicationDidBecomeActive_) {", "+\t\tControl control = display.getFocusControl();", "+\t\tif (control != null && !control.isDisposed()) {", "+\t\t\tdisplay.focusControl = control;", "+\t\t\tcontrol.sendFocusEvent(SWT.FocusIn, false);", "+\t\t}", "+\t} else if (sel == OS.sel_applicationDidResignActive_) {", "+\t\tControl control = display.focusControl;", "+\t\tif (control != null && !control.isDisposed()) {", "+\t\t\tdisplay.focusControl = null;", "+\t\t\tcontrol.sendFocusEvent(SWT.FocusOut, false);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262cafefbaaab93835e489c5ee92a1ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "5a53be90c709ea55e0367c99e1539961e8c9e67e", "commitAfterChange": "da1d8f1ebcb3b0ffe02f686b479ca739740f4fe1", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  LRESULT WM_NCLBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NCLBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tint hwndActive = OS.GetActiveWindow ();", "-\tOS.SetActiveWindow (handle);", "+\tint hwndActive = 0;", "+\tboolean fixActive = OS.IsWin95 && display.lastHittest == OS.HTCAPTION;", "+\tif (fixActive) hwndActive = OS.SetActiveWindow (handle);", "-\tOS.SetActiveWindow (hwndActive);", "-\tControl lastFocusControl = display.lastHittestControl;", "-\tif (lastFocusControl != null && !lastFocusControl.isDisposed ()) {", "-\t\tlastFocusControl.setFocus ();", "+\tif (fixActive) OS.SetActiveWindow (hwndActive);", "+\tControl focusControl = display.lastHittestControl;", "+\tif (focusControl != null && !focusControl.isDisposed ()) {", "+\t\tfocusControl.setFocus ();"]}], "num": 35821}