{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c3e8b70b53717b719db82b72dce9ba4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff455d44001a93fb097c29248021173", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 37, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\t", "-\ttry {", "-\t\tfocus(false, null);", "-\t\tinstallFont();", "-\t\tshort[] fontInfo= new short[4];", "-\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\t\tString s= \"abcdefghijklmnopqrstuvwxyz\";", "-\t\tint width= OS.TextWidth(s, data.font.fID, data.font.fSize, data.font.fFace) / 26;", "-\t\treturn FontMetrics.carbon_new(fontInfo[0], fontInfo[1], width, fontInfo[3], fontInfo[0]+fontInfo[1]);", "-\t} finally {", "-\t\tunfocus(false);\t", "-\t}", "+\tFont font = data.font;", "+\tFontInfo info = new FontInfo();", "+\tOS.FetchFontInfo(font.id, font.size, font.style, info);", "+\tFontMetrics fm = new FontMetrics();", "+\tfm.ascent = info.ascent;", "+\tfm.descent = info.descent;", "+\tfm.leading = info.leading;", "+\t/* This code is intentionaly comment. Not right for fixed width fonts. */", "+\t//fm.averageCharWidth = info.widMax / 3;", "+\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"; ", "+\tfm.averageCharWidth = stringExtent(s).x / s.length();", "+\tfm.height = fm.ascent + fm.descent;", "+\treturn fm;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81055ef516cf7af5a39210bc6f2d8c41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bcaafebf3d1c0b9cf3c5ce180e5a53cde2e7ad58", "commitAfterChange": "93745a79da963108a6ee75f8fd35bcdb8794dcb1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\t\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";  //$NON-NLS-1$", "-\t\tNSAttributedString attribStr = createString(s, 0, false);", "-\t\tdata.textStorage.setAttributedString(attribStr);", "-\t\tattribStr.release();", "-\t\tNSLayoutManager layoutManager = data.layoutManager;", "-\t\tlayoutManager.glyphRangeForTextContainer(data.textContainer);", "-\t\tNSRect rect = layoutManager.usedRectForTextContainer(data.textContainer);", "-\t\tint width = (int)Math.ceil(rect.width);", "-\t\tint ascent = (int)layoutManager.defaultBaselineOffsetForFont(data.font.handle);", "-\t\tint height = (int)layoutManager.defaultLineHeightForFont(data.font.handle);", "-\t\treturn FontMetrics.cocoa_new(ascent, height - ascent, width / s.length(), 0, height);", "+", "+\t\tif (data.font.metrics == null) {", "+\t\t\tString s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";  //$NON-NLS-1$", "+\t\t\tNSMutableDictionary dict = ((NSMutableDictionary)new NSMutableDictionary().alloc()).initWithCapacity(3);", "+\t\t\tdict.setObject(data.font.handle, OS.NSFontAttributeName);", "+\t\t\tdata.font.addTraits(dict);", "+\t\t\tNSAttributedString attribStr = ((NSAttributedString)new NSAttributedString().alloc()).initWithString(NSString.stringWith(s), dict);", "+\t\t\tdata.textStorage.setAttributedString(attribStr);", "+\t\t\tattribStr.release();", "+\t\t\tdict.release();", "+\t\t\tNSLayoutManager layoutManager = data.layoutManager;", "+\t\t\tlayoutManager.glyphRangeForTextContainer(data.textContainer);", "+\t\t\tNSRect rect = layoutManager.usedRectForTextContainer(data.textContainer);", "+\t\t\tint avgWidth = (int) Math.ceil(rect.width) / s.length();", "+\t\t\tint ascent = (int)layoutManager.defaultBaselineOffsetForFont(data.font.handle);", "+\t\t\tint height = (int)layoutManager.defaultLineHeightForFont(data.font.handle);", "+\t\t\tdata.font.metrics = FontMetrics.cocoa_new(ascent, height - ascent, avgWidth, 0, height); ", "+\t\t}", "+\t\t", "+\t\treturn data.font.metrics;"]}], "num": 15193}