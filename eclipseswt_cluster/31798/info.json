{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7808f09bd18a7cc8279458a362e86992", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f0bd1970033aecb5a6dd517af97834", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b410448b2ee30c39984d789197ecbf23e5a160a6", "commitAfterChange": "63863d93c2ee25d0b7bc77cb902dfe9620ae110e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\tint length = string.length();", "-\t\tchar[] buffer = new char [length];", "-\t\tstring.getChars(0, length, buffer, 0);", "-\t\tPointF pt = new PointF();", "-\t\tint /*long*/ format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());", "-\t\tint formatFlags = Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces;", "-\t\tif ((data.style & SWT.MIRRORED) != 0) formatFlags |= Gdip.StringFormatFlagsDirectionRightToLeft;", "-\t\tGdip.StringFormat_SetFormatFlags(format, formatFlags);", "-\t\tfloat[] tabs = (flags & SWT.DRAW_TAB) != 0 ? new float[]{measureSpace(data.gdipFont, format) * 8} : new float[1];", "-\t\tGdip.StringFormat_SetTabStops(format, 0, tabs.length, tabs); ", "-\t\tint hotkeyPrefix = (flags & SWT.DRAW_MNEMONIC) != 0 ? Gdip.HotkeyPrefixShow : Gdip.HotkeyPrefixNone;", "-\t\tif ((flags & SWT.DRAW_MNEMONIC) != 0 && (data.uiState & OS.UISF_HIDEACCEL) != 0) hotkeyPrefix = Gdip.HotkeyPrefixHide;", "-\t\tGdip.StringFormat_SetHotkeyPrefix(format, hotkeyPrefix);", "-\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "-\t\t\tRectF bounds = new RectF();", "-\t\t\tGdip.Graphics_MeasureString(gdipGraphics, buffer, length, data.gdipFont, pt, format, bounds);", "-\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, data.gdipBrush, x, y, Math.round(bounds.Width), Math.round(bounds.Height));", "-\t\t}", "-\t\tint gstate = 0;", "-\t\tint /*long*/ brush = getFgBrush();", "-\t\tif ((data.style & SWT.MIRRORED) != 0) {", "-\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "-\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "-\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\t\t\tbreak;\t\t\t", "-\t\t\t\tcase Gdip.BrushTypeTextureFill:", "-\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\t\t\tbreak;\t\t\t", "-\t\t\t}", "-\t\t\tgstate = Gdip.Graphics_Save(gdipGraphics);", "-\t\t\tGdip.Graphics_ScaleTransform(gdipGraphics, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t\t \t\t \t\t ", "-\t\t}", "-\t\tpt.X = x;", "-\t\tpt.Y = y;", "-\t\tGdip.Graphics_DrawString(gdipGraphics, buffer, length, data.gdipFont, pt, format, brush);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) {", "-\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "-\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "-\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Gdip.BrushTypeTextureFill:", "-\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tGdip.Graphics_Restore(gdipGraphics, gstate);", "-\t\t}", "-\t\tGdip.StringFormat_delete(format);", "+\t\tdrawText(gdipGraphics, string, x, y, flags, null);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac4203a1dfe1e18e789d4155b9ef98d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "e3d907d6678e7fdda004ed7738717629aea97ed2", "commitAfterChange": "7bb044e5c9466f1fefdeb85ae3faca48de0e8d34", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\t\t\t\t\tPointF pt = new PointF();", "-\t\t\t\t\t\tpt.X = drawX;", "-\t\t\t\t\t\tpt.Y = drawRunY;", "+\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, brush, pt, Gdip.DriverStringOptionsRealizedAdvance, 0);", "+\t\t\t\t\t\tint[] advances = new int[run.glyphCount];", "+\t\t\t\t\t\tfloat[] points = new float[run.glyphCount * 2];", "+\t\t\t\t\t\tOS.memmove(advances, run.justify != 0 ? run.justify : run.advances, run.glyphCount * 4);", "+\t\t\t\t\t\tint glyphX = drawX;", "+\t\t\t\t\t\tfor (int h = 0, j = 0; h < advances.length; h++) {", "+\t\t\t\t\t\t\tpoints[j++] = glyphX;", "+\t\t\t\t\t\t\tpoints[j++] = drawRunY;", "+\t\t\t\t\t\t\tglyphX += advances[h];", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, brush, points, 0, 0);", "+\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, -2 * drawX - run.width, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, selBrushFg, pt, Gdip.DriverStringOptionsRealizedAdvance, 0);", "+\t\t\t\t\t\t\tGdip.Graphics_DrawDriverString(gdipGraphics, run.glyphs, run.glyphCount, gdipFont, selBrushFg, points, 0, 0);", "+\t\t\t\t\t\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "+\t\t\t\t\t\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase Gdip.BrushTypeTextureFill:", "+\t\t\t\t\t\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}"]}], "num": 31798}