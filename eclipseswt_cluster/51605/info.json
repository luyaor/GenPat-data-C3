{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1880c67f0d08375eeadab8cc02cb97a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d34e1d756496e9adc94ebce06503fac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void setItems (String [] items)", "signatureAfterChange": "  public void setItems (String [] items)", "diff": ["- */", "+", "-", "-\tif (items.length == 0) {", "-\t\tremoveAll();", "-\t\treturn;", "-\t}", "-", "-    /* AW", "-\tint index = 0;", "-\tint [] table = new int [items.length];", "-\tString codePage = getCodePage ();", "-\twhile (index < items.length) {", "-\t\tString string = items [index];", "-\t\tif (string == null) break;", "-\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, encodeString(string), true);", "-\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\tif (xmString == 0) break;", "-\t\ttable [index++] = xmString;", "-\t}", "-\tint ptr = OS.XtMalloc (index * 4);", "-\tOS.memmove (ptr, table, index * 4);", "-\tint [] argList = {OS.XmNitems, ptr, OS.XmNitemCount, index};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tfor (int i=0; i<index; i++) OS.XmStringFree (table [i]);", "-\tOS.XtFree (ptr);", "-\tif (index < items.length) error (SWT.ERROR_ITEM_NOT_ADDED);", "-    */", "-\t", "-\tif (menuHandle != 0) {", "-\t\tfor (int i= 0; i < items.length; i++) {", "-\t\t\tString string= items[i];", "-\t\t\tif (string == null)", "-\t\t\t\tbreak;", "-\t\t\tint sHandle= 0;", "-\t\t\ttry {", "-\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "-\t\t\t\tif (OS.AppendMenuItemTextWithCFString(menuHandle, sHandle, 0, fgCommandID++, null) != OS.kNoErr)", "-\t\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\t\t} finally {", "-\t\t\t\tif (sHandle != 0)", "-\t\t\t\t\tOS.CFRelease(sHandle);", "-\t\t\t}", "+\tremoveAll();", "+\tif (items.length == 0) return;", "+\tfor (int i= 0; i < items.length; i++) {", "+\t\tString string = items[i];", "+\t\tif (string == null) continue;", "+\t\tchar [] buffer = new char [string.length ()];", "+\t\tstring.getChars (0, buffer.length, buffer, 0);", "+\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\tif (ptr == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "+\t\tint result;", "+\t\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t\tresult = OS.AppendMenuItemTextWithCFString (menuHandle, ptr, 0, 0, null);", "+\t\t} else {", "+\t\t\tint [] outIndex = new int[1];", "+\t\t\tresult = OS.HIComboBoxAppendTextItem (handle, ptr, outIndex);", "-\t\tOS.SetControl32BitMaximum(handle, items.length);", "-\t} else {", "-\t\tremoveAll();", "-\t\tfor (int i= 0; i < items.length; i++) {", "-\t\t\tString string= items[i];", "-\t\t\tif (string == null)", "-\t\t\t\tbreak;", "-\t\t\tint sHandle= 0;", "-\t\t\ttry {", "-\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "-\t\t\t\tif (OS.HIComboBoxAppendTextItem(handle, sHandle) != OS.kNoErr)", "-\t\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\t\t} finally {", "-\t\t\t\tif (sHandle != 0)", "-\t\t\t\t\tOS.CFRelease(sHandle);", "-\t\t\t}", "-\t\t}", "+\t\tOS.CFRelease(ptr);", "+\t\tif (result != OS.noErr) error (SWT.ERROR_ITEM_NOT_ADDED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f209b33c727cd8d5ae8f25540d5c561", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void setItem (int index, String string)", "signatureAfterChange": "  public void setItem (int index, String string)", "diff": ["- */", "+", "-\tcheckWidget();", "+\tcheckWidget ();", "-\tif (index == -1) error (SWT.ERROR_INVALID_RANGE);", "-    /* AW", "-\tint [] argList = {OS.XmNlist, 0, OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tif (!(0 <= index && index < argList [3])) {", "-\t\terror (SWT.ERROR_INVALID_RANGE);", "+\tint count = getItemCount ();", "+\tif (0 > index || index >= count) error (SWT.ERROR_INVALID_RANGE);", "+\tchar [] buffer = new char [string.length ()];", "+\tstring.getChars (0, buffer.length, buffer, 0);", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\tif (ptr == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "+\tint result;", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\tresult = OS.SetMenuItemTextWithCFString (menuHandle, (short)(index+1), ptr);", "+\t} else {", "+\t\tresult = OS.HIComboBoxInsertTextItemAtIndex (handle, index, ptr);", "+\t\tOS.HIComboBoxRemoveItemAtIndex (handle, index+1);", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), encodeString(string), true);", "-\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\tif (xmString == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "-\tboolean isSelected = OS.XmListPosSelected (argList[1], index + 1);", "-\tOS.XmListReplaceItemsPosUnselected (argList[1], new int [] {xmString}, 1, index + 1);", "-\tif (isSelected) OS.XmListSelectPos (argList[1], index + 1, false);", "-\tOS.XmStringFree (xmString);", "-    */", "-\tint sHandle= 0;", "-\ttry {", "-\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "-\t\tif (menuHandle != 0) {", "-\t\t\tif (OS.SetMenuItemTextWithCFString(menuHandle, (short)(index+1), sHandle) != OS.kNoErr)", "-\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\t} else {", "-\t\t\tOS.HIComboBoxInsertTextItemAtIndex(handle, index, sHandle);", "-\t\t\tOS.HIComboBoxRemoveItemAtIndex(handle, index+1);", "-\t\t}", "-\t} finally {", "-\t\tif (sHandle != 0)", "-\t\t\tOS.CFRelease(sHandle);", "-\t}", "+\tOS.CFRelease(ptr);", "+\tif (result != OS.noErr) error (SWT.ERROR_ITEM_NOT_ADDED);"]}], "num": 51605}