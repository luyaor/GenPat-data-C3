{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea5a71840faeb71d744be013f5a886bd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "058a8abeaab2ac0d1ab327fb91e52777", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "95d4565f745af57180cf5681e3ac70077cc7e816", "commitAfterChange": "7ac469e20b5a52d321e3f3042fd720e66ba8fada", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Cursor (Device device, int style)", "signatureAfterChange": " public Cursor (Device device, int style)", "diff": ["-\tint shape = -1;\t\t// the default cursor", "+\thandle = -1;\t\t// the default cursor", "-\tcase SWT.CURSOR_ARROW: \t\t\tbreak;", "-\tcase SWT.CURSOR_WAIT: \t\t\t\tshape = WATCH; break;", "-\tcase SWT.CURSOR_HAND: \t\t\t\tbreak;", "-\tcase SWT.CURSOR_CROSS: \t\t\tshape = CROSS; break;", "-\tcase SWT.CURSOR_APPSTARTING: \t\tshape = WATCH; break;", "+\tcase SWT.CURSOR_ARROW:", "+\t\tbreak;", "+\tcase SWT.CURSOR_WAIT:", "+\tcase SWT.CURSOR_APPSTARTING:", "+\t\tif (WATCH == 0)", "+\t\t\tWATCH= OS.DerefHandle(OS.GetCursor(OS.watchCursor));", "+\t\thandle = WATCH;", "+\t\tbreak;", "+\tcase SWT.CURSOR_HAND:", "+\t\tbreak;", "+\tcase SWT.CURSOR_CROSS:", "+\t\tif (CROSS == 0)", "+\t\t\tCROSS= OS.DerefHandle(OS.GetCursor(OS.crossCursor));", "+\t\thandle = CROSS;", "+\t\tbreak;", "-\tcase SWT.CURSOR_IBEAM: \t\t\tshape = IBEAM; break;", "-\tcase SWT.CURSOR_NO: \t\t\t\tshape = NO_CURSOR; break;", "+\tcase SWT.CURSOR_IBEAM:", "+\t\tif (IBEAM == 0)", "+\t\t\tIBEAM= OS.DerefHandle(OS.GetCursor(OS.iBeamCursor));", "+\t\thandle = IBEAM;", "+\t\tbreak;", "+\tcase SWT.CURSOR_NO:", "+\t\tif (NO_CURSOR == 0) {", "+\t\t\tshort[] data= new short[16];", "+\t\t\tNO_CURSOR= OS.NewCursor((short) 0, (short)0, data, data);", "+\t\t}", "+\t\thandle = NO_CURSOR;", "+\t\tbreak;", "-\thandle = shape;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b7f386f1a746c03fa4f41018d85c03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "b89523d4edc8df3c49cc648f90babb57387f7ec7", "commitAfterChange": "e3058890967ce8da780b8d3d7d26f660e91e1175", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void setExpanded (boolean expanded)", "signatureAfterChange": " public void setExpanded (boolean expanded)", "diff": ["-\t* an item, the widget scrolls to show the root item and", "-\t* the newly expanded items.  While not strictly incorrect,", "+\t* an item, the widget scrolls to show the item and the", "+\t* newly expanded items.  While not strictly incorrect,", "-\t\tOS.SendMessage (hwnd, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hTopItem);", "-\t\tif (oldInfo != null) {", "+\t\tboolean collapsed = false;", "+\t\tif (!expanded) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\trect.left = hTopItem;", "+\t\t\twhile (hTopItem != 0 && OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 0, rect) == 0) {", "+\t\t\t\thTopItem = rect.left = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hTopItem);", "+\t\t\t\tcollapsed = true;", "+\t\t\t}", "+\t\t}", "+\t\tboolean scrolled = true;", "+\t\tif (hTopItem != 0) {", "+\t\t\tOS.SendMessage (hwnd, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hTopItem);", "+\t\t\tscrolled = hTopItem != OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\t\t}", "+\t\tif (!collapsed && !scrolled && oldInfo != null) {", "-\t\t\tboolean fixRedraw = false;", "-\t\t\tif (hTopItem == OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0)) {", "+\t\t\tboolean fixScroll = false;", "+\t\t\tif (!collapsed && !scrolled) {", "-\t\t\t\tfixRedraw = index == count;", "+\t\t\t\tfixScroll = index == count;", "-\t\t\tif (fixRedraw) {", "+\t\t\tif (fixScroll) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451bee4eb3e633b70366afe3564f6fd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "41756e82c37542ed1655bbf5e6426818e629fac2", "commitAfterChange": "26afddc6065f2e0634aa264a79ea18151f9d62c1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r protected void init ()", "signatureAfterChange": "\r protected void init ()", "diff": ["-//\tOS.HeapFree (hHeap, 0, lpszClassName);\r", "+\t\r", "+\t/* Initialize the system font */\r", "+\tint systemFont = 0;\r", "+\tNONCLIENTMETRICS info = new NONCLIENTMETRICS ();\r", "+\tinfo.cbSize = NONCLIENTMETRICS.sizeof;\r", "+\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {\r", "+\t\tsystemFont = OS.CreateFontIndirect (info.lfMessageFont);\r", "+\t}\r", "+\tif (systemFont == 0) systemFont = OS.GetStockObject (OS.DEFAULT_GUI_FONT);\r", "+\tif (systemFont == 0) systemFont = OS.GetStockObject (OS.SYSTEM_FONT);\r", "+\tif (systemFont != 0) systemFonts = new int [] {systemFont};\r", "+\t\r", "+\t/* Create the message only HWND */\r", "+\thwndShell = OS.CreateWindowEx (0,\r", "+\t\twindowClass,\r", "+\t\tnull,\r", "+\t\tOS.WS_OVERLAPPED,\r", "+\t\t0, 0, 0, 0,\r", "+\t\t0,\r", "+\t\t0,\r", "+\t\thInstance,\r", "+\t\tnull);\r"]}], "num": 60219}