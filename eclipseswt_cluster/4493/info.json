{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae58520b3f3a39ec01ebb529f69349af", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7136e91ad4d7de8c94de94bb65d772", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "deba00683b7e799ad97b05b6dcbb1d19c053de72", "commitAfterChange": "f295d81c96c5f0cad60547a25236d1a3bb649162", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "diff": ["+\tif (OS.IsDBLocale && hooks (SWT.ImeComposition)) {", "+\t\tint hIMC = OS.ImmGetContext (handle);", "+\t\tif (hIMC != 0) {", "+\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "+\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "+\t\t\t}", "+\t\t\tOS.ImmReleaseContext (handle, hIMC);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82a9342f3c13cb99f21b2ffaaddbb20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "fd154e2885070b12cf5a0d7c416a559482fa2597", "commitAfterChange": "fac13f2ea6f3245ba76c31be06502759fbdbb013", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   void computeRuns()", "signatureAfterChange": "   void computeRuns()", "diff": ["-\t\tif (style.underline) {", "+\t\tif (isUnderlineSupported(style)) {", "+\t\t\t\tcase SWT.UNDERLINE_LINK: {", "+\t\t\t\t\tunderlineStyle = OS.NSUnderlineStyleSingle;", "+\t\t\t\t\tif (foreground == null) {", "+\t\t\t\t\t\tNSColor color = NSColor.colorWithDeviceRed(LINK_FOREGROUND.red / 255f, LINK_FOREGROUND.green / 255f, LINK_FOREGROUND.blue / 255f, 1);", "+\t\t\t\t\t\tattrStr.addAttribute(OS.NSForegroundColorAttributeName, color, range);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2bbdfc3cf41696b6378f6a7e74f42b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "8e31d57546de95ba1452e59cfaef2ac0769cc328", "commitAfterChange": "7affb42577c2f1e6edb344cc2cbf777b3e9c722c", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  \tvoid getValue()", "signatureAfterChange": "  \tvoid getValue()", "diff": ["-\t\t\t\t\tObject [] arrayResult = (Object[]) result;", "-\t\t\t\t\tfor (int j = 0; j < arrayResult.length; j++) {", "-\t\t\t\t\t\tgetText.append(arrayResult[j].toString() + \"\\n\");", "+\t\t\t\t\tint length = java.lang.reflect.Array.getLength(result);", "+\t\t\t\t\tif (length == 0) {", "+\t\t\t\t\t\tgetText.append(result.getClass().getComponentType() + \"[0]\");", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int j = 0; j < length; j++) {", "+\t\t\t\t\t\tgetText.append(java.lang.reflect.Array.get(result,j).toString() + \"\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7d7ec1e3fde91c67a8208b975c1798", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6df0f71a3908342adb1e7d84d70d4700c7692726", "commitAfterChange": "14d28b3fe6cf36e8628c8f9f5ebeeff54d692a1f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\tif (!OS.IsWinCE) {\r", "+\tif (OS.IsWinCE) {\r", "+\t\tif ((style & SWT.NO_TRIM) == 0) {\r", "+\t\t\t/* insert caption when no longer maximized */\r", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\t\t\tif ((bits & OS.WS_CAPTION) != OS.WS_CAPTION) {\r", "+\t\t\t\tbits |= OS.WS_CAPTION;\r", "+\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "-\t}\r", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0172cdb2ec86b41ff4bf4369d956b078", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d28d2952c9df12838b08878f4804245eaacc5acc", "commitAfterChange": "31b91b5349886badcb7413ec97162d4181af660a", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "   int SetDimensions (int flags, int x, int y, int cx, int cy)", "signatureAfterChange": "   int SetDimensions (int flags, int x, int y, int cx, int cy)", "diff": ["-\tif (flags == nsIEmbeddingSiteWindow.DIM_FLAGS_POSITION) location = new Point (x, y);", "-\treturn XPCOM.NS_OK;   \t", "-}\t", "+\tif ((flags & nsIEmbeddingSiteWindow.DIM_FLAGS_POSITION) != 0) {", "+\t\tbrowser.getShell ().setLocation (x, y);", "+\t}", "+\tif ((flags & nsIEmbeddingSiteWindow.DIM_FLAGS_SIZE_INNER) != 0) {", "+\t\tbrowser.setSize (cx, cy);", "+\t}", "+\tif ((flags & nsIEmbeddingSiteWindow.DIM_FLAGS_SIZE_OUTER) != 0) {", "+\t\tbrowser.getShell ().setSize (cx, cy);", "+\t}", "+\treturn XPCOM.NS_OK;", "+}"]}], "num": 4493}