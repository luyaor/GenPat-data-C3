{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72fb99232a016d03ddac1cb84304b930", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7f185d115775fc5503529d3734cc78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "82faecf1f2984afac33e97f949b0dc3c26cac05d", "commitAfterChange": "b0c7af088efc6ba82eb28695daa107df5d61cc2f", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 54, "signatureBeforeChange": " void onMouseUp(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-void onMouseUp(Event event) {", "-\tif (event.button != 1) return;", "+void onMouse(Event event) {", "-\tif (closeRect.contains(x, y)) {", "-\t\tcloseImageState = HOT;", "-\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "-\t\tif (selectedIndex == -1) return;", "-\t\tCTabItem2 item = items[selectedIndex];", "-\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\te.widget = this;", "-\t\te.time = event.time;", "-\t\te.item = item;", "-\t\te.doit = true;", "-\t\tfor (int i = 0; i < closeListeners.length; i++) {", "-\t\t\tcloseListeners[i].itemClosed(e);", "-\t\t}", "-\t\tif (e.doit) item.dispose();", "-\t\treturn;", "-\t}", "-\tif (chevronRect.contains(x, y)) {", "-\t\tchevronImageState = HOT;", "-\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\tRectangle rect = new Rectangle(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height);", "-\t\tif (listListeners.length == 0) {", "-\t\t\tshowList(rect, SWT.LEFT);", "-\t\t} else {", "-\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\te.widget = this;", "-\t\t\te.time = event.time;", "-\t\t\te.rect = rect;", "-\t\t\t", "-\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\tlistListeners[i].showList(e);", "+\tswitch (event.type) {", "+\t\tcase SWT.MouseExit: {", "+\t\t\tif (closeImageState != NORMAL) {", "+\t\t\t\tcloseImageState = NORMAL;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "-\t\t}", "-\t\treturn;", "-\t}", "-\tif (expandRect.contains(x, y)) {", "-\t\texpandImageState = HOT;", "-\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\te.widget = this;", "-\t\te.time = event.time;", "-\t\te.doit = true;", "-\t\tfor (int i = 0; i < expandListeners.length; i++) {", "-\t\t\tif (expanded) {", "-\t\t\t\texpandListeners[i].collapse(e);", "-\t\t\t} else {", "-\t\t\t\texpandListeners[i].expand(e);", "+\t\t\tif (expandImageState != NORMAL) {", "+\t\t\t\texpandImageState = NORMAL;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\tif (chevronImageState != NORMAL) {", "+\t\t\t\tchevronImageState = NORMAL;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t}", "+\t\t\tbreak;", "-\t\tif (e.doit) {", "-\t\t\texpanded = !expanded;", "+\t\tcase SWT.MouseDown: {", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\tcloseImageState = SELECTED;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t} ", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\texpandImageState = SELECTED;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\tchevronImageState = SELECTED;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tif (items[i].getBounds().contains(x, y)) {", "+\t\t\t\t\tif (i == selectedIndex) {", "+\t\t\t\t\t\tshowSelection();", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\tsetSelection(i, true);", "+\t\t\t\t\tsetFocus();", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "-\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "-\t\treturn;", "-\t}", "-\tif (single && items.length > 1) {", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tRectangle bounds = items[i].getBounds();", "-\t\t\tif (bounds.contains(x, y)) {", "-\t\t\t\tRectangle rect = new Rectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\tcase SWT.MouseMove: {", "+\t\t\tboolean close = false, expand = false, chevron = false;", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tclose = true;", "+\t\t\t\tif (closeImageState != HOT) {", "+\t\t\t\t\tcloseImageState = HOT;", "+\t\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\t}", "+\t\t\t} ", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\texpand = true;", "+\t\t\t\tif (expandImageState != HOT) {", "+\t\t\t\t\texpandImageState = HOT;", "+\t\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tchevron = true;", "+\t\t\t\tif (chevronImageState != HOT) {", "+\t\t\t\t\tchevronImageState = HOT;", "+\t\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (closeImageState == HOT && !close) {", "+\t\t\t\tcloseImageState = NORMAL;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t}", "+\t\t\tif (expandImageState == HOT && !expand) {", "+\t\t\t\texpandImageState = NORMAL;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t}", "+\t\t\tif (chevronImageState == HOT && !chevron) {", "+\t\t\t\tchevronImageState = NORMAL;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseUp: {", "+\t\t\tif (event.button != 1) return;", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tcloseImageState = HOT;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\tif (selectedIndex == -1) return;", "+\t\t\t\tCTabItem2 item = items[selectedIndex];", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.item = item;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < closeListeners.length; i++) {", "+\t\t\t\t\tcloseListeners[i].itemClosed(e);", "+\t\t\t\t}", "+\t\t\t\tif (e.doit) item.dispose();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tchevronImageState = HOT;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\tRectangle rect = new Rectangle(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height);", "-\t\t\t\t\tshowList(rect, SWT.RIGHT);", "+\t\t\t\t\tshowList(rect, SWT.LEFT);", "-\t\t\t\t\tfor (int j = 0; j < listListeners.length; j++) {", "-\t\t\t\t\t\tlistListeners[j].showList(e);", "+\t\t\t\t\t", "+\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "+\t\t\t\t\t\tlistListeners[i].showList(e);", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\texpandImageState = HOT;", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < expandListeners.length; i++) {", "+\t\t\t\t\tif (expanded) {", "+\t\t\t\t\t\texpandListeners[i].collapse(e);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\texpandListeners[i].expand(e);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (e.doit) {", "+\t\t\t\t\texpanded = !expanded;", "+\t\t\t\t}", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (single && items.length > 1) {", "+\t\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\t\tRectangle bounds = items[i].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)) {", "+\t\t\t\t\t\tRectangle rect = new Rectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\t\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\t\t\t\tshowList(rect, SWT.RIGHT);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\t\t\t\te.widget = this;", "+\t\t\t\t\t\t\te.time = event.time;", "+\t\t\t\t\t\t\te.rect = rect;", "+\t\t\t\t\t\t\tfor (int j = 0; j < listListeners.length; j++) {", "+\t\t\t\t\t\t\t\tlistListeners[j].showList(e);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "144314c88d9113cb01411a4346d78a61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/widgets/TypedListener.java", "commitBeforeChange": "bd469e488bef6f88459d9c0535159f8167416d1f", "commitAfterChange": "0f22a30a5b82bfeb0c093bba732059285a8fbaba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void handleEvent (Event e)", "signatureAfterChange": " public void handleEvent (Event e)", "diff": ["-\t\tcase SWT.Paint: {", "-\t\t\t/* Field set by Control */", "-\t\t\tPaintEvent event = new PaintEvent (e);", "-\t\t\t((PaintListener) eventListener).paintControl (event);", "-\t\t\te.gc = event.gc;", "-\t\t\tbreak;", "-\t\t}\t\t\t", "-\t\tcase SWT.Selection: {", "-\t\t\t/* Fields set by Sash */", "-\t\t\tSelectionEvent event = new SelectionEvent (e);", "-\t\t\t((SelectionListener) eventListener).widgetSelected (event);\t\t\t", "-\t\t\te.x = event.x;", "-\t\t\te.y = event.y;", "-\t\t\te.doit = event.doit;", "+\t\tcase SWT.Activate: {", "+\t\t\t((ShellListener) eventListener).shellActivated(new ShellEvent(e));", "-\t\tcase SWT.DefaultSelection: {", "-\t\t\t((SelectionListener)eventListener).widgetDefaultSelected(new SelectionEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Dispose: {", "-\t\t\t((DisposeListener) eventListener).widgetDisposed(new DisposeEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.FocusIn: {", "-\t\t\t((FocusListener) eventListener).focusGained(new FocusEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.FocusOut: {", "-\t\t\t((FocusListener) eventListener).focusLost(new FocusEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Hide: {", "-\t\t\t((MenuListener) eventListener).menuHidden(new MenuEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Show: {", "-\t\t\t((MenuListener) eventListener).menuShown(new MenuEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.KeyDown: {", "-\t\t\tKeyEvent event = new KeyEvent(e);", "-\t\t\t((KeyListener) eventListener).keyPressed(event);", "-\t\t\te.doit = event.doit;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.KeyUp: {", "-\t\t\tKeyEvent event = new KeyEvent(e);", "-\t\t\t((KeyListener) eventListener).keyReleased(event);", "-\t\t\te.doit = event.doit;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.MouseDown: {", "-\t\t\t((MouseListener) eventListener).mouseDown(new MouseEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.MouseUp: {", "-\t\t\t((MouseListener) eventListener).mouseUp(new MouseEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.MouseDoubleClick: {", "-\t\t\t((MouseListener) eventListener).mouseDoubleClick(new MouseEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.MouseMove: {", "-\t\t\t((MouseMoveListener) eventListener).mouseMove(new MouseEvent(e));", "-\t\t\treturn;", "-\t\t}", "-\t\tcase SWT.Resize: {", "-\t\t\t((ControlListener) eventListener).controlResized(new ControlEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Move: {", "-\t\t\t((ControlListener) eventListener).controlMoved(new ControlEvent(e));", "+\t\tcase SWT.Arm: {", "+\t\t\t((ArmListener) eventListener).widgetArmed (new ArmEvent (e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Activate: {", "-\t\t\t((ShellListener) eventListener).shellActivated(new ShellEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Deactivate: {", "-\t\t\t((ShellListener) eventListener).shellDeactivated(new ShellEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Iconify: {", "-\t\t\t((ShellListener) eventListener).shellIconified(new ShellEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Deiconify: {", "-\t\t\t((ShellListener) eventListener).shellDeiconified(new ShellEvent(e));", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.Expand: {", "-\t\t\tif (eventListener instanceof TreeListener) {", "-\t\t\t\t((TreeListener) eventListener).treeExpanded(new TreeEvent(e));", "-\t\t\t} else {", "-\t\t\t\t((ExpandListener) eventListener).itemExpanded(new ExpandEvent(e));\t", "-\t\t\t}", "-\t\tcase SWT.Modify: {", "-\t\t\t((ModifyListener) eventListener).modifyText(new ModifyEvent(e));", "+\t\tcase SWT.Deactivate: {", "+\t\t\t((ShellListener) eventListener).shellDeactivated(new ShellEvent(e));", "-\t\tcase SWT.Verify: {", "-\t\t\t/* Fields set by Text, RichText */", "-\t\t\tVerifyEvent event = new VerifyEvent (e);", "-\t\t\t((VerifyListener) eventListener).verifyText (event);", "-\t\t\te.text = event.text;", "-\t\t\te.doit = event.doit;", "+\t\tcase SWT.Deiconify: {", "+\t\t\t((ShellListener) eventListener).shellDeiconified(new ShellEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.DefaultSelection: {", "+\t\t\t((SelectionListener)eventListener).widgetDefaultSelected(new SelectionEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Dispose: {", "+\t\t\t((DisposeListener) eventListener).widgetDisposed(new DisposeEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.DragDetect: {", "+\t\t\t((DragDetectListener) eventListener).dragDetected(new DragDetectEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Expand: {", "+\t\t\tif (eventListener instanceof TreeListener) {", "+\t\t\t\t((TreeListener) eventListener).treeExpanded(new TreeEvent(e));", "+\t\t\t} else {", "+\t\t\t\t((ExpandListener) eventListener).itemExpanded(new ExpandEvent(e));\t", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.FocusIn: {", "+\t\t\t((FocusListener) eventListener).focusGained(new FocusEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.FocusOut: {", "+\t\t\t((FocusListener) eventListener).focusLost(new FocusEvent(e));", "-\t\tcase SWT.Arm: {", "-\t\t\t((ArmListener) eventListener).widgetArmed (new ArmEvent (e));", "+\t\tcase SWT.Hide: {", "+\t\t\t((MenuListener) eventListener).menuHidden(new MenuEvent(e));", "-\t\tcase SWT.MouseExit: {", "-\t\t\t((MouseTrackListener) eventListener).mouseExit (new MouseEvent (e));", "+\t\tcase SWT.Iconify: {", "+\t\t\t((ShellListener) eventListener).shellIconified(new ShellEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.KeyDown: {", "+\t\t\t/* Fields set by Control */", "+\t\t\tKeyEvent event = new KeyEvent(e);", "+\t\t\t((KeyListener) eventListener).keyPressed(event);", "+\t\t\te.doit = event.doit;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.KeyUp: {", "+\t\t\t/* Fields set by Control */", "+\t\t\tKeyEvent event = new KeyEvent(e);", "+\t\t\t((KeyListener) eventListener).keyReleased(event);", "+\t\t\te.doit = event.doit;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Modify: {", "+\t\t\t((ModifyListener) eventListener).modifyText(new ModifyEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseDown: {", "+\t\t\t((MouseListener) eventListener).mouseDown(new MouseEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseDoubleClick: {", "+\t\t\t((MouseListener) eventListener).mouseDoubleClick(new MouseEvent(e));", "+\t\tcase SWT.MouseExit: {", "+\t\t\t((MouseTrackListener) eventListener).mouseExit (new MouseEvent (e));", "+\t\t\tbreak;", "+\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseMove: {", "+\t\t\t((MouseMoveListener) eventListener).mouseMove(new MouseEvent(e));", "+\t\t\treturn;", "+\t\t}", "+\t\tcase SWT.MouseUp: {", "+\t\t\t((MouseListener) eventListener).mouseUp(new MouseEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Move: {", "+\t\t\t((ControlListener) eventListener).controlMoved(new ControlEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Paint: {", "+\t\t\t/* Fields set by Control */", "+\t\t\tPaintEvent event = new PaintEvent (e);", "+\t\t\t((PaintListener) eventListener).paintControl (event);", "+\t\t\te.gc = event.gc;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Resize: {", "+\t\t\t((ControlListener) eventListener).controlResized(new ControlEvent(e));", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Selection: {", "+\t\t\t/* Fields set by Sash */", "+\t\t\tSelectionEvent event = new SelectionEvent (e);", "+\t\t\t((SelectionListener) eventListener).widgetSelected (event);\t\t\t", "+\t\t\te.x = event.x;", "+\t\t\te.y = event.y;", "+\t\t\te.doit = event.doit;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.Show: {", "+\t\t\t((MenuListener) eventListener).menuShown(new MenuEvent(e));", "-\t\t", "+\t\tcase SWT.Verify: {", "+\t\t\t/* Fields set by Text, RichText */", "+\t\t\tVerifyEvent event = new VerifyEvent (e);", "+\t\t\t((VerifyListener) eventListener).verifyText (event);", "+\t\t\te.text = event.text;", "+\t\t\te.doit = event.doit;", "+\t\t\tbreak;", "+\t\t}"]}], "num": 46682}