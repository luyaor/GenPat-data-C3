{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "809a4b8afa994f1934798c54598e7dab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd943ef22e2d0e611405fd097a4ddc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "80655505c378a6c724f27ab9fd5e89b9aec1adc6", "commitAfterChange": "c3babe73736dabc765cb0e6ff100cd524ced3529", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["+", "-\tdragging = false;", "+\t/*", "+\t* Feature in the Macintosh.  Some controls call TrackControl() or", "+\t* HandleControlClick() to track the mouse.  Unfortunately, mouse move", "+\t* events and the mouse up events are consumed.  The fix is to call the", "+\t* default handler and send a fake mouse up when tracking is finished.", "+\t* ", "+\t* NOTE: No mouse move events are sent while tracking.  There is no", "+\t* fix for this at this time.", "+\t*/", "+\tdisplay.grabControl = null;", "+\tdisplay.runDeferredEvents ();", "+\tdragging = tracking = false;", "+\tif (tracking) {", "+\t\torg.eclipse.swt.internal.carbon.Point outPt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tOS.GetGlobalMouse (outPt);", "+\t\tRect rect = new Rect ();", "+\t\tint window = OS.GetControlOwner (handle);", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tint x = outPt.h - rect.left;", "+\t\tint y = outPt.v - rect.top;", "+\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\tx -= rect.left;", "+\t\ty -=  rect.top;", "+\t\tshort [] button = new short [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);", "+\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\tsendMouseEvent (SWT.MouseUp, button [0], chord, (short)x, (short)y, modifiers, true);", "+\t}", "+\ttracking = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "875020b61aba09ae163b543af182fe1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6ac2130b77ef909fa41238333a6cbd8f016cd61b", "commitAfterChange": "88d91fdf95b443a3b7481cc8983f4e320a82d831", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["+\t/*", "+\t* Feature in the Macintosh.  Some controls call TrackControl() or", "+\t* HandleControlClick() to track the mouse.  Unfortunately, mouse move", "+\t* events and the mouse up events are consumed.  The fix is to call the", "+\t* default handler and send a fake mouse up when tracking is finished.", "+\t* ", "+\t* NOTE: No mouse move events are sent while tracking.  There is no", "+\t* fix for this at this time.", "+\t*/", "+\tif (wasExpanded) {", "+\t\torg.eclipse.swt.internal.carbon.Point outPt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tOS.GetGlobalMouse (outPt);", "+\t\tRect rect = new Rect ();", "+\t\tint window = OS.GetControlOwner (handle);", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tint x = outPt.h - rect.left;", "+\t\tint y = outPt.v - rect.top;", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\tx -= rect.left;", "+\t\ty -=  rect.top;", "+\t\tshort [] button = new short [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, button);", "+\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\tsendMouseEvent (SWT.MouseUp, button [0], chord, (short)x, (short)y, modifiers, false);", "+\t}"]}], "num": 29067}