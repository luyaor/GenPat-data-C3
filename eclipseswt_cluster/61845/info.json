{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "856ceb7d696b7a9a6739804604632bfb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1f49db9e0e31d7d84a4322a2a5fc25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 293, "signatureBeforeChange": " public static final int cairo_xlib_surface_create_for_bitmap(int dpy, int pixmap, int screen, int width, int height)", "signatureAfterChange": " public static final long cairo_xlib_surface_create_for_bitmap(long dpy, long pixmap, long screen, int width, int height)", "diff": ["-public static final native int /*long*/ _cairo_xlib_surface_create_for_bitmap(int /*long*/ dpy, int /*long*/ pixmap, int /*long*/ screen, int width, int height);", "-public static final int /*long*/ cairo_xlib_surface_create_for_bitmap(int /*long*/ dpy, int /*long*/ pixmap, int /*long*/ screen, int width, int height) {", "+public static final native long /*int*/ _cairo_xlib_surface_create_for_bitmap(long /*int*/ dpy, long /*int*/ pixmap, long /*int*/ screen, int width, int height);", "+public static final long /*int*/ cairo_xlib_surface_create_for_bitmap(long /*int*/ dpy, long /*int*/ pixmap, long /*int*/ screen, int width, int height) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7774ecbfa4493b1b3799bbfc13daf9e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 492, "signatureBeforeChange": " public static final synchronized native void gdk_pixbuf_render_pixmap_and_mask(int pixbuf, int[] pixmap_return, int[] mask_return, int alpha_threshold);", "signatureAfterChange": " public static final void gdk_pixbuf_render_pixmap_and_mask(int pixbuf, int[] pixmap_return, int[] mask_return, int alpha_threshold)", "diff": ["-public static final synchronized native void gdk_pixbuf_render_to_drawable_alpha(int /*long*/ pixbuf, int /*long*/ drawable, int src_x, int src_y, int dest_x, int dest_y, int width, int height, int alpha_mode, int alpha_threshold, int dither, int x_dither, int y_dither);", "-public static final synchronized native void gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold);", "+public static final native void _gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold);", "+public static final void gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold) {", "+\tlock.lock();", "+\ttry {", "+\t\t_gdk_pixbuf_render_pixmap_and_mask(pixbuf, pixmap_return, mask_return, alpha_threshold);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ec2983ac1f5f85e0a97e3548b36554", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 291, "signatureBeforeChange": " public static final int cairo_xlib_surface_create(int dpy, int drawable, int visual, int width, int height)", "signatureAfterChange": " public static final long cairo_xlib_surface_create(long dpy, long drawable, long visual, int width, int height)", "diff": ["-public static final native int /*long*/ _cairo_xlib_surface_create(int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height);", "-public static final int /*long*/ cairo_xlib_surface_create(int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height) {", "+public static final native long /*int*/ _cairo_xlib_surface_create(long /*int*/ dpy, long /*int*/ drawable, long /*int*/ visual, int width, int height);", "+public static final long /*int*/ cairo_xlib_surface_create(long /*int*/ dpy, long /*int*/ drawable, long /*int*/ visual, int width, int height) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dfdd847fb08f506a59d4d6fb51a5295", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 756, "methodNumberAfterChange": 756, "signatureBeforeChange": " public static final void gdk_pixbuf_render_pixmap_and_mask(int pixbuf, int[] pixmap_return, int[] mask_return, int alpha_threshold)", "signatureAfterChange": " public static final void gdk_pixbuf_render_pixmap_and_mask(long pixbuf, long[] pixmap_return, long[] mask_return, int alpha_threshold)", "diff": ["-public static final native void _gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold);", "-public static final void gdk_pixbuf_render_pixmap_and_mask(int /*long*/ pixbuf, int /*long*/[] pixmap_return, int /*long*/[] mask_return, int alpha_threshold) {", "+public static final native void _gdk_pixbuf_render_pixmap_and_mask(long /*int*/ pixbuf, long /*int*/[] pixmap_return, long /*int*/[] mask_return, int alpha_threshold);", "+public static final void gdk_pixbuf_render_pixmap_and_mask(long /*int*/ pixbuf, long /*int*/[] pixmap_return, long /*int*/[] mask_return, int alpha_threshold) {"]}], "num": 61845}