{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9bc8fb9d325e91c39083305682170e03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57fe2796c241e0fea2f6cbf64b52792b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7062e8fe1522be954953abe736d74a670f61f8b5", "commitAfterChange": "84b2f7384099fd4b35f3cdd74a78ca15b410fdfe", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  int monitorEnumProc (int hmonitor, int hdc, int lprcMonitor, int dwData)", "signatureAfterChange": "  int monitorEnumProc (int hmonitor, int hdc, int lprcMonitor, int dwData)", "diff": ["-\t\tMonitor[] newMonitors = new Monitor[monitors.length + 4];", "-\t\tSystem.arraycopy(monitors, 0, newMonitors, 0, monitors.length);", "+\t\tMonitor[] newMonitors = new Monitor [monitors.length + 4];", "+\t\tSystem.arraycopy (monitors, 0, newMonitors, 0, monitors.length);", "-\tMONITORINFO lpmi = new MONITORINFO();", "+\tMONITORINFO lpmi = new MONITORINFO ();", "-\tOS.GetMonitorInfo(hmonitor, lpmi);", "-\tMonitor monitor = new Monitor();", "-\tmonitor.handle = hmonitor;\t\t", "-\tmonitor.bounds = new Rectangle(lpmi.rcMonitor_left, lpmi.rcMonitor_top, lpmi.rcMonitor_right, lpmi.rcMonitor_bottom);", "-\tmonitor.clientArea = new Rectangle(lpmi.rcWork_left, lpmi.rcWork_top, lpmi.rcWork_right, lpmi.rcWork_bottom);\t\t\t\t", "-\tmonitors[monitorCount] = monitor;", "-\tmonitorCount++;", "+\tOS.GetMonitorInfo (hmonitor, lpmi);", "+\tMonitor monitor = new Monitor ();", "+\tmonitor.handle = hmonitor;", "+\tmonitor.x = lpmi.rcMonitor_left;", "+\tmonitor.y = lpmi.rcMonitor_top;", "+\tmonitor.width = lpmi.rcMonitor_right - lpmi.rcMonitor_left;", "+\tmonitor.height = lpmi.rcMonitor_bottom - lpmi.rcMonitor_top;", "+\tmonitor.clientX = lpmi.rcWork_left;", "+\tmonitor.clientY = lpmi.rcWork_top;", "+\tmonitor.clientWidth = lpmi.rcWork_right - lpmi.rcWork_left;", "+\tmonitor.clientHeight = lpmi.rcWork_bottom - lpmi.rcWork_top;", "+\tmonitors [monitorCount++] = monitor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c284d788d6b4bec318cc342f45729e33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "78468bca446d96c75fb7a488b69a2588651540b3", "commitAfterChange": "bd2fbb8410192877f5552bd4ede9ef550094b912", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 60, "signatureBeforeChange": " public Monitor [] getMonitors ()", "signatureAfterChange": " public Monitor [] getMonitors ()", "diff": ["-\treturn new Monitor [] {getPrimaryMonitor ()};", "+\tint count = 0;", "+\tMonitor [] monitors = new Monitor [1];", "+\tRect rect = new Rect ();", "+\tGDevice device = new GDevice ();", "+\tint gdevice = OS.GetDeviceList ();", "+\twhile (gdevice != 0) {", "+\t\tif (count >= monitors.length) {", "+\t\t\tMonitor [] newMonitors = new Monitor [monitors.length + 4];", "+\t\t\tSystem.arraycopy (monitors, 0, newMonitors, 0, monitors.length);", "+\t\t\tmonitors = newMonitors;", "+\t\t}", "+\t\tMonitor monitor = new Monitor ();", "+\t\tmonitor.handle = gdevice;", "+\t\tint [] ptr = new int [1];", "+\t\tOS.memcpy (ptr, gdevice, 4);", "+\t\tOS.memcpy (device, ptr [0], GDevice.sizeof);\t\t\t\t", "+\t\tmonitor.x = device.left;", "+\t\tmonitor.y = device.top;", "+\t\tmonitor.width = device.right - device.left;", "+\t\tmonitor.height = device.bottom - device.top;", "+\t\tOS.GetAvailableWindowPositioningBounds (gdevice, rect);", "+\t\tmonitor.clientX = rect.left;", "+\t\tmonitor.clientY = rect.top;", "+\t\tmonitor.clientWidth = rect.right - rect.left;", "+\t\tmonitor.clientHeight = rect.bottom - rect.top;", "+\t\tmonitors [count++] = monitor;", "+\t\tgdevice = OS.GetNextDevice (gdevice);\t\t", "+\t}", "+\tif (count < monitors.length) {", "+\t\tMonitor [] newMonitors = new Monitor [count];", "+\t\tSystem.arraycopy (monitors, 0, newMonitors, 0, count);", "+\t\tmonitors = newMonitors;", "+\t}\t", "+\treturn monitors;"]}], "num": 19197}