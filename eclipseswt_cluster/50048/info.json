{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e50fe92f40eb7fb901afb5b9d7cc87b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e678e61eca4f4a375a2fc0737498b61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c9754749744dc29a3f39ccdec08730e874ce10e9", "commitAfterChange": "971702072d3a583643cce28ee4c01191cf2083d3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void fillArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void fillArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;", "-\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;", "+\t\t\tpoints[index++] = (cos(startAngle + i, width) + cteX) >> 1;", "+\t\t\tpoints[index++] = (cteY - sin(startAngle + i, height)) >> 1;", "-\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;", "-\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;", "+\t\t\tx1 = cos(startAngle, width) + x + width/2;", "+\t\t\ty1 = -1 * sin(startAngle, height) + y + height/2;", "-\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;", "-\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t\t\t", "+\t\t\tx2 = cos(arcAngle, width) + x + width/2;", "+\t\t\ty2 = -1 * sin(arcAngle, height) + y + height/2; \t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d0c54783e525a3ac49396797c30171", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c9754749744dc29a3f39ccdec08730e874ce10e9", "commitAfterChange": "971702072d3a583643cce28ee4c01191cf2083d3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void drawArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "signatureAfterChange": " public void drawArc (int x, int y, int width, int height, int startAngle, int arcAngle)", "diff": ["-\t\t\tpoints[index++] = (Compatibility.cos(startAngle + i, width) + cteX) >> 1;", "-\t\t\tpoints[index++] = (cteY - Compatibility.sin(startAngle + i, height)) >> 1;", "+\t\t\tpoints[index++] = (cos(startAngle + i, width) + cteX) >> 1;", "+\t\t\tpoints[index++] = (cteY - sin(startAngle + i, height)) >> 1;", "-\t\t\tx1 = Compatibility.cos(startAngle, width) + x + width/2;", "-\t\t\ty1 = -1 * Compatibility.sin(startAngle, height) + y + height/2;", "+\t\t\tx1 = cos(startAngle, width) + x + width/2;", "+\t\t\ty1 = -1 * sin(startAngle, height) + y + height/2;", "-\t\t\tx2 = Compatibility.cos(arcAngle, width) + x + width/2;", "-\t\t\ty2 = -1 * Compatibility.sin(arcAngle, height) + y + height/2; \t\t", "+\t\t\tx2 = cos(arcAngle, width) + x + width/2;", "+\t\t\ty2 = -1 * sin(arcAngle, height) + y + height/2; \t\t"]}], "num": 50048}