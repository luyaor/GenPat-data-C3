{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11dfc4bdeddbba503b0155737cf37e7e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9f113930f3fad9c5438599e15225f43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 287, "methodNumberAfterChange": 291, "signatureBeforeChange": " boolean showLocation(int x, int line)", "signatureAfterChange": " boolean showLocation(Point point)", "diff": ["-boolean showLocation(int x, int line) {", "-\tint clientAreaWidth = getClientArea().width - leftMargin;", "+boolean showLocation(Point point) {", "+\tRectangle clientArea = getClientArea(); ", "+\tint clientAreaWidth = clientArea.width - leftMargin;", "-\tif (x < leftMargin) {", "+\tif (point.x < leftMargin) {", "-\t\tx = Math.max(horizontalScrollOffset * -1, x - horizontalIncrement);\t", "-\t\tscrolled = scrollHorizontalBar(x);", "-\t} else if (x >= clientAreaWidth) {", "+\t\tpoint.x = Math.max(horizontalScrollOffset * -1, point.x - horizontalIncrement);\t", "+\t\tscrolled = scrollHorizontalBar(point.x);", "+\t} else if (point.x >= clientAreaWidth) {", "-\t\tx = Math.min(lineCache.getWidth() - horizontalScrollOffset, x + horizontalIncrement);", "-\t\tscrolled = scrollHorizontalBar(x - clientAreaWidth);", "+\t\tpoint.x = Math.min(lineCache.getWidth() - horizontalScrollOffset, point.x + horizontalIncrement);", "+\t\tscrolled = scrollHorizontalBar(point.x - clientAreaWidth);", "-\tint verticalIncrement = getVerticalIncrement();", "-\tif (line < topIndex) {", "-\t\tscrolled = setVerticalScrollOffset(line * verticalIncrement, true);", "-\t} else if (line > getBottomIndex()) {", "-\t\tscrolled = setVerticalScrollOffset((line + 1) * verticalIncrement - getClientArea().height, true);", "+\tif (point.y < topMargin) {", "+\t\tscrolled = setVerticalScrollOffset(point.y + verticalScrollOffset, true);", "+\t} else if (point.y >= clientArea.height - bottomMargin) {", "+\t\t//TODO -lineHeight isn't right", "+\t\tint y = point.y + verticalScrollOffset - clientArea.height - lineHeight;", "+\t\tscrolled = setVerticalScrollOffset(y, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122d423f4199baae1f490c47f5d441c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "efad7558c82430b2a9689c82c8085bb2cfef6063", "commitAfterChange": "ad7faf2331d33c7f68735fad69a11baef3deb362", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r LRESULT WM_MOUSEWHEEL (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_MOUSEWHEEL (int wParam, int lParam)", "diff": ["+\t\tboolean vertical = verticalBar != null && verticalBar.getEnabled ();\r", "+\t\tboolean horizontal = horizontalBar != null && horizontalBar.getEnabled ();\r", "+\t\tint msg = (vertical) ? OS.WM_VSCROLL : (horizontal) ? OS.WM_HSCROLL : 0;\r", "+\t\tif (msg == 0) return result;\r", "+\t\tint [] value = new int [1];\r", "+\t\tOS.SystemParametersInfo (OS.SPI_GETWHEELSCROLLLINES, 0, value, 0);\r", "-\t\tint code = delta < 0 ? OS.SB_LINEDOWN : OS.SB_LINEUP;\r", "-\t\tdelta = Math.abs (delta);\r", "-\t\tif (delta < OS.WHEEL_DELTA) return result;\r", "-\t\tif (verticalBar != null) {\r", "-\t\t\tint [] value = new int [1];\r", "-   \t\t\tOS.SystemParametersInfo (OS.SPI_GETWHEELSCROLLLINES, 0, value, 0);\r", "-\t\t\tint count = value [0] * delta / OS.WHEEL_DELTA;\r", "-\t\t\tfor (int i=0; i<count; i++) {\r", "-\t\t\t\tOS.SendMessage (handle, OS.WM_VSCROLL, code, 0);\r", "-\t\t\t}\r", "-\t\t\treturn LRESULT.ZERO;\r", "+\t\tint code = 0, count = 0;\r", "+  \t\tif (value [0] == OS.WHEEL_PAGESCROLL) {\t\r", "+   \t\t\tcode = delta < 0 ? OS.SB_PAGEDOWN : OS.SB_PAGEUP;\r", "+   \t\t\tcount = 1;\r", "+  \t\t} else {\r", "+  \t\t\tcode = delta < 0 ? OS.SB_LINEDOWN : OS.SB_LINEUP;\r", "+  \t\t\tdelta = Math.abs (delta);\r", "+  \t\t\tif (delta < OS.WHEEL_DELTA) return result;\r", "+  \t\t\tif (msg == OS.WM_VSCROLL) {\r", "+  \t\t\t\tcount = value [0] * delta / OS.WHEEL_DELTA;\r", "+  \t\t\t} else {\r", "+  \t\t\t\tcount = delta / OS.WHEEL_DELTA;\r", "+  \t\t\t}\r", "+  \t\t}\r", "+\t\tfor (int i=0; i<count; i++) {\r", "+\t\t\tOS.SendMessage (handle, msg, code, 0);\r", "-\t\tif (horizontalBar != null) {\r", "-\t\t\tint count = delta / OS.WHEEL_DELTA;\r", "-\t\t\tfor (int i=0; i<count; i++) {\r", "-\t\t\t\tOS.SendMessage (handle, OS.WM_HSCROLL, code, 0);\r", "-\t\t\t}\r", "-\t\t\treturn LRESULT.ZERO;\r", "-\t\t}\r", "-\t\treturn result;\r", "+\t\treturn LRESULT.ZERO;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "737ed48e125283206373a0d60c8ed044", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/common/org/eclipse/swt/dnd/DropTargetEffect.java", "commitBeforeChange": "0320a828ffeb49b79c65b2f8c5df6825911c8beb", "commitAfterChange": "a6d0ab59f7ea811a879c758928f481ec825901de", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tWidget getItem(Tree tree, int x, int y)", "signatureAfterChange": " \t \tWidget getItem(Tree tree, int x, int y)", "diff": ["-\t\tPoint coordinates = new Point(x, y);", "-\t\tcoordinates = tree.toControl(coordinates);", "-\t\tItem item = tree.getItem(coordinates);", "+\t\tPoint point = new Point(x, y);", "+\t\tpoint = tree.toControl(point);", "+\t\tTreeItem item = tree.getItem(point);", "-\t\t\tif (area.contains(coordinates)) {", "-\t\t\t\t// Scan across the width of the tree.", "-\t\t\t\tfor (int x1 = area.x; x1 < area.x + area.width; x1++) {", "-\t\t\t\t\tPoint pt = new Point(x1, coordinates.y);", "-\t\t\t\t\titem = tree.getItem(pt);", "-\t\t\t\t\tif (item != null) {", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "+\t\t\tif (area.contains(point)) {", "+\t\t\t\tint treeBottom = area.y + area.height;", "+\t\t\t\titem = tree.getTopItem();", "+\t\t\t\twhile (item != null) {", "+\t\t\t\t\tRectangle rect = item.getBounds();", "+\t\t\t\t\tint itemBottom = rect.y + rect.height;", "+\t\t\t\t\tif (rect.y <= point.y && point.y <= itemBottom) return item;", "+\t\t\t\t\tif (itemBottom > treeBottom) break;", "+\t\t\t\t\titem = nextItem(tree, item);", "+\t\t\t\treturn null;"]}], "num": 26860}