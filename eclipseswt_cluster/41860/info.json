{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df6681a5c6a84ea405efc55179e93f44", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6dbcc17de9af8edc4d2c572d679264", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "536a3067a0d520c981d7210614769b62674b0849", "commitAfterChange": "1839e6271defc2990d8b1fe9c3cca72d2e7f3199", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r private int convertProcCallback(int widget, int pSelection, int pTarget, int pType_return, int ppValue_return, int pLength_return, int pFormat_return, int max_length, int client_data, int request_id)", "signatureAfterChange": "\r private int convertProcCallback(int widget, int pSelection, int pTarget, int pType_return, int ppValue_return, int pLength_return, int pFormat_return, int max_length, int client_data, int request_id)", "diff": ["-\r", "-\tif (pSelection == 0 )\r", "-\t\treturn 0;\r", "+\tif (pSelection == 0 ) return 0;\r", "-\tint motifDropAtom = Transfer.registerType(\"_MOTIF_DROP\\0\");\r", "+\tint xDisplay = getDisplay().xDisplay;\r", "+\tbyte[] bName = Converter.wcsToMbcs (null, \"_MOTIF_DROP\", true);\r", "+\tint motifDropAtom = OS.XmInternAtom (xDisplay, bName, true);\r", "-\tif (target[0] == Transfer.registerType(\"DELETE\\0\")) { // DELETE corresponds to a Move request\r", "+\tbName = Converter.wcsToMbcs (null, \"DELETE\", true); // DELETE corresponds to a Move request\r", "+\tint deleteAtom = OS.XmInternAtom (xDisplay, bName, true);\r", "+\tif (target[0] == deleteAtom) { \r", "-\t\tOS.memmove(pType_return,new int[]{Transfer.registerType(\"NULL\\0\")}, 4);\r", "+\t\tbName = Converter.wcsToMbcs (null, \"NULL\", true);\r", "+\t\tint nullAtom = OS.XmInternAtom (xDisplay, bName, true);\r", "+\t\tOS.memmove(pType_return,new int[]{nullAtom}, 4);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddec6e0d0572497c92d22f5eb284b551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "31d0622ae5f0aaeab4f73c52677b1f743494c824", "commitAfterChange": "7a67a43071d4868b77d14e6e1a4a8b1c56cc6ca0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private static boolean isGnomeDesktop(Display display)", "signatureAfterChange": "  private static boolean isGnomeDesktop()", "diff": ["-private static boolean isGnomeDesktop(Display display) {", "-\t/* disabled */", "-\treturn false;", "+private static boolean isGnomeDesktop() {", "-\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "-\tint atome_set = OS.gdk_atom_intern(name, true);", "-\treturn atome_set != 0;", "+\t* Bug in GTK.   gdk_atom_intern() ignores the only_if_exists", "+\t* argument.   It always creates a new atom if the requested", "+\t* one does not exist.  The workaround is to directly call", "+\t* XInternAtom(). ", "+\t* Note.  This introduces a dependency on X which is", "+\t* unwanted on GTK ports to non X platforms.  ", "+\tint display = OS.GDK_DISPLAY();", "+\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "+\tint atom = OS.XInternAtom(display, name, true);", "+\treturn atom != OS.None;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2392fede8262a4f70f51d685155b56f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "536a3067a0d520c981d7210614769b62674b0849", "commitAfterChange": "1839e6271defc2990d8b1fe9c3cca72d2e7f3199", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Object getContents(Transfer transfer)", "signatureAfterChange": "\r public Object getContents(Transfer transfer)", "diff": ["-\tString type = null;\r", "+\tbyte[] type = null;\r", "-\t\tif (OS.XmClipboardInquireLength(xDisplay, xWindow, supportedTypes[i].getBytes(), length) == 1 /*OS.XmClipboardSuccess*/ ) {\r", "-\t\t\ttype = supportedTypes[i];\r", "+\t\tbyte[] bName = Converter.wcsToMbcs(null, supportedTypes[i], true);\r", "+\t\tif (OS.XmClipboardInquireLength(xDisplay, xWindow, bName, length) == 1 /*OS.XmClipboardSuccess*/ ) {\r", "+\t\t\ttype = bName;\r", "-\t\tstatus = OS.XmClipboardRetrieve(xDisplay, xWindow, type.getBytes(), data, length[0], new int[1], new int[1]);\r", "+\t\tstatus = OS.XmClipboardRetrieve(xDisplay, xWindow, type, data, length[0], new int[1], new int[1]);\r", "-\tbyte[] bName = Converter.wcsToMbcs (null, type, false);\r", "-\ttransferData.type = OS.XmInternAtom (xDisplay, bName, false);\r", "+\ttransferData.type = OS.XmInternAtom (xDisplay, type, true);\r"]}], "num": 41860}