{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4299232fb8d0a4f7ce1bfbd1e05a295a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfba00cce83b78d1516f9ecd757434b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "commitAfterChange": "f668234fdd0d0970ccc5e1be0c9c3474d48930dc", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["+\tint wHandle= 0;", "+\tint[] macEvent= new int[6];", "+\twhile (OS.GetNextEvent(OS.updateMask, macEvent)) {", "+\t\tif (macEvent[0] == OS.updateEvt) {", "+\t\t\twHandle= macEvent[1];", "+\t\t\tupdateWindow(wHandle);", "+\t\t}", "+\t}", "+\t", "-\tMacEvent event= new MacEvent();", "-\twhile (OS.GetNextEvent(OS.updateMask, event.getData()))", "-\t\tdispatchEvent(event);", "+\tif (wHandle != 0) {", "+\t\tint port= OS.GetWindowPort(wHandle);", "+\t\tif (port != 0)", "+\t\t\tOS.QDFlushPortBuffer(port, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35d61497452b3d04ec9e3d371c2f41f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "commitAfterChange": "f668234fdd0d0970ccc5e1be0c9c3474d48930dc", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tprivate void flush(int wHandle)", "signatureAfterChange": "  \tvoid flush (int cHandle)", "diff": ["+", "+\tvoid flush (int cHandle) {", "+\t\tint wHandle= OS.GetControlOwner(cHandle);", "+\t\tif (wHandle != 0) {", "+\t\t\tint port= OS.GetWindowPort(wHandle);", "+\t\t\tif (port != 0)", "+\t\t\t\tOS.QDFlushPortBuffer(port, 0);", "+\t\t}", "+\t}", "-\tprivate void flush(int wHandle) {", "-\t\tif (wHandle != 0) {", "-\t\t\tint port= OS.GetWindowPort(wHandle);", "-\t\t\tif (port != 0)", "-\t\t\t\tOS.QDFlushPortBuffer(port, 0);", "-\t\t}", "-\t}"]}], "num": 19882}