{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f91512141230b4199c64c1478141ee1d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21207de70a6b1050500fee1e4de6606b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c75fa2aaa81cd96400f0b4207d26c662b67c5bce", "commitAfterChange": "68dd096752e238c658788f5395a8c9f209d457e7", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "  static int applicationProc(int id, intsel, int arg0, int arg1, int arg2, int arg3)", "signatureAfterChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "diff": ["+static int /*long*/ applicationProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1) {", "+\tDisplay display = getCurrent();", "+\tif (display != null) {", "+\t\tif (sel == OS.sel_application_openFile_) {", "+\t\t\tString file = new NSString(arg1).getString();", "+\t\t\tEvent event = new Event();", "+\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\tevent.text = file;", "+\t\t\tdisplay.postEvent(event);", "+\t\t\treturn 1;", "+\t\t} else if (sel == OS.sel_application_openFiles_) {", "+\t\t\tNSArray files = new NSArray(arg1);", "+\t\t\tint /*long*/ count = files.count();", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "+\t\t\t\tEvent event = new Event();", "+\t\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\t\tevent.text = file;", "+\t\t\t\tdisplay.postEvent(event);", "+\t\t\t}", "+\t\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "+\t\t} ", "+\t\telse if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "+\t\t\treturn 1;", "+\t\t}", "+\t}", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9895969715cf6011919ab2a53c4767f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d4ce2fe3631bc060a94000536e7454e9ee602a3d", "commitAfterChange": "be954920b3bf51c2767d57c5bc9db3ba96994f28", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "diff": ["-\tif (display != null) {", "-\t\tif (sel == OS.sel_application_openFile_) {", "-\t\t\tString file = new NSString(arg1).getString();", "+", "+\tif (display == null && id != applicationDelegate.id) {", "+\t\tobjc_super super_struct = new objc_super ();", "+\t\tsuper_struct.receiver = id;", "+\t\tsuper_struct.super_class = OS.objc_msgSend (id, OS.sel_superclass);", "+\t\treturn OS.objc_msgSendSuper (super_struct, sel, arg0, arg1);", "+\t}", "+", "+\t// Forward to the AWT, if necessary.", "+\tif (currAppDelegate != null) {", "+\t\tif (currAppDelegate.respondsToSelector(sel)) OS.objc_msgSend(currAppDelegate.id, sel, arg0, arg1);", "+\t} ", "+", "+\tif (sel == OS.sel_application_openFile_) {", "+\t\tString file = new NSString(arg1).getString();", "+\t\tEvent event = new Event();", "+\t\tevent.text = file;", "+\t\tdisplay.sendEvent(SWT.OpenDocument, event);", "+\t\treturn 1;", "+\t} else if (sel == OS.sel_application_openFiles_) {", "+\t\tNSArray files = new NSArray(arg1);", "+\t\tint /*long*/ count = files.count();", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "-\t\t\treturn 1;", "-\t\t} else if (sel == OS.sel_application_openFiles_) {", "-\t\t\tNSArray files = new NSArray(arg1);", "-\t\t\tint /*long*/ count = files.count();", "-\t\t\tfor (int i=0; i<count; i++) {", "-\t\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "-\t\t\t\tEvent event = new Event();", "-\t\t\t\tevent.text = file;", "-\t\t\t\tdisplay.sendEvent(SWT.OpenDocument, event);", "-\t\t\t}", "-\t\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "-\t\t} ", "-\t\telse if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "-\t\t\treturn 1;", "-\t\telse if (sel == OS.sel_applicationShouldTerminate_) {", "-\t\t\tif (!display.disposing) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tdisplay.sendEvent (SWT.Close, event);", "-\t\t\t\tif (event.doit) {", "-\t\t\t\t\tdisplay.dispose();", "-\t\t\t\t\treturn OS.NSTerminateNow;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn OS.NSTerminateCancel;", "-\t\t}", "+\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "+\t}  else if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "+\t\treturn 1;"]}], "num": 28535}