{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "517f089fd32954d518d1fabf0b914c82", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fac1d4df789b09dd573ecf640ba68787", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "commitAfterChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem)", "diff": ["-\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "+\tTreeItem addChild (Node node, TreeItem superItem) {", "-\t\tNode nameAttrib = gen.getNameAttribute(node);", "-\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "-\t\titem.setText(text);", "+\t\tNode idAttrib = gen.getIDAttribute(node);", "+\t\titem.setText(idAttrib != null ? idAttrib.getNodeValue() : name);", "-\t\tNode extra = (Node)extras.get(gen.getKey(node));", "-\t\tif (extra != null) {", "-\t\t\tNamedNodeMap attributes = extra.getAttributes();", "-\t\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "-\t\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "-\t\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "-\t\t\t\tNode attrib = attributes.item(i);", "-\t\t\t\tString attriName = attrib.getNodeName();", "-\t\t\t\tif (attriName.equals(\"swt_gen\") || !attriName.startsWith(\"swt_\")) continue;", "-\t\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "-\t\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "-\t\t\t}", "-\t\t}", "+\t\tNode gen = attributes.getNamedItem(\"swt_gen\");", "+\t\titem.setChecked(gen != null && gen.getNodeValue().equals(\"true\"));", "-\t\t\tif (attrib.equals(nameAttrib)) continue;", "-\t\t\tint columnIndex = getColumnFor(attrib.getNodeName());", "-\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\t\tif (attrib.equals(idAttrib)) continue;", "+\t\t\tString attribName = attrib.getNodeName();", "+\t\t\tif (attribName.equals(\"swt_gen\")) continue;", "+\t\t\titem.setText(getColumnFor(attribName), attrib.getNodeValue());", "-\t\t\taddChild(childNodes.item(i), item, extras);", "+\t\t\taddChild(childNodes.item(i), item);", "-        checkPath(item.getParentItem(), item.getChecked(), false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1197625fbc33b1bbe19e8f62081b42a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "eb67f2c6e29498837f2808cbf8605b4ae090f4cd", "commitAfterChange": "c0eab291930878b5b0686e9f1e20996a4f2d6348", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["+", "+\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "+\t\tString name = node.getNodeName();", "+\t\tif (name.equals(\"#text\")) return null;", "+\t\tTreeItem parentItem = null;", "+\t\tTreeItem[] items = superItem.getItems();", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tif (name.equals(items[i].getData())) {", "+\t\t\t\tparentItem = items[i];", "+\t\t\t\tbreak;", "+\t\tif (parentItem == null) {", "+\t\t\tparentItem = new TreeItem(superItem, SWT.NONE);", "+\t\t\tparentItem.setData(name);", "+\t\t\tparentItem.setText(getPrettyText(name));", "+\t\t}", "+\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\tTreeItem item = new TreeItem(parentItem, SWT.NONE);", "+\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "+\t\titem.setText(text);", "+\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\tif (extra != null) {", "+\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "+\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "+\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "+\t\t\t\titem.setChecked(true);", "+\t\t\t}", "+\t\t}", "+\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "+\t\t\tNode attrib = attributes.item(i);", "+\t\t\ttext = attrib.getNodeName();", "+\t\t\tif (attrib.equals(nameAttrib)) continue;", "+\t\t\tint columnIndex = getColumnFor(text);", "+\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\t}", "+\t\tNodeList childNodes = node.getChildNodes();", "+\t\tfor (int i = 0; i < childNodes.getLength(); i++) {", "+\t\t\taddChild(childNodes.item(i), item, extras);", "+\t\t}", "+\t\treturn item;", "-\t", "-\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "-\t\tString name = node.getNodeName();", "-\t\tif (name.equals(\"#text\")) return null;", "-\t\tTreeItem parentItem = null;", "-\t\tTreeItem[] items = superItem.getItems();", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\tif (name.equals(items[i].getData())) {", "-\t\t\t\tparentItem = items[i];", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\tif (parentItem == null) {", "-\t\t\tparentItem = new TreeItem(superItem, SWT.NONE);", "-\t\t\tparentItem.setData(name);", "-\t\t\tparentItem.setText(getPrettyText(name));", "-\t\t}", "-\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\tTreeItem item = new TreeItem(parentItem, SWT.NONE);", "-\t\tNode nameAttrib = getNameAttrib(attributes);", "-\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "-\t\titem.setText(text);", "-\t\tNode extra = (Node)extras.get(getKey(node));", "-\t\tif (extra != null) {", "-\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "-\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\titem.setChecked(true);", "-\t\t\t}", "-\t\t}", "-\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "-\t\t\tNode attrib = attributes.item(i);", "-\t\t\ttext = attrib.getNodeName();", "-\t\t\tif (attrib.equals(nameAttrib)) continue;", "-\t\t\tint columnIndex = getColumnFor(text);", "-\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "-\t\t}", "-\t\tNodeList childNodes = node.getChildNodes();", "-\t\tfor (int i = 0; i < childNodes.getLength(); i++) {", "-\t\t\taddChild(childNodes.item(i), item, extras);", "-\t\t}", "-\t\treturn item;"]}], "num": 52905}