{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9c32818c5cae2b024f28b9181dadbf7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6644d831b0f183892944d6f6e330899b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 24, "signatureBeforeChange": " TreeItem2[] getAllItems()", "signatureAfterChange": " int getContentWidth(int itemIndex)", "diff": ["+ */", "+int getContentWidth(int itemIndex) {", "+\tTreeItem2 item = getRoot().getVisibleItem(itemIndex);", "+\tint paintStopX = 0;", "+", "+\tif (item != null) {", "+\t\tpaintStopX = item.getPaintStopX();", "+\t}", "+\treturn paintStopX;", "+}", "-}", "-TreeItem2[] getAllItems() {", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 0;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAllDescendents();", "-\t\tcount += childResults[i].length;", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy(childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "566170ecd62397866c756d0df2bfed0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 46, "signatureBeforeChange": " TreeItem2[] computeAllDescendents ()", "signatureAfterChange": " void makeVisible()", "diff": ["- */", "-TreeItem2[] computeAllDescendents () {", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 1;\t/* self */", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAllDescendents ();", "-\t\tcount += childResults[i].length;", "-\t}", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tresult[index++] = this;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy (childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\t}", "-\treturn result;", "+ */", "+void makeVisible() {", "+\tTreeItem2 parentItem = getParentItem();", "+\t", "+\tif (isVisible() == false && parentItem != null) {", "+\t\tgetParent().expand(parentItem, true);\t\t\t// have to call Tree.expand directly in order to trigger Expand event", "+\t\tparentItem.makeVisible();"]}], "num": 38293}