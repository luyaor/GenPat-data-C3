{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb2430277631770fb2dea40b51ecccf0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60cefffca9fc5d42956823b276757f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "4e2aa03a056cdb0b186f24b54b9a9e25d8e80922", "commitAfterChange": "8f74400627fe378267067a48a1bbad7ee433b09b", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 212, "signatureBeforeChange": " void handlePaint(Event event)", "signatureAfterChange": " void handlePaint(Event event)", "diff": ["+\tif (blockSelection && blockXLocation != -1) {", "+\t\tgc.setBackground(getSelectionBackground());", "+\t\tint firstLine = getLineIndex(blockYAnchor - getVerticalScrollOffset());", "+\t\tint lastLine = getLineIndex(blockYLocation - getVerticalScrollOffset()); ", "+\t\tif (firstLine > lastLine) {", "+\t\t\tint temp = firstLine;", "+\t\t\tfirstLine = lastLine;", "+\t\t\tlastLine = temp;", "+\t\t}", "+\t\tint left = blockXAnchor - horizontalScrollOffset;", "+\t\tint top = getLinePixel(firstLine);", "+\t\tint right = blockXLocation - horizontalScrollOffset;", "+\t\tint bottom = getLinePixel(lastLine + 1);", "+\t\tgc.drawRectangle(left, top, right - left, bottom - top);", "+\t\tgc.setAdvanced(true);", "+\t\tgc.setAlpha(100);", "+\t\tgc.fillRectangle(left, top, right - left, bottom - top);", "+\t\tgc.setAdvanced(false);//TODO in GDP+: CopyArea fails if GC isn't reset ", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c6bf88f0ca5530a3d29130734a2256", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "4e2aa03a056cdb0b186f24b54b9a9e25d8e80922", "commitAfterChange": "8f74400627fe378267067a48a1bbad7ee433b09b", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void copy(int clipboardType)", "signatureAfterChange": " public void copy(int clipboardType)", "diff": ["+\tif (blockSelection && blockXLocation != -1) {", "+\t\tint firstLine = getLineIndex(blockYAnchor - getVerticalScrollOffset());", "+\t\tint lastLine = getLineIndex(blockYLocation - getVerticalScrollOffset()); ", "+\t\tif (firstLine > lastLine) {", "+\t\t\tint temp = firstLine;", "+\t\t\tfirstLine = lastLine;", "+\t\t\tlastLine = temp;", "+\t\t}", "+\t\tint left = blockXAnchor;", "+\t\tint right = blockXLocation;", "+\t\tif (left > right) {", "+\t\t\tleft = blockXLocation;", "+\t\t\tright = blockXAnchor;", "+\t\t}", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tString lineDelimiter = PlatformLineDelimiter;", "+\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "+\t\t\t//TODO BAD DOESN'T HANDLE BIDI", "+\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "+\t\t\tint end = getOffsetAtPoint(right, 0, lineIndex);", "+\t\t\tString text = content.getTextRange(start, end - start);", "+\t\t\tbuffer.append(text);", "+\t\t\tif (lineIndex < lastLine) buffer.append(lineDelimiter); ", "+\t\t}", "+\t\tif (buffer.length() > 0) {", "+\t\t\t//TODO RTF support - refactor Writers", "+\t\t\tTextTransfer plainTextTransfer = TextTransfer.getInstance();", "+//\t\t\tTextWriter plainTextWriter = new TextWriter(start, length);", "+//\t\t\tString plainText = getPlatformDelimitedText(plainTextWriter);", "+\t\t\tString plainText = buffer.toString();", "+\t\t\tObject[] data = new Object[]{plainText};", "+\t\t\tTransfer[] types = new Transfer[]{plainTextTransfer};", "+\t\t\tclipboard.setContents(data, types, clipboardType);", "+\t\t}", "+\t\treturn;", "+\t}"]}], "num": 6776}