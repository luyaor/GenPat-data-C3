{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd2fa1344b9a4d57de8b062f70b40ac8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b80425d1f4c0dcdbfe2394ab85f2dbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "f7feddd1f8f228c51cfa762dae98caf617b99fa6", "commitAfterChange": "2df8e1e4bb5d34a77fd51370ebed5b9622bfedee", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": " void doBlockSelectionMoveByKeyboard(int direction)", "signatureAfterChange": " void doBlockLine(boolean up)", "diff": ["-void doBlockSelectionMoveByKeyboard(int direction) {", "-\tif (blockSelection) {", "-\t\tif (blockXLocation == -1) {", "-\t\t\tsetBlockSelectionOffset(caretOffset);", "-\t\tint x = blockXLocation - horizontalScrollOffset;", "-\t\tint y = blockYLocation - getVerticalScrollOffset();", "-\t\tint lineIndex = getLineIndex(y);", "-\t\tswitch (direction) {", "-\t\t\tcase SWT.UP:", "-\t\t\t\tif (lineIndex > 0) {", "-\t\t\t\t\ty -= getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.DOWN:", "-\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\tif (lineIndex < lineCount - 1) {", "-\t\t\t\t\ty += getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase ST.COLUMN_PREVIOUS: {", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, null, true);", "-\t\t\t\tint newOffset = offset != -1 ? getClusterPrevious(offset, lineIndex) : offset;  ", "-\t\t\t\tif (offset != newOffset) {", "-\t\t\t\t\tx = getPointAtOffset(newOffset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx -= 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase ST.COLUMN_NEXT: {", "-\t\t\t\tint[] trailing = new int[1];", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, trailing, true);", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tString line = content.getLine(lineIndex);", "-\t\t\t\t\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\t\t\t\t\tif (offset + trailing[0] - lineOffset < line.length()) {", "-\t\t\t\t\t\toffset = getClusterNext(offset + trailing[0], lineIndex);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\toffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tx = getPointAtOffset(offset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx += 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+}", "+void doBlockLine(boolean up) {", "+\tif (blockXLocation == -1) setBlockSelectionOffset(caretOffset);", "+\tint y = blockYLocation - getVerticalScrollOffset();", "+\tint lineIndex = getLineIndex(y);", "+\tif (up) {", "+\t\tif (lineIndex > 0) {", "+\t\t\ty = getLinePixel(lineIndex - 1);", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tif (y < topMargin) {", "+\t\t\t\tscrollVertical(y - topMargin, true);", "-\t\tif (x != (blockXLocation - horizontalScrollOffset) || y != (blockYLocation - getVerticalScrollOffset())) {", "-\t\t\tsetBlockSelectionLocation(x, y);", "-\t\t\t//TODO BETTER AUTO SCROLL ", "-\t\t\tshowCaret();", "+\t} else {", "+\t\tint lineCount = content.getLineCount();", "+\t\tif (lineIndex + 1 < lineCount) {", "+\t\t\ty = getLinePixel(lineIndex + 2) - 1;", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tint bottom = clientAreaHeight - bottomMargin; ", "+\t\t\tif (y > bottom) {", "+\t\t\t\tscrollVertical(y - bottom, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2773a60ce81649b161983cf4cc15de53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "770424cb90ac09b444a2b31992d2c7b5853208d6", "commitAfterChange": "270369a2774c9adb72d20072ee39a162882a5dda", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, 0, height, 0, bmi, OS.DIB_RGB_COLORS);", "+\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, 0, height, null, bmi, OS.DIB_RGB_COLORS);", "-\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\t\tint /*long*/ lpvBits = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, imageSize);", "-\t\t\tif (lpvBits == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, 0, height, lpvBits, bmi, OS.DIB_RGB_COLORS);", "-\t\t\tOS.MoveMemory(data, lpvBits, imageSize);", "+\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, 0, height, data, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, height, height, lpvBits, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tOS.MoveMemory(maskData, lpvBits, imageSize);", "+\t\t\t\tOS.GetDIBits(hBitmapDC, hBitmap, height, height, maskData, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tOS.GetDIBits(hBitmapDC, info.hbmMask, 0, height, 0, bmi, OS.DIB_RGB_COLORS);", "+\t\t\t\tOS.GetDIBits(hBitmapDC, info.hbmMask, 0, height, null, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tint /*long*/ lpvMaskBits = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, imageSize);", "-\t\t\t\tif (lpvMaskBits == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.GetDIBits(hBitmapDC, info.hbmMask, 0, height, lpvMaskBits, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tOS.MoveMemory(maskData, lpvMaskBits, imageSize);\t", "-\t\t\t\tOS.HeapFree(hHeap, 0, lpvMaskBits);", "+\t\t\t\tOS.GetDIBits(hBitmapDC, info.hbmMask, 0, height, maskData, bmi, OS.DIB_RGB_COLORS);", "-\t\t\tOS.HeapFree(hHeap, 0, lpvBits);", "-\t\t\t\tOS.GetDIBits(hBitmapDC, handle, 0, height, 0, bmi, OS.DIB_RGB_COLORS);", "+\t\t\t\tOS.GetDIBits(hBitmapDC, handle, 0, height, null, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\t\t\tint /*long*/ lpvBits = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, imageSize);", "-\t\t\t\tif (lpvBits == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.GetDIBits(hBitmapDC, handle, 0, height, lpvBits, bmi, OS.DIB_RGB_COLORS);", "-\t\t\t\tOS.MoveMemory(data, lpvBits, imageSize);", "-\t\t\t\tOS.HeapFree(hHeap, 0, lpvBits);", "+\t\t\t\tOS.GetDIBits(hBitmapDC, handle, 0, height, data, bmi, OS.DIB_RGB_COLORS);"]}], "num": 34291}