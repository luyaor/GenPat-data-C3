{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f1288ae441fbd721c6c2e17081604a0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12205d7b258213718b06cc89903a833b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "6eef1897321cfe779aa47a489d4f424d7e92a291", "commitAfterChange": "51323e01859c51baa6301398c6c3f54347b47cb4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  @Override void createHandle (int index)", "signatureAfterChange": "  @Override void createHandle (int index)", "diff": ["-\t\t\tGdkColor color = background.handle;", "-\t\t\tGdkRGBA rgba = new GdkRGBA();", "-\t\t\trgba.alpha = 1;", "-\t\t\trgba.red = (color.red & 0xFFFF) / (float)0xFFFF;", "-\t\t\trgba.green = (color.green & 0xFFFF) / (float)0xFFFF;", "-\t\t\trgba.blue = (color.blue & 0xFFFF) / (float)0xFFFF;", "-\t\t\tOS.gtk_widget_override_background_color (handle, OS.GTK_STATE_FLAG_NORMAL, rgba);", "+\t\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (handle);", "+\t\t\tdouble alpha = (background.getAlpha() & 0xFFFF) / (float)0xFFFF;", "+\t\t\tString css = \"GtkWindow {background-color: rgba(\" + background.getRed() +\", \" +", "+\t\t\t\tbackground.getGreen() +\", \" + background.getBlue() +\", \" + alpha + \");}\";", "+\t\t\tgtk_css_provider_load_from_css (context, css);", "+\t\t\tOS.gtk_style_context_invalidate (context);", "-\t\tOS.gtk_widget_set_app_paintable (handle, true);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211b762d3d75479e1f901a110541bc50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5615da8f551c03efc897817665468fdea1e24c53", "commitAfterChange": "7c1b8eca79b80c0d72e829a1c54df2844c3fbc3c", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": "  void setBackgroundColor (long handle, GdkColor color)", "signatureAfterChange": "  void setBackgroundColor (long handle, GdkColor color)", "diff": ["-\t\tGdkRGBA rgba = null;", "-\t\tdouble alpha = 1;", "+\t\t", "-\t\t\t\talpha = 0;", "-\t\tif (color != null) {", "-\t\t\trgba = new GdkRGBA ();", "-\t\t\trgba.alpha = alpha;", "-\t\t\trgba.red = (color.red & 0xFFFF) / (float)0xFFFF;", "-\t\t\trgba.green = (color.green & 0xFFFF) / (float)0xFFFF;", "-\t\t\trgba.blue = (color.blue & 0xFFFF) / (float)0xFFFF;", "-\t\t}", "-\t\tOS.gtk_widget_override_background_color (handle, OS.GTK_STATE_FLAG_NORMAL, rgba);", "+\t    String css =\"GtkWidget {\\n\" +", "+\t    \" background-color: rgb(\"+((color.red >> 8) & 0xFF)+\",\"+((color.green >> 8) & 0xFF)+\",\"+((color.blue >> 8) & 0xFF)+\");\\n\" +", "+\t    \"}\\n\";", "+\t    byte[] css_data = Converter.wcsToMbcs (null, css, true);", "+\t    long /*int*/ context = OS.gtk_widget_get_style_context(handle);", "+\t    long /*int*/ provider = OS.gtk_css_provider_new ();", "+\t    OS.gtk_css_provider_load_from_data (provider, css_data, -1, null);", "+\t    OS.gtk_style_context_add_provider (context, provider, OS.GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);", "+\t    OS.g_object_unref (provider);\t"]}], "num": 45350}