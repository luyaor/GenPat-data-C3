{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06785c38c84fb11cebee50f33db333d5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6509412768d4d808d9785a259e547494", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "5c4d630f767020e8173b62231f9e8922cb4aaec8", "commitAfterChange": "319f831d454b64123e2fb33ab181ee0ace6b1cf5", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 124, "signatureBeforeChange": "  int OnStatusChange(int aWebProgress, int aRequest, int aStatus, int aMessage)", "signatureAfterChange": "  int OnStatusChange(int aWebProgress, int aRequest, int aStatus, int aMessage)", "diff": ["-\t/*", "-\t* Feature in Mozilla.  Navigating to an HTTPS link without a user profile", "-\t* set causes a crash.  The workaround is to abort attempts to navigate to", "-\t* HTTPS pages if a profile is not being used.", "-\t* ", "-\t* Most navigation requests for HTTPS pages are handled in OnStartURIOpen.", "-\t* However, https page requests that do not initially specify https as their", "-\t* protocol will get past this check since they are resolved afterwards.", "-\t* The workaround is to check the url whenever there is a status change, and", "-\t* to abort any detected https requests if a profile is not being used.", "-\t*/", "-\tnsIRequest request = new nsIRequest(aRequest);", "-\tint /*long*/ aName = XPCOM.nsEmbedCString_new();", "-\trequest.GetName(aName);", "-\tint length = XPCOM.nsEmbedCString_Length(aName);", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get(aName);", "-\tbyte[] bytes = new byte[length];", "-\tXPCOM.memmove(bytes, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aName);", "-\tString value = new String(bytes);", "-\tif (!usingProfile && value.startsWith(XPCOM.HTTPS_PROTOCOL)) {", "-\t\trequest.Cancel(XPCOM.NS_BINDING_ABORTED);", "-\t\treturn XPCOM.NS_OK;", "-\t}", "-", "-\t", "-\tlength = XPCOM.strlen_PRUnichar(aMessage);", "+\tint length = XPCOM.strlen_PRUnichar(aMessage);", "-\tfor (int i = 0; i < statusTextListeners.length; i++)", "+\tfor (int i = 0; i < statusTextListeners.length; i++) {", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c31c06405272f5836983e631cabb62", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "a2131700c211bed42a93ba7599f768ad135cdbc1", "commitAfterChange": "8b59e26dd26f719b516cb26d636b8bb45c1be0d6", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 126, "signatureBeforeChange": "  int OnStatusChange(int aWebProgress, int aRequest, int aStatus, int aMessage)", "signatureAfterChange": "  int OnStatusChange(int aWebProgress, int aRequest, int aStatus, int aMessage)", "diff": ["-\t/*", "-\t* Feature in Mozilla.  Navigating to an HTTPS link without a user profile", "-\t* set causes a crash.  The workaround is to abort attempts to navigate to", "-\t* HTTPS pages if a profile is not being used.", "-\t* ", "-\t* Most navigation requests for HTTPS pages are handled in OnStartURIOpen.", "-\t* However, https page requests that do not initially specify https as their", "-\t* protocol will get past this check since they are resolved afterwards.", "-\t* The workaround is to check the url whenever there is a status change, and", "-\t* to abort any detected https requests if a profile is not being used.", "-\t*/", "-\tnsIRequest request = new nsIRequest(aRequest);", "-\tint /*long*/ aName = XPCOM.nsEmbedCString_new();", "-\trequest.GetName(aName);", "-\tint length = XPCOM.nsEmbedCString_Length(aName);", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get(aName);", "-\tbyte[] bytes = new byte[length];", "-\tXPCOM.memmove(bytes, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aName);", "-\tString value = new String(bytes);", "-\tif (!usingProfile && value.startsWith(XPCOM.HTTPS_PROTOCOL)) {", "-\t\trequest.Cancel(XPCOM.NS_BINDING_ABORTED);", "-\t\treturn XPCOM.NS_OK;", "-\t}", "-", "-", "-\tlength = XPCOM.strlen_PRUnichar(aMessage);", "+\tint length = XPCOM.strlen_PRUnichar(aMessage);", "-\tfor (int i = 0; i < statusTextListeners.length; i++)", "+\tfor (int i = 0; i < statusTextListeners.length; i++) {", "-", "+\t}"]}], "num": 24184}