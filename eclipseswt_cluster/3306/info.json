{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5ef5af50c81605969488f9c9565d1c1", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a53f284209feeaaeb95256ed887d6f58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "c52a498d1686cfc621ac513da35a69d8c16a84ba", "commitAfterChange": "d0cfa98c33dae187ddb28fd1d4be338006975a20", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\t/* Initialize LTR and RTL CTParagraphStyleRef */", "-\tCTParagraphStyleSetting setting = new CTParagraphStyleSetting();", "-\tsetting.spec = OS.kCTParagraphStyleSpecifierBaseWritingDirection;", "-\tsetting.valueSize = 1;", "-\tsetting.value = OS.malloc(setting.valueSize);", "-\tOS.memmove(setting.value, new byte[] {OS.kCTWritingDirectionLeftToRight}, setting.valueSize);", "-\tint /*long*/ settingsPtr = OS.malloc(CTParagraphStyleSetting.sizeof);", "-\tOS.memmove(settingsPtr, setting, CTParagraphStyleSetting.sizeof);", "-\tparagraphStyleLTR = OS.CTParagraphStyleCreate(settingsPtr, 1);", "-\tOS.free(setting.value);", "-\tOS.free(settingsPtr);", "-\tsetting.value = OS.malloc(setting.valueSize);", "-\tOS.memmove(setting.value, new byte[] {OS.kCTWritingDirectionRightToLeft}, setting.valueSize);", "-\tsettingsPtr = OS.malloc(CTParagraphStyleSetting.sizeof);", "-\tOS.memmove(settingsPtr, setting, CTParagraphStyleSetting.sizeof);", "-\tparagraphStyleRTL = OS.CTParagraphStyleCreate(settingsPtr, 1);", "-\tOS.free(setting.value);", "-\tOS.free(settingsPtr);", "+\tparagraphStyle = (NSMutableParagraphStyle)new NSMutableParagraphStyle().alloc().init();", "+\tparagraphStyle.setAlignment(OS.NSLeftTextAlignment);", "+\tparagraphStyle.setLineBreakMode(OS.NSLineBreakByClipping);", "+\tNSArray tabs = new NSArray(new NSArray().alloc().init());", "+\tparagraphStyle.setTabStops(tabs);", "+\ttabs.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86039d034f95a78dd5d8f9a10291660d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "c2fae840e2c4504c79425ea45901026fd92628c1", "commitAfterChange": "3fa364044e14640667896a5a3291a209ebfed153", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color)", "diff": ["-\t\tint /*long*/ newPen = 0;", "-\t\t\tnewPen = Gdip.Pen_new(color, run.underlineThickness);", "-\t\t\tGdip.Graphics_DrawLine(graphics, newPen, x, underlineY, x + run.width, underlineY);", "+\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, underlineY, run.width, run.underlineThickness);", "-\t\t\tif (newPen == 0 || run.strikeoutThickness != run.underlineThickness) {", "-\t\t\t\tif (newPen != 0) {", "-\t\t\t\t\tGdip.Pen_delete(newPen);", "-\t\t\t\t}", "-\t\t\t\tnewPen = Gdip.Pen_new(color, run.strikeoutThickness);", "-\t\t\t}", "-\t\t\tGdip.Graphics_DrawLine(graphics, newPen, x, strikeoutY, x + run.width, strikeoutY);", "+\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, strikeoutY, run.width, run.strikeoutThickness);", "-\t\tGdip.Pen_delete(newPen);", "-\t\tint /*long*/ newPen = 0;", "-\t\tint /*long*/ oldPen = 0;", "+\t\tint /*long*/ brush = OS.CreateSolidBrush((int)/*64*/color);", "+\t\tRECT rect = new RECT();", "-\t\t\tnewPen = OS.CreatePen(OS.PS_SOLID, run.underlineThickness, (int)/*64*/color);", "-\t\t\toldPen = OS.SelectObject(graphics, newPen);", "-\t\t\tOS.MoveToEx(graphics, x, underlineY, 0);", "-\t\t\tOS.LineTo(graphics, x + run.width, underlineY);", "+\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\tOS.FillRect(graphics, rect, brush);", "-\t\t\tif (newPen == 0 || run.strikeoutThickness != run.underlineThickness) {", "-\t\t\t\tif (newPen != 0) {", "-\t\t\t\t\tOS.SelectObject(graphics, oldPen);", "-\t\t\t\t\tOS.DeleteObject(newPen);", "-\t\t\t\t}", "-\t\t\t\tnewPen = OS.CreatePen(OS.PS_SOLID, run.strikeoutThickness, (int)/*64*/color);", "-\t\t\t\toldPen = OS.SelectObject(graphics, newPen);", "-\t\t\t}", "-\t\t\tOS.MoveToEx(graphics, x, strikeoutY, 0);", "-\t\t\tOS.LineTo(graphics, x + run.width, strikeoutY);\t", "+\t\t\tOS.SetRect(rect, x, strikeoutY, x + run.width, strikeoutY + run.strikeoutThickness);", "+\t\t\tOS.FillRect(graphics, rect, brush);", "-\t\tOS.SelectObject(graphics, oldPen);", "-\t\tOS.DeleteObject(newPen);", "+\t\tOS.DeleteObject(brush);"]}], "num": 3306}