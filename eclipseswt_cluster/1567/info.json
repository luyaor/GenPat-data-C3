{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfe4cf5e0fedb4790dbf40d7a9c49566", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a116791b13a1b2fe1813a3e61f1781", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7b284503d08592dbddb77a19eb2de58b2bbcf267", "commitAfterChange": "589c806f733b6f17cd797f8efe22263b138d8cd1", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 96, "signatureBeforeChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "signatureAfterChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "-\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "-\tGtkCellRendererClass klass = new GtkCellRendererClass ();", "-\tOS.memmove (klass, g_class);", "-\tOS.call_get_size (klass.get_size, cell, handle, cell_area, x_offset, y_offset, width, height);", "-\tif (!ignoreSize && OS.GTK_IS_CELL_RENDERER_TEXT (cell)) {", "-\t\t\tif (hooks (SWT.MeasureItem)) {", "-\t\t\t\tint [] contentWidth = new int [1], contentHeight = new int  [1];", "-\t\t\t\tif (width != 0) OS.memmove (contentWidth, width, 4);", "-\t\t\t\tif (height != 0) OS.memmove (contentHeight, height, 4);", "-\t\t\t\tImage image = item.getImage (columnIndex);", "-\t\t\t\tint imageWidth = 0;", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tRectangle bounds = image.getBounds ();", "-\t\t\t\t\timageWidth = bounds.width;", "-\t\t\t\t}", "-\t\t\t\tcontentWidth [0] += imageWidth;", "-\t\t\t\tGC gc = new GC (this);", "-\t\t\t\tgc.setFont (item.getFont (columnIndex));", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = item;", "-\t\t\t\tevent.index = columnIndex;", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.width = contentWidth [0];", "-\t\t\t\tevent.height = contentHeight [0];", "-\t\t\t\tif (isSelected) event.detail = SWT.SELECTED;", "-\t\t\t\tsendEvent (SWT.MeasureItem, event);", "-\t\t\t\tgc.dispose ();", "-\t\t\t\tcontentWidth [0] = event.width - imageWidth;", "-\t\t\t\tif (contentHeight [0] < event.height) contentHeight [0] = event.height;", "-\t\t\t\tif (width != 0) OS.memmove (width, contentWidth, 4);", "-\t\t\t\tif (height != 0) OS.memmove (height, contentHeight, 4);", "+", "+long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "+\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "+\tGtkCellRendererClass klass = new GtkCellRendererClass ();", "+\tOS.memmove (klass, g_class);", "+\tOS.call_get_size (klass.get_size, cell, handle, cell_area, x_offset, y_offset, width, height);", "+\tsendMeasureEvent (cell, width, height);", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37dc8a91a3dd03eb669252d63f2683c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7b284503d08592dbddb77a19eb2de58b2bbcf267", "commitAfterChange": "589c806f733b6f17cd797f8efe22263b138d8cd1", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 101, "signatureBeforeChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "signatureAfterChange": "  long rendererGetSizeProc (long cell, long widget, long cell_area, long x_offset, long y_offset, long width, long height)", "diff": ["-long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "-\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "-\tGtkCellRendererClass klass = new GtkCellRendererClass ();", "-\tOS.memmove (klass, g_class);", "-\tOS.call_get_size (klass.get_size, cell, handle, cell_area, x_offset, y_offset, width, height);", "-\tif (!ignoreSize && OS.GTK_IS_CELL_RENDERER_TEXT (cell)) {", "-\t\t\tif (hooks (SWT.MeasureItem)) {", "-\t\t\t\tint [] contentWidth = new int [1], contentHeight = new int  [1];", "-\t\t\t\tif (width != 0) OS.memmove (contentWidth, width, 4);", "-\t\t\t\tif (height != 0) OS.memmove (contentHeight, height, 4);", "-\t\t\t\tImage image = item.getImage (columnIndex);", "-\t\t\t\tint imageWidth = 0;", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tRectangle bounds = image.getBounds ();", "-\t\t\t\t\timageWidth = bounds.width;", "-\t\t\t\t}", "-\t\t\t\tcontentWidth [0] += imageWidth;", "-\t\t\t\tGC gc = new GC (this);", "-\t\t\t\tgc.setFont (item.getFont (columnIndex));", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = item;", "-\t\t\t\tevent.index = columnIndex;", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.width = contentWidth [0];", "-\t\t\t\tevent.height = contentHeight [0];", "-\t\t\t\tlong /*int*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "-\t\t\t\tlong /*int*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t\t\t\tif (OS.gtk_tree_selection_path_is_selected (selection, path)) {", "-\t\t\t\t\tevent.detail = SWT.SELECTED;", "-\t\t\t\t}", "-\t\t\t\tOS.gtk_tree_path_free (path);", "-\t\t\t\tsendEvent (SWT.MeasureItem, event);", "-\t\t\t\tgc.dispose ();", "-\t\t\t\tcontentWidth [0] = event.width - imageWidth;", "-\t\t\t\tif (contentHeight [0] < event.height) contentHeight [0] = event.height;", "-\t\t\t\tif (width != 0) OS.memmove (width, contentWidth, 4);", "-\t\t\t\tif (height != 0) OS.memmove (height, contentHeight, 4);", "+", "+long /*int*/ rendererGetSizeProc (long /*int*/ cell, long /*int*/ widget, long /*int*/ cell_area, long /*int*/ x_offset, long /*int*/ y_offset, long /*int*/ width, long /*int*/ height) {", "+\tlong /*int*/ g_class = OS.g_type_class_peek_parent (OS.G_OBJECT_GET_CLASS (cell));", "+\tGtkCellRendererClass klass = new GtkCellRendererClass ();", "+\tOS.memmove (klass, g_class);", "+\tOS.call_get_size (klass.get_size, cell, handle, cell_area, x_offset, y_offset, width, height);", "+\tsendMeasureEvent (cell, width, height);"]}], "num": 1567}