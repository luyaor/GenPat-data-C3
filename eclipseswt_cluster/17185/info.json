{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e569ddf8cd2dd3e507505f6855983d3d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9bf2106e48778a165cdfab0ccc2a57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b4a2320440164ae72ce51dd2342d464a54f498b9", "commitAfterChange": "84656a6e6ceb9594f856cbee82c381105c177330", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tNSString str = NSString.stringWith(\"\");", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tcheckColumn = (NSTableColumn)new NSTableColumn().alloc();", "+\t\tcheckColumn.initWithIdentifier(str);", "+\t\tcheckColumn.headerCell().setTitle(str);", "+\t\twidget.addTableColumn (checkColumn);", "+\t\tNSButtonCell cell = (NSButtonCell)new NSButtonCell().alloc().init();", "+\t\tcheckColumn.setDataCell(cell);", "+\t\tcell.setButtonType(OS.NSSwitchButton);", "+\t\tcell.setImagePosition(OS.NSImageOnly);", "+\t\tcell.setAllowsMixedState(true);", "+\t\tcell.release();", "+\t\tcheckColumn.setWidth(getCheckColumnWidth());", "+\t\tcheckColumn.setResizingMask(OS.NSTableColumnNoResizing);", "+\t\tcheckColumn.setEditable(false);", "+\t}", "+", "-\tfirstColumn.initWithIdentifier(NSString.stringWith(\"\"));", "+\tfirstColumn.initWithIdentifier(str);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b0f29e8e396820a68d301add858504", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "896d60415bed50ca33e94246bc490088b77da5c0", "commitAfterChange": "4e1f6b56c8d97deeab3788d9e0250c05a1da62a8", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void setTabs (int tabs)", "signatureAfterChange": " public void setTabs (int tabs)", "diff": ["-//\tif (txnObject == 0) return;", "-//\tthis.tabs = tabs;", "-//\tTXNTab tab = new TXNTab ();", "-//\ttab.value = (short) (textExtent (new char[]{' '}, 0).x * tabs);", "-//\tint [] tags = new int [] {OS.kTXNTabSettingsTag};", "-//\tint [] datas = new int [1];", "-//\tOS.memmove (datas, tab, TXNTab.sizeof);", "-//\tOS.TXNSetTXNObjectControls (txnObject, false, tags.length, tags, datas);", "+\tthis.tabs = tabs;", "+\tif ((style & SWT.SINGLE) != 0) return;", "+\tfloat /*double*/ size = textExtent(\"s\").width * tabs;", "+\tNSTextView widget = (NSTextView)view;", "+\tNSParagraphStyle defaultStyle = widget.defaultParagraphStyle();", "+\tNSMutableParagraphStyle paragraphStyle = new NSMutableParagraphStyle(defaultStyle.mutableCopy());", "+\tparagraphStyle.setTabStops(NSArray.array());", "+\tNSTextTab tab = (NSTextTab)new NSTextTab().alloc();", "+\ttab = tab.initWithType(OS.NSLeftTabStopType, size);", "+\tparagraphStyle.addTabStop(tab);", "+\ttab.release();", "+\tparagraphStyle.setDefaultTabInterval(size);", "+\twidget.setDefaultParagraphStyle(paragraphStyle);", "+\tparagraphStyle.release();"]}], "num": 17185}