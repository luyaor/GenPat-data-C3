{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed691450666373f3a4b5da55212b8ec6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35b00140fdb8b8e415cf8099642686b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "e5e0c32cb05eecaf8a37e2a99ced9c5808201174", "commitAfterChange": "3daec5bcdac549554c8cbda138e2ff635c199aeb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private void drag(Event dragEvent)", "signatureAfterChange": "  private void drag(Event dragEvent)", "diff": ["-\tEventRecord theEvent = new EventRecord();", "-\ttheEvent.message = OS.kEventMouseMoved;", "-\ttheEvent.modifiers = (short)OS.GetCurrentEventKeyModifiers();", "-\ttheEvent.what = (short)OS.osEvt;", "-\ttheEvent.where_h = (short)pt.h;", "-\ttheEvent.where_v = (short)pt.v;", "-\t", "-\t// Immediately get data for transfer.  On other platforms, we wait", "-\t// until the data is requested, but on the mac, particularly in the case of files,", "-\t// we need to know how many items are being transferred when registering.  ", "-\t// The only way to know this is to get the data.", "-\t\t\tTransferData transferData = new TransferData();", "-\t\t\ttransferData.type = types[j];", "-\t\t\tevent = new DNDEvent();", "-\t\t\tevent.widget = this;", "-\t\t\tevent.time = (int)System.currentTimeMillis(); ", "-\t\t\tevent.dataType = transferData; ", "-\t\t\tnotifyListeners(DND.DragSetData, event);", "-\t\t\ttransferAgents[i].javaToNative(event.data, transferData);", "-\t\t\tif (transferData.result != OS.noErr || transferData.data == null) continue; ", "-\t\t\tfor (int k = 0; k < transferData.data.length; k++) {", "-\t\t\t\tbyte[] data = transferData.data[k];", "-\t\t\t\tOS.AddDragItemFlavor(theDrag[0], index++, types[j], data, data.length, 0);\t", "-\t\t\t}\t", "+\t\t\tOS.AddDragItemFlavor(theDrag[0], index++, types[j], null, 0, 0);\t", "+\tOS.SetDragSendProc(theDrag[0], DragSendDataProc.getAddress(), control.handle);", "+\t", "-\ttry {", "+\ttry {\t", "+\t\tEventRecord theEvent = new EventRecord();", "+\t\ttheEvent.message = OS.kEventMouseMoved;", "+\t\ttheEvent.modifiers = (short)OS.GetCurrentEventKeyModifiers();", "+\t\ttheEvent.what = (short)OS.osEvt;", "+\t\ttheEvent.where_h = (short)pt.h;", "+\t\ttheEvent.where_v = (short)pt.v;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1787bcb5c0cc5b504512c0e27fe75138", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "4664a27a77c00f4a18425c1e6c5f951f1e08c071", "commitAfterChange": "0fcbe45f6737f225a306bf1a7ad2ba2157a1efe9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private void drag(Event dragEvent)", "signatureAfterChange": "  private void drag(Event dragEvent)", "diff": ["-\t", "-\tint index = 0;", "+", "-\t\tfor (int j = 0; j < types.length; j++) {", "-\t\t\tOS.AddDragItemFlavor(theDrag[0], index++, types[j], null, 0, 0);\t", "-\t\t}\t", "-\t}", "-", "-\tif (index == 0) {", "-\t\tOS.DisposeDrag(theDrag[0]);", "-\t\tevent = new DNDEvent();", "-\t\tevent.widget = this;", "-\t\tevent.time = (int)System.currentTimeMillis();", "-\t\tevent.doit = false;", "-\t\tevent.detail = DND.DROP_NONE; ", "-\t\tnotifyListeners(DND.DragEnd, event);", "-\t\treturn;", "+\t\tif (transferAgents[i] instanceof FileTransfer) {", "+\t\t\tTransferData transferData = new TransferData();", "+\t\t\ttransferData.type = types[0];", "+\t\t\tevent = new DNDEvent();", "+\t\t\tevent.widget = this;", "+\t\t\tevent.time = (int)System.currentTimeMillis(); ", "+\t\t\tevent.dataType = transferData; ", "+\t\t\tnotifyListeners(DND.DragSetData, event);", "+\t\t\tif (event.data == null) return;", "+\t\t\tTransfer transferAgent = transferAgents[i];", "+\t\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\t\ttransferData.type = types[j];", "+\t\t\t\ttransferAgent.javaToNative(event.data, transferData);", "+\t\t\t\tif (transferData.result != OS.noErr) return;", "+\t\t\t\tfor (int k = 0; k < transferData.data.length; k++) {", "+\t\t\t\t\tbyte[] datum = transferData.data[k];", "+\t\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1 + k, types[j], datum, datum.length, 0);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1, types[j], null, 0, 0);\t", "+\t\t\t}\t", "+\t\t}"]}], "num": 39418}