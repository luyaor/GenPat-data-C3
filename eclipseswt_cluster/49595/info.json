{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a22bb0e4c9d4a2f1fa94ec00e6b623c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c54792aac7cc0228b7b79e6ae597f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "713526f4ce95962da1741fe1861db86a24af5d9a", "commitAfterChange": "c7a20ce4a278d6964c412a013f46fbdbc58e9eb5", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["+\t/*", "+\t* Set the default icon for the window class to IDI_APPLICATION.", "+\t* This is not necessary for native Windows applications but", "+\t* versions of Java starting at JDK 1.6 set the icon in the", "+\t* executable instead of leaving the default.", "+\t*/", "+\tif (!OS.IsWinCE && Library.JAVA_VERSION >= Library.JAVA_VERSION (1, 6, 0)) {", "+\t\tTCHAR lpszFile = new TCHAR (0, OS.MAX_PATH);", "+\t\twhile (OS.GetModuleFileName (0, lpszFile, lpszFile.length ()) == lpszFile.length ()) {", "+\t\t\tlpszFile = new TCHAR (0, lpszFile.length () + OS.MAX_PATH);", "+\t\t}", "+\t\tif (OS.ExtractIconEx (lpszFile, -1, null, null, 1) != 0) {", "+\t\t\tString fileName = lpszFile.toString (0, lpszFile.strlen ());", "+\t\t\tif (fileName.endsWith (\"java.exe\") || fileName.endsWith (\"javaw.exe\")) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tlpWndClass.hIcon = OS.LoadIcon (0, OS.IDI_APPLICATION);", "+\t\t\t}", "+\t\t}", "+\t}", "-\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (5, 1)) lpWndClass.style |= OS.CS_DROPSHADOW;", "+\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (5, 1)) {", "+\t\tlpWndClass.style |= OS.CS_DROPSHADOW;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0d526422039382d0998d09284dd09f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [ENTER_NOTIFY_EVENT], 0, display.closures [ENTER_NOTIFY_EVENT], false);", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [LEAVE_NOTIFY_EVENT], 0, display.closures [LEAVE_NOTIFY_EVENT], false);", "-\tif (labelHandle != 0) OS.g_signal_connect_closure_by_id (labelHandle, display.signalIds [MNEMONIC_ACTIVATE], 0, display.closures [MNEMONIC_ACTIVATE], false);", "-", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [FOCUS_OUT_EVENT], 0, display.closures [FOCUS_OUT_EVENT], false);", "-", "+\t/*", "+\t * Feature in GTK. GtkToolItem does not respond to basic listeners ", "+\t * such as button-press, enter-notify to it. The fix is to assign ", "+\t * the listener to child (GtkButton) of the tool-item.", "+\t */", "+\teventHandle = OS.gtk_bin_get_child(handle);", "+\tif ((style & SWT.DROP_DOWN) != 0 && OS.GTK_VERSION >= OS.VERSION (2, 6, 0)) {", "+\t\tint /*long*/ list = OS.gtk_container_get_children(eventHandle);", "+\t\teventHandle = OS.g_list_nth_data(list, 0);", "+\t\tif (arrowHandle != 0) OS.g_signal_connect_closure (arrowHandle, OS.clicked, display.closures [CLICKED], false);", "+\t}", "+\tif ((style & (SWT.CHECK | SWT.RADIO | SWT.DROP_DOWN)) != 0)\t{", "+\t\tOS.g_signal_connect_closure (handle, OS.create_menu_proxy, display.closures [CREATE_MENU_PROXY], false);", "+\t}", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [ENTER_NOTIFY_EVENT], 0, display.closures [ENTER_NOTIFY_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [LEAVE_NOTIFY_EVENT], 0, display.closures [LEAVE_NOTIFY_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [FOCUS_IN_EVENT], 0, display.closures [FOCUS_IN_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [FOCUS_OUT_EVENT], 0, display.closures [FOCUS_OUT_EVENT], false);", "-\tOS.gtk_widget_add_events (handle, mask);", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [BUTTON_PRESS_EVENT], 0, display.closures [BUTTON_PRESS_EVENT], false);", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT], false);", "-\tOS.g_signal_connect_closure_by_id (handle, display.signalIds [EVENT_AFTER], 0, display.closures[EVENT_AFTER], false);", "+\tOS.gtk_widget_add_events (eventHandle, mask);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [BUTTON_PRESS_EVENT], 0, display.closures [BUTTON_PRESS_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [BUTTON_RELEASE_EVENT], 0, display.closures [BUTTON_RELEASE_EVENT], false);", "+\tOS.g_signal_connect_closure_by_id (eventHandle, display.signalIds [EVENT_AFTER], 0, display.closures[EVENT_AFTER], false);"]}], "num": 49595}