{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b4cd15d4169be82df0109ccffe8a39e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d48be8d17fb79d8b3aa13c8be8ca0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "da070c767dca330968a0bc3730f4f7fa6e63ddea", "commitAfterChange": "e68f6dd7961c12937e9660a6a57b980c17ed895a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "+\t\t\t\t/*", "+\t\t\t\t * in GTK version 2.10, gtk_file_chooser_set_current_folder requires path", "+\t\t\t\t * to be true canonical path. So using realpath to convert the path to ", "+\t\t\t\t * true canonical path.", "+\t\t\t\t */", "+\t\t\t\tif (OS.IsAIX) {", "+\t\t\t\t\tbyte [] outputBuffer = new byte [PATH_MAX];", "+\t\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, outputBuffer);", "+\t\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\t/* We are not doing free here because realpath returns the address of outputBuffer", "+\t\t\t\t\t * which is created in this code and we let the garbage collector to take care of this", "+\t\t\t\t\t */", "+\t\t\t\t} else {", "+\t\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "+\t\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t\tOS.g_free (ptr);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\tif (fileName.length() > 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "+\t\t\t/*", "+\t\t\t * in GTK version 2.10, gtk_file_chooser_set_current_folder requires path", "+\t\t\t * to be true canonical path. So using realpath to convert the path to ", "+\t\t\t * true canonical path.", "+\t\t\t */", "+\t\t\tif (OS.IsAIX) {", "+\t\t\t\tbyte [] outputBuffer = new byte [PATH_MAX];", "+\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, outputBuffer);", "+\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\tif (fileName.length() > 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\t/* We are not doing free here because realpath returns the address of outputBuffer", "+\t\t\t\t\t * which is created in this code and we let the garbage collector to take care of this", "+\t\t\t\t\t */", "+\t\t\t\t}", "-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "+\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "+\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\tif (fileName.length() > 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.g_free (ptr);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57eafa275d8e177315f469d4aa8407ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "a8a0a2bc4242d1bafe4f0129d1da26ea2f2eac96", "commitAfterChange": "37686216d752d050189be228ee856b8238323257", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void setExpanded (boolean value)", "signatureAfterChange": " public void setExpanded (boolean value)", "diff": ["+\t\tRectangle clientArea = parent.getClientArea ();", "+\t\tint itemY = parent.getItemY (this);", "+\t\tint startY = itemY + descendents.length * parent.itemHeight;", "+\t\tint imageHeight = Math.max (0, clientArea.height - startY);", "+\t\tImage image = null;", "+\t\tGC gc = null;", "+\t\tif (imageHeight > 0) {", "+\t\t\timage = new Image (display, clientArea.width, imageHeight);", "+\t\t\tgc = new GC (parent);", "+\t\t\tgc.copyArea (image, 0, startY);", "+\t\t}", "-\t\tparent.redrawItems (availableIndex + 1, oldAvailableLength - 1, false);", "+\t\titemY = parent.getItemY (this);", "+\t\tif (image != null) {", "+\t\t\tgc.drawImage (image, 0, itemY + parent.itemHeight);", "+\t\t\timage.dispose ();", "+\t\t\tgc.dispose ();", "+\t\t}", "+\t\tint drawY = itemY + parent.itemHeight;", "+\t\tparent.redraw (0, drawY, clientArea.width, clientArea.height - drawY, false);"]}], "num": 455}