{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe322ddd34d73ae42fba91ed734dc5e7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f76a67b51d16706c40f7bf390e9c580", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 45, "signatureBeforeChange": " TreeItem2[] computeAvailableDescendents ()", "signatureAfterChange": " boolean isVisible()", "diff": ["- */", "-TreeItem2[] computeAvailableDescendents () {", "-\tif (!expanded) return new TreeItem2[] {this};", "-\tint childCount = items.length;", "-\tTreeItem2[][] childResults = new TreeItem2[childCount][];", "-\tint count = 1;\t/* self */", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tchildResults[i] = items[i].computeAvailableDescendents ();", "-\t\tcount += childResults[i].length;", "-\t}", "-\tTreeItem2[] result = new TreeItem2[count];", "-\tint index = 0;", "-\tresult[index++] = this;", "-\tfor (int i = 0; i < childCount; i++) {", "-\t\tSystem.arraycopy (childResults[i], 0, result, index, childResults[i].length);", "-\t\tindex += childResults[i].length;", "-\t}", "-\treturn result;", "-}", "+ */", "+boolean isVisible() {", "+\tboolean isVisible = true;", "+\tTreeItem2 parentItem = getParentItem();", "+", "+\tif (isRoot() == false) {", "+\t\tisVisible = parentItem.getExpanded();", "+\t\tif (isVisible == true) {", "+\t\t\tisVisible = parentItem.isVisible();", "+\t\t}", "+\t}", "+\treturn isVisible;\t\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f98fd95b239c2805da42d8a0cb1e7459", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 30, "signatureBeforeChange": " int itemAction(TreeItem item, int x, int y)", "signatureAfterChange": " TreeItem[] getAllItems()", "diff": ["+TreeItem[] getAllItems() {", "+\tint childCount = items.length;", "+\tTreeItem[][] childResults = new TreeItem[childCount][];", "+\tint count = 0;", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tchildResults[i] = items[i].computeAllDescendents();", "+\t\tcount += childResults[i].length;", "+\tTreeItem[] result = new TreeItem[count];", "+\tint index = 0;", "+\tfor (int i = 0; i < childCount; i++) {", "+\t\tSystem.arraycopy(childResults[i], 0, result, index, childResults[i].length);", "+\t\tindex += childResults[i].length;", "+\t}", "+\treturn result;", "- */", "-int itemAction(TreeItem item, int x, int y) {", "-\tint action = ActionNone;", "-\tint itemHeight = getItemHeight();", "-\tint offsetX;", "-\tint offsetY;", "-\tPoint offsetPoint;", "-", "-\tif (item != null) {", "-\t\toffsetX = x - item.getPaintStartX();", "-\t\toffsetY = y - itemHeight * (y / itemHeight);\t", "-\t\toffsetPoint = new Point(offsetX, offsetY);\t", "-\t\tif ((item.isLeaf() == false) &&", "-\t\t\t(getHierarchyIndicatorRect().contains(offsetPoint) == true)) {", "-\t\t\taction |= ActionExpandCollapse;", "-\t\t}", "-\t\telse", "-\t\tif (item.isSelectionHit(offsetPoint) == true) {", "-\t\t\taction |= ActionSelect;", "-\t\t}", "-\t\telse", "-\t\tif (item.isCheckHit(new Point(x, y)) == true) {", "-\t\t\taction |= ActionCheck;", "-\t\t}", "-\t}", "-\treturn action;", "-}"]}], "num": 21348}