{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5386cdc4402a59fbcfdd30312553c6c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ff4f8715f6ac24adee717ba6877844a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "deba00683b7e799ad97b05b6dcbb1d19c053de72", "commitAfterChange": "f295d81c96c5f0cad60547a25236d1a3bb649162", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void resizeIME ()", "signatureAfterChange": "  void resizeIME ()", "diff": ["-\tRECT rect = new RECT ();", "-\tOS.GetClientRect (hwnd, rect);", "-\tCOMPOSITIONFORM lpCompForm = new COMPOSITIONFORM ();", "-\tlpCompForm.dwStyle = OS.CFS_RECT;", "-\tlpCompForm.x = ptCurrentPos.x;", "-\tlpCompForm.y = ptCurrentPos.y;", "-\tlpCompForm.left = rect.left;", "-\tlpCompForm.right = rect.right;", "-\tlpCompForm.top = rect.top;", "-\tlpCompForm.bottom = rect.bottom;", "-\tOS.ImmSetCompositionWindow (hIMC, lpCompForm);", "+\tif (parent.hooks (SWT.ImeComposition)) {", "+\t\tCANDIDATEFORM lpCandidate = new CANDIDATEFORM ();", "+\t\tlpCandidate.dwStyle = OS.CFS_CANDIDATEPOS;", "+\t\tlpCandidate.ptCurrentPos = ptCurrentPos;", "+\t\tOS.ImmSetCandidateWindow (hIMC, lpCandidate);", "+\t} else {", "+\t\tRECT rect = new RECT ();", "+\t\tOS.GetClientRect (hwnd, rect);", "+\t\tCOMPOSITIONFORM lpCompForm = new COMPOSITIONFORM ();", "+\t\tlpCompForm.dwStyle = OS.CFS_RECT;", "+\t\tlpCompForm.x = ptCurrentPos.x;", "+\t\tlpCompForm.y = ptCurrentPos.y;", "+\t\tlpCompForm.left = rect.left;", "+\t\tlpCompForm.right = rect.right;", "+\t\tlpCompForm.top = rect.top;", "+\t\tlpCompForm.bottom = rect.bottom;", "+\t\tOS.ImmSetCompositionWindow (hIMC, lpCompForm);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c9c2a1d1b328048ffb82bb35713af7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "700b9da7b57dd076496e6f3b755b2d275ccc859b", "commitAfterChange": "a4c38a5499b7661171c9c6cec483dfebcf3bc42a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["-\t\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, itemRect);", "-\t\t\t\trect.left = itemRect.left;", "-\t\t\t\trect.right = itemRect.right;", "-\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t}", "-\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, itemRect);", "-\t\t\t\trect.left = itemRect.left;", "-\t\t\t\trect.right = itemRect.right;", "-\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c1c97e00dec7293eba8484049d8f0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e7255dd0401a8f22aea419c5ffbac41d139e34e7", "commitAfterChange": "93ea26f494ae101434d52dc07618679fb6d831a8", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "  LRESULT wmNotify (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotify (NMHDR hdr, int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tRECT headerRect = new RECT ();", "-\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\t\t\t\tint index = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, count - 1, 0);", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\t\t\t\t\t\trect.right = Math.max (rect.right, headerRect.right);", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, headerRect);", "-\t\t\t\t\t\tint gridWidth = linesVisible ? GRID_WIDTH : 0;", "-\t\t\t\t\t\trect.left = headerRect.right - gridWidth;", "+\t\t\t\t\t\tRECT headerRect = new RECT ();", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, headerRect);", "+\t\t\t\t\t\tint gridWidth = linesVisible ? GRID_WIDTH : 0;", "+\t\t\t\t\t\trect.left = headerRect.right - gridWidth;", "+\t\t\t\t\t\tint newX = rect.left + deltaX;", "+\t\t\t\t\t\trect.right = Math.max (rect.right, rect.left + Math.abs (deltaX));", "-\t\t\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\t\t\trect.right = newX;"]}], "num": 11852}