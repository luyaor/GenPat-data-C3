{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "063edaf9638ed379cc85da87215e64a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598bf116fee8b022337012a4de4aeabc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  public boolean execute (String script)", "signatureAfterChange": "  public boolean execute (String script)", "diff": ["-\tif (!IsPre_1_9) {", "+\tif (!IsPre_2) {", "+\t\tnsIPrincipal_1_9 principal_1_9 = null;", "-\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9_1.NS_ISCRIPTSECURITYMANAGER_IID, result);", "+\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_2.NS_ISCRIPTSECURITYMANAGER_IID, result);", "-\t\t\tnsIScriptSecurityManager_1_9_1 securityManager = new nsIScriptSecurityManager_1_9_1 (result[0]);", "+\t\t\tnsIScriptSecurityManager_2 securityManager = new nsIScriptSecurityManager_2 (result[0]);", "-\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9.NS_ISCRIPTSECURITYMANAGER_IID, result);", "+\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9_1.NS_ISCRIPTSECURITYMANAGER_IID, result);", "-\t\t\t\tnsIScriptSecurityManager_1_9 securityManager = new nsIScriptSecurityManager_1_9 (result[0]);", "+\t\t\t\tnsIScriptSecurityManager_1_9_1 securityManager = new nsIScriptSecurityManager_1_9_1 (result[0]);", "-\t\t\t\tprincipal = new nsIPrincipal (result[0]);", "+\t\t\t\tprincipal_1_9 = new nsIPrincipal_1_9 (result[0]);", "+\t\t\t} else {", "+\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9.NS_ISCRIPTSECURITYMANAGER_IID, result);", "+\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\tnsIScriptSecurityManager_1_9 securityManager = new nsIScriptSecurityManager_1_9 (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\trc = securityManager.GetSystemPrincipal (result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\t\tprincipal_1_9 = new nsIPrincipal_1_9 (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\tsecurityManager.Release ();", "+\t\t\t\t}", "-\t\tif (principal != null) {", "+\t\tif (principal != null || principal_1_9 != null) {", "-\t\t\tnsID scriptGlobalObjectNSID_1_9 = new nsID (\"6afecd40-0b9a-4cfd-8c42-0f645cd91829\"); /* nsIScriptGlobalObject */ //$NON-NLS-1$", "-\t\t\trc = interfaceRequestor.GetInterface (scriptGlobalObjectNSID_1_9, result);", "+\t\t\tnsID scriptGlobalObjectNSID_2 = new nsID (\"4eb16819-4e81-406e-9305-6f30fcd2624a\"); /* nsIScriptGlobalObject */ //$NON-NLS-1$", "+\t\t\trc = interfaceRequestor.GetInterface (scriptGlobalObjectNSID_2, result);", "+\t\t\t\tif (!(rc == XPCOM.NS_OK && result[0] != 0)) {", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\tnsID scriptGlobalObjectNSID_1_9 = new nsID (\"6afecd40-0b9a-4cfd-8c42-0f645cd91829\"); /* nsIScriptGlobalObject */ //$NON-NLS-1$", "+\t\t\t\t\trc = interfaceRequestor.GetInterface (scriptGlobalObjectNSID_1_9, result);", "+\t\t\t\t}", "-\t\t\t\t\tnsID scriptContextNSID_1_9 = new nsID (\"e7b9871d-3adc-4bf7-850d-7fb9554886bf\"); /* nsIScriptContext */ //$NON-NLS-1$\t\t\t\t\t", "-\t\t\t\t\trc = new nsISupports (scriptContext).QueryInterface (scriptContextNSID_1_9, result);", "+\t\t\t\t\tnsID scriptContextNSID_2 = new nsID (\"a7139c0e-962c-44b6-bec3-e4166bfe84eb\"); /* nsIScriptContext */ //$NON-NLS-1$\t\t\t\t\t", "+\t\t\t\t\trc = new nsISupports (scriptContext).QueryInterface (scriptContextNSID_2, result);", "+\t\t\t\t\t\tif (!(rc == XPCOM.NS_OK && result[0] != 0)) {", "+\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\tnsID scriptContextNSID_1_9 = new nsID (\"e7b9871d-3adc-4bf7-850d-7fb9554886bf\"); /* nsIScriptContext */ //$NON-NLS-1$\t\t\t\t\t", "+\t\t\t\t\t\t\trc = new nsISupports (scriptContext).QueryInterface (scriptContextNSID_1_9, result);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t\trc = principal.GetJSPrincipals (nativeContext, result);", "+\t\t\t\t\t\t\trc = (principal != null) ? principal.GetJSPrincipals (nativeContext, result) ", "+\t\t\t\t\t\t\t\t\t: principal_1_9.GetJSPrincipals (nativeContext, result);", "-\t\t\t\t\t\t\t\tprincipal.Release ();", "+\t\t\t\t\t\t\t\tString jsLibraryName = null;", "+\t\t\t\t\t\t\t\tif (principal != null) {", "+\t\t\t\t\t\t\t\t\tprincipal.Release ();", "+\t\t\t\t\t\t\t\t\tjsLibraryName = delegate.getJSLibraryName();", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tprincipal_1_9.Release();", "+\t\t\t\t\t\t\t\t\tjsLibraryName = delegate.getJSLibraryName_Pre2();", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tString mozillaPath = getMozillaPath () + delegate.getJSLibraryName () + '\\0';", "+\t\t\t\t\t\t\t\t\tString mozillaPath = getMozillaPath () + jsLibraryName + '\\0';", "-\t\t\tprincipal.Release ();", "+\t\t\tif (principal != null) principal.Release ();", "+\t\t\telse principal_1_9.Release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef7bcdafe2a2359ed198a48f130da28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "-\t\tint rc = progress.GetDOMWindow (result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\tnsIDOMWindow domWindow = new nsIDOMWindow (result[0]);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc;", "+\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\t\trc = progress.GetDOMWindow (window);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (window[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\t", "-\t\t\tboolean isTop = result[0] == domWindow.getAddress ();", "+\t\t\tboolean isTop = result[0] == window[0];", "-\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\tif (!IsPre_2) {", "+\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tdomWindow.Release();", "+\t\t\t} else {", "+\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "+\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tdomWindow.Release();", "+\t\t\t}", "-\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\tif (!IsPre_2) {", "+\t\t\t\tnsIDOMEventTarget_1_9 target = new nsIDOMEventTarget_1_9 (result[0]);", "+\t\t\t\thookDOMListeners_1_9 (target, isTop);", "+\t\t\t\ttarget.Release ();", "+\t\t\t} else {", "+\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\t\thookDOMListeners (target, isTop);", "+\t\t\t\ttarget.Release ();", "+\t\t\t}", "-\t\t\thookDOMListeners (target, isTop);", "-\t\t\ttarget.Release ();", "+\t\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\t\t\trc = progress.GetDOMWindow (window);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (window[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\t\t", "-\t\t\t\tboolean isTop = result[0] == domWindow.getAddress ();", "+\t\t\t\tboolean isTop = result[0] == window[0];", "-\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tif (!IsPre_2) {", "+\t\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\t\tdomWindow.Release();", "+\t\t\t\t} else {", "+\t\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "+\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\t\tdomWindow.Release();", "+\t\t\t\t}", "-\t\tdomWindow.Release ();", "-\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\trc = domWindow.QueryInterface (!IsPre_2 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID : nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740fe323710565d8aed21968d6826028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a2e5fa832165f5a47276264ef4f8d8a7fddf99c3", "commitAfterChange": "f9fb719ff3ba79c646f79b3803a1ec6e89424986", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\tLocationProvider.isXULRunner = IsXULRunner;", "-\t\t\t\tserviceManager.Release ();", "+\t\t\t\tif (LocationProvider != null) {", "+\t\t\t\t\tString prefsLocation = LocationProvider.profilePath + AppFileLocProvider.PREFERENCES_FILE;", "+\t\t\t\t\tnsEmbedString pathString = new nsEmbedString (prefsLocation);", "+\t\t\t\t\trc = XPCOM.NS_NewLocalFile (pathString.getAddress (), true, result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\t\tpathString.dispose ();", "+", "+\t\t\t\t\tnsILocalFile localFile = new nsILocalFile (result [0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t    rc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\t\t\t\tlocalFile.Release ();", "+", "+\t\t\t\t\tnsIFile prefFile = new nsIFile (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+", "+\t\t\t\t\tbuffer = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_PREFSERVICE_CONTRACTID, true);", "+\t\t\t\t\trc = serviceManager.GetServiceByContractID (buffer, nsIPrefService.NS_IPREFSERVICE_IID, result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\t\t\tnsIPrefService prefService = new nsIPrefService (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\trc = prefService.SavePrefFile(prefFile.getAddress ());", "+\t\t\t\t\tprefService.Release ();", "+\t\t\t\t\tprefFile.Release ();", "+\t\t\t\t}", "+\t\t\t\tserviceManager.Release ();", "+"]}], "num": 16690}