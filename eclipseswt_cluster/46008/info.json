{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c47dee1d315f43519badc71612911410", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b495c8a9131d6ec6ef393a00fb115ec4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a950d59cad36be3ba2dfe58ad8c3d4ffa9d627e", "commitAfterChange": "7af48bb9f090f0eca9c603b9f05937ffc4d0e7d9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t/*", "-\t* Feature in Windows.  When the tree is disabled, it draws", "-\t* with a gray background over the sort column.  The fix is", "-\t* to fill the background with the sort column color.", "-\t*/", "-\tif (!OS.IsWindowEnabled (handle) && clrSortBk != -1) {", "-\t\tRECT rect = new RECT ();", "-\t\tHDITEM hdItem = new HDITEM ();", "-\t\thdItem.mask = OS.HDI_WIDTH;", "-\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "-\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.left + hdItem.cxy, nmcd.bottom);", "-\t\tfillBackground (hDC, clrSortBk, rect);", "+\tif (OS.IsWindowEnabled (handle)) {", "+\t\t/*", "+\t\t* On Vista only, when an item is asked to draw disabled,", "+\t\t* the background of the text is not filled with the", "+\t\t* background color of the tree.  This is true for both", "+\t\t* regular and full selection trees.  In order to draw a", "+\t\t* background image, mark the item as disabled using", "+\t\t* CDIS_DISABLED (when not selected) and set the text", "+\t\t* to the regular text color to avoid drawing disabled.", "+\t\t*/", "+\t\tif (explorerTheme) {", "+\t\t\tif (findImageControl () !=  null) {", "+\t\t\t\tif (!selected && (nmcd.uItemState & (OS.CDIS_HOT | OS.CDIS_SELECTED)) == 0) {", "+\t\t\t\t\tnmcd.uItemState |= OS.CDIS_DISABLED;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  On Vista only, when the text", "+\t\t\t\t\t* color is unchanged and an item is asked to draw", "+\t\t\t\t\t* disabled, it uses the disabled color.  The fix is", "+\t\t\t\t\t* to modify the color slightly by adding one.", "+\t\t\t\t\t*/", "+\t\t\t\t\tint newColor = clrText == -1 ? getForegroundPixel () : clrText;", "+\t\t\t\t\tnmcd.clrText = nmcd.clrText == newColor ? newColor + 1 : newColor;", "+\t\t\t\t\tOS.MoveMemory (lParam, nmcd, NMTVCUSTOMDRAW.sizeof);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\t/*", "+\t\t* Feature in Windows.  When the tree is disabled, it draws", "+\t\t* with a gray background over the sort column.  The fix is", "+\t\t* to fill the background with the sort column color.", "+\t\t*/", "+\t\tif (clrSortBk != -1) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "+\t\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.left + hdItem.cxy, nmcd.bottom);", "+\t\t\tfillBackground (hDC, clrSortBk, rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a225901eebc271be890922837d1f4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7e280f5c0e35250d8d8799cb54631612dc7eb00c", "commitAfterChange": "9f8eb72337687cebc60515e6291539655a3619af", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t/*", "+\t* Feature in Windows.  When the tree has the style", "+\t* TVS_FULLROWSELECT, the background color for the", "+\t* entire row is filled when an item is painted,", "+\t* drawing on top of any custom drawing.  The fix", "+\t* is to emulate TVS_FULLROWSELECT.", "+\t*/", "+\tboolean selected = false;", "+\tboolean fakeSelection = false;", "+\tif (lpht.hItem != 0) {", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) fakeSelection = true;", "+\t\t} else {", "+\t\t\tif (hooks (SWT.MeasureItem)) {", "+\t\t\t\tselected = hitTestSelection (lpht.hItem, lpht.x, lpht.y);", "+\t\t\t\tif (selected) {", "+\t\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) fakeSelection = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "-\tif ((style & SWT.FULL_SELECTION) == 0) {", "-\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0 && !hooks (SWT.MeasureItem)) {", "+\tif (!selected && (style & SWT.FULL_SELECTION) == 0) {", "+\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) {", "-\tboolean selected = true;", "-\t\thittestSelected = (tvItem.state & OS.TVIS_SELECTED) != 0;", "+\t\thittestSelected = selected || (tvItem.state & OS.TVIS_SELECTED) != 0;", "-\t/*", "-\t* Feature in Windows.  When the tree has the style", "-\t* TVS_FULLROWSELECT, the background color for the", "-\t* entire row is filled when an item is painted,", "-\t* drawing on top of any custom drawing.  The fix", "-\t* is to emulate TVS_FULLROWSELECT.", "-\t*/", "-\tboolean fakeSelection = false;", "-\tif (lpht.hItem != 0) {", "-\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) fakeSelection = true;", "-\t\t} else {", "-\t\t\tif (hooks (SWT.MeasureItem)) {", "-\t\t\t\tselected = hitTestSelection (lpht.hItem, lpht.x, lpht.y);", "-\t\t\t\tif (selected) {", "-\t\t\t\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) fakeSelection = true;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (selected && !gestureCompleted) {", "+\tif (!gestureCompleted) {"]}], "num": 46008}