{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0fe724be20c8086455b67e51052e051", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358c19ddb1aa73fc0f4de89e44cdbbe3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "d35c548429be743d3d35a6e8bcce6749d4fb3811", "commitAfterChange": "a2121a3b36fd9f479b5853f961011d3d772dea1a", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " protected int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " protected int QueryInterface(int riid, int ppvObject)", "diff": ["-\tif (COM.IsEqualGUID(guid, COM.IIDIOleDocumentSite )) {", "-\t\tString progID = getProgramID();", "-\t\tif (!progID.startsWith(\"PowerPoint\")) { //$NON-NLS-1$", "-\t\t\tCOM.MoveMemory(ppvObject, new int[] {iOleDocumentSite.getAddress()}, 4);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "-\t\t}", "-\t}", "+// INTENTIONALLY COMMENTED - see bug 35493\t", "+//\tif (COM.IsEqualGUID(guid, COM.IIDIOleDocumentSite )) {", "+//\t\tString progID = getProgramID();", "+//\t\tif (!progID.startsWith(\"PowerPoint\")) { //$NON-NLS-1$", "+//\t\t\tCOM.MoveMemory(ppvObject, new int[] {iOleDocumentSite.getAddress()}, 4);", "+//\t\t\tAddRef();", "+//\t\t\treturn COM.S_OK;", "+//\t\t}", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91affd359f4c51533abbe7491d1be32", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 349, "signatureBeforeChange": " \tint get_caretOffset(int pOffset)", "signatureAfterChange": "  \tint getCaretOffset()", "diff": ["-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.offset = -1;", "-\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\tlistener.getCaretOffset (event);", "-\t\t}", "-\t\tif (event.offset == -1) {", "-\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "-\t\t\t\tevent.childID = ACC.CHILDID_SELF;", "-\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "-\t\t\t\tlistener.getCaretOffset (event);", "-\t\t\t}", "-\t\t}", "-\t\tif (DEBUG) print(\"IAccessibleText::get_caretOffset returning \" + event.offset);", "-\t\tCOM.MoveMemory(pOffset, new int [] { event.offset }, 4);", "-\t\tif (event.offset == -1) return COM.S_FALSE;", "+\tint getCaretOffset() {", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.offset = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCaretOffset (event);", "+\t\t}", "+\t\tif (event.offset == -1) {", "+\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "+\t\t\t\tevent.childID = ACC.CHILDID_SELF;", "+\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "+\t\t\t\tlistener.getCaretOffset (event);", "+\t\t\t}", "+\t\t}", "+\t\treturn event.offset;", "+\t}"]}], "num": 57189}