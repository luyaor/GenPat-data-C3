{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ba65c84bd07d7ce77c4e290f5042b1e", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df97982a5a3358ecc190b8e27cde2df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int createCellTemplate (int index)", "signatureAfterChange": "  int createCellTemplate (int index)", "diff": ["+\tint swtStackPanelType = OS.SWTStackPanel_typeid ();", "+\tint onRenderNode = OS.gcnew_FrameworkElementFactory (swtStackPanelType);", "+\tOS.GCHandle_Free (swtStackPanelType);", "+\tint jniRefProperty = OS.SWTStackPanel_JNIRefProperty ();", "+\tOS.FrameworkElementFactory_SetValueInt (onRenderNode, jniRefProperty, jniRef);", "+\tOS.GCHandle_Free (jniRefProperty);", "+\tint stackPanelName = createDotNetString (STACKPANEL_PART_NAME, false);", "-\tint stackPanelNode = OS.gcnew_FrameworkElementFactory (stackPanelType);", "+\tint cellContentNode = OS.gcnew_FrameworkElementFactory (stackPanelType, stackPanelName);", "+\tOS.GCHandle_Free (stackPanelType);", "+\tOS.GCHandle_Free (stackPanelName);", "+\t\tOS.GCHandle_Free (checkBoxType);", "+\t\tOS.GCHandle_Free (verticalAlignmentProperty);", "+\t\tOS.GCHandle_Free (marginProperty);", "+\t\tOS.GCHandle_Free (thickness);", "-\t\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, checkBoxNode);", "-\t\t//binding", "-\t\tint checkPath = createDotNetString (\"Check\", false);", "-\t\tint checkBinding = OS.gcnew_Binding (checkPath);", "-\t\tint isCheckedProperty = OS.ToggleButton_IsCheckedProperty ();", "-\t\tOS.FrameworkElementFactory_SetBinding (checkBoxNode, isCheckedProperty, checkBinding);", "-\t\tOS.GCHandle_Free (checkPath);", "-\t\tOS.GCHandle_Free (checkBinding);", "-\t\tOS.GCHandle_Free (isCheckedProperty);", "-\t\tOS.GCHandle_Free (checkBoxName);", "-\t\tOS.GCHandle_Free (thickness);", "-\t\tOS.GCHandle_Free (marginProperty);", "-\t\tOS.GCHandle_Free (verticalAlignmentProperty);", "+\t\tOS.FrameworkElementFactory_AppendChild (cellContentNode, checkBoxNode);", "+\t\tint fooProperty = OS.FrameworkElement_NameProperty();", "+\t\tOS.FrameworkElementFactory_SetValue (checkBoxNode, fooProperty, checkBoxName);", "+\t\tOS.GCHandle_Free (checkBoxName);", "+\t\tOS.GCHandle_Free (fooProperty);", "-\t\tOS.GCHandle_Free (checkBoxType);", "+\tOS.GCHandle_Free (textName);", "+\tOS.GCHandle_Free (textType);", "-\tint marginProperty = OS.FrameworkElement_MarginProperty ();", "-\tint thickness = OS.gcnew_Thickness (0, 0, 4, 0);", "-\tOS.FrameworkElementFactory_SetValue (imageNode, marginProperty, thickness);", "-\tint orientationProperty = OS.StackPanel_OrientationProperty ();", "-\tOS.FrameworkElementFactory_SetValueOrientation (stackPanelNode, orientationProperty, OS.Orientation_Horizontal);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, imageNode);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, textNode);", "-\tOS.FrameworkTemplate_VisualTree (template, stackPanelNode);", "-\t", "-\t//bindings", "-\tint cellConverter = OS.gcnew_SWTCellConverter ();", "-\tint textPath = createDotNetString (\"Text\", false);", "-\tint textBinding = OS.gcnew_Binding (textPath);", "-\tOS.Binding_Converter (textBinding, cellConverter);", "-\tOS.Binding_ConverterParameter (textBinding, index);", "-\tint textProperty = OS.TextBlock_TextProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (textNode, textProperty, textBinding);", "-\tint imagePath = createDotNetString (\"Image\", false);", "-\tint imageBinding = OS.gcnew_Binding (imagePath);", "-\tOS.Binding_Converter (imageBinding, cellConverter);", "-\tOS.Binding_ConverterParameter (imageBinding, index);", "-\tint imageProperty = OS.Image_SourceProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (imageNode, imageProperty, imageBinding);", "-\tOS.GCHandle_Free (textBinding);", "-\tOS.GCHandle_Free (textPath);", "-\tOS.GCHandle_Free (textProperty);", "-\tOS.GCHandle_Free (imageBinding);", "-\tOS.GCHandle_Free (imagePath);", "-\tOS.GCHandle_Free (imageProperty);", "-\tOS.GCHandle_Free (cellConverter);", "-\t", "-\tOS.GCHandle_Free (textName);", "+\tOS.GCHandle_Free (imageType);", "+\tint thickness = OS.gcnew_Thickness (0, 0, 4, 0);", "+\tint marginProperty = OS.FrameworkElement_MarginProperty ();", "+\tOS.FrameworkElementFactory_SetValue (imageNode, marginProperty, thickness);", "-\tOS.GCHandle_Free (stackPanelType);", "-\tOS.GCHandle_Free (imageType);", "-\tOS.GCHandle_Free (textType);", "-\tOS.GCHandle_Free (stackPanelNode);", "-\tOS.GCHandle_Free (textNode);", "-\tOS.GCHandle_Free (imageNode);", "+\tint orientationProperty = OS.StackPanel_OrientationProperty ();", "+\tOS.FrameworkElementFactory_SetValueOrientation (cellContentNode, orientationProperty, OS.Orientation_Horizontal);", "+\tOS.FrameworkElementFactory_AppendChild (cellContentNode, imageNode);", "+\tOS.GCHandle_Free (imageNode);", "+\tOS.FrameworkElementFactory_AppendChild (cellContentNode, textNode);", "+\tOS.GCHandle_Free (textNode);", "+\tOS.FrameworkElementFactory_AppendChild (onRenderNode, cellContentNode);", "+\tOS.GCHandle_Free (cellContentNode);", "+\tOS.FrameworkTemplate_VisualTree (template, onRenderNode);", "+\tOS.GCHandle_Free (onRenderNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c373ae78a54be29935d0bc49adee2e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  int createCellTemplate (int index)", "signatureAfterChange": "  int createCellTemplate (int index)", "diff": ["+\tint swtStackPanelType = OS.SWTStackPanel_typeid ();", "+\tint swtstackPanelName = createDotNetString(RENDER_PANEL_NAME, false);", "+\tint onRenderNode = OS.gcnew_FrameworkElementFactory (swtStackPanelType, swtstackPanelName);", "+\tOS.GCHandle_Free(swtstackPanelName);", "+\tOS.GCHandle_Free (swtStackPanelType);", "+\tint jniRefProperty = OS.SWTStackPanel_JNIRefProperty ();", "+\tOS.FrameworkElementFactory_SetValueInt (onRenderNode, jniRefProperty, jniRef);", "+\tOS.GCHandle_Free (jniRefProperty);", "+\tint stackPanelName = createDotNetString (STACKPANEL_PART_NAME, false);", "-\tint stackPanelNode = OS.gcnew_FrameworkElementFactory (stackPanelType);", "+\tint cellContentNode = OS.gcnew_FrameworkElementFactory (stackPanelType, stackPanelName);", "+\tOS.GCHandle_Free (stackPanelType);", "+\tOS.GCHandle_Free (stackPanelName);", "-\t\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, checkBoxNode);", "-\t\t//binding", "-\t\tint checkPath = createDotNetString (\"Check\", false);", "-\t\tint checkBinding = OS.gcnew_Binding (checkPath);", "-\t\tint isCheckedProperty = OS.ToggleButton_IsCheckedProperty ();", "-\t\tOS.FrameworkElementFactory_SetBinding (checkBoxNode, isCheckedProperty, checkBinding);", "-\t\tOS.GCHandle_Free (checkPath);", "-\t\tOS.GCHandle_Free (checkBinding);", "-\t\tOS.GCHandle_Free (isCheckedProperty);", "+\t\tOS.FrameworkElementFactory_AppendChild (cellContentNode, checkBoxNode);", "+\tOS.GCHandle_Free (textName);", "+\tOS.GCHandle_Free (textType);", "+\tOS.GCHandle_Free (verticalAlignmentProperty);", "+\tOS.GCHandle_Free (imageName);", "+\tOS.GCHandle_Free (imageType);", "-\tint orientationProperty = OS.StackPanel_OrientationProperty ();", "-\tOS.FrameworkElementFactory_SetValueOrientation (stackPanelNode, orientationProperty, OS.Orientation_Horizontal);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, imageNode);", "-\tOS.FrameworkElementFactory_AppendChild (stackPanelNode, textNode);", "-\tOS.FrameworkTemplate_VisualTree (template, stackPanelNode);", "-\t", "-\t//bindings", "-\tint cellConverter = OS.gcnew_SWTCellConverter ();", "-\tint textPath = createDotNetString (\"Text\", false);", "-\tint textBinding = OS.gcnew_Binding (textPath);", "-\tOS.Binding_Converter (textBinding, cellConverter);", "-\tOS.Binding_ConverterParameter (textBinding, index);", "-\tint textProperty = OS.TextBlock_TextProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (textNode, textProperty, textBinding);", "-\tint imagePath = createDotNetString (\"Image\", false);", "-\tint imageBinding = OS.gcnew_Binding (imagePath);", "-\tOS.Binding_Converter (imageBinding, cellConverter);", "-\tOS.Binding_ConverterParameter (imageBinding, index);", "-\tint imageProperty = OS.Image_SourceProperty ();", "-\tOS.FrameworkElementFactory_SetBinding (imageNode, imageProperty, imageBinding);", "-\tOS.GCHandle_Free (textBinding);", "-\tOS.GCHandle_Free (textPath);", "-\tOS.GCHandle_Free (textProperty);", "-\tOS.GCHandle_Free (imageBinding);", "-\tOS.GCHandle_Free (imagePath);", "-\tOS.GCHandle_Free (imageProperty);", "-\tOS.GCHandle_Free (cellConverter);", "-\tOS.GCHandle_Free (stackPanelType);", "-\tOS.GCHandle_Free (imageType);", "-\tOS.GCHandle_Free (textType);", "-\tOS.GCHandle_Free (stackPanelNode);", "-\tOS.GCHandle_Free (textName);", "-\tOS.GCHandle_Free (textNode);", "-\tOS.GCHandle_Free (imageName);", "-\tOS.GCHandle_Free (imageNode);", "+\tint orientationProperty = OS.StackPanel_OrientationProperty ();", "+\tOS.FrameworkElementFactory_SetValueOrientation (cellContentNode, orientationProperty, OS.Orientation_Horizontal);", "-\tOS.GCHandle_Free (verticalAlignmentProperty);", "+\tOS.FrameworkElementFactory_AppendChild (cellContentNode, imageNode);", "+\tOS.GCHandle_Free (imageNode);", "+\tOS.FrameworkElementFactory_AppendChild (cellContentNode, textNode);", "+\tOS.GCHandle_Free (textNode);", "+\tOS.FrameworkElementFactory_AppendChild (onRenderNode, cellContentNode);", "+\tOS.GCHandle_Free (cellContentNode);", "+\tOS.FrameworkTemplate_VisualTree (template, onRenderNode);", "+\tOS.GCHandle_Free (onRenderNode);"]}], "num": 43932}