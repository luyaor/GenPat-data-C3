{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8759abe97754c58b8831054c93328db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af4afbade0cf128fbc42610a5e53143", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t\t\t \tint handleItemCallback(int rowID, int colID, int item)", "signatureAfterChange": "  int itemDataProc (int browser, int id, int property, int itemData, int setValue)", "diff": ["+", "+int itemDataProc (int browser, int id, int property, int itemData, int setValue) {", "+\tint index = id - 1;", "+\tswitch (property) {", "+\t\tcase COLUMN_ID: {", "+\t\t\tString text = items [index];", "+\t\t\tchar [] buffer = new char [text.length ()];", "+\t\t\ttext.getChars (0, buffer.length, buffer, 0);", "+\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, buffer.length);", "+\t\t\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\t\t\tOS.SetDataBrowserItemDataText (itemData, ptr);", "+\t\t\tOS.CFRelease (ptr);", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn OS.noErr;", "+}", "-\t\t\t", "-\tint handleItemCallback(int rowID, int colID, int item) {", "-\t\t", "-\t\tif (colID != COL_ID) {", "-\t\t\t//System.out.println(\"List.handleItemCallback: wrong column id: \" + colID);", "-\t\t\treturn OS.kNoErr;", "-\t\t}", "-\t\t\t", "-\t\tString s= get(rowID);", "-\t\tif (s == null) {", "-\t\t\tSystem.out.println(\"List.handleItemCallback: can't find row with id: \" + rowID);", "-\t\t\treturn -1;", "-\t\t}", "-\t\t\t", "-\t\tint sHandle= 0;", "-\t\ttry {", "-\t\t\tsHandle= OS.CFStringCreateWithCharacters(s);", "-\t\t\tOS.SetDataBrowserItemDataText(item, sHandle);", "-\t\t} finally {", "-\t\t\tif (sHandle != 0)", "-\t\t\t\tOS.CFRelease(sHandle);", "-\t\t}", "-\t\treturn OS.kNoErr;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a52778947454c503c7a65c633114a0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tint handleItemCallback(int cHandle, int colID, int rowID, int item)", "signatureAfterChange": " \t \tint handleItemCallback(int rowID, int colID, int item)", "diff": ["-\tint handleItemCallback(int cHandle, int colID, int rowID, int item) {", "+\tint handleItemCallback(int rowID, int colID, int item) {", "+\t\t", "-\t\t\tSystem.out.println(\"List.handleItemCallback: wrong column ID: \" + colID);", "-\t\t\treturn 0;", "+\t\t\t//System.out.println(\"List.handleItemCallback: wrong column id: \" + colID);", "+\t\t\treturn OS.kNoErr;", "-\t\tif (s != null) {", "-\t\t\tint sHandle= 0;", "-\t\t\ttry {", "-\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(s);", "-\t\t\t\tOS.SetDataBrowserItemDataText(item, sHandle);", "-\t\t\t} finally {", "-\t\t\t\tif (sHandle != 0)", "-\t\t\t\t\tOS.CFRelease(sHandle);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tSystem.out.println(\"List.handleItemCallback: index out of range: \" + rowID);", "+\t\tif (s == null) {", "+\t\t\tSystem.out.println(\"List.handleItemCallback: can't find row with id: \" + rowID);", "+\t\t\treturn -1;", "-\t\treturn 0;", "+\t\t\t", "+\t\tint sHandle= 0;", "+\t\ttry {", "+\t\t\tsHandle= OS.CFStringCreateWithCharacters(s);", "+\t\t\tOS.SetDataBrowserItemDataText(item, sHandle);", "+\t\t} finally {", "+\t\t\tif (sHandle != 0)", "+\t\t\t\tOS.CFRelease(sHandle);", "+\t\t}", "+\t\treturn OS.kNoErr;"]}], "num": 10841}