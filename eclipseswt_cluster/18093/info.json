{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53da84db639c5e50d850149c3a6a525a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6115082d9ff1c436887e3bfdbac900", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void subtract (int[] pointArray)", "signatureAfterChange": " public void subtract (int[] pointArray)", "diff": ["-\tint /*long*/ polyRgn = polyRgn(pointArray, pointArray.length);", "-\tOS.DiffRgn(handle, polyRgn, handle);", "-\tOS.DisposeRgn(polyRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ polyRgn = polyRgn(pointArray, pointArray.length);", "+\t\tOS.DiffRgn(handle, polyRgn, handle);", "+\t\tOS.DisposeRgn(polyRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5d75fd5e963060261b017c8a4de37a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t void add(int[] pointArray, int count)", "signatureAfterChange": " \t void add(int[] pointArray, int count)", "diff": ["-\tint /*long*/ polyRgn = polyRgn(pointArray, count);", "-\tOS.UnionRgn(handle, polyRgn, handle);", "-\tOS.DisposeRgn(polyRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ polyRgn = polyRgn(pointArray, count);", "+\t\tOS.UnionRgn(handle, polyRgn, handle);", "+\t\tOS.DisposeRgn(polyRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}], "num": 18093}