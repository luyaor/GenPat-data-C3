{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a18aff957d40a6108fa3a0cc9d20859", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b604921f463c02f40acbb1fc72a7a28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f8474c9a7ece35a081d3af6cb7ca4721b50be1b1", "commitAfterChange": "3276154ce0a916f4ea08fedd5939fe8cee920144", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public int indexOf (String string, int start)", "signatureAfterChange": " public int indexOf (String string, int start)", "diff": ["-\t\r", "-\t// NOT DONE - start is ignored\r", "-\treturn indexOf (string);\r", "+\tif (start == 0) return indexOf(string);\r", "+\tint [] args = new int [] {\r", "+\t\tOS.Pt_ARG_LIST_ITEM_COUNT, 0, 0,\r", "+\t\tOS.Pt_ARG_ITEMS, 0, 0,\r", "+\t};\r", "+\tOS.PtGetResources (handle, args.length / 3, args);\r", "+\tint count = args [1];\r", "+\tif (!(0 <= start && start < count)) return -1;\r", "+\tint [] item = new int [1];\r", "+\tfor (int index=start; index<count; index++) {\r", "+\t\tOS.memmove (item, args [4] + (index * 4), 4);\r", "+\t\tint length = OS.strlen (item [0]);\r", "+\t\tbyte [] buffer = new byte [length];\r", "+\t\tOS.memmove (buffer, item [0], length);\r", "+\t\tif (string.equals(new String (Converter.mbcsToWcs (null, buffer)))) return index;\r", "+\t}\r", "+\treturn -1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad680a853c0fb85e89f7fe7be1a50e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "a846f6a857ae30ec0f5885cfa56d93930bcca4af", "commitAfterChange": "f8474c9a7ece35a081d3af6cb7ca4721b50be1b1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public int indexOf (String string, int start)", "signatureAfterChange": " public int indexOf (String string, int start)", "diff": ["-\t\r", "-\t// NOT DONE - start is ignored\r", "-\treturn indexOf (string);\r", "+\tif (start == 0) return indexOf(string);\r", "+\tint [] args = new int [] {\r", "+\t\tOS.Pt_ARG_LIST_ITEM_COUNT, 0, 0,\r", "+\t\tOS.Pt_ARG_ITEMS, 0, 0,\r", "+\t};\r", "+\tOS.PtGetResources (handle, args.length / 3, args);\r", "+\tint count = args [1];\r", "+\tif (!(0 <= start && start < count)) return -1;\r", "+\tint [] item = new int [1];\r", "+\tfor (int index=start; index<count; index++) {\r", "+\t\tOS.memmove (item, args [4] + (index * 4), 4);\r", "+\t\tint length = OS.strlen (item [0]);\r", "+\t\tbyte [] buffer = new byte [length];\r", "+\t\tOS.memmove (buffer, item [0], length);\r", "+\t\tif (string.equals(new String (Converter.mbcsToWcs (null, buffer)))) return index;\r", "+\t}\r", "+\treturn -1;\r"]}], "num": 33119}