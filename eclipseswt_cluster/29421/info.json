{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd2afe75bd4e0f26340acd21dff84451", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7683ad0a17e553305f7df65878eacf43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "811bdeccc1df1329eadad9688114f47a526dc8ab", "commitAfterChange": "3d4fc78948c5be186415043f009f2521a6863797", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r void resizeClientArea (int width, int height)", "signatureAfterChange": "\r \r void resizeClientArea (int width, int height)", "diff": ["+\tPhPoint_t pt = new PhPoint_t ();\r", "+\tpt.x = (short) clientWidth;\r", "+\tpt.y = (short) clientHeight;\r", "+\tint ptr = OS.malloc (PhPoint_t.sizeof);\r", "+\tOS.memmove (ptr, pt, PhPoint_t.sizeof);\r", "+\targs = new int [] {OS.Pt_ARG_POS, ptr, 0};\r", "+\tOS.PtSetResources (OS.PtWidgetChildBack (scrolledHandle), args.length / 3, args);\r", "+\tOS.free (ptr);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c8dbf44d2f221e428b4a1189c4fc816", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "912f7235b81078eb5b127bdf9e5c55ee4f5a763c", "commitAfterChange": "4d0b24a27232ff40c8169511178d0b60b9efdcc2", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "\r \r LRESULT WM_CONTEXTMENU (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_CONTEXTMENU (int wParam, int lParam)", "diff": ["+\tif (wParam != handle) return null;\r", "+\t\r", "+\t/*\r", "+\t* Feature in Windows.  When the user presses  WM_NCRBUTTONUP,\r", "+\t* a WM_CONTEXTMENU message is generated.  This happens when\r", "+\t* the user releases the mouse over a scroll bar.  Normally,\r", "+\t* window displays the default scrolling menu but applications\r", "+\t* can process WM_CONTEXTMENU to display a different menu.\r", "+\t* Typically, an application does not want to supply a special\r", "+\t* scroll menu.  The fix is to look for a WM_CONTEXTMENU that\r", "+\t* originated from a mouse event and display the menu when the\r", "+\t* mouse was released in the client area.\r", "+\t*/\r", "+\tPOINT pt = new POINT ();\r", "+\tpt.x = (short) (lParam & 0xFFFF);\r", "+\tpt.y = (short) (lParam >> 16);\r", "+\tif (pt.x != -1 || pt.y != -1) {\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tOS.GetClientRect (handle, rect);\r", "+\t\tOS.ScreenToClient (handle, pt);\r", "+\t\tif (!OS.PtInRect (rect, pt)) return null;\r", "+\t}\r", "+\t\r", "-\t* have been destroyed but not removed from the control.\r", "+\t* have been destroyed.\r", "-\tif (wParam != handle) return null;\r", "-//\t\tint x = (short) (lParam & 0xFFFF);\r", "-//\t\tint y = (short) (lParam >> 16);\r"]}], "num": 29421}