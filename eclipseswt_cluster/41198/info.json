{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c116912b35e69c3635f0a664d84b5980", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d592c5848111a045984558474258c600", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 70, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreate(buffer, OS.XmFONTLIST_DEFAULT_TAG);", "-\tint fontList = data.fontList;", "-\tint width = OS.XmStringWidth(fontList, xmString);", "-\tint height = OS.XmStringHeight(fontList, xmString);", "-\tOS.XmStringFree(xmString);", "-\treturn new Point(width, height);", "-}", "+\tsetString(string);", "+\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);", "+\tint width, height;", "+\tif (string.length() == 0) {", "+\t\twidth = 0;", "+\t\theight = getFontHeight();", "+\t} else {", "+\t\tint fontList = data.fontList;", "+\t\tint xmString = data.xmString;", "+\t\twidth = OS.XmStringWidth(fontList, xmString);", "+\t\theight = OS.XmStringHeight(fontList, xmString);", "+\treturn new Point(data.stringWidth = width, data.stringHeight = height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76f7cc461be23d527c08bfe31b3f30c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "90989c7104593bfd4e0ff41bf464fbe7b3ab7a39", "commitAfterChange": "8e1fb2474c2f3af253317b3903eca7335c2af569", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tint [] argList = {OS.XmNtextField, 0}; ", "+\t\tint [] argList = {OS.XmNmaximumValue, 0};", "-\t\tint ptr = OS.XmTextGetString (argList [1]);", "-\t\tif (ptr != 0) {", "-\t\t\tint fontList = font.handle;", "-\t\t\tint size = OS.strlen (ptr);", "-\t\t\tif (size != 0) {", "-\t\t\t\tbyte [] buffer = new byte [size + 1];", "-\t\t\t\tOS.memmove (buffer, ptr, size);", "-\t\t\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\t\t\twidth = OS.XmStringWidth (fontList, xmString);", "-\t\t\t\tOS.XmStringFree (xmString);", "-\t\t\t}", "-\t\t\tOS.XtFree (ptr);", "-\t\t}", "+\t\tString string = String.valueOf (argList [1]);", "+\t\tbyte [] buffer = Converter.wcsToMbcs (getCodePage(), string, true);", "+\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "+\t\tint fontList = font.handle;", "+\t\twidth = OS.XmStringWidth (fontList, xmString);", "+\t\tOS.XmStringFree (xmString);"]}], "num": 41198}