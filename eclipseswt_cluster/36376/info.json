{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3b31ad65da35df91bc0290fd26fae65", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062c5e441f290093cab8ba3008bbfae0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "a09068c4a3fafb021dfd710418d4836bad00258d", "commitAfterChange": "f9f9e11aa4eac46a27d734f0803bab92e76b9407", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public void setSelection (boolean selected)", "signatureAfterChange": "\r public void setSelection (boolean selected)", "diff": ["-\tint bits = selected ? OS.BST_CHECKED : OS.BST_UNCHECKED;\r", "-\tOS.SendMessage (handle, OS.BM_SETCHECK, bits, 0);\r", "+\tint flags = selected ? OS.BST_CHECKED : OS.BST_UNCHECKED;\r", "+\t\r", "+\t/*\r", "+\t* Feature in Windows. When BM_SETCHECK is used\r", "+\t* to set the checked state of a radio or check\r", "+\t* button, it sets the WM_TABSTOP style.  This\r", "+\t* is undocumented and unwanted.  The fix is\r", "+\t* to save and restore the window style bits.\r", "+\t*/\r", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\tOS.SendMessage (handle, OS.BM_SETCHECK, flags, 0);\r", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817a1a7e227b1bf9edeab402242d0a04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "07a875318539ed120bce4ef375483c0cea4d9efd", "commitAfterChange": "35f24cd03add9337e8b68bfeb7beed6f47dde1d7", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  boolean mnemonicMatch (char ch)", "signatureAfterChange": "  boolean mnemonicMatch (char ch)", "diff": ["-\treturn OS.SendMessage (handle, OS.TB_MAPACCELERATOR, key, id) != 0;", "+\tif (OS.SendMessage (handle, OS.TB_MAPACCELERATOR, key, id) == 0) {", "+\t\treturn false;", "+\t}", "+\t/*", "+\t* Feature in Windows.  TB_MAPACCELERATOR matches either the mnemonic", "+\t* character or the first character in a tool item.  This behavior is", "+\t* undocumented and unwanted.  The fix is to ensure that the tool item", "+\t* contains a mnemonic when TB_MAPACCELERATOR returns true.", "+\t*/", "+\tint index = OS.SendMessage (handle, OS.TB_COMMANDTOINDEX, id [0], 0);", "+\tif (index == -1) return false;", "+\treturn items [id [0]].text.indexOf ('&') != -1;"]}], "num": 36376}