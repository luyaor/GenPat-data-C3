{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d901e2aa981d04041dc5aeec555bbd2a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "767f46722ebd478b901c09f4da4aaf6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "383485f9396fa5b3ecc9c6104e597ef309bf8b65", "commitAfterChange": "d23fba0b8199ef3dc1f513e3ea053b6773edb46c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\t* Feature in Windows.  When a table item is reselected,", "-\t* the table does not issue a WM_NOTIFY when the item", "-\t* state has not changed.  This is inconsistent with", "-\t* the list widget and other widgets in Windows.  The", "-\t* fix is to detect the case when an item is reselected", "-\t* and issue the notification.", "+\t* Feature in Windows.  When a table item is reselected", "+\t* in a single-select table, Windows does not issue a", "+\t* WM_NOTIFY because the item state has not changed.", "+\t* This is strictly correct but is inconsistent with the", "+\t* list widget and other widgets in Windows.  The fix is", "+\t* to detect the case when an item is reselected and issue", "+\t* the notification.", "-\tint count = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOUNT, 0, 0);", "-\tif (count == 1 && pinfo.iItem != -1) {", "-\t\tLVITEM lvItem = new LVITEM ();", "-\t\tlvItem.mask = OS.LVIF_STATE;", "-\t\tlvItem.stateMask = OS.LVIS_SELECTED;", "-\t\tlvItem.iItem = pinfo.iItem;", "-\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "-\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;", "-\t\tif (wasSelected) ignoreSelect = true;", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tint count = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOUNT, 0, 0);", "+\t\tif (count == 1 && pinfo.iItem != -1) {", "+\t\t\tLVITEM lvItem = new LVITEM ();", "+\t\t\tlvItem.mask = OS.LVIF_STATE;", "+\t\t\tlvItem.stateMask = OS.LVIS_SELECTED;", "+\t\t\tlvItem.iItem = pinfo.iItem;", "+\t\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);", "+\t\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;", "+\t\t\tif (wasSelected) ignoreSelect = true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb831e03cc144c372191425957387ea3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void select (int [] indices)", "signatureAfterChange": " public void select (int [] indices)", "diff": ["-    /* AW", "+\t\t/* AW", "+\t\t*/", "-    */", "-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-    /* AW", "-\tfor (int i=0; i<indices.length; i++) {", "-\t\tint index = indices [i] + 1;", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dada63d924fd7662c1393c3965a1398", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "89b8a19df17b0b9e1ecd606fa26fc33623296ee1", "commitAfterChange": "4f98072059a9bdb951f6b1c456e89b55a75dc35b", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\tif (pinfo.iItem == -1) {", "-\t\tif (!display.captureChanged && !isDisposed ()) {", "-\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif (pinfo.iItem == -1) {", "+\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t}", "+\t\t\treturn LRESULT.ZERO;", "-\t\treturn LRESULT.ZERO;"]}], "num": 34386}