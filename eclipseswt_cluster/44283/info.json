{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36d4120d50d8c84edf08ceacc0c3d591", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09de58bb7e29fcdd6906349b573d1b85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 149, "signatureBeforeChange": "  int OnLocationChange (int aWebProgress, int aRequest, int aLocation)", "signatureAfterChange": "  int OnLocationChange (int aWebProgress, int aRequest, int aLocation)", "diff": ["-\tnsIDOMWindow domWindow = new nsIDOMWindow (aDOMWindow[0]);", "-\trc = domWindow.GetTop (aTop);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tif (aTop[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-\tdomWindow.Release ();", "-\t", "-\tnsIDOMWindow topWindow = new nsIDOMWindow (aTop[0]);", "-\ttopWindow.Release ();", "+\tif (!IsPre_2) {", "+\t\tnsIDOMWindow domWindow = new nsIDOMWindow (aDOMWindow[0]);", "+\t\trc = domWindow.GetTop (aTop);", "+\t\tdomWindow.Release ();", "+\t\tnsIDOMWindow topWindow = new nsIDOMWindow (aTop[0]);", "+\t\ttopWindow.Release ();", "+\t} else {", "+\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (aDOMWindow[0]);", "+\t\trc = domWindow.GetTop (aTop);", "+\t\tdomWindow.Release ();", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (aTop[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\tnsIDOMWindow_1_9 topWindow = new nsIDOMWindow_1_9 (aTop[0]);", "+\t\ttopWindow.Release ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897746a8c89e010fcd822b79b4c9bf73", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/HelperAppLauncherDialog.java", "commitBeforeChange": "a98eb2d6a83b6b63d61b42e51f7f149a33b7fbac", "commitAfterChange": "395692675e255578e24bb51eb09e1b4119931dff", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int Show (int aLauncher, int aContext, int aReason)", "signatureAfterChange": "  int Show (int aLauncher, int aContext, int aReason)", "diff": ["-\t * The interface for nsIHelperAppLauncher changed as of mozilla 1.8.  Query the received", "-\t * nsIHelperAppLauncher for the new interface, and if it is not found then fall back to", "-\t * the old interface. ", "-\t */", "+\t* The interface for nsIHelperAppLauncher changed in GRE versions 1.8 and 1.9.  Query for", "+\t* each of these interfaces in turn until one is found.", "+\t*/", "-\tint rc = supports.QueryInterface (nsIHelperAppLauncher_1_8.NS_IHELPERAPPLAUNCHER_IID, result);", "-\tif (rc == 0) {\t/* >= 1.8 */", "+\tint rc = supports.QueryInterface (nsIHelperAppLauncher_1_9.NS_IHELPERAPPLAUNCHER_IID, result);", "+\tif (rc == 0) {", "+\t\tnsIHelperAppLauncher_1_9 helperAppLauncher = new nsIHelperAppLauncher_1_9 (aLauncher);", "+\t\trc = helperAppLauncher.SaveToDisk (0, false);", "+\t\thelperAppLauncher.Release ();", "+\t\treturn rc;", "+\t}", "+", "+\tresult[0] = 0;", "+\trc = supports.QueryInterface (nsIHelperAppLauncher_1_8.NS_IHELPERAPPLAUNCHER_IID, result);", "+\tif (rc == 0) {", "+"]}], "num": 44283}