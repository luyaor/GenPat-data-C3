{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8829cbb1dcf1bc35bfce244cd5c3b4bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525697dcb4c44ddad0db187388d6b9e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "2651399e384e9c4829133440651b843cd4086a42", "commitAfterChange": "ac97e9de76dcc2aa6055a132a144ae7128e3ee2d", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 124, "signatureBeforeChange": " public static final synchronized native void cairo_matrix_transform_point (double[] matrix, double[] x, double[] y);", "signatureAfterChange": " public static final void cairo_matrix_transform_point(double[] matrix, double[] x, double[] y)", "diff": ["-public static final synchronized native void cairo_matrix_transform_distance (double[] matrix, double[] dx, double[] dy);", "-public static final synchronized native void cairo_matrix_transform_point (double[] matrix, double[] x, double[] y);", "+public static final native void _cairo_matrix_transform_point(double[] matrix, double[] x, double[] y);", "+public static final void cairo_matrix_transform_point(double[] matrix, double[] x, double[] y) {", "+\tlock.lock();", "+\ttry {", "+\t\t_cairo_matrix_transform_point(matrix, x, y);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de091673e6355dac2e74378da82d1b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "2651399e384e9c4829133440651b843cd4086a42", "commitAfterChange": "ac97e9de76dcc2aa6055a132a144ae7128e3ee2d", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 122, "signatureBeforeChange": " public static final synchronized native void cairo_matrix_transform_distance (double[] matrix, double[] dx, double[] dy);", "signatureAfterChange": " public static final void cairo_matrix_transform_distance(double[] matrix, double[] dx, double[] dy)", "diff": ["-public static final synchronized native void cairo_matrix_multiply (double[] result, double[] a, double[] b);", "-public static final synchronized native void cairo_matrix_transform_distance (double[] matrix, double[] dx, double[] dy);", "+public static final native void _cairo_matrix_transform_distance(double[] matrix, double[] dx, double[] dy);", "+public static final void cairo_matrix_transform_distance(double[] matrix, double[] dx, double[] dy) {", "+\tlock.lock();", "+\ttry {", "+\t\t_cairo_matrix_transform_distance(matrix, dx, dy);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 18755}