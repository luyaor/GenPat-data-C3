{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f92027db444a86ac61da4b834b15667", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58d2655b351bb9ed20487acbd3ade5ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "5e7637cb557b1adc4b0e4c1cf58968503a3898a4", "commitAfterChange": "c9048e95ea08fffe821f6c08479811651305d14a", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tvoid installListeners()", "signatureAfterChange": "  \tvoid installListeners()", "diff": ["-\t\tListener caretListener = new Listener() {", "+\t\tstyledText.addListener(SWT.MouseDown, new Listener() {", "-\t\t\t\tif (event.type == SWT.KeyDown && event.keyCode == SWT.INSERT) {", "-\t\t\t\t\tinsert = !insert;", "-\t\t\t\t}", "-\t\t\t\tupdateStatusBar();", "-\t\t\t\t", "-\t\t\t\tif (event.type == SWT.MouseUp && link != null) {", "-\t\t\t\t\tint offset = styledText.getCaretOffset();", "-\t\t\t\t\tStyleRange range = offset > 0 ? styledText.getStyleRangeAtOffset(offset-1) : null;", "-\t\t\t\t\tif (range != null) {", "-\t\t\t\t\t\tif (link == range.data) {", "-\t\t\t\t\t\t\t//\tTODO", "-\t\t\t\t\t\t\tSystem.out.println(\"LINK: \" + link);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tupdateToolBar();", "+\t\t\t\thandleMouseDown(event);", "-\t\t};", "-\t\tstyledText.addListener(SWT.MouseDown, caretListener);", "-\t\tstyledText.addListener(SWT.MouseUp, caretListener);", "-\t\tstyledText.addListener(SWT.KeyDown, caretListener);", "+\t\t});", "+\t\tstyledText.addListener(SWT.MouseUp, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\thandleMouseUp(event);", "+\t\t\t}", "+\t\t});", "+\t\tstyledText.addListener(SWT.KeyDown, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\thandleKeyDown(event);", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d59b880e91b8caf03a3fd19c962300", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e170fc54c6b4ebe87f5d0d3787b52ef7c74c6447", "commitAfterChange": "d569a8e4e3f708a454ad8d2b1a32242d0ad822fd", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 217, "signatureBeforeChange": "  void setZOrder (Control sibling, boolean above, boolean fixRelations, boolean fixChildren)", "signatureAfterChange": "  void setZOrder (Control sibling, boolean above, boolean fixRelations, boolean fixChildren)", "diff": ["-\t\t\tXWindowChanges changes = new XWindowChanges ();", "-\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (siblingWindow != 0 ? siblingWindow : redrawWindow);", "-\t\t\tchanges.stack_mode = above ? OS.Above : OS.Below;", "-\t\t\tif (redrawWindow != 0 && siblingWindow == 0) changes.stack_mode = OS.Below;", "-\t\t\tint /*long*/ xDisplay = OS.gdk_x11_drawable_get_xdisplay (window);", "-\t\t\tint /*long*/ xWindow = OS.gdk_x11_drawable_get_xid (window);", "-\t\t\tint xScreen = OS.XDefaultScreen (xDisplay);", "-\t\t\tint flags = OS.CWStackMode | OS.CWSibling;", "-\t\t\t/*", "-\t\t\t* Feature in X. If the receiver is a top level, XConfigureWindow ()", "-\t\t\t* will fail (with a BadMatch error) for top level shells because top", "-\t\t\t* level shells are reparented by the window manager and do not share", "-\t\t\t* the same X window parent.  This is the correct behavior but it is", "-\t\t\t* unexpected.  The fix is to use XReconfigureWMWindow () instead.", "-\t\t\t* When the receiver is not a top level shell, XReconfigureWMWindow ()", "-\t\t\t* behaves the same as XConfigureWindow ().", "-\t\t\t*/", "-\t\t\tOS.XReconfigureWMWindow (xDisplay, xWindow, xScreen, flags, changes);\t\t\t", "+\t\t\tint /*long*/ siblingW = siblingWindow != 0 ? siblingWindow : redrawWindow;", "+\t\t\tboolean stack_mode = above;", "+\t\t\tif (redrawWindow != 0 && siblingWindow == 0) stack_mode = false;", "+\t\t\trestackWindow (window, siblingW, stack_mode);", "-\t\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (window);", "-\t\t\t\tchanges.stack_mode = OS.Above;", "-\t\t\t\txWindow = OS.gdk_x11_drawable_get_xid (enableWindow);", "-\t\t\t\tOS.XReconfigureWMWindow (xDisplay, xWindow, xScreen, flags, changes);", "+\t\t\t\t restackWindow (enableWindow, window, true);"]}], "num": 7650}