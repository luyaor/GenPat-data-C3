{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44dbebf2a8e8905bf458e33eb5ddf39e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66eee0f01f04ebf99cc835037b7687a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "dea4757e69a568e0c0a44a67815756ef9e01618f", "commitAfterChange": "212ff4fbf0b1b449d7f0438bdb39966b0b2ad333", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Object getContents(Transfer transfer, int clipboards)", "signatureAfterChange": " public Object getContents(Transfer transfer, int clipboards)", "diff": ["-\tint[] typeIds = transfer.getTypeIds();", "-\t// get data from system clipboard", "-\tfor (int i=0; i<typeIds.length; i++) {", "+\tString[] typeNames = transfer.getTypeNames();", "+\tNSMutableArray types = NSMutableArray.arrayWithCapacity(typeNames.length);", "+\tfor (int i = 0; i < typeNames.length; i++) {", "+\t\ttypes.addObject(NSString.stringWith(typeNames[i]));", "+\t}", "+\tNSString type = pasteboard.availableTypeFromArray(types);", "+\tif (type != null) {", "-\t\tString type = Transfer.types[typeIds[i]];", "-\t\tNSString dataType = NSString.stringWith(type);", "-\t\tif (dataType.isEqual(OS.NSStringPboardType) ||", "-\t\t\t\tdataType.isEqual(OS.NSRTFPboardType)) {", "-\t\t\ttdata.data = pasteboard.stringForType(dataType);", "-\t\t} else if (dataType.isEqual(OS.NSFilenamesPboardType)) {", "-\t\t\ttdata.data = new NSArray(pasteboard.propertyListForType(dataType).id);", "+\t\tif (type.isEqual(OS.NSStringPboardType) || type.isEqual(OS.NSRTFPboardType)) {", "+\t\t\ttdata.data = pasteboard.stringForType(type);", "+\t\t} else if (type.isEqual(OS.NSFilenamesPboardType)) {", "+\t\t\ttdata.data = new NSArray(pasteboard.propertyListForType(type).id);", "-\t\t\ttdata.data = pasteboard.dataForType(dataType);", "+\t\t\ttdata.data = pasteboard.dataForType(type);", "-\t\t\ttdata.type = type;\t\t", "+\t\t\ttdata.type = Transfer.getString(type);\t\t", "-\treturn null;\t// No data available for this transfer", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb4827c73b2f9ba221b19633ae964c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["-\tif (OS.ClearCurrentScrap() != OS.noErr) {", "+\tNSPasteboard pasteboard = NSPasteboard.generalPasteboard();", "+\tif (pasteboard == null) {", "-\tscrap = 0;", "-\tint[] currentScrap = new int[1];", "-\tif (OS.GetCurrentScrap(currentScrap) != OS.noErr) {", "-\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t}", "-\tscrap = currentScrap[0];", "-\t// copy data directly over to System clipboard (not deferred)", "-\t\t\ttransferData.type = typeIds[j];", "-\t\t\tdataTypes[i].javaToNative(data[i], transferData); ", "-\t\t\tif (transferData.result != OS.noErr) {", "-\t\t\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t\t\t}", "-\t\t\t//Drag and Drop can handle multiple items in one transfer but the", "-\t\t\t//Clipboard can not.", "-\t\t\tbyte[] datum = transferData.data[0];", "-\t\t\tif (OS.PutScrapFlavor(scrap, transferData.type, 0, datum.length, datum) != OS.noErr){", "-\t\t\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "+\t\t\ttransferData.type = Transfer.types[typeIds[j]];", "+\t\t\tdataTypes[i].javaToNative(data[i], transferData);", "+\t\t\tNSObject tdata = transferData.data;", "+\t\t\tNSString dataType = NSString.stringWith(transferData.type);", "+\t\t\tdeclareTypes(pasteboard);", "+\t\t\tif (dataType.isEqual(OS.NSStringPboardType) ||", "+\t\t\t\t\tdataType.isEqual(OS.NSRTFPboardType)) {", "+\t\t\t\tpasteboard.setString((NSString) tdata, dataType);", "+\t\t\t} else if (dataType.isEqual(OS.NSFilenamesPboardType)) {", "+\t\t\t\tpasteboard.setPropertyList((NSArray) tdata, dataType);", "+\t\t\t} else {", "+\t\t\t\tpasteboard.setData((NSData) tdata, dataType);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d09cd24d0a0281dd0d51a291f04e15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Object getContents(Transfer transfer, int clipboards)", "signatureAfterChange": " public Object getContents(Transfer transfer, int clipboards)", "diff": ["-\tint[] scrap = new int[1];", "-\tif (OS.GetCurrentScrap(scrap) != OS.noErr) return null;", "+\tNSPasteboard pasteboard = NSPasteboard.generalPasteboard();", "-\tint[] size = new int[1];\t", "-\t\tint type = typeIds[i];", "-\t\tsize[0] = 0;", "-\t\tif (OS.GetScrapFlavorSize(scrap[0], type, size) == OS.noErr && size[0] > 0) {", "-\t\t\tbyte[] buffer = new byte[size[0]];", "-\t\t\tif (OS.GetScrapFlavorData(scrap[0], type, size, buffer) == OS.noErr) {", "-\t\t\t\tTransferData tdata = new TransferData();", "-\t\t\t\ttdata.type = type;\t\t", "-\t\t\t\ttdata.data = new byte[1][];", "-\t\t\t\ttdata.data[0] = buffer;", "-\t\t\t\treturn transfer.nativeToJava(tdata);", "-\t\t\t}", "+\t\tTransferData tdata = new TransferData();", "+\t\tString type = Transfer.types[typeIds[i]];", "+\t\tNSString dataType = NSString.stringWith(type);", "+\t\tif (dataType.isEqual(OS.NSStringPboardType) ||", "+\t\t\t\tdataType.isEqual(OS.NSRTFPboardType)) {", "+\t\t\ttdata.data = pasteboard.stringForType(dataType);", "+\t\t} else if (dataType.isEqual(OS.NSFilenamesPboardType)) {", "+\t\t\ttdata.data = new NSArray(pasteboard.propertyListForType(dataType).id);", "+\t\t} else {", "+\t\t\ttdata.data = pasteboard.dataForType(dataType);", "+\t\t}", "+\t\tif (tdata.data != null) {", "+\t\t\ttdata.type = type;\t\t", "+\t\t\treturn transfer.nativeToJava(tdata);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151cfb1845a9ea835cac7a1f96260d25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "89dd18f56416766e9f25e99fa93a3cfdf736ff7e", "commitAfterChange": "0333c3cd6e1227d0185cdb60c13b053083d72b21", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["-\t", "-\tOS.ClearCurrentScrap();", "-\tint[] scrapHandle = new int[1];", "-\tOS.GetCurrentScrap(scrapHandle);", "-\tint scrap = scrapHandle[0];", "+\tif (OS.ClearCurrentScrap() != OS.noErr) {", "+\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint[] scrap = new int[1];", "+\tif (OS.GetCurrentScrap(scrap) != OS.noErr) {", "+\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "+\t}", "-\tfor (int i= 0; i < dataTypes.length; i++) {", "-\t\tint[] ids = dataTypes[i].getTypeIds();", "-\t\tfor (int j= 0; j < ids.length; j++) {", "+\tfor (int i=0; i<dataTypes.length; i++) {", "+\t\tint[] typeIds = dataTypes[i].getTypeIds();", "+\t\tfor (int j=0; j<typeIds.length; j++) {", "-\t\t\ttransferData.type = ids[j];", "-\t\t\tdataTypes[i].javaToNative(data[i], transferData);", "-\t\t\tif (transferData.result != OS.noErr)", "+\t\t\ttransferData.type = typeIds[j];", "+\t\t\tdataTypes[i].javaToNative(data[i], transferData); ", "+\t\t\tif (transferData.result != OS.noErr) {", "-\t\t\tif (OS.PutScrapFlavor(scrap, transferData.type, 0, transferData.data.length, transferData.data) != OS.noErr){", "+\t\t\t}", "+\t\t\t//Drag and Drop can handle multiple items in one transfer but the", "+\t\t\t//Clipboard can not.", "+\t\t\tbyte[] datum = transferData.data[0];", "+\t\t\tif (OS.PutScrapFlavor(scrap[0], transferData.type, 0, datum.length, datum) != OS.noErr){"]}], "num": 1621}