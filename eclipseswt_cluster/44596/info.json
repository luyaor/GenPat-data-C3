{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe4c6cdf30802a9989e3d5510876008d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab420135df099583c4f3ce473e6822cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FillLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\t\tpublic void handleEvent(Event event)", "signatureAfterChange": " \tString[] getInsertString (String controlType)", "diff": ["-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tfinal Menu menu = new Menu(shell, SWT.POP_UP);\t\t\t\t\t", "-\t\t\t\t\tfor (int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener(new SelectionAdapter () {", "-\t\t\t\t\t\t\tpublic void widgetSelected (SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem (table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.getItemCount() - 1);", "-\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText()};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\t\t\t\t\tresetEditors();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection(i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map(bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation(pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible(true);", "-\t\t\t\t\t", "-\t\t\t\t\twhile (menu != null && !menu.isDisposed() && menu.isVisible()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch()) {", "-\t\t\t\t\t\t\tdisplay.sleep();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem(table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf(table.indexOf(item));", "-\t\t\t\t\tString[] insert = new String[] {name, selection }; ", "-\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\tresetEditors();", "-\t\t\t\t}", "+\t */", "+\tString[] getInsertString (String controlType) {", "+\t\tString name = controlType.toLowerCase () + String.valueOf (table.getItemCount () - 1);", "+\t\treturn new String [] {name, controlType};", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b6bdbded2b1e80c60e3ec6fcd0c9b42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/StackLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\t\tpublic void handleEvent(Event event)", "signatureAfterChange": " \tString[] getInsertString (String controlType)", "diff": ["-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tfinal Menu menu = new Menu(shell, SWT.POP_UP);\t\t\t\t\t", "-\t\t\t\t\tfor(int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener(new SelectionAdapter(){", "-\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem(table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.getItemCount() - 1);", "-\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText()};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\t\t\t\t\tresetEditors();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection(i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map(bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation(pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible(true);", "-\t\t\t\t\t", "-\t\t\t\t\twhile(menu != null && !menu.isDisposed() && menu.isVisible()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch()) {", "-\t\t\t\t\t\t\tdisplay.sleep();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem(table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf(table.indexOf(item));", "-\t\t\t\t\tString[] insert = new String[] { name, selection }; ", "-\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\tdata.addElement(insert);", "-\t\t\t\t\tresetEditors();", "-\t\t\t\t}", "-\t\t\t\tsetTopControl (children.length - 1);", "-\t\t\t}", "+\t */", "+\tString[] getInsertString (String controlType) {", "+\t\tString name = controlType.toLowerCase () + String.valueOf (table.getItemCount () - 1);", "+\t\treturn new String [] {name, controlType};", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b7ab1c636e4daa6602137e3dbcf59c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/RowLayoutTab.java", "commitBeforeChange": "bc388f193474d7cf15a5646f3605afe721762a8b", "commitAfterChange": "1f71d788abab19aea6a5033ac92737e3268945e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\t\tpublic void handleEvent(Event event)", "signatureAfterChange": " \tString[] getInsertString (String controlType)", "diff": ["-\t\tadd.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {\t\t\t\t", "-\t\t\t\tif (event.detail == SWT.ARROW) {", "-\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\t\tToolBar bar = item.getParent();", "-\t\t\t\t\tMenu menu = new Menu (shell, SWT.POP_UP);", "-\t\t\t\t\tfor(int i = 0; i < OPTIONS.length; i++) {", "-\t\t\t\t\t\tfinal MenuItem newItem = new MenuItem(menu, SWT.RADIO);", "-\t\t\t\t\t\tnewItem.setText(OPTIONS[i]);\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.addSelectionListener (new SelectionAdapter(){", "-\t\t\t\t\t\t\tpublic void widgetSelected(SelectionEvent event) {", "-\t\t\t\t\t\t\t\tMenuItem menuItem = (MenuItem)event.widget;", "-\t\t\t\t\t\t\t\tif (menuItem.getSelection()) {", "-\t\t\t\t\t\t\t\t\tMenu menu  = menuItem.getParent();", "-\t\t\t\t\t\t\t\t\tprevSelected = menu.indexOf(menuItem);", "-\t\t\t\t\t\t\t\t\tTableItem item = new TableItem(table, SWT.NONE);", "-\t\t\t\t\t\t\t\t\tString name = menuItem.getText().toLowerCase() + String.valueOf(table.indexOf (item));", "-\t\t\t\t\t\t\t\t\tString[] insert = new String[] {name, menuItem.getText(), \"-1\", \"-1\", \"false\"};", "-\t\t\t\t\t\t\t\t\titem.setText(insert);", "-\t\t\t\t\t\t\t\t\tdata.addElement (insert);", "-\t\t\t\t\t\t\t\t\tresetEditors ();", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t});\t\t\t\t\t\t\t", "-\t\t\t\t\t\tnewItem.setSelection (i == prevSelected);", "-\t\t\t\t\t}", "-\t\t\t\t\tPoint pt = display.map (bar, null, event.x, event.y);", "-\t\t\t\t\tmenu.setLocation (pt.x, pt.y);", "-\t\t\t\t\tmenu.setVisible (true);", "-\t\t\t\t\t", "-\t\t\t\t\twhile (menu != null && !menu.isDisposed () && menu.isVisible ()) {", "-\t\t\t\t\t\tif (!display.readAndDispatch ()) {", "-\t\t\t\t\t\t\tdisplay.sleep ();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tmenu.dispose ();", "-\t\t\t\t} else {", "-\t\t\t\t\tString selection = OPTIONS[prevSelected];", "-\t\t\t\t\tTableItem item = new TableItem (table, 0);", "-\t\t\t\t\tString name = selection.toLowerCase() + String.valueOf (table.indexOf(item));", "-\t\t\t\t\tString[] insert = new String[] {name, selection, \"-1\", \"-1\", \"false\"};", "-\t\t\t\t\titem.setText (insert);", "-\t\t\t\t\tdata.addElement (insert);", "-\t\t\t\t\tresetEditors ();", "-\t\t\t\t}", "+\t */", "+\tString[] getInsertString (String controlType) {", "+\t\tString name = controlType.toLowerCase () + String.valueOf (table.getItemCount () - 1);", "+\t\treturn new String [] {name, controlType, \"-1\", \"-1\", \"false\"};", "+\t}"]}], "num": 44596}