{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aeffcd00d91e0d9f2e6b4bc57b607ef2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd040db62ed97bc2307ce4720d832911", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 94, "signatureBeforeChange": " \t \tvoid release(boolean destroy)", "signatureAfterChange": " \t \tvoid release(boolean destroy)", "diff": ["-\t\tIterator childIter = children.iterator();", "-\t\twhile(childIter.hasNext()) {", "-\t\t\tAccessible accessible = (Accessible) childIter.next();", "-\t\t\taccessible.release(false);", "-\t\t}", "-\t\tchildren = null;", "-\t\tif (destroy && parent != null) parent.children.remove(this);", "-\t\t", "-\t\tif (delegate != null) delegate.release();", "+\t\tif (delegate != null) {", "+\t\t\tdelegate.internal_dispose_SWTAccessibleDelegate();", "+\t\t\tdelegate.release();", "+\t\t}", "-\t\tCollection delegates = childToIdMap.values();", "-\t\tIterator iter = delegates.iterator();", "-\t\twhile (iter.hasNext()) {", "-\t\t\tSWTAccessibleDelegate childDelegate = (SWTAccessibleDelegate)iter.next();", "-\t\t\tchildDelegate.internal_dispose_SWTAccessibleDelegate();", "+\t\tif (childToIdMap != null) {", "+\t\t\tCollection delegates = childToIdMap.values();", "+\t\t\tIterator iter = delegates.iterator();", "+\t\t\twhile (iter.hasNext()) {", "+\t\t\t\tSWTAccessibleDelegate childDelegate = (SWTAccessibleDelegate)iter.next();", "+\t\t\t\tchildDelegate.internal_dispose_SWTAccessibleDelegate();", "+\t\t\t\tchildDelegate.release();", "+\t\t\t}", "+\t\t\tchildToIdMap.clear();", "+\t\t\tchildToIdMap = null;", "-\t\tchildToIdMap.clear();", "-\t\tchildToIdMap = null;", "+\t\t", "+\t\tif (tableDelegate != null) tableDelegate.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b32615a64a6090de39579e3ee7e5521", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "c2ca70ca89de07d0ce2b2e26b82f7a84f0d554a2", "commitAfterChange": "426dc59c5105e19be1b59762869d99c45bdc43ac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["-\t\r", "-\t\r", "-\t/*\r", "-\t* Feature in Windows.  When the tool tip control is\r", "-\t* created, the parent of the tool tip is the shell.\r", "-\t* If SetParent () is used to reparent the tab folder\r", "-\t* into a new shell, the tool tip is not reparented\r", "-\t* and pops up underneath the new shell.  The fix is\r", "-\t* to make sure the tool tip is a topmost window.\r", "-\t*/\r", "-\t/*\r", "-\t* Bug in Windows 98 and NT.  Setting the tool tip to be the\r", "-\t* top most window using HWND_TOPMOST can result in a parent\r", "-\t* dialog shell being moved behind its parent if the dialog\r", "-\t* has a sibling that is currently on top.  The fix is to lock\r", "-\t* the z-order of the active window.\r", "-\t*/\r", "-\tDisplay display = getDisplay ();\r", "-\tint flags = OS.SWP_NOACTIVATE | OS.SWP_NOMOVE | OS.SWP_NOSIZE;\r", "-\tdisplay.lockActiveWindow = true;\r", "-\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "-\tdisplay.lockActiveWindow = false;\r"]}], "num": 58147}