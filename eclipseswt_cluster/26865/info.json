{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f876754cd22ce73bd5d62f054b53c224", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb8ba40cd51145cd76ef3021afda152", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "6df0f71a3908342adb1e7d84d70d4700c7692726", "commitAfterChange": "14d28b3fe6cf36e8628c8f9f5ebeeff54d692a1f", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setMaximized (boolean maximized)", "signatureAfterChange": "\r public void setMaximized (boolean maximized)", "diff": ["-\tif (OS.IsWinCE) return;\r", "-\tswFlags = OS.SW_RESTORE;\r", "-\tif (maximized) swFlags = OS.SW_SHOWMAXIMIZED;\r", "-\tif (!OS.IsWindowVisible (handle)) return;\r", "-\tif (maximized == OS.IsZoomed (handle)) return;\r", "-\tOS.ShowWindow (handle, swFlags);\r", "-\tOS.UpdateWindow (handle);\r", "+\tif (OS.IsWinCE) {\r", "+\t\t/*\r", "+\t\t* Note: WinCE does not support SW_SHOWMAXIMIZED and SW_RESTORE. The\r", "+\t\t* workaround is to resize the window to fit the parent client area.\r", "+\t\t* PocketPC windows typically don't have a caption when they are\r", "+\t\t* maximized. They usually have one when they are not occupying all the\r", "+\t\t* space. We implement this behavior by default - it can be overriden by\r", "+\t\t* setting SWT.TITLE or SWT.NO_TRIM.\r", "+\t\t*/\r", "+\t\tif (maximized) {\r", "+\t\t\tif ((style & SWT.TITLE) == 0) {\r", "+\t\t\t\t/* remove caption when maximized */\r", "+\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\t\t\t\tbits &= ~OS.WS_CAPTION;\r", "+\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\tint flags = OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t\t\tif (parent != null) {\r", "+\t\t\t\tRectangle rect = parent.getClientArea ();\r", "+\t\t\t\tOS.SetWindowPos (handle, 0, rect.x, rect.y, rect.width, rect.height, flags);\t\t\t\t\t\t\r", "+\t\t\t} else {\r", "+\t\t\t\tRECT rect = new RECT ();\r", "+\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);\r", "+\t\t\t\tint width = rect.right - rect.left;\r", "+\t\t\t\tint height = rect.bottom - rect.top;\r", "+\t\t\t\tOS.SetWindowPos (handle, 0, rect.left, rect.top, width, height, flags);\t\t\t\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tif ((style & SWT.NO_TRIM) == 0) {\r", "+\t\t\t\t/* insert caption when no longer maximized */\r", "+\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\t\t\t\tbits |= OS.WS_CAPTION;\r", "+\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t\t\t\tint flags = OS.SWP_NOMOVE | OS.SWP_NOSIZE | OS.SWP_NOZORDER | OS.SWP_DRAWFRAME;\r", "+\t\t\t\tOS.SetWindowPos (handle, 0, 0, 0, 0, 0, flags);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t} else {\r", "+\t\tswFlags = OS.SW_RESTORE;\r", "+\t\tif (maximized) swFlags = OS.SW_SHOWMAXIMIZED;\r", "+\t\tif (!OS.IsWindowVisible (handle)) return;\r", "+\t\tif (maximized == OS.IsZoomed (handle)) return;\r", "+\t\tOS.ShowWindow (handle, swFlags);\r", "+\t\tOS.UpdateWindow (handle);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76bd7407d2abd825a18a7a38f874154", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "616faf05f2a514ae7f7583f4e4ca3f89f0f62d2b", "commitAfterChange": "3ec43f59725e5a292e734c2cffa19b065c1aeca8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void setMaximized (boolean maximized)", "signatureAfterChange": " public void setMaximized (boolean maximized)", "diff": ["-\t\t* PocketPC windows typically don't have a caption when they are", "-\t\t* maximized. They usually have one when they are not occupying all the", "-\t\t* space. We implement this behavior by default - it can be overriden by", "-\t\t* setting SWT.TITLE or SWT.NO_TRIM.", "-\t\t\tif ((style & SWT.TITLE) == 0) {", "-\t\t\t\t/* Remove caption when maximized */", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tbits &= ~OS.WS_CAPTION;", "-\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif ((style & SWT.NO_TRIM) == 0) {", "-\t\t\t\t/* Insert caption when no longer maximized */", "-\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\t\t\t\tbits |= OS.WS_CAPTION;", "-\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "-\t\t\t\tint flags = OS.SWP_NOMOVE | OS.SWP_NOSIZE | OS.SWP_NOZORDER | OS.SWP_DRAWFRAME;", "-\t\t\t\tSetWindowPos (handle, 0, 0, 0, 0, 0, flags);", "-\t\t\t}"]}], "num": 26865}