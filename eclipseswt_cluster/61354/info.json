{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92149a6d0defdd664dbde4d21abfdc5b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99529cab4e6bc83c1268b664b6b9de52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "3d1071088ced6ed6e9f01c8d7208fa00cb52a57a", "commitAfterChange": "a9f618df2b93f8cb19629621c0313294fe974299", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public MenuItem [] getItems ()", "signatureAfterChange": "\r public MenuItem [] getItems ()", "diff": ["+\tif (OS.IsPPC && hwndCB != 0) {\r", "+\t\tint count = OS.SendMessage (hwndCB, OS.TB_BUTTONCOUNT, 0, 0);\r", "+\t\tTBBUTTON lpButton = new TBBUTTON ();\r", "+\t\tMenuItem [] result = new MenuItem [count];\r", "+\t\tfor (int i=0; i<count; i++) {\r", "+\t\t\tint code = OS.SendMessage (hwndCB, OS.TB_GETBUTTON, i, lpButton);\r", "+\t\t\tresult [i] = parent.findMenuItem (lpButton.idCommand);\r", "+\t\t}\r", "+\t\treturn result;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8de91f5d49fd1cb407706d10adf43f85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "5e2d580858138f39b04450d3d7462f70f593b33d", "commitAfterChange": "6086ff1582180c7237da261fc82386df3aa300ca", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  LRESULT wmMeasureChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmMeasureChild (int wParam, int lParam)", "diff": ["+\tint width = 0, height = 0;", "+\t\tRectangle rect = image.getBounds ();", "+\t\twidth = rect.width;", "+\t\theight = rect.height;", "+\t} else {", "+\t\t/*", "+\t\t* Bug in Windows.  When a menu item has a check and a string", "+\t\t* that includes a label and accelerator text but does not have", "+\t\t* a bitmap, when the string is the longest string in the menu,", "+\t\t* the label and accelerator text overlap.  The fix is to use", "+\t\t* SetMenuItemInfo() to indicate that the item has a bitmap", "+\t\t* and then answer the width of the widest bitmap in the menu", "+\t\t* from WM_MEASURECHILD.", "+\t\t*/", "+\t\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\t\tMenuItem [] items = parent.getItems ();", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tMenuItem item = items [i];", "+\t\t\t\tif (item.image != null) {", "+\t\t\t\t\tRectangle rect = item.image.getBounds ();", "+\t\t\t\t\twidth = Math.max (width, rect.width); ", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (width != 0 || height != 0) {", "-\t\tRectangle rect = image.getBounds ();", "-\t\tstruct.itemWidth = rect.width + (OS.IsWin95 ? 4 : 2);", "-\t\tstruct.itemHeight = rect.height + 4;", "+\t\tstruct.itemWidth = width + (OS.IsWin95 ? 4 : 2);", "+\t\tstruct.itemHeight = height + 4;", "+\t\tOS.MoveMemory (lParam, struct, MEASUREITEMSTRUCT.sizeof);", "-\tOS.MoveMemory (lParam, struct, MEASUREITEMSTRUCT.sizeof);\t"]}], "num": 61354}