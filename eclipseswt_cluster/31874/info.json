{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03f4652363914dff185372dcd9d195cc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5363289fbd6132de9ed51bfec6d411c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-\t\t\tint index = current.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tString key = current.substring(0, index).trim();", "-\t\t\t\tString value = current.substring(index + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tif (key.equals(USER_AGENT)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "-\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "-\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\tif (current != null) {", "+\t\t\t\tint index = current.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d187edd936a8dfea243258b31f4f20f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  boolean navigate(String url, String postData, String headers[], boolean silent)", "signatureAfterChange": "  boolean navigate(String url, String postData, String headers[], boolean silent)", "diff": ["-\t\t\tint sep = current.indexOf(':');", "-\t\t\tif (sep != -1) {", "-\t\t\t\tString key = current.substring(0, sep).trim();", "-\t\t\t\tString value = current.substring(sep + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tbuffer.append(key);", "-\t\t\t\t\tbuffer.append(':');", "-\t\t\t\t\tbuffer.append(value);", "-\t\t\t\t\tbuffer.append(\"\\r\\n\");", "+\t\t\tif (current != null) {", "+\t\t\t\tint sep = current.indexOf(':');", "+\t\t\t\tif (sep != -1) {", "+\t\t\t\t\tString key = current.substring(0, sep).trim();", "+\t\t\t\t\tString value = current.substring(sep + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tbuffer.append(key);", "+\t\t\t\t\t\tbuffer.append(':');", "+\t\t\t\t\t\tbuffer.append(value);", "+\t\t\t\t\t\tbuffer.append(\"\\r\\n\");", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e36675997709bbcddc46e15112fb4c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "  public boolean setUrl (String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl (String url, String postData, String[] headers)", "diff": ["-\t\t\tint sep = current.indexOf (':');", "-\t\t\tif (sep != -1) {", "-\t\t\t\tString key = current.substring (0, sep).trim ();", "-\t\t\t\tString value = current.substring (sep + 1).trim ();", "-\t\t\t\tif (key.length () > 0 && value.length () > 0) {", "-\t\t\t\t\tbuffer.append (key);", "-\t\t\t\t\tbuffer.append (':');", "-\t\t\t\t\tbuffer.append (value);", "-\t\t\t\t\tbuffer.append (\"\\r\\n\");", "+\t\t\tif (current != null) {", "+\t\t\t\tint sep = current.indexOf (':');", "+\t\t\t\tif (sep != -1) {", "+\t\t\t\t\tString key = current.substring (0, sep).trim ();", "+\t\t\t\t\tString value = current.substring (sep + 1).trim ();", "+\t\t\t\t\tif (key.length () > 0 && value.length () > 0) {", "+\t\t\t\t\t\tbuffer.append (key);", "+\t\t\t\t\t\tbuffer.append (':');", "+\t\t\t\t\t\tbuffer.append (value);", "+\t\t\t\t\t\tbuffer.append (\"\\r\\n\");", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70a331d0ad3cb974dbabf42af71b829d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "commitAfterChange": "f7f1dba87199260397b55de5f4e77818bcad3cd8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url, String postData, String[] headers)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-\t\t\tint index = current.indexOf(':');", "-\t\t\tif (index != -1) {", "-\t\t\t\tString key = current.substring(0, index).trim();", "-\t\t\t\tString value = current.substring(index + 1).trim();", "-\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "-\t\t\t\t\tif (key.equals(USER_AGENT)) {", "-\t\t\t\t\t\t/*", "-\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "-\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "-\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "-\t\t\t\t\t\t*/", "-\t\t\t\t\t\tint string = createNSString(value);", "-\t\t\t\t\t\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, string);", "-\t\t\t\t\t\tOS.CFRelease (string);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint keyString = createNSString(key);", "-\t\t\t\t\t\tint valueString = createNSString(value);", "-\t\t\t\t\t\tCocoa.objc_msgSend(request, Cocoa.S_setValueForHTTPHeaderField, keyString, valueString);", "-\t\t\t\t\t\tOS.CFRelease (valueString);", "-\t\t\t\t\t\tOS.CFRelease (keyString);", "+\t\t\tif (current != null) {", "+\t\t\t\tint index = current.indexOf(':');", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tint string = createNSString(value);", "+\t\t\t\t\t\t\tCocoa.objc_msgSend(webView, Cocoa.S_setCustomUserAgent, string);", "+\t\t\t\t\t\t\tOS.CFRelease (string);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tint keyString = createNSString(key);", "+\t\t\t\t\t\t\tint valueString = createNSString(value);", "+\t\t\t\t\t\t\tCocoa.objc_msgSend(request, Cocoa.S_setValueForHTTPHeaderField, keyString, valueString);", "+\t\t\t\t\t\t\tOS.CFRelease (valueString);", "+\t\t\t\t\t\t\tOS.CFRelease (keyString);", "+\t\t\t\t\t\t}"]}], "num": 31874}