{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30159cf98803efde0e37396b7126f8c8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84f2125b6a1f336d8097453b7fb198e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java", "commitBeforeChange": "8a33792081b437893a1f46f5418c814e237c555a", "commitAfterChange": "7b438a188e6083c30837436d22ffaedbe3dbe31f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": " void showDropTargetEffect(int effect, int x, int y)", "diff": ["+\tStyledTextContent content = text.getContent();", "-\t\t\tint maxOffset = text.getCharCount();", "+\t\t\tint maxOffset = content.getCharCount();", "-\t\t\t\tif (pt.x >= maxLocation.x) {", "+\t\t\t\ttry {", "+\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "+\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t} else {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "-\t\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t\t\tnewOffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t\tint line = text.getLineAtOffset(startOffset);", "-\t\t\t\t\tint lineCount = text.getLineCount();", "+\t\t\t\t\tint line = content.getLineAtOffset(startOffset);", "+\t\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t\t\t\tendOffset = content.getOffsetAtLine(line + 1)  - 1;", "+\t\t// check if offset is line delimiter", "+\t\t// see StyledText.isLineDelimiter()", "+\t\tint line = content.getLineAtOffset(newOffset);", "+\t\tint lineOffset = content.getOffsetAtLine(line);\t", "+\t\tint offsetInLine = newOffset - lineOffset;", "+\t\t// offsetInLine will be greater than line length if the line ", "+\t\t// delimiter is longer than one character and the offset is set", "+\t\t// in between parts of the line delimiter.", "+\t\tif (offsetInLine > content.getLine(line).length()) {", "+\t\t\tnewOffset = Math.max(0, newOffset - 1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e52d2771d684eca1969152851e1eb603", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java", "commitBeforeChange": "8a33792081b437893a1f46f5418c814e237c555a", "commitAfterChange": "7b438a188e6083c30837436d22ffaedbe3dbe31f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": " void showDropTargetEffect(int effect, int x, int y)", "diff": ["+\tStyledTextContent content = text.getContent();", "-\t\t\tint maxOffset = text.getCharCount();", "+\t\t\tint maxOffset = content.getCharCount();", "-\t\t\t\tif (pt.x >= maxLocation.x) {", "+\t\t\t\ttry {", "+\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "+\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t} else {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "-\t\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t\t\tnewOffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t\tint line = text.getLineAtOffset(startOffset);", "-\t\t\t\t\tint lineCount = text.getLineCount();", "+\t\t\t\t\tint line = content.getLineAtOffset(startOffset);", "+\t\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t\t\t\tendOffset = content.getOffsetAtLine(line + 1)  - 1;", "+\t\t// check if offset is line delimiter", "+\t\t// see StyledText.isLineDelimiter()", "+\t\tint line = content.getLineAtOffset(newOffset);", "+\t\tint lineOffset = content.getOffsetAtLine(line);\t", "+\t\tint offsetInLine = newOffset - lineOffset;", "+\t\t// offsetInLine will be greater than line length if the line ", "+\t\t// delimiter is longer than one character and the offset is set", "+\t\t// in between parts of the line delimiter.", "+\t\tif (offsetInLine > content.getLine(line).length()) {", "+\t\t\tnewOffset = Math.max(0, newOffset - 1);", "+\t\t}"]}], "num": 10749}