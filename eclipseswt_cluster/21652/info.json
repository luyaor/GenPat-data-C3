{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e12ae50d60355a7db3bd97c7343d41a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f29fa9a32899669d8e4fda63eb9b2272", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "22a485996265caffc39eb87d45853e16dfab31d7", "commitAfterChange": "f3e96f662738a7d9d8dfe9b3d0a107eb91c7a9f9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["-\tif (styledText != null && imeRanges != null && imeStyles != null) {", "+\tif (styledText != null) {", "-\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "-\t\t\t\t\tint start = imeRanges[i*2] + compositionStart - lineOffset;", "-\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "-\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "-\t\t\t\t\tfor (int j = start; j <= end; j++) {", "-\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "-\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "-\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "-\t\t\t\t\t\tif (userStyle == null) {", "-\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "-\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "-\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "-\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "-\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\t\t\t\tif (imeRanges != null && imeStyles != null) {", "+\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "+\t\t\t\t\t\tint start = imeRanges[i*2] + compositionStart - lineOffset;", "+\t\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "+\t\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "+\t\t\t\t\t\tfor (int j = start; j <= end; j++) {", "+\t\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "+\t\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "+\t\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "+\t\t\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "+\t\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "+\t\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "+\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tint start = compositionStart - lineOffset;", "+\t\t\t\t\tint end = start + compositionLength - 1;", "+\t\t\t\t\tTextStyle userStyle = layout.getStyle(start);", "+\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\tif (start > 0) userStyle = layout.getStyle(start - 1);", "+\t\t\t\t\t\tif (userStyle == null && end + 1 < length) userStyle = layout.getStyle(end + 1);", "+\t\t\t\t\t\tif (userStyle != null) {", "+\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle();", "+\t\t\t\t\t\t\tnewStyle.font = userStyle.font;", "+\t\t\t\t\t\t\tnewStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\tnewStyle.background = userStyle.background;", "+\t\t\t\t\t\t\tlayout.setStyle(newStyle, start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7afea1cb26b82305e620523e166f53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "1cafb9b13b36075eb1d31bd71ad3febbf37de5b5", "commitAfterChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["-\tif (styledText != null) {", "-\t\tint compositionStart = styledText.compositionStart;", "-\t\tint compositionLength = styledText.compositionLength;", "-\t\tif (compositionStart != -1 && compositionLength > 0) {", "-\t\t\tint compositionLine = content.getLineAtOffset(compositionStart);", "-\t\t\tif (compositionLine == lineIndex) {", "-\t\t\t\tif (imeRanges != null && imeStyles != null) {", "-\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "-\t\t\t\t\t\tint start = imeRanges[i*2] + compositionStart - lineOffset;", "-\t\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "-\t\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "-\t\t\t\t\t\tfor (int j = start; j <= end; j++) {", "-\t\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "-\t\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "-\t\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "-\t\t\t\t\t\t\tif (userStyle == null) {", "-\t\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "-\t\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "-\t\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "-\t\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "-\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\tif (styledText != null && styledText.ime != null) {", "+\t\tIME ime = styledText.ime;", "+\t\tint compositionOffset = ime.getCompositionOffset();", "+\t\tif (compositionOffset != -1) {", "+\t\t\tint commitCount = ime.getCommitCount();", "+\t\t\tint compositionLength = ime.getText().length();", "+\t\t\tif (compositionLength != commitCount) {", "+\t\t\t\tint compositionLine = content.getLineAtOffset(compositionOffset);", "+\t\t\t\tif (compositionLine == lineIndex) {", "+\t\t\t\t\tint[] imeRanges = ime.getRanges();", "+\t\t\t\t\tTextStyle[] imeStyles = ime.getStyles();", "+\t\t\t\t\tif (imeRanges.length > 0) {", "+\t\t\t\t\t\tfor (int i = 0; i < imeStyles.length; i++) {", "+\t\t\t\t\t\t\tint start = imeRanges[i*2] + compositionOffset - lineOffset;", "+\t\t\t\t\t\t\tint end = start + imeRanges[i*2+1] - 1;", "+\t\t\t\t\t\t\tTextStyle imeStyle = imeStyles[i], userStyle;", "+\t\t\t\t\t\t\tfor (int j = start; j <= end; j++) {", "+\t\t\t\t\t\t\t\tuserStyle = layout.getStyle(j);", "+\t\t\t\t\t\t\t\tif (userStyle == null && j > 0) userStyle = layout.getStyle(j - 1);", "+\t\t\t\t\t\t\t\tif (userStyle == null && j + 1 < length) userStyle = layout.getStyle(j + 1);", "+\t\t\t\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\t\t\t\tlayout.setStyle(imeStyle, j, j);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle(imeStyle);", "+\t\t\t\t\t\t\t\t\tif (newStyle.font == null) newStyle.font = userStyle.font;", "+\t\t\t\t\t\t\t\t\tif (newStyle.foreground == null) newStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\t\t\tif (newStyle.background == null) newStyle.background = userStyle.background;", "+\t\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, j, j);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tint start = compositionStart - lineOffset;", "-\t\t\t\t\tint end = start + compositionLength - 1;", "-\t\t\t\t\tTextStyle userStyle = layout.getStyle(start);", "-\t\t\t\t\tif (userStyle == null) {", "-\t\t\t\t\t\tif (start > 0) userStyle = layout.getStyle(start - 1);", "-\t\t\t\t\t\tif (userStyle == null && end + 1 < length) userStyle = layout.getStyle(end + 1);", "-\t\t\t\t\t\tif (userStyle != null) {", "-\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle();", "-\t\t\t\t\t\t\tnewStyle.font = userStyle.font;", "-\t\t\t\t\t\t\tnewStyle.foreground = userStyle.foreground;", "-\t\t\t\t\t\t\tnewStyle.background = userStyle.background;", "-\t\t\t\t\t\t\tlayout.setStyle(newStyle, start, end);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint start = compositionOffset - lineOffset;", "+\t\t\t\t\t\tint end = start + compositionLength - 1;", "+\t\t\t\t\t\tTextStyle userStyle = layout.getStyle(start);", "+\t\t\t\t\t\tif (userStyle == null) {", "+\t\t\t\t\t\t\tif (start > 0) userStyle = layout.getStyle(start - 1);", "+\t\t\t\t\t\t\tif (userStyle == null && end + 1 < length) userStyle = layout.getStyle(end + 1);", "+\t\t\t\t\t\t\tif (userStyle != null) {", "+\t\t\t\t\t\t\t\tTextStyle newStyle = new TextStyle();", "+\t\t\t\t\t\t\t\tnewStyle.font = userStyle.font;", "+\t\t\t\t\t\t\t\tnewStyle.foreground = userStyle.foreground;", "+\t\t\t\t\t\t\t\tnewStyle.background = userStyle.background;", "+\t\t\t\t\t\t\t\tlayout.setStyle(newStyle, start, end);", "+\t\t\t\t\t\t\t}"]}], "num": 21652}