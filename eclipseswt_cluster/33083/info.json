{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "842cd3c9d2ff1f6588ac816929e8a011", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca706065f1795d0f90bbaea9255f593", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "diff": ["-LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam) {", "+LRESULT wmNotifyChild (NMHDR hdr, int /*long*/ wParam, int /*long*/ lParam) {", "-\t\t\t\t\t\tif (items [lptvdi.lParam] != null && items [lptvdi.lParam].cached) {", "+\t\t\t\t\t\tif (items [(int)/*64*/lptvdi.lParam] != null && items [(int)/*64*/lptvdi.lParam].cached) {", "-\t\t\tint id = lptvdi.lParam;", "+\t\t\tint /*long*/ id = lptvdi.lParam;", "-\t\t\t\tindex = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\t\t\tindex = (int)/*64*/OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "-\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\tint offset1 = NMHDR.sizeof + 4;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset1, TVITEM.sizeof);", "+\t\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\tTVITEM tvItem = treeView.itemOld;", "-\t\t\t\t\tint offset2 = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset2, TVITEM.sizeof);", "+\t\t\t\t\ttvItem = treeView.itemNew;", "+\t\t\tNMTREEVIEW treeView = null;", "-\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\tint offset = NMHDR.sizeof + 4;", "-\t\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\t\tif (treeView == null) {", "+\t\t\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tTVITEM tvItem = treeView.itemOld;", "-\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\t\tif (treeView == null) {", "+\t\t\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\tif (treeView == null) {", "+\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t}", "+\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tint [] action = new int [1];", "-\t\t\t\tOS.MoveMemory (action, lParam + NMHDR.sizeof, 4);", "-\t\t\t\tswitch (action [0]) {", "+\t\t\t\tswitch (treeView.action) {", "-\t\t\t\tint hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, tvItem.hItem);", "+\t\t\t\tint /*long*/ hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, tvItem.hItem);", "-\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\tTVITEM tvItem = treeView.itemNew;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "423b2580c5a461883e247ecf6bf7a17f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "dfc9c2c27083a19c0dc0cbc4bc9dda0223b753d5", "commitAfterChange": "2b27afb0bcf4e50e1711377ad024c076547fac90", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void layout (boolean changed)", "signatureAfterChange": " public void layout (boolean changed)", "diff": ["-\tdrawLine1 = -1;", "-\tdrawLine2 = -1;", "-\t", "-\tint minTopWidth = leftSize.x + centerSize.x + rightSize.x + 2*marginWidth + 1; // +1 for highlight line\t", "-\tint height = rect.y + marginHeight;", "+\tint minTopWidth = leftSize.x + centerSize.x + rightSize.x + 2*marginWidth;", "+\tint count = -1;", "+\tif (leftSize.x > 0) count++;", "+\tif (centerSize.x > 0) count++;", "+\tif (rightSize.x > 0) count++;", "+\tif (count > 0) minTopWidth += count * horizontalSpacing;", "+\t\t", "+\tint x = rect.x + rect.width - marginWidth;", "+\tint y = rect.y + marginHeight;", "-\t\t\ttopRight.setBounds(rect.x + rect.width - marginWidth - rightSize.x, ", "-\t\t\t                   rect.y + 1 + marginHeight, ", "-\t\t\t                   rightSize.x, topHeight);", "-\t\t\theight += 1 + topHeight; // +1 for highlight line", "+\t\t\tx -= rightSize.x;", "+\t\t\ttopRight.setBounds(x, y, rightSize.x, topHeight);", "+\t\t\tx -= horizontalSpacing;", "-\t\t\tleftSize = topLeft.computeSize(rect.width - 2* marginWidth - rightSize.x - 1, SWT.DEFAULT);", "-\t\t\ttopLeft.setBounds(rect.x + 1 + marginWidth, ", "-\t\t\t                  rect.y + 1 + marginHeight, ", "-\t\t\t                  leftSize.x, topHeight);", "-\t\t\theight = Math.max(height, rect.y + marginHeight + 1 + topHeight); // +1 for highlight line", "+\t\t\tleftSize = topLeft.computeSize(x - rect.x - marginWidth, SWT.DEFAULT);", "+\t\t\ttopLeft.setBounds(rect.x + marginWidth, y, leftSize.x, topHeight);", "+\t\tif (top)y += topHeight + verticalSpacing;", "-\t\t\tif (height > rect.y + marginHeight) {", "-\t\t\t\tdrawLine1 = height;", "-\t\t\t\theight += 1; // +1 for divider line", "-\t\t\t}", "-\t\t\ttopCenter.setBounds(rect.x + rect.width - marginWidth - centerSize.x, ", "-\t\t\t                    height, ", "-\t\t\t                    centerSize.x, centerSize.y);", "-\t\t\theight += centerSize.y;", "-", "+\t\t\ttopCenter.setBounds(rect.x + rect.width - marginWidth - centerSize.x, y, centerSize.x, centerSize.y);", "+\t\t\ty += centerSize.y + verticalSpacing;", "-\t\t\ttopRight.setBounds(rect.x + rect.width - marginWidth - rightSize.x, ", "-\t\t\t                   rect.y + marginHeight + 1, // +1 for highlight line", "-\t\t\t                   rightSize.x, topHeight);", "-\t\t\theight += 1 + topHeight; // +1 for highlight line", "+\t\t\tx -= rightSize.x;", "+\t\t\ttopRight.setBounds(x, y, rightSize.x, topHeight);", "+\t\t\tx -= horizontalSpacing;", "-\t\t\ttopCenter.setBounds(rect.x + rect.width - marginWidth - rightSize.x - centerSize.x, ", "-\t\t\t                    rect.y + marginHeight + 1, // +1 for highlight line", "-\t\t\t                    centerSize.x, topHeight);", "-\t\t\theight = Math.max(height, rect.y + marginHeight + 1 + topHeight); // +1 for highlight line                    ", "+\t\t\tx -= centerSize.x;", "+\t\t\ttopCenter.setBounds(x, y, centerSize.x, topHeight);", "+\t\t\tx -= horizontalSpacing;", "-\t\t\tleftSize = topLeft.computeSize(rect.width - 2 * marginWidth - rightSize.x - centerSize.x - 1, topHeight);", "-\t\t\ttopLeft.setBounds(rect.x + marginWidth + 1, // +1 for highlight line", "-\t\t\t                  rect.y + marginHeight + 1, // +1 for highlight line", "-\t\t\t                  leftSize.x, topHeight);", "-\t\t\theight = Math.max(height, rect.y + marginHeight + 1 + topHeight); // +1 for highlight line", "+\t\t\tleftSize = topLeft.computeSize(x - rect.x - marginWidth, topHeight);", "+\t\t\ttopLeft.setBounds(rect.x + marginWidth, y, leftSize.x, topHeight);", "+\t\tif (top)y += topHeight + verticalSpacing;", "-\t\tif (top) {", "-\t\t\tdrawLine2 = height;", "-\t\t\theight += 1; // +1 for divider line", "-\t\t}", "-\t\t content.setBounds(rect.x + marginWidth, ", "-\t\t                   height, ", "-\t\t                   rect.width - 2 * marginWidth, ", "-\t\t                   rect.y + rect.height - height - marginHeight);", "+\t\t content.setBounds(rect.x + marginWidth, y, rect.width - 2 * marginWidth, rect.y + rect.height - y - marginHeight);"]}], "num": 33083}