{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e190e2d2bc3813a6394b47593ccb7dc4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651be4780eb5dfa5b3fd86073f382dc7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "a07db21f2dc02d806d74ab0e60154800444f5429", "commitAfterChange": "704f9377fdfbc3f0c12e11665b0fc2e8c6f9b051", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void redraw ()", "signatureAfterChange": "  void redraw ()", "diff": ["-\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {", "-\t\tint headerHeight = parent.getBandHeight ();", "-\t\tif (imageHeight > headerHeight) {", "-\t\t\tparent.redraw (x + ExpandItem.TEXT_INSET, y + headerHeight - imageHeight, imageWidth, imageHeight, false);", "-\t\t}", "-\t\tparent.redraw (x, y, width, headerHeight + height, false);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3c5a326e7a939c9a9294ed88258b83d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5712f0ff091861c715a3f41d4afa78f50d98e31c", "commitAfterChange": "db5070f4a4104c5e47a8cd2bdd5b5f06b11fcd6f", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  void setBackgroundImage (int hBitmap)", "signatureAfterChange": "  void setBackgroundImage (int hBitmap)", "diff": ["+\tsetBackgroundTransparent (hBitmap != 0);", "-\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, OS.CLR_NONE);", "-\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, OS.CLR_NONE);", "-\t\t/*", "-\t\t* Feature in Windows.  When the background color is changed,", "-\t\t* the table does not redraw until the next WM_PAINT.  The fix", "-\t\t* is to force a redraw.", "-\t\t*/", "-\t\tOS.InvalidateRect (handle, null, true);", "-\t\tControl control = findBackgroundControl ();", "-\t\tif (control == null) control = this;", "-\t\tif (control.backgroundImage == null) {", "-\t\t\tsetBackgroundPixel (control.getBackgroundPixel ());", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4489567fc1174cb46549afd68f6dcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-\t/*", "-\t* Do not report a lead byte as a key pressed.", "-\t*/", "-\tif (!OS.IsUnicode && OS.IsDBLocale) {", "-\t\tbyte lead = (byte) (wParam & 0xFF);", "-\t\tif (OS.IsDBCSLeadByte (lead)) return null;", "-\t}", "-\tdisplay.lastAscii = wParam;", "-\tdisplay.lastNull = wParam == 0;", "-\tif (!sendKeyEvent (SWT.KeyDown, OS.WM_CHAR, wParam, lParam)) {", "-\t\treturn LRESULT.ONE;", "-\t}", "-\t// widget could be disposed at this point", "-\treturn null;", "+\treturn wmChar (handle, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d364b6b9e4abafaed463cb1257847376", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "aa94f76b8f160ab22c705ee9b5890ac5289a9228", "commitAfterChange": "85566517171b8fbf5ab016d6bc2d04ae82f0bc02", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["+\tif (wrapWidth == width) return;", "-\tif (width == -1) {", "+\twrapWidth = width;", "+\tsetWidth();", "+}", "-\t\tOS.pango_layout_set_width(layout, width * OS.PANGO_SCALE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb93d896361e464af6ae48c085325dae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "6d2109680e67f01ec005aa6e7ba9c30428f9e77a", "commitAfterChange": "dd2aca966bc039ce9a2eb77aaa5738d3e28bb872", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t\tif(OS.gtk_status_icon_get_visible (handle) == visible) return;\t", "-\t} else {", "-\t\tif (gtk_widget_get_visible (handle) == visible) return;", "-\t}", "+\tif(OS.gtk_status_icon_get_visible (handle) == visible) return;\t", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t\t\tOS.gtk_status_icon_set_visible (handle, visible);", "-\t\t} else", "-\t\t\tOS.gtk_widget_show (handle);", "+\t\tOS.gtk_status_icon_set_visible (handle, visible);", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "-\t\t\tOS.gtk_status_icon_set_visible (handle, visible);", "-\t\t} else", "-\t\t\tOS.gtk_widget_hide (handle);", "+\t\tOS.gtk_status_icon_set_visible (handle, visible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2900217d05041efb8b1817186b5e7da9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "500c24eb5b8aa045c0711db40cd2bd51e7a1d263", "commitAfterChange": "f315ff168cfc419b69e5a6201090f9cf2a65a106", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-    ", "-    if (WORKS) {", "-\t\tfVisible= visible;", "-\t\tif (OS.IsControlVisible(handle) != visible) {", "-\t\t\tOS.HIViewSetVisible(handle, visible);", "-\t\t\t//OS.SetControlVisibility(handle, visible, true);", "-\t\t\t", "-\t\t\tparent.relayout123();", "-\t\t\tsendEvent(visible ? SWT.Show : SWT.Hide);", "+//\tthis.visible= visible;", "+//\tif (OS.IsControlVisible(handle) != visible) {", "+//\t\tOS.HIViewSetVisible(handle, visible);\t\t", "+//\t\tparent.relayout123();", "+//\t\tsendEvent(visible ? SWT.Show : SWT.Hide);", "+//\t}", "+\t", "+    if (this.visible != visible) {", "+\t    this.visible= visible;", "+\t\tint topHandle = topHandle ();", "+\t\tif (OS.IsControlVisible(topHandle) != visible) {", "+\t\t\tOS.HIViewSetVisible(topHandle, visible);", "+\t\t\tparent.relayout123();", "+\t\t\tsendEvent (visible ? SWT.Show : SWT.Hide);", "-    } else {", "-\t\tif (visible != fVisible) {", "-\t\t    fVisible= visible;", "-\t\t\tint topHandle = topHandle ();", "-\t\t\tif (OS.IsControlVisible(topHandle) != visible) {", "-\t\t\t\tif (visible) {", "-\t\t\t\t\tOS.HIViewSetVisible(handle, true);", "-\t\t\t\t\t//OS.SetControlVisibility(topHandle, true, false);", "-\t\t\t\t\tparent.relayout123();", "-\t\t\t\t\tsendEvent(SWT.Show);", "-\t\t\t\t\t//redrawHandle (0, 0, 0, 0, topHandle, true);", "-\t\t\t\t} else {", "-\t\t\t\t\tOS.HIViewSetVisible(handle, false);", "-\t\t\t\t\t//OS.SetControlVisibility(topHandle, false, true);", "-\t\t\t\t\tparent.relayout123();", "-\t\t\t\t\tsendEvent(SWT.Hide);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "+    }"]}], "num": 46666}