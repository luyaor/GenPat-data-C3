{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1faf4300168a091f60cb077e1b388add", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "354a28529f7339cef7e49e6304439e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "05d141b181e80472f5b1358deacfda122e0bb35f", "commitAfterChange": "650ccec495d5890698851b01ddee09d8411670ad", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int handleCallback(int nextHandler, int theEvent)", "signatureAfterChange": "  int handleCallback(int nextHandler, int theEvent)", "diff": ["-\t\t\t\t\t* 0.  The workaround is to temporarily add an extra ref to the view while the", "-\t\t\t\t\t* DOM listener is handling the event, in case the Browser gets disposed in a", "-\t\t\t\t\t* callback.", "+\t\t\t\t\t* 0.  The workaround is to temporarily add an extra ref to the view and its", "+\t\t\t\t\t* ancestor while the DOM listener is handling the event, in case the", "+\t\t\t\t\t* Browser gets disposed in a callback.", "-\t\t\t\t\tint webViewHandle = this.webViewHandle;", "-\t\t\t\t\tOS.CFRetain (webViewHandle);", "+\t\t\t\t\tint handle = webViewHandle, root = OS.HIViewGetSuperview (webViewHandle);", "+\t\t\t\t\tOS.CFRetain (handle);", "+\t\t\t\t\tOS.CFRetain (root);", "-\t\t\t\t\tOS.CFRelease (webViewHandle);", "+\t\t\t\t\tOS.CFRelease (root);", "+\t\t\t\t\tOS.CFRelease (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548b2218fd6c5885f2f559a0d808bef3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5fe1dac38bbaf436586a9cb7186584e15e9a84a3", "commitAfterChange": "aa4a6dbde79dfa01a598a4091801c6351b8adce7", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " void overrideTranslations ()", "signatureAfterChange": " void overrideTranslations ()", "diff": ["+\tOS.XtOverrideTranslations (handle, display.tabTranslations);", "+\tOS.XtOverrideTranslations (handle, display.arrowTranslations);", "-\tOS.XtOverrideTranslations (focusHandle, display.tabTranslations);", "-\tOS.XtOverrideTranslations (focusHandle, display.arrowTranslations);", "+\tif (handle != focusHandle) {", "+\t\tOS.XtOverrideTranslations (focusHandle, display.tabTranslations);", "+\t\tOS.XtOverrideTranslations (focusHandle, display.arrowTranslations);", "+\t}"]}], "num": 50888}