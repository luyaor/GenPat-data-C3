{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7e12bc604bce9fe50e038e1cbe2c4e46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f6ac8177676960145218b9e2887fcc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "74beac4f08c1db38193542297b2d9ea6b2957303", "commitAfterChange": "45585fa2e7285a3bb37f9ceb83572ce9673699f1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t* Registry entry HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Version indicates", "+\t* which version of IE is installed.  Check this value in order to determine version-specific", "+\t* features that can be enabled.", "+\t*/", "+\tTCHAR key = new TCHAR (0, \"Software\\\\Microsoft\\\\Internet Explorer\", true);\t//$NON-NLS-1$", "+\tint /*long*/ [] phkResult = new int /*long*/ [1];", "+\tif (OS.RegOpenKeyEx (OS.HKEY_LOCAL_MACHINE, key, 0, OS.KEY_READ, phkResult) == 0) {", "+\t\tint [] lpcbData = new int [1];", "+\t\tTCHAR buffer = new TCHAR (0, \"Version\", true); //$NON-NLS-1$", "+\t\tint result = OS.RegQueryValueEx (phkResult [0], buffer, 0, null, (TCHAR) null, lpcbData);", "+\t\tif (result == 0) {", "+\t\t\tTCHAR lpData = new TCHAR (0, lpcbData [0] / TCHAR.sizeof);", "+\t\t\tresult = OS.RegQueryValueEx (phkResult [0], buffer, 0, null, lpData, lpcbData);", "+\t\t\tif (result == 0) {", "+\t\t\t\tString versionString = lpData.toString (0, lpData.strlen ());", "+\t\t\t\tint index = versionString.indexOf (\".\"); //$NON-NLS-1$", "+\t\t\t\tif (index != -1) {", "+\t\t\t\t\tString majorString = versionString.substring (0, index);", "+\t\t\t\t\tint major = 0;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tmajor = Integer.valueOf (majorString).intValue ();", "+\t\t\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t\t\t/* just continue, version-specific features will not be enabled */", "+\t\t\t\t\t}", "+\t\t\t\t\tif (major >= 7) {", "+\t\t\t\t\t\tsilenceInternalNavigate = true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tOS.RegCloseKey (phkResult [0]);", "+\t}", "+", "+\t/*", "-\tTCHAR key = new TCHAR (0, \"Shell.Explorer\\\\CLSID\", true);\t//$NON-NLS-1$", "-\tint /*long*/ [] phkResult = new int /*long*/ [1];", "+\tkey = new TCHAR (0, \"Shell.Explorer\\\\CLSID\", true);\t//$NON-NLS-1$", "+\tphkResult = new int /*long*/ [1];", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cf8d66e25fd21730dd53150082b3a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "45585fa2e7285a3bb37f9ceb83572ce9673699f1", "commitAfterChange": "1ad491e6034e78929a62a27a0caa0a133127f327", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t/*", "-\t* Registry entry HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\\Version indicates", "-\t* which version of IE is installed.  Check this value in order to determine version-specific", "-\t* features that can be enabled.", "-\t*/", "-\tTCHAR key = new TCHAR (0, \"Software\\\\Microsoft\\\\Internet Explorer\", true);\t//$NON-NLS-1$", "-\tint /*long*/ [] phkResult = new int /*long*/ [1];", "-\tif (OS.RegOpenKeyEx (OS.HKEY_LOCAL_MACHINE, key, 0, OS.KEY_READ, phkResult) == 0) {", "-\t\tint [] lpcbData = new int [1];", "-\t\tTCHAR buffer = new TCHAR (0, \"Version\", true); //$NON-NLS-1$", "-\t\tint result = OS.RegQueryValueEx (phkResult [0], buffer, 0, null, (TCHAR) null, lpcbData);", "-\t\tif (result == 0) {", "-\t\t\tTCHAR lpData = new TCHAR (0, lpcbData [0] / TCHAR.sizeof);", "-\t\t\tresult = OS.RegQueryValueEx (phkResult [0], buffer, 0, null, lpData, lpcbData);", "-\t\t\tif (result == 0) {", "-\t\t\t\tString versionString = lpData.toString (0, lpData.strlen ());", "-\t\t\t\tint index = versionString.indexOf (\".\"); //$NON-NLS-1$", "-\t\t\t\tif (index != -1) {", "-\t\t\t\t\tString majorString = versionString.substring (0, index);", "-\t\t\t\t\tint major = 0;", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tmajor = Integer.valueOf (majorString).intValue ();", "-\t\t\t\t\t} catch (NumberFormatException e) {", "-\t\t\t\t\t\t/* just continue, version-specific features will not be enabled */", "-\t\t\t\t\t}", "-\t\t\t\t\tif (major >= 7) {", "-\t\t\t\t\t\tsilenceInternalNavigate = true;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tOS.RegCloseKey (phkResult [0]);", "-\t}", "-", "-\t/*", "-\t* Registry entry HKEY_CLASSES_ROOT\\Shell.Explorer\\CLSID indicates which version of", "-\t* Shell.Explorer to use by default.  We usually want to use this value because it", "-\t* typically points at the newest one that is available.  However it is possible for", "-\t* this registry entry to be changed by another application to point at some other", "-\t* Shell.Explorer version.", "-\t*", "-\t* The Browser depends on the Shell.Explorer version being at least Shell.Explorer.2.", "-\t* If it is detected in the registry to be Shell.Explorer.1 then change the progId that", "-\t* will be embedded to explicitly specify Shell.Explorer.2.", "-\t*/", "-\tString progId = \"Shell.Explorer\";\t//$NON-NLS-1$", "-\tkey = new TCHAR (0, \"Shell.Explorer\\\\CLSID\", true);\t//$NON-NLS-1$", "-\tphkResult = new int /*long*/ [1];", "-\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult) == 0) {", "-\t\tint [] lpcbData = new int [1];", "-\t\tint result = OS.RegQueryValueEx (phkResult [0], null, 0, null, (TCHAR) null, lpcbData);", "-\t\tif (result == 0) {", "-\t\t\tTCHAR lpData = new TCHAR (0, lpcbData [0] / TCHAR.sizeof);", "-\t\t\tresult = OS.RegQueryValueEx (phkResult [0], null, 0, null, lpData, lpcbData);", "-\t\t\tif (result == 0) {", "-\t\t\t\tString clsid = lpData.toString (0, lpData.strlen ());", "-\t\t\t\tif (clsid.equals (CLSID_SHELLEXPLORER1)) {", "-\t\t\t\t\t/* Shell.Explorer.1 is the default, ensure that Shell.Explorer.2 is available */", "-\t\t\t\t\tkey = new TCHAR (0, \"Shell.Explorer.2\", true);\t//$NON-NLS-1$", "-\t\t\t\t\tint /*long*/ [] phkResult2 = new int /*long*/ [1];", "-\t\t\t\t\tif (OS.RegOpenKeyEx (OS.HKEY_CLASSES_ROOT, key, 0, OS.KEY_READ, phkResult2) == 0) {", "-\t\t\t\t\t\t/* specify that Shell.Explorer.2 is to be used */", "-\t\t\t\t\t\tOS.RegCloseKey (phkResult2 [0]);", "-\t\t\t\t\t\tprogId = \"Shell.Explorer.2\";\t//$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tOS.RegCloseKey (phkResult [0]);", "-\t}", "-\t"]}], "num": 25310}