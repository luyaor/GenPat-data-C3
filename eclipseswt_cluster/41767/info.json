{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "693963f4bbae9ed97ed7626710be9b93", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffcd31dfabd6f874dfc59b6e00d5e1a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "991d280d2304d0549a595744e02de232accbd597", "commitAfterChange": "f257807ba6f1354372198ecdfbf3c83912836358", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " void initializeAccessible()", "signatureAfterChange": " void initializeAccessible()", "diff": ["+\taccessible.addAccessibleTextListener(new AccessibleTextAdapter() {", "+\t\tpublic void getCaretOffset(AccessibleTextEvent e) {", "+\t\t\te.offset = StyledText.this.getCaretOffset();", "+\t\t}", "+\t\tpublic void getSelectionRange(AccessibleTextEvent e) {", "+\t\t\tPoint selection = StyledText.this.getSelectionRange();", "+\t\t\te.offset = selection.x;", "+\t\t\te.length = selection.y;", "+\t\t}", "+\t});", "-\t\t\te.result = getText();", "+\t\t\te.result = StyledText.this.getText();", "+\t\t}", "+\t});", "+\taddListener(SWT.Modify, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tif (event.text.length() == 0) {", "+\t\t\t\taccessible.textChanged(ACC.TEXT_DELETE, event.start, event.end - event.start);", "+\t\t\t} else {", "+\t\t\t\tif (event.start == event.end) {", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_INSERT, event.start, event.text.length());", "+\t\t\t\t} else {", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_DELETE, event.start, event.end - event.start);", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_INSERT, event.start, event.text.length());\t", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t});", "+\taddListener(SWT.Selection, new Listener () {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\taccessible.textSelectionChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59cc1a156ad2d5e9e3ebe0b59ee3958f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "48777b1c16abb8934ace83c0a2f60a1b06763369", "commitAfterChange": "3e8a9d5abdd3552e764c4e434d570d1305d59c4c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CLabel(Composite parent, int style)", "signatureAfterChange": "\r public CLabel(Composite parent, int style)", "diff": ["-/* Start ACCESSIBILITY */\r", "-\tgetAccessible().addAccessibleListener(new AccessibleAdapter() {\r", "-\t\tpublic void getName(AccessibleEvent e) {\r", "-\t\t\te.result = getText();\r", "-\t\t}\r", "-\t\t\r", "-\t\tpublic void getHelp(AccessibleEvent e) {\r", "-\t\t\te.result = getToolTipText();\r", "-\t\t}\r", "-\t});\r", "-\t\t\r", "-\tgetAccessible().addAccessibleControlListener(new AccessibleControlAdapter() {\r", "-\t\tpublic void hitTest(AccessibleControlEvent e) {\r", "-\t\t\tPoint testPoint = toControl(new Point(e.x, e.y));\r", "-\t\t\tif (getBounds().contains(testPoint)) {\r", "-\t\t\t\te.childID = ACC.CHILDID_SELF;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\t\r", "-\t\tpublic void getLocation(AccessibleControlEvent e) {\r", "-\t\t\tRectangle location = getBounds();\r", "-\t\t\tPoint pt = toDisplay(new Point(location.x, location.y));\r", "-\t\t\te.x = pt.x;\r", "-\t\t\te.y = pt.y;\r", "-\t\t\te.width = location.width;\r", "-\t\t\te.height = location.height;\r", "-\t\t}\r", "-\t\t\r", "-\t\tpublic void getChildCount(AccessibleControlEvent e) {\r", "-\t\t\te.code = 0;\r", "-\t\t}\r", "-\t\t\r", "-\t\tpublic void getRole(AccessibleControlEvent e) {\r", "-\t\t\te.code = ACC.ROLE_SYSTEM_STATICTEXT;\r", "-\t\t}\r", "-\t\t\r", "-\t\tpublic void getState(AccessibleControlEvent e) {\r", "-\t\t\te.code = ACC.STATE_SYSTEM_NORMAL;\r", "-\t\t}\r", "-\t});\r", "-/* End ACCESSIBILITY */\r", "+\tinitAccessible();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2888e2d7a23c55f6bd4e162cb97ef742", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet96.java", "commitBeforeChange": "879c92f090c619e59d2af3943586380c5037e4e5", "commitAfterChange": "569babf0a9b188657307d0a76777c9cf21b42e97", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main(String[] args)", "signatureAfterChange": "  public static void main(String[] args)", "diff": ["+\t\t\t// close the text editor when the user tabs away", "+\t\t\ttext.addFocusListener(new FocusAdapter() {", "+\t\t\t\tpublic void focusLost(FocusEvent e) {", "+\t\t\t\t\ttext.dispose();", "+\t\t\t\t}", "+\t\t\t});", "+\t// When the user double clicks in the TableCursor, pop up a text editor so that ", "+\t// they can change the text of the cell", "+\tcursor.addMouseListener(new MouseAdapter() {", "+\t\tpublic void mouseDoubleClick(MouseEvent e) {", "+\t\t\tfinal Text text = new Text(cursor, SWT.NONE);", "+\t\t\tTableItem row = cursor.getRow();", "+\t\t\tint column = cursor.getColumn();", "+\t\t\ttext.setText(row.getText(column));", "+\t\t\ttext.addKeyListener(new KeyAdapter() {", "+\t\t\t\tpublic void keyPressed(KeyEvent e) {", "+\t\t\t\t\t// close the text editor and copy the data over ", "+\t\t\t\t\t// when the user hits \"ENTER\"", "+\t\t\t\t\tif (e.character == SWT.CR) {", "+\t\t\t\t\t\tTableItem row = cursor.getRow();", "+\t\t\t\t\t\tint column = cursor.getColumn();", "+\t\t\t\t\t\trow.setText(column, text.getText());", "+\t\t\t\t\t\ttext.dispose();", "+\t\t\t\t\t}", "+\t\t\t\t\t// close the text editor when the user hits \"ESC\"", "+\t\t\t\t\tif (e.character == SWT.ESC) {", "+\t\t\t\t\t\ttext.dispose();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t// close the text editor when the user clicks away", "+\t\t\ttext.addFocusListener(new FocusAdapter() {", "+\t\t\t\tpublic void focusLost(FocusEvent e) {", "+\t\t\t\t\ttext.dispose();", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\teditor.setEditor(text);", "+\t\t\ttext.setFocus();", "+\t\t}", "+\t});", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c677439e1a6283061d6c6dbaa277ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/views/MacGeneratorView.java", "commitBeforeChange": "78d0998c278ea3b9e8ad98792cb32a0685828ee5", "commitAfterChange": "e0eebc7184e9e030d713fedc011776bd0bf1aa18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic MacGeneratorView()", "signatureAfterChange": " \tpublic MacGeneratorView()", "diff": ["-\t\tIWorkspaceRoot workspace = ResourcesPlugin.getWorkspace().getRoot();", "-\t\troot = workspace.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));", "+\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();", "+\t\troot = workspaceRoot.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));\t\t", "+\t\tlistener = new IResourceChangeListener() {", "+\t\t\tpublic void resourceChanged(IResourceChangeEvent event) {", "+\t\t\t\tif (job != null) return;", "+\t\t\t\tif (event.getType() != IResourceChangeEvent.POST_CHANGE) return;", "+\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "+\t\t\t\tIResourceDelta piDelta = rootDelta.findMember(root.getFullPath());", "+\t\t\t\tif (piDelta == null) return;", "+\t\t\t\tfinal ArrayList changed = new ArrayList();", "+\t\t\t\tIResourceDeltaVisitor visitor = new IResourceDeltaVisitor() {", "+\t\t\t\t\tpublic boolean visit(IResourceDelta delta) {", "+\t\t\t\t\t\tif (delta.getKind() != IResourceDelta.CHANGED) return true;", "+\t\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) return true;", "+\t\t\t\t\t\tIResource resource = delta.getResource();", "+\t\t\t\t\t\tif (resource.getType() == IResource.FILE && \"extras\".equalsIgnoreCase(resource.getFileExtension())) {", "+\t\t\t\t\t\t\tchanged.add(resource);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t};", "+\t\t\t\ttry {", "+\t\t\t\t\tpiDelta.accept(visitor);", "+\t\t\t\t} catch (CoreException e) {}", "+\t\t\t\tif (changed.size() > 0) {", "+\t\t\t\t\tui.refresh();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\tworkspace.addResourceChangeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7302e269af98befd96c0153fe0ff588f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "df2b18d6c3d453a1cbf6420cefbca622fb8ff1da", "commitAfterChange": "fb1e2071d35034cab2aa0ee2da4593b8398a9282", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CLabel(Composite parent, int style)", "signatureAfterChange": "\r public CLabel(Composite parent, int style)", "diff": ["+/* Start ACCESSIBILITY */\r", "+\tgetAccessible().addAccessibleListener(new AccessibleAdapter() {\r", "+\t\tpublic void getName(AccessibleEvent e) {\r", "+\t\t\te.result = getText();\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getHelp(AccessibleEvent e) {\r", "+\t\t\te.result = getToolTipText();\r", "+\t\t}\r", "+\t});\r", "+\t\t\r", "+\tgetAccessible().addAccessibleControlListener(new AccessibleControlAdapter() {\r", "+\t\tpublic void accHitTest(AccessibleControlEvent e) {\r", "+\t\t\tPoint testPoint = toControl(new Point(e.x, e.y));\r", "+\t\t\tif (getBounds().contains(testPoint)) {\r", "+\t\t\t\te.childID = ACC.CHILDID_SELF;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void accLocation(AccessibleControlEvent e) {\r", "+\t\t\tRectangle location = getBounds();\r", "+\t\t\tPoint pt = toDisplay(new Point(location.x, location.y));\r", "+\t\t\te.x = pt.x;\r", "+\t\t\te.y = pt.y;\r", "+\t\t\te.width = location.width;\r", "+\t\t\te.height = location.height;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getChildCount(AccessibleControlEvent e) {\r", "+\t\t\te.code = 0;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getRole(AccessibleControlEvent e) {\r", "+\t\t\te.code = ACC.ROLE_SYSTEM_STATICTEXT;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getState(AccessibleControlEvent e) {\r", "+\t\t\te.code = ACC.STATE_SYSTEM_NORMAL;\r", "+\t\t}\r", "+\t});\r", "+/* End ACCESSIBILITY */\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d3dd151fb8dfb136d10f9ebc1c0ade", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "64349bf9cd19222d7f7bef44cb4d0e244ca7ed8f", "commitAfterChange": "a1c32779a77806d83e43b58429ae7b645a07df78", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": " void initializeAccessible()", "signatureAfterChange": " void initializeAccessible()", "diff": ["+\taccessible.addAccessibleEditableTextListener(new AccessibleEditableTextListener() {", "+\t\tpublic void setTextAttributes(AccessibleTextAttributeEvent e) {", "+\t\t\t// This method must be implemented by the application", "+\t\t\te.result = ACC.OK;", "+\t\t}", "+\t\tpublic void replaceText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.replaceTextRange(e.start, e.end - e.start, e.string);", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void pasteText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start);", "+            st.paste();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void cutText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.cut();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void copyText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.copy();", "+            e.result = ACC.OK;", "+\t\t}", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6c323e9859114a60d23aa5bb6585d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/PopupList.java", "commitBeforeChange": "c596fe84f4c12584057102d17cab56727f7394f4", "commitAfterChange": "46ea407a47ef6307c45647873a5cb3a64a2168e9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public PopupList(Shell parent)", "signatureAfterChange": " public PopupList(Shell parent)", "diff": ["-", "-\tshell = new Shell(parent, 0);", "+\tthis (parent, 0);", "+}"]}], "num": 41767}