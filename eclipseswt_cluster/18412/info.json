{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d018a80111ff9d71798b38ee10e5e9af", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2625bf52657aee88df137fa0d4a64cf2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "746fe6441506cb40673655a85d6587679ea0fd0c", "commitAfterChange": "788b093da8f54ec94d6ab0ae4d08ccec4c1464eb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": "\r public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "diff": ["-\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\tint hwnd = OS.WindowFromDC(handle);\r", "+\t/*\r", "+\t* Feature in WinCE.  The function WindowFromDC is not part of the\r", "+\t* WinCE SDK.\r", "+\t*/\r", "+\tint hwnd = data.hwnd;\r", "-\t\tOS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, OS.SW_INVALIDATE | OS.SW_ERASE);\r", "+\t\tint res = OS.ScrollWindowEx(hwnd, destX - srcX, destY - srcY, lprcScroll, lprcClip, 0, null, OS.SW_INVALIDATE | OS.SW_ERASE); \r", "+\r", "+\t\t/*\r", "+\t\t* Feature in WinCE.  ScrollWindowEx does not accept combined\r", "+\t\t* vertical and horizontal scrollings.  The fix is to do a\r", "+\t\t* BitBlt and invalidate the appropriate source area.\r", "+\t\t*/\r", "+\t\tif (res == 0 && OS.IsWinCE) {\r", "+\t\t\tOS.BitBlt(handle, destX, destY, width, height, handle, srcX, srcY, OS.SRCCOPY);\r", "+\t\t\tint deltaX = destX - srcX, deltaY = destY - srcY;\r", "+\t\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);\r", "+\t\t\tif (disjoint) {\r", "+\t\t\t\tOS.InvalidateRect(hwnd, lprcScroll, true);\r", "+\t\t\t} else {\r", "+\t\t\t\tRECT rect = new RECT();\r", "+\t\t\t\tif (deltaX != 0) {\r", "+\t\t\t\t\tint newX = destX - deltaX;\r", "+\t\t\t\t\tif (deltaX < 0) newX = destX + width;\r", "+\t\t\t\t\tOS.SetRect(rect, newX, srcY, newX + Math.abs(deltaX), srcY + height);\r", "+\t\t\t\t\tOS.InvalidateRect(hwnd, rect, true);\r", "+\t\t\t\t}\r", "+\t\t\t\tif (deltaY != 0) {\r", "+\t\t\t\t\tint newY = destY - deltaY;\r", "+\t\t\t\t\tif (deltaY < 0) newY = destY + height;\r", "+\t\t\t\t\tOS.SetRect(rect, srcX, newY, srcX + width, newY + Math.abs(deltaY));\r", "+\t\t\t\t\tOS.InvalidateRect(hwnd, rect, true);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6cd4e80d2764e5859c2e445c8e7eade", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "diff": ["-\tOS.gdk_window_copy_area (data.drawable, handle,", "-\t                         destX, destY,", "-\t                         data.drawable,", "-\t                         srcX, srcY, width, height);", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (width <= 0 || height <= 0) return;", "+\tint deltaX = destX - srcX, deltaY = destY - srcY;", "+\tif (deltaX == 0 && deltaY == 0) return;", "+\tint drawable = data.drawable;", "+\tOS.gdk_gc_set_exposures(handle, true);", "+\tOS.gdk_draw_drawable(drawable, handle, drawable, srcX, srcY, destX, destY, width, height);", "+\tOS.gdk_gc_set_exposures(handle, false);", "+\tif (data.image != null) return;", "+\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);", "+\tif (disjoint) {", "+\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);", "+\t} else {", "+\t\tif (deltaX != 0) {", "+\t\t\tint newX = destX - deltaX;", "+\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);", "+\t\t}", "+\t\tif (deltaY != 0) {", "+\t\t\tint newY = destY - deltaY;", "+\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));", "+\t\t}", "+\t}", "+}"]}], "num": 18412}