{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f76c358faa9967ccceb539815fa4daa7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e06e327bf3b372c4c66fd091f32e2d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "71e1311cbbe9e51dc606d59ab142f6565e43ed78", "commitAfterChange": "a61fa95313d95821792a0e7db807eb55fb2cdae8", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  DNDEvent startDrag(Event dragEvent)", "signatureAfterChange": "  DNDEvent startDrag(Event dragEvent)", "diff": ["-\tTransfer fileTrans = null;", "-", "-\t\t\tif (transfer instanceof FileTransfer) {", "-\t\t\t\tfileTrans = transfer;", "-\t\t\t}\t\t\t", "-", "-\tif (nativeTypeArray != null)", "-\t\tdragBoard.declareTypes(nativeTypeArray, dragSourceDelegate);", "-", "-\tif (fileTrans != null) {", "-\t\tNSFileManager fileManager = NSFileManager.defaultManager();", "-\t\tint index = 0;", "-\t\tpaths = new NSString[4];", "-\t\texist = new boolean[4];", "-\t\tint[] types = fileTrans.getTypeIds();", "-\t\tTransferData transferData = new TransferData();", "-\t\ttransferData.type = types[0];", "-\t\tDNDEvent event2 = new DNDEvent();", "-\t\tevent2.widget = this;", "-\t\tevent2.time = (int)System.currentTimeMillis(); ", "-\t\tevent2.dataType = transferData; ", "-\t\tnotifyListeners(DND.DragSetData, event2);", "-\t\tif (event2.data != null) {", "-\t\t\tfor (int j = 0; j < types.length; j++) {", "-\t\t\t\ttransferData.type = types[j];", "-\t\t\t\tfileTrans.javaToNative(event2.data, transferData);", "-\t\t\t\tif (transferData.data != null) {", "-\t\t\t\t\tNSArray array = (NSArray) transferData.data;", "-\t\t\t\t\tint count = (int) /*64*/ array.count();", "-\t\t\t\t\tfor (int i = 0; i < count; i++) {", "-\t\t\t\t\t\tif (index == paths.length) {", "-\t\t\t\t\t\t\tNSString newPaths [] = new NSString[paths.length + 4];", "-\t\t\t\t\t\t\tSystem.arraycopy(paths, 0, newPaths, 0, index);", "-\t\t\t\t\t\t\tpaths = newPaths;", "-\t\t\t\t\t\t\tboolean newExists[] = new boolean [paths.length];", "-\t\t\t\t\t\t\tSystem.arraycopy(exist, 0, newExists, 0, index);", "-\t\t\t\t\t\t\texist = newExists;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tNSString filePath = new NSString(array.objectAtIndex(i));", "-\t\t\t\t\t\tpaths[index] = filePath;", "-\t\t\t\t\t\texist[index] = fileManager.fileExistsAtPath(filePath);", "-\t\t\t\t\t\tindex++;", "-\t\t\t\t\t}", "-\t\t\t\t\tdragBoard.setPropertyList(transferData.data, OS.NSFilenamesPboardType);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "+\tdragBoard.declareTypes(nativeTypeArray, dragSourceDelegate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f4eb55a6e0aa3b0ef799d06a7184d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "1b5f48c2a7ec081e0b09fde05acdf40e02ceb553", "commitAfterChange": "c00e18fa39ffc0a435d7daaa5ef04fb89b884080", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void drag(Event dragEvent)", "signatureAfterChange": "  void drag(Event dragEvent)", "diff": ["-\t\tint[] types = transferAgents[i].getTypeIds();", "-\t\tif (transferAgents[i] instanceof FileTransfer) {", "-\t\t\tTransferData transferData = new TransferData();", "-\t\t\ttransferData.type = types[0];", "-\t\t\tevent = new DNDEvent();", "-\t\t\tevent.widget = this;", "-\t\t\tevent.time = (int)System.currentTimeMillis(); ", "-\t\t\tevent.dataType = transferData; ", "-\t\t\tnotifyListeners(DND.DragSetData, event);", "-\t\t\tif (event.data == null) return;", "-\t\t\tTransfer transferAgent = transferAgents[i];", "-\t\t\tfor (int j = 0; j < types.length; j++) {", "-\t\t\t\ttransferData.type = types[j];", "-\t\t\t\ttransferAgent.javaToNative(event.data, transferData);", "-\t\t\t\tif (transferData.result != OS.noErr) return;", "-\t\t\t\tfor (int k = 0; k < transferData.data.length; k++) {", "-\t\t\t\t\tbyte[] datum = transferData.data[k];", "-\t\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1 + k, types[j], datum, datum.length, 0);", "+\t\tTransfer transfer = transferAgents[i];", "+\t\tif (transfer != null) {", "+\t\t\tint[] types = transfer.getTypeIds();", "+\t\t\tif (transfer instanceof FileTransfer) {", "+\t\t\t\tTransferData transferData = new TransferData();", "+\t\t\t\ttransferData.type = types[0];", "+\t\t\t\tevent = new DNDEvent();", "+\t\t\t\tevent.widget = this;", "+\t\t\t\tevent.time = (int)System.currentTimeMillis(); ", "+\t\t\t\tevent.dataType = transferData; ", "+\t\t\t\tnotifyListeners(DND.DragSetData, event);", "+\t\t\t\tif (event.data == null) return;", "+\t\t\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\t\t\ttransferData.type = types[j];", "+\t\t\t\t\ttransfer.javaToNative(event.data, transferData);", "+\t\t\t\t\tif (transferData.result != OS.noErr) return;", "+\t\t\t\t\tfor (int k = 0; k < transferData.data.length; k++) {", "+\t\t\t\t\t\tbyte[] datum = transferData.data[k];", "+\t\t\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1 + k, types[j], datum, datum.length, 0);", "+\t\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1, types[j], null, 0, 0);\t", "+\t\t\t\t}\t", "-\t\t} else {", "-\t\t\tfor (int j = 0; j < types.length; j++) {", "-\t\t\t\tOS.AddDragItemFlavor(theDrag[0], 1, types[j], null, 0, 0);\t", "-\t\t\t}\t"]}], "num": 15817}