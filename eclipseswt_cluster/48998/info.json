{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "52a9206573e6695397528a01ef4fb415", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b6635b4cd00706b395627acde70df46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "diff": ["-\tDisplay display = this.display;", "-\tdisplay.lastAscii = wParam;", "-\tdisplay.lastNull = wParam == 0;", "-", "-\t/* Do not issue a key down if a menu bar mnemonic was invoked */", "-\tif (!hooks (SWT.KeyDown) && !display.filters (SWT.KeyDown)) {", "-\t\treturn null;", "-\t}", "-\t", "-\t/* Call the window proc to determine whether it is a system key or mnemonic */", "-\tboolean oldKeyHit = display.mnemonicKeyHit;", "-\tdisplay.mnemonicKeyHit = true;", "-\tint result = callWindowProc (OS.WM_SYSCHAR, wParam, lParam);", "-\tboolean consumed = false;", "-\tif (!display.mnemonicKeyHit) {", "-\t\tconsumed = !sendKeyEvent (SWT.KeyDown, OS.WM_SYSCHAR, wParam, lParam);", "-\t\t// widget could be disposed at this point", "-\t}", "-\tconsumed |= display.mnemonicKeyHit;", "-\tdisplay.mnemonicKeyHit = oldKeyHit;", "-\treturn consumed ? LRESULT.ONE : new LRESULT (result);", "+\treturn wmSysChar (windowProc (), handle, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3410d3241ff70cd4cf975ef2fb59ae8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "  LRESULT WM_IME_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_IME_CHAR (int wParam, int lParam)", "diff": ["-\tDisplay display = this.display;", "-\tdisplay.lastKey = 0;", "-\tdisplay.lastAscii = wParam;", "-\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\tif (!sendKeyEvent (SWT.KeyDown, OS.WM_IME_CHAR, wParam, lParam)) {", "-\t\treturn LRESULT.ONE;", "-\t}", "-\tsendKeyEvent (SWT.KeyUp, OS.WM_IME_CHAR, wParam, lParam);", "-\t// widget could be disposed at this point", "-\tdisplay.lastKey = display.lastAscii = 0;", "-\treturn LRESULT.ONE;", "+\treturn wmIMEChar (handle, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57dcb65c0b03b48cb13eaea5bd53b2e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "eca9561f00e8f6869c3f064d2cc210213e7961a5", "commitAfterChange": "7b035d7945e49f32511c350507eda7aad65fec22", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \t\r public StyledText(Composite parent, int style)", "signatureAfterChange": "\r \t\r public StyledText(Composite parent, int style)", "diff": ["-\r", "+\r\r", "-\t\txInset = BIDI_CARET_WIDTH - 1;\r", "-\t\t\t\tcreateBidiCaret();\r", "-\t\t\t\tCaret caret = getCaret();\r", "-\t\t\t\t// don't use setBidiCaret, will position the caret\r", "-\t\t\t\t// incorrectly\r", "-\t\t\t\tint caretX = caret.getLocation().x;\r", "-\t\t\t\tif (StyledTextBidi.getKeyboardLanguageDirection() == SWT.RIGHT) {\r", "-\t\t\t\t\tcaretX -= (getCaretWidth() - 1);\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tcaretX += (getCaretWidth() - 1);\r", "-\t\t\t\t}\r", "-\t\t\t\tint line = content.getLineAtOffset(caretOffset);\r", "-\t\t\t\tcaret.setLocation(caretX, line * lineHeight - verticalScrollOffset);\r", "+\t\t\t\t// setBidiCaretLocation calculates caret location like during \r", "+\t\t\t\t// cursor movement and takes keyboard language into account. \r", "+\t\t\t\t// Fixes 1GKPYMK\r", "+\t\t\t\tsetBidiCaretLocation();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d316834d87c4df93d731c6d3f7f13fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "04bdad09dcfe1dc53f646d4eaa792524245ec09d", "commitAfterChange": "564c1c02092bc5f4dfec4f8dc3e60bb885088713", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 222, "signatureBeforeChange": " void handleMouseMove(Event event)", "signatureAfterChange": " void handleMouseMove(Event event)", "diff": ["-\t\tint offset = getOffsetAtPoint(event.x, event.y, null, true);", "-\t\tDisplay display = getDisplay();", "-\t\tCursor newCursor = cursor;", "-\t\tif (renderer.hasLink(offset)) {", "-\t\t\tnewCursor = display.getSystemCursor(SWT.CURSOR_HAND);", "-\t\t} else {", "-\t\t\tif (cursor == null) {", "-\t\t\t\tint type = blockSelection ? SWT.CURSOR_CROSS : SWT.CURSOR_IBEAM;", "-\t\t\t\tnewCursor = display.getSystemCursor(type);", "-\t\t\t}", "-\t\t}", "-\t\tif (newCursor != getCursor()) super.setCursor(newCursor);", "+\t\tdoMouseLinkCursor(event.x, event.y);"]}], "num": 48998}