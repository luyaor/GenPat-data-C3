{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad6a88e3b64672ebee4eacc40faaf85f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f564f43cd63cf44a3ac1740a7f694728", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "6f65337c8a391b26ec0e292badffe1b220d689e9", "commitAfterChange": "e06c7cee06cde407869bbcac7ab1fc8f1e44f50c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void computeDisplayText (int columnIndex, GC gc)", "signatureAfterChange": " void computeDisplayText (int columnIndex, GC gc)", "diff": ["-\tint availableWidth = column.getX () + column.width - getTextX (columnIndex) - 2 * MARGIN_TEXT;", "+\tint availableWidth;", "+\tif (columnIndex == 0) {", "+\t\t/* column 0 is always LEFT and must consider hierarchy decorations */", "+\t\tavailableWidth = column.getX () + column.width - getTextX (columnIndex) - 2 * MARGIN_TEXT;", "+\t} else {", "+\t\t/* columns > 0 may not be LEFT so cannot use getTextX (int) */", "+\t\tavailableWidth = column.width - 2 * parent.getCellPadding () - 2 * MARGIN_TEXT;", "+\t\tif (images [columnIndex] != null) {", "+\t\t\tavailableWidth -= image.getBounds ().width;", "+\t\t\tavailableWidth -= Tree.MARGIN_IMAGE;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad027d8832bf4661f24da57889c70b6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "2f67431438840595e1e9791a10355b49c31e5378", "commitAfterChange": "8df10004fc678a6a9f643424a1754573f7011ae9", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 304, "signatureBeforeChange": " public void setTopIndex(int topIndex)", "signatureAfterChange": " public void setTopIndex(int topIndex)", "diff": ["-\tint lineCount = content.getLineCount();", "-\t//TODO broken for variable line height", "-\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "-\tif (topIndex < 0) {", "-\t\ttopIndex = 0;", "-\t} else if (topIndex > lineCount - pageSize) {", "-\t\ttopIndex = lineCount - pageSize;", "-\t}", "-\tint pixel = getLinePixel(topIndex);", "+\tint lineCount = content.getLineCount(), pixel;", "+\tif (isFixedLineHeight()) {", "+\t\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "+\t\tif (topIndex < 0) {", "+\t\t\ttopIndex = 0;", "+\t\t} else if (topIndex > lineCount - pageSize) {", "+\t\t\ttopIndex = lineCount - pageSize;", "+\t\t}", "+\t\tpixel = getLinePixel(topIndex);", "+\t} else {", "+\t\ttopIndex = Math.max(0, Math.min(lineCount - 1, topIndex));", "+\t\tpixel = getLinePixel(topIndex);", "+\t\tif (pixel > 0) {", "+\t\t\tpixel = getAvailableHeightBellow(pixel);", "+\t\t} else {", "+\t\t\tpixel = getAvailableHeightAbove(pixel);", "+\t\t}", "+\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5ce3254eaa9191c8f30cf42f5b8df92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/Variant.java", "commitBeforeChange": "595f8959b2a951ca621310ae837f06746fa6eff2", "commitAfterChange": "418189f52bdfb218fb6efa8e48de290592d75479", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r void setData(int pData)", "signatureAfterChange": "\r void setData(int pData)", "diff": ["+\t\t\tif (ppvObject[0] == 0) {\r", "+\t\t\t\ttype = COM.VT_EMPTY;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tif (ppvObject[0] == 0) {\r", "+\t\t\t\ttype = COM.VT_EMPTY;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "-\r", "+\t\t\tif (hMem[0] == 0) {\r", "+\t\t\t\ttype = COM.VT_EMPTY;\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tstringData = \"\";\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf8bd517ea8b3e49348b7bcba8e6e708", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "f125bca0a1987da478d40d7b425558405207673a", "commitAfterChange": "bd0900b2f7361a1062c04e0237554a7d0db0a51f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["+\tColor linkColor = null;", "-\t\t\t\t\t\t\tif (run.style != null && run.style.foreground != null) fg = run.style.foreground;", "+\t\t\t\t\t\t\tif (run.style != null) {", "+\t\t\t\t\t\t\t\tif (run.style.foreground != null) {", "+\t\t\t\t\t\t\t\t\tfg = run.style.foreground;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tif (run.style.underline && run.style.underlineStyle == SWT.UNDERLINE_LINK) {", "+\t\t\t\t\t\t\t\t\t\tif (linkColor == null) {", "+\t\t\t\t\t\t\t\t\t\t\tlinkColor = new Color(device, LINK_FOREGROUND);", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\tfg = linkColor;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\tif (linkColor != null) linkColor.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc97dc99c7aa2f965ab5aab3613ee68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "0262f2043050ffa95129a1b98153a0304c364772", "commitAfterChange": "bb7d6277c4df65eeb3d89017add0f14480095c41", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["+\t\tmenu.cascade = this;", "+\t} else {", "+\t\tif ((parent.style & SWT.BAR) != 0) {", "+\t\t\tmenu = new Menu (parent.parent, SWT.DROP_DOWN);", "+\t\t}\t", "-\t((NSMenuItem)nsItem).setSubmenu(menu.nsMenu);", "-", "+\tNSMenuItem menuItem = (NSMenuItem) nsItem;", "+\tif (menu != null) menuItem.setSubmenu (menu.nsMenu);", "+\telse menuItem.setSubmenu (null);", "+\t", "+\t/* Update menu title with parent item title */", "+\tupdateText ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "616730509de936360b75e06b6b1bad08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void computeDisplayText (int columnIndex, GC gc)", "signatureAfterChange": " void computeDisplayText (int columnIndex, GC gc)", "diff": ["-\t", "+", "-\tImage image = getImage (columnIndex);", "-\tif (image != null) {", "-\t\tavailableWidth -= image.getBounds ().width;", "-\t\tavailableWidth -= Table.MARGIN_IMAGE;", "+\tif (columnIndex == 0) {", "+\t\tavailableWidth -= parent.col0ImageWidth;", "+\t\tif (parent.col0ImageWidth > 0) availableWidth -= Table.MARGIN_IMAGE;", "+\t\tif ((parent.style & SWT.CHECK) != 0) {", "+\t\t\tavailableWidth -= parent.checkboxBounds.width;", "+\t\t\tavailableWidth -= Table.MARGIN_IMAGE;", "+\t\t}", "+\t} else {", "+\t\tImage image = getImage (columnIndex);", "+\t\tif (image != null) {", "+\t\t\tavailableWidth -= image.getBounds ().width;", "+\t\t\tavailableWidth -= Table.MARGIN_IMAGE;", "+\t\t}"]}], "num": 51961}