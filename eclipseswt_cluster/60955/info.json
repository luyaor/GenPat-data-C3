{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cec7cc0df8aef419a0d903bf609463f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598ab351c209a07e496409b29320149c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r void insertItemIntoRow(CoolItem item, Vector row, int x_root, int rowY)", "signatureAfterChange": "\r void insertItemIntoRow(CoolItem item, int rowIndex, int x_root)", "diff": ["-void insertItemIntoRow(CoolItem item, Vector row, int x_root, int rowY) {\r", "+void insertItemIntoRow(CoolItem item, int rowIndex, int x_root) {\r", "-\tint height = item.getSize().y;\r", "-\tif (row.size() == 0) {\r", "-\t\titem.setBounds(0, rowY, barWidth, height);\t\t\r", "-\t\trow.addElement(item);\r", "-\t\treturn;\r", "-\t}\r", "-\t\r", "+\tint rowY = items[rowIndex][0].getBounds().y;\r", "-\tfor (index = 0; index < row.size(); index++) {\r", "-\t\tCoolItem next = (CoolItem) row.elementAt(index);\r", "-\t\tif (x < next.getBounds().x) break;\r", "+\tfor (index = 0; index < items[rowIndex].length; index++) {\r", "+\t\tif (x < items[rowIndex][index].getBounds().x) break;\r", "-\trow.insertElementAt(item, index);\r", "+\tint oldLength = items[rowIndex].length;\r", "+\tCoolItem[] newRow = new CoolItem[oldLength + 1];\r", "+\tSystem.arraycopy(items[rowIndex], 0, newRow, 0, index);\r", "+\tnewRow[index] = item;\r", "+\tSystem.arraycopy(items[rowIndex], index, newRow, index + 1, oldLength - index);\r", "+\titems[rowIndex] = newRow;\r", "-\t\tCoolItem left = (CoolItem) row.elementAt(index - 1);\r", "+\t\tCoolItem left = items[rowIndex][index - 1];\r", "-\tint width = 0;\r", "-\tif (index < row.size() - 1) {\r", "-\t\tCoolItem right = (CoolItem) row.elementAt(index + 1);\r", "+\tint width = 0, height = item.getSize().y;\r", "+\tif (index < items[rowIndex].length - 1) {\r", "+\t\tCoolItem right = items[rowIndex][index + 1];\r", "-\titem.requestedWidth = width;\r", "+\tRectangle bounds = item.getBounds();\r", "+\titem.requestedWidth = bounds.width;\r", "+\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef2c78171a38c6c4e8facd1492820b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r void removeItemFromRow(CoolItem item, Vector row)", "signatureAfterChange": "\r void removeItemFromRow(CoolItem item, int rowIndex)", "diff": ["-void removeItemFromRow(CoolItem item, Vector row) {\r", "-\tint index = row.indexOf(item);\r", "-\trow.removeElementAt(index);\r", "-\tif (row.size() == 0) {\r", "-\t\trows.removeElement(row);\r", "+void removeItemFromRow(CoolItem item, int rowIndex) {\r", "+\tint index = findItem(item).x;\r", "+\tint newLength = items[rowIndex].length - 1;\r", "+\tRectangle itemBounds = item.getBounds();\r", "+\tif (newLength > 0) {\r", "+\t\tCoolItem[] newRow = new CoolItem[newLength];\r", "+\t\tSystem.arraycopy(items[rowIndex], 0, newRow, 0, index);\r", "+\t\tSystem.arraycopy(items[rowIndex], index + 1, newRow, index, newRow.length - index);\r", "+\t\titems[rowIndex] = newRow;\r", "+\t}\r", "+\telse {\r", "+\t\tCoolItem[][] newRows = new CoolItem[items.length - 1][];\r", "+\t\tSystem.arraycopy(items, 0, newRows, 0, rowIndex);\r", "+\t\tSystem.arraycopy(items, rowIndex + 1, newRows, rowIndex, newRows.length - rowIndex);\r", "+\t\titems = newRows;\r", "-\t}\t\r", "+\t}\r", "-\t\tCoolItem first = (CoolItem) row.elementAt(0);\r", "+\t\tCoolItem first = items[rowIndex][0];\r", "+\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "-\t\tCoolItem previous = (CoolItem) row.elementAt(index - 1);\r", "+\t\tCoolItem previous = items[rowIndex][index - 1];\r", "-\t\tint width = bounds.width + item.getSize().x;\r", "+\t\tint width = bounds.width + itemBounds.width;\r"]}], "num": 60955}