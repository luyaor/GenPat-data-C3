{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "535dd129bb48b0b1c811ef90302a892f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818091e53a6e1a8131ae9ebb4a4405cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "07a46e8f1baf40ffa37f64002699ab20e003e2f6", "commitAfterChange": "2d43eab414d246f6d1d46d3c78a4ed9ad1289c94", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  public void setItemCount (int count)", "signatureAfterChange": "  public void setItemCount (int count)", "diff": ["+\tcheckItems (true);", "+\tcount = Math.max (0, count);", "+\tif (count == itemCount) return;", "-\tremoveAll ();", "-\titemCount = Math.max (0, count);", "-\titems = new TableItem [(itemCount + 3) / 4 * 4];", "-\tif ((style & SWT.VIRTUAL) == 0) {", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\titems [i] = new TableItem (this, SWT.NONE, i, true);", "-\t\t}", "-\t}", "-", "-\t/*", "-\t* Feature in the Mac. When AddDataBrowserItems() is used", "-\t* to add items, item notification callbacks are issued with", "-\t* the message kDataBrowserItemAdded.  When many items are", "-\t* added, this is slow.  The fix is to temporarily remove", "-\t* the item notification callback.", "-\t*/", "-\tDataBrowserCallbacks callbacks = new DataBrowserCallbacks ();", "+    int[] top = new int [1], left = new int [1];", "+    OS.GetDataBrowserScrollPosition (handle, top, left);", "+    DataBrowserCallbacks callbacks = new DataBrowserCallbacks ();", "+\tif (count < itemCount) {", "+\t\tint index = count;", "+\t\twhile (index < itemCount) {", "+\t\t\tint [] id = new int [] {index + 1};", "+\t\t\tif (OS.RemoveDataBrowserItems (handle, OS.kDataBrowserNoItem, id.length, id, 0) != OS.noErr) {", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tTableItem item = items [index];", "+\t\t\tif (item != null) item.releaseResources ();", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index < itemCount) error (SWT.ERROR_ITEM_NOT_REMOVED);", "+\t}", "+\tTableItem [] newItems = new TableItem [(count + 3) / 4 * 4];", "+\tSystem.arraycopy (items, 0, newItems, 0, Math.min (count, itemCount));", "+\titems = newItems;", "+\tif ((style & SWT.VIRTUAL) == 0) {", "+\t\tfor (int i=count; i<itemCount; i++) {", "+\t\t\titems [i] = new TableItem (this, SWT.NONE, i, false);", "+\t\t}", "+\t}", "+\titemCount = count;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1d58d0ca7549d28c6b28ba5a1b41a7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\tint [] theRoot = new int [1];", "-\t\t\tOS.GetRootControl (theWindow [0], theRoot);", "-\t\t\tint [] theControl = new int [1];", "-\t\t\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "-\t\t\twhile (theControl [0] != 0 && !OS.IsControlEnabled (theControl [0])) {\t\t\t\t", "-\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "-\t\t\t}", "-\t\t\tWidget widget = null;", "-\t\t\tboolean consume = false;", "-\t\t\tif (theControl [0] == 0) theControl [0] = theRoot [0];", "-\t\t\tdo {", "-\t\t\t\twidget = getWidget (theControl [0]);", "-\t\t\t\tif (widget != null) {", "-\t\t\t\t\tif (widget.isEnabled ()) break;", "-\t\t\t\t\tconsume = true;", "+\t\t\tif (OS.HIVIEW) {", "+\t\t\t\tint [] buffer = new int [1];", "+\t\t\t\tOS.HIViewGetViewForMouseEvent (OS.HIViewGetRoot (theWindow [0]), theEvent, buffer);", "+\t\t\t\tint view = buffer [0];", "+\t\t\t\twhile (view != 0 && !OS.IsControlEnabled (view)) {\t", "+\t\t\t\t\tview = OS.HIViewGetSuperview (view);", "-\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "-\t\t\t} while (theControl [0] != 0);", "-\t\t\tif (theControl [0] == 0) widget = getWidget (theRoot [0]);", "-\t\t\tif (widget != null) {", "-\t\t\t\tif (widget.contains ((int) inPoint.x, (int) inPoint.y)) {", "-\t\t\t\t\tint result = userData != 0 ? widget.mouseProc (nextHandler, theEvent, userData) : OS.eventNotHandledErr;", "-\t\t\t\t\treturn consume ? OS.noErr : result;", "+\t\t\t\tWidget widget = null;", "+\t\t\t\tboolean consume = false;", "+\t\t\t\tdo {", "+\t\t\t\t\twidget = getWidget (view);", "+\t\t\t\t\tif (widget != null) {", "+\t\t\t\t\t\tif (widget.isEnabled ()) break;", "+\t\t\t\t\t\tconsume = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tview = OS.HIViewGetSuperview (view);", "+\t\t\t\t} while (view != 0);", "+\t\t\t\tif (widget != null) {", "+\t\t\t\t\tif (widget.contains ((int) inPoint.x, (int) inPoint.y)) {", "+\t\t\t\t\t\tint result = userData != 0 ? widget.mouseProc (nextHandler, theEvent, userData) : OS.eventNotHandledErr;", "+\t\t\t\t\t\treturn consume ? OS.noErr : result;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint [] theRoot = new int [1];", "+\t\t\t\tOS.GetRootControl (theWindow [0], theRoot);", "+\t\t\t\tint [] theControl = new int [1];", "+\t\t\t\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "+\t\t\t\twhile (theControl [0] != 0 && !OS.IsControlEnabled (theControl [0])) {\t\t\t\t", "+\t\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t\t\t\t}", "+\t\t\t\tWidget widget = null;", "+\t\t\t\tboolean consume = false;", "+\t\t\t\tif (theControl [0] == 0) theControl [0] = theRoot [0];", "+\t\t\t\tdo {", "+\t\t\t\t\twidget = getWidget (theControl [0]);", "+\t\t\t\t\tif (widget != null) {", "+\t\t\t\t\t\tif (widget.isEnabled ()) break;", "+\t\t\t\t\t\tconsume = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t\t\t\t} while (theControl [0] != 0);", "+\t\t\t\tif (theControl [0] == 0) widget = getWidget (theRoot [0]);", "+\t\t\t\tif (widget != null) {", "+\t\t\t\t\tif (widget.contains ((int) inPoint.x, (int) inPoint.y)) {", "+\t\t\t\t\t\tint result = userData != 0 ? widget.mouseProc (nextHandler, theEvent, userData) : OS.eventNotHandledErr;", "+\t\t\t\t\t\treturn consume ? OS.noErr : result;", "+\t\t\t\t\t}"]}], "num": 18731}