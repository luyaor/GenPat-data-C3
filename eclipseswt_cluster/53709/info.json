{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d64f522368ebdfd3c59e32757ebbe873", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0200e776c72cefad9e486f986aa5f17c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "5fe1dac38bbaf436586a9cb7186584e15e9a84a3", "commitAfterChange": "aa4a6dbde79dfa01a598a4091801c6351b8adce7", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 152, "signatureBeforeChange": " int xFocusIn ()", "signatureAfterChange": " int xFocusIn (XFocusChangeEvent xEvent)", "diff": ["-int xFocusIn () {", "-\tif (!hasIMSupport()) {", "-\t\tshort [] point = getIMCaretPos ();", "-\t\tint ptr = OS.XtMalloc (4);", "-\t\tOS.memmove (ptr, point, 4);", "-\t\t/*", "-\t\t* Bug in Motif. On Linux Japanese only, XmImSetFocusValues() causes", "-\t\t* a GP when the XmNfontList resources does not containt a FontSet.", "-\t\t* The fix is to call XmImSetValues() to set the values and then call", "-\t\t* XmImSetFocusValues() with no parameters to set the IME focus.", "-\t\t*/", "-\t\tint[] argList = {", "-//\t\t\tOS.XmNforeground, getForegroundPixel(),", "-//\t\t\tOS.XmNbackground, getBackgroundPixel(),", "-\t\t\tOS.XmNspotLocation, ptr,", "-\t\t\tOS.XmNfontList, font.handle,", "-\t\t};", "-\t\tint focusHandle = focusHandle ();", "-\t\tOS.XmImSetValues (focusHandle, argList, argList.length / 2);", "+int xFocusIn (XFocusChangeEvent xEvent) {", "+\t/*", "+\t* Bug in Motif.  For some reason, when the widget font is", "+\t* not the default font and the widget loses focus, the", "+\t* X input method segment faults.  A BadFont (invalid font", "+\t* parameter) error is printed.  This problem also happens", "+\t* to XmText and XmTextField.  The fix is to change the", "+\t* X input method font back to the default font when the", "+\t* widget loses focus and restore it when the widget gets", "+\t* focus.", "+\t*/", "+\tupdateIM ();", "+\tif (!hasIMSupport ()) {", "+\t\tint focusHandle = OS.XtWindowToWidget (xEvent.display, xEvent.window);", "-\t\tif (ptr != 0) OS.XtFree (ptr);", "-\t}", "+\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fe12ed0d5547acb8cf77a911f173d33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0bbeaceec2403973574dd6a4c787fc264d387814", "commitAfterChange": "88507a814e7c4ebfe04fa5149a93910dae5554fe", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "\r void showToolTip (int handle, String toolTipText)", "signatureAfterChange": "\r void showToolTip (int handle, String toolTipText)", "diff": ["-\tif (toolTipText == null || toolTipText.length() == 0 || toolTipHandle != 0) {\r", "+\tif (toolTipText == null || toolTipText.length () == 0 || toolTipHandle != 0) {\r", "-\t/* Create the tooltip widgets */\t\r", "+\t/* Create the shell and tool tip widget */\r", "-\ttoolTipHandle = OS.XmCreateLabel(shellHandle, null, null, 0);\r", "-\t\r", "-\t/* Set the tooltip foreground and background */\r", "-\tColor infoForeground = getSystemColor(SWT.COLOR_INFO_FOREGROUND);\r", "-\tColor infoBackground = getSystemColor(SWT.COLOR_INFO_BACKGROUND);\r", "-\tint foregroundPixel = (infoForeground == null) ? defaultForeground : infoForeground.handle.pixel;\r", "-\tint backgroundPixel = (infoBackground == null) ? defaultBackground : infoBackground.handle.pixel;\r", "-\tint [] argList2 = {OS.XmNforeground, foregroundPixel, OS.XmNbackground, backgroundPixel};\r", "-\tOS.XtSetValues (toolTipHandle, argList2, argList2.length / 2);\r", "-\tOS.XtManageChild (toolTipHandle);\t\t\r", "-\t\r", "-\t/* Set the tooltip label string */\r", "+\tColor infoForeground = getSystemColor (SWT.COLOR_INFO_FOREGROUND);\r", "+\tColor infoBackground = getSystemColor (SWT.COLOR_INFO_BACKGROUND);\r", "+\tint foregroundPixel = infoForeground.handle.pixel;\r", "+\tint backgroundPixel = infoBackground.handle.pixel;\r", "-\tint xmString = OS.XmStringParseText (\r", "-\t\tbuffer,\r", "-\t\t0,\r", "-\t\tOS.XmFONTLIST_DEFAULT_TAG, \r", "-\t\tOS.XmCHARSET_TEXT, \r", "-\t\tnull,\r", "-\t\t0,\r", "-\t\t0);\r", "-\tint [] argList3 = {OS.XmNlabelString, xmString};\r", "-\tOS.XtSetValues (toolTipHandle, argList3, argList3.length / 2);\r", "-\tif (xmString != 0) OS.XmStringFree (xmString);\t\r", "+\tint [] argList2 = {\r", "+\t\tOS.XmNforeground, foregroundPixel, \r", "+\t\tOS.XmNbackground, backgroundPixel,\r", "+\t\tOS.XmNalignment, OS.XmALIGNMENT_BEGINNING,\r", "+\t};\r", "+\ttoolTipHandle = OS.XmCreateLabel (shellHandle, buffer, argList2, argList2.length / 2);\r", "+\tOS.XtManageChild (toolTipHandle);\t\r", "-\t* Ensure that the tooltip is on the screen.\r", "+\t* Ensure that the tool tip is on the screen.\r"]}], "num": 53709}