{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb4b3778773f192febc2ea50b12ae1ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "828ec8759b01601f1a9825fc94a1de76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "aa5a69fe81e993c5bb9fcff4c9a425715ad470cd", "commitAfterChange": "bf9b442200602eaa6f44a276dfab033f09afe62d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 97, "signatureBeforeChange": "  int textCellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  int textCellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "diff": ["-", "-int /*long*/ textCellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "-\tif (cell == ignoreTextCell) return 0;", "-\tint modelIndex = -1;", "-\tboolean customDraw = false;", "-\tif (columnCount == 0) {", "-\t\tmodelIndex = Table.FIRST_COLUMN;", "-\t\tcustomDraw = firstCustomDraw;", "-\t} else {", "-\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\tif (columns [i] != null && columns [i].handle == tree_column) {", "-\t\t\t\tmodelIndex = columns [i].modelIndex;", "-\t\t\t\tcustomDraw = columns [i].customDraw;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (modelIndex == -1) return 0;", "-\tboolean setData = setCellData (tree_model, iter);", "-\tint /*long*/ [] ptr = new int /*long*/ [1];", "-\tif (setData) {", "-\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 1, ptr, -1); //text", "-\t\tif (ptr [0] != 0) {", "-\t\t\tOS.g_object_set(cell, OS.text, ptr[0], 0);", "-\t\t\tOS.g_free (ptr[0]);", "-\t\t}", "-\t\tptr = new int /*long*/ [1];", "-\t}", "-\tif (customDraw) {", "-\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 2, ptr, -1); //foreground-gdk", "-\t\tif (ptr [0] != 0) {", "-\t\t\tOS.g_object_set(cell, OS.foreground_gdk, ptr[0], 0);", "-\t\t}", "-\t\tptr = new int /*long*/ [1];", "-\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 3, ptr, -1); //background-gdk", "-\t\tif (ptr [0] != 0) {", "-\t\t\tOS.g_object_set(cell, OS.background_gdk, ptr[0], 0);", "-\t\t}", "-\t\tptr = new int /*long*/ [1];", "-\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 4, ptr, -1); //font-desc", "-\t\tif (ptr [0] != 0) {", "-\t\t\tOS.g_object_set(cell, OS.font_desc, ptr[0], 0);", "-\t\t}", "-\t}", "-\tif (setData) {", "-\t\tignoreTextCell = cell;", "-\t\tsetScrollWidth (tree_column, iter);", "-\t\tignoreTextCell = 0;", "-\t}", "-\treturn 0;", "-}", "+int /*long*/ textCellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "+\tif (cell == ignoreTextCell) return 0;", "+\tint modelIndex = -1;", "+\tboolean customDraw = false;", "+\tif (columnCount == 0) {", "+\t\tmodelIndex = Table.FIRST_COLUMN;", "+\t\tcustomDraw = firstCustomDraw;", "+\t} else {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tif (columns [i] != null && columns [i].handle == tree_column) {", "+\t\t\t\tmodelIndex = columns [i].modelIndex;", "+\t\t\t\tcustomDraw = columns [i].customDraw;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (modelIndex == -1) return 0;", "+\tboolean setData = setCellData (tree_model, iter);", "+\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\tif (setData) {", "+\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_TEXT, ptr, -1); ", "+\t\tif (ptr [0] != 0) {", "+\t\t\tOS.g_object_set(cell, OS.text, ptr[0], 0);", "+\t\t\tOS.g_free (ptr[0]);", "+\t\t}", "+\t\tptr = new int /*long*/ [1];", "+\t}", "+\tif (customDraw) {", "+\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FOREGROUND, ptr, -1);", "+\t\tif (ptr [0] != 0) {", "+\t\t\tOS.g_object_set(cell, OS.foreground_gdk, ptr[0], 0);", "+\t\t}", "+\t\t/*", "+\t\t * Bug on GTK. Gtk renders the background of the text renderer on top of the pixbuf renderer.", "+\t\t * This only happens in version 2.2.1 and earlier. The fix is not to set the background.   ", "+\t\t */", "+\t\tif (OS.GTK_VERSION > OS.VERSION (2, 2, 1)) {", "+\t\t\tptr = new int /*long*/ [1];", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_BACKGROUND, ptr, -1);", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set(cell, OS.background_gdk, ptr[0], 0);", "+\t\t\t}", "+\t\t}", "+\t\tptr = new int /*long*/ [1];", "+\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FONT, ptr, -1);", "+\t\tif (ptr [0] != 0) {", "+\t\t\tOS.g_object_set(cell, OS.font_desc, ptr[0], 0);", "+\t\t}", "+\t}", "+\tif (setData) {", "+\t\tignoreTextCell = cell;", "+\t\tsetScrollWidth (tree_column, iter);", "+\t\tignoreTextCell = 0;", "+\t}", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46fe1856af0b0fecb3242df9ef56536", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "aa5a69fe81e993c5bb9fcff4c9a425715ad470cd", "commitAfterChange": "bf9b442200602eaa6f44a276dfab033f09afe62d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 64, "signatureBeforeChange": " int pixbufCellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  int pixbufCellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "diff": ["-}", "-int /*long*/ pixbufCellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "-\tif (cell == ignorePixbufCell) return 0;", "-\tint modelIndex = -1;", "-\tboolean customDraw = false;", "-\tif (columnCount == 0) {", "-\t\tmodelIndex = Table.FIRST_COLUMN;", "-\t\tcustomDraw = firstCustomDraw;", "-\t} else {", "-\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\tif (columns [i] != null && columns [i].handle == tree_column) {", "-\t\t\t\tmodelIndex = columns [i].modelIndex;", "-\t\t\t\tcustomDraw = columns [i].customDraw;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (modelIndex == -1) return 0;", "-\tboolean setData = setCellData (tree_model, iter);", "-\tint /*long*/ [] ptr = new int /*long*/ [1];", "-\tif (setData) {", "-\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex, ptr, -1); //pixbuf", "-\t\tOS.g_object_set(cell, OS.pixbuf, ptr[0], 0);", "-\t\tptr = new int /*long*/ [1];", "-\t}", "-\tif (customDraw) {", "-\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 2, 0)) {", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + 3, ptr, -1); //cell-background-gdk", "-\t\t\tif (ptr [0] != 0) {", "-\t\t\t\tOS.g_object_set(cell, OS.cell_background_gdk, ptr[0], 0);", "-\t\t\t}", "-\t\t}", "-\t}", "-\tif (setData) {", "-\t\tignorePixbufCell = cell;", "-\t\tsetScrollWidth (tree_column, iter);", "-\t\tignorePixbufCell = 0;", "-\t}", "-\treturn 0;", "+int /*long*/ pixbufCellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "+\tif (cell == ignorePixbufCell) return 0;", "+\tint modelIndex = -1;", "+\tboolean customDraw = false;", "+\tif (columnCount == 0) {", "+\t\tmodelIndex = Table.FIRST_COLUMN;", "+\t\tcustomDraw = firstCustomDraw;", "+\t} else {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tif (columns [i] != null && columns [i].handle == tree_column) {", "+\t\t\t\tmodelIndex = columns [i].modelIndex;", "+\t\t\t\tcustomDraw = columns [i].customDraw;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (modelIndex == -1) return 0;", "+\tboolean setData = setCellData (tree_model, iter);", "+\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\tif (setData) {", "+\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_PIXBUF, ptr, -1);", "+\t\tOS.g_object_set(cell, OS.pixbuf, ptr[0], 0);", "+\t\tptr = new int /*long*/ [1];", "+\t}", "+\tif (customDraw) {", "+\t\t/*", "+\t\t* Bug on GTK. Gtk renders the background on top of the checkbox and pixbuf.", "+\t\t* This only happens in version 2.2.1 and earlier. The fix is not to set the background.   ", "+\t\t*/", "+\t\tif (OS.GTK_VERSION > OS.VERSION (2, 2, 1)) {", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_BACKGROUND, ptr, -1);", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set(cell, OS.cell_background_gdk, ptr[0], 0);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (setData) {", "+\t\tignorePixbufCell = cell;", "+\t\tsetScrollWidth (tree_column, iter);", "+\t\tignorePixbufCell = 0;", "+\t}", "+\treturn 0;", "+}"]}], "num": 35929}