{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65a8cd57d5d79e09d48c3e17bdf7483e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e489abe3e2b8ac0a4e68c2882d8904b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "02f95eacfdded39651c1ac1ac9f4a4858e930540", "commitAfterChange": "1fd9631de19294ee7e312bac1eaea0ddeef51ecd", "methodNumberBeforeChange": 270, "methodNumberAfterChange": 281, "signatureBeforeChange": " public void setLineBackground(int startLine, int lineCount, Color background)", "signatureAfterChange": " public void setLineBackground(int startLine, int lineCount, Color background)", "diff": ["-\tcheckWidget();", "-\t", "-\t// this API can not be used if the client is providing the line background", "-\tif (userLineBackground) {", "-\t\treturn;", "-\t}", "+\tcheckWidget();\t", "+\tif (userLineBackground) return;\t", "+\t", "-\t// do nothing if redraw range is completely invisible\t", "-\tint partialBottomIndex = getPartialBottomIndex();", "-\tif (startLine > partialBottomIndex || startLine + lineCount - 1 < topIndex) {", "-\t\treturn;", "-\t}", "-\t// only redraw visible lines", "-\tif (startLine < topIndex) {", "-\t\tlineCount -= topIndex - startLine;", "-\t\tstartLine = topIndex;", "-\t}", "-\tif (startLine + lineCount - 1 > partialBottomIndex) {", "-\t\tlineCount = partialBottomIndex - startLine + 1;", "-\t}", "-\tstartLine -= topIndex;", "-\tint redrawTop = getLinePixel(startLine);", "-\tint redrawBottom = getLinePixel(startLine + lineCount);", "-\tint redrawWidth = getClientArea().width - leftMargin - rightMargin; ", "-\tsuper.redraw(leftMargin, redrawTop, redrawWidth, redrawBottom - redrawTop, true);", "+\tredrawLines(startLine, lineCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5cd8c485b216a982d3203dde09ea22e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 277, "signatureBeforeChange": " public void setLineBackground(int startLine, int lineCount, Color background)", "signatureAfterChange": " public void setLineBackground(int startLine, int lineCount, Color background)", "diff": ["-\tcheckWidget();", "-\tint partialBottomIndex = getPartialBottomIndex();", "-\t", "-\t// this API can not be used if the client is providing the line background", "-\tif (userLineBackground) {", "-\t\treturn;", "-\t}", "-\tif (startLine < 0 || startLine + lineCount > logicalContent.getLineCount()) {", "+\tcheckWidget();\t", "+\tif (isListening(LineGetBackground)) return;", "+\tif (startLine < 0 || startLine + lineCount > content.getLineCount()) {", "-\t} ", "-\tdefaultLineStyler.setLineBackground(startLine, lineCount, background);", "-\t// do nothing if redraw range is completely invisible\t", "-\tif (startLine > partialBottomIndex || startLine + lineCount - 1 < topIndex) {", "-\t\treturn;", "-\t// only redraw visible lines", "-\tif (startLine < topIndex) {", "-\t\tlineCount -= topIndex - startLine;", "-\t\tstartLine = topIndex;", "+\t", "+\trenderer.setLineBackground(startLine, lineCount, background);", "+\tredrawLines(startLine, lineCount);", "+}", "-\tif (startLine + lineCount - 1 > partialBottomIndex) {", "-\t\tlineCount = partialBottomIndex - startLine + 1;", "-\tstartLine -= topIndex;", "-\tsuper.redraw(", "-\t\tleftMargin, startLine * lineHeight + topMargin, ", "-\t\tgetClientArea().width - leftMargin - rightMargin, lineCount * lineHeight, true);"]}], "num": 20940}