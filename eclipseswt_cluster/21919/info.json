{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2911b4b7be739a4830713ededbf009c2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7c2d049341c312974a977d2691602b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r private void initScrollButtons(Color foreground, Color background)", "signatureAfterChange": "\r private void initScrollBarImages()", "diff": ["-}\r", "-private void initScrollButtons(Color foreground, Color background) {\r", "-\r", "-\tscrollBar.setBackground(background);\r", "-\tDisplay display = getDisplay();\r", "-\tColor shadow = display.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);\r", "-\tif (arrowLeftImage != null) {\r", "-\t\tarrowLeftImage.dispose();\r", "-\t\tarrowLeftImage = null;\r", "+}\r", "+private void initScrollBarImages() {\r", "+\tif (arrowLeftImage != null) return;\r", "+\r", "+\ttry {\r", "+\t\tDisplay display = getDisplay();\r", "+\t\tImage image = new Image(display, CTabFolder.class.getResourceAsStream(\"leftDisabled.gif\"));\r", "+\t\tImageData source = image.getImageData();\r", "+\t\tImageData mask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowLeftDisabledImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"left.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowLeftImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"rightDisabled.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowRightDisabledImage = new Image(display, source, mask);\r", "+\t\r", "+\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"right.gif\"));\r", "+\t\tsource = image.getImageData();\r", "+\t\tmask = source.getTransparencyMask();\r", "+\t\timage.dispose();\r", "+\t\tarrowRightImage = new Image(display, source, mask);\r", "+\t} catch (Error e) {\r", "+\t\tif (arrowLeftDisabledImage != null){\r", "+\t\t\tarrowLeftDisabledImage.dispose();\r", "+\t\t\tarrowLeftDisabledImage = null;\r", "+\t\t}\r", "+\t\tif (arrowLeftImage != null){\r", "+\t\t\tarrowLeftImage.dispose();\r", "+\t\t\tarrowLeftImage = null;\r", "+\t\t}\r", "+\t\tif (arrowRightDisabledImage != null){\r", "+\t\t\tarrowRightDisabledImage.dispose();\r", "+\t\t\tarrowRightDisabledImage = null;\r", "+\t\t}\r", "+\t\tif (arrowRightImage != null){\r", "+\t\t\tarrowRightImage.dispose();\r", "+\t\t\tarrowRightImage = null;\r", "+\t\t}\r", "+\t\treturn;\r", "-\tif (arrowLeftDisabledImage != null) {\r", "-\t\tarrowLeftDisabledImage.dispose();\r", "-\t\tarrowLeftDisabledImage = null;\r", "-\t}\r", "-\tarrowLeftImage = drawArrowImage(foreground, background, true);\r", "-\tarrowLeftDisabledImage = drawArrowImage(shadow, background, true);\r", "-\tscrollLeft.setImage(arrowLeftImage);\r", "+\t\r", "-\tscrollLeft.setHotImage(arrowLeftImage);\r", "+\tscrollLeft.setImage(arrowLeftImage);\r", "-\tif (arrowRightImage != null) {\r", "-\t\tarrowRightImage.dispose();\r", "-\t\tarrowRightImage = null;\r", "-\t}\r", "-\tif (arrowRightDisabledImage != null) {\r", "-\t\tarrowRightDisabledImage.dispose();\r", "-\t\tarrowRightDisabledImage = null;\r", "-\t}\r", "-\tarrowRightImage = drawArrowImage(foreground, background, false);\t\t\r", "-\tarrowRightDisabledImage = drawArrowImage(shadow, background, false);\r", "-\tscrollRight.setImage(arrowRightImage);\r", "-\tscrollRight.setHotImage(arrowRightImage);\r", "+\tscrollRight.setImage(arrowRightImage);\r", "+\t\r", "+\tint height = getTabHeight();\r", "+\tPoint size = scrollBar.computeSize(SWT.DEFAULT, height);\r", "+\tscrollBar.setSize(size);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71864692e5b1382e59d9fa08419bda71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r private void initScrollBarImages()", "signatureAfterChange": "\r private void updateArrowBar()", "diff": ["-private void initScrollBarImages() {\r", "-\tif (arrowLeftImage != null) return;\r", "-\r", "-\ttry {\r", "-\t\tDisplay display = getDisplay();\r", "-\t\tImage image = new Image(display, CTabFolder.class.getResourceAsStream(\"leftDisabled.gif\"));\r", "-\t\tImageData source = image.getImageData();\r", "-\t\tImageData mask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tarrowLeftDisabledImage = new Image(display, source, mask);\r", "+private void updateArrowBar() {\r", "-\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"left.gif\"));\r", "-\t\tsource = image.getImageData();\r", "-\t\tmask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tarrowLeftImage = new Image(display, source, mask);\r", "+\tint imageHeight = getTabHeight() - CTabItem.TOP_MARGIN - CTabItem.BOTTOM_MARGIN - 6;\r", "+\tif (imageHeight < 4) return;\r", "-\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"rightDisabled.gif\"));\r", "-\t\tsource = image.getImageData();\r", "-\t\tmask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tarrowRightDisabledImage = new Image(display, source, mask);\r", "+\tif (arrowLeftImage != null && arrowLeftImage.getBounds().height == imageHeight) return;\t\r", "-\t\timage = new Image(display, CTabFolder.class.getResourceAsStream(\"right.gif\"));\r", "-\t\tsource = image.getImageData();\r", "-\t\tmask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tarrowRightImage = new Image(display, source, mask);\r", "-\t} catch (Error e) {\r", "-\t\tif (arrowLeftDisabledImage != null){\r", "-\t\t\tarrowLeftDisabledImage.dispose();\r", "-\t\t\tarrowLeftDisabledImage = null;\r", "-\t\t}\r", "-\t\tif (arrowLeftImage != null){\r", "-\t\t\tarrowLeftImage.dispose();\r", "-\t\t\tarrowLeftImage = null;\r", "-\t\t}\r", "-\t\tif (arrowRightDisabledImage != null){\r", "-\t\t\tarrowRightDisabledImage.dispose();\r", "-\t\t\tarrowRightDisabledImage = null;\r", "-\t\t}\r", "-\t\tif (arrowRightImage != null){\r", "-\t\t\tarrowRightImage.dispose();\r", "-\t\t\tarrowRightImage = null;\r", "-\t\t}\r", "-\t\treturn;\r", "-\t}\r", "+\tif (arrowBar != null) arrowBar.dispose();\r", "+\tarrowBar = null;\r", "+\tif (arrowLeftImage != null) arrowLeftImage.dispose();\r", "+\tif (arrowRightImage != null) arrowRightImage.dispose();\r", "-\tscrollLeft.setDisabledImage(arrowLeftDisabledImage);\r", "-\tscrollLeft.setImage(arrowLeftImage);\r", "+\tcreateArrowBar();\r", "+\tToolItem[] items = arrowBar.getItems();\r", "+\tToolItem left  = items[0];\r", "+\tToolItem right = items[1];\r", "-\tscrollRight.setDisabledImage(arrowRightDisabledImage);\r", "-\tscrollRight.setImage(arrowRightImage);\r", "+\tDisplay display = getDisplay();\r", "+\tColor foreground = getForeground();\r", "+\tColor black = display.getSystemColor(SWT.COLOR_BLACK);\r", "+\tColor background = getBackground();\r", "-\tint height = getTabHeight();\r", "-\tPoint size = scrollBar.computeSize(SWT.DEFAULT, height);\r", "-\tscrollBar.setSize(size);\r", "+\tPaletteData palette = new PaletteData(new RGB[]{foreground.getRGB(), background.getRGB(), black.getRGB()});\r", "+\tImageData imageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\timageData.transparentPixel = 1;\r", "+\tarrowLeftImage = new Image(display, imageData);\r", "+\tGC gc = new GC(arrowLeftImage);\r", "+\tgc.setBackground(background);\r", "+\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.setBackground(black);\r", "+\tint indent = 0;\r", "+\tint midpoint = (imageHeight - 2*indent)/2;\r", "+\tint height = 2 * midpoint;\r", "+\tint[] pointArr = new int[] {indent, indent + midpoint, \r", "+\t\t                        indent + height, indent, \r", "+\t\t                        indent + height,  indent + height};\r", "+\tgc.fillPolygon(pointArr);\r", "+\tgc.dispose();\r", "+\t\r", "+\tpalette = new PaletteData(new RGB[]{foreground.getRGB(), background.getRGB(), black.getRGB()});\r", "+\timageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\timageData.transparentPixel = 1;\r", "+\tarrowRightImage = new Image(display, imageData);\r", "+\tgc = new GC(arrowRightImage);\r", "+\tgc.setBackground(background);\r", "+\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.setBackground(black);\r", "+\tpointArr = new int[] {indent, indent, \r", "+\t\t                  indent, indent + height,\r", "+\t\t                  indent + height, indent + midpoint};\r", "+\tgc.fillPolygon(pointArr);\r", "+\tgc.dispose();\r", "+\t\r", "+\tleft.setImage(arrowLeftImage);\r", "+\tright.setImage(arrowRightImage);\r"]}], "num": 21919}