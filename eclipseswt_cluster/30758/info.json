{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34fda077ecbef228fd9cc3c06eaf6875", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d8b9d421a1cafdbf4d9a3af8f1d4294", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "dfe0337472c26c7f5ae9d02a3639e682bdd08b7c", "commitAfterChange": "13accbd457fb934d9defebfd835c2c3e550716c1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void destroyItem (CoolItem item)", "signatureAfterChange": "\r \r void destroyItem (CoolItem item)", "diff": ["-\t\t\t * Feature in Windows.  If the last item in a row is given its ideal size, it will be \r", "-\t\t\t * placed at the far right hand edge of the coolbar.  It is preferred that the last item \r", "-\t\t\t * appear next to the second last item.  The fix is to size the last item of each row \r", "-\t\t\t * so that it occupies all the available space to the right in the row.\r", "-\t\t\t */\r", "+\t\t\t* Feature in Windows.  If the last item in a row is\r", "+\t\t\t* given its ideal size, it will be placed at the far\r", "+\t\t\t* right hand edge of the coolbar.  It is preferred\r", "+\t\t\t* that the last item appear next to the second last\r", "+\t\t\t* item.  The fix is to size the last item of each row \r", "+\t\t\t* so that it occupies all the available space to the\r", "+\t\t\t* right in the row.\r", "+\t\t\t*/\r", "-\tboolean wasWrap = item.getWrap ();\r", "+\r", "+\t/*\r", "+\t* When a wrapped item is being deleted, make the next\r", "+\t* item in the row wrapped in order to preserve the row.\r", "+\t* In order to avoid an unnecessary layout, temporarily\r", "+\t* ignore WM_SIZE.  If the next item is wrappedm then a\r", "+\t* row will be deleted and the WM_SIZE is necessary.\r", "+\t*/\r", "+\tCoolItem nextItem = null;\r", "+\tif (item.getWrap ()) {\r", "+\t\tif (index + 1 < count) {\r", "+\t\t\tnextItem = getItem (index + 1);\r", "+\t\t\tignoreResize = !nextItem.getWrap ();\r", "+\t\t}\r", "+\t}\r", "-\tif (wasWrap) {\r", "-\t\tif (0 <= index && index < getItemCount ()) {\r", "-\t\t\tgetItem (index).setWrap (true);\r", "-\t\t}\r", "+\tif (ignoreResize) {\r", "+\t\tnextItem.setWrap (true);\r", "+\t\tignoreResize = false;\r", "+\t\r", "+\t/* Restore the visible state tof the control */\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0723ddbc67bf9c3d0014800f7d69e93c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fffdf588965e2c4054fde7b2fb3881870e469b94", "commitAfterChange": "9824161b8bfbe498b863501923846b1fa3884627", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void checkGC (int mask)", "signatureAfterChange": "  void checkGC (int mask)", "diff": ["-\t\tfloat sx = 1, sy = 1;", "+\t\tNSSize size = new NSSize();", "+\t\tsize.width = size.height = 1;", "-\t\t\tNSAffineTransformStruct struct = data.transform.transformStruct();", "-\t\t\tsx = struct.m11;", "-\t\t\tsy = struct.m22;", "+\t\t\tsize = data.transform.transformSize(size);", "-\t\tfloat scaling = sx;", "+\t\tfloat scaling = size.width;", "-\t\tscaling = sy;", "+\t\tscaling = size.height;"]}], "num": 30758}