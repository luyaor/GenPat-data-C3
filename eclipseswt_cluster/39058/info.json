{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b75c283724773c03f22cab82fbfa2f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6bb9ee179662e09d7b3f7e4b466845", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ad7faf2331d33c7f68735fad69a11baef3deb362", "commitAfterChange": "169f4f3eed024153ecdf584bb52e3a3a80efd99a", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int kEventControlDraw (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "diff": ["+void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent) {", "+\tif (control != handle) return;", "+\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) return;", "+", "+\t/* Retrieve the damage rect */", "+\tRect rect = new Rect ();", "+\tOS.GetRegionBounds (visibleRgn, rect);", "+\tRect bounds = new Rect ();", "+\tOS.GetControlBounds (handle, bounds);", "+\tOS.OffsetRect (rect, (short) -bounds.left, (short) -bounds.top);", "+", "+\t/* Send paint event */", "+\tGCData data = new GCData ();", "+\tdata.paintEvent = theEvent;", "+\tdata.visibleRgn = visibleRgn;", "+\tGC gc = GC.carbon_new (this, data);", "+\tEvent event = new Event ();", "+\tevent.gc = gc;", "+\tevent.x = rect.left;", "+\tevent.y = rect.top;", "+\tevent.width = rect.right - rect.left;", "+\tevent.height = rect.bottom - rect.top;", "+\tsendEvent (SWT.Paint, event);", "+\tevent.gc = null;", "+\tgc.dispose ();", "+}", "-", "-int kEventControlDraw (int nextHandler, int theEvent, int userData) {", "-\tint result = super.kEventControlDraw (nextHandler, theEvent, userData);", "-\tif (result == -1) return result;", "-\tint [] theControl = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeControlRef, null, 4, null, theControl);", "-\tif (theControl [0] != handle) return result;", "-\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) return result;", "-", "-\t/* Retrieve the damage region */", "-\tint [] region = new int [1];\t", "-\tOS.GetEventParameter (theEvent, OS.kEventParamRgnHandle, OS.typeQDRgnHandle, null, 4, null, region);", "-\tRect bounds = new Rect ();", "-\tOS.GetRegionBounds (region [0], bounds);", "-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (handle, rect);", "-\tif (!OS.SectRect (rect, bounds, bounds)) return result;", "-\tOS.OffsetRect (bounds, (short) -rect.left, (short) -rect.top);", "-", "-\tGCData data = new GCData ();", "-\tdata.paintEvent = theEvent;", "-\tGC gc = GC.carbon_new (this, data);", "-\t", "-\t/* Send the paint event */", "-\tEvent event = new Event ();", "-\tevent.gc = gc;", "-\tevent.x = bounds.left;", "-\tevent.y = bounds.top;", "-\tevent.width = bounds.right - bounds.left;", "-\tevent.height = bounds.bottom - bounds.top;", "-//\tgc.setClipping (Region.carbon_new (region [0]));", "-\tsendEvent (SWT.Paint, event);", "-\tevent.gc = null;", "-\tgc.dispose ();", "-", "-\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe16e2b47bf3dea36346da8e9651e50d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "d7427cebf50028bab5e6b28bb9e84910376870e1", "commitAfterChange": "e4b83a8710a5eda1a45854714318719d5d1c765c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void configure ()", "signatureAfterChange": "  void configure ()", "diff": ["-\tint x = this.x;", "-\tint y = this.y;", "-\tif (item != null) {", "-\t\tOS.gtk_widget_realize (item.handle);", "-\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (item.handle);", "-\t\tint [] px = new int [1], py = new int [1];", "-\t\tOS.gdk_window_get_origin (window, px, py);", "-\t\tx = px [0];", "-\t\ty = py [0];", "-\t}", "-\tif (x == -1 || y == -1) {", "-\t\tint [] px = new int [1], py = new int [1];", "-\t\tOS.gdk_window_get_pointer (0, px, py, null);", "-\t\tx = px [0];", "-\t\ty = py [0];", "-\t}", "-\tPoint size = getSize (dest.width / 4);", "-\tint w = size.x;", "-\tint h = size.y;", "-\tOS.gtk_window_resize (handle, w, h+TIP_HEIGHT);", "+\tPoint point = getSize (dest.width / 4);", "+\tint w = point.x;", "+\tint h = point.y;", "+\tpoint = getLocation ();", "+\tint x = point.x;", "+\tint y = point.y;", "+\tOS.gtk_window_resize (handle, w, h + TIP_HEIGHT);", "-\tspikeAbove = dest.height >= y + size.y + TIP_HEIGHT;", "-\tif (dest.width >= x + size.x) {", "-\t\tif (dest.height >= y + size.y + TIP_HEIGHT) {", "+\tspikeAbove = dest.height >= y + h + TIP_HEIGHT;", "+\tif (dest.width >= x + w) {", "+\t\tif (dest.height >= y + h + TIP_HEIGHT) {", "-\t\t\tOS.gtk_window_move (handle, Math.max(0, x - 17), y - size.y - TIP_HEIGHT);", "+\t\t\tOS.gtk_window_move (handle, Math.max(0, x - 17), y - h - TIP_HEIGHT);", "-\t\tif (dest.height >= y + size.y + TIP_HEIGHT) {", "+\t\tif (dest.height >= y + h + TIP_HEIGHT) {", "-\t\t\tOS.gtk_window_move (handle, Math.min(dest.width - size.x, x - size.x + 17), y);", "+\t\t\tOS.gtk_window_move (handle, Math.min(dest.width - w, x - w + 17), y);", "-\t\t\tOS.gtk_window_move (handle, Math.min(dest.width - size.x, x - size.x + 17), y - size.y - TIP_HEIGHT);", "+\t\t\tOS.gtk_window_move (handle, Math.min(dest.width - w, x - w + 17), y - h - TIP_HEIGHT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f50d1514eebf085ebf4d07a3295557f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "49aa9231e1c8f59c67100fbdf7822f5ad15a6120", "commitAfterChange": "03fd026518f1614e4aee1ebac042bbdf8fe6682f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "signatureAfterChange": "  public boolean dragDetect (MouseEvent event)", "diff": ["+", "+public boolean dragDetect (MouseEvent event) {", "+\tcheckWidget ();", "+\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\treturn dragDetect (event.button, event.count, event.stateMask, event.x, event.y);", "+}"]}], "num": 39058}