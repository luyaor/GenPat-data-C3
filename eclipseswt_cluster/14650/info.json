{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49dcf86f43d4cac85a47601abfdf1f54", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459eb33ae30424c3b58df5cf42f0c0b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6a5289e12cc5f3cfb65b7d7ada5e0a13c5dce2cb", "commitAfterChange": "148a6e167cc83bf5eb877911514b7218031b3950", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["+\tif (registerFunctionsOnState != 0 && ((aStateFlags & registerFunctionsOnState) == registerFunctionsOnState)) {", "+\t\tregisterFunctionsOnState = 0;", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+\t}", "+", "+\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_IS_REQUEST | nsIWebProgressListener.STATE_START;", "+\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_TRANSFERRING;", "+", "+\t\t\t\t/*", "+\t\t\t\t* When content is being streamed to Mozilla this is the only place", "+\t\t\t\t* where registered functions can be re-installed such that they will", "+\t\t\t\t* be invokable at load time by JS contained in the stream.", "+\t\t\t\t*/", "+\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t}", "+", "-\t\t\t/* re-install registered functions */", "-\t\t\tEnumeration elements = functions.elements ();", "-\t\t\twhile (elements.hasMoreElements ()) {", "-\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "-\t\t\t\texecute (function.functionString);", "-\t\t\t}", "-", "+", "+\t\tregisterFunctionsOnState = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc4612f865b5e55cf8306124e24780f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "45ef21343f042c253c486e154386fddf347c970a", "commitAfterChange": "11ef00f2778c1377822b96c4e76dc2ae3ad98f53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t\t\t\t\t\t\t\t/* re-install registered functions iff needed */", "+\t\t\t\t\t\t\t\tIE ie = (IE)browser.webBrowser;", "+\t\t\t\t\t\t\t\tif (ie.installFunctionsOnDocumentComplete) {", "+\t\t\t\t\t\t\t\t\tie.installFunctionsOnDocumentComplete = false;", "+\t\t\t\t\t\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\t\t\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\t\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\t\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* When a Browser is opened in a new window, BrowserFunctions that are", "+\t\t\t\t\t\t\t* installed in it in the NavigateComplete2 callback are not retained", "+\t\t\t\t\t\t\t* through the loading of the page.  The workaround is to re-install", "+\t\t\t\t\t\t\t* the functions when DocumentComplete is received. ", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tbrowser.installFunctionsOnDocumentComplete = true;", "+"]}], "num": 14650}