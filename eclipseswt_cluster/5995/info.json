{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "958fef1358c6c7554753c10e125aafc8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "573607ab57af3b75128891c46dd6a91e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "40cf8e61803cf41d2571f4294437ef45df1d67c6", "commitAfterChange": "bf05ebbd123937748b9aa8d29899de8633f0c49d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  void setScrollWidth (TCHAR buffer, boolean grow)", "signatureAfterChange": "  void setScrollWidth (int scrollWidth)", "diff": ["+", "+void setScrollWidth (int scrollWidth) {", "+\tthis.scrollWidth = scrollWidth;", "+\tif ((style & SWT.SIMPLE) != 0) {", "+\t\tOS.SendMessage (handle, OS.CB_SETHORIZONTALEXTENT, scrollWidth, 0);", "+\t\treturn;", "+\t}", "+\tboolean scroll = false;", "+\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "+\tif (count > 3) {", "+\t\tint maxWidth = 0;", "+\t\tif (OS.WIN32_VERSION < OS.VERSION (4, 10)) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "+\t\t\tmaxWidth = (rect.right - rect.left) / 4;", "+\t\t} else {", "+\t\t\tint hmonitor = OS.MonitorFromWindow (handle, OS.MONITOR_DEFAULTTONEAREST);", "+\t\t\tMONITORINFO lpmi = new MONITORINFO ();", "+\t\t\tlpmi.cbSize = MONITORINFO.sizeof;", "+\t\t\tOS.GetMonitorInfo (hmonitor, lpmi);", "+\t\t\tmaxWidth = (lpmi.rcWork_right - lpmi.rcWork_left) / 4;", "+\t\t}", "+\t\tscroll = scrollWidth > maxWidth;", "+\t}", "+\tif (scroll) {", "+\t\tOS.SendMessage (handle, OS.CB_SETDROPPEDWIDTH, 0, 0);", "+\t\tOS.SendMessage (handle, OS.CB_SETHORIZONTALEXTENT, scrollWidth, 0);", "+\t} else {", "+\t\tscrollWidth += OS.GetSystemMetrics (OS.SM_CYHSCROLL);", "+\t\tOS.SendMessage (handle, OS.CB_SETDROPPEDWIDTH, scrollWidth, 0);", "+\t\tOS.SendMessage (handle, OS.CB_SETHORIZONTALEXTENT, 0, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda72447b8d03d075d00263e08dff208", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void setItemCount (int count, int hItem, TreeItem parent)", "signatureAfterChange": "  void setItemCount (int count, int hParent, int hItem)", "diff": ["-void setItemCount (int count, int hItem, TreeItem parent) {", "+void setItemCount (int count, int hParent, int hItem) {", "+\tboolean redraw = false;", "+\tif (OS.SendMessage (handle, OS.TVM_GETCOUNT, 0, 0) == 0) {", "+\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\tif (redraw) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "+\t}", "+\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hItem);", "-\t\t\tTreeItem item = items [tvItem.lParam];", "-\t\t\tif (item != null && !item.isDisposed ()) item.dispose ();", "+\t\t\tTreeItem item = tvItem.lParam != -1 ? items [tvItem.lParam] : null;", "+\t\t\tif (item != null && !item.isDisposed ()) {", "+\t\t\t\titem.dispose ();", "+\t\t\t} else {", "+\t\t\t\treleaseItem (tvItem.hItem, tvItem, false);", "+\t\t\t\tdestroyItem (null, tvItem.hItem);", "+\t\t\t}", "-\t\ttvItem.hItem = hItem;", "-\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\tTreeItem item = items [tvItem.lParam];", "-\t\tif (item != null && !item.isDisposed ()) item.dispose ();", "-\tshrink = true;", "-\tint extra = Math.max (4, (count + 3) / 4 * 4);", "-\tTreeItem [] newItems =  new TreeItem [items.length + extra];", "-\tSystem.arraycopy (items, 0, newItems, 0, Math.min (count, itemCount));", "-\titems = newItems;", "-\tfor (int i=itemCount; i<count; i++) {", "-\t\tif (parent == null) {", "-\t\t\tnew TreeItem (this, SWT.NONE);", "-\t\t} else {", "-\t\t\tnew TreeItem (parent, SWT.NONE);", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\tfor (int i=itemCount; i<count; i++) {", "+\t\t\tcreateItem (null, hParent, OS.TVI_LAST, 0);", "+\t} else {", "+\t\tshrink = true;", "+\t\tint extra = Math.max (4, (count + 3) / 4 * 4);", "+\t\tTreeItem [] newItems = new TreeItem [items.length + extra];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, items.length);", "+\t\titems = newItems;", "+\t\tfor (int i=itemCount; i<count; i++) {", "+\t\t\tnew TreeItem (this, SWT.NONE, hParent, OS.TVI_LAST, 0);", "+\t\t}", "+\t}", "+\tif (redraw) {", "+\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tOS.InvalidateRect (handle, null, true);"]}], "num": 5995}