{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81baa210e681d69f68cdec8b46eb14ca", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7484436ac277c4727e471a3254dfd4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r \t\r \tint get_accName(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszName)", "signatureAfterChange": "\r \t\r \tint get_accName(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszName)", "diff": ["-\t\tif (accessibleListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accName(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszName);\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\r", "+\t\t/* Get the default name from the OS. */\r", "+\t\tString osName = null;\r", "+\t\tint code = iaccessible.get_accName(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszName);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pName = new int[1];\r", "+\t\t\tCOM.MoveMemory(pName, pszName, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pName[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pName[0], size);\r", "+\t\t\t\tosName = new String(buffer);\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osName;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954524ea29c346c600f72c363747ed99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 60, "signatureBeforeChange": "\r \t\r \tint get_accValue(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszValue)", "signatureAfterChange": "\r \t\r \tint get_accValue(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszValue)", "diff": ["-\t\tif (accessibleControlListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accValue(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszValue);\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\t\t\r", "+\t\t/* Get the default value string from the OS. */\r", "+\t\tString osValue = null;\r", "+\t\tint code = iaccessible.get_accValue(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszValue);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleControlListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pValue = new int[1];\r", "+\t\t\tCOM.MoveMemory(pValue, pszValue, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pValue[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pValue[0], size);\r", "+\t\t\t\tosValue = new String(buffer);\r", "+\t\t\t}\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osValue;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15fde0b8b34908b888342b74306d1130", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r \t\r \tint get_accDescription(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszDescription)", "signatureAfterChange": "\r \t\r \tint get_accDescription(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszDescription)", "diff": ["-\t\tif (accessibleListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accDescription(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszDescription);\r", "-\t\t}\r", "-\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\t\r", "+\t\t/* Get the default description from the OS. */\r", "+\t\tString osDescription = null;\r", "+\t\tint code = iaccessible.get_accDescription(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszDescription);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pDescription = new int[1];\r", "+\t\t\tCOM.MoveMemory(pDescription, pszDescription, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pDescription[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pDescription[0], size);\r", "+\t\t\t\tosDescription = new String(buffer);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osDescription;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dac54b576c89de94980909c5e5fc981", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r \t\r \tint get_accDefaultAction(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszDefaultAction)", "signatureAfterChange": "\r \t\r \tint get_accDefaultAction(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszDefaultAction)", "diff": ["-\t\tif (accessibleControlListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accDefaultAction(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszDefaultAction);\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\t\t\r", "+\t\t/* Get the default defaultAction from the OS. */\r", "+\t\tString osDefaultAction = null;\r", "+\t\tint code = iaccessible.get_accDefaultAction(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszDefaultAction);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleControlListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pDefaultAction = new int[1];\r", "+\t\t\tCOM.MoveMemory(pDefaultAction, pszDefaultAction, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pDefaultAction[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pDefaultAction[0], size);\r", "+\t\t\t\tosDefaultAction = new String(buffer);\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osDefaultAction;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ce2f7521380cc6507c6fa67e020990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \t\r \tint get_accKeyboardShortcut(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszKeyboardShortcut)", "signatureAfterChange": "\r \r \tint get_accKeyboardShortcut(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszKeyboardShortcut)", "diff": ["+\r", "-\t\tif (accessibleListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accKeyboardShortcut(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszKeyboardShortcut);\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\t\t\r", "+\t\t/* Get the default keyboard shortcut from the OS. */\r", "+\t\tString osKeyboardShortcut = null;\r", "+\t\tint code = iaccessible.get_accKeyboardShortcut(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszKeyboardShortcut);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pKeyboardShortcut = new int[1];\r", "+\t\t\tCOM.MoveMemory(pKeyboardShortcut, pszKeyboardShortcut, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pKeyboardShortcut[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pKeyboardShortcut[0], size);\r", "+\t\t\t\tosKeyboardShortcut = new String(buffer);\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osKeyboardShortcut;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31527ce2cc8e10a4c141c6e7e27c549d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "commitAfterChange": "f3828846066629968a44d377ba246bddf80a917b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \t\r \tint get_accHelp(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszHelp)", "signatureAfterChange": "\r \t\r \tint get_accHelp(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pszHelp)", "diff": ["-\t\tif (accessibleListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accHelp(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszHelp);\r", "+\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\t\t\r", "+\t\t/* Get the default help string from the OS. */\r", "+\t\tString osHelp = null;\r", "+\t\tint code = iaccessible.get_accHelp(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pszHelp);\r", "+\t\tif (code == COM.E_INVALIDARG) code = COM.S_FALSE; // proxy doesn't know about app childID\r", "+\t\tif (accessibleListeners.size() == 0) return code;\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tint[] pHelp = new int[1];\r", "+\t\t\tCOM.MoveMemory(pHelp, pszHelp, 4);\r", "+\t\t\tint size = COM.SysStringByteLen(pHelp[0]);\r", "+\t\t\tif (size > 0) {\r", "+\t\t\t\tchar[] buffer = new char[(size + 1) /2];\r", "+\t\t\t\tCOM.MoveMemory(buffer, pHelp[0], size);\r", "+\t\t\t\tosHelp = new String(buffer);\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.childID = (varChild_lVal == COM.CHILDID_SELF) ? ACC.CHILDID_SELF : varChild_lVal - 1;\r", "+\t\tevent.result = osHelp;\r", "-\t\tif (event.result == null) return COM.S_FALSE;\r", "+\t\tif (event.result == null) return code;\r"]}], "num": 11918}