{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f413034588e8e8cb7a00668d1f36d83", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a8683a6e9e1be57dedc9742ca3007a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b410448b2ee30c39984d789197ecbf23e5a160a6", "commitAfterChange": "63863d93c2ee25d0b7bc77cb902dfe9620ae110e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "diff": ["-\t\tint nGlyphs = (length * 3 / 2) + 16;", "-\t\tGCP_RESULTS result = new GCP_RESULTS();", "-\t\tresult.lStructSize = GCP_RESULTS.sizeof;", "-\t\tresult.nGlyphs = nGlyphs;", "-\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\tint /*long*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "-\t\tint /*long*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "-\t\tint dwFlags = OS.GCP_GLYPHSHAPE | OS.GCP_REORDER | OS.GCP_LIGATE;", "-\t\tint /*long*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "-\t\tint /*long*/ hFont = data.hGDIFont;", "-\t\tif (hFont == 0 && data.font != null) hFont = data.font.handle;", "-\t\tint /*long*/ oldFont = 0;", "-\t\tif (hFont != 0) oldFont = OS.SelectObject(hdc, hFont);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) | OS.LAYOUT_RTL);", "-\t\tOS.GetCharacterPlacementW(hdc, buffer, length, 0, result, dwFlags);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) & ~OS.LAYOUT_RTL);", "-\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "-\t\tOS.GetTextMetrics(hdc, lptm);", "-\t\tif (hFont != 0) OS.SelectObject(hdc, oldFont);", "-\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "-\t\tnGlyphs = result.nGlyphs;", "-\t\tint drawX = x, drawY = y + lptm.tmAscent;", "-\t\tint[] dx = new int[nGlyphs];", "-\t\tOS.MoveMemory(dx, result.lpDx, nGlyphs * 4);", "-\t\tfloat[] points = new float[dx.length * 2];", "-\t\tfor (int i = 0, j = 0; i < dx.length; i++) {", "-\t\t\tpoints[j++] = drawX;", "-\t\t\tpoints[j++] = drawY;", "-\t\t\tdrawX += dx[i];", "-\t\t}", "-\t\tRectF bounds = null;", "-\t\tif (!isTransparent || (data.style & SWT.MIRRORED) != 0) {", "-\t\t\tbounds = new RectF();", "-\t\t\tGdip.Graphics_MeasureDriverString(gdipGraphics, lpGlyphs, nGlyphs, data.gdipFont, points, 0, 0, bounds);", "-\t\t\tif (!isTransparent) {", "-\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, data.gdipBrush, x, y, Math.round(bounds.Width), Math.round(bounds.Height));", "-\t\t\t}", "-\t\t}", "-\t\tint gstate = 0;", "-\t\tint /*long*/ brush = getFgBrush();", "-\t\tif ((data.style & SWT.MIRRORED) != 0) {", "-\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "-\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "-\t\t\t\t\tGdip.LinearGradientBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\t\t\tbreak;\t\t\t", "-\t\t\t\tcase Gdip.BrushTypeTextureFill:", "-\t\t\t\t\tGdip.TextureBrush_ScaleTransform(brush, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\t\t\tbreak;\t\t\t", "-\t\t\t}", "-\t\t\tgstate = Gdip.Graphics_Save(gdipGraphics);", "-\t\t\tGdip.Graphics_ScaleTransform(gdipGraphics, -1, 1, Gdip.MatrixOrderPrepend);", "-\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t\t \t\t \t\t ", "-\t\t}", "-\t\tGdip.Graphics_DrawDriverString(gdipGraphics, lpGlyphs, result.nGlyphs, data.gdipFont, brush, points, 0, 0);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) {", "-\t\t\tswitch (Gdip.Brush_GetType(brush)) {", "-\t\t\t\tcase Gdip.BrushTypeLinearGradient:", "-\t\t\t\t\tGdip.LinearGradientBrush_ResetTransform(brush);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase Gdip.BrushTypeTextureFill:", "-\t\t\t\t\tGdip.TextureBrush_ResetTransform(brush);", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tGdip.Graphics_Restore(gdipGraphics, gstate);", "-\t\t}", "-\t\tOS.HeapFree(hHeap, 0, lpGlyphs);", "-\t\tOS.HeapFree(hHeap, 0, lpDx);", "+\t\tdrawText(gdipGraphics, string, x, y, isTransparent ? SWT.DRAW_TRANSPARENT : 0, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22f9e167fe7f342942e2919548740115", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e3d907d6678e7fdda004ed7738717629aea97ed2", "commitAfterChange": "7bb044e5c9466f1fefdeb85ae3faca48de0e8d34", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "diff": ["-\t\tPointF pt = new PointF();", "-\t\tint /*long*/ format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());", "-\t\tint formatFlags = Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces;", "-\t\tif ((data.style & SWT.MIRRORED) != 0) formatFlags |= Gdip.StringFormatFlagsDirectionRightToLeft;", "-\t\tGdip.StringFormat_SetFormatFlags(format, formatFlags);", "-\t\tif (!isTransparent) {", "-\t\t\tRectF bounds = new RectF();", "-\t\t\tGdip.Graphics_MeasureString(gdipGraphics, buffer, length, data.gdipFont, pt, format, bounds);", "-\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, data.gdipBrush, x, y, Math.round(bounds.Width), Math.round(bounds.Height));", "+\t\tint nGlyphs = (length * 3 / 2) + 16;", "+\t\tGCP_RESULTS result = new GCP_RESULTS();", "+\t\tresult.lStructSize = GCP_RESULTS.sizeof;", "+\t\tresult.nGlyphs = nGlyphs;", "+\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\t\tint /*long*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "+\t\tint /*long*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "+\t\tint dwFlags = OS.GCP_GLYPHSHAPE | OS.GCP_REORDER | OS.GCP_LIGATE;", "+\t\tint /*long*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) | OS.LAYOUT_RTL);", "+\t\tOS.GetCharacterPlacementW(hdc, buffer, length, 0, result, dwFlags);", "+\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) & ~OS.LAYOUT_RTL);", "+\t\tTEXTMETRIC lptm = OS.IsUnicode ? (TEXTMETRIC)new TEXTMETRICW() : new TEXTMETRICA();", "+\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "+\t\tnGlyphs = result.nGlyphs;", "+\t\tint drawX = x, drawY = y + lptm.tmAscent;", "+\t\tint[] dx = new int[nGlyphs];", "+\t\tOS.MoveMemory(dx, result.lpDx, nGlyphs * 4);", "+\t\tfloat[] points = new float[dx.length * 2];", "+\t\tfor (int i = 0, j = 0; i < dx.length; i++) {", "+\t\t\tpoints[j++] = drawX;", "+\t\t\tpoints[j++] = drawY;", "+\t\t\tdrawX += dx[i];", "+\t\t}", "+\t\tRectF bounds = null;", "+\t\tif (!isTransparent || (data.style & SWT.MIRRORED) != 0) {", "+\t\t\tbounds = new RectF();", "+\t\t\tGdip.Graphics_MeasureDriverString(gdipGraphics, lpGlyphs, nGlyphs, data.gdipFont, points, 0, 0, bounds);", "+\t\t\tif (!isTransparent) {", "+\t\t\t\tGdip.Graphics_FillRectangle(gdipGraphics, data.gdipBrush, x, y, Math.round(bounds.Width), Math.round(bounds.Height));", "+\t\t\t}", "-\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\tGdip.LinearGradientBrush_TranslateTransform(brush, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t", "+\t\t\t\t\tGdip.TextureBrush_TranslateTransform(brush, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t", "-\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, - 2 * x, 0, Gdip.MatrixOrderPrepend);\t\t \t\t \t\t ", "+\t\t\tGdip.Graphics_TranslateTransform(gdipGraphics, - 2 * x - bounds.Width, 0, Gdip.MatrixOrderPrepend);\t\t \t\t \t\t ", "-\t\tpt.X = x;", "-\t\tpt.Y = y;", "-\t\tGdip.Graphics_DrawString(gdipGraphics, buffer, length, data.gdipFont, pt, format, brush);", "+\t\tGdip.Graphics_DrawDriverString(gdipGraphics, lpGlyphs, result.nGlyphs, data.gdipFont, brush, points, 0, 0);", "-\t\tGdip.StringFormat_delete(format);", "+\t\tOS.HeapFree(hHeap, 0, lpGlyphs);", "+\t\tOS.HeapFree(hHeap, 0, lpDx);"]}], "num": 4674}