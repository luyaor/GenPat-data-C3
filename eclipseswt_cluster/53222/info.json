{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a5e9de10a609d47996e7c22afb0b3d3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ed30b033ab4c19f03ba06268bfc683", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\tlong /*int*/ rgn = 0;", "-\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\trgn = Cairo.cairo_region_create ();", "-\t\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "-\t\t\trect.width = width;", "-\t\t\trect.height = height;", "-\t\t\tCairo.cairo_region_union_rectangle (rgn, rect);", "-\t\t\tif (damageRgn != 0) {", "-\t\t\t\tCairo.cairo_region_intersect (rgn, damageRgn);", "-\t\t\t}", "-\t\t\t/* Intersect visible bounds with clipping */", "-\t\t\tif (clipRgn != 0) {", "-\t\t\t\t/* Convert clipping to device space if needed */", "-\t\t\t\tif (data.clippingTransform != null) {", "-\t\t\t\t\tclipRgn = convertRgn(clipRgn, data.clippingTransform);", "-\t\t\t\t\tCairo.cairo_region_intersect (rgn, clipRgn);", "-\t\t\t\t\tCairo.cairo_region_destroy (clipRgn);", "-\t\t\t\t} else {", "-\t\t\t\t\tCairo.cairo_region_intersect (rgn, clipRgn);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t/* Convert to user space */", "-\t\t\tif (cairo != 0) {", "-\t\t\t\tdouble[] matrix = new double[6];", "-\t\t\t\tCairo.cairo_get_matrix(cairo, matrix);", "-\t\t\t\tCairo.cairo_matrix_invert(matrix);", "-\t\t\t\tclipRgn = convertRgn(rgn, matrix);", "-\t\t\t\tCairo.cairo_region_destroy (rgn);", "-\t\t\t\trgn = clipRgn;", "-\t\t\t}", "-\t\t\tCairo.cairo_region_get_extents (rgn, rect);", "-\t\t\tCairo.cairo_region_destroy (rgn);", "-\t\t\tx = rect.x;", "-\t\t\ty = rect.y;", "-\t\t\twidth = rect.width;", "-\t\t\theight = rect.height;", "-\t\t} else {", "-\t\t\trgn = OS.gdk_region_new ();", "-\t\t\tGdkRectangle rect = new GdkRectangle();", "-\t\t\trect.width = width;", "-\t\t\trect.height = height;", "-\t\t\tOS.gdk_region_union_with_rect(rgn, rect);", "-\t\t\tif (damageRgn != 0) {", "-\t\t\t\tOS.gdk_region_intersect (rgn, damageRgn);", "-\t\t\t}", "-\t\t\t/* Intersect visible bounds with clipping */", "-\t\t\tif (clipRgn != 0) {", "-\t\t\t\t/* Convert clipping to device space if needed */", "-\t\t\t\tif (data.clippingTransform != null) {", "-\t\t\t\t\tclipRgn = convertRgn(clipRgn, data.clippingTransform);", "-\t\t\t\t\tOS.gdk_region_intersect (rgn, clipRgn);", "-\t\t\t\t\tOS.gdk_region_destroy (clipRgn);", "-\t\t\t\t} else {", "-\t\t\t\t\tOS.gdk_region_intersect (rgn, clipRgn);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t/* Convert to user space */", "-\t\t\tif (cairo != 0) {", "-\t\t\t\tdouble[] matrix = new double[6];", "-\t\t\t\tCairo.cairo_get_matrix(cairo, matrix);", "-\t\t\t\tCairo.cairo_matrix_invert(matrix);", "-\t\t\t\tclipRgn = convertRgn(rgn, matrix);", "-\t\t\t\tOS.gdk_region_destroy (rgn);", "-\t\t\t\trgn = clipRgn;", "-\t\t\t}", "-\t\t\tOS.gdk_region_get_clipbox(rgn, rect);", "-\t\t\tOS.gdk_region_destroy (rgn);", "-\t\t\tx = rect.x;", "-\t\t\ty = rect.y;", "-\t\t\twidth = rect.width;", "-\t\t\theight = rect.height;", "+\t\tlong /*int*/ rgn = OS.gdk_region_new();", "+\t\tGdkRectangle rect = new GdkRectangle();", "+\t\trect.width = width;", "+\t\trect.height = height;", "+\t\tOS.gdk_region_union_with_rect(rgn, rect);", "+\t\tif (damageRgn != 0) {", "+\t\t\tOS.gdk_region_intersect (rgn, damageRgn);", "-\t\t", "+\t\t/* Intersect visible bounds with clipping */", "+\t\tif (clipRgn != 0) {", "+\t\t\t/* Convert clipping to device space if needed */", "+\t\t\tif (data.clippingTransform != null) {", "+\t\t\t\tclipRgn = convertRgn(clipRgn, data.clippingTransform);", "+\t\t\t\tOS.gdk_region_intersect(rgn, clipRgn);", "+\t\t\t\tOS.gdk_region_destroy(clipRgn);", "+\t\t\t} else {", "+\t\t\t\tOS.gdk_region_intersect(rgn, clipRgn);", "+\t\t\t}", "+\t\t}", "+\t\t/* Convert to user space */", "+\t\tif (cairo != 0) {", "+\t\t\tdouble[] matrix = new double[6];", "+\t\t\tCairo.cairo_get_matrix(cairo, matrix);", "+\t\t\tCairo.cairo_matrix_invert(matrix);", "+\t\t\tclipRgn = convertRgn(rgn, matrix);", "+\t\t\tOS.gdk_region_destroy(rgn);", "+\t\t\trgn = clipRgn;", "+\t\t}", "+\t\tOS.gdk_region_get_clipbox(rgn, rect);", "+\t\tOS.gdk_region_destroy(rgn);", "+\t\tx = rect.x;", "+\t\ty = rect.y;", "+\t\twidth = rect.width;", "+\t\theight = rect.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0da22079d8c9ec2a4a8c62ebfb2b082", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ViewForm.java", "commitBeforeChange": "dfc9c2c27083a19c0dc0cbc4bc9dda0223b753d5", "commitAfterChange": "2b27afb0bcf4e50e1711377ad024c076547fac90", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void onPaint(GC gc)", "signatureAfterChange": "  void onPaint(GC gc)", "diff": ["-\t\t", "-\tif (drawLine1 != -1) {", "-\t\t// top seperator line", "-\t\tgc.setForeground(borderColor1);", "-\t\tgc.drawLine(d.x + BORDER_LEFT, drawLine1, d.x + d.width - BORDER_RIGHT, drawLine1);\t", "-\t}", "-\tif (drawLine2 != -1) {", "-\t\t// content separator line", "-\t\tgc.setForeground(borderColor1);", "-\t\tgc.drawLine(d.x + BORDER_LEFT, drawLine2, d.x + d.width - BORDER_RIGHT, drawLine2);", "-\t}", "-\t// highlight on top", "-\tint y = drawLine1;", "-\tif (y == -1){", "-\t\ty = drawLine2;", "-\t}", "-\tif (y != -1) {", "-\t\tgc.setForeground(getDisplay().getSystemColor(SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW));", "-\t\tgc.drawLine(d.x + BORDER_LEFT + marginWidth, d.y + BORDER_TOP + marginHeight, ", "-\t\t            d.x + BORDER_LEFT + marginWidth, y - 1);", "-\t\tgc.drawLine(d.x + BORDER_LEFT + marginWidth, d.y + BORDER_TOP + marginHeight,", "-\t\t            d.x + d.width - BORDER_RIGHT - marginWidth - 1, d.y + BORDER_TOP + marginHeight);", "-\t}", "-"]}], "num": 53222}