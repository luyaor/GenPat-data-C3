{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fb4d7494162efd10b1b8461aa6a94e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83855183ff1d9926ea90e0cd9cd18d5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "a1d6e8a9f1641432384d0052540811bff2f7cabd", "commitAfterChange": "089765c48162c4c25a5c8d99d0ac366ef636fc6a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static void loadAdditionalLibraries (String mozillaPath)", "signatureAfterChange": "  static void loadAdditionalLibraries (String mozillaPath, boolean isGlued)", "diff": ["-static void loadAdditionalLibraries (String mozillaPath) {", "-\tif (Mozilla.IsPre_4) return;", "-", "+static void loadAdditionalLibraries (String mozillaPath, boolean isGlued) {", "-\t* The use of the swt-xulrunner-fix library works around mozilla bug", "-\t* https://bugzilla.mozilla.org/show_bug.cgi?id=720682 (XULRunner 10).", "-\t*/", "-\tString libName = \"libswt-xulrunner-fix.so\"; //$NON-NLS-1$", "-\tFile libsDir = new File (getProfilePath () + \"/libs/\" + Mozilla.OS() + '/' + Mozilla.Arch ()); //$NON-NLS-1$", "+\t * To support XULRunner 24 the swt fix library must be loaded before attempting", "+\t * to glue to the runtime.  However before gluing to the runtime there is not a", "+\t * programmatic way of knowing its version.  So this function is invoked twice,", "+\t * once before gluing (to support XULRunner 24) and once after gluing (to", "+\t * support XULRunner 10).", "+\t */", "+", "+\tString libName = null;", "+\tif (!isGlued) {", "+\t\t/*", "+\t\t* XULRunner 24 can be detected by checking for the absence of libxpcom.so", "+\t\t* (XULRunner 24 is the only supported XULRunner release without this file).", "+\t\t* If XULRunner 24 is detected then load its swt fix library here, otherwise", "+\t\t* do nothing for now.", "+\t\t*/", "+\t\tif (!new File (mozillaPath, LIB_XPCOM).exists ()) {", "+\t\t\t/*", "+\t\t\t* Works around https://bugzilla.mozilla.org/show_bug.cgi?id=720682", "+\t\t\t* and https://bugzilla.mozilla.org/show_bug.cgi?id=763327.", "+\t\t\t*/", "+\t\t\tlibName = LIB_FIX_XULRUNNER24;", "+\t\t}", "+\t} else {", "+\t\t/*", "+\t\t* This is the second invocation of loadAdditionalLibraries(), so the", "+\t\t* xulrunner runtime version is now known.", "+\t\t*/", "+\t\tif (nsISupports.IsXULRunner24) {", "+\t\t\tFile libsDir = new File (getProfilePath () + \"/libs/\" + Mozilla.OS () + '/' + Mozilla.Arch ()); //$NON-NLS-1$", "+\t\t\tFile file = new File (libsDir, LIB_CUSTOM_XULRUNNER24);", "+\t\t\tif (file.exists()) {", "+\t\t\t\tSystem.load (file.getAbsolutePath()); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\treturn;", "+\t\t} else if (nsISupports.IsXULRunner10) {", "+\t\t\t/* works around https://bugzilla.mozilla.org/show_bug.cgi?id=720682 */", "+\t\t\tlibName = LIB_FIX_XULRUNNER10;", "+\t\t}", "+\t}", "+", "+\tif (libName == null) return;", "+", "+\tFile libsDir = new File (getProfilePath () + \"/libs/\" + Mozilla.OS () + '/' + Mozilla.Arch ()); //$NON-NLS-1$", "+", "-\t\tOS.dlopen (bytes, OS.RTLD_NOW | OS.RTLD_GLOBAL);", "+\t\tlong /*int*/ result = OS.dlopen (bytes, OS.RTLD_NOW | OS.RTLD_GLOBAL);", "+\t\tSystem.out.println(\"dlopen result: \" + result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "333c7d380cdeff1352f364852702e68f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "f140772306b6bc8574459b198beff435a1845892", "commitAfterChange": "9c81feac22eb478c9ed53500e4495235f5adde11", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  static void loadAdditionalLibraries (String mozillaPath, boolean isGlued)", "signatureAfterChange": "  static void loadAdditionalLibraries (String mozillaPath, boolean isGlued)", "diff": ["-\t * To support XULRunner 24 the swt fix library must be loaded before attempting", "-\t * to glue to the runtime.  However before gluing to the runtime there is not a", "-\t * programmatic way of knowing its version.  So this function is invoked twice,", "-\t * once before gluing (to support XULRunner 24) and once after gluing (to", "-\t * support XULRunner 10).", "+\t * This function is invoked twice, once before gluing (the fix library for", "+\t * XULRunner 24, if appropriate, must be loaded before attempting to glue),", "+\t * and once after gluing (to load the XULRunner 10 fix library, if appropriate).", "-", "-\t\t/*", "-\t\t* XULRunner 24 can be detected by checking for the absence of libxpcom.so", "-\t\t* (XULRunner 24 is the only supported XULRunner release without this file).", "-\t\t* If XULRunner 24 is detected then load its swt fix library here, otherwise", "-\t\t* do nothing for now.", "-\t\t*/", "-\t\tif (!new File (mozillaPath, LIB_XPCOM).exists ()) {", "+\t\tif (IsXULRunner24.booleanValue ()) {", "-\t\t* xulrunner runtime version is now known.", "+\t\t* specific xulrunner runtime version is now better known."]}], "num": 4155}