{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f7f6d2fe8c506458a7fff028c107938", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e6fcbc6311f353b9daa89b5777632a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fb1da3f03b1857a16fe11c426e420376a5d20e97", "commitAfterChange": "aef76dfd13cf214c26f3af2061d0fb9194e9264a", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 324, "signatureBeforeChange": " \tint get_selectedColumns(int ppSelectedColumns, int pNColumns)", "signatureAfterChange": " \tint get_selectedColumns(int ppSelectedColumns, int pNColumns)", "diff": ["-\t\tif (event.selected == null || event.selected.length == 0) return COM.S_FALSE;", "-\t\t// TODO: return whole array of selected items, not just first", "-\t\tCOM.MoveMemory(ppSelectedColumns, new int [] { event.selected[0] }, 4);", "-\t\tCOM.MoveMemory(pNColumns, new int [] { event.count }, 4);", "+\t\tint count = event.selected == null ? 0 : event.selected.length;", "+\t\tif (DEBUG) print(\"IAccessibleTable2::get_selectedColumns() returning \" + (count == 0 ? \"null\" : \"selected[\" + count + \"]\"));", "+\t\tif (count == 0) {", "+\t\t\tCOM.MoveMemory(ppSelectedColumns, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(pNColumns, new int [] { 0 }, 4);", "+\t\t\treturn COM.S_FALSE;", "+\t\t}", "+\t\tint /*long*/ pv = COM.CoTaskMemAlloc(count * 4);", "+\t\tCOM.MoveMemory(pv, event.selected, count * 4);", "+\t\tCOM.MoveMemory(ppSelectedColumns, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(pNColumns, new int [] { count }, 4);", "-\t\t// TODO: @retval S_FALSE if there are none, [out] values are NULL and 0 respectively"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b076ec4dd394117b306e1d7586fd7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fb1da3f03b1857a16fe11c426e420376a5d20e97", "commitAfterChange": "aef76dfd13cf214c26f3af2061d0fb9194e9264a", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " \tint get_selectedRows(int ppSelectedRows, int pNRows)", "signatureAfterChange": " \tint get_selectedRows(int ppSelectedRows, int pNRows)", "diff": ["-\t\tif (event.selected == null || event.selected.length == 0) return COM.S_FALSE;", "-\t\t// TODO: return whole array of selected items, not just first", "-\t\tCOM.MoveMemory(ppSelectedRows, new int [] { event.selected[0] }, 4);", "-\t\tCOM.MoveMemory(pNRows, new int [] { event.count }, 4);", "+\t\tint count = event.selected == null ? 0 : event.selected.length;", "+\t\tif (DEBUG) print(\"IAccessibleTable2::get_selectedRows() returning \" + (count == 0 ? \"null\" : \"selected[\" + count + \"]\"));", "+\t\tif (count == 0) {", "+\t\t\tCOM.MoveMemory(ppSelectedRows, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(pNRows, new int [] { 0 }, 4);", "+\t\t\treturn COM.S_FALSE;", "+\t\t}", "+\t\tint /*long*/ pv = COM.CoTaskMemAlloc(count * 4);", "+\t\tCOM.MoveMemory(pv, event.selected, count * 4);", "+\t\tCOM.MoveMemory(ppSelectedRows, new int /*long*/ [] { pv }, OS.PTR_SIZEOF);", "+\t\tCOM.MoveMemory(pNRows, new int [] { count }, 4);"]}], "num": 48706}