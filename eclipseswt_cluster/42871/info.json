{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4b5a0206be91aa04f554fbdf1a03623", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af172529f60aa3d6392de6ca4848fcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public Shell [] getShells ()", "signatureAfterChange": " public Shell [] getShells ()", "diff": ["-//\tint index = 0;", "-//\tShell [] result = new Shell [16];", "-//\tfor (int i = 0; i < widgetTable.length; i++) {", "-//\t\tWidget widget = widgetTable [i];", "-//\t\tif (widget != null && widget instanceof Shell) {", "-//\t\t\tint j = 0;", "-//\t\t\twhile (j < index) {", "-//\t\t\t\tif (result [j] == widget) break;", "-//\t\t\t\tj++;", "-//\t\t\t}", "-//\t\t\tif (j == index) {", "-//\t\t\t\tif (index == result.length) {", "-//\t\t\t\t\tShell [] newResult = new Shell [index + 16];", "-//\t\t\t\t\tSystem.arraycopy (result, 0, newResult, 0, index);", "-//\t\t\t\t\tresult = newResult;", "-//\t\t\t\t}", "-//\t\t\t\tresult [index++] = (Shell) widget;\t", "-//\t\t\t}", "-//\t\t}", "-//\t}", "-//\tif (index == result.length) return result;", "-//\tShell [] newResult = new Shell [index];", "-//\tSystem.arraycopy (result, 0, newResult, 0, index);", "-//\treturn newResult;", "-\treturn new Shell[0];", "+\tNSArray windows = application.windows();", "+\tint index = 0;", "+\tShell [] result = new Shell [windows.count()];", "+\tfor (int i = 0; i < result.length; i++) {", "+\t\tNSWindow window = new NSWindow(windows.objectAtIndex(i));", "+\t\tNSView view = window.contentView();", "+\t\tif (view != null) {", "+\t\t\tint jniRef = OS.objc_msgSend(view.id, OS.sel_tag);", "+\t\t\tif (jniRef != 0 && jniRef != -1) {", "+\t\t\t\tObject object = OS.JNIGetObject(jniRef);", "+\t\t\t\tif (object instanceof Shell) {", "+\t\t\t\t\tresult[index++] = (Shell)object;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (index == result.length) return result;", "+\tShell [] newResult = new Shell [index];", "+\tSystem.arraycopy (result, 0, newResult, 0, index);", "+\treturn newResult;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c06c013c215bc510dc937be51698133", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a1c32779a77806d83e43b58429ae7b645a07df78", "commitAfterChange": "bd24eddaa51d138183d5de7822394303919b5716", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": "  boolean touchEvent(int id, int sel, int eventPtr)", "signatureAfterChange": "  boolean touchEvent(int id, int sel, int eventPtr)", "diff": ["-//\tif (activeTouches.count() != currentTouches.count()) {", "-//\t\t/**", "-//\t\t * Bug in Cocoa. Under some situations we don't get the NSTouchPhaseEnded/Cancelled notification. Most commonly this happens", "-//\t\t * if a 4-finger gesture occurs and the application switcher appears. Workaround is to generate a TOUCHSTATE_UP for the ", "-//\t\t * orphaned touch.", "-//\t\t */", "-//\t\tfor (int /*long*/ j = currentTouches.count() - 1; j >= 0 ; j--) {", "-//\t\t\tNSTouch touch = new NSTouch(currentTouches.objectAtIndex(j).id);", "-//\t\t\tNSObject identity = new NSObject(OS.objc_msgSend(touch.id, OS.sel_identity));", "-//\t\t\tNSTouch activeTouch = findTouchWithId(activeTouches, identity);", "-//\t\t\tif (activeTouch == null) {", "-//\t\t\t\tTouch fakeTouchUp = touchStateFromNSTouch(touch);", "-//\t\t\t\tfakeTouchUp.phase = Touch.TOUCHSTATE_UP;", "-//", "-//\t\t\t\tif (currTouchIndex == touches.length) {", "-//\t\t\t\t\tTouch newTouchStates[] = new Touch[touches.length + 1];", "-//\t\t\t\t\tSystem.arraycopy(touches, 0, newTouchStates, 0, touches.length);", "-//\t\t\t\t\ttouches = newTouchStates;", "-//\t\t\t\t}", "-//", "-//\t\t\t\ttouches[currTouchIndex++] = fakeTouchUp;", "-//\t\t\t\tcurrentTouches.removeObject(activeTouch);", "-//\t\t\t}", "-//\t\t}", "-//\t}", "+\tif (activeTouches.count() != currentTouches.count()) {", "+\t\t/**", "+\t\t * Bug in Cocoa. Under some situations we don't get the NSTouchPhaseEnded/Cancelled notification. Most commonly this happens", "+\t\t * if a 4-finger gesture occurs and the application switcher appears. Workaround is to generate a TOUCHSTATE_UP for the ", "+\t\t * orphaned touch.", "+\t\t */", "+\t\tfor (int /*long*/ j = currentTouches.count() - 1; j >= 0 ; j--) {", "+\t\t\tNSTouch touch = new NSTouch(currentTouches.objectAtIndex(j).id);", "+\t\t\tNSObject identity = new NSObject(OS.objc_msgSend(touch.id, OS.sel_identity));", "+\t\t\tNSTouch activeTouch = findTouchWithId(activeTouches, identity);", "+\t\t\tif (activeTouch == null) {", "+\t\t\t\tTouch fakeTouchUp = touchStateFromNSTouch(touch);", "+\t\t\t\tfakeTouchUp.state = SWT.TOUCHSTATE_UP;", "+", "+\t\t\t\tif (currTouchIndex == touches.length) {", "+\t\t\t\t\tTouch newTouchStates[] = new Touch[touches.length + 1];", "+\t\t\t\t\tSystem.arraycopy(touches, 0, newTouchStates, 0, touches.length);", "+\t\t\t\t\ttouches = newTouchStates;", "+\t\t\t\t}", "+", "+\t\t\t\ttouches[currTouchIndex++] = fakeTouchUp;", "+\t\t\t\tcurrentTouches.removeObject(activeTouch);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 42871}