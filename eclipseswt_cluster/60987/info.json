{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "304354d950c98fd55fef759308d4ea9e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "888f63c3ac1594da3799d0913ef24a28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 367, "signatureBeforeChange": "  \tvoid createIAccessibleComponent()", "signatureAfterChange": " \tprivate String hresult(int code)", "diff": ["-\tvoid createIAccessibleComponent() {", "-\t\tobjIAccessibleComponent = new COMObject(new int[] {2,0,0,2,1,1}) {", "-\t\t\tpublic int /*long*/ method0(int /*long*/[] args) {return QueryInterface(args[0], args[1]);}", "-\t\t\tpublic int /*long*/ method1(int /*long*/[] args) {return AddRef();}", "-\t\t\tpublic int /*long*/ method2(int /*long*/[] args) {return Release();}", "-\t\t\tpublic int /*long*/ method3(int /*long*/[] args) {return get_locationInParent(args[0], args[1]);}", "-\t\t\tpublic int /*long*/ method4(int /*long*/[] args) {return get_foreground(args[0]);}", "-\t\t\tpublic int /*long*/ method5(int /*long*/[] args) {return get_background(args[0]);}", "-\t\t};", "-\t}", "+\t}", "+\tprivate String hresult(int code) {", "+\t\tif (DEBUG) switch (code) {", "+\t\t\tcase COM.S_OK: return \" S_OK\";", "+\t\t\tcase COM.S_FALSE: return \" S_FALSE\";", "+\t\t\tcase COM.E_ACCESSDENIED: return \" E_ACCESSDENIED\";", "+\t\t\tcase COM.E_FAIL: return \" E_FAIL\";", "+\t\t\tcase COM.E_INVALIDARG: return \" E_INVALIDARG\";", "+\t\t\tcase COM.E_NOINTERFACE: return \" E_NOINTERFACE\";", "+\t\t\tcase COM.E_NOTIMPL: return \" E_NOTIMPL\";", "+\t\t\tcase COM.E_NOTSUPPORTED: return \" E_NOTSUPPORTED\";", "+\t\t\tcase COM.E_OUTOFMEMORY: return \" E_OUTOFMEMORY\";", "+\t\t\tcase COM.E_POINTER: return \" E_POINTER\";", "+\t\t\tcase COM.DISP_E_EXCEPTION: return \" DISP_E_EXCEPTION\";", "+\t\t\tcase COM.DISP_E_MEMBERNOTFOUND: return \" DISP_E_MEMBERNOTFOUND\";", "+\t\t\tcase COM.DISP_E_UNKNOWNINTERFACE: return \" DISP_E_UNKNOWNINTERFACE\";", "+\t\t\tcase COM.DISP_E_UNKNOWNNAME: return \" DISP_E_UNKNOWNNAME\";", "+\t\t}", "+\t\treturn \" HRESULT=\" + code;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad00f92e71cd99520dfa58926ab954dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableTree.java", "commitBeforeChange": "a7f55348122e685e185be79f1e61c482f210f9b0", "commitAfterChange": "7b9bd176a3b0bcedf3e37bac78e4b0ee77698321", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public TableTree(Composite parent, int style)", "signatureAfterChange": "\r public TableTree(Composite parent, int style)", "diff": ["-\ttable.addListener(SWT.MouseDown, new Listener() {\r", "+\tListener tableListener = new Listener() {\r", "-\t\t\tonMouseDown(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.MouseDown: onMouseDown(e); break;\r", "+\t\t\tcase SWT.Selection: onSelection(e); break;\r", "+\t\t\tcase SWT.DefaultSelection: onSelection(e); break;\r", "+\t\t\tcase SWT.Traverse: onTraverse(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.Selection, new Listener() {\r", "+\t};\r", "+\tint[] tableEvents = new int[]{SWT.MouseDown, \r", "+\t\t                           SWT.Selection, \r", "+\t\t                           SWT.DefaultSelection, \r", "+\t\t                           SWT.Traverse};\r", "+\tfor (int i = 0; i < tableEvents.length; i++) {\r", "+\t\ttable.addListener(tableEvents[i], tableListener);\r", "+\t}\r", "+\t\r", "+\tListener listener = new Listener() {\r", "-\t\t\tonSelection(e);\r", "+\t\t\tswitch (e.type) {\r", "+\t\t\tcase SWT.Dispose: onDispose(e); break;\r", "+\t\t\tcase SWT.Resize:  onResize(e); break;\r", "+\t\t\tcase SWT.FocusIn: onFocusIn(e); break;\r", "+\t\t\t}\r", "-\t});\r", "-\ttable.addListener(SWT.DefaultSelection, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonSelection(e);\r", "-\t\t}\r", "-\t});\r", "-\r", "-\taddListener(SWT.Dispose, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonDispose();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.Resize, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonResize();\r", "-\t\t}\r", "-\t});\r", "-\taddListener(SWT.FocusIn, new Listener() {\r", "-\t\tpublic void handleEvent(Event e) {\r", "-\t\t\tonFocusIn();\r", "-\t\t}\r", "-\t});\r", "+\t};\r", "+\tint[] events = new int[]{SWT.Dispose, \r", "+\t\t                      SWT.Resize, \r", "+\t\t                      SWT.FocusIn};\r", "+\tfor (int i = 0; i < events.length; i++) {\r", "+\t\taddListener(events[i], listener);\r", "+\t}\t                      \r"]}], "num": 60987}