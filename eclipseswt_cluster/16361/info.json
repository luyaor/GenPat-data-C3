{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95e761a5781c670405908812fd85c78b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7c75b0fe27cb01eba7223e8ecc911f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java", "commitBeforeChange": "dca081370d5224f1cd2e70bba1975a4902add83c", "commitAfterChange": "61d2d6593ac92fd12ac831d8c082ce8dff8165a6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 10, "signatureBeforeChange": " static String getResourceString(String key, Object[] args)", "signatureAfterChange": " \t \tvoid show(boolean owned, Point location, Point size, boolean addressBar, boolean menuBar, boolean statusBar, boolean toolBar)", "diff": ["+\t", "+\tvoid show(boolean owned, Point location, Point size, boolean addressBar, boolean menuBar, boolean statusBar, boolean toolBar) {", "+\t\tfinal Shell shell = browser.getShell();", "+\t\tif (owned) {", "+\t\t\tif (location != null) shell.setLocation(location);", "+\t\t\tif (size != null) shell.setSize(shell.computeSize(size.x, size.y));", "+\t\t}", "+\t\tFormData data = null;", "+\t\tif (toolBar) {", "+\t\t\ttoolbar = new ToolBar(parent, SWT.NONE);", "+\t\t\tdata = new FormData();", "+\t\t\tdata.top = new FormAttachment(0, 5);", "+\t\t\ttoolbar.setLayoutData(data);", "+\t\t\titemBack = new ToolItem(toolbar, SWT.PUSH);", "+\t\t\titemBack.setText(getResourceString(\"Back\"));", "+\t\t\titemForward = new ToolItem(toolbar, SWT.PUSH);", "+\t\t\titemForward.setText(getResourceString(\"Forward\"));", "+\t\t\tfinal ToolItem itemStop = new ToolItem(toolbar, SWT.PUSH);", "+\t\t\titemStop.setText(getResourceString(\"Stop\"));", "+\t\t\tfinal ToolItem itemRefresh = new ToolItem(toolbar, SWT.PUSH);", "+\t\t\titemRefresh.setText(getResourceString(\"Refresh\"));", "+\t\t\tfinal ToolItem itemGo = new ToolItem(toolbar, SWT.PUSH);", "+\t\t\titemGo.setText(getResourceString(\"Go\"));", "+\t\t\t", "+\t\t\titemBack.setEnabled(browser.isBackEnabled());", "+\t\t\titemForward.setEnabled(browser.isForwardEnabled());", "+\t\t\tListener listener = new Listener() {", "+\t\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\t\tToolItem item = (ToolItem)event.widget;", "+\t\t\t\t\tif (item == itemBack) browser.back(); ", "+\t\t\t\t\telse if (item == itemForward) browser.forward();", "+\t\t\t\t\telse if (item == itemStop) browser.stop();", "+\t\t\t\t\telse if (item == itemRefresh) browser.refresh();", "+\t\t\t\t\telse if (item == itemGo) browser.setUrl(locationBar.getText());", "+\t\t\t};", "+\t\t\titemBack.addListener(SWT.Selection, listener);", "+\t\t\titemForward.addListener(SWT.Selection, listener);", "+\t\t\titemStop.addListener(SWT.Selection, listener);", "+\t\t\titemRefresh.addListener(SWT.Selection, listener);", "+\t\t\titemGo.addListener(SWT.Selection, listener);", "+", "+\t\t\tcanvas = new Canvas(parent, SWT.NO_BACKGROUND);", "+\t\t\tdata = new FormData();", "+\t\t\tdata.width = 24;", "+\t\t\tdata.height = 24;", "+\t\t\tdata.top = new FormAttachment(0, 5);", "+\t\t\tdata.right = new FormAttachment(100, -5);", "+\t\t\tcanvas.setLayoutData(data);", "+\t\t\t", "+\t\t\tfinal Rectangle rect = images[0].getBounds();", "+\t\t\tcanvas.addListener(SWT.Paint, new Listener() {", "+\t\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\t\tPoint pt = ((Canvas)e.widget).getSize();", "+\t\t\t\t\te.gc.drawImage(images[index], 0, 0, rect.width, rect.height, 0, 0, pt.x, pt.y);\t\t\t", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\tcanvas.addListener(SWT.MouseDown, new Listener() {", "+\t\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\t\tbrowser.setUrl(getResourceString(\"Startup\"));", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t", "+\t\t\tfinal Display display = parent.getDisplay();", "+\t\t\tdisplay.asyncExec(new Runnable() {", "+\t\t\t\tpublic void run() {", "+\t\t\t\t\tif (canvas.isDisposed()) return;", "+\t\t\t\t\tif (busy) {", "+\t\t\t\t\t\tindex++;", "+\t\t\t\t\t\tif (index == images.length) index = 0;", "+\t\t\t\t\t\tcanvas.redraw();", "+\t\t\t\t\t}", "+\t\t\t\t\tdisplay.timerExec(150, this);", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tif (addressBar) {", "+\t\t\tlocationBar = new Text(parent, SWT.BORDER);", "+\t\t\tdata = new FormData();", "+\t\t\tif (toolbar != null) {", "+\t\t\t\tdata.top = new FormAttachment(toolbar, 0, SWT.TOP);", "+\t\t\t\tdata.left = new FormAttachment(toolbar, 5, SWT.RIGHT);", "+\t\t\t\tdata.right = new FormAttachment(canvas, -5, SWT.DEFAULT);\t\t\t", "+\t\t\t} else {", "+\t\t\t\tdata.top = new FormAttachment(0, 0);", "+\t\t\t\tdata.left = new FormAttachment(0, 0);", "+\t\t\t\tdata.right = new FormAttachment(100, 0);\t\t\t", "+\t\t\tlocationBar.setLayoutData(data);", "+\t\t\tlocationBar.addListener(SWT.DefaultSelection, new Listener() {", "+\t\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\t\tbrowser.setUrl(locationBar.getText());", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tif (statusBar) {", "+\t\t\tstatus = new Label(parent, SWT.NONE);", "+\t\t\tprogressBar = new ProgressBar(parent, SWT.NONE);", "+\t\t\t", "+\t\t\tdata = new FormData();", "+\t\t\tdata.left = new FormAttachment(0, 5);", "+\t\t\tdata.right = new FormAttachment(progressBar, 0, SWT.DEFAULT);", "+\t\t\tdata.bottom = new FormAttachment(100, -5);", "+\t\t\tstatus.setLayoutData(data);", "+\t\t\t", "+\t\t\tdata = new FormData();", "+\t\t\tdata.right = new FormAttachment(100, -5);", "+\t\t\tdata.bottom = new FormAttachment(100, -5);", "+\t\t\tprogressBar.setLayoutData(data);", "+\t\t\t", "+\t\t\tbrowser.addStatusTextListener(new StatusTextListener() {", "+\t\t\t\tpublic void changed(StatusTextEvent event) {", "+\t\t\t\t\tstatus.setText(event.text);\t", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tparent.setLayout(new FormLayout());", "+", "+\t\tControl aboveBrowser = toolBar ? (Control)canvas : (addressBar ? (Control)locationBar : null);", "+\t\tdata = new FormData();", "+\t\tdata.left = new FormAttachment(0, 0);", "+\t\tdata.top = aboveBrowser != null ? new FormAttachment(aboveBrowser, 5, SWT.DEFAULT) : new FormAttachment(0, 0);", "+\t\tdata.right = new FormAttachment(100, 0);", "+\t\tdata.bottom = status != null ? new FormAttachment(status, -5, SWT.DEFAULT) : new FormAttachment(100, 0);", "+\t\tbrowser.setLayoutData(data);", "+\t\t\t", "+\t\tif (statusBar || toolBar) {", "+\t\t\tbrowser.addProgressListener(new ProgressListener() {", "+\t\t\t\tpublic void changed(ProgressEvent event) {", "+\t\t\t\t\tif (event.total == 0) return;                            ", "+\t\t\t\t\tint ratio = event.current * 100 / event.total;", "+\t\t\t\t\tif (progressBar != null) progressBar.setSelection(ratio);", "+\t\t\t\t\tbusy = event.current != event.total;", "+\t\t\t\t\tif (!busy) {", "+\t\t\t\t\t\tindex = 0;", "+\t\t\t\t\t\tif (canvas != null) canvas.redraw();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tpublic void completed(ProgressEvent event) {", "+\t\t\t\t\tif (progressBar != null) progressBar.setSelection(0);", "+\t\t\t\t\tbusy = false;", "+\t\t\t\t\tindex = 0;", "+\t\t\t\t\tif (canvas != null) {", "+\t\t\t\t\t\titemBack.setEnabled(browser.isBackEnabled());", "+\t\t\t\t\t\titemForward.setEnabled(browser.isForwardEnabled());", "+\t\t\t\t\t\tcanvas.redraw();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tif (addressBar || statusBar || toolBar) {", "+\t\t\tbrowser.addLocationListener(new LocationListener() {", "+\t\t\t\tpublic void changed(LocationEvent event) {", "+\t\t\t\t\tbusy = true;", "+\t\t\t\t\tif (event.top && locationBar != null) locationBar.setText(event.location);", "+\t\t\t\t}", "+\t\t\t\tpublic void changing(LocationEvent event) {", "+\t\t\t\t}", "+\t\t\t});", "+\t\t}", "+\t\tif (title) {", "+\t\tparent.layout(true);", "+\t\tif (size != null) parent.pack();", "+\t\tif (owned) shell.open();", "+\t}", "- */", "-static String getResourceString(String key, Object[] args) {", "-\ttry {", "-\t\treturn MessageFormat.format(getResourceString(key), args);", "-\t} catch (MissingResourceException e) {", "-\t\treturn key;", "-\t} catch (NullPointerException e) {", "-\t\treturn \"!\" + key + \"!\";", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f8019bdde59b2c80423916ed90bc81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java", "commitBeforeChange": "dca081370d5224f1cd2e70bba1975a4902add83c", "commitAfterChange": "61d2d6593ac92fd12ac831d8c082ce8dff8165a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public BrowserExample(Composite parent)", "signatureAfterChange": " \t\t \tpublic BrowserExample(Composite parent, boolean top)", "diff": ["- */", "-public BrowserExample(Composite parent) {", "-\tinitResources();", "-\tfinal Display display = parent.getDisplay();", "-\tFormLayout layout = new FormLayout();", "-\tparent.setLayout(layout);", "-\tToolBar toolbar = new ToolBar(parent, SWT.NONE);", "-\tfinal ToolItem itemBack = new ToolItem(toolbar, SWT.PUSH);", "-\titemBack.setText(getResourceString(\"Back\"));", "-\tfinal ToolItem itemForward = new ToolItem(toolbar, SWT.PUSH);", "-\titemForward.setText(getResourceString(\"Forward\"));", "-\tfinal ToolItem itemStop = new ToolItem(toolbar, SWT.PUSH);", "-\titemStop.setText(getResourceString(\"Stop\"));", "-\tfinal ToolItem itemRefresh = new ToolItem(toolbar, SWT.PUSH);", "-\titemRefresh.setText(getResourceString(\"Refresh\"));", "-\tfinal ToolItem itemGo = new ToolItem(toolbar, SWT.PUSH);", "-\titemGo.setText(getResourceString(\"Go\"));", "-", "-\tlocation = new Text(parent, SWT.BORDER);", "-", "-\tfinal Canvas canvas = new Canvas(parent, SWT.NO_BACKGROUND);", "-\tfinal Rectangle rect = images[0].getBounds();", "-\tcanvas.addListener(SWT.Paint, new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tPoint pt = canvas.getSize();", "-\t\t\te.gc.drawImage(images[index], 0, 0, rect.width, rect.height, 0, 0, pt.x, pt.y);\t\t\t", "+\t\t", "+\tpublic BrowserExample(Composite parent, boolean top) {", "+\t\tthis.parent = parent;", "+\t\ttry {", "+\t\t\tbrowser = new Browser(parent, SWT.NONE);", "+\t\t} catch (SWTError e) {", "+\t\t\terror = e;", "+\t\t\t/* Browser widget could not be instantiated */", "+\t\t\tparent.setLayout(new FillLayout());", "+\t\t\tLabel label = new Label(parent, SWT.CENTER | SWT.WRAP);", "+\t\t\tlabel.setText(getResourceString(\"BrowserNotCreated\"));", "+\t\t\tparent.layout(true);", "+\t\t\treturn;", "-\t});", "-\tcanvas.addListener(SWT.MouseDown, new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tbrowser.setUrl(getResourceString(\"Startup\"));", "-\t\t}", "-\t});", "-\t", "-\tdisplay.asyncExec(new Runnable() {", "-\t\tpublic void run() {", "-\t\t\tif (canvas.isDisposed()) return;", "-\t\t\tif (busy) {", "-\t\t\t\tindex++;", "-\t\t\t\tif (index == images.length) index = 0;", "-\t\t\t\tcanvas.redraw();", "+\t\tinitResources();", "+\t\tfinal Display display = parent.getDisplay();", "+\t\tbrowser.setData(\"org.eclipse.swt.examples.browserexample.BrowserApplication\", this);", "+\t\tbrowser.addOpenWindowListener(new OpenWindowListener() {", "+\t\t\tpublic void open(WindowEvent event) {", "+\t\t\t\tShell shell = new Shell(display);", "+\t\t\t\tif (icon != null) shell.setImage(icon);", "+\t\t\t\tshell.setLayout(new FillLayout());", "+\t\t\t\tBrowserExample app = new BrowserExample(shell, false);", "+\t\t\t\tapp.setShellDecoration(icon, true);", "+\t\t\t\tevent.browser = app.getBrowser();", "-\t\t\tdisplay.timerExec(150, this);", "+\t\t});", "+\t\tbrowser.addVisibilityWindowListener(new VisibilityWindowListener() {", "+\t\t\tpublic void hide(WindowEvent e) {", "+\t\t\t}", "+\t\t\tpublic void show(WindowEvent e) {", "+\t\t\t\tBrowser browser = (Browser)e.widget;", "+\t\t\t\tBrowserExample app = (BrowserExample)browser.getData(\"org.eclipse.swt.examples.browserexample.BrowserApplication\");", "+\t\t\t\tapp.show(true, e.location, e.size, e.addressBar, e.menuBar, e.statusBar, e.toolBar);", "+\t\t\t}", "+\t\t});", "+\t\tbrowser.addCloseWindowListener(new CloseWindowListener() {", "+\t\t\tpublic void close(WindowEvent event) {", "+\t\t\t\tBrowser browser = (Browser)event.widget;", "+\t\t\t\tShell shell = browser.getShell();", "+\t\t\t\tshell.close();", "+\t\t\t}", "+\t\t});", "+\t\tif (top) {", "+\t\t\tbrowser.setUrl(getResourceString(\"Startup\"));", "+\t\t\tshow(false, null, null, true, true, true, true);", "-\t});", "-", "-\tfinal Label status = new Label(parent, SWT.NONE);", "-\tfinal ProgressBar progressBar = new ProgressBar(parent, SWT.NONE);", "-", "-\tFormData data = new FormData();", "-\tdata.top = new FormAttachment(0, 5);", "-\ttoolbar.setLayoutData(data);", "-", "-\tdata = new FormData();", "-\tdata.left = new FormAttachment(0, 0);", "-\tdata.right = new FormAttachment(100, 0);", "-\tdata.top = new FormAttachment(canvas, 5, SWT.DEFAULT);", "-\tdata.bottom = new FormAttachment(status, -5, SWT.DEFAULT);", "-\ttry {", "-\t\tbrowser = new Browser(parent, SWT.NONE);", "-\t\tbrowser.setLayoutData(data);", "-\t} catch (SWTError e) {", "-\t\t/* Browser widget could not be instantiated */", "-\t\tLabel label = new Label(parent, SWT.CENTER | SWT.WRAP);", "-\t\tlabel.setText(getResourceString(\"BrowserNotCreated\"));", "-\t\tlabel.setLayoutData(data);", "-\tdata = new FormData();", "-\tdata.width = 24;", "-\tdata.height = 24;", "-\tdata.top = new FormAttachment(0, 5);", "-\tdata.right = new FormAttachment(100, -5);", "-\tcanvas.setLayoutData(data);", "-", "-\tdata = new FormData();", "-\tdata.top = new FormAttachment(toolbar, 0, SWT.TOP);", "-\tdata.left = new FormAttachment(toolbar, 5, SWT.RIGHT);", "-\tdata.right = new FormAttachment(canvas, -5, SWT.DEFAULT);", "-\tlocation.setLayoutData(data);", "-", "-\tdata = new FormData();", "-\tdata.left = new FormAttachment(0, 5);", "-\tdata.right = new FormAttachment(progressBar, 0, SWT.DEFAULT);", "-\tdata.bottom = new FormAttachment(100, -5);", "-\tstatus.setLayoutData(data);", "-\tdata = new FormData();", "-\tdata.right = new FormAttachment(100, -5);", "-\tdata.bottom = new FormAttachment(100, -5);", "-\tprogressBar.setLayoutData(data);", "-", "-\tif (browser != null) {", "-\t\titemBack.setEnabled(browser.isBackEnabled());", "-\t\titemForward.setEnabled(browser.isForwardEnabled());", "-\t\t", "-\t\tListener listener = new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tToolItem item = (ToolItem)event.widget;", "-\t\t\t\tif (item == itemBack) browser.back(); ", "-\t\t\t\telse if (item == itemForward) browser.forward();", "-\t\t\t\telse if (item == itemStop) browser.stop();", "-\t\t\t\telse if (item == itemRefresh) browser.refresh();", "-\t\t\t\telse if (item == itemGo) browser.setUrl(location.getText());", "-\t\t\t}", "-\t\t};", "-\t\tbrowser.addLocationListener(new LocationListener() {", "-\t\t\tpublic void changed(LocationEvent event) {", "-\t\t\t\tbusy = true;", "-\t\t\t\tif (event.top) location.setText(event.location);", "-\t\t\t}", "-\t\t\tpublic void changing(LocationEvent event) {", "-\t\t\t}", "-\t\t});", "-\t\tbrowser.addProgressListener(new ProgressListener() {", "-\t\t\tpublic void changed(ProgressEvent event) {", "-\t\t\t\tif (event.total == 0) return;                            ", "-\t\t\t\tint ratio = event.current * 100 / event.total;", "-\t\t\t\tprogressBar.setSelection(ratio);", "-\t\t\t\tbusy = event.current != event.total;", "-\t\t\t\tif (!busy) {", "-\t\t\t\t\tindex = 0;", "-\t\t\t\t\tcanvas.redraw();", "-\t\t\tpublic void completed(ProgressEvent event) {", "-\t\t\t\titemBack.setEnabled(browser.isBackEnabled());", "-\t\t\t\titemForward.setEnabled(browser.isForwardEnabled());", "-\t\t\t\tprogressBar.setSelection(0);", "-\t\t\t\tbusy = false;", "-\t\t\t\tindex = 0;", "-\t\t\t\tcanvas.redraw();", "-\t\t\t}", "-\t\t});", "-\t\tbrowser.addStatusTextListener(new StatusTextListener() {", "-\t\t\tpublic void changed(StatusTextEvent event) {", "-\t\t\t\tstatus.setText(event.text);\t", "-\t\t\t}", "-\t\t});", "-\t\tif (parent instanceof Shell) {", "-\t\t\tfinal Shell shell = (Shell)parent;", "-\t\titemBack.addListener(SWT.Selection, listener);", "-\t\titemForward.addListener(SWT.Selection, listener);", "-\t\titemStop.addListener(SWT.Selection, listener);", "-\t\titemRefresh.addListener(SWT.Selection, listener);", "-\t\titemGo.addListener(SWT.Selection, listener);", "-\t\tlocation.addListener(SWT.DefaultSelection, new Listener() {", "-\t\t\tpublic void handleEvent(Event e) {", "-\t\t\t\tbrowser.setUrl(location.getText());", "-\t\t});", "-\t\t", "-\t\tinitialize(display, browser);", "-\t\tbrowser.setUrl(getResourceString(\"Startup\"));", "-}"]}], "num": 16361}