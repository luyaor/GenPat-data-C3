{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa39f9808c846a73aae7fbe9fd785ea9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62fe85d47a21d4c27ccb9bed4e7a6626", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/ImageTransfer.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tint /*long*/ hMem = stgmedium.unionField;", "+\tlong /*int*/ hMem = stgmedium.unionField;", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tlong /*int*/ ptr = OS.GlobalLock(hMem);", "-\t\t\tint /*long*/[] pBits = new int /*long*/[1]; ", "-\t\t\tint /*long*/ memDib = OS.CreateDIBSection(0, ptr, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\t\t\tlong /*int*/[] pBits = new long /*int*/[1]; ", "+\t\t\tlong /*int*/ memDib = OS.CreateDIBSection(0, ptr, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\t\t\tint /*long*/ bits = ptr + bmiHeader.biSize;", "+\t\t\tlong /*int*/ bits = ptr + bmiHeader.biSize;", "-\t\t\t\tint /*long*/ pDestBits = pBits[0];", "-\t\t\t\tint /*long*/ pSourceBits = bits + scanline * (biHeight - 1);", "+\t\t\t\tlong /*int*/ pDestBits = pBits[0];", "+\t\t\t\tlong /*int*/ pSourceBits = bits + scanline * (biHeight - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119aa5a03da36dac1ed9f89dbeae063f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " int createDIBFromDDB(int hDC, int hBitmap, int width, int height)", "signatureAfterChange": " long createDIBFromDDB(long hDC, long hBitmap, int width, int height)", "diff": ["-int /*long*/ createDIBFromDDB(int /*long*/ hDC, int /*long*/ hBitmap, int width, int height) {", "+long /*int*/ createDIBFromDDB(long /*int*/ hDC, long /*int*/ hBitmap, int width, int height) {", "-\tint /*long*/[] pBits = new int /*long*/[1];", "-\tint /*long*/ hDib = OS.CreateDIBSection(0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\tlong /*int*/[] pBits = new long /*int*/[1];", "+\tlong /*int*/ hDib = OS.CreateDIBSection(0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\tint /*long*/ hdcSource = OS.CreateCompatibleDC(hDC);", "-\tint /*long*/ hdcDest = OS.CreateCompatibleDC(hDC);", "-\tint /*long*/ hOldSrc = OS.SelectObject(hdcSource, hBitmap);", "-\tint /*long*/ hOldDest = OS.SelectObject(hdcDest, hDib);", "+\tlong /*int*/ hdcSource = OS.CreateCompatibleDC(hDC);", "+\tlong /*int*/ hdcDest = OS.CreateCompatibleDC(hDC);", "+\tlong /*int*/ hOldSrc = OS.SelectObject(hdcSource, hBitmap);", "+\tlong /*int*/ hOldDest = OS.SelectObject(hdcDest, hDib);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c875b4598dd3fa3c624ad27db15cc63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/ImageList.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int createMask (int hBitmap, int destWidth, int destHeight, int background, int transparentPixel)", "signatureAfterChange": "  long createMask (long hBitmap, int destWidth, int destHeight, int background, int transparentPixel)", "diff": ["-int /*long*/ createMask (int /*long*/ hBitmap, int destWidth, int destHeight, int background, int transparentPixel) {", "+long /*int*/ createMask (long /*int*/ hBitmap, int destWidth, int destHeight, int background, int transparentPixel) {", "-\tint /*long*/ hMask = OS.CreateBitmap (destWidth, destHeight, 1, 1, null);", "-\tint /*long*/ hDC = OS.GetDC (0);", "-\tint /*long*/ hdc1 = OS.CreateCompatibleDC (hDC);", "+\tlong /*int*/ hMask = OS.CreateBitmap (destWidth, destHeight, 1, 1, null);", "+\tlong /*int*/ hDC = OS.GetDC (0);", "+\tlong /*int*/ hdc1 = OS.CreateCompatibleDC (hDC);", "-\t\tint /*long*/ hdc2 = OS.CreateCompatibleDC (hDC);", "+\t\tlong /*int*/ hdc2 = OS.CreateCompatibleDC (hDC);", "-\t\tint /*long*/ hOldBitmap = OS.SelectObject (hdc1, hMask);", "+\t\tlong /*int*/ hOldBitmap = OS.SelectObject (hdc1, hMask);"]}], "num": 2602}