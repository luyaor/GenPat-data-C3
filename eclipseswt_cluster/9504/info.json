{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c1913ab78b5d8f831d3942a967ffed8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd5cb8935db7188e4d9abf0618524b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 20, "signatureBeforeChange": " void drawSelectionFocus(TableItem item, GC gc)", "signatureAfterChange": " Image getCheckmarkImage ()", "diff": ["- */", "-void drawSelectionFocus(TableItem item, GC gc) {", "-\tPoint extent = item.getSelectionExtent();", "-\tPoint position = new Point(", "-\t\titem.getImageStopX(TableColumn.FIRST) + getHorizontalOffset(),", "-\t\tgetRedrawY(item));", "-", "-\tgc.drawFocus(position.x, position.y, extent.x, extent.y);", "+Image getCheckmarkImage () {", "+\treturn (Image) display.getData (ID_CHECKMARK);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd736d3e2e4aa7d007ff55d75e84257", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "852f17f3e885ddde267886a8be3483ac6f27465d", "commitAfterChange": "3cdae47da159662ce7eb57e9a6b0f13f94eaec5c", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  public String getText ()", "signatureAfterChange": "  public String getText ()", "diff": ["-\tif (!IsPre_2) {", "-\t\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = window.GetDocument (result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\twindow.Release ();", "-\t} else {", "-\t\tnsIDOMWindow_1_9 window = new nsIDOMWindow_1_9 (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = window.GetDocument (result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\twindow.Release ();", "-\t}", "+\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "+\tresult[0] = 0;", "+\trc = window.GetDocument (result);", "+\tif (rc != XPCOM.NS_OK) error (rc);", "+\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\twindow.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1af9c92b874b8cc77ff482a75c43310", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptDialog.java", "commitBeforeChange": "852f17f3e885ddde267886a8be3483ac6f27465d", "commitAfterChange": "3cdae47da159662ce7eb57e9a6b0f13f94eaec5c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tboolean invalidCert(final Browser browser, String message, String[] problems, final nsIX509Cert cert)", "signatureAfterChange": "  \tboolean invalidCert(final Browser browser, String message, String[] problems, final nsIX509Cert cert)", "diff": ["-\t\t\t\tif (Mozilla.IsPre_2) {", "-\t\t\t\t\tnsIDOMWindow_1_9 window = new nsIDOMWindow_1_9(result[0]);", "-\t\t\t\t\trc = dialogs.ViewCert(window.getAddress(), cert.getAddress());", "-\t\t\t\t\tbrowser.getDisplay().timerExec(-1, runnable);", "-\t\t\t\t\twindow.Release();", "-\t\t\t\t} else {", "-\t\t\t\t\tnsIDOMWindow window = new nsIDOMWindow(result[0]);", "-\t\t\t\t\trc = dialogs.ViewCert(window.getAddress(), cert.getAddress());", "-\t\t\t\t\tbrowser.getDisplay().timerExec(-1, runnable);", "-\t\t\t\t\twindow.Release();", "-\t\t\t\t}", "+\t\t\t\tnsIDOMWindow window = new nsIDOMWindow(result[0]);", "+\t\t\t\trc = dialogs.ViewCert(window.getAddress(), cert.getAddress());", "+\t\t\t\tbrowser.getDisplay().timerExec(-1, runnable);", "+\t\t\t\twindow.Release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51fff37c71f896d0723dfe95f026516", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "ca611642fc41807588637202b032414f273f2b1e", "commitAfterChange": "7f6898e7f25aa3abfc9d050db6890b8da8096e1f", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": " private void allocSelectionHighlightGradientColors()", "signatureAfterChange": " void createSelectionHighlightGradientColors(Color start)", "diff": ["-private void allocSelectionHighlightGradientColors() {", "-\tdeallocSelectionHighlightGradientColors(); //dealloc if existing", "+void createSelectionHighlightGradientColors(Color start) {", "+\tdisposeSelectionHighlightGradientColors(); //dispose if existing", "-\t//don't bother on low colour", "-\tif (getDisplay().getDepth() < 15)", "+\tif(start == null)  //shouldn't happen but just to be safe", "-\tColor white = getDisplay().getSystemColor(SWT.COLOR_WHITE);", "-\tRGB backgroundBegin = getSelectionBackgroundGradientBegin().getRGB();", "+\tRGB from = start.getRGB();", "-\t//if start = end then don't bother", "-\tif(backgroundBegin.equals(to))", "-\t\treturn;", "-\t", "-\t//from is 50/50 white/backgroundBegin so doesn't stand out too much", "-\tRGB from = blend(white.getRGB(), backgroundBegin);", "-", "-\tselectionHighlightGradientColors = new Color[fadeGradientSize];", "+\tselectionHighlightGradientColorsCache = new Color[fadeGradientSize];", "+\tint denom = fadeGradientSize - 1;", "-\t\tint denom = fadeGradientSize;", "-\t\tint propFrom = fadeGradientSize - i;", "+\t\tint propFrom = denom - i;", "-\t\tselectionHighlightGradientColors[i] = new Color(getDisplay(), red, green, blue);", "+\t\tselectionHighlightGradientColorsCache[i] = new Color(getDisplay(), red, green, blue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebcaa1d317b8d7c871e871b653290fec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "05d0d857784c80a8b2ad5f7344c46e596f376ce3", "commitAfterChange": "06b62e70b84eda072912e544d01a41cadd073519", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\t", "-\tif (items.length == 0) {", "-\t\tif ((getStyle() & SWT.NO_BACKGROUND) != 0) {", "-\t\t\tPoint size = getSize();\t", "-\t\t\tgc.setBackground(getParent().getBackground());", "-\t\t\tgc.fillRectangle(0, 0, size.x, size.y);", "-\t\t\tgc.setBackground(gcBackground);", "-\t\t}", "-\t\treturn;", "-\t}", "-\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "effce134b6de75106fa282a1197b53f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "5689d8e849bba9fa425a7586a442195ae623d46c", "commitAfterChange": "47f1fc633e8f61df985d0a9b94a145703550a39b", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void setImage (int columnIndex, Image value)", "signatureAfterChange": " public void setImage (int columnIndex, Image value)", "diff": ["-\t\terror(SWT.ERROR_INVALID_ARGUMENT);", "+\t\terror (SWT.ERROR_INVALID_ARGUMENT);", "-\tif (images.length < columnIndex + 1) {", "-\t\tif (value == null) return;\t/* replacing a null with a null */", "-\t\tImage[] newImages = new Image[columnIndex + 1];", "-\t\tSystem.arraycopy (images, 0, newImages, 0, images.length);", "-\t\timages = newImages;", "-\t} else {", "-\t\tImage current = internalGetImage (columnIndex);", "-\t\tif (current == value) return;\t\t\t\t/* same value */", "-\t\tif (current != null && current.equals (value)) return;", "+\tif (value == images [columnIndex]) return;", "+\tif (value != null && value.equals (images [columnIndex])) return;", "+\timages [columnIndex] = value;", "+\tif (value == null) {", "+\t\tredrawItem ();", "+\t\treturn;", "-\timages[columnIndex] = value;", "-\t\tparent.setImageHeight (value.getBounds().height);", "+\t\tparent.setImageHeight (value.getBounds ().height);"]}], "num": 9504}