{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b07a8495fd288a13bc1e2a26066de90", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813ab924cd4e1ef925c6856390b579d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "810eb254cbe71a3e1637e56f044fa70b981eb39d", "commitAfterChange": "803bd538f4c4c40e1d60df10cb6937bfea9dab26", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 61, "signatureBeforeChange": " void onMouse(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-\t\t\tif (minImageState != NORMAL) {", "-\t\t\t\tminImageState = NORMAL;", "+\t\t\tif (minImageState != SWT.NONE) {", "+\t\t\t\tminImageState = SWT.NONE;", "-\t\t\tif (maxImageState != NORMAL) {", "-\t\t\t\tmaxImageState = NORMAL;", "+\t\t\tif (maxImageState != SWT.NONE) {", "+\t\t\t\tmaxImageState = SWT.NONE;", "-\t\t\tif (chevronImageState != NORMAL) {", "-\t\t\t\tchevronImageState = NORMAL;", "+\t\t\tif (chevronImageState != SWT.NONE) {", "+\t\t\t\tchevronImageState = SWT.NONE;", "-\t\t\t\tif (i != selectedIndex && item.closeImageState != NONE) {", "-\t\t\t\t\titem.closeImageState = NONE;", "+\t\t\t\tif (i != selectedIndex && item.closeImageState != SWT.BACKGROUND) {", "+\t\t\t\t\titem.closeImageState = SWT.BACKGROUND;", "-\t\t\t\tif (i == selectedIndex && item.closeImageState != NORMAL) {", "-\t\t\t\t\titem.closeImageState = NORMAL;", "+\t\t\t\tif (i == selectedIndex && item.closeImageState != SWT.NONE) {", "+\t\t\t\t\titem.closeImageState = SWT.NONE;", "-\t\t\t\tminImageState = SELECTED;", "+\t\t\t\tminImageState = SWT.SELECTED;", "-\t\t\t\tmaxImageState = SELECTED;", "+\t\t\t\tmaxImageState = SWT.SELECTED;", "-\t\t\t\tif (chevronImageState != HOT) {", "-\t\t\t\t\tchevronImageState = HOT;", "+\t\t\t\tif (chevronImageState != SWT.HOT) {", "+\t\t\t\t\tchevronImageState = SWT.HOT;", "-\t\t\t\t\tchevronImageState = SELECTED;", "+\t\t\t\t\tchevronImageState = SWT.SELECTED;", "-\t\t\t\t\titem.closeImageState = SELECTED;", "+\t\t\t\t\titem.closeImageState = SWT.SELECTED;", "-\t\t\t\tif (minImageState != SELECTED && minImageState != HOT) {", "-\t\t\t\t\tminImageState = HOT;", "+\t\t\t\tif (minImageState != SWT.SELECTED && minImageState != SWT.HOT) {", "+\t\t\t\t\tminImageState = SWT.HOT;", "-\t\t\t\tif (maxImageState != SELECTED && maxImageState != HOT) {", "-\t\t\t\t\tmaxImageState = HOT;", "+\t\t\t\tif (maxImageState != SWT.SELECTED && maxImageState != SWT.HOT) {", "+\t\t\t\t\tmaxImageState = SWT.HOT;", "-\t\t\t\tif (chevronImageState != SELECTED && chevronImageState != HOT) {", "-\t\t\t\t\tchevronImageState = HOT;", "+\t\t\t\tif (chevronImageState != SWT.SELECTED && chevronImageState != SWT.HOT) {", "+\t\t\t\t\tchevronImageState = SWT.HOT;", "-\t\t\tif (minImageState != NORMAL && !minimize) {", "-\t\t\t\tminImageState = NORMAL;", "+\t\t\tif (minImageState != SWT.NONE && !minimize) {", "+\t\t\t\tminImageState = SWT.NONE;", "-\t\t\tif (maxImageState != NORMAL && !maximize) {", "-\t\t\t\tmaxImageState = NORMAL;", "+\t\t\tif (maxImageState != SWT.NONE && !maximize) {", "+\t\t\t\tmaxImageState = SWT.NONE;", "-\t\t\tif (chevronImageState != NORMAL && !chevron) {", "-\t\t\t\tchevronImageState = NORMAL;", "+\t\t\tif (chevronImageState != SWT.NONE && !chevron) {", "+\t\t\t\tchevronImageState = SWT.NONE;", "-\t\t\t\t\t\tif (item.closeImageState != SELECTED && item.closeImageState != HOT) {", "-\t\t\t\t\t\t\titem.closeImageState = HOT;", "+\t\t\t\t\t\tif (item.closeImageState != SWT.SELECTED && item.closeImageState != SWT.HOT) {", "+\t\t\t\t\t\t\titem.closeImageState = SWT.HOT;", "-\t\t\t\t\t\tif (item.closeImageState != NORMAL) {", "-\t\t\t\t\t\t\titem.closeImageState = NORMAL;", "+\t\t\t\t\t\tif (item.closeImageState != SWT.NONE) {", "+\t\t\t\t\t\t\titem.closeImageState = SWT.NONE;", "-\t\t\t\tif (i != selectedIndex && item.closeImageState != NONE && !close) {", "-\t\t\t\t\titem.closeImageState = NONE;", "+\t\t\t\tif (i != selectedIndex && item.closeImageState != SWT.BACKGROUND && !close) {", "+\t\t\t\t\titem.closeImageState = SWT.BACKGROUND;", "-\t\t\t\tif (i == selectedIndex && item.closeImageState != NORMAL && !close) {", "-\t\t\t\t\titem.closeImageState = NORMAL;", "+\t\t\t\tif (i == selectedIndex && item.closeImageState != SWT.NONE && !close) {", "+\t\t\t\t\titem.closeImageState = SWT.NONE;", "-\t\t\t\tboolean selected = chevronImageState == SELECTED;", "+\t\t\t\tboolean selected = chevronImageState == SWT.SELECTED;", "-\t\t\t\tboolean selected = minImageState == SELECTED;", "-\t\t\t\tminImageState = HOT;", "+\t\t\t\tboolean selected = minImageState == SWT.SELECTED;", "+\t\t\t\tminImageState = SWT.HOT;", "-\t\t\t\tboolean selected = maxImageState == SELECTED;", "-\t\t\t\tmaxImageState = HOT;", "+\t\t\t\tboolean selected = maxImageState == SWT.SELECTED;", "+\t\t\t\tmaxImageState = SWT.HOT;", "-\t\t\t\t\tboolean selected = item.closeImageState == SELECTED;", "-\t\t\t\t\titem.closeImageState = HOT;", "+\t\t\t\t\tboolean selected = item.closeImageState == SWT.SELECTED;", "+\t\t\t\t\titem.closeImageState = SWT.HOT;", "-\t\t\t\t\t\t\t\tif (nextItem.closeImageState != SELECTED && nextItem.closeImageState != HOT) {", "-\t\t\t\t\t\t\t\t\tnextItem.closeImageState = HOT;", "+\t\t\t\t\t\t\t\tif (nextItem.closeImageState != SWT.SELECTED && nextItem.closeImageState != SWT.HOT) {", "+\t\t\t\t\t\t\t\t\tnextItem.closeImageState = SWT.HOT;", "-\t\t\t\t\t\t\t\tif (nextItem.closeImageState != NORMAL) {", "-\t\t\t\t\t\t\t\t\tnextItem.closeImageState = NORMAL;", "+\t\t\t\t\t\t\t\tif (nextItem.closeImageState != SWT.NONE) {", "+\t\t\t\t\t\t\t\t\tnextItem.closeImageState = SWT.NONE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7f185d115775fc5503529d3734cc78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "82faecf1f2984afac33e97f949b0dc3c26cac05d", "commitAfterChange": "b0c7af088efc6ba82eb28695daa107df5d61cc2f", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 54, "signatureBeforeChange": " void onMouseUp(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-void onMouseUp(Event event) {", "-\tif (event.button != 1) return;", "+void onMouse(Event event) {", "-\tif (closeRect.contains(x, y)) {", "-\t\tcloseImageState = HOT;", "-\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "-\t\tif (selectedIndex == -1) return;", "-\t\tCTabItem2 item = items[selectedIndex];", "-\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\te.widget = this;", "-\t\te.time = event.time;", "-\t\te.item = item;", "-\t\te.doit = true;", "-\t\tfor (int i = 0; i < closeListeners.length; i++) {", "-\t\t\tcloseListeners[i].itemClosed(e);", "-\t\t}", "-\t\tif (e.doit) item.dispose();", "-\t\treturn;", "-\t}", "-\tif (chevronRect.contains(x, y)) {", "-\t\tchevronImageState = HOT;", "-\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\tRectangle rect = new Rectangle(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height);", "-\t\tif (listListeners.length == 0) {", "-\t\t\tshowList(rect, SWT.LEFT);", "-\t\t} else {", "-\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\te.widget = this;", "-\t\t\te.time = event.time;", "-\t\t\te.rect = rect;", "-\t\t\t", "-\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\tlistListeners[i].showList(e);", "+\tswitch (event.type) {", "+\t\tcase SWT.MouseExit: {", "+\t\t\tif (closeImageState != NORMAL) {", "+\t\t\t\tcloseImageState = NORMAL;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "-\t\t}", "-\t\treturn;", "-\t}", "-\tif (expandRect.contains(x, y)) {", "-\t\texpandImageState = HOT;", "-\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\te.widget = this;", "-\t\te.time = event.time;", "-\t\te.doit = true;", "-\t\tfor (int i = 0; i < expandListeners.length; i++) {", "-\t\t\tif (expanded) {", "-\t\t\t\texpandListeners[i].collapse(e);", "-\t\t\t} else {", "-\t\t\t\texpandListeners[i].expand(e);", "+\t\t\tif (expandImageState != NORMAL) {", "+\t\t\t\texpandImageState = NORMAL;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\tif (chevronImageState != NORMAL) {", "+\t\t\t\tchevronImageState = NORMAL;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t}", "+\t\t\tbreak;", "-\t\tif (e.doit) {", "-\t\t\texpanded = !expanded;", "+\t\tcase SWT.MouseDown: {", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\tcloseImageState = SELECTED;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t} ", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\texpandImageState = SELECTED;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tif (event.button != 1) return;", "+\t\t\t\tchevronImageState = SELECTED;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\tupdate();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tif (items[i].getBounds().contains(x, y)) {", "+\t\t\t\t\tif (i == selectedIndex) {", "+\t\t\t\t\t\tshowSelection();", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\tsetSelection(i, true);", "+\t\t\t\t\tsetFocus();", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "-\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "-\t\treturn;", "-\t}", "-\tif (single && items.length > 1) {", "-\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\tRectangle bounds = items[i].getBounds();", "-\t\t\tif (bounds.contains(x, y)) {", "-\t\t\t\tRectangle rect = new Rectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\tcase SWT.MouseMove: {", "+\t\t\tboolean close = false, expand = false, chevron = false;", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tclose = true;", "+\t\t\t\tif (closeImageState != HOT) {", "+\t\t\t\t\tcloseImageState = HOT;", "+\t\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\t}", "+\t\t\t} ", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\texpand = true;", "+\t\t\t\tif (expandImageState != HOT) {", "+\t\t\t\t\texpandImageState = HOT;", "+\t\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tchevron = true;", "+\t\t\t\tif (chevronImageState != HOT) {", "+\t\t\t\t\tchevronImageState = HOT;", "+\t\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (closeImageState == HOT && !close) {", "+\t\t\t\tcloseImageState = NORMAL;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t}", "+\t\t\tif (expandImageState == HOT && !expand) {", "+\t\t\t\texpandImageState = NORMAL;", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t}", "+\t\t\tif (chevronImageState == HOT && !chevron) {", "+\t\t\t\tchevronImageState = NORMAL;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseUp: {", "+\t\t\tif (event.button != 1) return;", "+\t\t\tif (closeRect.contains(x, y)) {", "+\t\t\t\tcloseImageState = HOT;", "+\t\t\t\tredraw(closeRect.x, closeRect.y, closeRect.width, closeRect.height, false);", "+\t\t\t\tif (selectedIndex == -1) return;", "+\t\t\t\tCTabItem2 item = items[selectedIndex];", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.item = item;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < closeListeners.length; i++) {", "+\t\t\t\t\tcloseListeners[i].itemClosed(e);", "+\t\t\t\t}", "+\t\t\t\tif (e.doit) item.dispose();", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (chevronRect.contains(x, y)) {", "+\t\t\t\tchevronImageState = HOT;", "+\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "+\t\t\t\tRectangle rect = new Rectangle(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height);", "-\t\t\t\t\tshowList(rect, SWT.RIGHT);", "+\t\t\t\t\tshowList(rect, SWT.LEFT);", "-\t\t\t\t\tfor (int j = 0; j < listListeners.length; j++) {", "-\t\t\t\t\t\tlistListeners[j].showList(e);", "+\t\t\t\t\t", "+\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "+\t\t\t\t\t\tlistListeners[i].showList(e);", "+\t\t\tif (expandRect.contains(x, y)) {", "+\t\t\t\texpandImageState = HOT;", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < expandListeners.length; i++) {", "+\t\t\t\t\tif (expanded) {", "+\t\t\t\t\t\texpandListeners[i].collapse(e);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\texpandListeners[i].expand(e);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (e.doit) {", "+\t\t\t\t\texpanded = !expanded;", "+\t\t\t\t}", "+\t\t\t\tredraw(expandRect.x, expandRect.y, expandRect.width, expandRect.height, false);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (single && items.length > 1) {", "+\t\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\t\tRectangle bounds = items[i].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)) {", "+\t\t\t\t\t\tRectangle rect = new Rectangle(bounds.x, bounds.y, bounds.width, bounds.height);", "+\t\t\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\t\t\t\tshowList(rect, SWT.RIGHT);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\t\t\t\te.widget = this;", "+\t\t\t\t\t\t\te.time = event.time;", "+\t\t\t\t\t\t\te.rect = rect;", "+\t\t\t\t\t\t\tfor (int j = 0; j < listListeners.length; j++) {", "+\t\t\t\t\t\t\t\tlistListeners[j].showList(e);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d7694f8e092170df36cc36e9c4ce841", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "021c9ffb1f03bab865a8755698d6a0a3d739b6cc", "commitAfterChange": "a22dc50286ff5b97c74cd0b12653f08fe95a1ee7", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 71, "signatureBeforeChange": " void onMouse(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["+\tif( isDisposed() ) {", "+\t\treturn;", "+\t}", "-\t\t\tif (minImageState != SWT.NONE) {", "-\t\t\t\tminImageState = SWT.NONE;", "-\t\t\t\tredraw(minRect.x, minRect.y, minRect.width, minRect.height, false);", "-\t\t\t}", "-\t\t\tif (maxImageState != SWT.NONE) {", "-\t\t\t\tmaxImageState = SWT.NONE;", "-\t\t\t\tredraw(maxRect.x, maxRect.y, maxRect.width, maxRect.height, false);", "-\t\t\t}", "-\t\t\tif (chevronImageState != SWT.NONE) {", "-\t\t\t\tchevronImageState = SWT.NONE;", "-\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\t\t}", "+\t\tcase SWT.MouseHover:", "+\t\t\tif (hoverTb && hoverRect.contains(x, y) && !hovering) {", "+\t\t\t\thovering = true;", "+\t\t\t\tupdateItems();", "+\t\t\t\thoverTimerRunning = true;", "+\t\t\t\tevent.display.timerExec(2000, new Runnable() {", "+\t\t\t\t\tpublic void run() {", "+\t\t\t\t\t\tif (isDisposed()) return;", "+\t\t\t\t\t\tif (hovering) {", "+\t\t\t\t\t\t\tDisplay display = getDisplay();", "+\t\t\t\t\t\t\tControl c = display.getCursorControl();", "+\t\t\t\t\t\t\tboolean reschedule = false;", "+\t\t\t\t\t\t\tif (c != null) {", "+\t\t\t\t\t\t\t\tfor (int i = 0; i < controls.length; i++) {", "+\t\t\t\t\t\t\t\t\tControl temp = c;", "+\t\t\t\t\t\t\t\t\tdo {", "+\t\t\t\t\t\t\t\t\t\tif (temp.equals(controls[i])) {", "+\t\t\t\t\t\t\t\t\t\t\treschedule = true;", "+\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\ttemp = temp.getParent();", "+\t\t\t\t\t\t\t\t\t\t\tif (temp == null || temp.equals(CTabFolder.this)) break;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t} while (!reschedule);", "+\t\t\t\t\t\t\t\t\tif (reschedule) break;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (reschedule && hoverTimerRunning) {", "+\t\t\t\t\t\t\t\tdisplay.timerExec(2000, this);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\thovering = false;", "+\t\t\t\t\t\t\t\tupdateItems();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\treturn;", "+\t\t\t}", "-\t\t\tif (minRect.contains(x, y)) {", "-\t\t\t\tminImageState = SWT.SELECTED;", "-\t\t\t\tredraw(minRect.x, minRect.y, minRect.width, minRect.height, false);", "-\t\t\t\tupdate();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (maxRect.contains(x, y)) {", "-\t\t\t\tmaxImageState = SWT.SELECTED;", "-\t\t\t\tredraw(maxRect.x, maxRect.y, maxRect.width, maxRect.height, false);", "-\t\t\t\tupdate();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (chevronRect.contains(x, y)) {", "-\t\t\t\tif (chevronImageState != SWT.HOT) {", "-\t\t\t\t\tchevronImageState = SWT.HOT;", "-\t\t\t\t} else {", "-\t\t\t\t\tchevronImageState = SWT.SELECTED;", "-\t\t\t\t}", "-\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\t\t\tupdate();", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tboolean close = false, minimize = false, maximize = false, chevron = false;", "-\t\t\tif (minRect.contains(x, y)) {", "-\t\t\t\tminimize = true;", "-\t\t\t\tif (minImageState != SWT.SELECTED && minImageState != SWT.HOT) {", "-\t\t\t\t\tminImageState = SWT.HOT;", "-\t\t\t\t\tredraw(minRect.x, minRect.y, minRect.width, minRect.height, false);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (maxRect.contains(x, y)) {", "-\t\t\t\tmaximize = true;", "-\t\t\t\tif (maxImageState != SWT.SELECTED && maxImageState != SWT.HOT) {", "-\t\t\t\t\tmaxImageState = SWT.HOT;", "-\t\t\t\t\tredraw(maxRect.x, maxRect.y, maxRect.width, maxRect.height, false);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (chevronRect.contains(x, y)) {", "-\t\t\t\tchevron = true;", "-\t\t\t\tif (chevronImageState != SWT.SELECTED && chevronImageState != SWT.HOT) {", "-\t\t\t\t\tchevronImageState = SWT.HOT;", "-\t\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (minImageState != SWT.NONE && !minimize) {", "-\t\t\t\tminImageState = SWT.NONE;", "-\t\t\t\tredraw(minRect.x, minRect.y, minRect.width, minRect.height, false);", "-\t\t\t}", "-\t\t\tif (maxImageState != SWT.NONE && !maximize) {", "-\t\t\t\tmaxImageState = SWT.NONE;", "-\t\t\t\tredraw(maxRect.x, maxRect.y, maxRect.width, maxRect.height, false);", "-\t\t\t}", "-\t\t\tif (chevronImageState != SWT.NONE && !chevron) {", "-\t\t\t\tchevronImageState = SWT.NONE;", "-\t\t\t\tredraw(chevronRect.x, chevronRect.y, chevronRect.width, chevronRect.height, false);", "-\t\t\t}", "+\t\t\tboolean close = false;", "-\t\t\tif (chevronRect.contains(x, y)) {", "-\t\t\t\tboolean selected = chevronImageState == SWT.SELECTED;", "-\t\t\t\tif (!selected) return;", "-\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\te.widget = this;", "-\t\t\t\te.time = event.time;", "-\t\t\t\te.x = chevronRect.x;", "-\t\t\t\te.y = chevronRect.y;", "-\t\t\t\te.width = chevronRect.width;", "-\t\t\t\te.height = chevronRect.height;", "-\t\t\t\te.doit = true;", "-\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\tfolderListeners[i].showList(e);", "-\t\t\t\t}", "-\t\t\t\tif (e.doit && !isDisposed()) {", "-\t\t\t\t\tshowList(chevronRect);", "-\t\t\t\t}", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (minRect.contains(x, y)) {", "-\t\t\t\tboolean selected = minImageState == SWT.SELECTED;", "-\t\t\t\tminImageState = SWT.HOT;", "-\t\t\t\tredraw(minRect.x, minRect.y, minRect.width, minRect.height, false);", "-\t\t\t\tif (!selected) return;", "-\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\te.widget = this;", "-\t\t\t\te.time = event.time;", "-\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\tif (minimized) {", "-\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfolderListeners[i].minimize(e);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tif (maxRect.contains(x, y)) {", "-\t\t\t\tboolean selected = maxImageState == SWT.SELECTED;", "-\t\t\t\tmaxImageState = SWT.HOT;", "-\t\t\t\tredraw(maxRect.x, maxRect.y, maxRect.width, maxRect.height, false);", "-\t\t\t\tif (!selected) return;", "-\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\te.widget = this;", "-\t\t\t\te.time = event.time;", "-\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\tif (maximized) {", "-\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfolderListeners[i].maximize(e);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\treturn;", "-\t\t\t}"]}], "num": 54114}