{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "827e622e25ab0977712b832bdb66088a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c70ac13f8de8aff4f148c9bc12a4596", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "73df461e04188c5c8c9f867e48d65971dd874f96", "commitAfterChange": "f60b89c008aac38616733831910806211a6fecc1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t//TODO - add CHECK column + extra space", "-\t\t\t\tImage image = item.getImage (j);", "-\t\t\t\tString text = item.getText (j);", "-\t\t\t\tint itemWidth = 0;", "-\t\t\t\tif (image != null) itemWidth = image.getBounds ().width + 2;", "-\t\t\t\tif (text != null && text.length () > 0) itemWidth += gc.stringExtent (text).x;", "-\t\t\t\tcolumnWidth = Math.max (columnWidth, itemWidth);", "+\t\t\t\tcolumnWidth = Math.max (columnWidth, item.calculateWidth (j, gc));", "-\t\t\twidth += columnWidth + 20;", "+\t\t\twidth += columnWidth + EXTRA_WIDTH;", "-\t\tif ((style & SWT.CHECK) != 0) width += 35 + 20;", "+\t\tif ((style & SWT.CHECK) != 0) width += CHECK_COLUMN_WIDTH + EXTRA_WIDTH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61168ce2dac0038be64342939404f287", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "73df461e04188c5c8c9f867e48d65971dd874f96", "commitAfterChange": "f60b89c008aac38616733831910806211a6fecc1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t//TODO - add CHECK column + extra space", "-\t\t\tImage image = item.getImage ();", "-\t\t\tString text = item.getText ();", "-\t\t\tint itemWidth = 0;", "-\t\t\tif (image != null) itemWidth = image.getBounds ().width + 2;", "-\t\t\tif (text != null && text.length () > 0) itemWidth += gc.stringExtent (text).x;", "-\t\t\twidth = Math.max (width, itemWidth);", "+\t\t\twidth = Math.max (width, item.calculateWidth (gc));", "-\t\twidth += 20;", "-\t\tif ((style & SWT.CHECK) != 0) width += 35 + 20;", "+\t\twidth += EXTRA_WIDTH;", "+\t\tif ((style & SWT.CHECK) != 0) width += CHECK_COLUMN_WIDTH + EXTRA_WIDTH;"]}], "num": 4570}