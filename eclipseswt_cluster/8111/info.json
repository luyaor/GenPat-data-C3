{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0414181e8f37753ddf5d5dd0cbdd41e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98869c387ac3f48182c7a4199378845d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "83e1dac1af837594e187e72e8d4c2cd60386743f", "commitAfterChange": "aba5823d7335842a1956cc66c799c92c1aafef99", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setSelection (TreeItem [] items)", "signatureAfterChange": " public void setSelection (TreeItem [] items)", "diff": ["-\tint hNewItem = 0;", "+\t", "-\t\thAnchor = hNewItem = item.handle;", "+\t\tint hNewItem = hAnchor = item.handle;", "+\t\t", "+\t\t/*", "+\t\t* Bug in Windows.  When TVM_SELECTITEM is used to ensure", "+\t\t* that an item is visible and the client area of the tree is", "+\t\t* smaller that the size of one item, TVM_SELECTITEM makes", "+\t\t* the next item in the tree visible by making it the top item", "+\t\t* instead of making the desired item visible.  The fix is to", "+\t\t* detect the case when the client area is too small and make", "+\t\t* the desired visible item be the top item in the tree.", "+\t\t*/", "+\t\tboolean fixScroll = checkScroll (hNewItem);", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tignoreSelect = true;", "+\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "+\t\tignoreSelect = false;", "+\t\tif (OS.SendMessage (handle, OS.TVM_GETVISIBLECOUNT, 0, 0) == 0) {", "+\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hNewItem);", "+\t\t}", "+\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t", "+\t\t/*", "+\t\t* Feature in Windows.  When the old and new focused item", "+\t\t* are the same, Windows does not check to make sure that", "+\t\t* the item is actually selected, not just focused.  The", "+\t\t* fix is to force the item to draw selected by setting", "+\t\t* the state mask.", "+\t\t*/", "+\t\tif (hOldItem == hNewItem) {", "+\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\ttvItem.mask = OS.TVIF_STATE;", "+\t\t\ttvItem.state = OS.TVIS_SELECTED;", "+\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\t\ttvItem.hItem = hNewItem;", "+\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t\t}", "-\tboolean fixScroll = hNewItem != 0 && checkScroll (hNewItem);", "-\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\tignoreSelect = true;", "-\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "-\tignoreSelect = false;", "-\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t/*", "-\t* Feature in Windows.  When the old and new focused item", "-\t* are the same, Windows does not check to make sure that", "-\t* the item is actually selected, not just focused.  The", "-\t* fix is to force the item to draw selected by setting", "-\t* the state mask.", "-\t*/", "-\tif (hOldItem == hNewItem) {", "-\t\tTVITEM tvItem = new TVITEM ();", "-\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\ttvItem.state = OS.TVIS_SELECTED;", "-\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "-\t\ttvItem.hItem = hNewItem;", "-\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-\t}", "-\tfixPinheadScroll (hNewItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e64ddae7b52e117e07c2a9e2bca97d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "15c2dea26916c6a6539651ad444d7ff7ce5bba20", "commitAfterChange": "ab2a9208d3c88cfb973ca7bcdf7add1d1aeac1ce", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void setSelection (TreeItem [] items)", "signatureAfterChange": " public void setSelection (TreeItem [] items)", "diff": ["-\tif ((style & SWT.SINGLE) != 0 && items.length > 1) {", "+\tint length = items.length;", "+\tif (length == 0) {", "+\t\tdeselectAll();", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0 && length > 1) {", "-\tif (items.length == 0) {", "-\t\tif (hOldItem != 0) {", "-\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "-\t\t\ttvItem.hItem = hOldItem;", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-\t\t}", "-\t} else {", "-\t\tint hNewItem = 0;", "-\t\tTreeItem item = items [0];", "-\t\tif (item != null) {", "-\t\t\tif (item.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\thAnchor = hNewItem = item.handle;", "-\t\t}", "-\t\tignoreSelect = true;", "-\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "-\t\tignoreSelect = false;", "-\t\t/*", "-\t\t* Feature in Windows.  When the old and new focused item", "-\t\t* are the same, Windows does not check to make sure that", "-\t\t* the item is actually selected, not just focused.  The", "-\t\t* fix is to force the item to draw selected by setting", "-\t\t* the state mask.", "-\t\t*/", "-\t\tif (hOldItem == hNewItem) {", "-\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\ttvItem.mask = OS.TVIF_STATE;", "-\t\t\ttvItem.state = OS.TVIS_SELECTED;", "-\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "-\t\t\ttvItem.hItem = hNewItem;", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "-\t\t}", "-\t\tshowItem (hNewItem);", "+\tint hNewItem = 0;", "+\tTreeItem item = items [0];", "+\tif (item != null) {", "+\t\tif (item.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\thAnchor = hNewItem = item.handle;", "+\tignoreSelect = true;", "+\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);", "+\tignoreSelect = false;", "+\t/*", "+\t* Feature in Windows.  When the old and new focused item", "+\t* are the same, Windows does not check to make sure that", "+\t* the item is actually selected, not just focused.  The", "+\t* fix is to force the item to draw selected by setting", "+\t* the state mask.", "+\t*/", "+\tif (hOldItem == hNewItem) {", "+\t\tTVITEM tvItem = new TVITEM ();", "+\t\ttvItem.mask = OS.TVIF_STATE;", "+\t\ttvItem.state = OS.TVIS_SELECTED;", "+\t\ttvItem.stateMask = OS.TVIS_SELECTED;", "+\t\ttvItem.hItem = hNewItem;", "+\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);", "+\t}", "+\tshowItem (hNewItem);", "-\t\tTreeItem item = this.items [i];", "+\t\titem = this.items [i];", "-\t\t\twhile (index < items.length) {", "+\t\t\twhile (index < length) {", "-\t\t\t\tif (index == items.length) {", "+\t\t\t\tif (index == length) {", "-\t\t\t\tif (index != items.length) {", "+\t\t\t\tif (index != length) {"]}], "num": 8111}