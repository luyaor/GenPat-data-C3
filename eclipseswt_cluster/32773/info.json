{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5853a4229bc798f1e89dba09cc43dc64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b915fd54861576bb34806775189f6529", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee7a783083e0c18c9c0e00c3f49a7de5eaa86f7e", "commitAfterChange": "df518e1d40069787b8bec5a1ea6e923fc650b996", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public Shell getActiveShell ()", "signatureAfterChange": " public Shell getActiveShell ()", "diff": ["+\t\t", "+\t\t// Embedded shell test: If the NSWindow isn't an SWTWindow walk up the", "+\t\t// hierarchy from the hit view to see if some view maps to a Shell.", "+\t\tNSPoint windowLocation = window.mouseLocationOutsideOfEventStream();", "+\t\tNSView hitView = window.contentView().hitTest(windowLocation);", "+\t\twhile (hitView != null) {", "+\t\t\twidget = getWidget(hitView.id);", "+\t\t\tif (widget instanceof Shell) {", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\thitView = hitView.superview();", "+\t\t}", "+\t\treturn (Shell)widget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b844ea9ba28306b8c6cd0dd506f6029d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "e2d1a7d7aebda79ac656f9c79dc6c06be5122338", "commitAfterChange": "f109f5f9151efa44aceb0d49f60a7723dce0bf78", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void sendSelection ()", "signatureAfterChange": "  void sendSelection ()", "diff": ["-\tint value = 0;", "-\tif (target != null) {", "-\t\tview.sendAction(actionSelector, target);", "-\t} else {", "-\t\tvalue = getSelection ();", "-\t}", "-\tNSPoint point;", "-\tNSEvent nsEvent = NSApplication.sharedApplication().currentEvent();", "-\tif (nsEvent != null) {", "-\t\tpoint = nsEvent.locationInWindow();", "-\t\tif (nsEvent.window() == null) point = view.window().convertScreenToBase(point);", "-\t} else {", "-\t\tpoint = view.window().mouseLocationOutsideOfEventStream();", "-\t}", "-\tint hitPart = (int)/*64*/((NSScroller)view).testPart(point);", "-\tEvent event = new Event();", "-\tswitch (hitPart) {", "-\t    case OS.NSScrollerDecrementLine:", "-\t        value -= increment;", "-\t        event.detail = SWT.ARROW_UP;", "-\t        break;", "-\t    case OS.NSScrollerDecrementPage:", "-\t        value -= pageIncrement;", "-\t        event.detail = SWT.PAGE_UP;", "-\t        break;", "-\t    case OS.NSScrollerIncrementLine:", "-\t        value += increment;", "-\t        event.detail = SWT.ARROW_DOWN;", "-\t        break;", "-\t    case OS.NSScrollerIncrementPage:", "-\t        value += pageIncrement;", "-\t        event.detail = SWT.PAGE_DOWN;", "-\t        break;", "-\t    case OS.NSScrollerKnob:", "-\t\t\tevent.detail = SWT.DRAG;", "-\t        break;", "-\t}", "-\tif (target == null) {", "-\t\tif (event.detail != SWT.DRAG) {", "-\t\t\tsetSelection(value);", "+\tNSWindow window = view.window ();", "+\tboolean disableFlush = target == null;", "+\ttry {", "+\t\tif (disableFlush) {", "+\t\t\twindow.retain ();", "+\t\t\twindow.disableFlushWindow ();", "+\t\t}", "+\t\tint value = 0;", "+\t\tif (target != null) {", "+\t\t\tview.sendAction(actionSelector, target);", "+\t\t} else {", "+\t\t\tvalue = getSelection ();", "+\t\t}", "+\t\tNSPoint point;", "+\t\tNSEvent nsEvent = NSApplication.sharedApplication().currentEvent();", "+\t\tif (nsEvent != null) {", "+\t\t\tpoint = nsEvent.locationInWindow();", "+\t\t\tif (nsEvent.window() == null) point = window.convertScreenToBase(point);", "+\t\t} else {", "+\t\t\tpoint = window.mouseLocationOutsideOfEventStream();", "+\t\t}", "+\t\tint hitPart = (int)/*64*/((NSScroller)view).testPart(point);", "+\t\tEvent event = new Event();", "+\t\tswitch (hitPart) {", "+\t\t    case OS.NSScrollerDecrementLine:", "+\t\t        value -= increment;", "+\t\t        event.detail = SWT.ARROW_UP;", "+\t\t        break;", "+\t\t    case OS.NSScrollerDecrementPage:", "+\t\t        value -= pageIncrement;", "+\t\t        event.detail = SWT.PAGE_UP;", "+\t\t        break;", "+\t\t    case OS.NSScrollerIncrementLine:", "+\t\t        value += increment;", "+\t\t        event.detail = SWT.ARROW_DOWN;", "+\t\t        break;", "+\t\t    case OS.NSScrollerIncrementPage:", "+\t\t        value += pageIncrement;", "+\t\t        event.detail = SWT.PAGE_DOWN;", "+\t\t        break;", "+\t\t    case OS.NSScrollerKnob:", "+\t\t\t\tevent.detail = SWT.DRAG;", "+\t\t        break;", "+\t\t}", "+\t\tif (target == null) {", "+\t\t\tif (event.detail != SWT.DRAG) {", "+\t\t\t\tsetSelection(value);", "+\t\t\t}", "+\t\t}", "+\t\tsendEvent(SWT.Selection, event);", "+\t} finally {", "+\t\tif (disableFlush) {", "+\t\t\twindow.enableFlushWindow ();", "+\t\t\twindow.release ();", "-\tsendEvent(SWT.Selection, event);"]}], "num": 32773}