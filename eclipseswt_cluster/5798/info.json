{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9db99c0bd6f5a607c8143a0bb323c864", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d39368823469f39738c48f448613a774", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6f0750b9f79e4e41a1736b026a1dddaa973a1066", "commitAfterChange": "a66c70976fc9f2576a52a82c07e33a082fdba4f2", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": "  void showItem (long path, boolean scroll)", "signatureAfterChange": "  void showItem (long path, boolean scroll)", "diff": ["-\t\tOS.gtk_widget_realize (handle);", "+\t\tOS.gtk_widget_realize (handle);", "-\t\tGdkRectangle visibleRect = new GdkRectangle ();", "-\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\t\t\tif (ty[0] < visibleRect.y || ty[0] + cellRect.height > visibleRect.y + visibleRect.height) {", "+\t\t\tGdkRectangle visibleRect = new GdkRectangle ();", "+\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\t\t\tif (ty [0] < visibleRect.y || ty [0] + cellRect.height > visibleRect.y + visibleRect.height) {", "-\t\t\t/*", "-\t\t\t* This code intentionally commented.", "-\t\t\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "-\t\t\t* should scroll the minimum amount to show the cell if use_align is false.", "-\t\t\t* However, what actually happens is the cell is scrolled to the top.", "-\t\t\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "-\t\t\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "-\t\t\t* will have no effect. Therefore, it is still neccessary to", "-\t\t\t* call gtk_tree_view_scroll_to_cell.", "-\t\t\t*/", "-\t\t\t//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);", "-\t\t\tif (depth != 1) {", "-\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 0.5f, 0.0f);", "-\t\t\t} else {", "-\t\t\t\tif (ty[0] < visibleRect.y ) {", "-\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "-\t\t\t\t} else {", "-\t\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "-\t\t\t\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "-\t\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0] + cellRect.height - visibleRect.height);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c13f23d2f6c8d9c80f81e8c88731a52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "946b729480e0eca3855e231d6e1284c6c94d4249", "commitAfterChange": "146863a428357a6ad301d008e77ac45a2f64c626", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "-\t\tboolean isHidden = rect.y == 0 && rect.height == 0;", "+\t\tGdkRectangle cellRect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\t\tboolean isHidden = cellRect.y == 0 && cellRect.height == 0;", "+\t\tint [] tx = new int [1], ty = new int [1];", "+\t\tOS.gtk_tree_view_widget_to_tree_coords (handle, cellRect.x, cellRect.y, tx, ty);", "+\t\tGdkRectangle visibleRect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\t\t\tint [] tx = new int [1], ty = new int [1];", "-\t\t\tOS.gtk_tree_view_widget_to_tree_coords (handle, rect.x, rect.y, tx, ty);", "-\t\t\trect.y = ty[0];", "-\t\t\tGdkRectangle visRect = new GdkRectangle ();", "-\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visRect);", "-\t\t\tif (rect.y < visRect.y || rect.y + rect.height > visRect.y + visRect.height) {", "+\t\t\tif (ty[0] < visibleRect.y || ty[0] + cellRect.height > visibleRect.y + visibleRect.height) {", "-\t\t\t\tOS.gtk_widget_realize (handle);", "-\t\t\t\tGdkRectangle cellRect = new GdkRectangle ();", "-\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "-\t\t\t\tGdkRectangle visibleRect = new GdkRectangle ();", "-\t\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "-\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "-\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "-\t\t\t\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "-\t\t\t\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "-\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t\t\t\tif (ty[0] < visibleRect.y ) {", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "+\t\t\t\t} else {", "+\t\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "+\t\t\t\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "+\t\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0] + cellRect.height - visibleRect.height);", "+\t\t\t\t\t}"]}], "num": 5798}