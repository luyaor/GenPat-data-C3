{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed2a15eca5d499d9d8a38ead738ebaaf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f056b5692ca4cbcbf1ae03fb8a9d6c24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "69fe4fd6617a9947c43adf6f205c96ed59131a3e", "commitAfterChange": "b09a2ad2e37ced7c04edaa5039619cbb8b88f150", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r void interpretOsAnswer(String osAnswer)", "signatureAfterChange": "\r \r void interpretOsAnswer(String osAnswer)", "diff": ["+\tif ((style&SWT.MULTI) == 0) {\r", "+\t\tfileNames = new String[] {fileName};\r", "+\t} else {\r", "+\t\tint namesPtr = OS.gtk_file_selection_get_selections(handle);\r", "+\t\tint namesPtr1 = namesPtr;\r", "+\t\tint[] namePtr = new int[1];\r", "+\t\tOS.memmove(namePtr, namesPtr1, 1);\r", "+\t\tint length=0;\r", "+\t\twhile (namePtr[0] != 0) {\r", "+\t\t\tlength++;\r", "+\t\t\tnamesPtr1+=4;  // PROBLEM CODE: depend on address size\r", "+\t\t\tOS.memmove(namePtr, namesPtr1, 1);\r", "+\t\t}\r", "+\t\tfileNames = new String[length];\r", "+\t\tnamePtr = new int[length];\r", "+\t\tOS.memmove(namePtr, namesPtr, length*4);\r", "+\t\tfor (int i=0; i<length; i++) {\r", "+\t\t\t/*\r", "+\t\t\t * NB:  We can not use the Converter here, because\r", "+\t\t\t * the mount charset/iocharset is different than the locale!\r", "+\t\t\t */\r", "+\t\t\tint bytesPtr = OS.g_filename_to_utf8(namePtr[i], -1, 0, 0, 0);\r", "+\t\t\tif (bytesPtr==0) continue;\r", "+\t\t\t// Careful! The size, not the length of the string\r", "+\t\t\tbyte[] bytes = new byte[OS.strlen(bytesPtr)];\r", "+\t\t\tOS.memmove(bytes, bytesPtr, bytes.length);\r", "+\t\t\tfileNames[i] = new String(bytes);\r", "+\t\t\t/*\r", "+\t\t\t * NB:  Unlike other similar functions (e.g., g_convert), the glib\r", "+\t\t\t * documentation does not say the resulting UTF8 string should be\r", "+\t\t\t * freed.  However, the strdup makes me believe the free is necessary.\r", "+\t\t\t */\r", "+\t\t\tOS.g_free(bytesPtr);\r", "+\t\t}\r", "+\t\tOS.g_strfreev(namesPtr);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21bf8498c37b72a5a285210d84b0bdb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "05c90dd5e9edb969b4de6894aebe19cfb767b603", "commitAfterChange": "ac77a8e872ad51631c6d96b12859eeab9b82b50f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public String[] getAvailableTypeNames()", "signatureAfterChange": " public String[] getAvailableTypeNames()", "diff": ["-\treturn new String[0];", "+\tbyte[] buffer = Converter.wcsToMbcs(null, \"TARGETS\", true);", "+\tint typeId = OS.gdk_atom_intern(buffer, false);", "+\t// first try the primary clipboard", "+\tint selection_data = OS.gtk_clipboard_wait_for_contents(pGtkPrimary, typeId);", "+\tif (selection_data == 0) {", "+\t\t// try the clipboard selection second", "+\t\tselection_data  = OS.gtk_clipboard_wait_for_contents(pGtkClipboard, typeId);", "+\t}", "+\tif (selection_data == 0) {", "+\t\treturn new String[0]; // No types available", "+\t}", "+\tGtkSelectionData gtkSelectionData = new GtkSelectionData();", "+\tOS.memmove(gtkSelectionData, selection_data, GtkSelectionData.sizeof);", "+\tif (gtkSelectionData.length == 0) return new String[0];", "+\tint[] atoms = new int[gtkSelectionData.length * 8 / gtkSelectionData.format];", "+\tOS.memmove(atoms, gtkSelectionData.data, gtkSelectionData.length);", "+\tString[] result = new String[atoms.length];", "+\tfor (int i = 0; i < atoms.length; i++) {", "+\t\tint pName = OS.gdk_atom_name(atoms[i]);", "+\t\tbuffer = new byte [OS.strlen(pName)];", "+\t\tOS.memmove (buffer, pName, buffer.length);", "+\t\tOS.g_free (pName);", "+\t\tresult[i] = new String (Converter.mbcsToWcs (null, buffer));", "+\t}", "+\tOS.gtk_selection_data_free(selection_data);", "+\treturn result;"]}], "num": 26532}