{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba38265f80127fee3cd68df45532cd5f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00dcf4d7725627a01e32de95815a6cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/SelectableItemWidget.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\r void selectNotify(SelectableItem item)", "signatureAfterChange": "\r void selectNotify(final SelectableItem item, boolean asyncNotify)", "diff": ["-void selectNotify(SelectableItem item) {\r", "-\tEvent event;\r", "-\r", "+void selectNotify(final SelectableItem item, boolean asyncNotify) {\r", "-\t\tevent = new Event();\r", "-\t\tevent.item = item;\r", "-\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\tif (asyncNotify == false) {\r", "+\t\t\tEvent event = new Event();\r", "+\t\t\tevent.item = item;\r", "+\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\tgetDisplay().asyncExec(new Runnable() {\r", "+\t\t\t\tpublic void run() {\r", "+\t\t\t\t\t// Only send a selection event when the item has not been disposed.\r", "+\t\t\t\t\t// Fixes 1GE6XQA\r", "+\t\t\t\t\tif (item.isDisposed() == false) {\r", "+\t\t\t\t\t\tEvent event = new Event();\r", "+\t\t\t\t\t\tevent.item = item;\r", "+\t\t\t\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t});\r", "+\t\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eabbc471e12a4efb78dd01bfa1352c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/SelectableItemWidget.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\r void selectNotify(SelectableItem item)", "signatureAfterChange": "\r void selectNotify(final SelectableItem item, boolean asyncNotify)", "diff": ["-void selectNotify(SelectableItem item) {\r", "-\tEvent event;\r", "-\r", "+void selectNotify(final SelectableItem item, boolean asyncNotify) {\r", "-\t\tevent = new Event();\r", "-\t\tevent.item = item;\r", "-\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\tif (asyncNotify == false) {\r", "+\t\t\tEvent event = new Event();\r", "+\t\t\tevent.item = item;\r", "+\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\tgetDisplay().asyncExec(new Runnable() {\r", "+\t\t\t\tpublic void run() {\r", "+\t\t\t\t\t// Only send a selection event when the item has not been disposed.\r", "+\t\t\t\t\t// Fixes 1GE6XQA\r", "+\t\t\t\t\tif (item.isDisposed() == false) {\r", "+\t\t\t\t\t\tEvent event = new Event();\r", "+\t\t\t\t\t\tevent.item = item;\r", "+\t\t\t\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t});\r", "+\t\t}\r", "+}\r"]}], "num": 20964}