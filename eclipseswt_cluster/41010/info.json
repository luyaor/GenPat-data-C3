{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f5408988dbf63437a3edfdf909c77fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeee5678071b8c0cb108134e6b957b0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "14bb166a3d9b9c0f4b3cc0f7c70730e09595d89a", "commitAfterChange": "65934e9078512ef399dc1e432592b04f62521287", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  void _addListener (int eventType, Listener listener)", "signatureAfterChange": "  void _addListener (int eventType, Listener listener)", "diff": ["+\t\t\tnewBits |= OS.TVS_NOHSCROLL;", "-\t\t\tif ((style & SWT.FULL_SELECTION) != 0) newBits &= ~OS.TVS_FULLROWSELECT;", "-\t\t\tnewBits |= OS.TVS_NOHSCROLL;", "+\t\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tif (eventType != SWT.MeasureItem) newBits &= ~OS.TVS_FULLROWSELECT;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cba5156c4dc2eb17f67cc7f1a662a93f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/SWT.java", "commitBeforeChange": "3b952e5debb460df9ce9df4ebb2cf1c44e129105", "commitAfterChange": "1fee8b59286db4e9ec706d159238e37ec56753bd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static void error (int code, Throwable throwable, String detail)", "signatureAfterChange": " public static void error (int code, Throwable throwable, String detail)", "diff": ["+\t* ", "+\t* NOTE: Exceptions thrown in syncExec and asyncExec must be", "+\t* wrapped.", "-\tif (throwable instanceof SWTError) throw (SWTError) throwable;", "-\tif (throwable instanceof SWTException) throw (SWTException) throwable;", "+\tif (code != SWT.ERROR_FAILED_EXEC) {", "+\t\tif (throwable instanceof SWTError) throw (SWTError) throwable;", "+\t\tif (throwable instanceof SWTException) throw (SWTException) throwable;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fb774ea1caeb90536a48050bca73f3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a1c32779a77806d83e43b58429ae7b645a07df78", "commitAfterChange": "bd24eddaa51d138183d5de7822394303919b5716", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  boolean gestureEvent(int id, int eventPtr, int detail)", "signatureAfterChange": "  boolean gestureEvent(int id, int eventPtr, int detail)", "diff": ["-\t} else {", "+\t} else if (detail == SWT.GESTURE_END) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53427771d3c20c00dacee216ab00b877", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1034efdda128f80759c28bd972b3a2faf7fa970a", "commitAfterChange": "7c255c33f088ef04ac6271863f814fd0cde593d4", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 225, "signatureBeforeChange": "  LRESULT WM_GESTURE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_GESTURE (int wParam, int lParam)", "diff": ["-\tGESTUREINFO gi = new GESTUREINFO();", "-\tgi.cbSize = GESTUREINFO.sizeof;", "-\tif (OS.GetGestureInfo(lParam, gi)) {", "-\t\thandled = sendGestureEvent(gi);", "-    }", "-    OS.CloseGestureInfoHandle(lParam);", "+\t", "+\tif (hooks (SWT.Gesture)) {", "+\t\tGESTUREINFO gi = new GESTUREINFO ();", "+\t\tgi.cbSize = GESTUREINFO.sizeof;", "+\t\tif (OS.GetGestureInfo (lParam, gi)) {", "+\t\t\thandled = sendGestureEvent (gi);", "+\t\t}", "+\t\tOS.CloseGestureInfoHandle (lParam);", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dc61724e1f48a8667e26ccf768312e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d6e5fd9d51a6abff495205e8658edefbd10eb13a", "commitAfterChange": "1111cdd83e7bad408fb48dbd0ac59f9b419ee213", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  int processMouseMove (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseMove (int callData, int arg1, int int2)", "diff": ["-\tDisplay display = getDisplay ();", "-\tdisplay.addMouseHoverTimeout (handle);", "+\tif (hooks (SWT.MouseHover)) {", "+\t\tDisplay display = getDisplay ();", "+\t\tdisplay.addMouseHoverTimeout (handle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae7157c11f7f57eede66acb2c2f43ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "a0091a0d774d1cd845b2db9b9811644e3b082794", "commitAfterChange": "9414284ac2a6dbcaa73cbd09fff45a557e340e58", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  int setString(String string, int flags)", "signatureAfterChange": "  int setString(String string, int flags)", "diff": ["-\t\t\t\t} else {", "+\t\t\t\t} else if (breakCount == breaks.length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9454db0d34b9c5345e9e6cf883be5e1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "6351a474b1ab7b8c3b9258742a72f9361637458c", "commitAfterChange": "1b2cca0b6c41113211d8146c1c6ceaaca7d5989c", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void setTextDirection (int textDirection)", "signatureAfterChange": " public void setTextDirection (int textDirection)", "diff": ["-\tif ((textDirection & SWT.LEFT_TO_RIGHT) != 0) textDirection = SWT.LEFT_TO_RIGHT;", "-\tif (this.textDirection == textDirection) return;", "+\tif (textDirection != SWT.AUTO_TEXT_DIRECTION) {", "+\t\tif ((textDirection & SWT.LEFT_TO_RIGHT) != 0) textDirection = SWT.LEFT_TO_RIGHT;", "+\t\tif (this.textDirection == textDirection) return;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e26b302944cb750b6b6f91dc6e4d063", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "958d022d9eb894b2a4d737dc59c9428f430b1c30", "commitAfterChange": "34420e05a4101d232239b6e19ef094fc662e754a", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void runGrabs ()", "signatureAfterChange": "  void runGrabs ()", "diff": ["-\t\t\t\t\tignoreMouseUp = true;", "+\t\t\t\t\tif (type == SWT.MouseUp) ignoreMouseUp = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ac218e27b73034e97ebc7e36e421ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "eccf3f9dfad619459ad0b8e1ee4716ddc8dc2aae", "commitAfterChange": "46f2ec1e17ee0fd83ca086dc9c5ef074b69e3813", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\t/*\r", "-\t\t* Feature in Windows.  DragDetect() captures the mouse\r", "-\t\t* and tracks its movement until the user releases the\r", "-\t\t* left mouse button, presses the ESC key, or moves the\r", "-\t\t* mouse outside the drag rectangle.  If the user moves\r", "-\t\t* the mouse outside of the drag rectangle, DragDetect\r", "-\t\t* returns true and a drag and drop operation can be\r", "-\t\t* started.  When the left mouse button is released or\r", "-\t\t* the ESC key is pressed, these events are consumed by\r", "-\t\t* DragDetect() so that application code that matches\r", "-\t\t* mouse down/up pairs or looks for the ESC key will not\r", "-\t\t* function properly.  The fix is to send these events\r", "-\t\t* when the drag has not started.\r", "-\t\t* \r", "-\t\t* NOTE: For now, don't send a fake WM_KEYDOWN/WM_KEYUP\r", "-\t\t* events for the ESC key.  This would require computing\r", "-\t\t* wParam (the key) and lParam (the repeat count, scan code,\r", "-\t\t* extended-key flag, context code, previous key-state flag,\r", "-\t\t* and transition-state flag) which is non-trivial.\r", "-\t\t*/\r", "-\t\tif (OS.GetKeyState (OS.VK_ESCAPE) >= 0) {\r", "-\t\t\tOS.SendMessage (handle, OS.WM_LBUTTONUP, wParam, lParam);\r", "+\t\tif (hooks (SWT.DragDetect)) {\r", "+\t\t\t/*\r", "+\t\t\t* Feature in Windows.  DragDetect() captures the mouse\r", "+\t\t\t* and tracks its movement until the user releases the\r", "+\t\t\t* left mouse button, presses the ESC key, or moves the\r", "+\t\t\t* mouse outside the drag rectangle.  If the user moves\r", "+\t\t\t* the mouse outside of the drag rectangle, DragDetect\r", "+\t\t\t* returns true and a drag and drop operation can be\r", "+\t\t\t* started.  When the left mouse button is released or\r", "+\t\t\t* the ESC key is pressed, these events are consumed by\r", "+\t\t\t* DragDetect() so that application code that matches\r", "+\t\t\t* mouse down/up pairs or looks for the ESC key will not\r", "+\t\t\t* function properly.  The fix is to send these events\r", "+\t\t\t* when the drag has not started.\r", "+\t\t\t* \r", "+\t\t\t* NOTE: For now, don't send a fake WM_KEYDOWN/WM_KEYUP\r", "+\t\t\t* events for the ESC key.  This would require computing\r", "+\t\t\t* wParam (the key) and lParam (the repeat count, scan code,\r", "+\t\t\t* extended-key flag, context code, previous key-state flag,\r", "+\t\t\t* and transition-state flag) which is non-trivial.\r", "+\t\t\t*/\r", "+\t\t\tif (OS.GetKeyState (OS.VK_ESCAPE) >= 0) {\r", "+\t\t\t\tOS.SendMessage (handle, OS.WM_LBUTTONUP, wParam, lParam);\r", "+\t\t\t}\r"]}], "num": 41010}