{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7430ac46b39ebb7cc8832b8b64a2ef3b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b105c64655bba0c6bd0fefa8c93d1d60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "f7af67eb750d16cb78b69e519c2e9163f55f7288", "commitAfterChange": "d782de02afa1dd52bcd969692dd4289c5a54eb88", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void setControl (Control control)", "signatureAfterChange": " public void setControl (Control control)", "diff": ["+\t/*", "+\t* Feature in Cocoa.  The method setView() removes the old view from", "+\t* its parent.  The fix is to detected it has been removed and add", "+\t* it back.", "+\t*/", "+\tif (oldControl != null) {", "+\t\tNSView topView = oldControl.topView ();", "+\t\tif (topView.superview () == null) {", "+\t\t\tparent.contentView ().addSubview (topView, OS.NSWindowBelow, null);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f4f6d59486ca65420f3db8f793a4b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "194b731227cf23a284f616e388bb32f837343740", "commitAfterChange": "690c4a8c2a13525287177e0c1fa0a4966fed59bd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\tupdate ();", "+\tif (isDisposed ()) return result;", "-\t\t\t\tif (event.doit) setBounds (newX, newY, width, height);", "-\t\t\t\tupdate ();", "+\t\t\t\tif (isDisposed ()) return result;", "+\t\t\t\tif (event.doit) {", "+\t\t\t\t\tsetBounds (newX, newY, width, height);", "+\t\t\t\t\tShell shell = parent.getShell ();", "+\t\t\t\t\tshell.update (true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9a9bdb6561a436c008231d1de72261", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "4639b469833e6c587d0fdc59a6b4bc4e0f22829d", "commitAfterChange": "ac4e7e2925038e56adc6e702c5df1bcd06c842b3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  boolean setMarkedText_selectedRange (int id, int sel, int string, int selRange)", "signatureAfterChange": "  boolean setMarkedText_selectedRange (int id, int sel, int string, int selRange)", "diff": ["+\tif (isDisposed ()) return false;", "+\tif (text.length () == 0) {", "+\t\tShell s = parent.getShell ();", "+\t\ts.keyInputHappened = true;", "+\t\tstartOffset = -1;", "+\t\tresetStyles ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60154323e1e0ce8da2af494d62021b72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 64, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "diff": ["+\tRectangle bounds = null;", "+\tif (OS.HIVIEW && txnObject == 0 && resize) bounds = getBounds ();", "-\tif ((result & (RESIZED | MOVED)) != 0) setTXNBounds ();", "+\tif (bounds != null && (result & RESIZED) != 0) {", "+\t\tif (bounds.width == 0) showSelection ();", "+\t}", "+\tif (!OS.HIVIEW) {", "+\t\tif ((result & (RESIZED | MOVED)) != 0) setTXNBounds ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0e2996dcbe1233c4c6ec1135ee4f45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "7977d632a518c3c4bbbe65ac350805edd76d6c0a", "commitAfterChange": "f5a8e8f2be872aa0f00468cbc5f2b2457a130aec", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  void tabView_didSelectTabViewItem(int id, int sel, int tabView, int tabViewItem)", "signatureAfterChange": "  void tabView_didSelectTabViewItem(int id, int sel, int tabView, int tabViewItem)", "diff": ["+\t\t/*", "+\t\t* For some reason the control on a tab being deselected has its parent", "+\t\t* removed natively.  The fix is to re-set the control's parent.", "+\t\t*/", "+\t\tControl control = item.control;", "+\t\tif (control != null) {", "+\t\t\tNSView topView = control.topView ();", "+\t\t\tif (topView.superview () == null) {", "+\t\t\t\tcontentView ().addSubview (topView, OS.NSWindowBelow, null);", "+\t\t\t}", "+\t\t}", "-\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b61698ac61f2c196756043c19260a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "9c4d510cdfe170636a0f339889c955614129d85d", "commitAfterChange": "1ecd9180e0c0cae33976661992b5e6fd4cfeb7d2", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": "  void setZOrder (Control control, boolean above)", "signatureAfterChange": "  void setZOrder (Control control, boolean above)", "diff": ["-//\tint otherControl = control == null ? 0 : control.topHandle ();", "-//\tsetZOrder (topHandle (), otherControl, above);", "+\tNSView otherView = control == null ? null : control.topView ();", "+\tparent.contentView().addSubview_positioned_relativeTo_(view, above ? OS.NSWindowAbove : OS.NSWindowBelow, otherView);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb55eef4bec3fd7cec63ae38e6858ebe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer2.java", "commitBeforeChange": "365d9e3002ce9e8ba155a42ea16cecffc7fe94e0", "commitAfterChange": "0d43d09e9488d7eb2fa7bed929606aa894ae06d3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " int drawLine(String line, int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground, boolean clearBackground)", "signatureAfterChange": " int drawLine(String line, int lineIndex, int paintX, int paintY, GC gc, Color widgetBackground, Color widgetForeground, boolean clearBackground)", "diff": ["-\tif (event != null && event.styles != null) {", "+\tif (event != null) {", "+\t\tEmbeddedObject bullet = event.bullet;", "+\t\tif (bullet != null) {", "+\t\t\tFontMetrics metrics = layout.getLineMetrics(0);", "+\t\t\tbullet.draw(gc, paintX, paintY, metrics.getAscent(), metrics.getDescent());", "+\t\t}", "+\t\t", "-\t\tfor (int i = 0; i < styles.length; i++) {", "-\t\t\tStyleRange range = styles[i];", "-\t\t\tint start = range.start;", "-\t\t\tif (lineOffset <= start && start < lineOffset + lineLength) {", "-\t\t\t\tEmbeddedObject object = range.object;", "-\t\t\t\t if (object != null) {", "-\t\t\t\t\t int offset = start - lineOffset;", "-\t\t\t\t\t Point point = layout.getLocation(offset, false);", "-\t\t\t\t\t FontMetrics metrics = layout.getLineMetrics(layout.getLineIndex(offset));", "-\t\t\t\t\t range.object.draw(gc, point.x + paintX, point.y + paintY, metrics.getAscent(), metrics.getDescent());", "-\t\t\t\t }", "+\t\tif (styles != null) {", "+\t\t\tfor (int i = 0; i < styles.length; i++) {", "+\t\t\t\tStyleRange range = styles[i];", "+\t\t\t\tint start = range.start;", "+\t\t\t\tif (lineOffset <= start && start < lineOffset + lineLength) {", "+\t\t\t\t\tEmbeddedObject object = range.object;", "+\t\t\t\t\t if (object != null) {", "+\t\t\t\t\t\t int offset = start - lineOffset;", "+\t\t\t\t\t\t Point point = layout.getLocation(offset, false);", "+\t\t\t\t\t\t FontMetrics metrics = layout.getLineMetrics(layout.getLineIndex(offset));", "+\t\t\t\t\t\t range.object.draw(gc, point.x + paintX, point.y + paintY, metrics.getAscent(), metrics.getDescent());", "+\t\t\t\t\t }", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221061288e6616172156d70ac9fa6195", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "e85528c6b29503dc35d536640be9f81c29fde4e9", "commitAfterChange": "c199270a0428bec6e6c04baec3241183091527db", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["+\t\t/*", "+\t\t* Feature in Motif.  When the active shell is disposed,", "+\t\t* some window managers place focus in a temporary window.", "+\t\t* The fix is to make the parent be the active top level", "+\t\t* shell when the child shell is disposed.", "+\t\t*/", "+\t\tif (parent != null) {", "+\t\t\tShell activeShell = display.getActiveShell ();", "+\t\t\tif (activeShell == this) {", "+\t\t\t\tShell shell = parent.getShell ();", "+\t\t\t\tshell.bringToTop (false);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13be68d458858ae556a62512c7c1a9f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "c602371d75fd84952ad1e9702d2777a553be4d93", "commitAfterChange": "8a6049bc18081a368dba318f4b32e6dfb6ed8e99", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  private String getKey (Node node)", "signatureAfterChange": "  private String getKey (Node node)", "diff": ["+\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\tif (attributes != null) {", "+\t\t\tboolean isStatic = attributes.getNamedItem(\"class_method\") != null;", "+\t\t\tif (isStatic) key.append(\"-static\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2e0d2fba10be4be9fdd2e469bb648a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "74ef63346f6b293054e1f013c7808c8d1ebc6ff0", "commitAfterChange": "375edd619736a12125743add1cb6aee356e13ee3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid printLine(int x, int y, GC gc, Color foreground, Color background, TextLayout layout, TextLayout printLayout, int index)", "signatureAfterChange": " \tvoid printLine(int x, int y, GC gc, Color foreground, Color background, TextLayout layout, TextLayout printLayout, int index)", "diff": ["-\t\t\tprintLayout.setText(String.valueOf(index));", "+\t\t\tString[] lineLabels = printOptions.lineLabels;", "+\t\t\tif (lineLabels != null) {", "+\t\t\t\tif (0 <= index && index < lineLabels.length && lineLabels[index] != null) {", "+\t\t\t\t\tprintLayout.setText(lineLabels[index]);", "+\t\t\t\t} else {", "+\t\t\t\t\tprintLayout.setText(\"\");", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tprintLayout.setText(String.valueOf(index));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf53a77bd70f98e401a51f3e230ea0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "a5aa19b74e4a92c24cdac1109fcadf73365d8fe2", "commitAfterChange": "9e03c17a82cd721f4edc09d79d09bb55f8613d1e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r public void setMenu (Menu menu)", "signatureAfterChange": "\r public void setMenu (Menu menu)", "diff": ["+\t\t\t\r", "+\t\t\tif (success) {\r", "+\t\t\t\t/* if it is a top level menu item, update the corresponding tool item */\r", "+\t\t\t\tDecorations shell = parent.parent;\r", "+\t\t\t\tif (parent == shell.menuBar) {\r", "+\t\t\t\t\tOS.SendMessage (shell.hwndCB, OS.SHCMBM_SETSUBMENU, id, uIDNewItem);\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265224580083d6941a7da1b69a6e10ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9f0158bef8032723965c0f2d6bd242bfefac7d03", "commitAfterChange": "de39ec30a29f6ea7488b95a176a7772391db46ae", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\t\tNSColor bg = data.bg;", "-\t\t\tif (bg == null) {", "-\t\t\t\tfloat /*double*/ [] color = data.background;", "-\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\t\tbg.retain();", "+\t\t\tPattern pattern = data.backgroundPattern;", "+\t\t\tif (pattern != null) setPatternPhase(pattern);", "+\t\t\tif (pattern != null && pattern.gradient != null) {", "+\t\t\t\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "+\t\t\t\tfillPattern(path, pattern);", "+\t\t\t} else {", "+\t\t\t\tNSColor bg = data.bg;", "+\t\t\t\tif (bg == null) {", "+\t\t\t\t\tfloat /*double*/ [] color = data.background;", "+\t\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\t\t\tbg.retain();", "+\t\t\t\t}", "+\t\t\t\tbg.setFill();", "+\t\t\t\tNSBezierPath.fillRect(rect);", "-\t\t\tbg.setFill();", "-\t\t\tNSBezierPath.fillRect(rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d76c72d35c133e711d24ea2169135a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "b0fe84d3287092cde6394be1181ca68cb9f918e2", "commitAfterChange": "55dab53651f785d6f15a807441a4f766c195dc2f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void sendSelection ()", "signatureAfterChange": "  void sendSelection ()", "diff": ["-\tNSPoint point = view.window().mouseLocationOutsideOfEventStream();", "+\tNSPoint point;", "+\tNSEvent nsEvent = NSApplication.sharedApplication().currentEvent();", "+\tif (nsEvent != null) {", "+\t\tpoint = nsEvent.locationInWindow();", "+\t\tif (nsEvent.window() == null) point = view.window().convertScreenToBase(point);", "+\t} else {", "+\t\tpoint = view.window().mouseLocationOutsideOfEventStream();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc09405862f99d11c9385cf68759c83f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ddc8393d2aa91eaf0734be78de695b74ae5eae2a", "commitAfterChange": "28e1a4fa3eaea46bfca36ae1446d141125e40ce9", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " public boolean setParent (Composite parent)", "signatureAfterChange": " public boolean setParent (Composite parent)", "diff": ["-//\tint topHandle = topHandle ();", "-//\tOS.HIViewAddSubview (parent.handle, topHandle);", "-//\tOS.HIViewSetVisible (topHandle, (state & HIDDEN) == 0);", "-//\tOS.HIViewSetZOrder (topHandle, OS.kHIViewZOrderBelow, 0);", "+\tNSView topView = topView ();", "+\ttopView.retain();", "+\ttopView.removeFromSuperview();", "+\tparent.contentView().addSubview_positioned_relativeTo_(topView, OS.NSWindowBelow, null);", "+\ttopView.release();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1fb08b1ebf8172c5be169d82ed523f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "59cc62059de5a7cbd294e3ea222ec6fa71e833fd", "commitAfterChange": "77a4408403daf08b0503a3ba2026817bdb0d840b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "  void drawRect(int id, NSRect rect)", "signatureAfterChange": "  void drawRect (int id, NSRect rect)", "diff": ["-void drawRect(int id, NSRect rect) {", "+void drawRect (int id, NSRect rect) {", "+\tNSBezierPath path = getClipping ();", "+\tif (path != null) {", "+\t\tNSGraphicsContext.static_saveGraphicsState();", "+\t\tpath.addClip ();", "+\t}", "+\tdrawWidget (id, rect);", "+\tif (path != null) {", "+\t\tNSGraphicsContext.static_restoreGraphicsState();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41d5f10c58b5d49ff98d48b278a8bc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "0c265790d48c978702367475ec1c694c7aa98881", "commitAfterChange": "420ecc6978c2595bdf9b71ed40b757930d738678", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["+", "+\t/*", "+\t * Feature in Cocoa.  If the NSImage object being set into the view is", "+\t * the same NSImage object that is already there then the new image is", "+\t * not taken.  This results in the view's image not changing even if the", "+\t * NSImage object's content has changed since it was last set into the", "+\t * view.  The workaround is to temporarily set the view's image to null", "+\t * so that the new image will then be taken.", "+\t */", "+\tif (image != null) {", "+\t\tNSImage current = imageView.image ();", "+\t\tif (current != null && current.id == image.handle.id) {", "+\t\t\timageView.setImage (null);", "+\t\t}", "+\t}"]}], "num": 3777}