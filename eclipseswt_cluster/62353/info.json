{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b968d3e06244ebe8d99e050d5e1b916", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101e3c81a031679967c7c55ead0f39bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "9589f5ace9834c0def730a259bf141a95bafa0fc", "commitAfterChange": "383a80433afc61cc886a8f79bd2505cc671c6501", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r public void setMenuBar (Menu menu)", "signatureAfterChange": "\r public void setMenuBar (Menu menu)", "diff": ["-\tif (OS.IsWinCE) {\r", "+\tif (OS.IsPPC) {\r", "+\t} else if (OS.IsHPC) {\r", "+\t\tboolean resize = menuBar != menu;\r", "+\t\tif (menuBar != null) {\r", "+\t\t\t/*\r", "+\t\t\t* Because CommandBar_Destroy destroys the menu bar, it\r", "+\t\t\t* is necessary to move the current items into a new menu\r", "+\t\t\t* before it is called.\r", "+\t\t\t*/\r", "+\t\t\tint hMenu = OS.CreateMenu ();\r", "+\t\t\tif (!moveMenu (menuBar.handle, hMenu)) {\r", "+\t\t\t\terror (SWT.ERROR_CANNOT_SET_MENU);\r", "+\t\t\t}\r", "+\t\t\tmenuBar.handle = hMenu;\r", "+\t\t\tif (hwndCB != 0) OS.CommandBar_Destroy (hwndCB);\r", "+\t\t\thwndCB = 0;\r", "+\t\t}\r", "+\t\tmenuBar = menu;\r", "+\t\tif (menuBar != null) {\t\t\r", "+\t\t\thwndCB = OS.CommandBar_Create (OS.GetModuleHandle (null), handle, 1);\r", "+\t\t\tOS.CommandBar_InsertMenubarEx (hwndCB, 0, menuBar.handle, 0);\r", "+\t\t}\r", "+\t\tif (resize) {\r", "+\t\t\tsendEvent (SWT.Resize);\r", "+\t\t\tlayout (false);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04e1dab823e63405e81ce1586e09310", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "14581ca5a7841e362a4bb6a68c76d00675c70760", "commitAfterChange": "2882bbd7423650466596733b7f7109e5d58042c8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Program findProgram (String extension)", "signatureAfterChange": " public static Program findProgram (String extension)", "diff": ["-\tif (extension.charAt (0) != '.') extension = '.' + extension;", "-\treturn getProgram(extension);", "+\tchar[] chars;", "+\tif (extension.charAt (0) != '.') {", "+\t\tchars = new char[extension.length()];", "+\t\textension.getChars(0, chars.length, chars, 0);", "+\t} else {", "+\t\tchars = new char[extension.length() - 1];", "+\t\textension.getChars(1, extension.length(), chars, 0);\t\t", "+\t}", "+\tint ext = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tProgram program = null;", "+\tif (ext != 0) {", "+\t\tbyte[] fsRef = new byte[80];", "+\t\tif (OS.LSGetApplicationForInfo(OS.kLSUnknownType, OS.kLSUnknownCreator, ext, OS.kLSRolesAll, fsRef, null) == OS.noErr) {", "+\t\t\tprogram = getProgram(fsRef);", "+\t\t}", "+\t\tOS.CFRelease(ext);", "+\t}", "+\treturn program;"]}], "num": 62353}