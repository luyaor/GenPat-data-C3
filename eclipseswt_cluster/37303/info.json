{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d75a705da9c6ccd77b7891a2cf79fda4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67f5527403bf8e4d9ae663009047d22", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/GridLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createControlWidgets ()", "signatureAfterChange": " \tvoid createControlWidgets()", "diff": ["-\tvoid createControlWidgets () {", "-\t\t/* Rearrange the layout of the control group */", "-\t\tsize.setLayoutData (new GridData ());", "-\t\t", "-\t\t/* Controls the margins and spacing of the GridLayout */", "-\t\tString [] marginValues = new String [] {\"0\",\"3\",\"5\",\"10\"};", "-\t\tGroup marginGroup = new Group (controlGroup, SWT.NONE);", "-\t\tmarginGroup.setText (LayoutExample.getResourceString (\"Margins_Spacing\"));", "-\t\tGridData data = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.verticalSpan = 2;", "-\t\tmarginGroup.setLayoutData (data);", "-\t\tGridLayout layout = new GridLayout ();", "-\t\tlayout.numColumns = 2;", "-\t\tmarginGroup.setLayout (layout);", "-\t\tnew Label (marginGroup, SWT.NONE).setText (\"marginHeight\");", "-\t\tmarginHeight = new Combo (marginGroup, SWT.NONE);", "-\t\tmarginHeight.setItems (marginValues);", "-\t\tmarginHeight.select (2);", "-\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.widthHint = 60;", "-\t\tmarginHeight.setLayoutData (data);", "-\t\tmarginHeight.addSelectionListener (selectionListener);", "-\t\tmarginHeight.addTraverseListener (traverseListener);", "-\t\tnew Label (marginGroup, SWT.NONE).setText (\"marginWidth\");", "-\t\tmarginWidth = new Combo (marginGroup, SWT.NONE);", "-\t\tmarginWidth.setItems (marginValues);", "-\t\tmarginWidth.select (2);", "-\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.widthHint = 60;", "-\t\tmarginWidth.setLayoutData (data);", "-\t\tmarginWidth.addSelectionListener (selectionListener);", "-\t\tmarginWidth.addTraverseListener (traverseListener);", "-\t\tnew Label (marginGroup, SWT.NONE).setText (\"horizontalSpacing\");", "-\t\thorizontalSpacing = new Combo (marginGroup, SWT.NONE);", "-\t\thorizontalSpacing.setItems (marginValues);", "-\t\thorizontalSpacing.select (2);", "-\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.widthHint = 60;", "-\t\thorizontalSpacing.setLayoutData (data);", "-\t\thorizontalSpacing.addSelectionListener (selectionListener);", "-\t\thorizontalSpacing.addTraverseListener (traverseListener);", "-\t\tnew Label (marginGroup, SWT.NONE).setText (\"verticalSpacing\");", "-\t\tverticalSpacing = new Combo (marginGroup, SWT.NONE);", "-\t\tverticalSpacing.setItems (marginValues);", "-\t\tverticalSpacing.select (2);", "-\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.widthHint = 60;", "-\t\tverticalSpacing.setLayoutData (data);", "-\t\tverticalSpacing.addSelectionListener (selectionListener);", "-\t\tverticalSpacing.addTraverseListener (traverseListener);", "-        ", "+\tvoid createControlWidgets() {", "-\t\tGroup columnGroup = new Group (controlGroup, SWT.NONE);", "-\t\tcolumnGroup.setText (LayoutExample.getResourceString (\"Columns\"));", "-\t\tlayout = new GridLayout ();", "-\t\tlayout.numColumns = 2;", "-\t\tcolumnGroup.setLayout (layout);", "-\t\tdata = new GridData (GridData.VERTICAL_ALIGN_FILL);", "-\t\tcolumnGroup.setLayoutData (data);", "-\t\tnumColumns = new Text (columnGroup, SWT.BORDER);", "-\t\tnumColumns.setText (\"1\");", "-\t\tnumColumns.addSelectionListener (selectionListener);", "-\t\tnumColumns.addTraverseListener (traverseListener);", "-       \tdata = new GridData (GridData.FILL_HORIZONTAL);", "-       \tdata.widthHint = 15;", "-       \tnumColumns.setLayoutData (data);", "-       \tnew Label (columnGroup, SWT.NONE).setText (\"numColumns\");", "-\t\tmakeColumnsEqualWidth = new Button (columnGroup, SWT.CHECK);", "-\t\tmakeColumnsEqualWidth.setText (\"makeColumnsEqualWidth\");", "-\t\tmakeColumnsEqualWidth.addSelectionListener (selectionListener);", "-\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.horizontalSpan = 2;", "-\t\tdata.horizontalIndent = 14;", "-\t\tmakeColumnsEqualWidth.setLayoutData (data);", "+\t\tGroup columnGroup = new Group(controlGroup, SWT.NONE);", "+\t\tcolumnGroup.setText(LayoutExample.getResourceString (\"Columns\"));", "+\t\tcolumnGroup.setLayout(new GridLayout(2, false));", "+\t\tcolumnGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false));", "+\t\tnew Label(columnGroup, SWT.NONE).setText(\"Number of Columns\");", "+\t\tnumColumns = new Spinner(columnGroup, SWT.BORDER);", "+\t\tnumColumns.setMinimum(1);", "+\t\tnumColumns.addSelectionListener(selectionListener);", "+\t\tmakeColumnsEqualWidth = new Button(columnGroup, SWT.CHECK);", "+\t\tmakeColumnsEqualWidth.setText(\"Make Columns Equal Width\");", "+\t\tmakeColumnsEqualWidth.addSelectionListener(selectionListener);", "+\t\tmakeColumnsEqualWidth.setEnabled(false);", "+\t\tmakeColumnsEqualWidth.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false, 2, 1));", "+\t\t/* Controls the margins and spacing of the GridLayout */", "+\t\tGroup marginGroup = new Group(controlGroup, SWT.NONE);", "+\t\tmarginGroup.setText (LayoutExample.getResourceString(\"Margins_Spacing\"));", "+\t\tmarginGroup.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));", "+\t\tmarginGroup.setLayout(new GridLayout(2, false));", "+\t\tnew Label (marginGroup, SWT.NONE).setText(\"Margin Width\");", "+\t\tmarginWidth = new Spinner (marginGroup, SWT.BORDER);", "+\t\tmarginWidth.setSelection(5);", "+\t\tmarginWidth.addSelectionListener(selectionListener);", "+\t\tnew Label(marginGroup, SWT.NONE).setText(\"Margin Height\");", "+\t\tmarginHeight = new Spinner(marginGroup, SWT.BORDER);", "+\t\tmarginHeight.setSelection(5);", "+\t\tmarginHeight.addSelectionListener(selectionListener);", "+\t\tnew Label(marginGroup, SWT.NONE).setText(\"Horizontal Spacing\");", "+\t\thorizontalSpacing = new Spinner(marginGroup, SWT.BORDER);", "+\t\thorizontalSpacing.setSelection(5);", "+\t\thorizontalSpacing.addSelectionListener(selectionListener);", "+\t\tnew Label(marginGroup, SWT.NONE).setText(\"Vertical Spacing\");", "+\t\tverticalSpacing = new Spinner(marginGroup, SWT.BORDER);", "+\t\tverticalSpacing.setSelection(5);", "+\t\tverticalSpacing.addSelectionListener(selectionListener);", "+        ", "-\t\tsuper.createControlWidgets ();", "+\t\tsuper.createControlWidgets();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96987bca6b68b55a9a35e99c2088696", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.paint/src/org/eclipse/swt/examples/paint/PaintView.java", "commitBeforeChange": "115de19ec544ed7d4732495ff9d3d3e3a00ddb0f", "commitAfterChange": "5db2047dab39b15ff2936cf51daab170f9747a2e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void createPartControl(Composite parent)", "signatureAfterChange": " \tpublic void createPartControl(Composite parent)", "diff": ["+\tpublic void createPartControl(Composite parent) {", "+\t\tinstance = new PaintExample(parent);", "+\t\tinstance.createGUI(parent);", "+", "+\t\t/*** Add toolbar contributions ***/", "+\t\tfinal IActionBars actionBars = getViewSite().getActionBars();", "+\t\tIToolBarManager toolbarManager = actionBars.getToolBarManager();", "+\t\tTool tools[] = PaintExample.tools;", "+\t\tString group = tools[0].group;", "+\t\ttoolbarManager.add(new GroupMarker(group));", "+\t\tfor (int i = 0; i < tools.length; i++) {", "+\t\t\tTool tool = tools[i];", "+\t\t\tif (!tool.group.equals(group)) {", "+\t\t\t\ttoolbarManager.add(new Separator());", "+\t\t\t\ttoolbarManager.add(new GroupMarker(tool.group));", "+\t\t\t}", "+\t\t\tgroup = tool.group;", "+\t\t\tPaintAction action = new PaintAction(tool);", "+\t\t\ttoolbarManager.appendToGroup(group, action);", "+\t\t\tif (i == PaintExample.Default_tool || i == PaintExample.Default_fill || i == PaintExample.Default_linestyle) {", "+\t\t\t\taction.setChecked(true);", "+\t\tactionBars.updateActionBars();", "+", "+\t\tinstance.setDefaults();", "+\t}", "-\t */", "-\tpublic void createPartControl(Composite parent) {", "-\t\t/*** Initialize shared data ***/", "-\t\tworkbenchDisplay = parent.getDisplay();", "-\t\t", "-\t\tpaintColorWhite = new Color(workbenchDisplay, 255, 255, 255);", "-\t\tpaintColorBlack = new Color(workbenchDisplay, 0, 0, 0);", "-\t\t", "-\t\tpaintDefaultFont = workbenchDisplay.getSystemFont();", "-", "-\t\tpaintColors = new Color[numPaletteCols * numPaletteRows];", "-\t\tpaintColors[0] = paintColorBlack;", "-\t\tpaintColors[1] = paintColorWhite;", "-\t\tfor (int i = 2; i < paintColors.length; i++) {", "-\t\t\tpaintColors[i] = new Color(workbenchDisplay,", "-\t\t\t\t((i*7)%255),((i*23)%255), ((i*51)%255));", "-\t\t}", "-", "-\t\ttoolSettings = new ToolSettings();", "-\t\ttoolSettings.commonForegroundColor = paintColorBlack;", "-\t\ttoolSettings.commonBackgroundColor = paintColorWhite;", "-\t\ttoolSettings.commonFont = paintDefaultFont;", "-", "-\t\t/*** Add toolbar contributions ***/", "-\t\tfinal IActionBars actionBars = getViewSite().getActionBars();", "-\t\tIToolBarManager toolbarManager = actionBars.getToolBarManager();", "-", "-\t\ttoolbarManager.add(new GroupMarker(\"group.tools\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Pencil\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Airbrush\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Line\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.PolyLine\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Rectangle\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.RoundedRectangle\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Ellipse\"));", "-\t\ttoolbarManager.appendToGroup(\"group.tools\", new SelectPaintToolAction(\"tool.Text\"));", "-\t\ttoolbarManager.add(new Separator());", "-\t\ttoolbarManager.add(new GroupMarker(\"group.options.fill\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.fill\", new SelectFillTypeAction(\"fill.None\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.fill\", new SelectFillTypeAction(\"fill.Outline\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.fill\", new SelectFillTypeAction(\"fill.Solid\"));", "-\t\ttoolbarManager.add(new Separator());", "-\t\ttoolbarManager.add(new GroupMarker(\"group.options.linestyle\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.linestyle\", new SelectLineStyleAction(\"linestyle.Solid\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.linestyle\", new SelectLineStyleAction(\"linestyle.Dash\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.linestyle\", new SelectLineStyleAction(\"linestyle.Dot\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options.linestyle\", new SelectLineStyleAction(\"linestyle.DashDot\"));", "-\t\ttoolbarManager.add(new Separator());", "-\t\ttoolbarManager.add(new GroupMarker(\"group.options\"));", "-\t\ttoolbarManager.appendToGroup(\"group.options\", new SelectFontAction(\"options.Font\"));", "-\t\tactionBars.updateActionBars();", "-", "-\t\t/*** Build GUI ***/", "-\t\tcreateGUI(parent);", "-", "-\t\t/*** Set defaults ***/", "-\t\tsetPaintToolByID(\"tool.Pencil\");", "-\t\tsetFillTypeByID(\"fill.None\");", "-\t\tsetLineStyleByID(\"linestyle.Solid\");", "-\t\tsetForegroundColor(paintColorBlack);", "-\t\tsetBackgroundColor(paintColorWhite);", "-\t}"]}], "num": 37303}