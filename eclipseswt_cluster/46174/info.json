{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5347e071db7b2f3b902c3d7048a6127", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db5303666fb94dd06f53a6cb82f944f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5b8aaf545fc4054ab57f7dc34664d38e8adc83b6", "commitAfterChange": "6ce82e8d17055101e2f32d529ca61bfe95b8747f", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\t\t", "-\t\t\t\t//TODO - only double buffer the damage", "-//\t\t\t\tint x = ps.left, y = ps.top;", "-//\t\t\t\tint width = ps.right - ps.left;", "-//\t\t\t\tint height = ps.bottom - ps.top;", "-\t\t\t\tforceResize ();", "-\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\t\tint x = rect.left, y = rect.top;", "-\t\t\t\tint width = rect.right - rect.left;", "-\t\t\t\tint height = rect.bottom - rect.top;", "-\t\t\t\t", "-\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "-\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\tint width = ps.right - ps.left;", "+\t\t\t\tint height = ps.bottom - ps.top;", "+\t\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\t\tPOINT lpPoint1 = new POINT (), lpPoint2 = new POINT ();", "+\t\t\t\t\tOS.SetWindowOrgEx (hDC, ps.left, ps.top, lpPoint1);", "+\t\t\t\t\tOS.SetBrushOrgEx (hDC, ps.left, ps.top, lpPoint2);", "+\t\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t\t}", "+\t\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\t\tOS.SetWindowOrgEx (hDC, lpPoint1.x, lpPoint1.y, null);", "+\t\t\t\t\tOS.SetBrushOrgEx (hDC, lpPoint2.x, lpPoint2.y, null);", "+\t\t\t\t\tOS.BitBlt (paintDC, ps.left, ps.top, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.gc = gc;", "+\t\t\t\t\t\tevent.x = ps.left;", "+\t\t\t\t\t\tevent.y = ps.top;", "+\t\t\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\t\t// widget could be disposed at this point", "+\t\t\t\t\t\tevent.gc = null;", "+\t\t\t\t\t\tgc.dispose ();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn new LRESULT (code);", "-\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\t\tOS.DeleteObject (hDC);", "-\t\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.gc = gc;", "-\t\t\t\t\tevent.x = ps.left;", "-\t\t\t\t\tevent.y = ps.top;", "-\t\t\t\t\tevent.width = ps.right - ps.left;", "-\t\t\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\t\t// widget could be disposed at this point", "-\t\t\t\t\tevent.gc = null;", "-\t\t\t\t\tgc.dispose ();", "-\t\t\t\t} else {", "-\t\t\t\t\tOS.EndPaint (handle, ps);", "-\t\t\t\t}", "-\t\t\t\treturn new LRESULT (code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fca08e4b0c03d47428c72ffa6791d90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a3933d2bb483ba60f5140d79e7e6aae57a4f2172", "commitAfterChange": "6fcbcc55b433d3a443e04296f4c46435879366f4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\tif (findImageControl () != null) {", "+\t\t\tboolean doubleBuffer = findImageControl () != null;", "+\t\t\tboolean drawMessage = false;", "+\t\t\tif ((style & SWT.SEARCH) != 0) {", "+\t\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION < OS.VERSION (6, 0)) {", "+\t\t\t\t\tdrawMessage = hwnd != OS.GetFocus () && OS.GetWindowTextLength (handle) == 0;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (doubleBuffer || drawMessage) {", "-\t\t\t\t\tint /*long*/ hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\t\t\tPOINT lpPoint1 = new POINT (), lpPoint2 = new POINT ();", "-\t\t\t\t\tOS.SetWindowOrgEx (hDC, ps.left, ps.top, lpPoint1);", "-\t\t\t\t\tOS.SetBrushOrgEx (hDC, ps.left, ps.top, lpPoint2);", "-\t\t\t\t\tint /*long*/ hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\t\t\tint /*long*/ hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "-\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t\tint /*long*/ hDC = paintDC, hBitmap = 0, hOldBitmap = 0;", "+\t\t\t\t\tPOINT lpPoint1 = null, lpPoint2 = null;", "+\t\t\t\t\tif (doubleBuffer) {", "+\t\t\t\t\t\thDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\t\t\tlpPoint1 = new POINT ();", "+\t\t\t\t\t\tlpPoint2 = new POINT ();", "+\t\t\t\t\t\tOS.SetWindowOrgEx (hDC, ps.left, ps.top, lpPoint1);", "+\t\t\t\t\t\tOS.SetBrushOrgEx (hDC, ps.left, ps.top, lpPoint2);", "+\t\t\t\t\t\thBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\t\t\thOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t\t}", "+\t\t\t\t\t", "-\t\t\t\t\tOS.SetWindowOrgEx (hDC, lpPoint1.x, lpPoint1.y, null);", "-\t\t\t\t\tOS.SetBrushOrgEx (hDC, lpPoint2.x, lpPoint2.y, null);", "-\t\t\t\t\tOS.BitBlt (paintDC, ps.left, ps.top, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in XP. Windows does not draw the cue message on XP when", "+\t\t\t\t\t* East Asian language pack is installed. The fix is to draw", "+\t\t\t\t\t* the cue messages ourselves.", "+\t\t\t\t\t* Note:  This bug is fixed on Vista.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (drawMessage) {", "+\t\t\t\t\t\tRECT rect = new RECT();", "+\t\t\t\t\t\tOS.GetClientRect(handle, rect);", "+\t\t\t\t\t\tint margins = OS.SendMessage (handle, OS.EM_GETMARGINS, 0, 0);", "+\t\t\t\t\t\trect.left += OS.LOWORD (margins);", "+\t\t\t\t\t\trect.right -= OS.HIWORD (margins);", "+\t\t\t\t\t\tif ((style & SWT.BORDER) != 0) {", "+\t\t\t\t\t\t\trect.left++;", "+\t\t\t\t\t\t\trect.top++;", "+\t\t\t\t\t\t\trect.right--;", "+\t\t\t\t\t\t\trect.bottom--;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), message, false);", "+\t\t\t\t\t\tint uFormat = OS.DT_EDITCONTROL;", "+\t\t\t\t\t\tif ((style & SWT.RIGHT_TO_LEFT) != 0) {", "+\t\t\t\t\t\t\tuFormat |= OS.DT_RTLREADING | OS.DT_RIGHT;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tint /*long*/ hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\t\tint /*long*/ hOldFont = OS.SelectObject (hDC, hFont);", "+\t\t\t\t\t\tOS.SetTextColor (hDC, OS.GetSysColor (OS.COLOR_GRAYTEXT));", "+\t\t\t\t\t\tOS.SetBkMode (hDC, OS.TRANSPARENT);", "+\t\t\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, uFormat);", "+\t\t\t\t\t\tOS.SelectObject (hDC, hOldFont);", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tif (doubleBuffer) {", "+\t\t\t\t\t\tOS.SetWindowOrgEx (hDC, lpPoint1.x, lpPoint1.y, null);", "+\t\t\t\t\t\tOS.SetBrushOrgEx (hDC, lpPoint2.x, lpPoint2.y, null);", "+\t\t\t\t\t\tOS.BitBlt (paintDC, ps.left, ps.top, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\t\t}"]}], "num": 46174}