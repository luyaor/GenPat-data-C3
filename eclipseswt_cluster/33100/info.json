{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d2af80b7632e5ee39b16a34d2b635d4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0580dd723634c51fdfe807596f913dec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabItem.java", "commitBeforeChange": "0a0d68ccc965d964425467b0f4596a46bebec755", "commitAfterChange": "21892980b713722b00fd37f2cf57ebee1e87ffdb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public void setText (String string)", "signatureAfterChange": "\r public void setText (String string)", "diff": ["-\tif (!isValidThread ()) error (SWT.ERROR_THREAD_INVALID_ACCESS);\r", "-\tif (!isValidWidget ()) error (SWT.ERROR_WIDGET_DISPOSED);\r", "+\tcheckWidget ();\r", "-\tbyte [] buffer = string2bytesConvertMnemonic(string);\r", "-\tOS.gtk_label_parse_uline(handle, buffer);\r", "+\tint length = string.length ();\r", "+\tchar [] text = new char [length + 1];\r", "+\tstring.getChars (0, length, text, 0);\r", "+\tfor (int i=0; i<length; i++) {\r", "+\t\tif (text [i] == '&') text [i] = '_';\r", "+\t}\r", "+\tbyte [] buffer = Converter.wcsToMbcs (null, text);\r", "+\tOS.gtk_label_set_text_with_mnemonic (handle, buffer);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01142232efe6886fc05fcea2fbbb6527", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "9e2e2840ac367eab30032d03153cd028ed78aaef", "commitAfterChange": "6a4fab6a6810d4c98deea393a2884fa3aa164dfe", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 48, "signatureBeforeChange": " int[] getLineSegments(int index, int[] defaultSegments)", "signatureAfterChange": " void setLineSegmentChars(int startLine, int count, char[] segmentChars)", "diff": ["-int[] getLineSegments(int index, int[] defaultSegments) {", "-\tif (lines == null) return defaultSegments;", "-\tLineInfo info = lines[index];", "-\tif (info != null && (info.flags & SEGMENTS) != 0) {", "-\t\treturn info.segments;", "-\t}", "-\treturn defaultSegments;", "-}", "+void setLineSegmentChars(int startLine, int count, char[] segmentChars) {", "+\tif (lines == null) lines = new LineInfo[lineCount];", "+\tfor (int i = startLine; i < startLine + count; i++) {", "+\t\tif (lines[i] == null) {", "+\t\t\tlines[i] = new LineInfo();", "+\t\t}", "+\t\tlines[i].flags |= SEGMENT_CHARS;", "+\t\tlines[i].segmentsChars = segmentChars;", "+\t}", "+}"]}], "num": 33100}