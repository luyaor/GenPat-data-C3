{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a96cfa6f1b7486dd5553a9fcf3703f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "705701ab75b9893d6962fe545b20edab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7062e8fe1522be954953abe736d74a670f61f8b5", "commitAfterChange": "84b2f7384099fd4b35f3cdd74a78ca15b410fdfe", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public Monitor getPrimaryMonitor()", "signatureAfterChange": " public Monitor getPrimaryMonitor ()", "diff": ["-public Monitor getPrimaryMonitor() {", "+public Monitor getPrimaryMonitor () {", "-\t\tmonitor.handle = 0;", "-\t\tmonitor.bounds = new Rectangle (0, 0, width, height);", "+\t\tmonitor.width = width;", "+\t\tmonitor.height = height;", "-\t\tmonitor.clientArea = new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);", "+\t\tmonitor.clientX = rect.left;", "+\t\tmonitor.clientY = rect.top;", "+\t\tmonitor.clientWidth = rect.right - rect.left;", "+\t\tmonitor.clientHeight = rect.bottom - rect.top;", "-\tmonitors = new Monitor[4];", "+\tmonitors = new Monitor [4];", "-\tOS.EnumDisplayMonitors(0, null, lpfnEnum, 0);", "-\tcallback.dispose();", "+\tOS.EnumDisplayMonitors (0, null, lpfnEnum, 0);", "+\tcallback.dispose ();", "-\tMONITORINFO lpmi = new MONITORINFO();", "+\tMONITORINFO lpmi = new MONITORINFO ();", "-\t\tMonitor monitor = monitors[i];", "-\t\tOS.GetMonitorInfo(monitors[i].handle, lpmi);", "+\t\tMonitor monitor = monitors [i];", "+\t\tOS.GetMonitorInfo (monitors [i].handle, lpmi);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fbdb68f361db8044faa9772e58050b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7062e8fe1522be954953abe736d74a670f61f8b5", "commitAfterChange": "84b2f7384099fd4b35f3cdd74a78ca15b410fdfe", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public Monitor[] getMonitors()", "signatureAfterChange": " public Monitor [] getMonitors ()", "diff": ["-public Monitor[] getMonitors() {", "+public Monitor [] getMonitors () {", "-\t\tMonitor monitor = new Monitor();", "-\t\tmonitor.handle = 0;", "-\t\tint width = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "-\t\tint height = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\tmonitor.bounds = new Rectangle (0, 0, width, height);", "-\t\tRECT rect = new RECT ();", "-\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "-\t\tmonitor.clientArea = new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);", "-\t\treturn new Monitor[] { monitor };", "+\t\treturn new Monitor [] {getPrimaryMonitor ()};", "-\tmonitors = new Monitor[4];", "+\tmonitors = new Monitor [4];", "-\tOS.EnumDisplayMonitors(0, null, lpfnEnum, 0);", "-\tcallback.dispose();", "-\tMonitor[] result = new Monitor[monitorCount];", "-\tSystem.arraycopy(monitors, 0, result, 0, monitorCount);", "+\tOS.EnumDisplayMonitors (0, null, lpfnEnum, 0);", "+\tcallback.dispose ();", "+\tMonitor [] result = new Monitor [monitorCount];", "+\tSystem.arraycopy (monitors, 0, result, 0, monitorCount);"]}], "num": 55902}