{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aab2348451299c73e60e036cd268e358", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f69c4a9ef1c369b9be1cd7ce5d0ac5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "248e15351952f7cde8809fbcef225c10f9c9d3ba", "commitAfterChange": "89498d087b112ee47f18894cd93766168d305d64", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tint [] ptr2 = new int [1];", "-\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "-\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "-\t\t\twidth = Math.max (width, size2.x);", "-\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);", "+\t}", "+\tint length = message.length ();", "+\tif ((style & SWT.SINGLE) != 0 && length > 0) {", "+\t\tchar [] buffer = new char [length];", "+\t\tmessage.getChars (0, length, buffer, 0);", "+\t\tPoint size = textExtent (buffer, 0);", "+\t\twidth = Math.max (width, size.x);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2a3b3c4da8dad11c5f64fea28dba01b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "966068aaa7215bc84ab090be34f0ec9f9cebb06c", "commitAfterChange": "c599c5b678cf64680c86543b4f7a10205d3638e9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\t\tif ((style & SWT.SEARCH) != 0) {", "+\t\t\tint [] ptr1 = new int [1];", "+\t\t\tOS.GetControlData (handle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr1, null);", "+\t\t\tPoint size1 = textExtent (ptr1 [0], 0);", "+\t\t\tif (ptr1 [0] != 0) OS.CFRelease (ptr1 [0]);", "+\t\t\twidth = size1.x;", "+\t\t\tint [] ptr2 = new int [1];", "+\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "+\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "+\t\t\twidth = Math.max (width, size2.x);", "+\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaaa90463e89ef7ccdd8f313840faeb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "36bdd0b71f1a0a22f07803d750e77d32d48207d4", "commitAfterChange": "ca86344eb7057b6bfd45bbe279d98cd7e20eaa33", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tint [] ptr2 = new int [1];", "-\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "-\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "-\t\t\twidth = Math.max (width, size2.x);", "-\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);", "+\t\t\t//This code is intentionally commented", "+//\t\t\tint [] ptr2 = new int [1];", "+//\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "+//\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "+//\t\t\twidth = Math.max (width, size2.x);", "+//\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d61e849faa87b5fa237373f069c295", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "218e2bb6feb98d34dd9ccf247614cfc49fdd4d6c", "commitAfterChange": "99bf407b70063e70eb2d0a5650f20c4728ff985d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\t//This code is intentionally commented", "-//\t\t\tint [] ptr2 = new int [1];", "-//\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "-//\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "-//\t\t\twidth = Math.max (width, size2.x);", "-//\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);", "+\t\t\tint [] ptr2 = new int [1];", "+\t\t\tOS.HISearchFieldCopyDescriptiveText (handle, ptr2);", "+\t\t\tPoint size2 = textExtent (ptr2 [0], 0);", "+\t\t\twidth = Math.max (width, size2.x);", "+\t\t\tif (ptr2 [0] != 0) OS.CFRelease (ptr2 [0]);"]}], "num": 27135}