{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42b188b91e3801c67a39cb716bd55de7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329ab1bdb2095ddd3150741f6eed7db8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a15e74fa4fc558db41d7b6459560396680bcb2a9", "commitAfterChange": "2177973a521d0eada801b33df10034dd8a9f4625", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  public boolean execute (String script)", "signatureAfterChange": "  public boolean execute (String script)", "diff": ["-\tString url = PREFIX_JAVASCRIPT + script + \";void(0);\";\t//$NON-NLS-1$", "+\t/*", "+\t* This could be the first content that is set into the browser, so", "+\t* ensure that the custom subclass that works around Mozilla bug", "+\t* https://bugzilla.mozilla.org/show_bug.cgi?id=453523 is removed.", "+\t*/", "+\tdelegate.removeWindowSubclass ();", "+", "+\t/*", "+\t* As of mozilla 1.9 executing javascript via the javascript: protocol no", "+\t* longer happens synchronously.  As a result, the result of executing JS", "+\t* is not returned to the java side when expected by the client.  The", "+\t* workaround is to invoke the javascript handler directly via C++, which is", "+\t* exposed as of mozilla 1.9.", "+\t*/", "+\tif (!IsPre_1_9) {", "+\t\tint rc = XPCOM.NS_GetServiceManager (result);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\tresult[0] = 0;", "+\t\tnsIPrincipal principal = null;", "+\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_SCRIPTSECURITYMANAGER_CONTRACTID, true);", "+\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9_1.NS_ISCRIPTSECURITYMANAGER_IID, result);", "+\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\tnsIScriptSecurityManager_1_9_1 securityManager = new nsIScriptSecurityManager_1_9_1 (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = securityManager.GetSystemPrincipal (result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tprincipal = new nsIPrincipal (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tsecurityManager.Release ();", "+\t\t} else {", "+\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIScriptSecurityManager_1_9.NS_ISCRIPTSECURITYMANAGER_IID, result);", "+\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\tnsIScriptSecurityManager_1_9 securityManager = new nsIScriptSecurityManager_1_9 (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = securityManager.GetSystemPrincipal (result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\tprincipal = new nsIPrincipal (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tsecurityManager.Release ();", "+\t\t\t}", "+\t\t}", "+\t\tserviceManager.Release ();", "+", "+\t\tif (principal != null) {", "+\t\t\trc = webBrowser.QueryInterface (nsIInterfaceRequestor.NS_IINTERFACEREQUESTOR_IID, result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "+", "+\t\t\tnsIInterfaceRequestor interfaceRequestor = new nsIInterfaceRequestor (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tnsID scriptGlobalObjectNSID = new nsID (\"6afecd40-0b9a-4cfd-8c42-0f645cd91829\"); /* nsIScriptGlobalObject */ //$NON-NLS-1$", "+\t\t\trc = interfaceRequestor.GetInterface (scriptGlobalObjectNSID, result);", "+\t\t\tinterfaceRequestor.Release ();", "+", "+\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\tint /*long*/ scriptGlobalObject = result[0];", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = XPCOM.nsIScriptGlobalObject_EnsureScriptEnvironment (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tint /*long*/ scriptContext = XPCOM.nsIScriptGlobalObject_GetScriptContext (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "+\t\t\t\tint /*long*/ globalJSObject = XPCOM.nsIScriptGlobalObject_GetScriptGlobal (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "+\t\t\t\tnew nsISupports (scriptGlobalObject).Release ();", "+", "+\t\t\t\tif (scriptContext != 0 && globalJSObject != 0) {", "+\t\t\t\t\t/* ensure that the received nsIScriptContext implements the expected interface */", "+\t\t\t\t\tnsID scriptContextNSID = new nsID (\"e7b9871d-3adc-4bf7-850d-7fb9554886bf\"); /* nsIScriptContext */ //$NON-NLS-1$\t\t\t\t\t", "+\t\t\t\t\trc = new nsISupports (scriptContext).QueryInterface (scriptContextNSID, result);", "+\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\tnew nsISupports (result[0]).Release ();", "+\t\t\t\t\t\tresult[0] = 0;", "+", "+\t\t\t\t\t\tint /*long*/ nativeContext = XPCOM.nsIScriptContext_GetNativeContext (scriptContext);", "+\t\t\t\t\t\tif (nativeContext != 0) {", "+\t\t\t\t\t\t\tint length = script.length ();", "+\t\t\t\t\t\t\tchar[] scriptChars = new char[length];", "+\t\t\t\t\t\t\tscript.getChars(0, length, scriptChars, 0);", "+\t\t\t\t\t\t\tbyte[] urlbytes = MozillaDelegate.wcsToMbcs (null, getUrl (), true);", "+\t\t\t\t\t\t\trc = principal.GetJSPrincipals (nativeContext, result);", "+\t\t\t\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\t\t\t\t\tint /*long*/ principals = result[0];", "+\t\t\t\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\t\t\t\tprincipal.Release ();", "+\t\t\t\t\t\t\t\tString mozillaPath = LocationProvider.mozillaPath + delegate.getJSLibraryName () + '\\0';", "+\t\t\t\t\t\t\t\tbyte[] pathBytes = null;", "+\t\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\t\tpathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\t\t\t\tpathBytes = mozillaPath.getBytes ();", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\trc = XPCOM.JS_EvaluateUCScriptForPrincipals (pathBytes, nativeContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, result);", "+\t\t\t\t\t\t\t\treturn rc != 0;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tprincipal.Release ();", "+\t\t}", "+\t}", "+", "+\t/* fall back to the pre-1.9 approach */", "+", "+\tString url = PREFIX_JAVASCRIPT + script + \";void(0);\";\t//$NON-NLS-1$", "-", "-\t/*", "-\t * This could be the first content that is set into the browser, so", "-\t * ensure that the custom subclass that works around Mozilla bug", "-\t * https://bugzilla.mozilla.org/show_bug.cgi?id=453523 is removed.", "-\t */", "-\tdelegate.removeWindowSubclass ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e59f58b61653180a13651da4cdc60a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "3fa10aec500a4081c70ceb9a57998af702891944", "commitAfterChange": "a84c4f3464a5f713e18d5891323717c2051b011d", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 118, "signatureBeforeChange": "  @Override public boolean execute (String script)", "signatureAfterChange": " @Override public boolean execute (String script)", "diff": ["+}", "+@Override", "+\tlong /*int*/[] result = new long /*int*/[1];", "+\t/*", "+\t* As of mozilla 1.9 executing javascript via the javascript: protocol no", "+\t* longer happens synchronously.  As a result, the result of executing JS", "+\t* is not returned to the java side when expected by the client.  The", "+\t* workaround for version 24 is to use a javascript-implemented component", "+\t* which then executes synchronously.", "+\t*/", "+\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) {", "+\t\tresult[0] = 0;", "+\t\tint rc = webBrowser.QueryInterface(IIDStore.GetIID (nsIInterfaceRequestor.class), result);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\tnsIInterfaceRequestor interfaceRequestor = new nsIInterfaceRequestor (result[0]);", "+\t\tresult[0] = 0;", "+\t\trc = XPCOM.NS_GetServiceManager (result);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\t\tresult[0] = 0;", "+\t\trc = interfaceRequestor.GetInterface (IIDStore.GetIID (nsIDOMWindow.class), result);", "+\t\tinterfaceRequestor.Release ();", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "+\t\tresult[0] = 0;", "+\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.EXECUTE_CONTRACTID, true);", "+\t\trc = serviceManager.GetServiceByContractID (aContractID, IIDStore.GetIID (Execute.class), result);", "+\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\tExecute execute = new Execute (result[0]);", "+\t\tresult[0] = 0;", "+\t\tnsEmbedString data = new nsEmbedString (script);", "+\t\trc = execute.EvalInWindow (window, data, result);", "+\t\tif (result[0] != 0)", "+\t\t\tnew nsIVariant (result[0]).Release ();", "+\t\tdata.dispose ();", "+\t\texecute.Release ();", "+\t\treturn rc == XPCOM.NS_OK;", "+\t}", "+", "-\tlong /*int*/[] result = new long /*int*/[1];", "-\t\t\t\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) { /* >= 24.x */", "-\t\t\t\t\t\trc = (int/*64*/)XPCOM.nsIScriptGlobalObject24_EnsureScriptEnvironment (scriptGlobalObject);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\trc = (int/*64*/)XPCOM.nsIScriptGlobalObject_EnsureScriptEnvironment (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "-\t\t\t\t\t}", "+\t\t\t\t\trc = (int/*64*/)XPCOM.nsIScriptGlobalObject_EnsureScriptEnvironment (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "-\t\t\t\t\t\tlong /*int*/ scriptContext;", "-\t\t\t\t\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) { /* >= 24.x */", "-\t\t\t\t\t\t\tscriptContext = XPCOM.nsIScriptGlobalObject24_GetScriptContext (scriptGlobalObject);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tscriptContext = XPCOM.nsIScriptGlobalObject_GetScriptContext (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tlong /*int*/ scriptContext = XPCOM.nsIScriptGlobalObject_GetScriptContext (scriptGlobalObject, 2); /* nsIProgrammingLanguage.JAVASCRIPT */", "-\t\t\t\t\t\t\t\tlong /*int*/ jsContext;", "-\t\t\t\t\t\t\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) { /* >= 24.x */", "-\t\t\t\t\t\t\t\t\tjsContext = XPCOM.nsIScriptContext24_GetNativeContext (scriptContext);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\tjsContext = XPCOM.nsIScriptContext_GetNativeContext (scriptContext);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tlong /*int*/ jsContext = XPCOM.nsIScriptContext_GetNativeContext (scriptContext);", "-\t\t\t\t\t\t\t\t\tlong /*int*/ globalJSObject;", "-\t\t\t\t\t\t\t\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) { /* >= 24.x */", "-\t\t\t\t\t\t\t\t\t\tglobalJSObject = XPCOM.nsIScriptGlobalObject24_GetGlobalJSObject (scriptGlobalObject);", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tglobalJSObject = XPCOM.JS_GetGlobalObject (jsLibPath, jsContext);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tlong /*int*/ globalJSObject = XPCOM.JS_GetGlobalObject (jsLibPath, jsContext);", "-\t\t\t\t\t\t\t\t\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24)) { /* >= 24.x */", "-\t\t\t\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals24 (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, 0) != 0;", "-\t\t\t\t\t\t\t\t\t\t\t// should principals be Release()d too?", "-\t\t\t\t\t\t\t\t\t\t\tnew nsISupports (scriptGlobalObject).Release ();", "-\t\t\t\t\t\t\t\t\t\t\tprincipal.Release ();", "-\t\t\t\t\t\t\t\t\t\t\tserviceManager.Release ();", "-\t\t\t\t\t\t\t\t\t\t\treturn success;", "-\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t/* 1.9.x - 10.x */"]}], "num": 57117}