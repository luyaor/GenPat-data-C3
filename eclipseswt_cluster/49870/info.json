{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9855c63a062f8c23637216850b37ee8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6abf8024015af674da7e5c86fb5e7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "8687cd618665675e4d4eec2fb36e773a2eec96b3", "commitAfterChange": "dec417ccdc6a050dac541d5eb88bff5d26e71096", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 81, "signatureBeforeChange": "  int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData) {", "+\tDisplay display = this.display;", "+\tint [] modifiers = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, modifiers.length * 4, null, modifiers);", "+\tint lastModifiers = display.lastModifiers;", "+\tint chord = OS.GetCurrentEventButtonState ();", "+\tint type = SWT.KeyUp;", "+\tif ((modifiers [0] & OS.alphaLock) != 0 && (lastModifiers & OS.alphaLock) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.shiftKey) != 0 && (lastModifiers & OS.shiftKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.controlKey) != 0 && (lastModifiers & OS.controlKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.cmdKey) != 0 && (lastModifiers & OS.cmdKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.optionKey) != 0 && (lastModifiers & OS.optionKey) == 0) type = SWT.KeyDown;", "+\tif (type == SWT.KeyUp && (modifiers [0] & OS.alphaLock) == 0 && (lastModifiers & OS.alphaLock) != 0) {", "+\t\tEvent event = new Event ();", "+\t\tevent.keyCode = SWT.CAPS_LOCK;", "+\t\tsetInputState (event, SWT.KeyDown, chord, modifiers [0]);", "+\t\tsendKeyEvent (SWT.KeyDown, event);", "+\t}", "+\tEvent event = new Event ();", "+\tsetInputState (event, type, chord, modifiers [0]);", "+\tif (event.keyCode == 0 && event.character == 0) return OS.eventNotHandledErr;", "+\tboolean result = sendKeyEvent (type, event);", "+\tif (type == SWT.KeyDown && (modifiers [0] & OS.alphaLock) != 0 && (lastModifiers & OS.alphaLock) == 0) {", "+\t\tevent = new Event ();", "+\t\tevent.keyCode = SWT.CAPS_LOCK;", "+\t\tsetInputState (event, SWT.KeyUp, chord, modifiers [0]);", "+\t\tsendKeyEvent (SWT.KeyUp, event);", "+\t}", "+\tdisplay.lastModifiers = modifiers [0];", "+\treturn result ? OS.eventNotHandledErr : OS.noErr;", "+}", "-int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData) {", "-\treturn OS.eventNotHandledErr;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bda1e7337f0952482ac203b4c3dc46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 63, "signatureBeforeChange": " int processResize (Object callData)", "signatureAfterChange": "  int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData)", "diff": ["-int processResize (Object callData) {", "-\tsendEvent (SWT.Resize);", "-\t// widget could be disposed at this point", "-\treturn 0;", "-}", "+", "+int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData) {", "+\tint [] modifiers = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, modifiers.length * 4, null, modifiers);", "+\tDisplay display = getDisplay ();", "+\tint lastModifiers = display.lastModifiers;", "+\tint type = SWT.KeyUp;", "+\tif ((modifiers [0] & OS.shiftKey) != 0 && (lastModifiers & OS.shiftKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.controlKey) != 0 && (lastModifiers & OS.controlKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.cmdKey) != 0 && (lastModifiers & OS.cmdKey) == 0) type = SWT.KeyDown;", "+\tif ((modifiers [0] & OS.optionKey) != 0 && (lastModifiers & OS.optionKey) == 0) type = SWT.KeyDown;", "+\tboolean result = sendKeyEvent (type, theEvent);", "+\tdisplay.lastModifiers = modifiers [0];", "+\treturn result ? OS.eventNotHandledErr : OS.noErr;"]}], "num": 49870}