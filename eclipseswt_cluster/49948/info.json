{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3f8838434030d3be6b3e0eddbd745ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5584e27d730ee66bd73c44468d6621be", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "29bcaa1b4769d420d56afc2f693a7f49132f5c45", "commitAfterChange": "74cf1aa71759b357e771503c2ded76e4ee012f59", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "  void windowSendEvent (long id, long sel, long event)", "signatureAfterChange": "  void windowSendEvent (long id, long sel, long event)", "diff": ["-\t\t\tif (nsEvent.keyCode() == 53 /* ESC */) {", "-\t\t\t\tif (menuBar != null && !menuBar.isDisposed()) {", "-\t\t\t\t\tif (menuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "-\t\t\t\t} else if (display.appMenuBar != null && !display.appMenuBar.isDisposed()) {", "-\t\t\t\t\tif (display.appMenuBar.nsMenu.performKeyEquivalent(nsEvent)) {", "-\t\t\t\t\t\treturn;", "+\t\t\tif (display.escAsAcceleratorPresent && nsEvent.keyCode() == 53 /* ESC */) {", "+\t\t\t\tif (escMenuItem == null || escMenuItem.getAccelerator() != SWT.ESC) {", "+\t\t\t\t\tupdateEscMenuItem();", "+\t\t\t\t}", "+\t\t\t\tif (escMenuItem != null) {", "+\t\t\t\t\tMenu parentMenu = escMenuItem.getParent();", "+\t\t\t\t\tif (parentMenu != null) {", "+\t\t\t\t\t\tNSMenu escNSMenu = parentMenu.nsMenu;", "+\t\t\t\t\t\tif (escNSMenu != null) {", "+\t\t\t\t\t\t\tescNSMenu.performKeyEquivalent(nsEvent);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f65eab5fdbb4817b509b1b19e613b05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "1001335a053916393508117a5ee98a23a5333376", "commitAfterChange": "db25a08ca1c9d9c822c66f8d5e69d2d39e9326a2", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "signatureAfterChange": " \t \tid getNumberOfCharactersAttribute (int childID)", "diff": ["-\t\tif (accessibleTextExtendedListeners.size() > 0) {", "-\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\t\tlistener.getCharacterCount(event);", "-\t\t\t}", "-\t\t\treturnValue = NSNumber.numberWithInt(event.count);", "-\t\t} else {", "-\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\t\tevent.childID = childID;", "-\t\t\tevent.result = null;", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.count = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tif (event.count == -1) {", "+\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "+\t\t\te.childID = ACC.CHILDID_SELF;", "-\t\t\t\tlistener.getValue(event);", "+\t\t\t\tlistener.getRole(e);", "+\t\t\t\tlistener.getValue(e);", "-\t\t\tString appValue = event.result;", "-\t\t\tif (appValue != null) {", "-\t\t\t\treturnValue = NSNumber.numberWithInt(appValue.length());", "-\t\t\t}", "+\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "+\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "+\t\t\treturnValue = NSNumber.numberWithInt(event.count);"]}], "num": 49948}