{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8daa7df7f8ad6a3d068eeabaf08912c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305d295ade2ea6f57491a3f0b2e0e82d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "19fe62c08a14deb8e2bf089dd6c3d564f767039d", "commitAfterChange": "445337d8bb4d71f80e4d409a69aad8e01974504c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void bold(boolean bold)", "signatureAfterChange": "\r void bold(boolean bold)", "diff": ["+\tPoint sel = text.getSelectionRange();\r", "+\tif ((sel != null) && (sel.y != 0)) {\r", "+\t\tStyleRange style;\r", "+\t\tint fontStyle = SWT.NORMAL;\r", "+\t\tif (isBold) fontStyle = SWT.BOLD;\r", "+\t\tstyle = new StyleRange(sel.x, sel.y, null, null, fontStyle);\r", "+\t\ttext.setStyleRange(style);\r", "+\t}\r", "+\ttext.setSelectionRange(sel.x + sel.y, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa09c4de05b25bb5ea23a6e187758dda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "a1b37d137b5adf259d9950ea1c27c5bc3d07bfa7", "commitAfterChange": "553d7364f85189cde07e065aaa5ba7380f0c1418", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tif (data.gdipGraphics != 0) {", "+\tint gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);", "-\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\tGdip.Graphics_GetTransform(data.gdipGraphics, matrix);", "-\t\tGdip.Graphics_SetTransform(data.gdipGraphics, identity);", "-\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "-\t\tGdip.Graphics_SetTransform(data.gdipGraphics, matrix);", "-\t\tGdip.Matrix_delete(identity);", "-\t\tGdip.Matrix_delete(matrix);", "-\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);", "+\t\tif (Gdip.Region_IsInfinite(rgn, gdipGraphics)) {", "+\t\t\tRect rect = new Rect();", "+\t\t\tGdip.Graphics_GetVisibleClipBounds(gdipGraphics, rect);", "+\t\t\tOS.SetRectRgn(region.handle, rect.X, rect.Y, rect.Width, rect.Height);", "+\t\t} else {", "+\t\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tint identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tGdip.Graphics_GetTransform(gdipGraphics, matrix);", "+\t\t\tGdip.Graphics_SetTransform(gdipGraphics, identity);", "+\t\t\tint hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "+\t\t\tGdip.Graphics_SetTransform(gdipGraphics, matrix);", "+\t\t\tGdip.Matrix_delete(identity);", "+\t\t\tGdip.Matrix_delete(matrix);", "+\t\t\tOS.CombineRgn(region.handle, hRgn, 0, OS.RGN_COPY);", "+\t\t}", "+\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23aa67493a974064326e77b7708da5c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "e7b8e72222a611eea025379e495a9dde74bc3834", "commitAfterChange": "d1a1f466a5b1034bb65f10b01f11cf9365d43ea4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r void createItem (CoolItem item, int index)", "diff": ["+\t\t\r", "+\t\t// Set the last item in the row to the preferred size \r", "+\t\t// and add the new one just to it's right\r", "+\t\tint lastIndex = items[row].length - 1;\r", "+\t\tCoolItem lastItem = items[row][lastIndex];\r", "+\t\tif (lastItem.preferredWidth != -1) {\r", "+\t\t\tRectangle bounds = lastItem.getBounds();\r", "+\t\t\tbounds.width = lastItem.preferredWidth;\r", "+\t\t\tlastItem.requestedWidth = lastItem.preferredWidth;\r", "+\t\t\tlastItem.setBounds(bounds.x, bounds.y, bounds.width, bounds.height);  \r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8a7a81c6dcb141c23b40f23555e50f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "66a95066be25462b501b7c1e51178de7cfbd6dfa", "commitAfterChange": "9d1439265256d4dc44e7ee7f2321b1596dcd5b6c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  boolean dragDetect (int x, int y)", "signatureAfterChange": "  boolean dragDetect (int hwnd, int x, int y, boolean filter, boolean [] detect, boolean [] consume)", "diff": ["-boolean dragDetect (int x, int y) {", "-\treturn hooks (SWT.DragDetect);", "-}", "+boolean dragDetect (int hwnd, int x, int y, boolean filter, boolean [] detect, boolean [] consume) {", "+\tif (!hooks (SWT.DragDetect)) return false;", "+\tif (consume != null) consume [0] = false;", "+\tif (detect != null) detect [0] = true;", "+\tPOINT pt = new POINT ();", "+\tpt.x = x;", "+\tpt.y = y;", "+\tOS.ClientToScreen (hwnd, pt);", "+\treturn OS.DragDetect (hwnd, pt);"]}], "num": 40849}