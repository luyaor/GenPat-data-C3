{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6437a095282d3f26d8f135bb3492968", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b8c59e1f046f8db7ca24e2164dd1822", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7de2989f15b2bd13e02b5d525529cc8b072bde8e", "commitAfterChange": "e5d64fd81f96f67f474e48cc570d6faada05a8c9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["+\t\tlong /*int*/ queryPtr = OS.g_malloc (GTypeQuery.sizeof);", "+\t\tOS.g_type_query (OS.GTK_TYPE_FIXED(), queryPtr);", "+\t\tGTypeQuery query = new GTypeQuery ();", "+\t\tOS.memmove (query, queryPtr, GTypeQuery.sizeof);", "+\t\tOS.g_free (queryPtr);", "-\t\tfixed_info.class_size = (short) OS.GtkFixedClass_sizeof ();", "+\t\tfixed_info.class_size = (short) query.class_size;", "-\t\tfixed_info.instance_size = (short) OS.GtkFixed_sizeof ();", "+\t\tfixed_info.instance_size = (short) query.instance_size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143095f543ce93823956aa26bf0fa9fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "5e17a2c31aa9cf3be9c0ab82fd0b4b7a31c2518b", "commitAfterChange": "77b8630864ebbb8623a14996279c5e7c3807a62f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean open ()", "signatureAfterChange": "\r public boolean open ()", "diff": ["+\t\r", "+\tint ptrGrabResult = OS.gdk_pointer_grab(xWindow,\r", "+\t                                        true,\r", "+\t                                        OS.GDK_POINTER_MOTION_MASK | OS.GDK_BUTTON_RELEASE_MASK,\r", "+\t                                        xWindow,\r", "+\t                                        cursor,\r", "+\t                                        OS.GDK_CURRENT_TIME());\r", "+\t/*\r", "+\t *  Tracker behaves like a Dialog with its own OS event loop.\r", "+\t */\r", "-\tdrawRectangles();  // clean up our mess\r", "+\tdrawRectangles();\r", "+\tif (ptrGrabResult == OS.GDK_GRAB_SUCCESS)\r", "+\t\tOS.gdk_pointer_ungrab(OS.GDK_CURRENT_TIME());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017451921215da1908f30187c608f6c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "ed9a288df70bc38bf74fc369dac562500bb7bfe8", "commitAfterChange": "3d9a745937224b38cf406ad93b5005f8ff95bd1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "signatureAfterChange": " public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "diff": ["-\tRECT rect = null;", "+\tint length = renderDx.length;", "+\t", "+\t\trenderDx[length-1]--;               //fixes bug 40006", "-\t}", "-\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length, renderDx);", "+\t}\t", "+\t// render transparently to avoid overlapping segments. fixes bug 40006", "+\tint oldBkMode = OS.SetBkMode(gc.handle, OS.TRANSPARENT);", "+\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX , null, renderBuffer, renderBuffer.length, renderDx);", "+\tOS.SetBkMode(gc.handle, oldBkMode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c9c2a1d1b328048ffb82bb35713af7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "700b9da7b57dd076496e6f3b755b2d275ccc859b", "commitAfterChange": "a4c38a5499b7661171c9c6cec483dfebcf3bc42a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["-\t\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, itemRect);", "-\t\t\t\trect.left = itemRect.left;", "-\t\t\t\trect.right = itemRect.right;", "-\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, oldColumn, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t}", "-\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, itemRect);", "-\t\t\t\trect.left = itemRect.left;", "-\t\t\t\trect.right = itemRect.right;", "-\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, newColumn, headerRect) != 0) {", "+\t\t\t\t\tOS.MapWindowPoints (hwndHeader, hwnd, headerRect, 2);", "+\t\t\t\t\trect.left = headerRect.left;", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ca2cee452a358827b962e0de511df3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "426fc51859b6d4601e132b2e785dfed13f779894", "commitAfterChange": "76ed1d1806858168c3841fee7c1ecd8ebb6db9f6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " void paint (GC gc, TableColumn column, boolean paintBackgroundOnly)", "signatureAfterChange": " void paint (GC gc, TableColumn column, boolean paintBackgroundOnly)", "diff": ["-\t\t\t\tparent.itemHeight = event.height;", "+\t\t\t\tparent.itemHeight = event.height + 2 * parent.getCellPadding ();", "-\t\tif (isSelected) {", "+\t\tif (isSelected && (columnIndex == 0 || (parent.style & SWT.FULL_SELECTION) != 0)) {", "-\t\tif (isSelected) {", "+\t\tif (isSelected && (columnIndex == 0 || (parent.style & SWT.FULL_SELECTION) != 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "087a8081e433d6ab419cf1dc13b320d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "6c51b909eb6afeed8622bc4c75203ec999cba4ab", "commitAfterChange": "92df954973cbffd8b7d43710033a40107cbfeb0f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void setOrientation(int orientation)", "signatureAfterChange": " public void setOrientation(int orientation)", "diff": ["+\tint align = OS.pango_layout_get_alignment(layout);", "+\tif (align != OS.PANGO_ALIGN_CENTER) {", "+\t\talign = align == OS.PANGO_ALIGN_LEFT ? OS.PANGO_ALIGN_RIGHT : OS.PANGO_ALIGN_LEFT;", "+\t\tOS.pango_layout_set_alignment(layout, align);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4602a1d6c99dbd33be6ba4fe765ea872", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b8f9d45a80c733a8f5884af87c95e68f3463aaa7", "commitAfterChange": "e2ae18014fd9c71ab4dc0b52900b77c1d3a0f5b7", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 94, "signatureBeforeChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, StyledTextBidi bidi)", "signatureAfterChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, StyledTextBidi bidi)", "diff": ["-\tpaintX = textWidth(line, lineOffset, 0, selectionStart, filterLineStyles(styles), 0, gc, bidi);\t\r", "+\tif (bidi != null) {\r", "+\t\tpaintX = bidiTextWidth(line, lineOffset, 0, selectionStart, 0, bidi);\t\r", "+\t}\r", "+\telse {\r", "+\t\tpaintX = textWidth(line, lineOffset, 0, selectionStart, filterLineStyles(styles), 0, gc);\t\r", "+\t}\r", "-\t\tselectionBackgroundWidth = textWidth(line, lineOffset, selectionStart, selectionLength, styles, paintX, gc, bidi);\r", "+\t\tif (bidi != null) {\r", "+\t\t\tselectionBackgroundWidth = bidiTextWidth(line, lineOffset, selectionStart, selectionLength, paintX, bidi);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\tselectionBackgroundWidth = textWidth(line, lineOffset, selectionStart, selectionLength, styles, paintX, gc);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8189c4e004f606cfc3a1a3aabf57a7b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b36f97e8a58715f907c2ff4f1fa2768aeeedb4d3", "commitAfterChange": "47c737ebfb92a90218e4490fc6b9c7b2ae60d200", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "diff": ["+\tif (handle != hwnd) {", "+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\tif (hwnd == hwndHeader) {", "+\t\t\treturn OS.CallWindowProc (HeaderProc, hwnd, msg, wParam, lParam);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01736a367cb754edc6ca9564dff0fa84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f8d85c84bc214896333b82172f532e8f2bbf581f", "commitAfterChange": "5ab0b46c3d75f162c6b6cf8792f30263354dfdea", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "signatureAfterChange": " TextLayout getTextLayout(int lineIndex, int orientation, int width, int lineSpacing)", "diff": ["+\tint textDirection = orientation;", "+\t\tif ((styledText.getStyle() & SWT.FLIP_TEXT_DIRECTION) != 0) {", "+\t\t\ttextDirection = orientation == SWT.RIGHT_TO_LEFT ? SWT.LEFT_TO_RIGHT : SWT.RIGHT_TO_LEFT;", "+\t\t}", "+\tlayout.setTextDirection(textDirection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298545271fa0b6a1134e96652e8c11cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b1fa1fe3a9c194c31c22688c6c35b4fdd2bd06e9", "commitAfterChange": "84494940264b3cec9943a7888ebbebce42aeeac1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \r int processMouseEnter (int info)", "signatureAfterChange": "\r \r int processMouseEnter (int info)", "diff": ["+\tint data = OS.PhGetData (cbinfo.event);\r", "+\tif (data == 0) return OS.Pt_END;\r", "+\tPhPointerEvent_t pe = new PhPointerEvent_t ();\r", "+\tOS.memmove (pe, data, PhPointerEvent_t.sizeof);\r", "+\tsetMouseState (event, pe, ev);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a474c0ee29dfc3b2f63464f4174572fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b45e1ab852dcc431a9cc1fda8bc82bf372447f78", "commitAfterChange": "6f5c0546ee2736005bcc225a46868784fffa8756", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  void setBackgroundTransparent (boolean transparent)", "signatureAfterChange": "  void setBackgroundTransparent (boolean transparent)", "diff": ["-\t\t\t\tsetBackgroundPixel (control.getBackgroundPixel ());", "+\t\t\t\tint newPixel = control.getBackgroundPixel ();", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, newPixel);", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, newPixel);", "+\t\t\t\tif ((style & SWT.CHECK) != 0) fixCheckboxImageListColor (true);", "+\t\t\t\tOS.InvalidateRect (handle, null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8660dcb38d875c1aa3c0b69df56aca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "1afe3e8f29bc6aa994517fad24a424ea114b534c", "commitAfterChange": "49c744b54a446feeae3070b9bcdf3e3844dd8198", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void mouseUp(int id, int sel, int theEvent)", "signatureAfterChange": "  void mouseUp(int id, int sel, int theEvent)", "diff": ["+", "+\tif (highlight) {", "+\t\tNSEvent nsEvent = new NSEvent(theEvent);", "+\t\tif (nsEvent.type() == OS.NSLeftMouseUp) {", "+\t\t\tpostEvent(nsEvent.clickCount() == 2 ? SWT.DefaultSelection : SWT.Selection);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7b25dbb2bd5043cd0532c49ac89d3cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "a4973a3115c15364761906ff1d392981af1f6dae", "commitAfterChange": "d24cc875dbac5a052da7e8dae172e4ff7a028bf3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  int callWindowProc (int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-int callWindowProc (int msg, int wParam, int lParam) {", "+int callWindowProc (int hwnd, int msg, int wParam, int lParam) {", "+\tif (hwnd == hwndText) {", "+\t\treturn OS.CallWindowProc (EditProc, hwnd, msg, wParam, lParam);", "+\t}", "+\tif (hwnd == hwndUpDown) {", "+\t\treturn OS.CallWindowProc (UpDownProc, hwnd, msg, wParam, lParam);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "817a1a7e227b1bf9edeab402242d0a04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "07a875318539ed120bce4ef375483c0cea4d9efd", "commitAfterChange": "35f24cd03add9337e8b68bfeb7beed6f47dde1d7", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  boolean mnemonicMatch (char ch)", "signatureAfterChange": "  boolean mnemonicMatch (char ch)", "diff": ["-\treturn OS.SendMessage (handle, OS.TB_MAPACCELERATOR, key, id) != 0;", "+\tif (OS.SendMessage (handle, OS.TB_MAPACCELERATOR, key, id) == 0) {", "+\t\treturn false;", "+\t}", "+\t/*", "+\t* Feature in Windows.  TB_MAPACCELERATOR matches either the mnemonic", "+\t* character or the first character in a tool item.  This behavior is", "+\t* undocumented and unwanted.  The fix is to ensure that the tool item", "+\t* contains a mnemonic when TB_MAPACCELERATOR returns true.", "+\t*/", "+\tint index = OS.SendMessage (handle, OS.TB_COMMANDTOINDEX, id [0], 0);", "+\tif (index == -1) return false;", "+\treturn items [id [0]].text.indexOf ('&') != -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b61410a62b936f9b1a740df1a6ffe58b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "  void setParent ()", "signatureAfterChange": "  void setParent ()", "diff": ["+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\tbits &= ~OS.WS_CHILD;", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits | OS.WS_POPUP);", "+\tOS.SetWindowLong (handle, OS.GWL_ID, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecbaa5e0b0806024627147e3de85ad33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "6c51b909eb6afeed8622bc4c75203ec999cba4ab", "commitAfterChange": "92df954973cbffd8b7d43710033a40107cbfeb0f", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["-\tOS.pango_layout_set_width(layout, width == -1 ? -1 : width * OS.PANGO_SCALE);", "+\tif (width == -1) {", "+\t\tOS.pango_layout_set_width(layout, -1);", "+\t\tboolean rtl = OS.pango_context_get_base_dir(context) == OS.PANGO_DIRECTION_RTL;", "+\t\tOS.pango_layout_set_alignment(layout, rtl ? OS.PANGO_ALIGN_RIGHT : OS.PANGO_ALIGN_LEFT);", "+\t} else {", "+\t\tOS.pango_layout_set_width(layout, width * OS.PANGO_SCALE);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaee71758ca7fd0f9640bf2810fb82d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e8c3e1422089afbe49846d56b98c869406e435cc", "commitAfterChange": "3c093469a61b955e5d0696458cbda20df13fc3b5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  boolean checkData (TreeItem item, int index, boolean redraw)", "signatureAfterChange": "  boolean checkData (TreeItem item, int index, boolean redraw)", "diff": ["+\t\t/*", "+\t\t* Bug in Windows.  If the tree scrolls during WM_NOTIFY", "+\t\t* with TVN_GETDISPINFO, pixel corruption occurs.  The fix", "+\t\t* is to detect that the top item has changed and redraw", "+\t\t* the entire tree.", "+\t\t*/", "+\t\tint /*long*/ hTopItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\t\tif (hTopItem != OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0)) {", "+\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t}"]}], "num": 3733}