{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "640fca0604545e047cd5da8d8036c4c7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4d577ebde47cf418ffa0f02fbe0bdb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5f75e2dae2083c0061842ac6356ab5d489381754", "commitAfterChange": "528027af0b27ada34be52afa13892d4c48dca57c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public TreeItem getTopItem ()", "signatureAfterChange": " public TreeItem getTopItem ()", "diff": ["-\tcheckWidget();", "-\t//TODO - optimize", "-\tRect rect = new Rect ();", "-\tint y = getBorderWidth () + getHeaderHeight ();", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tTreeItem item = items [i];", "-\t\tif (item != null) {", "-\t\t\tint columnId = (columnCount == 0) ? column_id : columns [0].id;", "-\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, item.id, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\t\t\tif (rect.top <= y && y <= rect.bottom) return item;", "-\t\t\t}", "-\t\t}", "-\t}", "+\tcheckWidget ();", "+\t/* Find the topItem by calculating its row position */", "+\tint[] top = new int[1], left = new int[1];", "+\tOS.GetDataBrowserScrollPosition (handle, top, left);\t\t", "+\tint row = top[0] / getItemHeight ();;", "+\tint [] itemId = new int[1];", "+\tint result = OS.GetDataBrowserTableViewItemID (handle, row, itemId);", "+\tif (result == OS.noErr) return _getItem (itemId[0], false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0da1aadceae00b078067fdf4172841", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " Point getItemExtent(TableColumn column)", "signatureAfterChange": " int getPreferredWidth (int columnIndex)", "diff": ["- */", "-Point getItemExtent(TableColumn column) {", "-\tTable parent = getParent();", "-\tint columnIndex = column.getIndex();", "-\tPoint extent = new Point(getImageStopX(columnIndex), parent.getItemHeight() - parent.getGridLineWidth());", "-\tGC gc = new GC(parent);", "-\tgc.setFont(getFont());", "-\tString trimmedText = getText(gc, column);", "-", "-\tif (trimmedText != null && trimmedText.length() > 0) {", "-\t\textent.x += gc.stringExtent(trimmedText).x + getTextIndent(columnIndex);", "-\t}", "-\tif (columnIndex == TableColumn.FIRST) {", "-\t\textent.x += SELECTION_PADDING;", "-\t}", "-\tgc.dispose();\t\t", "-\treturn extent;", "-}", "+ */", "+int getPreferredWidth (int columnIndex) {", "+\tGC gc = new GC (parent);", "+\tgc.setFont (getFont (columnIndex));", "+\tint textPaintWidth = gc.textExtent (getText (columnIndex)).x + 2 * MARGIN_TEXT;", "+\tgc.dispose ();", "+\tint result = getTextX (columnIndex) + textPaintWidth + parent.getCellPadding ();\t/* right side cell pad */", "+\tresult -= parent.columns [columnIndex].getX ();", "+\treturn result;", "+}"]}], "num": 4701}