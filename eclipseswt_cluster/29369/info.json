{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b62d5a332a4800d0a426b75e048b4f7c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3638fbcf0b2cd87f8bac19060b82789b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "08ed4d34906d3cb004511badd9a3286f04d40b7a", "commitAfterChange": "3587c6fb9068182d41169c6c886f0d5faa0219e6", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 23, "signatureBeforeChange": "  int processSelection (int int0, int int1, int int2)", "signatureAfterChange": "  int processSelection (int int0, int int1, int int2)", "diff": ["-\tint focus_row = OS.GTK_CLIST_FOCUS_ROW (handle);", "-\tint focus = OS.gtk_ctree_node_nth (handle, focus_row);", "-\tif (focus != int0) return 0;", "-\tif ((style & SWT.MULTI) != 0) selected = false;", "-\tint ptr = OS.gtk_get_current_event ();", "-\tif (ptr != 0) {", "-\t\tGdkEvent gdkEvent = new GdkEvent ();", "-\t\tOS.memmove (gdkEvent, ptr, GdkEvent.sizeof);", "-\t\tOS.gdk_event_free (ptr);", "-\t\t/*", "-\t\t* Feature in GTK.  When a leaf node is double clicked, the", "-\t\t* GtkCTree issues two tree_row_select signals.  Non-leaf", "-\t\t* nodes only get one tree_row_select.  Avoid issueing", "-\t\t* a selection event for the double clicked leaf node.", "-\t\t*/ ", "-\t\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) return 0;", "-\t}", "-\tint index = OS.gtk_ctree_node_get_row_data (handle, int0) - 1;", "-\tevent.item = items [index];", "+\tif ((style&SWT.SINGLE)!=0) {", "+\t\tevent.item = getSelectionCount()>0? getSelection()[0] : null;", "+\t} else {", "+\t\tif (getSelectionCount()==1) event.item = getSelection()[0];", "+\t}", "+\treturn 0;\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e29735d5075bd619793115bd0f9703", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "a894d700e83e93f113fb38785f8167190e7aa937", "commitAfterChange": "6a0c0449d32344ce1c6cd03ce89fc2020b9382fc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void setAlignment (int alignment)", "signatureAfterChange": " public void setAlignment (int alignment)", "diff": ["-\t\t\tcase SWT.UP:", "-\t\t\t\tarrow_type = OS.GTK_ARROW_UP;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.DOWN:", "-\t\t\t\tarrow_type = OS.GTK_ARROW_DOWN;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.LEFT:", "-\t\t\t\tarrow_type = OS.GTK_ARROW_LEFT;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.RIGHT:", "-\t\t\t\tarrow_type = OS.GTK_ARROW_RIGHT;", "-\t\t\t\tbreak;", "+\t\t\tcase SWT.UP: arrow_type = OS.GTK_ARROW_UP; break;", "+\t\t\tcase SWT.DOWN: arrow_type = OS.GTK_ARROW_DOWN; break;", "+\t\t\tcase SWT.LEFT: arrow_type = OS.GTK_ARROW_LEFT; break;", "+\t\t\tcase SWT.RIGHT: arrow_type = OS.GTK_ARROW_RIGHT; break;", "-\t\tint list = OS.gtk_container_get_children (handle);", "-\t\tint arrow = OS.g_list_nth_data (list, 0);", "-\t\tOS.g_list_free (list);", "-\t\tOS.gtk_arrow_set (arrow, arrow_type, OS.GTK_SHADOW_OUT);", "+\t\tOS.gtk_arrow_set (arrowHandle, arrow_type, OS.GTK_SHADOW_OUT);", "-\tint list = OS.gtk_container_get_children (handle);", "-\tint label = OS.g_list_nth_data (list, 0);", "-\tOS.g_list_free (list);", "-\tif (label == 0) return;", "-\tboolean isText = OS.GTK_WIDGET_TYPE (handle) == OS.gtk_label_get_type ();", "-\t\tOS.gtk_misc_set_alignment (label, 0.0f, 0.5f);", "-\t\tif (isText) OS.gtk_label_set_justify (label, OS.GTK_JUSTIFY_LEFT);", "+\t\tOS.gtk_misc_set_alignment (labelHandle, 0.0f, 0.5f);", "+\t\tOS.gtk_label_set_justify (labelHandle, OS.GTK_JUSTIFY_LEFT);", "+\t\tOS.gtk_misc_set_alignment (pixmapHandle, 0.0f, 0.5f);", "-\t\tOS.gtk_misc_set_alignment (label, 0.5f, 0.5f);", "-\t\tif (isText) OS.gtk_label_set_justify (label, OS.GTK_JUSTIFY_CENTER);", "+\t\tOS.gtk_misc_set_alignment (labelHandle, 0.5f, 0.5f);", "+\t\tOS.gtk_label_set_justify (labelHandle, OS.GTK_JUSTIFY_CENTER);", "+\t\tOS.gtk_misc_set_alignment (pixmapHandle, 0.5f, 0.5f);", "-\t\tOS.gtk_misc_set_alignment (label, 1.0f, 0.5f);", "-\t\tif (isText) OS.gtk_label_set_justify (label, OS.GTK_JUSTIFY_RIGHT);", "+\t\tOS.gtk_misc_set_alignment (labelHandle, 1.0f, 0.5f);", "+\t\tOS.gtk_label_set_justify (labelHandle, OS.GTK_JUSTIFY_RIGHT);", "+\t\tOS.gtk_misc_set_alignment (pixmapHandle, 1.0f, 0.5f);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942dc38d889d7c83a92c0245a54dfc56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void setWidth(int width)", "signatureAfterChange": " public void setWidth (int value)", "diff": ["- */", "-public void setWidth(int width) {", "-\tcheckWidget();", "-\tint oldWidth = bounds.width;", "-\tint redrawX;", "-", "-\tif (width != oldWidth) {", "-\t\tRectangle bounds = getBounds();", "-\t\tredrawX = bounds.x;", "-\t\tbounds.width = width;", "-\t\tsetBounds(bounds);", "-\t\t// redraw at old column position if column was resized wider.", "-\t\t// fixes focus rectangle. ", "-\t\tredrawX += Math.min(width, oldWidth);", "-\t\tparent.redraw(\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "-\t\t\tredrawX - 2, 0, ", "-\t\t\t2, parent.getClientArea().height, false);\t// redraw 2 pixels wide to redraw item focus rectangle and grid line", "-", "-\t\tsendEvent(SWT.Resize);", "-\t\tint count = parent.getColumnCount();", "-\t\tfor (int i = index + 1; i < count; i++) {", "-\t\t\tparent.getColumn(i).sendEvent(SWT.Move);", "-\t\t}", "-\t}", "+public void setWidth (int value) {", "+\tcheckWidget ();", "+\tvalue = Math.max (value, 0);", "+\tif (width == value) return;\t\t\t\t\t\t\t/* same value */", "+\tparent.updateColumnWidth (this, value);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028c95b0ba01878405cc5a7983987c03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int findStackPanel (int element, int contentPresenterType)", "signatureAfterChange": "  void OnRender (int source, int dc)", "diff": ["-", "-int findStackPanel (int element, int contentPresenterType) {", "-\tint type = OS.Object_GetType (element);", "-\tboolean found = OS.Object_Equals (contentPresenterType, type);", "-\tOS.GCHandle_Free (type);", "-\tif (found) return OS.VisualTreeHelper_GetChild (element, 0);", "-\tint count = OS.VisualTreeHelper_GetChildrenCount (element);", "-\tfor (int i = 0; i < count; i++) {", "-\t\tint child = OS.VisualTreeHelper_GetChild (element, i);", "-\t\tint result = findStackPanel (child, contentPresenterType);", "-\t\tOS.GCHandle_Free (child);", "-\t\tif (result != 0) return result;", "-\t}", "-\treturn 0;", "+void OnRender (int source, int dc) {", "+\tupdateImage ();", "+\tupdateText ();\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d4ae04071fea93c40170d0e2022896", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f705f1e76286c6f3660ecf53b6864bbd63d66494", "commitAfterChange": "0197907d68007347a84613b33a3d149ba32c4fc3", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void setHeaderVisible (boolean show)", "signatureAfterChange": " public void setHeaderVisible (boolean show)", "diff": ["-\tint template = OS.Control_Template (handle);", "-\tint scrollViewerName = createDotNetString (SCROLLVIEWER_PART_NAME, false);", "-\tint scrollViewer = OS.FrameworkTemplate_FindName (template, scrollViewerName, handle);", "-\tif (scrollViewer != 0) {", "-\t\tint scrollViewerTemplate = OS.Control_Template(scrollViewer);", "-\t\tint headerName = createDotNetString(HEADER_PART_NAME, false);", "-\t\tint header = OS.FrameworkTemplate_FindName (scrollViewerTemplate, headerName, scrollViewer);", "-\t\tif (header != 0) {", "-\t\t\tOS.UIElement_Visibility (header, headerVisibility);", "-\t\t\tOS.GCHandle_Free (header);", "-\t\t}", "-\t\tOS.GCHandle_Free (scrollViewerTemplate);", "-\t\tOS.GCHandle_Free (headerName);", "-\t\tOS.GCHandle_Free (scrollViewer);", "-\t}", "-\tOS.GCHandle_Free (scrollViewerName);", "-\tOS.GCHandle_Free (template);", "+\tupdateHeaderVisibility ();"]}], "num": 29369}