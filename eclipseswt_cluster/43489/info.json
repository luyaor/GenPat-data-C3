{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c61239664a97a7c6a511da7c7942489", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f6bb45112163e4ffac2e2ff2e993b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3024704238601f268644cb370701d5afafa8ac42", "commitAfterChange": "2ee0ae78240d403598c296544e02c877aafb17f9", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void setSelection (String [] items)", "signatureAfterChange": " public void setSelection (String [] items)", "diff": ["-\tint [] ids = new int [length];", "+\tint [] indices = new int [length];", "-\t\t\t\tids = new int [] {index + 1};", "+\t\t\t\tindices = new int [] {index};", "-\t\t\t\tif (count == ids.length) {", "-\t\t\t\t\tint [] newIds = new int [ids.length + 4];", "-\t\t\t\t\tSystem.arraycopy (ids, 0, newIds, 0, ids.length);", "-\t\t\t\t\tids = newIds;", "+\t\t\t\tif (count == indices.length) {", "+\t\t\t\t\tint [] newIds = new int [indices.length + 4];", "+\t\t\t\t\tSystem.arraycopy (indices, 0, newIds, 0, indices.length);", "+\t\t\t\t\tindices = newIds;", "-\t\t\t\tids [count++] = index + 1;", "+\t\t\t\tindices [count++] = index;", "-\t\tselect (ids, count, true);", "-\t\tshowIndex (ids [0] - 1);", "+\t\tselect (indices, count, true);", "+\t\tshowIndex (indices [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0410dcc4c8dc8e1ce5c478a45d07889", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Transfer.java", "commitBeforeChange": "90cffad57b2c0ad67dbf68bc30b3f25f5bc7e83e", "commitAfterChange": "e6996491cee7311e9013affa5737d1b990fc94fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static int registerType(String formatName)", "signatureAfterChange": " public static int registerType(String formatName)", "diff": ["-\tfor (int i = 0; i < typeCount; i++) {", "-\t\tString type = types[i];", "+\t/* Note the type 0 is not used */", "+\tint index = 1;", "+\twhile (index < TYPES.length) {", "+\t\tString type = TYPES[index];", "-\t\t\treturn i;", "+\t\t\treturn index;", "+\t\tindex++;", "-\tif (typeCount + 1 == types.length) { // types[0] is null", "-\t\tString[] newTypes = new String[types.length + 4];", "-\t\tSystem.arraycopy(types, 0, newTypes, 0, types.length);", "-\t\ttypes = newTypes;", "+\tif (index == TYPES.length) {", "+\t\tString[] newTypes = new String[TYPES.length + 4];", "+\t\tSystem.arraycopy(TYPES, 0, newTypes, 0, TYPES.length);", "+\t\tTYPES = newTypes;", "-\ttypes[++typeCount] = formatName;", "-\treturn typeCount;", "+\tTYPES[index] = formatName;", "+\treturn index;"]}], "num": 43489}