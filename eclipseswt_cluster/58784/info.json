{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a3ff753a67ff2bbf254ff6757ce570b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7302e269af98befd96c0153fe0ff588f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "df2b18d6c3d453a1cbf6420cefbca622fb8ff1da", "commitAfterChange": "fb1e2071d35034cab2aa0ee2da4593b8398a9282", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public CLabel(Composite parent, int style)", "signatureAfterChange": "\r public CLabel(Composite parent, int style)", "diff": ["+/* Start ACCESSIBILITY */\r", "+\tgetAccessible().addAccessibleListener(new AccessibleAdapter() {\r", "+\t\tpublic void getName(AccessibleEvent e) {\r", "+\t\t\te.result = getText();\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getHelp(AccessibleEvent e) {\r", "+\t\t\te.result = getToolTipText();\r", "+\t\t}\r", "+\t});\r", "+\t\t\r", "+\tgetAccessible().addAccessibleControlListener(new AccessibleControlAdapter() {\r", "+\t\tpublic void accHitTest(AccessibleControlEvent e) {\r", "+\t\t\tPoint testPoint = toControl(new Point(e.x, e.y));\r", "+\t\t\tif (getBounds().contains(testPoint)) {\r", "+\t\t\t\te.childID = ACC.CHILDID_SELF;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void accLocation(AccessibleControlEvent e) {\r", "+\t\t\tRectangle location = getBounds();\r", "+\t\t\tPoint pt = toDisplay(new Point(location.x, location.y));\r", "+\t\t\te.x = pt.x;\r", "+\t\t\te.y = pt.y;\r", "+\t\t\te.width = location.width;\r", "+\t\t\te.height = location.height;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getChildCount(AccessibleControlEvent e) {\r", "+\t\t\te.code = 0;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getRole(AccessibleControlEvent e) {\r", "+\t\t\te.code = ACC.ROLE_SYSTEM_STATICTEXT;\r", "+\t\t}\r", "+\t\t\r", "+\t\tpublic void getState(AccessibleControlEvent e) {\r", "+\t\t\te.code = ACC.STATE_SYSTEM_NORMAL;\r", "+\t\t}\r", "+\t});\r", "+/* End ACCESSIBILITY */\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d3dd151fb8dfb136d10f9ebc1c0ade", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "64349bf9cd19222d7f7bef44cb4d0e244ca7ed8f", "commitAfterChange": "a1c32779a77806d83e43b58429ae7b645a07df78", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": " void initializeAccessible()", "signatureAfterChange": " void initializeAccessible()", "diff": ["+\taccessible.addAccessibleEditableTextListener(new AccessibleEditableTextListener() {", "+\t\tpublic void setTextAttributes(AccessibleTextAttributeEvent e) {", "+\t\t\t// This method must be implemented by the application", "+\t\t\te.result = ACC.OK;", "+\t\t}", "+\t\tpublic void replaceText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.replaceTextRange(e.start, e.end - e.start, e.string);", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void pasteText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start);", "+            st.paste();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void cutText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.cut();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void copyText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.copy();", "+            e.result = ACC.OK;", "+\t\t}", "+\t});"]}], "num": 58784}