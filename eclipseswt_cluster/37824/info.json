{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df277d751919864850d9038091c541b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261a347659514a60c20fccab2703364e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "2490db7e5c30e955020076ab47ac703db47e4aab", "commitAfterChange": "6e1828b84a1b4f65227053cf7d446a0b461c70ea", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "signatureAfterChange": "   LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "diff": ["-\t* Feature in Windows.  For some reason, capturing", "-\t* the mouse after processing WM_LBUTTONDBLCLK for the", "-\t* widget interferes with the normal mouse processing", "-\t* for the widget.  The fix is to avoid the automatic", "-\t* mouse capture.", "-\t*/", "-", "-\t/*", "-", "-\tint hwndCapture = OS.GetCapture ();", "-\tif (hwndCapture != 0 && OS.GetCapture () != hwndCapture) {", "-\t\tOS.SetCapture (hwndCapture);", "-\t}", "-\t* is consumed.  The fix is to send a fake mouse up.", "-\t*/\t", "-\tsendMouseEvent (SWT.MouseUp, 1, OS.WM_LBUTTONUP, wParam, lParam);\t", "+\t* is consumed.  The fix is to send a fake mouse up and", "+\t* release the automatic capture.", "+\t*/", "+\tif (!OS.IsWinCE) {", "+\t\tsendMouseEvent (SWT.MouseUp, 1, OS.WM_LBUTTONUP, wParam, lParam);", "+\t\tif (OS.GetCapture () == handle) OS.ReleaseCapture ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e1cd6def0076319cc3215e491dd8bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Slider.java", "commitBeforeChange": "2490db7e5c30e955020076ab47ac703db47e4aab", "commitAfterChange": "6e1828b84a1b4f65227053cf7d446a0b461c70ea", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t", "-\t/*", "-\t* Feature in Windows.  For some reason, capturing", "-\t* the mouse after processing WM_LBUTTONDOWN for the", "-\t* widget interferes with the normal mouse processing", "-\t* for the widget.  The fix is to avoid the automatic", "-\t* mouse capture.", "-\t*/", "-", "-", "-\tint hwndCapture = OS.GetCapture ();", "-\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);\t", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "-\tif (hwndCapture != 0 && OS.GetCapture () != hwndCapture) {", "-\t\tOS.SetCapture (hwndCapture);", "-\t}", "-\t", "+", "-\t* is consumed.  The fix is to send a fake mouse up.", "+\t* is consumed.  The fix is to send a fake mouse up and", "+\t* release the automatic capture.", "-\tsendMouseEvent (SWT.MouseUp, 1, OS.WM_LBUTTONUP, wParam, lParam);", "+\tif (!OS.IsWinCE) {", "+\t\tsendMouseEvent (SWT.MouseUp, 1, OS.WM_LBUTTONUP, wParam, lParam);", "+\t\tif (OS.GetCapture () == handle) OS.ReleaseCapture ();", "+\t}"]}], "num": 37824}