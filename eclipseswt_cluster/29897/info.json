{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64468bb2d4863c4f6b7b7d1d422d6fb4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3f5014c62996f4bed086b0fc9fb3df4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "d85ee507cc66c3e2b2d37ffcbd9eb332b116909f", "commitAfterChange": "f9ff5e6ef23a6e145aba194b6fcb66ac6e9a70aa", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void setAccelerator (int accelerator)", "signatureAfterChange": " public void setAccelerator (int accelerator)", "diff": ["-\t/*\r", "-\t* Bug in Solaris.  When mnemonics and accelerators are\r", "-\t* set more than once in the same menu bar, the time it\r", "-\t* takes to set the accelerator or mnemonic increases\r", "-\t* exponentially.  The only fix for now is to avoid\r", "-\t* accelerators and mnemonics on Solaris.\r", "-\t*/\r", "-\tif (OS.IsSunOS) return;\r", "-\tint ptr = 0;\r", "-\tif (accelerator != 0) {\r", "-\t\tString ctrl, alt, shift;\r", "-\t\tctrl = alt = shift = \"\";\r", "-\t\tif ((accelerator & SWT.ALT) != 0) alt = \"Meta \";\r", "-\t\tif ((accelerator & SWT.SHIFT) != 0) shift = \"Shift \";\r", "-\t\tif ((accelerator & SWT.CTRL) != 0) ctrl = \"Ctrl \";\r", "-\t\tint keysym = accelerator & ~(SWT.ALT | SWT.SHIFT | SWT.CTRL);\r", "-\t\tint newKey = Display.untranslateKey (keysym);\r", "-\t\tif (newKey != 0) {\r", "-\t\t\tkeysym = newKey;\r", "+\tif (isAccelActive ()) {\r", "+\t\tif (accelerator == 0) {\r", "+\t\t\tremoveAccelerator ();\r", "-\t\t\tkeysym = wcsToMbcs ((char) keysym);\r", "+\t\t\taddAccelerator ();\r", "-\t\t/*\r", "-\t\t* Feature in Motif.  Motif does not activate an accelerator\r", "-\t\t* when the CapsLoc, NumLoc and NumLock+CapsLoc keys are pressed.\r", "-\t\t* In order to activate accelerators when these keys are pressed,\r", "-\t\t* it is necessary to look for all of these key sequences.\r", "-\t\t*/\r", "-\t\tString key = ctrl + alt + shift + \"<Key>\" + keysymName (keysym);\r", "-\t\tString allKeys = key + \",Lock \" + key + \",Mod2 \" + key + \",Lock Mod2 \" + key;\r", "-\t\t/* Use the character encoding for the default locale */\r", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, allKeys, true);\t\t\r", "-\t\tptr = OS.XtMalloc (buffer.length);\r", "-\t\tif (ptr != 0) OS.memmove (ptr, buffer, buffer.length);\r", "-\tint [] argList = {OS.XmNaccelerator, ptr};\r", "-\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "-\tif (ptr != 0) OS.XtFree (ptr);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd8ab5d66ecbdf9aecdd534bf50f215", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "810eb254cbe71a3e1637e56f044fa70b981eb39d", "commitAfterChange": "803bd538f4c4c40e1d60df10cb6937bfea9dab26", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 115, "signatureBeforeChange": " boolean updateTabHeight(boolean force)", "signatureAfterChange": " boolean updateTabHeight(boolean force)", "diff": ["-\tint style = getStyle();", "-\tif (fixedTabHeight == 0 && (style & SWT.FLAT) != 0 && (style & SWT.BORDER) == 0) highlight_header = 0;\t\t", "-\tif (fixedTabHeight != SWT.DEFAULT) {", "-\t\ttabHeight = fixedTabHeight == 0 ? 0 : fixedTabHeight + 1; // +1 for line drawn across top of tab", "-\t} else {", "-\t\tint tempHeight = 0;", "-\t\tGC gc = new GC(this);", "-\t\tif (items.length == 0) {", "-\t\t\ttempHeight = gc.textExtent(\"Default\", CTabItem.FLAGS).y + CTabItem.TOP_MARGIN + CTabItem.BOTTOM_MARGIN; //$NON-NLS-1$", "-\t\t} else {", "-\t\t\tfor (int i=0; i < items.length; i++) {", "-\t\t\t\ttempHeight = Math.max(tempHeight, items[i].preferredHeight(gc));", "-\t\t\t}", "-\t\t}", "-\t\tgc.dispose();", "-\t\ttabHeight =  tempHeight;", "-\t}", "+\tGC gc = new GC(this);", "+\ttabHeight = renderer.computeSize(CTabFolderRenderer.PART_HEADER, SWT.NONE, gc).y;", "+\tgc.dispose();", "-\t", "-\tif (onBottom) {", "-\t\tint d = tabHeight - 12;", "-\t\tcurve = new int[]{0,13+d, 0,12+d, 2,12+d, 3,11+d, 5,11+d, 6,10+d, 7,10+d, 9,8+d, 10,8+d,", "-\t\t\t\t          11,7+d, 11+d,7,", "-\t\t\t\t\t\t  12+d,6, 13+d,6, 15+d,4, 16+d,4, 17+d,3, 19+d,3, 20+d,2, 22+d,2, 23+d,1}; ", "-\t\tcurveWidth = 26+d;", "-\t\tcurveIndent = curveWidth/3;\t", "-\t} else {", "-\t\tint d = tabHeight - 12;", "-\t\tcurve = new int[]{0,0, 0,1, 2,1, 3,2, 5,2, 6,3, 7,3, 9,5, 10,5,", "-\t\t\t\t          11,6, 11+d,6+d,", "-\t\t\t\t          12+d,7+d, 13+d,7+d, 15+d,9+d, 16+d,9+d, 17+d,10+d, 19+d,10+d, 20+d,11+d, 22+d,11+d, 23+d,12+d};", "-\t\tcurveWidth = 26+d;", "-\t\tcurveIndent = curveWidth/3;", "-\t\t", "-\t\t//this could be static but since values depend on curve, better to keep in one place", "-\t\ttopCurveHighlightStart = new int[] { ", "-\t\t\t\t0, 2,  1, 2,  2, 2,    ", "-\t\t\t\t3, 3,  4, 3,  5, 3, ", "-\t\t\t\t6, 4,  7, 4,", "-\t\t\t\t8, 5, ", "-\t\t\t\t9, 6, 10, 6};", "-\t\t", "-\t\t//also, by adding in 'd' here we save some math cost when drawing the curve", "-\t\ttopCurveHighlightEnd = new int[] { ", "-\t\t\t\t10+d, 6+d,", "-\t\t\t\t11+d, 7+d,", "-\t\t\t\t12+d, 8+d,  13+d, 8+d,", "-\t\t\t\t14+d, 9+d,", "-\t\t\t\t15+d, 10+d,  16+d, 10+d,", "-\t\t\t\t17+d, 11+d,  18+d, 11+d,  19+d, 11+d,", "-\t\t\t\t20+d, 12+d,  21+d, 12+d,  22+d,  12+d }; ", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f78755b2bdd3b906de02fe79502c80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "648a901ebdb6d910c60f231042a5673c07edfc72", "commitAfterChange": "1179f16912e74ae60b1efbf009a154d76fd2bb7e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CCombo (Composite parent, int style)", "signatureAfterChange": " public CCombo (Composite parent, int style)", "diff": ["-\tpopup = new Shell (getDisplay(), SWT.NO_TRIM | SWT.ON_TOP);", "-\tint listStyle = SWT.SINGLE | SWT.V_SCROLL;", "-\tif ((style & SWT.FLAT) != 0) listStyle |= SWT.FLAT;", "-\tif ((style & SWT.RIGHT_TO_LEFT) != 0) listStyle |= SWT.RIGHT_TO_LEFT;", "-\tif ((style & SWT.LEFT_TO_RIGHT) != 0) listStyle |= SWT.LEFT_TO_RIGHT;", "-\tlist = new List (popup, listStyle);", "-\tListener listener = new Listener () {", "+\tlistener = new Listener () {", "-\tint [] popupEvents = {SWT.Close, SWT.Paint, SWT.Deactivate};", "-\tfor (int i=0; i<popupEvents.length; i++) popup.addListener (popupEvents [i], listener);", "-\t", "-\t", "-\tint [] listEvents = {SWT.MouseUp, SWT.Selection, SWT.Traverse, SWT.KeyDown, SWT.KeyUp, SWT.FocusIn, SWT.FocusOut};", "-\tfor (int i=0; i<listEvents.length; i++) list.addListener (listEvents [i], listener);", "+\tcreatePopup(null, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3fa954ddeca69bda88e897fcab1419", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f494db0cd00af3ff914ef248b88f22bf802016a2", "commitAfterChange": "1e881e47cd16069712691a18980bde9f8d946eec", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\r \r boolean sendMouseEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "\r \r boolean sendMouseEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\tif (OS.GetKeyState (OS.VK_MENU) < 0) event.stateMask |= SWT.ALT;\r", "-\tif ((wParam & OS.MK_SHIFT) != 0) event.stateMask |= SWT.SHIFT;\r", "-\tif ((wParam & OS.MK_CONTROL) != 0) event.stateMask |= SWT.CONTROL;\r", "-\tif ((wParam & OS.MK_CONTROL) != 0) event.stateMask |= SWT.COMMAND;\r", "-\tif ((wParam & OS.MK_LBUTTON) != 0) event.stateMask |= SWT.BUTTON1;\r", "-\tif ((wParam & OS.MK_MBUTTON) != 0) event.stateMask |= SWT.BUTTON2;\r", "-\tif ((wParam & OS.MK_RBUTTON) != 0) event.stateMask |= SWT.BUTTON3;\r", "-\tswitch (type) {\r", "-\t\tcase SWT.MouseDown:\r", "-\t\tcase SWT.MouseDoubleClick:\r", "-\t\t\tif (button == 1) event.stateMask &= ~SWT.BUTTON1;\r", "-\t\t\tif (button == 2) event.stateMask &= ~SWT.BUTTON2;\r", "-\t\t\tif (button == 3) event.stateMask &= ~SWT.BUTTON3;\r", "-\t\t\tbreak;\r", "-\t\tcase SWT.MouseUp:\r", "-\t\t\tif (button == 1) event.stateMask |= SWT.BUTTON1;\r", "-\t\t\tif (button == 2) event.stateMask |= SWT.BUTTON2;\r", "-\t\t\tif (button == 3) event.stateMask |= SWT.BUTTON3;\r", "-\t\t\tbreak;\r", "-\t}\r", "+\tsetInputState (event, type);\r"]}], "num": 29897}