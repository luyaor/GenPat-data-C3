{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8186d65498591809c1a52cd926fbce95", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94551d4342016a22dad5594bdadffb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c903253271c1cee79998b8482d477bab6399a627", "commitAfterChange": "2666a72decba4f694d1ccebe2f8b920f7e88f95b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public int getTextAntialias()", "signatureAfterChange": " public int getTextAntialias()", "diff": ["-    int /*long*/ options = Cairo.cairo_font_options_create();", "-    Cairo.cairo_get_font_options(data.cairo, options);", "-    int antialias = Cairo.cairo_font_options_get_antialias(options);", "-    Cairo.cairo_font_options_destroy(options);", "+    int antialias = Cairo.CAIRO_ANTIALIAS_DEFAULT;", "+    if (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "+    \tint /*long*/ options = Cairo.cairo_font_options_create();", "+    \tCairo.cairo_get_font_options(data.cairo, options);", "+    \tantialias = Cairo.cairo_font_options_get_antialias(options);", "+    \tCairo.cairo_font_options_destroy(options);", "+    } else {", "+    \tif (data.context != 0) {", "+    \t\tint /*long*/ options = OS.pango_cairo_context_get_font_options(data.context);", "+    \t\tif (options != 0) antialias = Cairo.cairo_font_options_get_antialias(options);", "+    \t}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460789035835ca5bbf6beae1bad38a01", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c159a9553ef0699a68dfd8ee6cae8e56f4b4ccb4", "commitAfterChange": "41b28fb69b28913e45dadfb38d783336ab3b6dcc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  boolean drawGripper (int x, int y, int width, int height, boolean vertical)", "signatureAfterChange": "  boolean drawGripper (int x, int y, int width, int height, boolean vertical)", "diff": ["-\tOS.gtk_paint_handle (OS.gtk_widget_get_style (paintHandle), window, OS.GTK_STATE_NORMAL, OS.GTK_SHADOW_OUT, null, paintHandle, new byte [1], x, y, width, height, orientation);", "+\tif (OS.GTK_VERSION >= OS.VERSION (3, 0, 0)) {", "+\t\tlong /*int*/ cairo = OS.gdk_cairo_create (window);", "+\t\tlong /*int*/ context = OS.gtk_widget_get_style_context(paintHandle);", "+\t\tOS.gtk_render_handle(context, cairo, x, y, width, height);", "+\t\tCairo.cairo_destroy (cairo);", "+\t} else {", "+\t\tOS.gtk_paint_handle (OS.gtk_widget_get_style (paintHandle), window, OS.GTK_STATE_NORMAL, OS.GTK_SHADOW_OUT, null, paintHandle, new byte [1], x, y, width, height, orientation);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa132907b11c33bc333bdcf0b0c342b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9e6ed5ddefaae266127428adb6c5fbedbb333dc4", "commitAfterChange": "ccd2d5aea4fb2e484cfeea5d7ce086a6f7e68860", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["+\tlong /*int*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tcheckGC(FOREGROUND);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\tlong /*int*/  context = OS.gtk_widget_get_style_context(data.device.shellHandle);", "+\t\t\tOS.gtk_render_focus(context, cairo, x, y, width, height);", "+\t\t} else {", "+\t\t\tint[] lineWidth = new int[1];", "+\t\t\tOS.gtk_widget_style_get(data.device.shellHandle, OS.focus_line_width, lineWidth, 0);", "+\t\t\tCairo.cairo_save(cairo);\t\t", "+\t\t\tCairo.cairo_set_line_width(cairo, lineWidth[0]);", "+\t\t\tdouble[] dashes = new double[]{1, 1};", "+\t\t\tdouble dash_offset = -lineWidth[0] / 2f;", "+\t\t\twhile (dash_offset < 0) dash_offset += 2;", "+\t\t\tCairo.cairo_set_dash(cairo, dashes, dashes.length, dash_offset);", "+\t\t\tCairo.cairo_rectangle(cairo, x + lineWidth[0] / 2f, y + lineWidth[0] / 2f, width, height);", "+\t\t\tCairo.cairo_stroke(cairo);", "+\t\t\tCairo.cairo_restore(cairo);", "+\t\t}", "+\t\treturn;", "+\t}", "-\tlong /*int*/ cairo = data.cairo;", "-\tif (cairo != 0) {", "-\t\tcheckGC(FOREGROUND);", "-\t\tint[] lineWidth = new int[1];", "-\t\tOS.gtk_widget_style_get(data.device.shellHandle, OS.focus_line_width, lineWidth, 0);", "-\t\tCairo.cairo_save(cairo);\t\t", "-\t\tCairo.cairo_set_line_width(cairo, lineWidth[0]);", "-\t\tdouble[] dashes = new double[]{1, 1};", "-\t\tdouble dash_offset = -lineWidth[0] / 2f;", "-\t\twhile (dash_offset < 0) dash_offset += 2;", "-\t\tCairo.cairo_set_dash(cairo, dashes, dashes.length, dash_offset);", "-\t\tCairo.cairo_rectangle(cairo, x + lineWidth[0] / 2f, y + lineWidth[0] / 2f, width, height);", "-\t\tCairo.cairo_stroke(cairo);", "-\t\tCairo.cairo_restore(cairo);", "-\t\treturn;", "-\t}", "-\tgtk_render_focus (style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);", "+\tOS.gtk_paint_focus(style, data.drawable, OS.GTK_STATE_NORMAL, null, data.device.shellHandle, new byte[1], x, y, width, height);"]}], "num": 55545}