{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b2c95beb3cb1f559cce51f53400adae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a739478cd245fe976e54f43f97161ab7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "72353ac7f94b26380383764a3b22b9ce8d44a91e", "commitAfterChange": "5b05aa6f4689e570a02934dff54fc1aa76a4eafb", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["-\t\t\t\tif ((style & SWT.MULTI) != 0) selected = true;", "-\t\t\t\tsuper.processMouseDown (int0, int1, int2);", "+\t\t\t\tOS.GTK_CLIST_RESYNC_SELECTION (handle);", "+\t\t\t\t/*", "+\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "+\t\t\t\t* does not issue notification.  The fix is to detect", "+\t\t\t\t* that the mouse was released over a selected item when", "+\t\t\t\t* no selection signal was set and issue a fake selection", "+\t\t\t\t* event.", "+\t\t\t\t*/", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in GTK.  When an item is reselected, GTK", "-\t\t\t\t\t* does not issue notification.  The fix is to detect", "-\t\t\t\t\t* that the mouse was released over a selected item when", "-\t\t\t\t\t* no selection signal was set and issue a fake selection", "-\t\t\t\t\t* event.", "-\t\t\t\t\t*/", "-\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "-\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "-\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "-\t\t\t\t\tint [] row = new int [1], column = new int [1];", "-\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "-\t\t\t\t\t\tint list = OS.GTK_CLIST_SELECTION (handle);", "-\t\t\t\t\t\tif (selected && list != 0) {", "-\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "-\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "-\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\tif (selected) {", "+\t\t\t\t\t\tdouble[] px = new double [1], py = new double [1];", "+\t\t\t\t\t\tOS.gdk_event_get_coords (int0, px, py);", "+\t\t\t\t\t\tint x = (int) (px[0]), y = (int) (py[0]);", "+\t\t\t\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\t\t\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\t\t\t\t\tint list = OS.GTK_CLIST_SELECTION (handle);", "+\t\t\t\t\t\t\tif (list != 0) {", "+\t\t\t\t\t\t\t\tint length = OS.g_list_length (list);", "+\t\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "+\t\t\t\t\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\tsuper.processMouseUp (int0, int1, int2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f898b2b29c18232892a91f909f8428", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "af9f857dda29d2ee1989cc89928edc6e0958ebc8", "commitAfterChange": "4b24af5ef710affbf05bf5fb1df78e69400546d5", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle)", "signatureAfterChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle)", "diff": ["-\t\tif (eventKind == OS.kEventMouseDown)", "+\t\tif (eventKind == OS.kEventMouseDown) {", "-\t", "+\t\t}", "+\t\t", "-\t\t", "+\t\t\t\t", "-\t\t", "+\t\t\t\t\t", "-\t\t\t/*", "-\t\t\tif (whichWindow != OS.FrontNonFloatingWindow()) {", "-\t\t\t\tSystem.out.println(\"  front click\");", "-\t\t\t\t//OS.SelectWindow(whichWindow);", "+\t\t\t//if (whichWindow != OS.FrontNonFloatingWindow()) {", "+\t\t\t//if (whichWindow != OS.FrontWindow()) {", "+\t\t\t//if (OS.IsWindowActive(whichWindow)) {", "+\t\t\tif (whichWindow != fActiveWindow) {", "+\t\t\t\t//System.out.println(\"  front click\");", "+\t\t\t\t//OS.CallNextEventHandler(nextHandler, eRefHandle);", "-\t\t\t*/", "-\t\t\t", "-\t\t\tif (part == OS.inMenuBar) {", "-\t\t\t\tSystem.out.println(\"---> menu click\");", "-\t\t\t\tdoMenuCommand(OS.MenuSelect(me.getWhere().getData()));", "-\t\t\t\treturn OS.kNoErr;", "-\t\t\t\t//return OS.eventNotHandledErr;", "-\t\t\t}", "-\t\t", "+\t\t\t\t\t"]}], "num": 24409}