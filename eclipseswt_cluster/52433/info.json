{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa0479892d68b4000a8e2f6a6d5ef71a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ab436f3d69f0268ad08b24dd67d345", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TaskBar.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int createShellLink (MenuItem item, String directory)", "signatureAfterChange": "  long createShellLink (MenuItem item, String directory)", "diff": ["-int /*long*/ createShellLink (MenuItem item, String directory) {", "+long /*int*/ createShellLink (MenuItem item, String directory) {", "-\tint /*long*/ [] ppv = new int /*long*/ [1];", "+\tlong /*int*/ [] ppv = new long /*int*/ [1];", "-\tint /*long*/ pLink = ppv [0];", "+\tlong /*int*/ pLink = ppv [0];", "-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ pv = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, OS.PROPVARIANT_sizeof());", "-\tint /*long*/ titlePtr = 0;", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ pv = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, OS.PROPVARIANT_sizeof());", "+\tlong /*int*/ titlePtr = 0;", "-\t\tOS.MoveMemory (pv + 8, new int /*long*/ [] {titlePtr}, OS.PTR_SIZEOF);", "+\t\tOS.MoveMemory (pv + 8, new long /*int*/ [] {titlePtr}, OS.PTR_SIZEOF);", "-\tint /*long*/ pPropStore = ppv [0];", "+\tlong /*int*/ pPropStore = ppv [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb81c41265c6c46e4845d7b111308910", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/Variant.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " void setData(int pData)", "signatureAfterChange": " void setData(long pData)", "diff": ["-void setData(int /*long*/ pData){", "+void setData(long /*int*/ pData){", "-\t\tint /*long*/[] newByRefPtr = new int /*long*/[1];", "+\t\tlong /*int*/[] newByRefPtr = new long /*int*/[1];", "-\t\t\tint /*long*/[] ppvObject = new int /*long*/[1];", "+\t\t\tlong /*int*/[] ppvObject = new long /*int*/[1];", "-\t\t\tint /*long*/[] ppvObject = new int /*long*/[1];", "+\t\t\tlong /*int*/[] ppvObject = new long /*int*/[1];", "-\t\t\tint /*long*/[] hMem = new int /*long*/[1];", "+\t\t\tlong /*int*/[] hMem = new long /*int*/[1];", "-\t\t\tint /*long*/ newPData = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, sizeof);", "+\t\t\tlong /*int*/ newPData = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f915b4a334706f92757198da30b688f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  int signalProc (int gobject, int arg1, int user_data)", "signatureAfterChange": "  long signalProc (long gobject, long arg1, long user_data)", "diff": ["-int /*long*/ signalProc (int /*long*/ gobject, int /*long*/ arg1, int /*long*/ user_data) {", "+long /*int*/ signalProc (long /*int*/ gobject, long /*int*/ arg1, long /*int*/ user_data) {", "-\t\t\t\tint /*long*/ atom = OS.gdk_x11_atom_to_xatom (OS.gdk_atom_intern (name, true));", "+\t\t\t\tlong /*int*/ atom = OS.gdk_x11_atom_to_xatom (OS.gdk_atom_intern (name, true));", "-\t\t\t\t\tint /*long*/ xWindow; ", "+\t\t\t\t\tlong /*int*/ xWindow; ", "-\t\t\t\t\tint /*long*/ [] type = new int /*long*/ [1];", "+\t\t\t\t\tlong /*int*/ [] type = new long /*int*/ [1];", "-\t\t\t\t\tint /*long*/ [] data = new int /*long*/ [1];", "+\t\t\t\t\tlong /*int*/ [] data = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80634ab5c852dc54d8bff9f51ebd014b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Download_1_8.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " int OnProgressChange64_32 (int aWebProgress, int aRequest, int aCurSelfProgress1, int aCurSelfProgress2, int aMaxSelfProgress1, int aMaxSelfProgress2, int aCurTotalProgress1, int aCurTotalProgress2, int aMaxTotalProgress1, int aMaxTotalProgress2)", "signatureAfterChange": " int OnProgressChange64_32 (long aWebProgress, long aRequest, long aCurSelfProgress1, long aCurSelfProgress2, long aMaxSelfProgress1, long aMaxSelfProgress2, long aCurTotalProgress1, long aCurTotalProgress2, long aMaxTotalProgress1, long aMaxTotalProgress2)", "diff": ["-int OnProgressChange64_32 (int /*long*/ aWebProgress, int /*long*/ aRequest, int /*long*/ aCurSelfProgress1, int /*long*/ aCurSelfProgress2, int /*long*/ aMaxSelfProgress1, int /*long*/ aMaxSelfProgress2, int /*long*/ aCurTotalProgress1, int /*long*/ aCurTotalProgress2, int /*long*/ aMaxTotalProgress1, int /*long*/ aMaxTotalProgress2) {", "+int OnProgressChange64_32 (long /*int*/ aWebProgress, long /*int*/ aRequest, long /*int*/ aCurSelfProgress1, long /*int*/ aCurSelfProgress2, long /*int*/ aMaxSelfProgress1, long /*int*/ aMaxSelfProgress2, long /*int*/ aCurTotalProgress1, long /*int*/ aCurTotalProgress2, long /*int*/ aMaxTotalProgress1, long /*int*/ aMaxTotalProgress2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2891d1671eabcf53b3e7d26f507427", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void setExpanded (boolean expanded)", "signatureAfterChange": " public void setExpanded (boolean expanded)", "diff": ["-\tint /*long*/ hwnd = parent.handle;", "+\tlong /*int*/ hwnd = parent.handle;", "- \tint /*long*/ hBottomItem = 0;", "+ \tlong /*int*/ hBottomItem = 0;", "-\tint /*long*/ hTopItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\tlong /*int*/ hTopItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "-\t\t\tint /*long*/ hItem = hTopItem;", "+\t\t\tlong /*int*/ hItem = hTopItem;", "-\t\t\t\tint /*long*/ topHandle = parent.topHandle ();", "+\t\t\t\tlong /*int*/ topHandle = parent.topHandle ();", "-\tint /*long*/ hOldItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\tlong /*int*/ hOldItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\tint /*long*/ lParam = OS.MAKELPARAM (OS.SB_THUMBPOSITION, oldInfo.nPos);", "+\t\t\t\t\tlong /*int*/ lParam = OS.MAKELPARAM (OS.SB_THUMBPOSITION, oldInfo.nPos);", "-\t\t\t\t\tint /*long*/ hItem = hTopItem;", "+\t\t\t\t\tlong /*int*/ hItem = hTopItem;", "-\t\t\tint /*long*/ topHandle = parent.topHandle ();", "+\t\t\tlong /*int*/ topHandle = parent.topHandle ();", "-\tint /*long*/ hNewItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\tlong /*int*/ hNewItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "119aa5a03da36dac1ed9f89dbeae063f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " int createDIBFromDDB(int hDC, int hBitmap, int width, int height)", "signatureAfterChange": " long createDIBFromDDB(long hDC, long hBitmap, int width, int height)", "diff": ["-int /*long*/ createDIBFromDDB(int /*long*/ hDC, int /*long*/ hBitmap, int width, int height) {", "+long /*int*/ createDIBFromDDB(long /*int*/ hDC, long /*int*/ hBitmap, int width, int height) {", "-\tint /*long*/[] pBits = new int /*long*/[1];", "-\tint /*long*/ hDib = OS.CreateDIBSection(0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\tlong /*int*/[] pBits = new long /*int*/[1];", "+\tlong /*int*/ hDib = OS.CreateDIBSection(0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\tint /*long*/ hdcSource = OS.CreateCompatibleDC(hDC);", "-\tint /*long*/ hdcDest = OS.CreateCompatibleDC(hDC);", "-\tint /*long*/ hOldSrc = OS.SelectObject(hdcSource, hBitmap);", "-\tint /*long*/ hOldDest = OS.SelectObject(hdcDest, hDib);", "+\tlong /*int*/ hdcSource = OS.CreateCompatibleDC(hDC);", "+\tlong /*int*/ hdcDest = OS.CreateCompatibleDC(hDC);", "+\tlong /*int*/ hOldSrc = OS.SelectObject(hdcSource, hBitmap);", "+\tlong /*int*/ hOldDest = OS.SelectObject(hdcDest, hDib);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d9dcaf2ff6e23202f2275f844df8fa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static int getDesktop(final Display display)", "signatureAfterChange": " static int getDesktop(final Display display)", "diff": ["-\tint /*long*/ xDisplay = display.xDisplay;", "-\tint /*long*/ rootWindow = OS.XDefaultRootWindow(xDisplay);", "+\tlong /*int*/ xDisplay = display.xDisplay;", "+\tlong /*int*/ rootWindow = OS.XDefaultRootWindow(xDisplay);", "-\tint /*long*/ propList = OS.XListProperties(xDisplay, rootWindow, numProp);", "-\tint /*long*/ [] property = new int /*long*/ [numProp[0]];", "+\tlong /*int*/ propList = OS.XListProperties(xDisplay, rootWindow, numProp);", "+\tlong /*int*/ [] property = new long /*int*/ [numProp[0]];", "-\t\tint /*long*/ gnome = OS.XInternAtom(xDisplay, gnomeName, true);", "+\t\tlong /*int*/ gnome = OS.XInternAtom(xDisplay, gnomeName, true);", "-\t\t\tint /*long*/ icon_theme = GNOME.gnome_icon_theme_new();", "+\t\t\tlong /*int*/ icon_theme = GNOME.gnome_icon_theme_new();", "-\t\t\tint /*long*/ libgnomevfs = OS.dlopen(buffer, OS.RTLD_LAZY);", "+\t\t\tlong /*int*/ libgnomevfs = OS.dlopen(buffer, OS.RTLD_LAZY);", "-\t\t\t\tint /*long*/ gnome_vfs_url_show = OS.dlsym(libgnomevfs, buffer);", "+\t\t\t\tlong /*int*/ gnome_vfs_url_show = OS.dlsym(libgnomevfs, buffer);", "-\t\tint /*long*/ cde = OS.XInternAtom(xDisplay, cdeName, true);", "+\t\tlong /*int*/ cde = OS.XInternAtom(xDisplay, cdeName, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ba333b6f3cba02dc822080a71a7dbb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int gtk_expose_event (int widget, int eventPtr)", "signatureAfterChange": "  long gtk_expose_event (long widget, long eventPtr)", "diff": ["-int /*long*/ gtk_expose_event (int /*long*/ widget, int /*long*/ eventPtr) {", "+long /*int*/ gtk_expose_event (long /*int*/ widget, long /*int*/ eventPtr) {", "-\tint /*long*/ window = gtk_widget_get_window (handle);", "+\tlong /*int*/ window = gtk_widget_get_window (handle);", "-\t\tint /*long*/ cairo = OS.gdk_cairo_create(window);", "+\t\tlong /*int*/ cairo = OS.gdk_cairo_create(window);", "-\t\t\t\tint /*long*/ style = OS.gtk_widget_get_default_style ();", "-\t\t\t\tint /*long*/ pixbuf = OS.gtk_icon_set_render_icon (", "+\t\t\t\tlong /*int*/ style = OS.gtk_widget_get_default_style ();", "+\t\t\t\tlong /*int*/ pixbuf = OS.gtk_icon_set_render_icon (", "-\tint /*long*/ gdkGC = OS.gdk_gc_new (window);", "+\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);", "-\t\t\tint /*long*/ style = OS.gtk_widget_get_default_style ();", "-\t\t\tint /*long*/ pixbuf = OS.gtk_icon_set_render_icon (", "+\t\t\tlong /*int*/ style = OS.gtk_widget_get_default_style ();", "+\t\t\tlong /*int*/ pixbuf = OS.gtk_icon_set_render_icon ("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f7160e5b61a758738a03ddbde7ebd7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  static int JSObjectCallAsFunctionProc (int ctx, int function, int thisObject, int argumentCount, int arguments, int exception)", "signatureAfterChange": "  static long JSObjectCallAsFunctionProc (long ctx, long function, long thisObject, long argumentCount, long arguments, long exception)", "diff": ["-static int /*long*/ JSObjectCallAsFunctionProc (int /*long*/ ctx, int /*long*/ function, int /*long*/ thisObject, int /*long*/ argumentCount, int /*long*/ arguments, int /*long*/ exception) {", "+static long /*int*/ JSObjectCallAsFunctionProc (long /*int*/ ctx, long /*int*/ function, long /*int*/ thisObject, long /*int*/ argumentCount, long /*int*/ arguments, long /*int*/ exception) {", "-\tint /*long*/ ptr = WebKitGTK.JSObjectGetPrivate (thisObject);", "-\tint /*long*/[] handle = new int /*long*/[1];", "+\tlong /*int*/ ptr = WebKitGTK.JSObjectGetPrivate (thisObject);", "+\tlong /*int*/[] handle = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0655edecad2cc2f72261ff5145326fb4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  RectF drawText(int gdipGraphics, char[] buffer, int start, int length, int x, int y, int flags, int mnemonicIndex, TEXTMETRIC lptm, boolean draw)", "signatureAfterChange": "  RectF drawText(long gdipGraphics, char[] buffer, int start, int length, int x, int y, int flags, int mnemonicIndex, TEXTMETRIC lptm, boolean draw)", "diff": ["-RectF drawText(int /*long*/ gdipGraphics, char[] buffer, int start, int length, int x, int y, int flags, int mnemonicIndex, TEXTMETRIC lptm, boolean draw) {", "+RectF drawText(long /*int*/ gdipGraphics, char[] buffer, int start, int length, int x, int y, int flags, int mnemonicIndex, TEXTMETRIC lptm, boolean draw) {", "-\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\tint /*long*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "-\tint /*long*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "-\tint /*long*/ lpOrder = 0;", "+\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\tlong /*int*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "+\tlong /*int*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "+\tlong /*int*/ lpOrder = 0;", "-\tint /*long*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "-\tint /*long*/ hFont = data.hGDIFont;", "+\tlong /*int*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\tlong /*int*/ hFont = data.hGDIFont;", "-\tint /*long*/ oldFont = 0;", "+\tlong /*int*/ oldFont = 0;", "-\t\tint /*long*/ brush = getFgBrush();", "+\t\tlong /*int*/ brush = getFgBrush();", "-\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, 1);", "+\t\t\tlong /*int*/ pen = Gdip.Pen_new(brush, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d87c41c7bf43f6ce015b599a599f88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["-\t\tint /*long*/ imageSurface = srcImage.surface;", "+\t\tlong /*int*/ imageSurface = srcImage.surface;", "-\t\tint /*long*/ cairo = Cairo.cairo_create(surface);", "+\t\tlong /*int*/ cairo = Cairo.cairo_create(surface);", "-\t\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "+\t\t\tlong /*int*/ data = Cairo.cairo_image_surface_get_data(surface);", "-\t\tint /*long*/ mask = OS.gdk_pixmap_new(0, width, height, 1);", "+\t\tlong /*int*/ mask = OS.gdk_pixmap_new(0, width, height, 1);", "-\t\tint /*long*/ gdkGC = OS.gdk_gc_new(mask);", "+\t\tlong /*int*/ gdkGC = OS.gdk_gc_new(mask);", "-\tint /*long*/ pixmap = OS.gdk_pixmap_new (OS.gdk_get_default_root_window(), width, height, -1);", "+\tlong /*int*/ pixmap = OS.gdk_pixmap_new (OS.gdk_get_default_root_window(), width, height, -1);", "-\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "+\tlong /*int*/ gdkGC = OS.gdk_gc_new(pixmap);", "-\t\tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "+\t\tlong /*int*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\tlong /*int*/ colormap = OS.gdk_colormap_get_system();", "-\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\tlong /*int*/ pixels = OS.gdk_pixbuf_get_pixels(pixbuf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aed060df8f4e9b1bf0e8782bdf6e1c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebFrameLoadDelegate.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int didClearWindowObject (int webView, int context, int windowScriptObject, int frame)", "signatureAfterChange": "  int didClearWindowObject (long webView, long context, long windowScriptObject, long frame)", "diff": ["-int didClearWindowObject (int /*long*/ webView, int /*long*/ context, int /*long*/ windowScriptObject, int /*long*/ frame) {", "+int didClearWindowObject (long /*int*/ webView, long /*int*/ context, long /*int*/ windowScriptObject, long /*int*/ frame) {", "-\tint /*long*/ globalObject = WebKit_win32.JSContextGetGlobalObject (context);", "-\tint /*long*/ privateData = ((WebKit)browser.webBrowser).webViewData;", "-\tint /*long*/ externalObject = WebKit_win32.JSObjectMake (context, WebKit.ExternalClass, privateData);", "+\tlong /*int*/ globalObject = WebKit_win32.JSContextGetGlobalObject (context);", "+\tlong /*int*/ privateData = ((WebKit)browser.webBrowser).webViewData;", "+\tlong /*int*/ externalObject = WebKit_win32.JSObjectMake (context, WebKit.ExternalClass, privateData);", "-\tint /*long*/ name = WebKit_win32.JSStringCreateWithUTF8CString (bytes);", "+\tlong /*int*/ name = WebKit_win32.JSStringCreateWithUTF8CString (bytes);", "-\tint /*long*/[] mainFrame = new int /*long*/[1];", "+\tlong /*int*/[] mainFrame = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "019d6771945109852659e59c310b6961", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/cocoa/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void webView_didFailProvisionalLoadWithError_forFrame(int sender, int error, int frame)", "signatureAfterChange": "  void webView_didFailProvisionalLoadWithError_forFrame(long sender, long error, long frame)", "diff": ["-void webView_didFailProvisionalLoadWithError_forFrame(int /*long*/ sender, int /*long*/ error, int /*long*/ frame) {", "+void webView_didFailProvisionalLoadWithError_forFrame(long /*int*/ sender, long /*int*/ error, long /*int*/ frame) {", "-\tint /*long*/ errorCode = nserror.code();", "+\tlong /*int*/ errorCode = nserror.code();", "-\t\tint /*long*/[] policySearch = new int /*long*/[1];", "-\t\tint /*long*/[] policyRef = new int /*long*/[1];", "-\t\tint /*long*/[] trustRef = new int /*long*/[1];", "+\t\tlong /*int*/[] policySearch = new long /*int*/[1];", "+\t\tlong /*int*/[] policyRef = new long /*int*/[1];", "+\t\tlong /*int*/[] trustRef = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea5a3dce0627653d26f75f55725cf04f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  void setCheckboxImageList ()", "signatureAfterChange": "  void setCheckboxImageList ()", "diff": ["-\t\t\tint /*long*/ hDC = OS.GetDC (handle);", "+\t\t\tlong /*int*/ hDC = OS.GetDC (handle);", "-\tint /*long*/ hStateList = OS.ImageList_Create (width, height, flags, count, count);", "-\tint /*long*/ hDC = OS.GetDC (handle);", "-\tint /*long*/ memDC = OS.CreateCompatibleDC (hDC);", "-\tint /*long*/ hBitmap = OS.CreateCompatibleBitmap (hDC, width * count, height);", "-\tint /*long*/ hOldBitmap = OS.SelectObject (memDC, hBitmap);", "+\tlong /*int*/ hStateList = OS.ImageList_Create (width, height, flags, count, count);", "+\tlong /*int*/ hDC = OS.GetDC (handle);", "+\tlong /*int*/ memDC = OS.CreateCompatibleDC (hDC);", "+\tlong /*int*/ hBitmap = OS.CreateCompatibleBitmap (hDC, width * count, height);", "+\tlong /*int*/ hOldBitmap = OS.SelectObject (memDC, hBitmap);", "-\tint /*long*/ hBrush = OS.CreateSolidBrush (clrBackground);", "+\tlong /*int*/ hBrush = OS.CreateSolidBrush (clrBackground);", "-\tint /*long*/ oldFont = OS.SelectObject (hDC, defaultFont ());", "+\tlong /*int*/ oldFont = OS.SelectObject (hDC, defaultFont ());", "-\t\tint /*long*/ hTheme = display.hButtonTheme ();", "+\t\tlong /*int*/ hTheme = display.hButtonTheme ();", "-\tint /*long*/ hOldStateList = OS.SendMessage (handle, OS.TVM_GETIMAGELIST, OS.TVSIL_STATE, 0);", "+\tlong /*int*/ hOldStateList = OS.SendMessage (handle, OS.TVM_GETIMAGELIST, OS.TVSIL_STATE, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b19f955bebf172d12a23abfdb6d70cda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void drawWidget (int id, NSGraphicsContext context, NSRect rect)", "signatureAfterChange": "  void drawWidget (long id, NSGraphicsContext context, NSRect rect)", "diff": ["-void drawWidget (int /*long*/ id, NSGraphicsContext context, NSRect rect) {", "+void drawWidget (long /*int*/ id, NSGraphicsContext context, NSRect rect) {", "-\t\tint /*long*/ ctx = context.graphicsPort();", "+\t\tlong /*int*/ ctx = context.graphicsPort();", "-\t\t \tint /*long*/ data = rep.bitmapData();", "-\t\t\tint /*long*/ format = rep.bitmapFormat();", "-\t\t \tint /*long*/ bpr = rep.bytesPerRow();", "+\t\t \tlong /*int*/ data = rep.bitmapData();", "+\t\t\tlong /*int*/ format = rep.bitmapFormat();", "+\t\t \tlong /*int*/ bpr = rep.bytesPerRow();", "-\t\t \tint /*long*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "-\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\t\t\tint /*long*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "+\t\t \tlong /*int*/ provider = OS.CGDataProviderCreateWithData(0, data, bpr * (int)size.height, 0);", "+\t\t\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tlong /*int*/ cgImage = OS.CGImageCreate((int)size.width, (int)size.height, rep.bitsPerSample(), rep.bitsPerPixel(), bpr, colorspace, alphaInfo, provider, 0, true, 0);", "-\t\t\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\t\t\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\t\t\tOS.CGContextSetFillColor(ctx, new float /*double*/ [] {1, 1, 1, 1});", "+\t\t\tOS.CGContextSetFillColor(ctx, new double /*float*/ [] {1, 1, 1, 1});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322316a5b1ed0460b84645cf8fc78a27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  long callWindowProc (long hwnd, int msg, long wParam, long lParam)", "diff": ["-int /*long*/ callWindowProc (int /*long*/ hwnd, int msg, int /*long*/ wParam, int /*long*/ lParam) {", "+long /*int*/ callWindowProc (long /*int*/ hwnd, int msg, long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\t\tint /*long*/ paintDC = 0;", "+\t\t\t\tlong /*int*/ paintDC = 0;", "-\t\t\t\t\tint /*long*/ hDC = paintDC, hBitmap = 0, hOldBitmap = 0;", "+\t\t\t\t\tlong /*int*/ hDC = paintDC, hBitmap = 0, hOldBitmap = 0;", "-\t\t\t\t\t\tint /*long*/ margins = OS.SendMessage (handle, OS.EM_GETMARGINS, 0, 0);", "+\t\t\t\t\t\tlong /*int*/ margins = OS.SendMessage (handle, OS.EM_GETMARGINS, 0, 0);", "-\t\t\t\t\t\tint /*long*/ hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "-\t\t\t\t\t\tint /*long*/ hOldFont = OS.SelectObject (hDC, hFont);", "+\t\t\t\t\t\tlong /*int*/ hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\t\tlong /*int*/ hOldFont = OS.SelectObject (hDC, hFont);", "-\tint /*long*/ code = OS.CallWindowProc (EditProc, hwnd, msg, wParam, lParam);", "+\tlong /*int*/ code = OS.CallWindowProc (EditProc, hwnd, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bcced731105b10581cc492e797003ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebResourceLoadDelegate.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int didReceiveAuthenticationChallenge (int webView, int identifier, int challenge, int dataSource)", "signatureAfterChange": "  int didReceiveAuthenticationChallenge (long webView, long identifier, long challenge, long dataSource)", "diff": ["-int didReceiveAuthenticationChallenge (int /*long*/ webView, int /*long*/ identifier, int /*long*/ challenge, int /*long*/ dataSource) {", "+int didReceiveAuthenticationChallenge (long /*int*/ webView, long /*int*/ identifier, long /*int*/ challenge, long /*int*/ dataSource) {", "-\tint /*long*/[] result = new int /*long*/[1];", "+\tlong /*int*/[] result = new long /*int*/[1];", "-\t\t\t\t\tint /*long*/ user = WebKit.createBSTR (event.user);", "-\t\t\t\t\tint /*long*/ password = WebKit.createBSTR (event.password);", "+\t\t\t\t\tlong /*int*/ user = WebKit.createBSTR (event.user);", "+\t\t\t\t\tlong /*int*/ password = WebKit.createBSTR (event.password);", "-\t\tint /*long*/ user = WebKit.createBSTR (userReturn[0]);", "-\t\tint /*long*/ password = WebKit.createBSTR (passwordReturn[0]);", "+\t\tlong /*int*/ user = WebKit.createBSTR (userReturn[0]);", "+\t\tlong /*int*/ password = WebKit.createBSTR (passwordReturn[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc9f95944fa8f8580d3e9c559abc375", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " private int GetWindowContext(int ppFrame, int ppDoc, int lprcPosRect, int lprcClipRect, int lpFrameInfo)", "signatureAfterChange": " private int GetWindowContext(long ppFrame, long ppDoc, long lprcPosRect, long lprcClipRect, long lpFrameInfo)", "diff": ["-private int GetWindowContext(int /*long*/ ppFrame, int /*long*/ ppDoc, int /*long*/ lprcPosRect, int /*long*/ lprcClipRect, int /*long*/ lpFrameInfo) {\t", "+private int GetWindowContext(long /*int*/ ppFrame, long /*int*/ ppDoc, long /*int*/ lprcPosRect, long /*int*/ lprcClipRect, long /*int*/ lpFrameInfo) {\t", "-\tint /*long*/ iOleInPlaceFrame = frame.getIOleInPlaceFrame();", "-\tCOM.MoveMemory(ppFrame, new int /*long*/[] {iOleInPlaceFrame}, OS.PTR_SIZEOF);", "+\tlong /*int*/ iOleInPlaceFrame = frame.getIOleInPlaceFrame();", "+\tCOM.MoveMemory(ppFrame, new long /*int*/[] {iOleInPlaceFrame}, OS.PTR_SIZEOF);", "-\tif (ppDoc != 0) COM.MoveMemory(ppDoc, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "+\tif (ppDoc != 0) COM.MoveMemory(ppDoc, new long /*int*/[] {0}, OS.PTR_SIZEOF);", "-\t\tint /*long*/ hwnd = shell.handle;", "+\t\tlong /*int*/ hwnd = shell.handle;", "-\t\t\tint /*long*/ hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);", "+\t\t\tlong /*int*/ hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb46e9cfc957eebb5845b7f199700e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 190, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0)", "signatureAfterChange": "  static long windowProc(long id, long sel, long arg0)", "diff": ["-static int /*long*/ windowProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0) {", "+static long /*int*/ windowProc(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0) {", "-\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);", "-\t\tint /*long*/ result = OS.malloc (NSSize.sizeof);", "+\t\tlong /*int*/ result = OS.malloc (NSSize.sizeof);", "-\t\tint /*long*/ result = OS.malloc(NSSize.sizeof);", "+\t\tlong /*int*/ result = OS.malloc(NSSize.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff431c6bdf73949219bb7d72a74f4525", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  static int JSObjectCallAsFunctionProc (int ctx, int function, int thisObject, int argumentCount, int arguments, int exception)", "signatureAfterChange": "  static long JSObjectCallAsFunctionProc (long ctx, long function, long thisObject, long argumentCount, long arguments, long exception)", "diff": ["-static int /*long*/ JSObjectCallAsFunctionProc (int /*long*/ ctx, int /*long*/ function, int /*long*/ thisObject, int /*long*/ argumentCount, int /*long*/ arguments, int /*long*/ exception) {", "+static long /*int*/ JSObjectCallAsFunctionProc (long /*int*/ ctx, long /*int*/ function, long /*int*/ thisObject, long /*int*/ argumentCount, long /*int*/ arguments, long /*int*/ exception) {", "-\tint /*long*/ ptr = WebKit_win32.JSObjectGetPrivate (thisObject);", "-\tint /*long*/[] handle = new int /*long*/[1];", "+\tlong /*int*/ ptr = WebKit_win32.JSObjectGetPrivate (thisObject);", "+\tlong /*int*/[] handle = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8ec8aaa7bdc3e144467378b431e121", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  int webkit_resource_request_starting (int web_view, int web_frame, int web_resource, int request, int response)", "signatureAfterChange": "  long webkit_resource_request_starting (long web_view, long web_frame, long web_resource, long request, long response)", "diff": ["-int /*long*/ webkit_resource_request_starting (int /*long*/ web_view, int /*long*/ web_frame, int /*long*/ web_resource, int /*long*/ request, int /*long*/ response) {", "+long /*int*/ webkit_resource_request_starting (long /*int*/ web_view, long /*int*/ web_frame, long /*int*/ web_resource, long /*int*/ request, long /*int*/ response) {", "-\t\tint /*long*/ message = WebKitGTK.webkit_network_request_get_message (request);", "+\t\tlong /*int*/ message = WebKitGTK.webkit_network_request_get_message (request);", "-\t\t\t\tint /*long*/ body = WebKitGTK.SoupMessage_request_body (message);", "+\t\t\t\tlong /*int*/ body = WebKitGTK.SoupMessage_request_body (message);", "-\t\t\t\tint /*long*/ data = C.malloc (bytes.length);", "+\t\t\t\tlong /*int*/ data = C.malloc (bytes.length);", "-\t\t\tint /*long*/ requestHeaders = WebKitGTK.SoupMessage_request_headers (message);", "+\t\t\tlong /*int*/ requestHeaders = WebKitGTK.SoupMessage_request_headers (message);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd573d4a9da5e78ebd0c2d498ca322ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  long callWindowProc (long hwnd, int msg, long wParam, long lParam)", "diff": ["-int /*long*/ callWindowProc (int /*long*/ hwnd, int msg, int /*long*/ wParam, int /*long*/ lParam) {", "+long /*int*/ callWindowProc (long /*int*/ hwnd, int msg, long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\t\tint /*long*/ result = OS.CallWindowProc (ComboProc, hwnd, msg, wParam, lParam);", "+\t\t\t\tlong /*int*/ result = OS.CallWindowProc (ComboProc, hwnd, msg, wParam, lParam);", "-\tint /*long*/ hwndText = OS.GetDlgItem (handle, CBID_EDIT);", "+\tlong /*int*/ hwndText = OS.GetDlgItem (handle, CBID_EDIT);", "-\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\t\t\tint /*long*/ pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\t\t\tlong /*int*/ pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\t\t\tint /*long*/ code = OS.CallWindowProc (EditProc, hwndText, msg, wParam, pszText);", "+\t\t\tlong /*int*/ code = OS.CallWindowProc (EditProc, hwndText, msg, wParam, pszText);", "-\tint /*long*/ hwndList = OS.GetDlgItem (handle, CBID_LIST);", "+\tlong /*int*/ hwndList = OS.GetDlgItem (handle, CBID_LIST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b6584751117d2f33e5b88ffef45115", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 562, "signatureBeforeChange": " public static final native int objc_msgSend(int id, int sel, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);", "signatureAfterChange": " public static final native long objc_msgSend(long id, long sel, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5);", "diff": ["+public static final native long /*int*/ objc_msgSend(long /*int*/ id, long /*int*/ sel, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5);", "-public static final native int /*long*/ objc_msgSend(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6);"]}], "num": 52433}