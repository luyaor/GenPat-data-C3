{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef4dfbbb29da64c71e05fd26b02089e3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ed582b8a6b692d85652d9dc5939b7b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "be1f9d730cb652d318e7ee17f674495ab0705c00", "commitAfterChange": "62e2de30b1910932e9323f4d268f30d2bc1a6bda", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  void generateSends()", "signatureAfterChange": "  void generateSends()", "diff": ["-\tHashSet set = new HashSet();", "-\tHashSet tagsSet = new HashSet();", "+\tTreeSet set = new TreeSet();", "-\t\t\t\t\t\t\t\tString codeTags = buildSend(method, true, false);", "-\t\t\t\t\t\t\t\tif (set.contains(code) && !tagsSet.contains(codeTags)) {", "-\t\t\t\t\t\t\t\t\tString code64 = buildSend(method, false, true);", "-\t\t\t\t\t\t\t\t\ttagsSet.add(code64);", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\ttagsSet.add(codeTags);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tString code64 = buildSend(method, false, true);", "+\t\t\t\t\t\t\t\tset.add(code64);", "-\tfor (Iterator iterator = tagsSet.iterator(); iterator.hasNext();) {", "+\tout(\"//TODO - trim unused 64 bit calls\");", "+\toutln();", "+\tfor (Iterator iterator = set.iterator(); iterator.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df18e3b9358ddc8cdf6fbe54ea6fcaa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "43137968a0c0fbca54b57767ee31f164d05a870e", "commitAfterChange": "01e69de95a49620479ae9d7ccc8bb19292ede8fe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tGtkStyle style = new GtkStyle ();", "-\t\tint stylePtr = OS.gtk_style_copy (OS.gtk_widget_get_style (handle));", "-\t\tOS.memmove (style, stylePtr);", "-\t\tstyle.xthickness = 0;", "-\t\tstyle.ythickness = 0;", "-\t\tOS.memmove (stylePtr, style);", "-\t\tOS.gtk_widget_set_style (handle, stylePtr);", "+\t\tint style = OS.gtk_widget_get_modifier_style (handle);", "+\t\tOS.gtk_rc_style_set_xthickness (style, 0);", "+\t\tOS.gtk_rc_style_set_ythickness (style, 0);", "+\t\tOS.gtk_widget_modify_style (handle, style);", "-\tsetForegroundColor (parent.getForegroundColor ());", "-\tsetFontDescription (parent.getFontDescription ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceb2bfb614ab21a94bb1865d543b964f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "a8c93acdd9d140ae005bd9455314ceccf08cdb3c", "commitAfterChange": "aa9f032c97ee642fe99e38094f060b15b21ae19b", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 198, "signatureBeforeChange": " void handleCompositionChanged(Event event)", "signatureAfterChange": " void handleCompositionChanged(Event event)", "diff": ["+}", "-\tif (selection.x != selection.y) {", "-\t\tEvent e = new Event();", "-\t\te.text = \"\";", "-\t\te.start = selection.x;", "-\t\te.end = selection.y;", "-\t\tsendKeyEvent(e);", "-\t}", "+\tint end = event.end;", "-\t\tcontent.replaceTextRange(start, event.end - start, \"\");", "+\t\tcontent.replaceTextRange(start, end - start, \"\");", "-\t\tcontent.replaceTextRange(start, event.end - start, text);", "+\t\tcontent.replaceTextRange(start, end - start, text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec805a61acd522941e95563fc680b42e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "8a770faaa4942f4e1cde0428ab3348bcc4c88e3f", "commitAfterChange": "3ca06f3dce8760dd92c325183d782ac24428fc09", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public void test_postLorg_eclipse_swt_widgets_Event()", "signatureAfterChange": "  public void test_postLorg_eclipse_swt_widgets_Event()", "diff": ["-\t\tevent.type = SWT.KeyDown;", "-\t\tevent.keyCode = -1;  \t\t\t\t// bogus key code", "-\t\tassertTrue(display.post(event));\t// uses default 0 character", "-\t\t// don't test KeyDown/KeyUp with a character to avoid sending to ", "-\t\t// random window if test shell looses focus", "-\t\t", "-\t\tevent = new Event();", "-\t\tevent.type = SWT.KeyUp;", "-\t\tassertTrue(display.post(event));", "+//\t\tevent.type = SWT.KeyDown;", "+//\t\tevent.keyCode = -1;  \t\t\t\t// bogus key code", "+//\t\tassertTrue(display.post(event));\t// uses default 0 character", "+//\t\t// don't test KeyDown/KeyUp with a character to avoid sending to ", "+//\t\t// random window if test shell looses focus", "+//\t\t", "+//\t\tevent = new Event();", "+//\t\tevent.type = SWT.KeyUp;", "+//\t\tassertTrue(display.post(event));"]}], "num": 17714}