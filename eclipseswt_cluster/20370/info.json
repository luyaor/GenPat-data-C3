{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ac778afee9815d557c851560848eff8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11be5a171553831903c6db0ae1ab1299", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "cc81619f9bb3266b4ad015825272dce98bc98771", "commitAfterChange": "03fdc4ce598a854ad5aca71d689e6a6135d4397b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\tif (filterPath.length () > 0) {", "-\t\tStringBuffer stringBuffer = new StringBuffer ();", "-\t\t/* filename must be a full path */", "-\t\tif (filterPath.charAt (0) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tstringBuffer.append (filterPath);", "-", "-\t\tif (fileName.length () > 0 && (style & SWT.SAVE) == 0) {", "-\t\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "-\t\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t\t}", "-\t\t\tstringBuffer.append (fileName);", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\t\t/*", "-\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t* The fix is to use the canonical path.", "-\t\t\t*/", "-\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\t\tOS.g_free (ptr);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\t\t/*", "-\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t* The fix is to use the canonical path.", "-\t\t\t*/", "-\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "-\t\t\t\tOS.g_free (ptr);", "-\t\t\t}", "-\t\t}", "-\t} else {", "-\t\tif (fileName.length () > 0) {", "-\t\t\tif (fileName.charAt (0) == SEPARATOR) {", "-\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\tif ((style & SWT.SAVE) != 0) {", "+\t\tif (filterPath.length () > 0) {", "+\t\t\tif (uriMode) {", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, filterPath, true);", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder_uri (handle, buffer);", "+\t\t\t} else {", "+\t\t\t\t/* filename must be a full path */", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, SEPARATOR + filterPath, true);", "+\t\t\t\t", "-\t\t\t\tif (ptr != 0) {", "-\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\t\t\tOS.g_free (ptr);", "-\t\t\t\t}", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\tOS.g_free (ptr);", "+\t\tif (fileName.length () > 0) {", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\t\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "+\t\t}", "+\t} else {", "+\t\tStringBuffer stringBuffer = new StringBuffer();", "+\t\tif (filterPath.length () > 0) {", "+\t\t\tif (!uriMode) {", "+\t\t\t\t/* filename must be a full path */", "+\t\t\t\tstringBuffer.append(SEPARATOR);", "+\t\t\t}", "+\t\t\tstringBuffer.append(filterPath);", "+\t\t\tstringBuffer.append(SEPARATOR);", "+\t\t}", "+\t\tif (fileName.length () > 0) {", "+\t\t\tstringBuffer.append(fileName);", "+\t\t}", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString(), true);", "+\t\tif (uriMode) {", "+\t\t\tOS.gtk_file_chooser_set_uri (handle, buffer);", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "+\t\t\t* when setting a file name that is not a true canonical path. ", "+\t\t\t* The fix is to use the canonical path.", "+\t\t\t*/", "+\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "+\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\tOS.g_free (ptr);", "+\t\t}", "-\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "-\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "-\t}", "+\t", "+\t/* Set overwrite mode */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92d48be8d17fb79d8b3aa13c8be8ca0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "da070c767dca330968a0bc3730f4f7fa6e63ddea", "commitAfterChange": "e68f6dd7961c12937e9660a6a57b980c17ed895a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "+\t\t\t\t/*", "+\t\t\t\t * in GTK version 2.10, gtk_file_chooser_set_current_folder requires path", "+\t\t\t\t * to be true canonical path. So using realpath to convert the path to ", "+\t\t\t\t * true canonical path.", "+\t\t\t\t */", "+\t\t\t\tif (OS.IsAIX) {", "+\t\t\t\t\tbyte [] outputBuffer = new byte [PATH_MAX];", "+\t\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, outputBuffer);", "+\t\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\t/* We are not doing free here because realpath returns the address of outputBuffer", "+\t\t\t\t\t * which is created in this code and we let the garbage collector to take care of this", "+\t\t\t\t\t */", "+\t\t\t\t} else {", "+\t\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "+\t\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t\tOS.g_free (ptr);", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\tif (fileName.length() > 0) {", "-\t\t\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "+\t\t\t/*", "+\t\t\t * in GTK version 2.10, gtk_file_chooser_set_current_folder requires path", "+\t\t\t * to be true canonical path. So using realpath to convert the path to ", "+\t\t\t * true canonical path.", "+\t\t\t */", "+\t\t\tif (OS.IsAIX) {", "+\t\t\t\tbyte [] outputBuffer = new byte [PATH_MAX];", "+\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, outputBuffer);", "+\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\tif (fileName.length() > 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\t/* We are not doing free here because realpath returns the address of outputBuffer", "+\t\t\t\t\t * which is created in this code and we let the garbage collector to take care of this", "+\t\t\t\t\t */", "+\t\t\t\t}", "-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "+\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "+\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\tif (fileName.length() > 0) {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.g_free (ptr);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd713dedf3898b75eb20ec2d3f5a1056", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "bc634d7232bc02a3b9d3fdc9fc44566487fbc970", "commitAfterChange": "a60d8be544df20ec79b43bb591b7ac60b3452dbc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["+void presetChooserDialog () {", "+\t/* MULTI is only valid if the native dialog's action is Open */   ", "+\tif ((style & (SWT.SAVE | SWT.MULTI)) == SWT.MULTI) {", "+\t\tOS.gtk_file_chooser_set_select_multiple (handle, true);", "+\t}", "+\tif (filterPath == null) filterPath = \"\";", "+\tif (fileName == null) fileName = \"\";", "+\tif (filterPath.length () > 0) {", "+\t\tStringBuffer stringBuffer = new StringBuffer ();", "+\t\t/* filename must be a full path */", "+\t\tif (filterPath.charAt (0) != SEPARATOR) {", "+\t\t\tstringBuffer.append (SEPARATOR);", "+\t\t}", "+\t\tstringBuffer.append (filterPath);", "+\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "+\t\t\tstringBuffer.append (SEPARATOR);", "+\t\t}", "+\t\tif (fileName.length () > 0) {", "+\t\t\tstringBuffer.append (fileName);", "+\t\t} else {", "+\t\t\t/* go into the specified directory */", "+\t\t\tstringBuffer.append ('.');", "+\t\t}", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "+\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "+\t}", "+\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "+\t}", "+", "+\t/* Set the extension filters */", "+\tif (filterNames == null) filterNames = new String [0];", "+\tif (filterExtensions == null) filterExtensions = new String [0];", "+\tfor (int i = 0; i < filterExtensions.length; i++) {", "+\t\tif (filterExtensions [i] != null) {", "+\t\t\tint /*long*/ filter = OS.gtk_file_filter_new ();", "+\t\t\tif (filterNames.length > i && filterNames [i] != null) {", "+\t\t\t\tbyte [] name = Converter.wcsToMbcs (null, filterNames [i], true);", "+\t\t\t\tOS.gtk_file_filter_set_name (filter, name);", "+\t\t\t} else {", "+\t\t\t\tbyte [] name = Converter.wcsToMbcs (null, filterExtensions [i], true);", "+\t\t\t\tOS.gtk_file_filter_set_name (filter, name);", "+\t\t\t}", "+\t\t\tint start = 0;", "+\t\t\tint index = filterExtensions [i].indexOf (EXTENSION_SEPARATOR);", "+\t\t\twhile (index != -1) {", "+\t\t\t\tString current = filterExtensions [i].substring (start, index);", "+\t\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, current, true);", "+\t\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "+\t\t\t\tstart = index + 1;", "+\t\t\t\tindex = filterExtensions [i].indexOf (EXTENSION_SEPARATOR, start);", "+\t\t\t}", "+\t\t\tString current = filterExtensions [i].substring (start);", "+\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, current, true);", "+\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "+\t\t\tOS.gtk_file_chooser_add_filter (handle, filter);", "+\t\t}", "+\t}", "+\tfullPath = null;", "+\tfileNames = new String [0];", "+}", "-}", "-void presetChooserDialog () {", "-\t/* MULTI is only valid if the native dialog's action is Open */   ", "-\tif ((style & (SWT.SAVE | SWT.MULTI)) == SWT.MULTI) {", "-\t\tOS.gtk_file_chooser_set_select_multiple (handle, true);", "-\t}", "-\tif (filterPath == null) filterPath = \"\";", "-\tif (fileName == null) fileName = \"\";", "-\tif (filterPath.length () > 0) {", "-\t\tStringBuffer stringBuffer = new StringBuffer ();", "-\t\t/* filename must be a full path */", "-\t\tif (filterPath.charAt (0) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tstringBuffer.append (filterPath);", "-\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tif (fileName.length () > 0) {", "-\t\t\tstringBuffer.append (fileName);", "-\t\t} else {", "-\t\t\t/* go into the specified directory */", "-\t\t\tstringBuffer.append ('.');", "-\t\t}", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "-\t}", "-\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "-\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "-\t}", "-", "-\t/* Set the extension filters */", "-\tif (filterNames == null) filterNames = new String [0];", "-\tif (filterExtensions == null) filterExtensions = new String [0];", "-\tfor (int i = 0; i < filterExtensions.length; i++) {", "-\t\tif (filterExtensions [i] != null) {", "-\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, filterExtensions [i], true);", "-\t\t\tint /*long*/ filter = OS.gtk_file_filter_new ();", "-\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "-\t\t\tif (filterNames.length > i && filterNames [i] != null) {", "-\t\t\t\tfilterString = Converter.wcsToMbcs (null, filterNames [i], true);", "-\t\t\t}", "-\t\t\tOS.gtk_file_filter_set_name (filter, filterString);", "-\t\t\tOS.gtk_file_chooser_add_filter (handle, filter);", "-\t\t}", "-\t}", "-\tfullPath = null;", "-\tfileNames = new String [0];", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db62938d160dc918988aa853e219d81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "e44aa31d6d4d8839f08cb523fdcb3ead3ed216fd", "commitAfterChange": "eb8e8e74c5daad22517cbbcc4a53bd8a8af6fafe", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tif (fileName.length () > 0) {", "+", "+\t\tif (fileName.length () > 0 && (style & SWT.SAVE) == 0) {", "+\t\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "+\t\t\t\tstringBuffer.append (SEPARATOR);", "+\t\t\t}", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "+\t\t\t/*", "+\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "+\t\t\t* when setting a file name that is not a true canonical path. ", "+\t\t\t* The fix is to use the canonical path.", "+\t\t\t*/", "+\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "+\t\t\tif (ptr != 0) {", "+\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\tOS.g_free (ptr);", "+\t\t\t}", "-\t\t\t/* go into the specified directory */", "-\t\t\tstringBuffer.append ('.');", "-\t\t}", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\t/*", "-\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t* when setting a file name that is not a true canonical path. ", "-\t\t* The fix is to use the canonical path.", "-\t\t*/", "-\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "-\t\tif (ptr != 0) {", "-\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\tOS.g_free (ptr);", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "+\t\t\t/*", "+\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "+\t\t\t* when setting a file name that is not a true canonical path. ", "+\t\t\t* The fix is to use the canonical path.", "+\t\t\t*/", "+\t\t\tint /*long*/ ptr = OS.realpath (buffer, null);", "+\t\t\tif (ptr != 0) {", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "+\t\t\t\tOS.g_free (ptr);", "+\t\t\t}"]}], "num": 20370}