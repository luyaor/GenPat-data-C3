{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9194701faef4fa5c3d2f04a321a10955", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf991d37c040c93edc325e3fdad51aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "334dd3b1940a2d75dbdd2f6bffa755e1429f66d2", "commitAfterChange": "fa7eee3a1d10b376837126ea0a7c765da37c3240", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  int tableView_objectValueForTableColumn_row(int aTableView, int aTableColumn, int rowIndex)", "signatureAfterChange": "  int tableView_objectValueForTableColumn_row(int aTableView, int aTableColumn, int rowIndex)", "diff": ["-\treturn NSString.stringWith(items[rowIndex]).id;", "+\tNSMutableDictionary dict = NSMutableDictionary.dictionaryWithCapacity(4);", "+\tif (foreground != null) {", "+\t\tNSColor color = NSColor.colorWithDeviceRed(foreground.handle[0], foreground.handle[1], foreground.handle[2], 1);", "+\t\tdict.setObject(color, OS.NSForegroundColorAttributeName());", "+\t}", "+\tif (font != null) {", "+\t\tdict.setObject(font.handle, OS.NSFontAttributeName());", "+\t}", "+\tif (background != null) {", "+\t\tNSColor color = NSColor.colorWithDeviceRed(background.handle[0], background.handle[1], background.handle[2], 1);", "+\t\tdict.setObject(color, OS.NSBackgroundColorAttributeName());", "+\t}", "+\tString text = items[rowIndex];", "+\tint length = text.length();", "+\tchar[] chars = new char[length];", "+\ttext.getChars(0, length, chars, 0);", "+\tNSString str = NSString.stringWithCharacters(chars, length);", "+\tNSAttributedString attribStr = ((NSAttributedString)new NSAttributedString().alloc()).initWithString_attributes_(str, dict);", "+\tattribStr.autorelease();", "+\treturn attribStr.id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc295a6b319b1c237c8439eb8feea4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 56, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-public Point stringExtent(String string) {", "+public Point stringExtent(String string) {\t", "-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\t/* AW", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreate(buffer, OS.XmFONTLIST_DEFAULT_TAG);", "-\tint fontList = data.fontList;", "-\tint width = OS.XmStringWidth(fontList, xmString);", "-\tint height = OS.XmStringHeight(fontList, xmString);", "-\tOS.XmStringFree(xmString);", "-\t*/", "-\ttry {", "-\t\tfocus(false, null);", "-\t\tinstallFont();", "-\t\tint width= OS.TextWidth(string, data.font.fID, data.font.fSize, data.font.fFace);", "-\t\tshort[] fontInfo= new short[4];", "-\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\t\treturn new Point(width, fontInfo[0] + fontInfo[1]);", "-\t} finally {", "-\t\tunfocus(false);", "-\t}", "+\tint length = string.length();", "+\tif (length == 0) return new Point(0, data.fontAscent + data.fontDescent);", "+\tchar[] buffer = new char[length];", "+\tstring.getChars(0, length, buffer, 0);", "+\tint ptr1 = OS.NewPtr(length * 2);", "+\tOS.memcpy(ptr1, buffer, length * 2);", "+\tOS.ATSUSetTextPointerLocation(data.layout, ptr1, 0, length, length);", "+\tOS.ATSUSetRunStyle(data.layout, data.style, 0, length);", "+\tint ptr2 = OS.NewPtr(ATSTrapezoid.sizeof);", "+\tOS.ATSUGetGlyphBounds(data.layout, 0, 0, 0, length, (short)OS.kATSUseDeviceOrigins, 1, ptr2, null);", "+\tOS.DisposePtr(ptr1);", "+\tATSTrapezoid trapezoid = new ATSTrapezoid();", "+\tOS.memcpy(trapezoid, ptr2, ATSTrapezoid.sizeof);", "+\tOS.DisposePtr(ptr2);", "+\tint width = (trapezoid.upperRight_x >> 16) - (trapezoid.upperLeft_x >> 16);", "+\tint height = (trapezoid.lowerRight_y >> 16) - (trapezoid.upperRight_y >> 16);", "+\treturn new Point(width, height);"]}], "num": 25190}