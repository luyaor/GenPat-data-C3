{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9b69f38e79477eabc21d21350f6064e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a09c547e40703debb99b2c9aad347ba7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "commitAfterChange": "d5daa8f36f1cf3782d0b78f004964f7faa681453", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate int handleUserPaneDraw(int cHandle, int partCode)", "signatureAfterChange": "  \tprivate int handleUserPaneDraw(int cHandle, int partCode)", "diff": ["-\t\treturn windowProc(cHandle, SWT.Paint, new MacControlEvent(cHandle, fUpdateRegion));", "+\t\tint updateRgn= fUpdateRegion;", "+\t\tif (updateRgn == 0) {", "+\t\t\tupdateRgn= OS.NewRgn();", "+\t\t\tint wHandle= OS.GetControlOwner(cHandle);", "+\t\t\tOS.GetPortVisibleRegion(OS.GetWindowPort(wHandle), updateRgn);", "+\t\t}", "+\t\tint status= windowProc(cHandle, SWT.Paint, new MacControlEvent(cHandle, fUpdateRegion));", "+\t\tif (updateRgn != fUpdateRegion && updateRgn != 0)", "+\t\t\tOS.DisposeRgn(updateRgn);", "+\t\treturn status;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab626e81eb241d195b08a838d47683c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "6ef57fc0e6f6427596d6abd342b6a7b03248370d", "commitAfterChange": "9cf20db2863a33762a4a7c547242d28c6ec2ffdf", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "signatureAfterChange": "\r void doMouseLocationChange(int x, int y, boolean select)", "diff": ["+\tint newCaretOffset;\r", "+\tint newCaretLine;\r", "-\tif (line == 0 || (isSingleLine() == false && line > 0)) {\r", "-\t\tint newCaretOffset = getOffsetAtMouseLocation(x, line);\r", "-\t\t\r", "+\tif (line < 0 || (isSingleLine() && line > 0)) {\r", "+\t\treturn;\r", "+\t}\r", "+\tif (isBidi()) {\r", "+\t\tnewCaretOffset = getBidiOffsetAtMouseLocation(x, line);\t\r", "+\t}\r", "+\telse {\r", "+\t\tnewCaretOffset = getOffsetAtMouseLocation(x, line);\r", "+\t}\r", "+\tif (mouseDoubleClick) {\r", "+\t\t// double click word select the previous/next word. fixes bug 15610\r", "+\t\tnewCaretOffset = doMouseWordSelect(x, newCaretOffset, line);\r", "+\t}\r", "+\tnewCaretLine = content.getLineAtOffset(newCaretOffset);\r", "+\tif (x >= 0 || \r", "+\t\tnewCaretLine != content.getLineAtOffset(caretOffset)) {\r", "+\t\t// Only change the caret offset when the mouse is within \r", "+\t\t// the left client area border or on a different line. \r", "+\t\t// Otherwise the autoscroll selection may be reset. \r", "+\t\t// Fixes 1GKM3XS\r", "-\t\t\tcaretLine = line;\r", "+\t\t\tcaretLine = newCaretLine;\r", "-\t\t\tsetCaretLocation();\r", "+\t\t\tshowCaret();\r", "-\t\tif (select == false) {\r", "-\t\t\tclearSelection(true);\r", "-\t\t}\r", "+\t}\r", "+\tif (select == false) {\r", "+\t\tclearSelection(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc7a8328562ab6a42524067cc3bd7bb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 169, "signatureBeforeChange": "\r void redrawMultiLineChange(int x, int y, int newLineCount, int replacedLineCount)", "signatureAfterChange": "\r void redrawMultiLineChange(int x, int y, int newLineCount, int replacedLineCount)", "diff": ["-\t\tsourceY = y + lineHeight;\r", "-\t\tdestinationY = y + lineCount * lineHeight + lineHeight;\r", "-\t}\r", "+\t\tsourceY = Math.max(0, y + lineHeight);\r", "+\t\tdestinationY = sourceY + lineCount * lineHeight;\r", "+\t} \r", "-\t\tsourceY = y - lineCount * lineHeight + lineHeight;\r", "-\t\tdestinationY = y + lineHeight;\r", "-\t}\r", "+\t\tdestinationY = Math.max(0, y + lineHeight);\r", "+\t\tsourceY = destinationY - lineCount * lineHeight;\r", "+\t}\t\r", "-\tclientArea.width, clientArea.height, true);\r", "+\t\tclientArea.width, clientArea.height, true);\r", "-\tredraw(x, y, clientArea.width, lineHeight, true);\r", "+\tif (y + lineHeight > 0 && y <= clientArea.height) {\r", "+\t\t// redraw first changed line in case a line was split/joined\r", "+\t\tredraw(x, y, clientArea.width, lineHeight, true);\r", "+\t}\r", "-\t\tredraw(0, y + lineHeight, clientArea.width, newLineCount * lineHeight, true);\r", "+\t\tint redrawStartY = y + lineHeight;\r", "+\t\tint redrawHeight = newLineCount * lineHeight;\r", "+\t\t\r", "+\t\tif (redrawStartY + redrawHeight > 0 && redrawStartY <= clientArea.height) {\r", "+\t\t\t// display new text\r", "+\t\t\tredraw(0, redrawStartY, clientArea.width, redrawHeight, true);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa80d1d6a16b256abdba8ebe38ebcb83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bc224c2a2fcbef7d8e73e3f7b7b518fc99abc8ef", "commitAfterChange": "56d7d44784ad7e2547a3e9a0ea84e65586278aec", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " int doMouseWordSelect(int x, int newCaretOffset, int line)", "signatureAfterChange": " int doMouseWordSelect(int x, int newCaretOffset, int line)", "diff": ["-\t\tint wordOffset;", "-\t\t// find the previous/next word", "+\t\tboolean wordSelect = (clickCount & 1) == 0;", "-\t\t\twordOffset = getWordPrevious(newCaretOffset, SWT.MOVEMENT_WORD_START);", "+\t\t\tif (wordSelect) {", "+\t\t\t\tnewCaretOffset = getWordPrevious(newCaretOffset, SWT.MOVEMENT_WORD_START);", "+\t\t\t} else {", "+\t\t\t\tnewCaretOffset = content.getOffsetAtLine(line);", "+\t\t\t}", "-\t\t\twordOffset = getWordNext(newCaretOffset, SWT.MOVEMENT_WORD_END);", "-\t\t}", "-\t\t// mouse word select only on same line mouse cursor is on", "-\t\tif (content.getLineAtOffset(wordOffset) == line) {", "-\t\t\tnewCaretOffset = wordOffset;", "+\t\t\tif (wordSelect) {", "+\t\t\t\tnewCaretOffset = getWordNext(newCaretOffset, SWT.MOVEMENT_WORD_END);", "+\t\t\t} else {", "+\t\t\t\tint lineEnd = content.getCharCount();", "+\t\t\t\tif (line + 1 < content.getLineCount()) {", "+\t\t\t\t\tlineEnd = content.getOffsetAtLine(line + 1);", "+\t\t\t\t}", "+\t\t\t\tnewCaretOffset = lineEnd; ", "+\t\t\t}"]}], "num": 10395}