{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa95ac289d39797890221dfb0b4d95b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47b0da08b60cdf6d60ef1445f59734cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 202, "signatureBeforeChange": " void handleResize(Event event)", "signatureAfterChange": " void handleResize(Event event)", "diff": ["-\t\t\tint x = (oldWidth < clientAreaWidth ? oldWidth : clientAreaWidth)- rightMargin; ", "-\t\t\tredraw(x, 0, rightMargin, oldHeight, false);", "+\t\t\tint x = (oldWidth < clientAreaWidth ? oldWidth : clientAreaWidth) - rightMargin; ", "+\t\t\tsuper.redraw(x, 0, rightMargin, oldHeight, false);", "-\t\t\tint y = (oldHeight < clientAreaHeight ? oldHeight : clientAreaHeight)- bottomMargin; ", "-\t\t\tredraw(0, y, oldWidth, bottomMargin, false);", "+\t\t\tint y = (oldHeight < clientAreaHeight ? oldHeight : clientAreaHeight) - bottomMargin; ", "+\t\t\tsuper.redraw(0, y, oldWidth, bottomMargin, false);", "-\t\t\tlineCache.reset(0, content.getLineCount(), false);", "-\t\t\t//lineCache.calculateClientArea();", "-\t\t\tlineCache.calculate(0, content.getLineCount());", "-\t\t\t//TODO fix verticalScrollOffset", "-\t\t\tint height = 0;", "-\t\t\tfor (int i = 0; i < topIndex; i++) {", "-\t\t\t\theight += lineCache.getLineHeight(i);", "-\t\t\t}", "-\t\t\theight -= partialHeight;", "-\t\t\tverticalScrollOffset = height;", "+\t\t\tif (partialHeight > 0) {", "+\t\t\t\tint partialTopIndex = getPartialTopIndex();", "+\t\t\t\tString line = content.getLine(partialTopIndex);", "+\t\t\t\tint lineOffset = content.getOffsetAtLine(partialTopIndex);", "+\t\t\t\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "+\t\t\t\tlayout.setWidth(oldWidth);", "+\t\t\t\tint height = layout.getBounds().height;", "+\t\t\t\tlayout.setWidth(clientAreaWidth);", "+\t\t\t\tint newHeight = layout.getBounds().height;", "+\t\t\t\trenderer.disposeTextLayout(layout);", "+\t\t\t\tpartialHeight += newHeight - height;", "+\t\t\t\tif (partialHeight < 0) partialHeight = 0;", "+\t\t\t}\t\t\t", "+\t\t\tlineCache.reset(0, content.getLineCount(), true);", "+\t\t\tverticalScrollOffset = -1;", "+\t\t\tlineCache.calculateIdle();", "-\t} else if (clientAreaHeight > oldHeight) {", "+\t\tif (oldHeight != clientAreaHeight) {", "+\t\t\tsetScrollBars(true);", "+\t\t}", "+\t\tsetCaretLocation();", "+\t} else  {", "+\t\tsetScrollBars(true);", "+\t\tclaimRightFreeSpace();", "-\tsetScrollBars(true);", "-\tclaimRightFreeSpace();", "-\t//FH - why is it necessary given that claimBottomFreeSpace() set the top index when needed", "-//\tif (oldHeight != clientAreaHeight) {", "-//\t\tcalculateTopIndex();", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcfbd75fa810556efda0658b1d14d7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 200, "signatureBeforeChange": " void handleResize(Event event)", "signatureAfterChange": " void handleResize(Event event)", "diff": ["-\t", "-\t\t\tint x = (oldWidth < clientAreaWidth ? oldWidth : clientAreaWidth)- rightMargin; ", "-\t\t\tredraw(x, 0, rightMargin, oldHeight, false);", "+\t\t\tint x = (oldWidth < clientAreaWidth ? oldWidth : clientAreaWidth) - rightMargin; ", "+\t\t\tsuper.redraw(x, 0, rightMargin, oldHeight, false);", "-\t\t\tint y = (oldHeight < clientAreaHeight ? oldHeight : clientAreaHeight)- bottomMargin; ", "-\t\t\tredraw(0, y, oldWidth, bottomMargin, false);", "+\t\t\tint y = (oldHeight < clientAreaHeight ? oldHeight : clientAreaHeight) - bottomMargin; ", "+\t\t\tsuper.redraw(0, y, oldWidth, bottomMargin, false);", "-\t\tif (oldWidth != clientAreaWidth) {\t", "-\t\t\twordWrapResize(oldWidth);", "+\t\tif (oldWidth != clientAreaWidth) {", "+\t\t\tif (partialHeight > 0) {", "+\t\t\t\tint partialTopIndex = getPartialTopIndex();", "+\t\t\t\tTextLayout layout = renderer.getTextLayout(partialTopIndex);", "+\t\t\t\tlayout.setWidth(oldWidth);", "+\t\t\t\tint height = layout.getBounds().height;", "+\t\t\t\tlayout.setWidth(clientAreaWidth);", "+\t\t\t\tint newHeight = layout.getBounds().height;", "+\t\t\t\trenderer.disposeTextLayout(layout);", "+\t\t\t\tpartialHeight += newHeight - height;", "+\t\t\t\tif (partialHeight < 0) partialHeight = 0;", "+\t\t\t}", "+\t\t\trenderer.reset(0, content.getLineCount());", "+\t\t\tverticalScrollOffset = -1;", "+\t\t\trenderer.calculateIdle();", "+\t\t\tsuper.redraw();", "+\t\tif (oldHeight != clientAreaHeight) {", "+\t\t\tsetScrollBars(true);", "+\t\t}", "+\t\tsetCaretLocation();", "+\t} else  {", "+\t\trenderer.calculateClientArea();", "+\t\tsetScrollBars(true);", "+\t\tclaimRightFreeSpace();", "-\telse", "-\tif (clientAreaHeight > oldHeight) {", "-\t\tint lineCount = content.getLineCount();", "-\t\tint oldBottomIndex = topIndex + oldHeight / lineHeight;", "-\t\tint newItemCount = Compatibility.ceil(clientAreaHeight - oldHeight, lineHeight);", "-\t\t", "-\t\toldBottomIndex = Math.min(oldBottomIndex, lineCount);", "-\t\tnewItemCount = Math.min(newItemCount, lineCount - oldBottomIndex);", "-\t\tlineCache.calculate(oldBottomIndex, newItemCount);", "-\t}", "-\tsetScrollBars();", "-\tclaimRightFreeSpace();\t", "-\tif (oldHeight != clientAreaHeight) {", "-\t\tcalculateTopIndex();", "-\t}"]}], "num": 2876}