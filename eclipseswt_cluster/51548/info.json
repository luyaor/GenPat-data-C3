{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b9830233fa118afe9c55e209d50ff59", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b710d09e14c66fb125c25fb738c35581", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "04faf293cdea841be2c5fdd94b412bf022b94cde", "commitAfterChange": "b7a20520e8a44365939c3ea67e7c866d1a1154c0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " String openChooserDialog ()", "signatureAfterChange": " String openChooserDialog ()", "diff": ["-\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, 0);", "+\t\tif (OS.GTK3) {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_NAMED_LABEL_CANCEL, OS.GTK_RESPONSE_CANCEL, OS.GTK_NAMED_LABEL_OK, OS.GTK_RESPONSE_OK, 0);", "+\t\t} else {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, 0);", "+\t\t}", "-\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, 0);", "+\t\tif (OS.GTK3) {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_NAMED_LABEL_OK, OS.GTK_RESPONSE_OK, OS.GTK_NAMED_LABEL_CANCEL, OS.GTK_RESPONSE_CANCEL, 0);", "+\t\t} else {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, OS.GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79a53993a2dbba4dfe6565f12ae1099", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "811bdeccc1df1329eadad9688114f47a526dc8ab", "commitAfterChange": "3d4fc78948c5be186415043f009f2521a6863797", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r void createScrolledHandle (int parentHandle)", "signatureAfterChange": "\r \r void createScrolledHandle (int parentHandle)", "diff": ["+\t\tOS.Pt_ARG_FILL_COLOR, OS.Pg_TRANSPARENT, 0,\r", "-\tif ((style & SWT.NO_BACKGROUND) != 0) {\r", "-\t\targs = new int [] {OS.Pt_ARG_FILL_COLOR, OS.Pg_TRANSPARENT, 0};\r", "-\t\tOS.PtSetResources(scrolledHandle, args.length / 3, args);\r", "-\t}\r", "+\tetches = OS.Pt_TOP_OUTLINE | OS.Pt_LEFT_OUTLINE;\r", "+\targs = new int [] {\r", "+\t\tOS.Pt_ARG_FLAGS, OS.Pt_HIGHLIGHTED, OS.Pt_HIGHLIGHTED,\r", "+\t\tOS.Pt_ARG_BASIC_FLAGS, etches, etches,\r", "+\t\tOS.Pt_ARG_WIDTH, display.SCROLLBAR_WIDTH, 0,\r", "+\t\tOS.Pt_ARG_HEIGHT, display.SCROLLBAR_HEIGHT, 0,\r", "+\t\tOS.Pt_ARG_RESIZE_FLAGS, 0, OS.Pt_RESIZE_XY_BITS,\r", "+\t};\r", "+\tOS.PtCreateWidget (OS.PtContainer (), scrolledHandle, args.length / 3, args);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a534135fe39f1650730e7438e4166315", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "04faf293cdea841be2c5fdd94b412bf022b94cde", "commitAfterChange": "b7a20520e8a44365939c3ea67e7c866d1a1154c0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " String openChooserDialog ()", "signatureAfterChange": " String openChooserDialog ()", "diff": ["-\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, 0);", "+\t\tif (OS.GTK3) {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_NAMED_LABEL_CANCEL, OS.GTK_RESPONSE_CANCEL, OS.GTK_NAMED_LABEL_OK, OS.GTK_RESPONSE_OK, 0);", "+\t\t} else {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, 0);", "+\t\t}", "-\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, 0);", "+\t\tif (OS.GTK3) {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_NAMED_LABEL_OK, OS.GTK_RESPONSE_OK, OS.GTK_NAMED_LABEL_CANCEL, OS.GTK_RESPONSE_CANCEL, 0);", "+\t\t} else {", "+\t\t\thandle = OS.gtk_file_chooser_dialog_new (titleBytes, shellHandle, action, OS.GTK_STOCK_OK (), OS.GTK_RESPONSE_OK, OS.GTK_STOCK_CANCEL (), OS.GTK_RESPONSE_CANCEL, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8cfbef89db572a37e1f2e722391c54f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6c4a2c166738e67832efca98869d4a51c06db92b", "commitAfterChange": "84d56fe220646f29848300da6bc168504ddc3a77", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["-\tOS.gtk_clist_set_column_visibility (handle, index, true);", "+\tif (fakeColumn != 0) {", "+\t\tcolumn.handle = fakeColumn;", "+\t\tfakeColumn = 0;", "+\t} else {", "+\t\tcolumn.handle = _createColumnHandle(index);", "+\t\tOS.gtk_tree_view_insert_column(handle, column.handle, index);", "+\t}", "+\tWidgetTable.put (column.handle, this);", "+\tOS.gtk_tree_view_column_set_clickable(column.handle, true);", "+\tOS.g_signal_connect(column.handle, OS.clicked, getDisplay().windowProc2, SWT.Activate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91ad38bc0c0366deaf5e2322f22493d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fb6f593a0cdd1e265e0288d7b02a6f36c77f39f2", "commitAfterChange": "6e5452147d40aa5e520ecebae89228e1445174c7", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle)", "signatureAfterChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle, int whichWindow)", "diff": ["-\tprivate int handleMouseCallback(int nextHandler, int eRefHandle) {", "+\tprivate int handleMouseCallback(int nextHandler, int eRefHandle, int whichWindow) {", "+\t\t\t//System.out.println(\"  handleMouseCallback: kEventMouseDown \" + whichWindow);\t", "+\t\t\t//System.out.println(\"     frontw \" + OS.FrontWindow());", "-\t\tint whichWindow= 0;", "-\t\tif (fTrackedControl != 0) {", "-\t\t\twhichWindow= OS.GetControlOwner(fTrackedControl);", "+\t\tif (whichWindow == 0) {", "+\t\t\tif (fTrackedControl != 0) {", "+\t\t\t\twhichWindow= OS.GetControlOwner(fTrackedControl);", "+\t\t\t} else {", "+\t\t\t\tint[] w= new int[1];", "+\t\t\t\tpart= OS.FindWindow(where.getData(), w);", "+\t\t\t\twhichWindow= w[0];", "+\t\t\t\t//part= getWindowDefPart(eRefHandle);", "+\t\t\t\t//whichWindow= getDirectObject(eRefHandle);", "+\t\t\t}", "-\t\t\tint[] w= new int[1];", "-\t\t\tpart= OS.FindWindow(where.getData(), w);", "-\t\t\twhichWindow= w[0];", "-\t\t\t//part= getWindowDefPart(eRefHandle);", "-\t\t\t//whichWindow= getDirectObject(eRefHandle);", "+\t\t\tpart= OS.FindWindow(where.getData(), new int[1]);", "-\t\t\t\t", "-\t\t/*", "-\t\tif (eventKind == OS.kEventMouseDown) {", "-\t\t\tWidget w= findWidget(whichWindow);", "-\t\t\tSystem.out.println(\"click: \" + whichWindow + \" \" + w);", "-\t\t}", "-\t\t*/", "+\t\tif (whichWindow == 0) {", "+\t\t\tSystem.out.println(\"Display.handleMouseCallback:  whichWindow == 0\");", "+\t\t\treturn OS.eventNotHandledErr;", "+\t\t}", "+\t\t\t", "-\t\t\thideToolTip ();", "-\t\t", "-\t\t\t//if (whichWindow != OS.FrontNonFloatingWindow()) {", "-\t\t\t//if (whichWindow != OS.FrontWindow()) {", "-\t\t\t//if (OS.IsWindowActive(whichWindow)) {", "-\t\t\tif (whichWindow != fActiveWindow) {", "-\t\t\t\t//System.out.println(\"  front click\");", "-\t\t\t\t//OS.CallNextEventHandler(nextHandler, eRefHandle);", "+\t\t\tif (!OS.IsWindowActive(whichWindow)) {", "+\t\t\t\t// let the default handler activate the window", "+\t\t\t\t// (I had no success when calling SelectWindow)", "+\t\t\thideToolTip ();", "+\t\t", "-\t\t\tif (part == OS.inContent) {", "-\t\t\t\tif (handleContentClick(me, whichWindow))", "-\t\t\t\t\treturn OS.eventNotHandledErr;", "-\t\t\t} else", "-\t\t\t\treturn OS.eventNotHandledErr;", "+\t\t\tif (part == OS.inContent)", "+\t\t\t\tif (!handleContentClick(me, whichWindow))", "+\t\t\t\t\treturn OS.kNoErr;", "+", "+\t\t\t\treturn OS.kNoErr;", "-\t\t\tif (fTrackedControl != 0)", "+\t\t\tif (fTrackedControl != 0) {", "-\t\t\tfTrackedControl= 0;", "+\t\t\t\tfTrackedControl= 0;", "+\t\t\t\treturn OS.kNoErr;", "+\t\t\t}\t", "-\t\t\t//System.out.println(\"  kEventMouseMoved\");", "-\t\t\t\t\t//System.out.println(\"mouse exit: \" + WidgetTable.get(fCurrentControl));", "-\t\t\t\t\t//System.out.println(\"mouse enter: \" + WidgetTable.get(fCurrentControl));", "-\t\t\t\t", "+\t\t\t\treturn OS.kNoErr;\t\t\t", "-\t\t\t\t\t//System.out.println(\"mouse moved: \" + WidgetTable.get(fCurrentControl));", "+\t\t\t\t\treturn OS.kNoErr;", "-\t\treturn OS.kNoErr;", "+\t\treturn OS.eventNotHandledErr;"]}], "num": 51548}