{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b83016718b2a54bbd3dc25484b897852", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6935317cca50692c5426abfc97e4444", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "602cd07bc5162e9c0ec20ec97176f602797fb16b", "commitAfterChange": "2a875789af435de5c9c9375b1f8108fb292a5c76", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  int gtk_expose_event (int widget, int event)", "signatureAfterChange": "  int gtk_expose_event (int widget, int event)", "diff": ["-\tif ((style & SWT.SEARCH) != 0 && !OS.GTK_WIDGET_HAS_FOCUS (handle)) {", "+\tif ((style & SWT.SINGLE) != 0 && message.length () > 0) {", "-\t\tif (OS.strlen (str) == 0) {", "+\t\tif (!OS.GTK_WIDGET_HAS_FOCUS (handle) && OS.strlen (str) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5afe16963aa7ab96550196cd05c76dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a875789af435de5c9c9375b1f8108fb292a5c76", "commitAfterChange": "70e9cf3abf86a3105f4bc5e21a46516d0ffc1539", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\tif ((style & SWT.SEARCH) != 0 && !hasFocus () && OS.XmTextGetLastPosition (handle) == 0) {", "-\t\t/* ", "-\t\t* Feature in Motif. XmText fills its background during exposure ", "-\t\t* without respecting the damage clipping. This erases all previous", "-\t\t* paints. The fix is always to draw the entire content ignoring", "-\t\t* the damage.", "-\t\t*/", "-\t\tint [] argList = new int [] {", "-\t\t\tOS.XmNmarginWidth, 0,", "-\t\t\tOS.XmNmarginHeight, 0,", "-\t\t\tOS.XmNshadowThickness, 0,", "-\t\t\tOS.XmNhighlightThickness, 0,", "-\t\t\tOS.XmNwidth, 0,", "-\t\t\tOS.XmNheight, 0,", "-\t\t};", "-\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t\tint marginWidth = argList [1] + argList[5] + argList[7];", "-\t\tint marginHeight = argList [3] + argList[5] + argList[7];", "-\t\tRectangle rect = new Rectangle (marginWidth, marginHeight, argList [9] - 2 * marginWidth, argList [11] - 2 * marginHeight);", "-\t\tGCData data = new GCData ();", "-\t\tGC gc = GC.motif_new (this, data);", "-\t\tgc.setForeground (disabledColor);", "-\t\tgc.setClipping (rect);", "-\t\tgc.drawString (message, rect.x, rect.y, true);", "-\t\tgc.dispose ();", "+\tif ((style & SWT.SINGLE) != 0 && message.length () > 0) { ", "+\t\tif (!hasFocus () && OS.XmTextGetLastPosition (handle) == 0) {", "+\t\t\t/* ", "+\t\t\t* Feature in Motif. XmText fills its background during exposure ", "+\t\t\t* without respecting the damage clipping. This erases all previous", "+\t\t\t* paints. The fix is always to draw the entire content ignoring", "+\t\t\t* the damage.", "+\t\t\t*/", "+\t\t\tint [] argList = new int [] {", "+\t\t\t\tOS.XmNmarginWidth, 0,", "+\t\t\t\tOS.XmNmarginHeight, 0,", "+\t\t\t\tOS.XmNshadowThickness, 0,", "+\t\t\t\tOS.XmNhighlightThickness, 0,", "+\t\t\t\tOS.XmNwidth, 0,", "+\t\t\t\tOS.XmNheight, 0,", "+\t\t\t};", "+\t\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\t\t\tint marginWidth = argList [1] + argList[5] + argList[7];", "+\t\t\tint marginHeight = argList [3] + argList[5] + argList[7];", "+\t\t\tRectangle rect = new Rectangle (marginWidth, marginHeight, argList [9] - 2 * marginWidth, argList [11] - 2 * marginHeight);", "+\t\t\tGCData data = new GCData ();", "+\t\t\tGC gc = GC.motif_new (this, data);", "+\t\t\tgc.setForeground (disabledColor);", "+\t\t\tgc.setClipping (rect);", "+\t\t\tgc.drawString (message, rect.x, rect.y, true);", "+\t\t\tgc.dispose ();", "+\t\t}"]}], "num": 2140}