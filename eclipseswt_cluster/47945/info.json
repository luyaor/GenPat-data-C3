{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71fea1652ae5b554ba2fc5004cba188d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a7ef3eb8e75ac55d6a9f443f83db1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "38bd43e4935fbbed6e74ae5e6ca91441972c34c3", "commitAfterChange": "f9cd7ef6a7c327cac176b78d49adcb0e6892737e", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["+\tupdate (false);", "+}", "-\tOS.gdk_window_process_updates (window, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45493a3f4134af2b89d1bfe5390cf7b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ImageTransfer.java", "commitBeforeChange": "a3b02a04a381231f9082de077a6f17f8af5d2dad", "commitAfterChange": "bd7861d3f10ae5263261fadc72efba55b44f5f8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative(Object object, TransferData transferData)", "diff": ["-\tint /*long*/ pixmap = image.pixmap; ", "- \tint width = imgData.width;", "- \tint height = imgData.height;  \t", "- \tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, true, 8, width, height);", "-\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "-\tOS.gdk_pixbuf_get_from_drawable(pixbuf, pixmap, colormap, 0, 0, 0, 0, width, height);\t", "-\t", "-\tString typeStr = \"\";", "-\tif (transferData.type ==  JPEG_ID) typeStr = \"jpeg\";", "-\tif (transferData.type ==  PNG_ID) typeStr = \"png\";", "-\tif (transferData.type ==  BMP_ID) typeStr = \"bmp\";", "-\tif (transferData.type ==  EPS_ID) typeStr = \"eps\";", "-\tif (transferData.type ==  PCX_ID) typeStr = \"pcx\";", "-\tif (transferData.type ==  PPM_ID) typeStr = \"ppm\";", "-\tif (transferData.type ==  RGB_ID) typeStr = \"rgb\";", "-\tif (transferData.type ==  TGA_ID) typeStr = \"tga\";", "-\tif (transferData.type ==  XBM_ID) typeStr = \"xbm\";", "-\tif (transferData.type ==  XPM_ID) typeStr = \"xpm\";", "-\tif (transferData.type ==  XV_ID) typeStr = \"xv\";", "-\tbyte[] type = Converter.wcsToMbcs(null, typeStr , true);", "-\tint /*long*/ [] buffer = new int /*long*/ [1];", "-\tint /*long*/ [] len = new int /*long*/ [1];", "-\tif (type == null) return;", "-\tOS.gdk_pixbuf_save_to_bufferv(pixbuf, buffer, len, type, null, null, null);", "-\tOS.g_object_unref(pixbuf);", "+ \tint /*long*/ pixbuf = ImageList.createPixbuf(image);", "+\tif (pixbuf != 0) {", "+\t\tString typeStr = \"\";", "+\t\tif (transferData.type ==  JPEG_ID) typeStr = \"jpeg\";", "+\t\telse if (transferData.type ==  PNG_ID) typeStr = \"png\";", "+\t\telse if (transferData.type ==  BMP_ID) typeStr = \"bmp\";", "+\t\telse if (transferData.type ==  EPS_ID) typeStr = \"eps\";", "+\t\telse if (transferData.type ==  PCX_ID) typeStr = \"pcx\";", "+\t\telse if (transferData.type ==  PPM_ID) typeStr = \"ppm\";", "+\t\telse if (transferData.type ==  RGB_ID) typeStr = \"rgb\";", "+\t\telse if (transferData.type ==  TGA_ID) typeStr = \"tga\";", "+\t\telse if (transferData.type ==  XBM_ID) typeStr = \"xbm\";", "+\t\telse if (transferData.type ==  XPM_ID) typeStr = \"xpm\";", "+\t\telse if (transferData.type ==  XV_ID) typeStr = \"xv\";", "+\t\tbyte[] type = Converter.wcsToMbcs(null, typeStr , true);", "+\t\tint /*long*/ [] buffer = new int /*long*/ [1];", "+\t\tint /*long*/ [] len = new int /*long*/ [1];", "+\t\tif (type == null) return;", "+\t\tOS.gdk_pixbuf_save_to_bufferv(pixbuf, buffer, len, type, null, null, null);", "+\t\tOS.g_object_unref(pixbuf);", "+\t\ttransferData.pValue = buffer[0];", "+\t\ttransferData.length = (int)(len[0] + 3) / 4 * 4;", "+\t\ttransferData.result = 1;", "+\t\ttransferData.format = 32;", "+\t}", "-\ttransferData.pValue = buffer[0];", "-\ttransferData.length = (int)(len[0] + 3) / 4 * 4;", "-\ttransferData.result = 1;", "-\ttransferData.format = 32;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f663e89d7bef8a1167b351b7eda7614", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bf221f66369037ceea33728d5ed71d69549dd596", "commitAfterChange": "73be0ec89889e2c1322c1bfa09d83f81f689ab7f", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 200, "signatureBeforeChange": " void handleResize(Event event)", "signatureAfterChange": " void handleResize(Event event)", "diff": ["-\t\t\tif (partialHeight > 0) {", "-\t\t\t\tint partialTopIndex = getPartialTopIndex();", "-\t\t\t\tTextLayout layout = renderer.getTextLayout(partialTopIndex);", "-\t\t\t\tlayout.setWidth(oldWidth);", "-\t\t\t\tint height = layout.getBounds().height;", "-\t\t\t\tlayout.setWidth(clientAreaWidth);", "-\t\t\t\tint newHeight = layout.getBounds().height;", "-\t\t\t\trenderer.disposeTextLayout(layout);", "-\t\t\t\tpartialHeight += newHeight - height;", "-\t\t\t\tif (partialHeight < 0) partialHeight = 0;", "-\t\t\t}", "+\tif (oldHeight != clientAreaHeight || wordWrap) {", "+\t\tcalculateTopIndex(0);", "+\t}"]}], "num": 47945}