{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dc3cf7aa84a51b56655b6d69a29c667", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061ac29544a9e40814f4187c3d8e7005", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 72, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\tif (data.renderTable == 0) createRenderTable();", "-\tint renderTable = data.renderTable;", "-", "-\tint tableLength = 0;", "-\tDevice device = data.device;", "-\tint[] parseTable = new int[2];", "-\tchar[] text = new char[string.length()];", "-\tstring.getChars(0, text.length, text, 0);\t", "-\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;", "-\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;", "-\tif ((flags & SWT.DRAW_MNEMONIC) != 0) stripMnemonic(text);\t", "-", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage(), text, true);", "-\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);", "-\tint width = OS.XmStringWidth(renderTable, xmString);", "-\tint height =  OS.XmStringHeight(renderTable, xmString);", "-\tOS.XmStringFree(xmString);", "-\treturn new Point(width, height);", "+\tsetText(string, flags);", "+\tif (data.textWidth != -1) return new Point(data.textWidth, data.textHeight);", "+\tint width, height;", "+\tif (string.length() == 0) {", "+\t\twidth = 0;", "+\t\theight = getFontHeight();", "+\t} else {", "+\t\tint fontList = data.fontList;", "+\t\tint xmText = data.xmText;", "+\t\twidth = OS.XmStringWidth(fontList, xmText);", "+\t\theight = OS.XmStringHeight(fontList, xmText);", "+\t}", "+\treturn new Point(data.textWidth = width, data.textHeight = height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9ed4cd1b59db9060e53843e8c495d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\tif (data.renderTable == 0) createRenderTable();", "-\tint renderTable = data.renderTable;", "-", "-\tchar mnemonic=0;", "-\tint tableLength = 0;", "-\tDevice device = data.device;", "-\tint[] parseTable = new int[2];", "-\tchar[] text = new char[string.length()];", "-\tstring.getChars(0, text.length, text, 0);", "-\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;", "-\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;", "-\tif ((flags & SWT.DRAW_MNEMONIC) != 0) mnemonic = stripMnemonic(text);", "-\t", "-\tString codePage = getCodePage();", "-\tbyte[] buffer = Converter.wcsToMbcs(codePage, text, true);", "-\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);", "-\tif (mnemonic != 0) {", "-\t\tbyte [] buffer1 = Converter.wcsToMbcs(codePage, new char[]{mnemonic}, true);", "-\t\tint xmStringUnderline = OS.XmStringCreate (buffer1, OS.XmFONTLIST_DEFAULT_TAG);", "-\t\tOS.XmStringDrawUnderline(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmStringUnderline);", "-\t\tOS.XmStringFree(xmStringUnderline);", "+\tif (string.length() == 0) return;", "+\tsetText(string, flags);", "+\tint xmMnemonic = data.xmMnemonic;", "+\tif (xmMnemonic != 0) {", "+\t\tOS.XmStringDrawUnderline(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);", "-\t\t\tOS.XmStringDraw(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDraw(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\t\t\tOS.XmStringDrawImage(data.display, data.drawable, renderTable, xmString, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDrawImage(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\tOS.XmStringFree(xmString);"]}], "num": 42835}