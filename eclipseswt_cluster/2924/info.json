{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3974832b369a5742f3274475dffed91f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6377e0b7627871ad2a817483271b44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "7e632feed9e029d710fd3c7c625039dfd91ea9ad", "commitAfterChange": "f248d27eba65ed41c9146d5bdd2fea733e2f0658", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["-\t* If the browser has not completed its initial navigate to about:blank", "-\t* then delay setting this text content until the navigate has completed.", "+\t* If the browser is navigating to about:blank in response to its first", "+\t* setUrl() invocation then delay setting this text content until the", "+\t* navigate has completed.  about:blank will be re-navigated to in order", "+\t* to ensure that all expected client events are sent.", "-\tif (!initialNavigateComplete) {", "+\tif (performingInitialNavigate) {", "-\t* loaded, so no Stop or Navigate is required.  Just set the html that is to", "-\t* be shown.", "+\t* loaded from a previous setText() invocation, so no Stop or Navigate is", "+\t* required.  Just set the html that is to be shown.", "-\t", "+", "-\tint[] rgdispid;", "-\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\tif (pVarResult == null) return false;", "-\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\tpVarResult.dispose();", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\tauto.invoke(rgdispid[0]);", "+\tif (_getUrl().length() != 0) {", "+\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\tif (pVarResult == null) return false;", "+\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\t\tpVarResult.dispose();", "+\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\t\tauto.invoke(rgdispid[0]);", "+\t}", "-\tif (getUrl().equals(ABOUT_BLANK)) {", "+\tif (_getUrl().equals(ABOUT_BLANK)) {", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "+\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5e9ff669e0c871823be9a1e17ca7cf6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "f9a08dbd6beda8d1b619e1c7b08fd9da6fe993bb", "commitAfterChange": "477aa9eda338f67199b48e89b29378f8afcddb73", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  static Program gnome_getProgram(Display display, String mimeType)", "signatureAfterChange": "  static Program gnome_getProgram(Display display, String mimeType)", "diff": ["-\t\tint length = OS.strlen(application.command);", "-\t\tbyte[] buffer = new byte[length];", "-\t\tOS.memmove(buffer, application.command, length);\t\t", "-\t\tprogram.command = new String(Converter.mbcsToWcs(null, buffer));", "+\t\tif (application.command != 0) {", "+\t\t\tint length = OS.strlen(application.command);", "+\t\t\tif (length > 0) {", "+\t\t\t\tbyte[] buffer = new byte[length];", "+\t\t\t\tOS.memmove(buffer, application.command, length);\t\t", "+\t\t\t\tprogram.command = new String(Converter.mbcsToWcs(null, buffer));", "+\t\t\t}", "+\t\t}", "-\t\tlength = OS.strlen(application.id);", "-\t\tbuffer = new byte[length + 1];", "+\t\tint length = OS.strlen(application.id);", "+\t\tbyte[] buffer = new byte[length + 1];", "-\treturn program;", "+\treturn program.command != null ? program : null;"]}], "num": 2924}