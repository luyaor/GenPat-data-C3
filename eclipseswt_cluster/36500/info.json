{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e40431d21b5642e8f9868847641027cb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8113115e1996663da595cf114226ffb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e06c7cee06cde407869bbcac7ab1fc8f1e44f50c", "commitAfterChange": "bf8ff308bbd619429fdfe0609e1738dfe9acc5ea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void addColumn (TreeColumn column)", "signatureAfterChange": " void addColumn (TreeColumn column)", "diff": ["-\t/*", "-\t * The texts, textWidths and images arrays always maintain at least one index, representing", "-\t * the automatic column that a Tree with no specified TreeColumns gets.", "-\t */", "-\t", "-\t\tImage[] newImages = new Image [columnCount];", "-\t\tSystem.arraycopy (images, 0, newImages, 0, index);", "-\t\tSystem.arraycopy (images, index, newImages, index + 1, columnCount - index - 1);", "-\t\timages = newImages;", "+\t\tif (index == 0) {", "+\t\t\ttexts [1] = text;", "+\t\t\ttext = \"\";", "+\t\t}", "+", "+\t\tif (columnCount == 2) {", "+\t\t\timages = new Image [2];", "+\t\t} else {", "+\t\t\tImage[] newImages = new Image [columnCount];", "+\t\t\tSystem.arraycopy (images, 0, newImages, 0, index);", "+\t\t\tSystem.arraycopy (images, index, newImages, index + 1, columnCount - index - 1);", "+\t\t\timages = newImages;", "+\t\t}", "+\t\tif (index == 0) {", "+\t\t\timages [1] = image;", "+\t\t\timage = null;", "+\t\t}", "+", "-\tif (columnCount == 1) {", "-\t\tGC gc = new GC (parent);", "-\t\tcomputeDisplayText (0, gc);", "-\t\ttextWidths [0] = gc.textExtent (getDisplayText (0)).x;", "-\t\tgc.dispose ();", "-\t}", "+\t}", "+", "+\tif (index == 0 && columnCount > 1) {", "+\t\t/*", "+\t\t * The new second column now has more space available to it than it did while it", "+\t\t * was the first column since it no longer has to show hierarchy decorations, so", "+\t\t * recompute its displayText.", "+\t\t */", "+\t\tGC gc = new GC (parent);", "+\t\tgc.setFont (getFont (1));", "+\t\tcomputeDisplayText (1, gc);", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613e178dbe14b634f27b27c8e2ce8ae9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3a8b741511257fc679d4239913ca4617e094904c", "commitAfterChange": "afaf25cd95cf7dfa885eeec244de8112627b268f", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": "  void releaseDisplay ()", "signatureAfterChange": "  void releaseDisplay ()", "diff": ["+\t", "+\tif (runLoopObserver != 0) {", "+\t\tOS.CFRunLoopObserverInvalidate (runLoopObserver);", "+\t\tOS.CFRelease (runLoopObserver);", "+\t}", "+\trunLoopObserver = 0;", "+\tif (observerCallback != null) observerCallback.dispose();", "+\tobserverCallback = null;"]}], "num": 36500}