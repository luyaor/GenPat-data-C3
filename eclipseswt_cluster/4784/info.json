{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "877066a909b859ee8c8affcc739ff7b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99f15dc0d5479069e5f4983e7446087", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 7, "signatureBeforeChange": " void updateVerticalBar()", "signatureAfterChange": " void calculateWidestScrolledItem(int topIndexDifference)", "diff": ["+ */", "+void calculateWidestScrolledItem(int topIndexDifference) {", "+\tint visibleItemCount = getItemCountTruncated(getClientArea());\t", "+\tint newMaximumItemWidth = getContentWidth();", "+\tint topIndex = getTopIndex();", "+\tint stopIndex = topIndex;", "+", "+\tif (topIndexDifference < 0) {\t\t\t\t\t\t\t\t// scrolled up?", "+\t\tif (Math.abs(topIndexDifference) > visibleItemCount) {\t// scrolled down more than one page (via quick thumb dragging)?", "+\t\t\ttopIndexDifference = visibleItemCount * -1;", "+\t\tfor (int i = stopIndex - topIndexDifference; i >= stopIndex; i--) {\t// check item width from old top index up to new one", "+\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "+\t\t}", "+\telse", "+\tif (topIndexDifference > 0) {\t\t\t\t\t\t\t\t// scrolled down?", "+\t\tif (topIndexDifference > visibleItemCount) {\t\t\t// scrolled down more than one page (via quick thumb dragging)?", "+\t\t\ttopIndexDifference = visibleItemCount;", "+\t\t}", "+\t\tstopIndex += visibleItemCount;\t\t", "+\t\tfor (int i = stopIndex - topIndexDifference; i < stopIndex; i++) {", "+\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "+\t\t}", "+\tsetContentWidth(newMaximumItemWidth);", "+}", "-}", "-void updateVerticalBar() {", "-\tScrollBar vBar = getVerticalBar();", "-\tint maximum = Math.max(1,availableItems.length);", "-\tif (maximum == vBar.getMaximum()) return;", "-\tvBar.setMaximum(maximum);", "-\tint thumb = Math.min(maximum, getClientArea().height / itemHeight);", "-\tvBar.setThumb(thumb);", "-\t/* reclaim any space now left on the bottom */", "-\tif (maximum < topIndex + thumb) {", "-\t\ttopIndex = maximum - thumb;", "-\t\tvBar.setSelection(topIndex);", "-\t\tredraw();", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b36a7a3c1cfa8378583ebe38f92e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 89, "signatureBeforeChange": " void calculateWidestScrolledItem(int topIndexDifference)", "signatureAfterChange": " void updateVerticalBar()", "diff": ["- */", "-void calculateWidestScrolledItem(int topIndexDifference) {", "-\tint visibleItemCount = getItemCountTruncated(getClientArea());\t", "-\tint newMaximumItemWidth = getContentWidth();", "-\tint topIndex = getTopIndex();", "-\tint stopIndex = topIndex;", "-", "-\tif (topIndexDifference < 0) {\t\t\t\t\t\t\t\t// scrolled up?", "-\t\tif (Math.abs(topIndexDifference) > visibleItemCount) {\t// scrolled down more than one page (via quick thumb dragging)?", "-\t\t\ttopIndexDifference = visibleItemCount * -1;", "-\t\t}", "-\t\tfor (int i = stopIndex - topIndexDifference; i >= stopIndex; i--) {\t// check item width from old top index up to new one", "-\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "-\t\t}", "-\t}", "-\telse", "-\tif (topIndexDifference > 0) {\t\t\t\t\t\t\t\t// scrolled down?", "-\t\tif (topIndexDifference > visibleItemCount) {\t\t\t// scrolled down more than one page (via quick thumb dragging)?", "-\t\t\ttopIndexDifference = visibleItemCount;", "-\t\t}", "-\t\tstopIndex += visibleItemCount;\t\t", "-\t\tfor (int i = stopIndex - topIndexDifference; i < stopIndex; i++) {", "-\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "-\t\t}", "-\t}", "-\tsetContentWidth(newMaximumItemWidth);", "-}", "+}", "+void updateVerticalBar() {", "+\tScrollBar vBar = getVerticalBar();", "+\tint maximum = Math.max(1,availableItems.length);", "+\tif (maximum == vBar.getMaximum()) return;", "+\tvBar.setMaximum(maximum);", "+\tint thumb = Math.min(maximum, getClientArea().height / itemHeight);", "+\tvBar.setThumb(thumb);", "+\t/* reclaim any space now left on the bottom */", "+\tif (maximum < topIndex + thumb) {", "+\t\ttopIndex = maximum - thumb;", "+\t\tvBar.setSelection(topIndex);", "+\t\tredraw();", "+\t}", "+}"]}], "num": 4784}