{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b28ee305590f6bb65aa073b9d64deb5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced877d55129a89487daa9e45132879b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bf4c318f3b06d9d908cfed97ca03e09810154460", "commitAfterChange": "498c28f9bc7c093881089c9d5a8a0b2646f4cc40", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+\treturn gtk_button_press_event (widget, event, true);", "+}", "-\t\tif (!sendMouseEvent (SWT.MouseDown, gdkEvent.button, display.clickCount, 0, false, gdkEvent.time, gdkEvent.x_root, gdkEvent.y_root, false, gdkEvent.state)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04006acdf5a45afbc6f4d39702014b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28611873c812080da03092456ee7cc4c93ef80a3", "commitAfterChange": "e657e76e5131e900496ccd41899277450879646c", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "diff": ["-\tDisplay display = this.display;", "-\t", "-\t/* Check for hardware keys */", "-\tif (OS.IsWinCE) {", "-\t\tif (OS.VK_APP1 <= wParam && wParam <= OS.VK_APP6) {", "-\t\t\tdisplay.lastKey = display.lastAscii = 0;", "-\t\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.detail = wParam - OS.VK_APP1 + 1;", "-\t\t\t/* Check the bit 30 to get the key state */", "-\t\t\tint type = (lParam & 0x40000000) != 0 ? SWT.HardKeyUp : SWT.HardKeyDown;", "-\t\t\tif (setInputState (event, type)) sendEvent (type, event);", "-\t\t\t// widget could be disposed at this point", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\t", "-\t/*", "-\t* If the key up is not hooked, reset last key", "-\t* and last ascii in case the key down is hooked.", "-\t*/", "-\tif (!hooks (SWT.KeyUp) && !display.filters (SWT.KeyUp)) {", "-\t\tdisplay.lastKey = display.lastAscii = 0;", "-\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t\treturn null;", "-\t}", "-\t", "-\t/* Map the virtual key. */", "-\t/*", "-\t* Bug in WinCE.  MapVirtualKey() returns incorrect values.", "-\t* The fix is to rely on a key mappings table to determine", "-\t* whether the key event must be sent now or if a WM_CHAR", "-\t* event will follow.  The key mappings table maps virtual", "-\t* keys to SWT key codes and does not contain mappings for", "-\t* Windows virtual keys like VK_A.  Virtual keys that are", "-\t* both virtual and ASCII are a special case.", "-\t*/", "-\tint mapKey = 0;", "-\tif (OS.IsWinCE) {", "-\t\tswitch (wParam) {", "-\t\t\tcase OS.VK_BACK: mapKey = SWT.BS; break;", "-\t\t\tcase OS.VK_RETURN: mapKey = SWT.CR; break;", "-\t\t\tcase OS.VK_DELETE: mapKey = SWT.DEL; break;", "-\t\t\tcase OS.VK_ESCAPE: mapKey = SWT.ESC; break;", "-\t\t\tcase OS.VK_TAB: mapKey = SWT.TAB; break;", "-\t\t}", "-\t} else {", "-\t\tmapKey = OS.MapVirtualKey (wParam, 2);", "-\t}", "-", "-\t/*", "-\t* Bug in Windows 95 and NT.  When the user types an accent key such", "-\t* as ^ to get an accented character on a German keyboard, the accent", "-\t* key should be ignored and the next key that the user types is the", "-\t* accented key. The fix is to detect the accent key stroke (called", "-\t* a dead key) by testing the high bit of the value returned by", "-\t* MapVirtualKey ().  A further problem is that the high bit on", "-\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "-\t* They should both be bit 32.", "-\t*/", "-\tif (OS.IsWinNT) {", "-\t\tif ((mapKey & 0x80000000) != 0) return null;", "-\t} else {", "-\t\tif ((mapKey & 0x8000) != 0) return null;", "-\t}", "-\tif (display.lastDead) return null;", "-", "-\t/*", "-\t* NOTE: On Windows 98, keypad keys are virtual despite the", "-\t* fact that a WM_CHAR is issued.  On Windows 2000 and XP,", "-\t* they are not virtual.  Therefore it is necessary to force", "-\t* numeric keypad keys to be virtual.", "-\t*/", "-\tdisplay.lastVirtual = mapKey == 0 || display.numpadKey (wParam) != 0;", "-\tif (display.lastVirtual) {", "-\t\tdisplay.lastKey = wParam;", "-\t} else {", "-\t\t/*", "-\t\t* Feature in Windows. The virtual key VK_CANCEL is treated", "-\t\t* as both a virtual key and ASCII key by Windows.  This", "-\t\t* means that a WM_CHAR with WPARAM=3 will be issued for", "-\t\t* this key.  In order to distingush between this key and", "-\t\t* Ctrl+C, mark the key as virtual.", "-\t\t*/", "-\t\tif (wParam == OS.VK_CANCEL) display.lastVirtual = true;", "-\t\tif (display.lastKey == 0) {", "-\t\t\tdisplay.lastAscii = 0;", "-\t\t\tdisplay.lastNull = display.lastDead = false;", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\tLRESULT result = null;", "-\tif (!sendKeyEvent (SWT.KeyUp, OS.WM_KEYUP, wParam, lParam)) {", "-\t\tresult = LRESULT.ONE;", "-\t}", "-\t// widget could be disposed at this point", "-\tdisplay.lastKey = display.lastAscii = 0;", "-\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\treturn result;", "+\treturn wmKeyUp (handle, wParam, lParam);"]}], "num": 58847}