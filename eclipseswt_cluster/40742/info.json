{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9469af9cd64f2d9fb536780a203985c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6716b891a4ba991e032d9a8a5edb7ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r void setBounds (int x, int y, int width, int height)", "signatureAfterChange": "\r void setBounds (int x, int y, int width, int height)", "diff": ["-\tint newWidth = Math.max (width, MINIMUM_WIDTH);\r", "-\tint newHeight = Math.max (height, MINIMUM_CHILD_HEIGHT + MARGIN_HEIGHT);\r", "+\tint newWidth = Math.max (width, 1), newHeight = Math.max (height, 1);\r", "-\t\tint controlWidth = Math.max (1, newWidth - MINIMUM_WIDTH - MARGIN_WIDTH);\r", "-\t\tint controlHeight = Math.max (MINIMUM_CHILD_HEIGHT, height - MARGIN_HEIGHT);\r", "-\t\tcontrol.setBounds (x + MINIMUM_WIDTH, y + MARGIN_HEIGHT, controlWidth, controlHeight);\r", "+\t\tint controlY = y + getControlOffset(newHeight);\r", "+\t\tcontrol.setBounds(\r", "+\t\t\tx + MINIMUM_WIDTH, \r", "+\t\t\tcontrolY, \r", "+\t\t\tnewWidth - MINIMUM_WIDTH - MARGIN_WIDTH, \r", "+\t\t\tcontrol.getSize().y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b6616464ada6bbb03501b120a74fa76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8e5c97c9e89c4e78164a728ed489008ab911e93b", "commitAfterChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 82, "signatureBeforeChange": " \r private boolean scroll_rightVisible()", "signatureAfterChange": " \r private boolean scroll_rightVisible()", "diff": ["-private boolean scroll_rightVisible() {\t\r", "-\tif (topTabIndex < items.length - 1) { \r", "-\t\t// only show Scroll buttons if there is more than one item\r", "-\t\t// and if we are not already at the last item\r", "-\t\tCTabItem tabItem = items[items.length-1];\r", "-\t\tint tabStopX = tabItem.x + tabItem.width;\r", "-\t\tRectangle area = super.getClientArea();\r", "-\t\tif (topTabIndex > 0) {\r", "-\t\t\tint scrollWidth = arrowBar.getSize().x;\r", "-\t\t\tarea.width -=  scrollWidth;\r", "-\t\t}\r", "-\t\tif (tabStopX > area.x + area.width - borderRight) {\r", "-\t\t\treturn true;\t// not all tabs fit in the client area\r", "-\t\t}\r", "+private boolean scroll_rightVisible() {\r", "+\t// only show Scroll buttons if there is more than one item\r", "+\t// and if we are not already at the last item\r", "+\tif (items.length < 2) return false;\r", "+\tRectangle area = getClientArea();\r", "+\tint rightEdge = area.x + area.width;\r", "+\tif (rightEdge <= 0) return false;\r", "+\tif (topTabIndex > 0) {\r", "+\t\trightEdge -=  arrowBar.getSize().x;\r", "-\treturn false;\r", "+\tCTabItem item = items[items.length-1];\r", "+\treturn (item.x + item.width > rightEdge);\r"]}], "num": 40742}