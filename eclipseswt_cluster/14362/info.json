{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9155e17a2178fa65555fa265563a15db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60b5f4600cb400c3871b5334c2f4ed05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "464ae518b2b80f3ac0591357965d95bb99367e4e", "commitAfterChange": "4674a8fef234abb8e185ac0b8bce479e515c8a1a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void layoutControl (boolean events)", "signatureAfterChange": "  void resizeClientArea ()", "diff": ["-void layoutControl (boolean events) {", "-\tif (scrolledHandle == 0) return;", "-\tint vWidth = 0, hHeight = 0;", "-\tint [] outMetric = new int [1];", "-\tOS.GetThemeMetric (OS.kThemeMetricScrollBarWidth, outMetric);", "-\tboolean isVisibleHBar = horizontalBar != null && horizontalBar.getVisible ();", "-\tboolean isVisibleVBar = verticalBar != null && verticalBar.getVisible ();", "-\tif (isVisibleHBar) hHeight = outMetric [0];", "-\tif (isVisibleVBar) vWidth = outMetric [0];", "-\tRect rect = new Rect ();", "-\tOS.GetControlBounds (scrolledHandle, rect);", "-\tRect inset = inset ();", "-\tint width = Math.max (0, rect.right - rect.left - vWidth - inset.left - inset.right);", "-\tint height = Math.max (0, rect.bottom - rect.top - hHeight - inset.top - inset.bottom);", "-\tsetBounds (handle, inset.left, inset.top, width, height, true, true, false);", "-\tif (isVisibleHBar) {", "-\t\tsetBounds (horizontalBar.handle, inset.left, inset.top + height, width, hHeight, true, true, false);", "-\t}", "-\tif (isVisibleVBar) {", "-\t\tsetBounds (verticalBar.handle, inset.left + width, inset.top, vWidth, height, true, true, false);", "-\t}", "-\tif (events) {", "-\t\tsendEvent (SWT.Resize);", "-\t}", "-}", "+void resizeClientArea () {", "+\tif (scrolledHandle == 0) return;", "+\tint vWidth = 0, hHeight = 0;", "+\tint [] outMetric = new int [1];", "+\tOS.GetThemeMetric (OS.kThemeMetricScrollBarWidth, outMetric);", "+\tboolean isVisibleHBar = horizontalBar != null && horizontalBar.getVisible ();", "+\tboolean isVisibleVBar = verticalBar != null && verticalBar.getVisible ();", "+\tif (isVisibleHBar) hHeight = outMetric [0];", "+\tif (isVisibleVBar) vWidth = outMetric [0];", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (scrolledHandle, rect);", "+\tRect inset = inset ();", "+\tint width = Math.max (0, rect.right - rect.left - vWidth - inset.left - inset.right);", "+\tint height = Math.max (0, rect.bottom - rect.top - hHeight - inset.top - inset.bottom);", "+\tsetBounds (handle, inset.left, inset.top, width, height, true, true, false);", "+\tif (isVisibleHBar) {", "+\t\tsetBounds (horizontalBar.handle, inset.left, inset.top + height, width, hHeight, true, true, false);", "+\t}", "+\tif (isVisibleVBar) {", "+\t\tsetBounds (verticalBar.handle, inset.left + width, inset.top, vWidth, height, true, true, false);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409671df088d3d03bc4381e171f793fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "b7a00bf87c6bba490035767725a315da54b8693f", "commitAfterChange": "27a42a02f1d3398db6d0fbf73906bf95e2b7693c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void layoutControl ()", "signatureAfterChange": "  void layoutControl ()", "diff": ["-\tif (scrolledHandle != 0) {", "-\t\tint vWidth = 0, hHeight = 0;", "-\t\tint [] outMetric = new int [1];", "-\t\tOS.GetThemeMetric (OS.kThemeMetricScrollBarWidth, outMetric);", "-\t\tboolean isVisibleHBar = horizontalBar != null && horizontalBar.getVisible ();", "-\t\tboolean isVisibleVBar = verticalBar != null && verticalBar.getVisible ();", "-\t\tif (isVisibleHBar) hHeight = outMetric [0];", "-\t\tif (isVisibleVBar) vWidth = outMetric [0];", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (scrolledHandle, rect);", "-\t\tRect inset = inset ();", "-\t\tint width = Math.max (0, rect.right - rect.left - vWidth - inset.left - inset.right);", "-\t\tint height = Math.max (0, rect.bottom - rect.top - hHeight - inset.top - inset.bottom);", "-\t\tif (isVisibleHBar) {", "-\t\t\tsetBounds (horizontalBar.handle, inset.left, inset.top + height, width, hHeight, true, true, false);", "-\t\t}", "-\t\tif (isVisibleVBar) {", "-\t\t\tsetBounds (verticalBar.handle, inset.left + width, inset.top, vWidth, height, true, true, false);", "-\t\t}", "-\t\tsetBounds (handle, inset.left, inset.top, width, height, true, true, false);", "-\t}\t", "+\tif (scrolledHandle == 0) return;", "+\tint vWidth = 0, hHeight = 0;", "+\tint [] outMetric = new int [1];", "+\tOS.GetThemeMetric (OS.kThemeMetricScrollBarWidth, outMetric);", "+\tboolean isVisibleHBar = horizontalBar != null && horizontalBar.getVisible ();", "+\tboolean isVisibleVBar = verticalBar != null && verticalBar.getVisible ();", "+\tif (isVisibleHBar) hHeight = outMetric [0];", "+\tif (isVisibleVBar) vWidth = outMetric [0];", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (scrolledHandle, rect);", "+\tRect inset = inset ();", "+\tint width = Math.max (0, rect.right - rect.left - vWidth - inset.left - inset.right);", "+\tint height = Math.max (0, rect.bottom - rect.top - hHeight - inset.top - inset.bottom);", "+\tsetBounds (handle, inset.left, inset.top, width, height, true, true, false);", "+\tif (isVisibleHBar) {", "+\t\tsetBounds (horizontalBar.handle, inset.left, inset.top + height, width, hHeight, true, true, false);", "+\t}", "+\tif (isVisibleVBar) {", "+\t\tsetBounds (verticalBar.handle, inset.left + width, inset.top, vWidth, height, true, true, false);", "+\t}"]}], "num": 14362}