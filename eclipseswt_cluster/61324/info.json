{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d30efdbc935a4a1fce00ad5c471b8d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a53b843ff82abc14c97103b6ce4a1a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "3d12b10107474c7c107aa5097ed6447519f113dc", "commitAfterChange": "6f10ae512c6977241ca0066c2cdeaff8b5a3beb3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " String computeResultChooserDialog ()", "signatureAfterChange": " String computeResultChooserDialog ()", "diff": ["+\tfullPath = null;", "-\t\tString path = null;", "-\t\t\t\t\tpath = new String (chars);", "-\t\t\t\t\tfileNames [writePos++] = path.substring (path.lastIndexOf (SEPARATOR) + 1);", "+\t\t\t\t\tfullPath = new String (chars);", "+\t\t\t\t\tfileNames [writePos++] = fullPath.substring (fullPath.lastIndexOf (SEPARATOR) + 1);", "-\t\tif (writePos == 0) return null;", "-\t\tif (writePos != listLength) {", "+\t\tif (writePos != 0 && writePos != listLength) {", "-\t\tfullPath = path;", "-\t\tif (path == 0) return null;", "-\t\tint /*long*/ utf8Ptr = OS.g_filename_to_utf8 (path, -1, null, null, null);", "-\t\tOS.g_free (path);", "-\t\tif (utf8Ptr == 0) return null;", "-\t\tint /*long*/ [] items_written = new int /*long*/ [1];", "-\t\tint /*long*/ utf16Ptr = OS.g_utf8_to_utf16 (utf8Ptr, -1, null, items_written, null);", "-\t\tOS.g_free (utf8Ptr);", "-\t\tif (utf16Ptr == 0) return null;", "-\t\tint clength = (int)/*64*/items_written [0];", "-\t\tchar [] chars = new char [clength];", "-\t\tOS.memmove (chars, utf16Ptr, clength * 2);", "-\t\tOS.g_free (utf16Ptr);", "-\t\tfullPath = new String (chars);", "-\t\tfileNames = new String [1];", "-\t\tfileNames[0] = fullPath.substring (fullPath.lastIndexOf (SEPARATOR) + 1);", "+\t\tif (path != 0) {", "+\t\t\tint /*long*/ utf8Ptr = OS.g_filename_to_utf8 (path, -1, null, null, null);", "+\t\t\tOS.g_free (path);", "+\t\t\tif (utf8Ptr != 0) {", "+\t\t\t\tint /*long*/ [] items_written = new int /*long*/ [1];", "+\t\t\t\tint /*long*/ utf16Ptr = OS.g_utf8_to_utf16 (utf8Ptr, -1, null, items_written, null);", "+\t\t\t\tOS.g_free (utf8Ptr);", "+\t\t\t\tif (utf16Ptr != 0) {", "+\t\t\t\t\tint clength = (int)/*64*/items_written [0];", "+\t\t\t\t\tchar [] chars = new char [clength];", "+\t\t\t\t\tOS.memmove (chars, utf16Ptr, clength * 2);", "+\t\t\t\t\tOS.g_free (utf16Ptr);", "+\t\t\t\t\tfullPath = new String (chars);", "+\t\t\t\t\tfileNames = new String [1];", "+\t\t\t\t\tfileNames[0] = fullPath.substring (fullPath.lastIndexOf (SEPARATOR) + 1);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-\tint separatorIndex = fullPath.lastIndexOf (SEPARATOR);", "-\tfileName = fullPath.substring (separatorIndex + 1);", "-\tfilterPath = fullPath.substring (0, separatorIndex);", "+\tif (fullPath != null) {", "+\t\tint separatorIndex = fullPath.lastIndexOf (SEPARATOR);", "+\t\tfileName = fullPath.substring (separatorIndex + 1);", "+\t\tfilterPath = fullPath.substring (0, separatorIndex);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6aa7f9c20a4378f8b901be3990645c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "97d7bbf8cfdbb6f96f4719f1f7be7a03fa93a649", "commitAfterChange": "86e7cf5504ff5ce8b2c98ba1a25038a04c256d57", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "signatureAfterChange": " static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "diff": ["-\tif (xSrcImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (xSrcImagePtr == 0) return 0;", "-\tint error = 0, xImagePtr = 0;", "+\tOS.XDestroyImage(xSrcImagePtr);", "+\tint xImagePtr = 0;", "-\t\t\tif (xImagePtr == 0) break;", "+\t\t\tif (xImagePtr == 0) return 0;", "+\t\t\tif (bufSize < 0) {", "+\t\t\t\tOS.XDestroyImage(xImagePtr);", "+\t\t\t\treturn 0;", "+\t\t\t} ", "-\t\t\tif (xImagePtr == 0) break;", "+\t\t\tif (xImagePtr == 0) return 0;", "+\t\t\tif (bufSize < 0) {", "+\t\t\t\tOS.XDestroyImage(xImagePtr);", "+\t\t\t\treturn 0;", "+\t\t\t} ", "-\t\tdefault:", "-\t\t\terror = SWT.ERROR_UNSUPPORTED_DEPTH;", "-\t}", "-\tOS.XDestroyImage(xSrcImagePtr);", "-\tif (xImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tif (error != 0) {", "-\t\tif (xImagePtr != 0) OS.XDestroyImage(xImagePtr);", "-\t\tSWT.error(error);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a646f3d9df112f7aa0fb45db7f75cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e754a125a2aabb2687419e882314322d456d220e", "commitAfterChange": "97d7bbf8cfdbb6f96f4719f1f7be7a03fa93a649", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["-\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint colormap = OS.gdk_colormap_get_system();", "-\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "-\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "-\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\tif (gdkImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tbyte[] line = new byte[stride];", "-\t\tfor (int y=0; y<srcHeight; y++) {", "-\t\t\tint offset = pixels + (y * stride);", "-\t\t\tOS.memmove(line, offset, stride);", "-\t\t\tfor (int x=0; x<srcWidth; x++) {", "-\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "-\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "-\t\t\t\t} else {", "-\t\t\t\t\tline[x*4+3] = 0;", "+\t\tif (pixbuf != 0) {", "+\t\t\tint colormap = OS.gdk_colormap_get_system();", "+\t\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "+\t\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "+\t\t\tif (gdkImagePtr != 0) {", "+\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\t\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\t\tbyte[] line = new byte[stride];", "+\t\t\t\tfor (int y=0; y<srcHeight; y++) {", "+\t\t\t\t\tint offset = pixels + (y * stride);", "+\t\t\t\t\tOS.memmove(line, offset, stride);", "+\t\t\t\t\tfor (int x=0; x<srcWidth; x++) {", "+\t\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "+\t\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline[x*4+3] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove(offset, line, stride);", "+\t\t\t\t}", "+\t\t\t\tOS.g_object_unref(gdkImagePtr);", "+\t\t\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "+\t\t\t\tif (scaledPixbuf != 0) {", "+\t\t\t\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "+\t\t\t\t\t\tscaledPixbuf, data.drawable,", "+\t\t\t\t\t\t0, 0, destX, destY, destWidth, destHeight,", "+\t\t\t\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\t\t\t\tOS.g_object_unref(scaledPixbuf);", "-\t\t\tOS.memmove(offset, line, stride);", "+\t\t\tOS.g_object_unref(pixbuf);", "-\t\tOS.g_object_unref(gdkImagePtr);", "-\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "-\t\tOS.g_object_unref(pixbuf);", "-\t\tif (scaledPixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "-\t\t\tscaledPixbuf, data.drawable,", "-\t\t\t0, 0, destX, destY, destWidth, destHeight,", "-\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "-\t\tOS.g_object_unref(scaledPixbuf);"]}], "num": 61324}