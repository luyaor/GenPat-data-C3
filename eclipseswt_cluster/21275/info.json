{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "580937bbb594f2011461b2680c671aa0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff3c651e3e0818c21400beb4f6e748e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "d5ef76abdc0a88a3a80daac9bfb6d535a8a1e9c9", "commitAfterChange": "6b10047f8b94d39fa2b2ab5637752108437a743e", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tstatic int atkText_get_range_extents (int atkObject, int start_offset, int end_offset, int coord_type, int rect)", "signatureAfterChange": " \t \tstatic int atkText_get_range_extents (int atkObject, int start_offset, int end_offset, int coord_type, int rect)", "diff": ["+\t", "+\tstatic int /*long*/ atkText_get_range_extents (int /*long*/ atkObject, int /*long*/ start_offset, int /*long*/ end_offset, int /*long*/ coord_type, int /*long*/ rect) {", "+\t\tif (DEBUG) print (\"-->atkText_get_range_extents\");", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tevent.start = (int)/*64*/start_offset;", "+\t\t\t\tevent.end = (int)/*64*/end_offset;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getTextBounds(event);", "+\t\t\t\t}", "+\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "+\t\t\t\tif (coord_type == ATK.ATK_XY_WINDOW) {", "+\t\t\t\t\twindowPoint (object, topWindowX, topWindowY);", "+\t\t\t\t\tevent.x -= topWindowX [0];", "+\t\t\t\t\tevent.y -= topWindowY [0];", "+\t\t\t\t}", "+\t\t\t\tAtkTextRectangle atkRect = new AtkTextRectangle();", "+\t\t\t\tatkRect.x = event.x;", "+\t\t\t\tatkRect.y = event.y;", "+\t\t\t\tatkRect.width = event.width;", "+\t\t\t\tatkRect.height = event.height;", "+\t\t\t\tATK.memmove (rect, atkRect, AtkTextRectangle.sizeof);", "+\t\t\t\treturn 0;", "+\t\t\t}", "+\t\t}", "+\t\tAtkTextIface iface = getTextIface (atkObject);", "+\t\tif (iface != null && iface.get_range_extents != 0) {", "+\t\t\tATK.call (iface.get_range_extents, atkObject, start_offset, end_offset, coord_type, rect);", "+\t\t}", "+\t\treturn 0;", "-\tstatic int /*long*/ atkText_get_range_extents (int /*long*/ atkObject, int /*long*/ start_offset, int /*long*/ end_offset, int /*long*/ coord_type, int /*long*/ rect) {", "-\t\tif (DEBUG) print (\"-->atkText_get_range_extents\");", "-\t\tAccessibleObject object = getAccessibleObject (atkObject);", "-\t\tif (object != null) {", "-\t\t\tAccessible accessible = object.accessible;", "-\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "-\t\t\tint length = listeners.size();", "-\t\t\tif (length > 0) {", "-\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "-\t\t\t\tevent.start = (int)/*64*/start_offset;", "-\t\t\t\tevent.end = (int)/*64*/end_offset;", "-\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "-\t\t\t\t\tlistener.getTextBounds(event);", "-\t\t\t\t}", "-\t\t\t\tif (coord_type == ATK.ATK_XY_WINDOW) {", "-\t\t\t\t\t/* translate display -> control, for answering to the OS */ ", "-\t\t\t\t\tint /*long*/ gtkAccessibleHandle = ATK.GTK_ACCESSIBLE (atkObject);", "-\t\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\t\t\t\tATK.memmove (gtkAccessible, gtkAccessibleHandle);", "-\t\t\t\t\tint /*long*/ topLevel = ATK.gtk_widget_get_toplevel (gtkAccessible.widget);", "-\t\t\t\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (topLevel);", "-\t\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "-\t\t\t\t\tevent.x -= topWindowX [0];", "-\t\t\t\t\tevent.y -= topWindowY [0];", "-\t\t\t\t}", "-\t\t\t\tAtkTextRectangle atkRect = new AtkTextRectangle();", "-\t\t\t\tatkRect.x = event.x;", "-\t\t\t\tatkRect.y = event.y;", "-\t\t\t\tatkRect.width = event.width;", "-\t\t\t\tatkRect.height = event.height;", "-\t\t\t\tATK.memmove (rect, atkRect, AtkTextRectangle.sizeof);", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t}", "-\t\tAtkTextIface iface = getTextIface (atkObject);", "-\t\tif (iface != null && iface.get_range_extents != 0) {", "-\t\t\tATK.call (iface.get_range_extents, atkObject, start_offset, end_offset, coord_type, rect);", "-\t\t}", "-\t\treturn 0;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c8bff49e9bc96c6053d8951ade1e00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "d5ef76abdc0a88a3a80daac9bfb6d535a8a1e9c9", "commitAfterChange": "6b10047f8b94d39fa2b2ab5637752108437a743e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tstatic int atkComponent_ref_accessible_at_point (int atkObject, int x, int y, int coord_type)", "signatureAfterChange": "  \tstatic int atkComponent_ref_accessible_at_point (int atkObject, int x, int y, int coord_type)", "diff": ["+\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\t/* translate control -> display, for filling in the event to be dispatched */", "-\t\t\t\t\tint /*long*/ gtkAccessibleHandle = ATK.GTK_ACCESSIBLE (atkObject);", "-\t\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\t\t\t\tATK.memmove (gtkAccessible, gtkAccessibleHandle);", "-\t\t\t\t\tint /*long*/ topLevel = ATK.gtk_widget_get_toplevel (gtkAccessible.widget);", "-\t\t\t\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (topLevel);\t\t\t\t", "-\t\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "+\t\t\t\t\twindowPoint (object, topWindowX, topWindowY);", "-\t\t\t\t\tOS.g_object_ref (accObj.handle);\t", "-\t\t\t\t\treturn accObj.handle;", "+\t\t\t\t\treturn OS.g_object_ref (accObj.handle);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2e119f1d3ec44e460bf8dd97f24b50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "d5ef76abdc0a88a3a80daac9bfb6d535a8a1e9c9", "commitAfterChange": "6b10047f8b94d39fa2b2ab5637752108437a743e", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 54, "signatureBeforeChange": " \t \tstatic int atkText_get_character_extents (int atkObject, int offset, int x, int y, int width, int height, int coords)", "signatureAfterChange": " \t \tstatic int atkText_get_character_extents (int atkObject, int offset, int x, int y, int width, int height, int coords)", "diff": ["+\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\t/* translate display -> control, for answering to the OS */ ", "-\t\t\t\t\tint /*long*/ gtkAccessibleHandle = ATK.GTK_ACCESSIBLE (atkObject);", "-\t\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\t\t\t\tATK.memmove (gtkAccessible, gtkAccessibleHandle);", "-\t\t\t\t\tint /*long*/ topLevel = ATK.gtk_widget_get_toplevel (gtkAccessible.widget);", "-\t\t\t\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (topLevel);", "-\t\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "+\t\t\t\t\twindowPoint (object, topWindowX, topWindowY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70268a646b9bbd47a0b30141e82eb211", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "d5ef76abdc0a88a3a80daac9bfb6d535a8a1e9c9", "commitAfterChange": "6b10047f8b94d39fa2b2ab5637752108437a743e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 59, "signatureBeforeChange": "  \tstatic int atkText_get_offset_at_point (int atkObject, int x, int y, int coords)", "signatureAfterChange": "  \tstatic int atkText_get_offset_at_point (int atkObject, int x, int y, int coords)", "diff": ["+\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\t/* translate control -> display, for filling in event to be dispatched */", "-\t\t\t\t\tint /*long*/ gtkAccessibleHandle = ATK.GTK_ACCESSIBLE (atkObject);", "-\t\t\t\t\tGtkAccessible gtkAccessible = new GtkAccessible ();", "-\t\t\t\t\tATK.memmove (gtkAccessible, gtkAccessibleHandle);", "-\t\t\t\t\tint /*long*/ topLevel = ATK.gtk_widget_get_toplevel (gtkAccessible.widget);", "-\t\t\t\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (topLevel);\t\t\t\t", "-\t\t\t\t\tint[] topWindowX = new int [1], topWindowY = new int [1];", "-\t\t\t\t\tOS.gdk_window_get_origin (window, topWindowX, topWindowY);", "+\t\t\t\t\twindowPoint (object, topWindowX, topWindowY);"]}], "num": 21275}