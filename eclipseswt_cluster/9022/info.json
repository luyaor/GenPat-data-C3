{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0bf052c86896b373139f429ae8571d3a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cab7dfb480100dccee5929fea56f7a3c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "09ab8bcabb93eba7741249da7525d098815311d0", "commitAfterChange": "f716d62e4f9bb313588f9dbdd71795c115c366d6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "  String buildSend(Node method, boolean tags, boolean only64)", "signatureAfterChange": "  String buildSend(Node method, boolean tags, boolean only64, boolean superCall)", "diff": ["-String buildSend(Node method, boolean tags, boolean only64) {", "+String buildSend(Node method, boolean tags, boolean only64, boolean superCall) {", "-\t\tbuffer.append(\"void objc_msgSend_stret(\");", "+\t\tbuffer.append(\"void \");", "+\t\tbuffer.append(superCall ? \"objc_msgSendSuper_stret\" : \"objc_msgSend_stret\");", "+\t\tbuffer.append(\"(\");", "-\t\tbuffer.append(\"double objc_msgSend_fpret(\");", "+\t\tbuffer.append(\"double \");", "+\t\tbuffer.append(superCall ? \"objc_msgSendSuper_fpret\" : \"objc_msgSend_fpret\");", "+\t\tbuffer.append(\"(\");", "-\t\tbuffer.append(\"boolean objc_msgSend_bool(\");", "+\t\tbuffer.append(\"boolean \");", "+\t\tbuffer.append(superCall ? \"objc_msgSendSuper_bool\" : \"objc_msgSend_bool\");", "+\t\tbuffer.append(\"(\");", "-\t\tbuffer.append(\" objc_msgSend(\");", "+\t\tbuffer.append(\" \");", "+\t\tbuffer.append(superCall ? \"objc_msgSendSuper\" : \"objc_msgSend\");", "+\t\tbuffer.append(\"(\");", "-\tif (only64) {", "-\t\tbuffer.append(\"long id, long sel\");", "-\t} else {\t\t", "-\t\tif (tags) {", "-\t\t\tbuffer.append(\"int /*long*/ id, int /*long*/ sel\");", "+\tif (superCall) {", "+\t\tif (only64) {", "+\t\t\tbuffer.append(\"objc_super superId, long sel\");", "-\t\t\tbuffer.append(\"int id, int sel\");", "+\t\t\tif (tags) {", "+\t\t\t\tbuffer.append(\"objc_super superId, int /*long*/ sel\");", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(\"objc_super superId, int sel\");", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tif (only64) {", "+\t\t\tbuffer.append(\"long id, long sel\");", "+\t\t} else {", "+\t\t\tif (tags) {", "+\t\t\t\tbuffer.append(\"int /*long*/ id, int /*long*/ sel\");", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(\"int id, int sel\");", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979762ed47d9c7fb379c54a14b84a85c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void generateExitMacro(Method method, String function)", "signatureAfterChange": "  void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter)", "diff": ["-void generateExitMacro(Method method, String function) {", "+void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter) {", "+\tif (!function.equals(function64)) {", "+\t\toutput(\"#ifndef \");", "+\t\toutput(JNI64);", "+\t\toutputln();", "+\t}", "-\toutput(getClassName(method.getDeclaringClass()));", "-\toutput(\"_NATIVE_EXIT(env, that, \");", "+\toutput(method.getDeclaringClass().getSimpleName());", "+\toutput(\"_NATIVE_\");", "+\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\toutput(\"(env, that, \");", "+\tif (!function.equals(function64)) {", "+\t\toutputln(\"#else\");", "+\t\toutput(\"\\t\");", "+\t\toutput(method.getDeclaringClass().getSimpleName());", "+\t\toutput(\"_NATIVE_\");", "+\t\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\t\toutput(\"(env, that, \");", "+\t\toutput(function64);", "+\t\toutputln(\"_FUNC);\");", "+\t\toutputln(\"#endif\");", "+\t}"]}], "num": 9022}