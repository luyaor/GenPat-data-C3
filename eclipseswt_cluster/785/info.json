{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c14ea846f352740085f3ad0b747ede3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4240970df44b166b91c6d076acf2bb2c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d99686d4a205a545dbfb69d5d0b60d14960d18b0", "commitAfterChange": "b2ef8a6279b37707cb201f32394e995cfb449f54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["+\t\t\tint visualPtr = OS.XDefaultVisual(xDisplay, OS.XDefaultScreen(xDisplay));", "+\t\t\tint screenDepth = OS.XDefaultDepthOfScreen(OS.XDefaultScreenOfDisplay(xDisplay));\t\t\t", "+\t\t\tint destXImagePtr = OS.XCreateImage(xDisplay, visualPtr, screenDepth, OS.ZPixmap, 0, 0, width, height, srcXImage.bitmap_pad, 0);", "-\t\t\tint destXImagePtr = OS.XGetImage(xDisplay, drawable, 0, 0, width, height, OS.AllPlanes, OS.ZPixmap);", "-\t\t\tbyte[] destData = new byte[destXImage.bytes_per_line * destXImage.height];", "+\t\t\tint bufSize = destXImage.bytes_per_line * destXImage.height;", "+\t\t\tint bufPtr = OS.XtMalloc(bufSize);", "+\t\t\tdestXImage.data = bufPtr;", "+\t\t\tOS.memmove(destXImagePtr, destXImage, XImage.sizeof);", "+\t\t\tbyte[] destData = new byte[bufSize];", "-\t\t\t\t\tint screenNum = OS.XDefaultScreen(xDisplay);", "-\t\t\t\t\tint visualPtr = OS.XDefaultVisual(xDisplay, screenNum);", "-\t\t\t\t\tscreenNum = OS.XDefaultScreen(xDisplay);", "-\t\t\t\t\tvisualPtr = OS.XDefaultVisual(xDisplay, screenNum);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3991cbb42c2a926c43695d1f2e293e7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tint atkObjectFactory_create_accessible (int widget)", "signatureAfterChange": "  \tstatic int atkObjectFactory_create_accessible (int widget)", "diff": ["-", "-\tint /*long*/ atkObjectFactory_create_accessible (int /*long*/ widget) {", "-\t\tAccessible accessible = (Accessible) accessibles.get (new LONG (widget));", "+\tstatic int /*long*/ atkObjectFactory_create_accessible (int /*long*/ widget) {", "+\t\tAccessible accessible = (Accessible) Accessibles.get (new LONG (widget));", "-\t\t\tint /*long*/ result = OS.g_object_new (objectParentType, 0);", "+\t\t\tint /*long*/ result = OS.g_object_new (getParentType(OS.G_OBJECT_TYPE (widget)), 0);", "-\t\tint typeNameLength = OS.strlen (widgetTypeName);", "-\t\tbyte[] buffer = new byte [typeNameLength];", "-\t\tOS.memmove (buffer, widgetTypeName, typeNameLength);", "-\t\tint /*long*/ type = getType (buffer, accessible, objectParentType, ACC.CHILDID_SELF);", "-\t\tAccessibleObject object = new AccessibleObject (type, widget, accessible, objectParentType, false);", "+\t\tint /*long*/ widgetType = OS.G_OBJECT_TYPE (widget);", "+\t\tint /*long*/ parentType = getParentType (widgetType);", "+\t\tif (parentType == 0) parentType = ATK.GTK_TYPE_ACCESSIBLE();", "+\t\tint /*long*/ type = getType (getTypeName(widgetType), accessible, parentType, ACC.CHILDID_SELF);", "+\t\tAccessibleObject object = new AccessibleObject (type, widget, accessible, false);", "+\t\taccessible.addRelations ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47c57678bddf071f798f63481939c131", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dee0a0c519e44eefef4941020bc3a9fc1f18963b", "commitAfterChange": "04d9b26987c0e3431c86eb2a80f75ea7f4f7af77", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["+\t\t\tif (fileName.indexOf(':') == -1) fileName = \"file://\" + fileName;", "-\t\t\t\tint url = OS.CFURLCreateWithFileSystemPath(OS.kCFAllocatorDefault, arg, OS.kCFURLPOSIXPathStyle, false);", "-\t\t\t\tif (url != 0) {", "-\t\t\t\t\tbyte[] itemRef = new byte[80];", "-\t\t\t\t\tif (OS.CFURLGetFSRef(url, itemRef)) {", "-\t\t\t\t\t\trc = OS.LSOpenItemsWithRole(itemRef, 1, OS.kLSRolesAll, 0, params, null, 0);", "+\t\t\t\tint urls = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "+\t\t\t\tif (urls != 0) {", "+\t\t\t\t\tint url = OS.CFURLCreateWithString(OS.kCFAllocatorDefault, arg, 0);", "+\t\t\t\t\tif (url != 0) {", "+\t\t\t\t\t\tOS.CFArrayAppendValue(urls, url);", "+\t\t\t\t\t\trc = OS.LSOpenURLsWithRole(urls, OS.kLSRolesAll, 0, params, null, 0);", "-\t\t\t\t\tOS.CFRelease(url);", "+\t\t\t\t\tOS.CFRelease(urls);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08bc86416d77040624c5aadc27dca542", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "efc4260c72895a1e6a9a83b6c8c6780d8e41b7b6", "commitAfterChange": "6fac09a771feafc8e3d9817e66d27837c095af14", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void clearSelection ()", "signatureAfterChange": " public void clearSelection ()", "diff": ["-\t\tOS.gtk_editable_delete_selection (handle);", "+\t\tint position = OS.gtk_editable_get_position (handle);", "+\t\tOS.gtk_editable_select_region (handle, position, position);", "-\t\tbyte [] start =  new byte [ITER_SIZEOF];", "-\t\tbyte [] end =  new byte [ITER_SIZEOF];", "-\t\tOS.gtk_text_buffer_get_selection_bounds (bufferHandle, start, end);", "-\t\tOS.gtk_text_buffer_delete (bufferHandle, start, end);", "+\t\tbyte [] position = new byte [ITER_SIZEOF];", "+\t\tint insertMark = OS.gtk_text_buffer_get_insert (bufferHandle);", "+\t\tint selectionMark = OS.gtk_text_buffer_get_selection_bound (bufferHandle);", "+\t\tOS.gtk_text_buffer_get_iter_at_mark (bufferHandle, position, insertMark);", "+\t\tOS.gtk_text_buffer_move_mark (bufferHandle, selectionMark, position);", "+\t\tOS.gtk_text_buffer_move_mark (bufferHandle, insertMark, position);"]}], "num": 785}