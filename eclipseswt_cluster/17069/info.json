{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "415090426edc2817917bfcaeb1e33d31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3a950e8d845d5a175a94a016e7d54a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "41e8597e59bdccff1cedf7e7297d4a0e118dce12", "commitAfterChange": "e46f75d5244b5f652fb4edaf18d1e53fe0bd2ae0", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": "  LRESULT WM_CLEAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CLEAR (int wParam, int lParam)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tif ((bits & OS.ES_READONLY) != 0) return result;", "-\tint [] start = new int [1], end = new int [1];", "-\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "-\tif (start [0] == end [0]) return result;", "-\tString newText = verifyText (\"\", start [0], end [0], null);", "-\tif (newText == null) return LRESULT.ZERO;", "-\tif (newText.length () != 0) {", "-\t\tresult = new LRESULT (callWindowProc (OS.WM_CLEAR, 0, 0));\t", "-\t\tnewText = Display.withCrLf (newText);", "-\t\tTCHAR buffer = new TCHAR (getCodePage (), newText, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When an edit control with ES_MULTILINE", "-\t\t* style that does not have the WS_VSCROLL style is full (i.e.", "-\t\t* there is no space at the end to draw any more characters),", "-\t\t* EM_REPLACESEL sends a WM_CHAR with a backspace character", "-\t\t* to remove any further text that is added.  This is an", "-\t\t* implementation detail of the edit control that is unexpected", "-\t\t* and can cause endless recursion when EM_REPLACESEL is sent", "-\t\t* from a WM_CHAR handler.  The fix is to ignore calling the", "-\t\t* handler from WM_CHAR.", "-\t\t*/", "-\t\tignoreCharacter = true;", "-\t\tOS.SendMessage (handle, OS.EM_REPLACESEL, 0, buffer);", "-\t\tignoreCharacter = false;", "-\t}", "-\treturn result;", "+\treturn verify (OS.WM_CLEAR, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e9934dea53245dcc79e42868adba60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ced6309d83136191307f59b1d7ca67538883169e", "commitAfterChange": "ec4463e5809457fec0c4e8fa95d96c7900df01c5", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\tif (parent == null) {", "+\tsetBounds (x, y, width, height, flags, true);", "+}", "-\t\treturn;", "-\tforceResize ();", "-\tWINDOWPOS [] lpwp = parent.lpwp;", "-\tif (lpwp == null) {", "-\t\t/*", "-\t\t* This code is intentionally commented.  All widgets that", "-\t\t* are created by SWT have WS_CLIPSIBLINGS to ensure that", "-\t\t* application code does not draw outside of the control.", "-\t\t*/", "-//\t\tint count = parent.getChildrenCount ();", "-//\t\tif (count > 1) {", "-//\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-//\t\t\tif ((bits & OS.WS_CLIPSIBLINGS) == 0) flags |= OS.SWP_NOCOPYBITS;", "-//\t\t}", "-\t\tSetWindowPos (handle, 0, x, y, width, height, flags);", "-\t\treturn;", "-\t}", "-\tint index = 0;", "-\twhile (index < lpwp.length) {", "-\t\tif (lpwp [index] == null) break;", "-\t\tindex ++;", "-\t}", "-\tif (index == lpwp.length) {", "-\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\tparent.lpwp = lpwp = newLpwp;", "-\t}", "-\tWINDOWPOS wp = new WINDOWPOS ();", "-\twp.hwnd = handle;", "-\twp.x = x;", "-\twp.y = y;", "-\twp.cx = width;", "-\twp.cy = height;", "-\twp.flags = flags;", "-\tlpwp [index] = wp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f907cad11cdde4e78ccf61e1a84320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "41e8597e59bdccff1cedf7e7297d4a0e118dce12", "commitAfterChange": "e46f75d5244b5f652fb4edaf18d1e53fe0bd2ae0", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": "  LRESULT WM_CUT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CUT (int wParam, int lParam)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return result;", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tif ((bits & OS.ES_READONLY) != 0) return result;", "-\tint [] start = new int [1], end = new int [1];", "-\tOS.SendMessage (handle, OS.EM_GETSEL, start, end);", "-\tif (start [0] == end [0]) return result;", "-\tString newText = verifyText (\"\", start [0], end [0], null);", "-\tif (newText == null) return LRESULT.ZERO;", "-\tif (newText.length () != 0) {", "-\t\tresult = new LRESULT (callWindowProc (OS.WM_CUT, 0, 0));\t", "-\t\tnewText = Display.withCrLf (newText);", "-\t\tTCHAR buffer = new TCHAR (getCodePage (), newText, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When an edit control with ES_MULTILINE", "-\t\t* style that does not have the WS_VSCROLL style is full (i.e.", "-\t\t* there is no space at the end to draw any more characters),", "-\t\t* EM_REPLACESEL sends a WM_CHAR with a backspace character", "-\t\t* to remove any further text that is added.  This is an", "-\t\t* implementation detail of the edit control that is unexpected", "-\t\t* and can cause endless recursion when EM_REPLACESEL is sent", "-\t\t* from a WM_CHAR handler.  The fix is to ignore calling the", "-\t\t* handler from WM_CHAR.", "-\t\t*/", "-\t\tignoreCharacter = true;", "-\t\tOS.SendMessage (handle, OS.EM_REPLACESEL, 0, buffer);", "-\t\tignoreCharacter = false;", "-\t}", "-\treturn result;", "+\treturn verify (OS.WM_CUT, wParam, lParam);"]}], "num": 17069}