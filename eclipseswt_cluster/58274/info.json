{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "406d628aaaba6a96500164cf349c1a94", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d5f0f9abf877dbe165c865a53986c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0172f28c9bd1d86280195f05b1ac396625198010", "commitAfterChange": "2cf6415a3cc0d64ad334b0b840a57e551ae633e5", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public void setTopItem (TreeItem item)", "signatureAfterChange": " public void setTopItem (TreeItem item)", "diff": ["-\tboolean fixScroll = checkScroll (hItem);", "+\tint hTopItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_FIRSTVISIBLE, 0);", "+\tif (hItem == hTopItem) return;", "+\tboolean fixScroll = checkScroll (hItem), redraw = false;", "+\tint hParent = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PARENT, hItem);", "+\t} else {", "+\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\tif (redraw) OS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\tif (hParent == 0) OS.SendMessage (handle, OS.WM_HSCROLL, OS.SB_TOP, 0);", "+\t} else {", "+\t\tif (redraw) {", "+\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240206c5c63dd198e0a0a3a881e21cf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "28341f36b2b474d250bcbc993c3af8734c20f08e", "commitAfterChange": "c1a797a57543b30a9f6230fdbf16251b30301bfa", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  void setBackgroundTransparent (boolean transparent)", "signatureAfterChange": "  void setBackgroundTransparent (boolean transparent)", "diff": ["+\tif (EXPLORER_THEME) {", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\tint bits = transparent ? OS.LVS_EX_TRANSPARENTBKGND : 0;", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, OS.LVS_EX_TRANSPARENTBKGND, bits);", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When LVM_SETEXTENDEDLISTVIEWSTYLE is", "+\t\t\t* used with LVS_EX_TRANSPARENTBKGND and LVM_SETSELECTEDCOLUMN", "+\t\t\t* is used to select a column, Windows fills the column with", "+\t\t\t* the selection color, drawing on top of the background image", "+\t\t\t* and any other custom drawing.  The fix is to clear (or set)", "+\t\t\t* the selected column.", "+\t\t\t*/", "+\t\t\tif ((sortDirection & (SWT.UP | SWT.DOWN)) != 0) {", "+\t\t\t\tif (sortColumn != null && !sortColumn.isDisposed ()) {", "+\t\t\t\t\tint column = transparent ? -1 : indexOf (sortColumn);", "+\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, column, 0);", "+\t\t\t\t\tif (column != OS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, column, 0)) {", "+\t\t\t\t\t\t/* ", "+\t\t\t\t\t\t* Bug in Windows.  When LVM_SETSELECTEDCOLUMN is set, Windows", "+\t\t\t\t\t\t* does not redraw either the new or the previous selected column.", "+\t\t\t\t\t\t* The fix is to force a redraw.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tOS.InvalidateRect (handle, null, true);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}"]}], "num": 58274}