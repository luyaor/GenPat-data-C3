{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d92bf830a108a934ea676513d3ec19c9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda56166d3e1dc4b3e314b84c5e7336c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "b796db7a88d068fbce3590cf91dcc3e9c7f9c320", "commitAfterChange": "37c57c08e60a278244a46818f49a47ece9a0e524", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setTransfer(Transfer[] transferAgents)", "signatureAfterChange": " public void setTransfer(Transfer[] transferAgents)", "diff": ["+\t", "+\t", "+\t// Register the types as valid drop types in Cocoa.", "+\t// Accumulate all of the transfer types into a list.", "+\tArrayList typeStrings = new ArrayList();", "+\t", "+\tfor (int i = 0; i < this.transferAgents.length; i++) {", "+\t\tString[] types = transferAgents[i].getTypeNames();", "+\t\t", "+\t\tfor (int j = 0; j < types.length; j++) {", "+\t\t\ttypeStrings.add(types[j]);", "+\t\t}", "+\t}", "+\t", "+\t// Convert to an NSArray of NSStrings so we can register with the Control.", "+\tint typeStringCount = typeStrings.size();", "+\tNSMutableArray nsTypeStrings = NSMutableArray.arrayWithCapacity(typeStringCount);", "+\t", "+\tfor (int i = 0; i < typeStringCount; i++) {", "+\t\tnsTypeStrings.addObject(NSString.stringWith((String)typeStrings.get(i)));", "+\t}", "+\t", "+\tcontrol.view.registerForDraggedTypes(nsTypeStrings);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea02da92cc8ea422347f0540ffa20abd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "36e21f6aba5204fa5195a71658979a8b334d36bf", "commitAfterChange": "77b4feca7776d7a102f6b78d108d292827dbe92c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static PrinterData[] getPrinterList()", "signatureAfterChange": " public static PrinterData[] getPrinterList()", "diff": ["-\tNSArray printers = NSPrinter.printerNames();", "-\tint count = (int)/*64*/printers.count();", "-\tPrinterData[] result = new PrinterData[count];", "-\tfor (int i = 0; i < count; i++) {", "-\t\tNSString str = new NSString(printers.objectAtIndex(i));", "-\t\tresult[i] = new PrinterData(DRIVER, str.getString());", "+\tNSAutoreleasePool pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSArray printers = NSPrinter.printerNames();", "+\t\tint count = (int)/*64*/printers.count();", "+\t\tPrinterData[] result = new PrinterData[count];", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t\tNSString str = new NSString(printers.objectAtIndex(i));", "+\t\t\tresult[i] = new PrinterData(DRIVER, str.getString());", "+\t\t}", "+\t\treturn result;", "+\t} finally {", "+\t\tpool.release();", "-\treturn result;"]}], "num": 51643}