{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "800ffd64a62fccd09fb801f38b788b7c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1644a3d12aac9108cd217f617bbdf7f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic id internal_accessibilityActionDescription(NSString action, int childID)", "signatureAfterChange": " \t \tpublic id internal_accessibilityActionDescription(NSString action, int childID)", "diff": ["-\tpublic id internal_accessibilityActionDescription(NSString action, int childID) {", "-\t\t// TODO No action support for now.", "-\t\treturn NSString.string();", "+\t", "+\tpublic id internal_accessibilityActionDescription(NSString action, int childID) {", "+\t\tNSString returnValue = NSString.string();", "+\t\tString actionName = action.getString();", "+\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\tAccessibleActionEvent event = new AccessibleActionEvent(this);", "+\t\t\tfor (int i = 0; i < accessibleActionListeners.size(); i++) {", "+\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(i);", "+\t\t\t\tlistener.getActionCount(event);", "+\t\t\t}", "+\t\t\tint index = -1;", "+\t\t\tfor (int i = 0; i < event.count; i++) {", "+\t\t\t\tevent.index = i;", "+\t\t\t\tfor (int j = 0; j < accessibleActionListeners.size(); j++) {", "+\t\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(j);", "+\t\t\t\t\tlistener.getName(event);", "+\t\t\t\t}", "+\t\t\t\tif (actionName.equals(event.result)) {", "+\t\t\t\t\tindex = i;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (index != -1) {", "+\t\t\t\tevent.index = index;", "+\t\t\t\tevent.result = null;", "+\t\t\t\tfor (int i = 0; i < accessibleActionListeners.size(); i++) {", "+\t\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(i);", "+\t\t\t\t\tlistener.getDescription(event);", "+\t\t\t\t}", "+\t\t\t\tif (event.result != null) returnValue = NSString.stringWith(event.result);", "+\t\t\t}", "+\t\t} ", "+\t\treturn returnValue;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5633e04ffdd7c0da6094e5fcc916b06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic void internal_accessibilityPerformAction(NSString action, int childID)", "signatureAfterChange": "  \tpublic boolean internal_accessibilityPerformAction(NSString action, int childID)", "diff": ["-\tpublic void internal_accessibilityPerformAction(NSString action, int childID) {", "-\t\t// TODO Auto-generated method stub", "-\t\t// No action support for now.", "+\tpublic boolean internal_accessibilityPerformAction(NSString action, int childID) {", "+\t\tString actionName = action.getString();", "+\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\tAccessibleActionEvent event = new AccessibleActionEvent(this);", "+\t\t\tfor (int i = 0; i < accessibleActionListeners.size(); i++) {", "+\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(i);", "+\t\t\t\tlistener.getActionCount(event);", "+\t\t\t}", "+\t\t\tint index = -1;", "+\t\t\tfor (int i = 0; i < event.count; i++) {", "+\t\t\t\tevent.index = i;", "+\t\t\t\tfor (int j = 0; j < accessibleActionListeners.size(); j++) {", "+\t\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(j);", "+\t\t\t\t\tlistener.getName(event);", "+\t\t\t\t}", "+\t\t\t\tif (actionName.equals(event.result)) {", "+\t\t\t\t\tindex = i;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (index != -1) {", "+\t\t\t\tevent.index = index;", "+\t\t\t\tevent.result = null;", "+\t\t\t\tfor (int i = 0; i < accessibleActionListeners.size(); i++) {", "+\t\t\t\t\tAccessibleActionListener listener = (AccessibleActionListener) accessibleActionListeners.elementAt(i);", "+\t\t\t\t\tlistener.doAction(event);", "+\t\t\t\t}", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t} ", "+\t\treturn false;", "+\t}"]}], "num": 39415}