{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "372ddec6569159261cf591cedc9ef6ca", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f28a88c48d100d4778cc90a07d356d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2fca95531bec607016f651985162d859f9b84f54", "commitAfterChange": "2d25d74a86314e47877c765d3ae31925b91b5f4f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t", "+\tif (OS.IsPPC) {", "+\t\t/*", "+\t\t* Note: On WinCE PPC, only attempt to recognize the gesture for", "+\t\t* a context menu when the control contains a valid menu or there", "+\t\t* are listeners for the MenuDetect event.", "+\t\t*/", "+\t\tboolean hasMenu = menu != null && !menu.isDisposed ();", "+\t\tif (hasMenu || hooks (SWT.MenuDetect)) {", "+\t\t\tint x = (short) (lParam & 0xFFFF);", "+\t\t\tint y = (short) (lParam >> 16);", "+\t\t\tSHRGINFO shrg = new SHRGINFO ();", "+\t\t\tshrg.cbSize = SHRGINFO.sizeof;", "+\t\t\tshrg.hwndClient = handle;", "+\t\t\tshrg.ptDown_x = x;", "+\t\t\tshrg.ptDown_y = y; ", "+\t\t\tshrg.dwFlags = OS.SHRG_RETURNCMD;", "+\t\t\tint type = OS.SHRecognizeGesture (shrg);", "+\t\t\tif (type == OS.GN_CONTEXTMENU) showMenu (x, y);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0dec22aa32e779a7910ae87682ed8c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e6225be373505edd153410bd4ce1a84823dbc579", "commitAfterChange": "2be0f523c12be706f131f18494ce7c53c5d33e35", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tint result = callWindowProc (OS.WM_LBUTTONDOWN, wParam, lParam);\r", "+\tint result = callWindowProc (OS.WM_LBUTTONDOWN, wParam, lParam);\t\r", "+\tif (OS.IsPPC) {\r", "+\t\tif (menu != null && !menu.isDisposed ()) {\r", "+\t\t\tint x = (short) (lParam & 0xFFFF);\r", "+\t\t\tint y = (short) (lParam >> 16);\r", "+\t\t\tSHRGINFO shrg = new SHRGINFO ();\r", "+\t\t\tshrg.cbSize = SHRGINFO.sizeof;\r", "+\t\t\tshrg.hwndClient = handle;\r", "+\t\t\tshrg.ptDown_x = x;\r", "+\t\t\tshrg.ptDown_y = y; \r", "+\t\t\tshrg.dwFlags = OS.SHRG_RETURNCMD;\r", "+\t\t\t/* \r", "+\t\t\t* Feature in WinCE PPC.  WM_CONTEXTMENU is not supported on\r", "+\t\t\t* this platform.  The workaround is to activate the popup\r", "+\t\t\t* menu when the 'tap and hold' gesture is detected. \r", "+\t\t\t*/\r", "+\t\t\tint type = OS.SHRecognizeGesture (shrg);\r", "+\t\t\tif (type == OS.GN_CONTEXTMENU) {\r", "+\t\t\t\tmenu.setVisible (true);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "-\t\t\t* the mouse outside of the drag rectangle, DragDetect\r", "+\t\t\t* the mouse outside of the drag rectangle, DragDetect()\r"]}], "num": 35404}