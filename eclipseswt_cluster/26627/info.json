{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d597be20016c818f434feb67b8e671c7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5424efaf404de5702b6a22fdce897b91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "commitAfterChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void drawLine (int x1, int y1, int x2, int y2)", "signatureAfterChange": " public void drawLine (int x1, int y1, int x2, int y2)", "diff": ["-\tfocus(true);", "-\tinstallForeColor(data.foreground);", "-\tOS.PenSize((short) fLineWidth, (short) fLineWidth);", "-\tOS.MoveTo((short)x1, (short)y1);", "-\tOS.LineTo((short)x2, (short)y2);", "-\tunfocus(true);", "+\ttry {", "+\t\tif (focus(true, null)) {", "+\t\t\tinstallForeColor(data.foreground);", "+\t\t\tOS.PenSize((short) fLineWidth, (short) fLineWidth);", "+\t\t\tOS.MoveTo((short)x1, (short)y1);", "+\t\t\tOS.LineTo((short)x2, (short)y2);", "+\t\t}", "+\t} finally {", "+\t\tunfocus(true);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00a817e765a5622c7191789e78226c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "commitAfterChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int depth)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int depth)", "diff": ["-\tfocus(true);", "-\tint srcBits= OS.getBitMapForCopyBits(srcImage.pixmap);", "-\tint maskBits= OS.getBitMapForCopyBits(srcImage.mask);", "-\tint destBits= OS.GetPortBitMapForCopyBits(handle);", "-\tif (srcBits != 0 && maskBits != 0 && destBits != 0) {", "-\t\tMacRect ib= new MacRect(srcX, srcY, srcWidth, srcHeight);", "-\t\tfRect.set(destX, destY, destWidth, destHeight);", "-\t\tOS.RGBBackColor(0x00FFFFFF);", "-\t\tOS.RGBForeColor(0x00000000);", "-\t\tOS.CopyDeepMask(srcBits, maskBits, destBits, ib.getData(), ib.getData(), fRect.getData(), (short)0, 0);", "+\ttry {", "+\t\tif (focus(true, null)) {", "+\t\t\tint srcBits= OS.getBitMapForCopyBits(srcImage.pixmap);", "+\t\t\tint maskBits= OS.getBitMapForCopyBits(srcImage.mask);", "+\t\t\tint destBits= OS.GetPortBitMapForCopyBits(handle);", "+\t\t\tif (srcBits != 0 && maskBits != 0 && destBits != 0) {", "+\t\t\t\tMacRect ib= new MacRect(srcX, srcY, srcWidth, srcHeight);", "+\t\t\t\tfRect.set(destX, destY, destWidth, destHeight);", "+\t\t\t\tOS.RGBBackColor(0x00FFFFFF);", "+\t\t\t\tOS.RGBForeColor(0x00000000);", "+\t\t\t\tOS.CopyDeepMask(srcBits, maskBits, destBits, ib.getData(), ib.getData(), fRect.getData(), (short)0, 0);", "+\t\t\t}", "+\t\t}", "+\t} finally {", "+\t\tunfocus(true);", "-\tunfocus(true);"]}], "num": 26627}