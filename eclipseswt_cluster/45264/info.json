{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d84e56ae5f6b12e161e0c72b47be13ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9384bd70ed2f32beb5112a00187cfd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "1879f0110762a14d14725c1ff98b0c876188176a", "commitAfterChange": "ec0b807b1bde11bc567a2a3419e26587b448a196", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-\t//NEEDS WORK - Modify/Verify", "-\tint[] scrap = new int [1];", "-\tOS.GetCurrentScrap (scrap);", "-\tint [] size = new int [1];", "-\tif (OS.GetScrapFlavorSize (scrap [0], OS.kScrapFlavorTypeText, size) != OS.noErr || size [0] == 0) return;", "-\tbyte [] buffer = new byte[size [0]];", "-\tif (OS.GetScrapFlavorData (scrap [0], OS.kScrapFlavorTypeText, size, buffer) != OS.noErr) return;", "-\tif ((style & SWT.READ_ONLY) != 0) {", "-\t\tString string = new String (buffer); //??", "-\t\tint index = indexOf (string);", "-\t\tif (index != -1) select(index);", "-\t} else {", "-\t\tbyte [] newBuffer;", "-\t\tint encoding = OS.CFStringGetSystemEncoding ();", "-\t\tint[] ptrOld = new int [1];", "-\t\tif (OS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, ptrOld, null) == OS.noErr) {", "-\t\t\tshort [] s = new short [2];", "-\t\t\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "-\t\t\tCFRange range = new CFRange ();", "-\t\t\trange.location = 0;", "-\t\t\trange.length = s [0];", "-\t\t\tsize = new int [1];", "-\t\t\tOS.CFStringGetBytes (ptrOld [0], range, encoding, (byte)'?', true, null, 0, size);", "-\t\t\tbyte [] preBuffer = new byte [size [0]];", "-\t\t\tOS.CFStringGetBytes(ptrOld [0], range, encoding, (byte)'?', true, preBuffer, size [0], size);", "-\t\t\trange.location = s [1];", "-\t\t\trange.length = OS.CFStringGetLength (ptrOld [0]) - s [1];", "-\t\t\tsize = new int [1];", "-\t\t\tOS.CFStringGetBytes (ptrOld [0], range, encoding, (byte)'?', true, null, 0, size);", "-\t\t\tbyte [] postBuffer = new byte [size [0]];", "-\t\t\tOS.CFStringGetBytes(ptrOld [0], range, encoding, (byte)'?', true, postBuffer, size [0], size);", "-\t\t\tnewBuffer = new byte [preBuffer.length + buffer.length + postBuffer.length];", "-\t\t\tSystem.arraycopy(preBuffer, 0, newBuffer, 0, preBuffer.length);", "-\t\t\tSystem.arraycopy(buffer, 0, newBuffer, preBuffer.length, buffer.length);", "-\t\t\tSystem.arraycopy(postBuffer, 0, newBuffer, preBuffer.length + buffer.length, postBuffer.length);", "-\t\t\tOS.CFRelease (ptrOld [0]);", "-\t\t} else {", "-\t\t\tnewBuffer = buffer;", "-\t\t}", "-\t\tint ptr = OS.CFStringCreateWithBytes (OS.kCFAllocatorDefault, newBuffer, newBuffer.length, encoding, true);", "-\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "-\t\tOS.CFRelease (ptr);", "-\t\tsendEvent (SWT.Modify);", "+\tif ((style & SWT.READ_ONLY) != 0) return;", "+\tPoint selection = getSelection ();", "+\tint start = selection.x, end = selection.y;", "+\tString text = getText ();", "+\tString leftText = text.substring (0, start);", "+\tString rightText = text.substring (end, text.length ());", "+\tString newText = getClipboardText ();", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tnewText = verifyText (newText, start, end, null);", "+\t\tif (newText == null) return;", "+\tsetText (leftText + newText + rightText, false);", "+\tstart += newText.length ();", "+\tsetSelection (new Point (start, start));", "+\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1c5dc4c592630d43ace2c021aa6442", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " \t\t public void paste ()", "diff": ["- */", "+\t\t", "-\tif (menuHandle == 0) {", "-\t\tClipboard clipboard= new Clipboard(getDisplay());", "-\t\tTextTransfer textTransfer= TextTransfer.getInstance();", "-\t\tString clipBoard= (String)clipboard.getContents(textTransfer);", "-\t\tclipboard.dispose();", "-\t\t_replaceTextSelection(clipBoard);", "+\tint[] scrap = new int [1];", "+\tOS.GetCurrentScrap (scrap);", "+\tint [] size = new int [1];", "+\tif (OS.GetScrapFlavorSize (scrap [0], OS.kScrapFlavorTypeText, size) != OS.noErr || size [0] == 0) return;", "+\tbyte [] buffer = new byte[size [0]];", "+\tif (OS.GetScrapFlavorData (scrap [0], OS.kScrapFlavorTypeText, size, buffer) != OS.noErr) return;", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\tString string = new String (buffer); //??", "+\t\tint index = indexOf (string);", "+\t\tif (index != -1) select(index);", "+\t} else {", "+\t\tbyte [] newBuffer;", "+\t\tint encoding = OS.CFStringGetSystemEncoding ();", "+\t\tint[] ptrOld = new int [1];", "+\t\tif (OS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, ptrOld, null) == OS.noErr) {", "+\t\t\tshort [] s = new short [2];", "+\t\t\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "+\t\t\tCFRange range = new CFRange ();", "+\t\t\trange.location = 0;", "+\t\t\trange.length = s [0];", "+\t\t\tsize = new int [1];", "+\t\t\tOS.CFStringGetBytes (ptrOld [0], range, encoding, (byte)'?', true, null, 0, size);", "+\t\t\tbyte [] preBuffer = new byte [size [0]];", "+\t\t\tOS.CFStringGetBytes(ptrOld [0], range, encoding, (byte)'?', true, preBuffer, size [0], size);", "+\t\t\trange.location = s [1];", "+\t\t\trange.length = OS.CFStringGetLength (ptrOld [0]) - s [1];", "+\t\t\tsize = new int [1];", "+\t\t\tOS.CFStringGetBytes (ptrOld [0], range, encoding, (byte)'?', true, null, 0, size);", "+\t\t\tbyte [] postBuffer = new byte [size [0]];", "+\t\t\tOS.CFStringGetBytes(ptrOld [0], range, encoding, (byte)'?', true, postBuffer, size [0], size);", "+\t\t\tnewBuffer = new byte [preBuffer.length + buffer.length + postBuffer.length];", "+\t\t\tSystem.arraycopy(preBuffer, 0, newBuffer, 0, preBuffer.length);", "+\t\t\tSystem.arraycopy(buffer, 0, newBuffer, preBuffer.length, buffer.length);", "+\t\t\tSystem.arraycopy(postBuffer, 0, newBuffer, preBuffer.length + buffer.length, postBuffer.length);", "+\t\t\tOS.CFRelease (ptrOld [0]);", "+\t\t} else {", "+\t\t\tnewBuffer = buffer;", "+\t\t}", "+\t\tint ptr = OS.CFStringCreateWithBytes (OS.kCFAllocatorDefault, newBuffer, newBuffer.length, encoding, true);", "+\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "+\t\tOS.CFRelease (ptr);"]}], "num": 45264}