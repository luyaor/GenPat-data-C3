{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d55c78f280e85ebf5d3f5f735021c122", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6899c918ab6ebf90c4d758dc6e8150", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tint sendKeyEvent (int type, MacEvent mEvent, Event event)", "signatureAfterChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventRawKeyDown (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventRawKeyDown (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;", "+\tint [] keyCode = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\tif (keyCode [0] == 36) { //CR", "+\t\tsendEvent (SWT.DefaultSelection);", "+\t\treturn OS.noErr;", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}", "-\t", "-\tint sendKeyEvent (int type, MacEvent mEvent, Event event) {", "-\t\t", "-\t\t/* AW: other platforms call super", "-\t\tLRESULT result = super.WM_CHAR (wParam, lParam);", "-\t\tif (result != null) return result;", "-\t\t*/", "-\t\t", "-//\t\tif (translateTraversal(mEvent))", "-//\t\t\treturn 0;", "-\t\t\t", "-\t\tint kind= mEvent.getKind();", "-\t\tint mcc= mEvent.getMacCharCodes();", "-\t\tint code= mEvent.getKeyCode();", "-", "-\t\t// return key -> DefaultSelection", "-\t\tif (mcc == SWT.CR) {", "-\t\t\tif (kind == OS.kEventRawKeyDown)", "-\t\t\t\tpostEvent (SWT.DefaultSelection);", "-\t\t\treturn OS.kNoErr;", "-\t\t}", "-\t\t\t\t", "-\t\tif ((mEvent.getModifiers() & OS.cmdKey) != 0) {", "-\t\t\tswitch (code) {", "-\t\t\tcase 0:\t// select all", "-\t\t\t\tif (kind == OS.kEventRawKeyDown)", "-\t\t\t\t\t_selectAll();", "-\t\t\t\treturn OS.kNoErr;", "-\t\t\tcase 7:", "-\t\t\t\tif (kind == OS.kEventRawKeyDown)", "-\t\t\t\t\tcut();", "-\t\t\t\treturn OS.kNoErr;", "-\t\t\tcase 8:", "-\t\t\t\tif (kind == OS.kEventRawKeyDown)", "-\t\t\t\t\tcopy();", "-\t\t\t\treturn OS.kNoErr;", "-\t\t\tcase 9:", "-\t\t\t\tif (kind == OS.kEventRawKeyDown || kind == OS.kEventRawKeyRepeat)", "-\t\t\t\t\tpaste();", "-\t\t\t\treturn OS.kNoErr;", "-\t\t\tdefault:", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-", "-\t\tString oldText= getText();", "-", "-\t\tint status= OS.CallNextEventHandler(mEvent.getNextHandler(), mEvent.getEventRef());", "-\t\t", "-\t\tif (kind == OS.kEventRawKeyDown) {", "-\t\t\tString newText= getText();", "-\t\t\tif (!oldText.equals(newText))", "-\t\t\t\tsendEvent (SWT.Modify);", "-\t\t}", "-\t\t", "-\t\treturn status;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c78ff5157f237ecb688686ddaafac10f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 47, "signatureBeforeChange": " \t \tint sendKeyEvent(int type, int nextHandler, int eRefHandle)", "signatureAfterChange": " \t \tint sendKeyEvent (int type, MacEvent mEvent, Event event)", "diff": ["+\t", "+\tint sendKeyEvent (int type, MacEvent mEvent, Event event) {", "+\t\t/* AW: other platforms call super", "+\t\tLRESULT result = super.WM_CHAR (wParam, lParam);", "+\t\tif (result != null) return result;", "+\t\t*/", "+\t\t", "+//\t\tif (translateTraversal(mEvent))", "+//\t\t\treturn 0;", "-\t", "-\tint sendKeyEvent(int type, int nextHandler, int eRefHandle) {", "-", "-\t\tMacEvent mEvent= new MacEvent(eRefHandle);", "-\t\tif ((kind == OS.kEventRawKeyDown || kind == OS.kEventRawKeyRepeat) && (mEvent.getModifiers() & OS.cmdKey) != 0) {", "-\t\t\tint code= mEvent.getKeyCode();", "-\t\t\tswitch (code) {", "-\t\t\tcase 0:", "-\t\t\t\tOS.TXNSetSelection(fTX, OS.kTXNStartOffset, OS.kTXNEndOffset);", "-\t\t\t\tbreak;", "-\t\t\tcase 7:", "-\t\t\t\tcut();", "-\t\t\t\tbreak;", "-\t\t\tcase 8:", "-\t\t\t\tcopy();", "-\t\t\t\tbreak;", "-\t\t\tcase 9:", "-\t\t\t\tpaste();", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\t//System.out.println(\"key code: \" + code);", "-\t\t\t\tbreak;", "-\t\t\t}", "+\t\tint mcc= mEvent.getMacCharCodes();", "+\t\tint code= mEvent.getKeyCode();", "+", "+\t\t// return key -> DefaultSelection", "+\t\tif (mcc == SWT.CR) {", "+\t\t\tif (kind == OS.kEventRawKeyDown)", "+\t\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\t\t", "+\t\tif ((mEvent.getModifiers() & OS.cmdKey) != 0) {", "+\t\t\tswitch (code) {", "+\t\t\tcase 0:\t// select all", "+\t\t\t\tif (kind == OS.kEventRawKeyDown)", "+\t\t\t\t\t_selectAll();", "+\t\t\t\treturn OS.kNoErr;", "+\t\t\tcase 7:", "+\t\t\t\tif (kind == OS.kEventRawKeyDown)", "+\t\t\t\t\tcut();", "+\t\t\t\treturn OS.kNoErr;", "+\t\t\tcase 8:", "+\t\t\t\tif (kind == OS.kEventRawKeyDown)", "+\t\t\t\t\tcopy();", "+\t\t\t\treturn OS.kNoErr;", "+\t\t\tcase 9:", "+\t\t\t\tif (kind == OS.kEventRawKeyDown || kind == OS.kEventRawKeyRepeat)", "+\t\t\t\t\tpaste();", "+\t\t\t\treturn OS.kNoErr;", "+\t\t\tdefault:", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "-\t\tint status= OS.CallNextEventHandler(nextHandler, eRefHandle);", "-\t\tsendEvent (SWT.Modify);", "+\t\tString oldText= getText();", "+", "+\t\tint status= OS.CallNextEventHandler(mEvent.getNextHandler(), mEvent.getEventRef());", "+\t\t", "+\t\tif (kind == OS.kEventRawKeyDown) {", "+\t\t\tString newText= getText();", "+\t\t\tif (!oldText.equals(newText))", "+\t\t\t\tsendEvent (SWT.Modify);", "+\t\t}", "+\t\t"]}], "num": 47367}