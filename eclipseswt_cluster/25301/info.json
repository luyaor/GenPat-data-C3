{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21ea83e4d75253dda6eca62af498fd2c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b98cfffc8a142aea799a5cd750d4f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$I()", "signatureAfterChange": "  public void test_setSelection$I()", "diff": ["-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"MULTI: setSelection(new int [0]) getFocusIndex()\", list.getFocusIndex(), -1);", "-\t}", "-\tassertEquals(\"MULTI: setSelection(new int [] {number}) getFocusIndex()\", list.getFocusIndex(), 2);", "-\tassertEquals(\"MULTI: setSelection(new int [] {1, 0}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tassertEquals(\"MULTI: setSelection(new int [] {-1, number}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"MULTI: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "-\t}", "+// bug - wierd case - should probably fix:\tassertEquals(\"MULTI: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tlist.setSelection(new int [] {0, 1, 2, 3, 5});", "+\tassertEquals(\"MULTI: setSelection(new int [] {0, 1, 2, 3, 5})\", list.getSelectionIndices(), new int [] {0, 1, 2, 3, 5});", "+", "-\tassertEquals(\"MULTI: setSelection(indices) getFocusIndex()\", list.getFocusIndex(), indices[0]);", "-\tassertEquals(\"MULTI: setSelection(new int [] {number, number}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"MULTI: setSelection(new int [] {0, number, 1}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"MULTI: setSelection(new int [] {number - 1, 0, number - 2}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\t", "-\tif (fCheckSWTPolicy) {", "-\t\tassertEquals(\"SINGLE: setSelection(new int [0]) getFocusIndex()\", list.getFocusIndex(), -1);", "-\t}", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number}) getFocusIndex()\", list.getFocusIndex(), 2);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0})\", list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0}) getFocusIndex()\", list.getFocusIndex(), 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {1, 0})\", list.getSelectionIndices(), new int[] {});", "+", "+\tlist.setSelection(new int [] {0, 1, 2, 3, 5});", "+\tassertEquals(\"SINGLE: setSelection(new int [] {0, 1, 2, 3, 5})\", list.getSelectionIndices(), new int [] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, number}) getFocusIndex()\", list.getFocusIndex(), 1);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0})\", list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {-1, 0})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(indices)\", list.getSelectionIndices(), new int[] {indices[0]});", "-\tassertEquals(\"SINGLE: setSelection(indices) getFocusIndex()\", list.getFocusIndex(), indices[0]);", "+\tassertEquals(\"SINGLE: setSelection(indices)\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number, number}) getFocusIndex()\", list.getFocusIndex(), 0);", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, number - 1})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1})\", list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1}) getFocusIndex()\", list.getFocusIndex(), 0);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {0, number, 1})\", list.getSelectionIndices(), new int[] {});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2})\", list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2}) getFocusIndex()\", list.getFocusIndex(), number - 1);", "+\tassertEquals(\"SINGLE: setSelection(new int [] {number - 1, 0, number - 2})\", list.getSelectionIndices(), new int[] {});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdea1ed8da5de2e70c7335288e19cb40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test_setSelectionII()", "signatureAfterChange": "  public void test_setSelectionII()", "diff": ["-\tlist.setSelection(1, 2);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getFocusIndex(), 2);", "-\t", "-\tlist.setSelection(-3, -2);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getFocusIndex(), 2);", "-\t", "-\tlist.setSelection(0, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(list.getFocusIndex(), 1);", "-\t", "-\tlist.setSelection(-2, -1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(list.getFocusIndex(), 1);", "-\t", "-\tlist.setSelection(number - 2, number - 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\t", "-\tlist.setSelection(number - 1, number);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\t", "-\tlist.setSelection(-1, 0);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "-\t", "-\tlist.setSelection(number, number + 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "-\t", "+\tlist.setSelection(1, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {1});", "+\tassertEquals(list.getFocusIndex(), 1);", "+\t", "+\tlist.setSelection(4, 4);", "+\tassertEquals(list.getSelectionIndices(), new int[] {4});", "+\tassertEquals(list.getFocusIndex(), 4);", "+\t", "+\tlist.setSelection(number - 1, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\t", "+\tlist.setSelection(number, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-3, -2);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(0, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-2, -1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number - 2, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number - 1, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-1, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number, number + 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-", "-\t\tlist.setSelection(-2, -1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(-1, 0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(0, 1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(1, 0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(0, -1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t}", "+\tassertEquals(list.getSelectionIndices(), new int[] {});"]}], "num": 25301}