{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f35eda7cd51c7caca2b15d9100a1dda", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f50ba59e94960f8de3132e2123b1f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "7074e282007805214aa575b0c0fa415c74562449", "commitAfterChange": "3668a569289e0bc0602d4db0906976c362c39e91", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r int widgetStyle ()", "signatureAfterChange": "\r \r int widgetStyle ()", "diff": ["-\t* Feature on WinCE: calling createWindowEx with the style OVERLAPPED\r", "+\t* Feature on WinCE:  calling createWindowEx with the style OVERLAPPED\r", "-\t* (not owned by). The workaround is to set the style WS_POPUP for shells\r", "+\t* (not owned by).  The workaround is to set the style WS_POPUP for shells\r", "+\t* Feature on WinCE PPC 2000:  extended style WS_EX_CAPTIONOKBTN cannot be\r", "+\t* set with style WS_CAPTION.  The workaround is to set the style WS_POPUP\r", "+\t* even for shells with no parent.\r", "-\tif (OS.IsWinCE) {\r", "-\t\tif (parent != null) return bits | OS.WS_POPUP;\r", "-\t}\r", "-\treturn bits | OS.WS_OVERLAPPED | OS.WS_CAPTION;\r", "+\treturn bits | (OS.IsWinCE ? OS.WS_POPUP : OS.WS_OVERLAPPED | OS.WS_CAPTION);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "031acb170697f35f297ed7afd11a9194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Composite.java", "commitBeforeChange": "afaf81222ae86fdad98dc69b77503d3500208932", "commitAfterChange": "ed0e4edf961ef69c3d041f3856d4c3b59da8a8a0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test_setTabList$Lorg_eclipse_swt_widgets_Control()", "signatureAfterChange": "  public void test_setTabList$Lorg_eclipse_swt_widgets_Control()", "diff": ["+\tassertEquals(tablist, composite.getTabList());", "-\t", "-\ttry {", "-\t\tcomposite.setTabList(null);", "-\t\tfail(\"No exception thrown for tabList == null\");", "-\t}", "-\tcatch (IllegalArgumentException e) {", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff103c9f4f557bf686f6686625435d31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OlePropertyChangeSink.java", "commitBeforeChange": "1bc87f9529a9cf0c5a941f1c4974f0c50b230794", "commitAfterChange": "4af3610ae71dba4ab2327b0936b55351a6105a24", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private int OnRequestEdit(int dispID)", "signatureAfterChange": " private int OnRequestEdit(int dispID)", "diff": ["-", "-\t", "-\t", "-\ttry {", "-\t\tnotifyListener(dispID,event);", "-\t} catch (Throwable e) {", "-\t}", "-\t", "-\tif (event.doit) return COM.S_OK;", "-", "-\treturn COM.S_FALSE;", "+\tnotifyListener(dispID,event);", "+\treturn (event.doit) ? COM.S_OK : COM.S_FALSE;"]}], "num": 37131}