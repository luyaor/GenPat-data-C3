{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01a204ea4bd21e2fc35d633e9db768d8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec46c1a0a8795a1d90585da1b9a2d1a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "b8a944cc9407d23f9c29193277e252cb95d44e71", "commitAfterChange": "901c0a3537fb34da4f51314fe0a99ffb6ddf7dbf", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r void mouseMove(Event event)", "signatureAfterChange": "\r void mouseMove(Event event)", "diff": ["-\tint swatchExtent = getColorSwatchExtent();\r", "-\tColor colorGrid[][] = getColorGrid();\r", "-\tColor color = colorGrid[event.x / swatchExtent][event.y / swatchExtent];\r", "-\r", "-\tgetSampleCanvas().setBackground(color);\r", "-\tgetSampleText().setBackground(color);\r", "+\tint swatchExtent = colorSwatchExtent;\r", "+\t// adjust for events received from moving over the Canvas' border\r", "+\tint xgrid = Math.min(colorGrid.length - 1, event.x / swatchExtent);\r", "+\tint ygrid = Math.min(colorGrid[0].length - 1, event.y / swatchExtent);\r", "+\tColor color = colorGrid[xgrid][ygrid];\r", "+\tsampleCanvas.setBackground(color);\r", "+\tsampleLabel.setBackground(color);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1f2b8e0782de2953cf878ac77d8ce0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "06f14013f0c93419a27372bcab1d5b690ef168e5", "commitAfterChange": "18a86527c9227c5847d129de418ef2eef78fd73e", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 306, "signatureBeforeChange": " boolean showLocation(Rectangle rect)", "signatureAfterChange": " boolean showLocation(Rectangle rect)", "diff": ["-\t\t\tint scrollWidth = Math.min(horizontalScrollOffset, clientAreaWidth / 4);", "-\t\t\tscrolled = scrollHorizontal(-scrollWidth, true);", "+\t\t\tint scrollWidth = Math.max(leftMargin - rect.x, clientAreaWidth / 4);", "+\t\t\tint maxScroll = horizontalScrollOffset;", "+\t\t\tscrolled = scrollHorizontal(-Math.min(maxScroll, scrollWidth), true);", "-\t\t\tint scrollWidth = Math.min(renderer.getWidth() - horizontalScrollOffset, clientAreaWidth / 4);", "-\t\t\tscrolled = scrollHorizontal(scrollWidth, true);", "+\t\t\tint scrollWidth =  Math.max(rect.x + rect.width - clientAreaWidth,clientAreaWidth / 4);", "+\t\t\tint maxScroll = renderer.getWidth() - horizontalScrollOffset - this.clientAreaWidth;", "+\t\t\tscrolled = scrollHorizontal(Math.min(maxScroll, scrollWidth), true);"]}], "num": 61747}