{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa3fe956bd0b7033b8eb660dcb025580", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a779091352d97a45f647e40ec6f9061d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 57, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\tRect r= new Rect();", "-\tOS.SetRect(r, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\tif (width <= 0 || height <= 0) {", "-\t\tOS.HIViewSetNeedsDisplay(widgetHandle, true);", "-\t\treturn;", "-\t\t//OS.GetControlBounds(widgetHandle, r.getData());", "+\t", "+\tif (false) {", "+\t\tint rgn= OS.NewRgn();", "+\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\t\tOS.DisposeRgn(rgn);", "+\t} else {", "+\t\tMacRect br= new MacRect();", "+\t\tOS.GetControlBounds(widgetHandle, br.getData());", "+\t    if (!br.isEmpty()) {", "+\t        x+= br.getX();", "+\t        y+= br.getY();", "+\t        if (width == 0)", "+\t        \twidth= br.getWidth();", "+\t        else", "+\t\t\t\twidth+= 1; // AW strange workaround for Caret", "+\t        if (height == 0)", "+\t\t\t\theight= br.getHeight();", "+\t                ", "+\t        int rgn= OS.NewRgn();", "+\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+\t                ", "+\t        int region= OS.NewRgn();", "+\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "+\t        ", "+\t            OS.SectRgn(region, rgn, region);", "+\t        ", "+\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "+\t        }", "+\t        ", "+\t        OS.DisposeRgn(rgn);", "+\t        OS.DisposeRgn(region);", "+\t    }", "-\tint rgn= OS.NewRgn();", "-\tOS.RectRgn(rgn, r);", "-\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\tOS.DisposeRgn(rgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0df8197956fee27ff97c722476bcfe0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "21db765cd71e211ed7a422832ea159585ff971e3", "commitAfterChange": "cfc1e42b8ee7293ce68f0fd9dcd0e1b2cb8bb08a", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tRect rect = new Rect();", "-\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t\tOS.RectRgn(rgn, rect);", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tRect br= new Rect();", "-\t\tOS.GetControlBounds(widgetHandle, br);", "-\t    if (!OS.EmptyRect(br)) {", "-\t        x+= br.left;", "-\t        y+= br.top;", "-\t        if (width == 0)", "-\t        \twidth= br.right - br.left;", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.bottom - br.top;", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t      \tRect rect = new Rect();", "-\t\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x + width), (short)(y + height));", "-\t        OS.RectRgn(rgn, rect);", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.noErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "+\tRect r= new Rect();", "+\tOS.SetRect(r, (short)x, (short)y, (short)(x + width), (short)(y + height));", "+\tif (width <= 0 || height <= 0) {", "+\t\tOS.HIViewSetNeedsDisplay(widgetHandle, true);", "+\t\treturn;", "+\t\t//OS.GetControlBounds(widgetHandle, r.getData());", "+\tint rgn= OS.NewRgn();", "+\tOS.RectRgn(rgn, r);", "+\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "+\tOS.DisposeRgn(rgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09db9c443654631edda7b607b21d6bbb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "4011a75a1162d702acf821f83a40ad60e2f9460f", "commitAfterChange": "c6f4735c1aeae2db927268662b09b6f63b467ab9", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "diff": ["-\tx+= br.getX();", "-\ty+= br.getY();", "-\tif (width == 0)", "-\t\twidth= br.getWidth();", "-\telse", "-\t\twidth+= 1; // AW workaround for Caret", "-\tif (height == 0)", "-\t\theight= br.getHeight();", "-\t\t", "-\tint rgn= OS.NewRgn();", "-\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t\t", "-\tint region= OS.NewRgn();", "-\tMacUtil.getVisibleRegion(widgetHandle, region, all);", "-\t", "-\tOS.SectRgn(region, rgn, region);", "-\t", "-\tOS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t", "-\tOS.DisposeRgn(rgn);", "-\tOS.DisposeRgn(region);", "+        if (!br.isEmpty()) {", "+            x+= br.getX();", "+            y+= br.getY();", "+            if (width == 0)", "+                    width= br.getWidth();", "+            else", "+                    width+= 1; // AW workaround for Caret", "+            if (height == 0)", "+                    height= br.getHeight();", "+                    ", "+            int rgn= OS.NewRgn();", "+            OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "+                    ", "+            int region= OS.NewRgn();", "+            if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "+            ", "+                OS.SectRgn(region, rgn, region);", "+            ", "+                OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "+            }", "+            ", "+            OS.DisposeRgn(rgn);", "+            OS.DisposeRgn(region);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8197bafd1dd73a8351efd01add461f8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "271ed1c844ca50c299243a268076fdd6a6892082", "commitAfterChange": "4fa97eee183ed5f6552c0fb587b02abe1b40444d", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 74, "signatureBeforeChange": "\r private void updateArrowBar()", "signatureAfterChange": "\r private void updateArrowBar()", "diff": ["-\tint imageHeight = getTabHeight() - CTabItem.TOP_MARGIN - CTabItem.BOTTOM_MARGIN - 6;\r", "-\tif (imageHeight < 4) return;\r", "+\tint imageHeight = tabHeight - 2;\r", "+\tif (imageHeight < 10) return;\r", "-\tImageData imageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\tImageData imageData = new ImageData(7, imageHeight, 4, palette);\r", "-\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.fillRectangle(0, 0, 7, imageHeight);\r", "-\tint indent = 0;\r", "-\tint midpoint = (imageHeight - 2*indent)/2;\r", "-\tint height = 2 * midpoint;\r", "-\tint[] pointArr = new int[] {indent, indent + midpoint, \r", "-\t\t                        indent + height, indent, \r", "-\t\t                        indent + height,  indent + height};\r", "+\t//draw a 10x5 '<' centered vertically in image\r", "+\tint h = (imageHeight / 2 )* 2;\r", "+\tint midpoint = h / 2;\r", "+\tint[] pointArr = new int[] {6, midpoint - 5,\r", "+                                         1, midpoint, \r", "+\t\t                                 6,  midpoint + 5,};\r", "-\timageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\timageData = new ImageData(7, imageHeight, 4, palette);\r", "-\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.fillRectangle(0, 0, 7, imageHeight);\r", "-\tpointArr = new int[] {indent, indent, \r", "-\t\t                  indent, indent + height,\r", "-\t\t                  indent + height, indent + midpoint};\r", "+\t//draw a 10x5 '>' centered vertically in image\r", "+\tpointArr = new int[] {1, midpoint - 5, \r", "+                                  6, midpoint,\r", "+\t\t                          1, midpoint + 5,};\r"]}], "num": 30946}