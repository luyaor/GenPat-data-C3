{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "64b8dde0d515f18f8d916ffa26309ccc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf64ea9044ebb11d4fd8238a0737ff14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "eac38fbada000ebeb5e167aed73167c11f050417", "commitAfterChange": "9be2a371d8dec2bc20108dfdd65e7097431ac646", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tint get_accSelection(int pvarChildren)", "signatureAfterChange": " \tint get_accSelection(int pvarChildren)", "diff": ["-\t\t\t//TODO - use VARIANT structure", "-\t\t\tshort[] pvt = new short[1];", "-\t\t\tCOM.MoveMemory(pvt, pvarChildren, 2);", "-\t\t\tif (pvt[0] == COM.VT_I4) {", "-\t\t\t\tint[] pChild = new int[1];", "-\t\t\t\tCOM.MoveMemory(pChild, pvarChildren + 8, 4);", "-\t\t\t\tosChild = osToChildID(pChild[0]);", "-\t\t\t} else if (pvt[0] == COM.VT_UNKNOWN) {", "+\t\t\tVARIANT v = getVARIANT(pvarChildren);", "+\t\t\tif (v.vt == COM.VT_I4) {", "+\t\t\t\tosChild = osToChildID(v.lVal);", "+\t\t\t} else if (v.vt == COM.VT_UNKNOWN) {", "+\t\t\t/* Should also handle (v.vt == COM.VT_DISPATCH) */", "-\t\t\tCOM.MoveMemory(pvarChildren, new short[] { COM.VT_DISPATCH }, 2);", "-\t\t\tCOM.MoveMemory(pvarChildren + 8, new int /*long*/[] { accessible.objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tsetPtrVARIANT(pvarChildren, COM.VT_DISPATCH, accessible.objIAccessible.getAddress());", "-\t\t\tCOM.MoveMemory(pvarChildren, new short[] { COM.VT_EMPTY }, 2);", "+\t\t\tsetVARIANT(pvarChildren, COM.VT_EMPTY, 0);", "-\t\t\tCOM.MoveMemory(pvarChildren, new short[] { COM.VT_UNKNOWN }, 2);", "-\t\t\tCOM.MoveMemory(pvarChildren + 8, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tsetPtrVARIANT(pvarChildren, COM.VT_UNKNOWN, objIAccessible.getAddress());", "-\t\t\tCOM.MoveMemory(pvarChildren, new short[] { COM.VT_DISPATCH }, 2);", "-\t\t\tCOM.MoveMemory(pvarChildren + 8, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tsetPtrVARIANT(pvarChildren, COM.VT_DISPATCH, objIAccessible.getAddress());", "-\t\tCOM.MoveMemory(pvarChildren, new short[] { COM.VT_I4 }, 2);", "-\t\tCOM.MoveMemory(pvarChildren + 8, new int[] { childIDToOs(childID) }, 4);", "+\t\tsetVARIANT(pvarChildren, COM.VT_I4, childIDToOs(childID));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1fde64b6a085722667c508c8760518d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "eac38fbada000ebeb5e167aed73167c11f050417", "commitAfterChange": "9be2a371d8dec2bc20108dfdd65e7097431ac646", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tint get_accFocus(int pvarChild)", "signatureAfterChange": " \tint get_accFocus(int pvarChild)", "diff": ["-\t\t\t//TODO - use VARIANT structure", "-\t\t\tshort[] pvt = new short[1];", "-\t\t\tCOM.MoveMemory(pvt, pvarChild, 2);", "-\t\t\tif (pvt[0] == COM.VT_I4) {", "-\t\t\t\tint[] pChild = new int[1];", "-\t\t\t\tCOM.MoveMemory(pChild, pvarChild + 8, 4);", "-\t\t\t\tosChild = osToChildID(pChild[0]);", "-\t\t\t}", "+\t\t\tVARIANT v = getVARIANT(pvarChild);", "+\t\t\tif (v.vt == COM.VT_I4) osChild = osToChildID(v.lVal);", "-\t\t\tCOM.MoveMemory(pvarChild, new short[] { COM.VT_DISPATCH }, 2);", "-\t\t\tCOM.MoveMemory(pvarChild + 8, new int /*long*/[] { accessible.objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tsetPtrVARIANT(pvarChild, COM.VT_DISPATCH, accessible.objIAccessible.getAddress());", "-\t\t\tCOM.MoveMemory(pvarChild, new short[] { COM.VT_EMPTY }, 2);", "+\t\t\tsetVARIANT(pvarChild, COM.VT_EMPTY, 0);", "-\t\t\tCOM.MoveMemory(pvarChild, new short[] { COM.VT_DISPATCH }, 2);", "-\t\t\tCOM.MoveMemory(pvarChild + 8, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tsetPtrVARIANT(pvarChild, COM.VT_DISPATCH, objIAccessible.getAddress());", "-\t\tCOM.MoveMemory(pvarChild, new short[] { COM.VT_I4 }, 2);", "-\t\tCOM.MoveMemory(pvarChild + 8, new int[] { childIDToOs(childID) }, 4);", "+\t\tsetVARIANT(pvarChild, COM.VT_I4, childIDToOs(childID));"]}], "num": 61393}