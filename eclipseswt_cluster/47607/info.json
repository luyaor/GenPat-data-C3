{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21664e6c28af2a3cebb3207637f08ab8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb1edca1f26b0217e38cf7fc6a7abb5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "6aab67d54eb68acff9eafd01183bc85c58b3b6ea", "commitAfterChange": "d8d3e8f612b1662e51aaeb1aba1b797cad6504c1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\tboolean isAccent = false;", "-\tswitch ((int)/*64*/msg.wParam) {", "-\t\tcase OS.VK_SHIFT:", "-\t\tcase OS.VK_MENU:", "-\t\tcase OS.VK_CONTROL:", "-\t\tcase OS.VK_CAPITAL:", "-\t\tcase OS.VK_NUMLOCK:", "-\t\tcase OS.VK_SCROLL:", "-\t\t\tbreak;", "-\t\tdefault: {", "-\t\t\t/* ", "-\t\t\t* Bug in Windows. The high bit in the result of MapVirtualKey() on", "-\t\t\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "-\t\t\t* They should both be bit 32.  The fix is to test the right bit.", "-\t\t\t*/", "-\t\t\tint mapKey = OS.MapVirtualKey ((int)/*64*/msg.wParam, 2);", "-\t\t\tif (mapKey != 0) {", "-\t\t\t\tisAccent = (mapKey & (OS.IsWinNT ? 0x80000000 : 0x8000)) != 0;", "-\t\t\t\tif (!isAccent) {", "-\t\t\t\t\tfor (int i=0; i<ACCENTS.length; i++) {", "-\t\t\t\t\t\tint value = OS.VkKeyScan (ACCENTS [i]);", "-\t\t\t\t\t\tif (value != -1 && (value & 0xFF) == msg.wParam) {", "-\t\t\t\t\t\t\tint state = value >> 8;", "-\t\t\t\t\t\t\tif ((OS.GetKeyState (OS.VK_SHIFT) < 0) == ((state & 0x1) != 0) &&", "-\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_CONTROL) < 0) == ((state & 0x2) != 0) &&", "-\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_MENU) < 0) == ((state & 0x4) != 0)) {", "-\t\t\t\t\t\t\t\t\tif ((state & 0x7) != 0) isAccent = true;", "-\t\t\t\t\t\t\t\t\tbreak;", "+\tswitch (msg.message) {", "+\t\tcase OS.WM_KEYDOWN:", "+\t\tcase OS.WM_KEYUP: {", "+\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\tboolean isAccent = false;", "+\t\t\t\tswitch ((int)/*64*/msg.wParam) {", "+\t\t\t\t\tcase OS.VK_SHIFT:", "+\t\t\t\t\tcase OS.VK_MENU:", "+\t\t\t\t\tcase OS.VK_CONTROL:", "+\t\t\t\t\tcase OS.VK_CAPITAL:", "+\t\t\t\t\tcase OS.VK_NUMLOCK:", "+\t\t\t\t\tcase OS.VK_SCROLL:", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault: {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Bug in Windows. The high bit in the result of MapVirtualKey() on", "+\t\t\t\t\t\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "+\t\t\t\t\t\t* They should both be bit 32.  The fix is to test the right bit.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tint mapKey = OS.MapVirtualKey ((int)/*64*/msg.wParam, 2);", "+\t\t\t\t\t\tif (mapKey != 0) {", "+\t\t\t\t\t\t\tisAccent = (mapKey & (OS.IsWinNT ? 0x80000000 : 0x8000)) != 0;", "+\t\t\t\t\t\t\tif (!isAccent) {", "+\t\t\t\t\t\t\t\tfor (int i=0; i<ACCENTS.length; i++) {", "+\t\t\t\t\t\t\t\t\tint value = OS.VkKeyScan (ACCENTS [i]);", "+\t\t\t\t\t\t\t\t\tif (value != -1 && (value & 0xFF) == msg.wParam) {", "+\t\t\t\t\t\t\t\t\t\tint state = value >> 8;", "+\t\t\t\t\t\t\t\t\t\tif ((OS.GetKeyState (OS.VK_SHIFT) < 0) == ((state & 0x1) != 0) &&", "+\t\t\t\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_CONTROL) < 0) == ((state & 0x2) != 0) &&", "+\t\t\t\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_MENU) < 0) == ((state & 0x4) != 0)) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif ((state & 0x7) != 0) isAccent = true;", "+\t\t\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\t\t\t\t};", "+\t\t\t\tif (isAccent) result = COM.S_OK;", "-\t\t\tbreak;", "-\t};", "-\tif (isAccent) result = COM.S_OK;", "-", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9547d35f6ea0fe390968ebd3018191f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "0a6811e80079fc0387e0cc87279a001c95b12743", "commitAfterChange": "def0218c22c8740186dfa86c4d354b293854c64b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\t* the Internet Explorer shortcuts (e.g. F5 for refresh).  This overrides the shortcuts", "+\t* the Internet Explorer shortcuts (e.g. Ctrl+F for Find).  This overrides the shortcuts", "-\t* Feature on Internet Explorer.  By default the embedded Internet Explorer control runs", "-\t* the Internet Explorer shortcuts.  CTRL-N opens a standalone IE, which is undesirable", "-\t* and can cause a crash in some contexts.  CTRL-O is being intercepted by IE, but this", "-\t* accelerator should be handled by Eclipse. F5 causes a refresh, which is not appropriate", "-\t* when rendering HTML from memory.  The workaround is to block the handling of these", "-\t* shortcuts by IE when necessary, and in some cases ensure that Eclipse has an opportunity", "-\t* to handle these accelerators.", "+\t* By default the IE shortcuts are run.  However, F5 causes a refresh, which is not", "+\t* appropriate when rendering HTML from memory, and CTRL-N opens a standalone IE,", "+\t* which is undesirable and can cause a crash in some contexts.  The workaround is", "+\t* to block the handling of these shortcuts by IE.", "-\t\t\tcase OS.VK_O:", "-\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "-\t\t\t\t\tgetParent().setData(CONSUME_KEY, \"false\"); //$NON-NLS-1$", "-\t\t\t\t\tresult = COM.S_OK;", "-\t\t\t\t}", "+\t\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) result = COM.S_OK;", "+\t\t\tdefault:", "+\t\t\t\tOS.TranslateMessage(msg);", "+\t\t\t\tframe.setData(CONSUME_KEY, \"true\"); //$NON-NLS-1$", "+\t\t\t\tbreak;", "+", "+\tboolean isAccent = false;", "+\tswitch ((int)/*64*/msg.wParam) {", "+\t\tcase OS.VK_SHIFT:", "+\t\tcase OS.VK_MENU:", "+\t\tcase OS.VK_CONTROL:", "+\t\tcase OS.VK_CAPITAL:", "+\t\tcase OS.VK_NUMLOCK:", "+\t\tcase OS.VK_SCROLL:", "+\t\t\tbreak;", "+\t\tdefault: {", "+\t\t\t/* ", "+\t\t\t* Bug in Windows. The high bit in the result of MapVirtualKey() on", "+\t\t\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "+\t\t\t* They should both be bit 32.  The fix is to test the right bit.", "+\t\t\t*/", "+\t\t\tint mapKey = OS.MapVirtualKey ((int)/*64*/msg.wParam, 2);", "+\t\t\tif (mapKey != 0) {", "+\t\t\t\tisAccent = (mapKey & (OS.IsWinNT ? 0x80000000 : 0x8000)) != 0;", "+\t\t\t\tif (!isAccent) {", "+\t\t\t\t\tfor (int i=0; i<ACCENTS.length; i++) {", "+\t\t\t\t\t\tint value = OS.VkKeyScan (ACCENTS [i]);", "+\t\t\t\t\t\tif (value != -1 && (value & 0xFF) == msg.wParam) {", "+\t\t\t\t\t\t\tint state = value >> 8;", "+\t\t\t\t\t\t\tif ((OS.GetKeyState (OS.VK_SHIFT) < 0) == ((state & 0x1) != 0) &&", "+\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_CONTROL) < 0) == ((state & 0x2) != 0) &&", "+\t\t\t\t\t\t\t\t(OS.GetKeyState (OS.VK_MENU) < 0) == ((state & 0x4) != 0)) {", "+\t\t\t\t\t\t\t\t\tif ((state & 0x7) != 0) isAccent = true;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t};", "+\tif (isAccent) result = COM.S_OK;", "+"]}], "num": 47607}