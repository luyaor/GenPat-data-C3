{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c18677024aa19838f1ec5cbbd8aa665", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb5a61a8827c47178e101a655461c7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "037643338ac7a4f64fc48b34469c86632a359ffe", "commitAfterChange": "07e2a59a9f95423dd94e93f17c1d85884434abf2", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["-\tif (defer && parent != null && parent.lpwp != null) {", "+\tif (defer && parent != null) {", "-\t\tint index = 0;", "-\t\tWINDOWPOS [] lpwp = parent.lpwp;", "-\t\twhile (index < lpwp.length) {", "-\t\t\tif (lpwp [index] == null) break;", "-\t\t\tindex ++;", "+\t\tif (parent.lpwp != null) {", "+\t\t\tint index = 0;", "+\t\t\tWINDOWPOS [] lpwp = parent.lpwp;", "+\t\t\twhile (index < lpwp.length) {", "+\t\t\t\tif (lpwp [index] == null) break;", "+\t\t\t\tindex ++;", "+\t\t\t}", "+\t\t\tif (index == lpwp.length) {", "+\t\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "+\t\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "+\t\t\t\tparent.lpwp = lpwp = newLpwp;", "+\t\t\t}", "+\t\t\tWINDOWPOS wp = new WINDOWPOS ();", "+\t\t\twp.hwnd = topHandle;", "+\t\t\twp.x = x;", "+\t\t\twp.y = y;", "+\t\t\twp.cx = width;", "+\t\t\twp.cy = height;", "+\t\t\twp.flags = flags;", "+\t\t\tlpwp [index] = wp;", "+\t\t\treturn;", "-\t\tif (index == lpwp.length) {", "-\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\t\tparent.lpwp = lpwp = newLpwp;", "-\t\t}", "-\t\tWINDOWPOS wp = new WINDOWPOS ();", "-\t\twp.hwnd = topHandle;", "-\t\twp.x = x;", "-\t\twp.y = y;", "-\t\twp.cx = width;", "-\t\twp.cy = height;", "-\t\twp.flags = flags;", "-\t\tlpwp [index] = wp;", "-\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84310052d4be05da86bc3c33c6336a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "993b8d4f37efd3c9263d7ac43197101ee2f14080", "commitAfterChange": "fe1179fec4e5c55336830f29e326f19e3a9554b8", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["-\tint /*long*/ topHandle = topHandle ();", "-\tif (defer && parent != null) {", "-\t\tforceResize ();", "-\t\tif (OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "-\t\t\tif (findImageControl () != null) {", "-\t\t\t\tflags |= OS.SWP_NOCOPYBITS;", "-\t\t\t} else {", "-\t\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\t\t\t\tif (findThemeControl () != null) flags |= OS.SWP_NOCOPYBITS;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tWINDOWPOS [] lpwp = parent.lpwp;", "-\t\tif (lpwp == null) {", "-\t\t\tSetWindowPos (topHandle, 0, x, y, width, height, flags);", "-\t\t} else {", "-\t\t\tint index = 0;", "-\t\t\twhile (index < lpwp.length) {", "-\t\t\t\tif (lpwp [index] == null) break;", "-\t\t\t\tindex ++;", "-\t\t\t}", "-\t\t\tif (index == lpwp.length) {", "-\t\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\t\t\tparent.lpwp = lpwp = newLpwp;", "-\t\t\t}", "-\t\t\tWINDOWPOS wp = new WINDOWPOS ();", "-\t\t\twp.hwnd = topHandle;", "-\t\t\twp.x = x;", "-\t\t\twp.y = y;", "-\t\t\twp.cx = width;", "-\t\t\twp.cy = height;", "-\t\t\twp.flags = flags;", "-\t\t\tlpwp [index] = wp;", "-\t\t}", "+\tif (findImageControl () != null) {", "+\t\tif (backgroundImage == null) flags |= OS.SWP_NOCOPYBITS;", "-\t\tSetWindowPos (topHandle, 0, x, y, width, height, flags);", "+\t\tif (OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\tif (findThemeControl () != null) flags |= OS.SWP_NOCOPYBITS;", "+\t\t\t}", "+\t\t}", "+\tint /*long*/ topHandle = topHandle ();", "+\tif (defer && parent != null && parent.lpwp != null) {", "+\t\tforceResize ();", "+\t\tint index = 0;", "+\t\tWINDOWPOS [] lpwp = parent.lpwp;", "+\t\twhile (index < lpwp.length) {", "+\t\t\tif (lpwp [index] == null) break;", "+\t\t\tindex ++;", "+\t\t}", "+\t\tif (index == lpwp.length) {", "+\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "+\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "+\t\t\tparent.lpwp = lpwp = newLpwp;", "+\t\t}", "+\t\tWINDOWPOS wp = new WINDOWPOS ();", "+\t\twp.hwnd = topHandle;", "+\t\twp.x = x;", "+\t\twp.y = y;", "+\t\twp.cx = width;", "+\t\twp.cy = height;", "+\t\twp.flags = flags;", "+\t\tlpwp [index] = wp;", "+\t\treturn;", "+\t}", "+\tSetWindowPos (topHandle, 0, x, y, width, height, flags);"]}], "num": 37467}