{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a86b4d06e04341cf9776e57f71ac3c06", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "518937e2aed1a559c78627e0120c7113", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "735e9a9bdbb6a114195dba9738a0d9f8f6b1edcf", "commitAfterChange": "f098e8b179a28a23bfb0b63407491b2e68e55ba9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;\t", "+\tif ((flags & SWT.DRAW_MNEMONIC) == 0) uFormat |= OS.DT_NOPREFIX;", "+\tint rop2 = 0;", "+\tif (OS.IsWinCE) {", "+\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);", "+\t\tOS.SetROP2(handle, rop2);", "+\t} else {", "+\t\trop2 = OS.GetROP2(handle);", "+\t}", "-\tOS.DrawText(handle, buffer, length, rect, uFormat);", "+\tif (rop2 != OS.R2_XORPEN) {", "+\t\tOS.DrawText(handle, buffer, length, rect, uFormat);", "+\t} else {", "+\t\tint foreground = OS.GetTextColor(handle);", "+\t\tif ((flags & SWT.DRAW_TRANSPARENT) != 0) {", "+\t\t\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat | OS.DT_CALCRECT);", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tint height = rect.bottom - rect.top;", "+\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);", "+\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tint memDC = OS.CreateCompatibleDC(handle);", "+\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);", "+\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);", "+\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);", "+\t\t\tOS.SetTextColor(memDC, foreground);", "+\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\t\tOS.SetRect(rect, 0, 0, 0x7FFF, 0x7FFF);", "+\t\t\tOS.DrawText(memDC, buffer, length, rect, uFormat);", "+\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);", "+\t\t\tOS.SelectObject(memDC, hOldBitmap);", "+\t\t\tOS.DeleteDC(memDC);", "+\t\t\tOS.DeleteObject(hBitmap);", "+\t\t} else {", "+\t\t\tint background = OS.GetBkColor(handle);", "+\t\t\tOS.SetTextColor(handle, foreground ^ background);", "+\t\t\tOS.DrawText(handle, buffer, length, rect, uFormat);", "+\t\t\tOS.SetTextColor(handle, foreground);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb98d329262a3bb222d8ac90e8f42be1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "735e9a9bdbb6a114195dba9738a0d9f8f6b1edcf", "commitAfterChange": "f098e8b179a28a23bfb0b63407491b2e68e55ba9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": " public void drawString (String string, int x, int y, boolean isTransparent)", "diff": ["+\tif (length == 0) return;", "+\tint rop2 = 0;", "+\tif (OS.IsWinCE) {", "+\t\trop2 = OS.SetROP2(handle, OS.R2_COPYPEN);", "+\t\tOS.SetROP2(handle, rop2);", "+\t} else {", "+\t\trop2 = OS.GetROP2(handle);", "+\t}", "-\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\tif (rop2 != OS.R2_XORPEN) {", "+\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\t} else {", "+\t\tint foreground = OS.GetTextColor(handle);", "+\t\tif (isTransparent) {", "+\t\t\tSIZE size = new SIZE();", "+\t\t\tOS.GetTextExtentPoint32W(handle, buffer, length, size);", "+\t\t\tint width = size.cx, height = size.cy;", "+\t\t\tint hBitmap = OS.CreateCompatibleBitmap(handle, width, height);", "+\t\t\tif (hBitmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tint memDC = OS.CreateCompatibleDC(handle);", "+\t\t\tint hOldBitmap = OS.SelectObject(memDC, hBitmap);", "+\t\t\tOS.PatBlt(memDC, 0, 0, width, height, OS.BLACKNESS);", "+\t\t\tOS.SetBkMode(memDC, OS.TRANSPARENT);", "+\t\t\tOS.SetTextColor(memDC, foreground);", "+\t\t\tOS.SelectObject(memDC, OS.GetCurrentObject(handle, OS.OBJ_FONT));", "+\t\t\tOS.ExtTextOutW(memDC, 0, 0, 0, null, buffer, length, null);", "+\t\t\tOS.BitBlt(handle, x, y, width, height, memDC, 0, 0, OS.SRCINVERT);", "+\t\t\tOS.SelectObject(memDC, hOldBitmap);", "+\t\t\tOS.DeleteDC(memDC);", "+\t\t\tOS.DeleteObject(hBitmap);", "+\t\t} else {", "+\t\t\tint background = OS.GetBkColor(handle);", "+\t\t\tOS.SetTextColor(handle, foreground ^ background);", "+\t\t\tOS.ExtTextOutW(handle, x, y, 0, null, buffer, length, null);", "+\t\t\tOS.SetTextColor(handle, foreground);", "+\t\t}", "+\t}"]}], "num": 39975}