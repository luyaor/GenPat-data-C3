{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f977b2d28e06e642f3606328dc1d04e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5016b3df180e0ae0638e8b33a8443f9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b2d1b28bdafb73ead9193c538dfcd04f6eaa6ede", "commitAfterChange": "c73348786abf15e490fc20d69d35d41b71bf2fe0", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 219, "signatureBeforeChange": "\r void modifyContent(Event event, boolean updateCaret)", "signatureAfterChange": "\r void modifyContent(Event event, boolean updateCaret)", "diff": ["+\t\t// Optimization for non-Windows platforms.  Do direct drawing during typing.\r", "+\t\tif (SWT.getPlatform().equals(\"win32\") == false) {\r", "+\t\t\tdrawDirect = (event.text.length() == 1) || (replacedLength == 1);\r", "+\t\t}\r", "+\t\t// Optimization for non-Windows platforms.  Do direct drawing during typing.\r", "+\t\tif (drawDirect) {\r", "+\t\t\tint startLine = content.getLineAtOffset(event.start);\r", "+\t\t\tint startY = startLine * lineHeight - verticalScrollOffset;\r", "+\t\t\tGC gc = new GC(this);\r", "+\t\t\tperformPaint(gc, startLine, startY, lineHeight);\r", "+\t\t\tdrawDirect = false;\r", "+\t\t\tgc.dispose();\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40c0764cec9b7623253494320873753", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "2a64d5a4e16df7bf09e101e31ef796b84fd74e1e", "commitAfterChange": "69ee1a54e3186341c257348cbeae19ccad394fe4", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 209, "signatureBeforeChange": "\r void handleTextChanged(TextChangedEvent event)", "signatureAfterChange": "\r void handleTextChanged(TextChangedEvent event)", "diff": ["+\t// do direct drawing if the text change is confined to a single line.\r", "+\t// optimization and fixes bug 13999. see also handleTextChanging.\r", "+\tif (lastTextChangeNewLineCount == 0 && lastTextChangeReplaceLineCount == 0) {\r", "+\t\tint startLine = content.getLineAtOffset(lastTextChangeStart);\r", "+\t\tint startY = startLine * lineHeight - verticalScrollOffset;\r", "+\t\tGC gc = new GC(this);\r", "+\t\tCaret caret = getCaret();\r", "+\t\tboolean caretVisible = caret.getVisible();\r", "+\t\t\r", "+\t\tcaret.setVisible(false);\r", "+\t\tperformPaint(gc, startLine, startY, lineHeight, true);\r", "+\t\tcaret.setVisible(caretVisible);\r", "+\t\tgc.dispose();\r", "+\t}\r"]}], "num": 47529}