{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08bde170d97d5a314e1addd252a69380", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee87eaea502536765b13500d3c803eda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/AppFileLocProvider.java", "commitBeforeChange": "c57f6d49ff9af1c5214a225793ae023507e004d2", "commitAfterChange": "0c4f2dac1db651a98bfd8e05aee318617acd8539", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  int getFiles (int prop, int _retval)", "signatureAfterChange": "  int getFiles (int prop, int _retval)", "diff": ["-\t\t\t/* set the first value to the MOZ_PLUGIN_PATH environment variable value if it's defined */", "+\t\t\t/* set the first value(s) to the MOZ_PLUGIN_PATH environment variable value if it's defined */", "-\t\t\t\t\tpluginDirs = new String[3];", "-\t\t\t\t\tpluginDirs[index++] = value;", "+\t\t\t\t\tString separator = System.getProperty (\"path.separator\"); // $NON-NLS-1$", "+\t\t\t\t\tStringTokenizer tokenizer = new StringTokenizer (value, separator);", "+\t\t\t\t\tint count = tokenizer.countTokens ();", "+\t\t\t\t\tpluginDirs = new String[2 + count];", "+\t\t\t\t\twhile (tokenizer.hasMoreTokens ()) {", "+\t\t\t\t\t\tpluginDirs[index++] = tokenizer.nextToken ();", "+\t\t\t\t\t}", "+\t\tint index = 0;", "-\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tif (rc != XPCOM.NS_ERROR_FILE_UNRECOGNIZED_PATH) {", "+\t\t\t\t/* value appears to be a valid pathname */", "+\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+", "+\t\t\t\tnsILocalFile localFile = new nsILocalFile (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "+\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\tlocalFile.Release ();", "+", "+\t\t\t\tnsIFile file = new nsIFile (result[0]);", "+\t\t\t\tfiles[index++] = file;", "+\t\t\t}", "-", "-\t\t\tnsILocalFile localFile = new nsILocalFile (result[0]);", "-\t\t    rc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "-\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\t\tlocalFile.Release ();", "+\t\t}", "-\t\t\tnsIFile file = new nsIFile (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tfiles[i] = file;", "+\t\tif (index < propertyValues.length) {", "+\t\t\t/* there were some invalid values so remove the trailing empty array slots */", "+\t\t\tnsISupports[] temp = new nsISupports [index];", "+\t\t\tSystem.arraycopy (files, 0, temp, 0, index);", "+\t\t\tfiles = temp;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f1e51c9a686c78fb423ebd0dd94ccd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/AppFileLocProvider.java", "commitBeforeChange": "c863f15e676811980655a1f7fc25695605c2609c", "commitAfterChange": "309b926e42fb999778d38b7626a0e6c34a82050c", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  int getFiles (int prop, int _retval)", "signatureAfterChange": "  int getFiles (int prop, int _retval)", "diff": ["-\tString propertyValue = null;", "+\tString[] propertyValues = null;", "-\t\tpropertyValue = mozillaPath + PLUGINS_DIR;", "+\t\tif (pluginDirs == null) {", "+\t\t\tint index = 0;", "+\t\t\t/* set the first value to the MOZ_PLUGIN_PATH environment variable value if it's defined */", "+\t\t\tint /*long*/ ptr = C.getenv (MozillaDelegate.wcsToMbcs (null, XPCOM.MOZILLA_PLUGIN_PATH, true));", "+\t\t\tif (ptr != 0) {", "+\t\t\t\tint length = C.strlen (ptr);", "+\t\t\t\tbyte[] buffer = new byte[length];", "+\t\t\t\tC.memmove (buffer, ptr, length);", "+\t\t\t\tString value = new String (MozillaDelegate.mbcsToWcs (null, buffer));", "+\t\t\t\tif (value.length () > 0) {", "+\t\t\t\t\tpluginDirs = new String[3];", "+\t\t\t\t\tpluginDirs[index++] = value;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (pluginDirs == null) {", "+\t\t\t\tpluginDirs = new String[2];", "+\t\t\t}", "+", "+\t\t\t/* set the next value to the GRE path + \"plugins\" */", "+\t\t\tpluginDirs[index++] = mozillaPath + PLUGINS_DIR;", "+", "+\t\t\t/* set the next value to the home directory + \"/.mozilla/plugins\" */", "+\t\t\tpluginDirs[index++] = System.getProperty(\"user.home\") + SEPARATOR_OS + USER_PLUGINS_DIR;", "+\t\t}", "+\t\tpropertyValues = pluginDirs;", "-\tif (propertyValue != null && propertyValue.length () > 0) {", "+\tif (propertyValues != null) {", "-\t\tnsEmbedString pathString = new nsEmbedString (propertyValue);", "-\t\tint rc = XPCOM.NS_NewLocalFile (pathString.getAddress (), true, result);", "-\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\tpathString.dispose ();", "+\t\tnsISupports[] files = new nsISupports [propertyValues.length];", "+\t\tfor (int i = 0; i < propertyValues.length; i++) {", "+\t\t\tnsEmbedString pathString = new nsEmbedString (propertyValues[i]);", "+\t\t\tint rc = XPCOM.NS_NewLocalFile (pathString.getAddress (), true, result);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tpathString.dispose ();", "-\t\tnsILocalFile localFile = new nsILocalFile (result[0]);", "-\t\tresult[0] = 0;", "-\t    rc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "-\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\tlocalFile.Release ();", "+\t\t\tnsILocalFile localFile = new nsILocalFile (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t    rc = localFile.QueryInterface (nsIFile.NS_IFILE_IID, result); ", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tif (result[0] == 0) Mozilla.error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\tlocalFile.Release ();", "-\t\tnsIFile file = new nsIFile (result [0]);", "-\t\tresult[0] = 0;", "-\t\tSingletonEnumerator enumerator = new SingletonEnumerator (file);", "-\t\tenumerator.AddRef (); ", "+\t\t\tnsIFile file = new nsIFile (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\tfiles[i] = file;", "+\t\t}", "+", "+\t\tSimpleEnumerator enumerator = new SimpleEnumerator (files);", "+\t\tenumerator.AddRef ();", "+"]}], "num": 27136}