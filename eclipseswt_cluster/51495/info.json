{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c70e07db90ace0c952b05a309ba0f98a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958046cbafc5abddd6dd8f72826489b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "3c8fe3197a9a8c3ee28413369498767a1dbf0ef5", "commitAfterChange": "41401bd7705a65169c979ec237069503afd209f0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Rectangle getClientArea()", "signatureAfterChange": " public Rectangle getClientArea()", "diff": ["-\tif (items.length == 0) {", "-\t\tif (!showBorders) return super.getClientArea();", "-\t\tint width = size.x - borderRight - 2;", "-\t\tint height = size.y - borderBottom - 2;", "-\t\treturn new Rectangle(borderRight + 1, borderBottom + 1, width, height);\t", "-\t} else {", "-\t\tint width = size.x - 2*marginWidth - borderLeft - borderRight;", "-\t\tint height = size.y - 2*marginHeight - borderTop - borderBottom - tabHeight - 1;", "-\t\treturn new Rectangle(xClient, yClient, width, height);", "+\tint width = size.x  - borderLeft - borderRight - 2*marginWidth;", "+\tint height = size.y - borderTop - borderBottom - 2*marginHeight;", "+\tif (items.length == 0) {\t\t", "+\t\treturn new Rectangle(borderLeft + marginWidth, borderTop + marginHeight, width, height);\t", "+\theight -= tabHeight + 1; //+1 for line under tabs", "+\treturn new Rectangle(xClient, yClient, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21cb70bc475d98d54ec75695e61e1d59", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/MetaDataGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void generate(Method method)", "signatureAfterChange": "  public void generate(JNIMethod method)", "diff": ["-public void generate(Method method) {", "+public void generate(JNIMethod method) {", "-\tbuffer.append(getClassName(method.getDeclaringClass()));", "+\tbuffer.append(method.getDeclaringClass().getSimpleName());", "-\tif (isNativeUnique(method)) {", "+\tif (method.isNativeUnique()) {", "-\tMethodData methodData = getMetaData().getMetaData(method);", "-\tif (methodData != null) output(methodData.toString());", "+\toutput(((AbstractItem)method).flatten());", "-\tint length = method.getParameterTypes().length;", "-\tfor (int i = 0; i < length; i++) {", "+\tJNIParameter[] params = method.getParameters();", "+\tfor (int i = 0; i < params.length; i++) {", "-\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "-\t\tif (paramData != null) output(paramData.toString());", "+\t\toutput(((AbstractItem)params[i]).flatten());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d7fad1f72dffd59e20020194b6f0e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/LEDataInputStream.java", "commitBeforeChange": "6c7d14f6d74c3a897920b14be3be676f49b65550", "commitAfterChange": "90f2dd3beed337dd1e3c587d4ba29070120f8f73", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprivate void unread(byte[] buffer, int offset, int length) throws IOException", "signatureAfterChange": "\r \tpublic void unread(byte[] b) throws IOException", "diff": ["+\t */\r", "+\t\tint length = b.length;\r", "+\t\tif (length > pos) throw new IOException();\r", "+\t\tposition -= length;\r", "+\t\tpos -= length;\r", "+\t\tSystem.arraycopy(b, 0, buf, pos, length);\r", "-\t */\r", "-\tprivate void unread(byte[] buffer, int offset, int length) throws IOException {\r", "-\t\tif (offset < 0 || offset > buffer.length ||\r", "-\t\t\tlength < 0 || (length > buffer.length - offset)) {\r", "-\t\t\tthrow new ArrayIndexOutOfBoundsException();\r", "-\t\t\t}\r", "-\t\tfor (int i = offset + length - 1; i >= offset; i--)\r", "-\t\t\tunread(buffer[i]); \r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adca93e6e12800577baf5f175eb4754c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/internal/Converter.java", "commitBeforeChange": "b9ecbb7f7d602699e2e06b233b6705d8980ce237", "commitAfterChange": "1a37994323223050dea0a8035b4c02c0f0b240e2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static byte [] wcsToMbcs (String codePage, String string, boolean terminate)", "signatureAfterChange": "\r public static byte [] wcsToMbcs (String codePage, String string, boolean terminate)", "diff": ["-\ttry {\r", "-\t\tif (!terminate) return string.getBytes (defaultCodePage ());\r", "-\t\tbyte [] buffer1 = string.getBytes (defaultCodePage ());\r", "-\t\tbyte [] buffer2 = new byte [buffer1.length + 1];\r", "-\t\tSystem.arraycopy (buffer1, 0, buffer2, 0, buffer1.length);\r", "-\t\treturn buffer2;\r", "-\t} catch (UnsupportedEncodingException e) {\r", "-\t\treturn terminate ? NullByteArray : EmptyByteArray;\r", "-\t}\r", "+\tint length = OS.GetStringUTFLength (string);\r", "+\tif (length == 0) return terminate ? NullByteArray : EmptyByteArray;\r", "+\tbyte[] buffer = new byte [terminate ? length + 1 : length];\r", "+\tOS.GetStringUTFRegion (string, 0, string.length (), buffer);\t\r", "+\treturn buffer;\r"]}], "num": 51495}