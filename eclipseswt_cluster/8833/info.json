{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed55101d20c2d7a83a4d2c7468aefe75", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507f86eb5da30c48444f36cbb37aedda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e21499d8e0ce99464817c01247ac2cfe606f7af1", "commitAfterChange": "24ee51cda626767793aae59eaf8489a458a84622", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": " public boolean setText(String html)", "signatureAfterChange": " public boolean setText(String html)", "diff": ["-", "-\t/*", "-\t* If the html field is non-null then the about:blank page is already being", "-\t* loaded, so no Stop or Navigate is required.  Just set the html that is to", "-\t* be shown.", "-\t*/", "-\tboolean blankLoading = this.html != null;", "-\tthis.html = html;", "-\tif (blankLoading) return true;", "-\t", "-\t/*", "-\t* Navigate to the blank page and insert the given html when", "-\t* receiving the next DocumentComplete notification.  See the", "-\t* MSDN article \"Loading HTML content from a Stream\".", "-\t* ", "-\t* Note.  Stop any pending request.  This is required to avoid displaying a", "-\t* blank page as a result of consecutive calls to setUrl and/or setText.  ", "-\t* The previous request would otherwise render the new html content and", "-\t* reset the html field before the browser actually navigates to the blank", "-\t* page as requested below.", "-\t* ", "-\t* Feature in Internet Explorer.  Stopping pending requests when no request", "-\t* is pending causes a default page 'Action cancelled' to be displayed.  The", "-\t* workaround is to not invoke 'stop' when no request has been set since", "-\t* that instance was created.", "-\t*/", "-\tint[] rgdispid;", "-\tif (navigate) {", "-\t\t/*", "-\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "-\t\t* requests to be received before the DocumentComplete for this page.  In such", "-\t\t* cases we must be sure to not set the html into the browser too soon, since", "-\t\t* doing so could result in its page being cleared out by a subsequent", "-\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "-\t\t* these extra events will be received or not.", "-\t\t*/", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\tif (pVarResult == null) return false;", "-\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\t\tpVarResult.dispose();", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tnavigate = true;", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(ABOUT_BLANK);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "+\treturn webBrowser.setText(html);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6377e0b7627871ad2a817483271b44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "7e632feed9e029d710fd3c7c625039dfd91ea9ad", "commitAfterChange": "f248d27eba65ed41c9146d5bdd2fea733e2f0658", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["-\t* If the browser has not completed its initial navigate to about:blank", "-\t* then delay setting this text content until the navigate has completed.", "+\t* If the browser is navigating to about:blank in response to its first", "+\t* setUrl() invocation then delay setting this text content until the", "+\t* navigate has completed.  about:blank will be re-navigated to in order", "+\t* to ensure that all expected client events are sent.", "-\tif (!initialNavigateComplete) {", "+\tif (performingInitialNavigate) {", "-\t* loaded, so no Stop or Navigate is required.  Just set the html that is to", "-\t* be shown.", "+\t* loaded from a previous setText() invocation, so no Stop or Navigate is", "+\t* required.  Just set the html that is to be shown.", "-\t", "+", "-\tint[] rgdispid;", "-\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\tif (pVarResult == null) return false;", "-\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\tpVarResult.dispose();", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\tauto.invoke(rgdispid[0]);", "+\tif (_getUrl().length() != 0) {", "+\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\t\tif (pVarResult == null) return false;", "+\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\t\tpVarResult.dispose();", "+\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\t\tauto.invoke(rgdispid[0]);", "+\t}", "-\tif (getUrl().equals(ABOUT_BLANK)) {", "+\tif (_getUrl().equals(ABOUT_BLANK)) {", "-\trgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "+\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d58908a1e1c49393730d7c54f5be17d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e21499d8e0ce99464817c01247ac2cfe606f7af1", "commitAfterChange": "24ee51cda626767793aae59eaf8489a458a84622", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 27, "signatureBeforeChange": " public boolean setUrl(String url)", "signatureAfterChange": " public boolean setUrl(String url)", "diff": ["-\thtml = null;", "-", "-\t/*", "-\t* Bug in Internet Explorer.  For some reason, Navigating to an xml document before", "-\t* a previous Navigate has completed will leave the Browser in a bad state if the", "-\t* Navigate to the xml document does not complete.  This bad state causes a GP when", "-\t* the parent window is eventually disposed.  The workaround is to issue a Stop before", "-\t* navigating to any xml document. ", "-\t*/", "-\tif (url.endsWith(\".xml\")) {\t//$NON-NLS-1$", "-\t\t/*", "-\t\t* Feature in Internet Explorer.  Stopping pending requests when no request has been", "-\t\t* issued causes a default 'Action cancelled' page to be displayed.  Since Stop must", "-\t\t* be issued here, the workaround is to first Navigate to the about:blank page before", "-\t\t* issuing Stop so that the 'Action cancelled' page is not displayed.", "-\t\t*/", "-\t\tif (!navigate) {", "-\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tVariant[] rgvarg = new Variant[1];", "-\t\t\trgvarg[0] = new Variant(ABOUT_BLANK);", "-\t\t\tint[] rgdispidNamedArgs = new int[1];", "-\t\t\trgdispidNamedArgs[0] = rgdispid[1];", "-\t\t\tauto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\t\t\trgvarg[0].dispose();", "-\t\t}", "-\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "-", "-\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tnavigate = true;", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(url);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "+\treturn webBrowser.setUrl(url);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67adc4eb5e7038b9668cf2b79fd6049", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "a5c1cfcec95b92d93db65966120f9c3e9574da47", "commitAfterChange": "41bdae326eb353ce74e20d44ac4455a5c572579f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["+\t* If the browser has not completed its initial navigate to about:blank", "+\t* then delay setting this text content until the navigate has completed.", "+\t*/", "+\tif (!initialNavigateComplete) {", "+\t\tpendingText = new Object[] {html, new Boolean (trusted)};", "+\t\tpendingUrl = null;", "+\t\treturn true;", "+\t}", "+", "+\t/*", "-\tif (navigate) {", "-\t\t/*", "-\t\t* Stopping the loading of a page causes DocumentComplete events from previous", "-\t\t* requests to be received before the DocumentComplete for this page.  In such", "-\t\t* cases we must be sure to not set the html into the browser too soon, since", "-\t\t* doing so could result in its page being cleared out by a subsequent", "-\t\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "-\t\t* these extra events will be received or not.", "-\t\t*/", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "-\t\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "-\t\tif (pVarResult == null) return false;", "-\t\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "-\t\tpVarResult.dispose();", "-\t\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "-\t\tauto.invoke(rgdispid[0]);", "-\t}", "+", "+\t/*", "+\t* Stopping the loading of a page causes DocumentComplete events from previous", "+\t* requests to be received before the DocumentComplete for this page.  In such", "+\t* cases we must be sure to not set the html into the browser too soon, since", "+\t* doing so could result in its page being cleared out by a subsequent", "+\t* DocumentComplete.  The Browser's ReadyState can be used to determine whether", "+\t* these extra events will be received or not.", "+\t*/", "+\trgdispid = auto.getIDsOfNames(new String[] { \"ReadyState\" }); //$NON-NLS-1$", "+\tVariant pVarResult = auto.getProperty(rgdispid[0]);", "+\tif (pVarResult == null) return false;", "+\tdelaySetText = pVarResult.getInt() != READYSTATE_COMPLETE;", "+\tpVarResult.dispose();", "+\trgdispid = auto.getIDsOfNames(new String[] { \"Stop\" }); //$NON-NLS-1$", "+\tauto.invoke(rgdispid[0]);", "-\tnavigate = true;", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "+\tpVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c2c93700c117961e187177b21fa916", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e21499d8e0ce99464817c01247ac2cfe606f7af1", "commitAfterChange": "24ee51cda626767793aae59eaf8489a458a84622", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean execute(String script)", "signatureAfterChange": " public boolean execute(String script)", "diff": ["-\t", "-\t/* get IHTMLDocument2 */", "-\tint[] rgdispid = auto.getIDsOfNames(new String[]{\"Document\"}); //$NON-NLS-1$", "-\tint dispIdMember = rgdispid[0];", "-\tVariant pVarResult = auto.getProperty(dispIdMember);", "-\tif (pVarResult == null || pVarResult.getType() == COM.VT_EMPTY) return false;", "-\tOleAutomation document = pVarResult.getAutomation();", "-\tpVarResult.dispose();", "-", "-\t/* get IHTMLWindow2 */", "-\trgdispid = document.getIDsOfNames(new String[]{\"parentWindow\"}); //$NON-NLS-1$", "-\tif (rgdispid == null) {", "-\t\t/* implies that browser's content is not a IHTMLDocument2 (eg.- acrobat reader) */", "-\t\tdocument.dispose();", "-\t\treturn false;", "-\t}", "-\tdispIdMember = rgdispid[0];", "-\tpVarResult = document.getProperty(dispIdMember);", "-\tOleAutomation ihtmlWindow2 = pVarResult.getAutomation();", "-\tpVarResult.dispose();", "-\tdocument.dispose();", "-\t", "-\trgdispid = ihtmlWindow2.getIDsOfNames(new String[] { \"execScript\", \"code\" }); //$NON-NLS-1$  //$NON-NLS-2$", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(script);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tpVarResult = ihtmlWindow2.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tihtmlWindow2.dispose();", "-\tif (pVarResult == null) return false;", "-\tpVarResult.dispose();", "-\treturn true;", "+\treturn webBrowser.execute(script);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76ec31d9e66a6c372cce99742c249d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "2ef2e709c4c31aa7b46fb0d933d3fc8c2c2d5682", "commitAfterChange": "1558841b1896e9e706af6006087cd106ba6d2af3", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url)", "diff": ["+", "-\thtml = null;", "+\thtml = uncRedirect = null;", "-\t\t\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tVariant[] rgvarg = new Variant[1];", "-\t\t\trgvarg[0] = new Variant(ABOUT_BLANK);", "-\t\t\tint[] rgdispidNamedArgs = new int[1];", "-\t\t\trgdispidNamedArgs[0] = rgdispid[1];", "-\t\t\tboolean oldValue = false;", "-\t\t\tif (!OS.IsWinCE && IsIE7) {", "-\t\t\t\tint hResult = OS.CoInternetIsFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.GET_FEATURE_FROM_PROCESS);", "-\t\t\t\toldValue = hResult == COM.S_OK;", "-\t\t\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, true);", "-\t\t\t}", "-\t\t\tauto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\t\t\tif (!OS.IsWinCE && IsIE7) {", "-\t\t\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, oldValue);", "-\t\t\t}", "-\t\t\trgvarg[0].dispose();", "+\t\t\tnavigate (ABOUT_BLANK, true);", "-", "-\tint[] rgdispid = auto.getIDsOfNames(new String[] { \"Navigate\", \"URL\" }); //$NON-NLS-1$ //$NON-NLS-2$", "-\tnavigate = true;", "-\tVariant[] rgvarg = new Variant[1];", "-\trgvarg[0] = new Variant(url);", "-\tint[] rgdispidNamedArgs = new int[1];", "-\trgdispidNamedArgs[0] = rgdispid[1];", "-\tVariant pVarResult = auto.invoke(rgdispid[0], rgvarg, rgdispidNamedArgs);", "-\trgvarg[0].dispose();", "-\tif (pVarResult == null) return false;", "-\tboolean result = pVarResult.getType() == OLE.VT_EMPTY;", "-\tpVarResult.dispose();", "-\treturn result;", "+\treturn navigate(url, false);"]}], "num": 8833}