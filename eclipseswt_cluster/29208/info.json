{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b88e6c38ecab22fffc114245f8b83a6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05eab8e29a97241826a9654797cb1ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0743a5dea24f50b9afa2e77a52dfe29c7b7243bd", "commitAfterChange": "cd78cc4a8b2e806160de2908244830099a48d3b9", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  GdkColor toGdkColor (GdkRGBA rgba, float m1, float m2)", "signatureAfterChange": "  GdkColor toGdkColor (GdkRGBA rgba, double m)", "diff": ["-GdkColor toGdkColor (GdkRGBA rgba, float m1, float m2) {", "-\tRGB rgb = new RGB((int)(rgba.red * 0xFF), (int)(rgba.green * 0xFF), (int)(rgba.blue * 0xFF));", "-\tfloat[] hsb = rgb.getHSB();", "-\thsb[1] = (float)Math.max(0f, Math.min(1f, hsb[1] * m1));", "-\thsb[2] = (float)Math.max(0f, Math.min(1f, hsb[2] * m2));", "-\trgb = new RGB(hsb[0], hsb[1], hsb[2]);", "+GdkColor toGdkColor (GdkRGBA rgba, double m) {", "+\tdouble[] h = new double[1];", "+\tdouble[] s = new double[1];", "+\tdouble[] v = new double[1];", "+\tOS.gtk_rgb_to_hsv(rgba.red, rgba.green, rgba.blue, h, s, v);", "+\tdouble L = (2 - s[0]) * v[0];", "+\tdouble S = s[0] * v[0];", "+\tS /= (L <= 1) ? L : 2 - L;", "+\tL /= 2;", "+\tS = Math.max(0f, Math.min(1f, S * m));", "+\tL = Math.max(0f, Math.min(1f, L * m));", "+\tL *= 2;", "+\tS *= L <= 1 ? L : 2 - L;", "+\tv[0] = (L + S) / 2;", "+\ts[0] = (2 * S) / (L + S);", "+\tOS.gtk_hsv_to_rgb(h[0], s[0], v[0], h, s, v);", "-\tgdkColor.red = (short)((rgb.red & 0xFF) | ((rgb.red & 0xFF) << 8));", "-\tgdkColor.green = (short)((rgb.green & 0xFF) | ((rgb.green & 0xFF) << 8));", "-\tgdkColor.blue = (short)((rgb.blue & 0xFF) | ((rgb.blue & 0xFF) << 8));", "+\tgdkColor.red = (short)(h[0] * 0xFFFF);", "+\tgdkColor.green = (short)(s[0] * 0xFFFF);", "+\tgdkColor.blue = (short)(v[0] * 0xFFFF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca706065f1795d0f90bbaea9255f593", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "diff": ["-LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam) {", "+LRESULT wmNotifyChild (NMHDR hdr, int /*long*/ wParam, int /*long*/ lParam) {", "-\t\t\t\t\t\tif (items [lptvdi.lParam] != null && items [lptvdi.lParam].cached) {", "+\t\t\t\t\t\tif (items [(int)/*64*/lptvdi.lParam] != null && items [(int)/*64*/lptvdi.lParam].cached) {", "-\t\t\tint id = lptvdi.lParam;", "+\t\t\tint /*long*/ id = lptvdi.lParam;", "-\t\t\t\tindex = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\t\t\tindex = (int)/*64*/OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "-\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\tint offset1 = NMHDR.sizeof + 4;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset1, TVITEM.sizeof);", "+\t\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\tTVITEM tvItem = treeView.itemOld;", "-\t\t\t\t\tint offset2 = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset2, TVITEM.sizeof);", "+\t\t\t\t\ttvItem = treeView.itemNew;", "+\t\t\tNMTREEVIEW treeView = null;", "-\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\tint offset = NMHDR.sizeof + 4;", "-\t\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\t\tif (treeView == null) {", "+\t\t\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tTVITEM tvItem = treeView.itemOld;", "-\t\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\t\tif (treeView == null) {", "+\t\t\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\tif (treeView == null) {", "+\t\t\t\t\ttreeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t}", "+\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\t\tint [] action = new int [1];", "-\t\t\t\tOS.MoveMemory (action, lParam + NMHDR.sizeof, 4);", "-\t\t\t\tswitch (action [0]) {", "+\t\t\t\tswitch (treeView.action) {", "-\t\t\t\tint hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, tvItem.hItem);", "+\t\t\t\tint /*long*/ hFirstItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CHILD, tvItem.hItem);", "-\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\t\t\tTVITEM tvItem = treeView.itemNew;", "-\t\t\tTVITEM tvItem = new TVITEM ();", "-\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "-\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\tNMTREEVIEW treeView = new NMTREEVIEW ();", "+\t\t\tOS.MoveMemory (treeView, lParam, NMTREEVIEW.sizeof);", "+\t\t\tTVITEM tvItem = treeView.itemNew;"]}], "num": 29208}