{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8718dd8296d107fb55d1073debea7fc7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6431db4ad92ed2f8c5613f9d1ad505dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "3182aff310d674f859f620bd6e9abcff601f17e7", "commitAfterChange": "a65e141e851aa5790a8ed7e56c2ff1dbda7f11f9", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmKeyDown (int hwnd, int wParam, int lParam)", "diff": ["-\t\tmapKey = OS.MapVirtualKey ((int)/*64*/wParam, 2);", "+\t\t/*", "+\t\t* Feature in Windows.  For numbers in Marathi and Bengali,", "+\t\t* MapVirtualKey() returns the localized number instead of ", "+\t\t* the ASCII equivalent.  For example, MapVirtualKey()", "+\t\t* maps VK_1 on the Marathi keyboard to \\u2407, which is", "+\t\t* a valid Unicode Marathi '1' character, but not ASCII.", "+\t\t* The fix is to test for VK_0 to VK_9 and map these", "+\t\t* explicitly.", "+\t\t* ", "+\t\t* NOTE: VK_0 to VK_9 are the same as ASCII.", "+\t\t*/", "+\t\tif ('0' <= wParam && wParam <= '9') {", "+\t\t\tmapKey = (int)/*64*/wParam;", "+\t\t} else {", "+\t\t\tmapKey = OS.MapVirtualKey ((int)/*64*/wParam, 2);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac774c09871cc932fece90a48fccf25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "a45e2f0f4688ba8750d124e41802861dc3176c91", "commitAfterChange": "26e521309364bb658cf1c93d5815f7e3f172acfd", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " int getLineCountWhole()", "signatureAfterChange": " int getLineCountWhole()", "diff": ["-//\treturn lineHeight != 0 ? getClientArea().height / lineHeight : 1;", "+\tif (isFixedLineHeight()) {", "+\t\treturn lineHeight != 0 ? getClientArea().height / lineHeight : 1;", "+\t}"]}], "num": 42252}