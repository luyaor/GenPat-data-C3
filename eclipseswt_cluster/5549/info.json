{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e814d2ad30dd81e5a78d6604cfc537f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba3afc640d3bf5ae5d69ec88c1700b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Theme/gtk/org/eclipse/swt/internal/theme/Theme.java", "commitBeforeChange": "a5d74e982d75f01573494e0517f943b706533c50", "commitAfterChange": "c721692e5dcfce6418ad18b09e8c08689848a34e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void transferClipping(GC gc, long style)", "signatureAfterChange": "  void transferClipping(GC gc, long style)", "diff": ["-\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {\t", "-\t\t\tclipping = Cairo.cairo_region_create ();", "-\t\t\tCairo.cairo_region_union (clipping, clipRgn);", "-\t\t\tCairo.cairo_region_intersect (clipping, damageRgn);", "-\t\t} else {", "-\t\t}", "-\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\tCairo.cairo_region_destroy ( clipping);", "-\t\t} else {", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a012c8ef4bbcd687c6d7d0e4c576f1d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "657c2bf6b61467747ad1fb36bf670ce770cbdc87", "commitAfterChange": "4969d1adad01d61d7e4d924f66bbdcbf37351dd4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t/* Invalid childID means the application did not implement getFocus, so return the native focus. */", "-\t\tif (OS.CFEqual(axuielementref, osChildID[0])) {", "-\t\t\tboolean hasFocus =  control.isFocusControl();", "-\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "-\t\t\treturn OS.noErr;", "-\t\t}", "-\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t/* Invalid childID at this point means the application did not implement getFocus. */", "+\t\treturn OS.eventNotHandledErr;"]}], "num": 5549}