{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5faebeeee5dfabf5cb5cced2dd8edb75", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a59f1bc9006fe5baa59e0a9e337a08", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "7103c6eb99090c2dae5cc5a7a125ba5c0bc046b6", "commitAfterChange": "570b5fc0d382bc478b5f6f4f7310bb7c3c790232", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["+\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in GTK.  When an application opens a new modal top level", "+\t\t\t\t* shell from inside the \"select_row\" signal, the list does not get the", "+\t\t\t\t* use up and does not release grabs.  The fix is to release the grabs", "+\t\t\t\t* when focus is lost.", "+\t\t\t\t*/", "+\t\t\t\tGdkEventFocus focusEvent = new GdkEventFocus ();", "+\t\t\t\tOS.memmove (focusEvent, int0, GdkEventFocus.sizeof);", "+\t\t\t\tif (focusEvent.in == 0) {", "+\t\t\t\t\tOS.gtk_grab_remove (handle);", "+\t\t\t\t\tOS.gdk_pointer_ungrab (0);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d509afa6ee9f0085de9e90c5e915a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "97b2e98b83cc9cb08ef12743abb461952c339bb2", "commitAfterChange": "c8d335c881f56821b775c40e40139d58a2db776e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void dispose()", "signatureAfterChange": " public void dispose()", "diff": ["+\t\t\t/* Regenerate the mask if necessary */\r", "+\t\t\tif (image.transparentPixel != -1) {\r", "+\t\t\t\tPhImage_t phImage = new PhImage_t ();\r", "+\t\t\t\tOS.memmove(phImage, image.handle, PhImage_t.sizeof);\r", "+\t\t\t\tif (phImage.mask_bm == 0) {\r", "+\t\t\t\t\tcreateMask(image.handle, phImage.type, image.transparentPixel);\r", "+\t\t\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d058217fc6cc4a064341b62d1e87ec30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7103c6eb99090c2dae5cc5a7a125ba5c0bc046b6", "commitAfterChange": "570b5fc0d382bc478b5f6f4f7310bb7c3c790232", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["+\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in GTK.  When an application opens a new modal top level", "+\t\t\t\t* shell from inside the \"tree_select_row\" signal, the tree does not", "+\t\t\t\t* get the mouse up and does not release grabs.  The fix is to release", "+\t\t\t\t* the grabs when focus is lost.", "+\t\t\t\t*/", "+\t\t\t\tGdkEventFocus focusEvent = new GdkEventFocus ();", "+\t\t\t\tOS.memmove (focusEvent, int0, GdkEventFocus.sizeof);", "+\t\t\t\tif (focusEvent.in == 0) {", "+\t\t\t\t\tOS.gtk_grab_remove (handle);", "+\t\t\t\t\tOS.gdk_pointer_ungrab (0);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2122b11d779b014b6251cdcb0d02c03", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7103c6eb99090c2dae5cc5a7a125ba5c0bc046b6", "commitAfterChange": "570b5fc0d382bc478b5f6f4f7310bb7c3c790232", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "signatureAfterChange": "  int processEvent (int eventNumber, int int0, int int1, int int2)", "diff": ["+\t\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\t\t/*", "+\t\t\t\t* Bug in GTK.  When an application opens a new modal top level", "+\t\t\t\t* shell from inside the \"select_row\" signal, the list does not get the", "+\t\t\t\t* use up and does not release grabs.  The fix is to release the grabs", "+\t\t\t\t* when focus is lost.", "+\t\t\t\t*/", "+\t\t\t\tGdkEventFocus focusEvent = new GdkEventFocus ();", "+\t\t\t\tOS.memmove (focusEvent, int0, GdkEventFocus.sizeof);", "+\t\t\t\tif (focusEvent.in == 0) {", "+\t\t\t\t\tOS.gtk_grab_remove (handle);", "+\t\t\t\t\tOS.gdk_pointer_ungrab (0);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}"]}], "num": 10274}