{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fac50879822c75e1a1f64b864353ecb2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81151cee093548bc989171a9e3e98eaa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dfd4650fd75100a5a002cab81ff3277b16862845", "commitAfterChange": "d01fac9d213e0fa304edfed85d0f0844e9d59792", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void setForeground (Color color)", "signatureAfterChange": " public void setForeground (Color color)", "diff": ["-\tif (data.foregroundPattern != null) {", "-\t\tif (data.gdipPen != 0) {", "-\t\t\tGdip.Pen_delete(data.gdipPen);", "-\t\t\tdata.gdipPen = 0;", "-\t\t}", "-\t\tdata.foregroundPattern = null;\t\t", "-\t}", "-\tif (OS.GetTextColor(handle) == color.handle) return;", "+\tif (data.foregroundPattern == null && color.handle == data.foreground) return;", "+\tdata.foregroundPattern = null;", "-\tOS.SetTextColor(handle, color.handle);", "-\tsetPen(color.handle, -1, -1, -1, -1, data.dashes);", "+\tdata.state &= ~(FOREGROUND | FOREGROUND_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3380bf9ae6b948f06855db31fab80431", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "c4f17311b55f12173e13af22fbe9b7532cadaaec", "commitAfterChange": "f842226b7503c6c3a5f7116f813ed0cd9148a642", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-\tif (data.control == 0) {", "-\t\tint width = 0, height = 0;", "+\tRect bounds = null;", "+\tint width = 0, height = 0;", "+\tif (data.control != 0) {", "+\t\tbounds = new Rect();", "+\t\tOS.GetControlBounds(data.control, bounds);", "+\t\twidth = bounds.right - bounds.left;", "+\t\theight = bounds.bottom - bounds.top;", "+\t} else {", "-\t\tint clipping = region.handle;", "-\t\tOS.SetRectRgn(clipping, (short) 0, (short) 0, (short) width, (short) height);", "-\t\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "-\t\treturn;", "-\tRect bounds = new Rect();", "-\tOS.GetControlBounds(data.control, bounds);", "-\tOS.RectRgn(clipping, bounds);", "-\tOS.OffsetRgn(clipping, (short)-bounds.left, (short)-bounds.top);", "+\tOS.SetRectRgn(clipping, (short)0, (short)0, (short)width, (short)height);", "+\t\t// Note that bounds has the control bounds"]}], "num": 29997}