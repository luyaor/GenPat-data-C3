{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0d6595648ee2a66fba39ae28705d256", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b16f013a3c29fb4430f40ec68620c06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java", "commitBeforeChange": "ab89da0ca40d47c40703d0668cf364b16aa9ab20", "commitAfterChange": "3aa9f7295eedae1867f78481ff4de0fed20e6587", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t  \t\tpublic String open ()", "signatureAfterChange": " \t  \t\tpublic String open ()", "diff": ["-\t\t\tString oldPos = \"0\", oldOffset = \"0\", oldControl = \"\";", "-\t\t\tboolean enablePos = true, enableControl = false;", "+\t\t\tString oldPos = \"0\", oldControl = \"\", oldAlign = \"DEFAULT\", oldOffset = \"0\";", "+\t\t\tboolean isControl = false;", "-\t\t\t\tif (first == '[') {", "+\t\t\t\tif (Character.isLetter(first)) {", "-\t\t\t\t\toldControl = oldAttach.substring (3, oldAttach.indexOf (','));", "-\t\t\t\t\tenablePos = false;", "-\t\t\t\t\tenableControl = true;", "+\t\t\t\t\tisControl = true;", "+\t\t\t\t\toldControl = oldAttach.substring (0, oldAttach.indexOf (','));", "+\t\t\t\t\toldAlign = oldAttach.substring (oldAttach.indexOf (':') + 1);", "+\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1, oldAttach.indexOf (':'));", "-\t\t\t\t}", "-\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1);", "-\t\t\t\tif (oldOffset.endsWith (\")\")) {", "-\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1,oldAttach.indexOf (\" \"));", "+\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1);", "+\t\t\t\t\tif (oldOffset.endsWith (\")\")) { // i.e. (Default)", "+\t\t\t\t\t\toldOffset = oldOffset.substring (0, oldOffset.indexOf (' '));", "+\t\t\t\t\t}", "-\t\t\tposButton.setSelection (enablePos);\t\t\t", "+\t\t\tposButton.setSelection (!isControl);\t\t\t", "+\t\t\tposition.setEnabled (!isControl);\t\t\t", "-\t\t\tcontButton.setSelection (enableControl);", "+\t\t\tcontButton.setSelection (isControl);", "-\t\t\tcontrol.setEnabled (enableControl);", "+\t\t\tcontrol.setEnabled (isControl);", "+\t\t\t", "+\t\t\t/* Add alignment field */", "+\t\t\tnew Label (shell, SWT.NONE).setText (LayoutExample.getResourceString (\"Alignment\"));", "+\t\t\tfinal Combo alignment = new Combo (shell, SWT.NONE);", "+\t\t\tString[] alignmentValues;", "+\t\t\tif (col == LEFT_COL || col == RIGHT_COL) {", "+\t\t\t\talignmentValues = new String [] {\"SWT.LEFT\", \"SWT.RIGHT\", \"SWT.CENTER\", \"SWT.DEFAULT\"};", "+\t\t\t} else {", "+\t\t\t\t// col == TOP_COL || col == BOTTOM_COL", "+\t\t\t\talignmentValues = new String [] {\"SWT.TOP\", \"SWT.BOTTOM\", \"SWT.CENTER\", \"SWT.DEFAULT\"};", "+\t\t\t}", "+\t\t\talignment.setItems (alignmentValues);", "+\t\t\talignment.setText (\"SWT.\" + oldAlign);", "+\t\t\talignment.setEnabled (isControl);", "+\t\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "+\t\t\tdata.horizontalSpan = 2;", "+\t\t\talignment.setLayoutData (data);", "+\t\t\t\t\talignment.setEnabled(false);", "+\t\t\t\t\talignment.setEnabled(true);", "-\t\t\t/* Enter button sets data into table */", "+\t\t\tButton clear = new Button (shell, SWT.PUSH);", "+\t\t\tclear.setText (LayoutExample.getResourceString (\"Clear\"));", "+\t\t\tclear.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_END));", "+\t\t\tclear.addSelectionListener (new SelectionAdapter () {", "+\t\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\t\tresult = \"\";", "+\t\t\t\t\tshell.close ();", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t/* OK button sets data into table */", "-\t\t\tok.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_END));", "+\t\t\tok.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_CENTER));", "-\t\t\t\t\tif (controlInput.length () == 0) posButton.setSelection (true);", "+\t\t\t\t\talignmentInput = alignment.getText ().substring (4);", "-\t\t\t\t\tif (posButton.getSelection()) {", "-\t\t\t\t\t\tresult = (positionInput + \",\" + offsetInput);", "+\t\t\t\t\tif (posButton.getSelection() || controlInput.length () == 0) {", "+\t\t\t\t\t\tresult = positionInput + \",\" + offsetInput;", "-\t\t\t\t\t\tresult = (\"[c]\" + controlInput + \",\" + offsetInput);", "+\t\t\t\t\t\tresult = controlInput + \",\" + offsetInput + \":\" + alignmentInput;", "-\t\t\tcancel.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_CENTER));", "+\t\t\tcancel.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_BEGINNING));", "-\t\t\t\t\tshell.close ();", "-\t\t\t\t}", "-\t\t\t});", "-\t\t\tButton clear = new Button (shell, SWT.PUSH);", "-\t\t\tclear.setText (LayoutExample.getResourceString (\"Clear\"));", "-\t\t\tclear.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_BEGINNING));", "-\t\t\tclear.addSelectionListener (new SelectionAdapter () {", "-\t\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\t\tresult = \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09786f991eb49cd3eab9899898590a98", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java", "commitBeforeChange": "ab89da0ca40d47c40703d0668cf364b16aa9ab20", "commitAfterChange": "3aa9f7295eedae1867f78481ff4de0fed20e6587", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " \t  \t\tpublic String open ()", "signatureAfterChange": " \t  \t\tpublic String open ()", "diff": ["-\t\t\tString oldPos = \"0\", oldOffset = \"0\", oldControl = \"\";", "-\t\t\tboolean enablePos = true, enableControl = false;", "+\t\t\tString oldPos = \"0\", oldControl = \"\", oldAlign = \"DEFAULT\", oldOffset = \"0\";", "+\t\t\tboolean isControl = false;", "-\t\t\t\tif (first == '[') {", "+\t\t\t\tif (Character.isLetter(first)) {", "-\t\t\t\t\toldControl = oldAttach.substring (3, oldAttach.indexOf (','));", "-\t\t\t\t\tenablePos = false;", "-\t\t\t\t\tenableControl = true;", "+\t\t\t\t\tisControl = true;", "+\t\t\t\t\toldControl = oldAttach.substring (0, oldAttach.indexOf (','));", "+\t\t\t\t\toldAlign = oldAttach.substring (oldAttach.indexOf (':') + 1);", "+\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1, oldAttach.indexOf (':'));", "-\t\t\t\t}", "-\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1);", "-\t\t\t\tif (oldOffset.endsWith (\")\")) {", "-\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1,oldAttach.indexOf (\" \"));", "+\t\t\t\t\toldOffset = oldAttach.substring (oldAttach.indexOf (',') + 1);", "+\t\t\t\t\tif (oldOffset.endsWith (\")\")) { // i.e. (Default)", "+\t\t\t\t\t\toldOffset = oldOffset.substring (0, oldOffset.indexOf (' '));", "+\t\t\t\t\t}", "-\t\t\tposButton.setSelection (enablePos);\t\t\t", "+\t\t\tposButton.setSelection (!isControl);\t\t\t", "+\t\t\tposition.setEnabled (!isControl);\t\t\t", "-\t\t\tcontButton.setSelection (enableControl);", "+\t\t\tcontButton.setSelection (isControl);", "-\t\t\tcontrol.setEnabled (enableControl);", "+\t\t\tcontrol.setEnabled (isControl);", "+\t\t\t", "+\t\t\t/* Add alignment field */", "+\t\t\tnew Label (shell, SWT.NONE).setText (LayoutExample.getResourceString (\"Alignment\"));", "+\t\t\tfinal Combo alignment = new Combo (shell, SWT.NONE);", "+\t\t\tString[] alignmentValues;", "+\t\t\tif (col == LEFT_COL || col == RIGHT_COL) {", "+\t\t\t\talignmentValues = new String [] {\"SWT.LEFT\", \"SWT.RIGHT\", \"SWT.CENTER\", \"SWT.DEFAULT\"};", "+\t\t\t} else {", "+\t\t\t\t// col == TOP_COL || col == BOTTOM_COL", "+\t\t\t\talignmentValues = new String [] {\"SWT.TOP\", \"SWT.BOTTOM\", \"SWT.CENTER\", \"SWT.DEFAULT\"};", "+\t\t\t}", "+\t\t\talignment.setItems (alignmentValues);", "+\t\t\talignment.setText (\"SWT.\" + oldAlign);", "+\t\t\talignment.setEnabled (isControl);", "+\t\t\tdata = new GridData (GridData.FILL_HORIZONTAL);", "+\t\t\tdata.horizontalSpan = 2;", "+\t\t\talignment.setLayoutData (data);", "+\t\t\t\t\talignment.setEnabled(false);", "+\t\t\t\t\talignment.setEnabled(true);", "-\t\t\t/* Enter button sets data into table */", "+\t\t\tButton clear = new Button (shell, SWT.PUSH);", "+\t\t\tclear.setText (LayoutExample.getResourceString (\"Clear\"));", "+\t\t\tclear.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_END));", "+\t\t\tclear.addSelectionListener (new SelectionAdapter () {", "+\t\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\t\tresult = \"\";", "+\t\t\t\t\tshell.close ();", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t/* OK button sets data into table */", "-\t\t\tok.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_END));", "+\t\t\tok.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_CENTER));", "-\t\t\t\t\tif (controlInput.length () == 0) posButton.setSelection (true);", "+\t\t\t\t\talignmentInput = alignment.getText ().substring (4);", "-\t\t\t\t\tif (posButton.getSelection()) {", "-\t\t\t\t\t\tresult = (positionInput + \",\" + offsetInput);", "+\t\t\t\t\tif (posButton.getSelection() || controlInput.length () == 0) {", "+\t\t\t\t\t\tresult = positionInput + \",\" + offsetInput;", "-\t\t\t\t\t\tresult = (\"[c]\" + controlInput + \",\" + offsetInput);", "+\t\t\t\t\t\tresult = controlInput + \",\" + offsetInput + \":\" + alignmentInput;", "-\t\t\tcancel.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_CENTER));", "+\t\t\tcancel.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_BEGINNING));", "-\t\t\t\t\tshell.close ();", "-\t\t\t\t}", "-\t\t\t});", "-\t\t\tButton clear = new Button (shell, SWT.PUSH);", "-\t\t\tclear.setText (LayoutExample.getResourceString (\"Clear\"));", "-\t\t\tclear.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_BEGINNING));", "-\t\t\tclear.addSelectionListener (new SelectionAdapter () {", "-\t\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\t\tresult = \"\";"]}], "num": 41642}