{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9e53bb73e1d3a47012d33ce411baf6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b58b6be15839ace9a69f853f22efa64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "7734e33fd2be725d8790ab8564b1a33101cf964f", "commitAfterChange": "7b108c7af4c59e23eeac37b379938ac60596788b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public boolean loadFont (String path)", "signatureAfterChange": " public boolean loadFont (String path)", "diff": ["-\tchar [] chars = new char [path.length ()];", "-\tpath.getChars (0, chars.length, chars, 0);", "-\t//TODO not done", "+\tNSString nsPath = NSString.stringWith(path);", "+\tint /*long*/ fsRepresentation = nsPath.fileSystemRepresentation();", "+\t", "+\tif (fsRepresentation != 0) {", "+\t\tbyte [] fsRef = new byte [80];", "+\t\tboolean [] isDirectory = new boolean[1];", "+\t\tif (OS.FSPathMakeRef (fsRepresentation, fsRef, isDirectory) == OS.noErr) {", "+\t\t\tresult = OS.ATSFontActivateFromFileReference (fsRef, OS.kATSFontContextLocal, OS.kATSFontFormatUnspecified, 0, OS.kATSOptionFlagsDefault, null) == OS.noErr;", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aeaa7631a1e85e8bf918dfe28f4df1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5102ca46128f75a4fa5bd36885cf2481e13a4693", "commitAfterChange": "5452b7e3038f5d166f884d79424787c3413850bc", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int gtk_changed (int widget)", "signatureAfterChange": "  int gtk_changed (int widget)", "diff": ["-\tsendEvent (SWT.Modify);", "+\t/*", "+\t* Feature in GTK.  When the user types, GTK positions", "+\t* the caret after sending the changed signal.  This", "+\t* means that application code that attempts to position", "+\t* the caret during a changed signal will fail.  The fix", "+\t* is to post the modify event when the user is typing.", "+\t*/", "+\tboolean keyPress = false;", "+\tint /*long*/ eventPtr = OS.gtk_get_current_event ();", "+\tif (eventPtr != 0) {", "+\t\tGdkEventKey gdkEvent = new GdkEventKey ();", "+\t\tOS.memmove (gdkEvent, eventPtr, GdkEventKey.sizeof);", "+\t\tswitch (gdkEvent.type) {", "+\t\t\tcase OS.GDK_KEY_PRESS:", "+\t\t\t\tkeyPress = true;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tOS.gdk_event_free (eventPtr);", "+\t}", "+\tif (keyPress) {", "+\t\tpostEvent (SWT.Modify);", "+\t} else {", "+\t\tsendEvent (SWT.Modify);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc94369c7cf386750825b5d726542d72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "046b2b1ccf3f21ac6303aceb562ded417737fefc", "commitAfterChange": "b00764edfb26d776b9fe9f82005b87f9053f74be", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t/* Invalid childID at this point means the application did not implement getFocus. */", "-\t\treturn OS.eventNotHandledErr;", "+\t\t/* Invalid childID at this point means the application did not implement getFocus, so return the native focus. */", "+\t\tboolean hasFocus = false;", "+\t\tint focusWindow = OS.GetUserFocusWindow ();", "+\t\tif (focusWindow != 0) {", "+\t\t\tint [] focusControl = new int [1];", "+\t\t\tOS.GetKeyboardFocus (focusWindow, focusControl);", "+\t\t\tif (focusControl [0] == control.handle) hasFocus = true;", "+\t\t}", "+\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "+\t\treturn OS.noErr;"]}], "num": 56390}