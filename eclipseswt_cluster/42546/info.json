{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a81a2c16801d939097d67ce22e88de5a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e986d7397ac96329f5c4e5726fa797c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebFrameLoadDelegate.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  boolean showCertificateDialog (int webView, final String failingUrlString, final String description, int certificate)", "signatureAfterChange": "  boolean showCertificateDialog (int webView, final String failingUrlString, final String description, int certificate)", "diff": ["-\tshell.setText (Compatibility.getMessage(\"SWT_InvalidCert_Title\")); //$NON-NLS-1$", "+\tshell.setText (Compatibility.getMessage (\"SWT_InvalidCert_Title\")); //$NON-NLS-1$", "-\t//if unable to get host, show the url", "-\tString host = failingUrlString;", "+\tString host = null;", "-\t\thost = new URL(failingUrlString).getHost();", "+\t\thost = new URL (failingUrlString).getHost ();", "-\t\t", "+\t\t/* show the url instead */", "+\t\thost = failingUrlString;", "-\tString message = \"\\n\";", "-\tmessage += Compatibility.getMessage (\"SWT_InvalidCert_Message\", new String[] {host}); //$NON-NLS-1$", "-\tmessage += \"\\n\\n\" + Compatibility.getMessage (description);", "-\tmessage += \"\\n\" + Compatibility.getMessage(\"SWT_InvalidCert_Connect\"); //$NON-NLS-1$", "-\tmessage += \"\\n\";", "-\tlabel.setText(message);", "-\t", "+\tStringBuffer message = new StringBuffer (\"\\n\"); //$NON-NLS-1$", "+\tmessage.append (Compatibility.getMessage (\"SWT_InvalidCert_Message\", new String[] {host})); //$NON-NLS-1$", "+\tmessage.append (\"\\n\\n\"); //$NON-NLS-1$", "+\tmessage.append (Compatibility.getMessage (description));", "+\tmessage.append (\"\\n\"); //$NON-NLS-1$", "+\tmessage.append (Compatibility.getMessage (\"SWT_InvalidCert_Connect\")); //$NON-NLS-1$", "+\tmessage.append (\"\\n\"); //$NON-NLS-1$", "+\tlabel.setText(message.toString ());", "+", "-\tint maxWidth = monitor.getBounds ().width * 1 / 3;", "+\tint maxWidth = monitor.getBounds ().width * 2 / 3;", "-\t\t\t\t//showCertificate() //:TODO Not sure how to show the certificate", "+\t\t\t\t//showCertificate() //TODO Not sure how to show the certificate", "+\tbuttons[2].setEnabled (false);", "-\t", "+", "-\tint x, y;", "-\tx = parent.getLocation ().x + (parentSize.width - shellSize.width)/2;", "-\ty = parent.getLocation ().y + (parentSize.height - shellSize.height)/2;", "+\tint x = parent.getLocation ().x + (parentSize.width - shellSize.width) / 2;", "+\tint y = parent.getLocation ().y + (parentSize.height - shellSize.height) / 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c80014f6e306f9f0c92963965d9a71f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/FontData.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\treturn getName() + \"|\" + getHeight() + \"|\" + getStyle();", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append(\"1|\");", "+\tbuffer.append(getName());", "+\tbuffer.append(\"|\");", "+\tbuffer.append(getHeight());", "+\tbuffer.append(\"|\");", "+\tbuffer.append(getStyle());", "+\tbuffer.append(\"|\");", "+\tbuffer.append(\"CARBON|1|\");\t", "+\treturn buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49328b6bff1562585deffde9f4101f37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "3a5ece72c305410ded2cd14b2fb9617ac7003ab1", "commitAfterChange": "00d9a929233cc0e4c7aa22a7ff5b7562dd581371", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "  void generateSendsMetaData()", "signatureAfterChange": "  void generateSendsMetaData()", "diff": ["+\tString className = getClassName(mainClassName);", "+\tString packageName = getPackageName(mainClassName).replace('.', '_');", "-\t\t\tif (\"class\".equals(node.getNodeName())) {", "-//\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "-//\t\t\t\tString name = attributes.getNamedItem(\"name\").getNodeValue();", "-//\t\t\t\tif (getGenerateClass(name)) {", "-\t\t\t\t\tNodeList methods = node.getChildNodes();", "-\t\t\t\t\tfor (int j = 0; j < methods.getLength(); j++) {", "-\t\t\t\t\t\tNode method = methods.item(j);", "-\t\t\t\t\t\tif (\"method\".equals(method.getNodeName())) {", "-\t\t\t\t\t\t\tNode returnNode = getReturnNode(method.getChildNodes());", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\t\t\tif (returnNode != null && isStruct(returnNode)) {", "-\t\t\t\t\t\t\t\tbuffer.append(\"OS_objc_1msgSend_1stret__\");", "-\t\t\t\t\t\t\t\tbuffer.append(\"Lorg_eclipse_swt_internal_cocoa_\");", "-\t\t\t\t\t\t\t\tbuffer.append(getJavaType(returnNode));", "-\t\t\t\t\t\t\t\tbuffer.append(\"_2\");", "-\t\t\t\t\t\t\t} else if (returnNode != null && isFloatingPoint(returnNode)) {", "-\t\t\t\t\t\t\t\tbuffer.append(\"OS_objc_1msgSend_1fpret__\");", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tbuffer.append(\"OS_objc_1msgSend__\");", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbuffer.append(\"II\");", "-\t\t\t\t\t\t\tNodeList params = method.getChildNodes();", "-\t\t\t\t\t\t\tfor (int k = 0; k < params.getLength(); k++) {", "-\t\t\t\t\t\t\t\tNode param = params.item(k);", "-\t\t\t\t\t\t\t\tif (\"arg\".equals(param.getNodeName())) {", "-\t\t\t\t\t\t\t\t\tif (isStruct(param)) {", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(\"Lorg_eclipse_swt_internal_cocoa_\");", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(getJavaType(param));", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(\"_2\");", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tbuffer.append(getJNIType(param));", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\tif (\"class\".equals(node.getNodeName()) && getGen(node)) {", "+\t\t\t\tNodeList methods = node.getChildNodes();", "+\t\t\t\tfor (int j = 0; j < methods.getLength(); j++) {", "+\t\t\t\t\tNode method = methods.item(j);", "+\t\t\t\t\tif (\"method\".equals(method.getNodeName())) {", "+\t\t\t\t\t\tNode returnNode = getReturnNode(method.getChildNodes());", "+\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\t\tbuffer.append(className);", "+\t\t\t\t\t\tif (returnNode != null && isStruct(returnNode)) {", "+\t\t\t\t\t\t\tbuffer.append(\"_objc_1msgSend_1stret__\");", "+\t\t\t\t\t\t\tbuffer.append(\"L\");", "+\t\t\t\t\t\t\tbuffer.append(packageName);", "+\t\t\t\t\t\t\tbuffer.append(\".\");", "+\t\t\t\t\t\t\tbuffer.append(getJavaType(returnNode));", "+\t\t\t\t\t\t\tbuffer.append(\"_2\");", "+\t\t\t\t\t\t} else if (returnNode != null && isFloatingPoint(returnNode)) {", "+\t\t\t\t\t\t\tbuffer.append(\"_objc_1msgSend_1fpret__\");", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbuffer.append(\"_objc_1msgSend__\");", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbuffer.append(\"II\");", "+\t\t\t\t\t\tNodeList params = method.getChildNodes();", "+\t\t\t\t\t\tfor (int k = 0; k < params.getLength(); k++) {", "+\t\t\t\t\t\t\tNode param = params.item(k);", "+\t\t\t\t\t\t\tif (\"arg\".equals(param.getNodeName())) {", "+\t\t\t\t\t\t\t\tif (isStruct(param)) {", "+\t\t\t\t\t\t\t\t\tbuffer.append(\"L\");", "+\t\t\t\t\t\t\t\t\tbuffer.append(packageName);", "+\t\t\t\t\t\t\t\t\tbuffer.append(\"_\");", "+\t\t\t\t\t\t\t\t\tbuffer.append(getJavaType(param));", "+\t\t\t\t\t\t\t\t\tbuffer.append(\"_2\");", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tbuffer.append(getJNIType(param));", "-\t\t\t\t\t\t\tString key = buffer.toString();", "-\t\t\t\t\t\t\tif (set.get(key) == null) set.put(key, method);", "+\t\t\t\t\t\tString key = buffer.toString();", "+\t\t\t\t\t\tif (set.get(key) == null) set.put(key, method);", "-//\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5574574bcd9d31ceb7ed9326dff2d9c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "fac04618a9f5caa285d1218c2b0b05ce35f50fc3", "commitAfterChange": "2edaf1e14fe5b094a3a9df17b3726c4f202e86c7", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public void setAccelerator (int accelerator)", "signatureAfterChange": "\r public void setAccelerator (int accelerator)", "diff": ["-\t\tString key = \"<Key>\" + keysymName (keysym);\r", "+\t\tString key = ctrl + alt + shift + \"<Key>\" + keysymName (keysym);\r", "+\t\tStringBuffer allKeys = new StringBuffer (key);\r", "+\t\tallKeys.append (\",Lock \");\r", "+\t\tallKeys.append (key);\r", "+\t\tallKeys.append (\",Mod2 \");\r", "+\t\tallKeys.append (key);\r", "+\t\tallKeys.append (\",Lock Mod2 \");\r", "+\t\tallKeys.append (key);\r", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, ctrl + alt + shift + key, true);\t\t\r", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, allKeys.toString (), true);\t\t\r"]}], "num": 42546}