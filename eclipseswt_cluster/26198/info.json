{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e53ccb02890fdeadd6d1519c3958bb8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef88155c9c6efed5f676e223d65e0f23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "8fa7f7faacb842324a4b31775936f9e83dd5a81b", "commitAfterChange": "9ab14bbc386609b0008cce66eda40fcd56285bea", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  boolean handleEvent (Object[] arguments)", "signatureAfterChange": "  boolean handleEvent (Object[] arguments)", "diff": ["-\tif (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "-\t}", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//if (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "+\t//}", "-\t} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "-\t\tmouseEvent.type = SWT.MouseEnter;", "-\t} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tmouseEvent.type = SWT.MouseExit;", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "+\t//\tmouseEvent.type = SWT.MouseEnter;", "+\t//} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tmouseEvent.type = SWT.MouseExit;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40959d22de962a93cd9c49a27209f230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f8603d27e9213c51bf69c5971c31dc339ce2fd21", "commitAfterChange": "d9624591d490e17b2e8ec4717bcc021a083b5260", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "signatureAfterChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "diff": ["-\t\tNSRange attributeRange = new NSRange();", "-\t\t", "-\t\t\tif (event.start == -1 && event.end == -1) return stringFragment;", "-\t\t\t", "+\t\t\tif (event.start == -1 && event.end == -1) {", "+\t\t\t\treturn stringFragment;", "+\t\t\t} else {", "+\t\t\t\tevent.offset = event.end;", "+\t\t\t}\t\t\t", "+", "+\t\t\tNSRange attributeRange = new NSRange();", "-", "-\t\t\tif (attributeRange.location < 0) {", "-\t\t\t\tattributeRange.length -= -attributeRange.location;", "-\t\t\t\tattributeRange.location = 0;", "-\t\t\t}", "-", "-\t\t\tif (attributeRange.location + attributeRange.length > range.length) {", "-\t\t\t\tattributeRange.length = range.length - attributeRange.location;", "-\t\t\t}", "-\t\t\t", "-\t\t\tevent.offset = event.end;", "-", "-\t\t\trange.location = 0;"]}], "num": 26198}