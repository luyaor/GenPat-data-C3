{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec6242216f84db267f09e71894e0146a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71891c0eeea7eb216a53ad4ad091a340", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e494cafa53664960bae3771ecc9cc57f20b46dc2", "commitAfterChange": "f8aa4c0a9c753e8c5b40f8b00f8bb6d53f87813c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " RECT getBounds (int index, boolean getText, boolean getImage, boolean fullText, boolean fullImage, boolean clip, int hDC)", "signatureAfterChange": " RECT getBounds (int index, boolean getText, boolean getImage, boolean fullText, boolean fullImage, boolean clip, int hDC)", "diff": ["-\t\t\t\tString string = index == 0 ? text : strings != null ? strings [index] : null;", "-\t\t\t\tif (string != null) {", "-\t\t\t\t\tRECT textRect = new RECT ();", "-\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, false);", "-\t\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "-\t\t\t\t\tint hNewDC = hDC, hFont = 0;", "-\t\t\t\t\tif (hDC == 0) {", "-\t\t\t\t\t\thNewDC = OS.GetDC (hwnd);", "-\t\t\t\t\t\thFont = cellFont != null ? cellFont [index] : -1;", "-\t\t\t\t\t\tif (hFont == -1) hFont = font;", "-\t\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "-\t\t\t\t\t\thFont = OS.SelectObject (hNewDC, hFont);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.DrawText (hNewDC, buffer, buffer.length (), textRect, flags);", "-\t\t\t\t\tif (hDC == 0) {", "-\t\t\t\t\t\tOS.SelectObject (hNewDC, hFont);", "-\t\t\t\t\t\tOS.ReleaseDC (hwnd, hNewDC);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (getImage) {", "-\t\t\t\t\t\trect.right += textRect.right - textRect.left + Tree.INSET * 3;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\trect.left = rect.right + Tree.INSET;", "-\t\t\t\t\t\trect.right = rect.left + (textRect.right - textRect.left) + Tree.INSET;", "+\t\t\t\tif (fullText) {", "+\t\t\t\t\trect.left = rect.right + Tree.INSET;", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t} else {", "+\t\t\t\t\tString string = index == 0 ? text : strings != null ? strings [index] : null;", "+\t\t\t\t\tif (string != null) {", "+\t\t\t\t\t\tRECT textRect = new RECT ();", "+\t\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, false);", "+\t\t\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "+\t\t\t\t\t\tint hNewDC = hDC, hFont = 0;", "+\t\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\t\thNewDC = OS.GetDC (hwnd);", "+\t\t\t\t\t\t\thFont = cellFont != null ? cellFont [index] : -1;", "+\t\t\t\t\t\t\tif (hFont == -1) hFont = font;", "+\t\t\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\t\t\thFont = OS.SelectObject (hNewDC, hFont);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.DrawText (hNewDC, buffer, buffer.length (), textRect, flags);", "+\t\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\t\tOS.SelectObject (hNewDC, hFont);", "+\t\t\t\t\t\t\tOS.ReleaseDC (hwnd, hNewDC);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (getImage) {", "+\t\t\t\t\t\t\trect.right += textRect.right - textRect.left + Tree.INSET * 3;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trect.left = rect.right + Tree.INSET;", "+\t\t\t\t\t\t\trect.right = rect.left + (textRect.right - textRect.left) + Tree.INSET;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d19db31489b789ea7c645c9f1ce58a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "d60307042554a2ad80509163fd1d15e5566b488d", "commitAfterChange": "501cddef55d98c472a410dbb933c0adba1cf9644", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " RECT getBounds (int index, boolean getText, boolean getImage, boolean full)", "signatureAfterChange": " RECT getBounds (int index, boolean getText, boolean getImage, boolean fullText, boolean fullImage, boolean clip, int hDC)", "diff": ["-//TODO - take into account grid (add boolean arg) to damage less during redraw", "+//TODO - take into account grid (add boolean arg) to damage less during redraw", "+RECT getBounds (int index, boolean getText, boolean getImage, boolean fullText, boolean fullImage, boolean clip, int hDC) {", "+\tint hwnd = parent.handle; ", "-\t\tint hwnd = parent.handle;", "-\t\tint hwnd = parent.handle; ", "-\t\tif (getImage) {", "+\t\tif (getImage && !fullImage) {", "-\t\tif (getText && hwndHeader != 0 && columnCount != 0) {", "-\t\t\tRECT headerRect = new RECT ();", "-\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect) == 0) {", "-\t\t\t\treturn new RECT ();", "-\t\t\t}", "-\t\t\tif (full || headerRect.right < rect.right) {", "-\t\t\t\trect.right = headerRect.right;", "+\t\tif (fullText || fullImage || clip) {", "+\t\t\tif (hwndHeader != 0 && columnCount != 0) {", "+\t\t\t\tRECT headerRect = new RECT ();", "+\t\t\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect) == 0) {", "+\t\t\t\t\treturn new RECT ();", "+\t\t\t\t}", "+\t\t\t\tif (fullText) rect.right = headerRect.right;", "+\t\t\t\tif (fullImage) rect.left = headerRect.left;", "+\t\t\t\tif (clip && headerRect.right < rect.right) {", "+\t\t\t\t\trect.right = headerRect.right;", "+\t\t\t\t}", "-\t\tint hwnd = parent.handle;", "-\t\trect.right = headerRect.right;", "-\t\tif (!getText || !getImage) {", "+\t\tif (fullText) {", "+\t\t\trect.right = headerRect.right;", "+\t\t} else {", "+\t\t\trect.right = headerRect.left;", "-\t\t\t\tif (getImage) {", "-\t\t\t\t\trect.right = Math.min (rect.left + size.x, rect.right);", "-\t\t\t\t} else {", "-\t\t\t\t\trect.left = Math.min (rect.left + size.x, rect.right);", "+\t\t\t\trect.right += size.x;", "+\t\t\t}", "+\t\t\tif (getText) {", "+\t\t\t\tString string = index == 0 ? text : strings != null ? strings [index] : null;", "+\t\t\t\tif (string != null) {", "+\t\t\t\t\tRECT textRect = new RECT ();", "+\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, false);", "+\t\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "+\t\t\t\t\tint hNewDC = hDC, hFont = 0;", "+\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\thNewDC = OS.GetDC (hwnd);", "+\t\t\t\t\t\thFont = cellFont != null ? cellFont [index] : -1;", "+\t\t\t\t\t\tif (hFont == -1) hFont = font;", "+\t\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\t\thFont = OS.SelectObject (hNewDC, hFont);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.DrawText (hNewDC, buffer, buffer.length (), textRect, flags);", "+\t\t\t\t\tif (hDC == 0) {", "+\t\t\t\t\t\tOS.SelectObject (hNewDC, hFont);", "+\t\t\t\t\t\tOS.ReleaseDC (hwnd, hNewDC);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (getImage) {", "+\t\t\t\t\t\trect.right += textRect.right - textRect.left + Tree.INSET * 3;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\trect.left = rect.right + Tree.INSET;", "+\t\t\t\t\t\trect.right = rect.left + (textRect.right - textRect.left) + Tree.INSET;", "+\t\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (getImage) rect.right = rect.left;", "+\t\t\t}", "+\t\t\tif (clip && headerRect.right < rect.right) {", "+\t\t\t\trect.right = headerRect.right;"]}], "num": 15904}