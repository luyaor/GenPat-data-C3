{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f82ac9c8489c1e0d642297ac123e1b76", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf10a9696e535e7909d3ce23d3ee5c7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "f5c7e4c9254cd6daa97b7649a31d13c6c5d0de6c", "commitAfterChange": "189429edfa9fbff796a0033ed821365347e21fb7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\t// get byte array from super", "-\tbyte[] buffer = (byte[])super.nativeToJava(transferData);", "-\tif (buffer == null) return null;", "-\t// convert byte array to a string", "-\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "-\tString string = new String (unicode);", "+\tif ( !isSupportedType(transferData) ||  transferData.pValue == 0 ) return null;", "+\tint size = transferData.format * transferData.length / 8;", "+\tif (size == 0) return null;", "+\tbyte[] buffer = new byte[size];", "+\tOS.memmove(buffer, transferData.pValue, size);", "+\tchar [] chars = Converter.mbcsToWcs (null, buffer);", "+\tString string = new String (chars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32995dbb6c6e8fc8ac6ea18cdfc78d23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "147d1615f621339f30d0227193f0b040907c9480", "commitAfterChange": "4f94a8e41c5f58fd8cc31f50891f992413c14d7f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\t// get byte array from super", "-\tbyte[] buffer = (byte[])super.nativeToJava(transferData);", "-\tif (buffer == null) return null;", "-\t// convert byte array to a string", "-\tchar [] unicode = Converter.mbcsToWcs (null, buffer);", "-\tString string = new String (unicode);", "+\tif ( !isSupportedType(transferData) ||  transferData.pValue == 0 ) return null;", "+\tint size = transferData.format * transferData.length / 8;", "+\tif (size == 0) return null;", "+\tbyte[] buffer = new byte[size];", "+\tOS.memmove(buffer, transferData.pValue, size);", "+\tchar [] chars = Converter.mbcsToWcs (null, buffer);", "+\tString string = new String (chars);"]}], "num": 38119}