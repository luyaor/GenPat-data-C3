{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4e2cfbf55f4fb7d2a8b2fe8d633baa30", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6f1b5c4a9080a15e275ace4ebb67f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1de7fc63d1a523fc6f82771c56fef441ef8f53ff", "commitAfterChange": "9436ba8c70990a20c9c536ae28590998077447e8", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public Point map (Control from, Control to, int x, int y)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["+\tint newX, newY;", "-\t\tint newPoint = OS.UIElement_TranslatePoint(from.topHandle (), point, to.topHandle ());", "-\t\tPoint result = new Point ((int)OS.Point_X (newPoint), (int)OS.Point_Y (newPoint));", "+\t\tint newPoint = OS.UIElement_TranslatePoint (from.topHandle (), point, to.topHandle ());", "+\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5);", "+\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5);", "-\t\treturn result;", "-\t\t\tPoint result = new Point ((int)OS.Point_X (newPoint), (int)OS.Point_Y (newPoint));", "+\t\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5);", "+\t\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5);", "-\t\t\treturn result;", "-\t\t\tPoint result = new Point ((int)OS.Point_X (newPoint) + shellLocation.x, (int)OS.Point_Y (newPoint) + shellLocation.y);", "+\t\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5) + shellLocation.x;", "+\t\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5) + shellLocation.y;", "-\t\t\treturn result;", "+\treturn new Point (newX, newY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322f8cfe6de2ffd93d5b94c1239f9a1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "337a83a0311fb0fd43a988850359e06ba5a19509", "commitAfterChange": "203c1b67249690c4ccb90c55bd95e084bd8950a4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "signatureAfterChange": "  boolean dragDetect (int x, int y, boolean filter, boolean [] consume)", "diff": ["-//\tRect rect = new Rect ();", "-//\tint window = OS.GetControlOwner (handle);", "-//\tCGPoint pt = new CGPoint ();", "-//\tOS.HIViewConvertPoint (pt, handle, 0);", "-//\tx += (int) pt.x;", "-//\ty += (int) pt.y;", "-//\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-//\tx += rect.left;", "-//\ty += rect.top;", "-//\torg.eclipse.swt.internal.carbon.Point pt1 = new org.eclipse.swt.internal.carbon.Point ();", "-//\tpt1.h = (short) x;", "-//\tpt1.v = (short) y;", "-//\treturn OS.WaitMouseMoved (pt1);", "-\treturn false;", "+\tNSApplication application = NSApplication.sharedApplication();", "+\tNSEvent event = application.nextEventMatchingMask(OS.NSLeftMouseDraggedMask, NSDate.distantFuture(), OS.NSDefaultRunLoopMode, true);", "+\treturn (event != null);"]}], "num": 56313}