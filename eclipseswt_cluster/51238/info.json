{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d81fadfd15ef507ae5d8acf6eb05835", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d819c17a2e1e18b73fd8769b279546a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "89dd18f56416766e9f25e99fa93a3cfdf736ff7e", "commitAfterChange": "0333c3cd6e1227d0185cdb60c13b053083d72b21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif ((object == null) || !(object instanceof byte[]) || !(isSupportedType(transferData))) {", "-\t\ttransferData.result = -1;", "-\t\treturn;", "-\t}", "+\ttransferData.result = -1;", "+\tif (object == null || !(object instanceof byte[]) || !isSupportedType(transferData)) return;", "-\tbyte[] buffer= new byte[orig.length];", "+\tbyte[] buffer = new byte[orig.length];", "-\ttransferData.data = buffer;", "+\ttransferData.data = new byte[1][];", "+\ttransferData.data[0] = buffer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399518c62a78d8c718452ad3343be553", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/wpf/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "8e746dffcecf23a840e3dfc0bae71b16f86cd38f", "commitAfterChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["+ */", "+protected void javaToNative (Object object, TransferData transferData) {", "+\tif (!checkByteArray(object) || !isSupportedType(transferData)) {", "+\t\tDND.error(DND.ERROR_INVALID_DATA);", "+\t}", "+\tbyte[] buffer = (byte[])object;", "+\tif (buffer.length == 0) return;", "+\tint typeid = OS.Byte_typeid();", "+\tint pValue = OS.Array_CreateInstance(typeid, buffer.length);", "+\tOS.GCHandle_Free(typeid);", "+\tif (pValue == 0) return;", "+\tOS.memcpy(pValue, buffer, buffer.length);", "+\ttransferData.pValue = pValue;", "- */", "-protected void javaToNative (Object object, TransferData transferData) {", "-\t//TEMPORARY CODE FAIL WITHOUT EXCEPTION", "-\tif (!checkText(object)) return;", "-\t//if (!checkText(object)) DND.error(DND.ERROR_INVALID_DATA);", "-\t", "-\tif (isSupportedType(transferData)) {", "-\t\ttransferData.pValue = createDotNetString((String)object);", "-\t}", "-}"]}], "num": 51238}