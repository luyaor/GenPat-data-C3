{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89e843ba338ebdaf7d16ff0bb49e6b3d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14153b312c9639d8db7b70f33fb68856", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 251, "signatureBeforeChange": "  \tint Release()", "signatureAfterChange": "  \tint Release()", "diff": ["+", "+\t\t\tif (objIServiceProvider != null)", "+\t\t\t\tobjIServiceProvider.dispose();", "+\t\t\tobjIServiceProvider = null;", "+", "+\t\t\tif (objIAccessible2 != null)", "+\t\t\t\tobjIAccessible2.dispose();", "+\t\t\tobjIAccessible2 = null;", "+", "+\t\t\tif (objIAccessibleAction != null)", "+\t\t\t\tobjIAccessibleAction.dispose();", "+\t\t\tobjIAccessibleAction = null;", "+", "+\t\t\tif (objIAccessibleApplication != null)", "+\t\t\t\tobjIAccessibleApplication.dispose();", "+\t\t\tobjIAccessibleApplication = null;", "+", "+\t\t\tif (objIAccessibleComponent != null)", "+\t\t\t\tobjIAccessibleComponent.dispose();", "+\t\t\tobjIAccessibleComponent = null;", "+", "+\t\t\tif (objIAccessibleEditableText != null)", "+\t\t\t\tobjIAccessibleEditableText.dispose();", "+\t\t\tobjIAccessibleEditableText = null;", "+", "+\t\t\tif (objIAccessibleHyperlink != null)", "+\t\t\t\tobjIAccessibleHyperlink.dispose();", "+\t\t\tobjIAccessibleHyperlink = null;", "+", "+\t\t\tif (objIAccessibleHypertext != null)", "+\t\t\t\tobjIAccessibleHypertext.dispose();", "+\t\t\tobjIAccessibleHypertext = null;", "+", "+\t\t\tif (objIAccessibleImage != null)", "+\t\t\t\tobjIAccessibleImage.dispose();", "+\t\t\tobjIAccessibleImage = null;", "+", "+\t\t\tif (objIAccessibleTable2 != null)", "+\t\t\t\tobjIAccessibleTable2.dispose();", "+\t\t\tobjIAccessibleTable2 = null;", "+", "+\t\t\tif (objIAccessibleTableCell != null)", "+\t\t\t\tobjIAccessibleTableCell.dispose();", "+\t\t\tobjIAccessibleTableCell = null;", "+", "+\t\t\tif (objIAccessibleText != null)", "+\t\t\t\tobjIAccessibleText.dispose();", "+\t\t\tobjIAccessibleText = null;", "+", "+\t\t\tif (objIAccessibleValue != null)", "+\t\t\t\tobjIAccessibleValue.dispose();", "+\t\t\tobjIAccessibleValue = null;", "+", "+\t\t\tfor (int i = 0; i < relations.length; i++) {", "+\t\t\t\tif (relations[i] != null) relations[i].Release();", "+\t\t\t}", "+\t\t\t// TODO: also remove all relations for which 'this' is a target??", "+\t\t\t// (if so, need to make relations array static so all Accessibles can see it)."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e393620a67980bf1905156d9d18e98b9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tstatic int atkTable_get_column_extent_at (int atkObject, int row, int column)", "signatureAfterChange": "  \tstatic int atkTable_get_column_extent_at (int atkObject, int row, int column)", "diff": ["-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.row = (int)/*64*/row;", "-\t\t\tevent.column = (int)/*64*/column;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getCell(event);", "-\t\t\t}", "-\t\t\tAccessible result = event.accessible;", "-\t\t\tif (result != null) {", "-\t\t\t\tlisteners = result.accessibleTableCellListeners;", "-\t\t\t\tAccessibleTableCellEvent cellEvent = new AccessibleTableCellEvent(result);", "-\t\t\t\tcellEvent.count = (int)/*64*/parentResult;", "-\t\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) listeners.elementAt(i);", "-\t\t\t\t\tlistener.getColumnSpan(cellEvent);", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.row = (int)/*64*/row;", "+\t\t\t\tevent.column = (int)/*64*/column;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getCell(event);", "-\t\t\t\treturn cellEvent.count;", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\tif (result != null) {", "+\t\t\t\t\tlisteners = result.accessibleTableCellListeners;", "+\t\t\t\t\tlength = listeners.size();", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tAccessibleTableCellEvent cellEvent = new AccessibleTableCellEvent(result);", "+\t\t\t\t\t\tcellEvent.count = (int)/*64*/parentResult;", "+\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\tlistener.getColumnSpan(cellEvent);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn cellEvent.count;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccdbda421a34828131da1f577338a426", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \tstatic int atkTable_is_selected (int atkObject, int row, int column)", "signatureAfterChange": "  \tstatic int atkTable_is_selected (int atkObject, int row, int column)", "diff": ["-\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "-\t\t\tevent.row = (int)/*64*/row;", "-\t\t\tevent.column = (int)/*64*/column;", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getCell(event);", "-\t\t\t}", "-\t\t\tAccessible result = event.accessible;", "-\t\t\tif (result != null) {", "-\t\t\t\tlisteners = result.accessibleTableCellListeners;", "-\t\t\t\tAccessibleTableCellEvent cellEvent = new AccessibleTableCellEvent(result);", "-\t\t\t\tcellEvent.isSelected = parentResult != 0;", "-\t\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) listeners.elementAt(i);", "-\t\t\t\t\tlistener.isSelected(cellEvent);", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTableEvent event = new AccessibleTableEvent(accessible);", "+\t\t\t\tevent.row = (int)/*64*/row;", "+\t\t\t\tevent.column = (int)/*64*/column;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getCell(event);", "-\t\t\t\treturn cellEvent.isSelected ? 1 : 0;", "+\t\t\t\tAccessible result = event.accessible;", "+\t\t\t\tif (result != null) {", "+\t\t\t\t\tlisteners = result.accessibleTableCellListeners;", "+\t\t\t\t\tlength = listeners.size();", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\tAccessibleTableCellEvent cellEvent = new AccessibleTableCellEvent(result);", "+\t\t\t\t\t\tcellEvent.isSelected = parentResult != 0;", "+\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\tlistener.isSelected(cellEvent);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn cellEvent.isSelected ? 1 : 0;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 41876}