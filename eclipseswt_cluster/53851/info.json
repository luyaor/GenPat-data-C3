{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c44871987cd8e8532b0a4f405505e879", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499341ae6f701ed1a3dc672a08d364ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 42, "signatureBeforeChange": " void removeColumn(TableColumn column)", "signatureAfterChange": " void removeColumn (TableColumn column, int index)", "diff": ["-void removeColumn(TableColumn column) {", "-\tVector data = getDataLabels();", "-\tVector images = getImages();", "-\tString stringData[];", "-\tImage imageData[];", "-\tint index = column.getIndex();", "-", "-\tif (index < data.size()) {", "-\t\tdata.removeElementAt(index);", "-\t\tstringData = new String[data.size()];", "-\t\tdata.copyInto(stringData);", "-\t\tsetText(stringData);", "-\t}", "-\tif (index < images.size()) {", "-\t\timages.removeElementAt(index);", "-\t\timageData = new Image[images.size()];", "-\t\timages.copyInto(imageData);", "-\t\tsetImage(imageData);", "-\t}", "-\t", "-\tif (trimmedLabels.length == 1) {", "-\t\ttrimmedLabels = new String[0];", "-\t} else {", "-\t\tString[] tempTrimmed = new String[trimmedLabels.length - 1];", "-\t\tSystem.arraycopy(trimmedLabels, 0, tempTrimmed, 0, index);\t", "-\t\tSystem.arraycopy(trimmedLabels, index +1, tempTrimmed, index, trimmedLabels.length - index -1);", "-\t\ttrimmedLabels = tempTrimmed; ", "-\t}", "-", "-}", "+void removeColumn (TableColumn column, int index) {", "+\tint columnCount = parent.columns.length;", "+\tif (columnCount == 0) {", "+\t\t/* reverts to normal table when last column disposed */", "+\t\tcellBackgrounds = cellForegrounds = null;", "+\t\tdisplayTexts = null;", "+\t\tcellFonts = null;", "+\t\tfontHeights = null;", "+\t\tGC gc = new GC (parent);", "+\t\tgc.setFont (getFont ());", "+\t\trecomputeTextWidths (gc);", "+\t\tgc.dispose ();", "+\t\treturn;", "+\t}", "+", "+\tString[] newTexts = new String [columnCount];", "+\tSystem.arraycopy (texts, 0, newTexts, 0, index);", "+\tSystem.arraycopy (texts, index + 1, newTexts, index, columnCount - index);", "+\ttexts = newTexts;", "+\t", "+\tImage[] newImages = new Image [columnCount];", "+\tSystem.arraycopy (images, 0, newImages, 0, index);", "+\tSystem.arraycopy (images, index + 1, newImages, index, columnCount - index);", "+\timages = newImages;", "+", "+\tint[] newTextWidths = new int [columnCount];", "+\tSystem.arraycopy (textWidths, 0, newTextWidths, 0, index);", "+\tSystem.arraycopy (textWidths, index + 1, newTextWidths, index, columnCount - index);", "+\ttextWidths = newTextWidths;", "+", "+\tString[] newDisplayTexts = new String [columnCount];", "+\tSystem.arraycopy (displayTexts, 0, newDisplayTexts, 0, index);", "+\tSystem.arraycopy (displayTexts, index + 1, newDisplayTexts, index, columnCount - index);", "+\tdisplayTexts = newDisplayTexts;", "+", "+\tif (cellBackgrounds != null) {", "+\t\tColor[] newCellBackgrounds = new Color [columnCount];", "+\t\tSystem.arraycopy (cellBackgrounds, 0, newCellBackgrounds, 0, index);", "+\t\tSystem.arraycopy (cellBackgrounds, index + 1, newCellBackgrounds, index, columnCount - index);", "+\t\tcellBackgrounds = newCellBackgrounds;", "+\t}", "+\tif (cellForegrounds != null) {", "+\t\tColor[] newCellForegrounds = new Color [columnCount];", "+\t\tSystem.arraycopy (cellForegrounds, 0, newCellForegrounds, 0, index);", "+\t\tSystem.arraycopy (cellForegrounds, index + 1, newCellForegrounds, index, columnCount - index);", "+\t\tcellForegrounds = newCellForegrounds;", "+\t}", "+\tif (cellFonts != null) {", "+\t\tFont[] newCellFonts = new Font [columnCount];", "+\t\tSystem.arraycopy (cellFonts, 0, newCellFonts, 0, index);", "+\t\tSystem.arraycopy (cellFonts, index + 1, newCellFonts, index, columnCount - index);", "+\t\tcellFonts = newCellFonts;", "+", "+\t\tint[] newFontHeights = new int [columnCount];", "+\t\tSystem.arraycopy (fontHeights, 0, newFontHeights, 0, index);", "+\t\tSystem.arraycopy (fontHeights, index + 1, newFontHeights, index, columnCount - index);", "+\t\tfontHeights = newFontHeights;", "+\t}", "+", "+\tif (index == 0) {", "+\t\ttext = texts [0] != null ? texts [0] : \"\";\t//$NON-NLS-1$", "+\t\ttexts [0] = null;", "+\t\timage = images [0];", "+\t\timages [0] = null;", "+\t\t/* ", "+\t\t * The new first column will not have as much width available to it as it did when it was", "+\t\t * the second column since it now has to show hierarchy decorations as well, so recompute", "+\t\t * its displayText. ", "+\t\t */", "+\t\tGC gc = new GC (parent);", "+\t\tgc.setFont (getFont (0));", "+\t\tcomputeDisplayText (0, gc);", "+\t\tgc.dispose ();", "+\t}", "+\tif (columnCount < 2) {", "+\t\ttexts = null;", "+\t\timages = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad84b6716138021fed9be693926e7aaa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e0f424f4d8f50a0b627d5547781b8a9ee0dd7d5d", "commitAfterChange": "fcdb639e3cc78f86b4ef0958aadf0dd2ef687069", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 56, "signatureBeforeChange": " void columnRemoved (TreeColumn column, int index)", "signatureAfterChange": " void removeColumn (TreeColumn column, int index)", "diff": ["-void columnRemoved (TreeColumn column, int index) {", "-\tint columnCount = parent.getColumnCount ();", "-\tif (columnCount == 0) {", "-\t\t/* reverts to normal tree when last column disposed */", "-\t\tcellBackgrounds = cellForegrounds = null;", "-\t\tboolean recomputeTextWidths = cellFonts != null;", "-\t\tcellFonts = null;", "-\t\tif (recomputeTextWidths) {", "-\t\t\tGC gc = new GC (parent);", "-\t\t\tgc.setFont (getFont ());", "-\t\t\trecomputeTextWidths (gc);", "-\t\t\tgc.dispose ();", "-\t\t}", "-\t\t/* notify all child items as well */", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\titems[i].columnRemoved (column, index);", "-\t\t}", "-\t\treturn;", "-\t}", "-\tString[] newTexts = new String [columnCount];", "-\tSystem.arraycopy (texts, 0, newTexts, 0, index);", "-\tSystem.arraycopy (texts, index + 1, newTexts, index, columnCount - index);", "-\ttexts = newTexts;", "-\t", "-\tImage[] newImages = new Image [columnCount];", "-\tSystem.arraycopy (images, 0, newImages, 0, index);", "-\tSystem.arraycopy (images, index + 1, newImages, index, columnCount - index);", "-\timages = newImages;", "-", "-\tint[] newTextWidths = new int [columnCount];", "-\tSystem.arraycopy (textWidths, 0, newTextWidths, 0, index);", "-\tSystem.arraycopy (textWidths, index + 1, newTextWidths, index, columnCount - index);", "-\ttextWidths = newTextWidths;", "-", "-\tif (cellBackgrounds != null) {", "-\t\tColor[] newCellBackgrounds = new Color [columnCount];", "-\t\tSystem.arraycopy (cellBackgrounds, 0, newCellBackgrounds, 0, index);", "-\t\tSystem.arraycopy (cellBackgrounds, index + 1, newCellBackgrounds, index, columnCount - index);", "-\t\tcellBackgrounds = newCellBackgrounds;", "-\tif (cellForegrounds != null) {", "-\t\tColor[] newCellForegrounds = new Color [columnCount];", "-\t\tSystem.arraycopy (cellForegrounds, 0, newCellForegrounds, 0, index);", "-\t\tSystem.arraycopy (cellForegrounds, index + 1, newCellForegrounds, index, columnCount - index);", "-\t\tcellForegrounds = newCellForegrounds;", "-\t}", "-\tif (cellFonts != null) {", "-\t\tFont[] newCellFonts = new Font [columnCount];", "-\t\tSystem.arraycopy (cellFonts, 0, newCellFonts, 0, index);", "-\t\tSystem.arraycopy (cellFonts, index + 1, newCellFonts, index, columnCount - index);", "-\t\tcellFonts = newCellFonts;", "-\t\tint[] newFontHeights = new int [columnCount];", "-\t\tSystem.arraycopy (fontHeights, 0, newFontHeights, 0, index);", "-\t\tSystem.arraycopy (fontHeights, index + 1, newFontHeights, index, columnCount - index);", "-\t\tfontHeights = newFontHeights;", "-\t}", "-", "-\t/* notify all child items as well */", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\titems[i].columnRemoved (column, index);", "-\t}", "+void removeColumn (TreeColumn column, int index) {", "+\tint columnCount = parent.getColumnCount ();", "+\tif (columnCount == 0) {", "+\t\t/* reverts to normal tree when last column disposed */", "+\t\tcellBackgrounds = cellForegrounds = null;", "+\t\tboolean recomputeTextWidths = cellFonts != null;", "+\t\tcellFonts = null;", "+\t\tif (recomputeTextWidths) {", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.setFont (getFont ());", "+\t\t\trecomputeTextWidths (gc);", "+\t\t\tgc.dispose ();", "+\t\t}", "+\t\t/* notify all child items as well */", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\titems[i].removeColumn (column, index);", "+\t\t}", "+\t\treturn;", "+\t}", "+", "+\tString[] newTexts = new String [columnCount];", "+\tSystem.arraycopy (texts, 0, newTexts, 0, index);", "+\tSystem.arraycopy (texts, index + 1, newTexts, index, columnCount - index);", "+\ttexts = newTexts;", "+\t", "+\tImage[] newImages = new Image [columnCount];", "+\tSystem.arraycopy (images, 0, newImages, 0, index);", "+\tSystem.arraycopy (images, index + 1, newImages, index, columnCount - index);", "+\timages = newImages;", "+", "+\tint[] newTextWidths = new int [columnCount];", "+\tSystem.arraycopy (textWidths, 0, newTextWidths, 0, index);", "+\tSystem.arraycopy (textWidths, index + 1, newTextWidths, index, columnCount - index);", "+\ttextWidths = newTextWidths;", "+", "+\tif (cellBackgrounds != null) {", "+\t\tColor[] newCellBackgrounds = new Color [columnCount];", "+\t\tSystem.arraycopy (cellBackgrounds, 0, newCellBackgrounds, 0, index);", "+\t\tSystem.arraycopy (cellBackgrounds, index + 1, newCellBackgrounds, index, columnCount - index);", "+\t\tcellBackgrounds = newCellBackgrounds;", "+\t}", "+\tif (cellForegrounds != null) {", "+\t\tColor[] newCellForegrounds = new Color [columnCount];", "+\t\tSystem.arraycopy (cellForegrounds, 0, newCellForegrounds, 0, index);", "+\t\tSystem.arraycopy (cellForegrounds, index + 1, newCellForegrounds, index, columnCount - index);", "+\t\tcellForegrounds = newCellForegrounds;", "+\t}", "+\tif (cellFonts != null) {", "+\t\tFont[] newCellFonts = new Font [columnCount];", "+\t\tSystem.arraycopy (cellFonts, 0, newCellFonts, 0, index);", "+\t\tSystem.arraycopy (cellFonts, index + 1, newCellFonts, index, columnCount - index);", "+\t\tcellFonts = newCellFonts;", "+", "+\t\tint[] newFontHeights = new int [columnCount];", "+\t\tSystem.arraycopy (fontHeights, 0, newFontHeights, 0, index);", "+\t\tSystem.arraycopy (fontHeights, index + 1, newFontHeights, index, columnCount - index);", "+\t\tfontHeights = newFontHeights;", "+\t}", "+", "+\t/* notify all child items as well */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems[i].removeColumn (column, index);", "+\t}", "+}"]}], "num": 53851}