{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e42fb4cc7277384b007dcdcc25dd0089", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72568b7bb34f8c002efc88eaf786b2c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "-\t\tRect rect = new Rect ();", "-\t\tint window = OS.GetControlOwner (handle);", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\tint x = pt.h - rect.left;", "-\t\tint y = pt.v - rect.top;", "-\t\tOS.GetControlBounds (handle, rect);", "-\t\tx -= rect.left;", "-\t\ty -= rect.top;", "-\t\tint width = rect.right - rect.left;", "-\t\tif (width - x < 12) {", "-\t\t\tx = rect.left;", "-\t\t\ty = rect.bottom;", "-\t\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\t\tOS.HIViewConvertPoint (pt, 0, parent.handle);", "+\t\t\tint x = (int) pt.x;", "+\t\t\tint y = (int) pt.y;", "+\t\t\tCGRect rect = new CGRect ();", "+\t\t\tOS.HIViewGetBounds (handle, rect);", "+\t\t\tif (width - x < 12) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.detail = SWT.ARROW;", "+\t\t\t\tevent.x = x;", "+\t\t\t\tevent.y = y;", "+\t\t\t\tpostEvent (SWT.Selection, event);\t\t\t\t", "+\t\t\t}", "+\t\t} else {", "+\t\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "+\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "+\t\t\tRect rect = new Rect ();", "+\t\t\tint window = OS.GetControlOwner (handle);", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t\tint x = pt.h - rect.left;", "+\t\t\tint y = pt.v - rect.top;", "+\t\t\tOS.GetControlBounds (handle, rect);", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.detail = SWT.ARROW;", "-\t\t\tevent.x = x;", "-\t\t\tevent.y = y;", "-\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tif (width - x < 12) {", "+\t\t\t\tx = rect.left;", "+\t\t\t\ty = rect.bottom;", "+\t\t\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\t\t\tx -= rect.left;", "+\t\t\t\ty -= rect.top;", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.detail = SWT.ARROW;", "+\t\t\t\tevent.x = x;", "+\t\t\t\tevent.y = y;", "+\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t}", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\tint x = outPt.h - rect.left;", "-\t\tint y = outPt.v - rect.top;", "-\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\tint x, y;", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tpt.x = outPt.h;", "+\t\t\tpt.y = outPt.v;", "+\t\t\tOS.HIViewConvertPoint (pt, 0, parent.handle);", "+\t\t\tx = (int) pt.x;", "+\t\t\ty = (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (parent.handle, rect);", "+\t\t\tx = outPt.h - rect.left;", "+\t\t\ty = outPt.v - rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea308d65d40ee6e93c1d7d2a1583cc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void printWindow (boolean first, Control control, GC gc, long drawable, int depth, long window, int x, int y)", "signatureAfterChange": "  void printWindow (boolean first, Control control, GC gc, long drawable, int depth, long window, int x, int y)", "diff": ["-\tGdkRectangle rect = new GdkRectangle ();", "-\tint [] width = new int [1], height = new int [1];", "-\tgdk_window_get_size (window, width, height);", "-\trect.width = width [0];", "-\trect.height = height [0];", "-\tOS.gdk_window_begin_paint_rect (window, rect);", "-\tOS.gdk_window_get_internal_paint_info (window, real_drawable, x_offset, y_offset);\t", "-\tlong /*int*/ [] userData = new long /*int*/ [1];", "-\tOS.gdk_window_get_user_data (window, userData);", "-\tif (userData [0] != 0) {", "-\t\tlong /*int*/ eventPtr = OS.gdk_event_new (OS.GDK_EXPOSE);", "-\t\tGdkEventExpose event = new GdkEventExpose ();", "-\t\tevent.type = OS.GDK_EXPOSE;", "-\t\tevent.window = OS.g_object_ref (window);", "-\t\tevent.area_width = rect.width;", "-\t\tevent.area_height = rect.height;", "-\t\tevent.region = OS.gdk_region_rectangle (rect);", "-\t\tOS.memmove (eventPtr, event, GdkEventExpose.sizeof);", "-\t\tOS.gtk_widget_send_expose (userData [0], eventPtr);", "-\t\tOS.gdk_event_free (eventPtr);", "+\tint [] width = new int [1], height = new int [1];", "+\tint srcX, srcY, destX, destY, destWidth, destHeight;", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\tcairo_rectangle_int_t rect = new cairo_rectangle_int_t ();", "+\t\tgdk_window_get_size (window, width, height);", "+\t\trect.width = width [0];", "+\t\trect.height = height [0];", "+\t\tlong /*int*/ cr = Cairo.cairo_region_create_rectangle (rect);", "+\t\tOS.gdk_window_begin_paint_region(window, cr);", "+\t\tOS.gdk_window_get_internal_paint_info (window, real_drawable, x_offset, y_offset);\t", "+\t\tlong /*int*/ [] userData = new long /*int*/ [1];", "+\t\tOS.gdk_window_get_user_data (window, userData);", "+\t\tif (userData [0] != 0) {", "+\t\t\tlong /*int*/ eventPtr = OS.gdk_event_new (OS.GDK_EXPOSE);", "+\t\t\tGdkEventExpose event = new GdkEventExpose ();", "+\t\t\tevent.type = OS.GDK_EXPOSE;", "+\t\t\tevent.window = OS.g_object_ref (window);", "+\t\t\tevent.area_width = rect.width;", "+\t\t\tevent.area_height = rect.height;", "+\t\t\tevent.region = Cairo.cairo_region_create_rectangle (rect);", "+\t\t\tOS.memmove (eventPtr, event, GdkEventExpose.sizeof);", "+\t\t\tOS.gtk_widget_send_expose (userData [0], eventPtr);", "+\t\t\tOS.gdk_event_free (eventPtr);", "+\t\t}\t", "+\t} else {", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tgdk_window_get_size (window, width, height);", "+\t\trect.width = width [0];", "+\t\trect.height = height [0];", "+\t\tOS.gdk_window_begin_paint_rect (window, rect);", "+\t\tOS.gdk_window_get_internal_paint_info (window, real_drawable, x_offset, y_offset);\t", "+\t\tlong /*int*/ [] userData = new long /*int*/ [1];", "+\t\tOS.gdk_window_get_user_data (window, userData);", "+\t\tif (userData [0] != 0) {", "+\t\t\tlong /*int*/ eventPtr = OS.gdk_event_new (OS.GDK_EXPOSE);", "+\t\t\tGdkEventExpose event = new GdkEventExpose ();", "+\t\t\tevent.type = OS.GDK_EXPOSE;", "+\t\t\tevent.window = OS.g_object_ref (window);", "+\t\t\tevent.area_width = rect.width;", "+\t\t\tevent.area_height = rect.height;", "+\t\t\tevent.region = OS.gdk_region_rectangle (rect);", "+\t\t\tOS.memmove (eventPtr, event, GdkEventExpose.sizeof);", "+\t\t\tOS.gtk_widget_send_expose (userData [0], eventPtr);", "+\t\t\tOS.gdk_event_free (eventPtr);", "+\t\t}", "-\tint srcX = x_offset [0], srcY = y_offset [0];", "-\tint destX = x, destY = y, destWidth = width [0], destHeight = height [0];", "+\tsrcX = x_offset [0];", "+\tsrcY = y_offset [0];", "+\tdestX = x;", "+\tdestY = y;", "+\tdestWidth = width [0];", "+\tdestHeight = height [0];"]}], "num": 816}