{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd1f4760bd5e29fb21af698644407de6", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d02c130e7387e73df50bfcf39eaafa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void setBackground (int index, Color color)", "signatureAfterChange": " public void setBackground (int columnIndex, Color value)", "diff": ["- */", "-public void setBackground (int index, Color color) {", "-\tcheckWidget ();", "-\tif (color != null && color.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tTable parent = getParent ();", "-\tint count = Math.max (1, parent.getColumnCount ());", "-\tif (0 > index || index > count - 1) return;", "-\tif (cellBackground == null) {", "-\t\tcellBackground = new Color [count];", "-\t}", "-\tif (cellBackground [index] == color) return;", "-\tif (cellBackground [index] != null && cellBackground [index].equals (color)) return;", "-\tcellBackground [index] = color;", "-\tredraw ();", "-}", "+public void setBackground (int columnIndex, Color value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellBackgrounds == null) {", "+\t\tcellBackgrounds = new Color [validColumnCount];", "+\t}", "+\tif (cellBackgrounds [columnIndex] == value) return;", "+\tif (cellBackgrounds [columnIndex] != null && cellBackgrounds [columnIndex].equals (value)) return;", "+\tcellBackgrounds [columnIndex] = value;", "+\tRectangle bounds = getCellBounds (columnIndex);", "+\tparent.redraw (bounds.x, bounds.y, bounds.width, bounds.height, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f95bda0baa8fffab725cc5b0e4c21d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void setForeground (int index, Color color)", "signatureAfterChange": " public void setForeground (int columnIndex, Color value)", "diff": ["- */", "-public void setForeground (int index, Color color){", "-\tcheckWidget ();", "-\tif (color != null && color.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tTable parent = getParent ();", "-\tint count = Math.max (1, parent.getColumnCount ());", "-\tif (0 > index || index > count -1) return;", "-\tif (cellForeground == null) {", "-\t\tcellForeground = new Color [count];", "-\t}", "-\tif (cellForeground [index] == color) return;", "-\tif (cellForeground [index] != null && cellForeground [index].equals (color)) return;", "-\tcellForeground [index] = color;", "-\tredraw ();", "-}", "+}", "+public void setForeground (int columnIndex, Color value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellForegrounds == null) {", "+\t\tcellForegrounds = new Color [validColumnCount];", "+\t}", "+\tif (cellForegrounds [columnIndex] == value) return;", "+\tif (cellForegrounds [columnIndex] != null && cellForegrounds [columnIndex].equals (value)) return;", "+\tcellForegrounds [columnIndex] = value;", "+", "+\tparent.redraw (", "+\t\tgetTextX (columnIndex),", "+\t\tparent.getItemY (this),", "+\t\ttextWidths [columnIndex] + 2 * MARGIN_TEXT,", "+\t\tparent.itemHeight,", "+\t\tfalse);", "+}"]}], "num": 3999}