{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8603ad56e9973808cac81f2fec6dd82e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a5e610baab5cc2851b3e777f8e46bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StructsGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void generatePrototypes(Class clazz)", "signatureAfterChange": "  void generatePrototypes(Class clazz)", "diff": ["-\toutput(\"Fields(JNIEnv *env, jobject lpObject);\");", "-\toutputln();", "+\toutputln(\"Fields(JNIEnv *env, jobject lpObject);\");", "-\toutput(\" *lpStruct);\");", "-\toutputln();", "+\toutputln(\" *lpStruct);\");", "-\toutput(\" *lpStruct);\");", "-\toutputln();", "+\toutputln(\" *lpStruct);\");", "-\toutput(\")\");", "-\toutputln();", "+\toutputln(\")\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb78133cfaa533c9958ce477610c7ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "87330b10800601c0b12e6edda61ce1010ad6b657", "commitAfterChange": "f8d214632226fe30e5dedb11397a3be1f8629823", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = channel.GetURI (result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\t\tchannel.Release ();", "+\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = channel.GetURI (result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\tchannel.Release ();", "-\t\t\tnsIURI uri = new nsIURI (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "-\t\t\trc = uri.GetSpec (aSpec);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "-\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "-\t\t\tbyte[] bytes = new byte[length];", "-\t\t\tXPCOM.memmove (bytes, buffer, length);", "-\t\t\tlastNavigateURL = new String (bytes);", "-\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "-\t\t\turi.Release ();", "+\t\t\t\tnsIURI uri = new nsIURI (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "+\t\t\t\trc = uri.GetSpec (aSpec);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "+\t\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "+\t\t\t\tbyte[] bytes = new byte[length];", "+\t\t\t\tXPCOM.memmove (bytes, buffer, length);", "+\t\t\t\tlastNavigateURL = new String (bytes);", "+\t\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "+\t\t\t\turi.Release ();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7611e746856a908a6ec7b34c7a38205b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t\toutput(\"arg0;\");", "-\t\toutputln();", "+\t\toutputln(\"arg0;\");", "-\t\toutput(\"\\t{\");", "-\t\toutputln();", "+\t\toutputln(\"\\t{\");", "-\t\toutput(\"();\");", "-\t\toutputln();", "-\t\toutput(\"\\t\\t*copy = temp;\");", "-\t\toutputln();", "+\t\toutputln(\"();\");", "+\t\toutputln(\"\\t\\t*copy = temp;\");", "-\t\toutput(\"copy;\");", "-\t\toutputln();", "-\t\toutput(\"\\t}\");", "-\t\toutputln();", "+\t\toutputln(\"copy;\");", "+\t\toutputln(\"\\t}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bddce70321d6fc772f7cc2ae353a9c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "commitAfterChange": "57c0e797a17f6a1fdd2b2a079dc4b2435e2d55ee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  long convertRgn(long rgn, double[] matrix)", "signatureAfterChange": "  long convertRgn(long rgn, double[] matrix)", "diff": ["-\t\t if (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\t long /*ing*/ cairo = OS.gdk_cairo_create(newRgn);", "-\t\t\t int count = pointArray.length / 2;", "-\t\t\t if (count == 0) return 0;", "-\t\t\t Cairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "-\t\t\t for (int n=1,j=2; n<count; n++,j+=2) {", "-\t\t\t\t Cairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "-\t\t\t }", "-\t\t\t Cairo.cairo_close_path(cairo);", "-\t\t\t Cairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "-\t\t\t Cairo.cairo_fill(cairo);", "-\t\t\t long /*ing*/ surface = Cairo.cairo_get_target(cairo);", "-\t\t\t long /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "-\t\t\t Cairo.cairo_region_union(newRgn, polyRgn);", "-\t\t\t Cairo.cairo_destroy(cairo);", "-\t\t } else {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\tint count = pointArray.length / 2;", "+\t\t\tif (count != 0) {", "+\t\t\t\tlong /*ing*/ cairo = OS.gdk_cairo_create(newRgn);", "+\t\t\t\tCairo.cairo_move_to(cairo, pointArray[0], pointArray[1]);", "+\t\t\t\tfor (int n=1,j=2; n<count; n++,j+=2) {", "+\t\t\t\t\tCairo.cairo_move_to(cairo, pointArray[j]+0.5, pointArray[j+1]+0.5);", "+\t\t\t\t}", "+\t\t\t\tCairo.cairo_close_path(cairo);", "+\t\t\t\tCairo.cairo_set_fill_rule(cairo, Cairo.CAIRO_FILL_RULE_EVEN_ODD);", "+\t\t\t\tCairo.cairo_fill(cairo);", "+\t\t\t\tlong /*ing*/ surface = Cairo.cairo_get_target(cairo);", "+\t\t\t\tlong /*int*/ polyRgn = OS.gdk_cairo_region_create_from_surface(surface);", "+\t\t\t\tCairo.cairo_region_union(newRgn, polyRgn);", "+\t\t\t\tCairo.cairo_destroy(cairo);", "+\t\t\t}", "+\t\t} else {", "-\t\t }", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b93c720f4bb6a70aeeea76cc2086917f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StructsGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void generateCacheFunction(Class clazz)", "signatureAfterChange": "  void generateCacheFunction(Class clazz)", "diff": ["-\toutput(\"Fields(JNIEnv *env, jobject lpObject)\");", "-\toutputln();", "-\toutput(\"{\");", "-\toutputln();", "+\toutputln(\"Fields(JNIEnv *env, jobject lpObject)\");", "+\toutputln(\"{\");", "-\toutput(\"Fc.cached) return;\");", "-\toutputln();", "+\toutputln(\"Fc.cached) return;\");", "-\t\toutput(\"Fields(env, lpObject);\");", "-\t\toutputln();", "+\t\toutputln(\"Fields(env, lpObject);\");", "-\t\toutput(\"\\\");\");", "-\t\toutputln();", "+\t\toutputln(\"\\\");\");", "-\toutput(\"Fc.cached = 1;\");", "-\toutputln();", "-\toutput(\"}\");", "-\toutputln();", "+\toutputln(\"Fc.cached = 1;\");", "+\toutputln(\"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af716e2d808dabb1a7493d3a2c4d73c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StructsGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void generateGetFunction(Class clazz)", "signatureAfterChange": "  void generateGetFunction(Class clazz)", "diff": ["-\toutput(\" *lpStruct)\");", "-\toutputln();", "-\toutput(\"{\");", "-\toutputln();", "+\toutputln(\" *lpStruct)\");", "+\toutputln(\"{\");", "-\toutput(\"Fields(env, lpObject);\");", "-\toutputln();", "+\toutputln(\"Fields(env, lpObject);\");", "-\toutput(\"\\treturn lpStruct;\");", "-\toutputln();", "-\toutput(\"}\");", "-\toutputln();", "+\toutputln(\"\\treturn lpStruct;\");", "+\toutputln(\"}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa2e525e7e10bbd13804dc555f8dace", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StructsGenerator.java", "commitBeforeChange": "457adc7dd6b98ba767f75441211bda0b63a67bab", "commitAfterChange": "8e9611dc8ad81eb513bc308ef9293d7a5e59aafe", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void generateBlankMacros(Class clazz)", "signatureAfterChange": "  void generateBlankMacros(Class clazz)", "diff": ["-\toutput(\"#else\");", "-\toutputln();", "+\toutputln(\"#else\");", "-\toutput(\"Fields(a,b)\");", "-\toutputln();", "+\toutputln(\"Fields(a,b)\");", "-\toutput(\"Fields(a,b,c) NULL\");", "-\toutputln();", "+\toutputln(\"Fields(a,b,c) NULL\");", "-\toutput(\"Fields(a,b,c)\");", "-\toutputln();", "+\toutputln(\"Fields(a,b,c)\");", "-\toutput(\"_sizeof() 0\");", "-\toutputln();", "+\toutputln(\"_sizeof() 0\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7da9cc8dbb2000e2aea0f2cc235ea06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "7804717491aeb828a5b356ce183faa94c01d39b8", "commitAfterChange": "6c6ae9e56aa891fd3bc758cad0772a1a8cad8c06", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  void unhookDOMListeners ()", "signatureAfterChange": "  void unhookDOMListeners ()", "diff": ["-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "+\tif (rc != XPCOM.NS_OK || result[0] == 0) return;"]}], "num": 54084}