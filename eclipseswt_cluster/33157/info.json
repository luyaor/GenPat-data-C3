{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db4b15b7b694c95d29161bfc29b3388f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b572a806492e9ef5209120ab69ba4166", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9deaa31de87a100016ebc81b039788786a22d0e6", "commitAfterChange": "0f4116d918f117a9f7bd2eb11944d61e20c3ad93", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\t", "+", "-\t", "+", "-\t", "+", "-\t\tint event= evt[0];\t\t", "-\t\t//System.out.println(\"event: \" + MacUtil.toString(OS.GetEventClass(event)));", "+\t\tint event= evt[0];", "+\t\tif (OS.GetEventClass(event) == SWT_USER_EVENT && OS.GetEventKind(event) == 54322) {", "+\t\t\tOS.ReleaseEvent(event);", "+\t\t\tbreak;", "+\t\t}", "-\t\t", "+", "-\t\tbreak;\t// no event: run async", "-\t\t", "+\t\tbreak;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa54fb3fa87c12820e3c9c5ca0ffe30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4011a75a1162d702acf821f83a40ad60e2f9460f", "commitAfterChange": "c6f4735c1aeae2db927268662b09b6f63b467ab9", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\tif (OS.ReceiveNextEvent(null, OS.kEventDurationNoWait, true, evt) == OS.kNoErr) {", "-\t\tOS.SendEventToEventTarget(evt[0], OS.GetEventDispatcherTarget());\t\t\t\t\t", "+\tint rc= OS.ReceiveNextEvent(null, OS.kEventDurationNoWait, true, evt);", "+\t", "+\tswitch (rc) {", "+\tcase OS.kNoErr:", "+\t\tint target= OS.GetEventDispatcherTarget();", "+\t\tOS.SendEventToEventTarget(evt[0], target);", "+\t\t", "+\tcase OS.eventLoopTimedOutErr:", "+\t\tbreak;\t// no event: run async", "+\t\t", "+\tdefault:", "+\t\tSystem.out.println(\"readAndDispatch: error \" + rc);", "+\t\tbreak;"]}], "num": 33157}