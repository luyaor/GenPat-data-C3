{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7828a09d957ee04cc8bda9ad37444ba5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a935ce8e3a9075bc96b6ad34864e3dd7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "77e9db971bb37de31fa67e362dca2b4761bdea68", "commitAfterChange": "28d5604f92185f10f7d3d522933639a1d675bc01", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  int gtk_event_after (int widget, int gdkEvent)", "signatureAfterChange": "  int gtk_event_after (int widget, int gdkEvent)", "diff": ["+\t/*", "+\t* Feature in GTK.  The gtk-entry-select-on-focus property is a global", "+\t* setting.  Return it to its default value when a GtkEntry loses focus.", "+\t*/", "+\tif ((style & SWT.SINGLE) != 0 && display.entrySelectOnFocus) {", "+\t\tGdkEvent event = new GdkEvent ();", "+\t\tOS.memmove (event, gdkEvent, GdkEvent.sizeof);", "+\t\tswitch (event.type) {", "+\t\t\tcase OS.GDK_FOCUS_CHANGE:", "+\t\t\t\tGdkEventFocus gdkEventFocus = new GdkEventFocus ();", "+\t\t\t\tOS.memmove (gdkEventFocus, gdkEvent, GdkEventFocus.sizeof);", "+\t\t\t\tif (gdkEventFocus.in == 0) {", "+\t\t\t\t\tint /*long*/ settings = OS.gtk_settings_get_default ();", "+\t\t\t\t\tOS.g_object_set (settings, OS.gtk_entry_select_on_focus, true, 0);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e128a56137aa2ed6527b1360a3b72fd1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8c72f50d9e4d13bea2ad77b49739c8222f0081c7", "commitAfterChange": "ac33f253c090accabcd72b8b80c308d3954d6e74", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  int gtk_event_after (int widget, int gdkEvent)", "signatureAfterChange": "  int gtk_event_after (int widget, int gdkEvent)", "diff": ["-\tGdkEventButton gdkEventButton = new GdkEventButton ();", "-\tOS.memmove (gdkEventButton, gdkEvent, GdkEventButton.sizeof);", "-\tif (gdkEventButton.type == OS.GDK_BUTTON_PRESS) {", "-\t\tif (gdkEventButton.button == 3) {", "-\t\t\tshowMenu ((int) gdkEventButton.x_root, (int) gdkEventButton.y_root);", "+\tGdkEvent event = new GdkEvent ();", "+\tOS.memmove (event, gdkEvent, GdkEventButton.sizeof);", "+\tswitch (event.type) {", "+\t\tcase OS.GDK_BUTTON_PRESS: {", "+\t\t\tGdkEventButton gdkEventButton = new GdkEventButton ();", "+\t\t\tOS.memmove (gdkEventButton, gdkEvent, GdkEventButton.sizeof);", "+\t\t\tif (gdkEventButton.button == 3) {", "+\t\t\t\tshowMenu ((int) gdkEventButton.x_root, (int) gdkEventButton.y_root);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.GDK_FOCUS_CHANGE: {", "+\t\t\tGdkEventFocus gdkEventFocus = new GdkEventFocus ();", "+\t\t\tOS.memmove (gdkEventFocus, gdkEvent, GdkEventFocus.sizeof);", "+\t\t\tsendFocusEvent (gdkEventFocus.in != 0 ? SWT.FocusIn : SWT.FocusOut);", "+\t\t\tbreak;"]}], "num": 31864}