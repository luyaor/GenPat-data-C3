{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "28f03d5083fd6230ddaccf43e7b3d0a4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82344934e2ce38f9829eb741373092d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 89, "signatureBeforeChange": "  int processKeyUp (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_key_release_event (int widget, int event)", "diff": ["+", "+int gtk_key_release_event (int widget, int event) {", "+\tif (!hasFocus ()) return 0;", "+\tif (imHandle != 0) {", "+\t\tif (OS.gtk_im_context_filter_keypress (imHandle, event)) return 0;", "+\t}", "+\tGdkEventKey gdkEvent = new GdkEventKey ();", "+\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "+\tsendKeyEvent (SWT.KeyUp, gdkEvent);", "+\treturn 0;", "+}", "-", "-int processKeyUp (int callData, int arg1, int int2) {", "-\tif (!hasFocus ()) return 0;", "-\tif (imHandle != 0) {", "-\t\tif (OS.gtk_im_context_filter_keypress (imHandle, callData)) return 0;", "-\t}", "-\tGdkEventKey event = new GdkEventKey ();", "-\tOS.memmove (event, callData, GdkEventKey.sizeof);", "-\tsendKeyEvent (SWT.KeyUp, event);", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe90793c11918cda514448ab6b0de461", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 88, "signatureBeforeChange": "  int processKeyDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int event)", "diff": ["+", "+int gtk_key_press_event (int widget, int event) {", "+\tif (!hasFocus ()) return 0;", "+\tif (imHandle != 0) {", "+\t\tif (OS.gtk_im_context_filter_keypress (imHandle, event)) return 0;", "+\t}", "+\tGdkEventKey gdkEvent = new GdkEventKey ();", "+\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "+\tif (translateTraversal (gdkEvent)) return 1;", "+\t// widget could be disposed at this point", "+\tif (isDisposed ()) return 0;", "+\tsendKeyEvent (SWT.KeyDown, gdkEvent);", "+\treturn 0;", "+}", "-", "-int processKeyDown (int callData, int arg1, int int2) {", "-\tif (!hasFocus ()) return 0;", "-\tif (imHandle != 0) {", "-\t\tif (OS.gtk_im_context_filter_keypress (imHandle, callData)) return 0;", "-\t}", "-\tGdkEventKey event = new GdkEventKey ();", "-\tOS.memmove (event, callData, GdkEventKey.sizeof);", "-\tif (translateTraversal (event)) return 1;", "-\t// widget could be disposed at this point", "-\tif (isDisposed ()) return 0;", "-\tsendKeyEvent (SWT.KeyDown, event);", "-\treturn 0;", "-}"]}], "num": 58994}