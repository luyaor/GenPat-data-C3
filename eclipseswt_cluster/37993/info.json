{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69085c616ee31fdd984d557e985ba8af", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c02a1d7aa442a17b3eac452a5c2deb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/photon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "c0e47047fb12b4ad6c1cd291125c302ee4573df0", "commitAfterChange": "772f59dfc148ceb100936d7357b9a0b9d85ab236", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int Pt_CB_WEB_DATA_REQ(int info)", "signatureAfterChange": "  int Pt_CB_WEB_DATA_REQ(int info)", "diff": ["-\t\t\tdata = text;", "+\t\t\t/*", "+\t\t\t* Feature on Photon. The PtSetResource() call for PtWebClient data imposes", "+\t\t\t* a limit on the size of the text buffer being passed. The workaround is", "+\t\t\t* to break the text into 1KB chunks.", "+\t\t\t*/", "+\t\t\tif (text.length() - textOffset > 1024) {", "+\t\t\t\tdata = text.substring(textOffset, textOffset + 1024);", "+\t\t\t\ttextOffset += 1024;", "+\t\t\t} else {", "+\t\t\t\tdata = text.substring(textOffset);", "+\t\t\t}", "-\tif (data != null ) {", "+\tif (data != null) {", "-\tif( clientData.data != 0 ) OS.free(clientData.data);", "+\tif (clientData.data != 0) OS.free(clientData.data);", "+\treturn OS.Pt_CONTINUE;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ca1cafea758e6e28d1f6210f2cd958", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "837c1444d29ff11934ff491b8210d2ba1d4e39f7", "commitAfterChange": "31a2d55ec6dc8a8de32567fdce478b55bddf1625", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  int gtk_changed (int widget)", "signatureAfterChange": "  int gtk_changed (int widget)", "diff": ["-\t\t\tpostEvent (SWT.Selection);", "+\t\t\t/*", "+\t\t\t* Feature in GTK.  GTK emits a changed signal whenever", "+\t\t\t* the contents of a combo box are altered by typing or", "+\t\t\t* by selecting an item in the list, but the event should", "+\t\t\t* only be sent when the list is selected. The fix is to", "+\t\t\t* only send out a selection event when there is a selected", "+\t\t\t* item. ", "+\t\t\t* ", "+\t\t\t* NOTE: This code relies on GTK clearing the selected", "+\t\t\t* item and not matching the item as the user types.", "+\t\t\t*/", "+\t\t\tint index = OS.gtk_combo_box_get_active (handle);", "+\t\t\tif (index != -1) postEvent (SWT.Selection);"]}], "num": 37993}