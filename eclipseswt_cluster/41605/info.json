{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "932a15072dcbfbecf68c070c09821bbf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "980a961253a4c9634d6629a5b8946928", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 62, "signatureBeforeChange": " int getItemStartX()", "signatureAfterChange": " public void setFont (int columnIndex, Font value)", "diff": ["- */", "-int getItemStartX() {", "-\tint itemStartX = getPaintStartX() + getDecorationsWidth();", "-\t", "-\tif (isCheckable() == true) {", "-\t\titemStartX += getCheckboxBounds().width + CHECKBOX_PADDING;", "-\t}", "-\treturn itemStartX;", "+}", "+public void setFont (int columnIndex, Font value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint validColumnCount = Math.max(1, parent.getColumnCount ());", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellFont == null) {", "+\t\tcellFont = new Font [validColumnCount];", "+\t}", "+\tif (cellFont [columnIndex] == value) return;", "+\tif (cellFont [columnIndex] != null && cellFont [columnIndex].equals (value)) return;", "+\tcellFont [columnIndex] = value;", "+\tredrawItem ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e2ce192522eab8407ea1463b2ee91e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 64, "signatureBeforeChange": " int getSelectionX()", "signatureAfterChange": " public void setForeground (int columnIndex, Color value)", "diff": ["-int getSelectionX() {", "-\treturn getTextXPos() - TEXT_INDENT;", "+public void setForeground (int columnIndex, Color value) {", "+\tif (value != null && value.isDisposed ()) {", "+\tint validColumnCount = Math.max(1, parent.getColumnCount ());", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellForeground == null) {", "+\t\tcellForeground = new Color [validColumnCount];", "+\tif (cellForeground [columnIndex] == value) return;", "+\tif (cellForeground [columnIndex] != null && cellForeground [columnIndex].equals (value)) return;", "+\tcellForeground [columnIndex] = value;", "+\tredrawItem ();"]}], "num": 41605}