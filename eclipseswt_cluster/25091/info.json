{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fde8e6c0741414c3130a153d1de05d35", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de82ba7937afc6d15e47dd1477d356c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "3f3ea314bcc3b62789ad8e33c681cbdc3e30ccfd", "commitAfterChange": "96ff1196cc07e1d9ce0934c67d6814115abd86be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void clear ()", "signatureAfterChange": "  void clear ()", "diff": ["+\t\t/*", "+\t\t* Bug in GTK.  When using fixed-height-mode on versions before 2.6.3,", "+\t\t* row changes do not cause the row to be repainted.  The fix is to", "+\t\t* invalidate the row when it is cleared.", "+\t\t*/", "+\t\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2) && OS.GTK_VERSION < OS.VERSION (2, 6, 3)) {", "+\t\t\t\tif ((OS.GTK_WIDGET_FLAGS (parent.handle) & OS.GTK_REALIZED) != 0) {", "+\t\t\t\t\tint /*long*/ parentHandle = parent.handle;", "+\t\t\t\t\tint /*long*/ path = OS.gtk_tree_model_get_path (parent.modelHandle, handle);", "+\t\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\t\t\tOS.gtk_tree_view_get_cell_area (parentHandle, path, 0, rect);", "+\t\t\t\t\tOS.gtk_tree_path_free (path);", "+\t\t\t\t\tint /*long*/ window = OS.gtk_tree_view_get_bin_window (parentHandle);", "+\t\t\t\t\trect.x = 0;", "+\t\t\t\t\trect.width = OS.GTK_WIDGET_WIDTH (parentHandle);", "+\t\t\t\t\tOS.gdk_window_invalidate_rect (window, rect, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efbe158e245037717d52b23006c7ae4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/ImageTransfer.java", "commitBeforeChange": "ca5e588017b8795b03417457562b8f46567bc04f", "commitAfterChange": "80afedd97a0b6a72bd18c947fb1f1ef3bdcf7751", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["+\t", "+\tNSSize size = nsImage.size();", "+\tNSImageRep rep = nsImage.bestRepresentationForDevice(null);", "+\tif (size.width != rep.pixelsWide() || size.height != rep.pixelsHigh()) {", "+\t\tsize.width /= (rep.pixelsWide() / size.width);", "+\t\tsize.height /= (rep.pixelsHigh() / size.height);", "+\t\tNSImage newImage = ((NSImage)new NSImage().alloc()).initWithSize(size);", "+\t\tnewImage.lockFocus();", "+\t\tNSRect rect = new NSRect();", "+\t\trect.width = size.width;", "+\t\trect.height = size.height;", "+\t\tnsImage.drawInRect(rect, new NSRect(), OS.NSCompositeCopy, 1);", "+\t\tnewImage.unlockFocus();", "+\t\tnsImage.release();", "+\t\tnsImage = newImage;", "+\t}", "+\t"]}], "num": 25091}