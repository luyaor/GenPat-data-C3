{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20cff21b03d73678cb0f58b3e1d869c1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d0288b74216bd6ff2801e0a2422151", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "f631ffa7670d693f9088a75e24e84d68f1a11831", "commitAfterChange": "4872d48d8c00e878a3d1d302a24a56f62c9fc9b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  private void drag(Event dragEvent)", "signatureAfterChange": "  private void drag(Event dragEvent)", "diff": ["-\ttry {", "-\t\tnotifyListeners(DND.DragStart, event);", "-\t} catch (Throwable e) {", "-\t\treturn;", "-\t}", "+\tnotifyListeners(DND.DragStart, event);", "-\t\ttry {", "-\t\t\tnotifyListeners(DND.DragEnd, event);", "-\t\t} catch (Throwable e) {}", "+\t\tnotifyListeners(DND.DragEnd, event);", "-\t\t\ttry {", "-\t\t\t\tnotifyListeners(DND.DragSetData, event);", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\tcontinue;", "-\t\t\t}", "+\t\t\tnotifyListeners(DND.DragSetData, event);", "-\t\ttry {", "-\t\t\tnotifyListeners(DND.DragEnd, event);", "-\t\t} catch (Throwable e) {}", "+\t\tnotifyListeners(DND.DragEnd, event);", "-\tint theRegion = OS.NewRgn();", "-\tOS.SetRectRgn(theRegion, (short)(pt.h-10), (short)(pt.v-10), (short)(pt.h+10), (short)(pt.v+10));", "-\t", "-\tint operations = opToOsOp(getStyle());", "-\t//set operations twice - local and not local", "-\tOS.SetDragAllowableActions(theDrag[0], operations, true);", "-\t// until the interaction with Finder is understood, only allow data to be", "-\t// transferred internally", "-\tOS.SetDragAllowableActions(theDrag[0], OS.kDragActionNothing, false);", "-\t", "-\tint result = OS.TrackDrag(theDrag[0], theEvent, theRegion);", "-\t", "-\tint operation = DND.DROP_NONE;", "-\tif (result == OS.noErr) { ", "-\t\tint[] outAction = new int[1];", "-\t\tOS.GetDragDropAction(theDrag[0], outAction);", "-\t\toperation = osOpToOp(outAction[0]);", "-\t}", "-\t", "-\tevent = new DNDEvent();", "-\tevent.widget = this;", "-\tevent.time = (int)System.currentTimeMillis();", "-\tevent.doit = result == OS.noErr;", "-\tevent.detail = operation; ", "+\tint theRegion = 0;", "+\t\ttheRegion = OS.NewRgn();", "+\t\tOS.SetRectRgn(theRegion, (short)(pt.h-10), (short)(pt.v-10), (short)(pt.h+10), (short)(pt.v+10));", "+\t\t", "+\t\tint operations = opToOsOp(getStyle());", "+\t\t//set operations twice - local and not local", "+\t\tOS.SetDragAllowableActions(theDrag[0], operations, true);", "+\t\t// until the interaction with Finder is understood, only allow data to be", "+\t\t// transferred internally", "+\t\tOS.SetDragAllowableActions(theDrag[0], OS.kDragActionNothing, false);", "+\t\t", "+\t\tint result = OS.TrackDrag(theDrag[0], theEvent, theRegion);", "+\t\t", "+\t\tint operation = DND.DROP_NONE;", "+\t\tif (result == OS.noErr) { ", "+\t\t\tint[] outAction = new int[1];", "+\t\t\tOS.GetDragDropAction(theDrag[0], outAction);", "+\t\t\toperation = osOpToOp(outAction[0]);", "+\t\t}", "+\t\t", "+\t\tevent = new DNDEvent();", "+\t\tevent.widget = this;", "+\t\tevent.time = (int)System.currentTimeMillis();", "+\t\tevent.doit = result == OS.noErr;", "+\t\tevent.detail = operation; ", "-\t} catch (Throwable e) {}", "-\t\t\t", "-\tOS.DisposeRgn(theRegion);", "+\t} finally {\t", "+\t\tif (theRegion != 0) OS.DisposeRgn(theRegion);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f771335769ef3ebc87707a16211ac7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "f631ffa7670d693f9088a75e24e84d68f1a11831", "commitAfterChange": "4872d48d8c00e878a3d1d302a24a56f62c9fc9b6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  private int dragReceiveHandler(int theWindow, int handlerRefCon, int theDrag)", "signatureAfterChange": "  private int dragReceiveHandler(int theWindow, int handlerRefCon, int theDrag)", "diff": ["-\ttry {", "-\t\tnotifyListeners(DND.DragLeave, event);", "-\t} catch (Throwable e) {}", "-\t\t", "+\tnotifyListeners(DND.DragLeave, event);\t\t", "-\t\t", "-\t", "-\ttry {", "-\t\tnotifyListeners(DND.DropAccept, event);", "-\t} catch (Throwable e) {", "-\t\tevent.detail = DND.DROP_NONE;", "-\t\tevent.dataType = null;", "-\t}", "-\t", "+\tselectedOperation = DND.DROP_NONE;", "+\tnotifyListeners(DND.DropAccept, event);", "-", "-\tselectedOperation = DND.DROP_NONE;", "-\t}", "-\t", "+\t}\t", "-\t", "-\ttry\t{", "-\t\tnotifyListeners(DND.Drop, event);", "-\t\tselectedOperation = DND.DROP_NONE;", "-\t\tif ((allowedOperations & event.detail) == event.detail) {", "-\t\t\tselectedOperation = event.detail;", "-\t\t}", "-\t} catch (Throwable e) {", "-\t\tselectedOperation = DND.DROP_NONE;", "-\t} ", "-", "+\tnotifyListeners(DND.Drop, event);", "+\tselectedOperation = DND.DROP_NONE;", "+\tif ((allowedOperations & event.detail) == event.detail) {", "+\t\tselectedOperation = event.detail;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a0407ef9af2702de78c6ee3bb414150", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/SwtTestCase.java", "commitBeforeChange": "699ebc90cf45d54ea68214c55b73fe719a348c8a", "commitAfterChange": "4eb7f8cf3e79735d171bf8ad6bbe5175223935a7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  @Override protected void setUp()", "signatureAfterChange": "  @Override protected void setUp()", "diff": ["-\ttry {", "-\t\tsuper.setUp();", "-\t} catch (Exception e) {", "-\t\tSWTError error = new SWTError();", "-\t\terror.throwable = e;", "-\t\tthrow error;", "-\t}", "+\tSystem.out.println(\"SwtTestCase#setUp(): \" + getClass().getName() + \"#\" + getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbec7440fed727a444d8aec036605e37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/FormLayoutTab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tvoid setLayoutState ()", "signatureAfterChange": " \tvoid setLayoutState()", "diff": ["-\tvoid setLayoutState () {", "+\tvoid setLayoutState() {", "-\t\ttry {", "-\t\t\tformLayout.marginHeight = new Integer (marginHeight.getText ()).intValue ();", "-\t\t} catch (NumberFormatException e) {", "-\t\t\tformLayout.marginHeight = 0;", "-\t\t\tmarginHeight.select (0);", "-\t\t}", "-\t\ttry {", "-\t\t\tformLayout.marginWidth = new Integer (marginWidth.getText ()).intValue ();", "-\t\t} catch (NumberFormatException e) {", "-\t\t\tformLayout.marginWidth = 0;", "-\t\t\tmarginWidth.select (0);", "-\t\t}", "-\t}", "+\t\tformLayout.marginWidth = marginWidth.getSelection();\t\t", "+\t\tformLayout.marginHeight = marginHeight.getSelection();\t\t", "+\t\tformLayout.spacing = spacing.getSelection();", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc182f254da191b379631cc896adc35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "74ffbbffb502d81c966d3f237bb00e237a2278cd", "commitAfterChange": "0be0a892281b55006df29db23fd32e45e2f0594d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "diff": ["-\tdata = new ImageData(10, 10, 1, new PaletteData(0xff0000, 0x00ff00, 0x0000ff));", "-\ttry {", "-\t\timage = new Image(display, data);", "-\t\timage.dispose();", "-\t\tfail(\"Unsupported color depth\");", "-\t} catch (SWTException e) {", "-\t}", "+//\tPlatform-specific test.  ", "+//\tdata = new ImageData(10, 10, 1, new PaletteData(0xff0000, 0x00ff00, 0x0000ff));", "+//\ttry {", "+//\t\timage = new Image(display, data);", "+//\t\timage.dispose();", "+//\t\tfail(\"Unsupported color depth\");", "+//\t} catch (SWTException e) {", "+//\t}"]}], "num": 51873}