{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3ee3810a8fd18106298f120e7e49c2a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ac4ffa6d24101d89d422ea45de6d99b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "5ee76f68731beca27e439535faff552a72b10741", "commitAfterChange": "f5f68fabf893d045dff7842a39ab757567d0bd9c", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  void initClasses ()", "signatureAfterChange": "  void initClasses ()", "diff": ["-\t", "+\tint textWillChangeSelectionProc = OS.textView_willChangeSelectionFromCharacterRange_toCharacterRange_CALLBACK(proc5);", "+", "+\tOS.class_addMethod(cls, OS.sel_textViewDidChangeSelection_1, proc3, \"@:@\");", "+\tOS.class_addMethod(cls, OS.sel_textView_1willChangeSelectionFromCharacterRange_1toCharacterRange_1, textWillChangeSelectionProc, \"@:@{NSRange}{NSRange}\");", "+\tOS.class_addMethod(cls, OS.sel_textViewDidChangeSelection_1, proc3, \"@:@\");", "+\tOS.class_addMethod(cls, OS.sel_textView_1willChangeSelectionFromCharacterRange_1toCharacterRange_1, textWillChangeSelectionProc, \"@:@{NSRange}{NSRange}\");", "+\tOS.class_addMethod(cls, OS.sel_textViewDidChangeSelection_1, proc3, \"@:@\");", "+\tOS.class_addMethod(cls, OS.sel_textView_1willChangeSelectionFromCharacterRange_1toCharacterRange_1, textWillChangeSelectionProc, \"@:@{NSRange}{NSRange}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b7a387e972dbb9db438c4a93f048df8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "24e023b39c6a1f997d00fc39509e25380da519a6", "commitAfterChange": "96d4c6fcb326919f184098175910777b60bec609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\t/*", "+\t\t\t * Test whether the detected XULRunner can be used as the GRE before loading swt's", "+\t\t\t * XULRunner library.  If it cannot be used then fall back to attempting to use", "+\t\t\t * the GRE pointed to by MOZILLA_FIVE_HOME.", "+\t\t\t * ", "+\t\t\t * One case where this will fail is attempting to use a 64-bit xulrunner while swt", "+\t\t\t * is running in 32-bit more, or vice versa.", "+\t\t\t */", "+\t\t\tbyte[] path = MozillaDelegate.wcsToMbcs (null, mozillaPath, true);", "+\t\t\tint rc = XPCOMInit.XPCOMGlueStartup (path);", "+\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\tisXULRunner = false;\t/* failed */", "+\t\t\t\tmozillaPath = mozillaPath.substring (0, mozillaPath.lastIndexOf (SEPARATOR_OS));", "+\t\t\t\tif (Device.DEBUG) System.out.println (\"cannot use detected XULRunner: \" + mozillaPath); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tXPCOMInit.XPCOMGlueShutdown ();", "+\t\t\t}", "+\t\t}", "+", "+\t\tif (isXULRunner) {", "-\t\t\t\tSWT.error (SWT.ERROR_NO_HANDLES, null, \" [Could not detect registered XULRunner to use]\"); //$NON-NLS-1$", "+\t\t\t\tString errorString = (mozillaPath != null && mozillaPath.length () > 0) ?", "+\t\t\t\t\t\" [Failed to use detected XULRunner: \" + mozillaPath + \"]\" :", "+\t\t\t\t\t\" [Could not detect registered XULRunner to use]\";\t//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\t\tSWT.error (SWT.ERROR_NO_HANDLES, null, errorString);", "-\t\t\t}", "-\t\t\tif (mozillaPath == null) {", "+\t\t\t} else {"]}], "num": 38152}