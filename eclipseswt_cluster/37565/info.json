{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "182a900f1ad12fa61bad9ac9f87fd936", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95b0ec1acc3488a9d5f7c72c0bc9d2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "afe5badb81a5f6b2a6b38a7f50d4083e5c985f49", "commitAfterChange": "d557b77b1e2dd3fd3d89db881b6e3916ea20f142", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " boolean paint (GC gc, TreeColumn column, boolean backgroundOnly)", "signatureAfterChange": " boolean paint (GC gc, TreeColumn column, boolean backgroundOnly)", "diff": ["-\t/* draw the background color of this cell */", "-\tboolean hasBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);", "-\tif (orderedIndex == 0) {", "-\t\tRectangle focusBounds = getFocusBounds ();", "-\t\tif (focusBounds.x > 0) {", "-\t\t\t/* fill space to left of selection rect */", "-\t\t\tparent.drawBackground (gc, 0, y, focusBounds.x, itemHeight);", "-\t\t}", "-\t\tif (column == null) {", "-\t\t\t/* fill space to right of selection rect */", "-\t\t\tint rightX = focusBounds.x + focusBounds.width;", "-\t\t\tint width = clientArea.width - rightX;", "-\t\t\tif (width > 0) {", "-\t\t\t\tparent.drawBackground (gc, rightX, y, width, itemHeight);", "-\t\t\t}", "-\t\t}", "-\t\tint fillWidth = 0;", "-\t\tif (column == null) {", "-\t\t\tfillWidth = focusBounds.width;", "-\t\t} else {", "-\t\t\tfillWidth = column.width - focusBounds.x;", "-\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t}", "-\t\tif (!hasBackground) {", "-\t\t\tparent.drawBackground (gc, focusBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t} else {", "-\t\t\tgc.setBackground (getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (focusBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t}", "+\t/* draw the parent background color/image of this cell */", "+\tif (column == null) {", "+\t\tparent.drawBackground (gc, 0, y, clientArea.width, itemHeight);", "-\t\tif (!hasBackground) {", "-\t\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t} else {", "-\t\t\tgc.setBackground (getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t}", "+\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\tboolean drawSelection = isSelected;", "+\tboolean drawBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);", "+\tboolean drawForeground = true;", "+\tboolean drawSelection = isSelected;", "-\tboolean drawContent = true;", "+\t\tevent.detail = SWT.FOREGROUND;", "+\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;", "-\t\tif (hasBackground) event.detail |= SWT.BACKGROUND;", "+\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;", "+\t\tdrawForeground = (event.detail & SWT.FOREGROUND) != 0;", "-\t\tdrawContent = event.doit;", "+\t}", "+", "+\t/* draw the cell's set background if appropriate */", "+\tif (drawBackground) {", "+\t\tgc.setBackground (getBackground (columnIndex));", "+\t\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "+\t\t\tRectangle focusBounds = getFocusBounds ();", "+\t\t\tint fillWidth = 0;", "+\t\t\tif (column == null) {", "+\t\t\t\tfillWidth = focusBounds.width;", "+\t\t\t} else {", "+\t\t\t\tfillWidth = column.width - focusBounds.x;", "+\t\t\t\tif (parent.linesVisible) fillWidth--;", "+\t\t\t}", "+\t\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "+\t\t} else {", "+\t\t\tint fillWidth = cellBounds.width;", "+\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "+\t\t}", "-\tif (drawContent) {", "+\tif (drawForeground) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c9230c87ca3dcb834abd0cece58fe7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "0b4695242b97e383735d212b1017881e4894ee6e", "commitAfterChange": "afe5badb81a5f6b2a6b38a7f50d4083e5c985f49", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " boolean paint (GC gc, TableColumn column, boolean backgroundOnly)", "signatureAfterChange": " boolean paint (GC gc, TableColumn column, boolean backgroundOnly)", "diff": ["-\t/* draw the background color of this cell */", "-\tboolean hasBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);", "-\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "-\t\tRectangle focusBounds = getFocusBounds ();", "-\t\tif (focusBounds.x > 0) {", "-\t\t\t/* fill space to left of selection rect */", "-\t\t\tparent.drawBackground (gc, 0, y, focusBounds.x, itemHeight);", "-\t\t}", "-\t\tif (column == null) {", "-\t\t\t/* fill space to right of selection rect */", "-\t\t\tint rightX = focusBounds.x + focusBounds.width;", "-\t\t\tint width = clientArea.width - rightX;", "-\t\t\tif (width > 0) {", "-\t\t\t\tparent.drawBackground (gc, rightX, y, width, itemHeight);", "-\t\t\t}", "-\t\t}", "-", "-\t\tint fillWidth = 0;", "-\t\tif (column == null) {", "-\t\t\tfillWidth = focusBounds.width;", "-\t\t} else {", "-\t\t\tfillWidth = column.width - focusBounds.x;", "-\t\t\tif (parent.linesVisible) fillWidth--;", "-\t\t}", "-\t\tif (!hasBackground) {", "-\t\t\tparent.drawBackground (gc, focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "-\t\t} else {", "-\t\t\tgc.setBackground (getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "-\t\t}", "+\t/* draw the parent background color/image of this cell */", "+\tif (column == null) {", "+\t\tparent.drawBackground (gc, 0, y, clientArea.width, itemHeight);", "-\t\tif (!hasBackground) {", "-\t\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t} else {", "-\t\t\tgc.setBackground (getBackground (columnIndex));", "-\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\t\t}", "+\t\tparent.drawBackground (gc, cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "-\tboolean drawSelection = isSelected;", "+\tboolean drawBackground = background != null || (cellBackgrounds != null && cellBackgrounds [columnIndex] != null);", "+\tboolean drawForeground = true;", "+\tboolean drawSelection = isSelected;", "-\tboolean drawContent = true;", "+\t\tevent.detail = SWT.FOREGROUND;", "+\t\tif (drawBackground) event.detail |= SWT.BACKGROUND;", "-\t\tif (hasBackground) event.detail |= SWT.BACKGROUND;", "+\t\tdrawBackground = drawBackground && (event.detail & SWT.BACKGROUND) != 0;", "+\t\tdrawForeground = (event.detail & SWT.FOREGROUND) != 0;", "-\t\tdrawContent = event.doit;", "+\t}", "+", "+\t/* draw the cell's set background if appropriate */", "+\tif (drawBackground) {", "+\t\tgc.setBackground (getBackground (columnIndex));", "+\t\tif (columnIndex == 0 && (column == null || column.getOrderIndex () == 0)) {", "+\t\t\tRectangle focusBounds = getFocusBounds ();", "+\t\t\tint fillWidth = 0;", "+\t\t\tif (column == null) {", "+\t\t\t\tfillWidth = focusBounds.width;", "+\t\t\t} else {", "+\t\t\t\tfillWidth = column.width - focusBounds.x;", "+\t\t\t\tif (parent.linesVisible) fillWidth--;", "+\t\t\t}", "+\t\t\tgc.fillRectangle (focusBounds.x, focusBounds.y, fillWidth, focusBounds.height);", "+\t\t} else {", "+\t\t\tint fillWidth = cellBounds.width;", "+\t\t\tgc.fillRectangle (cellBounds.x, cellBounds.y, fillWidth, cellBounds.height);", "+\t\t}", "-\tif (drawContent) {", "+\tif (drawForeground) {"]}], "num": 37565}