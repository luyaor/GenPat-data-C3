{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08e0ce8daae218f597c73731c995d662", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264b4671fa38cbe89a0fa692d1ce2e36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r \r public Point textExtent(String string)", "signatureAfterChange": "\r \r public Point textExtent(String string)", "diff": ["-\treturn stringExtent(string);\r", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "+\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\r", "+\tPhRect_t rect = new PhRect_t();\r", "+\tstring = replaceTabs(string, 8);\r", "+\tint size = string.length();\r", "+\tbyte [] buffer = Converter.wcsToMbcs (null, string, false);\r", "+\r", "+\tint flags = OS.PtEnter(0);\r", "+\ttry {\r", "+\t\tint prevContext = setGC();\r", "+\t\tOS.PgExtentMultiText(rect, null, data.font, buffer, buffer.length, 0);\r", "+\t\tunsetGC(prevContext);\r", "+\t} finally {\r", "+\t\tif (flags >= 0) OS.PtLeave(flags);\r", "+\t}\r", "+\t\r", "+\tint width;\r", "+\tif (size == 0) width = 0;\r", "+\telse width = rect.lr_x - (rect.ul_x < 0 ? rect.ul_x : 0) + 1;\r", "+\tint height = rect.lr_y - rect.ul_y + 1;\r", "+\treturn new Point(width, height);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a923273b71f5985265ca1353612c72c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r public void drawText (String string, int x, int y, boolean isTransparent)", "signatureAfterChange": "\r \r public void drawText (String string, int x, int y, boolean isTransparent)", "diff": ["-\tdrawString(string, x, y, isTransparent);;\r", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "+\tif (string == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);\r", "+\r", "+\tint drawFlags = OS.Pg_TEXT_LEFT | OS.Pg_TEXT_TOP;\r", "+\tif (!isTransparent) drawFlags |= OS.Pg_BACK_FILL;\r", "+\tstring = replaceTabs(string, 8);\r", "+\tbyte[] buffer = Converter.wcsToMbcs(null, string, false);\r", "+\tPhRect_t rect = new PhRect_t();\r", "+\trect.ul_x = (short)x;\r", "+\trect.ul_y = (short)y;\r", "+\trect.lr_x = (short)0xFFFF;\r", "+\trect.lr_y = (short)0xFFFF;\r", "+\r", "+\tint flags = OS.PtEnter(0);\r", "+\ttry {\r", "+\t\tint prevContext = setGC();\t\r", "+\t\tsetGCClipping();\r", "+\t\tOS.PgDrawMultiTextArea(buffer, buffer.length, rect, drawFlags, OS.Pg_TEXT_LEFT | OS.Pg_TEXT_TOP, 0);\r", "+\t\tunsetGC(prevContext);\r", "+\t} finally {\r", "+\t\tif (flags >= 0) OS.PtLeave(flags);\r", "+\t}\r"]}], "num": 31667}