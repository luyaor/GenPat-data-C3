{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "730392f4fc6af21652bf29c2eb9f47fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37930c67c3ff66cf0ed270603c59e2f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "67417a80e57abef8b70452450655db6a41cb90da", "commitAfterChange": "38bd43e4935fbbed6e74ae5e6ca91441972c34c3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventWindowGetRegion (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t* window to be shifted.  The fix is to modify the origin.", "+\t\t\t* window to be shifted for a non zero origin.  Also,", "+\t\t\t* the size of the window is the size of the region", "+\t\t\t* which may be less then the size specified in", "+\t\t\t* setSize or setBounds.", "+\t\t\t* The fix is to include (0, 0) and the bottom ", "+\t\t\t* right corner of the size in the region and to", "+\t\t\t* make these points transparent.", "-\t\t\t// TODO - find a better fix", "-\t\t\tRect r = new Rect ();", "-\t\t\tOS.GetRegionBounds (hRegion, r);", "-\t\t\tif (r.left != 0 || r.top != 0) {", "+\t\t\tif (!region.contains (0, 0)) {", "+\t\t\t\tRect r = new Rect ();", "+\t\t\t\tint rectRgn = OS.NewRgn ();", "+\t\t\t\tOS.RectRgn (rectRgn, r);", "+\t\t\t\tOS.UnionRgn (rectRgn, hRegion, hRegion);", "+\t\t\t\tOS.DisposeRgn (rectRgn);", "+\t\t\t}", "+\t\t\tif (!region.contains (rgnRect.right - 1, rgnRect.bottom - 1)) {", "+\t\t\t\tRect r = new Rect ();", "+\t\t\t\tOS.SetRect (r, (short) (rgnRect.right - 1), (short) (rgnRect.bottom - 1), rgnRect.right, rgnRect.bottom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f515e86d08870b2fc4af819a910835f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "67417a80e57abef8b70452450655db6a41cb90da", "commitAfterChange": "38bd43e4935fbbed6e74ae5e6ca91441972c34c3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "signatureAfterChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "diff": ["-\t* window to be shifted.  The fix is to modify the origin.", "+\t* window to be shifted for a non zero origin.  Also,", "+\t* the size of the window is the size of the region", "+\t* which may be less then the size specified in", "+\t* setSize or setBounds.", "+\t* The fix is to include (0, 0) and the bottom ", "+\t* right corner of the size in the region and to", "+\t* make these points transparent.", "-\tRect r = new Rect ();", "-\tOS.GetRegionBounds (region.handle, r);", "-\tif (r.left == 0 && r.top == 0) return;", "+\tboolean origin = region.contains (0, 0);", "+\tboolean limit = region.contains(rgnRect.right - 1, rgnRect.bottom - 1);", "+\tif (origin && limit) return;", "+\t", "-\tOS.CGContextClearRect (context [0], cgRect);", "+\tif (!origin) {", "+\t\tOS.CGContextClearRect (context [0], cgRect);", "+\t}", "+\tif (!limit) {", "+\t\tcgRect.x = rgnRect.right - 1;", "+\t\tcgRect.y = rgnRect.bottom - 1;", "+\t\tOS.CGContextClearRect (context [0], cgRect);", "+\t}"]}], "num": 30938}