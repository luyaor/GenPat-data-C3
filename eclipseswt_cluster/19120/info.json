{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87024fea31321b3f7cd91f3d4256fcc9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d34cafa8d90019ebaec75da78240fc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "179e1e8feb58af613b2d9e2d8a1b0f959cbc3d62", "commitAfterChange": "67f57a1503dff18128d85f6be9ce1151c584d527", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void createItem (TableColumn column, int index)", "signatureAfterChange": " void createItem (TableColumn column, int index)", "diff": ["+\tif (orderedColumns != null) {", "+\t\tint insertIndex = 0;", "+\t\tif (index > 0) {", "+\t\t\tinsertIndex = columns [index - 1].getOrderIndex () + 1;", "+\t\t}", "+\t\tTableColumn[] newOrderedColumns = new TableColumn [orderedColumns.length + 1];", "+\t\tSystem.arraycopy (orderedColumns, 0, newOrderedColumns, 0, insertIndex);", "+\t\tnewOrderedColumns [insertIndex] = column;", "+\t\tSystem.arraycopy (", "+\t\t\torderedColumns,", "+\t\t\tinsertIndex,", "+\t\t\tnewOrderedColumns,", "+\t\t\tinsertIndex + 1,", "+\t\t\torderedColumns.length - insertIndex);", "+\t\torderedColumns = newOrderedColumns;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ffc59eb850198ac101283b69eea0fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "df50fa66edbf171262925f429290b7e2a0ec54bb", "commitAfterChange": "d12fe81a2f20724b5a4c78562e4cf8a705a47721", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createItem (TreeColumn column, int index)", "signatureAfterChange": " void createItem (TreeColumn column, int index)", "diff": ["+\tif (orderedColumns != null) {", "+\t\tint insertIndex = 0;", "+\t\tif (index > 0) {", "+\t\t\tinsertIndex = columns [index - 1].getOrderIndex () + 1;", "+\t\t}", "+\t\tTreeColumn[] newOrderedColumns = new TreeColumn [orderedColumns.length + 1];", "+\t\tSystem.arraycopy (orderedColumns, 0, newOrderedColumns, 0, insertIndex);", "+\t\tnewOrderedColumns [insertIndex] = column;", "+\t\tSystem.arraycopy (", "+\t\t\torderedColumns,", "+\t\t\tinsertIndex,", "+\t\t\tnewOrderedColumns,", "+\t\t\tinsertIndex + 1,", "+\t\t\torderedColumns.length - insertIndex);", "+\t\torderedColumns = newOrderedColumns;", "+\t}", "+"]}], "num": 19120}