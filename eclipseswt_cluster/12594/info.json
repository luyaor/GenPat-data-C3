{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "043d84cba2b6bc54f38a7d1b3737b03c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9e44892034f4882fce1d38067a8b65", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f57afa3602057776f3d8327e72747856d13125c4", "commitAfterChange": "1f2c35965033f62a4399e3b12b395ca318a4a815", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["-\t* match from the list.  The fix is to remember the original", "-\t* text and reset it after the widget is resized.", "+\t* match from the list.  The fix is to lock the current text", "+\t* by ignoring all WM_SETTEXT messages during processing of", "+\t* WM_SIZE.", "-\tLRESULT result = null;", "-\tif ((style & SWT.READ_ONLY) != 0) {", "-\t\tresult = super.WM_SIZE (wParam, lParam);", "-\t} else {", "-\t\tint index = (int)/*64*/OS.SendMessage (handle, OS.CB_GETCURSEL, 0, 0);", "-\t\tboolean redraw = false;", "-\t\tTCHAR buffer = null;", "-\t\tint [] start = null, end = null;", "-\t\tif (index == OS.CB_ERR) {", "-\t\t\tint length = OS.GetWindowTextLength (handle);", "-\t\t\tif (length != 0) {", "-\t\t\t\tbuffer = new TCHAR (getCodePage (), length + 1);", "-\t\t\t\tOS.GetWindowText (handle, buffer, length + 1);", "-\t\t\t\tstart = new int [1];  end = new int [1];", "-\t\t\t\tOS.SendMessage (handle, OS.CB_GETEDITSEL, start, end);", "-\t\t\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "-\t\t\t\tif (redraw) setRedraw (false);", "-\t\t\t}", "-\t\t}", "-\t\tresult = super.WM_SIZE (wParam, lParam);", "-\t\t/*", "-\t\t* It is possible (but unlikely), that application", "-\t\t* code could have disposed the widget in the resize", "-\t\t* event.  If this happens, end the processing of the", "-\t\t* Windows message by returning the result of the", "-\t\t* WM_SIZE message.", "-\t\t*/", "-\t\tif (isDisposed ()) return result;", "-\t\tif (buffer != null) {", "-\t\t\tOS.SetWindowText (handle, buffer);", "-\t\t\tint /*long*/ bits = OS.MAKELPARAM (start [0], end [0]);", "-\t\t\tOS.SendMessage (handle, OS.CB_SETEDITSEL, 0, bits);", "-\t\t\tif (redraw) setRedraw (true);", "-\t\t}", "-\t}", "+\tif ((style & SWT.READ_ONLY) == 0) lockText = true;", "+\tLRESULT result = super.WM_SIZE (wParam, lParam);", "+\tif ((style & SWT.READ_ONLY) == 0) lockText = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73294055c0dd27b362e3219b10933aae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "40cf8e61803cf41d2571f4294437ef45df1d67c6", "commitAfterChange": "bf05ebbd123937748b9aa8d29899de8633f0c49d", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SIZE (int wParam, int lParam)", "diff": ["+\tLRESULT result = null;", "-\t\treturn super.WM_SIZE (wParam, lParam);", "-\t}", "-\tint index = OS.SendMessage (handle, OS.CB_GETCURSEL, 0, 0);", "-\tboolean redraw = false;", "-\tTCHAR buffer = null;", "-\tint [] start = null, end = null;", "-\tif (index == OS.CB_ERR) {", "-\t\tint length = OS.GetWindowTextLength (handle);", "-\t\tif (length != 0) {", "-\t\t\tbuffer = new TCHAR (getCodePage (), length + 1);", "-\t\t\tOS.GetWindowText (handle, buffer, length + 1);", "-\t\t\tstart = new int [1];  end = new int [1];", "-\t\t\tOS.SendMessage (handle, OS.CB_GETEDITSEL, start, end);", "-\t\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "-\t\t\tif (redraw) setRedraw (false);", "+\t\tresult = super.WM_SIZE (wParam, lParam);", "+\t} else {", "+\t\tint index = OS.SendMessage (handle, OS.CB_GETCURSEL, 0, 0);", "+\t\tboolean redraw = false;", "+\t\tTCHAR buffer = null;", "+\t\tint [] start = null, end = null;", "+\t\tif (index == OS.CB_ERR) {", "+\t\t\tint length = OS.GetWindowTextLength (handle);", "+\t\t\tif (length != 0) {", "+\t\t\t\tbuffer = new TCHAR (getCodePage (), length + 1);", "+\t\t\t\tOS.GetWindowText (handle, buffer, length + 1);", "+\t\t\t\tstart = new int [1];  end = new int [1];", "+\t\t\t\tOS.SendMessage (handle, OS.CB_GETEDITSEL, start, end);", "+\t\t\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\t\t\tif (redraw) setRedraw (false);", "+\t\t\t}", "+\t\t}", "+\t\tresult = super.WM_SIZE (wParam, lParam);", "+\t\t/*", "+\t\t* It is possible (but unlikely), that application", "+\t\t* code could have disposed the widget in the resize", "+\t\t* event.  If this happens, end the processing of the", "+\t\t* Windows message by returning the result of the", "+\t\t* WM_SIZE message.", "+\t\t*/", "+\t\tif (isDisposed ()) return result;", "+\t\tif (buffer != null) {", "+\t\t\tOS.SetWindowText (handle, buffer);", "+\t\t\tint bits = start [0] | (end [0] << 16);", "+\t\t\tOS.SendMessage (handle, OS.CB_SETEDITSEL, 0, bits);", "+\t\t\tif (redraw) setRedraw (true);", "-\tLRESULT result = super.WM_SIZE (wParam, lParam);", "-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in the resize", "-\t* event.  If this happens, end the processing of the", "-\t* Windows message by returning the result of the", "-\t* WM_SIZE message.", "+\t* Feature in Windows.  When CB_SETDROPPEDWIDTH is called with", "+\t* a width that is smaller than the current size of the combo", "+\t* box, it is ignored.  This the fix is to set the width after", "+\t* the combo box has been resized.", "-\tif (isDisposed ()) return result;", "-\tif (buffer != null) {", "-\t\tOS.SetWindowText (handle, buffer);", "-\t\tint bits = start [0] | (end [0] << 16);", "-\t\tOS.SendMessage (handle, OS.CB_SETEDITSEL, 0, bits);", "-\t\tif (redraw) setRedraw (true);", "-\t}", "+\tif ((style & SWT.H_SCROLL) != 0) setScrollWidth (scrollWidth);"]}], "num": 12594}