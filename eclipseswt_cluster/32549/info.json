{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b69d20c1a3224a66943db76e29b96132", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f9f7aa8a2d7840cf8516b33346017af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "9d76923ef4c61a2ac65732c7dc4442df8d1594bc", "commitAfterChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public boolean isUnique(Node method, NodeList methods)", "signatureAfterChange": "  boolean isUnique(Node method, NodeList methods)", "diff": ["-", "-public boolean isUnique(Node method, NodeList methods) {", "-\tString methodName = method.getAttributes().getNamedItem(\"selector\").getNodeValue();", "-\tint index = methodName.indexOf(\":\");", "-\tif (index != -1) methodName = methodName.substring(0, index);", "-\tfor (int j = 0; j < methods.getLength(); j++) {", "-\t\tNode other = methods.item(j);", "-\t\tNamedNodeMap attributes = other.getAttributes();", "-\t\tNode otherSel = null;", "-\t\tif (attributes != null) otherSel = attributes.getNamedItem(\"selector\");", "-\t\tif (other != method && otherSel != null) {", "-\t\t\tString otherName = otherSel.getNodeValue();", "-\t\t\tindex = otherName.indexOf(\":\");", "-\t\t\tif (index != -1) otherName = otherName.substring(0, index);", "-\t\t\tif (methodName.equals(otherName)) {", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn true;", "-}", "+", "+boolean isUnique(Node method, NodeList methods) {", "+\tString methodName = method.getAttributes().getNamedItem(\"selector\").getNodeValue();", "+\tint index = methodName.indexOf(\":\");", "+\tif (index != -1) methodName = methodName.substring(0, index);", "+\tfor (int j = 0; j < methods.getLength(); j++) {", "+\t\tNode other = methods.item(j);", "+\t\tNamedNodeMap attributes = other.getAttributes();", "+\t\tNode otherSel = null;", "+\t\tif (attributes != null) otherSel = attributes.getNamedItem(\"selector\");", "+\t\tif (other != method && otherSel != null) {", "+\t\t\tString otherName = otherSel.getNodeValue();", "+\t\t\tindex = otherName.indexOf(\":\");", "+\t\t\tif (index != -1) otherName = otherName.substring(0, index);", "+\t\t\tif (methodName.equals(otherName)) {", "+\t\t\t\treturn false;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn true;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2187a0fc6b65e588cc55ce82074689d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "9d76923ef4c61a2ac65732c7dc4442df8d1594bc", "commitAfterChange": "34830c5ea1d64c3a02443211fb13e925cac126f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void generateEnums() throws Exception", "signatureAfterChange": "  void generateEnums()", "diff": ["-public void generateEnums() throws Exception {", "-\tfor (int j = 0; j < xmls.length; j++) {", "-\t\tDocument document = getDocument(xmls[j]);", "-\t\tNodeList list = document.getDocumentElement().getChildNodes();", "-\t\tfor (int i = 0; i < list.getLength(); i++) {", "-\t\t\tNode node = list.item(i);", "-\t\t\tif (\"enum\".equals(node.getNodeName())) {", "-\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\t\tNode value = attributes.getNamedItem(\"value\");", "-\t\t\t\tif (value != null) {", "-\t\t\t\t\tout(\"public static final \");", "-\t\t\t\t\tif (value.getNodeValue().indexOf('.') != -1) {", "-\t\t\t\t\t\tout(\"double \");", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tout(\"int \");", "-\t\t\t\t\t}", "-\t\t\t\t\tout(attributes.getNamedItem(\"name\").getNodeValue());", "-\t\t\t\t\tout(\" = \");", "-\t\t\t\t\tout(value.getNodeValue());", "-\t\t\t\t\tout(\";\");", "-\t\t\t\t\toutln();", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-}", "+", "+void generateEnums() {", "+\tfor (int x = 0; x < xmls.length; x++) {", "+\t\tDocument document = documents[x];", "+\t\tif (document == null) continue;", "+\t\tHashtable extras = extraAttributes[x];", "+\t\tNodeList list = document.getDocumentElement().getChildNodes();", "+\t\tfor (int i = 0; i < list.getLength(); i++) {", "+\t\t\tNode node = list.item(i);", "+\t\t\tif (\"enum\".equals(node.getNodeName())) {", "+\t\t\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\t\t\tNode value = attributes.getNamedItem(\"value\");", "+\t\t\t\tif (value != null) {", "+\t\t\t\t\tout(\"public static final \");", "+\t\t\t\t\tif (value.getNodeValue().indexOf('.') != -1) {", "+\t\t\t\t\t\tout(\"double \");", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tout(\"int \");", "+\t\t\t\t\t}", "+\t\t\t\t\tout(attributes.getNamedItem(\"name\").getNodeValue());", "+\t\t\t\t\tout(\" = \");", "+\t\t\t\t\tout(value.getNodeValue());", "+\t\t\t\t\tout(\";\");", "+\t\t\t\t\toutln();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+}"]}], "num": 32549}