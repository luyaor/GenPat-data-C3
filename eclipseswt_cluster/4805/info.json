{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e61a8d4ff8a64a16076b6568aab8207a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e9346ffcc7c6d943db8cd9b9fab463", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "b2da8a118902d606ae445a20741ea4a19a768aa3", "commitAfterChange": "47884fba258eaf32953b79a2e1cef98747fa3e4e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 71, "signatureBeforeChange": " void setFileDetails(File file)", "signatureAfterChange": "\r \tprivate void workerAddFileDetails(final File file)", "diff": ["-\t */\r", "-\t/* package */ void setFileDetails(File file) {\r", "-\t\tdiskSpaceLabel.setText(getResourceString(\"details.FileSize.text\",\r", "-\t\t\tnew Object[] { new Long(file.length()) }));\r", "-\t\tnumObjectsLabel.setText(\"\");\r", "-\t}\r", "+\t */\r", "+\tprivate void workerAddFileDetails(final File file) {\r", "+\t\tfinal String nameString = file.getName();\r", "+\t\tfinal String dateString = dateFormat.format(new Date(file.lastModified()));\r", "+\t\tfinal String sizeString;\r", "+\t\tfinal String typeString;\r", "+\t\tfinal Image iconImage;\r", "+\t\t\r", "+\t\tif (file.isDirectory()) {\r", "+\t\t\ttypeString = getResourceString(\"filetype.Folder\");\r", "+\t\t\tsizeString = \"\";\r", "+\t\t\ticonImage = IconCache.stockImages[IconCache.iconClosedFolder];\r", "+\t\t} else {\r", "+\t\t\tsizeString = getResourceString(\"filesize.KB\",\r", "+\t\t\t\tnew Object[] { new Long((file.length() + 512) / 1024) });\r", "+\t\t\t\r", "+\t\t\tint dot = nameString.lastIndexOf('.');\r", "+\t\t\tif (dot != -1) {\r", "+\t\t\t\tString extension = nameString.substring(dot);\r", "+\t\t\t\tProgram program = Program.findProgram(extension);\r", "+\t\t\t\tif (program != null) {\r", "+\t\t\t\t\ttypeString = program.getName();\r", "+\t\t\t\t\ticonImage = IconCache.getIconFromProgram(program, extension);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\ttypeString = getResourceString(\"filetype.Unknown\", new Object[] { extension.toUpperCase() });\r", "+\t\t\t\t\ticonImage = IconCache.stockImages[IconCache.iconFile];\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\ttypeString = getResourceString(\"filetype.None\");\r", "+\t\t\t\ticonImage = IconCache.stockImages[IconCache.iconFile];\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tfinal String[] strings = new String[] { nameString, sizeString, typeString, dateString };\r", "+\r", "+\t\tdisplay.asyncExec(new Runnable() {\r", "+\t\t\tpublic void run () {\r", "+\t\t\t\tTableItem tableItem = new TableItem(table, 0);\r", "+\t\t\t\ttableItem.setText(strings);\r", "+\t\t\t\ttableItem.setImage(iconImage);\r", "+\t\t\t\ttableItem.setData(TABLEITEMDATA_FILE, file);\r", "+\t\t\t}\r", "+\t\t});\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb52b0c162934b4270bd08b9bb3cfb3b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/fileviewer/FileViewer.java", "commitBeforeChange": "b2da8a118902d606ae445a20741ea4a19a768aa3", "commitAfterChange": "47884fba258eaf32953b79a2e1cef98747fa3e4e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 71, "signatureBeforeChange": " void setFileDetails(File file)", "signatureAfterChange": "\r \tprivate void workerAddFileDetails(final File file)", "diff": ["-\t */\r", "-\t/* package */ void setFileDetails(File file) {\r", "-\t\tdiskSpaceLabel.setText(getResourceString(\"details.FileSize.text\",\r", "-\t\t\tnew Object[] { new Long(file.length()) }));\r", "-\t\tnumObjectsLabel.setText(\"\");\r", "-\t}\r", "+\t */\r", "+\tprivate void workerAddFileDetails(final File file) {\r", "+\t\tfinal String nameString = file.getName();\r", "+\t\tfinal String dateString = dateFormat.format(new Date(file.lastModified()));\r", "+\t\tfinal String sizeString;\r", "+\t\tfinal String typeString;\r", "+\t\tfinal Image iconImage;\r", "+\t\t\r", "+\t\tif (file.isDirectory()) {\r", "+\t\t\ttypeString = getResourceString(\"filetype.Folder\");\r", "+\t\t\tsizeString = \"\";\r", "+\t\t\ticonImage = IconCache.stockImages[IconCache.iconClosedFolder];\r", "+\t\t} else {\r", "+\t\t\tsizeString = getResourceString(\"filesize.KB\",\r", "+\t\t\t\tnew Object[] { new Long((file.length() + 512) / 1024) });\r", "+\t\t\t\r", "+\t\t\tint dot = nameString.lastIndexOf('.');\r", "+\t\t\tif (dot != -1) {\r", "+\t\t\t\tString extension = nameString.substring(dot);\r", "+\t\t\t\tProgram program = Program.findProgram(extension);\r", "+\t\t\t\tif (program != null) {\r", "+\t\t\t\t\ttypeString = program.getName();\r", "+\t\t\t\t\ticonImage = IconCache.getIconFromProgram(program, extension);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\ttypeString = getResourceString(\"filetype.Unknown\", new Object[] { extension.toUpperCase() });\r", "+\t\t\t\t\ticonImage = IconCache.stockImages[IconCache.iconFile];\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\ttypeString = getResourceString(\"filetype.None\");\r", "+\t\t\t\ticonImage = IconCache.stockImages[IconCache.iconFile];\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tfinal String[] strings = new String[] { nameString, sizeString, typeString, dateString };\r", "+\r", "+\t\tdisplay.asyncExec(new Runnable() {\r", "+\t\t\tpublic void run () {\r", "+\t\t\t\tTableItem tableItem = new TableItem(table, 0);\r", "+\t\t\t\ttableItem.setText(strings);\r", "+\t\t\t\ttableItem.setImage(iconImage);\r", "+\t\t\t\ttableItem.setData(TABLEITEMDATA_FILE, file);\r", "+\t\t\t}\r", "+\t\t});\r"]}], "num": 4805}