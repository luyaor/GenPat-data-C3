{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84901cfca00602f4b280e2874e1c55ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65df22a9c0f2d11c7b903a67fb9890b9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "1879f0110762a14d14725c1ff98b0c876188176a", "commitAfterChange": "ec0b807b1bde11bc567a2a3419e26587b448a196", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 50, "signatureBeforeChange": "  boolean sendKeyEvent (int type, Event event)", "signatureAfterChange": "  boolean sendKeyEvent (int type, Event event)", "diff": ["-\tif (event.character == 0) return true;", "+\tif (event.character == 0) return true;", "+\tString oldText = \"\", newText = \"\";", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tint charCount = getCharCount ();", "+\t\tPoint selection = getSelection ();", "+\t\tint start = selection.x, end = selection.y;", "+\t\tswitch (event.character) {", "+\t\t\tcase SWT.BS:", "+\t\t\t\tif (start == end) {", "+\t\t\t\t\tif (start == 0) return true;", "+\t\t\t\t\tstart = Math.max (0, start - 1);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.DEL:", "+\t\t\t\tif (start == end) {", "+\t\t\t\t\tif (start == charCount) return true;", "+\t\t\t\t\tend = Math.min (end + 1, charCount);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.CR:", "+\t\t\t\treturn true;", "+\t\t\tdefault:", "+\t\t\t\tif (event.character != '\\t' && event.character < 0x20) return true;", "+\t\t\t\toldText = new String (new char [] {event.character});", "+\t\t}", "+\t\tnewText = verifyText (oldText, start, end, event);", "+\t\tif (newText == null) return false;", "+\t\tif (charCount - (end - start) + newText.length () > textLimit) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (newText != oldText) {", "+\t\t\tString text = getText ();", "+\t\t\tString leftText = text.substring (0, start);", "+\t\t\tString rightText = text.substring (end, text.length ());", "+\t\t\tsetText (leftText + newText + rightText, false);", "+\t\t\tstart += newText.length ();", "+\t\t\tsetSelection (new Point (start, start));", "+\t\t}", "+\t}", "-\treturn true;", "+\treturn newText == oldText;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983a43ca11b3ae11f4d17e56804b310a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "68db1ce045e1e4e1eafa1e5aaa75eeb543d4437d", "commitAfterChange": "ae2d0fdd375da8fc166bf1f25a456e25e2177448", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  boolean sendKeyEvent (int type, Event event)", "signatureAfterChange": "  boolean sendKeyEvent (int type, Event event)", "diff": ["-\t//NEEDS WORK - start/end and CR", "-\tString oldText = \"\";", "-\tint charCount;", "-\tint [] ptr = new int [1];", "-\tint result = OS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, ptr, null);", "-\tif (result == OS.noErr) {", "-\t\tcharCount = OS.CFStringGetLength (ptr [0]);", "-\t\tOS.CFRelease (ptr [0]);", "-\t} else {", "-\t\tcharCount = 0;", "-\t}", "-\tshort [] s = new short [2];", "-\tOS.GetControlData (handle, (short)OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s, null);", "-\tint start = s [0], end = s [1];", "-\tswitch (event.character) {", "-\t\tcase SWT.BS:", "-\t\t\tif (start == end) {", "-\t\t\t\tif (start == 0) return true;", "-\t\t\t\tstart = Math.max (0, start - 1);", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase SWT.DEL:", "-\t\t\tif (start == end) {", "-\t\t\t\tif (start == charCount) return true;", "-\t\t\t\tend = Math.min (end + 1, charCount);", "-\t\t\t}", "-\t\t\tbreak;", "-\t\tcase SWT.CR:", "-\t\t\tpostEvent (SWT.DefaultSelection);", "-\t\t\treturn true;", "-\t\tdefault:", "-\t\t\tif (event.character != '\\t' && event.character < 0x20) return true;", "-\t\t\toldText = new String (new char [] {event.character});", "-\t}", "-\tString newText = verifyText (oldText, start, end);", "-\tif (newText == null) return false;", "-\tif (charCount - (end - start) + newText.length () > LIMIT/*textLimit*/) {", "-\t\treturn false;", "-\t}", "-\tif (newText != oldText) setText (newText);", "-\treturn newText == oldText;", "+\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b72f768bc75b9d080bf490cae51dab75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "08891e5255c23450175b59bb5067da77488c2671", "commitAfterChange": "3113638aba6faa66376fb46290077a732c1404f3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 66, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\t\t\t/* Keyboard messages */", "+", "+\t\t\t\t/* Context menu messages */", "-\t\t\t\t\tresult = WM_CONTEXTMENU (handle, lParam); break;", "+\t\t\t\t\tresult = WM_CONTEXTMENU (handle, lParam);", "+\t\t\t\t\tbreak;", "+\t\t\t\t\t", "+\t\t\t\t/* Clipboard messages */", "+\t\t\t\tcase OS.WM_CLEAR:", "+\t\t\t\tcase OS.WM_CUT:", "+\t\t\t\tcase OS.WM_PASTE:", "+\t\t\t\tcase OS.WM_UNDO:", "+\t\t\t\tcase OS.EM_UNDO:", "+\t\t\t\tcase OS.WM_SETTEXT:", "+\t\t\t\t\tif (hwnd == hwndText) {", "+\t\t\t\t\t\tresult = wmClipboard (hwndText, msg, wParam, lParam);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "-\t}\t", "+\t}", "+\tif (msg == OS.CB_SETCURSEL) {", "+\t\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\t\t\tString oldText = getText (), newText = null;", "+\t\t\t\tif (wParam == -1) {", "+\t\t\t\t\tnewText = \"\";", "+\t\t\t\t} else {", "+\t\t\t\t\tif (0 <= wParam && wParam < getItemCount ()) {", "+\t\t\t\t\t\tnewText = getItem (wParam);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (newText != null && !newText.equals (oldText)) {", "+\t\t\t\t\tint length = OS.GetWindowTextLength (handle);", "+\t\t\t\t\toldText = newText;", "+\t\t\t\t\tnewText = verifyText (newText, 0, length, null);", "+\t\t\t\t\tif (newText == null) return 0;", "+\t\t\t\t\tif (!newText.equals (oldText)) {", "+\t\t\t\t\t\tint index = indexOf (newText);", "+\t\t\t\t\t\tif (index != -1 && index != wParam) {", "+\t\t\t\t\t\t\treturn callWindowProc (OS.CB_SETCURSEL, index, lParam);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 54819}