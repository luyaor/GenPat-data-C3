{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "568623d8a85f6ba4a376adcbcbddfd99", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68769c6241d7c5f6c239f62a2a5cefa8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "15545d017cfc49844170a7161c0e82dbcff0ad24", "commitAfterChange": "2f244e084ac5cca7ad4b8b06fd1e59e2a64926f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " boolean refreshImageForZoom ()", "signatureAfterChange": " boolean refreshImageForZoom ()", "diff": ["-\t\t\tString filename = null;", "-\t\t\tMap <String, Boolean> result = DPIUtil.getImagePathAtZoom (imageFileNameProvider, deviceZoomLevel);", "-\t\t\tif (result != null && !result.isEmpty ()) {", "-\t\t\t\tfor (String str : result.keySet()) {", "-\t\t\t\t\tfilename = str;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (filename == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\tif (result.get (filename) || currentDeviceZoom != 100) {", "+\t\t\tboolean[] found = new boolean[1];", "+\t\t\tString filename = DPIUtil.validateAndGetImagePathAtZoom (imageFileNameProvider, deviceZoomLevel, found);", "+\t\t\t/* Avoid re-creating the fall-back image, when current zoom is already 100% */", "+\t\t\tif (found[0] || currentDeviceZoom != 100) {", "-\t\t\tImageData data = null;", "-\t\t\tMap <ImageData, Boolean> result = DPIUtil.getImageDataAtZoom (imageDataProvider, deviceZoomLevel);", "-\t\t\tif (result != null && !result.isEmpty ()) {", "-\t\t\t\tfor (ImageData imageData : result.keySet()) {", "-\t\t\t\t\tdata = imageData;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (data == null) SWT.error(SWT.ERROR_INVALID_IMAGE);\t", "-\t\t\tif (result.get (data) || currentDeviceZoom != 100) {", "+\t\t\tboolean[] found = new boolean[1];", "+\t\t\tImageData data = DPIUtil.validateAndGetImageDataAtZoom (imageDataProvider, deviceZoomLevel, found);", "+\t\t\t/* Avoid re-creating the fall-back image, when current zoom is already 100% */", "+\t\t\tif (found[0] || currentDeviceZoom != 100) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d73104301e9e529b42e00997fb370c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "15545d017cfc49844170a7161c0e82dbcff0ad24", "commitAfterChange": "2f244e084ac5cca7ad4b8b06fd1e59e2a64926f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " boolean refreshImageForZoom ()", "signatureAfterChange": " boolean refreshImageForZoom ()", "diff": ["-\t\t\tString filename = null;", "-\t\t\tMap <String, Boolean> result = DPIUtil.getImagePathAtZoom (imageFileNameProvider, deviceZoomLevel);", "-\t\t\tif (result != null && !result.isEmpty ()) {", "-\t\t\t\tfor (String str : result.keySet()) {", "-\t\t\t\t\tfilename = str;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (filename == null) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\t\tif (result.get (filename) || currentDeviceZoom != 100) {", "+\t\t\tboolean[] found = new boolean[1];", "+\t\t\tString filename = DPIUtil.validateAndGetImagePathAtZoom (imageFileNameProvider, deviceZoomLevel, found);", "+\t\t\t/* Avoid re-creating the fall-back image, when current zoom is already 100% */", "+\t\t\tif (found[0] || currentDeviceZoom != 100) {", "-\t\t\tImageData data = null;", "-\t\t\tMap <ImageData, Boolean> result = DPIUtil.getImageDataAtZoom (imageDataProvider, deviceZoomLevel);", "-\t\t\tif (result != null && !result.isEmpty ()) {", "-\t\t\t\tfor (ImageData imageData : result.keySet()) {", "-\t\t\t\t\tdata = imageData;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (data == null) SWT.error(SWT.ERROR_INVALID_IMAGE);\t", "-\t\t\tif (result.get (data) || currentDeviceZoom != 100) {", "+\t\t\tboolean[] found = new boolean[1];", "+\t\t\tImageData data = DPIUtil.validateAndGetImageDataAtZoom (imageDataProvider, deviceZoomLevel, found);", "+\t\t\t/* Avoid re-creating the fall-back image, when current zoom is already 100% */", "+\t\t\tif (found[0] || currentDeviceZoom != 100) {"]}], "num": 12016}