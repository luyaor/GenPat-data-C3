{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f8c33dfcaa4964856495ff1c9da5c6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ed19a30a087f75f349ef30b63b27b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "71485db964ebcb95e375837f2ec386eabc8e1c34", "commitAfterChange": "e4de5e48d2fd11782d0a2d1c87edee6f302ca529", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["-\t\tinitApplicationDelegate();\t", "-\t\tapplication.finishLaunching();", "+\t\tinitApplicationDelegate();", "+\t\t", "+\t\t/*", "+\t\t * Feature in Cocoa:  NSApplication.finishLaunching() adds an apple menu to the menu bar that isn't accessible via NSMenu.", "+\t\t * If Display objects are created and disposed of multiple times in a single process, another apple menu is added to the menu bar.", "+\t\t * It must be called or the dock icon will continue to bounce. So, it should only be called once per process, not just once per", "+\t\t * creation of a Display.  Use a static so creation of additional Display objects won't affect the menu bar. ", "+\t\t */", "+\t\tif (!Display.launched) {", "+\t\t\tapplication.finishLaunching();", "+\t\t\tDisplay.launched = true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10aa258c78445bd0e89434f50550a060", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "4e4c482e0bbb2f92025865eda544f5f0e394d3ef", "commitAfterChange": "ff923499e12bb3dad33cd8c11976ab6b3d58c1b0", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 97, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\titem.requested = true;", "-\t\t\tif ((style & SWT.VIRTUAL) != 0) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = item;", "-\t\t\t\tignoreRedraw = true;", "-\t\t\t\tsendEvent (SWT.SetData, event);", "-\t\t\t\t//widget could be disposed at this point", "-\t\t\t\tif (isDisposed ()) break;", "-\t\t\t\tignoreRedraw = false;", "-\t\t\t\tif (setScrollWidth (item, true)) redraw ();", "+\t\t\tif (!item.cached) {", "+\t\t\t\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.item = item;", "+\t\t\t\t\tignoreRedraw = true;", "+\t\t\t\t\tsendEvent (SWT.SetData, event);", "+\t\t\t\t\t//widget could be disposed at this point", "+\t\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\t\tignoreRedraw = false;", "+\t\t\t\t\tTableItem newItem = fixScrollWidth ? null : item;", "+\t\t\t\t\tif (setScrollWidth (newItem, true)) redraw ();", "+\t\t\t\t}", "+\t\t\t\titem.cached = true;"]}], "num": 47059}