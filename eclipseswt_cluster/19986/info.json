{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4e8779be670fe96fd24150aad42187f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc04ea2443a9af58b2cc8d1c3d349f07", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "4ddc80fac7dd7587f52e196fb30aea2e09d434af", "commitAfterChange": "afd2596f7d0b684f40a6cde49ffd8b1e1885b748", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tvoid createWidgets()", "signatureAfterChange": "  \tvoid createWidgets()", "diff": ["+\t\t// Combo to change the compression ratio.", "+\t\tgroup = new Group(controls, SWT.NONE);", "+\t\tgroup.setLayout(new GridLayout(3, true));", "+\t\tgroup.setText(bundle.getString(\"Save_group\"));", "+\t\timageTypeCombo = new Combo(group, SWT.DROP_DOWN | SWT.READ_ONLY);", "+\t\tString[] types = {\"JPEG\", \"PNG\", \"GIF\", \"ICO\", \"TIFF\", \"BMP\"};", "+\t\tfor (int i = 0; i < types.length; i++) {", "+\t\t\timageTypeCombo.add(types[i]);", "+\t\t}", "+\t\timageTypeCombo.select(imageTypeCombo.indexOf(\"JPEG\"));", "+\t\timageTypeCombo.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {", "+\t\t\t\tint index = imageTypeCombo.getSelectionIndex();", "+\t\t\t\tswitch(index) {", "+\t\t\t\tcase 0:", "+\t\t\t\t\tcompressionCombo.setEnabled(true);", "+\t\t\t\t\tcompressionRatioLabel.setEnabled(true);", "+\t\t\t\t\tif (compressionCombo.getItemCount() == 100) break;", "+\t\t\t\t\tcompressionCombo.removeAll();", "+\t\t\t\t\tfor (int i = 0; i < 100; i++) {", "+\t\t\t\t\t\tcompressionCombo.add(String.valueOf(i + 1));", "+\t\t\t\t\t}", "+\t\t\t\t\tcompressionCombo.select(compressionCombo.indexOf(\"75\"));", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 1:", "+\t\t\t\t\tcompressionCombo.setEnabled(true);", "+\t\t\t\t\tcompressionRatioLabel.setEnabled(true);", "+\t\t\t\t\tif (compressionCombo.getItemCount() == 10) break;", "+\t\t\t\t\tcompressionCombo.removeAll();", "+\t\t\t\t\tfor (int i = 0; i < 4; i++) {", "+\t\t\t\t\t\tcompressionCombo.add(String.valueOf(i));", "+\t\t\t\t\t}", "+\t\t\t\t\tcompressionCombo.select(0);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 2:", "+\t\t\t\tcase 3:", "+\t\t\t\tcase 4:", "+\t\t\t\tcase 5:", "+\t\t\t\t\tcompressionCombo.setEnabled(false);", "+\t\t\t\t\tcompressionRatioLabel.setEnabled(false);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t\timageTypeCombo.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));", "+\t\tcompressionRatioLabel = new Label(group, SWT.NONE);", "+\t\tcompressionRatioLabel.setText(bundle.getString(\"Compression\"));", "+\t\tcompressionRatioLabel.setLayoutData(new GridData(SWT.CENTER, SWT.CENTER, false, false));", "+\t\tcompressionCombo = new Combo(group, SWT.DROP_DOWN | SWT.READ_ONLY);", "+\t\tfor (int i = 0; i < 100; i++) {", "+\t\t\tcompressionCombo.add(String.valueOf(i + 1));", "+\t\t}", "+\t\tcompressionCombo.select(compressionCombo.indexOf(\"75\"));", "+\t\tcompressionCombo.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c6aa9dcf4b19794f6f14d7657d3da9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid createChildWidgets ()", "signatureAfterChange": " \tvoid createChildWidgets()", "diff": ["-\tvoid createChildWidgets () {", "-\t\t/* Controls for adding and removing children */", "-\t\tadd = new Button (childGroup, SWT.PUSH);", "-\t\tadd.setText (LayoutExample.getResourceString (\"Add\"));", "-\t\tadd.setLayoutData(new GridData (GridData.FILL_HORIZONTAL));", "-\t\tdelete = new Button (childGroup, SWT.PUSH);", "-\t\tdelete.setText (LayoutExample.getResourceString (\"Delete\"));", "-\t\tdelete.setLayoutData(new GridData (GridData.FILL_HORIZONTAL));", "-\t\tdelete.addSelectionListener (new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tresetEditors ();", "-\t\t\t\tint [] selected = table.getSelectionIndices ();", "-\t\t\t\ttable.remove (selected);", "-\t\t\t\t/* Refresh the control indices of the table */", "-\t\t\t\tfor (int i = 0; i < table.getItemCount(); i++) {", "-\t\t\t\t\ttable.getItem (i).setText (0, String.valueOf (i));", "-\t\t\t\t}", "-\t\t\t\trefreshLayoutComposite ();", "-\t\t\t\tlayoutComposite.layout (true);", "-\t\t\t\tlayoutGroup.layout (true);", "-\t\t\t}", "-\t\t});", "-\t\tclear = new Button (childGroup, SWT.PUSH);", "-\t\tclear.setText (LayoutExample.getResourceString (\"Clear\"));", "-\t\tclear.setLayoutData(new GridData (GridData.FILL_HORIZONTAL));", "-\t\tclear.addSelectionListener (new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tresetEditors ();", "-\t\t\t\tchildren = layoutComposite.getChildren ();", "-\t\t\t\tfor (int i = 0; i < children.length; i++) {", "-\t\t\t\t\tchildren [i].dispose ();", "-\t\t\t\t}", "-\t\t\t\ttable.removeAll ();", "-\t\t\t\tdata.clear ();", "-\t\t\t\tchildren = new Control [0];", "-\t\t\t\tlayoutGroup.layout (true);", "-\t\t\t}", "-\t\t});", "+\tvoid createChildWidgets() {", "-\t\ttable = new Table (childGroup, SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.HIDE_SELECTION);", "-\t\ttable.setLinesVisible (true);", "-\t\ttable.setHeaderVisible (true);", "-\t\tGridData gridData = new GridData (GridData.FILL_BOTH);", "-\t\tgridData.horizontalSpan = 3;", "+\t\ttable = new Table(childGroup, SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.HIDE_SELECTION);", "+\t\ttable.setLinesVisible(true);", "+\t\ttable.setHeaderVisible(true);", "+\t\tFontData def[] = Display.getCurrent().getSystemFont().getFontData();", "+\t\ttable.setFont(new Font(Display.getCurrent(), def[0].getName(), 10, SWT.NONE));", "+\t\tGridData gridData = new GridData(SWT.FILL, SWT.FILL, true, true, 3, 1);", "-\t\ttable.setLayoutData (gridData);", "-\t\ttable.addTraverseListener (traverseListener);", "+\t\ttable.setLayoutData(gridData);", "-\t\tString [] columnHeaders = getLayoutDataFieldNames ();", "+\t\tString[] columnHeaders = getLayoutDataFieldNames();", "-\t\t\tcolumn.setText (columnHeaders [i]);", "-\t\t\tif (i == 0) column.setWidth (20);", "-\t\t\telse if (i == 1) column.setWidth (80);", "-\t\t\telse column.pack ();", "+\t\t\tcolumn.setText(columnHeaders [i]);", "+\t\t\tif(i == 0) column.setWidth(100);", "+\t\t\telse if(i == 1) column.setWidth(90);", "+\t\t\telse column.pack();"]}], "num": 19986}