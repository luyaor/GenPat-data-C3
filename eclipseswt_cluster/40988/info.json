{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a3ef20b2dea5623f08ff8d6e2e05c0f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61ea7cdc557f38cbf7f9909967720074", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "9ade075934d06466df3892806ec1a57b1bbcd630", "commitAfterChange": "b6e17b5d4e6e6c4b2e2ee3aeeea4decdd00e9eee", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["+\t//TODO - fix multiple enter/exit", "-\tint mask =", "-\t\tOS.GDK_POINTER_MOTION_MASK | ", "-\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "-\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK;", "+\tint eventMask =\tOS.GDK_POINTER_MOTION_MASK | OS.GDK_BUTTON_PRESS_MASK |", "+\t\tOS.GDK_BUTTON_RELEASE_MASK | OS.GDK_ENTER_NOTIFY_MASK |", "+\t\tOS.GDK_LEAVE_NOTIFY_MASK;", "-\t\t\tOS.gtk_widget_add_events (eventHandle, mask);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.popup_menu, windowProc2, POPUP_MENU);", "+\t\t\t/* Connect the mouse signals */", "+\t\t\tOS.gtk_widget_add_events (eventHandle, eventMask);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.key_press_event, windowProc3, KEY_PRESS_EVENT);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.key_release_event, windowProc3, KEY_RELEASE_EVENT);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.show_help, windowProc3, SHOW_HELP);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.focus, windowProc3, FOCUS);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.focus_in_event, windowProc3, FOCUS_IN_EVENT);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.focus_out_event, windowProc3, FOCUS_OUT_EVENT);", "-\t\t\tOS.g_signal_connect (eventHandle, OS.event_after, windowProc3, EVENT_AFTER);", "-\t\t", "+\t\t\tOS.g_signal_connect (eventHandle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\t\t\tOS.g_signal_connect (eventHandle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+", "+\t\t\t/* Connect the event_after signal for both key and mouse */", "+\t\t\tif (eventHandle != entryHandle) {", "+\t\t\t\tOS.g_signal_connect (eventHandle, OS.event_after, windowProc3, EVENT_AFTER);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75758658c06f627af99e3abd6aa9be15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a67064f2ba7661bc8ac060cad6b32fe1e6f5936", "commitAfterChange": "e204f9acdfc99e6e29d970c4d42f50fb2ccf4ebb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void showItem (int hItem)", "signatureAfterChange": "  void showItem (int hItem)", "diff": ["-\t/*", "-\t* Bug in Windows.  When TVM_ENSUREVISIBLE is used to ensure", "-\t* that an item is visible and the client area of the tree is", "-\t* smaller that the size of one item, TVM_ENSUREVISIBLE makes", "-\t* the next item in the tree visible by making it the top item", "-\t* instead of making the desired item visible.  The fix is to", "-\t* detect the case when the client area is too small and make", "-\t* the desired visible item be the top item in the tree.", "-\t*/", "-\tif (OS.SendMessage (handle, OS.TVM_GETVISIBLECOUNT, 0, 0) == 0) {", "+\tif (fixPinheadScroll (hItem)) return;", "+\tboolean scroll = true;", "+\tRECT itemRect = new RECT ();", "+\titemRect.left = hItem;", "+\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, itemRect) != 0) {", "+\t\tforceResize ();", "+\t\tRECT rect = new RECT ();", "+\t\tOS.GetClientRect (handle, rect);", "+\t\tPOINT pt = new POINT ();", "+\t\tpt.x = itemRect.left;", "+\t\tpt.y = itemRect.top;", "+\t\tif (OS.PtInRect (rect, pt)) {", "+\t\t\tpt.y = itemRect.bottom;", "+\t\t\tif (OS.PtInRect (rect, pt)) scroll = false;", "+\t\t}", "+\t}", "+\tif (scroll) {", "-\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_FIRSTVISIBLE, hItem);", "-\t\tOS.SendMessage (handle, OS.WM_HSCROLL, OS.SB_TOP, 0);", "+\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "-\t} else {", "-\t\tboolean scroll = true;", "-\t\tRECT itemRect = new RECT ();", "-\t\titemRect.left = hItem;", "-\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 1, itemRect) != 0) {", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\tPOINT pt = new POINT ();", "-\t\t\tpt.x = itemRect.left;", "-\t\t\tpt.y = itemRect.top;", "-\t\t\tif (OS.PtInRect (rect, pt)) {", "-\t\t\t\tpt.y = itemRect.bottom;", "-\t\t\t\tif (OS.PtInRect (rect, pt)) scroll = false;", "-\t\t\t}", "-\t\t}", "-\t\tif (scroll) {", "-\t\t\tboolean fixScroll = checkScroll (hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88dd6aad67c7f92039bc1e4d295c12c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ProgressBar.java", "commitBeforeChange": "33638c8adc76b481efd322129b6eca2ad0738640", "commitAfterChange": "78c59152d0ec1af64476754faae7988d89bce497", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-\t/*", "-\t* Feature in Vista.  When the progress bar is not in", "-\t* a normal state, PBM_SETPOS does not set the position", "-\t* of the bar when the selection is equal to the minimum.", "-\t* This is undocumented.  The fix is to temporarily", "-\t* set the state to PBST_NORMAL, set the position, then", "-\t* reset the state.", "-\t*/", "-\tint /*long*/ state = 0;", "-\tboolean fixSelection = false;", "-\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\tint minumum = (int)/*64*/OS.SendMessage (handle, OS.PBM_GETRANGE, 1, 0);", "-\t\tint selection = (int)/*64*/OS.SendMessage (handle, OS.PBM_GETPOS, 0, 0);", "-\t\tif (selection == minumum) {", "-\t\t\tfixSelection = true;", "-\t\t\tstate = OS.SendMessage (handle, OS.PBM_GETSTATE, 0, 0);", "-\t\t\tOS.SendMessage (handle, OS.PBM_SETSTATE, OS.PBST_NORMAL, 0);", "-\t\t}", "-\t}", "+\t", "+\t/*", "+\t* Bug in Vista.  For some reason, when the progress bar is not in", "+\t* a normal state, it shows the selection of previous call to ", "+\t* PBM_SETPOS. This is undocumented. The fix is to call PBM_SETPOS  ", "+\t* a second time.", "+\t*/", "-\t\tif (fixSelection) OS.SendMessage (handle, OS.PBM_SETSTATE, state, 0);", "+\t\tint /*long*/ state = OS.SendMessage (handle, OS.PBM_GETSTATE, 0, 0);", "+\t\tif (state != OS.PBST_NORMAL) {", "+\t\t\tOS.SendMessage (handle, OS.PBM_SETPOS, value, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d22fb4ebfc84dd85a905ba7ab74f965", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0a67064f2ba7661bc8ac060cad6b32fe1e6f5936", "commitAfterChange": "e204f9acdfc99e6e29d970c4d42f50fb2ccf4ebb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\t\tif (hItem != 0) {", "-\t\t\t/*", "-\t\t\t* NOTE: TVM_SELECTITEM will not make an item that is already", "-\t\t\t* focused become selected but this does not matter because", "-\t\t\t* every item is explicilty selected later in this method.", "-\t\t\t*/", "-\t\t\tboolean fixScroll = checkScroll (hItem);", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "-\t\t\tignoreSelect = true;", "-\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);", "-\t\t\tignoreSelect = false;", "-\t\t\tif (fixScroll) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\t}"]}], "num": 40988}