{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27eddddab740960c5f11c95b4c0f1b83", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c2d4b37ed8935b0c044ef93597907c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "19051ffe4fd662e4376e9ef3523424e6764f8cc9", "commitAfterChange": "fec0d691465789ed5f8cc6a20256c17056f52d4b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " void createDisplay (DeviceData data)", "signatureAfterChange": " void createDisplay (DeviceData data)", "diff": ["-\tint [] argc = new int [] {0};", "-\tint xtContext = OS.XtCreateApplicationContext ();", "-\tOS.XtSetLanguageProc (xtContext, 0, 0);", "-\t", "-\t/* ", "-\t* Feature in Linux.  On some DBCS Linux platforms, the default", "-\t* font is not be properly initialized to contain a font set.", "-\t* This causes the IME to fail.  The fix is to set a fallback", "-\t* resource with an appropriated font to ensure a font set is", "-\t* found.", "-\t*/", "-\tint ptr1 = 0, ptr2 = 0; ", "-\tif (OS.IsLinux && OS.IsDBLocale) {", "-\t\tString resource = \"*fontList: -*-*-medium-r-*-*-*-120-*-*-*-*-*-*:\";", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, resource, true);", "-\t\tptr1 = OS.XtMalloc (buffer.length);", "-\t\tif (ptr1 != 0) OS.memmove (ptr1, buffer, buffer.length);", "-\t\tint [] spec = new int[]{ptr1, 0};", "-\t\tptr2 = OS.XtMalloc (spec.length * 4);", "-\t\tif (ptr2 != 0)OS.memmove (ptr2, spec, spec.length * 4);", "-\t\tOS.XtAppSetFallbackResources(xtContext, ptr2); ", "+\tint dpy = 0;", "+\tif (Default == null) {", "+\t\tint xtContext = OS.__XtDefaultAppContext ();", "+\t\tint [] dpy_return = new int [1];", "+\t\tint [] num_dpy_return = new int [1];", "+\t\tOS.XtGetDisplays (xtContext, dpy_return, num_dpy_return);", "+\t\tif (num_dpy_return [0] > 0) {", "+\t\t\tOS.memmove (dpy_return, dpy_return [0], 4);", "+\t\t\tdpy = dpy_return [0];", "+\t\t}", "-\t/* Compute the display name, application name and class */", "-\tString display_name = null;", "-\tString application_name = APP_NAME;", "-\tString application_class = APP_NAME;", "-\tif (data != null) {", "-\t\tif (data.display_name != null) display_name = data.display_name;", "-\t\tif (data.application_name != null) application_name = data.application_name;", "-\t\tif (data.application_class != null) application_class = data.application_class;", "-\t}", "-\t/* Use the character encoding for the default locale */", "-\tif (display_name != null) displayName = Converter.wcsToMbcs (null, display_name, true);", "-\tif (application_name != null) appName = Converter.wcsToMbcs (null, application_name, true);", "-\tif (application_class != null) appClass = Converter.wcsToMbcs (null, application_class, true);", "+\tif (dpy != 0) {", "+\t\txDisplay = dpy;", "+\t} else {", "+\t\tint [] argc = new int [] {0};", "+\t\tint xtContext = OS.XtCreateApplicationContext ();", "+\t\tOS.XtSetLanguageProc (xtContext, 0, 0);", "-\t/* Create the XDisplay */", "-\txDisplay = OS.XtOpenDisplay (xtContext, displayName, appName, appClass, 0, 0, argc, 0);", "-\tDisplayDisposed = false;", "-\t", "-\tif (ptr2 != 0) {", "-\t\tOS.XtAppSetFallbackResources (xtContext, 0);", "-\t\tOS.XtFree (ptr2);", "+\t\t/* ", "+\t\t* Feature in Linux.  On some DBCS Linux platforms, the default", "+\t\t* font is not be properly initialized to contain a font set.", "+\t\t* This causes the IME to fail.  The fix is to set a fallback", "+\t\t* resource with an appropriated font to ensure a font set is", "+\t\t* found.", "+\t\t*/", "+\t\tint ptr1 = 0, ptr2 = 0; ", "+\t\tif (OS.IsLinux && OS.IsDBLocale) {", "+\t\t\tString resource = \"*fontList: -*-*-medium-r-*-*-*-120-*-*-*-*-*-*:\";", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, resource, true);", "+\t\t\tptr1 = OS.XtMalloc (buffer.length);", "+\t\t\tif (ptr1 != 0) OS.memmove (ptr1, buffer, buffer.length);", "+\t\t\tint [] spec = new int[]{ptr1, 0};", "+\t\t\tptr2 = OS.XtMalloc (spec.length * 4);", "+\t\t\tif (ptr2 != 0)OS.memmove (ptr2, spec, spec.length * 4);", "+\t\t\tOS.XtAppSetFallbackResources(xtContext, ptr2); ", "+\t\t}", "+\t\t", "+\t\t/* Compute the display name, application name and class */", "+\t\tString display_name = null;", "+\t\tString application_name = APP_NAME;", "+\t\tString application_class = APP_NAME;", "+\t\tif (data != null) {", "+\t\t\tif (data.display_name != null) display_name = data.display_name;", "+\t\t\tif (data.application_name != null) application_name = data.application_name;", "+\t\t\tif (data.application_class != null) application_class = data.application_class;", "+\t\t}", "+\t\t/* Use the character encoding for the default locale */", "+\t\tif (display_name != null) displayName = Converter.wcsToMbcs (null, display_name, true);", "+\t\tif (application_name != null) appName = Converter.wcsToMbcs (null, application_name, true);", "+\t\tif (application_class != null) appClass = Converter.wcsToMbcs (null, application_class, true);", "+\t\t", "+\t\t/* Create the XDisplay */", "+\t\txDisplay = OS.XtOpenDisplay (xtContext, displayName, appName, appClass, 0, 0, argc, 0);", "+\t\tDisplayDisposed = false;", "+\t\t", "+\t\tif (ptr2 != 0) {", "+\t\t\tOS.XtAppSetFallbackResources (xtContext, 0);", "+\t\t\tOS.XtFree (ptr2);", "+\t\t}", "+\t\tif (ptr1 != 0) OS.XtFree (ptr1);", "-\tif (ptr1 != 0) OS.XtFree (ptr1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9316e2a5c3d014c4b5a8c335f1484aa2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4b1109db58ecb9bb9b1b51bb55e420f663b89727", "commitAfterChange": "a38cdec12de35954521831ad0e8e78895c25ed1c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int getLevel(int offset)", "signatureAfterChange": " public int getLevel(int offset)", "diff": ["-\t\toffset = translateOffset(offset);\t", "-\t\tint level = 0;", "-\t\t//TODO", "-\t\treturn level;", "+\t\toffset = translateOffset(offset);", "+\t\tint /*long*/ glyphOffset = layoutManager.glyphIndexForCharacterAtIndex(offset);", "+\t\tNSRange range  = new NSRange();", "+\t\trange.location = glyphOffset;", "+\t\trange.length = 1;", "+\t\tint /*long*/ pBidiLevels = OS.malloc(1);", "+\t\tbyte[] bidiLevels = new byte[1];", "+\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, pBidiLevels);", "+\t\tif (result > 0) {", "+\t\t\tOS.memmove(bidiLevels, pBidiLevels, 1);", "+\t\t}", "+\t\tOS.free(pBidiLevels);", "+\t\treturn bidiLevels[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf7c3f80523bd59ffeb8cfa27791e57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "b83eb0c1e4cdccce4cabda49a900c4db34daef55", "commitAfterChange": "1c82c6ccda11546975e6c48e1519f250c201fe86", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public Point getLocation(int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation(int offset, boolean trailing)", "diff": ["-\t\tif (trailing) {", "-\t\t\tNSRange range = new NSRange();", "+\t\tboolean rtl = false;", "+\t\tNSRange range  = new NSRange();", "+\t\trange.location = glyphIndex;", "+\t\trange.length = 1;", "+\t\tint /*long*/ pBidiLevels = OS.malloc(1);", "+\t\tbyte[] bidiLevels = new byte[1];", "+\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, pBidiLevels);", "+\t\tif (result > 0) {", "+\t\t\tOS.memmove(bidiLevels, pBidiLevels, 1);", "+\t\t\trtl = (bidiLevels[0] & 1) != 0;", "+\t\t}", "+\t\tOS.free(pBidiLevels);", "+\t\tif (trailing != rtl) {"]}], "num": 39857}