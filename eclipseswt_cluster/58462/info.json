{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d5f2fad0df3b10add319ca404f28a7b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339c85446ff4d24ac6d344f21c2f3266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5ce55e0b266c6dfa30b6d24a0d38a175d0443651", "commitAfterChange": "a4dcc8f822e014b7bd06aaea12e9214493dea500", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["+\t\t\tint[] shapeLeft = null;", "+\t\t\tint[] shapeRight = null;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint x = 0;", "+\t\t\t\tint y = size.y-borderBottom-tabHeight+SELECTION_BORDER;", "+\t\t\t\tint width = item.x;", "+\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tif (borderRight > 0) height -= 1; // fill in behind border", "+\t\t\t\tshapeLeft = new int[BOTTOM_LEFT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshapeLeft[index++] = x;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\tfor (int i = 0; i < BOTTOM_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeLeft[index++] = x+BOTTOM_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeLeft[index++] = y+height+BOTTOM_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y + height;", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\t", "+\t\t\t\tx = item.x + item.width;", "+\t\t\t\twidth = size.x - borderRight - x;", "+\t\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\t\tshapeRight = new int[BOTTOM_RIGHT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tindex = 0;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t\tfor (int i = 0; i < BOTTOM_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeRight[index++] = x+width+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeRight[index++] = y+height+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeRight[index++] = x+width;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t} else { // tabs on top", "+\t\t\t\tint x = 0;", "+\t\t\t\tint y = borderTop;", "+\t\t\t\tint width = item.x;", "+\t\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\t\tshapeLeft = new int[TOP_LEFT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshapeLeft[index++] = x;", "+\t\t\t\tshapeLeft[index++] = y+height;", "+\t\t\t\tfor (int i = 0; i < TOP_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeLeft[index++] = x+TOP_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeLeft[index++] = y+TOP_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y;", "+\t\t\t\tshapeLeft[index++] = x+width;", "+\t\t\t\tshapeLeft[index++] = y+height;", "+\t\t\t\t", "+\t\t\t\tx = item.x + item.width;", "+\t\t\t\twidth = size.x - borderRight - x;", "+\t\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\t\tshapeRight = new int[TOP_RIGHT_OUTSIDE_CORNER.length+6];", "+\t\t\t\tindex = 0;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t\tshapeRight[index++] = x;", "+\t\t\t\tshapeRight[index++] = y;", "+\t\t\t\tfor (int i = 0; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshapeRight[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshapeRight[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshapeRight[index++] = x+width;", "+\t\t\t\tshapeRight[index++] = y+height;", "+\t\t\t}", "+\t\t\t// Shape is non-rectangular, fill in gaps with parent colours\t", "+\t\t\tRegion r = new Region();", "-\t\t\tgc.setBackground(background);", "-\t\t\tgc.fillRectangle(x, y, width, height);", "+\t\t\tr.add(new Rectangle(x, y, width, height));", "+\t\t\tr.subtract(shapeLeft);", "+\t\t\tgc.setBackground(getParent().getBackground());", "+\t\t\tfillRegion(gc, r);", "+\t\t\tr.subtract(r); // clear region", "-\t\t\tgc.fillRectangle(x, y, width, height);", "+\t\t\tif (borderRight > 0) width += 1; // +1 overlap with border", "+\t\t\tr.add(new Rectangle(x, y, width, height));", "+\t\t\tr.subtract(shapeRight);", "+\t\t\tgc.setBackground(getParent().getBackground());", "+\t\t\tfillRegion(gc, r);", "+\t\t\tr.dispose();", "+\t\t\tgc.setBackground(background);", "+\t\t\tgc.fillPolygon(shapeLeft);", "+\t\t\tgc.fillPolygon(shapeRight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7c6631460357f55f76b26f95b2af13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "a7df3c99eed40e9713fdc9e934753b3768c04ec0", "commitAfterChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["+\t", "+\t//draw heavy border around outside", "+\t}", "+\t", "+\t// Draw selection border across all tabs", "+\tif (selectedIndex == -1) { // no selected item", "+\t\tint x = border;", "+\t\tint y = onBottom ? size.y - border - tabHeight : border + tabHeight - SELECTION_BORDER + 1;", "+\t\tint width = size.x - 2*border;", "+\t\tint height = SELECTION_BORDER-1;", "+\t\tgc.setBackground(getBackground());", "+\t\tgc.fillRectangle(x, y, width, height);", "+\t\tif (border > 0) {", "+\t\t\tColor c = new Color(getDisplay(), borderRGB);", "+\t\t\tx = border - 1;", "+\t\t\ty = (onBottom) ? border - 1 : border + tabHeight - SELECTION_BORDER;", "+\t\t\twidth += 1;", "+\t\t\theight = size.y - border - tabHeight + 1;", "+\t\t\tgc.setForeground(c);", "+\t\t\tgc.drawRectangle(x, y, width, height);", "+\t\t\tc.dispose();", "+\t\t}", "+\t} else { //selected item", "+\t\tint x = border;", "+\t\tint y = onBottom ? size.y - border - tabHeight : border+tabHeight-SELECTION_BORDER+1;", "+\t\tint width = size.x - 2*border;", "+\t\tint height = SELECTION_BORDER-1;", "+\t\tint[] shape = new int[] {x,y, x+width,y, x+width,y+height, x,y+height};", "+\t\tdrawSelectionBackground(gc, y, shape);", "+\t\tif (border > 0) {", "+\t\t\tCTabItem2 item = items[selectedIndex];", "+\t\t\tint itemX = item.x;", "+\t\t\tint itemY = item.y;", "+\t\t\tint itemW = item.width;", "+\t\t\tint itemH = item.height;", "+\t\t\tint extra = CTabFolder2.CURVE_WIDTH/2;", "+\t\t\tif (onBottom) {", "+\t\t\t\tint[] left = bottomLeftCorner;", "+\t\t\t\tint[] right = curve;", "+\t\t\t\tshape = new int[left.length + right.length + 14];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + left[2*i];", "+\t\t\t\t\tshape[index++]=itemY + itemH + left[2*i+1]-1;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX + itemW-extra;", "+\t\t\t\tshape[index++] = itemY + itemH - 1;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "+\t\t\t\t\tshape[index++]=itemY + right[2*i+1] - 2;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tint temp = 0;", "+\t\t\t\tint rightTabEdge = size.x - border - chevronRect.width - closeRect.width - 1;", "+\t\t\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttemp = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + SELECTION_BORDER - 1;", "+\t\t\t\t", "+\t\t\t} else {", "+\t\t\t\tint[] left = topLeftCorner;", "+\t\t\t\tint[] right = curve;", "+\t\t\t\tshape = new int[left.length+right.length+12];", "+\t\t\t\tint index = 0;", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = itemX;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + left[2*i];", "+\t\t\t\t\tshape[index++]=itemY + left[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\t\t\tshape[index++]=itemX + itemW - extra + right[2*i];", "+\t\t\t\t\tshape[index++]=itemY + right[2*i+1];", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tint temp = 0;", "+\t\t\t\tint rightTabEdge = size.x - border - chevronRect.width - closeRect.width - 1;", "+\t\t\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttemp = itemY + itemH - SELECTION_BORDER;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = itemY + item.height - SELECTION_BORDER;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = size.x - border;", "+\t\t\t\tshape[index++] = size.y - border;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = size.y - border;", "+\t\t\t\t", "+\t\t\t\tshape[index++] = border - 1;", "+\t\t\t\tshape[index++] = itemY + itemH - SELECTION_BORDER;", "+\t\t\t}", "+\t", "+\t\t\tColor c = new Color(getDisplay(), borderRGB);", "+\t\t\tgc.setForeground(c);", "+\t\t\tgc.drawPolyline(shape);", "+\t\t\tc.dispose();", "+\t\t}"]}], "num": 58462}