{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84bb0b89e881d5fd3b5f19ca12d488df", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe55eed39819a08e2218f97d63b7c6c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "11ce129f5a39073ea3f0ccccbd6f5ec71c6733d4", "commitAfterChange": "05c6b3fa8c4627937d03b301669f023682a3cc99", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  long transparentProc (long hwnd, long msg, long wParam, long lParam)", "signatureAfterChange": "  long transparentProc (long hwnd, long msg, long wParam, long lParam)", "diff": ["+\t\t\t\tif (!drawn) {", "+\t\t\t\t\tOS.SetLayeredWindowAttributes (hwndOpaque, 0xFFFFFF, (byte)0xFF, OS.LWA_COLORKEY | OS.LWA_ALPHA);", "+\t\t\t\t\tdrawn = true;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bb2bfd38078ec8298ce8a341822fb96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a7eeb0ac9b7035619dc10b9886d131166ce999e3", "commitAfterChange": "90f625763fd59e0e61fdc3a052778ce08e2fd954", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t\t\tint selectedId = id;", "+\t\t\t\t\t\tif (last [0] != 0) selectedId = last [0];", "-\t\t\t\tevent.item = _getItem (id, true);", "+\t\t\t\tevent.item = _getItem (selectedId, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c70f38d296d42cbc2d785f349e0395", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "dd05f312473477c63077f519775dd1f377f4a002", "commitAfterChange": "7e578c4cbba73dcfaf563db824f8b1f8e0d0392a", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setFont (Font value)", "signatureAfterChange": " public void setFont (Font value)", "diff": ["-\t * Notify all items of the font change so that those items that", "+\t * Notify all columns and items of the font change so that elements that", "+\tfor (int i = 0; i < columns.length; i++) {", "+\t\tcolumns [i].updateFont (gc);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93242b18e88bcada0a81fdce26b2537", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f5a2256ed5360b97e4591f4557f4afb43338ac10", "commitAfterChange": "ba421b7a7817b5fff7d6009c36059bc93e34c2ba", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  boolean sendKeyEvent (int type, Event event)", "signatureAfterChange": "  boolean sendKeyEvent (int type, Event event)", "diff": ["-\tif (newText != oldText) {", "+\tboolean result = newText == oldText;", "+\tif (newText != oldText || hiddenText != null) {", "-\t\t\tString text = new String (getEditText (0, -1, false));", "+\t\t\tString text = new String (getEditText (0, -1));", "+\t\t\tresult = false;", "-\treturn newText == oldText;", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13c21ed49d302f6bd82da4f75598427", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "1a8c2f8032c6269093b1c36cd00dccd670123eff", "commitAfterChange": "50277de52ce49cb5b21d58ec93e7486c560e7274", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\tint index = indexOf (string);", "+\t\tif (index == -1) return;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e6c7c1ae38cf02da19c5cddbc41f04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d42fe2cc4644d97ed12eaae9011f6713366a7dde", "commitAfterChange": "4bb3ad691ce6fb9e4260bb95787141dc4bf4371d", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " void clearMargin(GC gc, Color background, Rectangle clientArea, int y)", "signatureAfterChange": " void clearMargin(GC gc, Color background, Rectangle clientArea, int y)", "diff": ["-\t// top margin", "-\tgc.fillRectangle(0, 0 - y, clientArea.width, topMargin);", "-\t// bottom margin", "-\tgc.fillRectangle(0, clientArea.height - bottomMargin - y, clientArea.width, bottomMargin);", "-\t// left margin", "-\tgc.fillRectangle(0, 0, leftMargin, clientArea.height);", "-\t// right margin", "-\tgc.fillRectangle(clientArea.width - rightMargin, 0, rightMargin, clientArea.height);", "+\tif (topMargin > 0) {", "+\t\tgc.fillRectangle(0, -y, clientArea.width, topMargin);", "+\t}", "+\tif (bottomMargin > 0) {", "+\t\tgc.fillRectangle(0, clientArea.height - bottomMargin - y, clientArea.width, bottomMargin);", "+\t}", "+\tif (leftMargin > 0) {", "+\t\tgc.fillRectangle(0, -y, leftMargin, clientArea.height);", "+\t}", "+\tif (rightMargin > 0) {", "+\t\tgc.fillRectangle(clientArea.width - rightMargin, -y, rightMargin, clientArea.height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3da603005da4221a07162e4ba18bf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "6cd1ca6632ac80e9ec1f495926ca79670db9ab98", "commitAfterChange": "6ea82d2fbc11d4f45867eac45054d856d9dd7f9c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tif (string.length () == 0) string = \" \";", "+\tif (string.length () == 0) string = \" \"; //$NON-NLS-1$", "-\tif (filterPath == null) filterPath = \"\";", "+\tif (filterPath == null) filterPath = \"\"; //$NON-NLS-1$", "-\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3);", "+\tCallback cancelCallback = new Callback (this, \"cancelPressed\", 3); //$NON-NLS-1$", "+\tif (cancelAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tCallback okCallback = new Callback (this, \"okPressed\", 3);", "+\tCallback okCallback = new Callback (this, \"okPressed\", 3); //$NON-NLS-1$", "+\tif (okAddress == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\t\tselectCallback = new Callback (this, \"itemSelected\", 3);", "+\t\t\tselectCallback = new Callback (this, \"itemSelected\", 3); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "615a84a3c1ded4dc76f946769075a683", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "0d66d44355244adf6ce753df2baacbf8eb205fc4", "commitAfterChange": "b181daebd9df7df3f94c04f9f49871a9297d5975", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setWidth (int width)", "signatureAfterChange": " public void setWidth (int width)", "diff": ["-\tOS.gtk_tree_view_column_set_fixed_width (handle, Math.max (1, width));", "+\tif (width > 0) {", "+\t\tOS.gtk_tree_view_column_set_fixed_width (handle, width);", "+\t\tOS.gtk_tree_view_column_set_visible (handle, true);", "+\t} else {", "+\t\tOS.gtk_tree_view_column_set_visible (handle, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "815b1b81dc8a2027c86c86e8ace73fda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/AllWidgetTests.java", "commitBeforeChange": "87cd41ab597ac9d75f03993fe1e70dc616eb4256", "commitAfterChange": "5c54974edbe7d779f3f9a8ae1153aea350594f28", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestSuite suite = new TestSuite();", "+\tTestSuite suite = new TestSuite(AllWidgetTests.class.getName());", "-\tsuite.addTestSuite(Test_org_eclipse_swt_widgets_DateTime.class);", "+\tsuite.addTest(new JUnit4TestAdapter(Test_org_eclipse_swt_widgets_DateTime.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df9e02c12df79e73243ff66ff4db479", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/events/SelectionEvent.java", "commitBeforeChange": "276fef9746789814e21bd8e3a8e36c8ecc1732db", "commitAfterChange": "88318078b5ca53da5f23d800b3a84760481b2a7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\t\t+ \" stateMask=\" + stateMask", "+\t\t+ \" stateMask=0x\" + Integer.toHexString(stateMask)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8550f1db20d2e5a13b43b342c2bfad0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "9a0be943cea7cba8243763477cfb7e527a3be869", "commitAfterChange": "817d020b7e5b06625624b398b21d44141fefd021", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  int processSelection (Object callData)", "signatureAfterChange": "  int processSelection (Object callData)", "diff": ["-\thandleSelectionChange(macEvent.getPartCode()-1);", "+\t//System.out.println(\"mouseDown: \" + macEvent.isMouseDown() + \" \" + (macEvent.getPartCode()-1));", "+\tif (!macEvent.isMouseDown())", "+\t\thandleSelectionChange(macEvent.getPartCode()-1);", "+\telse", "+\t\tfOldValue= OS.GetControl32BitValue(handle)-1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02369900723267a3115afe4846a65cf3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "f109f5f9151efa44aceb0d49f60a7723dce0bf78", "commitAfterChange": "1b660f45c369b6eb63176ac5b87d6ee6402ab52b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t void updateText ()", "signatureAfterChange": " \t void updateText ()", "diff": ["+\t\t/*", "+\t\t * Feature in Cocoa.  Setting the attributed title on an NSMenuItem", "+\t\t * also sets the title, but clearing the attributed title does not", "+\t\t * clear the title.  The fix is to explicitly set the title to an", "+\t\t * empty string in this case.  ", "+\t\t */", "+\t\tif (text.length() == 0) nsItem.setTitle(NSString.string());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53583e16252acfd049e207d8817d5d41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "82a169db2ad1731cac41b8c9102e1999ac7a1ef7", "commitAfterChange": "f33c93a3b6199f2d2878231f007f05c03517addf", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setImages (Image [] images)", "signatureAfterChange": " public void setImages (Image [] images)", "diff": ["-\t\tOS.SetApplicationDockTileImage (images [0].handle);", "+\t\tif (images != null && images.length > 0) {", "+\t\t\tOS.SetApplicationDockTileImage (images [0].handle);", "+\t\t} else {", "+\t\t\tOS.RestoreApplicationDockTileImage ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0145d348ed44e58e6940b68d9242596d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "267efeba946291455291f7e37b5a9adb5c1006b4", "commitAfterChange": "20492b8023f4da8a65e4db2fb7cb69e8486d81b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int internal_kEventAccessibleGetFocusedChild (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \tpublic int internal_kEventAccessibleGetFocusedChild (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t//TODO: check error?", "-\t\t\t\t/* From the Carbon doc for kEventAccessibleGetFocusedChild: \"Only return immediate children;", "-\t\t\t\t * do not return grandchildren of yourself.\"", "+\t\t\t\t/* From the Carbon doc for kEventAccessibleGetFocusedChild:", "+\t\t\t\t * \"Only return immediate children; do not return grandchildren of yourself.\"", "-\t\t\t\treturn OS.noErr;", "+\t\t\t\treturn OS.noErr; //TODO: should this return eventNotHandledErr?", "-\t\t\t/* Invalid childID means the application did not implement getFocus. */", "-\t\t\treturn OS.eventNotHandledErr;", "+\t\t\t/* Invalid childID means the application did not implement getFocus, so just go with the default handler. */", "-\t\treturn OS.noErr;", "+\t\treturn OS.eventNotHandledErr;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00da267c1050dd6fa3ac546b1eab5350", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a3cf6edf2759347dfed8be8789cf18f42c61b40d", "commitAfterChange": "9421e6abdbcf8178f8958a2faae4b7d125e841b4", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\r public void setFont (Font font)", "signatureAfterChange": "\r public void setFont (Font font)", "diff": ["-\tif (font != null) hFont = font.handle;\r", "+\tif (font != null) { \r", "+\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\thFont = font.handle;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098d70bed3256e70ddb893486db40141", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "46681b23e8dc6042870eb85281e648e24dba5395", "commitAfterChange": "46ea09f17b92290fac648afe2b3c1de2b4343835", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 91, "signatureBeforeChange": " public void internal_dispose_GC (int context, GCData data)", "signatureAfterChange": " public void internal_dispose_GC (int context, GCData data)", "diff": ["-\tdisplay.removeContext (graphicsContext);", "+\tdisplay.removeContext (data);", "+\t\tif (data.visibleRgn != 0) OS.DisposeRgn(data.visibleRgn);", "+\t\tdata.visibleRgn = 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77cacabf2b76c9376a92688ddf258ddb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "81b69e387cdd58484952ce2e04785a8dfecf0969", "commitAfterChange": "32e3f63cbd1057feae4c4436db81e59de021daf6", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\tint gc = OS.gdk_gc_new(root);", "-\tdata.drawable = root;", "-\treturn gc;", "+\tint gdkGC = OS.gdk_gc_new(root);", "+\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (data != null) {", "+\t\tdata.device = this;", "+\t\tdata.drawable = root;", "+\t}", "+\treturn gdkGC;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebebb78c1dcf916e5be7207041be0d61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "894e6297387f95786ffea31acd399cd5951b0afc", "commitAfterChange": "0299b6fa52a38fa59ea3388c9448a5f9aa6191be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int callWindowProc (int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int msg, int wParam, int lParam)", "diff": ["-\treturn super.callWindowProc (msg, wParam, lParam);", "+\tif (handle == 0) return 0;", "+\tif (hwndMDIClient != 0) {", "+\t\treturn OS.DefFrameProc (handle, hwndMDIClient, msg, wParam, lParam);", "+\t}", "+\treturn OS.DefWindowProc (handle, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "860cb61d45e7b37291d4903be6aaa467", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);", "+\t\tif (!(OS.HIVIEW && data.paintEvent != 0)) OS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);", "-\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);", "+\t\tif (!(OS.HIVIEW && data.paintEvent != 0)) OS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556414f328a1741ba87d2b97b535b330", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "11ef00f2778c1377822b96c4e76dc2ae3ad98f53", "commitAfterChange": "7e2e8eb675b9221fd5694ce4b54436d8c185958f", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  void setToolTipTitle (int hwndToolTip, String text, int icon)", "signatureAfterChange": "  void setToolTipTitle (int hwndToolTip, String text, int icon)", "diff": ["+\t\t/*", "+\t\t* Feature in Windows. The text point to by pszTitle", "+\t\t* must not exceed 100 characters in length, including", "+\t\t* the null terminator.", "+\t\t*/", "+\t\tif (text.length () > 99) text = text.substring (0, 99);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cdc4eed7eeec327493bb260511afbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "0fe0e789edc99baaa0ef377f6d40692c6b08f013", "commitAfterChange": "b1cc243c2a014d8968b54382daf6c28f7205ac7f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setMaximum (int value)", "signatureAfterChange": " public void setMaximum (int value)", "diff": ["-\tint [] max = new int [1], min = new int [1];", "-\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "+\tif (value < 0) return;", "+\tint [] min = new int [1];", "+\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, null);", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xffff;", "+\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xFFFF;", "-\tupdate (pos, false, false);", "+\tif (pos > value) setSelection (value, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd91b458643a6bf93e2a8be9c7267a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "2d0d1fe9d220400e0b4957016ec81f97281b8e3b", "commitAfterChange": "c6e846c2a1f2f65f82baf98b5937ac087d800678", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public boolean getVisible ()", "signatureAfterChange": " public boolean getVisible ()", "diff": ["-\treturn OS.GTK_WIDGET_MAPPED (handle);", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 20, 0)) {", "+\t\treturn OS.gtk_widget_get_mapped(handle);", "+\t}else{", "+\t\treturn OS.GTK_WIDGET_MAPPED (handle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6c65b26530396c2a96e1ccd1d9b486", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "897136a81fc288e7c6155d7f947fda53d85bc898", "commitAfterChange": "91543b721ffce6370ab440aea3e1c8c5a1fc29a4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void setInsertMark (TreeItem item, boolean before)", "signatureAfterChange": " public void setInsertMark (TreeItem item, boolean before)", "diff": ["+\tif (item.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tif (item.parent != this) return;", "+\tOS.gtk_widget_realize (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c28d87e02a3e033e17a25311a95f69a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "9b206a3ef3da346ba734676d2f43256fbdc58e5a", "commitAfterChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " public String getItem (int index)", "signatureAfterChange": " public String getItem (int index)", "diff": ["-\tNSString str;", "+\tNSString str = null;", "-\t\tstr = new NSString(((NSComboBox)view).itemObjectValueAtIndex(index));", "+\t\tNSAttributedString attString = new NSAttributedString(((NSComboBox)view).itemObjectValueAtIndex(index));", "+\t\tif (attString != null) str = attString.string();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a578c229d78caa2d2fddb171fb816a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "71956c59494cdb52590fedb7e303112ebd1b75af", "commitAfterChange": "36d6fe1682aa30e102f30c330ada281bc14ba392", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int[] createGdipImage()", "signatureAfterChange": "  int[] createGdipImage()", "diff": ["+\t\t\t\tif (pixels == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\t\tif (pixels == 0) SWT.error(SWT.ERROR_NO_HANDLES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c04650173ff5dcf82b4c81ddec80cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void setSelection (Point selection)", "signatureAfterChange": "  public void setSelection (Point selection)", "diff": ["- */", "+", "-\tcheckWidget();", "-\tif (menuHandle == 0) {", "-\t\tshort[] s= new short[] { (short)selection.x, (short)selection.y };", "-\t\tOS.SetControlData(handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, s);", "-\t}", "-}", "+\tcheckWidget ();", "+\tif (selection == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\t// NEEDS WORK", "+\t\tshort [] s = new short [] {(short)selection.x, (short)selection.y };", "+\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextSelectionTag, 4, s);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "999bb921e7871d5a49f07cd2edd68998", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0c61b6d6610832858614549895e092d42b81441f", "commitAfterChange": "8d2d4a2223144e93d3115e4776ae403aed6d311c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  synchronized void createDisplay (DeviceData data)", "signatureAfterChange": "  synchronized void createDisplay (DeviceData data)", "diff": ["-\trendererClassInitCallback = new Callback (getClass (), \"rendererClassInitProc\", 2);", "-\trendererClassInitProc = rendererClassInitCallback.getAddress ();", "-\tif (rendererClassInitProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\trendererRenderCallback = new Callback (getClass (), \"rendererRenderProc\", 7);", "-\trendererRenderProc = rendererRenderCallback.getAddress ();", "-\trendererGetSizeCallback = new Callback (getClass (), \"rendererGetSizeProc\", 7);", "-\trendererGetSizeProc = rendererGetSizeCallback.getAddress ();", "-\tif (rendererRenderProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\tif (rendererClassInitProc == 0) {", "+\t\trendererClassInitCallback = new Callback (getClass (), \"rendererClassInitProc\", 2);", "+\t\trendererClassInitProc = rendererClassInitCallback.getAddress ();", "+\t\tif (rendererClassInitProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t}", "+\tif (rendererRenderProc == 0) {", "+\t\trendererRenderCallback = new Callback (getClass (), \"rendererRenderProc\", 7);", "+\t\trendererRenderProc = rendererRenderCallback.getAddress ();", "+\t\tif (rendererRenderProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t}", "+\tif (rendererGetSizeProc == 0) {", "+\t\trendererGetSizeCallback = new Callback (getClass (), \"rendererGetSizeProc\", 7);", "+\t\trendererGetSizeProc = rendererGetSizeCallback.getAddress ();", "+\t\tif (rendererGetSizeProc == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48e9e1d55d83c2bce30c07644f5b6f2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void showItem (TreeItem item)", "signatureAfterChange": " public void showItem (TreeItem item)", "diff": ["-\tint path = OS.gtk_tree_model_get_path(modelHandle, item.handle);", "-\tOS.gtk_tree_view_scroll_to_cell(handle, path, 0, false, 0, 0);", "-\tOS.gtk_tree_path_free(path);", "+\tif (item == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (item.isDisposed ()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\tint path = OS.gtk_tree_model_get_path (modelHandle, item.handle);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_tree_path_free (path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b08a4db0442e8e21529f1e6ba54c15b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "da84ae4ec27b2fabbda8f81f7234a1777457fa62", "commitAfterChange": "e23d69b64c25e0756ff2608c113928ff5c67e246", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " void listEvent (Event event)", "signatureAfterChange": " void listEvent (Event event)", "diff": ["+\t\t\t\tcase SWT.TRAVERSE_TAB_PREVIOUS:", "+\t\t\t\t\t// No tab traversal when pop up list open", "+\t\t\t\t\t// Do not forward on as a CCombo event", "+\t\t\t\t\treturn;", "+\t\t\te.character = event.character;", "-\t\t\t\t// escape key cancels popup list", "+\t\t\t\t// Escape key cancels popup list", "-\t\t\tif (event.character == SWT.CR || event.character == '\\t') {", "-\t\t\t\t// Enter and Tab cause default selection", "+\t\t\tif (event.character == SWT.CR) {", "+\t\t\t\t// Enter causes default selection", "-\t\t\t//At this point the widget may have been disposed.", "+\t\t\t// At this point the widget may have been disposed."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfb2fccd92b5693f18f0b163bdebd96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d57ce4c847d12740eaea9c78b892a134f6a3cb64", "commitAfterChange": "1d28c230c8521595a193c506a7bcba33dc702ce0", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": "  LRESULT wmMouseMove (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmMouseMove (int hwnd, int wParam, int lParam)", "diff": ["+\tLRESULT result = null;", "-\t\t\tsendMouseEvent (SWT.MouseMove, 0, hwnd, OS.WM_MOUSEMOVE, wParam, lParam);", "+\t\t\tif (!sendMouseEvent (SWT.MouseMove, 0, hwnd, OS.WM_MOUSEMOVE, wParam, lParam)) {", "+\t\t\t\tresult = LRESULT.ZERO;", "+\t\t\t}", "-\treturn null;", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8b4196f21a98b1fe87275f8597402a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "f5c7e4c9254cd6daa97b7649a31d13c6c5d0de6c", "commitAfterChange": "189429edfa9fbff796a0033ed821365347e21fb7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["-protected void javaToNative (Object object, TransferData transferData){", "-\tif ((object == null) || !(object instanceof byte[]) || !(isSupportedType(transferData))) {", "-\t\ttransferData.result = 0;", "-\t\treturn;", "-\t}", "+protected void javaToNative (Object object, TransferData transferData) {", "+\ttransferData.result = 0;", "+\tif ((object == null) || !(object instanceof byte[]) || !(isSupportedType(transferData))) return;", "-\ttransferData.pValue = OS.g_malloc(buffer.length);", "-\tOS.memmove(transferData.pValue, buffer, buffer.length);", "+\tint pValue = OS.g_malloc(buffer.length);", "+\tif (pValue == 0) return;", "+\tOS.memmove(pValue, buffer, buffer.length);", "+\ttransferData.pValue = pValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb2293b40cdf30b8e8e2b0c92c2a1b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b971249a8039a58ba3902fc2adf7bb1b6ba86f26", "commitAfterChange": "c8ae75f97f891a383799bf9a5746f7ae6e14c70a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void _setVisible (boolean visible)", "signatureAfterChange": "  void _setVisible (boolean visible)", "diff": ["-\t\t//TODO - not tested", "+\t\t\tPoint shellCoord = display.map(null, shell, new Point(x,y));", "-\t\t\tlocation.x = x;", "-\t\t\tlocation.y = y;", "-//\t\t\tlocation.y = window.screen().frame().height - location.y;", "+\t\t\tlocation.x = shellCoord.x;", "+\t\t\tlocation.y = window.frame().height - shellCoord.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142388281634994f4ac780a98574b40d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "9c4d510cdfe170636a0f339889c955614129d85d", "commitAfterChange": "1ecd9180e0c0cae33976661992b5e6fd4cfeb7d2", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  public void setMenuBar (Menu menu)", "signatureAfterChange": "  public void setMenuBar (Menu menu)", "diff": ["-//\tif (display.getActiveShell () == this) {", "-//\t\tdisplay.setMenuBar (menuBar);", "-//\t}", "+\tif (display.getActiveShell () == this) {", "+\t\tdisplay.setMenuBar (menuBar);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea9c241b15002eefc40347a4ecdb8e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d041040c243e5b17e2101d23b4c6b963f5e62b8d", "commitAfterChange": "ff3cadaa049c759729d9bc97390eb051b58a23a3", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int getVisibleRegion (int control)", "signatureAfterChange": "  int getVisibleRegion (int control)", "diff": ["-\tint visibleRgn = OS.NewRgn (), childRgn = OS.NewRgn (), tempRgn = OS.NewRgn ();", "+\tint visibleRgn = OS.NewRgn ();", "+\tif (getDrawCount () > 0) return visibleRgn;", "+\tint childRgn = OS.NewRgn (), tempRgn = OS.NewRgn ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807633ef0a20a85a481fc1936133149e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "11f3358c48d99e68259f99293e7e69f00d4e1bea", "commitAfterChange": "ce9b902215237762b04b803e09bf87dd462f135f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void checkGC(int mask)", "signatureAfterChange": "  void checkGC(int mask)", "diff": ["+\t\tdata.state &= ~NULL_PEN;", "+\t\tdata.state &= ~NULL_PEN;", "+\t} else if ((state & NULL_PEN) != 0) {", "+\t\tdata.hOldPen = OS.SelectObject(handle, OS.GetStockObject(OS.NULL_PEN));", "+\t\tdata.state &= ~PEN;", "+\t\tdata.state &= ~NULL_BRUSH;", "-\t}", "-\tif ((state & NULL_BRUSH) != 0) {", "+\t\tdata.state &= ~NULL_BRUSH;", "+\t} else if ((state & NULL_BRUSH) != 0) {", "-\t}", "-\tif ((state & NULL_PEN) != 0) {", "-\t\tdata.hOldPen = OS.SelectObject(handle, OS.GetStockObject(OS.NULL_PEN));", "-\t\tdata.state &= ~PEN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b10d04dd20d916a2309fee85d7daf7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "fa7c76641c503cd76fa7003bec8ccf78fc6288cd", "commitAfterChange": "651a4ac0a6ad615394e16cd0ba596fc041956f26", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-//\t\tif (rep.isKindOfClass(OS.class_NSBitmapImageRep)) { ", "-//\t\t\trep.retain();", "-//\t\t\timageRep = new NSBitmapImageRep(rep.id);", "-//\t\t} else {", "+\t\tif (rep.isKindOfClass(OS.class_NSBitmapImageRep)) { ", "+\t\t\trep.retain();", "+\t\t\timageRep = new NSBitmapImageRep(rep.id);", "+\t\t} else {", "-//\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6286a99e5407e61f7fe45869137e7268", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["+\tString oldText = null;", "-\t\tString oldText = getClipboardText ();", "+\t\toldText = getClipboardText ();", "-\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "-\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tif (txnObject == 0) {", "+\t\t\t\t\tinsertEditText (newText);", "+\t\t\t\t} else {", "+\t\t\t\t\tsetTXNText (OS.kTXNUseCurrentSelection, OS.kTXNUseCurrentSelection, newText);", "+\t\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\t}", "-\tif (paste) OS.TXNPaste (txnObject);", "+\tif (paste) {", "+\t\tif (txnObject == 0) {", "+\t\t\tif (oldText == null) oldText = getClipboardText ();", "+\t\t\tinsertEditText (oldText);", "+\t\t} else {", "+\t\t\tOS.TXNPaste (txnObject);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b36c6f0856272533581e866309d2fcc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "59d68781d2f381676820fceedcb569528c53c05a", "commitAfterChange": "62ea45d3534d0220536da27b65cc2a8e1eecafe3", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void redraw (int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void redraw (int x, int y, int width, int height, boolean all)", "diff": ["-\tOS.gdk_window_clear_area_e (window, x, y, width, height);", "+\tGdkRectangle rect = new GdkRectangle ();", "+\trect.x = x;", "+\trect.y = y;", "+\trect.width = width;", "+\trect.height = height;", "+\tOS.gdk_window_invalidate_rect (window, rect, all);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dcb546b2246fe33bc5ea369c7a8018d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0068e41ed62132e76c6af5624e9acb501c2ce103", "commitAfterChange": "a92b7d83f56c5c0b9be5674e600ed472d90d401b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public void test_getAdvanceWidthC()", "signatureAfterChange": "  public void test_getAdvanceWidthC()", "diff": ["-\twarnUnimpl(\"Test test_getAdvanceWidthC not written\");", "+\tint w = gc.getAdvanceWidth('a');", "+\tassertTrue(w > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36d1fe01e6f1277f671dd63d558513f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "545180c481c04bddb5f358152056c1461a4a34d1", "commitAfterChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  int setString(String string, int flags)", "signatureAfterChange": "  int setString(String string, int flags)", "diff": ["+\tif (data.layout == 0) createLayout ();", "+\tdata.stringWidth = data.stringHeight = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446f31821f7f525ce12c0846d14345a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "f6a9faea76ab3f42d0301599acb7315834790e40", "commitAfterChange": "a1e0ef96d65e6ef2f4c5b16924d15cef55932534", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public char[] getTextChars ()", "signatureAfterChange": " public char[] getTextChars ()", "diff": ["+\tfor (int i = 0; i < buffer.chars.length; i++) buffer.chars [i] = '\\0';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ec28ca31b39ce19c5f20815065d8ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5aebd96e6e03d77d1ec1be3bdce35459d0a39900", "commitAfterChange": "da8686b28118a56acbe181513b1c7f6508988143", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void disposeGdip()", "signatureAfterChange": "  void disposeGdip()", "diff": ["+\tif (data.hGDIFont != 0) OS.DeleteObject(data.hGDIFont);", "-\t\tdata.gdipFont = data.gdipPen = 0;", "+\t\tdata.gdipFont = data.gdipPen = data.hGDIFont = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b2fd414e9259a9003e3ed156511de3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "536c62e9514131182a9b045fed1e7826bebf642b", "commitAfterChange": "f38412a6352016ae60fd2c6ed368e6d7a9cbbb7f", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " public void setSelection (String [] items)", "signatureAfterChange": " public void setSelection (String [] items)", "diff": ["+\tint count = 0;", "+\t\t\t\tcount = 1;", "-\t\t\t\tint [] newIds = new int [ids.length + 4];", "-\t\t\t\tSystem.arraycopy (ids, 0, newIds, 0, ids.length);", "-\t\t\t\tnewIds [ids.length] = index + 1;", "-\t\t\t\tids = newIds;", "+\t\t\t\tif (count == ids.length) {", "+\t\t\t\t\tint [] newIds = new int [ids.length + 4];", "+\t\t\t\t\tSystem.arraycopy (ids, 0, newIds, 0, ids.length);", "+\t\t\t\t\tids = newIds;", "+\t\t\t\t}", "+\t\t\t\tids [count++] = index + 1;", "-\tselect (ids, ids.length, true, false);", "+\tselect (ids, count, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b29434ea74bf3a8e3e3fddc895236d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "7867f4333df3401f2d9ceb7dab2dbc0c4b8c2343", "commitAfterChange": "d2e5dcd7efd5667e08cacd2f0a4973952e5a602f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\tif (handle != 0) OS.gtk_widget_destroy (handle);", "+\tif (handle != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "+\t\t\tOS.g_object_unref (handle);", "+\t\t} else {", "+\t\t\tOS.gtk_widget_destroy (handle);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e5337677c29518c4c2851de68f5757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "0bab5ef16bf9ed26100e0695fd20f73178a7c073", "commitAfterChange": "ddd03c76ec559fb767478e2193acaf2065b1f45d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void setMenu (Menu menu)", "signatureAfterChange": " public void setMenu (Menu menu)", "diff": ["-\t\tOS.gtk_menu_item_remove_submenu (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(2, 12, 0)) {", "+\t\t\tOS.gtk_menu_item_set_submenu (handle, 0);", "+\t\t} else {", "+\t\t    OS.gtk_menu_item_remove_submenu (handle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a9273074552dd8a12a8b6252b688a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9121b95f0bbb802a8cdf8b1ab1235f72b3f88207", "commitAfterChange": "6b7c150c6d7154a13c23dc230625bb5c8ca34b91", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void computeRuns()", "signatureAfterChange": "  void computeRuns()", "diff": ["+\t\tif (numberOfLines < bounds.length - 1) bounds[numberOfLines].height -= spacing;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f30ef89d383bfde4c8f609902525b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "04607756e2552b720c7a6ef13f8dacb783766546", "commitAfterChange": "6f1ca9da79569ee49d3430f1aad6de7eee9d9184", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public void add (Region region)", "signatureAfterChange": "\r \r public void add (Region region)", "diff": ["+\tif (region.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tif (region.handle == 0 || region.handle == EMPTY_REGION) return;\r", "+\tif (region.handle == EMPTY_REGION) return;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ab6a2d04ee5ba2de9fb0f08bd684fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "1a193fed7fb8f834ff006a600108343edb183958", "commitAfterChange": "a7fde4ef9d2adcc5e3ca7f3f1eeba3ca343ab9a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r Point getTitleSize()", "signatureAfterChange": "\r \r Point getTitleSize()", "diff": ["-\t\tif (args [1] != 0) {\r", "-\t\t\tint length = OS.strlen (args [1]);\r", "-\t\t\tOS.PfExtentText(rect, null, args [4], args [1], length);\r", "+\t\tint str = args [1];\r", "+\t\tif (str != 0) {\r", "+\t\t\tint length = OS.strlen (str);\r", "+\t\t\tif (length > 0) {\r", "+\t\t\t\tOS.PfExtentText(rect, null, args [4], str, length);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e0707916bf837d11a05b85a9d505d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["-public void setFont (Font font) {\r", "-\tif (font == null) font = data.device.getSystemFont ();\r", "-\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\tdata.fontList = font.handle;\r", "+ */", "+public void setFont (Font font) {", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "+\tif (font == null) {\r", "+\t\tdata.fontList = data.device.systemFont;", "+\t} else {\r", "+\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\tdata.fontList = font.handle;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d952ec5513c84b264ef5bb0307df1efb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b57747abb0a6d500538c509fbd694a7f0fb31a30", "commitAfterChange": "9b1e6a553a714c81f1d1f1cccddf187918d20587", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setFullScreen (boolean fullScreen)", "signatureAfterChange": " public void setFullScreen (boolean fullScreen)", "diff": ["+\tif (window == null) return;", "-\tthis.fullScreen = fullScreen; ", "+\tthis.fullScreen = fullScreen;", "+\t", "+\tif (OS.VERSION >= 0x1070) {", "+\t\tOS.objc_msgSend(window.id, OS.sel_toggleFullScreen_, 0);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506c25e03152efd2c044193428c57f9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ebb5060cad733406a88647907ec2c4a932cfe720", "commitAfterChange": "28f166fa20c7ba5aa3886efdb6cf282aa0351b06", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r void manageChildren ()", "signatureAfterChange": "\r void manageChildren ()", "diff": ["-\tint [] argList = {OS.XmNborderWidth, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\tOS.XtResizeWidget (handle, 1, 1, argList [1]);\r", "+\tint [] argList1 = {OS.XmNborderWidth, 0};\r", "+\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "+\tOS.XtResizeWidget (handle, 1, 1, argList1 [1]);\r", "+\tif (parent != null) parent.enableTraversal (true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302bf5b27afed58963cf6f62cceed5d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "67bb9727b76e2f0c863a810245cc23ac926c9672", "commitAfterChange": "84f0851d62b9c83cc7606787c1293d3bbe7c3b45", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public int internal_new_GC (GCData data)", "signatureAfterChange": "  public int internal_new_GC (GCData data)", "diff": ["-\t\tOS.CreateCGContextForPort (port, buffer);", "+\t\tif (false && data.paintEvent != 0) {", "+\t\t\tOS.QDBeginCGContext(port, buffer);", "+\t\t} else {", "+\t\t\tOS.CreateCGContextForPort (port, buffer);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b4bf36dd1efc99787f26446c83d0e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "46681b23e8dc6042870eb85281e648e24dba5395", "commitAfterChange": "46ea09f17b92290fac648afe2b3c1de2b4343835", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void destroy()", "signatureAfterChange": "  void destroy()", "diff": ["+\tif (data.visiblePath != null) data.visiblePath.release();", "-\tdata.path = data.clipPath = null;", "+\tdata.path = data.clipPath = data.visiblePath = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d133f9aaedda8cc50473e56adbbdbd1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/SwtPerformanceTestCase.java", "commitBeforeChange": "e5a7ae36231ce2e1dfd56c4fa9b4e1a5d1ff8dd9", "commitAfterChange": "98e2e200fe68be09f9b373c651935293cbbd9343", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  protected PerformanceMeter createMeter()", "signatureAfterChange": "  protected PerformanceMeter createMeter(String id)", "diff": ["-protected PerformanceMeter createMeter() {", "-\treturn createMeter(null);", "-}", "+\tPerformanceMeter meter = performance.createPerformanceMeter(id);", "+\tperformance.tagAsSummary(meter, id, Dimension.CPU_TIME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8295b73fb9a1a6165f7a7b60122778ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "0c362258ce99de6fe7485334e3e3f9bf410a9f1d", "commitAfterChange": "6de2034c51f52173b662fb7ec0062b2b393aaf5a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  Point computeSize ()", "signatureAfterChange": "  Point computeSize ()", "diff": ["-\t\t((NSButton)view).sizeToFit ();", "-\t\tNSRect rect = view.frame();", "-\t\twidth = (int)rect.width + INSET;", "-\t\theight = (int)rect.height + INSET;", "+\t\t((NSButton)button).sizeToFit ();", "+\t\tNSRect frame = button.frame();", "+\t\twidth = (int)frame.width + INSET;", "+\t\theight = (int)frame.height;", "+\t\tif (arrow != null) {", "+\t\t\twidth += ARROW_INSET + ARROW_WIDTH;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e2b0c4fcebbefbe3c2318b177022fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 50, "signatureBeforeChange": " public TreeItem getTopItem()", "signatureAfterChange": " public TreeItem getTopItem()", "diff": ["+public TreeItem getTopItem() {", "+\tcheckWidget();", "+\tif (availableItems.length == 0) return null;", "+\treturn availableItems[topIndex];", "- */", "-public TreeItem getTopItem() {", "-\tcheckWidget();", "-\treturn (TreeItem)getVisibleItem(getTopIndex());", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142fc5b4be5aafe0e85c4583469a909a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/events/TouchEvent.java", "commitBeforeChange": "276fef9746789814e21bd8e3a8e36c8ecc1732db", "commitAfterChange": "88318078b5ca53da5f23d800b3a84760481b2a7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\tstring += \" stateMask=\" + stateMask", "+\tstring += \" stateMask=0x\" + Integer.toHexString(stateMask)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d37bf91c7bb4548a4565cb70e49d757a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "42583da9be8f80cfe22120f82fb19cc298e6f63f", "commitAfterChange": "63bd19cba73e17c57e5b3dc4d39b3ccc181e50ea", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " public void setBackground(Color color)", "signatureAfterChange": " public void setBackground(Color color)", "diff": ["+\tif (data.bg != null) data.bg.release();", "+\tdata.bg = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c701433bd33b6f596655e5c4bebe6c99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "dab04b59098116bd0aa6cb8ca76ce653fc22e7c8", "commitAfterChange": "a10e56ab0dd0e171181bcf234a6b67a21a331314", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);", "-\twidth = rect.right - rect.left;", "+\tint length = buffer.length ();", "+\tif (length != 0) {", "+\t\tOS.DrawText (hDC, buffer, length, rect, flags); ", "+\t\twidth = rect.right - rect.left;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "816b8593ae67e7b9251f37e7593d3b80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c3731b3065a21d256eeadb949bbe34f8db4bdb3b", "commitAfterChange": "12d93934093b13f2eaafffcc3de690ef5a1baa69", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t\tif (fixResize ()) {", "+\t\t\tif (window.respondsToSelector(OS.sel_setMovable_)) {", "+\t\t\t\tOS.objc_msgSend(window.id, OS.sel_setMovable_, 0);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "838b723ebf26344168603db03fe81b14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/carbon/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "bf949f04bde263da1b4dc67d7257d61d6f5c55e6", "commitAfterChange": "a004a75ac1a6b3f1e6b7e042c19df1a70333b3fd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["+\tif (PREVIEW_DRIVER.equals(data.driver)) {", "+\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc50ce8898ac6335e411cd660ae9a061", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "5a0b9f6bf637393c18ef8ee051ee221c8acf44e5", "commitAfterChange": "60838e2c3e4c765749cd5d2affdc6d9213c95a33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\tif (webView.respondsToSelector(OS.sel__setDashboardBehavior)) {", "+\t\tOS.objc_msgSend(webView.id, OS.sel__setDashboardBehavior, 2, 1);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8adf1a4db51c89d0c6841c5446cb10c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "baec48b9bf0042e322500cba32f1b9bdac3cbfa0", "commitAfterChange": "f427c1590631b66d91e74b5c591fc671d07e2ff7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public static Image cocoa_new(Device device, int type, NSImage nsImage)", "signatureAfterChange": " public static Image cocoa_new(Device device, int type, NSImage nsImage)", "diff": ["+\tNSImageRep rep = nsImage.bestRepresentationForDevice(null);", "+\tif (rep.isKindOfClass(NSBitmapImageRep.static_class())) { ", "+\t\timage.imageRep = new NSBitmapImageRep(rep.id);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5da20c824c300e53c2270035f871bb47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "6a6df6cffde4492bff18a5288fe746a25d2b63eb", "commitAfterChange": "999226f6bfe889d48d5a85f5b6b8da5198f84a27", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " void onFocusOut(Event e)", "signatureAfterChange": " void onFocusOut(Event e)", "diff": ["-\tif (objIOleInPlaceObject != null) {", "-\t\tString progID = getProgramID();", "-\t\tif (progID != null && progID.startsWith(SHELL_PROG_ID)) {", "+\tif (objIOleInPlaceObject == null) return;", "+\tString progID = getProgramID();", "+\tif (progID == null) return;", "+\tif (!progID.startsWith(SHELL_PROG_ID)) {", "+\t\tsuper.onFocusOut(e);", "+\t\treturn;", "+\t}", "+\t/*", "+\t* Bug in Windows.  When IE7 loses focus and UIDeactivate()", "+\t* is called, IE destroys the caret even though it is", "+\t* no longer owned by IE.  If focus has moved to a control", "+\t* that shows a caret then the caret disappears.  The fix ", "+\t* is to detect this case and restore the caret.", "+\t*/", "+\tint threadId = OS.GetCurrentThreadId();", "+\tGUITHREADINFO lpgui1 = new GUITHREADINFO();", "+\tlpgui1.cbSize = GUITHREADINFO.sizeof;", "+\tOS.GetGUIThreadInfo(threadId, lpgui1);", "+\tobjIOleInPlaceObject.UIDeactivate();", "+\tif (lpgui1.hwndCaret != 0) {", "+\t\tGUITHREADINFO lpgui2 = new GUITHREADINFO();", "+\t\tlpgui2.cbSize = GUITHREADINFO.sizeof;", "+\t\tOS.GetGUIThreadInfo(threadId, lpgui2);", "+\t\tif (lpgui2.hwndCaret == 0 && lpgui1.hwndCaret == OS.GetFocus()) {", "+\t\t\tif (SWT_RESTORECARET == 0) {", "+\t\t\t\tSWT_RESTORECARET = OS.RegisterWindowMessage (new TCHAR (0, \"SWT_RESTORECARET\", true));", "+\t\t\t}", "-\t\t\t* Bug in Windows.  When IE7 loses focus and UIDeactivate()", "-\t\t\t* is called, IE destroys the caret even though it is", "-\t\t\t* no longer owned by IE.  If focus has moved to a control", "-\t\t\t* that shows a caret then the caret disappears.  The fix ", "-\t\t\t* is to detect this case and restore the caret.", "+\t\t\t* If the caret was not restored by SWT, put it back using", "+\t\t\t* the information from GUITHREADINFO.  Note that this will", "+\t\t\t* not be correct when the caret has a bitmap.  There is no", "+\t\t\t* API to query the bitmap that the caret is using.", "-\t\t\tint threadId = OS.GetCurrentThreadId();", "-\t\t\tGUITHREADINFO lpgui1 = new GUITHREADINFO();", "-\t\t\tlpgui1.cbSize = GUITHREADINFO.sizeof;", "-\t\t\tOS.GetGUIThreadInfo(threadId, lpgui1);", "-\t\t\tobjIOleInPlaceObject.UIDeactivate();", "-\t\t\tif (lpgui1.hwndCaret != 0) {", "-\t\t\t\tGUITHREADINFO lpgui2 = new GUITHREADINFO();", "-\t\t\t\tlpgui2.cbSize = GUITHREADINFO.sizeof;", "-\t\t\t\tOS.GetGUIThreadInfo(threadId, lpgui2);", "-\t\t\t\tif (lpgui2.hwndCaret == 0 && lpgui1.hwndCaret == OS.GetFocus()) {", "-\t\t\t\t\tif (SWT_RESTORECARET == 0) {", "-\t\t\t\t\t\tSWT_RESTORECARET = OS.RegisterWindowMessage (new TCHAR (0, \"SWT_RESTORECARET\", true));", "-\t\t\t\t\t}", "-\t\t\t\t\t/*", "-\t\t\t\t\t* If the caret was not restored by SWT, put it back using", "-\t\t\t\t\t* the information from GUITHREADINFO.  Note that this will", "-\t\t\t\t\t* not be correct when the caret has a bitmap.  There is no", "-\t\t\t\t\t* API to query the bitmap that the caret is using.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (OS.SendMessage (lpgui1.hwndCaret, SWT_RESTORECARET, 0, 0) == 0) {", "-\t\t\t\t\t\tint width = lpgui1.right - lpgui1.left;", "-\t\t\t\t\t\tint height = lpgui1.bottom - lpgui1.top;", "-\t\t\t\t\t\tOS.CreateCaret (lpgui1.hwndCaret, 0, width, height);", "-\t\t\t\t\t\tOS.SetCaretPos (lpgui1.left, lpgui1.top);", "-\t\t\t\t\t\tOS.ShowCaret (lpgui1.hwndCaret);", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\tif (OS.SendMessage (lpgui1.hwndCaret, SWT_RESTORECARET, 0, 0) == 0) {", "+\t\t\t\tint width = lpgui1.right - lpgui1.left;", "+\t\t\t\tint height = lpgui1.bottom - lpgui1.top;", "+\t\t\t\tOS.CreateCaret (lpgui1.hwndCaret, 0, width, height);", "+\t\t\t\tOS.SetCaretPos (lpgui1.left, lpgui1.top);", "+\t\t\t\tOS.ShowCaret (lpgui1.hwndCaret);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d05a7fa20c68e9c177af3be494fb1df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e9a0bffc1e18ef92b40e9e600fc0bdd0291d0566", "commitAfterChange": "25bfbdc606fb2dc7df34ccc9f7ff94e23b2b618c", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "\r boolean translateMnemonic (int key, XKeyEvent xEvent)", "signatureAfterChange": "\r boolean translateMnemonic (int key, XKeyEvent xEvent)", "diff": ["-\tif (xEvent.state != OS.Mod1Mask) {\r", "-\t\tif (xEvent.state != 0 || !(this instanceof Button)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "+\tif (xEvent.state == 0) {\r", "+\t\tint code = traversalCode ();\r", "+\t\tif ((code & SWT.TRAVERSE_MNEMONIC) == 0) return false;\r", "+\t} else {\r", "+\t\tif (xEvent.state != OS.Mod1Mask) return false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64b71bf24e9ae9c75b636a440d2e1b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e7472be62a35d340ded1ff8e0de89ae6506d1723", "commitAfterChange": "c65bd10509fc4e3f55dcb1376fcd8c5e65786199", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["-\t\tPhPoint_t pt = new PhPoint_t ();\r", "-\t\tpt.x = (short) x;\r", "-\t\tpt.y = (short) y;\r", "-\t\tif (!hasLocation) {\t\t\r", "-\t\t\tint ig = OS.PhInputGroup (0);\r", "-\t\t\tPhCursorInfo_t info = new PhCursorInfo_t ();\r", "-\t\t\tOS.PhQueryCursor ((short) ig, info);\r", "-\t\t\tpt.x = info.last_press_x;\r", "-\t\t\tpt.y = info.last_press_y;\r", "-\t\t}\r", "-\t\tint ptr = OS.malloc (PhPoint_t.sizeof);\r", "-\t\tOS.memmove (ptr, pt, PhPoint_t.sizeof);\r", "-\t\tOS.PtSetResource (handle, OS.Pt_ARG_POS, ptr, 0);\r", "-\t\tOS.free (ptr);\r", "-\t\tOS.PtRealizeWidget (handle);\r", "+\t\tif (getItemCount () != 0) {\r", "+\t\t\tPhPoint_t pt = new PhPoint_t ();\r", "+\t\t\tpt.x = (short) x;\r", "+\t\t\tpt.y = (short) y;\r", "+\t\t\tif (!hasLocation) {\t\t\r", "+\t\t\t\tint ig = OS.PhInputGroup (0);\r", "+\t\t\t\tPhCursorInfo_t info = new PhCursorInfo_t ();\r", "+\t\t\t\tOS.PhQueryCursor ((short) ig, info);\r", "+\t\t\t\tpt.x = info.last_press_x;\r", "+\t\t\t\tpt.y = info.last_press_y;\r", "+\t\t\t}\r", "+\t\t\tint ptr = OS.malloc (PhPoint_t.sizeof);\r", "+\t\t\tOS.memmove (ptr, pt, PhPoint_t.sizeof);\r", "+\t\t\tOS.PtSetResource (handle, OS.Pt_ARG_POS, ptr, 0);\r", "+\t\t\tOS.free (ptr);\r", "+\t\t\tOS.PtRealizeWidget (handle);\r", "+\t\t} else {\r", "+\t\t\tsendEvent (SWT.Hide);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baabd12df9cac7b65e5c333ecdea05fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "a3fa51046bf7e95f74fcee933df95431cc97dea4", "commitAfterChange": "a3916015a16403e8507d19ff7f1200e0deee7e4f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public TabItem getItem (int index)", "signatureAfterChange": "\r \r public TabItem getItem (int index)", "diff": ["-\tint list = OS.gtk_container_children (handle);\r", "-\tint itemCount = list != 0 ? OS.g_list_length (list) : 0;\r", "+\tint list = OS.gtk_container_get_children (handle);\r", "+\tif (list == 0) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\tint itemCount = OS.g_list_length (list);\r", "+\tOS.g_list_free (list);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7f386cf37096cf1b8012959a97dd48f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9e2c4a75f5d0270bda643dbd13daa224d06fc393", "commitAfterChange": "6824278b35cb6d52d341f9cd0fcf2c132c77449b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\t\tif (selected && explorerTheme) {", "+\t\t\t\tdata.foreground = OS.GetSysColor (OS.COLOR_WINDOWTEXT);", "+\t\t\t} else {", "+\t\t\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\t\t}", "-\t\t\tint newTextClr = OS.GetTextColor (hDC);", "+\t\t\tint newTextClr = data.foreground;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4525ae918ba330b6420e9509754565e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TreeEditor.java", "commitBeforeChange": "1b889340caf480936f4018eab2c246c7ce4765e9", "commitAfterChange": "643310b8aed185d2254952ca52fe5f9e8d129254", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " Rectangle computeBounds ()", "signatureAfterChange": "  Rectangle computeBounds ()", "diff": ["+", "-\tif (item == null || item.isDisposed()) return new Rectangle(0, 0, 0, 0);", "-\tRectangle cell = item.getBounds();", "+\tif (item == null || column == -1 || item.isDisposed()) return new Rectangle(0, 0, 0, 0);", "+\tRectangle cell = item.getBounds(column);", "+\tRectangle rect = item.getImageBounds(column);", "+\tcell.x = rect.x + rect.width;", "+\tcell.width -= rect.width;", "-\t\t// Bounds of tree item only include the text area - stretch out to include ", "-\t\t// entire client area", "-\t\tcell.width = area.x + area.width - cell.x;", "+\t\tif (tree.getColumnCount() == 0) {", "+\t\t\t// Bounds of tree item only include the text area - stretch out to include ", "+\t\t\t// entire client area", "+\t\t\tcell.width = area.x + area.width - cell.x;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da48aca229635d4f55b3fcc9e30d320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dab04b59098116bd0aa6cb8ca76ce653fc22e7c8", "commitAfterChange": "a10e56ab0dd0e171181bcf234a6b67a21a331314", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["+\tif (string.length() == 0) return;", "+\tTCHAR buffer = new TCHAR(getCodePage(), string, false);", "+\tint length = buffer.length();", "+\tif (length == 0) return;", "-\tTCHAR buffer = new TCHAR(getCodePage(), string, false);", "-\tOS.DrawText(handle, buffer, buffer.length(), rect, uFormat);", "+\tOS.DrawText(handle, buffer, length, rect, uFormat);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83f08d9aad81a467ff302c4258a13f47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "857fb38d37816042809e56b4ccaf504717ac41c4", "commitAfterChange": "34f851763d01b29e34b9639b41b9683b1af0f9e0", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " void setKeyState (Event event, MacEvent mEvent)", "signatureAfterChange": " void setKeyState (Event event, MacEvent mEvent)", "diff": ["-\t/*", "-\tif (mEvent.getKeyCode() != 0) {", "-\t\tbyte [] buffer1 = new byte [1];", "-\t\tint [] keysym = new int [1];", "-\t\tif (OS.XLookupString (xEvent, buffer1, buffer1.length, keysym, null) == 0) {", "-\t\t\tif (OS.IsSunOS) {", "-\t\t\t\tif ((keysym [0] == 0x1005FF10) || (keysym [0] == 0x1005FF11)) {", "-\t\t\t\t\tif (keysym [0] == 0x1005FF10) keysym [0] = OS.XK_F11;", "-\t\t\t\t\tif (keysym [0] == 0x1005FF11) keysym [0] = OS.XK_F12;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tevent.keyCode = Display.translateKey (keysym [0] & 0xFFFF);", "-\t\t} else {", "-\t\t\tevent.character = (char) buffer1 [0];", "-\t\t}", "-\t\t*/", "-\t\tevent.keyCode = Display.translateKey(mEvent.getKeyCode());", "-\t\tevent.character= (char) mEvent.getMacCharCodes();", "-\t/* } */", "+\tint kc= Display.translateKey(mEvent.getKeyCode());", "+\tif (kc != 0) {", "+\t\tevent.keyCode = kc;", "+\t} else {", "+\t\t//event.keyCode = 0;", "+\t\tevent.character = (char) mEvent.getMacCharCodes();", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06b78d0b839ed5f6b78e90bbc53e24a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "c98caaeab018b3f29f859c5f92f54d1e52fa4f1c", "commitAfterChange": "7d34cdf0c62bc5c46b668c50069059f9e013a652", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 267, "signatureBeforeChange": " void setCaretLocation(Point location, int direction)", "signatureAfterChange": " void setCaretLocation(Point location, int direction)", "diff": ["+\t\tboolean isDefaultCaret = caret == defaultCaret;", "-\t\tif (!isFixedLineHeight()) {", "+\t\tif (!isFixedLineHeight() && isDefaultCaret) {", "-\t\tboolean updateImage = caret == defaultCaret;", "-\t\tif (updateImage && imageDirection == SWT.RIGHT) {", "+\t\tif (isDefaultCaret && imageDirection == SWT.RIGHT) {", "-\t\tcaret.setBounds(location.x, location.y, 0, caretHeight);", "+\t\tif (isDefaultCaret) {", "+\t\t\tcaret.setBounds(location.x, location.y, 0, caretHeight);", "+\t\t} else {", "+\t\t\tcaret.setLocation(location);", "+\t\t}", "-\t\t\tif (updateImage) {", "+\t\t\tif (isDefaultCaret) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d51fca2a7da48d95fcab45d4b6a42221", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "ea9da011382c7ec93bcd569f034b6dd753cfdd96", "commitAfterChange": "9c4bff2323bd0415c8033ce7de629d361e3ac9e3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "  void setCairoClip(int damageRgn, int clipRgn)", "signatureAfterChange": "  void setCairoClip(int damageRgn, int clipRgn)", "diff": ["-\tCairo.cairo_reset_clip(cairo);", "+\tif (OS.GTK_VERSION < OS.VERSION(2,18,0)) {", "+\t\tCairo.cairo_reset_clip(cairo);", "+\t} else {", "+\t\tOS.gdk_cairo_reset_clip(cairo, data.drawable);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4df4cdfc66cbb1cc3cedb8022c3c6621", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void remove (int index)", "signatureAfterChange": " public void remove (int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  An index out of range handled", "-\t* correctly by the list widget but causes an unwanted", "-\t* Xm Warning.  The fix is to check the range before", "-\t* deleting an item.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t*/", "-\tint itemCount= OS.CountMenuItems(fMenuHandle);", "+\tint itemCount= _getItemCount();", "-\t/* AW", "-\tOS.XmComboBoxDeletePos (handle, index + 1);", "-    */", "-\tOS.DeleteMenuItems(fMenuHandle, (short)(index+1), 1);", "-\tOS.SetControl32BitMaximum(fPopupButton, OS.CountMenuItems(fMenuHandle));\t", "+   \tif (fMenuHandle != 0) {", "+\t\tOS.DeleteMenuItems(fMenuHandle, (short)(index+1), 1);", "+\t\tOS.SetControl32BitMaximum(handle, OS.CountMenuItems(fMenuHandle));", "+   \t} else {", "+   \t\tOS.HIComboBoxRemoveItemAtIndex(handle, index);", "+   \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69449758b106faa5e845a1b43398115", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7be8b191cdd802c55c6319dbcf12e4d1406e415d", "commitAfterChange": "1d34cd3b81246b3ce999425ab24ea40a8e8073df", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  int Ph_EV_KEY (int widget, int info)", "signatureAfterChange": "  int Ph_EV_KEY (int widget, int info)", "diff": ["-\tpostEvent (type, event);", "-\treturn OS.Pt_PROCESS;", "+\tsendEvent (type, event);", "+\t// widget could be disposed at this point", "+\tif (isDisposed ()) return OS.Pt_CONSUME;", "+\treturn event.doit ? OS.Pt_PROCESS :OS.Pt_CONSUME; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f859c7b2a4e05cc12a42ce046de0a7e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "41448e38b1dc8fdc99a6f71e40f70a4e188a608a", "commitAfterChange": "037c23e775d3cb564de747b11c31195fa628bb3f", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 98, "signatureBeforeChange": "  int timerProc (int id, int index)", "signatureAfterChange": "  int timerProc (int id, int index)", "diff": ["-\t\tRunnable runnable = timerList [index];", "-\t\ttimerList [index] = null;", "-\t\ttimerIds [index] = 0;", "-\t\tif (runnable != null) runnable.run ();", "+\t\tif (allowTimers) {", "+\t\t\tRunnable runnable = timerList [index];", "+\t\t\ttimerList [index] = null;", "+\t\t\ttimerIds [index] = 0;", "+\t\t\tif (runnable != null) runnable.run ();", "+\t\t} else {", "+\t\t\ttimerIds [index] = -1;", "+\t\t\tOS.PostEventToQueue (queue, wakeEvent [0], (short) OS.kEventPriorityStandard);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14aed1a9a70552b24333fa3c69b7464", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "be518991c12a9ca18071e368dfe879c94fa2722f", "commitAfterChange": "7fb06e9229d8e53de398a263a33af7e61a8f59eb", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  NSBezierPath getClipping()", "signatureAfterChange": "  int getDrawCount ()", "diff": ["-NSBezierPath getClipping() {", "-\treturn parent.getClipping ();", "+int getDrawCount () {", "+\tif (drawCount != 0) return drawCount;", "+\treturn parent.getDrawCount ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b032ba7d432303368ac6894f739c1568", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "4faa718e848bca5a7335031d1c00baad23787159", "commitAfterChange": "a461fda0096599b0ea1295eb5f7364f69acc2719", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test_drawImageLorg_eclipse_swt_graphics_ImageII()", "signatureAfterChange": "  public void test_drawImageLorg_eclipse_swt_graphics_ImageII()", "diff": ["+\tint count = 120000;", "+\t", "-\tfinal int[][] coords = new int[COUNT][];", "+\tfinal int[][] coords = new int[count][];", "-\tfor (int i = 0; i < COUNT; i++) {", "+\tfor (int i = 0; i < count; i++) {", "-\t\tfor (int i = 0; i < COUNT; i++) {", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\tcount /= 100;", "+\t\t", "-\t\tperformance.tagAsGlobalSummary(meter, \"GC.drawImage() transparent * \" + COUNT, Dimension.CPU_TIME);", "+\t\tperformance.tagAsGlobalSummary(meter, \"GC.drawImage() transparent * \" + count, Dimension.CPU_TIME);", "-\t\tfor (int i = 0; i < COUNT; i++) {", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\tcount *= 10;", "+\t\t", "-\t\tfor (int i = 0; i < COUNT; i++) {", "+\t\tfor (int i = 0; i < count; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccbd0640d9ccedcc7ea3511ee6c51913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "f2e9164ab0bb4b8ae64f2d157af69ad315fb1bfd", "commitAfterChange": "0ed3127b2906b6a6bb213778db2748f4c1b46bcb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tstatic int atkObject_get_index_in_parent (int atkObject)", "signatureAfterChange": "  \tstatic int atkObject_get_index_in_parent (int atkObject)", "diff": ["-\t\tif (DEBUG) print (\"-->atkObjectCB_get_index_in_parent: \" + atkObject);", "+\t\tif (DEBUG) print (\"-->atkObject_get_index_in_parent: \" + atkObject);", "-\t\treturn ATK.call (objectClass.get_index_in_parent, atkObject);", "+\t\tint /*long*/ result = ATK.call (objectClass.get_index_in_parent, atkObject);", "+\t\tif (DEBUG) print (\"---*> \" + result);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d18a52383b00d7ff9f4b5125e26af7d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "36baafc7a41a98ef31c891816d25888f38e0c4ac", "commitAfterChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " boolean filterEvent (XAnyEvent event)", "signatureAfterChange": " boolean filterEvent (XAnyEvent event)", "diff": ["-\t/* Check for an accelerator key */", "-\tif (widget.translateAccelerator (key, keysym, keyEvent)) return true;", "-\t", "+\t/*", "+\t* Bug in Solaris.  When accelerators are set more", "+\t* than once in the same menu bar, the time it takes", "+\t* to set the accelerator increases exponentially.", "+\t* The fix is to implement our own accelerator table", "+\t* on Solaris.", "+\t*/", "+\tif (OS.IsSunOS) {", "+\t\tif (widget.translateAccelerator (key, keysym, keyEvent, true)) {", "+\t\t\treturn true;", "+\t\t}", "+\t}", "+", "-\t", "+", "+\t\t\t/*", "+\t\t\t* If a traversal key has been assigned as an accelerator,", "+\t\t\t* allow the accelerator to run, not the traversal key.", "+\t\t\t*/", "+\t\t\tif (!OS.IsSunOS) {", "+\t\t\t\tif (widget.translateAccelerator (key, keysym, keyEvent, true)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a41f187bc941354b25a51caecd95ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1563c7f807875ea62a81599cba08ce46522ed460", "commitAfterChange": "6adfd78cd198a1f4e0227710478cb624215e271f", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": "  static long windowProc(long id, long sel)", "signatureAfterChange": "  static long windowProc(long id, long sel)", "diff": ["+\t} else if (sel == OS.sel_canBecomeKeyView) {", "+\t\treturn widget.canBecomeKeyView(id,sel) ? 1 : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626e77e5cee99c55420c3dc782a426f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "b947879518ecea053a34827bfa871a3ae99388ec", "commitAfterChange": "c1560f47ae27e595d45dbefc41f11cc0bb0c552f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public int getTopIndex ()", "signatureAfterChange": " public int getTopIndex ()", "diff": ["-    return ((NSTableView)view).rowAtPoint(point);", "+    int result = ((NSTableView)view).rowAtPoint(point);", "+    if (result == -1) result = 0;", "+    return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e612627b6decc1c1205e42432f80fbad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4a896950ce6b60770d178adfc6bff3027d4b5a47", "commitAfterChange": "578025c4d63c406744ffadd9003c6c37c0e3bf84", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void wake ()", "signatureAfterChange": " public void wake ()", "diff": ["-\tif (OS.IsWinCE) {", "-\t\tOS.PostMessage (hwndMessage, OS.WM_NULL, 0, 0);", "-\t} else {", "-\t\tOS.PostThreadMessage (threadId, OS.WM_NULL, 0, 0);", "+\tsynchronized (getMessageLock ()) {", "+\t\tif (getMessageCount () > 1) return;", "+\t\tif (OS.IsWinCE) {", "+\t\t\tOS.PostMessage (hwndMessage, OS.WM_NULL, 0, 0);", "+\t\t} else {", "+\t\t\tOS.PostThreadMessage (threadId, OS.WM_NULL, 0, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9679d80e23edb4b3fc0d2c6cad17de9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "9a4422eb004e489210befcaba309930974176a88", "commitAfterChange": "fc075210499353dc32e454ac8ef6bbda81bf26f9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public PrinterData open()", "signatureAfterChange": "\r public PrinterData open()", "diff": ["-\tif (OS.PrintDlg(pd)) {\r", "+\tif (OS.PrintDlg(pd)) {\t\t// success\r", "+\t\tendPage = data.endPage;\r", "+\t\tprintToFile = data.printToFile;\r", "+\t\tscope = data.scope;\r", "+\t\tstartPage = data.startPage;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca76edc0291a28040c88d60a63e4a108", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "15d518fcf7820cff372e719570bf1b7a9e879644", "commitAfterChange": "8b52c07418a6e5d29e1a96671de478de9bba3a3a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean getVisible ()", "signatureAfterChange": " public boolean getVisible ()", "diff": ["-\t\treturn this == parent.menuShell ().menuBar;", "+\t\tif (this == display.appMenuBar) ", "+\t\t\treturn display.application.isActive();", "+\t\telse", "+\t\t\treturn this == parent.menuShell ().menuBar;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b882bbe441e0b211a606e335d5d27ec0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "a252d41bf582d4f8fec892ac1579ebc4d02b287b", "commitAfterChange": "b46a91ab4982c2546746c581c7a4d8b7118f940b", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 257, "signatureBeforeChange": "\r void setBidiCaretDirection()", "signatureAfterChange": "\r void setBidiCaretDirection()", "diff": ["+\tif (direction == SWT.DEFAULT) {\r", "+\t\tcaret.setImage(null);\r", "+\t\tcaret.setSize(caret.getSize().x, lineHeight);\r", "+\t} \r", "+\telse \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f70ffa21d500addbf39eb6dd38fe0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f194ae88fb5f8ee0fb7a6fd129741530a934a5fd", "commitAfterChange": "582ff634d022629a0a943c10bfba912091789d3c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r public void setSelection (TreeItem [] items)", "signatureAfterChange": "\r public void setSelection (TreeItem [] items)", "diff": ["-\t\tif (item != null) hNewItem = item.handle;\r", "+\t\tif (item != null) {\r", "+\t\t\tif (item.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\t\thNewItem = item.handle;\r", "+\t\t}\r", "+\t\t\tif (item.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e0560910f6e44683dc6b82fd64a294", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "0fe0e789edc99baaa0ef377f6d40692c6b08f013", "commitAfterChange": "b1cc243c2a014d8968b54382daf6c28f7205ac7f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void setMinimum (int value)", "signatureAfterChange": " public void setMinimum (int value)", "diff": ["-\tint [] max = new int [1], min = new int [1];", "-\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, min, max);", "+\tif (value < 0) return;", "+\tint [] max = new int [1];", "+\tOS.SendMessage (hwndUpDown , OS.UDM_GETRANGE32, null, max);", "-\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xffff;", "+\t\tpos = OS.SendMessage (hwndUpDown, OS.UDM_GETPOS, 0, 0) & 0xFFFF;", "-\tupdate (pos, false, false);", "+\tif (pos < value) setSelection (value, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adb3403f89b4e33fda7625339a2dcc5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "101f48207327e1ff58cb127f6f3e8fe3a1f5f755", "commitAfterChange": "f7af67eb750d16cb78b69e519c2e9163f55f7288", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public int getWidth ()", "signatureAfterChange": " public int getWidth ()", "diff": ["-\treturn (int)nsColumn.width();", "+\tint width = (int)nsColumn.width();", "+\t// TODO how to differentiate 0 and 1 cases?", "+\tif (width > 0) width += Tree.CELL_GAP;", "+\treturn width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6982c440e5025c1ebb2f41f7d0f306", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/BrowserFunction.java", "commitBeforeChange": "88aa482f2a6eb824a05f8b9b653c67e81e12a972", "commitAfterChange": "ecb69c08b9235bc129576d3977f3a0bd046ee24f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public BrowserFunction (Browser browser, String name)", "signatureAfterChange": " public BrowserFunction (Browser browser, String name)", "diff": ["+\tif (browser.isDisposed ()) SWT.error (SWT.ERROR_WIDGET_DISPOSED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "372b63531bec96520ae34e81a9a1dae7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void destroyWidget ()", "signatureAfterChange": "  void destroyWidget ()", "diff": ["-}", "-void destroyWidget () {", "-\t/*", "-\t* Hide the shell before calling XtDestroyWidget ()", "-\t* so that the shell will disappear without having", "-\t* to dispatch events.  Otherwise, the user will be", "-\t* able to interact with the trimmings between the", "-\t* time that the shell is destroyed and the next", "-\t* event is dispatched.", "-\t*/", "-    /* AW", "-\tif (OS.XtIsRealized (shellHandle)) {", "-\t\tif (OS.XtIsTopLevelShell (shellHandle)) {", "-\t\t\tOS.XtUnmapWidget (shellHandle);", "-\t\t} else {", "-\t\t\tOS.XtPopdown (shellHandle);", "-\t\t}", "-\t}", "-    */", "-\tOS.HideWindow(shellHandle);", "-\tsuper.destroyWidget ();", "+void destroyWidget () {", "+\tint theWindow = shellHandle;", "+//\tOS.HideWindow (shellHandle);", "+\treleaseHandle ();", "+\tif (theWindow != 0) OS.DisposeWindow (theWindow);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbda0232be5c3bf70244a44adb55e468", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "271bf8e8631934dbdf092a7f5d74accd534157b3", "commitAfterChange": "267efeba946291455291f7e37b5a9adb5c1006b4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t\treturn OS.noErr;", "+\t\t\t\tcode = OS.noErr;", "-\t\t\t\treturn OS.noErr;", "+\t\t\t\tcode = OS.noErr;", "-\t\treturn accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "+\t\tint err = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "+\t\tif (err != OS.eventNotHandledErr) return err;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598730d101d9519a5be6fddbb75022f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "372a0def51f28cb1ec45defd2bc06e6fb56ef34f", "commitAfterChange": "40443a86c1d02bfe7ad3166e3001ce40f6a30917", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["+\tint clickTime = display.getDoubleClickTime ();", "+\tint lastTime = display.lastTime, eventTime = xEvent.time;", "+\tint lastButton = display.lastButton, eventButton = xEvent.button;", "+\tif (lastButton == eventButton && lastTime != 0 && Math.abs (lastTime - eventTime) <= clickTime) {", "+\t\tdisplay.clickCount++;", "+\t} else {", "+\t\tdisplay.clickCount = 1;", "+\t}", "+\tdisplay.lastTime = eventTime == 0 ? 1 : eventTime;", "+\tdisplay.lastButton = eventButton;", "-\tint clickTime = display.getDoubleClickTime ();", "-\tint lastTime = display.lastTime, eventTime = xEvent.time;", "-\tint lastButton = display.lastButton, eventButton = xEvent.button;", "-\tif (lastButton == eventButton && lastTime != 0 && Math.abs (lastTime - eventTime) <= clickTime) {", "+\tif (display.clickCount == 2) {", "-\tdisplay.lastTime = eventTime == 0 ? 1 : eventTime;", "-\tdisplay.lastButton = eventButton;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d711385b2da91ef4af096ba73b94d8b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "8f74400627fe378267067a48a1bbad7ee433b09b", "commitAfterChange": "f782649f9c4385d36a04cc7610f645dfe37046dc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setAccelerator (int accelerator)", "signatureAfterChange": " public void setAccelerator (int accelerator)", "diff": ["+\tif (this.accelerator == accelerator) return;", "-\tint virtualKey = Display.untranslateKey (key);", "-\tNSString string =  null;", "+\tint virtualKey = keyChar (key);", "+\tNSString string = null;", "-\t\tstring = NSString.stringWith ((char)key + \"\").lowercaseString();", "+\t\tstring = NSString.stringWith ((char)key + \"\");", "-\tnsItem.setKeyEquivalent (string);", "+\tnsItem.setKeyEquivalent (string.lowercaseString());", "-//\tif ((accelerator & SWT.COMMAND) != 0) mask &= ~OS.kMenuNoCommandModifier;", "+\tnsItem.setHidden (false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b58d6e1f24573411f5524f42eec9f0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "08dad41137a92b658940bb38bcb0ee6eca944e8c", "commitAfterChange": "093a541f9506aff281d0bc5e667ef09672d34a3c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  private int drag_motion ( int widget, int context, int x, int y, int time)", "signatureAfterChange": "  private int drag_motion ( int widget, int context, int x, int y, int time)", "diff": ["+\tif (oldKeyOperation == -1) { //drag enter", "+\t\tselectedDataType = null;", "+\t\tselectedOperation = DND.DROP_NONE;", "+\t}", "+\t\t", "-\t\tselectedDataType = null;", "-\t\tselectedOperation = DND.DROP_NONE;", "-\t\tevent.dataType = selectedDataType;", "+\t\t\tevent.dataType = selectedDataType;", "+\t\t\tevent.dataType = selectedDataType;", "-\t\t\t\tselectedDataType = event.dataType;", "+\t\t\t\tselectedDataType = allowedDataTypes[i];", "-\tif (event.type == DND.DragEnter) {", "+\tif (oldKeyOperation == -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190046e9ee001e722ec1582951c910fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "20a82442c62464f845aa304fac0fe5913f78c0d7", "commitAfterChange": "0c223167369d9097b07b9e66d4edd33de5a3f564", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["+\tif (column == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (column.isDisposed ()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\tif (column.parent != this) return;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7553616e209ecc0cf4a53db946bd038b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "882fb3c9cf2bee472ef2152155ef18c3d0d2d853", "commitAfterChange": "9d056f973a0b0da966a2c2f2478c52db3cc41550", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r void setBounds (int x, int y, int width, int height)", "signatureAfterChange": "\r void setBounds (int x, int y, int width, int height)", "diff": ["+}\r", "+void setBounds (int x, int y, int width, int height) {\r", "+\titemBounds.x = x;\r", "+\titemBounds.y = y;\r", "+\titemBounds.width = width;\r", "+\titemBounds.height = height;\r", "+\tif (control != null) {\r", "+\t\tint controlHeight = Math.min (height, control.getSize().y);\r", "+\t\tint controlWidth = width - MINIMUM_WIDTH - MARGIN_WIDTH;\r", "+\t\tif (width < preferredWidth) controlWidth -= CHEVRON_WIDTH;\r", "+\t\tcontrol.setBounds (\r", "+\t\t\tx + MINIMUM_WIDTH, \r", "+\t\t\ty + MARGIN_HEIGHT, \r", "+\t\t\tcontrolWidth, \r", "+\t\t\tcontrolHeight);\r", "+\t}\r", "+\tupdateChevron();\r", "-}\r", "-void setBounds (int x, int y, int width, int height) {\r", "-\titemBounds.x = x;\r", "-\titemBounds.y = y;\r", "-\titemBounds.width = width;\r", "-\titemBounds.height = height;\r", "-\tif (control != null) {\r", "-\t\tint controlHeight = Math.min(height, control.getSize().y);\r", "-\t\tcontrol.setBounds(\r", "-\t\t\tx + MINIMUM_WIDTH, \r", "-\t\t\ty + MARGIN_HEIGHT, \r", "-\t\t\twidth - MINIMUM_WIDTH - MARGIN_WIDTH, \r", "-\t\t\tcontrolHeight);\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "371804254c286a76c04713cc6b0d0c5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "772eba60342f660557d66c688c0f5931749c4e89", "commitAfterChange": "8cb9404e2de2a7532f9571bd8294bf5cd1d59247", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  public int getDepth ()", "signatureAfterChange": "  public int getDepth ()", "diff": ["-\tGdkVisual visual = new GdkVisual ();", "-\tOS.memmove (visual, OS.gdk_visual_get_system());", "-\treturn visual.depth;", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\treturn OS.gdk_visual_get_depth(OS.gdk_visual_get_system());", "+\t} else {", "+\t\tGdkVisual visual = new GdkVisual ();", "+\t\tOS.memmove (visual, OS.gdk_visual_get_system());", "+\t\treturn visual.depth;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1c2b5e9b7d37fd567c942022858d5c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/LEDataInputStream.java", "commitBeforeChange": "52e50eddaaed72d8eecc2bdcd9fe014a40ca89f8", "commitAfterChange": "474bfc2c54e178444e0f027b12c214f6b7fad861", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic int read() throws IOException", "signatureAfterChange": " \tpublic int read() throws IOException", "diff": ["-\t\tposition++;", "-\t\tif (pos < buf.length) return (buf[pos++] & 0xFF);", "-\t\treturn in.read();", "+\t\tif (pos < buf.length) {", "+\t\t\tposition++;", "+\t\t\treturn (buf[pos++] & 0xFF);", "+\t\t}", "+\t\tint c = in.read();", "+\t\tif (c != -1) position++;", "+\t\treturn c;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d168e4d3f716246fb648197f0ec98194", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0039b8d3c1cf7afd925486a84a9e1fbde77b75f1", "commitAfterChange": "c6b4701fb642d926fb92b27d74c2ad59b20b759b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " void doPaint (Event event)", "signatureAfterChange": " void doPaint (Event event)", "diff": ["-\tif (!(0 <= startIndex && startIndex < availableItems.length)) return;\t/* no items to paint */", "+\tif (availableItems.length < startIndex) return;\t/* no items to paint */", "+\tif (endIndex < 0) return;\t/* no items to paint */", "+\tstartIndex = Math.max (0, startIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7817d18dbcde07fe9ca9e58404d988fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a1ae891a62509864e44686df429ae8685d97b06a", "commitAfterChange": "252214e1ac298f0a0afcabaddbea343521d62472", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "signatureAfterChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "diff": ["-\t\t\tif (part == OS.inContent)", "-\t\t\t\tif (!handleContentClick(me, whichWindow))", "-\t\t\t\t\treturn OS.kNoErr;", "+\t\t\tif (part == OS.inContent || (MacUtil.HIVIEW && part == OS.inStructure))", "+\t\t\t\tif (false && MacUtil.HIVIEW) {", "+\t\t\t\t\treturn OS.eventNotHandledErr;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (!handleContentClick(me, whichWindow))", "+\t\t\t\t\t\treturn OS.kNoErr;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2239dbf96b41d1d5611af85021f6028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ad7a9e5b3b139f6b5bd4c2f25f8cf8b336105a91", "commitAfterChange": "52d678e47ee00e0c9d7473cd6841b89c8499131e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "+\t\treturn computeNativeSize (handle, wHint, hHint, changed);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6afa25419615de983e744f5010aa816a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "\r public void setXORMode(boolean val)", "signatureAfterChange": " public void setXORMode(boolean xor)", "diff": ["-public void setXORMode(boolean val) {\r", "-\tif (val)\r", "+ */", "+public void setXORMode(boolean xor) {\r", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "+\tif (xor)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c453a6eb50b37ae3c9a65e14608bc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "da5b2096f70170c1ee5967072f15746afe644075", "commitAfterChange": "e1a1a9a2764b9fd42d3fd4db27d8d960a32582f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected Object nativeToJava(TransferData transferData)", "signatureAfterChange": "\r protected Object nativeToJava(TransferData transferData)", "diff": ["-\tif (transferData.pValue == 0 || !(isSupportedType(transferData))) return null;\r", "+\tif (transferData.pData == 0 || !(isSupportedType(transferData))) return null;\r", "-\tint size = transferData.format * transferData.length / 8;\r", "+\tint size = transferData.length;\r", "+\tif (size == 0) return null;\r", "-//\tOS.memmove(buffer, transferData.pValue, size);\r", "+\tOS.memmove(buffer, transferData.pData, size);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e487d140209f755add400057c825b3ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_situational.java", "commitBeforeChange": "2c4da2212ac5aec4d13f19645cbc3d011ddae28c", "commitAfterChange": "4b72dd7966e559f14239347435a8d2b40c64a77d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test_createWidgets()", "signatureAfterChange": "  public void test_createWidgets()", "diff": ["-\t", "+", "+    Performance performance = Performance.getDefault();", "+    performance.tagAsGlobalSummary(meter, \"Create composites and widgets\", Dimension.ELAPSED_PROCESS);", "+    performance.setComment(meter, Performance.EXPLAINS_DEGRADATION_COMMENT, \"For unknown reasons this test has a performance regression on the 2 GHz Linux machine.  The regression is not reproducable on similar machines.  See bug 96652.\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407bbd4321a61d59c84171088eda3581", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "bd8da331f502cdc4f38173c93a07c181211e33d8", "commitAfterChange": "6d842225f60e347e4e85dbc880baacea4e19ba29", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tOS.gtk_widget_show (labelHandle);", "+\tif (string.length () != 0) {", "+\t\tOS.gtk_widget_show (labelHandle);", "+\t} else {", "+\t\tOS.gtk_widget_hide (labelHandle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96599b094d60246e32869498bf209b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3e2e90f9141bdf1b774b7a9afaac9dbf6e07a583", "commitAfterChange": "ab209fe05240b899f89349987537844e4c3bf8d2", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " int indexOf (TreeColumn column)", "signatureAfterChange": " public int indexOf (TreeColumn column)", "diff": ["-int indexOf (TreeColumn column) {", "+public int indexOf (TreeColumn column) {", "+\tif (column == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (column.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8da78dc742f0619b1f98105b2633ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "commitAfterChange": "85b8baf1efb6a545680cc9553a80da0d7364e4a0", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["+\tint /*long*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tsetCairoFont(cairo, font);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57af6a0bf4ab1973d3c286055ae5db31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "82f46f620c0b7b6364c241d8d8ea7948fe2d9d39", "commitAfterChange": "e072226b24acabb0529ee900d788383ceeb1b5ab", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " void traversal(Event event)", "signatureAfterChange": " void traversal(Event event)", "diff": ["+\t\t\tevent.doit = pageTraversal(event);", "+\t\t\tif (event.doit) event.detail = SWT.TRAVERSE_PAGE_NEXT;", "+\t\t\tbreak;", "-\t\t\tif (event.doit) event.detail = SWT.TRAVERSE_NONE;", "+\t\t\tif (event.doit) event.detail = SWT.TRAVERSE_PAGE_PREVIOUS;", "-\t\t\tevent.detail = SWT.TRAVERSE_NONE;", "+\t\t\tevent.detail = SWT.TRAVERSE_ARROW_NEXT;", "-\t\t\tevent.detail = SWT.TRAVERSE_NONE;", "+\t\t\tevent.detail = SWT.TRAVERSE_ARROW_PREVIOUS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d43667e958d58d61046739023ae2aa44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "31a67d26da274c9a5d7c633756ce743a03898010", "commitAfterChange": "a4257dd6dc697e736a79e1a573e3498767b7ba29", "methodNumberBeforeChange": 373, "methodNumberAfterChange": 374, "signatureBeforeChange": " \tpublic String toString ()", "signatureAfterChange": " \tpublic String toString ()", "diff": ["-\t\tif (DEBUG) return toString.substring(toString.lastIndexOf('.') + 1) + \"(\" + getRoleString(getRole()) + \")\";", "+\t\tif (DEBUG) {", "+\t\t\tint role = getRole();", "+\t\t\tif (role == 0) role = getDefaultRole();", "+\t\t\treturn toString.substring(toString.lastIndexOf('.') + 1) + \"(\" + getRoleString(role) + \")\";", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46742fdfed6279e78abf81c9115d0143", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "77759d3ca4f6dce1af6dfc45d9d6664c9ae312fc", "commitAfterChange": "d7112b9940690c795ad0ec1538ee939c8f3d27ac", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " void onResize (Event event)", "signatureAfterChange": " void onResize (Event event)", "diff": ["-\ttopIndex = vBar.getSelection ();", "+\tint index = vBar.getSelection ();", "+\tif (index != topIndex) {", "+\t\ttopIndex = index;", "+\t\tredraw ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc1bb1d80124b20a87df815c8963ff0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "8efc5560b0d8293fa8e661538e3674b98825a585", "commitAfterChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  LRESULT wmColorChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmColorChild (int wParam, int lParam)", "diff": ["-\tLRESULT result = super.wmColorChild (wParam, lParam);", "+\tint fg = foreground;", "-\t\t\tint forePixel = OS.GetSysColor (OS.COLOR_GRAYTEXT);", "-\t\t\tOS.SetTextColor (wParam, forePixel);", "+\t\t\tforeground = OS.GetSysColor (OS.COLOR_GRAYTEXT);", "+\tLRESULT result = super.wmColorChild (wParam, lParam);", "+\tforeground = fg;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aebc19da0495575e4495feebeed1d1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "8231a5b4f97426483ca0400e5f51438dec7281cd", "commitAfterChange": "c511ac496ae5d2a9186254e09b13d0c0560337e9", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " void doPageUp (int stateMask)", "signatureAfterChange": " void doPageUp (int stateMask)", "diff": ["-\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\tnewFocusIndex = Math.max (newFocusIndex, 0);", "+\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "+\t\tif (newFocusIndex == focusItem.availableIndex) return;", "-\t\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\t\tnewFocusIndex = Math.max (newFocusIndex, 0);", "+\t\t\tint newFocusIndex = Math.max (0, focusItem.availableIndex - visibleItemCount + 1);", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8bc97eefc71d5868162398f6c2e1646", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "c57c3ee9e5a1f61f627dc04e13d898ed776eb7c3", "commitAfterChange": "22e30b3ac1223dde7673f1ad4fe484cc3c3f10c2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void setDropSelection (TreeItem item)", "signatureAfterChange": "\r private void setDropSelection (TreeItem item)", "diff": ["-private void setDropSelection (TreeItem item) {\r", "-\tif (item == null) {\r", "-\t\ttree.setSelection(new TreeItem[0]);\r", "-\t} else {\r", "-\t\ttree.setSelection(new TreeItem[]{item});\r", "-\t}\r", "+private void setDropSelection (TreeItem item) {\t\r", "+\tif (item == dropSelection) return;\r", "+\tif (dropSelection != null) tree.deselectAll();\r", "+\tdropSelection = item;\r", "+\tif (dropSelection != null) tree.setSelection(new TreeItem[]{dropSelection});\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "877c6f0e9958c22c55ccdd23317d1395", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void setBackground(Color color)", "signatureAfterChange": " public void setBackground(Color color)", "diff": ["+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "-}", "+\tif (transparentPixel == -1) return;", "+\t//NOT DONE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2090404d920bce0ca87e43f70821d37f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\t/*", "-\t* Feature in Motif.  When an index is out of range,", "-\t* the list widget adds the item at the end.  This", "-\t* behavior is not wrong but it is unwanted.  The", "-\t* fix is to check the range before adding the item.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tif (!(0 <= index && index <= argList [1])) {", "-\t\terror (SWT.ERROR_INVALID_RANGE);", "-\t}", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), encodeString(string), true);", "-\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\tif (xmString == 0) error (SWT.ERROR_ITEM_NOT_ADDED);", "-\tOS.XmComboBoxAddItem(handle, xmString, index + 1, false);", "-\tOS.XmStringFree (xmString);", "-    */", "-\t", "-\t\tif (OS.InsertMenuItemTextWithCFString(fMenuHandle, sHandle, (short)index, 0, fgCommandID++) != OS.kNoErr)", "-\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\tOS.SetControl32BitMaximum(fPopupButton, OS.CountMenuItems(fMenuHandle));\t", "+\t\tif (fMenuHandle != 0) {", "+\t\t\tif (OS.InsertMenuItemTextWithCFString(fMenuHandle, sHandle, (short)index, 0, fgCommandID++) != OS.kNoErr)", "+\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\tOS.SetControl32BitMaximum(handle, OS.CountMenuItems(fMenuHandle));\t", "+\t\t} else {", "+\t\t\tOS.HIComboBoxInsertTextItemAtIndex(handle, index, sHandle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb32aad77492a004bb612160e83024d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "a9c7773206cb2e6ec926f96fa52a663c0fa18941", "commitAfterChange": "25a9ec69d80133f9c034c09d7adf19f7e0846958", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setEnabled (boolean enabled)", "signatureAfterChange": " public void setEnabled (boolean enabled)", "diff": ["+\t} else {", "+\t\t/*", "+\t\t* Bug in GTK. Starting with 2.14, if a button is disabled ", "+\t\t* through on a button press, the field which keeps track ", "+\t\t* whether the pointer is currently in the button is never updated.", "+\t\t* As a result, when it is re-enabled it automatically enters", "+\t\t* a PRELIGHT state. The fix is to set a NORMAL state.", "+\t\t*/", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 14, 0)) {", "+\t\t\tOS.gtk_widget_set_state (topHandle, OS.GTK_STATE_NORMAL);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6cd2cba6bc53f885fa203a87e78a6c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "b904a513c572e79fc7d59e07212422a4eb591df4", "commitAfterChange": "5d1cc2c24ec360cb59b84e6f51e06eba85a2ee01", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void addAccelerator ()", "signatureAfterChange": " void addAccelerator ()", "diff": ["-\t* it is necessary to look for all of these key sequences.", "+\t* it is necessary to look for all of these key sequences.  The fix", "+\t* is to add these modifiers to the accelerator.", "-\tString numLock = Display.numLock;", "-\tString allKeys = key + \",Lock \" + key + \",\" + numLock + \" \" + key + \",Lock \" + numLock + \" \" + key;", "+\tString allKeys = key + \",Lock \" + key;", "+\tString numLock = Display.numLock;", "+\tif (numLock != null) {", "+\t\tallKeys += \",\" + numLock + \" \" + key + \",Lock \" + numLock + \" \" + key;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cab5cd7ab90043a7c2e183b25aab54f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/TableEditor.java", "commitBeforeChange": "3eabcb22d73aefc269d4b36fdd0811e42b99c940", "commitAfterChange": "7a4935cca9b309fe6c727892f9bc28b572b715da", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " Rectangle computeBounds ()", "signatureAfterChange": " Rectangle computeBounds ()", "diff": ["+\tRectangle rect = item.getImageBounds(column);", "+\tcell.x = rect.x + rect.width;", "+\tcell.width -= rect.width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd089d9a4121e033f3da4543d1ad9ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "1f20a1d264bba4b262d3deffa1fafad6f8f70360", "commitAfterChange": "e1128c0d5e9e7b8b4e65a3a4aaf19424d2b37dc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["-\t\r", "+\tif (display == null) SWT.error(SWT.ERROR_WIDGET_DISPOSED);\r", "+\tif (display.isDisposed()) SWT.error(SWT.ERROR_DEVICE_DISPOSED);\r", "-\t\r", "-\tif (display.isDisposed() )\r", "-\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a19dbc534db267bf92fa2ba93c08db8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet226.java", "commitBeforeChange": "13b2b8f2ffe1037c8065635c474f3f2c02dcf507", "commitAfterChange": "cb0de7e2af26a928b885037e6a9524eb63fd094f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main(String [] args)", "signatureAfterChange": " \t public static void main(String [] args)", "diff": ["-\tshell.setText(\"Tree: Custom Gradient selection\");", "+\tshell.setText(\"Custom gradient selection for Tree\");", "-\t\tcolumn.setText(\"Col: \" + i);\t", "+\t\tcolumn.setText(\"Column \" + i);\t", "-\t * Therefore, it is critical for performance that these methods be as efficient as possible.", "+\t * Therefore, it is critical for performance that these methods be", "+\t * as efficient as possible.", "-\t\t\tif(tree.getEnabled() && (event.detail & SWT.SELECTED) != 0) {", "+\t\t\tif((event.detail & SWT.SELECTED) != 0) {", "-\t\t\t\t\tRegion region = new Region();", "-\t\t\t\t\tgc.getClipping(region);", "-\t\t\t\t\tregion.add(event.x, event.y, area.x + area.width - event.x, event.height); ", "-\t\t\t\t\tgc.setClipping(region);", "-\t\t\t\t\tregion.dispose();", "+\t\t\t\t\tint width = area.x + area.width - event.x;", "+\t\t\t\t\tif (width > 0) {", "+\t\t\t\t\t\tRegion region = new Region();", "+\t\t\t\t\t\tgc.getClipping(region);", "+\t\t\t\t\t\tregion.add(event.x, event.y, width, event.height); ", "+\t\t\t\t\t\tgc.setClipping(region);", "+\t\t\t\t\t\tregion.dispose();", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6739be4f66ec81706391d3edff006a84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a3cf6edf2759347dfed8be8789cf18f42c61b40d", "commitAfterChange": "9421e6abdbcf8178f8958a2faae4b7d125e841b4", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r public void setCursor (Cursor cursor)", "signatureAfterChange": "\r public void setCursor (Cursor cursor)", "diff": ["-\tif (cursor != null) hCursor = cursor.handle;\r", "+\tif (cursor != null) {\r", "+\t\tif (cursor.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\thCursor = cursor.handle;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaee841ed5aa37f205a84618eaca5604", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "0cf24896aed52b77d5c48967058854dd78a876b4", "commitAfterChange": "7a25bc54721155c26b43666fd169bd24f9c755af", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  public void setMinimized (boolean minimized)", "signatureAfterChange": "  public void setMinimized (boolean minimized)", "diff": ["-\tif (this.minimized == minimized) return;", "-//\tif (!minimized && OS.IsWindowCollapsed (shellHandle)) {", "-//\t\tOS.SelectWindow (shellHandle);", "-//\t}", "-//\tOS.CollapseWindow (shellHandle, minimized);", "+\tif (window == null) return;", "+\tif (minimized) {", "+\t\twindow.miniaturize (null);", "+\t} else {", "+\t\twindow.deminiaturize (null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa7f72510df3bae6c723cfd89937de5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "95779cd4d0bb094ce77a6c4b6aa0f503e308be61", "commitAfterChange": "9dda8cb02dc99526ce914c4a8cdbe997f487f877", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["+\tderegister ();", "-\tcolumn.handle = 0;", "+\tcolumn.handle = column.buttonHandle = column.labelHandle = 0;", "+\tcolumn.boxHandle = column.imageHandle = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "038a47bb8cd87d2743e96dbd5c17f066", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "45bd6882b89a28418cf82b050cd85ff9c325f6c8", "commitAfterChange": "61e93ffeef869fe08ad54c059aecd52c9da29b71", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": "  int idleProc (int data)", "signatureAfterChange": "  int idleProc (int data)", "diff": ["-\trunAsyncMessages (false);", "-\treturn 1;", "+\tboolean result = runAsyncMessages (false);", "+\tif (!result) {", "+\t\tsynchronized (idleLock) {", "+\t\t\tidleHandle = 0;", "+\t\t}", "+\t}", "+\treturn result ? 1 : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27c24fb1602fab0e711f23e9f650deb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "185295935f60ceed807b3151118bc827376c83f5", "commitAfterChange": "425f5e146ccfeedf0e8a9e71cecdd40c504f2ca6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["+\t\tif (horizontalButton.getSelection ()) style |= SWT.H_SCROLL;", "+\t\tif (verticalButton.getSelection ()) style |= SWT.V_SCROLL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e785965a81fe75f719f59a2f18dea33a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/GIFFileFormat.java", "commitBeforeChange": "c680123c9518455e16bdb0b923cc85a5f7856bb0", "commitAfterChange": "c46db4ee1b83354582b863c1f47d48bf7bad60a5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tbyte[] readGraphicsControlExtension()", "signatureAfterChange": "\r \tbyte[] readGraphicsControlExtension()", "diff": ["-\t\t\tif ((bitField & 0x01) != 0)\r", "-\t\t\t\ttransparentPixel = controlBlock[3] & 0xFF;\r", "-\t\t\telse\r", "+\t\t\tif ((bitField & 0x01) != 0) {\r", "+\t\t\t\tint colorIndex = controlBlock[3] & 0xFF;\r", "+\t\t\t\t/* Work around: a customer has a GIF that specifies an\r", "+\t\t\t\t * invalid color index that is larger than the number\r", "+\t\t\t\t * of entries in the palette. Detect this case, and\r", "+\t\t\t\t * ignore the specified color index. */\r", "+\t\t\t\tif (colorIndex <= 1 << defaultDepth) {\r", "+\t\t\t\t\ttransparentPixel = colorIndex;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc861e895327f40ae1d562fe8370656b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0068e41ed62132e76c6af5624e9acb501c2ce103", "commitAfterChange": "a92b7d83f56c5c0b9be5674e600ed472d90d401b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void test_getCharWidthC()", "signatureAfterChange": "  public void test_getCharWidthC()", "diff": ["-\twarnUnimpl(\"Test test_getCharWidthC not written\");", "+\tint w = gc.getCharWidth('a');", "+\tassertTrue(w > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da52ca0b2c8c87b5537b227183c23567", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public boolean isEmpty()", "signatureAfterChange": " public boolean isEmpty()", "diff": ["-\treturn OS.gdk_region_empty(handle);", "+\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\treturn Cairo.cairo_region_is_empty(handle);\t", "+\t} else {", "+\t\treturn OS.gdk_region_empty(handle);\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94f7da5cc7d493ecfce07541b6bb0975", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "90c88c351d9d93e9e4c9dea833ae3a7fc5518619", "commitAfterChange": "bc18fd0b8d70525950877ca2a41b5a05c2726cd3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  NSBezierPath getPath()", "signatureAfterChange": "  NSBezierPath getPath()", "diff": ["+\tif (path.isEmpty()) path.appendBezierPathWithRect(new NSRect());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b757814474d93569ac64053b2ba228", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "bce0ee39ea7f53c590750aa4c0f79bface1f2851", "commitAfterChange": "a3eb8313e949f9cb4d7d769018cd74a5e335546c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+\t\t/*", "+\t\t* Bug in Windows.  For some reason, when SetWindowText()", "+\t\t* is used to set the text of a link control to the empty", "+\t\t* string, the old text remains.  The fix is to set the", "+\t\t* text to a space instead.", "+\t\t*/", "+\t\tif (string.length () == 0) string = \" \";  //$NON-NLS-1$", "-\t\tparse (string);", "+\t\tparse (text);", "-\t\tlayout.setText (parse (string));\t", "+\t\tlayout.setText (parse (text));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "617a39ac855e8da30a6ae61e21397be3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_situational.java", "commitBeforeChange": "480a6fa458d3d8c72a7fe191b8a09e858f98dbdc", "commitAfterChange": "462af9da1aa62cd45acc7ed695412d8bcba9f5b8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test_windowDrawing()", "signatureAfterChange": "  public void test_windowDrawing()", "diff": ["+\tPerformance performance= Performance.getDefault();", "+\tperformance.setComment(meter, ", "+\t\t\tPerformance.EXPLAINS_DEGRADATION_COMMENT, ", "+\t\t\t\"Regression due to a issue on the Releng test machine\");", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a62e5b478f6b17457ff033d9a3389c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "529ef6f3fd271f2e575ac67cb655b783fbaec3b8", "commitAfterChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["+\tif (data.gdipBrush != 0) {", "+\t\tGdip.SolidBrush_delete(data.gdipBrush);\t\t", "+\t\tdata.gdipBrush = 0;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ae5f553b18a5f5cc32c9743a9b5e582", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "0a4f06040520fa52007134b6c78287bdec17d484", "commitAfterChange": "dc17f82e00f33e98f600f52956e72f33ed4a559d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r public void setText (String string)", "signatureAfterChange": "\r public void setText (String string)", "diff": ["-\tif ((style & SWT.READ_ONLY) == 0) {\r", "+\t/*\r", "+\t* The read-only and non-read-only cases must be handled\r", "+\t* separately here because the platform will allow the\r", "+\t* text of a read-only combo to be set to any value,\r", "+\t* regardless of whether it appears in the combo's item\r", "+\t* list or not.\r", "+\t*/\r", "+\tif ((style & SWT.READ_ONLY) != 0) {\r", "+\t\tint index = indexOf (string);\r", "+\t\tif (index != -1) select (index);\r", "+\t} else {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22686b5b9099a1b08b7f98a2236c1cfa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/ScrolledComposite.java", "commitBeforeChange": "177f753d5ec596f70989cac04629c9317b4bac19", "commitAfterChange": "b753a9548c84031bef7784f1f1d45228882c7e66", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void showControl(Control control)", "signatureAfterChange": " public void showControl(Control control)", "diff": ["-\tif (itemRect.x < 0) origin.x = Math.max(0, origin.x + itemRect.x);", "-\tif (itemRect.y < 0) origin.y = Math.max(0, origin.y + itemRect.y);", "-\tif (area.width < itemRect.x + itemRect.width) origin.x = Math.max(0, origin.x + itemRect.x + itemRect.width - area.width);", "-\tif (area.height < itemRect.y + itemRect.height) origin.y = Math.max(0, origin.y + itemRect.y + itemRect.height - area.height);", "+\tif (itemRect.x < 0) {", "+\t\torigin.x = Math.max(0, origin.x + itemRect.x);", "+\t} else {", "+\t\tif (area.width < itemRect.x + itemRect.width) origin.x = Math.max(0, origin.x + itemRect.x + Math.min(itemRect.width, area.width) - area.width);", "+\t}", "+\tif (itemRect.y < 0) {", "+\t\torigin.y = Math.max(0, origin.y + itemRect.y);", "+\t} else {", "+\t\tif (area.height < itemRect.y + itemRect.height) origin.y = Math.max(0, origin.y + itemRect.y + Math.min(itemRect.height, area.height) - area.height);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1b08065c21961bd629db30b106a5a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5689d8e849bba9fa425a7586a442195ae623d46c", "commitAfterChange": "47f1fc633e8f61df985d0a9b94a145703550a39b", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " void removeColumn(TreeColumn column)", "signatureAfterChange": " void removeColumn(TreeColumn column)", "diff": ["-\tSystem.arraycopy(columns, index + 1, newColumns, index, columns.length - index);", "+\tSystem.arraycopy(columns, index + 1, newColumns, index, newColumns.length - index);", "+\t", "+\t/* allow all items to update their internal structures accordingly */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems [i].columnRemoved (column, index);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b395469af3546614f9e958598b84c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "4171be6f67f46f1e929fa0a3983cfd3767530819", "commitAfterChange": "bee941fb91191b20eabec31b203fdc7c3bfb887f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  void setForegroundColor (GdkColor color)", "signatureAfterChange": "  void setForegroundColor (GdkColor color)", "diff": ["-\tsetForegroundColor (OS.gtk_bin_get_child(handle), color);", "+\tint /*long*/ childHandle = OS.gtk_bin_get_child(handle);", "+\tif (childHandle != 0) {", "+\t    setForegroundColor (childHandle, color);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b5a10573ed593bc7dd9ebfdc80acb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_situational.java", "commitBeforeChange": "a164b88e8f08342233043a8adcdeb26bc4c9842b", "commitAfterChange": "ff5fea86eb6ddd017d27bf1aef15c58f784f4788", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_layout()", "signatureAfterChange": "  public void test_layout()", "diff": ["-\tPerformanceMeter meter = createMeter(\"layout composites\");", "+\tPerformanceMeter meter = createMeter(\"Layout Composites\");", "+\tif (isWindows) {", "+\t\tPerformance performance = Performance.getDefault();", "+\t\tperformance.setComment(", "+\t\t\tmeter,", "+\t\t\tPerformance.EXPLAINS_DEGRADATION_COMMENT,", "+\t\t\t\"Degradation is a result of fixing bug 18607, which enables correct XP-themed border drawing. \" +", "+\t\t\t\"The report for this performance degradation is bug 144314.\");", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02905994bf2ed5d9d90dcbd09acea709", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "4e541013d096af28302abcbca900276c0e545259", "commitAfterChange": "e126ad021104dbb3243e0172869102689e47d9ea", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, false);", "-\t\t\t\t\tint byteCount = Math.min (buffer.length (), plvfi.cchTextMax - 1) * TCHAR.sizeof;", "-\t\t\t\t\tOS.MoveMemory (plvfi.pszText, buffer, byteCount);", "-\t\t\t\t\tOS.MoveMemory (plvfi.pszText + byteCount, new byte [TCHAR.sizeof], TCHAR.sizeof);", "-\t\t\t\t\tplvfi.cchTextMax = Math.min (plvfi.cchTextMax, string.length () + 1);", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Bug in Windows.  When pszText points to a zero length NULL", "+\t\t\t\t\t* terminated string, Windows correctly draws the empty string", "+\t\t\t\t\t* but the cache of the bounds for the item is not reset.  This", "+\t\t\t\t\t* means that when the text for an item is set and then reset", "+\t\t\t\t\t* to an empty string, the selection draws using the bounds of", "+\t\t\t\t\t* the previous text.  The fix is to assign a NULL pointer to", "+\t\t\t\t\t* pszText rather than a pointer to a zero-length string.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (string.length () == 0) {", "+\t\t\t\t\t\tplvfi.pszText = 0;", "+\t\t\t\t\t\tplvfi.cchTextMax = 0;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tTCHAR buffer = new TCHAR (getCodePage (), string, false);", "+\t\t\t\t\t\tint byteCount = Math.min (buffer.length (), plvfi.cchTextMax - 1) * TCHAR.sizeof;", "+\t\t\t\t\t\tOS.MoveMemory (plvfi.pszText, buffer, byteCount);", "+\t\t\t\t\t\tOS.MoveMemory (plvfi.pszText + byteCount, new byte [TCHAR.sizeof], TCHAR.sizeof);", "+\t\t\t\t\t\tplvfi.cchTextMax = Math.min (plvfi.cchTextMax, string.length () + 1);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4208e249c869349b78aeb8df5103c2cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e7be5498708ade2e955d52707b61fd6ab368c80d", "commitAfterChange": "312fc1d2086df4e1e840944eb0506d7a8def7428", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\t\tOS.gtk_main_iteration ();", "+\t\tint /*long*/ event = removeGdkEvent ();", "+\t\tif (event != 0) {", "+\t\t\teventProc (event, 0);", "+\t\t} else {", "+\t\t\tOS.gtk_main_iteration ();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fc39662bc4d27f1799d4d41cde23f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9cab96cf05ed4a3e677422cd45f77954b44bef06", "commitAfterChange": "587703d699cb7578ba61101e07919bbaef1b5f6c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public int getPreviousOffset (int offset, int movement)", "signatureAfterChange": " public int getPreviousOffset (int offset, int movement)", "diff": ["-\t\tif (spaceChar && !previousSpaceChar) break;", "+\t\tif (movement == SWT.MOVEMENT_WORD_END) {", "+\t\t\tif (!spaceChar && previousSpaceChar) break;", "+\t\t}", "+\t\tif (movement == SWT.MOVEMENT_WORD || movement == SWT.MOVEMENT_WORD_START) {", "+\t\t\tif (spaceChar && !previousSpaceChar) break;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6578ac7f332c854073c063fe0d1971", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "f109f5f9151efa44aceb0d49f60a7723dce0bf78", "commitAfterChange": "1b660f45c369b6eb63176ac5b87d6ee6402ab52b", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void setItem (int index, String string)", "signatureAfterChange": " public void setItem (int index, String string)", "diff": ["+\t\t/*", "+\t\t * Feature in Cocoa.  Setting the attributed title on an NSMenuItem", "+\t\t * also sets the title, but clearing the attributed title does not", "+\t\t * clear the title.  The fix is to explicitly set the title to an", "+\t\t * empty string in this case.  ", "+\t\t */", "+\t\tif (string.length() == 0) nsItem.setTitle(NSString.string());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c67c26e5376d68b8b22cd5b2ec5ec7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "7867f4333df3401f2d9ceb7dab2dbc0c4b8c2343", "commitAfterChange": "d2e5dcd7efd5667e08cacd2f0a4973952e5a602f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setToolTipText (String string)", "signatureAfterChange": " public void setToolTipText (String string)", "diff": ["-\tOS.gtk_tooltips_set_tip (tooltipsHandle, handle, buffer, null);", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "+\t\tOS.gtk_status_icon_set_tooltip (handle, buffer);", "+\t} else", "+\t\tOS.gtk_tooltips_set_tip (tooltipsHandle, handle, buffer, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d55efe5c647184dfe1e6400012fec9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b4a690d0b5c1851c4fb909482b5c3a2df07b4c02", "commitAfterChange": "d7e6349a792747a0caa3618c14f7dd83b6342eab", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void setTransform(Transform transform)", "signatureAfterChange": " public void setTransform(Transform transform)", "diff": ["-\tCairo.cairo_concat_matrix(cairo, transform.handle);", "-\tCairo.cairo_matrix_copy(data.matrix, transform.handle);", "-\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);", "-\tCairo.cairo_matrix_invert(data.inverseMatrix);", "+\tif (transform != null) {", "+\t\tCairo.cairo_concat_matrix(cairo, transform.handle);", "+\t\tCairo.cairo_matrix_copy(data.matrix, transform.handle);", "+\t\tCairo.cairo_matrix_copy(data.inverseMatrix, transform.handle);", "+\t\tCairo.cairo_matrix_invert(data.inverseMatrix);", "+\t} else {", "+\t\tCairo.cairo_matrix_set_identity(data.matrix);", "+\t\tCairo.cairo_matrix_set_identity(data.inverseMatrix);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d856513ff30e265502824a9d0befcc6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["+ */", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd7c4b330aa23a117cf2882b09c09eee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tNSSize size = textStorage.size();", "-\treturn new Rectangle(0, 0, (int)size.width, (int)size.height);", "+\tNSRect rect = layoutManager.usedRectForTextContainer(textContainer);", "+\tif (wrapWidth != -1) rect.width = wrapWidth;", "+\treturn new Rectangle(0, 0, (int)rect.width, (int)rect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e5ff9d2ac4477cb929017e45775c26", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "529ef6f3fd271f2e575ac67cb655b783fbaec3b8", "commitAfterChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 84, "signatureBeforeChange": "  void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle, int[] dashes)", "signatureAfterChange": "  void setPen(int newColor, int newWidth, int lineStyle, int capStyle, int joinStyle, int[] dashes)", "diff": ["+\tif (data.gdipPen != 0) {", "+\t\tGdip.Pen_delete(data.gdipPen);", "+\t\tdata.gdipPen = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c9b04bd51ed0eb01808228670599187", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "9cab96cf05ed4a3e677422cd45f77954b44bef06", "commitAfterChange": "587703d699cb7578ba61101e07919bbaef1b5f6c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public int getNextOffset (int offset, int movement)", "signatureAfterChange": " public int getNextOffset (int offset, int movement)", "diff": ["-\t\tif (!spaceChar && previousSpaceChar) break;", "+\t\tif (movement == SWT.MOVEMENT_WORD || movement == SWT.MOVEMENT_WORD_END) {", "+\t\t\tif (spaceChar && !previousSpaceChar) break;", "+\t\t}", "+\t\tif (movement == SWT.MOVEMENT_WORD_START) {", "+\t\t\tif (!spaceChar && previousSpaceChar) break;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ef97887936ff278261a26dee7936c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6593dcf4066d4af124ce37d44831175f0d2999e2", "commitAfterChange": "6653ad057e07aa369ef4753b18e1f09d59a72f06", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  int getBackgroundPixel ()", "signatureAfterChange": "  int getBackgroundPixel ()", "diff": ["-\treturn OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "+\tint color = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "+\tif (color == OS.CLR_NONE) return defaultBackground ();", "+\treturn color;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b9d035be26b8ac0ad03cd573739690f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f09fa17598b171271add9842e034e13ff6ff6c75", "commitAfterChange": "9b6f622a04ffc6428b9bddee8e107bf304da0051", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["+\t\tif (cairo == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tCairo.cairo_set_operator(cairo, Cairo.CAIRO_OPERATOR_SOURCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "323e839d3320917904efff72ef7ce1eb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "0b26303ff77a0b86a8a1c108c75167c2829b0c40", "commitAfterChange": "43247e664c79d2fc35e6151bdc49aefe9e6dfb7a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tstatic int gObjectClass_finalize (int atkObject)", "signatureAfterChange": "  \tstatic int gObjectClass_finalize (int atkObject)", "diff": ["-\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tAccessibleObject object = (AccessibleObject)AccessibleObjects.get (new LONG (atkObject));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9959d4c4348158216d5ed03fbd37af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "95c5bd5be9e5e4341c644ca11834dbb39f3c43f7", "commitAfterChange": "f1bdc2e1db5fc4d01de15fdd7244c90e9d3700fb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void bringToTop (boolean force)", "signatureAfterChange": "  void bringToTop (boolean force)", "diff": ["-\t\tOS.gdk_window_focus (window, OS.GDK_CURRENT_TIME);", "+\t\t/*", "+\t\t* Bug in metacity.  Calling gdk_window_focus() with a timestamp more", "+\t\t* recent than the last user interaction time can cause windows not", "+\t\t* to come forward in versions > 2.10.0.  The fix is to use the last", "+\t\t* user event time. ", "+\t\t*/", "+\t\tif (display.windowManager.toLowerCase ().equals (\"metacity\")) {", "+\t\t\tOS.gdk_window_focus (window, display.lastUserEventTime);", "+\t\t} else {", "+\t\t\tOS.gdk_window_focus (window, OS.GDK_CURRENT_TIME);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baf912955f34a3a8768a9718bc07630e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void showItem (TableItem item)", "signatureAfterChange": " public void showItem (TableItem item)", "diff": ["-\tint path = OS.gtk_tree_model_get_path(modelHandle, item.handle);", "-\tOS.gtk_tree_view_scroll_to_cell(handle, path, 0, false, 0, 0);", "-\tOS.gtk_tree_path_free(path);", "+\tcheckWidget ();", "+\tif (item == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (item.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint path = OS.gtk_tree_model_get_path (modelHandle, item.handle);", "+\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0, 0);", "+\tOS.gtk_tree_path_free (path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e817461186fb673eca3131f96f00332", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "920ca0dbc3260d1945d9e20db88905ff754cf530", "commitAfterChange": "f86c3f4867919e2c29f564d911b4e57370abc4fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlSetFocusPart (int nextHandler, int theEvent, int userData)", "diff": ["-\tsuper.kEventControlSetFocusPart (nextHandler, theEvent, userData);", "+\tint result = super.kEventControlSetFocusPart (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67701bbaea7bc41b1058701bb4e3a19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "c13b22837b30fd90fa15a29afe63a567bc3f87e5", "commitAfterChange": "3a5ece72c305410ded2cd14b2fb9617ac7003ab1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 42, "signatureBeforeChange": "  void buildExtrasLookup(Node node, HashMap table)", "signatureAfterChange": "  void buildLookup(Node node, HashMap table)", "diff": ["-void buildExtrasLookup(Node node, HashMap table) {", "+void buildLookup(Node node, HashMap table) {", "-\t\tString key = getKey(childNode);", "-\t\ttable.put(key, childNode);", "-\t\tbuildExtrasLookup(childNode, table);", "+\t\tif (childNode.getNodeType() == Node.ELEMENT_NODE) {", "+\t\t\tString key = getKey(childNode);", "+\t\t\tif (table.get(key) == null) table.put(key, childNode);", "+\t\t\tbuildLookup(childNode, table);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e2c536e598906215685747f38bd11a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scale.java", "commitBeforeChange": "d9d0c775ac1af535d7dcaa2087da6ddf830d1734", "commitAfterChange": "259bd8b6cc7f7356aea123e1c4c843b5e4c181a8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tOS.CreateSliderControl (window, null, 0, 0, 100, OS.kControlSliderDoesNotPoint, (short)0, true, actionProc, outControl);", "+\tint value = 0;", "+\tif ((style & SWT.VERTICAL) != 0) value = 100;", "+\tOS.CreateSliderControl (window, null, value, 0, 100, OS.kControlSliderDoesNotPoint, (short)0, true, actionProc, outControl);", "-\tif ((style & SWT.VERTICAL) != 0) {", "-\t\tOS.SetControl32BitValue (handle, 100);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67510747206df9e2fc239fcb62bea85a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b007515cbcde96bb54766bf477a070088005e41e", "commitAfterChange": "28693b715394e6d7185e331f748190abf197da68", "methodNumberBeforeChange": 223, "methodNumberAfterChange": 223, "signatureBeforeChange": " public boolean setParent (Composite parent)", "signatureAfterChange": " public boolean setParent (Composite parent)", "diff": ["-\tOS.gtk_fixed_move (newParent, topHandle, x, y);", "+\tif (OS.GTK_VERSION < OS.VERSION(3, 0, 0)) {", "+\t\tOS.gtk_fixed_move (newParent, topHandle, x, y);", "+\t} else {", "+\t\tOS.swt_fixed_move (newParent, topHandle, x, y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2475e15a31ee6460f14c2e7b6bc2b41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "939be15b88da4c1fe105591d8afa17276ccbf236", "commitAfterChange": "81e54d38ec5b6342d15f1f7833dc8f31804e4b00", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\tNSPoint pt = new NSPoint();", "-\t\tpt.x = x;", "-\t\tpt.y = y;", "-\t\tstr.drawAtPoint(pt);", "+\t\tNSSize size = str.size();", "+\t\tNSRect rect = new NSRect();", "+\t\trect.x = x;", "+\t\trect.y = y;", "+\t\trect.width = size.width;", "+\t\trect.height = size.height;", "+\t\tstr.drawInRect(rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7457c52602239214affd4c2327b4160", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "3d817763795905fe100865e8185b85562f38c047", "commitAfterChange": "d1bc5e39a924d05d11bfe317f793a9d494c9b448", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 301, "signatureBeforeChange": " public void setBlockSelectionBounds(int x, int y, int width, int height)", "signatureAfterChange": " public void setBlockSelectionBounds(int x, int y, int width, int height)", "diff": ["-\tint maxX = renderer.getWidth() - rightMargin;", "+\tint maxX = Math.max(clientAreaWidth, renderer.getWidth()) - rightMargin;", "-\t\tanchorX = ((anchorX - leftMargin + horizontalScrollOffset) / avg * avg) - horizontalScrollOffset + leftMargin;", "-\t\tlocationX = ((locationX + avg / 2 - leftMargin + horizontalScrollOffset) / avg * avg) - horizontalScrollOffset + leftMargin;", "+\t\tanchorX = ((anchorX - leftMargin + horizontalScrollOffset) / avg * avg) + leftMargin - horizontalScrollOffset;", "+\t\tlocationX = ((locationX + avg / 2 - leftMargin + horizontalScrollOffset) / avg * avg) + leftMargin - horizontalScrollOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "161012ca910b90acc28decfcd9b631cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "d8903cae624b03e7be31aff8cd5486c7b2b989f1", "commitAfterChange": "5c21a2f6c2efd2e3c291f4becf278aca7f119d20", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " public void setForeground (int columnIndex, Color value)", "signatureAfterChange": " public void setForeground (int columnIndex, Color value)", "diff": ["+\t\tif (value == null) return;", "-\tif (cellForegrounds [columnIndex] == value) return;", "-\tif (cellForegrounds [columnIndex] != null && cellForegrounds [columnIndex].equals (value)) return;", "+\tColor oldColor = cellForegrounds [columnIndex];", "+\tif (oldColor == value) return;", "+\tif (oldColor != null && oldColor.equals (value)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87138c97b3bde8e4b5676b8522c00ea8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "b8c9a5a192dd118da02cf9e1635a0be3b8d1e977", "commitAfterChange": "440f8fc96ed6ef73e1136f7b17f60d6129995ede", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["-\t\t\t\t//NOT SURE", "-//\t\t\t\tcase SWT.TRAVERSE_RETURN:", "+\t\t\tif (event.detail == SWT.TRAVERSE_TAB_PREVIOUS) {", "+\t\t\t\ttraverse(SWT.TRAVERSE_TAB_PREVIOUS);", "+\t\t\t\tevent.detail = SWT.TRAVERSE_NONE;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c6ef940f616cb2d5a4298b22a6f9c25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "a3fa51046bf7e95f74fcee933df95431cc97dea4", "commitAfterChange": "a3916015a16403e8507d19ff7f1200e0deee7e4f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r public int indexOf (TabItem item)", "signatureAfterChange": "\r public int indexOf (TabItem item)", "diff": ["-\tint list = OS.gtk_container_children (handle);\r", "-\tint count = list != 0 ? OS.g_list_length (list) : 0;\r", "+\tint list = OS.gtk_container_get_children (handle);\r", "+\tif (list == 0) return -1;\r", "+\tint count = OS.g_list_length (list);\r", "+\tOS.g_list_free (list);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c68cedda40dda10ccc34becdb521f57c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/FileFormat.java", "commitBeforeChange": "fd8d9aec60087f39880984f7eb9750b2006f9a1b", "commitAfterChange": "d5f0ee46fd216a0c27b6bcf7a1c29ed77efb8aac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r public static ImageData[] load(InputStream is, ImageLoader loader)", "signatureAfterChange": "\r \r public static ImageData[] load(InputStream is, ImageLoader loader)", "diff": ["-\t\ttry {\r", "-\t\t\tClass clazz = Class.forName(FORMAT_PACKAGE + '.' + FORMATS[i] + FORMAT_SUFFIX);\r", "-\t\t\tfileFormat = (FileFormat) clazz.newInstance();\r", "-\t\t\tif (fileFormat.isFileFormat(stream)) {\r", "-\t\t\t\tisSupported = true;\r", "-\t\t\t\tbreak;\r", "+\t\tif (FORMATS[i] != null) {\r", "+\t\t\ttry {\r", "+\t\t\t\tClass clazz = Class.forName(FORMAT_PACKAGE + '.' + FORMATS[i] + FORMAT_SUFFIX);\r", "+\t\t\t\tfileFormat = (FileFormat) clazz.newInstance();\r", "+\t\t\t\tif (fileFormat.isFileFormat(stream)) {\r", "+\t\t\t\t\tisSupported = true;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t} catch (ClassNotFoundException e) {\r", "+\t\t\t\tFORMATS[i] = null;\r", "+\t\t\t} catch (Exception e) {\r", "-\t\t} catch (Exception e) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c93d304921a860c2c6b9a0b2ad1ea5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d57ce4c847d12740eaea9c78b892a134f6a3cb64", "commitAfterChange": "1d28c230c8521595a193c506a7bcba33dc702ce0", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDBLCLK (int wParam, int lParam)", "diff": ["+\tLRESULT result = null;", "-\tsendMouseEvent (SWT.MouseDoubleClick, 1, handle, OS.WM_LBUTTONDBLCLK, wParam, lParam);", "+\tif (!sendMouseEvent (SWT.MouseDoubleClick, 1, handle, OS.WM_LBUTTONDBLCLK, wParam, lParam)) {", "+\t\tresult = LRESULT.ZERO;", "+\t}", "-\t\t\tint result = OS.SendMessage (handle, OS.EM_LINELENGTH, length, 0);", "-\t\t\tif (result == 0) return LRESULT.ZERO;", "+\t\t\tint code = OS.SendMessage (handle, OS.EM_LINELENGTH, length, 0);", "+\t\t\tif (code == 0) return LRESULT.ZERO;", "-\treturn null;", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f8decc45fca035e4d727eec5c7b515", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleEventSink.java", "commitBeforeChange": "289663b789c3f5e6763593d701770dc9c6735e45", "commitAfterChange": "61aaa5d345230600c799f6ea9d7e339f868270d4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private int Invoke(int dispIdMember, long riid, int lcid, int dwFlags, long pDispParams, long pVarResult, long pExcepInfo, long pArgErr)", "signatureAfterChange": " private int Invoke(int dispIdMember, long riid, int lcid, int dwFlags, long pDispParams, long pVarResult, long pExcepInfo, long pArgErr)", "diff": ["-\t\t", "+", "+", "+\tif (eventInfo != null) {", "+\t\tfor (int j = 0; j < eventInfo.length; j++){ ", "+\t\t\teventInfo[j].dispose(); ", "+\t\t} ", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdb22507e2745d363b355e73b7fff615", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c46af8ffe413f4f5ee2e69eb57fc5e1b4cd344b8", "commitAfterChange": "5c4d1cff6c1bac1272f206b65488d1b112d24eee", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void removeAll ()", "signatureAfterChange": " public void removeAll ()", "diff": ["+\tint index = itemCount - 1;", "+\twhile (index >= 0) {", "+\t\titems [index].releaseResources ();", "+\t\t--index;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa37994eeccff145aec33e514e9e58e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a3cf6edf2759347dfed8be8789cf18f42c61b40d", "commitAfterChange": "9421e6abdbcf8178f8958a2faae4b7d125e841b4", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "\r public boolean setParent (Composite parent)", "signatureAfterChange": "\r public boolean setParent (Composite parent)", "diff": ["+\tif (parent.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9dfdf4680ff85f19ad784c4e96cd207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7af48bb9f090f0eca9c603b9f05937ffc4d0e7d9", "commitAfterChange": "097229ba307de6272bc7440fa4dfe6e71695d47e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": " public int getSelectionCount ()", "signatureAfterChange": " public int getSelectionCount ()", "diff": ["-\t//TODO", "-//\tif ((style & SWT.SINGLE) != 0) {", "+\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif (item == 0) return 0;", "+\t\tint result = item == 0 ? 0 : 1;", "-\t\treturn 1;", "-//\t}", "-//\treturn 0;", "+\t\treturn result;", "+\t}", "+\treturn selectedItemCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741aa50221e49f6e9ac8e1b37e6b4904", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "233384070d65d990e7a811caac5ba3509a11381e", "commitAfterChange": "805981bcff9d2ee0ffa326ba462c72ed6f9ba413", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tNSTextField widget = (NSTextField) view;", "-\t\tNSSize size = widget.cell ().cellSize ();", "-\t\twidth = (int)Math.ceil (size.width);", "+\t\tNSCell cell = ((NSTextField) view).cell ();", "+\t\tNSSize size = cell.cellSize ();", "+\t\tif (cell.title ().length () > 0) {", "+\t\t\twidth = (int)Math.ceil (size.width);", "+\t\t}", "-\t\t\tNSRect insets = widget.cell ().titleRectForBounds (new NSRect ());", "+\t\t\tNSRect insets = cell.titleRectForBounds (new NSRect ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3082864c868874d49b9db631dd413a31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "b1cf2e4603483e60f07f7d3719c97083be10e9b2", "commitAfterChange": "f2eaf4de8227661ef29880af04d52e370a50fc82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tif ((style & SWT.VERTICAL) != 0) {", "+\t\tint tmp = width;", "+\t\twidth = height;", "+\t\theight = tmp;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85014bd8043f064fde6c9789a4478b7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4f4c47acced6715e0f6a76f259372df7c93c0a3e", "commitAfterChange": "61f597f77bae4a8b673ae18f59f40157652eabb4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tint transBlue = 0, transGreen = 0, transRed = 0;", "-\tif (bm.bmBitsPixel <= 8) {", "-\t\tif (isDib) {", "-\t\t\t/* Palette-based DIBSECTION */", "-\t\t\tif (OS.IsWinCE) {", "-\t\t\t\tbyte[] pBits = new byte[1];", "-\t\t\t\tOS.MoveMemory(pBits, bm.bmBits, 1);", "-\t\t\t\tbyte oldValue = pBits[0];\t\t\t", "-\t\t\t\tint mask = (0xFF << (8 - bm.bmBitsPixel)) & 0x00FF;", "-\t\t\t\tpBits[0] = (byte)((srcImage.transparentPixel << (8 - bm.bmBitsPixel)) | (pBits[0] & ~mask));", "-\t\t\t\tOS.MoveMemory(bm.bmBits, pBits, 1);", "-\t\t\t\tint color = OS.GetPixel(srcHdc, 0, 0);", "-          \t\tpBits[0] = oldValue;", "-           \t\tOS.MoveMemory(bm.bmBits, pBits, 1);\t\t\t\t", "-\t\t\t\ttransBlue = (color & 0xFF0000) >> 16;", "-\t\t\t\ttransGreen = (color & 0xFF00) >> 8;", "-\t\t\t\ttransRed = color & 0xFF;\t\t\t\t", "-\t\t\t} else {", "-\t\t\t\tint maxColors = 1 << bm.bmBitsPixel;", "-\t\t\t\tbyte[] oldColors = new byte[maxColors * 4];", "-\t\t\t\tOS.GetDIBColorTable(srcHdc, 0, maxColors, oldColors);", "-\t\t\t\tint offset = srcImage.transparentPixel * 4;\t\t\t\t", "-\t\t\t\tboolean fixPalette = false;", "-\t\t\t\tfor (int i = 0; i < oldColors.length; i += 4) {", "-\t\t\t\t\tif (i != offset) {", "-\t\t\t\t\t\tif (oldColors[offset] == oldColors[i] && oldColors[offset+1] == oldColors[i+1] && oldColors[offset+2] == oldColors[i+2]) {", "-\t\t\t\t\t\t\tfixPalette = true;", "-\t\t\t\t\t\t\tbreak;", "+\tint transparentColor = srcImage.transparentColor;", "+\tif (transparentColor == -1) {", "+\t\tint transBlue = 0, transGreen = 0, transRed = 0;\t\t", "+\t\tboolean fixPalette = false;", "+\t\tif (bm.bmBitsPixel <= 8) {", "+\t\t\tif (isDib) {", "+\t\t\t\t/* Palette-based DIBSECTION */", "+\t\t\t\tif (OS.IsWinCE) {", "+\t\t\t\t\tbyte[] pBits = new byte[1];", "+\t\t\t\t\tOS.MoveMemory(pBits, bm.bmBits, 1);", "+\t\t\t\t\tbyte oldValue = pBits[0];\t\t\t", "+\t\t\t\t\tint mask = (0xFF << (8 - bm.bmBitsPixel)) & 0x00FF;", "+\t\t\t\t\tpBits[0] = (byte)((srcImage.transparentPixel << (8 - bm.bmBitsPixel)) | (pBits[0] & ~mask));", "+\t\t\t\t\tOS.MoveMemory(bm.bmBits, pBits, 1);", "+\t\t\t\t\tint color = OS.GetPixel(srcHdc, 0, 0);", "+\t          \t\tpBits[0] = oldValue;", "+\t           \t\tOS.MoveMemory(bm.bmBits, pBits, 1);\t\t\t\t", "+\t\t\t\t\ttransBlue = (color & 0xFF0000) >> 16;", "+\t\t\t\t\ttransGreen = (color & 0xFF00) >> 8;", "+\t\t\t\t\ttransRed = color & 0xFF;\t\t\t\t", "+\t\t\t\t} else {", "+\t\t\t\t\tint maxColors = 1 << bm.bmBitsPixel;", "+\t\t\t\t\tbyte[] oldColors = new byte[maxColors * 4];", "+\t\t\t\t\tOS.GetDIBColorTable(srcHdc, 0, maxColors, oldColors);", "+\t\t\t\t\tint offset = srcImage.transparentPixel * 4;\t\t", "+\t\t\t\t\tfor (int i = 0; i < oldColors.length; i += 4) {", "+\t\t\t\t\t\tif (i != offset) {", "+\t\t\t\t\t\t\tif (oldColors[offset] == oldColors[i] && oldColors[offset+1] == oldColors[i+1] && oldColors[offset+2] == oldColors[i+2]) {", "+\t\t\t\t\t\t\t\tfixPalette = true;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (fixPalette) {", "+\t\t\t\t\t\tbyte[] newColors = new byte[oldColors.length];", "+\t\t\t\t\t\ttransRed = transGreen = transBlue = 0xff;", "+\t\t\t\t\t\tnewColors[offset] = (byte)transBlue;", "+\t\t\t\t\t\tnewColors[offset+1] = (byte)transGreen;", "+\t\t\t\t\t\tnewColors[offset+2] = (byte)transRed;", "+\t\t\t\t\t\tOS.SetDIBColorTable(srcHdc, 0, maxColors, newColors);", "+\t\t\t\t\t\toriginalColors = oldColors;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttransBlue = oldColors[offset] & 0xFF;", "+\t\t\t\t\t\ttransGreen = oldColors[offset+1] & 0xFF;", "+\t\t\t\t\t\ttransRed = oldColors[offset+2] & 0xFF;", "+\t\t\t\t\t}", "-\t\t\t\tif (fixPalette) {", "-\t\t\t\t\tbyte[] newColors = new byte[oldColors.length];", "-\t\t\t\t\ttransRed = transGreen = transBlue = 0xff;", "-\t\t\t\t\tnewColors[offset] = (byte)transBlue;", "-\t\t\t\t\tnewColors[offset+1] = (byte)transGreen;", "-\t\t\t\t\tnewColors[offset+2] = (byte)transRed;", "-\t\t\t\t\tOS.SetDIBColorTable(srcHdc, 0, maxColors, newColors);", "-\t\t\t\t\toriginalColors = oldColors;", "-\t\t\t\t} else {", "-\t\t\t\t\ttransBlue = oldColors[offset] & 0xFF;", "-\t\t\t\t\ttransGreen = oldColors[offset+1] & 0xFF;", "-\t\t\t\t\ttransRed = oldColors[offset+2] & 0xFF;", "-\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t/* Palette-based bitmap */", "+\t\t\t\tint numColors = 1 << bm.bmBitsPixel;", "+\t\t\t\t/* Set the few fields necessary to get the RGB data out */", "+\t\t\t\tBITMAPINFOHEADER bmiHeader = new BITMAPINFOHEADER();", "+\t\t\t\tbmiHeader.biSize = BITMAPINFOHEADER.sizeof;", "+\t\t\t\tbmiHeader.biPlanes = bm.bmPlanes;", "+\t\t\t\tbmiHeader.biBitCount = bm.bmBitsPixel;", "+\t\t\t\tbyte[] bmi = new byte[BITMAPINFOHEADER.sizeof + numColors * 4];", "+\t\t\t\tOS.MoveMemory(bmi, bmiHeader, BITMAPINFOHEADER.sizeof);", "+\t\t\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);", "+\t\t\t\tOS.GetDIBits(srcHdc, srcImage.handle, 0, 0, 0, bmi, OS.DIB_RGB_COLORS);", "+\t\t\t\tint offset = BITMAPINFOHEADER.sizeof + 4 * srcImage.transparentPixel;", "+\t\t\t\ttransRed = bmi[offset + 2] & 0xFF;", "+\t\t\t\ttransGreen = bmi[offset + 1] & 0xFF;", "+\t\t\t\ttransBlue = bmi[offset] & 0xFF;", "-\t\t\t/* Palette-based bitmap */", "-\t\t\tint numColors = 1 << bm.bmBitsPixel;", "-\t\t\t/* Set the few fields necessary to get the RGB data out */", "-\t\t\tBITMAPINFOHEADER bmiHeader = new BITMAPINFOHEADER();", "-\t\t\tbmiHeader.biSize = BITMAPINFOHEADER.sizeof;", "-\t\t\tbmiHeader.biPlanes = bm.bmPlanes;", "-\t\t\tbmiHeader.biBitCount = bm.bmBitsPixel;", "-\t\t\tbyte[] bmi = new byte[BITMAPINFOHEADER.sizeof + numColors * 4];", "-\t\t\tOS.MoveMemory(bmi, bmiHeader, BITMAPINFOHEADER.sizeof);", "-\t\t\tif (OS.IsWinCE) SWT.error(SWT.ERROR_NOT_IMPLEMENTED);", "-\t\t\tOS.GetDIBits(srcHdc, srcImage.handle, 0, 0, 0, bmi, OS.DIB_RGB_COLORS);", "-\t\t\tint offset = BITMAPINFOHEADER.sizeof + 4 * srcImage.transparentPixel;", "-\t\t\ttransRed = bmi[offset + 2] & 0xFF;", "-\t\t\ttransGreen = bmi[offset + 1] & 0xFF;", "-\t\t\ttransBlue = bmi[offset] & 0xFF;", "+\t\t\t/* Direct color image */", "+\t\t\tint pixel = srcImage.transparentPixel;", "+\t\t\tswitch (bm.bmBitsPixel) {", "+\t\t\t\tcase 16:", "+\t\t\t\t\ttransBlue = (pixel & 0x1F) << 3;", "+\t\t\t\t\ttransGreen = (pixel & 0x3E0) >> 2;", "+\t\t\t\t\ttransRed = (pixel & 0x7C00) >> 7;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 24:", "+\t\t\t\t\ttransBlue = (pixel & 0xFF0000) >> 16;", "+\t\t\t\t\ttransGreen = (pixel & 0xFF00) >> 8;", "+\t\t\t\t\ttransRed = pixel & 0xFF;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 32:", "+\t\t\t\t\ttransBlue = (pixel & 0xFF000000) >>> 24;", "+\t\t\t\t\ttransGreen = (pixel & 0xFF0000) >> 16;", "+\t\t\t\t\ttransRed = (pixel & 0xFF00) >> 8;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t} else {", "-\t\t/* Direct color image */", "-\t\tint pixel = srcImage.transparentPixel;", "-\t\tswitch (bm.bmBitsPixel) {", "-\t\t\tcase 16:", "-\t\t\t\ttransBlue = (pixel & 0x1F) << 3;", "-\t\t\t\ttransGreen = (pixel & 0x3E0) >> 2;", "-\t\t\t\ttransRed = (pixel & 0x7C00) >> 7;", "-\t\t\t\tbreak;", "-\t\t\tcase 24:", "-\t\t\t\ttransBlue = (pixel & 0xFF0000) >> 16;", "-\t\t\t\ttransGreen = (pixel & 0xFF00) >> 8;", "-\t\t\t\ttransRed = pixel & 0xFF;", "-\t\t\t\tbreak;", "-\t\t\tcase 32:", "-\t\t\t\ttransBlue = (pixel & 0xFF000000) >>> 24;", "-\t\t\t\ttransGreen = (pixel & 0xFF0000) >> 16;", "-\t\t\t\ttransRed = (pixel & 0xFF00) >> 8;", "-\t\t\t\tbreak;", "-\t\t}", "+\t\ttransparentColor = transBlue << 16 | transGreen << 8 | transRed;", "+\t\tif (!fixPalette) srcImage.transparentColor = transparentColor;", "-\tint transparentColor = transBlue << 16 | transGreen << 8 | transRed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b740ae752c591af76141ee1da07953c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "95087f70461c9fdee64c3c9d1fda2ec4d269324c", "commitAfterChange": "ca5e588017b8795b03417457562b8f46567bc04f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tOS.gtk_scrolled_window_add_with_viewport (scrolledHandle, handle);", "+\t\tif (OS.VERSION(3, 8, 0)<OS.GTK_VERSION) {", "+\t\t\tOS.gtk_scrolled_window_add_with_viewport (scrolledHandle, handle);", "+\t\t} else {", "+\t\t\tOS.gtk_container_add(scrolledHandle, handle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13846cf81742319cebd8cfc2845a7752", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b9ddd1452af7222492b0938bfc959b950654eb97", "commitAfterChange": "b0fe84d3287092cde6394be1181ca68cb9f918e2", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public int getTopIndex ()", "signatureAfterChange": " public int getTopIndex ()", "diff": ["-    return (int)/*64*/((NSTableView)view).rowAtPoint(point);", "+\t", "+\tint /*64*/ rowAtPoint = (int)/*64*/((NSTableView)view).rowAtPoint(point);", "+\tif (rowAtPoint == -1) return 0; /* Empty table */ ", "+\treturn rowAtPoint;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98d4f0b835541d099cc121423d80b67c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground)", "signatureAfterChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground)", "diff": ["+\t\tint styleLineEnd;\r", "+\t\tstyleLineEnd = style.start + style.length - lineOffset;\r", "-\t\tstyleLineLength = Math.min(style.start - lineOffset + style.length, lineLength) - renderOffset;\r", "-\t\tif (styleLineLength == 0) {\r", "+\t\telse\r", "+\t\tif (styleLineEnd <= renderOffset) {\r", "+\t\t\t// style ends before render start offset\r", "+\t\t\t// skip to the next style\r", "+\t\t\tcontinue;\r", "+\t\t}\r", "+\t\tif (styleLineStart >= lineLength) {\r", "-\t\t}\r", "-\t\telse \r", "-\t\tif (styleLineLength < 0) {\r", "-\t\t\t// style ends before render start offset\r", "-\t\t\tcontinue;\r", "-\t\t}\r", "+\t\t}\t\t\r", "+\t\tstyleLineLength = Math.min(styleLineEnd, lineLength) - renderOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30cc06fc2f2d23ec95cf970b206783b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 62, "signatureBeforeChange": " void makeDescendentsUnavailable(TreeItem2 item, TreeItem2[] removedDescendents)", "signatureAfterChange": " void makeDescendentsUnavailable(TreeItem2 item, TreeItem2[] removedDescendents)", "diff": ["-\t/* update availableIndex as needed */", "+\t/* update availableIndexes */", "+\tfor (int i = 1; i < removedDescendents.length; i++) {", "+\t\t/* skip the first descendent since this is the item being collapsed */", "+\t\tremovedDescendents[i].availableIndex = -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4686b23a300c187d2eb281d29670083b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "d12295bb6c4944ccf4f49791514101465fa5bb08", "commitAfterChange": "7d1c253e7ad3940188e5b12b34ff907a0ad648e2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " void mouseMove(Event event)", "signatureAfterChange": " void mouseMove(Event event)", "diff": ["+\tif (!(0 <= event.x && event.x <= colorChooserWidth)) return;", "+\tif (!(0 <= event.y && event.y <= colorChooserHeight)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc9ad8f020afb71432a0f311e783ef31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "commitAfterChange": "85b8baf1efb6a545680cc9553a80da0d7364e4a0", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 70, "signatureBeforeChange": "  void setClipping(int clipRgn)", "signatureAfterChange": "  void setClipping(int clipRgn)", "diff": ["+", "+\t\t} else {", "+\t\t\treturn;", "+\t}", "+\tint /*long*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tsetCairoClip(cairo, clipRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871357867046839469a0781674372c22", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "101f48207327e1ff58cb127f6f3e8fe3a1f5f755", "commitAfterChange": "f7af67eb750d16cb78b69e519c2e9163f55f7288", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public int getWidth ()", "signatureAfterChange": " public int getWidth ()", "diff": ["-\treturn (int)nsColumn.width();", "+\tint width = (int)nsColumn.width();", "+\t// TODO how to differentiate 0 and 1 cases?", "+\tif (width > 0) width += Table.CELL_GAP;", "+\treturn width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef56f67f10caf971a372449b7eb3c88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0d6738f372469d9527fdb6984c0f956cbb0c021a", "commitAfterChange": "69155e7bef60580890dcbd61eeae4b1c572aec32", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_dispose()", "signatureAfterChange": "  public void test_dispose()", "diff": ["-\tImage[] images = new Image [COUNT];", "-\tfor (int i = 0; i < COUNT; i++) {", "+\tfinal int count = COUNT / 10;", "+\tImage[] images = new Image [count];", "+\tfor (int i = 0; i < count; i++) {", "-\tGC[] gcs = new GC [COUNT];", "-\tfor (int i = 0; i < COUNT; i++) {", "+\tGC[] gcs = new GC [count];", "+\tfor (int i = 0; i < count; i++) {", "-\tfor (int i = 0; i < COUNT; i++) {", "+\tfor (int i = 0; i < count; i++) {", "-    for (int i = 0; i < COUNT; i++) {", "+    for (int i = 0; i < count; i++) {", "-\tfor (int i = 0; i < COUNT; i++) {", "+\tfor (int i = 0; i < count; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6acfd22dd156382ab37f5359939e2d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "be925d0b6d5cc948d9a138f9d774d09ebc8271fa", "commitAfterChange": "e452c021f67f676429c5f4d0a613bc6e64b5059a", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void setSelection (int [] indices)", "signatureAfterChange": " public void setSelection (int [] indices)", "diff": ["-\tdeselectAll ();", "+\tcheckWidget ();", "+\tif (indices == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif ((style & SWT.MULTI) != 0) deselectAll ();", "+\tshowSelection ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd577cae0d75d83f9c48841ed95a8fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "a8fb3e0fe0b510084044ae4796423e013afbba38", "commitAfterChange": "6fd13c51831eb0e5334b878140281ccff0223a1a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public boolean execute (String script)", "signatureAfterChange": "  public boolean execute (String script)", "diff": ["+\tframe.Release ();", "-\tif (urlString == 0) return false;", "-\tWebKit_win32.JSEvaluateScript (context, scriptString, 0, urlString, 0, null);", "+\tif (urlString == 0) {", "+\t\tWebKit_win32.JSStringRelease (scriptString);", "+\t\treturn false;", "+\t}", "+\tint /*long*/ evalResult = WebKit_win32.JSEvaluateScript (context, scriptString, 0, urlString, 0, null);", "-\treturn hr != COM.S_OK;", "+\treturn evalResult != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e99be7ec3dd2f9b5c0a7c68895a44f8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "b7b4e1057fbda36ea8206b61ea0ecd34b053c4a9", "commitAfterChange": "4413b196a3c0667867869360085098c445fd3306", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["-\t//TODO fix for USE_CAIRO", "-\tprintWidget (gc, data.drawable, OS.gdk_drawable_get_depth (data.drawable), 0, 0);", "+\tint /*long*/ drawable = data.drawable;", "+\tif (drawable == 0) drawable = OS.GDK_ROOT_PARENT();", "+\tprintWidget (gc, drawable, OS.gdk_drawable_get_depth (drawable), 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0fff1e0860bf2898b8c778405c99dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "63d9d3d8b64a77a759270484a95a14d0e7a1bda9", "commitAfterChange": "014ccfab9299e9121a0900d3e425e363ac424186", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+\tif (string.length () != 0) info.fsStyle |= OS.BTNS_SHOWTEXT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b8723e9d2c91289b0f9e242bbb307b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "5178249fdd1fca0f70d91159c2c3d6a155fa3d86", "commitAfterChange": "452714f24f515b00ab76d9bacdce42e894494e93", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void setBackground (float [] color)", "signatureAfterChange": "  void updateBackground ()", "diff": ["-void setBackground (float /*double*/ [] color) {", "+void updateBackground () {", "-\t", "-\tif (color != null) {", "+\tif (backgroundImage != null) {", "+\t\tnsColor = NSColor.colorWithPatternImage(backgroundImage.handle);", "+\t} else if (background != null) {", "+\t\tfloat /*double*/ [] color = background.handle;", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7143f4e5754835b535b92552fc86cd7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridLayout.java", "commitBeforeChange": "d68f2e34d91d2ae1a99b0c89e4caa148a068c2e9", "commitAfterChange": "ef6bac7bddd91ebd2f8fa756a2aae2c03abe06a0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  Point computeSize (Control control, boolean flushCache)", "signatureAfterChange": "  Point computeSize (Control control, boolean flushCache)", "diff": ["+\tif (data.flushCache) {", "+\t\tdata.cacheWidth = data.cacheHeight = -1;", "+\t\tdata.flushCache = false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "085fb04fb5e411a946373ac92be2b7f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Shell.java", "commitBeforeChange": "02e0e6beb06cc1ca0567d654a0c3ef8a4906d5fa", "commitAfterChange": "8daadc4eaf4e0b94d8872a57717033bc0fed74f2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test_getImeInputMode()", "signatureAfterChange": "  public void test_getImeInputMode()", "diff": ["-\twarnUnimpl(\"Test test_getImeInputMode not written\");", "+\tint mode = shell.getImeInputMode();", "+\tassertTrue(\":a:\", mode >= 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f923bc37edd9eddebbf410cf08764537", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "1b660f45c369b6eb63176ac5b87d6ee6402ab52b", "commitAfterChange": "f135b4f0f641a74742450e517c8eea6ca96ed4e2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void setFont (NSFont font)", "signatureAfterChange": "  void setFont (NSFont font)", "diff": ["+\tfor (int i = 0; i < itemCount; i++) {", "+\t\titems[i].updateText();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12853856b13e9d7f2b8d853c4bd68cdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "53ff3be6e0c7a7d9af7f267f10aff73621c8a55b", "commitAfterChange": "d0c3def3c272326b223c16d9ee781437fa47dfea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif ((style & SWT.WRAP) != 0) OS.gtk_label_set_line_wrap (labelHandle, true);", "+\tif ((style & SWT.WRAP) != 0) {", "+\t\tOS.gtk_label_set_line_wrap (labelHandle, true);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 10, 0)) {", "+\t\t\tOS.gtk_label_set_line_wrap_mode (labelHandle, OS.PANGO_WRAP_WORD_CHAR );", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db92f911de0bd13b08855de7bb4c0d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public Color getBackground()", "signatureAfterChange": " public Color getBackground()", "diff": ["+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (transparentPixel == -1) return null;", "+\t//NOT DONE", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b7f76c7385802b40dfc482d6009adc0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "b0ade0f9ec30522b297d5819c8039be4548f0efc", "commitAfterChange": "23892e15abc9a9a9ac9f36f740b91f0c53cf0b16", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\tif (!(0 <= index && index <= OS.gtk_tree_model_iter_n_children (modelHandle, 0))) {", "+\tint count = OS.gtk_tree_model_iter_n_children (modelHandle, 0);", "+\tif (!(0 <= index && index <= count)) {", "-\tOS.gtk_list_store_insert (modelHandle, iter, index);", "+\tif (index == count) {", "+\t\tOS.gtk_list_store_append (modelHandle, iter);", "+\t} else {", "+\t\tOS.gtk_list_store_insert (modelHandle, iter, index);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0151499902a4f81fbddc51e04a0013c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "efd318643a3b297b99a66f21d209f34c698653fb", "commitAfterChange": "94e116a0169b755fe1ac935a747751ad372376d3", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["+\tif (data.gdipBrush != 0) {", "+\t\tdestroyGdipBrush(data.gdipBrush);", "+\t\tdata.gdipBrush = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d90e6bd223f1ccd241d75e3a1f37b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "beb3230a14d718993438b762d3e460dbe17629f9", "commitAfterChange": "ea9da011382c7ec93bcd569f034b6dd753cfdd96", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tOS.gtk_label_set_text_with_mnemonic (label, buffer);", "-\tbuffer = Converter.wcsToMbcs (null, accelString, true);", "-\tint /*long*/ ptr = OS.g_malloc (buffer.length);", "-\tOS.memmove (ptr, buffer, buffer.length);", "-\tint /*long*/ oldPtr = OS.GTK_ACCEL_LABEL_GET_ACCEL_STRING (label);", "-\tOS.GTK_ACCEL_LABEL_SET_ACCEL_STRING (label, ptr);", "-\tif (oldPtr != 0) OS.g_free (oldPtr);", "+\tif (label != 0 && OS.GTK_IS_LABEL(label)) {", "+\t\tOS.gtk_label_set_text_with_mnemonic (label, buffer);", "+\t\tbuffer = Converter.wcsToMbcs (null, accelString, true);", "+\t\tint /*long*/ ptr = OS.g_malloc (buffer.length);", "+\t\tOS.memmove (ptr, buffer, buffer.length);", "+\t\tif (OS.GTK_IS_ACCEL_LABEL(label)) {", "+\t\t\tint /*long*/ oldPtr = OS.GTK_ACCEL_LABEL_GET_ACCEL_STRING (label);", "+\t\t\tOS.GTK_ACCEL_LABEL_SET_ACCEL_STRING (label, ptr);", "+\t\t\tif (oldPtr != 0) OS.g_free (oldPtr);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "666e3cc9cce2ec76f11058a53c3333a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "31287878a38fbf1ef1d6fca60705004ce229cde9", "commitAfterChange": "067aa419bb1b702edf718718e20e0fa68839ebdd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void setResizable (boolean resizable)", "signatureAfterChange": " public void setResizable (boolean resizable)", "diff": ["-\tthis.resizable = resizable;", "+\tnsColumn.setResizingMask (resizable ? OS.NSTableColumnUserResizingMask : OS.NSTableColumnNoResizing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70cd2da856158d2992ec770b483dfb3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "3d90142864930ae54e82dba3ef22ce002fde080d", "commitAfterChange": "08e994f4aa33da1169b40b748980fb9dba0e689c", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["+\texpandRect.x = expandRect.y = expandRect.width = expandRect.height = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df4f6eca3947148b874898ace340975", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "db3d81f202062db2f281c5f20f8cbd71fe995d01", "commitAfterChange": "49004903cea627f8e18ec7beb495ed69bd7515bf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createItem (TreeColumn column, int index)", "signatureAfterChange": "  void createItem (TreeColumn column, int index)", "diff": ["+\t\tNSOutlineView outlineView = (NSOutlineView)view;", "-\t\t((NSOutlineView) view).addTableColumn (nsColumn);", "+\t\toutlineView.addTableColumn (nsColumn);", "-\t\t((NSOutlineView) view).moveColumn (columnCount + checkColumn, index + checkColumn);", "+\t\toutlineView.moveColumn (columnCount + checkColumn, index + checkColumn);", "+\t\tif (index == 0) {", "+\t\t\toutlineView.setOutlineTableColumn (nsColumn);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ce0f8f06cf739539dbbf4f5948ff1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/emulated/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "1391d7680e6a688443825da4b0bcc49cfb7d997a", "commitAfterChange": "ab598f55b981c2f09ac320b14c358a502b06159c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Shell new_Shell (Display display, final Canvas parent)", "signatureAfterChange": "  public static Shell new_Shell (final Display display, final Canvas parent)", "diff": ["-public static Shell new_Shell (Display display, final Canvas parent) {", "+public static Shell new_Shell (final Display display, final Canvas parent) {", "+\tif (display == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (parent == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a843ff622ba09dfee608a6a398ff9a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "04d9b26987c0e3431c86eb2a80f75ea7f4f7af77", "commitAfterChange": "ac716cc2761c06ce895795d52c93cc9326d54fa3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void computeRuns (GC gc)", "signatureAfterChange": " void computeRuns (GC gc)", "diff": ["-\t\t\truns[line] = reorder(runs[line], i == allRuns.length - 1);", "+\t\t\tint lastOffset = lastRun.start + lastRun.length;", "+\t\t\truns[line] = reorder(runs[line], i == allRuns.length - 1);", "+\t\t\tlastRun = runs[line][lineRunCount - 1];", "-\t\t\tlineOffset[line] = lastRun.start + lastRun.length;", "+\t\t\tlineOffset[line] = lastOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d01f278c1166055b79a464cc01289ce0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "842605f742f8c29f08cbbd2532df7d2c1a130b3a", "commitAfterChange": "b574e679280213216a339e4baab5c56f49ed03b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["-\t\t\tXImage srcXImage = new XImage(width, height, OS.GetPixDepth(srcImage.pixmap));", "+\t\t\tint dd= OS.GetPixDepth(srcImage.pixmap);", "+\t\t\tif (dd < 0)", "+\t\t\t\tdd= 1;", "+\t\t\tXImage srcXImage = new XImage(width, height, dd);", "-\t\t\tint destPixmap = OS.NewPixMap((short)width, (short)height, (short)srcXImage.depth, (short)4, null, null, null);\t\t\t", "+\t\t\tint destPixmap = createPixMap((short)width, (short)height, (short)srcXImage.depth, null, null, null, null);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7e9bbb0d1166a7fea54d72f8bfecd8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r void setBounds (int x, int y, int width, int height)", "signatureAfterChange": "\r void setBounds (int x, int y, int width, int height)", "diff": ["-\tcomposite.setBounds(x, y, width, height);\r", "+\titemBounds.x = x;\r", "+\titemBounds.y = y;\r", "+\titemBounds.width = width;\r", "+\titemBounds.height = height;\r", "+\t\tint controlHeight = Math.min(height, control.getSize().y);\r", "-\t\t\tcontrol.getSize().y);\r", "+\t\t\tcontrolHeight);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6007a628f3f25708147f771733630457", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["+\tdata.stringWidth = data.stringHeight = data.textWidth = data.textHeight = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f70ee1e27bd4797de50c54cc6f590ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "fc1e32326bc5f902f63c6faf6a297be9ea7b2980", "commitAfterChange": "4b6f3d6ef93f821147ed56467d58afcd45e822e5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public ToolBar (Composite parent, int style)", "signatureAfterChange": " public ToolBar (Composite parent, int style)", "diff": ["-\tOS.gtk_toolbar_set_orientation (handle, orientation);", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 16, 0)) {", "+\t\tOS.gtk_toolbar_set_orientation (handle, orientation);", "+\t} else {", "+\t\tOS.gtk_orientable_set_orientation(handle, orientation);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485f57596d5a1576099294240870cf6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "9afda20699190021e7e234950afba59155b308c1", "commitAfterChange": "9be46c020973ca73255ebc70244b4631f8e839e2", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "\r private void onTraverse (Event event)", "signatureAfterChange": "\r private void onTraverse (Event event)", "diff": ["+\t\t\tif (event.doit) event.detail = SWT.TRAVERSE_NONE;\r", "+\t\t\tif (event.doit) event.detail = SWT.TRAVERSE_NONE;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09e59ade7923ff4ba0091f427690f4f2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "1f20a1d264bba4b262d3deffa1fafad6f8f70360", "commitAfterChange": "e1128c0d5e9e7b8b4e65a3a4aaf19424d2b37dc9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["+\tif (display == null) SWT.error(SWT.ERROR_WIDGET_DISPOSED);", "+\tif (display.isDisposed()) SWT.error(SWT.ERROR_DEVICE_DISPOSED);", "-\tif (display.isDisposed() ) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad60256c7e3701889afa4980f2bf2cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e5436f6610dc7d7987e43a9f0d9881f63ed9c5b1", "commitAfterChange": "37d9f28df33a42ac75f696b89b1f9102facdbb67", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " public void setItemCount (int count)", "signatureAfterChange": " public void setItemCount (int count)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "+\tcount = Math.max (0, count);", "+\tint itemCount = getItemCount ();", "+\tif (count == itemCount) return;", "-\tremoveAll();", "-\tint itemCount = Math.max(0, count);", "-\tfor (int i=0; i<itemCount; i++) {", "-\t\tnew TableItem (this, SWT.NONE, i);", "+\tremove (count, itemCount - 1);", "+\tfor (int i = itemCount; i<count; i++) {", "+\t\tnew TableItem (this, SWT.NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce0abbf88afa7bc904e9c4506d3de4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["+ */", "+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "-\t\tif (buffer[0] == 0) { \r", "+\t\tif (buffer[0] == OS.XmFONT_IS_FONT) { \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ff76b0db0a59bc2b2a58fdd3920eeaf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "c121c2748a4de49a1fc5fc5f0f00dd407433664d", "commitAfterChange": "9a1083faceb78eeb5276f04ce023278b2eeef876", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  static String toC(String str)", "signatureAfterChange": "  static String toC(String str)", "diff": ["-\tStringBuffer buf = new StringBuffer();", "-\tfor (int i = 0; i < str.length(); i++) {", "+\tint length = str.length();", "+\tStringBuffer buf = new StringBuffer(length * 2);", "+\tfor (int i = 0; i < length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd74bf88b97c5bee36879742ac573418", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "04268c35e0e407f0368a6d8854929d93953e231c", "commitAfterChange": "976df8e2641a9161815a2fd50d8ff407385fa908", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t\t\t\t\t\t* desired charset explicitely in this case.  The fix is to", "+\t\t\t\t\t\t\t\t\t* desired charset explicitly in this case.  The fix is to", "+", "+\tif (!Initialized) {", "+\t\tif (!OS.IsWinCE) {", "+\t\t\tOS.CoInternetSetFeatureEnabled(OS.FEATURE_DISABLE_NAVIGATION_SOUNDS, OS.SET_FEATURE_ON_PROCESS, true);", "+\t\t}", "+\t\tInitialized = true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ee3fb26ffeb17d0e27ac07173b8e89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/events/MouseEvent.java", "commitBeforeChange": "276fef9746789814e21bd8e3a8e36c8ecc1732db", "commitAfterChange": "88318078b5ca53da5f23d800b3a84760481b2a7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\t\t+ \" stateMask=\" + stateMask", "+\t\t+ \" stateMask=0x\" + Integer.toHexString(stateMask)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e836a012512728efc87319664be433cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "1c620522c51a270f40c2d23df3c326f48275d8bd", "commitAfterChange": "58c80ff0565eaf7cdcac1e8ac1379b16f9b58992", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public FontData getFontData ()", "signatureAfterChange": " public FontData getFontData ()", "diff": ["-\treturn fontData;", "+\tif (fontData != null && fontData.length > 0) {", "+\t\treturn fontData [0];", "+\t}", "+\treturn null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2cf7e5569dbb5488d45deb43e507a8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "a3fa51046bf7e95f74fcee933df95431cc97dea4", "commitAfterChange": "a3916015a16403e8507d19ff7f1200e0deee7e4f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public MenuItem [] getItems ()", "signatureAfterChange": "\r public MenuItem [] getItems ()", "diff": ["-\tint list = OS.gtk_container_children (handle);\r", "-\tint count = list != 0 ? OS.g_list_length (list) : 0;\r", "+\tint list = OS.gtk_container_get_children (handle);\r", "+\tif (list == 0) return new MenuItem [0];\r", "+\tint count = OS.g_list_length (list);\r", "+\tOS.g_list_free (list);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df28f9970cfcadca137e30b8cac2fa54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/EventConsole.java", "commitBeforeChange": "89cc7f5c75f2df3b920fe418784e6f350123aff7", "commitAfterChange": "ec92ccfaf21b7e25c16dc7248e0dedde2383e7e2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic EventConsole (Shell parent)", "signatureAfterChange": "  \tpublic EventConsole (Shell parent)", "diff": ["+", "+\t\t", "+\t\tfor (int i = 0; i < DEFAULT_FILTER.length; i++) {", "+\t\t\teventsFilter [DEFAULT_FILTER [i]] = true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9fb2bace97bcde00ae78dfaa3a988a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic int internal_kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \tpublic int internal_kEventAccessibleGetAllAttributeNames (int nextHandler, int theEvent, int userData)", "diff": ["+\t\tint code = userData; // userData flags whether nextHandler has already been called", "-\t\t\t/* If nextHandler is 0, then it was already called. */", "-\t\t\tif (nextHandler != 0) OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tif (code == OS.eventNotHandledErr) OS.CallNextEventHandler (nextHandler, theEvent);", "-\t\t\treturn OS.noErr;", "+\t\t\tcode = OS.noErr;", "-\t\treturn OS.eventNotHandledErr;", "+\t\treturn code;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fad6923fb7adfb33d69d52125e5dcf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "c355b953ab2c87a2c5f23c742ae883e47425eef0", "commitAfterChange": "b217f58400fd9273ad1965e53dac621daff260ee", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tvoid log(Event event)", "signatureAfterChange": " \tvoid log(Event event)", "diff": ["-\t\tString toString = EVENT_NAMES[event.type - 1] + \": \";", "+\t\tString toString = EVENT_NAMES[event.type] + \" [\"+event.type+\"]: \";", "+\t\t\tcase SWT.MouseWheel: "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432df26b9ed31b63a14b207d285fd79b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "914f615709b3c356e3cdfe592c2e2d3e09e8f353", "commitAfterChange": "97e3a20937c795c1d41dbbe1d04a9e2d88e5ba74", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " boolean gio_execute(String fileName)", "signatureAfterChange": " boolean gio_execute(String fileName)", "diff": ["-\t\tif (OS.g_app_info_supports_uris (application)) {", "-\t\t\tfile = OS.g_file_new_for_uri (fileNameBuffer);", "-\t\t} else {", "-\t\t\tfile = OS.g_file_new_for_path (fileNameBuffer);", "+\t\tif (fileName.length() > 0) {", "+\t\t\tif (OS.g_app_info_supports_uris (application)) {", "+\t\t\t\tfile = OS.g_file_new_for_uri (fileNameBuffer);", "+\t\t\t} else {", "+\t\t\t\tfile = OS.g_file_new_for_path (fileNameBuffer);", "+\t\t\t}", "-\t\tif (file != 0) {", "-\t\t\tint /*long*/ list = OS.g_list_append (0, file);", "-\t\t\tresult = OS.g_app_info_launch (application, list, 0, 0);", "+\t\tint /*long*/ list = 0;", "+\t\tif (file != 0) list = OS.g_list_append (0, file);", "+\t\tresult = OS.g_app_info_launch (application, list, 0, 0);", "+\t\tif (list != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022d40c9a8ab858f62a4e5b3c46cfb70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "97869b7591415775385f4d2ba20446ef53432375", "commitAfterChange": "4104b9f9d66e403b97927169bc9e5cb2ff154d23", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   LRESULT wmColorChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmColorChild (int wParam, int lParam)", "diff": ["-", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tif ((bits & OS.SS_OWNERDRAW) == OS.SS_OWNERDRAW) {", "-\t\treturn super.wmColorChild (wParam, lParam);", "-\t}", "+\tLRESULT result = super.wmColorChild (wParam, lParam);", "-\t\tif (findImageControl () != null) {", "-\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "-\t\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif ((bits & OS.SS_OWNERDRAW) != OS.SS_OWNERDRAW) {", "+\t\t\tif (findImageControl () != null) {", "+\t\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "+\t\t\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\t\t}", "-\treturn super.wmColorChild (wParam, lParam);", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a55b710b6adab4b666728942e988ccc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8e5c97c9e89c4e78164a728ed489008ab911e93b", "commitAfterChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r private void scroll_scrollRight()", "signatureAfterChange": "\r private void scroll_scrollRight()", "diff": ["-\tif (scroll_rightVisible()) {\r", "-\t\ttopTabIndex++;\r", "-\t\tsetItemLocation();\r", "-\t\tredrawTabArea(-1);\r", "+\tint lastIndex = getLastItem();\r", "+\ttopTabIndex = lastIndex + 1;\r", "+\tsetItemLocation();\r", "+\tcorrectLastItem();\r", "+\tredrawTabArea(-1);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf5ea974acdc6871501c211dbd82dfb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "db40d728e64978e7b92089b0b4ac8ed50975594e", "commitAfterChange": "91d12e7fb40e96dc6324f0e393e3f0f025792ace", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public void setForeground (Color color)", "signatureAfterChange": " public void setForeground (Color color)", "diff": ["-\tif (data.foregroundPattern == null && OS.GetTextColor(handle) == color.handle) return;", "+\tif (data.foregroundPattern != null) {", "+\t\tif (data.gdipPen != 0) {", "+\t\t\tGdip.Pen_delete(data.gdipPen);", "+\t\t\tdata.gdipPen = 0;", "+\t\t}", "+\t\tdata.foregroundPattern = null;\t\t", "+\t}", "+\tif (OS.GetTextColor(handle) == color.handle) return;", "-\tdata.foregroundPattern = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d887288ee672351c1876888709b3311", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "3bf1326936d5f2b73cd585a8520b75565d79fe19", "commitAfterChange": "d5837928a1ce276d9300e2f3a32a2bf5918976d7", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r LRESULT WM_ERASEBKGND (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_ERASEBKGND (int wParam, int lParam)", "diff": ["+\tLRESULT result = super.WM_ERASEBKGND (wParam, lParam);\r", "+\tif (result != null) return result;\r", "-\t\treturn super.WM_ERASEBKGND (wParam, lParam);\r", "+\t\tif ((style & SWT.NO_BACKGROUND) != 0) return LRESULT.ONE;\r", "-\tdrawBackground (wParam);\r", "-\treturn LRESULT.ONE;\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5523812fbe1eaa18792ad1200eca93bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "4faa718e848bca5a7335031d1c00baad23787159", "commitAfterChange": "a461fda0096599b0ea1295eb5f7364f69acc2719", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteData()", "signatureAfterChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteData()", "diff": ["+\tint count = 500000;", "+\t", "+\t\tif (validDepths[i] % 8 == 0) count /= 2;", "-\t\tfor (int j = 0; j < COUNT; j++) {", "+\t\tfor (int j = 0; j < count; j++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6638b81ee16c21896c3b421b2df1eb6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "272967205f3824ec29456112026262c64ae69dfa", "commitAfterChange": "fc62fa389f9358a82d98c59fbeba910f7ca8c593", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int callWindowProc (int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-int callWindowProc (int msg, int wParam, int lParam) {", "-\treturn OS.DefMDIChildProc (handle, msg, wParam, lParam);", "+int callWindowProc (int hwnd, int msg, int wParam, int lParam) {", "+\tif (handle == 0) return 0;", "+\treturn OS.DefMDIChildProc (hwnd, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f56376e1baf55a65a4a201bf80a86a4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "06e16933297aec89bd7c02955293a8177727fd83", "commitAfterChange": "188f7addfabc3b3a045edf39dbb0a3f527bcd33a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\tif (fileName.length() > 0) {", "+\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "+\t\t\t\t} else { ", "+\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd770c7654cbafbb1442b17199ed26fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6bc87f293439c8125ddcc7de326fed808d8cd1a5", "commitAfterChange": "f6e507be34788e0f63c8d6154c94b06156e64f36", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  int imageIndex (Image image)", "signatureAfterChange": "  int imageIndex (Image image, int column)", "diff": ["-int imageIndex (Image image) {", "+int imageIndex (Image image, int column) {", "+\tif (column == 0) firstColumnImage = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74fd36c81893d825b78086ebfd2beef2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "a3fa51046bf7e95f74fcee933df95431cc97dea4", "commitAfterChange": "a3916015a16403e8507d19ff7f1200e0deee7e4f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public ToolItem [] getItems ()", "signatureAfterChange": " public ToolItem [] getItems ()", "diff": ["-\tint list = OS.gtk_container_children (handle);", "-\tint count = list != 0 ? OS.g_list_length (list) : 0;", "+\tint list = OS.gtk_container_get_children (handle);", "+\tif (list == 0) return new ToolItem [0];", "+\tint count = OS.g_list_length (list);", "+\tOS.g_list_free (list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bace943a2de97040a36240c585ab4d47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "5490853b5c3594d14688ab1c5595c53977b8ead0", "commitAfterChange": "966531c8bcdaaa6d602257d97118cca4cedf54d7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void drawBackground (GC gc, int x, int y, int width, int height, int offsetX, int offsetY)", "signatureAfterChange": " public void drawBackground (GC gc, int x, int y, int width, int height, int offsetX, int offsetY)", "diff": ["-\t\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\t\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual (OS.gdk_visual_get_system());", "-\t\t\t\tint /*long*/ drawable = control.backgroundImage.pixmap;", "-\t\t\t\tint /*long*/ xDrawable = OS.GDK_PIXMAP_XID (drawable);\t\t\t\t", "-\t\t\t\tint [] w = new int [1], h = new int [1];", "-\t\t\t\tOS.gdk_drawable_get_size (drawable, w, h);", "-\t\t\t\tint /*long*/ surface = Cairo.cairo_xlib_surface_create (xDisplay, xDrawable, xVisual, w [0], h [0]);", "-\t\t\t\tif (surface == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\tint /*long*/ surface = control.backgroundImage.surface;", "+\t\t\t\tif (surface == 0) {", "+\t\t\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\t\t\t\tint /*long*/ xVisual = OS.gdk_x11_visual_get_xvisual (OS.gdk_visual_get_system());", "+\t\t\t\t\tint /*long*/ drawable = control.backgroundImage.pixmap;", "+\t\t\t\t\tint /*long*/ xDrawable = OS.GDK_PIXMAP_XID (drawable);\t\t\t\t", "+\t\t\t\t\tint [] w = new int [1], h = new int [1];", "+\t\t\t\t\tOS.gdk_drawable_get_size (drawable, w, h);", "+\t\t\t\t\tsurface = Cairo.cairo_xlib_surface_create (xDisplay, xDrawable, xVisual, w [0], h [0]);", "+\t\t\t\t\tif (surface == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\t\t\t} else {", "+\t\t\t\t\tCairo.cairo_surface_reference(surface);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2ab5f305a6195e9f4e7d40046ecf19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "commitAfterChange": "85b8baf1efb6a545680cc9553a80da0d7364e4a0", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 74, "signatureBeforeChange": " void setClipping(int clipRgn)", "signatureAfterChange": " void setClipping(int clipRgn)", "diff": ["+}", "+\t}", "+\tint /*long*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tsetCairoClip(cairo, clipRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "060edc095e6354f74100c14ee6ca1c2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "79227b5a49c00b963ad602edd42ff8b19e607168", "commitAfterChange": "2e59efd73e90759ed48636b0f81f17f1c8202cfa", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r int processKeyDown (int callData)", "signatureAfterChange": "\r int processKeyDown (int callData)", "diff": ["-\tsendKeyEvent (SWT.KeyDown, xEvent);\r", "+\tif (xEvent.keycode != 0) {\r", "+\t\tsendKeyEvent (SWT.KeyDown, xEvent);\r", "+\t} else {\r", "+\t\tsendIMEKeyEvent (SWT.KeyDown, xEvent);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e09c7337a027aa56a2e337b3525dacb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "42583da9be8f80cfe22120f82fb19cc298e6f63f", "commitAfterChange": "63bd19cba73e17c57e5b3dc4d39b3ccc181e50ea", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void setForeground(Color color)", "signatureAfterChange": " public void setForeground(Color color)", "diff": ["+\tif (data.fg != null) data.fg.release();", "+\tdata.fg = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac5df20a4c2bc401c09dd7e2b742eb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "7aa05fbdeec6e000158c8d9891fcfab00374d951", "commitAfterChange": "15fa67ba44183c304b180a2b5a8d02f1ccb15a60", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public int getWidth ()", "signatureAfterChange": " public int getWidth ()", "diff": ["-\t} ", "-\treturn OS.gtk_tree_view_column_get_width (handle);", "+\t}", "+\tint width = OS.gtk_tree_view_column_get_width (handle);", "+\tif (width == 0) {", "+\t\twidth = OS.gtk_tree_view_column_get_fixed_width (handle);", "+\t}", "+\treturn width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e2aa6915f4c393df5f9b7d0be76cef1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "147d1615f621339f30d0227193f0b040907c9480", "commitAfterChange": "4f94a8e41c5f58fd8cc31f50891f992413c14d7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["-protected void javaToNative (Object object, TransferData transferData){", "-\tif ((object == null) || !(object instanceof byte[]) || !(isSupportedType(transferData))) {", "-\t\ttransferData.result = 0;", "-\t\treturn;", "-\t}", "-\tbyte[] buffer = (byte[])object;\t", "-\ttransferData.pValue = OS.XtMalloc(buffer.length);", "-\tOS.memmove(transferData.pValue, buffer, buffer.length);", "+protected void javaToNative (Object object, TransferData transferData) {", "+\ttransferData.result = 0;", "+\tif ((object == null) || !(object instanceof byte[]) || !(isSupportedType(transferData))) return;", "+\tbyte[] buffer = (byte[])object;", "+\tif (buffer.length == 0) return;", "+\tint pValue = OS.XtMalloc(buffer.length);", "+\tif (pValue == 0) return;", "+\tOS.memmove(pValue, buffer, buffer.length);", "+\ttransferData.pValue = pValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca1e5a0aff2e8afaccffadf3a6edcf7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "592fd31261f874251936ca94343b0a4b4e33ed56", "commitAfterChange": "85b8baf1efb6a545680cc9553a80da0d7364e4a0", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void setFont(Font font)", "signatureAfterChange": " public void setFont(Font font)", "diff": ["+\tint /*long*/ cairo = data.cairo;", "+\tif (cairo != 0) {", "+\t\tsetCairoFont(cairo, fontHandle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be34dde03a739e34ac4cba4772e951a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "6fec6ced4910cccf9d4e60208d0302cbddc495a9", "commitAfterChange": "802e089feef0ca11ad1a5094d14ea1ddf29d3800", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " public Rectangle getBounds()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-\tGdkRectangle rect = new GdkRectangle();\r", "-\tOS.gdk_region_get_clipbox(handle, rect);\r", "-\treturn new Rectangle(rect.x, rect.y, rect.width, rect.height);\r", "+\tif (isDisposed()) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);\r", "+\tGdkRectangle gdkRect = new GdkRectangle();\r", "+\tOS.gdk_region_get_clipbox(handle, gdkRect);\r", "+\treturn new Rectangle(gdkRect.x, gdkRect.y, gdkRect.width, gdkRect.height);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e3c8d893eb2ec27d447e81d2d6774ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "fcd25e27d75bea36982c752e7bd546699c8a9676", "commitAfterChange": "44d04241b701a3760bfc388747d6cea8273f6b21", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public OleClientSite(Composite parent, int style, File file)", "signatureAfterChange": "\r public OleClientSite(Composite parent, int style, File file)", "diff": ["-\t\t\tOLE.error(OLE.ERROR_CANNOT_CREATE_OBJECT, result);\r", "-\t\t\r", "+\t\t\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);\r", "+\t\t// associated CLSID may not be installed on this machine\r", "+\t\tif (getProgramID() == null)\r", "+\t\t\tOLE.error(OLE.ERROR_INVALID_CLASSID, result);\r", "+\t\t\t\r", "+\t\tdispose();\r", "-\t\tframe.Release();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7aec8a0ad71d209c99af5602b997cf1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "8231a5b4f97426483ca0400e5f51438dec7281cd", "commitAfterChange": "c511ac496ae5d2a9186254e09b13d0c0560337e9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " void doPageDown (int stateMask)", "signatureAfterChange": " void doPageDown (int stateMask)", "diff": ["+\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\t\tif (newFocusIndex == focusItem.availableIndex) return;", "+\t\tif (selectIndex == focusItem.availableIndex && focusItem.isSelected ()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcac8172ebd19a0f8fc9f3355316f5bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "b8a944cc9407d23f9c29193277e252cb95d44e71", "commitAfterChange": "901c0a3537fb34da4f51314fe0a99ffb6ddf7dbf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r void setColorDepth(int bits)", "signatureAfterChange": "\r void setColorDepth(int bits)", "diff": ["-}\r", "-void setColorDepth(int bits) {\r", "-\tcolorDepth = bits;\r", "-\tif (bits == 4) {\r", "-\t\tcolorSwatchExtent = COLOR_SWATCH_EXTENTS[DEPTH_4];\r", "-\t\tcolorGrid = new Color[8][2];\r", "-\t\tinitialize4BitColors();\r", "-\t}\r", "-\telse {\r", "-\t\tcolorSwatchExtent = COLOR_SWATCH_EXTENTS[DEPTH_8];\r", "-\t\tcolorGrid = new Color[32][8];\r", "-\t\tinitialize8BitColors();\t\t\t\t\r", "-\t}\r", "-}\r", "+}\r", "+void setColorDepth(int bits) {\r", "+\tcolorDepth = bits;\r", "+\tif (bits == 4) {\r", "+\t\tcolorSwatchExtent = COLORSWATCH_SIZE_DEPTH4;\r", "+\t\tcolorGrid = new Color[8][2];\r", "+\t\tinitialize4BitColors();\r", "+\t\treturn;\r", "+\t}\r", "+\tif (bits == 8) {\r", "+\t\tcolorSwatchExtent = COLORSWATCH_SIZE_DEPTH8;\r", "+\t\tcolorGrid = new Color[25][5];\r", "+\t\tinitialize8BitColors();\r", "+\t\treturn;\t\t\t\t\r", "+\t}\r", "+\t// default case: 16, 24 or 32 bits\r", "+\tcolorSwatchExtent = COLORSWATCH_SIZE_DEPTH16;\r", "+\tcolorGrid = new Color[32][8];\r", "+\tinitialize16BitColors();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "873ad4218501a00d5a06af8227030b68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6d9ffc9776ed53230601b1f118f94e4523e13f00", "commitAfterChange": "783a786a00290d26a381f650c88b8e9bbb56724c", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r \r LRESULT WM_ACTIVATE (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_ACTIVATE (int wParam, int lParam)", "diff": ["-\treturn super.WM_ACTIVATE (wParam, lParam);\r", "+\t\r", "+\tLRESULT result = super.WM_ACTIVATE (wParam, lParam);\r", "+\tif (parent != null) return LRESULT.ZERO;\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfc0192d302e042386d0ec6e5a8a0ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a3cf6edf2759347dfed8be8789cf18f42c61b40d", "commitAfterChange": "9421e6abdbcf8178f8958a2faae4b7d125e841b4", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "\r public void setMenu (Menu menu)", "signatureAfterChange": "\r public void setMenu (Menu menu)", "diff": ["+\t\tif (menu.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393679851973d1d9e0b7379147771a29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d0069d7ed7376b10efa426e883f2b4851a6c7c22", "commitAfterChange": "a886f16168f44eb14dce55165728859cc8ee3baa", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 183, "signatureBeforeChange": "  long windowProc (long handle, long arg0, long user_data)", "signatureAfterChange": "  long windowProc (long handle, long arg0, long user_data)", "diff": ["-\t\tcase EXPOSE_EVENT: return gtk_expose_event (handle, arg0);", "+\t\tcase EXPOSE_EVENT: {", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t\treturn gtk_draw (handle, arg0);", "+\t\t\t} else {", "+\t\t\t\treturn gtk_expose_event (handle, arg0);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a57b47e1d76806e393c698ef8d13f38", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void selectionChanged ()", "signatureAfterChange": " \tpublic void selectionChanged ()", "diff": ["-\t\tOS.NSAccessibilityPostNotification(control.view.id, OS.NSAccessibilitySelectedChildrenChangedNotification.id);", "+\t\tif (currentRole == ACC.ROLE_TABLE) {", "+\t\t\tOS.NSAccessibilityPostNotification(control.view.id, OS.NSAccessibilitySelectedRowsChangedNotification.id);", "+\t\t} else {", "+\t\t\tOS.NSAccessibilityPostNotification(control.view.id, OS.NSAccessibilitySelectedChildrenChangedNotification.id);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1e2b2b21e698619e8f9c54a08b76cb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "a65e125940a26cdd7e44a519db755a1c1628c98c", "commitAfterChange": "fad7bbb8c353cf3dc1f2c1010eb7f03e2f8dd81a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void select (int [] indices)", "signatureAfterChange": " public void select (int [] indices)", "diff": ["-\tif ((style & SWT.SINGLE) != 0 && indices.length > 1) return;", "+\tint length = indices.length;", "+\tif (length == 0) return;", "+\tif ((style & SWT.SINGLE) != 0 && length > 1) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96090b2f21233705e5a6582fe38c2f15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5689d8e849bba9fa425a7586a442195ae623d46c", "commitAfterChange": "47f1fc633e8f61df985d0a9b94a145703550a39b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void addColumn (TreeColumn column, int index)", "signatureAfterChange": " void addColumn (TreeColumn column, int index)", "diff": ["+\t", "+\t/* allow all items to update their internal structures accordingly */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems [i].columnAdded (column);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cb0e541f894599bfab374fc098e61c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f6f8b39e420fb7bf6e250ec98861255c3d1dcccc", "commitAfterChange": "5d702d1f1c4daf5aadda87ebe154e07af60b51ac", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["+\tif (OS.GTK_VERSION >= OS.VERSION (3, 0, 0)) {", "+\t\tOS.gtk_widget_draw(topHandle, gc.handle);", "+\t\treturn true;", "+\t}"]}], "num": 32088}