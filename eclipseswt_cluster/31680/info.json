{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c408b0796f86d99c5db075a81e2f757", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0630f7b26ab4fe5295d1dfcd195314a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "31688c68d3a4f46048f3504cdb5812f8b9066e99", "commitAfterChange": "bf8ec00c7e0997467c4d951702784d000849bf7f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tchar [] text = new char [string.length ()];", "-\tstring.getChars (0, text.length, text, 0);", "-\tint i=0, j=0, mnemonic=0;", "-\twhile (i < text.length) {", "-\t\tif ((text [j++] = text [i++]) == Mnemonic) {", "-\t\t\tif (i == text.length) {continue;}", "-\t\t\tif (text [i] == Mnemonic) {i++; continue;}", "-\t\t\tif (mnemonic == 0) mnemonic = text [i];", "-\t\t\tj--;", "-\t\t}", "-\t}", "-    /* AW", "-\twhile (j < text.length) text [j++] = 0;", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), text, true);", "-\tint xmString = OS.XmStringParseText (", "-\t\tbuffer,", "-\t\t0,", "-\t\tOS.XmFONTLIST_DEFAULT_TAG,", "-\t\tOS.XmCHARSET_TEXT,", "-\t\tnull,", "-\t\t0,", "-\t\t0);", "-\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-\tif (mnemonic == 0) mnemonic = OS.XK_VoidSymbol;", "-\tint [] argList = {", "-\t\tOS.XmNlabelType, OS.XmSTRING,", "-\t\tOS.XmNlabelString, xmString,", "-\t\tOS.XmNmnemonic, mnemonic,", "-\t};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tif (xmString != 0) OS.XmStringFree (xmString);", "-    */", "+\t", "-\t\tsHandle= OS.CFStringCreateWithCharacters(new String(text, 0, j));", "-\t\tOS.SetControlTitleWithCFString(handle, sHandle);", "+\t\tsHandle= OS.CFStringCreateWithCharacters(MacUtil.removeMnemonics(string));", "+\t\tif (OS.SetControlTitleWithCFString(handle, sHandle) != OS.kNoErr)", "+\t\t\terror (SWT.ERROR_CANNOT_SET_TEXT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e562bc7025ca41d69f45231a094b53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "9fc99bd2bc8db57e21ddb6c8347edd915b20a986", "commitAfterChange": "1e1ccbf61bda268533d4d88e38bb0e1f77b71b26", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tchar [] text = new char [string.length ()];", "-\tstring.getChars (0, text.length, text, 0);", "-\tint mnemonic = fixMnemonic (text);", "-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), text, true);", "-\tint xmString = OS.XmStringParseText (", "-\t\tbuffer,", "-\t\t0,", "-\t\tOS.XmFONTLIST_DEFAULT_TAG, ", "-\t\tOS.XmCHARSET_TEXT, ", "-\t\tnull,", "-\t\t0,", "-\t\t0);\t", "-\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-\tif (mnemonic == 0) mnemonic = OS.XK_VoidSymbol;", "-\tint [] argList = {", "-\t\tOS.XmNlabelType, OS.XmSTRING,", "-\t\tOS.XmNlabelString, xmString,", "-\t\tOS.XmNmnemonic, mnemonic,", "-\t};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tif (xmString != 0) OS.XmStringFree (xmString);", "+\t/* This code is intentionally commented*/", "+//\tif (text.length () == 0 && image != null) {", "+//\t\t_setImage (image);", "+//\t\treturn;", "+//\t}", "+\t_setText (string);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22390d721b4676f93901fe0e3e96d234", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "c777120398b711f5f85455fcd5e6f2f8b663ebf5", "commitAfterChange": "99a3df6c8ce874e01effe08dd456a028c1d8ee3d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\tif (wHint == SWT.DEFAULT) width = OS.XmStringWidth(fontList, xmString);", "+\t\t\tif (wHint == SWT.DEFAULT) width = OS.XmStringWidth (fontList, xmString);", "+\t\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "+\t\t\tif (wHint == SWT.DEFAULT) {", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), message, true);", "+\t\t\t\tint xmString = OS.XmStringGenerate (", "+\t\t\t\t\t\tbuffer,", "+\t\t\t\t\t\tOS.XmFONTLIST_DEFAULT_TAG,", "+\t\t\t\t\t\tOS.XmCHARSET_TEXT,", "+\t\t\t\t\t\tnull);", "+\t\t\t\tint fontList = font.handle;", "+\t\t\t\twidth = Math.max (width, OS.XmStringWidth (fontList, xmString));", "+\t\t\t\tOS.XmStringFree (xmString);", "+\t\t\t}", "+\t\t}", "-\t//This code is intentionally commented", "-//\tif ((style & SWT.SEARCH) != 0 && message.length () != 0) {", "-//\t\tGC gc = new GC (this);", "-//\t\tPoint size = gc.stringExtent (message);", "-//\t\twidth = Math.max (width, size.x);", "-//\t\tgc.dispose ();", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37850c51efe0c27b80196b9c3c4483e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "6eefe9ffbd7cd1b6a970838d74dc34733cd0f5bf", "commitAfterChange": "96ec325b6adebb0274d051fbc17d0791e4b077ff", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void setText (String string)", "signatureAfterChange": "\r public void setText (String string)", "diff": ["-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);\r", "+\tchar [] text = new char [string.length ()];\r", "+\tstring.getChars (0, text.length, text, 0);\r", "+\tint i=0, j=0, mnemonic=0;\r", "+\twhile (i < text.length) {\r", "+\t\tif ((text [j++] = text [i++]) == Mnemonic) {\r", "+\t\t\tif (i == text.length) {continue;}\r", "+\t\t\tif (text [i] == Mnemonic) {i++; continue;}\r", "+\t\t\tif (mnemonic == 0) mnemonic = text [i];\r", "+\t\t\tj--;\r", "+\t\t}\r", "+\t}\r", "+\twhile (j < text.length) text [j++] = 0;\r", "+\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), text, true);\r", "-\t\t0);\r", "-\tint [] argList = {OS.XmNlabelString, xmString};\r", "+\t\t0);\t\r", "+\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);\r", "+\tif (mnemonic == 0) mnemonic = OS.XK_VoidSymbol;\r", "+\tint [] argList = {\r", "+\t\tOS.XmNlabelType, OS.XmSTRING,\r", "+\t\tOS.XmNlabelString, xmString,\r", "+\t\tOS.XmNmnemonic, mnemonic,\r", "+\t};\r", "-\tOS.XmStringFree (xmString);\r", "+\tif (xmString != 0) OS.XmStringFree (xmString);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2532a67c0c9a46c2c9b0284d45b33d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3539392530d589ce910e4278acc811f43b907fc4", "commitAfterChange": "b4b61aff0cb1c1ac045f8af3c9d9b60914e3dc14", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": " void select (String [] items)", "signatureAfterChange": " void select (String [] items)", "diff": ["-    /* AW", "-\tint [] table = new int [items.length];", "-\tString codePage = getCodePage ();", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tString string = items [i];", "-\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);", "-\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\ttable [i] = xmString;", "-\t}", "-\tint ptr = OS.XtMalloc (items.length * 4);", "-\tOS.memmove (ptr, table, items.length * 4);", "-\tint [] argList = {OS.XmNselectedItems, ptr, OS.XmNselectedItemCount, table.length};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tfor (int i=0; i<table.length; i++) OS.XmStringFree (table [i]);", "-\tOS.XtFree (ptr);", "-\tOS.XmListUpdateSelectedList (handle);", "-    */", "-\tSystem.out.println(\"List.select: nyi\");", "+\tint[] ids= getIds(items);", "+\tOS.SetDataBrowserSelectedItems(handle, ids.length, ids, OS.kDataBrowserItemsAssign);"]}], "num": 31680}