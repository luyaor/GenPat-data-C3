{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a35a4f9338f29ab25dc66be9c6a430f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e34fa5340ed2f18cd2bd748c80cfb4b5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["-\t", "+", "-\t\treturn OS.noErr;", "+\t\treturn 0;", "-\tRect bounds= new Rect();", "-\tOS.GetControlBounds(handle, bounds);", "-\tint width= bounds.right - bounds.left;", "-\tint height= bounds.bottom - bounds.top;", "-\tOS.SetRect(bounds, (short)0, (short)0, (short)width, (short)height);", "+\tMacRect bounds= new MacRect();", "+\tOS.GetControlBounds(handle, bounds.getData());", "+\tbounds.setLocation(0, 0);", "+\t", "+\tint width= bounds.getWidth();", "+\tint height= bounds.getHeight();", "-\t\t\tint port= OS.GetWindowPort(OS.GetControlOwner(handle));", "-\t\t\tif (port == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t\treturn port;", "+\t\t\treturn OS.GetWindowPort(OS.GetControlOwner(handle));", "-\tMacControlEvent me= (MacControlEvent) callData;", "-\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle(), me.getGCContext());", "+\tMacControlEvent me= (MacControlEvent) callData;", "+\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "-", "+\t\t", "-\t\t\tOS.DrawThemeSeparator(bounds, OS.kThemeStateActive);", "+\t\t\tOS.DrawThemeSeparator(bounds.getData(), OS.kThemeStateActive);", "-\t\t\tThemeButtonDrawInfo newInfo= new ThemeButtonDrawInfo();", "-\t\t\tnewInfo.value= (short)(set ? OS.kThemeButtonOn : OS.kThemeButtonOff);", "+\t\t\tshort[] newInfo= new short[3];", "+\t\t\t\t\t", "+\t\t\tnewInfo[1]= set ? OS.kThemeButtonOn : OS.kThemeButtonOff;", "-\t\t\t\t\tnewInfo.state= (short)(OS.StillDown() ? OS.kThemeStatePressed : OS.kThemeStateActive);", "-\t\t\t\t} else {", "+\t\t\t\t\tif (OS.StillDown())", "+\t\t\t\t\t\tnewInfo[0]= OS.kThemeStatePressed;", "+\t\t\t\t\telse", "+\t\t\t\t\t\tnewInfo[0]= OS.kThemeStateActive;", "+\t\t\t\t} else", "-\t\t\t\t}", "-\t\t\t\tnewInfo.state= (short)((hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive);", "+\t\t\t\tnewInfo[0]= (hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive;", "-\t\t\t\tRect b= new Rect();", "-\t\t\t\tOS.SetRect(b, (short)1, (short)1, (short)(width-1), (short)(height-1));", "-\t\t\t\tOS.DrawThemeButton(b, (short)OS.kThemeSmallBevelButton, newInfo, null, 0, 0, 0);", "+\t\t\t\tMacRect b= new MacRect(1, 1, width-2, height-2);", "+\t\t\t\tOS.DrawThemeButton(b.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "+\t\t\tfPrevInfo= newInfo;", "-\treturn OS.noErr;", "+\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd26334e795805eed00845fd26e99029", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "a7462f6b30f403b541de53811b1a2d45dd86b987", "commitAfterChange": "37c3fc5edd360862e04e4236fb6d1206ffdadd53", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(handle, bounds.getData());", "-\tbounds.setLocation(0, 0);", "-\t", "-\tint width= bounds.getWidth();", "-\tint height= bounds.getHeight();", "+\tRect bounds= new Rect();", "+\tOS.GetControlBounds(handle, bounds);", "+\tint width= bounds.right - bounds.left;", "+\tint height= bounds.bottom - bounds.top;", "+\tOS.SetRect(bounds, (short)0, (short)0, (short)width, (short)height);", "-\t\t\tOS.DrawThemeSeparator(bounds.getData(), OS.kThemeStateActive);", "+\t\t\tOS.DrawThemeSeparator(bounds, OS.kThemeStateActive);", "-\t\t\tnewInfo[1]= set ? OS.kThemeButtonOn : OS.kThemeButtonOff;", "+\t\t\tnewInfo[1]= (short)(set ? OS.kThemeButtonOn : OS.kThemeButtonOff);", "-\t\t\t\t\t\tnewInfo[0]= OS.kThemeStatePressed;", "+\t\t\t\t\t\tnewInfo[0]= (short)OS.kThemeStatePressed;", "-\t\t\t\t\t\tnewInfo[0]= OS.kThemeStateActive;", "+\t\t\t\t\t\tnewInfo[0]= (short)OS.kThemeStateActive;", "-\t\t\t\tnewInfo[0]= (hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive;", "+\t\t\t\tnewInfo[0]= (short)((hasCursor && OS.StillDown()) ? OS.kThemeStatePressed : OS.kThemeStateActive);", "-\t\t\t\tMacRect b= new MacRect(1, 1, width-2, height-2);", "-\t\t\t\tOS.DrawThemeButton(b.getData(), OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);", "+\t\t\t\tRect b= new Rect();", "+\t\t\t\tOS.SetRect(b, (short)1, (short)1, (short)(width-1), (short)(height-1));", "+\t\t\t\tOS.DrawThemeButton(b, (short)OS.kThemeSmallBevelButton, newInfo, fPrevInfo, 0, 0, 0);"]}], "num": 40866}