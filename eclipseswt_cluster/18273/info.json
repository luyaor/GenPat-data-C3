{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fb859f42b2301ec8637b4a9cca7f39a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5392a018c59f993d3b9616148ae27d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "2a453289bd44f7a775eb792bac5c0306a39048d4", "commitAfterChange": "00044d960d22ae0ff107fa60b140159a76aa4f68", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " TextLayout getTextLayout(String line, int lineOffset, StyledTextEvent event)", "signatureAfterChange": " TextLayout getTextLayout(String line, int lineOffset)", "diff": ["-TextLayout getTextLayout(String line, int lineOffset, StyledTextEvent event) {", "-\tTextLayout layout = new TextLayout(device);", "+TextLayout getTextLayout(String line, int lineOffset) {", "+\tint lineIndex = getContent().getLineAtOffset(lineOffset);", "+\tTextLayout layout = createTextLayout(lineIndex);", "+\tStyledTextEvent event = getLineStyleData(lineOffset, line);", "+\tint lastOffset = 0;", "-\t\tint lastOffset = 0;", "-\t\t\t// do not create unnecessary style in the text layout (optimization only)", "-\t\t\t", "-\t\t\tif (lineOffset > style.start) {//style starts in a previous line", "+\t\t\tif (lineOffset > style.start) {", "-\t\t\t\tend = Math.min (length, style.length - lineOffset + style.start);//consider only length in the current line", "+\t\t\t\tend = Math.min (length, style.length - lineOffset + style.start);", "-\t\t\tif (lastOffset >= end) continue;//do not overlap style", "-\t\t\tTextStyle textStyle = null;", "-\t\t\tfor (int i = 0; i < styleIndex; i++) {", "-\t\t\t\tif (style.similarTo(styles[i])) {", "-\t\t\t\t\tif (styles[i].textStyle != null) {", "-\t\t\t\t\t\ttextStyle = styles[i].textStyle;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (textStyle == null) {", "-\t\t\t\tFont font = style.fontStyle == SWT.NORMAL ? regularFont : boldFont;", "-\t\t\t\ttextStyle = new TextStyle(device, font, style.foreground, style.background);", "-\t\t\t\tstyle.textStyle = textStyle;", "-\t\t\t}", "+\t\t\tif (lastOffset != start) {", "+\t\t\t\tlayout.setStyle(null, lastOffset, start - 1);\t\t\t\t", "+\t\t\t}\t", "+\t\t\tFont font = style.fontStyle == SWT.NORMAL ? regularFont : boldFont;", "+\t\t\tTextStyle textStyle = new TextStyle(font, style.foreground, style.background);", "+\tif (lastOffset != length) layout.setStyle(null, lastOffset, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f4796aa00152e2337d115646551586d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tint contentWidth(String line, int lineOffset, GC gc)", "signatureAfterChange": " \tint contentWidth(String line, int lineOffset)", "diff": ["-\tint contentWidth(String line, int lineOffset, GC gc) {", "-\t\tint width;", "-\t\t", "-\t\tif (isBidi()) {", "-\t\t\tStyledTextBidi bidi = getStyledTextBidi(line, lineOffset, gc);", "-\t\t\twidth = bidi.getTextWidth();", "-\t\t}", "-\t\telse {", "-\t\t\tStyledTextEvent event = renderer.getLineStyleData(lineOffset, line);", "-\t\t\tStyleRange[] styles = null;", "-\t\t\tif (event != null) {", "-\t\t\t\tstyles = renderer.filterLineStyles(event.styles);", "-\t\t\t}", "-\t\t\twidth = renderer.getTextWidth(line, lineOffset, 0, line.length(), styles, 0, gc);", "-\t\t}", "-\t\treturn width + leftMargin;", "+\tint contentWidth(String line, int lineOffset) {", "+\t\tStyledTextEvent event = getLineStyleData(lineOffset, line);", "+\t\tTextLayout layout = renderer.getTextLayout(line, lineOffset, event);", "+\t\tRectangle rect = layout.getLineBounds(0);", "+\t\trenderer.disposeTextLayout(layout, event);", "+\t\treturn rect.x + rect.width + leftMargin + rightMargin;"]}], "num": 18273}