{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc4cb2d9390d032a39cf693739ad9fe4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3955c54ae9565c63f5c98f8a817a906", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 258, "signatureBeforeChange": "  LRESULT wmColorChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmColorChild (int wParam, int lParam)", "diff": ["-\tif ((state & TRANSPARENT) != 0) {", "-\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\t\tcontrol = findThemeControl ();", "+\tif (backgroundImage != null) {", "+\t\tif ((state & TRANSPARENT) != 0) {", "+\t\t\tcontrol = findImageControl (backgroundImage);", "-\tif (background == -1 && foreground == -1 && control == null) {", "-\t\treturn null;", "+\tif (foreground == -1 && background == -1 && control == null) {", "+\t\tif ((state & TRANSPARENT) != 0) {", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\tcontrol = findThemeControl ();", "+\t\t\t}", "+\t\t}", "+\t\tif (control == null) return null;", "-\t\tcontrol.drawThemeBackground (wParam, handle, rect);", "-\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "-\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\tif (backgroundImage != null) {", "+\t\t\tint hwnd = control.handle;", "+\t\t\tint hBitmap = backgroundImage.handle;", "+\t\t\tOS.MapWindowPoints (handle, hwnd, rect, 2);", "+\t\t\tPOINT lpPoint = new POINT ();", "+\t\t\tOS.GetWindowOrgEx (wParam, lpPoint);", "+\t\t\tOS.SetBrushOrgEx (wParam, -rect.left - lpPoint.x, -rect.top - lpPoint.y, lpPoint);", "+\t\t\tint hBrush = findBrush (hBitmap, OS.BS_PATTERN);", "+\t\t\tif ((state & DRAW_BACKGROUND) != 0) {", "+\t\t\t\tint hOldBrush = OS.SelectObject (wParam, hBrush);", "+\t\t\t\tOS.MapWindowPoints (hwnd, handle, rect, 2);", "+\t\t\t\tOS.PatBlt (wParam, rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top, OS.PATCOPY);", "+\t\t\t\tOS.SelectObject (wParam, hOldBrush);", "+\t\t\t}", "+\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "+\t\t\treturn new LRESULT (hBrush);", "+\t\t} else {", "+\t\t\tfillBackground (wParam, control, rect);", "+\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "+\t\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\t}", "-\treturn new LRESULT (findBrush (backPixel));", "+\treturn new LRESULT (findBrush (backPixel, OS.BS_SOLID));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ec9d71e9d37e71db87aad382093e81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 262, "signatureBeforeChange": "  LRESULT wmColorChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmColorChild (int wParam, int lParam)", "diff": ["-\tControl control = null;", "-\tif (backgroundImage != null) {", "-\t\tif ((state & TRANSPARENT) != 0) {", "-\t\t\tcontrol = findImageControl (backgroundImage);", "-\t\t}", "-\t}", "-\tif (foreground == -1 && background == -1 && control == null) {", "-\t\tif ((state & TRANSPARENT) != 0) {", "+\tControl control = findBackgroundControl ();", "+\tif (control == null) {", "+\t\tif ((state & THEME_BACKGROUND) != 0) {", "+\t\t\t\tif (control != null) {", "+\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\t\tOS.SetTextColor (wParam, getForegroundPixel ());", "+\t\t\t\t\tOS.SetBkColor (wParam, getBackgroundPixel ());", "+\t\t\t\t\tfillThemeBackground (wParam, control, rect);", "+\t\t\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "+\t\t\t\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\t\t\t}", "-\t\tif (control == null) return null;", "+\t\tif (foreground == -1) return null;", "-\tint forePixel = foreground, backPixel = background;", "-\tif (forePixel == -1) forePixel = defaultForeground ();", "-\tif (backPixel == -1) backPixel = defaultBackground ();", "+\tif (control == null) control = this;", "+\tint forePixel = control.getForegroundPixel ();", "+\tint backPixel = control.getBackgroundPixel ();", "-\tif (control != null) {", "+\tif (control.backgroundImage != null) {", "-\t\tif (backgroundImage != null) {", "-\t\t\tint hwnd = control.handle;", "-\t\t\tint hBitmap = backgroundImage.handle;", "-\t\t\tOS.MapWindowPoints (handle, hwnd, rect, 2);", "-\t\t\tPOINT lpPoint = new POINT ();", "-\t\t\tOS.GetWindowOrgEx (wParam, lpPoint);", "-\t\t\tOS.SetBrushOrgEx (wParam, -rect.left - lpPoint.x, -rect.top - lpPoint.y, lpPoint);", "-\t\t\tint hBrush = findBrush (hBitmap, OS.BS_PATTERN);", "-\t\t\tif ((state & DRAW_BACKGROUND) != 0) {", "-\t\t\t\tint hOldBrush = OS.SelectObject (wParam, hBrush);", "-\t\t\t\tOS.MapWindowPoints (hwnd, handle, rect, 2);", "-\t\t\t\tOS.PatBlt (wParam, rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top, OS.PATCOPY);", "-\t\t\t\tOS.SelectObject (wParam, hOldBrush);", "-\t\t\t}", "-\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "-\t\t\treturn new LRESULT (hBrush);", "-\t\t} else {", "-\t\t\tfillBackground (wParam, control, rect);", "-\t\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "-\t\t\treturn new LRESULT (OS.GetStockObject (OS.NULL_BRUSH));", "+\t\tint hwnd = control.handle;", "+\t\tint hBitmap = control.backgroundImage.handle;", "+\t\tOS.MapWindowPoints (handle, hwnd, rect, 2);", "+\t\tPOINT lpPoint = new POINT ();", "+\t\tOS.GetWindowOrgEx (wParam, lpPoint);", "+\t\tOS.SetBrushOrgEx (wParam, -rect.left - lpPoint.x, -rect.top - lpPoint.y, lpPoint);", "+\t\tint hBrush = findBrush (hBitmap, OS.BS_PATTERN);", "+\t\tif ((state & DRAW_BACKGROUND) != 0) {", "+\t\t\tint hOldBrush = OS.SelectObject (wParam, hBrush);", "+\t\t\tOS.MapWindowPoints (hwnd, handle, rect, 2);", "+\t\t\tOS.PatBlt (wParam, rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top, OS.PATCOPY);", "+\t\t\tOS.SelectObject (wParam, hOldBrush);", "+\t\tOS.SetBkMode (wParam, OS.TRANSPARENT);", "+\t\treturn new LRESULT (hBrush);"]}], "num": 14765}