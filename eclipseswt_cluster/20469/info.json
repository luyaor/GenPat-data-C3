{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "106627dfa18603159f65c932bce0be00", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeda48fd3db30399dd9547358f34a4c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d87314ab612493a85f5f519713d00bb1e5928d58", "commitAfterChange": "7c705f29562792401a3a185f9a537b664a3bbdd8", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void createDisplay (DeviceData data)", "signatureAfterChange": "  void createDisplay (DeviceData data)", "diff": ["+\t/*", "+\t* Feature in the Macintosh.  On OS 10.2, it is necessary", "+\t* to explicitly check in with the Process Manager and set", "+\t* the current process to be the front process in order for", "+\t* windows to come to the front by default.  The fix is call", "+\t* both GetCurrentProcess() and SetFrontProcess().", "+\t* ", "+\t* NOTE: It is not actually necessary to use the process", "+\t* serial number returned by GetCurrentProcess() in the", "+\t* call to SetFrontProcess() (ie. kCurrentProcess can be", "+\t* used) but both functions must be called in order for", "+\t* windows to come to the front.", "+\t*/", "+\tint [] psn = new int [2];", "+\tif (OS.GetCurrentProcess (psn) == OS.noErr) {", "+\t\tOS.CPSEnableForegroundOperation (psn, 0x03, 0x3C, 0x2C, 0x1103);", "+\t\tif (APP_NAME != null) {", "+\t\t\tbyte[] buffer = new byte[APP_NAME.length () + 1];", "+\t\t\tfor (int i = 0; i < buffer.length - 1; i++) {", "+\t\t\t\tbuffer[i] = (byte) APP_NAME.charAt (i);\t\t\t\t\t", "+\t\t\t}", "+\t\t\tOS.CPSSetProcessName (psn, buffer);", "+\t\t}", "+\t\tOS.SetFrontProcess (psn);", "+\t}", "+\t/*", "+\t* Feature in the Macintosh.  In order to get the standard", "+\t* application menu to appear on the menu bar, an application", "+\t* must manipulate the menu bar.  If the application does not", "+\t* install a menu bar, the application menu will not appear.", "+\t* The fix is to use ClearMenuBar() to manipulate the menu", "+\t* bar before any application has had a chance install a menu", "+\t* bar.", "+\t*/", "+\tOS.ClearMenuBar ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eab3845adc2d85e6b17b02e4d6a5d422", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ControlExample.java", "commitBeforeChange": "1e2f57c9785147e1803e8ec92587cb100b302b0b", "commitAfterChange": "d748516422f8e11519375f9bfd8434c434a261b2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tstatic void setShellSize(Shell shell)", "signatureAfterChange": " \tstatic void setShellSize(ControlExample instance, Shell shell)", "diff": ["-\tstatic void setShellSize(Shell shell) {", "+\tstatic void setShellSize(ControlExample instance, Shell shell) {", "-\t\tshell.setSize(Math.min(size.x, monitorArea.width - 20), Math.min(size.y, monitorArea.height - 20));", "+\t\tif (size.x > monitorArea.width) {", "+\t\t\tTabItem [] tabItems = instance.tabFolder.getItems();", "+\t\t\tfor (int i=0; i<tabItems.length; i++) {", "+\t\t\t\ttabItems[i].setText (instance.tabs [i].getShortTabText ());", "+\t\t\t}", "+\t\t\tsize = shell.computeSize(SWT.DEFAULT, SWT.DEFAULT);", "+\t\t}", "+\t\tshell.setSize(Math.min(size.x, monitorArea.width), Math.min(size.y, monitorArea.height));"]}], "num": 20469}