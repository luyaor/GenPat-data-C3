{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c6437d0971e605480383b614a08fe98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b835caafaf51145e3186af3f5dd576", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "08ed4d34906d3cb004511badd9a3286f04d40b7a", "commitAfterChange": "3587c6fb9068182d41169c6c886f0d5faa0219e6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\thandle = OS.gtk_ctree_new (1, 0);", "-\tif (handle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+", "+\t/* Columns:", "+\t * 0 - text", "+\t * 1 - pixmap", "+\t * 2 - foreground", "+\t * 3 - background", "+\t * 4 - id", "+\t * 5 - checked (if needed)", "+\t */", "+\tint COLUMN_NUM = (style&SWT.CHECK)!=0? 6:5;", "+\tint[] types = new int[COLUMN_NUM];", "+\ttypes[0] = OS.G_TYPE_STRING();", "+\ttypes[1] = OS.gdk_pixbuf_get_type();", "+\ttypes[2] = OS.GDK_TYPE_COLOR();", "+\ttypes[3] = OS.GDK_TYPE_COLOR();", "+\ttypes[4] = OS.G_TYPE_INT();", "+\tif ((style&SWT.CHECK) != 0) types[5] = OS.G_TYPE_BOOLEAN();", "+\tmodelHandle = OS.gtk_tree_store_newv(COLUMN_NUM, types);", "+\tif (modelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = OS.gtk_tree_view_new_with_model(modelHandle);", "+\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-\t", "-\t/* Force row_height to be computed */", "-\tOS.gtk_clist_set_row_height (handle, 0);", "-\t\t", "-\t/* Single or Multiple Selection */", "-\tOS.gtk_clist_set_selection_mode (handle, mode);", "-\t", "-\t/* Scrolling policy */", "+\tint selectionObject = OS.gtk_tree_view_get_selection(handle);", "+\tOS.gtk_tree_selection_set_mode(selectionObject, mode);", "+\tOS.gtk_tree_view_set_headers_visible(handle, false);\t", "-\t", "+\tif ((style & SWT.BORDER) != 0) OS.gtk_scrolled_window_set_shadow_type (scrolledHandle, OS.GTK_SHADOW_ETCHED_IN);", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (scrolledHandle);", "+\tOS.gtk_widget_show (handle);", "+\tcolumnHandle = OS.gtk_tree_view_column_new();", "+\tint renderer;", "+\trenderer = OS.gtk_cell_renderer_text_new();", "+\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, true);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"text\", 0);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"foreground-gdk\", 2);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"background-gdk\", 3);", "+\trenderer = OS.gtk_cell_renderer_pixbuf_new();", "+\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"pixbuf\", 1);", "-\t\tOS.gtk_widget_realize (handle);", "-\t\tuncheck = createCheckPixmap (false);", "-\t\tcheck = createCheckPixmap (true);", "+\t\trenderer = OS.gtk_cell_renderer_toggle_new();", "+\t\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"active\", 5);", "+\t\tOS.g_signal_connect(renderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "+\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "+\tOS.gtk_tree_view_set_headers_visible(handle, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a25eb79314910e5ab22ae6d5643c3bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "1839488a15cb42792cf1173ccf24926abb091a70", "commitAfterChange": "a15e74fa4fc558db41d7b6459560396680bcb2a9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tNSSavePanel panel;", "+\tint /*long*/ jniRef = 0;", "+\tSWTPanelDelegate delegate = null;", "+\tif (filterExtensions != null && filterExtensions.length != 0) {", "+\t\tdelegate = (SWTPanelDelegate)new SWTPanelDelegate().alloc().init();", "+\t\tjniRef = OS.NewGlobalRef(this);", "+\t\tif (jniRef == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.object_setInstanceVariable(delegate.id, Display.SWT_OBJECT, jniRef);", "+\t\tpanel.setDelegate(delegate);", "+\t\tNSPopUpButton widget = (NSPopUpButton)new NSPopUpButton().alloc();", "+\t\twidget.initWithFrame(new NSRect(), false);", "+\t\twidget.setTarget(delegate);", "+\t\twidget.setAction(OS.sel_sendSelection_);", "+\t\tNSMenu menu = widget.menu();", "+\t\tmenu.setAutoenablesItems(false);", "+\t\tfor (int i = 0; i < filterExtensions.length; i++) {", "+\t\t\tString str = filterExtensions [i];", "+\t\t\tif (filterNames != null && filterNames.length > i) {", "+\t\t\t\tstr = filterNames [i];", "+\t\t\t}", "+\t\t\tNSMenuItem nsItem = (NSMenuItem)new NSMenuItem().alloc();", "+\t\t\tnsItem.initWithTitle(NSString.stringWith(str), 0, NSString.stringWith(\"\"));", "+\t\t\tmenu.addItem(nsItem);", "+\t\t\tnsItem.release();", "+\t\t}", "+\t\twidget.selectItemAtIndex(0 <= filterIndex && filterIndex < filterExtensions.length ? filterIndex : 0);", "+\t\twidget.sizeToFit();", "+\t\tpanel.setAccessoryView(widget);", "+\t\tpopup = widget;", "+\t}", "+\tif (popup != null) {", "+\t\tfilterIndex = (int)/*64*/popup.indexOfSelectedItem();", "+\t\tpanel.setAccessoryView(null);", "+\t\tpopup.release();", "+\t\tpopup = null;", "+\t}", "+\tif (delegate != null) {", "+\t\tpanel.setDelegate(null);", "+\t\tdelegate.release();", "+\t}", "+\tif (jniRef != 0) OS.DeleteGlobalRef(jniRef);", "+\tpanel = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "789af1bf97e93a26000431eef6001f2d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\t\tif (image != null) {", "-\t\t\tGCData data = new GCData();", "-\t\t\tdata.device = display;", "-\t\t\tGC gc = GC.win32_new (struct.hDC, data);", "-\t\t\tint width = struct.right - struct.left;", "-\t\t\tint height = struct.bottom - struct.top;", "-\t\t\tif (width != 0 && height != 0) {", "-\t\t\t\tint x = 0, y = 0;", "-\t\t\t\tif ((style & SWT.CENTER) != 0) {", "-\t\t\t\t\tRectangle rect = image.getBounds ();", "-\t\t\t\t\tx = Math.max (0, (width - rect.width) / 2);", "-\t\t\t\t} else {", "-\t\t\t\t\tif ((style & SWT.RIGHT) != 0) {", "-\t\t\t\t\t\tRectangle rect = image.getBounds ();", "-\t\t\t\t\t\tx = width - rect.width;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tImage drawnImage = getEnabled () ? image : new Image (display, image, SWT.IMAGE_DISABLE);", "-\t\t\t\tgc.drawImage (drawnImage, x, y);", "-\t\t\t\tif (drawnImage != image) drawnImage.dispose ();", "+\t\tint width = struct.right - struct.left;", "+\t\tint height = struct.bottom - struct.top;", "+\t\tif (width != 0 && height != 0) {", "+\t\t\tint imageWidth = 0, imageHeight = 0;", "+\t\t\tif (image != null) {", "+\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\timageWidth = rect.width;", "+\t\t\t\timageHeight = rect.height;", "-\t\t\tgc.dispose ();", "+\t\t\tRECT rect = null;", "+\t\t\tTCHAR buffer = null;", "+\t\t\tint textWidth = 0, textHeight = 0, flags = 0;", "+\t\t\tif (text.length () != 0) {", "+\t\t\t\trect = new RECT ();", "+\t\t\t\tflags = OS.DT_CALCRECT | OS.DT_EDITCONTROL | OS.DT_EXPANDTABS;", "+\t\t\t\tif ((style & SWT.LEFT) != 0) flags |= OS.DT_LEFT;", "+\t\t\t\tif ((style & SWT.CENTER) != 0) flags |= OS.DT_CENTER;", "+\t\t\t\tif ((style & SWT.RIGHT) != 0) flags |= OS.DT_RIGHT;", "+\t\t\t\tif ((style & SWT.WRAP) != 0) {", "+\t\t\t\t\tflags |= OS.DT_WORDBREAK;", "+\t\t\t\t\trect.right = Math.max (0, width - imageWidth - MARGIN);", "+\t\t\t\t}", "+\t\t\t\tbuffer = new TCHAR (getCodePage (), text, true);", "+\t\t\t\tOS.DrawText (struct.hDC, buffer, -1, rect, flags);", "+\t\t\t\ttextWidth = rect.right - rect.left;", "+\t\t\t\ttextHeight = rect.bottom - rect.top;", "+\t\t\t}", "+\t\t\tint x = 0;", "+\t\t\tif ((style & SWT.CENTER) != 0) {", "+\t\t\t\tx = Math.max (0, (width - imageWidth - textWidth - MARGIN) / 2);", "+\t\t\t} else {", "+\t\t\t\tif ((style & SWT.RIGHT) != 0) {", "+\t\t\t\t\tx = width - imageWidth - textWidth - MARGIN;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (image != null) {", "+\t\t\t\tGCData data = new GCData();", "+\t\t\t\tdata.device = display;", "+\t\t\t\tGC gc = GC.win32_new (struct.hDC, data);", "+\t\t\t\tImage drawnImage = getEnabled () ? image : new Image (display, image, SWT.IMAGE_DISABLE);", "+\t\t\t\tgc.drawImage (drawnImage, x, Math.max (0, (height - imageHeight) / 2));", "+\t\t\t\tif (drawnImage != image) drawnImage.dispose ();", "+\t\t\t\tgc.dispose ();", "+\t\t\t\tx += imageWidth + MARGIN;", "+\t\t\t}", "+\t\t\tif (text.length () != 0) {", "+\t\t\t\tflags &= ~OS.DT_CALCRECT;", "+\t\t\t\trect.left = x;", "+\t\t\t\trect.right += rect.left;", "+\t\t\t\trect.top = Math.max (0, (height - textHeight) / 2);", "+\t\t\t\trect.bottom += rect.top;", "+\t\t\t\tOS.DrawText (struct.hDC, buffer, -1, rect, flags);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e9ba7233863afd5510529d4265df3b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "564af48002efb7dde4608cffc2bddfed66929de1", "commitAfterChange": "25e834c280324b3e7770e2b3f82a7d7ca7a1f981", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void dispose ()", "signatureAfterChange": "  void drawItem (GC gc, boolean drawFocus)", "diff": ["-public void dispose () {", "-\tif (isDisposed ()) return;", "-\tExpandBar parent = this.parent;", "-\tsuper.dispose ();", "-\tparent.relayout ();", "+", "+void drawItem (GC gc, boolean drawFocus) {", "+\tint headerHeight = parent.getBandHeight ();", "+\tDisplay display = getDisplay ();", "+\tgc.setForeground (display.getSystemColor (SWT.COLOR_TITLE_BACKGROUND));", "+\tgc.setBackground (display.getSystemColor (SWT.COLOR_TITLE_BACKGROUND_GRADIENT));", "+\tgc.fillGradientRectangle (x, y, width, headerHeight, true);", "+\tif (expanded) {", "+\t\tgc.setForeground (display.getSystemColor (SWT.COLOR_TITLE_BACKGROUND_GRADIENT));", "+\t\tgc.drawLine (x, y + headerHeight, x, y + headerHeight + height - 1);", "+\t\tgc.drawLine (x, y + headerHeight + height - 1, x + width - 1, y + headerHeight + height - 1);", "+\t\tgc.drawLine (x + width - 1, y + headerHeight + height - 1, x + width - 1, y + headerHeight);", "+\t}", "+\tint drawX = x;", "+\tif (image != null) {", "+\t\tdrawX += ExpandItem.TEXT_INSET;", "+\t\tif (imageHeight > headerHeight) {", "+\t\t\tgc.drawImage (image, drawX, y + headerHeight - imageHeight);", "+\t\t} else {", "+\t\t\tgc.drawImage (image, drawX, y + (headerHeight - imageHeight) / 2);", "+\t\t}", "+\t\tdrawX += imageWidth;", "+\t}", "+\tif (text.length() > 0) {", "+\t\tdrawX += ExpandItem.TEXT_INSET;", "+\t\tPoint size = gc.stringExtent (text);", "+\t\tgc.setForeground (parent.getForeground ());", "+\t\tgc.drawString (text, drawX, y + (headerHeight - size.y) / 2, true);", "+\t}", "+\tint chevronSize = ExpandItem.CHEVRON_SIZE;", "+\tdrawChevron (gc, x + width - chevronSize, y + (headerHeight - chevronSize) / 2);", "+\tif (drawFocus) {", "+\t\tgc.drawFocus (x + 1, y + 1, width - 2, headerHeight - 2);", "+\t}"]}], "num": 62178}