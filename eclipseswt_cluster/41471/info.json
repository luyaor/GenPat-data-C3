{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fdff5fef52c0780c020a1f234c210fc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61d0882849ef3a047fb9fb7edcb0ec66", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void drawOval(int x, int y, int width, int height)", "signatureAfterChange": " public void drawOval(int x, int y, int width, int height)", "diff": ["-\ttry {", "-\t\tif (focus(true, null)) {", "-\t\t\tMacUtil.RGBForeColor(data.foreground);", "-\t\t\tOS.PenSize((short) fLineWidth, (short) fLineWidth);", "-\t\t\tfRect.set(x, y, width+1, height+1);", "-\t\t\tOS.FrameOval(fRect.getData());", "-\t\t}", "-\t} finally {", "-\t\tunfocus(true);", "-\t}", "+\tOS.CGContextBeginPath(handle);", "+    OS.CGContextSaveGState(handle);", "+    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);", "+    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);", "+    OS.CGContextMoveToPoint(handle, 1, 0);", "+    OS.CGContextAddArc(handle, 0, 0, 1, 0, (float)(2 *Math.PI), true);", "+    OS.CGContextRestoreGState(handle);", "+\tOS.CGContextStrokePath(handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2cd5848f14e9c87dcf31769ed2eeb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int endAngle)", "signatureAfterChange": " public void drawArc(int x, int y, int width, int height, int startAngle, int endAngle)", "diff": ["-\t}", "-\t/* AW", "-\tOS.XDrawArc(data.display,data.drawable,handle,x,y,width,height,startAngle * 64 ,endAngle * 64);", "-\t*/", "-\tSystem.out.println(\"GC.drawArc\");", "+\t}\t", "+\tOS.CGContextBeginPath(handle);", "+    OS.CGContextSaveGState(handle);", "+    OS.CGContextTranslateCTM(handle, x + width / 2f, y + height / 2f);", "+    OS.CGContextScaleCTM(handle, width / 2f, height / 2f);", "+    OS.CGContextAddArc(handle, 0, 0, 1, -startAngle * (float)Math.PI / 180,  -endAngle * (float)Math.PI / 180, true);", "+    OS.CGContextRestoreGState(handle);", "+\tOS.CGContextStrokePath(handle);"]}], "num": 41471}