{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b9daad91389836826b8d16eb25ca5a8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b80425d1f4c0dcdbfe2394ab85f2dbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "f7feddd1f8f228c51cfa762dae98caf617b99fa6", "commitAfterChange": "2df8e1e4bb5d34a77fd51370ebed5b9622bfedee", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": " void doBlockSelectionMoveByKeyboard(int direction)", "signatureAfterChange": " void doBlockLine(boolean up)", "diff": ["-void doBlockSelectionMoveByKeyboard(int direction) {", "-\tif (blockSelection) {", "-\t\tif (blockXLocation == -1) {", "-\t\t\tsetBlockSelectionOffset(caretOffset);", "-\t\tint x = blockXLocation - horizontalScrollOffset;", "-\t\tint y = blockYLocation - getVerticalScrollOffset();", "-\t\tint lineIndex = getLineIndex(y);", "-\t\tswitch (direction) {", "-\t\t\tcase SWT.UP:", "-\t\t\t\tif (lineIndex > 0) {", "-\t\t\t\t\ty -= getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.DOWN:", "-\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\tif (lineIndex < lineCount - 1) {", "-\t\t\t\t\ty += getLineHeight();", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase ST.COLUMN_PREVIOUS: {", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, null, true);", "-\t\t\t\tint newOffset = offset != -1 ? getClusterPrevious(offset, lineIndex) : offset;  ", "-\t\t\t\tif (offset != newOffset) {", "-\t\t\t\t\tx = getPointAtOffset(newOffset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx -= 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase ST.COLUMN_NEXT: {", "-\t\t\t\tint[] trailing = new int[1];", "-\t\t\t\tint offset = getOffsetAtPoint(x, y, trailing, true);", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tString line = content.getLine(lineIndex);", "-\t\t\t\t\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\t\t\t\t\tif (offset + trailing[0] - lineOffset < line.length()) {", "-\t\t\t\t\t\toffset = getClusterNext(offset + trailing[0], lineIndex);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\toffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (offset != -1) {", "-\t\t\t\t\tx = getPointAtOffset(offset).x;", "-\t\t\t\t} else {", "-\t\t\t\t\tx += 20;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+}", "+void doBlockLine(boolean up) {", "+\tif (blockXLocation == -1) setBlockSelectionOffset(caretOffset);", "+\tint y = blockYLocation - getVerticalScrollOffset();", "+\tint lineIndex = getLineIndex(y);", "+\tif (up) {", "+\t\tif (lineIndex > 0) {", "+\t\t\ty = getLinePixel(lineIndex - 1);", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tif (y < topMargin) {", "+\t\t\t\tscrollVertical(y - topMargin, true);", "-\t\tif (x != (blockXLocation - horizontalScrollOffset) || y != (blockYLocation - getVerticalScrollOffset())) {", "-\t\t\tsetBlockSelectionLocation(x, y);", "-\t\t\t//TODO BETTER AUTO SCROLL ", "-\t\t\tshowCaret();", "+\t} else {", "+\t\tint lineCount = content.getLineCount();", "+\t\tif (lineIndex + 1 < lineCount) {", "+\t\t\ty = getLinePixel(lineIndex + 2) - 1;", "+\t\t\tsetBlockSelectionLocation(blockXLocation - horizontalScrollOffset, y);", "+\t\t\tint bottom = clientAreaHeight - bottomMargin; ", "+\t\t\tif (y > bottom) {", "+\t\t\t\tscrollVertical(y - bottom, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47108720302609e3222d2f67607b4323", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 141, "signatureBeforeChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "signatureAfterChange": " int getOffsetAtPoint(int x, int y)", "diff": ["- */", "-int getOffsetAtX(String line, int lineOffset, int lineXOffset) {", "-\tint x = lineXOffset - leftMargin + horizontalScrollOffset;", "-\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "-\tint[] trailing = new int[1];", "-\tint offsetInLine = layout.getOffset(x, 0, trailing);", "-\tadvancing = false;", "-\tif (trailing[0] != 0) {", "-\t\tint lineLength = line.length();", "-\t\tif (offsetInLine + trailing[0] >= lineLength) {", "-\t\t\toffsetInLine = lineLength;", "-\t\t\tadvancing = true;", "-\t\t} else {", "-\t\t\tint level;", "-\t\t\tint offset = offsetInLine;", "-\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "-\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "-\t\t\t\tlevel = isMirrored() ? 1 : 0;", "-\t\t\t} else {", "-\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "-\t\t\t}", "-\t\t\toffsetInLine += trailing[0];", "-\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "-\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "-\t\t}", "-\t}", "-\trenderer.disposeTextLayout(layout);", "-\treturn offsetInLine;", "+int getOffsetAtPoint(int x, int y) {", "+\tint lineIndex = getLineIndex(y);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tTextLayout layout = renderer.getTextLayout(lineIndex);", "+\tx += horizontalScrollOffset - leftMargin;", "+\ty -= getLinePixel(lineIndex);", "+\tint[] trailing = new int[1];", "+\tif (wordWrap) {", "+\t\t//TODO", "+\t}", "+\t", "+\tint offsetInLine = layout.getOffset(x, y, trailing);", "+\tadvancing = false;", "+\tif (trailing[0] != 0) {", "+\t\tint lineInParagraph = layout.getLineIndex(offsetInLine);", "+\t\tint lineLength;", "+\t\tif (lineInParagraph + 1 == layout.getLineCount()) {", "+\t\t\tlineLength = layout.getLineOffsets()[lineInParagraph + 1];", "+\t\t} else {", "+\t\t\tlineLength = Math.max(0, layout.getLineOffsets()[lineInParagraph + 1] - 1);", "+\t\t}", "+\t\tif (offsetInLine + trailing[0] >= lineLength) {", "+\t\t\toffsetInLine = lineLength;", "+\t\t\tadvancing = true;", "+\t\t} else {", "+\t\t\tString line = content.getLine(lineIndex);\t\t\t", "+\t\t\tint level;", "+\t\t\tint offset = offsetInLine;", "+\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "+\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "+\t\t\t\tlevel = isMirrored() ? 1 : 0;", "+\t\t\t} else {", "+\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "+\t\t\t}", "+\t\t\toffsetInLine += trailing[0];", "+\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "+\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "+\t\t}", "+\t}", "+\trenderer.disposeTextLayout(layout);", "+\treturn offsetInLine + lineOffset;"]}], "num": 52767}