{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40420ca4a2a48d8158a796934d11a14f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b36a7a3c1cfa8378583ebe38f92e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 89, "signatureBeforeChange": " void calculateWidestScrolledItem(int topIndexDifference)", "signatureAfterChange": " void updateVerticalBar()", "diff": ["- */", "-void calculateWidestScrolledItem(int topIndexDifference) {", "-\tint visibleItemCount = getItemCountTruncated(getClientArea());\t", "-\tint newMaximumItemWidth = getContentWidth();", "-\tint topIndex = getTopIndex();", "-\tint stopIndex = topIndex;", "-", "-\tif (topIndexDifference < 0) {\t\t\t\t\t\t\t\t// scrolled up?", "-\t\tif (Math.abs(topIndexDifference) > visibleItemCount) {\t// scrolled down more than one page (via quick thumb dragging)?", "-\t\t\ttopIndexDifference = visibleItemCount * -1;", "-\t\t}", "-\t\tfor (int i = stopIndex - topIndexDifference; i >= stopIndex; i--) {\t// check item width from old top index up to new one", "-\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "-\t\t}", "-\t}", "-\telse", "-\tif (topIndexDifference > 0) {\t\t\t\t\t\t\t\t// scrolled down?", "-\t\tif (topIndexDifference > visibleItemCount) {\t\t\t// scrolled down more than one page (via quick thumb dragging)?", "-\t\t\ttopIndexDifference = visibleItemCount;", "-\t\t}", "-\t\tstopIndex += visibleItemCount;\t\t", "-\t\tfor (int i = stopIndex - topIndexDifference; i < stopIndex; i++) {", "-\t\t\tnewMaximumItemWidth = Math.max(newMaximumItemWidth, getContentWidth(i));", "-\t\t}", "-\t}", "-\tsetContentWidth(newMaximumItemWidth);", "-}", "+}", "+void updateVerticalBar() {", "+\tScrollBar vBar = getVerticalBar();", "+\tint maximum = Math.max(1,availableItems.length);", "+\tif (maximum == vBar.getMaximum()) return;", "+\tvBar.setMaximum(maximum);", "+\tint thumb = Math.min(maximum, getClientArea().height / itemHeight);", "+\tvBar.setThumb(thumb);", "+\t/* reclaim any space now left on the bottom */", "+\tif (maximum < topIndex + thumb) {", "+\t\ttopIndex = maximum - thumb;", "+\t\tvBar.setSelection(topIndex);", "+\t\tredraw();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02791773acdc02c9f535d929805bda0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "commitAfterChange": "b4e13940b738ca380f99e9bdd9e55dadba13486b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 27, "signatureBeforeChange": " Control [] _getChildren (int h)", "signatureAfterChange": "  void setInitialSize ()", "diff": ["- */", "-Control [] _getChildren (int h) {", "-\tif (h==0) {", "-\t\terror(SWT.ERROR_UNSPECIFIED);", "-\t}", "-\tint list = OS.gtk_container_children (h);", "-\tint count = OS.g_list_length (list);", "-\tjava.util.Vector children = new java.util.Vector();", "-\tfor (int i=0; i<count; i++) {", "-\t\tint data = OS.g_list_nth_data (list, i);", "-\t\tif (!isMyHandle(data)) {", "-\t\t\tControl child = _childFromHandle(data);", "-\t\t\tif (child != null) children.addElement(child);", "-\tControl[] answer = new Control[children.size()];", "-\tchildren.copyInto(answer);", "-\treturn answer;", "+void setInitialSize () {", "+\t/*", "+\t* Bug in GTK. The scrollbars are not visible when a scrolled window", "+\t* is resize and then shown. The fix is to change the scrolling policy", "+\t* before and after resizing.", "+\t*/", "+\tif ((state & CANVAS) != 0) {", "+\t\tOS.gtk_scrolled_window_set_policy (scrolledHandle, OS.GTK_POLICY_NEVER, OS.GTK_POLICY_NEVER);", "+\t}", "+\tsuper.setInitialSize ();", "+\tif ((state & CANVAS) != 0) {", "+\t\tint hsp = (style & SWT.H_SCROLL) == 0 ? OS.GTK_POLICY_NEVER : OS.GTK_POLICY_ALWAYS;", "+\t\tint vsp = (style & SWT.V_SCROLL) == 0 ? OS.GTK_POLICY_NEVER : OS.GTK_POLICY_ALWAYS;", "+\t\tOS.gtk_scrolled_window_set_policy (scrolledHandle, hsp, vsp);", "+\t}", "+}"]}], "num": 47133}