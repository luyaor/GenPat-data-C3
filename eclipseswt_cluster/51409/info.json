{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b999e4373140a5ec15ec672b815af4e8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef2c78171a38c6c4e8facd1492820b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "527e849a2526f3d8802def278cb1e6f6d555176e", "commitAfterChange": "732b93a3746a83c09a87316a75d0a62edeb31a1a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r void removeItemFromRow(CoolItem item, Vector row)", "signatureAfterChange": "\r void removeItemFromRow(CoolItem item, int rowIndex)", "diff": ["-void removeItemFromRow(CoolItem item, Vector row) {\r", "-\tint index = row.indexOf(item);\r", "-\trow.removeElementAt(index);\r", "-\tif (row.size() == 0) {\r", "-\t\trows.removeElement(row);\r", "+void removeItemFromRow(CoolItem item, int rowIndex) {\r", "+\tint index = findItem(item).x;\r", "+\tint newLength = items[rowIndex].length - 1;\r", "+\tRectangle itemBounds = item.getBounds();\r", "+\tif (newLength > 0) {\r", "+\t\tCoolItem[] newRow = new CoolItem[newLength];\r", "+\t\tSystem.arraycopy(items[rowIndex], 0, newRow, 0, index);\r", "+\t\tSystem.arraycopy(items[rowIndex], index + 1, newRow, index, newRow.length - index);\r", "+\t\titems[rowIndex] = newRow;\r", "+\t}\r", "+\telse {\r", "+\t\tCoolItem[][] newRows = new CoolItem[items.length - 1][];\r", "+\t\tSystem.arraycopy(items, 0, newRows, 0, rowIndex);\r", "+\t\tSystem.arraycopy(items, rowIndex + 1, newRows, rowIndex, newRows.length - rowIndex);\r", "+\t\titems = newRows;\r", "-\t}\t\r", "+\t}\r", "-\t\tCoolItem first = (CoolItem) row.elementAt(0);\r", "+\t\tCoolItem first = items[rowIndex][0];\r", "+\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "-\t\tCoolItem previous = (CoolItem) row.elementAt(index - 1);\r", "+\t\tCoolItem previous = items[rowIndex][index - 1];\r", "-\t\tint width = bounds.width + item.getSize().x;\r", "+\t\tint width = bounds.width + itemBounds.width;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee502cbd2def03409385081f5fc6ad9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "2fd0fe05ad364cfbc9109d7e2ea171fbb2a402dc", "commitAfterChange": "30eda25ac0337a8ab8311a2b5be9576bc013d021", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " void removeItemFromRow(CoolItem item, int rowIndex)", "signatureAfterChange": " void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed)", "diff": ["-void removeItemFromRow(CoolItem item, int rowIndex) {\r", "+void removeItemFromRow(CoolItem item, int rowIndex, boolean disposed) {\r", "-\tif (index == 0) {\r", "-\t\tCoolItem first = items[rowIndex][0];\r", "-\t\tRectangle bounds = first.getBounds();\r", "-\t\tint width = bounds.x + bounds.width;\r", "-\t\tfirst.setBounds(0, bounds.y, width, bounds.height);\r", "-\t\tfirst.requestedWidth = width;\r", "-\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "-\t} else {\r", "-\t\tCoolItem previous = items[rowIndex][index - 1];\r", "-\t\tRectangle bounds = previous.getBounds();\r", "-\t\tint width = bounds.width + itemBounds.width;\r", "-\t\tprevious.setBounds(bounds.x, bounds.y, width, bounds.height);\r", "-\t\tprevious.requestedWidth = width;\r", "+\tif (!disposed) {\r", "+\t\tif (index == 0) {\r", "+\t\t\tCoolItem first = items[rowIndex][0];\r", "+\t\t\tRectangle bounds = first.getBounds();\r", "+\t\t\tint width = bounds.x + bounds.width;\r", "+\t\t\tfirst.setBounds(0, bounds.y, width, bounds.height);\r", "+\t\t\tfirst.requestedWidth = width;\r", "+\t\t\tredraw(bounds.x, bounds.y, CoolItem.MINIMUM_WIDTH, bounds.height, false);\r", "+\t\t} else {\r", "+\t\t\tCoolItem previous = items[rowIndex][index - 1];\r", "+\t\t\tRectangle bounds = previous.getBounds();\r", "+\t\t\tint width = bounds.width + itemBounds.width;\r", "+\t\t\tprevious.setBounds(bounds.x, bounds.y, width, bounds.height);\r", "+\t\t\tprevious.requestedWidth = width;\r", "+\t\t}\r"]}], "num": 51409}