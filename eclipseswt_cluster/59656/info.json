{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1edcc2ae54c4a883d2a4ee292758f70", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0286d727b5f8542884351ea56527bacd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorAppUI.java", "commitBeforeChange": "6f3d354d2f0c6233d36f07d0ec5aee0a6deae367", "commitAfterChange": "c41b1ca473d12b4b8f819085b0317ccd29a2da60", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  void createMembersPanel(Composite panel)", "signatureAfterChange": "  void createMembersPanel(Composite panel)", "diff": ["+\t\tboolean match (int index, String pattern) {", "+\t\t\tTableItem item = membersLt.getItem(index);", "+\t\t\tString text = item.getText();", "+\t\t\ttry {", "+\t\t\t\tif (text.matches(pattern)) {", "+\t\t\t\t\tmembersLt.setSelection(index);", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t} catch (Exception ex) {}", "+\t\t\treturn false;", "+\t\t}", "-\t\t\tselection++;", "+\t\t\tselection++;", "-\t\t\t\tTableItem item = membersLt.getItem(i);", "-\t\t\t\tString text = item.getText();", "-\t\t\t\ttry {", "-\t\t\t\t\tif (text.matches(pattern)) {", "-\t\t\t\t\t\tmembersLt.setSelection(i);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t} catch (Exception ex) {}", "+\t\t\t\tif (match (i, pattern)) return;", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < selection; i++) {", "+\t\t\t\tif (match (i, pattern)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7827e8dd459ef049f79365530d8f2363", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc7a79cec8920b1b6175a6c2124e7f63a3823262", "commitAfterChange": "d8f34c9ec09bc11f5d7b71293f9d378725f3146c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 31, "signatureBeforeChange": " public TreeItem getItem (Point point)", "signatureAfterChange": " public TreeItem getItem (Point point)", "diff": ["-\tint /*long*/ [] path = new int /*long*/ [1];\t", "+\tint /*long*/ [] path = new int /*long*/ [1];", "+\tint clientX = point.x - getBorderWidth ();", "+\tint clientY = point.y - getHeaderHeight ();", "-\tif (!OS.gtk_tree_view_get_path_at_pos (handle, point.x, point.y, path, null, null, null)) return null;", "+\tif (!OS.gtk_tree_view_get_path_at_pos (handle, clientX, clientY, path, null, null, null)) return null;", "-\t\t\tint[] buffer = new int [1];", "-\t\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\t\tOS.gtk_tree_view_get_cell_area (handle, path [0], columnHandle, rect);", "-\t\t\tOS.gtk_widget_style_get (handle, OS.expander_size, buffer, 0);", "-\t\t\tint expanderSize = buffer [0] + TreeItem.EXPANDER_EXTRA_PADDING;", "-\t\t\toverExpander = rect.x - 1 <= point.x && point.x < rect.x + expanderSize;", "+\t\t\tfor (int i = 0; i <= columnCount; i++) {", "+\t\t\t\tint /*long*/ column = OS.gtk_tree_view_get_column (handle, i);", "+\t\t\t\tif (column != 0) {", "+\t\t\t\t\tint[] buffer = new int [1];", "+\t\t\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path [0], column, rect);", "+\t\t\t\t\tOS.gtk_widget_style_get (handle, OS.expander_size, buffer, 0);", "+\t\t\t\t\tint expanderSize = buffer [0] + TreeItem.EXPANDER_EXTRA_PADDING;", "+\t\t\t\t\toverExpander = rect.x - 1 <= point.x && point.x < rect.x + expanderSize;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 59656}