{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b03fc27ab21c14f02418ca10b9b1d54", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56265de0c32146ffe9e29c8d44c8f9fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ebb5060cad733406a88647907ec2c4a932cfe720", "commitAfterChange": "28f166fa20c7ba5aa3886efdb6cf282aa0351b06", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "\r boolean translateTraversal (int key, XKeyEvent xEvent)", "signatureAfterChange": "\r boolean translateTraversal (int key, XKeyEvent xEvent)", "diff": ["-\tint detail = 0;\r", "+\tint detail = SWT.TRAVERSE_NONE;\r", "+\tboolean all = false;\r", "+\t\tcase OS.XK_Page_Up:\r", "+\t\tcase OS.XK_Page_Down:\r", "+\t\t\tall = true;\r", "+\t\t\tif ((xEvent.state & OS.ControlMask) == 0) return false;\r", "+\t\t\tdetail = key == OS.XK_Page_Down ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\t\t\tbreak;\r", "-\tif (hooks (SWT.Traverse)) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.doit = doit;\r", "-\t\tevent.detail = detail;\r", "-\t\tevent.time = xEvent.time;\r", "-\t\tsetKeyState (event, xEvent);\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "-\t}\r", "-\tif (doit) {\r", "-\t\tint flags = SWT.TRAVERSE_RETURN | SWT.TRAVERSE_ESCAPE;\r", "-\t\tif ((detail & flags) != 0 || (state & CANVAS) != 0) {\r", "-\t\t\treturn traverse (detail);\r", "-\t\t}\r", "-\t}\r", "+\tint flags = SWT.TRAVERSE_RETURN | SWT.TRAVERSE_ESCAPE | SWT.TRAVERSE_PAGE_NEXT | SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\tif ((detail & flags) == 0 && (state & CANVAS) == 0) return false;\r", "+\tEvent event = new Event ();\r", "+\tevent.doit = doit;\r", "+\tevent.detail = detail;\r", "+\tevent.time = xEvent.time;\r", "+\tsetKeyState (event, xEvent);\r", "+\tShell shell = getShell ();\r", "+\tControl control = this;\r", "+\tdo {\r", "+\t\tif (control.traverse (event)) return true;\r", "+\t\tif (control == shell) return false;\r", "+\t\tcontrol = control.parent;\r", "+\t} while (all && control != null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6dc6a3dcf751064f1e3c0b312af0b93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e3ffa03ceaf7703e7ab3292990f53dd9ebc09848", "commitAfterChange": "bad1afba2bae87fcb485bb971088066d4ff1a6e9", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 103, "signatureBeforeChange": "\r \r boolean translateTraversal (int key_sym, PhKeyEvent_t phEvent)", "signatureAfterChange": "\r \r boolean translateTraversal (int key_sym, PhKeyEvent_t phEvent)", "diff": ["-\tint detail = 0;\r", "-\tboolean shift = (phEvent.key_mods & OS.Pk_KM_Shift) != 0;\r", "-\tboolean control = (phEvent.key_mods & OS.Pk_KM_Ctrl) != 0;\r", "+\tint detail = SWT.TRAVERSE_NONE;\r", "+\tint code = traversalCode (key_sym, phEvent);\r", "+\tboolean all = false;\r", "-\t\tcase OS.Pk_Escape:\r", "+\t\tcase OS.Pk_Escape: {\r", "-\t\t\tif (shell.parent == null) return false;\r", "-\t\tcase OS.Pk_Return:\r", "+\t\t}\r", "+\t\tcase OS.Pk_Return: {\r", "+\t\t}\r", "-\t\tcase OS.Pk_KP_Tab:\r", "-\t\t\tdetail = SWT.TRAVERSE_TAB_NEXT;\r", "-\t\t\tif (shift) detail = SWT.TRAVERSE_TAB_PREVIOUS;\r", "+\t\tcase OS.Pk_KP_Tab: {\r", "+\t\t\tboolean next = (phEvent.key_mods & OS.Pk_KM_Shift) == 0;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;\r", "+\t\t}\r", "-\t\tcase OS.Pk_Left: \r", "+\t\tcase OS.Pk_Left: {\r", "+\t\t}\r", "-\t\tcase OS.Pk_Right:\r", "+\t\tcase OS.Pk_Right: {\r", "+\t\t}\r", "+\t\tcase OS.Pk_Pg_Down:\r", "+\t\tcase OS.Pk_Pg_Up: {\r", "+\t\t\tall = true;\r", "+\t\t\tif ((phEvent.key_mods & OS.Pk_KM_Ctrl) == 0) return false;\r", "+\t\t\tdetail = key_sym == OS.Pk_Pg_Down ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "-\tboolean doit = (detail & traversalCode (key_sym, phEvent)) != 0;\r", "-\tif (!doit && control && (key_sym == OS.Pk_Tab || key_sym == OS.Pk_Tab)) {\r", "-\t\tdoit = true;\r", "-\t\tcontrol = false;\r", "-\t}\r", "-\tif (hooks (SWT.Traverse)) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.doit = doit;\r", "-\t\tevent.detail = detail;\r", "-\t\tsetKeyState (event, phEvent);\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tif (isDisposed ()) return true;\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "-\t}\r", "-\tif (doit) {\r", "-\t\tswitch (detail) {\r", "-\t\t\tcase SWT.TRAVERSE_ESCAPE:\t\treturn traverseEscape ();\r", "-\t\t\tcase SWT.TRAVERSE_RETURN:\t\treturn traverseReturn ();\r", "-\t\t\tcase SWT.TRAVERSE_TAB_NEXT:\t\treturn traverseGroup (true, control);\r", "-\t\t\tcase SWT.TRAVERSE_TAB_PREVIOUS:\t\treturn traverseGroup (false, control);\r", "-\t\t\tcase SWT.TRAVERSE_ARROW_NEXT:\t\treturn traverseItem (true);\r", "-\t\t\tcase SWT.TRAVERSE_ARROW_PREVIOUS:\treturn traverseItem (false);\t\r", "-\t\t}\r", "-\t}\r", "+\tEvent event = new Event ();\r", "+\tevent.doit = (code & detail) != 0 || (phEvent.key_mods & OS.Pk_KM_Ctrl) != 0;\r", "+\tevent.detail = detail;\r", "+\tsetKeyState (event, phEvent);\r", "+\tShell shell = getShell ();\r", "+\tControl control = this;\r", "+\tdo {\r", "+\t\tif (control.traverse (event)) return true;\r", "+\t\tif (control == shell) return false;\r", "+\t\tcontrol = control.parent;\r", "+\t} while (all && control != null);\r"]}], "num": 31303}