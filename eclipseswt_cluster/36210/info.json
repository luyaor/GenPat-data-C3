{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00b468c11925b0746c0f49cd23841bac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9d47c8c96b1c4c12b1394f27294ffa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 283, "methodNumberAfterChange": 140, "signatureBeforeChange": " public int getOffsetAtLocation(Point point)", "signatureAfterChange": " public int getOffsetAtLocation(Point point)", "diff": ["-\tTextLayout layout;", "-\tint line;", "-\tint lineOffset;", "-\tint offsetInLine;", "-\tString lineText;", "-\t", "-\tif (point.y + verticalScrollOffset < 0 || point.x + horizontalScrollOffset < 0) {", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}\t", "-\tline = (getTopPixel() + point.y) / lineHeight;\t", "-\t// does the referenced line exist?", "-\tif (line >= content.getLineCount()) {", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}\t", "-\tlineText = content.getLine(line);", "-\tlineOffset = content.getOffsetAtLine(line);\t", "-\t", "-\tint x = point.x - leftMargin + horizontalScrollOffset;", "-\tlayout = renderer.getTextLayout(lineText, lineOffset);", "-\tRectangle rect = layout.getLineBounds(0);", "-\tif (x > rect.x + rect.width) {", "-\t\trenderer.disposeTextLayout(layout);", "+\tif (point.y + getVerticalScrollOffset() < 0 || point.x + horizontalScrollOffset < 0) {", "+\tint bottomIndex = getLineIndex(getClientArea().height);", "+\tint height = getLinePixel(bottomIndex) + renderer.getLineHeight(bottomIndex);", "+\tif (point.y > height) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\t", "+\t}", "+\tint lineIndex = getLineIndex(point.y);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tTextLayout layout = renderer.getTextLayout(lineIndex);\t", "-\toffsetInLine = layout.getOffset(x, 0, trailing);", "-\tif (offsetInLine != lineText.length() - 1) {", "-\t\toffsetInLine = Math.min(lineText.length(), offsetInLine + trailing[0]);\t\t", "+\tint x = point.x + horizontalScrollOffset - leftMargin ;", "+\tint y = point.y - getLinePixel(lineIndex);", "+\tint offsetInLine = layout.getOffset(x, y, trailing);", "+\tString line = content.getLine(lineIndex);", "+\tif (offsetInLine != line.length() - 1) {", "+\t\toffsetInLine = Math.min(line.length(), offsetInLine + trailing[0]);\t\t", "+\tRectangle rect = layout.getLineBounds(layout.getLineIndex(offsetInLine));", "+\tif (x > rect.x + rect.width) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a478a5183adf190a8ab54294fcbef42d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "ea7476519b9e21c42e4d4550669901e532bedcab", "commitAfterChange": "76b33e0e494479a9009365afe16385a154f070b7", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " public int getOffsetAtLocation(Point point)", "signatureAfterChange": " public int getOffsetAtLocation(Point point)", "diff": ["-\t//TODO BUG GETLINEINDEX NEVER RETURNS > LINECOUNT", "-\tint line = getLineIndex(point.y);", "-\t// does the referenced line exist?", "-\tif (line >= content.getLineCount()) {", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}\t", "-\tString lineText = content.getLine(line);", "-\tint lineOffset = content.getOffsetAtLine(line);\t", "-\t", "-\tint x = point.x - leftMargin + horizontalScrollOffset;", "-\tTextLayout layout = renderer.getTextLayout(lineText, lineOffset);", "-\tRectangle rect = layout.getLineBounds(0);", "-\tif (x > rect.x + rect.width) {", "-\t\trenderer.disposeTextLayout(layout);", "-\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\tint bottomIndex = getLineIndex(getClientArea().height);", "+\tint height = getLinePixel(bottomIndex) + lineCache.getLineHeight(bottomIndex);", "+\tif (point.y > height) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);\t\t", "+\tint lineIndex = getLineIndex(point.y);", "+\tString line = content.getLine(lineIndex);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tTextLayout layout = renderer.getTextLayout(line, lineOffset);\t", "-\tint offsetInLine = layout.getOffset(x, 0, trailing);", "-\tif (offsetInLine != lineText.length() - 1) {", "-\t\toffsetInLine = Math.min(lineText.length(), offsetInLine + trailing[0]);\t\t", "+\tint x = point.x - leftMargin + horizontalScrollOffset;", "+\tint y = point.y - getLinePixel(lineIndex);", "+\tint offsetInLine = layout.getOffset(x, y, trailing);", "+\tif (offsetInLine != line.length() - 1) {", "+\t\toffsetInLine = Math.min(line.length(), offsetInLine + trailing[0]);\t\t", "+\tRectangle rect = layout.getLineBounds(layout.getLineIndex(offsetInLine));", "+\tif (x > rect.x + rect.width) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}"]}], "num": 36210}