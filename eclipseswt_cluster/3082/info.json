{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad6a6c58ce0b1dbd3f0d5d3295009954", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4abd90d35d3c5184a2bdaa8bfb36f383", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_program_Program.java", "commitBeforeChange": "2272262fa1ad2a17677f9473dd0c94e9b168217c", "commitAfterChange": "66413abed4d13d9d98291abd8415d641f3043b15", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void test_getPrograms()", "signatureAfterChange": "  public void test_getPrograms()", "diff": ["-\twarnUnimpl(\"Test test_getPrograms not written\");", "+\tProgram[] programs = Program.getPrograms();", "+\t", "+\t// The result is not well-documented, but it should ", "+\t// be non-null and contain no null entries.", "+\t", "+\tassertNotNull(programs);", "+\t", "+\tHashtable lookup = new Hashtable();", "+\tfor (int i=0; i<programs.length; i++) {", "+\t\t", "+\t\t// test non-null entry", "+\t\tassertNotNull(programs[i]);", "+\t\t", "+\t\t// test unique hash code", "+\t\tint hashCode = programs[i].hashCode();", "+\t\tInteger key = new Integer(hashCode);", "+\t\tif (lookup.contains(key)) {", "+\t\t\tfail(\"Duplicate hash code for \"+programs[i]+\" (same as \"+(Program)lookup.get(key)+\")\");", "+\t\t}", "+\t\telse {", "+\t\t\tlookup.put(key,programs[i]);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bebde48ba3e67857db93342087ea7ec4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 74, "signatureBeforeChange": " void resetRoot()", "signatureAfterChange": " void selectItem(TreeItem item, boolean addToSelection)", "diff": ["- */", "-void resetRoot() {", "-\troot = new TreeRoots(this);", "-}", "+}", "+void selectItem(TreeItem item, boolean addToSelection) {", "+\tTreeItem[] oldSelectedItems = selectedItems;", "+\tif (!addToSelection || (style & SWT.SINGLE) != 0) {", "+\t\tselectedItems = new TreeItem[] {item};", "+\t\tfor (int i = 0; i < oldSelectedItems.length; i++) {", "+\t\t\tif (oldSelectedItems[i] != item) {", "+\t\t\t\tredrawItem(oldSelectedItems[i].availableIndex);", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tselectedItems = new TreeItem[selectedItems.length + 1];", "+\t\tSystem.arraycopy(oldSelectedItems, 0, selectedItems, 0, oldSelectedItems.length);", "+\t\tselectedItems[selectedItems.length - 1] = item;"]}], "num": 3082}