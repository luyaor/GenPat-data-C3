{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95bb25da6e2923ee9e4ffbef7344eff2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9b8abc4cffef8c774a54a2b14da2f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6671b08ea3a9774efb848e8b9d6b69601c057115", "commitAfterChange": "be3531ee8a78b3c07164fc4d0e23666bb66aed60", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["-\t} ", "+\t}", "+\tdrawItem = 0;", "+\tif (OS.HIVIEW) {", "+\t\tControl widget = findBackgroundControl ();", "+\t\tif (widget != null) {", "+\t\t\tRectangle rect1 = getClientArea ();", "+\t\t\tif (drawItem != 0) {", "+\t\t\t\tRect rect = new Rect();", "+\t\t\t\tint columnId = columnCount == 0 ? column_id : columns [columnCount - 1].id;", "+\t\t\t\tint clientX = rect1.x, clientWidth = rect1.width; ", "+\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, drawItem, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\trect1.width = rect1.x + rect1.width - rect.right;", "+\t\t\t\t\trect1.x = rect.right;", "+\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t\t}", "+\t\t\t\tint [] ids = childIds, state = new int [1];", "+\t\t\t\tint index = ids.length - 1;", "+\t\t\t\twhile (true) {", "+\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "+\t\t\t\t\tif (index < 0) break;", "+\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "+\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "+\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "+\t\t\t\t\t\tif (item != null) {", "+\t\t\t\t\t\t\tids = item.childIds;", "+\t\t\t\t\t\t\tindex = ids.length - 1;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (index >= 0 && ids [index] != 0) {", "+\t\t\t\t\tint rc = -1;", "+\t\t\t\t\tif (columnCount == 0) {", "+\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, rect);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfor (int i = 0; i < columnCount && rc != OS.noErr; i++) {", "+\t\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, rect);\t\t\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (rc == OS.noErr) {", "+\t\t\t\t\t\trect1.width = clientWidth;", "+\t\t\t\t\t\trect1.x = clientX;", "+\t\t\t\t\t\trect1.height = rect1.y + rect1.height - rect.bottom;", "+\t\t\t\t\t\trect1.y = rect.bottom;", "+\t\t\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfillBackground (handle, paintGC.handle, rect1);", "+\t\t\t}", "+\t\t}", "+\t}", "+\tdrawItem = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994c87ed0292e878aec480e0db4037f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c2e5c64fa87cfa0b743787ab3aab15475f91a858", "commitAfterChange": "67d9ca7e27e6eb82fa90d30cd3be710a772bdfe3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "signatureAfterChange": "  int callPaintEventHandler (int control, int damageRgn, int visibleRgn, int theEvent, int nextHandler)", "diff": ["+\tdrawBackground = OS.HIVIEW && findBackgroundControl () != null;", "-\tif (OS.HIVIEW) {", "-\t\tControl widget = findBackgroundControl ();", "-\t\tif (widget != null) {", "-\t\t\tRectangle rect = getClientArea ();", "-\t\t\tif (getItemCount () != 0 && childIds != null) {", "-\t\t\t\tint [] ids = childIds, state = new int [1];", "-\t\t\t\tint index = ids.length - 1;", "-\t\t\t\twhile (true) {", "-\t\t\t\t\twhile (index >= 0 && ids [index] == 0) index--;", "-\t\t\t\t\tif (index < 0) break;", "-\t\t\t\t\tOS.GetDataBrowserItemState (handle, ids [index], state);", "-\t\t\t\t\tif ((state [0] & OS.kDataBrowserContainerIsOpen) != 0) {", "-\t\t\t\t\t\tTreeItem item = items [ids [index] - 1];", "-\t\t\t\t\t\tif (item != null && item.childIds != null) {", "-\t\t\t\t\t\t\tids = item.childIds;", "-\t\t\t\t\t\t\tindex = ids.length - 1;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tif (index >= 0 && ids [index] != 0) {", "-\t\t\t\t\tint rc = -1;", "-\t\t\t\t\tRect itemRect = new Rect();", "-\t\t\t\t\tif (columnCount == 0) {", "-\t\t\t\t\t\trc = OS.GetDataBrowserItemPartBounds (handle, ids [index], column_id, OS.kDataBrowserPropertyEnclosingPart, itemRect);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tfor (int i = 0; i < columnCount; i++) {", "-\t\t\t\t\t\t\tif ((rc = OS.GetDataBrowserItemPartBounds (handle, ids [index], columns [i].id, OS.kDataBrowserPropertyEnclosingPart, itemRect)) == OS.noErr) {", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (rc == OS.noErr) {", "-\t\t\t\t\t\trect.height = rect.y + rect.height - itemRect.bottom;", "-\t\t\t\t\t\trect.y = itemRect.bottom;", "-\t\t\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tint headerHeight = getHeaderHeight ();", "-\t\t\t\trect.y += headerHeight;", "-\t\t\t\trect.height -= headerHeight;", "-\t\t\t\tfillBackground (handle, paintGC.handle, rect);", "-\t\t\t}", "-\t\t}", "+\tif (getItemCount () == 0 && drawBackground) {", "+\t\tdrawBackground = false;", "+\t\tRectangle rect = getClientArea ();", "+\t\tint headerHeight = getHeaderHeight ();", "+\t\trect.y += headerHeight;", "+\t\trect.height -= headerHeight;", "+\t\tfillBackground (handle, paintGC.handle, rect);"]}], "num": 5718}