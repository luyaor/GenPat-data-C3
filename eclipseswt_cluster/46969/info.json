{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "374c447d3174b547218b3b96da125f9e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5906f71a3c08106846cf0da56d3a906", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleType.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate AccessibleType ()", "signatureAfterChange": " \t \tAccessibleType (byte[] typeName, int parentType)", "diff": ["-\tprivate AccessibleType () {", "+\tAccessibleType (byte[] typeName, int parentType) {", "-\t\tint parentType = OS.g_type_from_name (Converter.wcsToMbcs (null, PARENT_TYPE_NAME, true));", "+\t\tthis.parentType = parentType;", "-\t\tgTypeInfo_base_init = new Callback (this, \"gTypeInfo_base_init\", 1);", "-\t\tOS.memmove (objectDefinition, typeInfo, GTypeInfo.sizeof);", "-\t\tbyte[] name = Converter.wcsToMbcs (null, ACCESSIBLE_TYPE_NAME, true);", "-\t\thandle = OS.g_type_register_static (parentType, name, objectDefinition, 0);", "-\t\t// add Action interface", "-\t\tGInterfaceInfo interfaceInfo = new GInterfaceInfo ();", "-\t\tinitActionIfaceCB = new Callback (this, \"initActionIfaceCB\", 1);", "-\t\tinterfaceInfo.interface_init = initActionIfaceCB.getAddress ();", "-\t\tactionIfaceDefinition = OS.g_malloc (GInterfaceInfo.sizeof);  ", "-\t\tOS.memmove (actionIfaceDefinition, interfaceInfo, GInterfaceInfo.sizeof);", "-\t\tOS.g_type_add_interface_static (handle, ATK_ACTION_TYPE, actionIfaceDefinition);", "-\t\t// add Component interface", "-\t\tinterfaceInfo = new GInterfaceInfo ();", "-\t\tinitComponentIfaceCB = new Callback (this, \"initComponentIfaceCB\", 1);", "-\t\tinterfaceInfo.interface_init = initComponentIfaceCB.getAddress ();", "-\t\tcomponentIfaceDefinition = OS.g_malloc (GInterfaceInfo.sizeof);", "-\t\tOS.memmove (componentIfaceDefinition, interfaceInfo, GInterfaceInfo.sizeof);", "+\t\tOS.memmove (objectDefinition, typeInfo, GTypeInfo.sizeof); ", "+\t\thandle = OS.g_type_register_static (parentType, typeName, objectDefinition, 0);", "-\t\t// add Selection interface", "-\t\tinterfaceInfo = new GInterfaceInfo ();", "-\t\tinitSelectionIfaceCB = new Callback (this, \"initSelectionIfaceCB\", 1);", "-\t\tinterfaceInfo.interface_init = initSelectionIfaceCB.getAddress ();", "-\t\tselectionIfaceDefinition = OS.g_malloc (GInterfaceInfo.sizeof);  ", "-\t\tOS.memmove (selectionIfaceDefinition, interfaceInfo, GInterfaceInfo.sizeof);", "+\t\tOS.g_type_add_interface_static (handle, ATK_ACTION_TYPE, actionIfaceDefinition);", "-\t\t// add Text interface", "-\t\tinterfaceInfo = new GInterfaceInfo ();", "-\t\tinitTextIfaceCB = new Callback (this, \"initTextIfaceCB\", 1);", "-\t\tinterfaceInfo.interface_init = initTextIfaceCB.getAddress ();", "-\t\ttextIfaceDefinition = OS.g_malloc (GInterfaceInfo.sizeof);  ", "-\t\tOS.memmove (textIfaceDefinition, interfaceInfo, GInterfaceInfo.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f80f4243c2a4cd43d36bc1540eb2abf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tint createFactory (byte[] name)", "signatureAfterChange": " \t \tstatic int defineType (byte[] typeName, int parentType)", "diff": ["-\tint createFactory (byte[] name) {", "-\t\tint parent = ATK.g_type_from_name (Converter.wcsToMbcs (null, FACTORY_PARENTTYPE, true));", "-\t\tgTypeInfoCB_base_init  = new Callback (this, \"gTypeInfo_base_init\", 1);", "+\tstatic int defineType (byte[] typeName, int parentType) {", "+\t\tint queryPtr = OS.g_malloc (GTypeQuery.sizeof);", "+\t\tATK.g_type_query (parentType, queryPtr);", "+\t\tGTypeQuery query = new GTypeQuery ();", "+\t\tATK.memmove (query, queryPtr, GTypeQuery.sizeof);", "+\t\tOS.g_free (queryPtr);", "-\t\ttypeInfo.base_init = gTypeInfoCB_base_init.getAddress ();", "-\t\ttypeInfo.class_size = ATK.AtkObjectFactoryClass_sizeof ();", "-\t\ttypeInfo.instance_size = ATK.AtkObjectFactory_sizeof ();", "-\t\thandle = OS.g_malloc (GTypeInfo.sizeof); ", "-\t\tATK.memmove (handle, typeInfo, GTypeInfo.sizeof); ", "-\t\treturn ATK.g_type_register_static (parent, name, handle, 0);", "+\t\ttypeInfo.base_init = GTypeInfo_base_init_type.getAddress ();", "+\t\ttypeInfo.class_size = (short) query.class_size;", "+\t\ttypeInfo.instance_size = (short) query.instance_size;", "+\t\tObjectIfaceDefinition = OS.g_malloc (GTypeInfo.sizeof); ", "+\t\tATK.memmove (ObjectIfaceDefinition, typeInfo, GTypeInfo.sizeof); ", "+\t\tint result = ATK.g_type_register_static (parentType, typeName, ObjectIfaceDefinition, 0);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_COMPONENT_TYPE, ComponentIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_ACTION_TYPE, ActionIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_SELECTION_TYPE, SelectionIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_TEXT_TYPE, TextIfaceDefinition);", "+\t\treturn result;"]}], "num": 46969}