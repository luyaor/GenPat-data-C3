{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0799a750948a1697791e29d0181df270", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ac49eb1e0ec3d6f3898b03cbb6a26b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "051f9932db69347a518cacecaed2566aaea2c54c", "commitAfterChange": "dce0d4963f506564c3b3269b3ef505b877c310ae", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r\tvoid createWidgets()", "signatureAfterChange": "\r \r \tvoid createWidgets()", "diff": ["-\r\tvoid createWidgets() {\r", "+\r", "+\tvoid createWidgets() {\r", "-\r\t\t// Separate the menu bar from the rest of the widgets.\r", "+\r", "+\t\t// Separate the menu bar from the rest of the widgets.\r", "-\r\t\t// Check box to request transparent display.\r", "+\r", "+\t\t// Check box to request transparent display.\r", "-\r\t\t// Check box to request mask display.\r", "+\r", "+\t\t// Check box to request mask display.\r", "-\r\t\t// Check box to request background display.\r", "+\r", "+\t\t// Check box to request background display.\r", "-\r\t\t// Group the animation buttons.\r", "+\r", "+\t\t// Group the animation buttons.\r", "-\r\t\t// Push button to display the previous image in a multi-image file.\r", "+\r", "+\t\t// Push button to display the previous image in a multi-image file.\r", "-\r\t\t// Push button to display the next image in a multi-image file.\r", "+\r", "+\t\t// Push button to display the next image in a multi-image file.\r", "-\r\t\t// Push button to toggle animation of a multi-image file.\r", "+\r", "+\t\t// Push button to toggle animation of a multi-image file.\r", "-\r\t\t// Label to show the image file type.\r", "+\r", "+\t\t// Label to show the image file type.\r", "-\r\t\t// Canvas to show the image.\r", "+\r", "+\t\t// Canvas to show the image.\r", "-\r\t\t// Set up the image canvas scroll bars.\r", "+\r", "+\t\t// Set up the image canvas scroll bars.\r", "-\r\t\t// Label to show the image size.\r", "+\r", "+\t\t// Label to show the image size.\r", "-\r\t\t// Label to show the image depth.\r", "+\r", "+\t\t// Label to show the image depth.\r", "-\r\t\t// Label to show the transparent pixel.\r", "+\r", "+\t\t// Label to show the transparent pixel.\r", "-\r\t\t// Label to show the image disposal method.\r", "+\r", "+\t\t// Label to show the image disposal method.\r", "-\r\t\t// Label to show the image delay time.\r", "+\r", "+\t\t// Label to show the image delay time.\r", "-\r\t\t// Label to show the background pixel.\r", "+\r", "+\t\t// Label to show the background pixel.\r", "-\r\t\t// Label to show if the image has a direct or indexed palette.\r", "+\r", "+\t\t// Label to show if the image has a direct or indexed palette.\r", "-\r\t\t// Canvas to show the image's palette.\r", "+\r", "+\t\t// Canvas to show the image's palette.\r", "-\r\t\t// Set up the palette canvas scroll bar.\r", "+\r", "+\t\t// Set up the palette canvas scroll bar.\r", "-\r\t\t// Sash to see more of image or image data.\r", "+\r", "+\t\t// Sash to see more of image or image data.\r", "-\t\tdataText = new Text(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.H_SCROLL);\r", "+\t\tdataText = new StyledText(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.H_SCROLL);\r", "+\t\tdataText.setBackground(display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "569d25e61dd99cddfef39b0566f1dc0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d01483795b52a8ebdc68856f4d0cd446008af5ef", "commitAfterChange": "b197f62ec22ad44f999a260fe5e1eb5b1a19c46b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\tif (System.getProperty (XULRUNNER_INITIALIZED) != null) {", "+\t\t\tString xulrunnerInitialized = System.getProperty (XULRUNNER_INITIALIZED); ", "+\t\t\tif (\"true\".equals (xulrunnerInitialized)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12959ef4cafb133eb8ef2691bebb35ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CoolBarTab.java", "commitBeforeChange": "7881c9403ea1dd06d9382371b03b6f738d08696a", "commitAfterChange": "a5f3d896a0552e8d2027982eeac1d90aabbd97bd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["+\t\tif (flatButton.getSelection()) style |= SWT.FLAT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77d83e4d6e267fe0a6a667ea9c180c29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "7fa54d9880750a20e61e8f9ee492a63154217d64", "commitAfterChange": "7333726491b87df53438e50b9deb93984d797f74", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t/* nsIAppShell is discontinued as of xulrunner 1.9, so do not fail if it is not found */", "-\t\trc = componentManager.CreateInstance (XPCOM.NS_APPSHELL_CID, 0, nsIAppShell.NS_IAPPSHELL_IID, result);", "-\t\tif (rc != XPCOM.NS_ERROR_NO_INTERFACE) {", "-\t\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (rc);", "+\t\tif (delegate.needsSpinup ()) {", "+\t\t\t/* nsIAppShell is discontinued as of xulrunner 1.9, so do not fail if it is not found */", "+\t\t\trc = componentManager.CreateInstance (XPCOM.NS_APPSHELL_CID, 0, nsIAppShell.NS_IAPPSHELL_IID, result);", "+\t\t\tif (rc != XPCOM.NS_ERROR_NO_INTERFACE) {", "+\t\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (rc);", "+\t\t\t\t}", "+\t\t\t\tif (result[0] == 0) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (XPCOM.NS_NOINTERFACE);", "+\t\t\t\t}", "+\t", "+\t\t\t\tAppShell = new nsIAppShell (result[0]);", "+\t\t\t\trc = AppShell.Create (0, null);", "+\t\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (rc);", "+\t\t\t\t}", "+\t\t\t\trc = AppShell.Spinup ();", "+\t\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (rc);", "+\t\t\t\t}", "-\t\t\tif (result[0] == 0) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (XPCOM.NS_NOINTERFACE);", "-\t\t\t}", "-", "-\t\t\tAppShell = new nsIAppShell (result[0]);", "-\t\t\trc = AppShell.Create (0, null);", "-\t\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (rc);", "-\t\t\t}", "-\t\t\trc = AppShell.Spinup ();", "-\t\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (rc);", "-\t\t\t}", "+\t\t\tresult[0] = 0;", "-\t\tresult[0] = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edf33b892f40de1666f6930a24f06e84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "2b489aa5c5c7a18540a0f09d7b72f3a6244070d2", "commitAfterChange": "589dae5887719a2cc80e0bc07401736da4493b31", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void handleDOMEvent (OleEvent e)", "signatureAfterChange": "  void handleDOMEvent (OleEvent e)", "diff": ["+", "+\t\t/*", "+\t\t* Pressing F5 refreshes the current page.  If this is about to happen", "+\t\t* then set isRefresh to true so that received IE events will be treated", "+\t\t* accordingly.", "+\t\t*/", "+\t\tif (lastKeyCode == SWT.F5) isRefresh = true;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e322bf07f8587aa054fc547a9179825", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "eb69d8ee300770e6dab41b174fcbe32bc6ff3664", "commitAfterChange": "6acf1851f3c6b366f64d9299cba476715a98fb74", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  final void initializeSystemColors()", "signatureAfterChange": "  final void initializeSystemColors()", "diff": ["-\tGtkStyle style = new GtkStyle(OS.gtk_widget_get_style (shellHandle));", "+\tGtkStyle style = new GtkStyle();", "+\tOS.memmove (style, OS.gtk_widget_get_style (shellHandle));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d79d10f0df4143d690ee5cc944df54b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "618f2e44996c4c84729e1a29ba5b89ee13a82997", "commitAfterChange": "33eb35377a29390284bccc0a9bbd5d8e5f89c0ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\t\tLibrary.loadLibrary (\"swt-xpcominit\"); //$NON-NLS-1$", "+\t\t\t\tString libName = delegate.getSWTInitLibraryName ();", "+\t\t\t\tLibrary.loadLibrary (libName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66b17ceedf5025e1f34b59226eae569", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "116a55613945296869ddcf58a72c851d9ca1da17", "commitAfterChange": "5f07cdb515b7ac5e90ad6f9704a5b2dcc739baea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\tLocationProvider.setComponentsPath (componentsDir.getAbsolutePath ());", "+\t\t\tif (componentsDir.exists () && componentsDir.isDirectory ()) {", "+\t\t\t\tLocationProvider.setComponentsPath (componentsDir.getAbsolutePath ());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7e3943f0cd571732ef67351869285c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "412339a3684c759d644a6490a0aeee3e65a9f6b8", "commitAfterChange": "db2d946a7c6ecb566ffb28e8bf4f645d9076034a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  final void initializeSystemColors()", "signatureAfterChange": "  final void initializeSystemResources()", "diff": ["-final void initializeSystemColors() {", "+final void initializeSystemResources() {", "+\t", "+\tdefaultFont = OS.pango_font_description_copy (style.font_desc);"]}], "num": 11630}