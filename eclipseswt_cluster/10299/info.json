{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9545fbfb24684e98b9e24791a270431a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32abc2aeb6147147bc728c691283be2e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "78b56da73aaece31c0684550745b7a7104823835", "commitAfterChange": "cf742db20509b38d927ca9256380eb34e3e40548", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  LRESULT wmMeasureChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmMeasureChild (int wParam, int lParam)", "diff": ["-\t\t* Bug in Windows.  When a menu item has a check and a string", "-\t\t* that includes a label and accelerator text but does not have", "-\t\t* a bitmap, when the string is the longest string in the menu,", "-\t\t* the label and accelerator text overlap.  The fix is to use", "-\t\t* SetMenuItemInfo() to indicate that the item has a bitmap", "-\t\t* and then answer the width of the widest bitmap in the menu", "-\t\t* from WM_MEASURECHILD.", "+\t\t* Bug in Windows.  If a menu contains items that have", "+\t\t* images and can be checked, Windows does not include", "+\t\t* the width of the image and the width of the check when", "+\t\t* computing the width of the menu.  When the longest item", "+\t\t* does not have an image, the label and the accelerator", "+\t\t* text can overlap.  The fix is to use SetMenuItemInfo()", "+\t\t* to indicate that all items have a bitmap and then include", "+\t\t* the width of the widest bitmap in WM_MEASURECHILD.", "-\t\tif ((style & (SWT.CHECK | SWT.RADIO)) != 0) {", "+\t\tMENUINFO lpcmi = new MENUINFO ();", "+\t\tlpcmi.cbSize = MENUINFO.sizeof;", "+\t\tlpcmi.fMask = OS.MIM_STYLE;", "+\t\tint hMenu = parent.handle;", "+\t\tOS.GetMenuInfo (hMenu, lpcmi);", "+\t\tif ((lpcmi.dwStyle & OS.MNS_CHECKORBMP) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ec87d764ac51364273ffb648a96f48c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "af35bb868ce7a4db640d728af68bfb767fa4e09f", "commitAfterChange": "a1b6110a7c4d57ed7e255ff1bd265349917f369d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r public Point getSize()", "signatureAfterChange": "\r \r public Point getSize()", "diff": ["-\tRECT rect = new RECT ();\r", "-\tOS.SendMessage (hwnd, OS.RB_GETRECT, index, rect);\r", "-\tint width = rect.right - rect.left;\r", "-\tint height = rect.bottom - rect.top;\r", "+\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "+\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "+\trbBand.fMask = OS.RBBIM_SIZE | OS.RBBIM_CHILDSIZE;\r", "+\tOS.SendMessage (hwnd, OS.RB_GETBANDINFO, index, rbBand);\r", "+\tint width = rbBand.cx;\r", "+\tint height = rbBand.cyMinChild;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68823b62cb2e01ea6e18605dab6cb339", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "51679f5c32d1d48aff5141a09ce7fb9ce76b4fee", "commitAfterChange": "2be6a11dda5a9cd6772ade27e9b3fa8b2073da36", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public Point [] getItemSizes ()", "signatureAfterChange": "\r public Point [] getItemSizes ()", "diff": ["+\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "+\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "+\trbBand.fMask = OS.RBBIM_CHILDSIZE;\r", "-\t\tsizes [i] = new Point (rect.right - rect.left + 2, rect.bottom - rect.top);\r", "+\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "+\t\tsizes [i] = new Point (rect.right - rect.left + 2, rbBand.cyChild);\r"]}], "num": 10299}