{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e3e3e834331ec420ddbc0aa8335aa76", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1fe919943d7842b55dcbf2ec3d7b70b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java", "commitBeforeChange": "2cc7d30698448c6df09a70c69839e5a3830f9bc0", "commitAfterChange": "ca8346412189df48223ba59c33b21708729a1c0e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "\t \tvoid createControlGroup ()", "signatureAfterChange": "\t \tvoid createControlGroup()", "diff": ["-\tvoid createControlGroup () {", "-\t\tcontrolGroup = new Group (sash, SWT.NONE);", "-\t\tcontrolGroup.setText (LayoutExample.getResourceString(\"Parameters\"));", "-\t\tGridLayout layout = new GridLayout ();", "-\t\tlayout.numColumns = 2;", "-\t\tcontrolGroup.setLayout (layout);", "-\t\tsize = new Button (controlGroup, SWT.CHECK);", "-\t\tsize.setText (LayoutExample.getResourceString (\"Preferred_Size\"));", "-\t\tsize.setSelection (false);", "-\t\tsize.addSelectionListener (new SelectionAdapter () {", "-\t\t\tpublic void widgetSelected (SelectionEvent e) {", "-\t\t\t\tresetEditors ();", "-\t\t\t\tif (size.getSelection ()) {", "-\t\t\t\t\tlayoutComposite.setLayoutData (new GridData ());", "-\t\t\t\t\tlayoutGroup.layout (true);", "+\tvoid createControlGroup() {", "+\t\tcontrolGroup = new Group(sash, SWT.NONE);", "+\t\tcontrolGroup.setText(LayoutExample.getResourceString(\"Parameters\"));", "+\t\tGridLayout layout = new GridLayout(2, true);", "+\t\tlayout.horizontalSpacing = 10;", "+\t\tcontrolGroup.setLayout(layout);\t\t", "+\t\tfinal Button preferredButton = new Button(controlGroup, SWT.CHECK);", "+\t\tpreferredButton.setText(LayoutExample.getResourceString(\"Preferred_Size\"));", "+\t\tpreferredButton.setSelection (false);", "+\t\tpreferredButton.addSelectionListener(new SelectionAdapter() {", "+\t\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\t\tresetEditors();", "+\t\t\t\tGridData data = (GridData)layoutComposite.getLayoutData();", "+\t\t\t\tif (preferredButton.getSelection()) {", "+\t\t\t\t\tdata.heightHint = data.widthHint = SWT.DEFAULT;\t", "+\t\t\t\t\tdata.verticalAlignment = data.horizontalAlignment = 0;", "+\t\t\t\t\tdata.grabExcessVerticalSpace = data.grabExcessHorizontalSpace = false;", "-\t\t\t\t\tlayoutComposite.setLayoutData (new GridData (GridData.FILL_BOTH));", "-\t\t\t\t\tlayoutGroup.layout (true);", "+\t\t\t\t\tdata.verticalAlignment = data.horizontalAlignment = SWT.FILL;", "+\t\t\t\t\tdata.grabExcessVerticalSpace = data.grabExcessHorizontalSpace = true;", "+\t\t\t\tlayoutComposite.setLayoutData(data);", "+\t\t\t\tlayoutGroup.layout(true);", "-\t\tGridData data = new GridData (GridData.FILL_HORIZONTAL);", "-\t\tdata.horizontalSpan = 2;", "-\t\tsize.setLayoutData (data);", "-\t\tcreateControlWidgets ();", "+\t\tpreferredButton.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 2, 1));\t", "+\t\tcreateControlWidgets();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dec278e289d9d3eca485701736a3afc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "b359f2d0032c96b15a2c3d9d82c6d98c74db760b", "commitAfterChange": "406c8c992cf65a539972fff86f32349d8393b97b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int convertRgn(int message, int rgn, int r, int newRgn)", "signatureAfterChange": "  int convertRgn(int message, int rgn, int r, int newRgn)", "diff": ["-\t\tNSPoint point = new NSPoint(); ", "-\t\tint /*long*/ polyRgn = OS.NewRgn();", "-\t\tOS.OpenRgn();", "+\t\tint i = 0;", "+\t\tNSPoint point = new NSPoint();", "+\t\tint[] points = new int[10];", "-\t\tOS.MoveTo(startX = (short)point.x, startY = (short)point.y);", "+\t\tpoints[i++] = startX = (short)point.x;", "+\t\tpoints[i++] = startY = (short)point.y;", "-\t\tOS.LineTo((short)Math.round(point.x), (short)point.y);", "+\t\tpoints[i++] = (short)Math.round(point.x);", "+\t\tpoints[i++] = (short)point.y;", "-\t\tOS.LineTo((short)Math.round(point.x), (short)Math.round(point.y));", "+\t\tpoints[i++] = (short)Math.round(point.x);", "+\t\tpoints[i++] = (short)Math.round(point.y);", "-\t\tOS.LineTo((short)point.x, (short)Math.round(point.y));", "-\t\tOS.LineTo(startX, startY);", "-\t\tOS.CloseRgn(polyRgn);", "+\t\tpoints[i++] = (short)point.x;", "+\t\tpoints[i++] = (short)Math.round(point.y);", "+\t\tpoints[i++] = startX;", "+\t\tpoints[i++] = startY;", "+\t\tint /*long*/ polyRgn = polyRgn(points, points.length);"]}], "num": 17402}