{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "283133eba3b8dfe81de5afa733387965", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d45d6cc66ceba333977967c35b21b7e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "cac6973b2c58ca0acd4675b42eb96193c2a77ffe", "commitAfterChange": "bb6359af4f45e12393d67d626b7c45734cc22977", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 382, "signatureBeforeChange": " \tboolean interesting(GUID guid)", "signatureAfterChange": "  \tboolean interesting(GUID guid)", "diff": ["-\t// ---------------------- START TEMPORARY DEBUG CODE", "-\tboolean interesting(GUID guid) {", "-\t\t//if (COM.IsEqualGUID(guid, COM.IIDIUnknown)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIEnumVARIANT)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIServiceProvider)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible2)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleRelation)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleAction)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleComponent)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleValue)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleText)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleEditableText)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHyperlink)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHypertext)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable2)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTableCell)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleImage)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleApplication)) return true;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleContext)) return true;", "-\t\treturn false;", "-\t}", "+", "+\tboolean interesting(GUID guid) {", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIEnumVARIANT)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIServiceProvider)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible2)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleRelation)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleAction)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleComponent)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleValue)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleText)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleEditableText)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHyperlink)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHypertext)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable2)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTableCell)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleImage)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleApplication)) return true;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleContext)) return true;", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "946d0261df3350cf11ac60f73ca4ebb4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "b1df683a63ba731de0add93dda58ad190689d7cb", "commitAfterChange": "01b9002aa980befd0c51529f45e05b950166ae2b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void addEventHandlers (boolean top)", "signatureAfterChange": "  void addEventHandlers (int web_view, boolean top)", "diff": ["-void addEventHandlers (boolean top) {", "+void addEventHandlers (int /*long*/ web_view, boolean top) {", "+\tif (top && HasDOMAPI) {", "+\t\tint /*long*/ domDocument = WebKitGTK.webkit_web_view_get_dom_document (web_view);", "+\t\tif (domDocument != 0) {", "+\t\t\tWindowMappings.put (new LONG (domDocument), new LONG (web_view));", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.dragstart, JSDOMEventProc.getAddress (), 0, SWT.DragDetect);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.keydown, JSDOMEventProc.getAddress (), 0, SWT.KeyDown);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.keypress, JSDOMEventProc.getAddress (), 0, SENTINEL_KEYPRESS);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.keyup, JSDOMEventProc.getAddress (), 0, SWT.KeyUp);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.mousedown, JSDOMEventProc.getAddress (), 0, SWT.MouseDown);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.mousemove, JSDOMEventProc.getAddress (), 0, SWT.MouseMove);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.mouseup, JSDOMEventProc.getAddress (), 0, SWT.MouseUp);", "+\t\t\tWebKitGTK.webkit_dom_event_target_add_event_listener (domDocument, WebKitGTK.mousewheel, JSDOMEventProc.getAddress (), 0, SWT.MouseWheel);", "+", "+\t\t\t/*", "+\t\t\t* The following two lines are intentionally commented because they cannot be used to", "+\t\t\t* consistently send MouseEnter/MouseExit events until https://bugs.webkit.org/show_bug.cgi?id=35246", "+\t\t\t* is fixed.", "+\t\t\t*/ ", "+\t\t\t//WebKitGTK.webkit_dom_event_target_add_event_listener (domWindow, WebKitGTK.mouseover, JSDOMEventProc.getAddress (), 0, SWT.MouseEnter);", "+\t\t\t//WebKitGTK.webkit_dom_event_target_add_event_listener (domWindow, WebKitGTK.mouseout, JSDOMEventProc.getAddress (), 0, SWT.MouseExit);", "+\t\t}", "+\t\treturn;", "+\t}", "+", "+\t/* install the JS call-out to the registered BrowserFunction */", "+\tStringBuffer buffer = new StringBuffer (\"window.SWTkeyhandler = function SWTkeyhandler(e) {\"); //$NON-NLS-1$", "+\tbuffer.append (\"try {e.returnValue = HandleWebKitEvent(e.type, e.keyCode, e.charCode, e.altKey, e.ctrlKey, e.shiftKey, e.metaKey);} catch (e) {}};\"); //$NON-NLS-1$", "+\texecute (buffer.toString ());", "+\tbuffer = new StringBuffer (\"window.SWTmousehandler = function SWTmousehandler(e) {\"); //$NON-NLS-1$", "+\tbuffer.append (\"try {e.returnValue = HandleWebKitEvent(e.type, e.screenX, e.screenY, e.detail, e.button, e.altKey, e.ctrlKey, e.shiftKey, e.metaKey, e.relatedTarget != null);} catch (e) {}};\"); //$NON-NLS-1$", "+\texecute (buffer.toString ());", "+", "-\t\tStringBuffer buffer = new StringBuffer (\"window.SWTkeyhandler = function SWTkeyhandler(e) {\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"try {e.returnValue = HandleWebKitEvent(e.type, e.keyCode, e.charCode, e.altKey, e.ctrlKey, e.shiftKey, e.metaKey);} catch (e) {}};\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"document.addEventListener('keydown', SWTkeyhandler, true);\"); //$NON-NLS-1$", "+\t\t/* DOM API is not available, so add listener to top-level document */", "+\t\tbuffer = new StringBuffer (\"document.addEventListener('keydown', SWTkeyhandler, true);\"); //$NON-NLS-1$", "-\t\texecute (buffer.toString ());", "-", "-\t\tbuffer = new StringBuffer (\"window.SWTmousehandler = function SWTmousehandler(e) {\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"try {e.returnValue = HandleWebKitEvent(e.type, e.screenX, e.screenY, e.detail, e.button + 1, e.altKey, e.ctrlKey, e.shiftKey, e.metaKey, e.relatedTarget != null);} catch (e) {}};\"); //$NON-NLS-1$", "-\t} else {", "-\t\tStringBuffer buffer = new StringBuffer (\"for (var i = 0; i < frames.length; i++) {\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('keydown', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('keypress', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('keyup', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mousedown', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mouseup', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mousemove', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mouseover', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mouseout', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('mousewheel', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append (\"frames[i].document.addEventListener('dragstart', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "-\t\tbuffer.append ('}');", "-\t\texecute (buffer.toString ());", "+\t\treturn;", "+", "+\t/* add JS event listener in frames */", "+\tbuffer = new StringBuffer (\"for (var i = 0; i < frames.length; i++) {\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('keydown', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('keypress', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('keyup', window.SWTkeyhandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mousedown', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mouseup', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mousemove', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mouseover', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mouseout', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('mousewheel', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append (\"frames[i].document.addEventListener('dragstart', window.SWTmousehandler, true);\"); //$NON-NLS-1$", "+\tbuffer.append ('}');", "+\texecute (buffer.toString ());"]}], "num": 6022}