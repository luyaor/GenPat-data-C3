{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35a0cc845dd69f93c3bbad1a944c258a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb78133cfaa533c9958ce477610c7ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "87330b10800601c0b12e6edda61ce1010ad6b657", "commitAfterChange": "f8d214632226fe30e5dedb11397a3be1f8629823", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = channel.GetURI (result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "-\t\t\tchannel.Release ();", "+\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "+\t\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = channel.GetURI (result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NULL_POINTER);", "+\t\t\t\tchannel.Release ();", "-\t\t\tnsIURI uri = new nsIURI (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "-\t\t\trc = uri.GetSpec (aSpec);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "-\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "-\t\t\tbyte[] bytes = new byte[length];", "-\t\t\tXPCOM.memmove (bytes, buffer, length);", "-\t\t\tlastNavigateURL = new String (bytes);", "-\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "-\t\t\turi.Release ();", "+\t\t\t\tnsIURI uri = new nsIURI (result[0]);", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "+\t\t\t\trc = uri.GetSpec (aSpec);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tint length = XPCOM.nsEmbedCString_Length (aSpec);", "+\t\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "+\t\t\t\tbyte[] bytes = new byte[length];", "+\t\t\t\tXPCOM.memmove (bytes, buffer, length);", "+\t\t\t\tlastNavigateURL = new String (bytes);", "+\t\t\t\tXPCOM.nsEmbedCString_delete (aSpec);", "+\t\t\t\turi.Release ();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30428024cef1f576d1f09a8fc97107b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "caa84d2b9df2c3b9eedb5f86a4ec38796c3a6c51", "commitAfterChange": "1a91a0641b6efab2fd52bee03ca0dd6d01f80e4e", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  void hookDOMListeners ()", "signatureAfterChange": "  void hookDOMListeners (nsIDOMEventTarget target, boolean isTop)", "diff": ["-", "-void hookDOMListeners () {", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = webBrowser.GetContentDOMWindow (result);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "-\tresult[0] = 0;", "-\trc = window.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "-\tresult[0] = 0;", "-\thookDOMListeners (target, true);", "-\ttarget.Release ();", "-", "-\t/* Listeners must be hooked in pages contained in frames */", "-\trc = window.GetFrames (result);", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-\tnsIDOMWindowCollection frames = new nsIDOMWindowCollection (result[0]);", "-\tresult[0] = 0;", "-\tint[] frameCount = new int[1];", "-\trc = frames.GetLength (frameCount); /* PRUint32 */", "-\tif (rc != XPCOM.NS_OK) error (rc);", "-\tint count = frameCount[0];", "-", "-\tif (count > 0) {", "-\t\tfor (int i = 0; i < count; i++) {", "-\t\t\trc = frames.Item (i, result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\t\t\tnsIDOMWindow frame = new nsIDOMWindow (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\trc = frame.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\t\t\ttarget = new nsIDOMEventTarget (result[0]);", "-\t\t\tresult[0] = 0;", "-\t\t\thookDOMListeners (target, false);", "-\t\t\ttarget.Release ();", "-\t\t\tframe.Release ();", "-\t\t}", "-\t}", "-\tframes.Release ();", "-\twindow.Release ();"]}], "num": 51817}