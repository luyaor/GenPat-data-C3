{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23afe825a2d246951191cfe72c02539c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb574a1bc1b88b73762398ab02c999d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Rectangle.java", "commitBeforeChange": "14847fc50ac21dbfae0a2bd75c455ca661cd2bd0", "commitAfterChange": "db1f6bc7e04f75d6fd9d429b8b4d02d4787e43d9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void test_intersectLorg_eclipse_swt_graphics_Rectangle()", "signatureAfterChange": "  public void test_intersectLorg_eclipse_swt_graphics_Rectangle()", "diff": ["-\twarnUnimpl(\"Test test_intersectLorg_eclipse_swt_graphics_Rectangle not written\");", "+\tRectangle r1 = new Rectangle(1, 2, 3, 4);", "+\tRectangle r2 = new Rectangle(3, 3, 2, 2);", "+\t", "+\tr1.intersect(r2);", "+\tassertEquals(\"Rectangle intersect incorrect\", new Rectangle(3, 3, 1, 2), r1);", "+", "+\tr1 = new Rectangle(1, 2, 3, 4);", "+\tr2 = new Rectangle(3, 3, 0, 0);", "+\tr1.intersect(r2);", "+\tassertEquals(\"Rectangle intersect incorrect\", new Rectangle(3, 3, 0, 0), r1);", "+", "+\tr1 = new Rectangle(1, 2, 3, 4);", "+\tr2 = new Rectangle(3, 3, -1, -1);", "+\tr1.intersect(r2);", "+\tassertEquals(\"Rectangle intersect incorrect\", new Rectangle(0, 0, 0, 0), r1);", "+", "+\ttry {", "+\t\tr1.intersect(null);", "+\t\tfail(\"No exception thrown for rectangle == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for rectangle == null\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c95eee7ccb4469cad9b55ff1e73ae2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Rectangle.java", "commitBeforeChange": "14847fc50ac21dbfae0a2bd75c455ca661cd2bd0", "commitAfterChange": "db1f6bc7e04f75d6fd9d429b8b4d02d4787e43d9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test_intersectsIIII()", "signatureAfterChange": "  public void test_intersectsIIII()", "diff": ["-\twarnUnimpl(\"Test test_intersectsIIII not written\");", "+\tRectangle r1 = new Rectangle(1, 2, 3, 4);", "+\tRectangle r2 = new Rectangle(2, 3, 7, 8);", "+\tassertTrue(\"Rectangle(1, 2, 3, 4) should intersect Rectangle(2, 3, 7, 8)\", r1.intersects(2, 3, 7, 8));", "+\tassertTrue(\"Rectangle(2, 3, 7, 8) should intersect Rectangle(1, 2, 3, 4)\", r2.intersects(1, 2, 3, 4));", "+", "+\tr2 = new Rectangle(200, 300, 400, 500);", "+\tassertTrue(\"Rectangle(1, 2, 3, 4) should not intersect Rectangle(200, 300, 400, 500)\", !r1.intersects(200, 300, 400, 500));", "+\tassertTrue(\"Rectangle(200, 300, 400, 500) should not intersect Rectangle(1, 2, 3, 4)\", !r2.intersects(1, 2, 3, 4));", "+\t", "+\tr2 = new Rectangle(3, 3, 0, 0);", "+\tassertTrue(\"Rectangle(1, 2, 3, 4) should intersect Rectangle(3, 3, 0, 0)\", r1.intersects(3, 3, 0, 0));", "+\tassertTrue(\"Rectangle(3, 3, 0, 0) should intersect Rectangle(1, 2, 3, 4)\", r2.intersects(1, 2, 3, 4));", "+", "+\tr2 = new Rectangle(3, 3, -1, -1);", "+\tassertTrue(\"Rectangle(1, 2, 3, 4) should not intersect Rectangle(3, 3, -1, -1)\", !r1.intersects(3, 3, -1, -1));", "+\tassertTrue(\"Rectangle(3, 3, -1, -1) should not intersect Rectangle(1, 2, 3, 4)\", !r2.intersects(1, 2, 3, 4));", "+", "+\ttry {", "+\t\tr1.intersects(null);", "+\t\tfail(\"No exception thrown for rectangle == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t\tassertEquals(\"Incorrect exception thrown for rectangle == null\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t}"]}], "num": 16813}