{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73b789812d820436b1490da3e558d066", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f060c1bb6dfcb13d02ee3fa37fd77735", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f9c32536bfb6b84d391acb7e318ee62e8e1d61a5", "commitAfterChange": "e68f4b04e4aa20115a97f7fad53d6f3eb1475feb", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int event)", "diff": ["+\t\t\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\t\t\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "+\t\t\tif (gdkEvent.button == 1) {", "+\t\t\t\tdisplay.resizeLocationX = gdkEvent.x_root;", "+\t\t\t\tdisplay.resizeLocationY = gdkEvent.y_root;", "+\t\t\t\tint [] x = new int [1], y = new int [1];", "+\t\t\t\tOS.gtk_window_get_position (shellHandle, x, y);", "+\t\t\t\tdisplay.resizeBoundsX = x [0];", "+\t\t\t\tdisplay.resizeBoundsY = y [0];", "+\t\t\t\tdisplay.resizeBoundsWidth = OS.GTK_WIDGET_WIDTH (shellHandle);", "+\t\t\t\tdisplay.resizeBoundsHeight = OS.GTK_WIDGET_HEIGHT (shellHandle);", "+\t\t\t}", "-\treturn gtk_button_press_event (widget, event, true);", "+\treturn super.gtk_button_press_event (widget, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b399b152ccc0f7996c7616cebf04d29d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3462638b4d08f5602683f1e8dd1eecfd9fd908ff", "commitAfterChange": "d453cf5437fbe11ecd8d5bdf8ed46b521a6689e4", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  Point computeNativeSize (long h, int wHint, int hHint, boolean changed)", "signatureAfterChange": "  Point computeNativeSize (long h, int wHint, int hHint, boolean changed)", "diff": ["-\tif (wHint == SWT.DEFAULT && hHint == SWT.DEFAULT && !OS.GTK3) {", "+\tif (OS.GTK3){", "+\t\tif (wHint == SWT.DEFAULT && hHint == SWT.DEFAULT) {", "+\t\t\tGtkRequisition requisition = new GtkRequisition ();", "+\t\t\tOS.gtk_widget_get_preferred_size (h, requisition, null);", "+\t\t\twidth = requisition.width;", "+\t\t\theight = requisition.height;", "+\t\t} else if (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\t\tint [] minimum_size = new int [1];", "+\t\t\tif (wHint == SWT.DEFAULT) {", "+\t\t\t\tOS.gtk_widget_get_preferred_width_for_height (h, height, minimum_size, null);", "+\t\t\t\twidth = minimum_size [0];", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_widget_get_preferred_height_for_width (h, width, minimum_size, null);", "+\t\t\t\theight = minimum_size [0];", "+\t\t\t}", "+\t\t}", "+\t\treturn new Point(width, height);", "+\t}", "+\tif (wHint == SWT.DEFAULT && hHint == SWT.DEFAULT) {"]}], "num": 5839}