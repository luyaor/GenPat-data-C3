{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9a4556238c78e432d7467ef4aeb7f87", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b100aee7cd304269500ea48566cbce4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 37, "signatureBeforeChange": " int processFocusOut ()", "signatureAfterChange": "  int kEventControlBoundsChanged (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventControlBoundsChanged (int nextHandler, int theEvent, int userData) {", "+\tint result = super.kEventControlBoundsChanged (nextHandler, theEvent, userData);", "+\tif (result == OS.noErr) return result;", "+\tint [] attributes = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamAttributes, OS.typeUInt32, null, attributes.length * 4, null, attributes);", "+\tif ((attributes [0] & (OS.kControlBoundsChangePositionChanged | OS.kControlBoundsChangeSizeChanged)) != 0) {", "+\t\tRect rect = new Rect ();", "+\t\tOS.GetControlBounds (handle, rect);", "+\t\tRect inset = inset ();", "+\t\trect.left += inset.left;", "+\t\trect.top += inset.top;", "+\t\trect.right -= inset.right;", "+\t\trect.bottom -= inset.bottom;", "+\t\tOS.TXNSetFrameBounds (txnObject, rect.top, rect.left, rect.bottom, rect.right, txnFrameID);", "+\t}", "+\treturn result;", "+}", "-int processFocusOut () {", "-\tsuper.processFocusOut ();", "-\t// widget could be disposed at this point", "-\tif (handle == 0) return 0;", "-\tif ((style & SWT.READ_ONLY) != 0) return 0;", "-\t", "-\t//fgTextInFocus= null;", "-\tOS.TXNFocus(fTX, false);", "-\tdrawFrame(null);", "-\t", "-\tif ((style & SWT.MULTI) != 0) return 0;", "-    /* AW", "-\tint [] argList = {OS.XmNcursorPositionVisible, 0};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-    */", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071f151c54e8544908fed4566a9f714c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " int processFocusIn ()", "signatureAfterChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventRawKeyDown (int nextHandler, int theEvent, int userData) {", "+\t/*", "+\t* Bug in the Macintosh.  When the default handler calls TXNKeyDown()", "+\t* for a single line TXN Object, it does not check for the return key", "+\t* or the default button.  The result is that a garbage character (the", "+\t* CR) is entered into the TXN Object.  The fix is to temporarily take", "+\t* focus away from the TXN Object, call the default handler to process", "+\t* the return key and reset the focus.", "+\t*/", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tint [] keyCode = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 36: //CR KEY", "+\t\t\t\tOS.TXNFocus (txnObject, false);", "+\t\t\t\tint result = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t\tOS.TXNFocus (txnObject, true);", "+\t\t\t\treturn result;", "+\t\t}", "+\t}", "+\treturn super.kEventRawKeyDown (nextHandler, theEvent, userData);", "+}", "-int processFocusIn () {", "-\tsuper.processFocusIn ();", "-\t// widget could be disposed at this point", "-\tif (handle == 0) return 0;", "-\tif ((style & SWT.READ_ONLY) != 0) return 0;", "-\t", "-\tdrawFrame(null);", "-\tOS.TXNFocus(fTX, true);", "-\t", "-\tif ((style & SWT.MULTI) != 0) return 0;", "-    /* AW", "-\tint [] argList = {OS.XmNcursorPositionVisible, 1};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-    */", "-\treturn 0;"]}], "num": 38383}