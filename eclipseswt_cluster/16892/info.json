{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a7e4eecb45e94e4428be9066ab82391", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fa153711c912785d143671588461567", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PngEncoder.java", "commitBeforeChange": "b49f46e0a414eeeb15686b31418ddb08e4b429ec", "commitAfterChange": "829b4ac95ed3d0817ef3cd99dde448234e58b644", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void writeImageData() throws IOException", "signatureAfterChange": "  void writeImageData() throws IOException", "diff": ["-\t\tos = Compatibility.newDeflaterOutputStream(baos, NO_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(NO_COMPRESSION));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_SPEED);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(BEST_SPEED));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(BEST_COMPRESSION));", "-\t\tos = Compatibility.newDeflaterOutputStream(baos, DEFAULT_COMPRESSION);", "+\t\tos = new DeflaterOutputStream(baos, new Deflater(DEFAULT_COMPRESSION));", "-\tif (os == null) os = baos; // returns null for J2ME"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6758708d2afb4f4947d493fc51815c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PngEncoder.java", "commitBeforeChange": "4ddc80fac7dd7587f52e196fb30aea2e09d434af", "commitAfterChange": "afd2596f7d0b684f40a6cde49ffd8b1e1885b748", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void writeImageData() throws IOException", "signatureAfterChange": "  void writeImageData() throws IOException", "diff": ["-\tOutputStream os = Compatibility.newDeflaterOutputStream(baos);", "-\tif (os == null) os = baos;", "+\tOutputStream os = null;", "+\tswitch (loader.compression) {", "+\tcase 0:", "+\t\tos = Compatibility.newDeflaterOutputStream(baos, NO_COMPRESSION);", "+\t\tbreak;", "+\tcase 1:", "+\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_SPEED);", "+\t\tbreak;", "+\tcase 3:", "+\t\tos = Compatibility.newDeflaterOutputStream(baos, BEST_COMPRESSION);", "+\t\tbreak;", "+\tdefault:", "+\t\tos = Compatibility.newDeflaterOutputStream(baos, DEFAULT_COMPRESSION);", "+\t\tbreak;", "+\t}", "+\tif (os == null) os = baos; // returns null for J2ME", "+\t\t/* Use PngDeflater for J2ME. */"]}], "num": 16892}