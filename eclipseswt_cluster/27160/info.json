{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4dc76a8b50d85a48b557a91a91bb1262", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9bd7362cb2a272d3cee2d2598285afa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/clipboard/MyTypeTransfer.java", "commitBeforeChange": "6c47784c5a7b45e769c078aad8b37a11143d5176", "commitAfterChange": "97cc483badf6657f2e65afe2073636323fc40bdd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-}\r", "-public void javaToNative (Object object, TransferData transferData) {\r", "-\tif (object == null || !(object instanceof MyType[])) return;\r", "-\t\r", "-\tif (isSupportedType(transferData)) {\r", "-\t\tMyType[] myTypes = (MyType[]) object;\t\r", "-\t\ttry {\r", "-\t\t\t// write data to a byte array and then ask super to convert to pMedium\r", "-\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\r", "-\t\t\tDataOutputStream writeOut = new DataOutputStream(out);\r", "-\t\t\tfor (int i = 0, length = myTypes.length; i < length;  i++){\r", "-\t\t\t\tbyte[] buffer = myTypes[i].firstName.getBytes();\r", "-\t\t\t\twriteOut.writeInt(buffer.length);\r", "-\t\t\t\twriteOut.write(buffer);\r", "-\t\t\t\tbuffer = myTypes[i].firstName.getBytes();\r", "-\t\t\t\twriteOut.writeInt(buffer.length);\r", "-\t\t\t\twriteOut.write(buffer);\r", "-\t\t\t}\r", "-\t\t\tbyte[] buffer = out.toByteArray();\r", "-\t\t\twriteOut.close();\r", "-\r", "-\t\t\tsuper.javaToNative(buffer, transferData);\r", "-\t\t\t\r", "-\t\t} catch (IOException e) {\r", "-\t\t}\r", "-\t}\r", "-}\r", "+}", "+public void javaToNative (Object object, TransferData transferData) {", "+\tif (!checkMyType(object) || !isSupportedType(transferData)) {", "+\t\tDND.error(DND.ERROR_INVALID_DATA);", "+\t}", "+\tMyType[] myTypes = (MyType[]) object;\t", "+\ttry {", "+\t\t// write data to a byte array and then ask super to convert to pMedium", "+\t\tByteArrayOutputStream out = new ByteArrayOutputStream();", "+\t\tDataOutputStream writeOut = new DataOutputStream(out);", "+\t\tfor (int i = 0, length = myTypes.length; i < length;  i++){", "+\t\t\tbyte[] buffer = myTypes[i].firstName.getBytes();", "+\t\t\twriteOut.writeInt(buffer.length);", "+\t\t\twriteOut.write(buffer);", "+\t\t\tbuffer = myTypes[i].firstName.getBytes();", "+\t\t\twriteOut.writeInt(buffer.length);", "+\t\t\twriteOut.write(buffer);", "+\t\t}", "+\t\tbyte[] buffer = out.toByteArray();", "+\t\twriteOut.close();", "+\t\tsuper.javaToNative(buffer, transferData);\t", "+\t} catch (IOException e) {", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8552db88487efc728963bcfc4dca0584", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet79.java", "commitBeforeChange": "6c47784c5a7b45e769c078aad8b37a11143d5176", "commitAfterChange": "97cc483badf6657f2e65afe2073636323fc40bdd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": "  public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof MyType [])) return;", "-\tif (isSupportedType (transferData)) {", "-\t\tMyType [] myTypes = (MyType []) object;", "-\t\ttry {", "-\t\t\t// write data to a byte array and then ask super to convert to pMedium", "-\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream ();", "-\t\t\tDataOutputStream writeOut = new DataOutputStream (out);", "-\t\t\tfor (int i = 0, length = myTypes.length; i < length; i++) {", "-\t\t\t\tbyte [] buffer = myTypes [i].fileName.getBytes ();", "-\t\t\t\twriteOut.writeInt (buffer.length);", "-\t\t\t\twriteOut.write (buffer);", "-\t\t\t\twriteOut.writeLong (myTypes [i].fileLength);", "-\t\t\t\twriteOut.writeLong (myTypes [i].lastModified);", "-\t\t\t}", "-\t\t\tbyte [] buffer = out.toByteArray ();", "-\t\t\twriteOut.close ();", "-", "-\t\t\tsuper.javaToNative (buffer, transferData);", "-\t\t}", "-\t\tcatch (IOException e) {}", "+\tif (!checkMyType(object) || !isSupportedType (transferData)) {", "+\t\tDND.error(DND.ERROR_INVALID_DATA);", "+\tMyType [] myTypes = (MyType []) object;", "+\ttry {", "+\t\t// write data to a byte array and then ask super to convert to pMedium", "+\t\tByteArrayOutputStream out = new ByteArrayOutputStream ();", "+\t\tDataOutputStream writeOut = new DataOutputStream (out);", "+\t\tfor (int i = 0, length = myTypes.length; i < length; i++) {", "+\t\t\tbyte [] buffer = myTypes [i].fileName.getBytes ();", "+\t\t\twriteOut.writeInt (buffer.length);", "+\t\t\twriteOut.write (buffer);", "+\t\t\twriteOut.writeLong (myTypes [i].fileLength);", "+\t\t\twriteOut.writeLong (myTypes [i].lastModified);", "+\t\t}", "+\t\tbyte [] buffer = out.toByteArray ();", "+\t\twriteOut.close ();", "+\t\tsuper.javaToNative (buffer, transferData);", "+\t}", "+\tcatch (IOException e) {}"]}], "num": 27160}