{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1a0f54916bc47eda805bc8d467a805a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be8d94039435ece1cc34e9a1a1e1895", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "3f8101474c4f9d64a69b780f9a29957977994c1c", "commitAfterChange": "ec9593cc82c5a72b6479eac5f3bdaf617409cb43", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\t\t\tint /*long*/ hFont = item.fontHandle (index);", "-\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "-\t\t\tRECT itemRect = item.getBounds (index, true, true, false, false, false, hDC);", "-\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\t\tint itemRight = 0;", "-\t\t\t\tint nSavedDC = OS.SaveDC (hDC);", "-\t\t\t\tGCData data = new GCData ();", "-\t\t\t\tdata.device = display;", "-\t\t\t\tdata.hFont = hFont;", "-\t\t\t\tGC gc = GC.win32_new (hDC, data);", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = item;", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.index = index;", "-\t\t\t\tevent.x = itemRect.left;", "-\t\t\t\tevent.y = itemRect.top;", "-\t\t\t\tevent.width = itemRect.right - itemRect.left;", "-\t\t\t\tevent.height = itemRect.bottom - itemRect.top;", "-\t\t\t\tparent.sendEvent (SWT.MeasureItem, event);", "-\t\t\t\tevent.gc = null;", "-\t\t\t\tgc.dispose ();", "-\t\t\t\tOS.RestoreDC (hDC, nSavedDC);", "+\t\t\t\tEvent event = parent.sendMeasureItemEvent (item, index, hDC);", "-\t\t\t\tif (event.height > parent.getItemHeight ()) parent.setItemHeight (event.height);", "-\t\t\t\t//itemRect.left = event.x;", "-\t\t\t\titemRect.right = event.x + event.width;", "+\t\t\t\titemRight = event.x + event.width;", "+\t\t\t} else {", "+\t\t\t\tint /*long*/ hFont = item.fontHandle (index);", "+\t\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "+\t\t\t\tRECT itemRect = item.getBounds (index, true, true, false, false, false, hDC);", "+\t\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\t\t\titemRight = itemRect.right;", "-\t\t\tcolumnWidth = Math.max (columnWidth, itemRect.right - headerRect.left);", "+\t\t\tcolumnWidth = Math.max (columnWidth, itemRight - headerRect.left);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "434364377d1f4e9f1a58b08de918b73c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b4c5f112b4664b7b3748757ebc5cd150b5e7b094", "commitAfterChange": "e1e9551439908f68f1d907a5a2af5814012a2be4", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " int insertBlockSelectionText(String text)", "signatureAfterChange": " int insertBlockSelectionText(String text)", "diff": ["-\tint index = 0, end = caretOffset, lineIndex = firstLine;", "+\tboolean fillWithSpaces = isFixedLineHeight() && renderer.fixedPitch;", "+\tstart = caretOffset;", "+\tint index = 0, lineIndex = firstLine;", "-\t\tstart = getOffsetAtPoint(left, 0, lineIndex, null);", "-\t\tend = getOffsetAtPoint(right, 0, lineIndex, null);", "-\t\tEvent event = new Event();", "-\t\tevent.text = index < lineCount ? lines[index++] : \"\";", "-\t\tevent.start = start;", "-\t\tevent.end = end;", "-\t\tsendKeyEvent(event);", "-\t\tend = start + event.text.length();", "+\t\tString string = index < lineCount ? lines[index++] : \"\";", "+\t\tstart = sendTextEvent(left, right, lineIndex, string, fillWithSpaces);", "-\t\tint maxLines = content.getLineCount();", "-\t\tString line;", "-\t\tif (lineIndex < maxLines) {", "-\t\t\tstart = end = getOffsetAtPoint(left, 0, lineIndex, null);", "-\t\t\tline = lines[index]; ", "-\t\t} else {", "-\t\t\tstart = end = content.getCharCount();", "-\t\t\tline = content.getLineDelimiter() + lines[index];", "-\t\t}", "-\t\tEvent event = new Event();", "-\t\tevent.text = line;", "-\t\tevent.start = start;", "-\t\tevent.end = end;", "-\t\tsendKeyEvent(event);", "-\t\tend = start + event.text.length();", "+\t\tstart = sendTextEvent(left, left, lineIndex, lines[index++], fillWithSpaces);", "-\t\tindex++;", "-\treturn end;", "+\treturn start;"]}], "num": 41230}