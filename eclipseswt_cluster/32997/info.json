{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c57e4af8412825b6b9a52518380ee400", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1544f22da9f7e4daad2857154c3014", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "475110f8cb2fad975e3b958e7f0a5c8a0c59f010", "commitAfterChange": "0d66d44355244adf6ce753df2baacbf8eb205fc4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 50, "signatureBeforeChange": "  boolean translateMessage (MSG msg)", "signatureAfterChange": "  void subclass ()", "diff": ["-boolean translateMessage (MSG msg) {", "-\tif (super.translateMessage (msg)) return true;", "-\t", "-\t/*", "-\t* In order to see key events for the text widget in a combo box,", "-\t* filter the key events before they are dispatched to the text", "-\t* widget and invoke the cooresponding key handler for the combo", "-\t* box as if the key was sent directly to the combo box, not the", "-\t* text field.  The key is still dispatched to the text widget, ", "-\t* in the normal fashion.  Note that we must call TranslateMessage()", "-\t* in order to process accented keys properly.", "-\t*/", "+void subclass () {", "+\tsuper.subclass ();", "+\tint newProc = display.windowProc;", "-\tif (hwndText != 0 && msg.hwnd == hwndText) {", "-\t\tswitch (msg.message) {", "-\t\t\tcase OS.WM_CHAR:", "-\t\t\tcase OS.WM_SYSCHAR:", "-\t\t\tcase OS.WM_KEYDOWN:  {", "-\t\t\t\tif (msg.message == OS.WM_KEYDOWN) {", "-\t\t\t\t\tif (display.translateTraversal (msg, this)) return true;", "-\t\t\t\t} else {", "-\t\t\t\t\tif (display.translateMnemonic (msg, this)) return true;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tOS.TranslateMessage (msg);", "-\t\tLRESULT result = null;", "-\t\tswitch (msg.message) {", "-\t\t\tcase OS.WM_CHAR:\t\tresult = WM_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_IME_CHAR:\tresult = WM_IME_CHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYDOWN:\t\tresult = WM_KEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_KEYUP:\t\tresult = WM_KEYUP (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSCHAR:\t\tresult = WM_SYSCHAR (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = WM_SYSKEYDOWN (msg.wParam, msg.lParam); break;", "-\t\t\tcase OS.WM_SYSKEYUP:\tresult = WM_SYSKEYUP (msg.wParam, msg.lParam); break;", "-\t\t}", "-\t\tif (result == null) OS.DispatchMessage (msg);", "-\t\treturn true;", "+\tif (hwndText != 0) {", "+\t\tOS.SetWindowLong (hwndText, OS.GWL_WNDPROC, newProc);", "-\treturn false;", "+\tint hwndList = OS.GetDlgItem (handle, CBID_LIST);", "+\tif (hwndList != 0) {\t", "+\t\tOS.SetWindowLong (hwndList, OS.GWL_WNDPROC, newProc);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "862c1cea314d9b115bca90a0493355e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "51184c358fa84082ceb1bdb0bbfd184932e9f47d", "commitAfterChange": "f2d755cf92df522fc8825ec5987ac85761a9f8f3", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void sendKeyEvent (int type, int gdkEvent)", "signatureAfterChange": "  void sendKeyEvent (int type, GdkEventKey keyEvent)", "diff": ["-void sendKeyEvent (int type, int gdkEvent) {", "-\tGdkEventKey keyEvent = new GdkEventKey ();", "-\tOS.memmove (keyEvent, gdkEvent, GdkEventKey.sizeof);", "+void sendKeyEvent (int type, GdkEventKey keyEvent) {", "-\t\tsetInputState (event, gdkEvent);", "-\t\tevent.keyCode = Display.translateKey (keyEvent.keyval);", "-\t\tswitch (keyEvent.keyval) {", "-\t\t\tcase OS.GDK_BackSpace:\t\tevent.character = '\\b'; break;", "-\t\t\tcase OS.GDK_Linefeed:\t\tevent.character = '\\n'; break;", "-\t\t\tcase OS.GDK_Return: \t\tevent.character = '\\r'; break;", "-\t\t\tcase OS.GDK_Delete:\t\tevent.character = 0x7F; break;", "-\t\t\tcase OS.GDK_Cancel:", "-\t\t\tcase OS.GDK_Escape:\t\tevent.character = 0x1B; break;", "-\t\t\tcase OS.GDK_Tab:", "-\t\t\tcase OS.GDK_ISO_Left_Tab: \tevent.character = '\\t'; break;", "-//\t\t\tcase OS.GDK_Clear:\t\t\tevent.character = 0xB; break;", "-//\t\t\tcase OS.GDK_Pause:\t\t\tevent.character = 0x13; break;", "-//\t\t\tcase OS.GDK_Scroll_Lock:\tevent.character = 0x14; break;", "-\t\t\tdefault: {", "-\t\t\t\tif (event.keyCode == 0) {", "-\t\t\t\t\tint key = keyEvent.keyval;", "-\t\t\t\t\tif ((keyEvent.state & OS.GDK_CONTROL_MASK) != 0 && (0 <= key && key <= 0x7F)) {", "-\t\t\t\t\t\tif ('a'  <= key && key <= 'z') key -= 'a' - 'A';", "-\t\t\t\t\t\tif (64 <= key && key <= 95) key -= 64;", "-\t\t\t\t\t\tevent.character = (char) key;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tevent.character = (char) OS.gdk_keyval_to_unicode (key);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tsetKeyState (event, keyEvent);", "-\t\t\tsetInputState (event, gdkEvent);", "+\t\t\tsetInputState (event, keyEvent.state);"]}], "num": 32997}