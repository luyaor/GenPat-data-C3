{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68ef763c2dd717a6f960fa7e0c601e23", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ff41c4f111dca72ec45e1cff6f30d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7c921fde1a3e57d6090fd86368a01a1c5424c9a7", "commitAfterChange": "828d864b1718709d086376d079e5b86cae8605c6", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 46, "signatureBeforeChange": "  int itemCompareProc ()", "signatureAfterChange": "  int getIndex (int id)", "diff": ["+", "+int getIndex (int id) {", "+\tif (sortDirection == SWT.DOWN && sortColumn != null) {", "+\t\treturn itemCount - id;", "+\t}", "+\treturn id - 1;", "+}", "-", "-int itemCompareProc () {", "-\treturn sortDirection == SWT.DOWN && sortColumn != null ? display.itemCompareProc : 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db76a302287861bb90a0eee39d83c29a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "863e2ff132d5e4a7e09c9b48180d8eb9c0d92a32", "commitAfterChange": "13f9e337c61aafbe8198262cd4793c00546e9a9b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r int processPaint (int damage)", "signatureAfterChange": "\r \r void drawWidget (int widget, int damage)", "diff": ["+\r", "+void drawWidget (int widget, int damage) {\r", "+\tif ((state & CANVAS) != 0) {\r", "+\t\tif ((style & SWT.NO_BACKGROUND) == 0) {\r", "+\t\t\t\r", "+\t\t\t/* Get the clipping tiles for children and siblings */\r", "+\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);\r", "+\r", "+\t\t\t/* Translate the clipping to the current GC coordinates */\r", "+\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);\r", "+\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];\r", "+\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);\r", "+\t\t\tPhPoint_t delta = new PhPoint_t ();\r", "+\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);\r", "+\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);\r", "+\t\t\tOS.PhTranslateTiles(clip_tile, delta);\r", "+\r", "+\t\t\t/* Set the clipping */\r", "+\t\t\tint[] clip_rects_count = new int [1];\r", "+\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);\r", "+\t\t\tOS.PhFreeTiles (clip_tile);\t\r", "+\t\t\tif (clip_rects_count [0] == 0) {\r", "+\t\t\t\tclip_rects_count [0] = 1;\r", "+\t\t\t\tOS.free (clip_rects);\r", "+\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);\r", "+\t\t\t}\r", "+\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);\r", "+\t\t\tOS.free (clip_rects);\r", "+\t\t\t\r", "+\t\t\t/* Draw the widget */\r", "+\t\t\tsuper.drawWidget (widget, damage);\r", "+\t\t\t\r", "+\t\t\t/* Reset the clipping */\r", "+\t\t\tOS.PgSetMultiClip (0, 0);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tsuper.drawWidget (widget, damage);\r", "+\t}\r", "+}\r", "-\r", "-int processPaint (int damage) {\r", "-\tif ((state & CANVAS) != 0) {\r", "-\t\tif ((style & SWT.NO_BACKGROUND) == 0) {\r", "-\t\t\t\r", "-\t\t\t/* Get the clipping tiles for children and siblings */\r", "-\t\t\tint clip_tile = getClipping (handle, topHandle (), true, true);\r", "-\r", "-\t\t\t/* Translate the clipping to the current GC coordinates */\r", "-\t\t\tshort [] abs_x = new short [1], abs_y = new short [1];\r", "-\t\t\tOS.PtGetAbsPosition (handle, abs_x, abs_y);\r", "-\t\t\tshort [] dis_abs_x = new short [1], dis_abs_y = new short [1];\r", "-\t\t\tOS.PtGetAbsPosition (OS.PtFindDisjoint (handle), dis_abs_x, dis_abs_y);\r", "-\t\t\tPhPoint_t delta = new PhPoint_t ();\r", "-\t\t\tdelta.x = (short) (abs_x [0] - dis_abs_x [0]);\r", "-\t\t\tdelta.y = (short) (abs_y [0] - dis_abs_y [0]);\r", "-\t\t\tOS.PhTranslateTiles(clip_tile, delta);\r", "-\r", "-\t\t\t/* Set the clipping */\r", "-\t\t\tint[] clip_rects_count = new int [1];\r", "-\t\t\tint clip_rects = OS.PhTilesToRects (clip_tile, clip_rects_count);\r", "-\t\t\tOS.PhFreeTiles (clip_tile);\t\r", "-\t\t\tif (clip_rects_count [0] == 0) {\r", "-\t\t\t\tclip_rects_count [0] = 1;\r", "-\t\t\t\tOS.free (clip_rects);\r", "-\t\t\t\tclip_rects = OS.malloc (PhRect_t.sizeof);\r", "-\t\t\t}\r", "-\t\t\tOS.PgSetMultiClip (clip_rects_count[0], clip_rects);\r", "-\t\t\tOS.free (clip_rects);\r", "-\t\t\t\r", "-\t\t\t/* Draw the widget */\r", "-\t\t\tOS.PtSuperClassDraw (OS.PtContainer (), handle, damage);\r", "-\t\t\t\r", "-\t\t\t/* Reset the clipping */\r", "-\t\t\tOS.PgSetMultiClip (0, 0);\r", "-\t\t}\r", "-\t}\r", "-\treturn super.processPaint (damage);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8459e6743c4126a8452dd8a6f83c915", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5e25a1d6de8e8f0c1e45910e13ae0be069575b8b", "commitAfterChange": "01b53f04043d77e5b4a54bcfe36da2df748745a8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public boolean forceFocus ()", "signatureAfterChange": "  int focusHandle ()", "diff": ["-public boolean forceFocus () {", "-\tcheckWidget();", "-\tOS.gtk_widget_grab_focus (entryHandle);", "-\treturn OS.gtk_widget_is_focus (entryHandle);", "+int focusHandle () {", "+\tif (entryHandle != 0) return entryHandle;", "+\treturn super.focusHandle ();"]}], "num": 25887}