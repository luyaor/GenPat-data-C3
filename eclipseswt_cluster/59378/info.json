{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0feb4d32fcf53e903c4d023bd7171de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caecabdddde09502ff13b251ca1f51c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "abcda6211c0bcc3a908332242b9d1409108c82ba", "commitAfterChange": "04de3fc7ae68f9215fb3d4fcc47ca5754e572bac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int callData, int int1, int int2)", "diff": ["+", "+int processMouseDown (int callData, int int1, int int2) {", "+\tsuper.processMouseDown (callData, int1, int2);", "+\tint button = OS.gdk_event_button_get_button (callData);", "+\tif (button != 1) return 0;", "+\tdouble[] px = new double [1], py = new double [1];", "+\tOS.gdk_event_get_coords (callData, px, py);", "+\tstartX = (int)px [0];  startY = (int) py [0];", "+\tint border = 0;", "+\tint x = OS.GTK_WIDGET_X (handle);", "+\tint y = OS.GTK_WIDGET_Y (handle);", "+\tint width = OS.GTK_WIDGET_WIDTH (handle);", "+\tint height = OS.GTK_WIDGET_HEIGHT (handle);", "+\tlastX = x - border;  lastY = y - border;", "+\t/* The event must be sent because its doit flag is used. */", "+\tEvent event = new Event ();", "+\tevent.detail = SWT.DRAG;", "+\tevent.time = OS.gdk_event_get_time (callData);", "+\tevent.x = lastX;  event.y = lastY;", "+\tevent.width = width;  event.height = height;", "+\t/*", "+\t * It is possible (but unlikely) that client code could have disposed", "+\t * the widget in the selection event.  If this happens end the processing", "+\t * of this message by returning.", "+\t */", "+\tsendEvent (SWT.Selection, event);", "+\tif (isDisposed ()) return 0;", "+\tif (event.doit) {", "+\t\tdragging = true;", "+//\t\tOS.XmUpdateDisplay (handle);", "+\t\tdrawBand (lastX = event.x, lastY = event.y, width, height);", "+\t}", "+\treturn 0;\t", "+}", "-", "-int processMouseDown (int callData, int arg1, int int2) {", "-\tsuper.processMouseDown (callData,arg1,int2);", "-\tif (OS.gdk_event_button_get_button(callData) != 1) return 0;", "-\t", "-\toriginX = OS.GTK_WIDGET_X(handle);", "-\toriginY = OS.GTK_WIDGET_Y(handle);", "-\tlastX = 0;", "-\tlastY = 0;", "-\t", "-\t/* The event must be sent because its doit flag is used. */", "-\tEvent event = new Event ();", "-\tevent.detail = SWT.DRAG;", "-\tevent.time = OS.gdk_event_get_time(callData);", "-\tevent.x = originX;", "-\tevent.y = originY;", "-\tevent.width = OS.GTK_WIDGET_WIDTH (handle);", "-\tevent.height = OS.GTK_WIDGET_HEIGHT (handle);", "-\t/*", "-\t * It is possible (but unlikely) that client code could have disposed", "-\t * the widget in the selection event.  If this happens end the processing", "-\t * of this message by returning.", "-\t */", "-\tsendEvent (SWT.Selection, event);", "-\tif (isDisposed ()) return 0;", "-\tif (event.doit) {", "-\t\tdragging = true;", "-\t\tdrawBand (originX, originY, event.width, event.height);", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d32ee2237717bf41f509df82c6e656", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "dff59987fa6ba2fd252fb03f30dca165928c101d", "commitAfterChange": "933544b6b38a99dd9f9b77f4340619bbc2c20893", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r void setCheckboxImageList ()", "signatureAfterChange": "\r \r void setCheckboxImageList (boolean force)", "diff": ["-void setCheckboxImageList () {\r", "+void setCheckboxImageList (boolean force) {\r", "+\tint height = 0, width = 0;\r", "+\tint hImageList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);\r", "+\tif (hImageList != 0) {\r", "+\t\tint [] cx = new int [1], cy = new int [1];\r", "+\t\tOS.ImageList_GetIconSize (hImageList, cx, cy);\r", "+\t\theight = width = cy [0];\r", "+\t} else {\r", "+\t\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);\r", "+\t\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);\r", "+\t\theight = width = (oneItem >> 16) - (empty >> 16);\r", "+\t}\r", "+\tint hOldStateList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);\r", "+\tif (!force && hOldStateList != 0) {\r", "+\t\tint [] cx = new int [1], cy = new int [1];\r", "+\t\tOS.ImageList_GetIconSize (hOldStateList, cx, cy);\r", "+\t\tif (height == cx [0] && width == cy [0]) return;\r", "+\t}\r", "-\tint empty = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 0, 0);\r", "-\tint oneItem = OS.SendMessage (handle, OS.LVM_APPROXIMATEVIEWRECT, 1, 0);\r", "-\tint height = (oneItem >> 16) - (empty >> 16), width = height;\r", "-\tint hImageList = OS.ImageList_Create (width, height, OS.ILC_COLOR, count, count);\r", "+\tint hStateList = OS.ImageList_Create (width, height, OS.ILC_COLOR, count, count);\r", "-\tOS.ImageList_AddMasked (hImageList, hBitmap, 0);\r", "+\tOS.ImageList_AddMasked (hStateList, hBitmap, 0);\r", "-\tint hOldList = OS.SendMessage (handle, OS.LVM_GETIMAGELIST, OS.LVSIL_STATE, 0);\r", "-\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_STATE, hImageList);\r", "-\tif (hOldList != 0) OS.ImageList_Destroy (hOldList);\r", "+\tOS.SendMessage (handle, OS.LVM_SETIMAGELIST, OS.LVSIL_STATE, hStateList);\r", "+\tif (hOldStateList != 0) OS.ImageList_Destroy (hOldStateList);\r"]}], "num": 59378}