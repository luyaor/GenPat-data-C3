{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "658e0529fc50af5efefe15900837575f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7048a64e5ba7612b00bd92f503d9fdf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "5f7f702707f302b75507f5daec7d9dd49e3a4042", "commitAfterChange": "cb24623ebaa03ea200027efdd5c87647a2d2d515", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageData()", "diff": ["+\t\tassertEquals(\"Incorrect exception thrown for ImageData == null\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t", "+\tdata = new ImageData(10, 10, 8, new PaletteData(0x30, 0x0C, 0x03));", "+\t// set red pixel at x=9, y=9", "+\tdata.setPixel(9, 9, 0x30);", "+\timage = new Image(display, data);", "+\tassertEquals(\":a:\", 10, image.getBounds().width);", "+\tassertEquals(\":b:\", 10, image.getBounds().height);", "+\tImage gcImage = new Image(display, 10, 10);", "+\tGC gc = new GC(gcImage);", "+\tgc.drawImage(image, 0, 0);", "+\tImageData gcImageData = gcImage.getImageData();", "+\tint redPixel = gcImageData.getPixel(9, 9);", "+\tassertEquals(\":c:\", new RGB(255, 0, 0), gcImageData.palette.getRGB(redPixel));", "+\tgc.dispose();", "+\tgcImage.dispose();", "+\timage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216981b62aa57fe7efa1a52d1e086e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "706273e2c82f4b6e54f6fc95387d88a770635763", "commitAfterChange": "462dc215180e3d5da14db7779c77b072a63f48e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "diff": ["-\t// This test isn't finished yet, don't remove until it is!  Should test mask support.", "-\twarnUnimpl(\"Test test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData not written\");", "+\tdata = new ImageData(10, 10, 8, new PaletteData(0x30, 0x0C, 0x03));", "+\t// set opaque red pixel at x=9, y=9", "+\tdata.setPixel(9, 9, 0x30);", "+\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0), new RGB(255, 255, 255)}));", "+\tdata1.setPixel(9, 9, 1);", "+\timage = new Image(display, data, data1);", "+\tassertEquals(\":a:\", 10, image.getBounds().width);", "+\tassertEquals(\":b:\", 10, image.getBounds().height);", "+\tImage gcImage = new Image(display, 10, 10);", "+\tGC gc = new GC(gcImage);", "+\tColor backgroundColor = display.getSystemColor(SWT.COLOR_BLUE); ", "+\tgc.setBackground(backgroundColor);", "+\tgc.fillRectangle(0, 0, 10, 10);", "+\tgc.drawImage(image, 0, 0);", "+\tImageData gcImageData = gcImage.getImageData();", "+\tint redPixel = gcImageData.getPixel(9, 9);", "+\tassertEquals(\":c:\", new RGB(255, 0, 0), gcImageData.palette.getRGB(redPixel));", "+\tint bluePixel = gcImageData.getPixel(0, 0);", "+\tassertEquals(\":d:\", backgroundColor.getRGB(), gcImageData.palette.getRGB(bluePixel));", "+\tgc.dispose();", "+\tgcImage.dispose();", "+\timage.dispose();"]}], "num": 34687}