{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5da6c9b4566b75529a9fe747476b9dce", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d8422b813c170b3ed7fe82f622cc97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int[] _getAvailableTypes()", "signatureAfterChange": "  private void declareTypes(NSPasteboard pasteboard)", "diff": ["+", "+private void declareTypes(NSPasteboard pasteboard) {", "+\tString[] typeNames = getAvailableTypeNames();", "+\tNSMutableArray declaredTypes = NSMutableArray.arrayWithCapacity(typeNames.length);", "+\tfor (int i = 0; i < typeNames.length; i++) {", "+\t\tString typeName = typeNames[i];", "+\t\tif (typeName != null) {", "+\t\t\tdeclaredTypes.addObject(NSString.stringWith(typeName));", "+\t\t}", "+\t}", "+\tpasteboard.declareTypes(declaredTypes, null);", "-", "-int[] _getAvailableTypes() {", "-\tint[] types = new int[0];", "-\tint[] scrap = new int[1];", "-\tif (OS.GetCurrentScrap(scrap) != OS.noErr) return types;", "-\tint[] count = new int[1];", "-\tif (OS.GetScrapFlavorCount(scrap[0], count) != OS.noErr || count[0] == 0) return types;", "-\tint[] info = new int[count[0] * 2];", "-\tif (OS.GetScrapFlavorInfoList(scrap[0], count, info) != OS.noErr) return types;", "-\ttypes = new int[count[0]];", "-\tfor (int i= 0; i < count [0]; i++) {", "-\t\ttypes[i] = info[i*2];", "-\t}", "-\treturn types;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d8b20fbcf7ba387539ed22e9b3d0f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "e8e496688365659f6f10cecb41db672d7b7c7717", "commitAfterChange": "c5a23ecaba2cdfd1fefa27b27aa4e1ff7bc8c317", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes, int clipboards)", "diff": ["-\tcheckWidget();", "-\tif (data == null || dataTypes == null || data.length != dataTypes.length) {", "-\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tif (dataTypes.length == 0) return;", "-\tClipboardProxy proxy = ClipboardProxy._getInstance(display);", "-\tif (!proxy.setData(data, dataTypes)) {", "-\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t}", "+ */", "+public void setContents(Object[] data, Transfer[] dataTypes, int clipboards) {", "+\tcheckWidget();", "+\tif (data == null || dataTypes == null || data.length != dataTypes.length || data.length == 0) {", "+\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tfor (int i = 0; i < data.length; i++) {", "+\t\tif (data[i] == null || dataTypes[i] == null || !dataTypes[i].validate(data[i])) {", "+\t\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tClipboardProxy proxy = ClipboardProxy._getInstance(display);", "+\tif (!proxy.setData(data, dataTypes, clipboards)) {", "+\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "+\t}", "+\tproxy.activeClipboard = this;", "+}"]}], "num": 47863}