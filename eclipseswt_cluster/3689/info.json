{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b106a91cfc6fe23f6e477210b69417c5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8979736c2e4e16270882e391a06589e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate int handleMenuCallback(int nextHandler, int eHandle, int mHandle)", "signatureAfterChange": "  public void addFilter (int eventType, Listener listener)", "diff": ["+", "+public void addFilter (int eventType, Listener listener) {", "+\tcheckDevice ();", "+\tif (listener == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (filterTable == null) filterTable = new EventTable ();", "+\tfilterTable.hook (eventType, listener);", "+}", "-\t", "-\tprivate int handleMenuCallback(int nextHandler, int eHandle, int mHandle) {", "-\t\tswitch (OS.GetEventKind(eHandle)) {", "-\t\tcase OS.kEventMenuPopulate:", "-\t\tcase OS.kEventMenuOpening:", "-\t\t", "-\t\t\tif (fInContextMenu)", "-\t\t\t\tOS.SetMenuFont(mHandle, (short)1024, (short)11);\t// AW: FIXME menu id", "-\t\t\t/*", "-\t\t\t// copy the menu's font", "-\t\t\tshort[] fontID= new short[1];", "-\t\t\tshort[] size= new short[1];", "-\t\t\tOS.GetMenuFont(hMenu, fontID, size);", "-\t\t\tOS.SetMenuFont(menu.handle, fontID[0], size[0]);", "-\t\t\t*/ ", "-\t\t", "-\t\t\twindowProc(mHandle, SWT.Show, new MacEvent(eHandle, nextHandler));", "-\t\t\tbreak;", "-\t\tcase OS.kEventMenuClosed:", "-\t\t\twindowProc(mHandle, SWT.Hide, new MacEvent(eHandle, nextHandler));", "-\t\t\tbreak;", "-\t\t}", "-\t\treturn OS.kNoErr;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0cee907a088452e4e07106ec0765036", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "7b722c39e9b86fa678f49903da3064b0630bbe9d", "commitAfterChange": "80413969c76bb81e4c9325125446456624eddbae", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void setTransform(Transform transform)", "signatureAfterChange": " public void setTransform(Transform transform)", "diff": ["-\tOS.CGContextConcatCTM(handle, data.inverseTransform);", "+\tif (data.inverseTransform != null) OS.CGContextConcatCTM(handle, data.inverseTransform);", "+\t\tif (data.transform == null) data.transform = new float[6];", "+\t\tif (data.inverseTransform == null) data.inverseTransform = new float[6];", "-\t\tdata.transform = new float[]{1, 0, 0, 1, 0, 0};", "-\t\tdata.inverseTransform = new float[]{1, 0, 0, 1, 0, 0};", "+\t\tdata.transform = data.inverseTransform = null;", "-\t}", "-\t//TODO - rounds off problems", "-\tint clipRgn = data.clipRgn;", "-\tif (clipRgn != 0) {", "-\t\tint newRgn = OS.NewRgn();", "-\t\tCallback callback = new Callback(this, \"regionToRects\", 4);", "-\t\tint proc = callback.getAddress();", "-\t\tif (proc == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\tOS.QDRegionToRects(clipRgn, OS.kQDParseRegionFromTopLeft, proc, newRgn);", "-\t\tcallback.dispose();", "-\t\tOS.DisposeRgn(clipRgn);", "-\t\tdata.clipRgn = newRgn;"]}], "num": 3689}