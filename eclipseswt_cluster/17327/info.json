{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1dc25b6a3fb3effd43204cf403fb3141", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ba9187fb8171eb7f1ebb3cd2d9802b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bd335e1bbc287472dc24a7618b87762336cc62c6", "commitAfterChange": "7a7a5788e7468756fae5bc596e2c2c6f75583b57", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  void setBackgroundPixel (int newPixel)", "signatureAfterChange": "  void setBackgroundPixel (int newPixel)", "diff": ["-\tif (findImageControl () != null) return;", "-\tif (newPixel == -1) newPixel = defaultBackground ();", "-\tint oldPixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "-\tif (oldPixel != newPixel) {", "-\t\tif (oldPixel != OS.CLR_NONE) {", "+\tif (!customDraw) {", "+\t\tif (findImageControl () != null) return;", "+\t\tif (newPixel == -1) newPixel = defaultBackground ();", "+\t\tint oldPixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "+\t\tif (oldPixel != newPixel) {", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When the background color is changed,", "+\t\t\t* the table does not redraw until the next WM_PAINT.  The fix", "+\t\t\t* is to force a redraw.", "+\t\t\t*/", "+\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When the background color is changed,", "-\t\t* the table does not redraw until the next WM_PAINT.  The fix", "-\t\t* is to force a redraw.", "-\t\t*/", "-\t\tOS.InvalidateRect (handle, null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4999c8bb5db499c9ea7d02f902a2bfc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 70, "signatureBeforeChange": "  void setBackgroundPixel (int pixel)", "signatureAfterChange": "  void setBackgroundPixel (int newPixel)", "diff": ["-void setBackgroundPixel (int pixel) {", "-\tif (background == pixel) return;", "-\tbackground = pixel;", "-\tif (backgroundImage != null) return;", "-\tif (pixel == -1) pixel = defaultBackground ();", "-\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, pixel);", "-\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, pixel);", "-\tif ((style & SWT.CHECK) != 0) fixCheckboxImageListColor (true);", "-\t/*", "-\t* Feature in Windows.  When the background color is", "-\t* changed, the table does not redraw until the next", "-\t* WM_PAINT.  The fix is to force a redraw.", "-\t*/", "-\tOS.InvalidateRect (handle, null, true);", "+", "+void setBackgroundPixel (int newPixel) {", "+\tif (findImageControl () != null) return;", "+\tint oldPixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "+\tif (oldPixel != newPixel) {", "+\t\tif (newPixel == -1) newPixel = defaultBackground ();", "+\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, newPixel);", "+\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, newPixel);", "+\t\tif ((style & SWT.CHECK) != 0) fixCheckboxImageListColor (true);", "+\t\t/*", "+\t\t* Feature in Windows.  When the background color is", "+\t\t* changed, the table does not redraw until the next", "+\t\t* WM_PAINT.  The fix is to force a redraw.", "+\t\t*/", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t}"]}], "num": 17327}