{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51e50d75956d99c8a7b6420a855c8e8b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51d26ca236626a6efa72eaeff61a8fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the slider */\r", "-\tsliderGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tsliderGroup.setLayout (new GridLayout ());\r", "-\tsliderGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsliderGroup.setText (resControls.getString(\"Slider\"));\r", "-\t/* Create a group for the scale */\r", "-\tscaleGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tscaleGroup.setLayout (new GridLayout ());\r", "-\tscaleGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tscaleGroup.setText (resControls.getString(\"Scale\"));\r", "-\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the slider */\r", "+\t\tsliderGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tsliderGroup.setLayout (new GridLayout ());\r", "+\t\tsliderGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsliderGroup.setText (ControlExample.getResourceString(\"Slider\"));\r", "+\t\r", "+\t\t/* Create a group for the scale */\r", "+\t\tscaleGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tscaleGroup.setLayout (new GridLayout ());\r", "+\t\tscaleGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tscaleGroup.setText (ControlExample.getResourceString(\"Scale\"));\r", "+\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d4c8e6b36573df7a4b6b2df92e16f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void createSizeGroup ()", "signatureAfterChange": "\r \tvoid createSizeGroup ()", "diff": ["-*/\r", "-void createSizeGroup () {\r", "-\r", "-\t/* Create the group */\r", "-\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "-\tsizeGroup.setLayout (new GridLayout());\r", "-\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsizeGroup.setText (resControls.getString(\"Size\"));\r", "-\r", "-\t/* Create the controls */\r", "-\r", "-\t/*\r", "-\t* The preferred size of a widget is the size returned\r", "-\t* by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "-\t* This size is defined on a widget by widget basis.\r", "-\t* Many widgets will attempt to display their contents.\r", "-\t*/\r", "-\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tpreferredButton.setText (resControls.getString(\"Preferred\"));\r", "-\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "-\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "-\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "-\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "-\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\tsetExampleWidgetSize ();\r", "-\t\t};\r", "-\t};\r", "-\tpreferredButton.addSelectionListener(selectionListener);\r", "-\ttooSmallButton.addSelectionListener(selectionListener);\r", "-\tsmallButton.addSelectionListener(selectionListener);\r", "-\tlargeButton.addSelectionListener(selectionListener);\r", "-\r", "-\t/* Set the default state */\r", "-\tpreferredButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createSizeGroup () {\r", "+\t\t/* Create the group */\r", "+\t\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tsizeGroup.setLayout (new GridLayout());\r", "+\t\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsizeGroup.setText (ControlExample.getResourceString(\"Size\"));\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\r", "+\t\t/*\r", "+\t\t * The preferred size of a widget is the size returned\r", "+\t\t * by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "+\t\t * This size is defined on a widget by widget basis.\r", "+\t\t * Many widgets will attempt to display their contents.\r", "+\t\t */\r", "+\t\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tpreferredButton.setText (ControlExample.getResourceString(\"Preferred\"));\r", "+\t\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "+\t\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "+\t\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "+\t\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\tsetExampleWidgetSize ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tpreferredButton.addSelectionListener(selectionListener);\r", "+\t\ttooSmallButton.addSelectionListener(selectionListener);\r", "+\t\tsmallButton.addSelectionListener(selectionListener);\r", "+\t\tlargeButton.addSelectionListener(selectionListener);\r", "+\t\r", "+\t\t/* Set the default state */\r", "+\t\tpreferredButton.setSelection (true);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5373be27313b37a58265f12229cf8b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the text tree */\r", "+\t\ttreeGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttreeGroup.setLayout (new GridLayout ());\r", "+\t\ttreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttreeGroup.setText (ControlExample.getResourceString(\"Tree\"));\r", "-\t/* Create a group for the text tree */\r", "-\ttreeGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttreeGroup.setLayout (new GridLayout ());\r", "-\ttreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttreeGroup.setText (resControls.getString(\"Tree\"));\r", "-\r", "-\t/* Create a group for the image tree */\r", "-\timageTreeGroup = new Group (exampleGroup, SWT.NULL);\r", "-\timageTreeGroup.setLayout (new GridLayout ());\r", "-\timageTreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\timageTreeGroup.setText (resControls.getString(\"Tree_With_Images\"));\r", "-}\r", "+\t\t/* Create a group for the image tree */\r", "+\t\timageTreeGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\timageTreeGroup.setLayout (new GridLayout ());\r", "+\t\timageTreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\timageTreeGroup.setText (ControlExample.getResourceString(\"Tree_With_Images\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2434435a912067657efcad05ff747244", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the image tool bar */\r", "+\t\timageToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\timageToolBarGroup.setLayout (new GridLayout ());\r", "+\t\timageToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\timageToolBarGroup.setText (ControlExample.getResourceString(\"Image_ToolBar\"));\r", "-\t/* Create a group for the image tool bar */\r", "-\timageToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\timageToolBarGroup.setLayout (new GridLayout ());\r", "-\timageToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\timageToolBarGroup.setText (resControls.getString(\"Image_ToolBar\"));\r", "-\r", "-\t/* Create a group for the text tool bar */\r", "-\ttextToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttextToolBarGroup.setLayout (new GridLayout ());\r", "-\ttextToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttextToolBarGroup.setText (resControls.getString(\"Text_ToolBar\"));\r", "-}\r", "+\t\t/* Create a group for the text tool bar */\r", "+\t\ttextToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttextToolBarGroup.setLayout (new GridLayout ());\r", "+\t\ttextToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttextToolBarGroup.setText (ControlExample.getResourceString(\"Text_ToolBar\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4317c33219140e1675c908fffa1b93bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r void createSizeGroup ()", "signatureAfterChange": "\r \tvoid createSizeGroup ()", "diff": ["-*/\r", "-void createSizeGroup () {\r", "-\r", "-\t/* Create the group */\r", "-\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "-\tsizeGroup.setLayout (new GridLayout());\r", "-\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsizeGroup.setText (resControls.getString(\"Size\"));\r", "-\r", "-\t/* Create the controls */\r", "-\r", "-\t/*\r", "-\t* The preferred size of a widget is the size returned\r", "-\t* by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "-\t* This size is defined on a widget by widget basis.\r", "-\t* Many widgets will attempt to display their contents.\r", "-\t*/\r", "-\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tpreferredButton.setText (resControls.getString(\"Preferred\"));\r", "-\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "-\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "-\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "-\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "-\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "-\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "-\t\t\tsetExampleWidgetSize ();\r", "-\t\t};\r", "-\t};\r", "-\tpreferredButton.addSelectionListener(selectionListener);\r", "-\ttooSmallButton.addSelectionListener(selectionListener);\r", "-\tsmallButton.addSelectionListener(selectionListener);\r", "-\tlargeButton.addSelectionListener(selectionListener);\r", "-\r", "-\t/* Set the default state */\r", "-\tpreferredButton.setSelection (true);\r", "-}\r", "+\t */\r", "+\tvoid createSizeGroup () {\r", "+\t\t/* Create the group */\r", "+\t\tsizeGroup = new Group (controlGroup, SWT.NONE);\r", "+\t\tsizeGroup.setLayout (new GridLayout());\r", "+\t\tsizeGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsizeGroup.setText (ControlExample.getResourceString(\"Size\"));\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\r", "+\t\t/*\r", "+\t\t * The preferred size of a widget is the size returned\r", "+\t\t * by widget.computeSize (SWT.DEFAULT, SWT.DEFAULT).\r", "+\t\t * This size is defined on a widget by widget basis.\r", "+\t\t * Many widgets will attempt to display their contents.\r", "+\t\t */\r", "+\t\tpreferredButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tpreferredButton.setText (ControlExample.getResourceString(\"Preferred\"));\r", "+\t\ttooSmallButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\ttooSmallButton.setText (TOO_SMALL_SIZE + \" X \" + TOO_SMALL_SIZE);\r", "+\t\tsmallButton = new Button(sizeGroup, SWT.RADIO);\r", "+\t\tsmallButton.setText (SMALL_SIZE + \" X \" + SMALL_SIZE);\r", "+\t\tlargeButton = new Button (sizeGroup, SWT.RADIO);\r", "+\t\tlargeButton.setText (LARGE_SIZE + \" X \" + LARGE_SIZE);\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionAdapter selectionListener = new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection ()) return;\r", "+\t\t\t\tsetExampleWidgetSize ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tpreferredButton.addSelectionListener(selectionListener);\r", "+\t\ttooSmallButton.addSelectionListener(selectionListener);\r", "+\t\tsmallButton.addSelectionListener(selectionListener);\r", "+\t\tlargeButton.addSelectionListener(selectionListener);\r", "+\t\r", "+\t\t/* Set the default state */\r", "+\t\tpreferredButton.setSelection (true);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee21f91d752523879726774e2597901", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the text tree */\r", "+\t\ttreeGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttreeGroup.setLayout (new GridLayout ());\r", "+\t\ttreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttreeGroup.setText (ControlExample.getResourceString(\"Tree\"));\r", "-\t/* Create a group for the text tree */\r", "-\ttreeGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttreeGroup.setLayout (new GridLayout ());\r", "-\ttreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttreeGroup.setText (resControls.getString(\"Tree\"));\r", "-\r", "-\t/* Create a group for the image tree */\r", "-\timageTreeGroup = new Group (exampleGroup, SWT.NULL);\r", "-\timageTreeGroup.setLayout (new GridLayout ());\r", "-\timageTreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\timageTreeGroup.setText (resControls.getString(\"Tree_With_Images\"));\r", "-}\r", "+\t\t/* Create a group for the image tree */\r", "+\t\timageTreeGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\timageTreeGroup.setLayout (new GridLayout ());\r", "+\t\timageTreeGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\timageTreeGroup.setText (ControlExample.getResourceString(\"Tree_With_Images\"));\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f77b35fdecf03bde3adb7eceb6781d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ButtonTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createControlGroup ()", "signatureAfterChange": "\r \tvoid createControlGroup ()", "diff": ["-*/\r", "-void createControlGroup () {\r", "-\tsuper.createControlGroup ();\r", "-\r", "-\t/* Create the controls */\r", "-\tupButton = new Button (allignmentGroup, SWT.RADIO);\r", "-\tupButton.setText (resControls.getString(\"Up\"));\r", "-\tdownButton = new Button (allignmentGroup, SWT.RADIO);\r", "-\tdownButton.setText (resControls.getString(\"Down\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionListener selectionListener = new SelectionAdapter() {\r", "-\t\tpublic void widgetSelected(SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection()) return;\r", "-\t\t\tsetExampleWidgetAlignment ();\r", "-\t\t};\r", "-\t};\r", "-\tupButton.addSelectionListener(selectionListener);\r", "-\tdownButton.addSelectionListener(selectionListener);\r", "-}\r", "+\t */\r", "+\tvoid createControlGroup () {\r", "+\t\tsuper.createControlGroup ();\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\tupButton = new Button (allignmentGroup, SWT.RADIO);\r", "+\t\tupButton.setText (ControlExample.getResourceString(\"Up\"));\r", "+\t\tdownButton = new Button (allignmentGroup, SWT.RADIO);\r", "+\t\tdownButton.setText (ControlExample.getResourceString(\"Down\"));\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionListener selectionListener = new SelectionAdapter() {\r", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection()) return;\r", "+\t\t\t\tsetExampleWidgetAlignment ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tupButton.addSelectionListener(selectionListener);\r", "+\t\tdownButton.addSelectionListener(selectionListener);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563a27ff5cb171c93ee7ffc737ec053a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createDisplayGroup ()", "signatureAfterChange": "\r \tvoid createDisplayGroup ()", "diff": ["-*/\r", "-void createDisplayGroup () {\r", "-\tsuper.createDisplayGroup ();\r", "-\t/* Create display controls specific to this example */\r", "-\theaderVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "-\theaderVisibleButton.setText (resControls.getString(\"Header_Visible\"));\r", "-\tlinesVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "-\tlinesVisibleButton.setText (resControls.getString(\"Lines_Visible\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetHeaderVisible ();\r", "-\t\t}\r", "-\t});\r", "-\tlinesVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetLinesVisible ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createDisplayGroup () {\r", "+\t\tsuper.createDisplayGroup ();\r", "+\t\t/* Create display controls specific to this example */\r", "+\t\theaderVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "+\t\theaderVisibleButton.setText (ControlExample.getResourceString(\"Header_Visible\"));\r", "+\t\tlinesVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "+\t\tlinesVisibleButton.setText (ControlExample.getResourceString(\"Lines_Visible\"));\r", "+\t\t/* Add the listeners */\r", "+\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetHeaderVisible ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\tlinesVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetLinesVisible ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7e4b61164776fb511ac90952dfe21b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createDisplayGroup ()", "signatureAfterChange": "\r \tvoid createDisplayGroup ()", "diff": ["-*/\r", "-void createDisplayGroup () {\r", "-\tsuper.createDisplayGroup ();\r", "-\t/* Create display controls specific to this example */\r", "-\theaderVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "-\theaderVisibleButton.setText (resControls.getString(\"Header_Visible\"));\r", "-\tlinesVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "-\tlinesVisibleButton.setText (resControls.getString(\"Lines_Visible\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetHeaderVisible ();\r", "-\t\t}\r", "-\t});\r", "-\tlinesVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "-\t\tpublic void widgetSelected (SelectionEvent event) {\r", "-\t\t\tsetWidgetLinesVisible ();\r", "-\t\t};\r", "-\t});\r", "-}\r", "+\t */\r", "+\tvoid createDisplayGroup () {\r", "+\t\tsuper.createDisplayGroup ();\r", "+\t\t/* Create display controls specific to this example */\r", "+\t\theaderVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "+\t\theaderVisibleButton.setText (ControlExample.getResourceString(\"Header_Visible\"));\r", "+\t\tlinesVisibleButton = new Button (displayGroup, SWT.CHECK);\r", "+\t\tlinesVisibleButton.setText (ControlExample.getResourceString(\"Lines_Visible\"));\r", "+\t\t/* Add the listeners */\r", "+\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetHeaderVisible ();\r", "+\t\t\t}\r", "+\t\t});\r", "+\t\tlinesVisibleButton.addSelectionListener (new SelectionAdapter () {\r", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {\r", "+\t\t\t\tsetWidgetLinesVisible ();\r", "+\t\t\t};\r", "+\t\t});\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01aeea3b84e031a38c75d40702f4b4c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/SliderTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "-\t/* Create a group for the slider */\r", "-\tsliderGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tsliderGroup.setLayout (new GridLayout ());\r", "-\tsliderGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tsliderGroup.setText (resControls.getString(\"Slider\"));\r", "-\t/* Create a group for the scale */\r", "-\tscaleGroup = new Group (exampleGroup, SWT.NULL);\r", "-\tscaleGroup.setLayout (new GridLayout ());\r", "-\tscaleGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\tscaleGroup.setText (resControls.getString(\"Scale\"));\r", "-\r", "-}\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the slider */\r", "+\t\tsliderGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tsliderGroup.setLayout (new GridLayout ());\r", "+\t\tsliderGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tsliderGroup.setText (ControlExample.getResourceString(\"Slider\"));\r", "+\t\r", "+\t\t/* Create a group for the scale */\r", "+\t\tscaleGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\tscaleGroup.setLayout (new GridLayout ());\r", "+\t\tscaleGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\tscaleGroup.setText (ControlExample.getResourceString(\"Scale\"));\r", "+\t\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fae604570b97ce8ef126e5b481759b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/org/eclipse/swt/examples/controlexample/ButtonTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createControlGroup ()", "signatureAfterChange": "\r \tvoid createControlGroup ()", "diff": ["-*/\r", "-void createControlGroup () {\r", "-\tsuper.createControlGroup ();\r", "-\r", "-\t/* Create the controls */\r", "-\tupButton = new Button (allignmentGroup, SWT.RADIO);\r", "-\tupButton.setText (resControls.getString(\"Up\"));\r", "-\tdownButton = new Button (allignmentGroup, SWT.RADIO);\r", "-\tdownButton.setText (resControls.getString(\"Down\"));\r", "-\r", "-\t/* Add the listeners */\r", "-\tSelectionListener selectionListener = new SelectionAdapter() {\r", "-\t\tpublic void widgetSelected(SelectionEvent event) {\r", "-\t\t\tif (!((Button) event.widget).getSelection()) return;\r", "-\t\t\tsetExampleWidgetAlignment ();\r", "-\t\t};\r", "-\t};\r", "-\tupButton.addSelectionListener(selectionListener);\r", "-\tdownButton.addSelectionListener(selectionListener);\r", "-}\r", "+\t */\r", "+\tvoid createControlGroup () {\r", "+\t\tsuper.createControlGroup ();\r", "+\t\r", "+\t\t/* Create the controls */\r", "+\t\tupButton = new Button (allignmentGroup, SWT.RADIO);\r", "+\t\tupButton.setText (ControlExample.getResourceString(\"Up\"));\r", "+\t\tdownButton = new Button (allignmentGroup, SWT.RADIO);\r", "+\t\tdownButton.setText (ControlExample.getResourceString(\"Down\"));\r", "+\t\r", "+\t\t/* Add the listeners */\r", "+\t\tSelectionListener selectionListener = new SelectionAdapter() {\r", "+\t\t\tpublic void widgetSelected(SelectionEvent event) {\r", "+\t\t\t\tif (!((Button) event.widget).getSelection()) return;\r", "+\t\t\t\tsetExampleWidgetAlignment ();\r", "+\t\t\t};\r", "+\t\t};\r", "+\t\tupButton.addSelectionListener(selectionListener);\r", "+\t\tdownButton.addSelectionListener(selectionListener);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b52891efde6c601666cedaba21ba275", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ToolBarTab.java", "commitBeforeChange": "5c642c70a29c56010c98f33fdfaf17deba5b3061", "commitAfterChange": "cb8452daa7f27a0f739bf877e9ffe97826a90922", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r void createExampleGroup ()", "signatureAfterChange": "\r \tvoid createExampleGroup ()", "diff": ["-*/\r", "-void createExampleGroup () {\r", "-\tsuper.createExampleGroup ();\r", "+\t */\r", "+\tvoid createExampleGroup () {\r", "+\t\tsuper.createExampleGroup ();\r", "+\t\t\r", "+\t\t/* Create a group for the image tool bar */\r", "+\t\timageToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\timageToolBarGroup.setLayout (new GridLayout ());\r", "+\t\timageToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\timageToolBarGroup.setText (ControlExample.getResourceString(\"Image_ToolBar\"));\r", "-\t/* Create a group for the image tool bar */\r", "-\timageToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\timageToolBarGroup.setLayout (new GridLayout ());\r", "-\timageToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\timageToolBarGroup.setText (resControls.getString(\"Image_ToolBar\"));\r", "-\r", "-\t/* Create a group for the text tool bar */\r", "-\ttextToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "-\ttextToolBarGroup.setLayout (new GridLayout ());\r", "-\ttextToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "-\ttextToolBarGroup.setText (resControls.getString(\"Text_ToolBar\"));\r", "-}\r", "+\t\t/* Create a group for the text tool bar */\r", "+\t\ttextToolBarGroup = new Group (exampleGroup, SWT.NULL);\r", "+\t\ttextToolBarGroup.setLayout (new GridLayout ());\r", "+\t\ttextToolBarGroup.setLayoutData (new GridData (GridData.GRAB_HORIZONTAL | GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL));\r", "+\t\ttextToolBarGroup.setText (ControlExample.getResourceString(\"Text_ToolBar\"));\r"]}], "num": 60490}