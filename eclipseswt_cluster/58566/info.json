{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63effbe20e0365a89f4aa806380e2d38", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51b711f28ef024c807e6e9e95e7df71e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleType.java", "commitBeforeChange": "a73836b62f7b4598932e8c5312c4b064291c921f", "commitAfterChange": "9e104f73db7a2c845f9e17635faa75853418512a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tint atkText_get_text_before_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_before_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["-", "-\tint atkText_get_text_before_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "-\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_before_offset\");", "-\t\tint parentResult = 0;", "-\t\tif (OS.g_type_is_a (parentType, ATK_TEXT_TYPE)) {", "-\t\t\tint superType = OS.g_type_interface_peek_parent (OS.ATK_TEXT_GET_IFACE (atkObject));", "-\t\t\tAtkTextIface textIface = new AtkTextIface ();", "-\t\t\tOS.memmove (textIface, superType);", "-\t\t\tif (textIface.get_text_before_offset != 0) {", "-\t\t\t\tparentResult = OS.call (textIface.get_text_before_offset, atkObject, offset, boundary_type, start_offset, end_offset);", "-\t\t\t}", "-\t\t}", "-\t\tAccessibleObject object = getAccessibleObject (atkObject);", "-\t\tif (object != null) {", "-\t\t\tint result = object.atkText_get_text_before_offset (offset, boundary_type, start_offset, end_offset);", "-\t\t\tif (result != AccessibleObject.NO_ANSWER) return result;", "-\t\t}", "-\t\treturn parentResult;", "-\t}", "+", "+\tint atkText_get_text_before_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "+\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_before_offset\");", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object == null) return 0;", "+\t\treturn object.atkText_get_text_before_offset (offset, boundary_type, start_offset, end_offset);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ae49ec14f25648313db746f8d76f751", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleType.java", "commitBeforeChange": "a73836b62f7b4598932e8c5312c4b064291c921f", "commitAfterChange": "9e104f73db7a2c845f9e17635faa75853418512a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tint atkText_get_text_at_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_at_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["-", "-\tint atkText_get_text_at_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "-\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_at_offset: \" + offset + \" start: \" + start_offset + \" end: \" + end_offset);", "-\t\tint parentResult = 0;", "-\t\tif (OS.g_type_is_a (parentType, ATK_TEXT_TYPE)) {", "-\t\t\tint superType = OS.g_type_interface_peek_parent (OS.ATK_TEXT_GET_IFACE (atkObject));", "-\t\t\tAtkTextIface textIface = new AtkTextIface ();", "-\t\t\tOS.memmove (textIface, superType);", "-\t\t\tif (textIface.get_text_at_offset != 0) {", "-\t\t\t\tparentResult = OS.call (textIface.get_text_at_offset, atkObject, offset, boundary_type, start_offset, end_offset);", "-\t\t\t}", "-\t\t}", "-\t\tAccessibleObject object = getAccessibleObject (atkObject);", "-\t\tif (object != null) {", "-\t\t\tint result = object.atkText_get_text_at_offset (offset, boundary_type, start_offset, end_offset);", "-\t\t\tif (result != AccessibleObject.NO_ANSWER) return result;", "-\t\t}", "-\t\treturn parentResult;", "-\t}", "+", "+\tint atkText_get_text_at_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "+\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_at_offset: \" + offset + \" start: \" + start_offset + \" end: \" + end_offset);", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object == null) return 0;", "+\t\treturn object.atkText_get_text_at_offset (offset, boundary_type, start_offset, end_offset);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4bb83fc20b9847692fe003403e30006", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleType.java", "commitBeforeChange": "a73836b62f7b4598932e8c5312c4b064291c921f", "commitAfterChange": "9e104f73db7a2c845f9e17635faa75853418512a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tint atkText_get_text_after_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_after_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["-", "-\tint atkText_get_text_after_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "-\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_after_offset\");", "-\t\tint parentResult = 0;", "-\t\tif (OS.g_type_is_a (parentType, ATK_TEXT_TYPE)) {", "-\t\t\tint superType = OS.g_type_interface_peek_parent (OS.ATK_TEXT_GET_IFACE (atkObject));", "-\t\t\tAtkTextIface textIface = new AtkTextIface ();", "-\t\t\tOS.memmove (textIface, superType);", "-\t\t\tif (textIface.get_text_after_offset != 0) {", "-\t\t\t\tparentResult = OS.call (textIface.get_text_after_offset, atkObject, offset, boundary_type, start_offset, end_offset);", "-\t\t\t}", "-\t\t}", "-\t\tAccessibleObject object = getAccessibleObject (atkObject);", "-\t\tif (object != null) {", "-\t\t\tint result = object.atkText_get_text_after_offset (offset, boundary_type, start_offset, end_offset);", "-\t\t\tif (result != AccessibleObject.NO_ANSWER) return result;", "-\t\t}", "-\t\treturn parentResult;", "-\t}", "+", "+\tint atkText_get_text_after_offset (int atkObject, int offset, int boundary_type, int start_offset, int end_offset) {", "+\t\tif (DEBUG) System.out.println (\"-->atkText_get_text_after_offset\");", "+\t\tAccessibleObject object = getAccessibleObject (atkObject);", "+\t\tif (object == null) return 0;", "+\t\treturn object.atkText_get_text_after_offset (offset, boundary_type, start_offset, end_offset);", "+\t}"]}], "num": 58566}