{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a2792916fcea37d4794009e27095957", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0c17ddaccfe9f067894bd98e7f3a15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 352, "methodNumberAfterChange": 350, "signatureBeforeChange": " \tint get_nCharacters(int pNCharacters)", "signatureAfterChange": " \tint getCharacterCount()", "diff": ["-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.count = -1;", "-\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "-\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "-\t\t\tlistener.getCharacterCount(event);", "-\t\t}", "-\t\tif (event.count == -1) {", "-\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "-\t\t\te.childID = ACC.CHILDID_SELF;", "-\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\t\tlistener.getRole(e);", "-\t\t\t\tlistener.getValue(e);", "-\t\t\t}", "-\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "-\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "-\t\t}", "-\t\tCOM.MoveMemory(pNCharacters, new int [] { event.count }, 4);", "+\t/* IAccessibleText::get_characterExtents([in] offset, [in] coordType, [out] pX, [out] pY, [out] pWidth, [out] pHeight) */", "+\tint getCharacterCount() {", "+\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\tevent.count = -1;", "+\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\tlistener.getCharacterCount(event);", "+\t\t}", "+\t\tif (event.count == -1) {", "+\t\t\tAccessibleControlEvent e = new AccessibleControlEvent(this);", "+\t\t\te.childID = ACC.CHILDID_SELF;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getRole(e);", "+\t\t\t\tlistener.getValue(e);", "+\t\t\t}", "+\t\t\t// TODO: Consider passing the value through for other roles as well (i.e. combo, etc). Keep in sync with get_text.", "+\t\t\tevent.count = e.detail == ACC.ROLE_TEXT && e.result != null ? e.result.length() : 0;", "+\t\t}", "+\t\treturn event.count;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9a99ca538485b925e326083f67d872e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "2578f70056f13b2af4b2e0bea79aa5fbe81d9417", "commitAfterChange": "70070a0630eae4a6a52cda4d5ee443c309eda99d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r private int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "\r private int QueryInterface(int riid, int ppvObject)", "diff": ["-\t\r", "-\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown)) {\r", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iUnknown.getAddress()}, 4);\r", "-\t\tAddRef();\r", "-\t\treturn COM.S_OK;\r", "-\t}\r", "-\t\r", "-\tif (COM.IsEqualGUID(guid, COM.IIDIDropSource)) {\r", "+\tif (COM.IsEqualGUID(guid, COM.IIDIUnknown) || COM.IsEqualGUID(guid, COM.IIDIDropSource)) {\r"]}], "num": 24650}