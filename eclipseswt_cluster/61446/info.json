{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdab07a1162d4333efec5e21f49f34da", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec7243fa3a31af02e6548202d03b5ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "90dc7995d29f69f436eb1e29782dff349e53db45", "commitAfterChange": "6641a1acc4b2c8b489453c6769773fa83e8aa5b5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tstatic int getDefaultChildType ()", "signatureAfterChange": " \t \tstatic int getChildType (Accessible accessible, int childIndex)", "diff": ["-\t", "-\tstatic int /*long*/ getDefaultChildType () {", "-\t\tif (DefaultChildType == 0) {", "-\t\t\tDefaultChildType = defineType (DEFAULT_CHILDTYPENAME, DefaultParentType);", "-\t\t}", "-\t\treturn DefaultChildType;", "+\tstatic int /*long*/ getChildType (Accessible accessible, int childIndex) {", "+\t\treturn getType (CHILD_TYPENAME, accessible, DefaultParentType, childIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "830d2c2dcf78d9a50839d6a7713ebd97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tvoid addAccessible (Accessible accessible)", "signatureAfterChange": " \t \tstatic AccessibleObject createChildAccessible (Accessible accessible, int childIndex)", "diff": ["-\tvoid addAccessible (Accessible accessible) {", "-\t\tint /*long*/ controlHandle = accessible.getControlHandle ();", "-\t\taccessibles.put (new LONG (controlHandle), accessible);", "-\t\tATK.atk_object_factory_create_accessible (handle, controlHandle);", "-\t}", "+\tstatic AccessibleObject createChildAccessible (Accessible accessible, int childIndex) {", "+\t\tint /*long*/ childType = getType (CHILD_TYPENAME, accessible, ATK.GTK_TYPE_ACCESSIBLE(), childIndex);", "+\t\treturn new AccessibleObject(childType, 0, accessible, true);"]}], "num": 61446}