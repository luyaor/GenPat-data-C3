{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c42220da65dcd86a1e2bae37e6b3df1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87b0d88fed386c75bde430830d17fd1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f6abf83ae0c88087bb20795446e5861999c785df", "commitAfterChange": "08ad5fbcf2dcc5dad41e05624d651c29c70219ce", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["+\t\tif (OS.IsWinCE) {", "+\t\t\tOS.UpdateWindow (topHandle);", "+\t\t} else {", "+\t\t\tint flags = OS.RDW_UPDATENOW | OS.RDW_ALLCHILDREN;", "+\t\t\tOS.RedrawWindow (topHandle, null, 0, flags);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5fd4d60b48cf66d40edb7930e73c9b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7385bf0701e2baaa9eb397987f631a8e3608d059", "commitAfterChange": "cabce7a504b376ba4a2bbe191acc5449e828a45a", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\tboolean dragDetect = (state & DRAG_DETECT) != 0;", "+\t/*", "+\t* Feature in Windows.  Inside WM_LBUTTONDOWN and WM_RBUTTONDOWN,", "+\t* the widget starts a modal loop to determine if the user wants", "+\t* to begin a drag/drop operation or marque select.  This modal", "+\t* loop eats mouse events until a drag is detected.  The fix is", "+\t* to avoid this behavior by only running the drag and drop when", "+\t* the event is hooked and the mouse is over an item.", "+\t*/", "+\tboolean dragDetect = (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect);", "+\tif (!dragDetect) {", "+\t\tint flags = OS.LVHT_ONITEMICON | OS.LVHT_ONITEMLABEL;", "+\t\tdragDetect = pinfo.iItem == -1 || (pinfo.flags & flags) == 0;", "+\t}"]}], "num": 59619}