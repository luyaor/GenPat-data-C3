{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95561d87a0b45962aa024994de78b0ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c7814eecf256dbfd936ac2025125eb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "1cd4597ff41acbe176d0615f19bb04070e5842f4", "commitAfterChange": "ac8aa4ed15146cebc36dd156b93099ccf8e75814", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public boolean setText(String html)", "signatureAfterChange": "  public boolean setText(final String html)", "diff": ["-public boolean setText(String html) {", "+", "+public boolean setText(final String html) {", "+", "+\t/*", "+\t* Feature in IE.  If the current page is about:blank then a DocumentComplete", "+\t* callback will not be received by re-navigating to about:blank, and the new", "+\t* content will not be set.  The workaround is to skip this re-navigation and", "+\t* just set the content here if not vetoed by a LocationListener.  ", "+\t*/", "+\tif (getUrl().equals(ABOUT_BLANK)) {", "+\t\tRunnable runnable = new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\tif (browser.isDisposed()) return;", "+\t\t\t\tLocationEvent newEvent = new LocationEvent(browser);", "+\t\t\t\tnewEvent.display = browser.getDisplay();", "+\t\t\t\tnewEvent.widget = browser;", "+\t\t\t\tnewEvent.location = ABOUT_BLANK;", "+\t\t\t\tnewEvent.doit = true;", "+\t\t\t\tfor (int i = 0; i < locationListeners.length; i++) {", "+\t\t\t\t\tlocationListeners[i].changing(newEvent);", "+\t\t\t\t}", "+\t\t\t\tboolean doit = newEvent.doit && !browser.isDisposed();", "+\t\t\t\tif (doit) setHTML(html);", "+\t\t\t}", "+\t\t};", "+", "+\t\tif (delaySetText) {", "+\t\t\tdelaySetText = false;", "+\t\t\tbrowser.getDisplay().asyncExec(runnable);", "+\t\t} else {", "+\t\t\trunnable.run();", "+\t\t}", "+\t\treturn true;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83f151aa0bd1b4fea1469f04a1d65625", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "0f960e0b213854d19299aaa9b453b69c8d7ee794", "commitAfterChange": "ddf97ad0a48b31c2d0718237cd7588eba28e4f3f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean setText(final String html, boolean trusted)", "signatureAfterChange": "  public boolean setText(final String html, boolean trusted)", "diff": ["-\t/*", "-\t* Feature in IE.  If the current page is about:blank then a DocumentComplete", "-\t* callback will not be received by re-navigating to about:blank, and the new", "-\t* content will not be set.  The workaround is to skip this re-navigation and", "-\t* just set the content here if not vetoed by a LocationListener.  ", "-\t*/", "-\tif (_getUrl().equals(ABOUT_BLANK)) {", "-\t\tRunnable runnable = new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\tif (browser.isDisposed()) return;", "-\t\t\t\tLocationEvent newEvent = new LocationEvent(browser);", "-\t\t\t\tnewEvent.display = browser.getDisplay();", "-\t\t\t\tnewEvent.widget = browser;", "-\t\t\t\tnewEvent.location = ABOUT_BLANK;", "-\t\t\t\tnewEvent.doit = true;", "-\t\t\t\tfor (int i = 0; i < locationListeners.length; i++) {", "-\t\t\t\t\tlocationListeners[i].changing(newEvent);", "-\t\t\t\t}", "-\t\t\t\tboolean doit = newEvent.doit && !browser.isDisposed();", "-\t\t\t\tif (doit) setHTML(html);", "-\t\t\t}", "-\t\t};", "-", "-\t\tif (delaySetText) {", "-\t\t\tdelaySetText = false;", "-\t\t\tbrowser.getDisplay().asyncExec(runnable);", "-\t\t} else {", "-\t\t\trunnable.run();", "-\t\t}", "-\t\treturn true;", "-\t}", "-"]}], "num": 3032}