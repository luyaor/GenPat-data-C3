{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ff877526ad6499fbb16039d16de8eba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140f73288be96256ab27aa188947cce1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolderLayout.java", "commitBeforeChange": "021c9ffb1f03bab865a8755698d6a0a3d739b6cc", "commitAfterChange": "a22dc50286ff5b97c74cd0b12653f08fe95a1ee7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "signatureAfterChange": " protected Point computeSize(Composite composite, int wHint, int hHint, boolean flushCache)", "diff": ["-\ttabW += 3;", "-\tif (folder.showMax) tabW += renderer.computeSize(CTabFolderRenderer.PART_MAX_BUTTON, SWT.NONE, gc, SWT.DEFAULT, SWT.DEFAULT).x;", "-\tif (folder.showMin) tabW += renderer.computeSize(CTabFolderRenderer.PART_MIN_BUTTON, SWT.NONE, gc, SWT.DEFAULT, SWT.DEFAULT).x;", "-\tif (folder.single) tabW += renderer.computeSize(CTabFolderRenderer.PART_CHEVRON_BUTTON, SWT.NONE, gc, SWT.DEFAULT, SWT.DEFAULT).x;", "-\tif (folder.topRight != null) {", "-\t\tPoint pt = folder.topRight.computeSize(SWT.DEFAULT, folder.tabHeight, flushCache);", "-\t\ttabW += 3 + pt.x;", "+\tint width = 0, wrapHeight = 0;", "+\tboolean leftControl = false, rightControl = false;", "+\tif (wHint == SWT.DEFAULT) {", "+\t\tfor (int i = 0; i < folder.controls.length; i++) {", "+\t\t\tControl control = folder.controls[i];", "+\t\t\tif (control.getVisible()) {", "+\t\t\t\tif ((folder.controlAlignments[i] & SWT.LEAD) != 0) {", "+\t\t\t\t\tleftControl = true;", "+\t\t\t\t} else {", "+\t\t\t\t\trightControl = true;", "+\t\t\t\t}", "+\t\t\t\twidth += control.computeSize(SWT.DEFAULT, SWT.DEFAULT).x;", "+\t\t\t}", "+\t\t}", "+\t} else {", "+\t\tPoint size = new Point (wHint, hHint);", "+\t\tboolean[][] positions = new boolean[1][];", "+\t\tRectangle[] rects = folder.computeControlBounds(size, positions);", "+\t\tint minY = Integer.MAX_VALUE, maxY = 0;", "+\t\tfor (int i = 0; i < rects.length; i++) {", "+\t\t\tif (positions[0][i]) {", "+\t\t\t\tminY = Math.min(minY, rects[i].y);", "+\t\t\t\tmaxY = Math.max(maxY, rects[i].y + rects[i].height);", "+\t\t\t\twrapHeight = maxY - minY;", "+\t\t\t} else {", "+\t\t\t\tif ((folder.controlAlignments[i] & SWT.LEAD) != 0) {", "+\t\t\t\t\tleftControl = true;", "+\t\t\t\t} else {", "+\t\t\t\t\trightControl = true;", "+\t\t\t\t}", "+\t\t\t\twidth += rects[i].width;", "+\t\t\t}", "+\t\t}", "+\tif (leftControl) width += CTabFolder.SPACING * 2;", "+\tif (rightControl) width += CTabFolder.SPACING * 2;", "+\ttabW += width;", "-\tint minWidth = Math.max(tabW, controlW);", "-\tint minHeight = (folder.minimized) ? 0 : controlH;", "+\tint minWidth = Math.max(tabW, controlW + folder.marginWidth);", "+\tint minHeight = (folder.minimized) ? 0 : controlH + wrapHeight;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30775ee8a2be331887ebe6652459ff6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "17c25770000eeabd3d2a853aa952a9512ccf690d", "commitAfterChange": "ae3524b4e7213bdc988c847b48af55b6ec06a750", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " boolean updateItems(int showIndex)", "signatureAfterChange": " boolean updateItems(int showIndex)", "diff": ["-\t\tint idx = -1;", "-\t\tfor (int i = 0; i < priority.length; i++) {", "-\t\t\tif (priority[i] == showIndex) {", "-\t\t\t\tidx = i;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\tif (priority[idx] > priority[0]) {", "+\t\tint firstIndex = showIndex;", "+\t\tif (priority[0] < showIndex) {", "+\t\t\tint width = 0;", "+\t\t\tint[] widths = new int[items.length];", "-\t\t\tint nextIndex = priority[idx];", "-\t\t\tCTabItem next = items[nextIndex];", "-\t\t\tint width = next.preferredWidth(gc, nextIndex == selectedIndex, true);", "-\t\t\twhile (idx > 1) {", "-\t\t\t\tnextIndex = priority[idx-1];", "-\t\t\t\tnext = items[nextIndex];", "-\t\t\t\twidth += next.preferredWidth(gc, nextIndex == selectedIndex, true);", "+\t\t\tfor (int i = priority[0]; i <= showIndex; i++) {", "+\t\t\t\twidths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\twidth += widths[i];", "-\t\t\t\tidx--;", "+\t\t\t}", "+\t\t\tif (width > maxWidth) {", "+\t\t\t\twidth = 0;", "+\t\t\t\tfor (int i = showIndex; i >= 0; i--) {", "+\t\t\t\t\tif (widths[i] == 0) widths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\t\tfirstIndex = i;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfirstIndex = priority[0];", "+\t\t\t\tfor (int i = showIndex + 1; i < items.length; i++) {", "+\t\t\t\t\twidths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\tif (width >= maxWidth) break;", "+\t\t\t\t}", "+\t\t\t\tif (width < maxWidth) {", "+\t\t\t\t\tfor (int i = priority[0] - 1; i >= 0; i--) {", "+\t\t\t\t\t\tif (widths[i] == 0) widths[i] = items[i].preferredWidth(gc, i == selectedIndex, true);", "+\t\t\t\t\t\twidth += widths[i];", "+\t\t\t\t\t\tif (width > maxWidth) break;", "+\t\t\t\t\t\tfirstIndex = i;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\tint[] newPriority = new int[priority.length];", "-\t\tSystem.arraycopy(priority, idx, newPriority, 0, priority.length - idx);", "-\t\tSystem.arraycopy(priority, 0, newPriority, priority.length - idx, idx);", "-\t\tpriority = newPriority;", "-}", "+\t\tif (firstIndex != priority[0]) {", "+\t\t\tint index = 0;", "+\t\t\tfor (int i = firstIndex; i < items.length; i++) {", "+\t\t\t\tpriority[index++] = i;", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < firstIndex; i++) {", "+\t\t\t\tpriority[index++] = i;", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 49078}