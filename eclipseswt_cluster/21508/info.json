{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ebea88f4df2a7b6bcc3da5dc24b7a505", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f87fc8d47877118cedf6dfe72371d05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void fixScrollBar ()", "signatureAfterChange": "  void _addListener (int eventType, Listener listener)", "diff": ["+", "+void _addListener (int eventType, Listener listener) {", "+\tsuper._addListener (eventType, listener);", "+\tclearCachedWidth (items);", "-", "-void fixScrollBar () {", "-\t/*", "-\t* Bug in the Macintosh. For some reason, the data browser does not update", "-\t* the vertical scrollbar when it is scrolled to the bottom and items are", "-\t* removed.  The fix is to check if the scrollbar value is bigger the", "-\t* maximum number of visible items and clamp it when needed.", "-\t*/", "-//\tint [] top = new int [1], left = new int [1];", "-//\tOS.GetDataBrowserScrollPosition (handle, top, left);", "-//\tint maximum = Math.max (0, getItemHeight () * visibleCount - getClientArea ().height);", "-//\tif (top [0] > maximum) {", "-//\t\tOS.SetDataBrowserScrollPosition (handle, maximum, left [0]);", "-//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44f119d19a480e92fb415b94e8900c8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int processShow (Object callData)", "signatureAfterChange": "  int kEventMenuOpening (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventMenuOpening (int nextHandler, int theEvent, int userData) {", "+\tsendEvent (SWT.Show);", "+\treturn OS.eventNotHandledErr;", "+}", "-", "-int processShow (Object callData) {", "-\tstate &= ~HIDDEN;", "-\tsendEvent (SWT.Show);", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebdc1a9730375d195566f2583acf780b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "6aba8155c65af092492019533ab45e5a8066cbeb", "commitAfterChange": "5af866130b1781f4a201c60b77b83f0df2bbeea9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public static void setKeyboardLanguage(int language)", "signatureAfterChange": "\r public static void setKeyboardLanguage(int language)", "diff": ["-\tboolean isBidiLang = (language == KEYBOARD_HEBREW) || (language == KEYBOARD_ARABIC);\t\t\r", "-\t// get the corresponding WIN language id for the\r", "-\t// language\r", "-\tif (isBidiLang) {\r", "-\t\tint langId;\r", "-\t\tif (language == KEYBOARD_HEBREW) langId = LANG_HEBREW;\r", "-\t\telse langId = LANG_ARABIC;\t\t\r", "+\tif (language == KEYBOARD_BIDI) {\r", "-\t\t// set to first language of the given type\r", "+\t\t// set to first bidi language\r", "-\t\t\tif (id == langId) {\r", "+\t\t\tif ((id == LANG_ARABIC) || (id == LANG_HEBREW)) {\r", "-\t\t// set to the first \"Latin\" language (anything not\r", "-\t\t// hebrew or arabic)\r", "+\t\t// get the list of active languages\r", "+\t\t// set to the first non-bidi language (anything not\r", "+\t\t// hebrew or arabic)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83dc8be56591af8f3ae0b5f63572c95d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "e97e95f22680c850e7f6a54a552acd4806179160", "commitAfterChange": "ebb556a0cd7b5054777471ac720ca422f4b5fe52", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " void clearMargin(GC gc, Color background, Rectangle clientArea, int renderHeight)", "signatureAfterChange": " void clearMargin(GC gc, Color background, Rectangle clientArea)", "diff": ["-void clearMargin(GC gc, Color background, Rectangle clientArea, int renderHeight) {", "-\tif (renderHeight + topMargin <= 0) {", "-\t\treturn;", "-\t}", "+void clearMargin(GC gc, Color background, Rectangle clientArea) {", "+\t// top margin", "-\tgc.fillRectangle(0, topMargin, leftMargin, renderHeight + topMargin);\t", "-\tgc.fillRectangle(", "-\t\tleftMargin, clientArea.height - bottomMargin, ", "-\t\tclientArea.width, bottomMargin);", "-\tgc.fillRectangle(", "-\t\tclientArea.width - rightMargin, topMargin, ", "-\t\trightMargin, renderHeight + topMargin);", "+\t// bottom margin", "+\tgc.fillRectangle(0, clientArea.height - bottomMargin, clientArea.width, bottomMargin);", "+\t// left margin", "+\tgc.fillRectangle(0, topMargin, leftMargin, clientArea.height - bottomMargin - topMargin);", "+\t// right margin", "+\tgc.fillRectangle(clientArea.width - rightMargin, topMargin, rightMargin, clientArea.height - bottomMargin - topMargin);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104bce49d78bb1756761c55f48304f76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 70, "signatureBeforeChange": " int processMouseMove (MacMouseEvent mme)", "signatureAfterChange": "  int kEventWindowHidden (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int kEventWindowHidden (int nextHandler, int theEvent, int userData) {", "+\treturn OS.eventNotHandledErr;", "+}", "-}", "-int processMouseMove (MacMouseEvent mme) {", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c61d58ed00a3e5ff6b4c8690d8d75a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "80349316611d76a8862f4cbf89d1c06da437f640", "commitAfterChange": "546263402943f988ce82854771902dc882c7230a", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public int[] getColumnOrder ()", "signatureAfterChange": " public int[] getColumnOrder ()", "diff": ["-\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0 );", "-\tif (count == 1 && columns [0] == null) return new int [0];", "-\tint [] order = new int [count];", "-\tOS.SendMessage (handle, OS.LVM_GETCOLUMNORDERARRAY, count, order);", "+\tif (columnCount == 0) return new int [0];", "+\tint [] order = new int [columnCount];", "+\tOS.SendMessage (handle, OS.LVM_GETCOLUMNORDERARRAY, columnCount, order);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22100641c0eb86c614e0429222a43d34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a9a7a4ecb343750076f1a3cb73a99f640e453aef", "commitAfterChange": "59a77a7bc11abfdc83d60e683ba3d0642ecbbef3", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void setTopIndex (int index)", "signatureAfterChange": " public void setTopIndex (int index)", "diff": ["+\tint itemHeight = getItemHeight ();", "-    top [0] = index * getItemHeight ();", "+    top [0] = Math.min (itemHeight * itemCount - getClientArea ().height, index * itemHeight);"]}], "num": 21508}