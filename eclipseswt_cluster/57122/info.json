{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5a72fa1c76a0138020213b105a356be", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5a4012b34ddf8c0784230ca678f0f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "21541d1c7be3bc786f754e0d8604695c158056de", "commitAfterChange": "4e877ff6e374c0eac9d6ca011beec9646167b530", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["-\tif (device == null) device = Device.getDevice();", "-\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tsuper(device);", "-\tthis.device = device;", "+\tdevice = this.device;", "-\tif (flag == SWT.IMAGE_COPY) return;", "+\tif (flag != SWT.IMAGE_COPY) {", "-\t/* Apply transformation */", "-\tswitch (flag) {", "-\t\tcase SWT.IMAGE_DISABLE: {", "-\t\t\tColor zeroColor = device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);", "-\t\t\tRGB zeroRGB = zeroColor.getRGB();", "-\t\t\tbyte zeroRed = (byte)zeroRGB.red;", "-\t\t\tbyte zeroGreen = (byte)zeroRGB.green;", "-\t\t\tbyte zeroBlue = (byte)zeroRGB.blue;", "-\t\t\tColor oneColor = device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);", "-\t\t\tRGB oneRGB = oneColor.getRGB();", "-\t\t\tbyte oneRed = (byte)oneRGB.red;", "-\t\t\tbyte oneGreen = (byte)oneRGB.green;", "-\t\t\tbyte oneBlue = (byte)oneRGB.blue;", "-\t\t\tbyte[] line = new byte[bpr];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "-\t\t\t\tint offset = 0;", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "-\t\t\t\t\tint intensity = red * red + green * green + blue * blue;", "-\t\t\t\t\tif (intensity < 98304) {", "-\t\t\t\t\t\tline[offset+1] = zeroRed;", "-\t\t\t\t\t\tline[offset+2] = zeroGreen;", "-\t\t\t\t\t\tline[offset+3] = zeroBlue;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tline[offset+1] = oneRed;", "-\t\t\t\t\t\tline[offset+2] = oneGreen;", "-\t\t\t\t\t\tline[offset+3] = oneBlue;", "+\t\t/* Apply transformation */", "+\t\tswitch (flag) {", "+\t\t\tcase SWT.IMAGE_DISABLE: {", "+\t\t\t\tColor zeroColor = device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);", "+\t\t\t\tRGB zeroRGB = zeroColor.getRGB();", "+\t\t\t\tbyte zeroRed = (byte)zeroRGB.red;", "+\t\t\t\tbyte zeroGreen = (byte)zeroRGB.green;", "+\t\t\t\tbyte zeroBlue = (byte)zeroRGB.blue;", "+\t\t\t\tColor oneColor = device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);", "+\t\t\t\tRGB oneRGB = oneColor.getRGB();", "+\t\t\t\tbyte oneRed = (byte)oneRGB.red;", "+\t\t\t\tbyte oneGreen = (byte)oneRGB.green;", "+\t\t\t\tbyte oneBlue = (byte)oneRGB.blue;", "+\t\t\t\tbyte[] line = new byte[bpr];", "+\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "+\t\t\t\t\tint offset = 0;", "+\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tint intensity = red * red + green * green + blue * blue;", "+\t\t\t\t\t\tif (intensity < 98304) {", "+\t\t\t\t\t\t\tline[offset+1] = zeroRed;", "+\t\t\t\t\t\t\tline[offset+2] = zeroGreen;", "+\t\t\t\t\t\t\tline[offset+3] = zeroBlue;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline[offset+1] = oneRed;", "+\t\t\t\t\t\t\tline[offset+2] = oneGreen;", "+\t\t\t\t\t\t\tline[offset+3] = oneBlue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\toffset += 4;", "-\t\t\t\t\toffset += 4;", "+\t\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "-\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "+\t\t\t\tbreak;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.IMAGE_GRAY: {\t\t\t", "-\t\t\tbyte[] line = new byte[bpr];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "-\t\t\t\tint offset = 0;", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "-\t\t\t\t\tbyte intensity = (byte)((red+red+green+green+green+green+green+blue) >> 3);", "-\t\t\t\t\tline[offset+1] = line[offset+2] = line[offset+3] = intensity;", "-\t\t\t\t\toffset += 4;", "+\t\t\tcase SWT.IMAGE_GRAY: {\t\t\t", "+\t\t\t\tbyte[] line = new byte[bpr];", "+\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "+\t\t\t\t\tint offset = 0;", "+\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tbyte intensity = (byte)((red+red+green+green+green+green+green+blue) >> 3);", "+\t\t\t\t\t\tline[offset+1] = line[offset+2] = line[offset+3] = intensity;", "+\t\t\t\t\t\toffset += 4;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "-\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "+\t\t\t\tbreak;", "-\t\t\tbreak;", "+\tinit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656b3f53784e98f14cc230eb9e5881aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "21541d1c7be3bc786f754e0d8604695c158056de", "commitAfterChange": "4e877ff6e374c0eac9d6ca011beec9646167b530", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["-\tif (device == null) device = Device.getDevice();", "-\tif (device == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tsuper(device);", "-\tthis.device = device;", "+\tdevice = this.device;", "-\tif (flag == SWT.IMAGE_COPY) return;", "-\t", "-\t/* Apply transformation */", "-\tswitch (flag) {", "-\t\tcase SWT.IMAGE_DISABLE: {", "-\t\t\tColor zeroColor = device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);", "-\t\t\tRGB zeroRGB = zeroColor.getRGB();", "-\t\t\tbyte zeroRed = (byte)zeroRGB.red;", "-\t\t\tbyte zeroGreen = (byte)zeroRGB.green;", "-\t\t\tbyte zeroBlue = (byte)zeroRGB.blue;", "-\t\t\tColor oneColor = device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);", "-\t\t\tRGB oneRGB = oneColor.getRGB();", "-\t\t\tbyte oneRed = (byte)oneRGB.red;", "-\t\t\tbyte oneGreen = (byte)oneRGB.green;", "-\t\t\tbyte oneBlue = (byte)oneRGB.blue;", "-\t\t\tbyte[] line = new byte[bpr];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "-\t\t\t\tint offset = 0;", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "-\t\t\t\t\tint intensity = red * red + green * green + blue * blue;", "-\t\t\t\t\tif (intensity < 98304) {", "-\t\t\t\t\t\tline[offset+1] = zeroRed;", "-\t\t\t\t\t\tline[offset+2] = zeroGreen;", "-\t\t\t\t\t\tline[offset+3] = zeroBlue;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tline[offset+1] = oneRed;", "-\t\t\t\t\t\tline[offset+2] = oneGreen;", "-\t\t\t\t\t\tline[offset+3] = oneBlue;", "+\tif (flag != SWT.IMAGE_COPY) {", "+\t\t", "+\t\t/* Apply transformation */", "+\t\tswitch (flag) {", "+\t\t\tcase SWT.IMAGE_DISABLE: {", "+\t\t\t\tColor zeroColor = device.getSystemColor(SWT.COLOR_WIDGET_NORMAL_SHADOW);", "+\t\t\t\tRGB zeroRGB = zeroColor.getRGB();", "+\t\t\t\tbyte zeroRed = (byte)zeroRGB.red;", "+\t\t\t\tbyte zeroGreen = (byte)zeroRGB.green;", "+\t\t\t\tbyte zeroBlue = (byte)zeroRGB.blue;", "+\t\t\t\tColor oneColor = device.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND);", "+\t\t\t\tRGB oneRGB = oneColor.getRGB();", "+\t\t\t\tbyte oneRed = (byte)oneRGB.red;", "+\t\t\t\tbyte oneGreen = (byte)oneRGB.green;", "+\t\t\t\tbyte oneBlue = (byte)oneRGB.blue;", "+\t\t\t\tbyte[] line = new byte[bpr];", "+\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "+\t\t\t\t\tint offset = 0;", "+\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tint intensity = red * red + green * green + blue * blue;", "+\t\t\t\t\t\tif (intensity < 98304) {", "+\t\t\t\t\t\t\tline[offset+1] = zeroRed;", "+\t\t\t\t\t\t\tline[offset+2] = zeroGreen;", "+\t\t\t\t\t\t\tline[offset+3] = zeroBlue;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline[offset+1] = oneRed;", "+\t\t\t\t\t\t\tline[offset+2] = oneGreen;", "+\t\t\t\t\t\t\tline[offset+3] = oneBlue;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\toffset += 4;", "-\t\t\t\t\toffset += 4;", "+\t\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "-\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "+\t\t\t\tbreak;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.IMAGE_GRAY: {\t\t\t", "-\t\t\tbyte[] line = new byte[bpr];", "-\t\t\tfor (int y=0; y<height; y++) {", "-\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "-\t\t\t\tint offset = 0;", "-\t\t\t\tfor (int x=0; x<width; x++) {", "-\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "-\t\t\t\t\tbyte intensity = (byte)((red+red+green+green+green+green+green+blue) >> 3);", "-\t\t\t\t\tline[offset+1] = line[offset+2] = line[offset+3] = intensity;", "-\t\t\t\t\toffset += 4;", "+\t\t\tcase SWT.IMAGE_GRAY: {\t\t\t", "+\t\t\t\tbyte[] line = new byte[bpr];", "+\t\t\t\tfor (int y=0; y<height; y++) {", "+\t\t\t\t\tOS.memmove(line, data + (y * bpr), bpr);", "+\t\t\t\t\tint offset = 0;", "+\t\t\t\t\tfor (int x=0; x<width; x++) {", "+\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tbyte intensity = (byte)((red+red+green+green+green+green+green+blue) >> 3);", "+\t\t\t\t\t\tline[offset+1] = line[offset+2] = line[offset+3] = intensity;", "+\t\t\t\t\t\toffset += 4;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "-\t\t\t\tOS.memmove(data + (y * bpr), line, bpr);", "+\t\t\t\tbreak;", "-\t\t\tbreak;", "+\tinit();"]}], "num": 57122}