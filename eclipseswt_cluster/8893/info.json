{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "deec2b5f349a7f796503f5c1f7728473", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f52853b4b861910a5c37a8318cb9965b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "6183eee6c60bae371c51eda279fad38931034a62", "commitAfterChange": "905b3909331e9158540f896976d5079deb353ba1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " Control [] _getChildren ()", "signatureAfterChange": " Control [] _getChildren ()", "diff": ["-\tint handles[]= new int[count];", "-\tint[] outHandle= new int[1];", "-\t", "-\tfor (int i= 0; i < count; i++) {", "-\t\tint index= (count-i);", "-\t\tif (OS.GetIndexedSubControl(handle, (short)index, outHandle) == 0)\t// indices are 1 based", "-\t\t\thandles[i]= outHandle[0];", "-\t\telse", "-\t\t\terror (SWT.ERROR_CANNOT_GET_ITEM);", "-\t}", "-\t", "+\tint[] outControl= new int[1];", "-\t\tint handle = handles [i];", "+\t\tif (MacUtil.getChild(handle, outControl, count, i) != OS.kNoErr)", "+\t\t\terror (SWT.ERROR_CANNOT_GET_ITEM);", "+\t\tint handle = outControl [0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ca080fe2c10ea45f37b8ab30a39913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void select (int start, int end)", "signatureAfterChange": " public void select (int start, int end)", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-\t/* AW", "-\tfor (int i=start; i<=end; i++) {", "-\t\tint index = i + 1;", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\t*/", "-    /* AW", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= end-start+1;", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(start+i);", "-\t\tids[i]= p.fId;", "-\t}", "+    int[] ids= getIds(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6549bf04b923a00a6bd82b08dbb2b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": " public String [] getItems ()", "signatureAfterChange": "  public String [] getItems ()", "diff": ["- */", "+", "-    String[] result= new String[fData.size()];", "-    Iterator iter= fData.iterator();", "-    for (int i= 0; iter.hasNext(); i++) {", "-    \tPair p= (Pair) iter.next();", "-    \tresult[i]= p.fValue;", "-    }", "+    String [] result = new String [itemCount];", "+\tSystem.arraycopy (items, 0, result, 0, itemCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb3f0806b53a55fa94a299c5c4f5381", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0, OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-\tfor (int i=0; i<argList[3]; i++) {", "-\t\tint index = i + 1;", "-\t\tif (!OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= fData.size();", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(i);", "-\t\tids[i]= p.fId;", "-\t}", "+\tint n= fData.size();", "+\tif (n <= 0) return;", "+\tint[] ids= getIds(0, n-1);"]}], "num": 8893}