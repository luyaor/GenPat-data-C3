{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5f5754dd73e80f2a4363b6ac8e1d66d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15a8aa7f2a56da3376013310293f720", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "70070a0630eae4a6a52cda4d5ee443c309eda99d", "commitAfterChange": "9dc226d0b135388db5e3074e5b43f40b5e92a9f9", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": " public void timerExec (int milliseconds, Runnable runnable)", "diff": ["+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (timerIDs == null) timerIDs = new int [4];", "+\tif (timerIds == null) timerIds = new int [4];\t", "-\t\tif (timerList [index] == null) break;", "+\t\tif (timerList [index] == runnable) break;", "-\tif (index == timerList.length) {", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);", "-\t\ttimerList = newTimerList;", "-\t\tint [] newTimerIDs = new int [timerIDs.length + 4];", "-\t\tSystem.arraycopy (timerIDs, 0, newTimerIDs, 0, timerIDs.length);", "-\t\ttimerIDs = newTimerIDs;", "+\tif (index != timerList.length) {", "+\t\tOS.gtk_timeout_remove (timerIds [index]);", "+\t\ttimerList [index] = null;", "+\t\ttimerIds [index] = 0;", "+\t\tif (milliseconds < 0) return;", "+\t} else {", "+\t\tif (milliseconds < 0) return;", "+\t\tindex = 0;", "+\t\twhile (index < timerList.length) {", "+\t\t\tif (timerList [index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == timerList.length) {", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);", "+\t\t\ttimerList = newTimerList;", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);", "+\t\t\ttimerIds = newTimerIds;", "+\t\t}", "-\tint timerID = OS.gtk_timeout_add (milliseconds, timerProc, index);", "-\tif (timerID != 0) {", "-\t\ttimerIDs [index] = timerID;", "+\tint timerId = OS.gtk_timeout_add (milliseconds, timerProc, index);", "+\tif (timerId != 0) {", "+\t\ttimerIds [index] = timerId;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70c4dddb54e2e9e6065e9830f53b7cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9dc226d0b135388db5e3074e5b43f40b5e92a9f9", "commitAfterChange": "46f3dd5336818efadcf622450220ab04d176e7d4", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "diff": ["+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);\r", "-\tif (timerIDs == null) timerIDs = new int [4];\r", "+\tif (timerIds == null) timerIds = new int [4];\r", "-\t\tif (timerList [index] == null) break;\r", "+\t\tif (timerList [index] == runnable) break;\r", "-\tif (index == timerList.length) {\r", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "-\t\ttimerList = newTimerList;\r", "-\t\tint [] newTimerIDs = new int [timerIDs.length + 4];\r", "-\t\tSystem.arraycopy (timerIDs, 0, newTimerIDs, 0, timerIDs.length);\r", "-\t\ttimerIDs = newTimerIDs;\r", "+\tif (index != timerList.length) {\r", "+\t\tOS.XtRemoveTimeOut (timerIds [index]);\r", "+\t\ttimerList [index] = null;\r", "+\t\ttimerIds [index] = 0;\r", "+\t\tif (milliseconds < 0) return;\r", "+\t} else {\r", "+\t\tif (milliseconds < 0) return;\r", "+\t\tindex = 0;\r", "+\t\twhile (index < timerList.length) {\r", "+\t\t\tif (timerList [index] == null) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (index == timerList.length) {\r", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "+\t\t\ttimerList = newTimerList;\r", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];\r", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);\r", "+\t\t\ttimerIds = newTimerIds;\r", "+\t\t}\r", "-\tint timerID = OS.XtAppAddTimeOut (xtContext, milliseconds, timerProc, index);\r", "-\tif (timerID != 0) {\r", "-\t\ttimerIDs [index] = timerID;\r", "+\tint timerId = OS.XtAppAddTimeOut (xtContext, milliseconds, timerProc, index);\r", "+\tif (timerId != 0) {\r", "+\t\ttimerIds [index] = timerId;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446ea518f3014e69d455837065565177", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "46f3dd5336818efadcf622450220ab04d176e7d4", "commitAfterChange": "28bf859d32ef32365c9d0579ca6e1129bcf6badc", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 74, "signatureBeforeChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": "\r public void timerExec (int milliseconds, Runnable runnable)", "diff": ["-\tif (timerList == null) {\r", "-\t\ttimerList = new Runnable [4];\r", "-\t\ttimerIds = new int [4];\r", "-\t}\r", "+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);\r", "+\tif (timerList == null) timerList = new Runnable [4];\r", "+\tif (timerIds == null) timerIds = new int [4];\r", "-\t\tif (timerList [index] == null) break;\r", "+\t\tif (timerList [index] == runnable) break;\r", "-\tif (index == timerList.length) {\r", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "-\t\ttimerList = newTimerList;\r", "-\t\tint [] newTimerIds = new int [timerIds.length + 4];\r", "-\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);\r", "-\t\ttimerIds = newTimerIds;\r", "+\tint timerId = 0;\r", "+\tif (index != timerList.length) {\r", "+\t\ttimerId = timerIds [index];\r", "+\t\tif (milliseconds < 0) {\t\t\t\r", "+\t\t\tOS.KillTimer (hwndShell, timerId);\r", "+\t\t\ttimerList [index] = null;\r", "+\t\t\ttimerIds [index] = 0;\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t} else {\r", "+\t\tindex = 0;\r", "+\t\twhile (index < timerList.length) {\r", "+\t\t\tif (timerList [index] == null) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\ttimerCount++;\r", "+\t\ttimerId = timerCount;\r", "+\t\tif (index == timerList.length) {\r", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];\r", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);\r", "+\t\t\ttimerList = newTimerList;\r", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];\r", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);\r", "+\t\t\ttimerIds = newTimerIds;\r", "+\t\t}\r", "-\ttimerCount++;\r", "-\tint timerID = OS.SetTimer (hwndShell, timerCount, milliseconds, 0);\r", "-\tif (timerID != 0) {\r", "+\tint newTimerID = OS.SetTimer (hwndShell, timerId, milliseconds, 0);\r", "+\tif (newTimerID != 0) {\r", "-\t\ttimerIds [index] = timerID;\r", "+\t\ttimerIds [index] = newTimerID;\r"]}], "num": 57282}