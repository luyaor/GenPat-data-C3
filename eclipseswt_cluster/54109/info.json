{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe347af54aad93e4720d225dfa32afbd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbbc2ccb69c75de2725b642cf2e53279", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "4bc5ce29e889582ae71a6cab9895f599711bc0a9", "commitAfterChange": "cb86533065e155575ec075cb5ddb6e1134454a7c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void test_deselectII()", "signatureAfterChange": "  public void test_deselectII()", "diff": ["-\tassertEquals(\":a:\", items2, list.getSelection());", "+\tassertSame(\":a:\", items2, list.getSelection());", "-\tassertEquals(\":b:\", list.getSelectionIndices(), new int[] { 1, 2, 3 });", "+\tassertSame(\":b:\", list.getSelectionIndices(), new int[] { 1, 2, 3 });", "-\tassertEquals(\":bbb:\", list.getSelectionIndices(), new int[] { 1, 2, 3 });", "+\tassertSame(\":bbb:\", list.getSelectionIndices(), new int[] { 1, 2, 3 });", "-\tassertEquals(", "+\tassertSame("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c9f4a3550cbcc8e7c6d19c4abaaa622", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "7a8cca70d28882600bc8f1a1c6d8951ea43ed4f2", "commitAfterChange": "18e472b1f81e0cd0a55eba1e6c596298ad6422b9", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test_setSelectionII()", "signatureAfterChange": "  public void test_setSelectionII()", "diff": ["-\tassertEquals(new int[]{0, 1}, table.getSelectionIndices());", "+\tassertSame(new int[]{0, 1}, table.getSelectionIndices());", "-\tassertEquals(new int[]{2, 3, 4}, table.getSelectionIndices());\t", "+\tassertSame(new int[]{2, 3, 4}, table.getSelectionIndices());\t", "-\tassertEquals(new int[]{3, 4}, table.getSelectionIndices());\t", "+\tassertSame(new int[]{3, 4}, table.getSelectionIndices());\t", "-\tassertEquals(new int[]{1, 2, 3, 4}, table.getSelectionIndices());", "+\tassertSame(new int[]{1, 2, 3, 4}, table.getSelectionIndices());", "-\tassertEquals(new int[]{0, 1, 2, 3, 4}, table.getSelectionIndices());", "+\tassertSame(new int[]{0, 1, 2, 3, 4}, table.getSelectionIndices());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455c9d502203737543ae48fa28405c96", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "72bca330545187aed3f298af1ba72f7fcfb258d6", "commitAfterChange": "6ad6f774040a2a1c32f174a6e32172c88bc25587", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "\r \r void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tint maskBitmap = OS.CreateBitmap(srcWidth, srcHeight, 1, 1, null);\r", "+\tint maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);\r", "-\tOS.BitBlt(maskHdc, 0, 0, srcWidth, srcHeight, srcHdc, 0, 0, OS.SRCCOPY);\r", "+\tOS.BitBlt(maskHdc, 0, 0, imgWidth, imgHeight, srcHdc, 0, 0, OS.SRCCOPY);\r"]}], "num": 54109}