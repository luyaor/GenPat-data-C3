{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b28ffb7e35a5b9d12aa26c8cefad9009", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0cedd0b5f37d75c76d380770ebdcd6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+", "+\t/* Strip out mnemonic marker symbols, and remember the mnemonic. */", "+\tchar [] unicode = new char [string.length ()];", "+\tstring.getChars (0, unicode.length, unicode, 0);", "+\tint i=0, j=0, mnemonic=0;", "+\twhile (i < unicode.length) {", "+\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {", "+\t\t\tif (i == unicode.length) {continue;}", "+\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}", "+\t\t\tif (mnemonic == 0) mnemonic = unicode [i];", "+\t\t\tj--;", "+\t\t}", "+\t}", "+\twhile (j < unicode.length) unicode [j++] = 0;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37850c51efe0c27b80196b9c3c4483e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "6eefe9ffbd7cd1b6a970838d74dc34733cd0f5bf", "commitAfterChange": "96ec325b6adebb0274d051fbc17d0791e4b077ff", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r public void setText (String string)", "signatureAfterChange": "\r public void setText (String string)", "diff": ["-\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);\r", "+\tchar [] text = new char [string.length ()];\r", "+\tstring.getChars (0, text.length, text, 0);\r", "+\tint i=0, j=0, mnemonic=0;\r", "+\twhile (i < text.length) {\r", "+\t\tif ((text [j++] = text [i++]) == Mnemonic) {\r", "+\t\t\tif (i == text.length) {continue;}\r", "+\t\t\tif (text [i] == Mnemonic) {i++; continue;}\r", "+\t\t\tif (mnemonic == 0) mnemonic = text [i];\r", "+\t\t\tj--;\r", "+\t\t}\r", "+\t}\r", "+\twhile (j < text.length) text [j++] = 0;\r", "+\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), text, true);\r", "-\t\t0);\r", "-\tint [] argList = {OS.XmNlabelString, xmString};\r", "+\t\t0);\t\r", "+\tif (xmString == 0) error (SWT.ERROR_CANNOT_SET_TEXT);\r", "+\tif (mnemonic == 0) mnemonic = OS.XK_VoidSymbol;\r", "+\tint [] argList = {\r", "+\t\tOS.XmNlabelType, OS.XmSTRING,\r", "+\t\tOS.XmNlabelString, xmString,\r", "+\t\tOS.XmNmnemonic, mnemonic,\r", "+\t};\r", "-\tOS.XmStringFree (xmString);\r", "+\tif (xmString != 0) OS.XmStringFree (xmString);\r"]}], "num": 29970}