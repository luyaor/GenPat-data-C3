{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00e30234f9b1c6296cddeb29a13d03f9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2875dbb5b9162610be47e72c2273724", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "4e692e594829c957204f8759719ba27bd5c7bed5", "commitAfterChange": "1bd4a6d238f246b1a33b1e165b82bcbcf963d2f9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public MenuItem [] getItems ()", "signatureAfterChange": " public MenuItem [] getItems ()", "diff": ["-\tSystem.arraycopy (items, 0, result, 0, count);", "+\tint index = 0;", "+\tif (items != null) {", "+\t\tfor (int i = 0; i < count; i++) {", "+\t\t\tMenuItem item = items [i];", "+\t\t\tif (item != null && !item.isDisposed ()) {", "+\t\t\t\tresult [index++] = item;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (index != result.length) {", "+\t\tMenuItem [] newItems = new MenuItem[index];", "+\t\tSystem.arraycopy(result, 0, newItems, 0, index);", "+\t\tresult = newItems;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f395d5dab7202c1b277b876c7d6cd45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "33c33a3bdd089f30da56054b30ca1637d9ac777a", "commitAfterChange": "f1c4df27b1140c8819632e25c9c738e0a24ed741", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r public int[] getItemOrder ()", "signatureAfterChange": "\r public int[] getItemOrder ()", "diff": ["-\tcheckWidget();\r", "-\tint[] indices = new int[originalItems.length];\r", "-\tfor (int i = 0; i < originalItems.length; i++) {\r", "-\t\tint index = indexOf(originalItems[i]);\r", "-\t\tif (index < 0 || index >= indices.length) error(SWT.ERROR_CANNOT_GET_ITEM);\r", "-\t\tindices [index] = i;\r", "+\tcheckWidget ();\r", "+\tint count = getItemCount ();\r", "+\tint [] indices = new int [count];\r", "+\tcount = 0;\r", "+\tfor (int i = 0; i < items.length; i++) {\r", "+\t\tfor (int j = 0; j < items[i].length; j++) {\r", "+\t\t\tCoolItem item = items[i][j];\r", "+\t\t\tint index = 0;\r", "+\t\t\twhile (index<originalItems.length) {\r", "+\t\t\t\tif (originalItems [index] == item) break;\r", "+\t\t\t\tindex++;\t\r", "+\t\t\t}\r", "+\t\t\tif (index == originalItems.length) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\t\t\tindices [count++] = index;\r", "+\t\t}\r", "-\treturn indices;\t\r", "+\treturn indices;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40dc78599f9648d3311cf7dbaf1f95b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3f452be6b0a9de0c5ecf04a918f5aea5af283a03", "commitAfterChange": "83ce5345a288d964929f5ae612ff7f68685f8832", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void clearAll (TreeItem parentItem, boolean all)", "signatureAfterChange": "  void clearAll (TreeItem parentItem, boolean all)", "diff": ["-//\tboolean update = !inClearAll;", "-//\tint count = getItemCount (parentItem);", "-//\tif (count == 0) return;", "-//\tinClearAll = true;", "-//\tint [] ids = parentItem == null ? childIds : parentItem.childIds;", "-//\tfor (int i=0; i<count; i++) {", "-//\t\tTreeItem item = _getItem (ids [i], false);", "-//\t\tif (item != null) {", "-//\t\t\titem.clear ();", "-//\t\t\tif (all) clearAll (item, true);", "-//\t\t}", "-//\t}", "-//\tif (update) {", "-//\t\tOS.UpdateDataBrowserItems (handle, 0, 0, null, OS.kDataBrowserItemNoProperty, OS.kDataBrowserNoItem);", "-//\t\tinClearAll = false;", "-//\t}", "+\tint count = getItemCount (parentItem);", "+\tif (count == 0) return;", "+\tTreeItem [] children = parentItem == null ? items : parentItem.items; ", "+\tfor (int i=0; i<count; i++) {", "+\t\tTreeItem item = children [i];", "+\t\tif (item != null) {", "+\t\t\titem.clear ();", "+\t\t\t((NSOutlineView) view).reloadItem_ (item.handle);", "+\t\t\tif (all) clearAll (item, true);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed8aaca8cc2f37eba7b27c570020cb37", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "4402982067705616c1b209c79f66cb168269dd6f", "commitAfterChange": "b24a28ed7fb80af7b6e396a2e34774c395797532", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setImages (Image [] images)", "signatureAfterChange": " public void setImages (Image [] images)", "diff": ["-\tif (images.length > 0) {", "-\t\tImage image = images [0];", "-\t\tif (image != null) {", "-\t\t\tOS.SetApplicationDockTileImage (image.handle);", "-\t\t} else {", "-\t\t\tOS.RestoreApplicationDockTileImage ();", "+\tif (images != null) {", "+\t\tint index = -1, width = 0, height = 0;", "+\t\tfor (int i = 0; i < images.length; i++) {", "+\t\t\tImage image = images[i];", "+\t\t\tRectangle bounds = image.getBounds();", "+\t\t\tif (bounds.width > width || bounds.height > height) {", "+\t\t\t\twidth = bounds.width;", "+\t\t\t\theight = bounds.height;", "+\t\t\t\tindex = i;", "+\t\t\t}", "+\t\tOS.SetApplicationDockTileImage (images [index].handle);", "+\t} else {", "+\t\tOS.RestoreApplicationDockTileImage ();"]}], "num": 7086}