{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e3d395359d5fd67c4abbf336502a86b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0388f83329fdf5ef3aa3880fc2ada170", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b410448b2ee30c39984d789197ecbf23e5a160a6", "commitAfterChange": "63863d93c2ee25d0b7bc77cb902dfe9620ae110e", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 110, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-\t\tRectF bounds = new RectF();", "-\t\tchar[] buffer;", "-\t\tif (length != 0) {", "-\t\t\tbuffer = new char [length];", "-\t\t\tstring.getChars(0, length, buffer, 0);", "-\t\t} else {", "-\t\t\tbuffer = new char[]{' '};", "-\t\t}", "-\t\tint nGlyphs = (length * 3 / 2) + 16;", "-\t\tGCP_RESULTS result = new GCP_RESULTS();", "-\t\tresult.lStructSize = GCP_RESULTS.sizeof;", "-\t\tresult.nGlyphs = nGlyphs;", "-\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\tint /*long*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "-\t\tint /*long*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "-\t\tint dwFlags = OS.GCP_GLYPHSHAPE | OS.GCP_REORDER | OS.GCP_LIGATE;", "-\t\tint /*long*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "-\t\tint /*long*/ hFont = data.hGDIFont;", "-\t\tif (hFont == 0 && data.font != null) hFont = data.font.handle;", "-\t\tint /*long*/ oldFont = 0;", "-\t\tif (hFont != 0) oldFont = OS.SelectObject(hdc, hFont);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) | OS.LAYOUT_RTL);", "-\t\tOS.GetCharacterPlacementW(hdc, buffer, length, 0, result, dwFlags);", "-\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) & ~OS.LAYOUT_RTL);", "-\t\tif (hFont != 0) OS.SelectObject(hdc, oldFont);", "-\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "-\t\tint drawX = 0;", "-\t\tint[] dx = new int[result.nGlyphs];", "-\t\tOS.MoveMemory(dx, lpDx, result.nGlyphs * 4);\t", "-\t\tfloat[] points = new float[dx.length * 2];", "-\t\tfor (int i = 0, j = 0; i < dx.length; i++, j += 2) {", "-\t\t\tpoints[j] = drawX;", "-\t\t\tdrawX += dx[i];", "-\t\t}", "-\t\tGdip.Graphics_MeasureDriverString(gdipGraphics, lpGlyphs, result.nGlyphs, data.gdipFont, points, 0, 0, bounds);", "-\t\tOS.HeapFree(hHeap, 0, lpGlyphs);", "-\t\tOS.HeapFree(hHeap, 0, lpDx);", "-\t\treturn new Point(length == 0 ? 0 : Math.round(bounds.Width), Math.round(bounds.Height));", "+\t\tPoint size = new Point(0, 0);", "+\t\tdrawText(gdipGraphics, string, 0, 0, 0, size);", "+\t\treturn size;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73b847c2ac14d0ab65896e9f74d38724", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e3d907d6678e7fdda004ed7738717629aea97ed2", "commitAfterChange": "7bb044e5c9466f1fefdeb85ae3faca48de0e8d34", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-\tif (data.gdipGraphics != 0) {", "-\t\tPointF pt = new PointF();", "+\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "-\t\tint /*long*/ format = Gdip.StringFormat_Clone(Gdip.StringFormat_GenericTypographic());", "-\t\tint formatFlags = Gdip.StringFormat_GetFormatFlags(format) | Gdip.StringFormatFlagsMeasureTrailingSpaces;", "-\t\tif ((data.style & SWT.MIRRORED) != 0) formatFlags |= Gdip.StringFormatFlagsDirectionRightToLeft;", "-\t\tGdip.StringFormat_SetFormatFlags(format, formatFlags);", "-\t\tGdip.Graphics_MeasureString(data.gdipGraphics, buffer, buffer.length, data.gdipFont, pt, format, bounds);", "-\t\tGdip.StringFormat_delete(format);", "+\t\tint nGlyphs = (length * 3 / 2) + 16;", "+\t\tGCP_RESULTS result = new GCP_RESULTS();", "+\t\tresult.lStructSize = GCP_RESULTS.sizeof;", "+\t\tresult.nGlyphs = nGlyphs;", "+\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\t\tint /*long*/ lpDx = result.lpDx = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "+\t\tint /*long*/ lpGlyphs = result.lpGlyphs = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 2);", "+\t\tint dwFlags = OS.GCP_GLYPHSHAPE | OS.GCP_REORDER | OS.GCP_LIGATE;", "+\t\tint /*long*/ hdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) | OS.LAYOUT_RTL);", "+\t\tOS.GetCharacterPlacementW(hdc, buffer, length, 0, result, dwFlags);", "+\t\tif ((data.style & SWT.MIRRORED) != 0) OS.SetLayout(hdc, OS.GetLayout(hdc) & ~OS.LAYOUT_RTL);", "+\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "+\t\tint drawX = 0;", "+\t\tint[] dx = new int[result.nGlyphs];", "+\t\tOS.MoveMemory(dx, lpDx, result.nGlyphs * 4);\t", "+\t\tfloat[] points = new float[dx.length * 2];", "+\t\tfor (int i = 0, j = 0; i < dx.length; i++, j += 2) {", "+\t\t\tpoints[j] = drawX;", "+\t\t\tdrawX += dx[i];", "+\t\t}", "+\t\tGdip.Graphics_MeasureDriverString(gdipGraphics, lpGlyphs, result.nGlyphs, data.gdipFont, points, 0, 0, bounds);", "+\t\tOS.HeapFree(hHeap, 0, lpGlyphs);", "+\t\tOS.HeapFree(hHeap, 0, lpDx);"]}], "num": 55737}