{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bc11462cde27809383f54d5fff403ae", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37bfac45c1e471ec8fd0a782491370c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "8b3d8b2f0aa045952071368dea1eee4811d570fa", "commitAfterChange": "187ea656e7718232fbbad1117283cd1f27ee85cc", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public int getBaseline(int offset)", "signatureAfterChange": " public int getBaseline(int offset)", "diff": ["-\tint baseline = layout.getLineMetrics(lineInParagraph).getAscent();", "+\tFontMetrics metrics = layout.getLineMetrics(lineInParagraph);", "-\treturn baseline;", "+\treturn metrics.getAscent() + metrics.getLeading();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "642d1ffad2844e98ffde636601778fc2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "21ad7e1c41ce1d63dd243622044164fd46b26ef4", "commitAfterChange": "1c5467f79f5b1c73782459594b2f72f13320a777", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  boolean setScrollWidth (boolean set, int[] childIds, boolean recurse)", "signatureAfterChange": "  boolean setScrollWidth (TreeItem item, boolean recurse, boolean callMeasureItem)", "diff": ["+", "+boolean setScrollWidth (TreeItem item, boolean recurse, boolean callMeasureItem) {", "+\treturn setScrollWidth (new TreeItem[] {item}, recurse, callMeasureItem);", "+}", "-", "-boolean setScrollWidth (boolean set, int[] childIds, boolean recurse) {", "-//\tif (ignoreRedraw || drawCount != 0) return false;", "-//\tif (columnCount != 0 || childIds == null) return false;", "-//\tGC gc = new GC (this);", "-//\tint newWidth = calculateWidth (childIds, gc, recurse, 0, 0);", "-//\tgc.dispose ();", "-//\tnewWidth += getInsetWidth (column_id, false);", "-//\tif (!set) {", "-//\t\tshort [] width = new short [1];", "-//\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "-//\t\tif (width [0] >= newWidth) return false;", "-//\t}", "-//\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, column_id, (short) newWidth);", "-\treturn true;"]}], "num": 7585}