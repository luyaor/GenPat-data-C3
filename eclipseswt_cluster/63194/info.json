{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18008d06c7ec900579076acdee55d590", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca2d7d567ff28b59b1e7cfadc02ca05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "33702c0f14302d7231ea3f607b86a900e03829aa", "commitAfterChange": "d089b2cf79ce87d2a82f677ea1a4ce5a5ba9d4a4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void init(ImageData image)", "signatureAfterChange": "  void init(ImageData image)", "diff": ["-\tint width = image.width;", "-\tint height = image.height;", "+\tint width = this.width = image.width;", "+\tint height = this.height = image.height;", "-\tint /*long*/ pixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "-\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\tint /*long*/ data = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\tint stride, destDepth;", "+\tint /*long*/ data, pixbuf = 0;", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 22, 0)) {", "+\t\tstride = Cairo.cairo_format_stride_for_width(Cairo.CAIRO_FORMAT_ARGB32, width);", "+\t\tdata = surfaceData = OS.g_malloc(stride * height);", "+\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tif (surface == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tdestDepth = 32;", "+\t} else {", "+\t\tpixbuf = OS.gdk_pixbuf_new(OS.GDK_COLORSPACE_RGB, false, 8, width, height);", "+\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tstride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\tdata = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\tdestDepth = 24;", "+\t}", "-\tif (!palette.isDirect || image.depth != 24 || stride != image.bytesPerLine || palette.redMask != 0xFF0000 || palette.greenMask != 0xFF00 || palette.blueMask != 0xFF) {", "+\tif (!palette.isDirect || image.depth != destDepth || stride != image.bytesPerLine || palette.redMask != 0xFF0000 || palette.greenMask != 0xFF00 || palette.blueMask != 0xFF) {", "-\t\t\t\tbuffer, 24, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "+\t\t\t\tbuffer, destDepth, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "-\t\t\t\tbuffer, 24, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "+\t\t\t\tbuffer, destDepth, stride, ImageData.MSB_FIRST, 0, 0, width, height, 0xFF0000, 0xFF00, 0xFF,", "-\tint /*long*/ pixmap = OS.gdk_pixmap_new (OS.GDK_ROOT_PARENT(), width, height, -1);", "-\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "-\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tOS.gdk_pixbuf_render_to_drawable(pixbuf, pixmap, gdkGC, 0, 0, 0, 0, width, height, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "-\tOS.g_object_unref(gdkGC);", "-\tOS.g_object_unref(pixbuf);", "-\t", "+\tif (OS.GTK_VERSION < OS.VERSION(2, 22, 0) ) {", "+\t\tint /*long*/ pixmap = OS.gdk_pixmap_new (OS.GDK_ROOT_PARENT(), width, height, -1);", "+\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "+\t\tif (gdkGC == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.gdk_pixbuf_render_to_drawable(pixbuf, pixmap, gdkGC, 0, 0, 0, 0, width, height, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\tOS.g_object_unref(gdkGC);", "+\t\tOS.g_object_unref(pixbuf);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6252945923f95c682cb2d4ee244a7207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "18d0044e4fef7bd765ce225a04f92ac2d866c547", "commitAfterChange": "10046157a9d8b05ae9573fd5cdabb441946e876e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public Color getSystemColor (int id)", "signatureAfterChange": " public Color getSystemColor (int id)", "diff": ["+\tGdkColor gdkColor = null;", "-\t\tcase SWT.COLOR_INFO_FOREGROUND: \t\treturn NORMAL_fg;", "-\t\tcase SWT.COLOR_INFO_BACKGROUND: \t\treturn NORMAL_bg;", "-\t\t", "-\t\tcase SWT.COLOR_TITLE_FOREGROUND:\t\treturn SELECTED_text;", "-\t\tcase SWT.COLOR_TITLE_BACKGROUND:\t\treturn SELECTED_bg;", "-\t\tcase SWT.COLOR_TITLE_BACKGROUND_GRADIENT:\treturn SELECTED_light;", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_FOREGROUND:\treturn INSENSITIVE_fg;", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND:\treturn INSENSITIVE_bg;", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND_GRADIENT: return INSENSITIVE_light;", "-\t\t", "-\t\tcase SWT.COLOR_WIDGET_DARK_SHADOW:\t\treturn NORMAL_dark;", "-\t\tcase SWT.COLOR_WIDGET_NORMAL_SHADOW:\treturn NORMAL_mid;", "-\t\tcase SWT.COLOR_WIDGET_LIGHT_SHADOW: \treturn NORMAL_light;", "-\t\tcase SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW:\treturn NORMAL_light;", "-\t\tcase SWT.COLOR_WIDGET_BACKGROUND: \treturn NORMAL_bg;", "-\t\tcase SWT.COLOR_WIDGET_FOREGROUND:\treturn NORMAL_fg;", "-\t\tcase SWT.COLOR_WIDGET_BORDER: \t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "-\t\t", "-\t\tcase SWT.COLOR_LIST_FOREGROUND: \treturn super.getSystemColor (SWT.COLOR_BLACK);", "-\t\tcase SWT.COLOR_LIST_BACKGROUND: \treturn super.getSystemColor (SWT.COLOR_WHITE);", "-\t\tcase SWT.COLOR_LIST_SELECTION: \t\treturn SELECTED_bg;", "-\t\tcase SWT.COLOR_LIST_SELECTION_TEXT: \treturn SELECTED_text;", "+\t\tcase SWT.COLOR_INFO_FOREGROUND: \t\t\t\t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "+\t\tcase SWT.COLOR_INFO_BACKGROUND: \t\t\t\t\tgdkColor = COLOR_INFO_BACKGROUND;", "+\t\tcase SWT.COLOR_TITLE_FOREGROUND:\t\t\t\t\treturn super.getSystemColor (SWT.COLOR_WHITE);", "+\t\tcase SWT.COLOR_TITLE_BACKGROUND:\t\t\t\t\treturn super.getSystemColor (SWT.COLOR_DARK_BLUE);", "+\t\tcase SWT.COLOR_TITLE_BACKGROUND_GRADIENT:\t\t\treturn super.getSystemColor (SWT.COLOR_BLUE);", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_FOREGROUND:\t\t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND:\t\t\treturn super.getSystemColor (SWT.COLOR_DARK_GRAY);", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND_GRADIENT:\treturn super.getSystemColor (SWT.COLOR_GRAY);", "+\t\tcase SWT.COLOR_WIDGET_DARK_SHADOW:\t\t\t\t\tgdkColor = COLOR_WIDGET_DARK_SHADOW; break;", "+\t\tcase SWT.COLOR_WIDGET_NORMAL_SHADOW:\t\t\t\tgdkColor = COLOR_WIDGET_NORMAL_SHADOW; break;", "+\t\tcase SWT.COLOR_WIDGET_LIGHT_SHADOW: \t\t\t\tgdkColor = COLOR_WIDGET_LIGHT_SHADOW; break;", "+\t\tcase SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW:\t\t\t\tgdkColor = COLOR_WIDGET_HIGHLIGHT_SHADOW; break;", "+\t\tcase SWT.COLOR_WIDGET_BACKGROUND: \t\t\t\t\tgdkColor = COLOR_WIDGET_BACKGROUND; break;", "+\t\tcase SWT.COLOR_WIDGET_FOREGROUND:", "+\t\tcase SWT.COLOR_WIDGET_BORDER: \t\t\t\t\t\tgdkColor = COLOR_WIDGET_BORDER; break;", "+\t\tcase SWT.COLOR_LIST_FOREGROUND: \t\t\t\t\tgdkColor = COLOR_LIST_FOREGROUND; break;", "+\t\tcase SWT.COLOR_LIST_BACKGROUND: \t\t\t\t\tgdkColor = COLOR_LIST_BACKGROUND; break;", "+\t\tcase SWT.COLOR_LIST_SELECTION: \t\t\t\t\t\tgdkColor = COLOR_LIST_SELECTION; break;", "+\t\tcase SWT.COLOR_LIST_SELECTION_TEXT: \t\t\t\tgdkColor = COLOR_LIST_SELECTION_TEXT; break;", "+\t\tdefault:", "+\t\t\treturn super.getSystemColor (id);\t", "-\treturn super.getSystemColor (id);", "+\tif (gdkColor == null) return super.getSystemColor (SWT.COLOR_BLACK);", "+\treturn Color.gtk_new (this, gdkColor);"]}], "num": 63194}