{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "41eb0f34c8f5a76211fc13cac8a0d90d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5db3b6281b69d3ee8d667b4849f559", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "5ed9eadeff488afd5cd81c46122632ed8c74a1f7", "commitAfterChange": "ea15a960a853001410e58a3d24c8aee2da7a0620", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int ConvertText (int value, int targetType, int parameter, int culture)", "signatureAfterChange": "  void clearAll (TreeItem parentItem, boolean all)", "diff": ["-", "-int ConvertText (int value, int targetType, int parameter, int culture) {", "-\tTreeItem item = converterItem (value);", "-\tint columnIndex = converterColumnIndex (parameter);", "-\tint result = 0;", "-\tif (item.strings != null) {", "-\t\tif (item.stringHandle != null && item.stringHandle [columnIndex] != 0) {", "-\t\t\tresult = item.stringHandle [columnIndex];", "-\t\t} else {", "-\t\t\tif (item.stringHandle == null) {", "-\t\t\t\tint count = Math.max (1, columnCount);", "-\t\t\t\titem.stringHandle = new int [count];", "-\t\t\t}", "-\t\t\titem.stringHandle [columnIndex] = result = createDotNetString (item.strings [columnIndex], false);", "+void clearAll (TreeItem parentItem, boolean all) {", "+\tint count = parentItem != null ? parentItem.itemCount : itemCount;", "+\tint parentHandle = parentItem != null ? parentItem.handle : handle;", "+\tint items = OS.ItemsControl_Items (parentHandle);", "+\tfor (int i=0; i<count; i++) {", "+\t\tTreeItem item = getItem (items, i, false);", "+\t\tif (item != null) {", "+\t\t\titem.clear ();", "+\t\t\tif (all) clearAll (item, true);", "-\treturn result;", "+\tOS.GCHandle_Free (items);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d8422b813c170b3ed7fe82f622cc97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 11, "signatureBeforeChange": "  int[] _getAvailableTypes()", "signatureAfterChange": "  private void declareTypes(NSPasteboard pasteboard)", "diff": ["+", "+private void declareTypes(NSPasteboard pasteboard) {", "+\tString[] typeNames = getAvailableTypeNames();", "+\tNSMutableArray declaredTypes = NSMutableArray.arrayWithCapacity(typeNames.length);", "+\tfor (int i = 0; i < typeNames.length; i++) {", "+\t\tString typeName = typeNames[i];", "+\t\tif (typeName != null) {", "+\t\t\tdeclaredTypes.addObject(NSString.stringWith(typeName));", "+\t\t}", "+\t}", "+\tpasteboard.declareTypes(declaredTypes, null);", "-", "-int[] _getAvailableTypes() {", "-\tint[] types = new int[0];", "-\tint[] scrap = new int[1];", "-\tif (OS.GetCurrentScrap(scrap) != OS.noErr) return types;", "-\tint[] count = new int[1];", "-\tif (OS.GetScrapFlavorCount(scrap[0], count) != OS.noErr || count[0] == 0) return types;", "-\tint[] info = new int[count[0] * 2];", "-\tif (OS.GetScrapFlavorInfoList(scrap[0], count, info) != OS.noErr) return types;", "-\ttypes = new int[count[0]];", "-\tfor (int i= 0; i < count [0]; i++) {", "-\t\ttypes[i] = info[i*2];", "-\t}", "-\treturn types;"]}], "num": 54110}