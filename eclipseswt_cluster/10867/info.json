{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a45414c5e8cb484f4f34f32a3886c0f9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da07739bed1a8fac700e069e74e18155", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tAccessibleTextListener[] getTextListeners ()", "signatureAfterChange": " \tpublic void removeRelation(int type, Accessible target)", "diff": ["-", "-\tAccessibleTextListener[] getTextListeners () {", "-\t\tif (textListeners == null) return null;", "-\t\tAccessibleTextListener[] result = new AccessibleTextListener [textListeners.size ()];", "-\t\ttextListeners.copyInto (result);", "-\t\treturn result;", "+\t */", "+\tpublic void removeRelation(int type, Accessible target) {", "+\t\tcheckWidget();", "+\t\tif (relations == null) return;", "+\t\tfor (int i = relations.size() - 1; i >= 0; i--) {", "+\t\t\tRelation relation = (Relation)relations.elementAt(i);", "+\t\t\tif (relation.type == type && relation.target == target) {", "+\t\t\t\trelations.remove(i);", "+\t\t\t\tif (accessibleObject != null) {", "+\t\t\t\t\taccessibleObject.removeRelation(relation.type, relation.target);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ee938ada19c7e82dc6d52dc8eb1a5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "271ed1c844ca50c299243a268076fdd6a6892082", "commitAfterChange": "4fa97eee183ed5f6552c0fb587b02abe1b40444d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 89, "signatureBeforeChange": "\r void onClientAreaChange()", "signatureAfterChange": "\r void resetTabSize(boolean checkHeight)", "diff": ["-void onClientAreaChange() {\r", "-\toldSize = null;\r", "-\tnotifyListeners(SWT.Resize, new Event());\r", "-}\r", "+}\r", "+void resetTabSize(boolean checkHeight){\r", "+\tint oldHeight = tabHeight;\r", "+\tif (!fixedTabHeight && checkHeight) {\r", "+\t\tint tempHeight = 0;\r", "+\t\tGC gc = new GC(this);\r", "+\t\tfor (int i=0; i < items.length; i++) {\r", "+\t\t\ttempHeight = Math.max(tempHeight, items[i].preferredHeight(gc));\r", "+\t\t}\r", "+\t\tgc.dispose();\r", "+\t\tif (topRight != null) tempHeight = Math.max(tempHeight, topRight.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);\r", "+\t\ttabHeight =  tempHeight;\r", "+\t}\r", "+\t\t\r", "+\tif (tabHeight != oldHeight){\r", "+\t\toldSize = null;\r", "+\t\tnotifyListeners(SWT.Resize, new Event());\r", "+\t} else {\r", "+\t\tsetItemBounds();\r", "+\t\tredraw();\r", "+\t}\r"]}], "num": 10867}