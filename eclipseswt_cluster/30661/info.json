{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44dbfb0fc0be9c1e0fd9328ee1a9565f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46733853ffb68990846ba923e4d50106", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "613386a136aed7f7be85acd46a7cab744bbae94d", "commitAfterChange": "e144c0287be1ac0d08cd8310d65398d20b566a1f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void initStyleCombo(FontExtStyles fontExtStyles)", "signatureAfterChange": "\r void initStyleCombo ()", "diff": ["- */\r", "-void initStyleCombo(FontExtStyles fontExtStyles) {\r", "-\tCombo styleCombo = getStyleCombo();\r", "-\tString previousStyle = styleCombo.getText();\r", "-\tstyleCombo.removeAll();\r", "-\tEnumeration styleEnum = fontExtStyles.getStyles(getExtStyleCombo().getText()).elements();\r", "-\twhile (styleEnum.hasMoreElements())\r", "-\t\tstyleCombo.add((String)styleEnum.nextElement());\r", "-\r", "-\tint selectionIndex = styleCombo.indexOf(previousStyle);\r", "-\tif (selectionIndex == -1)\r", "-\t\tselectionIndex = styleCombo.indexOf(DEFAULT_STYLE);\r", "-\tif (selectionIndex == -1)\t// last resort\r", "-\t\tselectionIndex = 0;\r", "-\r", "-\tstyleCombo.select(selectionIndex);\r", "+ */\r", "+void initStyleCombo () {\r", "+\tString oldSelect = fontStyleCombo.getText ();\r", "+\tfontStyleCombo.removeAll ();\r", "+\t\r", "+\tString characterSet = charSetCombo.getText ();\r", "+\tString faceName = faceNameCombo.getText ();\r", "+\tString extStyle = extStyleCombo.getText ();\r", "+\tint size = DEFAULT_SIZE;\r", "+\ttry {\r", "+\t\tsize = Integer.valueOf (fontSizeCombo.getText ()).intValue ();\r", "+\t} catch (NumberFormatException e) {\r", "+\t\t/*\r", "+\t\t * This block is purposely left empty since a default\r", "+\t\t * value is already specified above.\r", "+\t\t */\r", "+\t}\r", "+\tHashtable styles = getStyles (characterSet, faceName, extStyle, size);\r", "+\tif (styles == null) return;\r", "+\tsetItemsSorted (fontStyleCombo, styles);\r", "+\t\r", "+\tint selectIndex = fontStyleCombo.indexOf (oldSelect);\r", "+\tif (selectIndex == -1) {\r", "+\t\tselectIndex = fontStyleCombo.indexOf (String.valueOf (DEFAULT_STYLE));\r", "+\t}\r", "+\tselectIndex = Math.max (0, selectIndex);\r", "+\tfontStyleCombo.select (selectIndex);\r", "+\tfontStyleCombo.setData (new Integer (selectIndex));\r", "+\tfontStyleCombo.select (Math.max (0, selectIndex));\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f80f4243c2a4cd43d36bc1540eb2abf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tint createFactory (byte[] name)", "signatureAfterChange": " \t \tstatic int defineType (byte[] typeName, int parentType)", "diff": ["-\tint createFactory (byte[] name) {", "-\t\tint parent = ATK.g_type_from_name (Converter.wcsToMbcs (null, FACTORY_PARENTTYPE, true));", "-\t\tgTypeInfoCB_base_init  = new Callback (this, \"gTypeInfo_base_init\", 1);", "+\tstatic int defineType (byte[] typeName, int parentType) {", "+\t\tint queryPtr = OS.g_malloc (GTypeQuery.sizeof);", "+\t\tATK.g_type_query (parentType, queryPtr);", "+\t\tGTypeQuery query = new GTypeQuery ();", "+\t\tATK.memmove (query, queryPtr, GTypeQuery.sizeof);", "+\t\tOS.g_free (queryPtr);", "-\t\ttypeInfo.base_init = gTypeInfoCB_base_init.getAddress ();", "-\t\ttypeInfo.class_size = ATK.AtkObjectFactoryClass_sizeof ();", "-\t\ttypeInfo.instance_size = ATK.AtkObjectFactory_sizeof ();", "-\t\thandle = OS.g_malloc (GTypeInfo.sizeof); ", "-\t\tATK.memmove (handle, typeInfo, GTypeInfo.sizeof); ", "-\t\treturn ATK.g_type_register_static (parent, name, handle, 0);", "+\t\ttypeInfo.base_init = GTypeInfo_base_init_type.getAddress ();", "+\t\ttypeInfo.class_size = (short) query.class_size;", "+\t\ttypeInfo.instance_size = (short) query.instance_size;", "+\t\tObjectIfaceDefinition = OS.g_malloc (GTypeInfo.sizeof); ", "+\t\tATK.memmove (ObjectIfaceDefinition, typeInfo, GTypeInfo.sizeof); ", "+\t\tint result = ATK.g_type_register_static (parentType, typeName, ObjectIfaceDefinition, 0);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_COMPONENT_TYPE, ComponentIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_ACTION_TYPE, ActionIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_SELECTION_TYPE, SelectionIfaceDefinition);", "+\t\tATK.g_type_add_interface_static (result, AccessibleObject.ATK_TEXT_TYPE, TextIfaceDefinition);", "+\t\treturn result;"]}], "num": 30661}