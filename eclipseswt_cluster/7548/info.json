{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "103ba76bd627d6553f5969212b3f3711", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25cf8b27f07f34fc570f6ad6a156cd6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 235, "signatureBeforeChange": " void modifyContent(Event event, boolean updateCaret)", "signatureAfterChange": " void modifyContent(Event event, boolean updateCaret)", "diff": ["-\t\tboolean isCharacterRemove = replacedLength == 1 && event.text.length() == 0;", "-\t\tboolean isBackspace = event.start < caretOffset;", "-\t\tboolean isDirectionBoundary = false;", "-\t\t\t\t", "-\t\tif (updateCaret && isBidi() && isCharacterRemove) {", "-\t\t\t// set the keyboard language to the language of the deleted character.", "-\t\t\t// determine direction boundary so that caret location can be updated ", "-\t\t\t// properly.", "-\t\t\tint line = content.getLineAtOffset(caretOffset);", "-\t\t\tint lineStartOffset = content.getOffsetAtLine(line);\t\t", "-\t\t\tint offsetInLine = caretOffset - lineStartOffset;", "-\t\t\tString lineText = content.getLine(line);", "-\t\t\tGC gc = getGC();", "-\t\t\tStyledTextBidi bidi = new StyledTextBidi(gc, lineText, getBidiSegments(lineStartOffset, lineText));\t\t\t", "-\t\t\tif (isBackspace) {", "-\t\t\t\tif (offsetInLine > 0) {", "-\t\t\t\t\t// the line start/end does not represent a direction boundary ", "-\t\t\t\t\t// even if the previous/next line has a different direction.", "-\t\t\t\t\tisDirectionBoundary = ", "-\t\t\t\t\t\toffsetInLine < lineText.length() && ", "-\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || ", "-\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));", "-\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine - 1);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tif (offsetInLine < lineText.length()) {", "-\t\t\t\t\t// the line start/end does not represent a direction boundary ", "-\t\t\t\t\t// even if the previous/next line has a different direction.", "-\t\t\t\t\tisDirectionBoundary = ", "-\t\t\t\t\t\toffsetInLine > 0 && ", "-\t\t\t\t\t\t(bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1) || ", "-\t\t\t\t\t\t bidi.isLocalNumber(offsetInLine) != bidi.isLocalNumber(offsetInLine - 1));", "-\t\t\t\t\tbidi.setKeyboardLanguage(offsetInLine);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tgc.dispose();", "-\t\t}\t\t\t\t\t\t", "-\t\tif (updateCaret) {\t\t", "+\t\tif (updateCaret) {", "-\t\t\tif (isBidi()) {", "-\t\t\t\t// Update the caret direction so that the caret moves to the ", "-\t\t\t\t// typed/deleted character. Fixes 1GJLQ16.", "-\t\t\t\tif (isCharacterRemove) {", "-\t\t\t\t\tupdateBidiDirection(isBackspace, isDirectionBoundary);", "-\t\t\t\t}", "-\t\t\t\telse {", "-\t\t\t\t\tlastCaretDirection = ST.COLUMN_NEXT;", "-\t\t\t\t}", "-\t\t\t\tshowBidiCaret();", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tshowCaret();", "-\t\t\t}", "+\t\t\tshowCaret();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "625f92edc99bc42dfa8c84a3c9d16c67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "52308c904cf8c22877dc33c521ff2edbe6099dca", "commitAfterChange": "22031a45aee5d018b4a761000d1a188a7e2b6848", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void copy(int clipboardType)", "signatureAfterChange": " public void copy(int clipboardType)", "diff": ["-\tif (clipboardType != DND.CLIPBOARD && clipboardType != DND.SELECTION_CLIPBOARD) return;", "-\tif (blockSelection && blockXLocation != -1) {", "-\t\tRectangle rect = getBlockSelectonPosition();", "-\t\tint firstLine = rect.y;", "-\t\tint lastLine = rect.height;", "-\t\tint left = rect.x;", "-\t\tint right = rect.width;", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tString lineDelimiter = PlatformLineDelimiter;", "-\t\tfor (int lineIndex = firstLine; lineIndex <= lastLine; lineIndex++) {", "-\t\t\tint start = getOffsetAtPoint(left, 0, lineIndex);", "-\t\t\tint end = getOffsetAtPoint(right, 0, lineIndex);", "-\t\t\tString text = content.getTextRange(start, end - start);", "-\t\t\tbuffer.append(text);", "-\t\t\tif (lineIndex < lastLine) buffer.append(lineDelimiter); ", "-\t\t}", "-\t\tif (buffer.length() > 0) {", "-\t\t\t//TODO RTF support - refactor Writers", "-\t\t\tTextTransfer plainTextTransfer = TextTransfer.getInstance();", "-//\t\t\tTextWriter plainTextWriter = new TextWriter(start, length);", "-//\t\t\tString plainText = getPlatformDelimitedText(plainTextWriter);", "-\t\t\tString plainText = buffer.toString();", "-\t\t\tObject[] data = new Object[]{plainText};", "-\t\t\tTransfer[] types = new Transfer[]{plainTextTransfer};", "-\t\t\tclipboard.setContents(data, types, clipboardType);", "-\t\t}", "-\t\treturn;", "-\t}", "-\tint length = selection.y - selection.x;", "-\tif (length > 0) {", "-\t\ttry {", "-\t\t\tsetClipboardContent(selection.x, length, clipboardType);", "-\t\t} catch (SWTError error) {", "-\t\t\t// Copy to clipboard failed. This happens when another application ", "-\t\t\t// is accessing the clipboard while we copy. Ignore the error.", "-\t\t\t// Fixes 1GDQAVN", "-\t\t\t// Rethrow all other errors. Fixes bug 17578.", "-\t\t\tif (error.code != DND.ERROR_CANNOT_SET_CLIPBOARD) {", "-\t\t\t\tthrow error;", "+\tcopySelection(clipboardType);", "+}"]}], "num": 7548}