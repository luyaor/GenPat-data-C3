{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7dd5c49ecff56601c7fffa8932a7f18", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ef60a355bbaa8a349778d06a6194e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tint hItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "-\twhile (hItem != 0) {", "-\t\thItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hItem);", "-\t\ttvItem.hItem = hItem;", "+\ttvItem.hItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);", "+\twhile (tvItem.hItem != 0) {", "-\t\tTreeItem item = parent.items [tvItem.lParam];", "-\t\tif (index == 0) {", "-\t\t\trect.left = item.handle;", "-\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\tcolumnWidth = Math.max (columnWidth, rect.right);", "+\t\tTreeItem item = tvItem.lParam != -1 ? parent.items [tvItem.lParam] : null;", "+\t\tif (item != null) {", "+\t\t\tif (index == 0) {", "+\t\t\t\trect.left = item.handle;", "+\t\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "+\t\t\t\t\tcolumnWidth = Math.max (columnWidth, rect.right);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tint imageWidth = 0, textWidth = 0;", "+\t\t\t\tImage image = item.images != null ? item.images [index] : null;", "+\t\t\t\tif (image != null) {", "+\t\t\t\t\tRectangle bounds = image.getBounds ();", "+\t\t\t\t\timageWidth = bounds.width;", "+\t\t\t\t}", "+\t\t\t\tString string = item.strings != null ? item.strings [index] : null;", "+\t\t\t\tif (string != null) {", "+\t\t\t\t\tTCHAR buffer = new TCHAR (cp, string, false);", "+\t\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);", "+\t\t\t\t\ttextWidth = rect.right - rect.left;", "+\t\t\t\t}", "+\t\t\t\tcolumnWidth = Math.max (columnWidth, imageWidth + textWidth + Tree.INSET * 3);", "-\t\t} else {", "-\t\t\tint imageWidth = 0, textWidth = 0;", "-\t\t\tImage image = item.images != null ? item.images [index] : null;", "-\t\t\tif (image != null) {", "-\t\t\t\tRectangle bounds = image.getBounds ();", "-\t\t\t\timageWidth = bounds.width;", "-\t\t\t}", "-\t\t\tString string = item.strings != null ? item.strings [index] : null;", "-\t\t\tif (string != null) {", "-\t\t\t\tTCHAR buffer = new TCHAR (cp, string, false);", "-\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);", "-\t\t\t\ttextWidth = rect.right - rect.left;", "-\t\t\t}", "-\t\t\tcolumnWidth = Math.max (columnWidth, imageWidth + textWidth + Tree.INSET * 3);", "+\t\ttvItem.hItem = OS.SendMessage (hwnd, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, tvItem.hItem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1021c190d02ca4ac6d8b823a66e23a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "d60307042554a2ad80509163fd1d15e5566b488d", "commitAfterChange": "501cddef55d98c472a410dbb933c0adba1cf9644", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tint hwnd = parent.handle;", "+\tint hwnd = parent.handle, hwndHeader = parent.hwndHeader;", "+\tRECT headerRect = new RECT ();", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\tint cp = parent.getCodePage ();\t\t", "-\tRECT rect = new RECT ();", "-\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "-\t\t\tint hFont = -1;", "-\t\t\tif (item.cellFont != null) hFont = item.cellFont [index];", "+\t\t\tint hFont = item.cellFont != null ? item.cellFont [index] : -1;", "-\t\t\tif (index == 0) {", "-\t\t\t\tif ((parent.style & SWT.VIRTUAL) == 0 && !item.cached && !parent.painted) {", "-\t\t\t\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "-\t\t\t\t\ttvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "-\t\t\t\t\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "-\t\t\t\t\ttvItem.mask = OS.TVIF_PARAM;", "-\t\t\t\t}", "-\t\t\t\trect.left = item.handle;", "-\t\t\t\tif (OS.SendMessage (hwnd, OS.TVM_GETITEMRECT, 1, rect) != 0) {", "-\t\t\t\t\tcolumnWidth = Math.max (columnWidth, rect.right);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tint imageWidth = 0, textWidth = 0;", "-\t\t\t\tImage image = item.images != null ? item.images [index] : null;", "-\t\t\t\tif (image != null) {", "-\t\t\t\t\tRectangle bounds = image.getBounds ();", "-\t\t\t\t\timageWidth = bounds.width;", "-\t\t\t\t}", "-\t\t\t\tString string = item.strings != null ? item.strings [index] : null;", "-\t\t\t\tif (string != null) {", "-\t\t\t\t\tTCHAR buffer = new TCHAR (cp, string, false);", "-\t\t\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "-\t\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), rect, flags);", "-\t\t\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "-\t\t\t\t\ttextWidth = rect.right - rect.left;", "-\t\t\t\t}", "-\t\t\t\tcolumnWidth = Math.max (columnWidth, imageWidth + textWidth + Tree.INSET * 3);", "+\t\t\tif (hFont != -1) hFont = OS.SelectObject (hDC, hFont);", "+\t\t\tRECT itemRect = item.getBounds (index, true, true, false, false, false, hDC);", "+\t\t\tif (hFont != -1) OS.SelectObject (hDC, hFont);", "+\t\t\tif (parent.hooks (SWT.MeasureItem)) {", "+\t\t\t\tint nSavedDC = OS.SaveDC (hDC);", "+\t\t\t\tGCData data = new GCData ();", "+\t\t\t\tdata.device = display;", "+\t\t\t\tdata.hFont = hFont;", "+\t\t\t\tGC gc = GC.win32_new (hDC, data);", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.index = index;", "+\t\t\t\tevent.x = itemRect.left;", "+\t\t\t\tevent.y = itemRect.top;", "+\t\t\t\tevent.width = itemRect.right - itemRect.left;", "+\t\t\t\tevent.height = itemRect.bottom - itemRect.top;", "+\t\t\t\tparent.sendEvent (SWT.MeasureItem, event);", "+\t\t\t\tevent.gc = null;", "+\t\t\t\tgc.dispose ();", "+\t\t\t\tOS.RestoreDC (hDC, nSavedDC);", "+\t\t\t\tif (isDisposed () || parent.isDisposed ()) break;", "+\t\t\t\t//itemRect.left = event.x;", "+\t\t\t\titemRect.right = event.x + event.width;", "+\t\t\tcolumnWidth = Math.max (columnWidth, itemRect.right - headerRect.left);", "-\tTCHAR buffer = new TCHAR (cp, text, false);", "+\tRECT rect = new RECT ();", "+\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "+\tTCHAR buffer = new TCHAR (parent.getCodePage (), text, false);", "-\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "-\t\theaderWidth += Tree.HEADER_EXTRA;", "-\t}", "+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) headerWidth += Tree.HEADER_EXTRA;", "-\t\tint margin = 0, hwndHeader = parent.hwndHeader;", "+\t\tint margin = 0;"]}], "num": 27282}