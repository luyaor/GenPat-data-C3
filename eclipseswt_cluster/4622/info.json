{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e7255c47bb9e816de760414e9491e0df", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f3f505e9a1cdda6dfbce6c3dd54e53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "65046fe56198703fc47a1bcc30243bde5e029379", "commitAfterChange": "42c7411496ef49522a6a6bcbf85228b37b8d158d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t", "-\t/*", "-\t* This code is intentionally commented.  Don't exit", "-\t* early because the background must still be painted,", "-\t* even though no application code will be painting", "-\t* the widget.", "-\t*", "-\t* Do not uncomment this code.", "-\t*/", "-//\tif (!hooks (SWT.Paint)) return null;", "-", "-\t/* Get the damage */", "-\tint [] lpRgnData = null;", "-\tboolean isComplex = false;", "-\tboolean exposeRegion = false;", "-\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tisComplex = OS.GetUpdateRgn (handle, rgn, false) == OS.COMPLEXREGION;", "-\t\tif (isComplex) {", "-\t\t\tint nBytes = OS.GetRegionData (rgn, 0, null);", "-\t\t\tlpRgnData = new int [nBytes / 4];", "-\t\t\texposeRegion = OS.GetRegionData (rgn, nBytes, lpRgnData) != 0;", "-\t\t}", "-\t\tOS.DeleteObject (rgn);", "-\t}", "-\tint oldBits = 0;", "+\tint oldBits = 0, newBits = 0;", "-\t\tint newBits = oldBits | OS.WS_CLIPSIBLINGS | OS.WS_CLIPCHILDREN;\t", "-\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\t\tnewBits = oldBits | OS.WS_CLIPSIBLINGS | OS.WS_CLIPCHILDREN;\t", "+\t\tif (newBits != oldBits) OS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "-\t/* Create the paint GC */", "+\t/* Paint the control and the background */", "-\tGCData data = new GCData ();", "-\tdata.ps = ps;", "-\tGC gc = GC.win32_new (this, data);", "-\tint hDC = gc.handle;", "+\tif (hooks (SWT.Paint)) {", "+\t\t", "+\t\t/* Get the damage */", "+\t\tint [] lpRgnData = null;", "+\t\tboolean isComplex = false;", "+\t\tboolean exposeRegion = false;", "+\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "+\t\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tisComplex = OS.GetUpdateRgn (handle, rgn, false) == OS.COMPLEXREGION;", "+\t\t\tif (isComplex) {", "+\t\t\t\tint nBytes = OS.GetRegionData (rgn, 0, null);", "+\t\t\t\tlpRgnData = new int [nBytes / 4];", "+\t\t\t\texposeRegion = OS.GetRegionData (rgn, nBytes, lpRgnData) != 0;", "+\t\t\t}", "+\t\t\tOS.DeleteObject (rgn);", "+\t\t}", "-\t/* Send the paint event */", "-\tEvent event = new Event ();", "-\tevent.gc = gc;", "-\tif (isComplex && exposeRegion) {", "-\t\tRECT rect = new RECT ();", "-\t\tint count = lpRgnData [2];", "-\t\tfor (int i=0; i<count; i++) {", "-\t\t\tOS.SetRect (rect,", "-\t\t\t\tlpRgnData [8 + (i << 2)],", "-\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "-\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "-\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t/* Create the paint GC */", "+\t\tGCData data = new GCData ();", "+\t\tdata.ps = ps;", "+\t\tGC gc = GC.win32_new (this, data);", "+\t\tint hDC = gc.handle;", "+\t\t", "+\t\t/* Send the paint event */", "+\t\tEvent event = new Event ();", "+\t\tevent.gc = gc;", "+\t\tif (isComplex && exposeRegion) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint count = lpRgnData [2];", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tOS.SetRect (rect,", "+\t\t\t\t\tlpRgnData [8 + (i << 2)],", "+\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "+\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "+\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t}", "+\t\t\t\tevent.x = rect.left;", "+\t\t\t\tevent.y = rect.top;", "+\t\t\t\tevent.width = rect.right - rect.left;", "+\t\t\t\tevent.height = rect.bottom - rect.top;", "+\t\t\t\tevent.count = count - 1 - i;", "+\t\t\t\t/*", "+\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t* code could have disposed the widget in the paint", "+\t\t\t\t* event.  If this happens, attempt to give back the", "+\t\t\t\t* paint GC anyways because this is a scarce Windows", "+\t\t\t\t* resource.", "+\t\t\t\t*/", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t}", "+\t\t} else {", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "-\t\t\tevent.x = rect.left;", "-\t\t\tevent.y = rect.top;", "-\t\t\tevent.width = rect.right - rect.left;", "-\t\t\tevent.height = rect.bottom - rect.top;", "-\t\t\tevent.count = count - 1 - i;", "-\t\t\t/*", "-\t\t\t* It is possible (but unlikely), that application", "-\t\t\t* code could have disposed the widget in the paint", "-\t\t\t* event.  If this happens, attempt to give back the", "-\t\t\t* paint GC anyways because this is a scarce Windows", "-\t\t\t* resource.", "-\t\t\t*/", "+\t\t\tevent.x = ps.left;", "+\t\t\tevent.y = ps.top;", "+\t\t\tevent.width = ps.right - ps.left;", "+\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\tif (isDisposed ()) break;", "+\t\t// widget could be disposed at this point", "+\t", "+\t\t/* Dispose the paint GC */", "+\t\tevent.gc = null;", "+\t\tgc.dispose ();", "+\t\tint hDC = OS.BeginPaint (handle, ps);", "-\t\tevent.x = ps.left;", "-\t\tevent.y = ps.top;", "-\t\tevent.width = ps.right - ps.left;", "-\t\tevent.height = ps.bottom - ps.top;", "-\t\tsendEvent (SWT.Paint, event);", "+\t\tOS.EndPaint (handle, ps);", "-\t// widget could be disposed at this point", "-\t/* Dispose the paint GC */", "-\tevent.gc = null;", "-\tgc.dispose ();", "-", "+\t/* Restore the clipping bits */", "-\t\t/*", "-\t\t* It is possible (but unlikely), that application", "-\t\t* code could have disposed the widget in the paint", "-\t\t* event.  If this happens, don't attempt to restore", "-\t\t* the style.", "-\t\t*/", "-\t\tif (!isDisposed ()) {", "-\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, oldBits);", "+\t\tif (newBits != oldBits) {", "+\t\t\t/*", "+\t\t\t* It is possible (but unlikely), that application", "+\t\t\t* code could have disposed the widget in the paint", "+\t\t\t* event.  If this happens, don't attempt to restore", "+\t\t\t* the style.", "+\t\t\t*/", "+\t\t\tif (!isDisposed ()) {", "+\t\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, oldBits);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f411f788fa41db512d42f68365ccd05d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "5dc5ec23efad672b87f31c80bf2b8725e7e40759", "commitAfterChange": "466e674afedc0bb93dac521211c6fdf414bdbf78", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\tint hDC = gc.handle;", "-\t\tEvent event = new Event ();", "-\t\tevent.gc = gc;", "-\t\tif (isComplex && exposeRegion) {", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tint count = lpRgnData [2];", "-\t\t\tfor (int i=0; i<count; i++) {", "-\t\t\t\tOS.SetRect (rect,", "-\t\t\t\t\tlpRgnData [8 + (i << 2)],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "-\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "-\t\t\t\t\tdrawBackground (hDC, rect);", "-\t\t\t\t}", "-\t\t\t\tevent.x = rect.left;", "-\t\t\t\tevent.y = rect.top;", "-\t\t\t\tevent.width = rect.right - rect.left;", "-\t\t\t\tevent.height = rect.bottom - rect.top;", "-\t\t\t\tevent.count = count - 1 - i;", "-\t\t\t\t/*", "-\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t* code could have disposed the widget in the paint", "-\t\t\t\t* event.  If this happens, attempt to give back the", "-\t\t\t\t* paint GC anyways because this is a scarce Windows", "-\t\t\t\t* resource.", "-\t\t\t\t*/", "-\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\tif (isDisposed ()) break;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\tint width = ps.right - ps.left;", "+\t\tint height = ps.bottom - ps.top;", "+\t\tif (width != 0 && height != 0) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.gc = gc;", "+\t\t\tif (isComplex && exposeRegion) {", "-\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "-\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\tint count = lpRgnData [2];", "+\t\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\t\tOS.SetRect (rect,", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2)],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\t\tdrawBackground (gc.handle, rect);", "+\t\t\t\t\t}", "+\t\t\t\t\tevent.x = rect.left;", "+\t\t\t\t\tevent.y = rect.top;", "+\t\t\t\t\tevent.width = rect.right - rect.left;", "+\t\t\t\t\tevent.height = rect.bottom - rect.top;", "+\t\t\t\t\tevent.count = count - 1 - i;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t* code could have disposed the widget in the paint", "+\t\t\t\t\t* event.  If this happens, attempt to give back the", "+\t\t\t\t\t* paint GC anyways because this is a scarce Windows", "+\t\t\t\t\t* resource.", "+\t\t\t\t\t*/", "+\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\t\tdrawBackground (gc.handle, rect);", "+\t\t\t\t}", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\tevent.x = ps.left;", "-\t\t\tevent.y = ps.top;", "-\t\t\tevent.width = ps.right - ps.left;", "-\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t// widget could be disposed at this point", "+\t\t\tevent.gc = null;", "-\t\t// widget could be disposed at this point", "-\t", "+\t\t", "-\t\tevent.gc = null;"]}], "num": 4622}