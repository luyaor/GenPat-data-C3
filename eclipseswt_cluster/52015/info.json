{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97fef8c3aa44b57e78544f622eb8ae50", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9cd273f0b175308eaf40e63106da8b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a18923fed6848268322e6c4f1776a20d3baed078", "commitAfterChange": "08cc809f893bf867625839a1200cfbf5504c4f66", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " public Font getSystemFont ()", "signatureAfterChange": " public Font getSystemFont ()", "diff": ["-\treturn Font.win32_new (this, systemFont ());\t", "+\tif (systemFont != null) return systemFont;", "+\tint hFont = 0;", "+\tif (!OS.IsWinCE) {", "+\t\tNONCLIENTMETRICS info = OS.IsUnicode ? (NONCLIENTMETRICS) new NONCLIENTMETRICSW () : new NONCLIENTMETRICSA ();", "+\t\tinfo.cbSize = NONCLIENTMETRICS.sizeof;", "+\t\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {", "+\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT) ((NONCLIENTMETRICSW)info).lfMessageFont : ((NONCLIENTMETRICSA)info).lfMessageFont;", "+\t\t\thFont = OS.CreateFontIndirect (logFont);", "+\t\t\tlfSystemFont = hFont != 0 ? logFont : null;", "+\t\t}", "+\t}", "+\tif (hFont == 0) hFont = OS.GetStockObject (OS.DEFAULT_GUI_FONT);", "+\tif (hFont == 0) hFont = OS.GetStockObject (OS.SYSTEM_FONT);", "+\treturn systemFont = Font.win32_new (this, hFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451bee4eb3e633b70366afe3564f6fd9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "41756e82c37542ed1655bbf5e6426818e629fac2", "commitAfterChange": "26afddc6065f2e0634aa264a79ea18151f9d62c1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r protected void init ()", "signatureAfterChange": "\r protected void init ()", "diff": ["-//\tOS.HeapFree (hHeap, 0, lpszClassName);\r", "+\t\r", "+\t/* Initialize the system font */\r", "+\tint systemFont = 0;\r", "+\tNONCLIENTMETRICS info = new NONCLIENTMETRICS ();\r", "+\tinfo.cbSize = NONCLIENTMETRICS.sizeof;\r", "+\tif (OS.SystemParametersInfo (OS.SPI_GETNONCLIENTMETRICS, 0, info, 0)) {\r", "+\t\tsystemFont = OS.CreateFontIndirect (info.lfMessageFont);\r", "+\t}\r", "+\tif (systemFont == 0) systemFont = OS.GetStockObject (OS.DEFAULT_GUI_FONT);\r", "+\tif (systemFont == 0) systemFont = OS.GetStockObject (OS.SYSTEM_FONT);\r", "+\tif (systemFont != 0) systemFonts = new int [] {systemFont};\r", "+\t\r", "+\t/* Create the message only HWND */\r", "+\thwndShell = OS.CreateWindowEx (0,\r", "+\t\twindowClass,\r", "+\t\tnull,\r", "+\t\tOS.WS_OVERLAPPED,\r", "+\t\t0, 0, 0, 0,\r", "+\t\t0,\r", "+\t\t0,\r", "+\t\thInstance,\r", "+\t\tnull);\r"]}], "num": 52015}