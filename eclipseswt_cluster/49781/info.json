{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b06f7c5ae3eb94da32e29814cd21ce26", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8216cdcb33c15ee7c6e57b5ba60d9294", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "signatureAfterChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "diff": ["-\tImage image = item.image;", "-\t\t\timage = item.getImage (i);", "+\t\t\tbreak;", "+\tImage image = item.getImage (columnIndex);", "-\tbrowserCell.setFont (item.getFont (columnIndex).handle);", "-", "-\tif (hooks (SWT.MeasureItem)) {", "-\t\tNSOutlineView view = (NSOutlineView)this.view;", "-\t\tint nsColumnIndex = (int)/*64*/view.columnWithIdentifier (new id (tableColumn));", "-\t\tint rowIndex = (int)/*64*/view.rowForItem (new id (itemID));", "-\t\tNSRect rect = view.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\tNSRect contentRect = browserCell.titleRectForBounds (rect);", "-\t\tNSSize contentSize = browserCell.cellSizeForBounds (rect);", "-", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = view.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tint rowHeight = (int)view.rowHeight ();", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "-\t\tevent.width = (int)Math.ceil (contentSize.width);", "-\t\tevent.height = rowHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (rowHeight < event.height) {", "-\t\t\tview.setRowHeight (event.height);", "-\t\t}", "-\t\tif (columnCount == 0) {", "-\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)Math.ceil (contentSize.width));", "-\t\t\tif (item.customWidth != -1 || event.width != (int)Math.ceil (contentSize.width)) {", "-\t\t\t\titem.customWidth = event.width;\t", "-\t\t\t}", "-\t\t\tif (change != 0) setScrollWidth (item, false, false);", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1fa2307a30a5a2ffb976a2cb51e29d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int aCell, int aTableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int cell, int tableColumn, int rowIndex)", "diff": ["-void tableView_willDisplayCell_forTableColumn_row (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ aCell, int /*long*/ aTableColumn, int /*long*/ rowIndex) {", "-\tif (checkColumn != null && aTableColumn == checkColumn.id) return;", "+void tableView_willDisplayCell_forTableColumn_row (int /*long*/ id, int /*long*/ sel, int /*long*/ aTableView, int /*long*/ cell, int /*long*/ tableColumn, int /*long*/ rowIndex) {", "+\tif (checkColumn != null && tableColumn == checkColumn.id) return;", "-\tImage image = item.image;", "-\tint columnIndex = 0;", "+\tint index = 0;", "-\t\tif (columns [i].nsColumn.id == aTableColumn) {", "-\t\t\timage = item.getImage (i);", "-\t\t\tcolumnIndex = i;", "+\t\tif (columns [i].nsColumn.id == tableColumn) {", "+\t\t\tindex = i;", "+\t\t\tbreak;", "-\tNSBrowserCell cell = new NSBrowserCell (aCell);", "-\tcell.setFont (item.getFont (columnIndex).handle);", "-\tcell.setImage (image != null ? image.handle : null);", "-\tcell.setLeaf (true);", "-", "-\tif (hooks (SWT.MeasureItem)) {", "-\t\tNSTableView tableView = (NSTableView)this.view;", "-\t\tint nsColumnIndex = (int)/*64*/tableView.columnWithIdentifier (new id (aTableColumn));", "-\t\tNSRect rect = tableView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\tNSSize contentSize = cell.cellSizeForBounds (rect);", "-", "-\t\tGCData data = new GCData ();", "-\t\tdata.paintRect = tableView.frame ();", "-\t\tGC gc = GC.cocoa_new (this, data);", "-\t\tgc.setFont (item.getFont (columnIndex));", "-\t\tint rowHeight = (int)tableView.rowHeight ();", "-\t\tEvent event = new Event ();", "-\t\tevent.item = item;", "-\t\tevent.gc = gc;", "-\t\tevent.index = columnIndex;", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "-\t\tevent.width = (int)Math.ceil (contentSize.width);", "-\t\tevent.height = rowHeight;", "-\t\tsendEvent (SWT.MeasureItem, event);", "-\t\tgc.dispose ();", "-\t\tif (isDisposed ()) return;", "-\t\tif (rowHeight < event.height) {", "-\t\t\ttableView.setRowHeight(event.height);", "-\t\t}", "-\t\tif (columnCount == 0) {", "-\t\t\tint change = event.width - (item.customWidth != -1 ? item.customWidth : (int)Math.ceil (contentSize.width));", "-\t\t\tif (item.customWidth != -1 || event.width != (int)Math.ceil (contentSize.width)) {", "-\t\t\t\titem.customWidth = event.width;\t", "-\t\t\t}", "-\t\t\tif (change != 0) setScrollWidth (item, false);", "-\t\t}", "-\t}", "+\tImage image = item.getImage (index);", "+\tNSBrowserCell browserCell = new NSBrowserCell (cell);", "+\tbrowserCell.setImage (image != null ? image.handle : null);"]}], "num": 49781}