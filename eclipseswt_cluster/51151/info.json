{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d236894b2e574cac454de36dd46e392", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d2e35580ef8b0810f4b18c7ff3c48a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "diff": ["-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f033fcad34e01214101288df098e683f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "d3553c533461a8253fca0af1fda8bb9189ab1260", "commitAfterChange": "6d1773a3a9771263ff81f0263e12eee082bb7a2f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test_select$I()", "signatureAfterChange": "  public void test_select$I()", "diff": ["-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, number-1}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, number-1}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {4}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {4}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {10}, table.getSelectionIndices());", "-\tassertSame(new int[] {2}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2}, table.getSelectionIndices());", "-\tassertSame(new int[] {14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());"]}], "num": 51151}