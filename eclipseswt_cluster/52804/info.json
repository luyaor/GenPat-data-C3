{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff736068a16c8f1977beccf78d8bad1a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f545e82e7d7b2cb5d26a8336c105fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "commitAfterChange": "23dcd594fc9be3d0f9e4026ad70fbcc9f45464d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_getLineOffsets()", "signatureAfterChange": "  public void test_getLineOffsets()", "diff": ["-\t", "-\t//Bug 241482 comment 64", "-\tlayout.setText(\"\\nAB\");", "-    layout.setSegments(new int[] {0, 1, 3});", "-    expected = new int[] {0, 1, 3};", "-    offsets = layout.getLineOffsets();", "-    for (int i = 0; i < offsets.length; i++) {", "-        assertEquals(\" i = \" + i, expected[i], offsets[i]);    ", "-    }", "-    ", "-    /* wrong: internal testing */", "-//    text = \"AB\";", "-//    int textLength = text.length();", "-//    layout.setText(text);", "-//    String[] messages = {\"no segments\", \"segments\", \"segments (duplicate at 0)\", \"segments (duplicate at 1)\", \"segments (duplicate at 2)\"};", "-//    int[][] segments = {null, {0, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}};", "-//    int[][] translatedOffsets = {{0, 1, 2}, {1, 3, 5}, {2, 4, 6}, {1, 4, 6}, {1, 3, 6}};", "-//    int[][] untranslatedOffsets = {{0, 1, 2}, {0, 0, 1, 1, 2, 2}, {0, 0, 0, 1, 1, 2, 2}, {0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 2}};", "-//    for (int i = 0; i < segments.length; i++) {", "-//        layout.setSegments(segments[i]);", "-//        layout.getBounds();", "-//        for (int j = 0; j <= textLength; j++) { ", "-//            assertEquals(messages[i] + \" j = \" + j, translatedOffsets[i][j], layout.translateOffset(j));", "-//        }", "-//        for (int j = 0, n = layout.getSegments() == null ? 0 : textLength + layout.getSegments().length; j < n; j++) { ", "-//            assertEquals(messages[i] + \" j = \" + j, untranslatedOffsets[i][j], layout.untranslateOffset(j));", "-//        }", "-//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af5f4a94737719baf79a7837137fe5d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "57f622faa0149851e15aa3fb09d20bed6fe19df9", "commitAfterChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void test_getLineOffsets()", "signatureAfterChange": "  public void test_getLineOffsets()", "diff": ["+\t", "+\t//Bug 241482 comment 64", "+\tlayout.setText(\"\\nAB\");", "+    layout.setSegments(new int[] {0, 1, 3});", "+    expected = new int[] {0, 1, 3};", "+    offsets = layout.getLineOffsets();", "+    for (int i = 0; i < offsets.length; i++) {", "+        assertEquals(\" i = \" + i, expected[i], offsets[i]);    ", "+    }", "+    ", "+    /* wrong: internal testing */", "+//    text = \"AB\";", "+//    int textLength = text.length();", "+//    layout.setText(text);", "+//    String[] messages = {\"no segments\", \"segments\", \"segments (duplicate at 0)\", \"segments (duplicate at 1)\", \"segments (duplicate at 2)\"};", "+//    int[][] segments = {null, {0, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}};", "+//    int[][] translatedOffsets = {{0, 1, 2}, {1, 3, 5}, {2, 4, 6}, {1, 4, 6}, {1, 3, 6}};", "+//    int[][] untranslatedOffsets = {{0, 1, 2}, {0, 0, 1, 1, 2, 2}, {0, 0, 0, 1, 1, 2, 2}, {0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 2}};", "+//    for (int i = 0; i < segments.length; i++) {", "+//        layout.setSegments(segments[i]);", "+//        layout.getBounds();", "+//        for (int j = 0; j <= textLength; j++) { ", "+//            assertEquals(messages[i] + \" j = \" + j, translatedOffsets[i][j], layout.translateOffset(j));", "+//        }", "+//        for (int j = 0, n = layout.getSegments() == null ? 0 : textLength + layout.getSegments().length; j < n; j++) { ", "+//            assertEquals(messages[i] + \" j = \" + j, untranslatedOffsets[i][j], layout.untranslateOffset(j));", "+//        }", "+//    }", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f16b8b276b2134623c682ba43b7c2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "commitAfterChange": "23dcd594fc9be3d0f9e4026ad70fbcc9f45464d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void test_getSegments()", "signatureAfterChange": " public void test_getSegments()", "diff": ["-\tlayout.setWidth(-1);", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t//Bug 241482 comment 64", "+\tlayout.setText(\"\\nAB\");", "+\tlayout.setSegments(new int[] {0, 1, 3});", "+\tint[] expected = new int[] {0, 1, 3};", "+\tint[] offsets = layout.getLineOffsets();", "+\tfor (int i = 0; i < offsets.length; i++) {", "+\t\tassertEquals(\" i = \" + i, expected[i], offsets[i]);    ", "+\t}", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t", "+\t//Bug 241482 comment  80", "+\tlayout.setText(\"MNMNMN\");", "+\tlayout.setSegments(new int[] {0,1,6});", "+\tlayout.getBounds();", "+\tassertEquals(layout.getText().length() - 1, layout.getOffset(layout.getBounds().width, 0, null));", "+\tlayout.setAscent(9);", "+\tassertEquals(layout.getText().length() - 1, layout.getOffset(layout.getBounds().width, 0, null));", "+\tlayout.dispose();", "+\tlayout = new TextLayout(display);", "+\t", "-\t", "+", "+    /* wrong: internal testing */", "+//  text = \"AB\";", "+//  int textLength = text.length();", "+//  layout.setText(text);", "+//  String[] messages = {\"no segments\", \"segments\", \"segments (duplicate at 0)\", \"segments (duplicate at 1)\", \"segments (duplicate at 2)\"};", "+//  int[][] segments = {null, {0, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}};", "+//  int[][] translatedOffsets = {{0, 1, 2}, {1, 3, 5}, {2, 4, 6}, {1, 4, 6}, {1, 3, 6}};", "+//  int[][] untranslatedOffsets = {{0, 1, 2}, {0, 0, 1, 1, 2, 2}, {0, 0, 0, 1, 1, 2, 2}, {0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 2}};", "+//  for (int i = 0; i < segments.length; i++) {", "+//      layout.setSegments(segments[i]);", "+//      layout.getBounds();", "+//      for (int j = 0; j <= textLength; j++) { ", "+//          assertEquals(messages[i] + \" j = \" + j, translatedOffsets[i][j], layout.translateOffset(j));", "+//      }", "+//      for (int j = 0, n = layout.getSegments() == null ? 0 : textLength + layout.getSegments().length; j < n; j++) { ", "+//          assertEquals(messages[i] + \" j = \" + j, untranslatedOffsets[i][j], layout.untranslateOffset(j));", "+//      }", "+//  }"]}], "num": 52804}