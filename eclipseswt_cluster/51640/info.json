{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ad29705f5d6e86beea6304b25d7b0a3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99806af6cb58f06e7771968c345b558e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public String getItem (int index)", "signatureAfterChange": " public String getItem (int index)", "diff": ["-\tif (!(0 <= index && index < OS.GTK_CLIST_ROWS (handle))) {", "+\tif (!(0 <= index && index < OS.gtk_tree_model_iter_n_children (modelHandle, 0)))  {", "-\tint [] buffer = new int [1];", "-\tint result = OS.gtk_clist_get_text (handle, index, 0, buffer);", "-\tint length = OS.strlen (buffer [0]);", "-\tbyte [] buffer1 = new byte [length];", "-\tOS.memmove (buffer1, buffer [0], length);", "-\tchar [] buffer2 = Converter.mbcsToWcs (null, buffer1);", "-\treturn new String (buffer2, 0, buffer2.length);", "+\tint [] ptr = new int [1];", "+\tint iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\tOS.gtk_tree_model_iter_nth_child (modelHandle, iter, 0, index);", "+\tOS.gtk_tree_model_get (modelHandle, iter, 0, ptr, -1);", "+\tOS.g_free (iter);", "+\tif (ptr [0] == 0) return null;", "+\tint length = OS.strlen (ptr [0]);", "+\tbyte[] buffer2 = new byte [length];", "+\tOS.memmove (buffer2, ptr [0], length);", "+\tOS.g_free (ptr [0]);", "+\treturn new String (Converter.mbcsToWcs (null, buffer2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c9ad1b354844d48b402f5a0d851e7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": "  public void setText (String string)", "diff": ["- */", "+", "+\tisImage = false;", "-", "-\t/* Strip out mnemonic marker symbols, and remember the mnemonic. */", "-\tchar [] unicode = new char [string.length ()];", "-\tstring.getChars (0, unicode.length, unicode, 0);", "-\tint i=0, j=0, mnemonic=0;", "-\twhile (i < unicode.length) {", "-\t\tif ((unicode [j++] = unicode [i++]) == Mnemonic) {", "-\t\t\tif (i == unicode.length) {continue;}", "-\t\t\tif (unicode [i] == Mnemonic) {i++; continue;}", "-\t\t\tif (mnemonic == 0) mnemonic = unicode [i];", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "-\twhile (j < unicode.length) unicode [j++] = 0;", "-", "-\tredrawWidget (0, 0, 0, 0, false);", "+\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (ptr == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetControlData (handle, 0 , OS.kControlStaticTextCFStringTag, 4, new int[]{ptr});", "+\tOS.CFRelease (ptr);", "+\tredraw ();"]}], "num": 51640}