{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f23681e57ed230fb7e6c9b89cde078f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e717b503060358bbd853589987a8c5c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "ca2ab800288a0cff39f00b82f164bf6ac861ac7a", "commitAfterChange": "814d9ded9e1af6976010d762f2aadc439b042b0f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\tboolean success = true;", "+\tboolean success = false;", "-\t\t/* Initialize PRINTDLG DEVNAMES for the specified printer. */", "-\t\tTCHAR buffer = new TCHAR(0, printerData.name, true);", "-\t\tint size = buffer.length() * TCHAR.sizeof;", "-\t\tshort[] offsets = new short[4]; // DEVNAMES (4 offsets)", "-\t\tint offsetsSize = offsets.length * 2; // 2 bytes each", "-\t\toffsets[1] = (short) offsets.length; // offset 1 points to wDeviceOffset", "-\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "-\t\tOS.MoveMemory(ptr, offsets, offsetsSize);", "-\t\tOS.MoveMemory(ptr + offsetsSize, buffer, size);", "-\t\tOS.GlobalUnlock(hMem);", "-\t\tpd.hDevNames = hMem;", "-\t} else {", "+\t\t/* Ensure that the printer name is in the current list of printers. */", "+\t\tPrinterData printerList[] = Printer.getPrinterList();", "+\t\tif (printerList.length > 0) {", "+\t\t\tfor (int p = 0; p < printerList.length; p++) {", "+\t\t\t\tif (printerList[p].name.equals(printerData.name)) {", "+\t\t\t\t\tsuccess = true;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (success) {", "+\t\t\t/* Initialize PRINTDLG DEVNAMES for the specified printer. */", "+\t\t\tTCHAR buffer = new TCHAR(0, printerData.name, true);", "+\t\t\tint size = buffer.length() * TCHAR.sizeof;", "+\t\t\tshort[] offsets = new short[4]; // DEVNAMES (4 offsets)", "+\t\t\tint offsetsSize = offsets.length * 2; // 2 bytes each", "+\t\t\toffsets[1] = (short) offsets.length; // offset 1 points to wDeviceOffset", "+\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "+\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tOS.MoveMemory(ptr, offsets, offsetsSize);", "+\t\t\tOS.MoveMemory(ptr + offsetsSize, buffer, size);", "+\t\t\tOS.GlobalUnlock(hMem);", "+\t\t\tpd.hDevNames = hMem;", "+\t\t}", "+\t}", "+\tif (!success) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fc411a774a41412787896f316b3433", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "3aa6e5684bd78cc24966d6287af63ae36f7fadb9", "commitAfterChange": "df61f40633a365af9813cad5cd26654bf724165c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\t* Feature in Windows.  There is no API to set the orientation of a", "-\t* file dialog.  It is always inherited from the parent.  The fix is", "-\t* to create a hidden parent and set the orientation in the hidden", "+\t* Feature in Windows.  There is no API to set the BIDI orientation", "+\t* of a print dialog.  It is always inherited from the parent.  The fix", "+\t* is to create a hidden parent and set the orientation in the hidden", "-\t/* Initialize PRINTDLG fields, including DEVMODE. */", "-\tpd.Flags = OS.PD_RETURNDEFAULT;", "-\tif (OS.PrintDlg(pd)) {", "-\t\tif (pd.hDevNames != 0) {", "-\t\t\tOS.GlobalFree(pd.hDevNames);", "-\t\t\tpd.hDevNames = 0;", "+\tboolean success = true;", "+\tif (printerData.name != null) {", "+\t\t/* Initialize PRINTDLG DEVNAMES for the specified printer. */", "+\t\tTCHAR buffer = new TCHAR(0, printerData.name, true);", "+\t\tint size = buffer.length() * TCHAR.sizeof;", "+\t\tshort[] offsets = new short[4]; // DEVNAMES (4 offsets)", "+\t\tint offsetsSize = offsets.length * 2; // 2 bytes each", "+\t\toffsets[1] = (short) offsets.length; // offset 1 points to wDeviceOffset", "+\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, offsetsSize + size);", "+\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tOS.MoveMemory(ptr, offsets, offsetsSize);", "+\t\tOS.MoveMemory(ptr + offsetsSize, buffer, size);", "+\t\tOS.GlobalUnlock(hMem);", "+\t\tpd.hDevNames = hMem;", "+\t} else {", "+\t\t/* Initialize PRINTDLG fields, including DEVMODE, for the default printer. */", "+\t\tpd.Flags = OS.PD_RETURNDEFAULT;", "+\t\tif (success = OS.PrintDlg(pd)) {", "+\t\t\tif (pd.hDevNames != 0) {", "+\t\t\t\tOS.GlobalFree(pd.hDevNames);", "+\t\t\t\tpd.hDevNames = 0;", "+\t\t\t}", "+\t}", "+\tif (success) {", "-\t\t\tint /*long*/ lpInitData = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, devmodeData.length);", "-\t\t\tOS.MoveMemory(lpInitData, devmodeData, devmodeData.length);", "+\t\t\tint /*long*/ hMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, devmodeData.length);", "+\t\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\t\tOS.MoveMemory(ptr, devmodeData, devmodeData.length);", "+\t\t\tOS.GlobalUnlock(hMem);", "-\t\t\tpd.hDevMode = lpInitData;", "+\t\t\tpd.hDevMode = hMem;", "+\t\tif (hMem == 0) {", "+\t\t\thMem = OS.GlobalAlloc(OS.GMEM_MOVEABLE | OS.GMEM_ZEROINIT, DEVMODE.sizeof);", "+\t\t\tpd.hDevMode = hMem;", "+\t\t}", "+\t\tif (printerData.name != null) {", "+\t\t\t/* Copy PRINTDLG DEVNAMES into DEVMODE dmDeviceName (truncate if necessary). */", "+\t\t\tint max = Math.min(printerData.name.length(), OS.CCHDEVICENAME - 1);", "+\t\t\tif (OS.IsUnicode) {", "+\t\t\t\tfor (int i = 0; i < max; i++) {", "+\t\t\t\t\t((DEVMODEW) devmode).dmDeviceName[i] = printerData.name.charAt(i);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tbyte[] bytes = printerData.name.getBytes();", "+\t\t\t\tfor (int i = 0; i < max; i++) {", "+\t\t\t\t\t((DEVMODEA) devmode).dmDeviceName[i] = bytes[i];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-\t\tboolean success = OS.PrintDlg(pd);", "+\t\tsuccess = OS.PrintDlg(pd);", "-\t", "-\t\t\tint outputOffset = offsets[2];", "-\t\t\ti = 0;", "-\t\t\twhile (outputOffset + i < size) {", "-\t\t\t\tif (buffer.tcharAt(outputOffset + i) == 0) break;", "-\t\t\t\ti++;", "-\t\t\t}", "-\t\t\tString output = buffer.toString(outputOffset, i);", "-\t\t\t", "+", "-\t\t\tif (data.printToFile) data.fileName = output;", "+\t\t\tif (data.printToFile) data.fileName = printerData.fileName;", "+\t\t\t", "+\t\t\t/* Set PrinterData fields from DEVMODE */"]}], "num": 4532}