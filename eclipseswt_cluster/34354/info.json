{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d463cbf8e26d5fc7805b3e7a1ef1575", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dea33b91356550669ddf88f9a3ae19f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void setExpanded(boolean expand)", "signatureAfterChange": " public void setExpanded (boolean value)", "diff": ["- */", "-public void setExpanded(boolean expand) {", "-\tcheckWidget();", "-\tif (isLeaf() == false && expand == true) {", "-\t\tgetParent().expand(this, false);", "-\t}", "-\telse {", "-\t\tgetParent().collapse(this, false);", "-\t}", "-}", "+}", "+public void setExpanded (boolean value) {", "+\tcheckWidget ();", "+\tif (expanded == value) return;", "+\tif (items.length == 0) return;", "+\t// TODO the next line seems to match other platforms, test case is lazy Tree snippet", "+\tif (parent.inExpand) return;", "+\tif (value) {", "+\t\texpanded = value;", "+\t\tparent.makeDescendentsAvailable (this);", "+\t\tparent.redrawFromItemDownwards (availableIndex);", "+\t} else {", "+\t\tint oldAvailableLength = parent.availableItems.length;", "+\t\tTreeItem[] descendents = computeAvailableDescendents ();", "+\t\texpanded = value;", "+\t\tparent.makeDescendentsUnavailable (this, descendents);", "+\t\t/* move focus (and selection if SWT.SINGLE) to item if a descendent had focus */", "+\t\tTreeItem focusItem = parent.focusItem;", "+\t\tif (focusItem != null && focusItem != this && focusItem.hasAncestor (this)) {", "+\t\t\tparent.setFocusItem (this, true);", "+\t\t\tif ((style & SWT.SINGLE) != 0) {", "+\t\t\t\tparent.selectedItems = new TreeItem[] {this};", "+\t\t\t}", "+\t\t\t/* Fire an event since the selection is being changed automatically */", "+\t\t\tEvent newEvent = new Event ();", "+\t\t\tnewEvent.item = this;", "+\t\t\tparent.sendEvent (SWT.Selection, newEvent);", "+\t\t\tif (isDisposed ()) return;", "+\t\t\tparent.showItem (this);", "+\t\t}", "+\t\tparent.redrawItems(availableIndex, oldAvailableLength - 1);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6abbc1379a4040766880af7237751575", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void setExpanded (boolean value)", "signatureAfterChange": " public void setExpanded(boolean expand)", "diff": ["+public void setExpanded(boolean expand) {", "+\tcheckWidget();", "+\tif (isLeaf() == false && expand == true) {", "+\t\tgetParent().expand(this, false);", "+\t}", "+\telse {", "+\t\tgetParent().collapse(this, false);", "+\t}", "+}", "-public void setExpanded (boolean value) {", "-\tcheckWidget ();", "-\tif (expanded == value) return;", "-\tif (items.length == 0) return;", "-\t// TODO the next line seems to match other platforms, test case is lazy Tree snippet", "-\tif (parent.inExpand) return;", "-\tif (value) {", "-\t\texpanded = value;", "-\t\tparent.makeDescendentsAvailable (this);", "-\t\tparent.redrawFromItemDownwards (availableIndex);", "-\t} else {", "-\t\tint oldAvailableLength = parent.availableItems.length;", "-\t\tTreeItem2[] descendents = computeAvailableDescendents ();", "-\t\texpanded = value;", "-\t\tparent.makeDescendentsUnavailable (this, descendents);", "-\t\t/* move focus (and selection if SWT.SINGLE) to item if a descendent had focus */", "-\t\tTreeItem2 focusItem = parent.focusItem;", "-\t\tif (focusItem != null && focusItem != this && focusItem.hasAncestor (this)) {", "-\t\t\tparent.setFocusItem (this, true);", "-\t\t\tif ((style & SWT.SINGLE) != 0) {", "-\t\t\t\tparent.selectedItems = new TreeItem2[] {this};", "-\t\t\t}", "-\t\t\t/* Fire an event since the selection is being changed automatically */", "-\t\t\tEvent newEvent = new Event ();", "-\t\t\tnewEvent.item = this;", "-\t\t\tparent.sendEvent (SWT.Selection, newEvent);", "-\t\t\tif (isDisposed ()) return;", "-\t\t\tparent.showItem (this);", "-\t\t}", "-\t\tparent.redrawItems(availableIndex, oldAvailableLength - 1);", "-\t}"]}], "num": 34354}