{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47218d25929042ee41a37fb17bfcf663", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4e7de25ff9de45650738d8fc39ff88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ae3524b4e7213bdc988c847b48af55b6ec06a750", "commitAfterChange": "b2aaf64564a26dcc4801edc4c810d8ab448c7216", "methodNumberBeforeChange": 275, "methodNumberAfterChange": 276, "signatureBeforeChange": " void setClipboardContent(int start, int length, int clipboardType) throws SWTError", "signatureAfterChange": " void setClipboardContent(int start, int length, int clipboardType) throws SWTError", "diff": ["-\tRTFTransfer rtfTransfer = RTFTransfer.getInstance();", "-\tRTFWriter rtfWriter = new RTFWriter(start, length);", "-\tString rtfText = getPlatformDelimitedText(rtfWriter);", "-", "-\tclipboard.setContents(", "-\t\tnew String[]{rtfText, plainText}, ", "-\t\tnew Transfer[]{rtfTransfer, plainTextTransfer},", "-\t\tclipboardType);", "+\tObject[] data;", "+\tTransfer[] types;", "+\tif (clipboardType == DND.SELECTION_CLIPBOARD) {", "+\t\tdata = new Object[]{plainText};", "+\t\ttypes = new Transfer[]{plainTextTransfer};", "+\t} else {", "+\t\tRTFTransfer rtfTransfer = RTFTransfer.getInstance();", "+\t\tRTFWriter rtfWriter = new RTFWriter(start, length);", "+\t\tString rtfText = getPlatformDelimitedText(rtfWriter);", "+\t\tdata = new Object[]{rtfText, plainText};", "+\t\ttypes = new Transfer[]{rtfTransfer, plainTextTransfer};", "+\t}", "+\tclipboard.setContents(data, types, clipboardType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5beb0228cd0c785260c80cd400f1eba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/PNGFileFormat.java", "commitBeforeChange": "09dfd6474613ae2804cca594ad963b5588f02bc0", "commitAfterChange": "a84996bbb9b56234593b8b2406c1c8b5d9dd5115", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void readPixelData(PngIdatChunk chunk, PngChunkReader chunkReader)", "signatureAfterChange": " void readPixelData(PngIdatChunk chunk, PngChunkReader chunkReader) throws IOException", "diff": ["-void readPixelData(PngIdatChunk chunk, PngChunkReader chunkReader) {", "-\tdecodingStream = new PngDecodingDataStream(chunk, chunkReader);", "+void readPixelData(PngIdatChunk chunk, PngChunkReader chunkReader) throws IOException {", "+\tInputStream stream = new PngInputStream(chunk, chunkReader);", "+\tInputStream inflaterStream = Compatibility.newInflaterInputStream(stream);", "+\tif (inflaterStream != null) {", "+\t\tstream = new BufferedInputStream(inflaterStream);", "+\t} else {", "+\t\tstream = new PngDecodingDataStream(stream);", "+\t}", "-\t\treadNonInterlacedImage();", "+\t\treadNonInterlacedImage(stream);", "-\t\treadInterlacedImage();", "+\t\treadInterlacedImage(stream);", "-\tdecodingStream.assertImageDataAtEnd();", "-\tdecodingStream.checkAdler();", "+\tstream.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69646a896a7facc94267c57e2b453f68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bcea5eebac5e467124552ade5da6f08e529a36c6", "commitAfterChange": "da59fb2bf87bed95c8760f865579057392b251e7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static String[] getExtensions()", "signatureAfterChange": " public static String[] getExtensions()", "diff": ["-\treturn getExtensions(Display.getCurrent());", "+\tboolean disposeDisplay = false;", "+\tDisplay display = Display.getCurrent ();", "+\tif (display == null) {", "+\t\tdisplay = new Display ();", "+\t\tdisposeDisplay = true;", "+\t}", "+\tString [] result = getExtensions (display);", "+\tif (disposeDisplay) display.dispose ();", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d18552eb74ab80f1d83a67e338631f35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bcea5eebac5e467124552ade5da6f08e529a36c6", "commitAfterChange": "da59fb2bf87bed95c8760f865579057392b251e7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Program findProgram(String extension)", "signatureAfterChange": " public static Program findProgram(String extension)", "diff": ["-\treturn findProgram(Display.getCurrent(), extension);", "+\tboolean disposeDisplay = false;", "+\tDisplay display = Display.getCurrent ();", "+\tif (display == null) {", "+\t\tdisplay = new Display ();", "+\t\tdisposeDisplay = true;", "+\t}", "+\tProgram result = findProgram (display, extension);", "+\tif (disposeDisplay) display.dispose ();", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b904cf89c8318a0edeff53c6fcb39b5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bcea5eebac5e467124552ade5da6f08e529a36c6", "commitAfterChange": "da59fb2bf87bed95c8760f865579057392b251e7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public static boolean launch(String fileName)", "signatureAfterChange": " public static boolean launch(String fileName)", "diff": ["-\treturn launch(Display.getCurrent(), fileName);", "+\tboolean disposeDisplay = false;", "+\tDisplay display = Display.getCurrent ();", "+\tif (display == null) {", "+\t\tdisplay = new Display ();", "+\t\tdisposeDisplay = true;", "+\t}", "+\tboolean result = launch (display, fileName);", "+\tif (disposeDisplay) display.dispose ();", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537514c7204ed6861b7f6d1192ff0200", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bcea5eebac5e467124552ade5da6f08e529a36c6", "commitAfterChange": "da59fb2bf87bed95c8760f865579057392b251e7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static Program[] getPrograms()", "signatureAfterChange": " public static Program[] getPrograms()", "diff": ["-\treturn getPrograms(Display.getCurrent());", "+\tboolean disposeDisplay = false;", "+\tDisplay display = Display.getCurrent ();", "+\tif (display == null) {", "+\t\tdisplay = new Display ();", "+\t\tdisposeDisplay = true;", "+\t}", "+\tProgram [] result = getPrograms (display);", "+\tif (disposeDisplay) display.dispose ();", "+\treturn result;"]}], "num": 61043}