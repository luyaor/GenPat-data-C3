{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65d2c27b3520f6809804bf5ba774aa7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2888e2d7a23c55f6bd4e162cb97ef742", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet96.java", "commitBeforeChange": "879c92f090c619e59d2af3943586380c5037e4e5", "commitAfterChange": "569babf0a9b188657307d0a76777c9cf21b42e97", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main(String[] args)", "signatureAfterChange": "  public static void main(String[] args)", "diff": ["+\t\t\t// close the text editor when the user tabs away", "+\t\t\ttext.addFocusListener(new FocusAdapter() {", "+\t\t\t\tpublic void focusLost(FocusEvent e) {", "+\t\t\t\t\ttext.dispose();", "+\t\t\t\t}", "+\t\t\t});", "+\t// When the user double clicks in the TableCursor, pop up a text editor so that ", "+\t// they can change the text of the cell", "+\tcursor.addMouseListener(new MouseAdapter() {", "+\t\tpublic void mouseDoubleClick(MouseEvent e) {", "+\t\t\tfinal Text text = new Text(cursor, SWT.NONE);", "+\t\t\tTableItem row = cursor.getRow();", "+\t\t\tint column = cursor.getColumn();", "+\t\t\ttext.setText(row.getText(column));", "+\t\t\ttext.addKeyListener(new KeyAdapter() {", "+\t\t\t\tpublic void keyPressed(KeyEvent e) {", "+\t\t\t\t\t// close the text editor and copy the data over ", "+\t\t\t\t\t// when the user hits \"ENTER\"", "+\t\t\t\t\tif (e.character == SWT.CR) {", "+\t\t\t\t\t\tTableItem row = cursor.getRow();", "+\t\t\t\t\t\tint column = cursor.getColumn();", "+\t\t\t\t\t\trow.setText(column, text.getText());", "+\t\t\t\t\t\ttext.dispose();", "+\t\t\t\t\t}", "+\t\t\t\t\t// close the text editor when the user hits \"ESC\"", "+\t\t\t\t\tif (e.character == SWT.ESC) {", "+\t\t\t\t\t\ttext.dispose();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\t// close the text editor when the user clicks away", "+\t\t\ttext.addFocusListener(new FocusAdapter() {", "+\t\t\t\tpublic void focusLost(FocusEvent e) {", "+\t\t\t\t\ttext.dispose();", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\teditor.setEditor(text);", "+\t\t\ttext.setFocus();", "+\t\t}", "+\t});", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c677439e1a6283061d6c6dbaa277ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/views/MacGeneratorView.java", "commitBeforeChange": "78d0998c278ea3b9e8ad98792cb32a0685828ee5", "commitAfterChange": "e0eebc7184e9e030d713fedc011776bd0bf1aa18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic MacGeneratorView()", "signatureAfterChange": " \tpublic MacGeneratorView()", "diff": ["-\t\tIWorkspaceRoot workspace = ResourcesPlugin.getWorkspace().getRoot();", "-\t\troot = workspace.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));", "+\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();", "+\t\troot = workspaceRoot.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));\t\t", "+\t\tlistener = new IResourceChangeListener() {", "+\t\t\tpublic void resourceChanged(IResourceChangeEvent event) {", "+\t\t\t\tif (job != null) return;", "+\t\t\t\tif (event.getType() != IResourceChangeEvent.POST_CHANGE) return;", "+\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "+\t\t\t\tIResourceDelta piDelta = rootDelta.findMember(root.getFullPath());", "+\t\t\t\tif (piDelta == null) return;", "+\t\t\t\tfinal ArrayList changed = new ArrayList();", "+\t\t\t\tIResourceDeltaVisitor visitor = new IResourceDeltaVisitor() {", "+\t\t\t\t\tpublic boolean visit(IResourceDelta delta) {", "+\t\t\t\t\t\tif (delta.getKind() != IResourceDelta.CHANGED) return true;", "+\t\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) return true;", "+\t\t\t\t\t\tIResource resource = delta.getResource();", "+\t\t\t\t\t\tif (resource.getType() == IResource.FILE && \"extras\".equalsIgnoreCase(resource.getFileExtension())) {", "+\t\t\t\t\t\t\tchanged.add(resource);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t};", "+\t\t\t\ttry {", "+\t\t\t\t\tpiDelta.accept(visitor);", "+\t\t\t\t} catch (CoreException e) {}", "+\t\t\t\tif (changed.size() > 0) {", "+\t\t\t\t\tui.refresh();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\tworkspace.addResourceChangeListener(listener);"]}], "num": 1695}