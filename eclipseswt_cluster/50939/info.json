{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32f2b87a43e28e86ae729ba4ea14e02a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f8b1ddb7c9e889e318c7dfc5f59743", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "cd729e2c48dead5df59b387a7dd4b7efdf79375f", "commitAfterChange": "30427380958ec2923d85fa84aed3c01febb70756", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r void bringToTop (boolean force)", "signatureAfterChange": "\r void bringToTop (boolean force)", "diff": ["-\tint display = OS.XtDisplay (handle);\r", "-\tif (display == 0) return;\r", "-\tint window = OS.XtWindow (handle);\r", "-\tif (window == 0) return;\r", "-\t\r", "+\tint xDisplay = OS.XtDisplay (handle);\r", "+\tif (xDisplay == 0) return;\r", "+\tint xWindow = OS.XtWindow (handle);\r", "+\tif (xWindow == 0) return;\r", "-\t\tOS.XGetInputFocus (display, buffer1, buffer2);\r", "-\t\tint xWindow = buffer1 [0];\r", "-\t\tif (xWindow == 0) return;\r", "-\t\tint handle = OS.XtWindowToWidget (display, xWindow);\r", "+\t\tOS.XGetInputFocus (xDisplay, buffer1, buffer2);\r", "+\t\tif (buffer1 [0] == 0) return;\r", "+\t\tint handle = OS.XtWindowToWidget (xDisplay, buffer1 [0]);\r", "-\r", "-\t\tWidget widget = null;\r", "-\t\tdo {\r", "-\t\t\twidget = WidgetTable.get (handle);\r", "-\t\t} while (widget == null && (handle = OS.XtParent (handle)) != 0);\r", "-\t\tif (widget == null) return;\r", "-\t\r", "-\tOS.XSetInputFocus (display, window, OS.RevertToParent, OS.CurrentTime);\r", "+\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a656142c560073f09928d07a73089570", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "db31883b9f41fd00bb5b0a446bfa1b3f53fba5d7", "commitAfterChange": "95bcccfd921c2b52375a1f493e992d80dc6832b5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventAccessibleGetNamedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\tint code = OS.eventNotHandledErr;", "-\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\tif (stringRef [0] != 0) {", "+\t\t\tif (attributeName.equals (OS.kAXRoleAttribute)) {", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\tcode = OS.noErr;", "-\t\t\t}", "-\t\t}", "-\t\tif (attributeName.equals (OS.kAXRoleDescriptionAttribute)) {", "-\t\t\tif (stringRef [0] != 0) {", "+\t\t\t} else { // kAXRoleDescriptionAttribute", "-\t\t\t\tOS.CFRelease(stringRef [0]);", "-\t\t\t\tcode = OS.noErr;", "+\t\t\tOS.CFRelease(stringRef [0]);", "+\t\t\tcode = OS.noErr;", "-\t\tint err = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, userData);", "-\t\tif (err != OS.eventNotHandledErr) return err;", "+\t\tcode = accessible.internal_kEventAccessibleGetNamedAttribute (nextHandler, theEvent, code);"]}], "num": 50939}