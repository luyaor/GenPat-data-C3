{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ce071f31112e992397fbd9ee919d7d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b269cd9dbb6b951a9120f3ff02c3ab9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "9e93d007401972731d2812b598cdc4e478c9b17c", "commitAfterChange": "9a65f33f478599955ffa3d6f8f3da0aa10fd6118", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test_setSelection$I()", "signatureAfterChange": "  public void test_setSelection$I()", "diff": ["-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-\t\t", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.removeAll();", "+\t", "+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\ttry {", "-\t\t\tlist.setSelection((int[]) null);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t} catch (IllegalArgumentException e) {", "-\t\t}", "-\t\t", "-\t\tlist.setSelection(new int [] {0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {-1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {0, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {-1, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {0, -1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\ttry {", "+\t\tlist.setSelection((int[]) null);", "+\t\tfail(\"No exception thrown\");", "+\t} catch (IllegalArgumentException e) {", "+\t", "+\tlist.setSelection(new int [] {0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {-1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {0, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {-1, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {0, -1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-\t\t", "-\t\tlist.setSelection(new int [0]);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\tlist.removeAll();", "+\t", "+\tlist.setSelection(new int [0]);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "-\t\ttry {", "-\t\t\tlist.setSelection((int[]) null);", "-\t\t\tfail(\"No exception thrown\");", "-\t\t} catch (IllegalArgumentException e) {", "-\t\t}", "-\t\t", "-\t\tlist.setSelection(new int [] {0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {-1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-", "-\t\tlist.setSelection(new int [] {0, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {-1, 0});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "-\t\t", "-\t\tlist.setSelection(new int [] {0, -1});", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), -1);", "+\ttry {", "+\t\tlist.setSelection((int[]) null);", "+\t\tfail(\"No exception thrown\");", "+\t} catch (IllegalArgumentException e) {", "+\t", "+\tlist.setSelection(new int [] {0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {-1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+", "+\tlist.setSelection(new int [] {0, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {-1, 0});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);", "+\t", "+\tlist.setSelection(new int [] {0, -1});", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdea1ed8da5de2e70c7335288e19cb40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test_setSelectionII()", "signatureAfterChange": "  public void test_setSelectionII()", "diff": ["-\tlist.setSelection(1, 2);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getFocusIndex(), 2);", "-\t", "-\tlist.setSelection(-3, -2);", "-\tassertEquals(list.getSelectionIndices(), new int[] {2});", "-\tassertEquals(list.getFocusIndex(), 2);", "-\t", "-\tlist.setSelection(0, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(list.getFocusIndex(), 1);", "-\t", "-\tlist.setSelection(-2, -1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(list.getFocusIndex(), 1);", "-\t", "-\tlist.setSelection(number - 2, number - 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\t", "-\tlist.setSelection(number - 1, number);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-\t", "-\tlist.setSelection(-1, 0);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "-\t", "-\tlist.setSelection(number, number + 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "-\t", "+\tlist.setSelection(1, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {1});", "+\tassertEquals(list.getFocusIndex(), 1);", "+\t", "+\tlist.setSelection(4, 4);", "+\tassertEquals(list.getSelectionIndices(), new int[] {4});", "+\tassertEquals(list.getFocusIndex(), 4);", "+\t", "+\tlist.setSelection(number - 1, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\t", "+\tlist.setSelection(number, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-3, -2);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(0, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-2, -1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number - 2, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number - 1, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(-1, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "+\tlist.setSelection(number, number + 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\t", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getFocusIndex(), 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getFocusIndex(), number - 1);", "-", "-\tif (fCheckSWTPolicy) {", "-\t\tlist.removeAll();", "-", "-\t\tlist.setSelection(-2, -1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(-1, 0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(0, 1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(1, 0);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t\t", "-\t\tlist.setSelection(0, -1);", "-\t\tassertEquals(list.getSelectionIndices(), new int[0]);", "-\t\tassertEquals(list.getFocusIndex(), 0);", "-\t}", "+\tassertEquals(list.getSelectionIndices(), new int[] {});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b21b58726f341352b6b67e410ccae4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test_setSelectionII()", "signatureAfterChange": "  public void test_setSelectionII()", "diff": ["-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertArrayEquals(list.getSelectionIndices(), new int[0]);", "-\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {0});", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {1});", "-\tassertEquals(list.getSelectionIndices(), new int[] {4});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {4});", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});", "-\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {number - 1});", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tassertArrayEquals(list.getSelectionIndices(), new int[] {});"]}], "num": 53715}