{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9266d1397b30f06e06effdf41e50048", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0a4aab93c49db2157d0d9ef84ba445", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 92, "signatureBeforeChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground)", "signatureAfterChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground, StyledTextBidi bidi)", "diff": ["-void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground) {\r", "+void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground, StyledTextBidi bidi) {\r", "-\t\r", "-\tfor (int i = 0; i < styles.length && paintX < renderStopX; i++) {\r", "+\tFontData fontData = gc.getFont().getFontData()[0];\r", "+\t\t\r", "+\t// Always render the entire line when in a bidi locale.\r", "+\t// Since we render the line in logical order we may start past the end\r", "+\t// of the visual right border of the client area and work towards the\r", "+\t// left.\r", "+\tfor (int i = 0; i < styles.length && (paintX < renderStopX || bidi != null); i++) {\r", "+\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);\t\t\t\r", "-\t\t\tpaintX = drawText(line, lineOffset, renderOffset, styleLineStart - renderOffset, filteredStyles, paintX, paintY, gc);\r", "+\t\t\tpaintX = drawText(line, lineOffset, renderOffset, styleLineStart - renderOffset, paintX, paintY, gc, bidi);\r", "-\t\t\tint fillWidth = textWidth(line, lineOffset, renderOffset, styleLineLength, filteredStyles, paintX, gc);\r", "-\t\t\tgc.fillRectangle(paintX - horizontalScrollOffset, paintY, fillWidth, lineHeight);\r", "+\t\t\tif (bidi != null) {\r", "+\t\t\t\tbidi.fillBackground(renderOffset, styleLineLength, -horizontalScrollOffset, paintY, lineHeight);\r", "+\t\t\t}\r", "+\t\t\telse {\r", "+\t\t\t\tint fillWidth = textWidth(line, lineOffset, renderOffset, styleLineLength, filteredStyles, paintX, gc, bidi);\r", "+\t\t\t\tgc.fillRectangle(paintX - horizontalScrollOffset, paintY, fillWidth, lineHeight);\r", "+\t\t\t}\r", "-\t\tpaintX = drawText(line, lineOffset, renderOffset, styleLineLength, filteredStyles, paintX, paintY, gc);\r", "+\t\tsetLineFont(gc, fontData, style.fontStyle);\r", "+\t\tpaintX = drawText(line, lineOffset, renderOffset, styleLineLength, paintX, paintY, gc, bidi);\r", "-\tif ((style == null || renderOffset < lineLength) && paintX < renderStopX) {\r", "+\tif ((style == null || renderOffset < lineLength) && (paintX < renderStopX || bidi != null)) {\r", "-\t\tdrawText(line, lineOffset, renderOffset, lineLength - renderOffset, filteredStyles, paintX, paintY, gc);\r", "+\t\tsetLineFont(gc, fontData, SWT.NORMAL);\r", "+\t\tdrawText(line, lineOffset, renderOffset, lineLength - renderOffset, paintX, paintY, gc, bidi);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aafda72fca4268f7fa62b10f2a6dec5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/WrappedContent.java", "commitBeforeChange": "44be5983a5fff33f337bb260817cc50987bb398a", "commitAfterChange": "47bdf987fcc6a0c67f43a42299353f6d35603f81", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc, FontData fontData)", "signatureAfterChange": "\r private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc, FontData fontData)", "diff": ["-\t\tlineWidth = textWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t\tlineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "-\t\t\t    lineWidth = textWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t\t\t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "-\t\t\t    int newLineWidth = textWidth(line, logicalLineOffset, visualLineOffset, newLineLength, styles, startX, gc, fontData);\r", "+\t\t\t    int newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, newLineLength, styles, startX, gc, fontData);\r", "-        lineWidth = textWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+        lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "-\t    \t    lineWidth = textWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t    \t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "-\t   \t\t\tint newLineWidth = textWidth(line, logicalLineOffset, visualLineOffset, visualLineLength + 1, styles, startX, gc, fontData);\r", "+\t   \t\t\tint newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength + 1, styles, startX, gc, fontData);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "214deed44c52f8e3a2459eac3f377bd5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/WrappedContent.java", "commitBeforeChange": "f9c3b5973aa314c2c0842a04a410e5cc909a74fe", "commitAfterChange": "4e22aa7cc6f558a2b3130ccb8327c63b7cc18d3f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc, FontData fontData)", "signatureAfterChange": "\r private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc)", "diff": ["-private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc, FontData fontData) {\r", "+private int[] wrapLine(String line, int logicalLineOffset, int visualLineOffset, int startX, int width, int numChars, StyleRange[] styles, GC gc) {\r", "-\t\tlineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t\tlineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc);\r", "-\t\t\t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t\t\t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc);\r", "-\t\t\t    int newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, newLineLength, styles, startX, gc, fontData);\r", "+\t\t\t    int newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, newLineLength, styles, startX, gc);\r", "-        lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+        lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc);\r", "-\t    \t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc, fontData);\r", "+\t    \t    lineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength, styles, startX, gc);\r", "-\t   \t\t\tint newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength + 1, styles, startX, gc, fontData);\r", "+\t   \t\t\tint newLineWidth = getTextWidth(line, logicalLineOffset, visualLineOffset, visualLineLength + 1, styles, startX, gc);\r"]}], "num": 12973}