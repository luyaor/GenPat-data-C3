{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37b05e241dcfc8dd6b5f9763e1ba8c59", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979bb53bdcfc7f301e09772027d1c99b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "9899584af57f2aeeb3d79b5a1a597482c1483f25", "commitAfterChange": "fb09662df1ae0e1a8edbefd5ed1d81d103c72b50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void setBounds (int x, int y, int width, int height)", "signatureAfterChange": " public void setBounds (int x, int y, int width, int height)", "diff": ["-\tif (!isValidThread ()) error (SWT.ERROR_THREAD_INVALID_ACCESS);", "-\tif (!isValidWidget ()) error (SWT.ERROR_WIDGET_DISPOSED);", "+\tcheckWidget();", "-\tif (samePosition && sameExtent) return;", "+\tif ((samePosition) && (sameExtent)) return;", "-\t\tmoved = true;", "-\t\tif (isVisible ()) move ();", "+\t\t\tmoved = true;", "+\t\t\tif (isVisible ()) {", "+\t\t\t\tmoved = false;", "+\t\t\t}", "-\t\tresized = true;", "-\t\tif (isVisible ()) resize ();", "+\t\t\tresized = true;", "+\t\t\tif (isVisible ()) {", "+\t\t\t\tmoved = false;", "+\t\t\t\tresized = false;", "+\t\t\t}", "-\tif(isVisible())", "-\t\tshowCaret ();", "+\tif (isShowing) showCaret ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "414b930d0b73902dec5645486928aa28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d51a1e9986e102cc25f9e3315913d157123399a5", "commitAfterChange": "2ea4335c94a683b0f3fbf39ee051c9c7bf9cf35f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tboolean embedded = window != null && (state & FOREIGN_HANDLE) == 0;", "-\t", "-\tif (view == null && !embedded) {", "+\tif (window == null) {", "-", "-\t\twindow.setAcceptsMouseMovedEvents(true);", "-\t\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "-\t\twindow.setDelegate(windowDelegate);", "-\t\t", "-\t\twindow.disableCursorRects();", "-\t\t", "-\t\tid id = window.fieldEditor (true, null);", "-\t\tif (id != null) {", "-\t\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "-\t\t}", "-\t\tstate |= CANVAS;", "-\t\t//state &= ~HIDDEN;", "+//\t\tOS.object_setClass (window.id, OS.objc_getClass(\"SWTWindow\"));", "+\t\tstate &= ~HIDDEN;", "-\t\t//super.createHandle ();", "+\t\tsuper.createHandle ();", "+\t\tstyle |= SWT.NO_BACKGROUND;", "+\t}", "+\twindow.setAcceptsMouseMovedEvents(true);", "+\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "+\twindow.setDelegate(windowDelegate);", "+\twindow.disableCursorRects();", "+\tid id = window.fieldEditor (true, null);", "+\tif (id != null) {", "+\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a32b5eb927e67e3a77f65e0fd8721b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "commitAfterChange": "6e89f26f4d6cf8c990840a7f12e701138a427091", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "diff": ["-\tfocus(true);", "-\t", "-\tint wHandle= OS.GetWindowFromPort(handle);", "-", "-\tint rgn= OS.NewRgn();", "-\tOS.ScrollRect(r.getData(), (short)deltaX, (short)deltaY, rgn);", "-", "-\torg.eclipse.swt.widgets.Display.getDefault().repairWindow(wHandle, rgn, fOffsetX, fOffsetY);", "-", "-\tunfocus(true);", "+\ttry {", "+\t\tif (focus(true, null)) {", "+\t\t\tint rgn= OS.NewRgn();", "+\t\t\tOS.ScrollRect(r.getData(), (short)deltaX, (short)deltaY, rgn);", "+\t\t\tOS.InvalWindowRgn(OS.GetWindowFromPort(handle), rgn);", "+\t\t\tOS.DisposeRgn(rgn);", "+\t\t}", "+\t} finally {", "+\t\tunfocus(true);", "+\t}"]}], "num": 42380}