{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccb3dadb5f9453be3ad8cdd0dbb1ad20", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff09b9ff19484f7ae5749716772c0c3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " void expand(TreeItem item, boolean notifyListeners)", "signatureAfterChange": " void doMouseUp(Event event)", "diff": ["+}", "+void doMouseUp(Event event) {", "+\tint index = (event.y - getHeaderHeight()) / itemHeight + topIndex;", "+\tif (!(0 <= index && index < availableItems.length)) return;\t/* not on an available item */", "+\tlastClickedItem = availableItems[index];", "+}", "- */", "-void expand(TreeItem item, boolean notifyListeners) {", "-\tboolean nestedExpand = expandingItem != null;", "-", "-\tif (item.getExpanded() == true || item.getExpanding() == true) {", "-\t\treturn;", "-\t}", "-\titem.setExpanding(true);", "-\tif (nestedExpand == false) {", "-\t\tsetExpandingItem(item);", "-\t}", "-\tif (notifyListeners == true) {", "-\t\tevent.item = item;", "-\t\tnotifyListeners(SWT.Expand, event);", "-\t}", "-\tscrollForExpand(item);", "-\titem.internalSetExpanded(true);", "-\t// redraw hierarchy image", "-\titem.redrawExpanded(item.getVisibleIndex() - getTopIndex());", "-\tcalculateVerticalScrollbar();", "-\tif (nestedExpand == false && isVisible() == true) {", "-\t\tshowSelectableItem(item);\t// make expanded item visible. Could be invisible if the expand was caused by a key press.\t\t", "-\t\tcalculateWidestExpandingItem(item);", "-\t\tscrollExpandedItemsIntoView(item);", "-\t}", "-\tif (nestedExpand == false) {", "-\t\tsetExpandingItem(null);", "-\t}", "-\titem.setExpanding(false);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4000749fabb7a0fe587ac88c30f8479", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 32, "signatureBeforeChange": " public TableItem getItem(Point point)", "signatureAfterChange": " public TableItem getItem (Point point)", "diff": ["+}", "+public TableItem getItem (Point point) {", "+\tcheckWidget ();", "+\tif (point == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tint index = (point.y - getHeaderHeight ()) / itemHeight - topIndex;", "+\tif (!(0 <= index && index < items.length)) return null;\t\t/* below the last item */", "+\tTableItem result = items [index];", "+\tif (!result.getHitBounds ().contains (point)) return null;\t/* considers the x value */", "+\treturn result;", "+}", "- */", "-public TableItem getItem(Point point) {", "-\tcheckWidget();", "-\tif (point == null) error(SWT.ERROR_NULL_ARGUMENT);", "-\tTableColumn column = getColumnAtX(point.x);\t", "-\tif ((style & SWT.FULL_SELECTION) == 0) {", "-\t\tif (column != null && column.getIndex() != 0) {", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\tTableItem item = null;", "-\tint headerHeight = getHeaderHeight();", "-\tif (column != null && column.getIndex() != TableColumn.FILL && point.y - headerHeight > 0) {", "-\t\tint itemIndex = (point.y - headerHeight) / getItemHeight() + getTopIndex();", "-\t\titem = (TableItem) getVisibleItem(itemIndex);", "-\t\tif ((style & SWT.FULL_SELECTION) == 0) {", "-\t\t\tif (item != null) {", "-\t\t\t\tPoint itemSize = item.getItemExtent(column);", "-\t\t\t\tif (point.x - column.getBounds().x > itemSize.x) {", "-\t\t\t\t\titem = null;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn item;", "-}"]}], "num": 25814}