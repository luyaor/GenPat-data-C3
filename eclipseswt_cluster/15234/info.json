{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d52a6ab1c38e67049c330ff145505dcf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5647fb5f2009eecb837a902c827e9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TableDropTargetEffect.java", "commitBeforeChange": "8200799fd4fc9f26a937f37e60a9ef54396d4890", "commitAfterChange": "ce281cb196b10adcbca7d0a8e66ab94ce171eb76", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void dragOver(DropTargetEvent event)", "signatureAfterChange": " \tpublic void dragOver(DropTargetEvent event)", "diff": ["-\t\tTable table = (Table) control;", "-", "-\t\tTableItem item = (TableItem)getItem(table, event.x, event.y);", "-", "-\t\tif ((effect & DND.FEEDBACK_SCROLL) == 0) {", "-\t\t\tscrollBeginTime = 0;", "-\t\t\tscrollItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "-\t\t\t\t\tRectangle area = table.getClientArea();", "-\t\t\t\t\tint headerHeight = table.getHeaderHeight();", "-\t\t\t\t\tint itemHeight= table.getItemHeight();", "-\t\t\t\t\tPoint pt = new Point(event.x, event.y);", "-\t\t\t\t\tpt = table.getDisplay().map(null, table, pt);", "-\t\t\t\t\tTableItem nextItem = null;", "-\t\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.max(0, table.indexOf(item)-1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.min(table.getItemCount()-1, table.indexOf(item)+1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (nextItem != null) table.showItem(nextItem);", "-\t\t\t\t\tscrollBeginTime = 0;", "-\t\t\t\t\tscrollItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "-\t\t\t\tscrollItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\t// store current effect for selection feedback"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b5aed2cada1b5a4180d952e8360fe79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/TreeDragUnderEffect.java", "commitBeforeChange": "bd8d9571ea050e4c23edda8436d67a1ef053b218", "commitAfterChange": "4894c17964a7684074639c1b3befc4d7c320b687", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " void setDragUnderEffect(int effect, TreeItem item)", "signatureAfterChange": " void show(int effect, int x, int y)", "diff": ["-void setDragUnderEffect(int effect, TreeItem item) {", "+}", "+void show(int effect, int x, int y) {", "+\teffect = checkEffect(effect);", "+\tTreeItem item = (TreeItem)getItem(x, y);", "-\t\tscrollIndex = null;", "+\t\tscrollItem = null;", "-\t\tif (item != null && item.equals(scrollIndex)  && scrollBeginTime != 0) {", "+\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tscroll(item);", "+\t\t\t\tRectangle area = tree.getClientArea();", "+\t\t\t\tint headerHeight = tree.getHeaderHeight();", "+\t\t\t\tint itemHeight= tree.getItemHeight();", "+\t\t\t\tPoint pt = new Point(x, y);", "+\t\t\t\tpt = tree.getDisplay().map(null, tree, pt);", "+\t\t\t\tTreeItem nextItem = null;", "+\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "+\t\t\t\t\tnextItem = previousItem(item);", "+\t\t\t\t}", "+\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "+\t\t\t\t\tnextItem = nextItem(item);", "+\t\t\t\t}", "+\t\t\t\tif (nextItem != null) tree.showItem(nextItem);", "-\t\t\t\tscrollIndex = null;", "+\t\t\t\tscrollItem = null;", "-\t\t\tscrollIndex = item;", "+\t\t\tscrollItem = item;"]}], "num": 15234}