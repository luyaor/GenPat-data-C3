{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1595cc990c7f8354c866ccf5c4b9f6a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a37aec27a4052ba204fd5a8cc7f5e33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "08809cd76478f88cb5fd681fd07e7cb686d89c90", "commitAfterChange": "8df88f0445bc8cb1b3e937ac645be0ab48f7aa47", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "signatureAfterChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "diff": ["-\tint offset;", "-\tint[] trailing;", "-\tTextLayout layout;", "-\tlayout = renderer.getTextLayout(line, lineOffset);", "-\tRectangle rect = layout.getLineBounds(0);", "-\tif (x < rect.x) {", "-\t\toffset = 0;", "-\t} else if (x > rect.x + rect.width) {", "-\t\toffset = line.length();", "-\t} else {", "-\t\ttrailing = new int[1];", "-\t\toffset = layout.getOffset(x, 0, trailing);", "-\t\tadvancing = false;", "-\t\tif (trailing[0] != 0) {", "-\t\t\tint level = layout.getLevel(offset) & 0x1;", "-\t\t\toffset = Math.min(line.length(), offset + trailing[0]);", "-\t\t\tint trailingLevel = layout.getLevel(offset) & 0x1;", "+\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "+\tint[] trailing = new int[1];", "+\tint offsetInLine = layout.getOffset(x, 0, trailing);", "+\tadvancing = false;", "+\tif (trailing[0] != 0) {", "+\t\tint lineLength = line.length();", "+\t\tif (offsetInLine + trailing[0] >= lineLength) {", "+\t\t\toffsetInLine = lineLength;", "+\t\t\tadvancing = true;", "+\t\t} else {", "+\t\t\tint level;", "+\t\t\tint offset = offsetInLine;", "+\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "+\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "+\t\t\t\tlevel = isMirrored() ? 1 : 0;", "+\t\t\t} else {", "+\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "+\t\t\t}", "+\t\t\toffsetInLine += trailing[0];", "+\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "-\treturn offset;", "+\treturn offsetInLine;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b6fe96f0d9c2d2b7d148431baffbaad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 146, "signatureBeforeChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "signatureAfterChange": " int getOffsetAtPoint(int x, int y)", "diff": ["- */", "-int getOffsetAtX(String line, int lineOffset, int lineXOffset) {", "-\tint x = lineXOffset - leftMargin + horizontalScrollOffset;", "-\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "-\tint[] trailing = new int[1];", "-\tint offsetInLine = layout.getOffset(x, 0, trailing);", "-\tadvancing = false;", "-\tif (trailing[0] != 0) {", "-\t\tint lineLength = line.length();", "-\t\tif (offsetInLine + trailing[0] >= lineLength) {", "-\t\t\toffsetInLine = lineLength;", "-\t\t\tadvancing = true;", "-\t\t} else {", "-\t\t\tint level;", "-\t\t\tint offset = offsetInLine;", "-\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "-\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "-\t\t\t\tlevel = isMirrored() ? 1 : 0;", "-\t\t\t} else {", "-\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "-\t\t\t}", "-\t\t\toffsetInLine += trailing[0];", "-\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "-\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "-\t\t}", "-\t}", "-\trenderer.disposeTextLayout(layout);", "-\treturn offsetInLine;", "+int getOffsetAtPoint(int x, int y) {", "+\tint lineIndex = getLineIndex(y);", "+\tString line = content.getLine(lineIndex);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "+\tx = x - leftMargin + horizontalScrollOffset;", "+\ty = y - topMargin - getLinePixel(lineIndex);", "+\tint[] trailing = new int[1];", "+\tint offsetInLine = layout.getOffset(x, y, trailing);", "+\tadvancing = false;", "+\tif (trailing[0] != 0) {", "+\t\tint lineLength = line.length();", "+\t\tif (offsetInLine + trailing[0] >= lineLength) {", "+\t\t\toffsetInLine = lineLength;", "+\t\t\tadvancing = true;", "+\t\t} else {", "+\t\t\tint level;", "+\t\t\tint offset = offsetInLine;", "+\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "+\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "+\t\t\t\tlevel = isMirrored() ? 1 : 0;", "+\t\t\t} else {", "+\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "+\t\t\t}", "+\t\t\toffsetInLine += trailing[0];", "+\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "+\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "+\t\t}", "+\t}", "+\trenderer.disposeTextLayout(layout);", "+\treturn offsetInLine + lineOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa647c969560434881b1038eabcee97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 129, "signatureBeforeChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "signatureAfterChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "diff": ["+int getOffsetAtX(String line, int lineOffset, int lineXOffset) {", "+\tint offset;", "+\tint[] trailing;", "+\tTextLayout layout;", "+\tint x = lineXOffset - leftMargin + horizontalScrollOffset;", "+\tlayout = renderer.getTextLayout(line, lineOffset, event);", "+\tRectangle rect = layout.getLineBounds(0);", "+\tif (x < rect.x) {", "+\t\toffset = 0;", "+\t} else if (x > rect.x + rect.width) {", "+\t\toffset = line.length();", "+\t} else {", "+\t\ttrailing = new int[1];", "+\t\toffset = layout.getOffset(x, 0, trailing);", "+\t\tadvancing = false;", "+\t\tif ((trailing[0] & SWT.TRAIL) != 0) {", "+\t\t\tint level = layout.getLevel(offset) & 0x1;", "+\t\t\toffset++;", "+\t\t\tint trailingLevel = layout.getLevel(offset) & 0x1;", "+\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "+\t\t} ", "+\trenderer.disposeTextLayout(layout, event);", "+\treturn offset;", "- */", "-int getOffsetAtX(String line, int lineOffset, int lineXOffset) {", "-\tGC gc = getGC();", "-\tint offset;\t", "-\t", "-\tlineXOffset += (horizontalScrollOffset - leftMargin);", "-\tif (isBidi()) {", "-\t\tStyledTextBidi bidi = getStyledTextBidi(line, lineOffset, gc);", "-\t\toffset = bidi.getOffsetAtX(lineXOffset);", "-\t}\t\t", "-\telse {", "-\t\tStyleRange[] styles = null;", "-\t\tStyledTextEvent event = renderer.getLineStyleData(lineOffset, line);", "-\t\t\t\t\t", "-\t\tif (event != null) {", "-\t\t\tstyles = renderer.filterLineStyles(event.styles);", "-\t\t}", "-\t\tint low = -1;", "-\t\tint high = line.length();", "-\t\twhile (high - low > 1) {", "-\t\t\toffset = (high + low) / 2;", "-\t\t\t// Restrict right/high search boundary only if x is within searched text segment.", "-\t\t\t// Fixes 1GL4ZVE.\t\t\t", "-\t\t\tif (lineXOffset < renderer.getTextPosition(line, lineOffset, offset + 1, styles, gc)) {", "-\t\t\t\thigh = offset;\t\t\t", "-\t\t\t}", "-\t\t\telse ", "-\t\t\tif (high == line.length() && high - offset == 1) {", "-\t\t\t\t// requested x location is past end of line", "-\t\t\t\thigh = -1;", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tlow = offset;", "-\t\t\t}", "-\t\t}", "-\t\toffset = high;", "-\t}", "-\tgc.dispose();\t", "-\treturn offset;\t"]}], "num": 14405}