{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b811a1c1b0badf61836c1d0c0abeab15", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301dd220794170cf64fed7431718e6fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "20341a906ec48db4f6861f704b0857c4bb2bb993", "commitAfterChange": "ff4f7abf188cf71a2994120a01a05f1aeace595a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int x, int y, int width, int height, int destX, int destY)", "diff": ["-\tOS.XSetGraphicsExposures (xDisplay, handle, true);", "+\tif (data.image == null) OS.XSetGraphicsExposures (xDisplay, handle, true);", "-\tOS.XSetGraphicsExposures (xDisplay, handle, false);", "-\tif (data.image != null) return;", "-\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "-\tif (disjoint) {", "-\t\tOS.XClearArea (xDisplay, xDrawable, x, y, width, height, true);", "-\t} else {", "-\t\tif (deltaX != 0) {", "-\t\t\tint newX = destX - deltaX;", "-\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\tOS.XClearArea (xDisplay, xDrawable, newX, y, Math.abs (deltaX), height, true);", "-\t\t}", "-\t\tif (deltaY != 0) {", "-\t\t\tint newY = destY - deltaY;", "-\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\tOS.XClearArea (xDisplay, xDrawable, x, newY, width, Math.abs (deltaY), true);", "+\tif (data.image == null) {", "+\t\tOS.XSetGraphicsExposures (xDisplay, handle, false);", "+\t\tboolean disjoint = (destX + width < x) || (x + width < destX) || (destY + height < y) || (y + height < destY);", "+\t\tif (disjoint) {", "+\t\t\tOS.XClearArea (xDisplay, xDrawable, x, y, width, height, true);", "+\t\t} else {", "+\t\t\tif (deltaX != 0) {", "+\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\tOS.XClearArea (xDisplay, xDrawable, newX, y, Math.abs (deltaX), height, true);", "+\t\t\t}", "+\t\t\tif (deltaY != 0) {", "+\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\tOS.XClearArea (xDisplay, xDrawable, x, newY, width, Math.abs (deltaY), true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77a2ab3380e7e159183246d9f6a3375e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "20341a906ec48db4f6861f704b0857c4bb2bb993", "commitAfterChange": "ff4f7abf188cf71a2994120a01a05f1aeace595a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY)", "diff": ["-\tOS.gdk_gc_set_exposures(handle, true);", "+\tif (data.image == null) OS.gdk_gc_set_exposures(handle, true);", "-\tOS.gdk_gc_set_exposures(handle, false);", "-\tif (data.image != null) return;", "-\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);", "-\tGdkRectangle rect = new GdkRectangle ();", "-\tif (disjoint) {", "-\t\trect.x = srcX;", "-\t\trect.y = srcY;", "-\t\trect.width = width;", "-\t\trect.height = height;", "-\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);", "-//\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);", "-\t} else {", "-\t\tif (deltaX != 0) {", "-\t\t\tint newX = destX - deltaX;", "-\t\t\tif (deltaX < 0) newX = destX + width;", "-\t\t\trect.x = newX;", "+\tif (data.image == null) {", "+\t\tOS.gdk_gc_set_exposures(handle, false);", "+\t\tboolean disjoint = (destX + width < srcX) || (srcX + width < destX) || (destY + height < srcY) || (srcY + height < destY);", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tif (disjoint) {", "+\t\t\trect.x = srcX;", "-\t\t\trect.width = Math.abs(deltaX);", "+\t\t\trect.width = width;", "-//\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);", "-\t\t}", "-\t\tif (deltaY != 0) {", "-\t\t\tint newY = destY - deltaY;", "-\t\t\tif (deltaY < 0) newY = destY + height;", "-\t\t\trect.x = srcX;", "-\t\t\trect.y = newY;", "-\t\t\trect.width = width;", "-\t\t\trect.height = Math.abs(deltaY);", "-\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);", "-//\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));", "+//\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, srcY, width, height);", "+\t\t} else {", "+\t\t\tif (deltaX != 0) {", "+\t\t\t\tint newX = destX - deltaX;", "+\t\t\t\tif (deltaX < 0) newX = destX + width;", "+\t\t\t\trect.x = newX;", "+\t\t\t\trect.y = srcY;", "+\t\t\t\trect.width = Math.abs(deltaX);", "+\t\t\t\trect.height = height;", "+\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);", "+//\t\t\t\tOS.gdk_window_clear_area_e(drawable, newX, srcY, Math.abs(deltaX), height);", "+\t\t\t}", "+\t\t\tif (deltaY != 0) {", "+\t\t\t\tint newY = destY - deltaY;", "+\t\t\t\tif (deltaY < 0) newY = destY + height;", "+\t\t\t\trect.x = srcX;", "+\t\t\t\trect.y = newY;", "+\t\t\t\trect.width = width;", "+\t\t\t\trect.height = Math.abs(deltaY);", "+\t\t\t\tOS.gdk_window_invalidate_rect (drawable, rect, false);", "+//\t\t\t\tOS.gdk_window_clear_area_e(drawable, srcX, newY, width, Math.abs(deltaY));", "+\t\t\t}"]}], "num": 17665}