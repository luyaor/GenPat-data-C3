{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a712b4310e1a99d82595185a16b82ea4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac111fe796ee837d238bc195ad49acb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "646f3be9e023652896aa5b793e22f943c24ca91a", "commitAfterChange": "59c53f385a563c40366c52113f27626c32e709ac", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["+\t\tif (data.alpha != 0xFF) {", "+\t\t\tfloat[] matrix = new float[]{", "+\t\t\t\t1,0,0,0,0,", "+\t\t\t\t0,1,0,0,0,", "+\t\t\t\t0,0,1,0,0,", "+\t\t\t\t0,0,0,data.alpha / (float)0xFF,0,", "+\t\t\t\t0,0,0,0,1,", "+\t\t\t};", "+\t\t\tGdip.ImageAttributes_SetColorMatrix(attrib, matrix, Gdip.ColorMatrixFlagsDefault, Gdip.ColorAdjustTypeBitmap);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "904dbd1ba1f6febfc6388fd1a0e5431a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "c422792f476daef88e3a0eb93a50d34c1718ea55", "commitAfterChange": "26b2de3e2a08e5f7046224c4824657b4a02354a6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["+\tif ((style & SWT.BORDER) == 0) {", "+\t\tint [] argList3 = new int [] {OS.XmNshadowThickness, 0};", "+\t\tOS.XtSetValues (handle, argList3, argList3.length / 2);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66031af358435d1d465f9ef3823cb9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public void drawLine (int x1, int y1, int x2, int y2)", "signatureAfterChange": "\r public void drawLine (int x1, int y1, int x2, int y2)", "diff": ["-\tOS.MoveToEx (handle, x1, y1, 0);\r", "-\tOS.LineTo (handle, x2, y2);\r", "+\tif (OS.IsWinCE) {\r", "+\t\tint [] points = new int [] {x1, y1, x2, y2};\r", "+\t\tOS.Polyline (handle, points, points.length / 2);\r", "+\t} else {\r", "+\t\tOS.MoveToEx (handle, x1, y1, 0);\r", "+\t\tOS.LineTo (handle, x2, y2);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c93ff1df0615000df0723f56e6798f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8072de8ac556091b7cf1f4c7ef1e2526bd4e25f4", "commitAfterChange": "0e433f8e5225314b18eb9c550958342f12d9762e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  int calculateWidth (long column, long iter)", "signatureAfterChange": "  int calculateWidth (long column, long iter)", "diff": ["+", "-\t// Code intentionally commented", "-\t//int [] width = new int [1];", "-\t//OS.gtk_tree_view_column_cell_get_size (column, null, null, null, width, null);", "-\t//return width [0];", "-", "-\tint width = 0;", "-\tint [] w = new int [1];", "-\tOS.gtk_widget_style_get(handle, OS.focus_line_width, w, 0);", "-\twidth += 2 * w [0];", "-\tlong /*int*/ list = OS.gtk_cell_layout_get_cells(column);", "-\tif (list == 0) return 0;", "-\tlong /*int*/ temp = list;", "-\twhile (temp != 0) {", "-\t\tlong /*int*/ renderer = OS.g_list_data (temp);", "-\t\tif (renderer != 0) {", "-\t\t\tgtk_cell_renderer_get_preferred_size (renderer, handle, w, null);", "-\t\t\twidth += w [0];", "-\t\t}", "-\t\ttemp = OS.g_list_next (temp);", "-\t}", "-\tOS.g_list_free (list);", "-\tif (OS.gtk_tree_view_get_grid_lines(handle) > OS.GTK_TREE_VIEW_GRID_LINES_NONE) {", "-\t\tOS.gtk_widget_style_get (handle, OS.grid_line_width, w, 0) ;", "+\t", "+\t//This workaround is causing the problem Bug 459834 in GTK3. So reverting the workaround for GTK3", "+\tif (OS.GTK3) {", "+\t\tint [] width = new int [1];", "+\t\tOS.gtk_tree_view_column_cell_get_size (column, null, null, null, width, null);", "+\t\treturn width [0];", "+\t} else {", "+\t\tint width = 0;", "+\t\tint [] w = new int [1];", "+\t\tOS.gtk_widget_style_get(handle, OS.focus_line_width, w, 0);", "+\t\tlong /*int*/ list = OS.gtk_cell_layout_get_cells(column);", "+\t\tif (list == 0) return 0;", "+\t\tlong /*int*/ temp = list;", "+\t\twhile (temp != 0) {", "+\t\t\tlong /*int*/ renderer = OS.g_list_data (temp);", "+\t\t\tif (renderer != 0) {", "+\t\t\t\tgtk_cell_renderer_get_preferred_size (renderer, handle, w, null);", "+\t\t\t\twidth += w [0];", "+\t\t\t}", "+\t\t\ttemp = OS.g_list_next (temp);", "+\t\t}", "+\t\tOS.g_list_free (list);", "+\t\tif (OS.gtk_tree_view_get_grid_lines(handle) > OS.GTK_TREE_VIEW_GRID_LINES_NONE) {", "+\t\t\tOS.gtk_widget_style_get (handle, OS.grid_line_width, w, 0) ;", "+\t\t\twidth += 2 * w [0];", "+\t\t}", "+\t\treturn width;", "-\treturn width;"]}], "num": 22108}