{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d8b46e77abda51337b7ef5a60572b45", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5848ac9850686537d4efc1309d2809a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\t\t\tlong /*int*/ visibleRegion = 0;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\t\t\tvisibleRegion = OS.gdk_window_get_visible_region (drawable);", "-\t\t\t\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tCairo.cairo_region_destroy (visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (copyRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "-\t\t\t\t} else {", "-\t\t\t\t\tvisibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "-\t\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (copyRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (invalidateRegion);", "-\t\t\t\t}", "+\t\t\t\tlong /*int*/ visibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "+\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "+\t\t\t\tsrcRect.x = srcX;", "+\t\t\t\tsrcRect.y = srcY;", "+\t\t\t\tsrcRect.width = width;", "+\t\t\t\tsrcRect.height = height;", "+\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "+\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "+\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\t\t\tOS.gdk_region_destroy (copyRegion);", "+\t\t\t\tOS.gdk_region_destroy (invalidateRegion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b33ac35d7f3b9aec31b86edabaa92d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "46574e0c07817f569f9b2371d8af4621669be343", "commitAfterChange": "c05bd5d00c731a6560c4b77b8226822ede36b033", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t} else {", "-\t\t\t\tif (explorerTheme && hooks (SWT.EraseItem)) {", "-\t\t\t\t\tif ((selected && !ignoreDrawSelection) || (hot && !ignoreDrawHot)) {", "-\t\t\t\t\t\tRECT pRect = item.getBounds (index, true, true, false, false, false, hDC);", "-\t\t\t\t\t\tRECT pClipRect = item.getBounds (index, true, true, false, false, true, hDC);", "-\t\t\t\t\t\tpRect.left -= EXPLORER_EXTRA;", "-\t\t\t\t\t\tpRect.right += EXPLORER_EXTRA;", "-\t\t\t\t\t\tpClipRect.left -= EXPLORER_EXTRA;", "-\t\t\t\t\t\tpClipRect.right += EXPLORER_EXTRA;", "-\t\t\t\t\t\tint /*long*/ hTheme = OS.OpenThemeData (handle, Display.TREEVIEW);", "-\t\t\t\t\t\tint iStateId = selected ? OS.TREIS_SELECTED : OS.TREIS_HOT;", "-\t\t\t\t\t\tif (OS.GetFocus () != handle && selected && !hot) iStateId = OS.TREIS_SELECTEDNOTFOCUS;", "-\t\t\t\t\t\tOS.DrawThemeBackground (hTheme, hDC, OS.TVP_TREEITEM, iStateId, pRect, pClipRect);\t", "-\t\t\t\t\t\tOS.CloseThemeData (hTheme);", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\tif (!ignoreDrawFocus && focusRect != null) {", "+\t\tOS.DrawFocusRect (hDC, focusRect);", "+\t\tfocusRect = null;", "+\t}"]}], "num": 55849}