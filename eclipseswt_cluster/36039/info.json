{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "305eedde0d57b40d40e39a05a1e6d9cd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e980d59c497006ef3ce7913f9d82fadc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "c67a9c15e1d189241e01e956e2e9b242a9fda50d", "commitAfterChange": "dc5446ab4c95d58f2fa8f5395a9138a20c9237ec", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawWidget (int id, NSRect rect)", "signatureAfterChange": "  void drawWidget (int id, NSRect rect)", "diff": ["-\tif (id == view.id && getSelection ()) {", "-\t\tNSRect bounds = view.bounds();", "-\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "-\t\tcontext.saveGraphicsState();", "-\t\tNSColor.colorWithDeviceRed(0.1f, 0.1f, 0.1f, 0.1f).setFill();", "-\t\tNSColor.colorWithDeviceRed(0.2f, 0.2f, 0.2f, 0.2f).setStroke();", "-\t\tNSBezierPath.fillRect(bounds);", "-\t\tbounds.x += 0.5f;", "-\t\tbounds.y += 0.5f;", "-\t\tbounds.width -= 1;", "-\t\tbounds.height -= 1;", "-\t\tNSBezierPath.strokeRect(bounds);", "-\t\tcontext.restoreGraphicsState();", "-\t}", "-\tif (arrow != null && id == arrow.id) {", "-\t\tNSRect frame = arrow.frame();", "-\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "-\t\tcontext.saveGraphicsState();", "-\t\tNSPoint p1 = new NSPoint();", "-\t\tp1.y = (float)Math.ceil(frame.height / 2 - frame.width / 2);", "-\t\tNSPoint p2 = new NSPoint();", "-\t\tp2.x = frame.width;", "-\t\tp2.y = p1.y;", "-\t\tNSPoint p3 = new NSPoint();", "-\t\tp3.x = frame.width / 2;", "-\t\tp3.y = (float)(p2.y + Math.sqrt(Math.pow(frame.width, 2) - Math.pow(frame.width / 2, 2)));", "-\t\tNSBezierPath path = NSBezierPath.bezierPath();", "-\t\tpath.moveToPoint(p1);", "-\t\tpath.lineToPoint(p2);", "-\t\tpath.lineToPoint(p3);", "-\t\tpath.closePath();", "-\t\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "-\t\tcolor.set();", "-\t\tpath.fill();", "-\t\tcontext.restoreGraphicsState();", "+\tif (id == view.id) {", "+\t\tif (getSelection ()) {", "+\t\t\tNSRect bounds = view.bounds();", "+\t\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\t\tcontext.saveGraphicsState();", "+\t\t\tNSColor.colorWithDeviceRed(0.1f, 0.1f, 0.1f, 0.1f).setFill();", "+\t\t\tNSColor.colorWithDeviceRed(0.2f, 0.2f, 0.2f, 0.2f).setStroke();", "+\t\t\tNSBezierPath.fillRect(bounds);", "+\t\t\tbounds.x += 0.5f;", "+\t\t\tbounds.y += 0.5f;", "+\t\t\tbounds.width -= 1;", "+\t\t\tbounds.height -= 1;", "+\t\t\tNSBezierPath.strokeRect(bounds);", "+\t\t\tcontext.restoreGraphicsState();", "+\t\t}", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tNSRect bounds = view.bounds();", "+\t\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\t\tcontext.saveGraphicsState();", "+\t\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\t\tNSPoint pt = new NSPoint();", "+\t\t\tpath.moveToPoint(pt);", "+\t\t\tpt.x += ARROW_WIDTH;", "+\t\t\tpath.lineToPoint(pt);", "+\t\t\tpt.y += ARROW_WIDTH - 1;", "+\t\t\tpt.x -= ARROW_WIDTH / 2f;", "+\t\t\tpath.lineToPoint(pt);", "+\t\t\tpath.closePath();", "+\t\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\t\tSystem.out.println(bounds.height);", "+\t\t\ttransform.translateXBy((int)bounds.width - ARROW_WIDTH - INSET, (int)(bounds.height - ARROW_WIDTH / 2) / 2);", "+\t\t\ttransform.concat();", "+\t\t\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "+\t\t\tcolor.set();", "+\t\t\tpath.fill();", "+\t\t\tcontext.restoreGraphicsState();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c6808104ba0f5334fdcc5991c2e4ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "59cc62059de5a7cbd294e3ea222ec6fa71e833fd", "commitAfterChange": "77a4408403daf08b0503a3ba2026817bdb0d840b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void drawRect(int id, NSRect rect)", "signatureAfterChange": "  void drawWidget (int id, NSRect rect)", "diff": ["-void drawRect(int id, NSRect rect) {", "-\tsuper.drawRect(id, rect);", "-\tif ((style & SWT.ARROW) == 0) return;", "-", "-\tNSRect frame = view.frame();", "-\tint arrowSize = Math.min((int)frame.height, (int)frame.width) / 2;", "-\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "-\tcontext.saveGraphicsState();", "-\tNSPoint p1 = new NSPoint();", "-\tp1.x = (float)Math.floor(-arrowSize / 2);", "-\tp1.y = (float)Math.floor(-arrowSize / 2);", "-\tNSPoint p2 = new NSPoint();", "-\tp2.x = (float)Math.ceil(arrowSize / 2);", "-\tp2.y = p1.y;", "-\tNSPoint p3 = new NSPoint();", "-\tp3.y = (float)Math.ceil(arrowSize / 2);", "-", "-\tNSBezierPath path = NSBezierPath.bezierPath();", "-\tpath.moveToPoint(p1);", "-\tpath.lineToPoint(p2);", "-\tpath.lineToPoint(p3);", "-\tpath.closePath();", "-", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tif ((style & SWT.LEFT) != 0) {", "-\t\ttransform.rotateByDegrees(90);", "-\t} else if ((style & SWT.UP) != 0) {", "-\t\ttransform.rotateByDegrees(180);", "-\t} else if ((style & SWT.RIGHT) != 0) {", "-\t\ttransform.rotateByDegrees(-90);", "+void drawWidget (int id, NSRect rect) {", "+\tif ((style & SWT.ARROW) != 0) {\t", "+\t\tNSRect frame = view.frame();", "+\t\tint arrowSize = Math.min((int)frame.height, (int)frame.width) / 2;", "+\t\tNSGraphicsContext context = NSGraphicsContext.currentContext();", "+\t\tcontext.saveGraphicsState();", "+\t\tNSPoint p1 = new NSPoint();", "+\t\tp1.x = (float)Math.floor(-arrowSize / 2);", "+\t\tp1.y = (float)Math.floor(-arrowSize / 2);", "+\t\tNSPoint p2 = new NSPoint();", "+\t\tp2.x = (float)Math.ceil(arrowSize / 2);", "+\t\tp2.y = p1.y;", "+\t\tNSPoint p3 = new NSPoint();", "+\t\tp3.y = (float)Math.ceil(arrowSize / 2);", "+\t", "+\t\tNSBezierPath path = NSBezierPath.bezierPath();", "+\t\tpath.moveToPoint(p1);", "+\t\tpath.lineToPoint(p2);", "+\t\tpath.lineToPoint(p3);", "+\t\tpath.closePath();", "+\t", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tif ((style & SWT.LEFT) != 0) {", "+\t\t\ttransform.rotateByDegrees(90);", "+\t\t} else if ((style & SWT.UP) != 0) {", "+\t\t\ttransform.rotateByDegrees(180);", "+\t\t} else if ((style & SWT.RIGHT) != 0) {", "+\t\t\ttransform.rotateByDegrees(-90);", "+\t\t}", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t\ttransform = NSAffineTransform.transform();", "+\t\ttransform.translateXBy(frame.width / 2, frame.height / 2);", "+\t\tpath.transformUsingAffineTransform(transform);", "+\t", "+\t\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "+\t\tcolor.set();", "+\t\tpath.fill();", "+\t\tcontext.restoreGraphicsState();", "-\tpath.transformUsingAffineTransform(transform);", "-\ttransform = NSAffineTransform.transform();", "-\ttransform.translateXBy(frame.width / 2, frame.height / 2);", "-\tpath.transformUsingAffineTransform(transform);", "-", "-\tNSColor color = isEnabled() ? NSColor.blackColor() : NSColor.disabledControlTextColor();", "-\tcolor.set();", "-\tpath.fill();", "-\tcontext.restoreGraphicsState();", "+\tsuper.drawWidget (id, rect);"]}], "num": 36039}