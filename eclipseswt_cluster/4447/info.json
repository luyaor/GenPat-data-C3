{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7d7dd7500c9245487973db369a49959", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56d8371c76756a196ffd8968627ceb1c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "78468bca446d96c75fb7a488b69a2588651540b3", "commitAfterChange": "bd2fbb8410192877f5552bd4ede9ef550094b912", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 61, "signatureBeforeChange": " public Monitor getPrimaryMonitor ()", "signatureAfterChange": " public Monitor getPrimaryMonitor ()", "diff": ["+\tint gdevice = OS.GetMainDevice ();", "-\tRectangle rect = getBounds ();", "-\tmonitor.x = rect.x;", "-\tmonitor.y = rect.y;", "-\tmonitor.width = rect.width;", "-\tmonitor.height = rect.height;", "-\trect = getClientArea ();", "-\tmonitor.clientX = rect.x;", "-\tmonitor.clientY = rect.y;", "-\tmonitor.clientWidth = rect.width;", "-\tmonitor.clientHeight = rect.height;", "+\tmonitor.handle = gdevice;", "+\tint [] ptr = new int [1];", "+\tOS.memcpy (ptr, gdevice, 4);", "+\tGDevice device = new GDevice ();", "+\tOS.memcpy (device, ptr [0], GDevice.sizeof);\t\t", "+\tmonitor.x = device.left;", "+\tmonitor.y = device.top;", "+\tmonitor.width = device.right - device.left;", "+\tmonitor.height = device.bottom - device.top;", "+\tRect rect = new Rect ();\t\t", "+\tOS.GetAvailableWindowPositioningBounds (gdevice, rect);", "+\tmonitor.clientX = rect.left;", "+\tmonitor.clientY = rect.top;", "+\tmonitor.clientWidth = rect.right - rect.left;", "+\tmonitor.clientHeight = rect.bottom - rect.top;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46aabe4960af5a511de35c7b9618383b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "24d19b3d7f33db77171fd62ba6a99b8de47c34c1", "commitAfterChange": "fac8d627952a2fc4c000be7083041ef017b0bc95", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public Monitor getPrimaryMonitor ()", "signatureAfterChange": " public Monitor getPrimaryMonitor ()", "diff": ["-\tMonitor monitor = new Monitor ();", "-\tRectangle rect = getBounds ();", "-\tmonitor.x = rect.x;", "-\tmonitor.y = rect.y;", "-\tmonitor.width = rect.width;", "-\tmonitor.height = rect.height;", "-\trect = getClientArea ();", "-\tmonitor.clientX = rect.x;", "-\tmonitor.clientY = rect.y;", "-\tmonitor.clientWidth = rect.width;", "-\tmonitor.clientHeight = rect.height;", "-\treturn monitor;", "+\t/*", "+\t* Note.  Photon does not define a primary monitor.", "+\t* The workaround is to arbitrarily return the first", "+\t* monitor whose coordinates are (0, 0), or the first", "+\t* monitor returned by getMonitors().", "+\t*/", "+\tMonitor [] monitors = getMonitors ();", "+\tif (monitors.length == 1) return monitors [0];", "+\tfor (int i = 0; i < monitors.length; i++) {", "+\t\tMonitor monitor = monitors [i];", "+\t\tif (monitor.x == 0 && monitor.y == 0) return monitor;", "+\t}", "+\treturn monitors [0];"]}], "num": 4447}