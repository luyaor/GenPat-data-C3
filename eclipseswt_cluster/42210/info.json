{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be96d43a359bceb39b2645d34d234b40", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ea2394723494f55867922b1b166790f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "8e2ffd2142a675799c51f899b7054afea35a9579", "commitAfterChange": "0d71afce2a0eb0fb54fdaaad4248273e806482c5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["-\tif (getResizable()) {", "-\t\t// Feature in GTK: AUTOSIZE and RESIZABLE are mutually exclusive", "-\t\tOS.gtk_tree_view_column_set_sizing(handle, OS.GTK_TREE_VIEW_COLUMN_GROW_ONLY);", "-\t} else {", "-\t\tOS.gtk_tree_view_column_set_sizing(handle, OS.GTK_TREE_VIEW_COLUMN_AUTOSIZE);", "+\tint parentHandle = parent.handle;", "+\tint list = OS.gtk_tree_view_column_get_cell_renderers (handle);", "+\tif (list == 0) return;", "+\tint width = 0;", "+\tint count = OS.g_list_length (list);", "+\tint [] w = new int[1], h = new int[1];", "+\tint spacing = OS.gtk_tree_view_column_get_spacing (handle);", "+\tfor (int i = 0; i < count; i++) {", "+\t\tint renderer = OS.g_list_nth_data (list, i);", "+\t\tOS.gtk_cell_renderer_get_size (renderer, parentHandle, null, null, null, w, h);", "+\t\twidth += w [0] + spacing + 1;", "+\tOS.g_list_free (list);", "+\tOS.gtk_tree_view_column_set_fixed_width (handle, width);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33ec80f1aaaacf324eb6cf26c73a41c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3b0ac113d2b0be33221673aa6f3ada5f0d0911c0", "commitAfterChange": "48737b3c2cf609849ea87ebdfeb38e228af5b142", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public TreeItem[] getSelection ()", "signatureAfterChange": " public TreeItem[] getSelection ()", "diff": ["-\tif ((style & SWT.MULTI) != 0) {", "+\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 2, 0)) {", "-\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t} else {", "-\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "-\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "-\t\tboolean hasSelection = OS.gtk_tree_selection_get_selected (selection, null, iter);", "-\t\tTreeItem [] result;", "-\t\tif (hasSelection) {", "-\t\t\tint [] index = new int [1];", "-\t\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "-\t\t\tresult = new TreeItem []{items [index [0]]};", "-\t\t} else {", "-\t\t\tresult = new TreeItem [0];", "+\t}", "+\tint /*long*/ list = OS.gtk_tree_selection_get_selected_rows(selection, null);", "+\tif (list != 0) {", "+\t\tint count = OS.g_list_length (list);", "+\t\tint [] treeSelection = new int [count];", "+\t\tint length = 0;", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tint /*long*/ data = OS.g_list_nth_data (list, i);", "+\t\t\tint /*long*/ iter = OS.g_malloc (OS.GtkTreeIter_sizeof ());", "+\t\t\tif (OS.gtk_tree_model_get_iter (modelHandle, iter, data)) {", "+\t\t\t\tint [] index = new int [1];", "+\t\t\t\tOS.gtk_tree_model_get (modelHandle, iter, ID_COLUMN, index, -1);", "+\t\t\t\ttreeSelection [length] = index [0];", "+\t\t\t\tlength++;", "+\t\t\t}", "+\t\t\tOS.g_free (iter);", "-\t\tOS.g_free (iter);", "+\t\tOS.g_list_free (list);", "+\t\tTreeItem [] result = new TreeItem [length];", "+\t\tfor (int i=0; i<result.length; i++) result [i] = items [treeSelection [i]];", "+\treturn new TreeItem [0];"]}], "num": 42210}