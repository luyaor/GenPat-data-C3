{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e76aab5bbd91ea0fccccf1f30cce5c68", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774c579c97944ccf8de1e9c4a109a3f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int [] createGdipImage()", "signatureAfterChange": "  long [] createGdipImage()", "diff": ["-int /*long*/ [] createGdipImage() {", "+long /*int*/ [] createGdipImage() {", "-\t\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "-\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC(hDC);", "-\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, handle);", "-\t\t\t\tint /*long*/ memHdc = OS.CreateCompatibleDC(hDC);", "-\t\t\t\tint /*long*/ memDib = createDIB(imgWidth, imgHeight, 32);", "+\t\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "+\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(hDC);", "+\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, handle);", "+\t\t\t\tlong /*int*/ memHdc = OS.CreateCompatibleDC(hDC);", "+\t\t\t\tlong /*int*/ memDib = createDIB(imgWidth, imgHeight, 32);", "-\t\t\t\tint /*long*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);\t", "+\t\t\t\tlong /*int*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);\t", "-\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\t\t\tint /*long*/ pixels = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, srcData.length);", "+\t\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\t\t\t\tlong /*int*/ pixels = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, srcData.length);", "-\t\t\t\treturn new int /*long*/ []{Gdip.Bitmap_new(imgWidth, imgHeight, dibBM.bmWidthBytes, Gdip.PixelFormat32bppARGB, pixels), pixels};", "+\t\t\t\treturn new long /*int*/ []{Gdip.Bitmap_new(imgWidth, imgHeight, dibBM.bmWidthBytes, Gdip.PixelFormat32bppARGB, pixels), pixels};", "-\t\t\treturn new int /*long*/ []{Gdip.Bitmap_new(handle, 0), 0};", "+\t\t\treturn new long /*int*/ []{Gdip.Bitmap_new(handle, 0), 0};", "-\t\t\tint /*long*/ hBitmap = iconInfo.hbmColor;", "+\t\t\tlong /*int*/ hBitmap = iconInfo.hbmColor;", "-\t\t\tint /*long*/ img = 0, pixels = 0;", "+\t\t\tlong /*int*/ img = 0, pixels = 0;", "-\t\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "-\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC(hDC);", "-\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "-\t\t\t\tint /*long*/ memHdc = OS.CreateCompatibleDC(hDC);", "-\t\t\t\tint /*long*/ memDib = createDIB(imgWidth, imgHeight, 32);", "+\t\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "+\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(hDC);", "+\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "+\t\t\t\tlong /*int*/ memHdc = OS.CreateCompatibleDC(hDC);", "+\t\t\t\tlong /*int*/ memDib = createDIB(imgWidth, imgHeight, 32);", "-\t\t\t\tint /*long*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);\t", "+\t\t\t\tlong /*int*/ oldMemBitmap = OS.SelectObject(memHdc, memDib);\t", "-\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\t\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap();", "-\t\t\treturn new int /*long*/ []{img, pixels};", "+\t\t\treturn new long /*int*/ []{img, pixels};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7ecc968a15068424a01e0ea5642028", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  int PromptUsernameAndPassword (int aParent, int aDialogTitle, int aText, int aUsername, int aPassword, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int PromptUsernameAndPassword (long aParent, long aDialogTitle, long aText, long aUsername, long aPassword, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int PromptUsernameAndPassword (int /*long*/ aParent, int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aUsername, int /*long*/ aPassword, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int PromptUsernameAndPassword (long /*int*/ aParent, long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aUsername, long /*int*/ aPassword, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\t\tint /*long*/[] userAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] userAddr = new long /*int*/[1];", "-\t\tint /*long*/[] passAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] passAddr = new long /*int*/[1];", "-\t\tint /*long*/[] userAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] userAddr = new long /*int*/[1];", "-\t\tint /*long*/[] passAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] passAddr = new long /*int*/[1];", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];", "-\t\tint /*long*/ ptr = C.malloc (size);", "+\t\tlong /*int*/ ptr = C.malloc (size);", "-\t\tXPCOM.memmove (aUsername, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (aUsername, new long /*int*/[] {ptr}, C.PTR_SIZEOF);", "-\t\tXPCOM.memmove (aPassword, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (aPassword, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad63f95f51cc4c11744725325ebb2636", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Prompter.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int PromptUsernameAndPassword (int aDialogTitle, int aText, int aUsername, int aPassword, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int PromptUsernameAndPassword (long aDialogTitle, long aText, long aUsername, long aPassword, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int PromptUsernameAndPassword (int /*long*/ aDialogTitle, int /*long*/ aText, int /*long*/ aUsername, int /*long*/ aPassword, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int PromptUsernameAndPassword (long /*int*/ aDialogTitle, long /*int*/ aText, long /*int*/ aUsername, long /*int*/ aPassword, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {", "-\t\tint /*long*/[] userAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] userAddr = new long /*int*/[1];", "-\t\tint /*long*/[] passAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] passAddr = new long /*int*/[1];", "-\t\tint /*long*/[] userAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] userAddr = new long /*int*/[1];", "-\t\tint /*long*/[] passAddr = new int /*long*/[1];", "+\t\tlong /*int*/[] passAddr = new long /*int*/[1];", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];", "-\t\tint /*long*/ ptr = C.malloc (size);", "+\t\tlong /*int*/ ptr = C.malloc (size);", "-\t\tXPCOM.memmove (aUsername, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (aUsername, new long /*int*/[] {ptr}, C.PTR_SIZEOF);", "-\t\tXPCOM.memmove (aPassword, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "+\t\tXPCOM.memmove (aPassword, new long /*int*/[] {ptr}, C.PTR_SIZEOF);"]}], "num": 27415}