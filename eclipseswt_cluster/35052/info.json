{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e03e95295026f72cb316a4d6d8e91804", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73ef18074fcaf1f090d886fef1cd1f50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 87, "signatureBeforeChange": "  boolean setScrollWidth (TableItem item, boolean callMeasureItem)", "signatureAfterChange": "  boolean setScrollWidth (TableItem item)", "diff": ["-boolean setScrollWidth (TableItem item, boolean callMeasureItem) {", "-\treturn setScrollWidth (new TableItem[] {item}, callMeasureItem, false);", "-}", "+boolean setScrollWidth (TableItem item) {", "+\tif (drawCount != 0) return false;", "+\tif (currentItem != null) {", "+\t\tif (currentItem != item) fixScrollWidth = true;", "+\t\treturn false;", "+\t}", "+\tint newWidth = item.calculateWidth (0, gc);", "+\tgc.dispose ();", "+\tint oldWidth = (int)firstColumn.width ();", "+\tif (oldWidth < newWidth) {", "+\t\tfirstColumn.setWidth (newWidth);", "+\t\treturn true;", "+\t}", "+\treturn false;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42da9d307bc8d4cdcfea05b38b113718", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  boolean setScrollWidth (TreeItem item, boolean recurse, boolean callMeasureItem)", "signatureAfterChange": "  boolean setScrollWidth (boolean set, TreeItem[] items, boolean recurse)", "diff": ["-boolean setScrollWidth (TreeItem item, boolean recurse, boolean callMeasureItem) {", "-\treturn setScrollWidth (new TreeItem[] {item}, recurse, callMeasureItem, false);", "-}", "+boolean setScrollWidth (boolean set, TreeItem[] items, boolean recurse) {", "+\tif (ignoreRedraw || drawCount != 0) return false;", "+\tif (columnCount != 0 || items == null) return false;", "+\tint newWidth = calculateWidth (items, 0, gc, recurse);", "+\tif (!set) {", "+\t\tint oldWidth = (int)firstColumn.width ();", "+\t\tif (oldWidth >= newWidth) return false;", "+\tfirstColumn.setWidth (newWidth);"]}], "num": 35052}