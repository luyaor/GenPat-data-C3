{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d390052fcf89645e1899574fea0fa4c2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "363790e118ed02c36070ec9cc9c0075c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "97620fe3667502da9f174b22a0db4534a8d8f70b", "commitAfterChange": "a3c8e8904451b6db108629003e63438cb42170e1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void init(ImageData image)", "signatureAfterChange": "  void init(ImageData image)", "diff": ["-\t\tint stride = Cairo.cairo_format_stride_for_width(Cairo.CAIRO_FORMAT_ARGB32, width);", "-\t\tint /*long*/ data = surfaceData = OS.g_malloc(stride * height);", "-\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tboolean hasAlpha = image.transparentPixel != -1 || image.alpha != -1 || image.maskData != null || image.alphaData != null;", "+\t\tint format = hasAlpha ? Cairo.CAIRO_FORMAT_ARGB32 : Cairo.CAIRO_FORMAT_RGB24;", "+\t\tsurface = Cairo.cairo_image_surface_create(format, width, height);", "+\t\tint stride = Cairo.cairo_image_surface_get_stride(surface);", "+\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tfor (int y = 0, offset = 0; y < height; y++) {", "-\t\t\t\t\tfor (int x=0; x<width; x++, offset += 4) {", "-\t\t\t\t\t\tbuffer[offset + oa] = (byte)0xFF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a14959f7f69afb65831a58b3de07bff7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "97620fe3667502da9f174b22a0db4534a8d8f70b", "commitAfterChange": "a3c8e8904451b6db108629003e63438cb42170e1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createFromPixbuf(int type, int pixbuf)", "signatureAfterChange": "  void createFromPixbuf(int type, int pixbuf)", "diff": ["-\t\tint cairoStride = Cairo.cairo_format_stride_for_width(format, width);", "-\t\tint /*long*/ data = surfaceData = OS.g_malloc(cairoStride * height);", "-\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, format, width, height, cairoStride);", "+\t\tsurface = Cairo.cairo_image_surface_create(format, width, height);", "-\t\tbyte[] line = new byte[stride];", "+\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "+\t\tint cairoStride = Cairo.cairo_image_surface_get_stride(surface);", "+\t\tbyte[] line = new byte[stride];", "-\t\t\tbyte[] cairoLine = new byte[cairoStride];", "-\t\t\t\t\tcairoLine[offset + oa] = (byte)a;", "-\t\t\t\t\tcairoLine[offset + or] = (byte)r;", "-\t\t\t\t\tcairoLine[offset + og] = (byte)g;", "-\t\t\t\t\tcairoLine[offset + ob] = (byte)b;", "+\t\t\t\t\tline[offset + oa] = (byte)a;", "+\t\t\t\t\tline[offset + or] = (byte)r;", "+\t\t\t\t\tline[offset + og] = (byte)g;", "+\t\t\t\t\tline[offset + ob] = (byte)b;", "-\t\t\t\tOS.memmove(data + (y * cairoStride), cairoLine, cairoStride);", "+\t\t\t\tOS.memmove(data + (y * stride), line, stride);", "-\t\t\t\t\tcairoLine[cairoOffset + oa] = (byte)0xFF;"]}], "num": 10365}