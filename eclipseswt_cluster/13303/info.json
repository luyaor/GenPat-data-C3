{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1deffb4809009e11c600089118b0eec3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc893cc783f20b39d295826c496eb7dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "252214e1ac298f0a0afcabaddbea343521d62472", "commitAfterChange": "2b385ebc26547316a8160b0ea7e137048ba66f40", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos)", "signatureAfterChange": " \tpublic static int newControl(int parentControlHandle, int pos, short init, short min, short max, short procID)", "diff": ["-\t */", "-\tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos) {", "-\t\tint n= countSubControls(parentControlHandle);", "-\t\t", "-\t\t// add at end", "-\t\tif (OSEmbedControl(controlHandle, parentControlHandle) != OS.kNoErr)", "-\t\t\tSystem.out.println(\"MacUtil.embedControl: could not embed control in parent\");", "-\t\t\t", "-\t\tif (pos < 0 || pos > n)", "-\t\t\tpos= n;", "-\t\t", "-\t\tint[] outControl= new int[1];", "-\t\tfor (int i= 0; i < pos; i++) {", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(n-pos+1), outControl) == 0)", "-\t\t\t\tif (OSEmbedControl(outControl[0], parentControlHandle) != OS.kNoErr)", "-\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: couldn't move control to end\");", "-\t\t}", "-\t\t", "-\t\t// verify correct position", "-\t\tn++;", "-\t\tfor (int i= 0; i < n; i++) {", "-\t\t\tint index= (n-i);", "-\t\t\tint[] outHandle= new int[1];", "-\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)index, outHandle) == 0) {\t// indices are 1 based", "-\t\t\t\tif (outHandle[0] == controlHandle) {", "-\t\t\t\t\tif (i != pos)", "-\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: creation at position nyi (is: \"+i+\" should: \"+ pos+\")\");", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tSystem.out.println(\"MacUtil.embedControl: new child not found\");", "-\t}", "+\t\tint controlHandle;", "+\t\tif (HIVIEW) {", "+\t\t\tcontrolHandle= OS.NewControl(0, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t\tOS.HIViewSetNeedsDisplay(controlHandle, true);", "+\t\t} else {", "+\t\t\tint windowHandle= OS.GetControlOwner(parentControlHandle);", "+\t\t\tcontrolHandle= OS.NewControl(windowHandle, false, init, min, max, procID);", "+\t\t\tinsertControl(controlHandle, parentControlHandle, pos);", "+\t\t\tinitLocation(controlHandle);", "+\t\t\tOS.HIViewSetVisible(controlHandle, true);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f6da0a216a9ce914e4b629ae1baff0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "613f3b062dee50803159db7da63b3b9bae0d658b", "commitAfterChange": "0fc698334e61438df4603fa22222287c7edecfb2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static void embedControl(int controlHandle, int parentControlHandle)", "signatureAfterChange": " \tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos)", "diff": ["+\t */", "+\tpublic static void embedControl(int controlHandle, int parentControlHandle, int pos) {", "+\t\t", "+\t\t// add at end", "+\t\tif (OS.EmbedControl(controlHandle, parentControlHandle) != OS.kNoErr)", "+\t\t\tSystem.out.println(\"MacUtil.embedControl: could not embed control in parent\");", "+\t\t\t", "+\t\tint n= countSubControls(parentControlHandle)-1;", "+\t\t", "+\t\tif (pos < 0 || pos > n)", "+\t\t\tpos= n;", "+\t\t", "+\t\tint[] outControl= new int[1];", "+\t\tif (REVERSE) {", "+\t\t\tfor (int i= 0; i < pos; i++) {", "+\t\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(n-pos+1), outControl) == 0)", "+\t\t\t\t\tif (OS.EmbedControl(outControl[0], parentControlHandle) != OS.kNoErr)", "+\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: couldn't move control to end\");", "+\t\t\t}", "+\t\t\t", "+\t\t} else {", "+\t\t\tint count= n-pos;", "+\t\t\tfor (int i= 0; i < count; i++) {", "+\t\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(pos+1), outControl) == 0)", "+\t\t\t\t\tif (OS.EmbedControl(outControl[0], parentControlHandle) != OS.kNoErr)", "+\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: couldn't move control to end\");", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t// verify correct position", "+\t\tn++;", "+\t\tfor (int i= 0; i < n; i++) {", "+\t\t\tint index= REVERSE ? (n-i) : (i+1);", "+\t\t\tint[] outHandle= new int[1];", "+\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)index, outHandle) == 0) {\t// indices are 1 based", "+\t\t\t\tif (outHandle[0] == controlHandle) {", "+\t\t\t\t\tif (i != pos)", "+\t\t\t\t\t\tSystem.out.println(\"MacUtil.embedControl: creation at position nyi (is: \"+i+\" should: \"+ pos+\")\");", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tSystem.out.println(\"MacUtil.embedControl: new child not found\");", "-\t\tif (REVERSE) {", "-\t\t\tint count= countSubControls(parentControlHandle);", "-\t\t\tOS.EmbedControl(controlHandle, parentControlHandle);", "-\t\t\tint[] outControl= new int[1];", "-\t\t\tfor (int i= 0; i < count; i++) {", "-\t\t\t\tif (OS.GetIndexedSubControl(parentControlHandle, (short)(1), outControl) == 0)", "-\t\t\t\t\tOS.EmbedControl(outControl[0], parentControlHandle);", "-\t\t\t\telse", "-\t\t\t\t\tthrow new SWTError();", "-\t\t\t}", "-\t\t} else {", "-\t\t\tOS.EmbedControl(controlHandle, parentControlHandle);", "-\t\t}"]}], "num": 13303}