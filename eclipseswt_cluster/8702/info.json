{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfb132b470d32b436a6771beac367a93", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cceff4f762d97da7ece106023b094b3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "982cd53e0d78db18706bf0846ac669e298de32e2", "commitAfterChange": "165673b92d78dcd017af081458f5cae6d2eb17c6", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 46, "signatureBeforeChange": "  void insertSelectedItem (TreeItem item, int index)", "signatureAfterChange": "  TreeItem[] getSelectedItems(int itemsControl, TreeItem [] selectedItems, int [] nextIndex)", "diff": ["+", "+TreeItem[] getSelectedItems(int itemsControl, TreeItem [] selectedItems, int [] nextIndex) {", "+\tint items = OS.ItemsControl_Items (itemsControl);", "+\tint count = OS.ItemCollection_Count (items);", "+\tfor (int i = 0; i < count; i++) {", "+\t\tint item = OS.ItemCollection_GetItemAt (items, i);", "+\t\tboolean selected = OS.TreeViewItem_IsSelected (item);", "+\t\tif (selected) {", "+\t\t\tif (nextIndex [0] == selectedItems.length) {", "+\t\t\t\tTreeItem [] newArray = new TreeItem [selectedItems.length + 4];", "+\t\t\t\tSystem.arraycopy (selectedItems, 0, newArray, 0, selectedItems.length);", "+\t\t\t\tselectedItems = newArray;", "+\t\t\t}", "+\t\t\tselectedItems [nextIndex[0]++] = getItem (item, true);", "+\t\t}", "+\t\tif (OS.TreeViewItem_IsExpanded (item)) {", "+\t\t\tselectedItems = getSelectedItems (item, selectedItems, nextIndex);", "+\t\t}", "+\t\tOS.GCHandle_Free (item);", "+\t}", "+\tOS.GCHandle_Free (items);", "+\tif (selectedItems.length != nextIndex [0]) {", "+\t\tTreeItem[] newArray = new TreeItem [nextIndex[0]];", "+\t\tSystem.arraycopy (selectedItems, 0, newArray, 0, nextIndex [0]);", "+\t\tselectedItems = newArray;", "+\t}", "+\treturn selectedItems;", "-void insertSelectedItem (TreeItem item, int index) {", "-\tif (selectedItemCount == selectedItems.length) {", "-\t\tTreeItem [] newItems = new TreeItem [selectedItemCount + 4];", "-\t\tSystem.arraycopy (selectedItems, 0, newItems, 0, selectedItemCount);", "-\t\tselectedItems = newItems;", "-\t}", "-\tSystem.arraycopy (selectedItems, index, selectedItems, index+1, selectedItemCount - index);", "-\tselectedItems [index] = item;", "-\tselectedItemCount++;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab24795061f049c5be32722069cf07fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "25e0a88282a8f52572829023c99494b77782afb9", "commitAfterChange": "4492e7490e450a65a8ceed26e7c2cb00d8b99b49", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static String [] getExtensions ()", "signatureAfterChange": " public static String [] getExtensions ()", "diff": ["-\t//TODO", "-\treturn new String[0];", "+\tString [] extensions = new String [1024];", "+\tint classesRoot = OS.Registry_ClassesRoot ();", "+\tint subKeys = OS.RegistryKey_GetSubKeyNames (classesRoot);", "+\tOS.GCHandle_Free (classesRoot);", "+\tint count = 0, length = OS.ICollection_Count (subKeys);", "+\tfor (int i=0; i<length; i++) {", "+\t\tint key = OS.IList_default (subKeys, i);", "+\t\tString extension = createJavaString (key);", "+\t\tOS.GCHandle_Free (key);", "+\t\tif (extension.length () > 0 && extension.charAt (0) == '.') {", "+\t\t\tif (count == extensions.length) {", "+\t\t\t\tString [] newExtensions = new String [extensions.length + 1024];", "+\t\t\t\tSystem.arraycopy (extensions, 0, newExtensions, 0, extensions.length);", "+\t\t\t\textensions = newExtensions;", "+\t\t\t}", "+\t\t\textensions [count++] = extension;", "+\t\t}", "+", "+\t}", "+\tOS.GCHandle_Free (subKeys);", "+\tif (count != extensions.length) {", "+\t\tString [] newExtension = new String [count];", "+\t\tSystem.arraycopy (extensions, 0, newExtension, 0, count);", "+\t\textensions = newExtension;", "+\t}", "+\treturn extensions;"]}], "num": 8702}