{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce0ccbf5cb1a6dbc511d5295e934e218", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e5cdfac09d6f4cd687666d58c1b6a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "4ccefad4300da9c7b5500d34a5d690df7d8b9711", "commitAfterChange": "cdd8fbf38e0494ba7aef09b60ed9d852030c52e9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test_getColumnCount()", "signatureAfterChange": "  public void test_getColumnCount()", "diff": ["-\twarnUnimpl(\"Test test_getColumnCount not written\");", "+\tassertEquals(0, table.getColumnCount());", "+\tTableColumn column0 = new TableColumn(table, SWT.NONE);", "+\tassertEquals(1, table.getColumnCount());", "+\tTableColumn column1 = new TableColumn(table, SWT.NONE);", "+\tassertEquals(2, table.getColumnCount());", "+\tTableColumn column2 = new TableColumn(table, SWT.NONE);", "+\tassertEquals(3, table.getColumnCount());", "+\tcolumn0.dispose();", "+\tassertEquals(2, table.getColumnCount());", "+\tcolumn1.dispose();", "+\tassertEquals(1, table.getColumnCount());", "+\tcolumn2.dispose();", "+\tassertEquals(0, table.getColumnCount());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10579a5d53b309973f0754e42eeef3f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "4ccefad4300da9c7b5500d34a5d690df7d8b9711", "commitAfterChange": "cdd8fbf38e0494ba7aef09b60ed9d852030c52e9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test_getColumnI()", "signatureAfterChange": "  public void test_getColumnI()", "diff": ["-\twarnUnimpl(\"Test test_getColumnI not written\");", "+\ttry {", "+\t\ttable.getColumn(0);", "+\t\tfail(\"No exception thrown for index out of range\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\tTableColumn column0 = new TableColumn(table, SWT.LEFT);", "+\ttry {", "+\t\ttable.getColumn(1);", "+\t\tfail(\"No exception thrown for index out of range\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\tassertEquals(column0, table.getColumn(0));", "+\tTableColumn column1 = new TableColumn(table, SWT.LEFT);", "+\tassertEquals(column1, table.getColumn(1));", "+\tcolumn1.dispose();", "+\ttry {", "+\t\ttable.getColumn(1);", "+\t\tfail(\"No exception thrown for index out of range\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\tcolumn0.dispose();", "+\ttry {", "+\t\ttable.getColumn(0);", "+\t\tfail(\"No exception thrown for index out of range\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}"]}], "num": 50291}