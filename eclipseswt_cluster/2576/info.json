{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9046804f5d55bc546977cde00fa48c35", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a2f889c0ecafb6b434651e6b15ed379", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 366, "methodNumberAfterChange": 367, "signatureBeforeChange": " \tint get_selection(int selectionIndex, int pStartOffset, int pEndOffset)", "signatureAfterChange": " \tint get_selection(int selectionIndex, int pStartOffset, int pEndOffset)", "diff": ["+\t\tevent.start = -1;", "+\t\tevent.end = -1;", "+\t\tif (event.start == -1 && selectionIndex == 0) {", "+\t\t\tevent.childID = ACC.CHILDID_SELF;", "+\t\t\tevent.offset = -1;", "+\t\t\tevent.length = 0;", "+\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "+\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "+\t\t\t\tlistener.getSelectionRange (event);", "+\t\t\t}", "+\t\t\tevent.start = event.offset;", "+\t\t\tevent.end = event.offset + event.length;", "+\t\t}", "+\t\tif (DEBUG) print(\"IAccessibleText::get_selection(\" + selectionIndex + \") returning \" + event.start + \", \" + event.end);", "+\t\t/*", "+\t\t * Note that the current IA2 spec says to return 0,0 when there's nothing to return,", "+\t\t * but since 0 is a valid return value, the spec is going to be updated to return -1,-1.", "+\t\t */", "+\t\tif (event.start == -1) return COM.S_FALSE;", "-\t\t// TODO: @retval S_FALSE if there is nothing to return, [out] values are 0s@retval E_INVALIDARG if bad [in] passed, [out] values are 0s"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43994f734070157c046bfa5abb0d4072", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "2cc7df409db408f89fc6b7722860b2b60e597d15", "commitAfterChange": "9bf79aea63cb1a27afc9b9e1a2eba4b0f8c6e3b1", "methodNumberBeforeChange": 298, "methodNumberAfterChange": 298, "signatureBeforeChange": " \tint get_indexInParent(int pIndexInParent)", "signatureAfterChange": " \tint get_indexInParent(int pIndexInParent)", "diff": ["-\t\t// TODO: look up index in *parent's* AccessibleControl.getChildren", "-\t\tevent.childID = ACC.CHILDID_SELF;", "+\t\tevent.childID = ACC.CHILDID_CHILD_INDEX;", "+\t\tevent.detail = -1;", "-\t\t\tlistener.getChildren(event);", "+\t\t\tlistener.getChild(event);", "-//TODO\t\tObject [] siblings = event.children;", "-\t\tint indexInParent = 0;", "+\t\tint indexInParent = event.detail;", "+\t\tif (indexInParent == -1) {", "+\t\t\t/* The application did not implement CHILDID_CHILD_INDEX,", "+\t\t\t * so determine the index by looping through the parent's", "+\t\t\t * children looking for this Accessible. This may be slow,", "+\t\t\t * so applications are strongly encouraged to implement", "+\t\t\t * getChild for CHILDID_CHILD_INDEX.", "+\t\t\t */", "+\t\t\t// TODO", "+\t\t}\t", "+", "-\t\treturn COM.S_OK;", "-\t\t// TODO: @retval S_FALSE if no parent, [out] value is -1", "+\t\treturn indexInParent == -1 ? COM.S_FALSE : COM.S_OK;"]}], "num": 2576}