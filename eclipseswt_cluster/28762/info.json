{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d11dc2a65062e3fbf8e0f5a71bc1c2a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43b232f8b6f545f7eb59ed77d983cfc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "25e0b9cefcf6aad913e775e22fb19b1e3de2a216", "commitAfterChange": "abdb7df6c5ef7f31dd770f626e22ad0d039e1629", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\t\tint length = OS.GetHandleSize (oDataHandle [0]);", "+\t\t\t\tint length = OS.GetHandleSize (oDataHandle [0]), str = 0;", "-\t\t\t\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, ptr [0], length / 2);", "-\t\t\t\t\tif (str != 0) {", "-\t\t\t\t\t\tfloat [] w = new float [1], h = new float [1];", "-\t\t\t\t\t\tHIThemeTextInfo info = new HIThemeTextInfo ();", "-\t\t\t\t\t\tinfo.state = OS.kThemeStateActive;", "-\t\t\t\t\t\tif (font != null) {", "-\t\t\t\t\t\t\tOS.TextFont (font.id);", "-\t\t\t\t\t\t\tOS.TextFace (font.style);", "-\t\t\t\t\t\t\tOS.TextSize (font.size);", "-\t\t\t\t\t\t\tinfo.fontID = (short) OS.kThemeCurrentPortFont; ", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tinfo.fontID = (short) defaultThemeFont ();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tOS.HIThemeGetTextDimensions (str, wHint == SWT.DEFAULT ? 0 : wHint, info, w, h, null);", "-\t\t\t\t\t\tOS.CFRelease (str);", "-\t\t\t\t\t\twidth = (int) w [0];", "-\t\t\t\t\t\theight = (int) h [0];", "-\t\t\t\t\t}", "+\t\t\t\t\tstr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, ptr [0], length / 2);\t\t\t\t\t", "-\t\t\t\t} else {", "-\t\t\t\t\tFont font = getFont ();", "-\t\t\t\t\tFontInfo info = new FontInfo ();", "-\t\t\t\t\tOS.FetchFontInfo (font.id, font.size, font.style, info);", "-\t\t\t\t\tint fontHeight = info.ascent + info.descent + info.leading;", "-\t\t\t\t\theight = fontHeight;", "+\t\t\t\tPoint size = textExtent (str, wHint == SWT.DEFAULT ? 0 : wHint);", "+\t\t\t\tif (str != 0) OS.CFRelease(str);", "+\t\t\t\twidth = size.x;", "+\t\t\t\theight = size.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ede958b5d9a5d346b64e4d0236da7dd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "a95be7c50f695a73a58d9ded8bbfb5d9f9919f09", "commitAfterChange": "b1b0fd9b80ca15010164104d137cbaa93bd3ed64", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tRectangle bounds = image.getBounds();", "+\t\tRectangle bounds = image.getBounds ();", "-\t\tOS.CopyControlTitleAsCFString(handle, ptr);", "+\t\tOS.CopyControlTitleAsCFString (handle, ptr);", "+\t\t\torg.eclipse.swt.internal.carbon.Point ioBounds = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\torg.eclipse.swt.internal.carbon.Point ioBounds = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\tshort [] baseLine = new short [1];", "-\t\t\t\tOS.GetThemeTextDimensions(ptr [0], (short)OS.kThemePushButtonFont, OS.kThemeStateActive, false, ioBounds, baseLine);", "-\t\t\t\twidth = ioBounds.h;", "-\t\t\t\theight = ioBounds.v;", "+\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short)OS.kThemePushButtonFont, OS.kThemeStateActive, false, ioBounds, null);", "-\t\t\t\t// NEEDS WORK - alternatively we could use GetThemeTextDimensions with OS.kThemeCurrentPortFont", "-\t\t\t\tint length = OS.CFStringGetLength (ptr [0]);", "-\t\t\t\tchar [] buffer = new char [length];", "-\t\t\t\tCFRange range = new CFRange ();", "-\t\t\t\trange.length = length;", "-\t\t\t\tOS.CFStringGetCharacters (ptr [0], range, buffer);", "-\t\t\t\tString string = new String (buffer);", "-\t\t\t\tGC gc = new GC (this);", "-\t\t\t\tPoint extent = gc.stringExtent (string);", "-\t\t\t\tgc.dispose ();", "-\t\t\t\twidth = extent.x;", "-\t\t\t\theight = extent.y;", "+\t\t\t\tint [] currentPort = new int [1];", "+\t\t\t\tOS.GetPort (currentPort);", "+\t\t\t\tOS.SetPortWindowPort (OS.GetControlOwner (handle));", "+\t\t\t\tOS.TextFont (font.id);", "+\t\t\t\tOS.TextFace (font.style);", "+\t\t\t\tOS.TextSize (font.size);", "+\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) OS.kThemeCurrentPortFont, OS.kThemeStateActive, false, ioBounds, null);", "+\t\t\t\tOS.SetPort (currentPort [0]);", "+\t\t\twidth = ioBounds.h;", "+\t\t\theight = ioBounds.v;", "-\t\theight = Math.max(outMetric [0], height);", "+\t\theight = Math.max (outMetric [0], height);"]}], "num": 28762}