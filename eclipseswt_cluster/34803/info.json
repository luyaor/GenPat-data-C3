{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db54861ef82adb52e3f082e2d3701290", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6cc56caee9f374d0b02b400ef3e20c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "57e16b7b99eba5fe2e5104d125c685fb86330106", "commitAfterChange": "4100ba4ad00fb39125bdfc1a813e812b72175b67", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "\r public void setFont (Font font)", "signatureAfterChange": "\r public void setFont (Font font)", "diff": ["-\tint fontList = 0;\r", "-\tif (font != null) {\r", "-\t\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\tfontList = font.handle;\r", "-\t}\r", "-\tif (fontList == 0) fontList = defaultFont ();\r", "-\tsetFontList (fontList);\r", "-}\r", "+\tif (font == null) font = defaultFont ();\r", "+\tif (font.isDisposed()) SWT.error(SWT.ERROR_INVALID_ARGUMENT);\r", "+\tthis.font = font;\r", "+\tint [] argList2 = {OS.XmNfontList, font.handle};\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5738713c5fb6b599634e1b51dcd7cd14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "82e9305c2ebd8520a3d4edf395493a4b1b596249", "commitAfterChange": "43fd28dbc97d1ae618c273857bd8fda675c0a65d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void setMenuBar (Menu menu)", "signatureAfterChange": " public void setMenuBar (Menu menu)", "diff": ["-\t\t\r", "+\t\r", "+\t/* Save the old client area */\r", "+\tint [] argList1 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "+\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "+\t\r", "-\tint clientHandle = (formHandle != 0) ? formHandle : handle;\r", "+\tint clientHandle = formHandle != 0 ? formHandle : handle;\r", "+\t\r", "+\t/*\r", "+\t* Compare the old client area with the new client area.\r", "+\t* If the client area has changed, send a resize event\r", "+\t* and layout.\r", "+\t*/\r", "+\tint [] argList2 = {OS.XmNwidth, 0, OS.XmNheight, 0};\r", "+\tOS.XtGetValues (handle, argList2, argList2.length / 2);\r", "+\tif (argList1 [1] != argList2 [1] || argList1 [3] != argList2 [3]) {\r", "+\t\tsendEvent (SWT.Resize);\r", "+\t\tif (layout != null) layout (false);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd6a4c80e40cf73b7b15f329f77a27d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r \r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\r", "+\t\tint [] args = {\r", "+\t\t\tOS.Pt_ARG_MARGIN_WIDTH, 0, 0,\t// 1\r", "+\t\t\tOS.Pt_ARG_MARGIN_HEIGHT, 0, 0,\t// 4\r", "+\t\t\tOS.Pt_ARG_MARGIN_LEFT, 0, 0,\t// 7\r", "+\t\t\tOS.Pt_ARG_MARGIN_RIGHT, 0, 0,\t// 10\r", "+\t\t\tOS.Pt_ARG_MARGIN_TOP, 0, 0,\t\t// 13\r", "+\t\t\tOS.Pt_ARG_MARGIN_BOTTOM, 0, 0,\t// 16\r", "+\t\t};\r", "+\t\tOS.PtGetResources (handle, args.length / 3, args);\r", "-\t\tif (wHint != SWT.DEFAULT) width = area.size_w;\r", "-\t\tif (hHint != SWT.DEFAULT) height = area.size_h;\r", "+\t\tif (wHint != SWT.DEFAULT) {\r", "+\t\t\twidth = area.size_w + (args [1] * 2) + args [7] + args [10];\r", "+\t\t}\r", "+\t\tif (hHint != SWT.DEFAULT) {\r", "+\t\t\theight = area.size_h + (args [4] * 2) + args [13] + args [16];\r", "+\t\t}\r"]}], "num": 34803}