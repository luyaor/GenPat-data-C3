{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccac05d85f04c8f4067d2cc13489be0d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb85d39c440e30c27fcd2cb32b92dd7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d8955edbe9f5c9464b222d0331748137a5a534b7", "commitAfterChange": "b533c1ac7667bcd66286ef15cde6bafc62a4cf97", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  @Override public String getText ()", "signatureAfterChange": "  @Override public String getText ()", "diff": ["-\trc = componentManager.CreateInstanceByContractID (contractID, 0, nsIDOMSerializer_1_7.NS_IDOMSERIALIZER_IID, result);", "-\tif (rc == XPCOM.NS_OK) {\t/* mozilla >= 1.7 */", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-", "-\t\tnsIDOMSerializer_1_7 serializer = new nsIDOMSerializer_1_7 (result[0]);", "-\t\tresult[0] = 0;", "-\t\tlong /*int*/ string = XPCOM.nsEmbedString_new ();", "-\t\trc = serializer.SerializeToString (document, string);", "-\t\tserializer.Release ();", "-", "-\t\tint length = XPCOM.nsEmbedString_Length (string);", "-\t\tlong /*int*/ buffer = XPCOM.nsEmbedString_get (string);", "-\t\tchars = new char[length];", "-\t\tXPCOM.memmove (chars, buffer, length * 2);", "-\t\tXPCOM.nsEmbedString_delete (string);", "-\t} else {\t/* mozilla < 1.7 */", "-\t\trc = componentManager.CreateInstanceByContractID (contractID, 0, nsIDOMSerializer.NS_IDOMSERIALIZER_IID, result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-", "+\trc = componentManager.CreateInstanceByContractID (contractID, 0, IIDStore.GetIID (nsIDOMSerializer.class), result);", "+\tif (rc == XPCOM.NS_OK && result[0] != 0) {", "-\t\trc = serializer.SerializeToString (document, result);", "+\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR1_8)) {", "+\t\t\tlong /*int*/ string = XPCOM.nsEmbedString_new ();", "+\t\t\trc = serializer.SerializeToString (document, string);", "+\t\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\t\tint length = XPCOM.nsEmbedString_Length (string);", "+\t\t\t\tlong /*int*/ buffer = XPCOM.nsEmbedString_get (string);", "+\t\t\t\tchars = new char[length];", "+\t\t\t\tXPCOM.memmove (chars, buffer, length * 2);", "+\t\t\t}", "+\t\t\tXPCOM.nsEmbedString_delete (string);", "+\t\t} else {", "+\t\t\trc = serializer.SerializeToString (document, result);", "+\t\t\tif (rc == XPCOM.NS_OK) {", "+\t\t\t\tint length = XPCOM.strlen_PRUnichar (result[0]);", "+\t\t\t\tchars = new char[length];", "+\t\t\t\tXPCOM.memmove (chars, result[0], length * 2);", "+\t\t\t}", "+\t\t}", "-", "-\t\tint length = XPCOM.strlen_PRUnichar (result[0]);", "-\t\tchars = new char[length];", "-\t\tXPCOM.memmove (chars, result[0], length * 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d712ca385a7c7e18ea6139f783643829", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "37dd5b45c717603ed638fff2257cc13bcbb77f6a", "commitAfterChange": "8eba6ff70d96340be32539fddaffb1fea3259678", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " void drawTabArea(Event event)", "signatureAfterChange": " void drawTabArea(Event event)", "diff": ["-\t\tshape = new int[BOTTOM_LEFT_CORNER.length + BOTTOM_RIGHT_CORNER.length + 4];", "+\t\tint[] left = simple ? new int[] {0,0} : BOTTOM_LEFT_CORNER;", "+\t\tint[] right = simple ? new int[] {0,0} : BOTTOM_RIGHT_CORNER;", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\tfor (int i = 0; i < BOTTOM_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+BOTTOM_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_LEFT_CORNER[2*i+1];", "+\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\tshape[index++] = x+left[2*i];", "+\t\t\tshape[index++] = y+height+left[2*i+1];", "-\t\tfor (int i = 0; i < BOTTOM_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width+BOTTOM_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_CORNER[2*i+1];", "+\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\tshape[index++] = x+width+right[2*i];", "+\t\t\tshape[index++] = y+height+right[2*i+1];", "-\t\tshape = new int[TOP_LEFT_CORNER.length + TOP_RIGHT_CORNER.length + 4];", "+\t\tint[] left = simple ? new int[] {0,0} : TOP_LEFT_CORNER;", "+\t\tint[] right = simple ? new int[] {0,0} : TOP_RIGHT_CORNER;", "+\t\tshape = new int[left.length + right.length + 4];", "-\t\tfor (int i = 0; i < TOP_LEFT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+TOP_LEFT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_LEFT_CORNER[2*i+1];", "+\t\tfor (int i = 0; i < left.length/2; i++) {", "+\t\t\tshape[index++] = x+left[2*i];", "+\t\t\tshape[index++] = y+left[2*i+1];", "-\t\tfor (int i = 0; i < TOP_RIGHT_CORNER.length/2; i++) {", "-\t\t\tshape[index++] = x+width+TOP_RIGHT_CORNER[2*i];", "-\t\t\tshape[index++] = y+TOP_RIGHT_CORNER[2*i+1];", "+\t\tfor (int i = 0; i < right.length/2; i++) {", "+\t\t\tshape[index++] = x+width+right[2*i];", "+\t\t\tshape[index++] = y+right[2*i+1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf06453eacbccd239a678ec8d41facf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "574ed7b32d53c5a45e5ee1174a71c7c508bd18b6", "commitAfterChange": "d6a90c284cb192f294fd46d0e1ac845bc7bcab7e", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 123, "signatureBeforeChange": "  void sendKeyEvent (int type, GdkEventKey keyEvent)", "signatureAfterChange": "  boolean sendKeyEvent (int type, GdkEventKey keyEvent)", "diff": ["-void sendKeyEvent (int type, GdkEventKey keyEvent) {", "-\tint time = keyEvent.time;", "+", "+boolean sendKeyEvent (int type, GdkEventKey keyEvent) {", "-\t\tevent.time = time;", "+\t\tevent.time = keyEvent.time;", "-\t\tpostEvent (type, event);", "-\t} else {", "-\t\tint string = keyEvent.string;", "-\t\tbyte [] buffer = new byte [length];", "-\t\tOS.memmove (buffer, string, length);", "-\t\tchar [] result = Converter.mbcsToWcs (null, buffer);", "-\t\tint index = 0;", "-\t\twhile (index < result.length) {", "-\t\t\tif (result [index] == 0) break;", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.time = time;", "-\t\t\tevent.character = result [index];", "-\t\t\tsetInputState (event, keyEvent.state);", "-\t\t\tpostEvent (type, event);", "-\t\t\tindex++;", "-\t\t}", "+\t\tsendEvent (type, event);", "+\t\treturn event.doit;", "+\tbyte [] buffer = new byte [length];", "+\tOS.memmove (buffer, keyEvent.string, length);", "+\tchar [] chars = Converter.mbcsToWcs (null, buffer);", "+\treturn sendIMKeyEvent (type, keyEvent, chars) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8793e3c45ce9e440264b799a83db850a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebResourceLoadDelegate.java", "commitBeforeChange": "20038377a45fbdaa1f32f13cbd4067b1a6de9d10", "commitAfterChange": "b5fdf41381852aa87a3d2b3a92643b23af27c650", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int didReceiveAuthenticationChallenge (int webView, int identifier, int challenge, int dataSource)", "signatureAfterChange": "  int didReceiveAuthenticationChallenge (int webView, int identifier, int challenge, int dataSource)", "diff": ["-\tint /*long*/ [] result = new int /*long*/ [1];", "-\tint hr = iweburlChallenge.previousFailureCount (result);", "+\tint [] count = new int [1];", "+\tint hr = iweburlChallenge.previousFailureCount (count);", "-\tif (result[0] < 3) {", "+\tint /*long*/ [] result = new int /*long*/ [1];", "+\tif (count[0] < 3) {", "-\t\t\t\tresult[0] = 0;", "-\t\t\t\tresult[0] = 0;", "-\t\t\tresult[0] = 0;", "-\t\t\thr = proposedCredential.hasPassword (result);", "-\t\t\tif (hr == COM.S_OK && result[0] != 0) {", "+\t\t\tint [] value = new int [1];", "+\t\t\thr = proposedCredential.hasPassword (value);", "+\t\t\tif (hr == COM.S_OK && value[0] != 0) {", "-\thr = space.isProxy (result);", "-\t\tresult[0] = 0;", "-\t\thr = space.port (result);", "+\t\tint [] port = new int [1];", "+\t\thr = space.port (port);", "-\t\t\thost += \":\" + result[0];", "+\t\t\thost += \":\" + port[0];", "-\thost = realm = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61eee34465b9f3d8337101ebb4af2f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "59c942d907fe880340f3cd92acf69e830cc831bb", "commitAfterChange": "56f17f635b5e99bd6a800e409a11b7ed0d58babd", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public boolean setText (String html)", "signatureAfterChange": "  public boolean setText (String html)", "diff": ["-\t * First detect if the nsIWebBrowserStream interface is available, since this interface is frozen.", "-\t * However, this may fail because this interface was only introduced as of mozilla 1.8; if this", "-\t * interface is not found then use the pre-1.8 approach of utilizing nsIDocShell instead. ", "-\t */", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = webBrowser.QueryInterface (nsIWebBrowserStream.NS_IWEBBROWSERSTREAM_IID, result);", "-\tif (rc == XPCOM.NS_OK) {", "-\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-\t\tnew nsISupports (result[0]).Release ();", "-\t\tresult[0] = 0;", "-", "+\t* If the GRE version is >= 1.8 then use frozen interface nsIWebBrowserStream.", "+\t* If this interface is not available then use the pre-1.8 approach of utilizing", "+\t* nsIDocShell instead.", "+\t*/", "+\tif (Is_1_8) {", "-\t\trc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "-\t\tresult[0] = 0;", "-", "-\t\trc = XPCOM.NS_GetServiceManager (result);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc = XPCOM.NS_GetServiceManager (result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3523cd1e8cbd41670ac5fadba93bbf48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "8f69618fc3b877d652c7fe2fd695fbdc73e7c8ea", "commitAfterChange": "478edeb5845364e73b9a63bf7615144091d8042f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\tresult[0] = 0;", "-\thr = webView.preferences (result);", "-\tif (hr == COM.S_OK && result[0] != 0) {", "-\t\tIWebPreferences preferences = new IWebPreferences (result[0]);", "-\t\tpreferences.setJavaScriptCanOpenWindowsAutomatically (1);", "-\t\tpreferences.setJavaEnabled (0);\t/* disable applets */", "-\t\tpreferences.setTabsToLinks (1);", "-\t\tpreferences.setFontSmoothing (WebKit_win32.FontSmoothingTypeWindows);", "-\t\tpreferences.Release ();", "-\t}", "+\tinitializeWebViewPreferences ();"]}], "num": 52463}