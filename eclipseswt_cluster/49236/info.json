{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a71223e55ee6549468b5ce74b8fa72dd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5365bedd6ab17d363812036561425c3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "7a42cc92cd5348bbf0e0886e024fbfe78c23cc9c", "commitAfterChange": "40516ff612bb729c6404f266bc1aa1d071b16ca1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private int dropProcCallback(int widget, int client_data, int call_data)", "signatureAfterChange": "  private void dropProcCallback(int widget, int client_data, int call_data)", "diff": ["-private int dropProcCallback(int widget, int client_data, int call_data) {", "+", "+private void dropProcCallback(int widget, int client_data, int call_data) {", "+\tif (call_data == 0) return;", "+\tif (droppedEventData.dropSiteStatus == OS.XmDROP_SITE_INVALID) {", "+\t\tint[] args = new int[] {OS.XmNtransferStatus, OS.XmTRANSFER_FAILURE, OS.XmNnumDropTransfers, 0};", "+\t\tdropTransferObject = OS.XmDropTransferStart(droppedEventData.dragContext, args, args.length / 2);", "+\t\treturn;", "+\t}", "+\t", "-\tevent.widget     = this.control;", "-\tevent.time       = droppedEventData.timeStamp;", "-\tshort [] root_x = new short [1];", "-\tshort [] root_y = new short [1];", "-\tOS.XtTranslateCoords (this.control.handle, (short) droppedEventData.x, (short) droppedEventData.y, root_x, root_y);", "-\tevent.x          = root_x[0];", "-\tevent.y          = root_y[0];", "-\tevent.dataTypes  = dataTypes;", "-\tint allowedOperations = osOpToOp(droppedEventData.operations);", "-\tevent.operations = allowedOperations;", "-\tevent.dataType   = selectedDataType;", "-\tevent.detail = lastOperation;", "-", "+\tif (!setEventData(droppedEventData.operations, droppedEventData.operation, droppedEventData.dragContext, droppedEventData.x, droppedEventData.y, droppedEventData.timeStamp, event)){", "+\t\treturn;", "+\t}", "+\t", "+\tint allowedOperations = event.operations;", "+\tTransferData[] allowedDataTypes = new TransferData[event.dataTypes.length];", "+\tSystem.arraycopy(event.dataTypes, 0, allowedDataTypes, 0, allowedDataTypes.length);", "+\t", "+\tevent.dataType = selectedDataType;", "+\tevent.detail = selectedOperation;", "-\tfor (int i = 0; i < dataTypes.length; i++) {", "-\t\tif (dataTypes[i].equals(event.dataType)) {", "-\t\t\tselectedDataType = event.dataType;", "-\t\t\tbreak;", "+\tif (event.dataType != null) {", "+\t\tfor (int i = 0; i < allowedDataTypes.length; i++) {", "+\t\t\tif (allowedDataTypes[i].type == event.dataType.type) {", "+\t\t\t\tselectedDataType = event.dataType;", "+\t\t\t\tbreak;", "+\t\t\t}", "-\tlastOperation = DND.DROP_NONE;", "-\tif (selectedDataType != null && ((event.detail & allowedOperations) == event.detail)) {", "-\t\tlastOperation = event.detail;", "-\t}", "-\tif (lastOperation == DND.DROP_NONE) {", "+\tselectedOperation = DND.DROP_NONE;", "+\tif (selectedDataType != null && ((event.detail & allowedOperations) == event.detail)) {", "+\t\tselectedOperation = event.detail;", "+\t}", "+", "+\tif (selectedOperation == DND.DROP_NONE) {", "-\t\treturn 0;", "+\t\treturn;", "-\t\t\t\tOS.XmNnumDropTransfers, transferEntries.length / 2,", "-\t\t\t\tOS.XmNtransferProc, TransferProc.getAddress()};", "+\t\t\t\t            OS.XmNnumDropTransfers, transferEntries.length / 2,", "+\t\t\t\t            OS.XmNtransferProc, TransferProc.getAddress()};", "-\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cd3b6578178842b4ecba94ca9d34bfb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e477a4358e3d45070bae31c4dbb6a267e439c2a4", "commitAfterChange": "22ef6cb2f9d6090c9cecda0b3ee039cf6ee05768", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void setClipping (int x, int y, int width, int height)", "signatureAfterChange": " void setClipping(int clipRgn)", "diff": ["+void setClipping(int clipRgn) {", "+\tif (clipRgn == 0) {", "+\t\tif (data.clipRgn != 0) {", "+\t\t\tOS.XDestroyRegion (data.clipRgn);", "+\t\t\tdata.clipRgn = 0;", "+\t\t}", "+\t\tif (data.damageRgn == 0) {", "+\t\t\tOS.XSetClipMask (data.display, handle, OS.None);", "+\t\t} else {", "+\t\t\tOS.XSetRegion (data.display, handle, data.damageRgn);\t\t\t", "+\t\t}", "+\t} else {", "+\t\tif (data.clipRgn == 0) data.clipRgn = OS.XCreateRegion ();", "+\t\tOS.XSubtractRegion (data.clipRgn, data.clipRgn, data.clipRgn);", "+\t\tOS.XUnionRegion (clipRgn, data.clipRgn, data.clipRgn);", "+\t\tint clipping = clipRgn;", "+\t\tif (data.damageRgn != 0) {", "+\t\t\tclipping = OS.XCreateRegion();", "+\t\t\tOS.XUnionRegion(clipping, clipRgn, clipping);", "+\t\t\tOS.XIntersectRegion(clipping, data.damageRgn, clipping);", "+\t\t}", "+\t\tOS.XSetRegion (data.display, handle, clipping);", "+\t\tif (clipping != clipRgn) OS.XDestroyRegion(clipping);", "+\t}", "+}", "-\tint clipRgn = data.clipRgn;", "-\tif (clipRgn == 0) {", "-\t\tdata.clipRgn = clipRgn = OS.XCreateRegion ();", "-\t} else {", "-\t\tOS.XSubtractRegion (clipRgn, clipRgn, clipRgn);", "-\t}", "-\trect.x = (short) x;  rect.y = (short) y;", "-\trect.width = (short) width;  rect.height = (short) height;", "-\tOS.XSetClipRectangles (data.display, handle, 0, 0, rect, 1, OS.Unsorted);"]}], "num": 49236}