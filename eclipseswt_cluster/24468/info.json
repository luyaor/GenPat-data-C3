{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9638c4704cfec191273cd7f0889f867", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f05ae3f1d3b263c62021bede2e3089", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "640899692dcf76c70cb6e44d1a8c4fc8f2ccff92", "commitAfterChange": "86c160716ade941ca65c5288846d24ae847a7e14", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["+\t\t\t\t\t\tpinfo.flags &= ~(OS.LVHT_ONITEMICON | OS.LVHT_ONITEMLABEL);", "+\t\t\t\tif (fullRowSelect) {", "+\t\t\t\t\tint flags = OS.LVHT_ONITEMICON | OS.LVHT_ONITEMLABEL;", "+\t\t\t\t\tif ((pinfo.flags & flags) != 0) fullRowSelect = false;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5fd4d60b48cf66d40edb7930e73c9b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7385bf0701e2baaa9eb397987f631a8e3608d059", "commitAfterChange": "cabce7a504b376ba4a2bbe191acc5449e828a45a", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\tboolean dragDetect = (state & DRAG_DETECT) != 0;", "+\t/*", "+\t* Feature in Windows.  Inside WM_LBUTTONDOWN and WM_RBUTTONDOWN,", "+\t* the widget starts a modal loop to determine if the user wants", "+\t* to begin a drag/drop operation or marque select.  This modal", "+\t* loop eats mouse events until a drag is detected.  The fix is", "+\t* to avoid this behavior by only running the drag and drop when", "+\t* the event is hooked and the mouse is over an item.", "+\t*/", "+\tboolean dragDetect = (state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect);", "+\tif (!dragDetect) {", "+\t\tint flags = OS.LVHT_ONITEMICON | OS.LVHT_ONITEMLABEL;", "+\t\tdragDetect = pinfo.iItem == -1 || (pinfo.flags & flags) == 0;", "+\t}"]}], "num": 24468}