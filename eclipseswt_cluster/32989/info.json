{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf0c0df49dad3506ca3fc3f673f1dfad", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa77f19eef5abb5f90cf32e4ab79153", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tid getSelectedTextRangesAttribute (int childID)", "signatureAfterChange": " \t \tid getSelectedTextRangesAttribute (int childID)", "diff": ["-\t\tNSMutableArray returnValue = null; ", "-\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "-\t\tevent.childID = childID;", "-\t\tevent.offset = -1;", "-\t\tevent.length = 0;", "-\t\t", "-\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "-\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "-\t\t\tlistener.getSelectionRange(event);", "+\t\tNSMutableArray returnValue = null;", "+\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tfor (int i = 0; i < accessibleTextExtendedListeners.size(); i++) {", "+\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(i);", "+\t\t\t\tlistener.getSelectionCount(event);", "+\t\t\t}", "+\t\t\tif (event.count > 0) {", "+\t\t\t\treturnValue = NSMutableArray.arrayWithCapacity(event.count);", "+\t\t\t\tfor (int i = 0; i < event.count; i++) {", "+\t\t\t\t\tevent.index = i;", "+\t\t\t\t\tfor (int j = 0; j < accessibleTextExtendedListeners.size(); j++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) accessibleTextExtendedListeners.elementAt(j);", "+\t\t\t\t\t\tlistener.getSelection(event);", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t\tNSRange range = new NSRange();", "+\t\t\t\t\trange.location = event.start;", "+\t\t\t\t\trange.length = event.end - event.start + 1;", "+\t\t\t\t\treturnValue.addObject(NSValue.valueWithRange(range));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tAccessibleTextEvent event = new AccessibleTextEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tevent.offset = -1;", "+\t\t\tevent.length = 0;", "+", "+\t\t\tfor (int i = 0; i < accessibleTextListeners.size(); i++) {", "+\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) accessibleTextListeners.elementAt(i);", "+\t\t\t\tlistener.getSelectionRange(event);", "+\t\t\t}", "+", "+\t\t\tif (event.offset != -1) {", "+\t\t\t\treturnValue = NSMutableArray.arrayWithCapacity(1);", "+\t\t\t\tNSRange range = new NSRange();", "+\t\t\t\trange.location = event.offset;", "+\t\t\t\trange.length = event.length;", "+\t\t\t\treturnValue.addObject(NSValue.valueWithRange(range));", "+\t\t\t}", "-\t\t", "-\t\tif (event.offset != -1) {", "-\t\t\treturnValue = NSMutableArray.arrayWithCapacity(1);", "-\t\t\tNSRange range = new NSRange();", "-\t\t\trange.location = event.offset;", "-\t\t\trange.length = event.length;", "-\t\t\treturnValue.addObject(NSValue.valueWithRange(range));", "-\t\t}", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be3495a464f49c9901ff2a417953f4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "907c4dd47a285571bf0d66e34d1a9323e15dd90b", "commitAfterChange": "e4b1a868ce731255239223c8ff6f43351c81a864", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 63, "signatureBeforeChange": " void onMouse(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\t\t\t\tupdate();", "-\t\t\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tupdate();", "-\t\t\t\tupdate();", "-\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\te.widget = this;", "+\t\t\t\te.time = event.time;", "+\t\t\t\te.x = rect.x;", "+\t\t\t\te.y = rect.y;", "+\t\t\t\te.width = rect.width;", "+\t\t\t\te.height = rect.height;", "+\t\t\t\te.doit = true;", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "+\t\t\t\t\tfolderListeners[i].showList(e);", "+\t\t\t\t}", "+\t\t\t\tif (e.doit && !isDisposed()) {", "-\t\t\t\t} else {", "-\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\t\te.widget = this;", "-\t\t\t\t\te.time = event.time;", "-\t\t\t\t\te.rect = rect;", "-\t\t\t\t\t", "-\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\t\t\tlistListeners[i].showList(e);", "-\t\t\t\t\t}", "-\t\t\t\tupdate();", "-\t\t\t\tfor (int i = 0; i < minmaxListeners.length; i++) {", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\t\tminmaxListeners[i].restore(e);", "+\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t\tminmaxListeners[i].minimize(e);", "+\t\t\t\t\t\tfolderListeners[i].minimize(e);", "-\t\t\t\tupdate();", "-\t\t\t\tfor (int i = 0; i < minmaxListeners.length; i++) {", "+\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\t\t\t\t\tminmaxListeners[i].restore(e);", "+\t\t\t\t\t\tfolderListeners[i].restore(e);", "-\t\t\t\t\t\tminmaxListeners[i].maximize(e);", "+\t\t\t\t\t\tfolderListeners[i].maximize(e);", "-\t\t\t\t\tupdate();", "-\t\t\t\t\tfor (int j = 0; j < closeListeners.length; j++) {", "-\t\t\t\t\t\tcloseListeners[j].itemClosed(e);", "+\t\t\t\t\tfor (int j = 0; j < folderListeners.length; j++) {", "+\t\t\t\t\t\tCTabFolder2Listener listener = folderListeners[j];", "+\t\t\t\t\t\tlistener.close(e);", "+\t\t\t\t\t}", "+\t\t\t\t\tfor (int j = 0; j < tabListeners.length; j++) {", "+\t\t\t\t\t\tCTabFolderListener listener = tabListeners[j];", "+\t\t\t\t\t\tlistener.itemClosed(e);", "-\t\t\t\t\tif (listListeners.length == 0) {", "+\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "+\t\t\t\t\te.widget = this;", "+\t\t\t\t\te.time = event.time;", "+\t\t\t\t\te.x = rect.x;", "+\t\t\t\t\te.y = rect.y;", "+\t\t\t\t\te.width = rect.width;", "+\t\t\t\t\te.height = rect.height;", "+\t\t\t\t\te.doit = true;", "+\t\t\t\t\tfor (int i = 0; i < folderListeners.length; i++) {", "+\t\t\t\t\t\tfolderListeners[i].showList(e);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (e.doit && !isDisposed()) {", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\t\t\t\t\t\te.widget = this;", "-\t\t\t\t\t\te.time = event.time;", "-\t\t\t\t\t\te.rect = rect;", "-\t\t\t\t\t\t", "-\t\t\t\t\t\tfor (int i = 0; i < listListeners.length; i++) {", "-\t\t\t\t\t\t\tlistListeners[i].showList(e);", "-\t\t\t\t\t\t}"]}], "num": 32989}