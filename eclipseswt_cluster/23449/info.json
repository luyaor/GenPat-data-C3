{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "49604e905024c9edef245910ecb8d48b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6ab9c8e2b87f7e7e2f32cb863c92c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "f72115a5fac6b8438c98e45109affc439c990dbe", "commitAfterChange": "4034e6595fa325be672a1d53fb7aab865bc83508", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tvoid createPrinterColors()", "signatureAfterChange": "\r \tvoid createPrinterColors()", "diff": ["-\t\tIterator values = lineBackgrounds.values().iterator();\r", "+\t\tEnumeration values = lineBackgrounds.elements();\r", "-\t\twhile (values.hasNext()) {\r", "-\t\t\tStyledTextEvent event = (StyledTextEvent) values.next();\r", "+\t\twhile (values.hasMoreElements()) {\r", "+\t\t\tStyledTextEvent event = (StyledTextEvent) values.nextElement();\r", "-\t\tvalues = lineStyles.values().iterator();\r", "-\t\twhile (values.hasNext()) {\r", "-\t\t\tStyledTextEvent event = (StyledTextEvent) values.next();\r", "+\t\tvalues = lineStyles.elements();\r", "+\t\twhile (values.hasMoreElements()) {\r", "+\t\t\tStyledTextEvent event = (StyledTextEvent) values.nextElement();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8463d8ac125b462d2292632194e37588", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c53dd155c988438cf5b6f01ee10d7d1d529898e7", "commitAfterChange": "ba3286821ec63399c275fdef7b6f2ed7f5d5886b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void setFont(Font font)", "signatureAfterChange": " public void setFont(Font font)", "diff": ["-\tStack children = new Stack();\t\t\t\t\t\t// traverse the tree depth first", "+\tVector children = new Vector();", "-\t\tchildren.push(elements.nextElement());", "-\t}\t\t\t", "-\twhile (children.empty() == false) {", "-\t\titem = (AbstractTreeItem) children.pop();", "+\t\tchildren.addElement(elements.nextElement());", "+\t}", "+\t// traverse the tree depth first\t", "+\tint size;", "+\twhile ((size = children.size()) != 0) {", "+\t\titem = (AbstractTreeItem)children.elementAt(size - 1);", "+\t\tchildren.removeElementAt(size - 1);", "-\t\t\tchildren.push(elements.nextElement());", "+\t\t\tchildren.addElement(elements.nextElement());"]}], "num": 23449}