{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c22cfa105b9c79ea3b4edbac1c54b67c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e37d26c733a95932412958e26bcd873", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "3e0fbc94829ccd56d23e0eb7edfd051721be3e19", "commitAfterChange": "e7b8e72222a611eea025379e495a9dde74bc3834", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r Image getArrowImage ()", "signatureAfterChange": "\r \r Image getArrowImage ()", "diff": ["-\t\r", "-\tif (arrowImage != null) return arrowImage;\r", "-\tint height = itemBounds.height - 10; //remove the border space\r", "-\tint width = CHEVRON_WIDTH - 7;\r", "-\t\r", "+\r", "+\tint height = Math.min (control.getSize ().y, itemBounds.height) - CHEVRON_VERTICAL_TRIM;\r", "+\tif (arrowImage != null) {\r", "+\t\tif (arrowImage.getBounds().height == height) {\r", "+\t\t\treturn arrowImage;\r", "+\t\t} else {\r", "+\t\t\tarrowImage.dispose();\r", "+\t\t\tarrowImage = null;\r", "+\t\t}\r", "+\t}\r", "+\tint width = CHEVRON_IMAGE_WIDTH; \r", "-\tColor foreground = control.getForeground ();\r", "+\tColor foreground = parent.getForeground ();\r", "-\tColor background = control.getBackground ();\r", "+\tColor background = parent.getBackground ();\r", "-\tint step = MARGIN_WIDTH / 2;\t\r", "+\tint step = 2;\t\r", "-\tstartX += 2;\r", "+\tstartX += 3;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d030048a2c032ffb45d758b6f3b098bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "af35bb868ce7a4db640d728af68bfb767fa4e09f", "commitAfterChange": "a1b6110a7c4d57ed7e255ff1bd265349917f369d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint)", "diff": ["-\tint width = wHint, height = hHint;\r", "-\tif (wHint == SWT.DEFAULT) width = 32;\r", "-\tif (hHint == SWT.DEFAULT) height = 32;\r", "-\tRECT rect = new RECT ();\r", "-\tOS.SendMessage (hwnd, OS.RB_GETBANDBORDERS, index, rect);\r", "-\twidth += rect.left + rect.right;\r", "-\theight += rect.top + rect.bottom;\r", "-\tif (index == 0) {\r", "+\tPoint size;\r", "+\tif (control == null)  {\r", "+\t\tsize = new Point (0,0);\r", "+\t}\r", "+\telse {\r", "+\t\tsize = control.computeSize (wHint, hHint);\r", "+\t}\r", "+\tif (wHint != SWT.DEFAULT) size.x = wHint;\r", "+\tif (hHint != SWT.DEFAULT) size.y = hHint;\r", "+\tint height = Math.max (MINIMUM_CHILD_HEIGHT, size.y);\r", "+\tint width;\r", "+\tif (size.x == 0) {\r", "-\t\twidth = width - rbBand.cxHeader + 1;\r", "+\t\twidth = rbBand.cxHeader;\t\r", "+\t}\r", "+\telse {\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tOS.SendMessage (hwnd, OS.RB_GETBANDBORDERS, index, rect);\r", "+\t\twidth = size.x + rect.left + rect.right;\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7072b688fdcefb1e1c7a84c743673675", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolItem.java", "commitBeforeChange": "533b32a9baa75e76ca7b7877ee9b9581fe18792e", "commitAfterChange": "9fedd0db5879e16f4217a567123278513c1d3514", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint)", "diff": ["-\tcheckWidget();\r", "-\tif (preferredWidth > -1) return new Point(preferredWidth, preferredHeight);\r", "-\tint width = MINIMUM_WIDTH;\r", "-\tint height = DEFAULT_HEIGHT;\r", "-\tif (wHint != SWT.DEFAULT) width = wHint + MINIMUM_WIDTH + MARGIN_WIDTH; \r", "-\tif (hHint != SWT.DEFAULT) height = hHint + (2 + MARGIN_HEIGHT);\r", "+\tcheckWidget ();\r", "+\tPoint size;\r", "+\tif (control != null) {\r", "+\t\tsize = control.computeSize (wHint, hHint);\r", "+\t}\r", "+\telse {\r", "+\t\tsize = new Point (0,0);\t\r", "+\t}\r", "+\tif (wHint != SWT.DEFAULT) size.x = wHint;\r", "+\tif (hHint != SWT.DEFAULT) size.y = hHint;\r", "+\tint width = size.x + MINIMUM_WIDTH + MARGIN_WIDTH;\r", "+\tint height = Math.max (MINIMUM_CHILD_HEIGHT, size.y) + MARGIN_HEIGHT;\r"]}], "num": 49994}