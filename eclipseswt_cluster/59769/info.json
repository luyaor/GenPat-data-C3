{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c30cd3df7fa80f357511aa1440e2c8ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e51eea5c2d8e8033c2609a7892e880", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "3ace99cc2cbeca175428eabbe777b2fc353f5d7d", "commitAfterChange": "38b0d2b8f58957af87b01bf2967bf37e853d55b0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Rectangle()", "signatureAfterChange": "  public void test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Rectangle()", "diff": ["-\twarnUnimpl(\"Test test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Rectangle not written\");", "+\tDisplay display = new Display();", "+\ttry {", "+\t\tShell shell = new Shell(display, SWT.NO_TRIM);", "+\t\tButton button1 = new Button(shell, SWT.PUSH);", "+\t\tbutton1.setBounds(0,0,100,100);", "+\t\tButton button2 = new Button(shell, SWT.PUSH);", "+\t\tbutton2.setBounds(200,100,100,100);", "+\t\tshell.setBounds(0,0,400,400);", "+\t\tshell.open();", "+\t\t", "+\t\tRectangle result;", "+\t\tRectangle rect = new Rectangle(0,0,100,100);", "+\t\t", "+\t\tresult = display.map(button1, button2, rect);", "+\t\tassertEquals(new Rectangle(-200,-100,100,100), result);", "+\t\tresult = display.map(button1, button2, new Rectangle(-10, -20, 130, 140));", "+\t\tassertEquals(new Rectangle(-210,-120,130,140), result);", "+\t\tresult = display.map(button1, button2, new Rectangle(50, 60, 170, 180));", "+\t\tassertEquals(new Rectangle(-150,-40,170,180), result);", "+\t\t", "+\t\tresult = display.map(button2, button1, rect);", "+\t\tassertEquals(new Rectangle(200,100,100,100), result);", "+\t\tresult = display.map(button2, button1, new Rectangle(-5, -15, 125, 135));", "+\t\tassertEquals(new Rectangle(195,85,125,135), result);", "+\t\tresult = display.map(button2, button1, new Rectangle(45, 55, 165, 175));", "+\t\tassertEquals(new Rectangle(245,155,165,175), result);", "+\t\t", "+\t\tresult = display.map(null, button2, rect);", "+\t\tassertEquals(new Rectangle(-200,-100,100,100), result);", "+\t\tresult = display.map(null, button2, new Rectangle(-2, -4, 106, 108));", "+\t\tassertEquals(new Rectangle(-202,-104,106,108), result);", "+\t\tresult = display.map(null, button2, new Rectangle(10, 12, 114, 116));", "+\t\tassertEquals(new Rectangle(-190,-88,114,116), result);", "+\t\t", "+\t\tresult = display.map(button2, null, rect);", "+\t\tassertEquals(new Rectangle(200,100,100,100), result);", "+\t\tresult = display.map(button2, null, new Rectangle(-3, -6, 109, 112));", "+\t\tassertEquals(new Rectangle(197,94,109,112), result);", "+\t\tresult = display.map(button2, null, new Rectangle(15, 18, 121, 124));", "+\t\tassertEquals(new Rectangle(215,118,121,124), result);", "+\t\t", "+\t", "+\t\tbutton1.dispose();", "+\t\ttry {", "+\t\t\tresult = display.map(button1, button2, rect);", "+\t\t\tfail(\"No exception thrown for map from control being disposed\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for map from control being disposed\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t\t}", "+\t\ttry {", "+\t\t\tresult = display.map(button2, button1, rect);", "+\t\t\tfail(\"No exception thrown for map to control being disposed\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for map to control being disposed\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\ttry {", "+\t\t\tresult = display.map(button2, button1, (Rectangle) null);", "+\t\t\tfail(\"No exception thrown for null point\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for rectangle being null\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\tshell.dispose();", "+\t} finally {", "+\t\tdisplay.dispose();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7fb165b5b6b3082e6c4a2c12186797", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "3ace99cc2cbeca175428eabbe777b2fc353f5d7d", "commitAfterChange": "38b0d2b8f58957af87b01bf2967bf37e853d55b0", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Point()", "signatureAfterChange": "  public void test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Point()", "diff": ["-\twarnUnimpl(\"Test test_mapLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_widgets_ControlLorg_eclipse_swt_graphics_Point not written\");", "+\tDisplay display = new Display();", "+\ttry {", "+\t\tShell shell = new Shell(display, SWT.NO_TRIM);", "+\t\tButton button1 = new Button(shell, SWT.PUSH);", "+\t\tbutton1.setBounds(0,0,100,100);", "+\t\tButton button2 = new Button(shell, SWT.PUSH);", "+\t\tbutton2.setBounds(200,100,100,100);", "+\t\tshell.setBounds(0,0,400,400);", "+\t\tshell.open();", "+\t\t", "+\t\tPoint result;", "+\t\tPoint point = new Point(0,0);", "+\t\t", "+\t\tresult = display.map(button1, button2, point);", "+\t\tassertEquals(new Point(-200,-100), result);", "+\t\tresult = display.map(button1, button2, new Point(-10,-20));", "+\t\tassertEquals(new Point(-210,-120), result);", "+\t\tresult = display.map(button1, button2, new Point(30,40));", "+\t\tassertEquals(new Point(-170,-60), result);", "+\t\t", "+\t\tresult = display.map(button2, button1, point);", "+\t\tassertEquals(new Point(200,100), result);", "+\t\tresult = display.map(button2, button1, new Point(-5,-15));", "+\t\tassertEquals(new Point(195,85), result);", "+\t\tresult = display.map(button2, button1, new Point(25,35));", "+\t\tassertEquals(new Point(225,135), result);", "+\t\t", "+\t\tresult = display.map(null, button2, point);", "+\t\tassertEquals(new Point(-200,-100), result);", "+\t\tresult = display.map(null, button2, new Point(-2,-4));", "+\t\tassertEquals(new Point(-202,-104), result);", "+\t\tresult = display.map(null, button2, new Point(6,8));", "+\t\tassertEquals(new Point(-194,-92), result);", "+\t\t", "+\t\tresult = display.map(button2, null, point);", "+\t\tassertEquals(new Point(200,100), result);", "+\t\tresult = display.map(button2, null, new Point(-3,-6));", "+\t\tassertEquals(new Point(197,94), result);", "+\t\tresult = display.map(button2, null, new Point(9,12));", "+\t\tassertEquals(new Point(209,112), result);", "+\t\t", "+\t\tbutton1.dispose();", "+\t\ttry {", "+\t\t\tresult = display.map(button1, button2, point);", "+\t\t\tfail(\"No exception thrown for map from control being disposed\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for map from control being disposed\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t\t}", "+\t\ttry {", "+\t\t\tresult = display.map(button2, button1, point);", "+\t\t\tfail(\"No exception thrown for map to control being disposed\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for map to control being disposed\", SWT.ERROR_INVALID_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\ttry {", "+\t\t\tresult = display.map(button2, button1, (Point) null);", "+\t\t\tfail(\"No exception thrown for null point\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for point being null\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\tshell.dispose();", "+\t} finally {", "+\t\tdisplay.dispose();", "+\t}"]}], "num": 59769}