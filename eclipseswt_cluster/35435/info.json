{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "728ace1f88d562573569ef9496fbefee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9f86c0f83ada36af44aa679fa06403", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8188a5d1f9bc4d3f53c8cfcac3571aea29ed7d71", "commitAfterChange": "8684eb7c010b814cf3160dcf2099b9cf0171e156", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " Rectangle getWorkArea()", "signatureAfterChange": " Rectangle getWorkArea()", "diff": ["-\tint values [] = new int [4];", "-\t\tif (actualLength [0] >= 16) {", "+\t\tif (actualLength [0] == 16) {", "+\t\t\tint values [] = new int [4];", "+\t\t} else if (actualLength [0] == 32) {", "+\t\t\tlong values [] = new long [4];", "+\t\t\tOS.memmove (values, data[0], 32);", "+\t\t\tresult = new Rectangle ((int)values [0],(int)values [1],(int)values [2],(int)values [3]);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237c2c9bcc260b097e2860736d541ea3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3e09af06bb3bf4d5d2441cbf974046902af31cd5", "commitAfterChange": "d2db83d4ce1f652f2d28fe4b599254bee6181153", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " void setBounds (int x, int y, int width, int height)", "signatureAfterChange": " void setBounds (int x, int y, int width, int height)", "diff": ["-\tshort[] bounds= new short[4];", "-\tshort[] pbounds= new short[4];", "-\tOS.GetControlBounds(handle, bounds);", "-\tOS.GetControlBounds(parent.handle, pbounds);", "-\t\t", "-\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "-\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "-\tif (!sameOrigin || !sameExtent)", "-\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t", "+\tif (MacUtil.USE_FRAME) {", "+\t\tfloat[] f= new float[4];", "+\t\tOS.HIViewGetFrame(handle, f);", "+\t\tif (f[0] != x || f[1] != y || f[2] != width || f[3] != height)", "+\t\t\tOS.HIViewSetFrame(handle, x, y, width, height);", "+\t} else {", "+\t\tshort[] bounds= new short[4];", "+\t\tshort[] pbounds= new short[4];", "+\t\tOS.GetControlBounds(handle, bounds);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\t\t", "+\t\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "+\t\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "+\t\tif (!sameOrigin || !sameExtent)", "+\t\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t}", "-\t\tOS.ShowControl(handle);", "+\t\tOS.HIViewSetVisible(handle, true);"]}], "num": 35435}