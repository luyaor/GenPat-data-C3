{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87a8fc0697f63e4e415c952265b52b65", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5328b2d3a79b3e45f168882347edc596", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "signatureAfterChange": "  public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["- */", "+", "-\t", "-\tif (data == null) {", "+\tif (display == null) DND.error(SWT.ERROR_WIDGET_DISPOSED);", "+\tif (display.isDisposed()) DND.error(SWT.ERROR_DEVICE_DISPOSED);", "+\tif (data == null || dataTypes == null || data.length != dataTypes.length) {", "-\tif (dataTypes == null || data.length != dataTypes.length) {", "-\t\tDND.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\t", "-\tif (display.isDisposed())", "-\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\tint[] scrapHandle= new int[1];", "+\tint[] scrapHandle = new int[1];", "-\tint scrap= scrapHandle[0];", "-\t\t", "-\tint status= 1;", "-\t", "+\tint scrap = scrapHandle[0];", "-\t\tint[] ids= dataTypes[i].getTypeIds();", "+\t\tint[] ids = dataTypes[i].getTypeIds();", "-\t\t\tTransferData transferData= new TransferData();", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\ttransferData.type= ids[j];", "+\t\t\tTransferData transferData = new TransferData();", "+\t\t\ttransferData.type = ids[j];", "-\t\t\tif (transferData.result == 1) {", "-\t\t\t\t/*", "-\t\t\t\tif (transferData.format == 8) {", "-\t\t\t\t\tbyte[] buffer = new byte[transferData.length];", "-\t\t\t\t\tOS.memmove(buffer, transferData.pValue, transferData.length);", "-\t\t\t\t\tbyte[] bName = Converter.wcsToMbcs(null, names[j], true);", "-\t\t\t\t\tstatus = OS.XmClipboardCopy(xDisplay, xWindow, item_id[0], bName, buffer, transferData.length, 0, null);", "-\t\t\t\t}", "-\t\t\t\t*/", "-\t\t\t\tstatus= OS.PutScrapFlavor(scrap, transferData.type, 0, transferData.data);", "+\t\t\tif (transferData.result != OS.noErr)", "+\t\t\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "+\t\t\tif (OS.PutScrapFlavor(scrap, transferData.type, 0, transferData.data.length, transferData.data) != OS.noErr){", "+\t\t\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\t", "-\tif (status != OS.kNoErr)", "-\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac25602a2f0310f7de407dfc122e2cbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "536a3067a0d520c981d7210614769b62674b0849", "commitAfterChange": "1839e6271defc2990d8b1fe9c3cca72d2e7f3199", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void setContents(Object[] data, Transfer[] transferAgents)", "signatureAfterChange": "\r public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["-public void setContents(Object[] data, Transfer[] transferAgents){\r", "+public void setContents(Object[] data, Transfer[] dataTypes){\r", "-\tif (data == null) {\r", "-\t\tDND.error(SWT.ERROR_NOT_IMPLEMENTED);\r", "-\t}\r", "-\tif (transferAgents == null || data.length != transferAgents.length) {\r", "+\tif (data == null || dataTypes == null || data.length != dataTypes.length) {\r", "-\tfor (int i = 0; i < transferAgents.length; i++) {\r", "-\t\tString[] names = transferAgents[i].getTypeNames();\r", "+\tfor (int i = 0; i < dataTypes.length; i++) {\r", "+\t\tint[] ids = dataTypes[i].getTypeIds();\r", "+\t\tString[] names = dataTypes[i].getTypeNames();\r", "-\t\t\r", "-\t\t\tbyte[] bName = Converter.wcsToMbcs (null, names[j], false);\r", "-\t\t\ttransferData.type    = OS.XmInternAtom (xDisplay, bName, false);\r", "-\t\t\ttransferAgents[i].javaToNative(data[i], transferData);\r", "+\t\t\ttransferData.type = ids[j];\r", "+\t\t\tdataTypes[i].javaToNative(data[i], transferData);\r", "-\t\t\tif (transferData.result == 1 && transferData.format == 8){\r", "-\t\t\t\tbyte[] buffer = new byte[transferData.length];\r", "-\t\t\t\tOS.memmove(buffer, transferData.pValue, transferData.length);\r", "-\t\t\t\tstatus = OS.XmClipboardCopy(xDisplay, xWindow, item_id[0], bName, buffer, transferData.length, 0, null);\r", "+\t\t\tif (transferData.result == 1) {\r", "+\t\t\t\tif (transferData.format == 8){\r", "+\t\t\t\t\tbyte[] buffer = new byte[transferData.length];\r", "+\t\t\t\t\tOS.memmove(buffer, transferData.pValue, transferData.length);\r", "+\t\t\t\t\tbyte[] bName = Converter.wcsToMbcs(null, names[j], true);\r", "+\t\t\t\t\tstatus = OS.XmClipboardCopy(xDisplay, xWindow, item_id[0], bName, buffer, transferData.length, 0, null);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fcdbd175f62c817ffa3dd9d4b44d320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "8727d22e38059537dcc917ca55f0d6ddcedac706", "commitAfterChange": "0e7716ec8b85ed8b2a10afa69a4dfa63fe12298f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setContents(Object[] data, Transfer[] transferAgents)", "signatureAfterChange": " public void setContents(Object[] data, Transfer[] dataTypes)", "diff": ["-public void setContents(Object[] data, Transfer[] transferAgents){", "+public void setContents(Object[] data, Transfer[] dataTypes) {", "-\tif (transferAgents == null || data.length != transferAgents.length) {", "+\tif (dataTypes == null || data.length != dataTypes.length) {", "-\tif (display.isDisposed() )", "+\tif (display.isDisposed())", "-\t/*", "-\tfor (int i = 0; i < transferAgents.length; i++) {", "-\t\tSystem.out.println(\"Clipboard.setContents: \" + transferAgents[i]);", "+\tSystem.out.println(\"Clipboard.setContents:\");", "+\tfor (int i = 0; i < dataTypes.length; i++) {", "+\t\tSystem.out.println(\"  \" + i + \": \" + dataTypes[i]);", "-\t*/", "+\t/*", "+\t\tif (transferAgents[i] instanceof RTFTransfer && data[i] instanceof String) {", "+\t\t\tString s= (String) data[i];", "+\t\t\tint flavorType= ('R'<<24) + ('T'<<16) + ('F'<<8) + ' ';", "+\t\t\tif (OS.PutScrapFlavor(scrap, flavorType, 0, s.getBytes()) == OS.kNoErr)", "+\t\t\t\treturn;", "+\t\t}", "+\t*/", "+\t", "+\tint status= 1;", "+\t", "+\t// copy data directly over to System clipboard (not deferred)", "+\tfor (int i= 0; i < dataTypes.length; i++) {", "+\t\tint[] ids= dataTypes[i].getTypeIds();", "+\t\tfor (int j= 0; j < ids.length; j++) {", "+\t\t\tTransferData transferData= new TransferData();", "+\t\t\t/* Use the character encoding for the default locale */", "+\t\t\ttransferData.type= ids[j];", "+\t\t\tdataTypes[i].javaToNative(data[i], transferData);", "+\t\t\tif (transferData.result == 1) {", "+\t\t\t\t/*", "+\t\t\t\tif (transferData.format == 8) {", "+\t\t\t\t\tbyte[] buffer = new byte[transferData.length];", "+\t\t\t\t\tOS.memmove(buffer, transferData.pValue, transferData.length);", "+\t\t\t\t\tbyte[] bName = Converter.wcsToMbcs(null, names[j], true);", "+\t\t\t\t\tstatus = OS.XmClipboardCopy(xDisplay, xWindow, item_id[0], bName, buffer, transferData.length, 0, null);", "+\t\t\t\t}", "+\t\t\t\t*/", "+\t\t\t\tstatus= OS.PutScrapFlavor(scrap, transferData.type, 0, transferData.data);", "+\t\t\t}", "+\t\t}", "+\t}", "+\t", "+\tif (status != OS.kNoErr)", "+\t\tDND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);"]}], "num": 12707}