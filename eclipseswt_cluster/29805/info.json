{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f2c9018920e84f023d26650cf1d0c86", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c332ca3fd4551d2ce5737847b5f58450", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "c4f1f56c86ea0f324367d5bf40bcbb49d4323f3e", "commitAfterChange": "fca875eb72108e60782c178db548975d58286f47", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void onPaint(PaintEvent event)", "signatureAfterChange": "  void onPaint(PaintEvent event)", "diff": ["-\t       lines[i] = shortenText(gc, lines[i], availableWidth);", "-\t       extent.x = Math.max(extent.x, getTotalSize(null, lines[i]).x);", "+\t    \tPoint e = gc.textExtent(lines[i], DRAW_FLAGS);", "+\t    \tif (e.x > availableWidth) {", "+\t    \t\tlines[i] = shortenText(gc, lines[i], availableWidth);", "+\t    \t\textent.x = Math.max(extent.x, getTotalSize(null, lines[i]).x);", "+\t    \t} else {", "+\t    \t\textent.x = Math.max(extent.x, e.x);", "+\t    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739a5870d8b6d65851c2cb953e82cc06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fc8e38f2680acf108bcc8932def45b522b2f2367", "commitAfterChange": "0e9002fe6e242cf1196df7e1db7cca0e1f375209", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["+\tPOINT pt = new POINT ();", "+\tOS.GetWindowOrgEx (handle, pt);", "+\t} else {", "+\t\tif (pt.x != 0 || pt.y != 0) OS.OffsetRgn (region.handle, pt.x, pt.y);", "-\t\t\tPOINT pt = new POINT ();", "-\t\t\tOS.GetWindowOrgEx (handle, pt);", "-\t\t\t\t\tPOINT pt = new POINT();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38208b0bd027ef9e691ec512cb51e55", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/FileFormat.java", "commitBeforeChange": "553d7364f85189cde07e065aaa5ba7380f0c1418", "commitAfterChange": "ff32f7578b312ab2cf7bee31c19161e45b3b344c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static void save(OutputStream os, int format, ImageLoader loader)", "signatureAfterChange": "\t public static void save(OutputStream os, int format, ImageLoader loader)", "diff": ["+ */\t", "+\tif (loader.data == null || loader.data.length < 1) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "-\t/* We do not currently support writing multi-image files,", "-\t * so we use the first image data in the loader's array. */", "-\tImageData data = loader.data[0];", "-\t\tswitch (data.depth) {", "+\t\tswitch (loader.data[0].depth) {", "-\tfileFormat.unloadIntoStream(data, stream);", "+\tfileFormat.unloadIntoStream(loader, stream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76507202b84e7c3446ead36c59da8756", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fc8e38f2680acf108bcc8932def45b522b2f2367", "commitAfterChange": "0e9002fe6e242cf1196df7e1db7cca0e1f375209", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void initGdip(boolean draw, boolean fill)", "signatureAfterChange": "  void initGdip(boolean draw, boolean fill)", "diff": ["+\t\tPOINT pt = new POINT ();", "+\t\tOS.GetWindowOrgEx (handle, pt);", "+\t\tif (pt.x != 0 || pt.y != 0) OS.OffsetRgn (hRgn, pt.x, pt.y);"]}], "num": 29805}