{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1eab10bfe54c276845dfe2ff326d2297", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c9e7f855dcbd28e8c465632f0088d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "commitAfterChange": "e5951bd17b31b8cb707a15cbf154c50c6581fd3e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 89, "signatureBeforeChange": "  public void stop()", "signatureAfterChange": " public void stop()", "diff": ["+ */", "+\tif (!isLinux) return;", "+\tint[] result = new int[1];", "+\tint rc = webBrowser.QueryInterface(nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tif (result[0] == 0) throw new SWTError(XPCOM.errorMsg(XPCOM.NS_ERROR_NO_INTERFACE));", "+\t", "+\tnsIWebNavigation webNavigation = new nsIWebNavigation(result[0]);\t \t", "+\trc = webNavigation.Stop(nsIWebNavigation.STOP_ALL);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\twebNavigation.Release();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de628cd52e81bddfc523e0fadca9d006", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "commitAfterChange": "e5951bd17b31b8cb707a15cbf154c50c6581fd3e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 88, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": " public boolean setUrl(String url)", "diff": ["+ */", "-\treturn false;", "+\tif (!isLinux) return false;", "+\tint[] result = new int[1];", "+\tint rc = webBrowser.QueryInterface(nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tif (result[0] == 0) throw new SWTError(XPCOM.errorMsg(XPCOM.NS_ERROR_NO_INTERFACE));", "+", "+\tnsIWebNavigation webNavigation = new nsIWebNavigation(result[0]);", "+\tchar[] arg = url.toCharArray(); ", "+\tchar[] c = new char[arg.length+1];", "+\tSystem.arraycopy(arg,0,c,0,arg.length);", "+\trc = webNavigation.LoadURI(c, nsIWebNavigation.LOAD_FLAGS_NONE, 0, 0, 0);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tonFocusGained(null); // Fixes the keyboard INput Tag issues", "+\twebNavigation.Release();", "+\t\t\t", "+\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3427fd55172116c50eb5b4ef29319ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "caa84d2b9df2c3b9eedb5f86a4ec38796c3a6c51", "commitAfterChange": "1a91a0641b6efab2fd52bee03ca0dd6d01f80e4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\t} else { /* >= 1.9 */", "+\t\t\t\t/*", "+\t\t\t\t * Bug in XULRunner 1.9.  Mozilla no longer clears its background before initial content has", "+\t\t\t\t * been set.  As a result embedders appear broken if they do not immediately navigate to a url.", "+\t\t\t\t * The workaround for this is to navigate to about:blank immediately so that the background is", "+\t\t\t\t * cleared, but do not fire any corresponding events or allow Browser API calls to reveal this.", "+\t\t\t\t * Once the client does a proper navigate with either setUrl() or setText() then resume as", "+\t\t\t\t * normal.  The Mozilla bug for this is https://bugzilla.mozilla.org/show_bug.cgi?id=415789.", "+\t\t\t\t */", "+\t\t\t\tawaitingNavigate = true;", "+\t\t\t\trc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (rc);", "+\t\t\t\t}", "+\t\t\t\tif (result[0] == 0) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (XPCOM.NS_ERROR_NO_INTERFACE);", "+\t\t\t\t}", "+\t\t\t\tnsIWebNavigation webNavigation = new nsIWebNavigation (result[0]);", "+\t\t\t    char[] uri = new char[ABOUT_BLANK.length () + 1];", "+\t\t\t    ABOUT_BLANK.getChars (0, ABOUT_BLANK.length (), uri, 0);", "+\t\t\t\trc = webNavigation.LoadURI (uri, nsIWebNavigation.LOAD_FLAGS_NONE, 0, 0, 0);", "+\t\t\t\twebNavigation.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e715b2542c8a33f34c7c58e55d585d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "commitAfterChange": "e5951bd17b31b8cb707a15cbf154c50c6581fd3e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 84, "signatureBeforeChange": "  public void refresh()", "signatureAfterChange": " public void refresh()", "diff": ["+ */", "+\tif (!isLinux) return;", "+\tint[] result = new int[1];", "+\tint rc = webBrowser.QueryInterface(nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));", "+\tif (result[0] == 0) throw new SWTError(XPCOM.errorMsg(XPCOM.NS_ERROR_NO_INTERFACE));", "+\t", "+\tnsIWebNavigation webNavigation = new nsIWebNavigation(result[0]);\t\t \t", "+\trc = webNavigation.Reload(nsIWebNavigation.LOAD_FLAGS_NONE);", "+\tif (rc != XPCOM.NS_OK) throw new SWTError(XPCOM.errorMsg(rc));\t", "+\twebNavigation.Release();"]}], "num": 12842}