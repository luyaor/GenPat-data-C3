{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e3597821e2cd306d1e16d9a54e1237b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a6a962299495a08182cc329ce190237", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "0b2dd8f10b95731440fc336b0817c8bf2fa61c57", "commitAfterChange": "86e590387fc98740eb431ea80c5942750b2c6d0c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\t\t\tPOINT pt = new POINT ();", "-\t\t\t\tpt.x = wParam == OS.VK_LEFT ? -step : step;", "+\t\t\t\tif (wParam == OS.VK_LEFT) step = -step;", "+\t\t\t\tif ((parent.style & SWT.MIRRORED) != 0) step = -step;", "-\t\t\t\tpt.y = wParam == OS.VK_UP ? -step : step;", "+\t\t\t\tif (wParam == OS.VK_UP) step = -step;", "-\t\t\tint /*long*/ hwndTrack = parent.handle;", "-\t\t\tOS.MapWindowPoints (handle, hwndTrack, pt, 1);", "-\t\t\tRECT rect = new RECT (), clientRect = new RECT ();", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint /*long*/ hwndTrack = parent.handle;", "+\t\t\tRECT clientRect = new RECT ();", "-\t\t\tint newX = lastX, newY = lastY;", "+\t\t\tOS.MapWindowPoints (0, hwndTrack, rect, 2);", "+\t\t\tPOINT cursorPt = new POINT ();", "+\t\t\tint newX = rect.left, newY = rect.top;", "-\t\t\t\tnewX = Math.min (Math.max (0, pt.x - startX), clientWidth - width);", "+\t\t\t\tcursorPt.x = newX = Math.min (Math.max (clientRect.left, newX + step), clientWidth - width);", "+\t\t\t\tcursorPt.y = rect.top + height / 2; ", "-\t\t\t\tnewY = Math.min (Math.max (0, pt.y - startY), clientHeight - height);", "+\t\t\t\tcursorPt.x = rect.left + width / 2;", "+\t\t\t\tcursorPt.y = newY = Math.min (Math.max (clientRect.top, newY + step), clientHeight - height);", "-\t\t\tif (newX == lastX && newY == lastY) return result;", "+\t\t\tif (newX == rect.left && newY == rect.top) return result;", "-\t\t\tPOINT cursorPt = new POINT ();", "-\t\t\tcursorPt.x = pt.x;  cursorPt.y = pt.y;", "-\t\t\tif ((style & SWT.VERTICAL) != 0) {", "-\t\t\t\tcursorPt.y += height / 2;", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tcursorPt.x += width / 2;", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41b2df9c90147f3513a68e39ec45e49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 186, "signatureBeforeChange": " int getTextPosition(String line, int lineIndex, int length, GC gc)", "signatureAfterChange": " int getXAtOffset(String line, int lineIndex, int offsetInLine)", "diff": ["- */", "-int getTextPosition(String line, int lineIndex, int length, GC gc) {", "-\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\tint lineLength = line.length();", "-\tint width;", "-\tif (lineLength == 0 || length > lineLength) {", "-\t\treturn 0;", "-\t}\t", "-\tif (isBidi()) {", "-\t\tStyledTextBidi bidi = getStyledTextBidi(line, lineOffset, gc, null);", "-\t\twidth = getBidiTextPosition(line, length, bidi);", "-\t}", "-\telse {", "-\t\tStyledTextEvent event = renderer.getLineStyleData(lineOffset, line);", "-\t\tStyleRange[] styles = null;", "-\t\tif (event != null) {", "-\t\t\tstyles = renderer.filterLineStyles(event.styles);", "-\t\t}", "-\t\twidth = renderer.getTextPosition(line, lineOffset, length, styles, gc);", "-\t}", "-\treturn width;", "-}", "+int getXAtOffset(String line, int lineIndex, int offsetInLine) {", "+\tint x  = 0;", "+\tint lineLength = line.length();", "+\tif (lineLength != 0  && offsetInLine <= lineLength) {", "+\t\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\t\tStyledTextEvent event = renderer.getLineStyleData(lineOffset, line);", "+\t\tTextLayout layout = renderer.getTextLayout(line, lineOffset, event);", "+\t\tif (!advancing || offsetInLine == 0) {", "+\t\t\tx = layout.getLocation(offsetInLine, SWT.LEAD).x;", "+\t\t} else {", "+\t\t\tx = layout.getLocation(offsetInLine - 1, SWT.TRAIL).x;", "+\t\trenderer.disposeTextLayout(layout, event);", "+\treturn x + leftMargin - horizontalScrollOffset;"]}], "num": 39781}