{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5f75fe8a9ecffb9ed514615c38584cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0ebf2362d39a016ee91c9acaf4a2b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "650deb026c998b07523a6424f11db72ac0bd1b3a", "commitAfterChange": "0e8780fecdad08e13acf40e49af437762eff1854", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "  static byte[] getJSLibPathBytes ()", "signatureAfterChange": "  static byte[] getJSLibPathBytes ()", "diff": ["-\t\tString jsLibraryName = IsPre_4 ? MozillaDelegate.getJSLibraryName_Pre4 () : MozillaDelegate.getJSLibraryName ();", "-\t\tString mozillaPath = getMozillaPath () + jsLibraryName + '\\0';", "-\t\ttry {", "-\t\t\tjsLibPathBytes = mozillaPath.getBytes (\"UTF-8\"); //$NON-NLS-1$", "-\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\tjsLibPathBytes = mozillaPath.getBytes ();", "+\t\tString[] names = IsPre_4 ? new String[] {MozillaDelegate.getJSLibraryName_Pre4 ()} : MozillaDelegate.getJSLibraryNames ();", "+\t\tfor (int i = 0; i < names.length; i++) {", "+\t\t\tFile file = new File (getMozillaPath (), names[i]);", "+\t\t\tif (file.exists ()) {", "+\t\t\t\tString pathString = file.getAbsolutePath () + '\\0';", "+\t\t\t\ttry {", "+\t\t\t\t\tjsLibPathBytes = pathString.getBytes (\"UTF-8\"); //$NON-NLS-1$", "+\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\tjsLibPathBytes = pathString.getBytes ();", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2190f4c870b0ef3479c07d9fea4d1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "454d6a5c1a3f7cb78ffb95180849ad2b69623071", "commitAfterChange": "b84d7d116f98b7b51b98d6c79a1f0ff2a142d0ea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\tImage image = new Image(null, 16, 16);", "-\tImageData imageData = image.getImageData ();", "-\timage.dispose ();", "+\tImageData id= new ImageData(16, 16, 2, ", "+\t\tnew PaletteData(", "+\t\t\tnew RGB[] {", "+\t\t\t\tnew RGB(0, 0, 0), ", "+\t\t\t\tnew RGB(128, 128, 128)", "+\t\t\t}", "+\t\t)", "+\t);", "+\tid.transparentPixel= 0;\t\t\t// use black for transparency", "+\t", "+\tfor (int y= 2; y < 14; y++) ", "+\t\tfor (int x= 2; x < 14; x++)", "+\t\t\tif (x == 2 || x == 13 || y == 2 || y == 13)", "+\t\t\t\tid.setPixel(x, y, 1);", "+\t\t\t\t", "+\t//Image im= new Image(null, id);", "+\t//id= im.getImageData();", "-\treturn imageData;", "+\treturn id;"]}], "num": 32024}