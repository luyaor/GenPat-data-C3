{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b30e269c84b84598109d49b163fa3f6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12bc4bbc3435f73a9c4aaf0134f6406f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "127bba6a909ad945f005187919e91ef0a83e72d4", "commitAfterChange": "00171fd8749bdc5e9161c8fe70f71ada4c213851", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t* are cleared.  This code also runs in the case when no item is selected.", "+\t* are cleared.  This code also runs in the case when the white space", "+\t* below the last item is selected.", "+\t", "+\t/* Process the mouse when an item is not selected */", "+\tif ((style & SWT.FULL_SELECTION) == 0) {", "+\t\tif ((lpht.flags & OS.TVHT_ONITEM) == 0) {", "+\t\t\tDisplay display = this.display;", "+\t\t\tdisplay.captureChanged = false;", "+\t\t\tif (!sendMouseEvent (SWT.MouseDown, 1, handle, OS.WM_LBUTTONDOWN, wParam, lParam)) {", "+\t\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t\t}", "+\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t}", "+\t\t\tint code = callWindowProc (handle, OS.WM_LBUTTONDOWN, wParam, lParam);", "+\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t}", "+\t\t\treturn new LRESULT (code);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64d610fcdaa7f608f73190423af3109", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "8279a8b06331b103825d014a5f212fc818455bf3", "commitAfterChange": "9747fcc7eb584ce2c813fb0967618ef7da3ebd5c", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\tDisplay display = this.display;", "+\t\tdisplay.captureChanged = false;", "-\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t}", "-\t\tif (dragStarted && OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\tif (dragStarted) {", "+\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t}", "+\t\t}", "+\t\t\tDisplay display = this.display;", "+\t\t\tdisplay.captureChanged = false;", "-\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t\t}", "-\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t\t}", "+\tDisplay display = this.display;", "+\tdisplay.captureChanged = false;", "-\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t}", "-\tif (dragStarted && OS.GetCapture () != handle) OS.SetCapture (handle);", "+\tif (dragStarted) {", "+\t\tif (!display.captureChanged && !isDisposed ()) {", "+\t\t\tif (OS.GetCapture () != handle) OS.SetCapture (handle);", "+\t\t}", "+\t}"]}], "num": 57447}