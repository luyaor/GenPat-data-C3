{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6be0b8dda99098de3f3b25af6cb206d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "280e544de222983bc1ef7cbdbaa4bdb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "d5e012b1070396caffdf72fd112844991f566742", "commitAfterChange": "fa9fc8c2db1d4c3168296996b34f6fa0a6bb0145", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int gtk_key_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int event)", "diff": ["-\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "+\t\tif (!hasFocus ()) return 0;", "+\t\tint /*long*/ result = super.gtk_key_press_event (widget, event);", "+\t\tif (result != 0) return result;", "+\t\tint index = 0;", "+\t\twhile (index < itemCount) {", "+\t\t\tif (items [index].hasFocus ()) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tGdkEventKey gdkEvent = new GdkEventKey ();", "+\t\tOS.memmove (gdkEvent, event, GdkEventKey.sizeof);", "+\t\tboolean next = false;", "+\t\tswitch (gdkEvent.keyval) {", "+\t\t\tcase OS.GDK_Up:", "+\t\t\tcase OS.GDK_Left: next = false; break;", "+\t\t\tcase OS.GDK_Down: ", "+\t\t\tcase OS.GDK_Right: next = true; break;", "+\t\t\tdefault: return result;", "+\t\t}", "+\t\tint start = index, offset = next ? 1 : -1;", "+\t\twhile ((index = (index + offset + itemCount) % itemCount) != start) {", "+\t\t\tExpandItem item = items [index];", "+\t\t\tif (item.setFocus ()) return result;", "+\t\t}", "+\t\treturn result;", "+\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f4c1a596c4380ef7d11987441b52926", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e3ffa03ceaf7703e7ab3292990f53dd9ebc09848", "commitAfterChange": "bad1afba2bae87fcb485bb971088066d4ff1a6e9", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 109, "signatureBeforeChange": "\r \r boolean traverseItem (boolean next)", "signatureAfterChange": "\r \r boolean traverseItem (boolean next)", "diff": ["-\tif (next) return OS.PtContainerFocusPrev (handle, null) != 0;\r", "-\treturn OS.PtContainerFocusNext (handle, null) != 0;\r", "+\tControl [] children = parent._getChildren ();\r", "+\tint length = children.length;\r", "+\tint index = 0;\r", "+\twhile (index < length) {\r", "+\t\tif (children [index] == this) break;\r", "+\t\tindex++;\r", "+\t}\r", "+\t/*\r", "+\t* It is possible (but unlikely), that application\r", "+\t* code could have disposed the widget in focus in\r", "+\t* or out events.  Ensure that a disposed widget is\r", "+\t* not accessed.\r", "+\t*/\r", "+\tint start = index, offset = (next) ? 1 : -1;\r", "+\twhile ((index = (index + offset + length) % length) != start) {\r", "+\t\tControl child = children [index];\r", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {\r", "+\t\t\tif (child.setTabItemFocus ()) return true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r"]}], "num": 6138}