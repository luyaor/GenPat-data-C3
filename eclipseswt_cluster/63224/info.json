{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b1abc8771418ff3d3dec6469d2845f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "731f9a92259e7360e7809aa5b715003b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "commitAfterChange": "43cccb7c09eeeeb743e40d795384af951511f59c", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 141, "signatureBeforeChange": "  boolean traverseItem (boolean next)", "signatureAfterChange": "  boolean traverseItem (boolean next)", "diff": ["+\tControl [] children = parent._getChildren ();", "+\tint length = children.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (children [index] == this) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\t*/", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = (index + offset + length) % length) != start) {", "+\t\tControl child = children [index];", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {", "+\t\t\tif (child.setTabItemFocus ()) return true;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1e34d4a718398654edcb271916f926", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "0ad0a601d34f9b89eab0eb65f5e8c1953894af48", "commitAfterChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 137, "signatureBeforeChange": " boolean traverseItem (boolean next)", "signatureAfterChange": "  boolean traverseItem (boolean next)", "diff": ["+", "-\t/* AW", "-\treturn OS.XmProcessTraversal (handle, next ? OS.XmTRAVERSE_NEXT : OS.XmTRAVERSE_PREV);", "+\tControl [] children = parent._getChildren ();", "+\tint length = children.length;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tif (children [index] == this) break;", "+\t\tindex++;", "+\t}", "+\t/*", "+\t* It is possible (but unlikely), that application", "+\t* code could have disposed the widget in focus in", "+\t* or out events.  Ensure that a disposed widget is", "+\t* not accessed.", "+\tint start = index, offset = (next) ? 1 : -1;", "+\twhile ((index = (index + offset + length) % length) != start) {", "+\t\tControl child = children [index];", "+\t\tif (!child.isDisposed () && child.isTabItem ()) {", "+\t\t\tif (child.setTabItemFocus ()) return true;", "+\t\t}", "+\t}"]}], "num": 63224}