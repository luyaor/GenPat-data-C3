{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3e6af0c5273b7efcd5e02ad5a94da89", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ec5a8aa80855098f095c1cb268aef1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "272967205f3824ec29456112026262c64ae69dfa", "commitAfterChange": "fc62fa389f9358a82d98c59fbeba910f7ca8c593", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 183, "signatureBeforeChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "diff": ["-\tint code = callWindowProc (OS.WM_KILLFOCUS, wParam, lParam);", "-\tsendFocusEvent (SWT.FocusOut);", "-\t// widget could be disposed at this point", "-\t", "-\t/*", "-\t* It is possible (but unlikely), that application", "-\t* code could have disposed the widget in the focus", "-\t* or deactivate events.  If this happens, end the", "-\t* processing of the Windows message by returning", "-\t* zero as the result of the window proc.", "-\t*/", "-\tif (isDisposed ()) return LRESULT.ZERO;", "-\tif (code == 0) return LRESULT.ZERO;", "-\treturn new LRESULT (code);", "+\treturn wmKillFocus (handle, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "853e0f0297ca2932730df0811c85a24b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "d33484b9dbd12f2a7ff228ba91793eb6670c1b90", "commitAfterChange": "c87a5d4ce2af0b5ea3e58ec96efd5580540e6648", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r LRESULT WM_SETCURSOR (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SETCURSOR (int wParam, int lParam)", "diff": ["-\tint code = callWindowProc (OS.WM_SETCURSOR, wParam, lParam);\r", "-\tswitch (code) {\r", "-\t\tcase 0:\r", "-\t\t\tint hitTest = lParam & 0xFFFF;\r", "-\t \t\tif (hitTest == OS.HTCLIENT) {\r", "-\t\t\t \tint hCursor;\r", "-\t\t\t \tif ((style & SWT.HORIZONTAL) != 0) {\r", "-\t\t\t\t\thCursor = OS.LoadCursor (0, OS.IDC_SIZENS);\r", "-\t\t\t \t} else {\r", "-\t\t\t\t\thCursor = OS.LoadCursor (0, OS.IDC_SIZEWE);\r", "-\t\t\t \t}\r", "-\t\t\t\tOS.SetCursor (hCursor);\r", "-\t\t\t\treturn LRESULT.ONE;\r", "-\t \t\t}\r", "-\t \t\treturn LRESULT.ZERO;\r", "-\t\tcase 1: return LRESULT.ONE;\r", "+\tint hitTest = lParam & 0xFFFF;\r", "+ \tif (hitTest == OS.HTCLIENT) {\r", "+\t \tint hCursor = 0;\r", "+\t \tif ((style & SWT.HORIZONTAL) != 0) {\r", "+\t\t\thCursor = OS.LoadCursor (0, OS.IDC_SIZENS);\r", "+\t \t} else {\r", "+\t\t\thCursor = OS.LoadCursor (0, OS.IDC_SIZEWE);\r", "+\t \t}\r", "+\t\tOS.SetCursor (hCursor);\r", "+\t\treturn LRESULT.ONE;\r", "-\treturn new LRESULT (code);\r", "+\treturn result;\r"]}], "num": 10351}