{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "227daf348fc97ea3963df41533156862", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d85fb205bfea862eff4a1d3cb95b1995", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "589c1ec7b77d39c8770bf37f2bb671074c60dc5b", "commitAfterChange": "8d27542b5364358690f55f77bc0c995713708d46", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\tif (fileName == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\tboolean quote = true;", "-\tString prefix = command, suffix = \"\";", "-\tint index = command.indexOf (\"%1\");", "-\tif (index != -1) {", "-\t\tint count=0;", "-\t\tint i=index + 2, length = command.length ();", "-\t\twhile (i < length) {", "-\t\t\tif (command.charAt (i) == '\"') count++;", "-\t\t\ti++;", "+\tif (fileName == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\t", "+\t/* Parse the command into its individual arguments. */", "+\tString[] args = parseCommand(command);", "+\tint fileArg = -1;", "+\tint index;", "+\tfor (index = 0; index < args.length; index++) {", "+\t\tint j = args[index].indexOf(\"%f\");", "+\t\tif (j != -1) {", "+\t\t\tString value = args[index];", "+\t\t\tfileArg = index;", "+\t\t\targs[index] = value.substring(0, j) + fileName + value.substring(j + 2);", "-\t\tquote = count % 2 == 0;", "-\t\tprefix = command.substring (0, index);", "-\t\tsuffix = command.substring (index + 2, length);", "-\tif (quote) fileName = \" \\\"\" + fileName + \"\\\"\";", "+", "+\t/* If a file name was given but the command did not have \"%f\" */", "+\tif ((fileName.length() > 0) && (fileArg < 0)) {", "+\t\tString[] newArgs = new String[args.length + 1];", "+\t\tfor (index = 0; index < args.length; index++) newArgs[index] = args[index];", "+\t\tnewArgs[args.length] = fileName;", "+\t\targs = newArgs;", "+\t}", "+", "+\t/* Execute the command. */", "-\t\tCompatibility.exec(prefix + fileName + suffix);", "+\t\tCompatibility.exec(args);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54af98d07fbf99d81982d35ecd28b238", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "559381e6aebbbbe94fd89c518367406b7a1d9aac", "commitAfterChange": "95ac9fb91c3ddffa50ff43dafc84c86aaf5f1968", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 43, "signatureBeforeChange": "  void _setText (String string)", "signatureAfterChange": " public void setText (int index, String string)", "diff": ["-void _setText (String string) {", "-\tint hwnd = parent.handle;", "-\tint hHeap = OS.GetProcessHeap ();", "-\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, true);", "-\tint byteCount = buffer.length () * TCHAR.sizeof;", "-\tint pszText = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tOS.MoveMemory (pszText, buffer, byteCount); ", "-\tTVITEM tvItem = new TVITEM ();", "-\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "-\ttvItem.hItem = handle;", "-\ttvItem.pszText = pszText;", "-\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "-\tOS.HeapFree (hHeap, 0, pszText);", "-}", "+ */", "+public void setText (int index, String string) {", "+\tcheckWidget();", "+\tif (string == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\tif (index == 0) {", "+\t\tif (string.equals (text)) return;", "+\t\tsuper.setText (string);", "+\t}", "+\tint count = Math.max (1, parent.getColumnCount ());", "+\tif (0 > index || index > count - 1) return;", "+\tif (strings == null && index != 0) strings = new String [count];", "+\tif (strings != null) {", "+\t\tif (string.equals (strings [index])) return;", "+\t\tstrings [index] = string;", "+\t}", "+\tif (index == 0) {", "+\t\tint hwnd = parent.handle;", "+\t\tTVITEM tvItem = new TVITEM ();", "+\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_TEXT;", "+\t\ttvItem.hItem = handle;", "+\t\ttvItem.pszText = OS.LPSTR_TEXTCALLBACK;", "+\t\tOS.SendMessage (hwnd, OS.TVM_SETITEM, 0, tvItem);", "+\t} else {", "+\t\tredraw (index, true, false);", "+\t}"]}], "num": 13627}