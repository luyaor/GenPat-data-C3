{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "12aaddbcd7b8f713b80c1a53c0095e17", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8370fee92be42193ce5521cad505246e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "606053bd685bca0d5cb127d4c4280db09c08af31", "commitAfterChange": "9ee2a7fe3d31efd1bbaa8109583dbc7f3b9cbc47", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private String interpretOsAnswer(int dialog)", "signatureAfterChange": " private String interpretOsAnswer(int dialog)", "diff": ["-\tString separator = System.getProperty (\"file.separator\");", "-\t", "+\tString separator= System.getProperty (\"file.separator\");", "-\tint[] tmp= new int[1];", "-\tOS.NavDialogGetReply(dialog, tmp);", "-\tint reply= tmp[0];", "-\t", "-\tint selection= OS.NavReplyRecordGetSelection(reply);", "-\tOS.AECountItems(selection, tmp);", "-\tint count= tmp[0];", "+\tNavReplyRecord record= new NavReplyRecord();", "+\tOS.NavDialogGetReply(dialog, record);", "+\tAEDesc selection= new AEDesc();", "+\tselection.descriptorType= record.selection_descriptorType;", "+\tselection.dataHandle= record.selection_dataHandle;", "+\tint[] theCount = new int[1];", "+\tOS.AECountItems(selection, theCount);", "+\tint count= theCount[0];", "-\tif (count > 0) {", "-\t\tString fileName= null;", "+\tif (count == 0) {", "+\t\tfileNames= null;", "+\t} else {", "+\t\tint maximumSize = 80; // size of FSRef", "+\t\tint dataPtr= OS.NewPtr(maximumSize);", "-\t\t\tOS.AEGetNthPtr(selection, i+1, tmp);", "-\t\t\tString fullPath= MacUtil.getStringAndRelease(tmp[0]);", "-\t\t\tif (firstResult == null)", "-\t\t\t\tfirstResult= fullPath;", "-\t\t\tif (fullPath != null && fullPath.length() > 0) {", "-\t\t\t\tint separatorIndex= fullPath.lastIndexOf(separator);", "-\t\t\t\tif (separatorIndex >= 0) {", "-\t\t\t\t\tfileName= fullPath.substring(separatorIndex+separator.length());", "-\t\t\t\t\tString fp= fullPath.substring(0, separatorIndex);", "-\t\t\t\t\tif (commonPath == null)", "-\t\t\t\t\t\tcommonPath= fp;\t// remember common filterPath", "-\t\t\t\t\telse {", "-\t\t\t\t\t\tif (!commonPath.equals(fp))\t// verify that filterPath is in fact common", "-\t\t\t\t\t\t\tSystem.out.println(\"FileDialog.getPaths: mismatch in filterPaths\");", "+\t\t\tint[] aeKeyword= new int[1];", "+\t\t\tint[] typeCode= new int[1];", "+\t\t\tint[] actualSize= new int[1];", "+\t\t\tint status= OS.AEGetNthPtr(selection, i+1, OS.typeFSRef, aeKeyword, typeCode, dataPtr, maximumSize, actualSize);", "+\t\t\tif (status == OS.noErr && typeCode[0] == OS.typeFSRef) {", "+\t\t\t\tbyte[] fsRef= new byte[actualSize[0]];", "+\t\t\t\tOS.memcpy(fsRef, dataPtr, actualSize[0]);", "+\t\t\t\tint url= OS.CFURLCreateFromFSRef(OS.kCFAllocatorDefault, fsRef);", "+\t\t\t\tint shandle= OS.CFURLCopyFileSystemPath(url, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\tString fullPath= MacUtil.getStringAndRelease(shandle);", "+\t\t\t\tif (firstResult == null)", "+\t\t\t\t\tfirstResult= fullPath;", "+\t\t\t\tif (fullPath != null && fullPath.length() > 0) {", "+\t\t\t\t\tString fileName= null;", "+\t\t\t\t\tint separatorIndex= fullPath.lastIndexOf(separator);", "+\t\t\t\t\tif (separatorIndex >= 0) {", "+\t\t\t\t\t\tfileName= fullPath.substring(separatorIndex+separator.length());", "+\t\t\t\t\t\tString fp= fullPath.substring(0, separatorIndex);", "+\t\t\t\t\t\tif (commonPath == null)", "+\t\t\t\t\t\t\tcommonPath= fp;\t// remember common filterPath", "+\t\t\t\t\t\telse {", "+\t\t\t\t\t\t\tif (!commonPath.equals(fp)) // verify that filterPath is in fact common", "+\t\t\t\t\t\t\t\tSystem.out.println(\"FileDialog.getPaths: mismatch in filterPaths\");", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tfileName= fullPath;", "-\t\t\t\t} else {", "-\t\t\t\t\tfileName= fullPath;", "+\t\t\t\t\tfileNames[i]= fileName;", "-\t\t\t\tfileNames[i]= fileName;", "-\t} else {", "-\t\tfileNames= null;", "+\t\tOS.DisposePtr(dataPtr);", "-\tif (commonPath != null)", "-\t\tfilterPath= commonPath;", "-\telse", "-\t\tfilterPath= \"\";", "-\t", "-\tOS.NavDialogDisposeReply(reply);", "+\tfilterPath= (commonPath != null) ? commonPath : \"\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "151e81386fc94e19c7dce9cb6b9e6b5d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/DirectoryDialog.java", "commitBeforeChange": "606053bd685bca0d5cb127d4c4280db09c08af31", "commitAfterChange": "9ee2a7fe3d31efd1bbaa8109583dbc7f3b9cbc47", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private String interpretOsAnswer(int dialog)", "signatureAfterChange": " private String interpretOsAnswer(int dialog)", "diff": ["-\tint[] tmp= new int[1];", "-\tOS.NavDialogGetReply(dialog, tmp);", "-\tint reply= tmp[0];", "+\tString result= null;", "+\tNavReplyRecord record= new NavReplyRecord();", "+\tOS.NavDialogGetReply(dialog, record);", "+\tAEDesc selection= new AEDesc();", "+\tselection.descriptorType= record.selection_descriptorType;", "+\tselection.dataHandle= record.selection_dataHandle;", "+\tint[] count= new int[1];", "+\tOS.AECountItems(selection, count);", "-\tint selection= OS.NavReplyRecordGetSelection(reply);", "-\tOS.AECountItems(selection, tmp);", "-\tint count= tmp[0];", "-\t", "-\tif (count > 0) {", "-\t\tOS.AEGetNthPtr(selection, 1, tmp);", "-\t\treturn MacUtil.getStringAndRelease(tmp[0]);", "+\tif (count[0] > 0) {", "+\t\tint[] theAEKeyword = new int[1];", "+\t\tint[] typeCode = new int[1];", "+\t\tint maximumSize = 80; // size of FSRef", "+\t\tint dataPtr = OS.NewPtr(maximumSize);", "+\t\tint[] actualSize = new int[1];", "+\t\tint status = OS.AEGetNthPtr(selection, 1, OS.typeFSRef, theAEKeyword, typeCode, dataPtr, maximumSize, actualSize);", "+\t\tif (status == OS.noErr && typeCode[0] == OS.typeFSRef) {", "+\t\t\tbyte[] fsRef = new byte[actualSize[0]];", "+\t\t\tOS.memcpy(fsRef, dataPtr, actualSize[0]);", "+\t\t\tint anURL= OS.CFURLCreateFromFSRef(OS.kCFAllocatorDefault, fsRef);", "+\t\t\tint shandle= OS.CFURLCopyFileSystemPath(anURL, OS.kCFURLPOSIXPathStyle);", "+\t\t\tresult= MacUtil.getStringAndRelease(shandle);", "+\t\t}", "+\t\tOS.DisposePtr(dataPtr);", "-\treturn null;", "+\treturn result;"]}], "num": 47446}