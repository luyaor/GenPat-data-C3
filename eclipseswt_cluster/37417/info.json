{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f1c7aa2c199be7ad63e2e7eb4a87c19", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad56cff87d0900b86f03cc88ce6eef43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "1338b222e8fc4ec17a59048d25fbe907c6449246", "commitAfterChange": "3af337e8a4ee357dca7904022351ca6f859cc723", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void selectAll()", "signatureAfterChange": " public void selectAll()", "diff": ["-\tfor (int i = 0; i < availableItems.length; i++) {", "-\t\tavailableItems[i].selected = true;", "-\t}", "+\tif ((style & SWT.SINGLE) != 0) return;", "+\t", "+\tTreeItem2[] items = getAllItems();", "+\tselectedItems = new TreeItem2[items.length];", "+\tSystem.arraycopy(items, 0, selectedItems, 0, items.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e72aacd4b1eed2882512cf8d53cfb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/motif/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "e98339cc7fb1c72d59ae0703dfdb477f6c4de9c5", "commitAfterChange": "697358ce3235fa7c9f7df6b81c2eaac5ddca47d9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static PrinterData[] getPrinterList()", "signatureAfterChange": " static PrinterData[] getEnvPrinterList(String server)", "diff": ["-public static PrinterData[] getPrinterList() {\r", "-\t// TEMPORARY CODE\r", "-\tif (true) return new PrinterData[0];\r", "-\t\r", "-\t/* Connect to the default X print server */\r", "-\tbyte [] buffer = Converter.wcsToMbcs(null, XDefaultPrintServer, true);\r", "-\tint xtContext = OS.XtCreateApplicationContext ();\r", "-\tint pdpy =  OS.XtOpenDisplay (xtContext, buffer, null, null, 0, 0, new int [] {0}, 0);\r", "-\tif (pdpy == 0) {\r", "-\t\t/* no print server */\r", "-\t\treturn new PrinterData[0];\r", "-\t}\r", "-\r", "-\t/* Get the list of printers */\r", "-\tint [] listCount = new int[1];\r", "-\tint plist = OS.XpGetPrinterList(pdpy, null, listCount);\r", "-\tint printerCount = listCount[0];\r", "-\tif (plist == 0 || printerCount == 0) {\r", "-\t\t/* no printers */\r", "-\t\t//OS.XCloseDisplay(pdpy);\r", "-\t\treturn new PrinterData[0];\r", "-\t}\r", "-    \r", "-\t/* Copy the printer names into PrinterData objects */\r", "-\tint [] stringPointers = new int [printerCount * 2];\r", "-\tOS.memmove(stringPointers, plist, printerCount * 2 * 4);\r", "-\tPrinterData printerList[] = new PrinterData[printerCount];\r", "-\tfor (int i = 0; i < printerCount; i++) {\r", "-\t\tString name = \"\";\r", "-\t\tint address = stringPointers[i * 2];\r", "-\t\tif (address != 0) {\r", "-\t\t\tint length = OS.strlen(address);\r", "-\t\t\tbuffer = new byte [length];\r", "-\t\t\tOS.memmove(buffer, address, length);\r", "-\t\t\t/* Use the character encoding for the default locale */\r", "-\t\t\tname = new String(Converter.mbcsToWcs(null, buffer));\r", "-\t\t}\r", "-\t\tprinterList[i] = new PrinterData(XDefaultPrintServer, name);\r", "-\t}\r", "-\tOS.XpFreePrinterList(plist);\r", "-\tOS.XtDestroyApplicationContext (xtContext);\r", "-\treturn printerList;\r", "-}\r", "+ */", "+static PrinterData[] getEnvPrinterList(String server) {", "+\tbyte[] buffer = Converter.wcsToMbcs(null, server, true);", "+\tint pdpy = OS.XOpenDisplay (buffer);", "+\tif (pdpy == 0) return new PrinterData[0];", "+", "+\t/* Get the list of printers */", "+\tint[] count = new int[1];", "+\tint plist = OS.XpGetPrinterList(pdpy, null, count);", "+\tint printerCount = count[0];", "+\tif (plist == 0 || printerCount == 0) {", "+\t\tOS.XCloseDisplay(pdpy);", "+\t\tif (plist != 0) OS.XpFreePrinterList(plist);", "+\t\treturn new PrinterData[0];\t\t", "+\t}", "+    ", "+\t/* Copy the printer names into PrinterData objects */", "+\tint[] stringPointers = new int[printerCount * 2];", "+\tOS.memmove(stringPointers, plist, printerCount * 2 * 4);", "+\tPrinterData printerList[] = new PrinterData[printerCount];", "+\tfor (int i = 0; i < printerCount; i++) {", "+\t\tString name = \"\";", "+\t\tint address = stringPointers[i * 2];", "+\t\tif (address != 0) {", "+\t\t\tint length = OS.strlen(address);", "+\t\t\tbuffer = new byte [length];", "+\t\t\tOS.memmove(buffer, address, length);", "+\t\t\tname = new String(Converter.mbcsToWcs(null, buffer));", "+\t\t}", "+\t\tprinterList[i] = new PrinterData(server, name);", "+\t}", "+\tOS.XCloseDisplay(pdpy);\t", "+\tOS.XpFreePrinterList(plist);\t", "+\treturn printerList;", "+}"]}], "num": 37417}