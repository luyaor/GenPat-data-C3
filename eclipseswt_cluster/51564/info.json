{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18138ee77f073d04bda9ac9cc311dec7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb831e03cc144c372191425957387ea3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void select (int [] indices)", "signatureAfterChange": " public void select (int [] indices)", "diff": ["-    /* AW", "+\t\t/* AW", "+\t\t*/", "-    */", "-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-    /* AW", "-\tfor (int i=0; i<indices.length; i++) {", "-\t\tint index = indices [i] + 1;", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ca080fe2c10ea45f37b8ab30a39913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void select (int start, int end)", "signatureAfterChange": " public void select (int start, int end)", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-\t/* AW", "-\tfor (int i=start; i<=end; i++) {", "-\t\tint index = i + 1;", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\t*/", "-    /* AW", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= end-start+1;", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(start+i);", "-\t\tids[i]= p.fId;", "-\t}", "+    int[] ids= getIds(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb3f0806b53a55fa94a299c5c4f5381", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0, OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-\tfor (int i=0; i<argList[3]; i++) {", "-\t\tint index = i + 1;", "-\t\tif (!OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= fData.size();", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(i);", "-\t\tids[i]= p.fId;", "-\t}", "+\tint n= fData.size();", "+\tif (n <= 0) return;", "+\tint[] ids= getIds(0, n-1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d829190dee40a07e2caf8c70ba1c454a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void select (int index)", "signatureAfterChange": " public void select (int index)", "diff": ["-    /* AW", "-\tif (OS.XmListPosSelected (handle, index + 1)) return;", "-    */", "-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPost () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-    /* AW", "-\tOS.XmListSelectPos (handle, index + 1, false);", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tOS.SetDataBrowserSelectedItems(handle, 1, new int[] { p.fId }, OS.kDataBrowserItemsAssign);", "+    if (p != null)", "+\t\tOS.SetDataBrowserSelectedItems(handle, 1, new int[] { p.fId }, OS.kDataBrowserItemsAssign);"]}], "num": 51564}