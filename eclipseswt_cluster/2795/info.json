{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af7e83d4a49a3322b74dc131bef20095", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bd506c45d58d24d627abf7dc22d0264", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1c055a44e1eadebc040cb65824bd32170f63ed4b", "commitAfterChange": "a4f053fcee887bb5f05cb7b17f5e4cad6fef3ef0", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  public boolean readAndDispatch ()", "signatureAfterChange": "  public boolean readAndDispatch ()", "diff": ["-\t\tif (eventClass != WAKE_CLASS || eventKind != WAKE_KIND) return true;", "+\t\t/*", "+\t\t* Feature in the Macintosh.  When an indeterminate progress", "+\t\t* bar is running, it floods the event queue with messages in", "+\t\t* order to show the animation.  This means that async messages", "+\t\t* will never run because there are always messages from the", "+\t\t* operating system.  The fix is to run async messages when ever", "+\t\t* there is a wake message.", "+\t\t*", "+\t\t* NOTE:  This is not the correct behavior.  Operating system", "+\t\t* message are supposed to have priority over async messages.", "+\t\t*/", "+\t\tif (eventClass == WAKE_CLASS && eventKind == WAKE_KIND) {", "+\t\t\trunAsyncMessages ();", "+\t\t}\t\t", "+\t\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88890c2897a2eb67787a403bf54fc69c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "08b35427b630b058d33816f10064b6c3de68a1f4", "commitAfterChange": "b103fd807559d48c897b2c2c3616c607a2d74179", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void redraw (int x, int y, int width, int height, boolean all)", "signatureAfterChange": " public void redraw (int x, int y, int width, int height, boolean all)", "diff": ["-\tif (width <= 0 || height <= 0) return;", "-\tredrawWidget (x, y, width, height, all);", "+\tif (width > 0 && height > 0) {", "+\t\tredrawWidget (x, y, width, height, false, all);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e25a5f492897141a8095c071d554fd4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "06fa7cab52230e33d5260a6b87c9954d5d2e2afa", "commitAfterChange": "5f39a3e398ba24020daab3db35a758e585dae7a9", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\tGdkRectangle rect = new GdkRectangle ();", "-\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "-\tif (rect.y != 0 || rect.height != 0) return;", "-\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.5f);", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, rect);", "+\t\tif (rect.y == 0 && rect.height == 0) {", "+\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.5f);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122a5f5c835d9c6cfdfe542de9fc6a30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/SelectableItemWidget.java", "commitBeforeChange": "533121ae7dfc12a2cbef11e3b6e04ad92ced0ac4", "commitAfterChange": "b5b39d02a0265bc8c9cb1511c5709dc5c9a1e1ed", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r void doMouseSelect(SelectableItem item, int itemIndex, int eventStateMask, int button)", "signatureAfterChange": "\r void doMouseSelect(SelectableItem item, int itemIndex, int eventStateMask, int button)", "diff": ["+\tif (button != 1 && item.isSelected() == true) {\r", "+\t\t// If the item is already selected, do not change the selection when using \r", "+\t\t// button 2 or 3.  These buttons may invoke drag and drop or open the \r", "+\t\t// context menu for the current selection.\r", "+\t\treturn;\r", "+\t}\r", "-\tif (((eventStateMask & (SWT.MOD3 | SWT.MOD4)) == 0) && (button != 3 || item.isSelected() == false)) {\r", "-\t\t// only select the item (and deselect all others) if the mouse click is \r", "-\t\t// not a button 3 click or if a previously unselected item was clicked.\r", "-\t\t// Fixes 1G97L65\r", "+\tif ((eventStateMask & (SWT.MOD3 | SWT.MOD4)) == 0) {\r", "+\t\t// On MacOSX, holding the control key down while pressing button 1 brings up the context menu.\r", "+\t\t// Do not change the selection in this case.\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58daded031983e625996e25a7aa5e038", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "4e33ab6a6b184887de2c99db0f551ffeb18ad0f6", "commitAfterChange": "8edb26f7765e14b1b7eb8e23e69c89af78088ea8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "signatureAfterChange": "  void createItem (TreeItem item, int hParent, int hInsertAfter)", "diff": ["-\t* indicator.  The fix is to detect this case and force a redraw.", "+\t* indicator.  The fix is to detect the case when the first", "+\t* child is added to a visible parent item and redraw the parent.", "-\tif (hChild == 0 || OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) != 0) {", "-\t\treturn;", "-\t}", "-\tRECT rect = new RECT ();", "-\trect.left = hParent;", "-\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "-\t\tOS.InvalidateRect (handle, rect, false);", "+\tif (hChild != 0 && OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXT, hChild) == 0) {", "+\t\tRECT rect = new RECT ();", "+\t\trect.left = hParent;", "+\t\tif (OS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect) != 0) {", "+\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287c4602f9f1c64413a2192d06f1026f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9da76fa592a484a15f121fdf2a35999495858b74", "commitAfterChange": "a9bfeb2f50fd033496ceaa2a91cb6b4511633217", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int foregroundIdleProc (int code, int wParam, int lParam)", "signatureAfterChange": "  int foregroundIdleProc (int code, int wParam, int lParam)", "diff": ["-\tif (runMessages) {", "-\t\tif (code >= 0) {", "-\t\t\tif (getMessageCount () != 0) {", "-\t\t\t\tif (runMessagesInIdle) {", "+\tif (code >= 0) {", "+\t\tif (runMessages && getMessageCount () != 0) {", "+\t\t\tif (runMessagesInIdle) {", "+\t\t\t\tif (runMessagesInMessageProc) {", "+\t\t\t\t} else {", "+\t\t\t\t\trunAsyncMessages (false);", "-\t\t\t\twakeThread ();", "+\t\t\twakeThread ();"]}], "num": 2795}