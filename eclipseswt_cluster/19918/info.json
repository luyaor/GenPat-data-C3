{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d23f8c2cf6fafa109b65e79588317ba9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e65cd5d15df78f8bcfa54fce838147aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "945c1cc261907e14df240a9f3eb0dc64798447dc", "commitAfterChange": "2ad54625b601b561f7dbb454803881294bcd0a92", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "signatureAfterChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "diff": ["-\t// Don't perform anti-aliasing on Mac because the platform", "+\t// Don't perform anti-aliasing on Mac and WPF because the platform", "-\tif (simple || \"carbon\".equals(SWT.getPlatform())) return; //$NON-NLS-1$", "+\tif (simple || \"carbon\".equals(SWT.getPlatform()) || \"wpf\".equals(SWT.getPlatform())) return; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd909986f51ac1339adb6f4213d22ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "b31eac98309a1d4b14512588653b3bbcac2e3407", "commitAfterChange": "439b15f8a85a9ab4e8b77de55180416acc30dcb4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "signatureAfterChange": " void antialias (int[] shape, RGB lineRGB, RGB innerRGB, RGB outerRGB, GC gc)", "diff": ["+\t//don't perform anti-aliasing on Mac because the platform", "+\t// already does it.", "+\tif (\"carbon\".equals(SWT.getPlatform())) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12664036059d222db1fd248be4bdebb5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "0451987d39d3b7a8edf9732c12a98161ebfdd578", "commitAfterChange": "27f0b3bdff9ae153a9d53cf6ae79755ae3c1e1b1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void generateSelectorsConst() throws Exception", "signatureAfterChange": "  public void generateSelectorsConst() throws Exception", "diff": ["-\t\t\tif (\"class\".equals(node.getNodeName())) {", "+\t\t\tif (\"class\".equals(node.getNodeName()) || \"informal_protocol\".equals(node.getNodeName())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593034ff09abb5b4e0af8e9d2208d409", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/internal/awt/SWT_AWT.java", "commitBeforeChange": "92aa0fec2473a32a0983f7b949e90272fe8e3070", "commitAfterChange": "fcfbb1d1dcfd77e9015fae74357f421a3eca90ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Frame new_Frame (final Composite parent)", "signatureAfterChange": "  public static Frame new_Frame (final Composite parent)", "diff": ["-\tfinal Frame frame = (Frame) value;\t", "-\tparent.addListener (SWT.Activate, new Listener () {", "-\t\tpublic void handleEvent (Event e) {", "-\t\t\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "-\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\tpublic void run () {", "-\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_ACTIVATED));", "-\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_GAINED));", "-\t\t\t\t}", "-\t\t\t});", "-\t\t}", "-\t});", "-\tparent.addListener (SWT.Deactivate, new Listener () {", "-\t\tpublic void handleEvent (Event e) {", "-\t\t\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "-\t\t\tEventQueue.invokeLater(new Runnable () {", "-\t\t\t\tpublic void run () {", "-\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEACTIVATED));", "-\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_LOST));", "-\t\t\t\t}", "-\t\t\t});", "-\t\t}", "-\t});", "+\tfinal Frame frame = (Frame) value;", "+\t/* Needed to fix focus for lightweights in JDK 1.3.1 */", "+\tif (\"1.3\".equals(System.getProperty(\"java.specification.version\"))) {", "+\t\tparent.addListener (SWT.Activate, new Listener () {", "+\t\t\tpublic void handleEvent (Event e) {", "+\t\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_ACTIVATED));", "+\t\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_GAINED));", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t});", "+\t\tparent.addListener (SWT.Deactivate, new Listener () {", "+\t\t\tpublic void handleEvent (Event e) {", "+\t\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t\t\t\t\tpublic void run () {", "+\t\t\t\t\t\tframe.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEACTIVATED));", "+\t\t\t\t\t\tframe.dispatchEvent (new FocusEvent (frame, FocusEvent.FOCUS_LOST));", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t}", "+\t\t});", "+\t}"]}], "num": 19918}