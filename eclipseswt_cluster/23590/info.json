{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a89ad37265df6fcc16083035d6fbf328", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2592dc5045adb16b69b7deb793d609e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 399, "signatureBeforeChange": " public static final native void gtk_signal_handler_unblock_by_data(int object, int data);", "signatureAfterChange": " public static final native void gtk_text_buffer_get_iter_at_line(int buffer, byte[] iter, int line_number);", "diff": ["-public static final native void gtk_signal_handler_block_by_func(int object, int func, int data);", "-public static final native void gtk_signal_handler_unblock_by_data(int object, int data);", "+public static final native int gtk_text_buffer_get_insert(int buffer);", "+public static final native void gtk_text_buffer_get_iter_at_line(int buffer, byte[] iter, int line_number);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af83dc49729126a5f7c13d66bc5ff549", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 17, "signatureBeforeChange": " public static final native int AEProcessAppleEvent(EventRecord theEventRecord);", "signatureAfterChange": " \tpublic static native void AEProcessAppleEvent(int[] eventData);", "diff": ["+\tpublic static native void GetMouse(short[] where);", "+\tpublic static native void AEProcessAppleEvent(int[] eventData);", "-public static final native int AEGetNthPtr(AEDesc theAEDescList, int index, int desiredType, int[] theAEKeyword, int[] typeCode, int dataPtr, int maximumSize, int[] actualSize);", "-public static final native int AEProcessAppleEvent(EventRecord theEventRecord);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b21b34fdb269768b500a05469a8f15bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 414, "signatureBeforeChange": " public static final native int GetAvailableWindowPositioningBounds(int inDevice, Rect outAvailableRect);", "signatureAfterChange": " \tpublic static native int GetAvailableWindowPositioningBounds(int gHandle, short[] mainScreenRect);", "diff": ["-public static final native int GetAvailableWindowAttributes(int windowClass);", "-public static final native int GetAvailableWindowPositioningBounds(int inDevice, Rect outAvailableRect);", "+\tpublic static native int GetCaretTime();", "+\tpublic static native int GetAvailableWindowPositioningBounds(int gHandle, short[] mainScreenRect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63fb8ceb898fb7b69d98f13a8749830f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 390, "methodNumberAfterChange": 346, "signatureBeforeChange": " public static final native void TXNClick(int iTXNObject, EventRecord iEvent);", "signatureAfterChange": " \tpublic static native void TXNClick(int txHandle, int[] eventData);", "diff": ["-public static final native int TXNActivate(int txHandle, int frameID, boolean scrollBarState);", "-public static final native void TXNClick(int iTXNObject, EventRecord iEvent);", "+\tpublic static native void TXNKeyDown(int txHandle, int[] eventData);", "+\tpublic static native void TXNClick(int txHandle, int[] eventData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c194f30151f0c907d2cb232627c3fc7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "e2e7896b3cf0e9c97f6038a8e9fe8cfb357377bf", "commitAfterChange": "d2e697ac12d333462fab7aa686c0fbe95379eed0", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 66, "signatureBeforeChange": " public static final native void g_signal_connect(int handle, String eventName, int proc, int swtEvent);", "signatureAfterChange": " public static final native void g_signal_connect(int instance, byte[] detailed_signal, int proc, int data);", "diff": ["-public static final native void g_signal_connect(int handle, String eventName, int proc, int swtEvent);", "+public static final native int g_quark_from_string(byte[] string);", "+public static final native void g_signal_connect(int instance, byte[] detailed_signal, int proc, int data);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ff73bb616b7e162d45fa9ea556be9a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 274, "methodNumberAfterChange": 376, "signatureBeforeChange": " public static final native int NavDialogGetReply(int inDialog, NavReplyRecord outReply);", "signatureAfterChange": " \t \tpublic static native int NavDialogGetReply(int dialogHandle, int[] replyHandle);", "diff": ["-public static final native int NavGetDefaultDialogCreationOptions(NavDialogCreationOptions outOptions);", "-public static final native int NavDialogGetReply(int inDialog, NavReplyRecord outReply);", "+\t", "+\tpublic static native int NavDialogGetReply(int dialogHandle, int[] replyHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d5a80d1185d77b1e0bd8c21ec0fa89", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 416, "signatureBeforeChange": " \tpublic static native int RevealDataBrowserItem(int cHandle, int itemID, int colID, boolean center);", "signatureAfterChange": " public static final native int RevealDataBrowserItem(int browser, int item, int property, byte options);", "diff": ["+public static final native int RetainMenu(int mHandle);", "+public static final native int RevealDataBrowserItem(int browser, int item, int property, byte options);", "-\tpublic static native int GetDataBrowserItems(int cHandle, int container, boolean recurse, int state, int handle);", "-\tpublic static native int RevealDataBrowserItem(int cHandle, int itemID, int colID, boolean center);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e20d460cd6e25ba44452473a31a0f78d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/OS.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 412, "methodNumberAfterChange": 261, "signatureBeforeChange": " public static final native short TestControl(int control, Point point);", "signatureAfterChange": " \tpublic static native short TestControl(int cHandle, short[] where);", "diff": ["-public static final native void TXNShowSelection(int txHandle, boolean showEnd);", "-public static final native short TestControl(int control, Point point);", "+\t//public static native int FindControlUnderMouse(short[] where, int windowHandle, short[] cpart);", "+\tpublic static native short TestControl(int cHandle, short[] where);"]}], "num": 23590}