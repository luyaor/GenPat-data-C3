{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "280232c5b0b3813ba0386f4800ab6b9f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9822c85684ae477f4432b462fd5f43b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 106, "signatureBeforeChange": "  void onTextVerify(Event event)", "signatureAfterChange": "  private String keyToString (int key)", "diff": ["-void onTextVerify(Event event) {", "-\tif (ignoreVerify) return;", "-\tevent.doit = false;", "-\tString newText = event.text;", "-\t\tString[] ampm = formatSymbols.getAmPmStrings();", "-\t\tif (newText.equalsIgnoreCase(ampm[Calendar.AM].substring(0, 1)) || newText.equalsIgnoreCase(ampm[Calendar.AM])) {", "-\t\t\tsetTextField(fieldName, Calendar.AM, true, false);", "-\t\t} else if (newText.equalsIgnoreCase(ampm[Calendar.PM].substring(0, 1)) || newText.equalsIgnoreCase(ampm[Calendar.PM])) {", "-\t\t\tsetTextField(fieldName, Calendar.PM, true, false);", "-\t\treturn;", "-\t\t\tInteger.parseInt(newText);", "-\t\t\treturn;", "-\t\tString value = text.getText(start, end - 1);", "-\t\tint s = value.lastIndexOf(' ');", "-\t\tif (s != -1) value = value.substring(s + 1);", "-\tint newTextLength = newText.length();", "-\tint max = calendar.getActualMaximum(fieldName);", "-\tint min = calendar.getActualMinimum(fieldName);", "-\tint newValue = unformattedIntValue(fieldName, newText, characterCount == 0, max);", "-\t\treturn;", "-\t\tsetTextField(fieldName, newValue, false, false);", "-\t\tsetTextField(fieldName, newValue, characterCount == 0, characterCount == 0);", "-\t\t\tnewText = newText.substring(newTextLength - length + 1);", "-\t\t\tnewValue = unformattedIntValue(fieldName, newText, characterCount == 0, max);", "-\t\t\t\t\tsetTextField(fieldName, newValue, characterCount == 0, true);", "+private String keyToString (int key) {", "+\t//If numberpad keys were pressed.", "+\tif (key >= OS.GDK_KP_0 && key <= OS.GDK_KP_9) {", "+\t\t //convert numberpad button to regular key;", "+\t\tkey -= 65408;", "+\t}", "+\tchar keyChar = (char) key;", "+\treturn \"\"+ keyChar;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3eb8a546939dc917ee62474854164d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "106e75d0005b8da98a4f16e00227f3cd79357c2e", "commitAfterChange": "dff636e5b88fb3260b1e860ad0eb2c57a3c776e3", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": "  void onVerify(Event event)", "signatureAfterChange": "  void onVerify(Event event)", "diff": ["-\t\t\tsetTextField(fieldName, Calendar.AM, true);", "+\t\t\tsetTextField(fieldName, Calendar.AM, true, false);", "-\t\t\tsetTextField(fieldName, Calendar.PM, true);", "+\t\t\tsetTextField(fieldName, Calendar.PM, true, false);", "+\tboolean first = characterCount == 0;", "-\ttry {", "-\t\tint max = calendar.getActualMaximum(fieldName);", "-\t\tint min = calendar.getActualMinimum(fieldName);", "-\t\tint newValue = Integer.parseInt(newText);", "-\t\tif (min <= newValue && newValue <= max) {", "-\t\t\tsetTextField(fieldName, newValue, characterCount == 0);", "-\t\t} else {", "-\t\t\tif (newTextLength >= length) {", "-\t\t\t\tnewText = newText.substring(newTextLength - length + 1);", "-\t\t\t\tnewValue = Integer.parseInt(newText);", "+\tint max = calendar.getActualMaximum(fieldName);", "+\tint min = calendar.getActualMinimum(fieldName);", "+\tint newValue = newValue(fieldName, newText, max);", "+\tif (first && newValue == 0 && length > 1) {", "+\t\tsetTextField(fieldName, newValue, false, false);", "+\t} else if (min <= newValue && newValue <= max) {", "+\t\tsetTextField(fieldName, newValue, characterCount == 0, characterCount == 0);", "+\t} else {", "+\t\tif (newTextLength >= length) {", "+\t\t\tnewText = newText.substring(newTextLength - length + 1);", "+\t\t\tnewValue = newValue(fieldName, newText, max);", "+\t\t\tif (newValue != -1) {", "-\t\t\t\t\tsetTextField(fieldName, newValue, characterCount == 0);", "+\t\t\t\t\tsetTextField(fieldName, newValue, characterCount == 0, true);", "-\t} catch (NumberFormatException ex) {", "+}"]}], "num": 44256}