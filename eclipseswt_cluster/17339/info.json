{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f60275a8d712492b2694b054d67c51e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57892bf19e24a268ef694b0b94b35382", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tstatic int initTextIfaceCB (int iface)", "signatureAfterChange": "  \tstatic int initTextIfaceCB (int iface)", "diff": ["-\t\tAtkTextIface textInterface = new AtkTextIface ();", "-\t\tATK.memmove (textInterface, iface);", "-\t\ttextInterface.get_caret_offset = AtkTextCB_get_caret_offset.getAddress ();", "-\t\ttextInterface.get_character_at_offset = AtkTextCB_get_character_at_offset.getAddress ();", "-\t\ttextInterface.get_character_count = AtkTextCB_get_character_count.getAddress ();", "-\t\ttextInterface.get_n_selections = AtkTextCB_get_n_selections.getAddress ();", "-\t\ttextInterface.get_selection = AtkTextCB_get_selection.getAddress ();", "-\t\ttextInterface.get_text = AtkTextCB_get_text.getAddress ();", "-\t\ttextInterface.get_text_after_offset = AtkTextCB_get_text_after_offset.getAddress ();", "-\t\ttextInterface.get_text_at_offset = AtkTextCB_get_text_at_offset.getAddress ();", "-\t\ttextInterface.get_text_before_offset = AtkTextCB_get_text_before_offset.getAddress ();", "-\t\tATK.memmove (iface, textInterface);", "+\t\tAtkTextIface inter = new AtkTextIface ();", "+\t\tATK.memmove (inter, iface);", "+\t\tinter.get_range_extents = AtkTextCB_get_range_extents.getAddress ();", "+\t\tinter.get_character_extents = AtkTextCB_get_character_extents.getAddress ();", "+\t\tinter.get_run_attributes= AtkTextCB_get_run_attributes.getAddress ();", "+\t\tinter.get_offset_at_point = AtkTextCB_get_offset_at_point.getAddress ();", "+\t\tinter.add_selection = AtkTextCB_add_selection.getAddress ();", "+\t\tinter.remove_selection = AtkTextCB_remove_selection.getAddress ();", "+\t\tinter.set_selection = AtkTextCB_set_selection.getAddress ();", "+\t\tinter.get_caret_offset = AtkTextCB_get_caret_offset.getAddress ();", "+\t\tinter.set_caret_offset = AtkTextCB_set_caret_offset.getAddress ();", "+\t\tinter.get_character_at_offset = AtkTextCB_get_character_at_offset.getAddress ();", "+\t\tinter.get_character_count = AtkTextCB_get_character_count.getAddress ();", "+\t\tinter.get_n_selections = AtkTextCB_get_n_selections.getAddress ();", "+\t\tinter.get_selection = AtkTextCB_get_selection.getAddress ();", "+\t\tinter.get_text = AtkTextCB_get_text.getAddress ();", "+\t\tinter.get_text_after_offset = AtkTextCB_get_text_after_offset.getAddress ();", "+\t\tinter.get_text_at_offset = AtkTextCB_get_text_at_offset.getAddress ();", "+\t\tinter.get_text_before_offset = AtkTextCB_get_text_before_offset.getAddress ();", "+\t\tinter.get_bounded_ranges = AtkTextCB_get_bounded_ranges.getAddress ();", "+\t\tATK.memmove (iface, inter);", "+\t\treturn 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d18c34a8bf8cd027ea9d1f0d555f7a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "  void hookDOMListeners (nsIDOMEventTarget target, boolean isTop)", "signatureAfterChange": "  void hookDOMListeners (nsIDOMEventTarget target, boolean isTop)", "diff": ["+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_UNLOAD);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEDOWN);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEUP);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEMOVE);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEWHEEL);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEDRAG);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+", "+\t/*", "+\t* Only hook mouseover and mouseout if the target is a top-level frame, so that mouse moves", "+\t* between frames will not generate events.", "+\t*/", "+\tif (isTop && delegate.hookEnterExit ()) {", "+\t\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOVER);", "+\t\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\t\tstring.dispose ();", "+\t\tstring = new nsEmbedString (XPCOM.DOMEVENT_MOUSEOUT);", "+\t\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\t\tstring.dispose ();", "+\t}", "+", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_KEYDOWN);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_KEYPRESS);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+\tstring = new nsEmbedString (XPCOM.DOMEVENT_KEYUP);", "+\ttarget.AddEventListener (string.getAddress (), domEventListener.getAddress (), 0, 1, 0);", "+\tstring.dispose ();", "+}"]}], "num": 17339}