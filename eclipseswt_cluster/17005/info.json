{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b0a204329936773fbba242fc9353308", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1658ac96b1d98c045d54577d979210", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a7de4846f5a8ca34d2102fbbd3cec597a2526f95", "commitAfterChange": "f870c19ec0df867558fe7d123f95a12aed947f50", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " void redrawItems (int start, int end)", "signatureAfterChange": " void redrawItems (int startIndex, int endIndex, boolean column0only)", "diff": ["-void redrawItems (int start, int end) {", "-\tRectangle bounds = getClientArea ();", "-\tint startY = (start - topIndex) * itemHeight + getHeaderHeight ();", "-\tint height = (end - start + 1) * itemHeight;", "-\tredraw (0, startY, bounds.width, height, false);", "+void redrawItems (int startIndex, int endIndex, boolean column0only) {", "+\tint startY = (startIndex - topIndex) * itemHeight + getHeaderHeight ();", "+\tint height = (endIndex - startIndex + 1) * itemHeight;", "+\tif (column0only) {", "+\t\tint width = 0;", "+\t\tif (columns.length == 0) {", "+\t\t\twidth = getClientArea ().width;", "+\t\t} else {", "+\t\t\tTreeColumn column = columns [0];", "+\t\t\twidth = column.getWidth () - horizontalOffset;", "+\t\t\tif (width <= 0) return;\t/* first column not visible */", "+\t\t}", "+\t\tredraw (0, startY, width, height, false);", "+\t} else {", "+\t\tRectangle bounds = getClientArea ();", "+\t\tredraw (0, startY, bounds.width, height, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0626e9dccb8b0d259e2453903b4eaf5e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "df8a4da2474ec27d44dd9bf3c18656531315af28", "commitAfterChange": "3948aca4aa89cc34878784a1e16b92c3a36713a0", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " void redrawItems (int startIndex, int endIndex, boolean column0only)", "signatureAfterChange": " void redrawItems (int startIndex, int endIndex, boolean focusBoundsOnly)", "diff": ["-void redrawItems (int startIndex, int endIndex, boolean column0only) {", "+void redrawItems (int startIndex, int endIndex, boolean focusBoundsOnly) {", "-\tif (column0only) {", "-\t\tint width = 0;", "-\t\tif (columns.length == 0) {", "-\t\t\twidth = getClientArea ().width;", "-\t\t} else {", "-\t\t\tTreeColumn column = columns [0];", "-\t\t\twidth = column.width - horizontalOffset;", "-\t\t\tif (width <= 0) return;\t/* first column not visible */", "+\tif (focusBoundsOnly) {", "+\t\tif (columns.length > 0) {", "+\t\t\tint rightX = columns [0].width - horizontalOffset;", "+\t\t\tif (rightX <= 0) return;\t/* first column not visible */", "-\t\tredraw (0, startY, width, height, false);", "+\t\tendIndex = Math.min (endIndex, availableItems.length - 1);", "+\t\tfor (int i = startIndex; i <= endIndex; i++) {", "+\t\t\tRectangle bounds = availableItems [i].getFocusBounds ();", "+\t\t\tredraw (bounds.x, startY, bounds.width, height, false);", "+\t\t}"]}], "num": 17005}