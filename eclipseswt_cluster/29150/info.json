{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f06b951d9ec066a313e45f2365655165", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07b85c7c50878ceb278637d6c170e0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "c9b810c1536ad8f7aba1954c07c88beda01f74dc", "commitAfterChange": "6280582456173ac3d0cc9390487719209aaed8a2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tvoid hookExampleWidgetListeners ()", "signatureAfterChange": "\r \tvoid hookExampleWidgetListeners ()", "diff": ["-\t\tControl[] exampleControls = getExampleWidgets();\r", "-\t\tListener listener = new Listener() {\r", "-\t\t\tpublic void handleEvent (Event event) {\r", "-\t\t\t\tinstance.log (event);\r", "-\t\t\t}\r", "-\t\t};\r", "-\t\tfor (int i = 0; i < exampleControls.length; i++) {\r", "-\t\t\tControl control = exampleControls [i];\r", "-\t\t\tfor (int j = SWT.KeyDown; j < SWT.HardKeyUp; j++) {\r", "-\t\t\t\tcontrol.addListener (j, listener);\r", "+\t\tif (instance.isLogging()) {\r", "+\t\t\tControl[] exampleControls = getExampleWidgets();\r", "+\t\t\tListener listener = new Listener() {\r", "+\t\t\t\tpublic void handleEvent (Event event) {\r", "+\t\t\t\t\tinstance.log (event);\r", "+\t\t\t\t}\r", "+\t\t\t};\r", "+\t\t\tfor (int i = 0; i < exampleControls.length; i++) {\r", "+\t\t\t\tControl control = exampleControls [i];\r", "+\t\t\t\tfor (int j = SWT.KeyDown; j < SWT.HardKeyUp; j++) {\r", "+\t\t\t\t\tcontrol.addListener (j, listener);\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f220c439166a2a7c79c3aa9195d3b30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet188.java", "commitBeforeChange": "a2edcdf0aa84117adb452b80e73ce3bac2db370a", "commitAfterChange": "6a16525bdab6bf22e73fb43c92df223ddd8a5ef8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main (String [] args)", "signatureAfterChange": " \t public static void main (String [] args)", "diff": ["-", "-\tListener listener = new Listener() {", "-\t\tpublic void handleEvent(Event e) {", "-\t\t\tControl child = (Control)e.widget;", "-\t\t\tRectangle bounds = child.getBounds();", "-\t\t\tRectangle area = sc.getClientArea();", "-\t\t\tPoint origin = sc.getOrigin();", "-\t\t\tif (origin.x > bounds.x) origin.x = Math.max(0, bounds.x);", "-\t\t\tif (origin.y > bounds.y) origin.y = Math.max(0, bounds.y);", "-\t\t\tif (origin.x + area.width < bounds.x + bounds.width) origin.x = Math.max(0, bounds.x + bounds.width - area.width);", "-\t\t\tif (origin.y + area.height < bounds.y + bounds.height) origin.y = Math.max(0, bounds.y + bounds.height - area.height);", "-\t\t\tsc.setOrigin(origin);", "-\t\t}", "-\t};", "-\tControl[] controls = c.getChildren();", "-\tfor (int i = 0; i < controls.length; i++) {", "-\t\tcontrols[i].addListener(SWT.Activate, listener);", "-\t}", "-", "+\tsc.setAutoScroll(true);", "+\t"]}], "num": 29150}