{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d446d92263c945893185197c81f1d27", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd997c254ebe0a2137321f310c62d9da", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacEvent.java", "commitBeforeChange": "0726cb3689f5099a0f847c034c272c70a2df86d0", "commitAfterChange": "89ec86e5f0d8e570210071e954822f97c2522afb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t \tpublic int getKeyCode()", "signatureAfterChange": " \t \tpublic static int getKeyCode(int eRefHandle)", "diff": ["-\t\t", "-\t\tif (fEventRef != -1) {", "-\t\t\tint[] keyCode= new int[1];", "-\t\t\tif (OS.GetEventParameter(fEventRef, OS.kEventParamKeyCode, OS.typeUInt32, null, null, keyCode) == OS.kNoErr)", "-\t\t\t\treturn keyCode[0];", "-\t\t}", "-\t\t", "-\t\t", "-\t\tconvert();", "-\t\tswitch (fData[0]) {", "-\t\tcase OS.keyDown:", "-\t\tcase OS.autoKey:", "-\t\tcase OS.keyUp:", "-\t\t\tint code= (fData[1] & OS.keyCodeMask) >> 8;", "-\t\t\tSystem.out.println(\" kcode: \" + code);", "-\t\t\treturn code;", "-\t\tdefault:", "-\t\t\tSystem.out.println(\"MacEvent.getKeyCode: wrong event type\");", "-\t\t\treturn 0;", "-\t\t}", "+\t", "+\tpublic static int getKeyCode(int eRefHandle) {", "+\t\tint[] keyCode= new int[1];", "+\t\tif (OS.GetEventParameter(eRefHandle, OS.kEventParamKeyCode, OS.typeUInt32, null, null, keyCode) == OS.kNoErr)", "+\t\t\treturn keyCode[0];", "+\t\tSystem.out.println(\"MacEvent.getMouseChord: getKeyCode error\");\t\t\t", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d3234f3cb05171d47bc34d5910e3832", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacEvent.java", "commitBeforeChange": "0726cb3689f5099a0f847c034c272c70a2df86d0", "commitAfterChange": "89ec86e5f0d8e570210071e954822f97c2522afb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic int getMacCharCodes()", "signatureAfterChange": "  \tpublic int getMacCharCodes()", "diff": ["-\t\tif (fEventRef != -1) {", "-\t\t\tbyte[] charCode= new byte[1];", "-\t\t\tif (OS.GetEventParameter(fEventRef, OS.kEventParamKeyMacCharCodes, OS.typeChar, null, null, charCode) == OS.kNoErr)\t", "-\t\t\t\treturn charCode[0];", "-\t\t}", "+\t\tif (fEventRef != -1)", "+\t\t\treturn getCharCode(fEventRef);", "-\t\t", "-\t\tconvert();", "-\t\tswitch (fData[0]) {", "-\t\tcase OS.keyDown:", "-\t\tcase OS.autoKey:", "-\t\tcase OS.keyUp:", "-\t\t\tbyte b= (byte)(fData[1] & OS.charCodeMask);", "-\t\t\t//System.out.println(\"char: \" + c);", "-\t\t\treturn b;", "-\t\tdefault:", "-\t\t\tSystem.out.println(\"MacEvent.getMacCharCodes: wrong event type\");", "-\t\t\tbreak;", "-\t\t}"]}], "num": 33451}