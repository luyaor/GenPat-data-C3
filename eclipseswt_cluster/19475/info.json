{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9ab5de82fa553c5c7b267421a6e579b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a1a0aee1540dc746b52897a4e84f2e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a38cdec12de35954521831ad0e8e78895c25ed1c", "commitAfterChange": "fa7c76641c503cd76fa7003bec8ccf78fc6288cd", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["+\t\tint /*long*/ hdc = gc.handle;", "+\t\tint state = 0;", "+\t\tint /*long*/ gdipGraphics = gc.getGCData().gdipGraphics;", "+\t\tif (gdipGraphics != 0) {", "+\t\t\tint /*long*/ clipRgn = 0;", "+\t\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeNone);", "+\t\t\tint /*long*/ rgn = Gdip.Region_new();", "+\t\t\tif (rgn == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tGdip.Graphics_GetClip(gdipGraphics, rgn);", "+\t\t\tif (!Gdip.Region_IsInfinite(rgn, gdipGraphics)) {", "+\t\t\t\tclipRgn = Gdip.Region_GetHRGN(rgn, gdipGraphics);", "+\t\t\t}", "+\t\t\tGdip.Region_delete(rgn);", "+\t\t\tGdip.Graphics_SetPixelOffsetMode(gdipGraphics, Gdip.PixelOffsetModeHalf);", "+\t\t\tfloat[] lpXform = null;", "+\t\t\tint /*long*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tif (matrix == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tGdip.Graphics_GetTransform(gdipGraphics, matrix);", "+\t\t\tif (!Gdip.Matrix_IsIdentity(matrix)) {", "+\t\t\t\tlpXform = new float[6];", "+\t\t\t\tGdip.Matrix_GetElements(matrix, lpXform);", "+\t\t\t}", "+\t\t\tGdip.Matrix_delete(matrix);", "+\t\t\thdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t\t\tstate = OS.SaveDC(hdc);", "+\t\t\tif (lpXform != null) {", "+\t\t\t\tOS.SetGraphicsMode(hdc, OS.GM_ADVANCED);", "+\t\t\t\tOS.SetWorldTransform(hdc, lpXform);", "+\t\t\t}", "+\t\t\tif (clipRgn != 0) {", "+\t\t\t\tOS.SelectClipRgn(hdc, clipRgn);", "+\t\t\t\tOS.DeleteObject(clipRgn);", "+\t\t\t}", "+\t\t}", "-\t\tprintWidget (topHandle, gc);", "+\t\tprintWidget (topHandle, hdc, gc);", "+\t\t}", "+\t\tif (gdipGraphics != 0) {", "+\t\t\tOS.RestoreDC(hdc, state);", "+\t\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f18215780f0204bab60cc53211d9aee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "deba00683b7e799ad97b05b6dcbb1d19c053de72", "commitAfterChange": "f295d81c96c5f0cad60547a25236d1a3bb649162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection, RECT clipRect, int alpha)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection, RECT clipRect, int alpha)", "diff": ["-\t\t\t\tcase SWT.UNDERLINE_ERROR:", "-\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "-\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x - run.underlineThickness, underlineY, run.width, run.underlineThickness * 2);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\t}", "+\t\t\t\tcase UNDERLINE_IME_THICK:", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x - run.underlineThickness, underlineY, run.width, run.underlineThickness * 2);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase UNDERLINE_IME_DOT:", "+\t\t\t\tcase UNDERLINE_IME_DASH: {", "+\t\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, 1);", "+\t\t\t\t\tint dashStyle = style.underlineStyle == UNDERLINE_IME_DOT ? Gdip.DashStyleDot : Gdip.DashStyleDash;", "+\t\t\t\t\tGdip.Pen_SetDashStyle(pen, dashStyle);", "+\t\t\t\t\tGdip.Graphics_DrawLine(graphics, pen, x, underlineY, x + run.width, underlineY);", "+\t\t\t\t\tGdip.Pen_delete(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\t\tcase SWT.UNDERLINE_ERROR:", "-\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "-\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "-\t\t\t\t\tOS.SetRect(rect, x, underlineY - run.underlineThickness, x + run.width, underlineY + run.underlineThickness);", "-\t\t\t\t\tif (clipRect != null) {", "-\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "-\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\t}", "+\t\t\t\tcase UNDERLINE_IME_THICK:", "+\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY - run.underlineThickness, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase UNDERLINE_IME_DASH:", "+\t\t\t\tcase UNDERLINE_IME_DOT: {", "+\t\t\t\t\tunderlineY = y + run.ascent + run.descent;", "+\t\t\t\t\tint penStyle = style.underlineStyle == UNDERLINE_IME_DASH ? OS.PS_DASH : OS.PS_DOT;", "+\t\t\t\t\tint /*long*/ pen = OS.CreatePen(penStyle, 1, colorRefUnderline);", "+\t\t\t\t\tint /*long*/ oldPen = OS.SelectObject(graphics, pen);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.MoveToEx(graphics, rect.left, rect.top, 0);", "+\t\t\t\t\tOS.LineTo(graphics, rect.right, rect.top);", "+\t\t\t\t\tOS.SelectObject(graphics, oldPen);", "+\t\t\t\t\tOS.DeleteObject(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}], "num": 19475}