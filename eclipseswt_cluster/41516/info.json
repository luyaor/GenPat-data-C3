{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "676b94c4e5f7468f6dfa42c5620116a3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80634ab5c852dc54d8bff9f51ebd014b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Download_1_8.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " int OnProgressChange64_32 (int aWebProgress, int aRequest, int aCurSelfProgress1, int aCurSelfProgress2, int aMaxSelfProgress1, int aMaxSelfProgress2, int aCurTotalProgress1, int aCurTotalProgress2, int aMaxTotalProgress1, int aMaxTotalProgress2)", "signatureAfterChange": " int OnProgressChange64_32 (long aWebProgress, long aRequest, long aCurSelfProgress1, long aCurSelfProgress2, long aMaxSelfProgress1, long aMaxSelfProgress2, long aCurTotalProgress1, long aCurTotalProgress2, long aMaxTotalProgress1, long aMaxTotalProgress2)", "diff": ["-int OnProgressChange64_32 (int /*long*/ aWebProgress, int /*long*/ aRequest, int /*long*/ aCurSelfProgress1, int /*long*/ aCurSelfProgress2, int /*long*/ aMaxSelfProgress1, int /*long*/ aMaxSelfProgress2, int /*long*/ aCurTotalProgress1, int /*long*/ aCurTotalProgress2, int /*long*/ aMaxTotalProgress1, int /*long*/ aMaxTotalProgress2) {", "+int OnProgressChange64_32 (long /*int*/ aWebProgress, long /*int*/ aRequest, long /*int*/ aCurSelfProgress1, long /*int*/ aCurSelfProgress2, long /*int*/ aMaxSelfProgress1, long /*int*/ aMaxSelfProgress2, long /*int*/ aCurTotalProgress1, long /*int*/ aCurTotalProgress2, long /*int*/ aMaxTotalProgress1, long /*int*/ aMaxTotalProgress2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc9f95944fa8f8580d3e9c559abc375", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " private int GetWindowContext(int ppFrame, int ppDoc, int lprcPosRect, int lprcClipRect, int lpFrameInfo)", "signatureAfterChange": " private int GetWindowContext(long ppFrame, long ppDoc, long lprcPosRect, long lprcClipRect, long lpFrameInfo)", "diff": ["-private int GetWindowContext(int /*long*/ ppFrame, int /*long*/ ppDoc, int /*long*/ lprcPosRect, int /*long*/ lprcClipRect, int /*long*/ lpFrameInfo) {\t", "+private int GetWindowContext(long /*int*/ ppFrame, long /*int*/ ppDoc, long /*int*/ lprcPosRect, long /*int*/ lprcClipRect, long /*int*/ lpFrameInfo) {\t", "-\tint /*long*/ iOleInPlaceFrame = frame.getIOleInPlaceFrame();", "-\tCOM.MoveMemory(ppFrame, new int /*long*/[] {iOleInPlaceFrame}, OS.PTR_SIZEOF);", "+\tlong /*int*/ iOleInPlaceFrame = frame.getIOleInPlaceFrame();", "+\tCOM.MoveMemory(ppFrame, new long /*int*/[] {iOleInPlaceFrame}, OS.PTR_SIZEOF);", "-\tif (ppDoc != 0) COM.MoveMemory(ppDoc, new int /*long*/[] {0}, OS.PTR_SIZEOF);", "+\tif (ppDoc != 0) COM.MoveMemory(ppDoc, new long /*int*/[] {0}, OS.PTR_SIZEOF);", "-\t\tint /*long*/ hwnd = shell.handle;", "+\t\tlong /*int*/ hwnd = shell.handle;", "-\t\t\tint /*long*/ hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);", "+\t\t\tlong /*int*/ hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);"]}], "num": 41516}