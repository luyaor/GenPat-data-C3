{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39624c8b72ecec0f98b6492b5de3cd8b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3b03196c1f6643ebe72473b870c794", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "852f17f3e885ddde267886a8be3483ac6f27465d", "commitAfterChange": "3cdae47da159662ce7eb57e9a6b0f13f94eaec5c", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 145, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\t\tif (!IsPre_2) {", "-\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "-\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\t\tdomWindow.Release();", "-\t\t\t} else {", "-\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "-\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\t\tdomWindow.Release();", "-\t\t\t}", "+\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\trc = domWindow.QueryInterface (!IsPre_4 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_8_IID : nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\tdomWindow.Release();", "-\t\t\tif (!IsPre_2) {", "-\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "-\t\t\t\thookDOMListeners (target, isTop);", "-\t\t\t\ttarget.Release ();", "-\t\t\t} else {", "-\t\t\t\tnsIDOMEventTarget_1_9 target = new nsIDOMEventTarget_1_9 (result[0]);", "-\t\t\t\thookDOMListeners_1_9 (target, isTop);", "-\t\t\t\ttarget.Release ();", "-\t\t\t}", "+\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\thookDOMListeners (target, isTop);", "+\t\t\ttarget.Release ();", "-\t\t\t\tif (!IsPre_2) {", "-\t\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "-\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\t\t\tdomWindow.Release();", "-\t\t\t\t} else {", "-\t\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "-\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\t\t\tdomWindow.Release();", "-\t\t\t\t}", "+\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\t\trc = domWindow.QueryInterface (!IsPre_4 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_8_IID : nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tdomWindow.Release();", "-\t\t\t\tif (!IsPre_2) {", "-\t\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "-\t\t\t\t\thookDOMListeners (target, isTop);", "-\t\t\t\t\ttarget.Release ();", "-\t\t\t\t} else {", "-\t\t\t\t\tnsIDOMEventTarget_1_9 target = new nsIDOMEventTarget_1_9 (result[0]);", "-\t\t\t\t\thookDOMListeners_1_9 (target, isTop);", "-\t\t\t\t\ttarget.Release ();", "-\t\t\t\t}", "+\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\t\thookDOMListeners (target, isTop);", "+\t\t\t\ttarget.Release ();", "-\t\t\trc = domWindow.QueryInterface (!IsPre_2 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID : nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\trc = domWindow.QueryInterface (!IsPre_4 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_8_IID : nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\t\t\tif (!IsPre_2) {", "-\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "-\t\t\t\thookDOMListeners (target, isTop);", "-\t\t\t\ttarget.Release ();", "-\t\t\t} else {", "-\t\t\t\tnsIDOMEventTarget_1_9 target = new nsIDOMEventTarget_1_9 (result[0]);", "-\t\t\t\thookDOMListeners_1_9 (target, isTop);", "-\t\t\t\ttarget.Release ();", "-\t\t\t}", "+\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\thookDOMListeners (target, isTop);", "+\t\t\ttarget.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef7bcdafe2a2359ed198a48f130da28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["-\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "-\t\tint rc = progress.GetDOMWindow (result);", "-\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-\t\tnsIDOMWindow domWindow = new nsIDOMWindow (result[0]);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc;", "+\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\t\trc = progress.GetDOMWindow (window);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (window[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\t", "-\t\t\tboolean isTop = result[0] == domWindow.getAddress ();", "+\t\t\tboolean isTop = result[0] == window[0];", "-\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\tif (!IsPre_2) {", "+\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tdomWindow.Release();", "+\t\t\t} else {", "+\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "+\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tdomWindow.Release();", "+\t\t\t}", "-\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\tif (!IsPre_2) {", "+\t\t\t\tnsIDOMEventTarget_1_9 target = new nsIDOMEventTarget_1_9 (result[0]);", "+\t\t\t\thookDOMListeners_1_9 (target, isTop);", "+\t\t\t\ttarget.Release ();", "+\t\t\t} else {", "+\t\t\t\tnsIDOMEventTarget target = new nsIDOMEventTarget (result[0]);", "+\t\t\t\thookDOMListeners (target, isTop);", "+\t\t\t\ttarget.Release ();", "+\t\t\t}", "-\t\t\thookDOMListeners (target, isTop);", "-\t\t\ttarget.Release ();", "+\t\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\t\tnsIWebProgress progress = new nsIWebProgress (aWebProgress);", "+\t\t\t\trc = progress.GetDOMWindow (window);", "+\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\tif (window[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t\t\t\t", "-\t\t\t\tboolean isTop = result[0] == domWindow.getAddress ();", "+\t\t\t\tboolean isTop = result[0] == window[0];", "-\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\tif (!IsPre_2) {", "+\t\t\t\t\tnsIDOMWindow domWindow = new nsIDOMWindow (window[0]);", "+\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\t\tdomWindow.Release();", "+\t\t\t\t} else {", "+\t\t\t\t\tnsIDOMWindow_1_9 domWindow = new nsIDOMWindow_1_9 (window[0]);", "+\t\t\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\t\t\tdomWindow.Release();", "+\t\t\t\t}", "-\t\tdomWindow.Release ();", "-\t\t\trc = domWindow.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\trc = domWindow.QueryInterface (!IsPre_2 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID : nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);"]}], "num": 43954}