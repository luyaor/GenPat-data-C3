{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f02458f708286b156eeee5c49852ad37", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38093dd65feedf4461b88e2de2ec181e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "dcea0c610dfa44c11e1965e0b478fefec85b3799", "commitAfterChange": "86665697ecf47cfe40b87f4cc3274bf20abca5d7", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tprivate void internalSetBounds(int hndl, short[] bounds, int x, int y, int width, int height, boolean sizeChanged)", "signatureAfterChange": " \tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height)", "diff": ["-\tprivate void internalSetBounds(int hndl, short[] bounds, int x, int y, int width, int height, boolean sizeChanged) {", "+\tprivate void internalSetBounds(int hndl, MacRect oldBounds, int x, int y, int width, int height) {", "-\t\tOS.InvalWindowRect(wHandle, bounds);", "+\t\tOS.InvalWindowRect(wHandle, oldBounds.getData());", "-\t\t", "-\t\tif (sizeChanged) {", "-\t\t\thandleResize(hndl, x, y, width, height);", "-\t\t} else {", "-\t\t\tOS.SetControlBounds(hndl, newBounds.getData());", "-\t\t}", "-\t\t", "+\t\thandleResize(hndl, newBounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "041a92b06ca01684291736869326c936", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tif (OS.HIVIEW) attributes |= OS.kWindowCompositingAttribute;", "+\tattributes |= OS.kWindowCompositingAttribute;", "-\t\tif (OS.HIVIEW) {", "-\t\t\tOS.HIViewFindByID (shellHandle, OS.kHIViewWindowContentID (), theRoot);", "-\t\t\t/*", "-\t\t\t* Bug in the Macintosh.  When the window class is kMovableModalWindowClass or", "-\t\t\t* kModalWindowClass, HIViewFindByID() fails to find the control identified by", "-\t\t\t* kHIViewWindowContentID.  The fix is to call GetRootControl() if the call", "-\t\t\t* failed.", "-\t\t\t*/", "-\t\t\tif (theRoot [0] == 0) OS.GetRootControl (shellHandle, theRoot);\t\t", "-\t\t} else {", "-\t\t\tOS.CreateRootControl (shellHandle, theRoot);", "-\t\t\tOS.GetRootControl (shellHandle, theRoot);", "-\t\t}", "+\t\tOS.HIViewFindByID (shellHandle, OS.kHIViewWindowContentID (), theRoot);", "+\t\t/*", "+\t\t* Bug in the Macintosh.  When the window class is kMovableModalWindowClass or", "+\t\t* kModalWindowClass, HIViewFindByID() fails to find the control identified by", "+\t\t* kHIViewWindowContentID.  The fix is to call GetRootControl() if the call", "+\t\t* failed.", "+\t\t*/", "+\t\tif (theRoot [0] == 0) OS.GetRootControl (shellHandle, theRoot);\t\t"]}], "num": 28408}