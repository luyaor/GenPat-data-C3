{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2841321acaaf9099012d6fcee1dc4a3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08efbcf32125016e5b390922aa7344e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TaskItem.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void updateText ()", "signatureAfterChange": "  void updateText ()", "diff": ["-\tint /*long*/ hdc = OS.GetDC (0);", "+\tlong /*int*/ hdc = OS.GetDC (0);", "-\tint /*long*/ [] pBits = new int /*long*/ [1];", "-\tint /*long*/ hBitmap = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\tlong /*int*/ [] pBits = new long /*int*/ [1];", "+\tlong /*int*/ hBitmap = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\tint /*long*/ dstHdc = OS.CreateCompatibleDC (hdc);", "-\tint /*long*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "-\tint /*long*/ hMask = OS.CreateBitmap (width, height, 1, 1, null);", "+\tlong /*int*/ dstHdc = OS.CreateCompatibleDC (hdc);", "+\tlong /*int*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "+\tlong /*int*/ hMask = OS.CreateBitmap (width, height, 1, 1, null);", "-\tint /*long*/ maskHdc = OS.CreateCompatibleDC (hdc);", "-\tint /*long*/ oldMask = OS.SelectObject (maskHdc, hMask);", "+\tlong /*int*/ maskHdc = OS.CreateCompatibleDC (hdc);", "+\tlong /*int*/ oldMask = OS.SelectObject (maskHdc, hMask);", "-\tint /*long*/ oldBrush = OS.SelectObject (maskHdc, OS.GetStockObject (OS.BLACK_BRUSH));", "+\tlong /*int*/ oldBrush = OS.SelectObject (maskHdc, OS.GetStockObject (OS.BLACK_BRUSH));", "-\tint /*long*/ brush = OS.CreateSolidBrush (OS.GetSysColor (OS.COLOR_HIGHLIGHT));", "+\tlong /*int*/ brush = OS.CreateSolidBrush (OS.GetSysColor (OS.COLOR_HIGHLIGHT));", "-\tint /*long*/ hFont = 0, oldHFont = 0;", "+\tlong /*int*/ hFont = 0, oldHFont = 0;", "-\tint /*long*/ hIcon = OS.CreateIconIndirect (iconInfo);", "+\tlong /*int*/ hIcon = OS.CreateIconIndirect (iconInfo);", "-\tint /*long*/ mTaskbarList3 = parent.mTaskbarList3;", "-\tint /*long*/ hwnd = shell.handle;", "+\tlong /*int*/ mTaskbarList3 = parent.mTaskbarList3;", "+\tlong /*int*/ hwnd = shell.handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c08fb9ca8d41686f5f453f32f66fca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " void shape (final int hdc, final StyleItem run)", "signatureAfterChange": " void shape (final long hdc, final StyleItem run)", "diff": ["-void shape (final int /*long*/ hdc, final StyleItem run) {", "+void shape (final long /*int*/ hdc, final StyleItem run) {", "-\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap();", "-\t\tint /*long*/ hFont = OS.GetCurrentObject(hdc, OS.OBJ_FONT);", "-\t\tint /*long*/ newFont = 0;", "+\t\tlong /*int*/ hFont = OS.GetCurrentObject(hdc, OS.OBJ_FONT);", "+\t\tlong /*int*/ newFont = 0;", "-\t\t\tint /*long*/ ssa = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, OS.SCRIPT_STRING_ANALYSIS_sizeof());", "-\t\t\tint /*long*/ metaFileDc = OS.CreateEnhMetaFile(hdc, null, null, null);", "-\t\t\tint /*long*/ oldMetaFont = OS.SelectObject(metaFileDc, hFont);", "+\t\t\tlong /*int*/ ssa = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, OS.SCRIPT_STRING_ANALYSIS_sizeof());", "+\t\t\tlong /*int*/ metaFileDc = OS.CreateEnhMetaFile(hdc, null, null, null);", "+\t\t\tlong /*int*/ oldMetaFont = OS.SelectObject(metaFileDc, hFont);", "-\t\t\tint /*long*/ metaFile = OS.CloseEnhMetaFile(metaFileDc);", "+\t\t\tlong /*int*/ metaFile = OS.CloseEnhMetaFile(metaFileDc);", "-\t\t\t\tint /*long*/ metaFileEnumProc (int /*long*/ hDC, int /*long*/ table, int /*long*/ record, int /*long*/ nObj, int /*long*/ lpData) {", "+\t\t\t\tlong /*int*/ metaFileEnumProc (long /*int*/ hDC, long /*int*/ table, long /*int*/ record, long /*int*/ nObj, long /*int*/ lpData) {", "-\t\t\tint /*long*/ address = callback.getAddress();", "+\t\t\tlong /*int*/ address = callback.getAddress();", "-\t\t\t\t\t\t\tint /*long*/ pFont = getItemFont(pRun);", "+\t\t\t\t\t\t\tlong /*int*/ pFont = getItemFont(pRun);", "-\t\t\t\t\t\t\t\tint /*long*/ nFont = getItemFont(nRun);", "+\t\t\t\t\t\t\t\tlong /*int*/ nFont = getItemFont(nRun);", "-\t\t\t\tint /*long*/[] hNewFont = new int /*long*/[1];", "+\t\t\t\tlong /*int*/[] hNewFont = new long /*int*/[1];", "-\t\t\t\t\tint /*long*/ mLangFont = OS.CreateFontIndirect(logFont);", "-\t\t\t\t\tint /*long*/ oldFont = OS.SelectObject(hdc, mLangFont);", "+\t\t\t\t\tlong /*int*/ mLangFont = OS.CreateFontIndirect(logFont);", "+\t\t\t\t\tlong /*int*/ oldFont = OS.SelectObject(hdc, mLangFont);"]}], "num": 33790}