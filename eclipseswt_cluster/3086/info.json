{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6408f82d55a2baad099e28aca00ae8d6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabc95dbb5233b81726f8b55a80a70ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\treturn getAttribute (nextHandler, theEvent, userData);", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\tlistener.getChildren(event);", "+\t\t}", "+\t\tObject [] appChildren = event.children;", "+\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\tif (children != 0) {", "+\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\tOS.CFRelease(children);", "+\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}", "+\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2df386b71352b5273da7957ee485a5c0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tint getSubroleAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getSubroleAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\treturn getAttribute (nextHandler, theEvent, userData);", "-\t}", "+\t\tevent.detail = -1;", "+\t\tif (event.detail != -1) {", "+\t\t\tString appRole = roleToOs (event.detail);", "+\t\t\tint index = appRole.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tappRole = appRole.substring(index + 1);", "+\t\t\t\tint stringRef = stringToStringRef (appRole);", "+\t\t\t\tif (stringRef != 0) {", "+\t\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFStringRef, 4, new int [] {stringRef});", "+\t\t\t\t\tOS.CFRelease(stringRef);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn OS.noErr;", "+\t\t}", "+\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);", "+\t}"]}], "num": 3086}