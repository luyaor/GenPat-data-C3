{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a9d86d7785150bad4f44c9d646eb263", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302e720efcf1cf8bb4bc5d6535fbe73b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1e9a9b9a2f3b0161323b03292062cd8133cbbcb8", "commitAfterChange": "dec9fd8ce799a13104a343c8b185b7ed15925f00", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " int untranslateOffset(int offset)", "signatureAfterChange": " int untranslateOffset(int offset)", "diff": ["-\tif (ascent != -1 || descent != -1) {", "-\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\t\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "-\t\tif (iter == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint count = 0;", "-\t\tdo {", "-\t\t\tint bytePos = OS.pango_layout_iter_get_index(iter);", "-\t\t\tint pos = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + bytePos);", "-\t\t\tif (pos >= offset) break;", "-\t\t\tcount++;", "-\t\t} while (OS.pango_layout_iter_next_line(iter));", "-\t\tOS.pango_layout_iter_free (iter);", "-\t\toffset -= count;", "+\tif (invalidOffsets == null) return offset;", "+\tfor (int i = 0; i < invalidOffsets.length; i++) {", "+\t\tif (offset == invalidOffsets[i]) {", "+\t\t\toffset++;", "+\t\t\tcontinue;", "+\t\t}", "+\t\tif (offset < invalidOffsets[i]) {", "+\t\t\treturn offset - i;", "+\t\t}", "-\tif (segments == null) return offset;", "-\tint nSegments = segments.length;", "-\tif (nSegments <= 1) return offset;", "-\tif (nSegments == 2) {", "-\t\tif (segments[0] == 0 && segments[1] == length) return offset;", "-\t}", "-\tfor (int i = 0; i < nSegments && offset > segments[i]; i++) {", "-\t\toffset--;", "-\t}", "-\treturn offset;", "+\treturn offset - invalidOffsets.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa93feb4c55b20c5f8882c2a0cbd3402", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1e9a9b9a2f3b0161323b03292062cd8133cbbcb8", "commitAfterChange": "dec9fd8ce799a13104a343c8b185b7ed15925f00", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " int translateOffset(int offset)", "signatureAfterChange": " int translateOffset(int offset)", "diff": ["-\tif (ascent != -1 || descent != -1) {", "-\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\t\tint /*long*/ iter = OS.pango_layout_get_iter(layout);", "-\t\tif (iter == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint count = 0;", "-\t\tdo {", "-\t\t\tint bytePos = OS.pango_layout_iter_get_index(iter);", "-\t\t\tint pos = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + bytePos);", "-\t\t\tif (pos - count > offset) break;", "-\t\t\tcount++;", "-\t\t} while (OS.pango_layout_iter_next_line(iter));", "-\t\tOS.pango_layout_iter_free (iter);", "-\t\toffset += count;", "-\t}", "-\tif (segments == null) return offset;", "-\tint nSegments = segments.length;", "-\tif (nSegments <= 1) return offset;", "-\tif (nSegments == 2) {", "-\t\tif (segments[0] == 0 && segments[1] == length) return offset;", "-\t}", "-\tfor (int i = 0; i < nSegments && offset - i >= segments[i]; i++) {", "+\tif (invalidOffsets == null) return offset;", "+\tfor (int i = 0; i < invalidOffsets.length; i++) {", "+\t\tif (offset < invalidOffsets[i]) break; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c60aae411ae72258050cc9b81ba86ab3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "1e9a9b9a2f3b0161323b03292062cd8133cbbcb8", "commitAfterChange": "dec9fd8ce799a13104a343c8b185b7ed15925f00", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  int validateOffset(int offset, int step)", "signatureAfterChange": "  int validateOffset(int offset, int step)", "diff": ["-\toffset += step;", "-\tint pos;", "-\tint /*long*/ iter;", "-\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "-\tif (ascent != -1 || descent != -1) {", "-\t\titer = OS.pango_layout_get_iter(layout);", "-\t\tif (iter == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tdo {", "-\t\t\tint bytePos = OS.pango_layout_iter_get_index(iter);", "-\t\t\tpos = (int)/*64*/OS.g_utf8_pointer_to_offset(ptr, ptr + bytePos);", "-\t\t\tif (pos == offset) {", "-\t\t\t\toffset += step;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t} while (OS.pango_layout_iter_next_line(iter) && offset > pos);", "-\t\tOS.pango_layout_iter_free (iter);", "-\t}", "-\tif (segments != null && segments.length > 2) {", "-\t\tfor (int j = 0; j < segments.length; j++) {", "-\t\t\tif (translateOffset(segments[j]) - 1 == offset) {", "-\t\t\t\toffset += step;", "-\t\t\t\tbreak;", "-\t\t\t}", "+\tif (invalidOffsets == null) return offset + step;", "+\tint i = step > 0 ? 0 : invalidOffsets.length - 1;", "+\tdo {", "+\t\toffset += step;", "+\t\twhile (0 <= i && i < invalidOffsets.length) {", "+\t\t\tif (invalidOffsets[i] == offset) break;", "+\t\t\ti += step;", "-\t}", "+\t} while (0 <= i && i < invalidOffsets.length);"]}], "num": 25289}