{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a56857c54cf5f438946341d1f8658ec0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21aeae9d5983f15eb212db5ccba8c60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "12a19590db7140a002ffd2afe42fdd32d55daa4b", "commitAfterChange": "bb98914e56f73f1ca23a4cdd034bd772d1d14c5d", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " void updateHorizontalBar ()", "signatureAfterChange": " void updateHorizontalBar ()", "diff": ["-\t/* the horizontal range is never affected by an item change if there are columns */", "-\tif (columns.length > 0) return;", "-\t", "-\tfor (int i = 0; i < availableItems.length; i++) {", "-\t\tRectangle itemBounds = availableItems [i].getBounds ();", "-\t\tmaxX = Math.max (maxX, itemBounds.x + itemBounds.width);", "+\tif (columns.length > 0) {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tmaxX += columns [i].width;", "+\t\t}", "+\t} else {", "+\t\tfor (int i = 0; i < availableItems.length; i++) {", "+\t\t\tRectangle itemBounds = availableItems [i].getBounds ();", "+\t\t\tmaxX = Math.max (maxX, itemBounds.x + itemBounds.width + horizontalOffset);", "+\t\t}", "-\tmaxX += horizontalOffset;", "-", "-\tint barMax = hBar.getMaximum ();", "-\tif (barMax == maxX) return;", "+\t", "-\tif (maxX <= clientWidth && barMax <= clientWidth) return;", "-", "-\thBar.setMaximum (maxX);", "-\tint pageSize = Math.min (maxX, clientWidth);", "-\thBar.setThumb (pageSize);", "-\thBar.setPageIncrement (pageSize);", "-", "+\tif (maxX != hBar.getMaximum ()) {", "+\t\thBar.setMaximum (maxX);", "+\t}", "+\tint thumb = Math.min (clientWidth, maxX);", "+\tif (thumb != hBar.getThumb ()) {", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t}", "+\thBar.setVisible (clientWidth < maxX);", "+\t", "-\tif (maxX < horizontalOffset + pageSize) {", "-\t\thorizontalOffset = maxX - pageSize;", "+\tif (maxX < horizontalOffset + thumb) {", "+\t\thorizontalOffset = maxX - thumb;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5eaeaf2e4092dd4bc242951e348952", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 111, "signatureBeforeChange": " void resize(Event event)", "signatureAfterChange": " void updateHorizontalBar ()", "diff": ["- */", "-void resize(Event event) {", "-\tTableColumn fillColumn = getFillColumn();", "-\tRectangle fillColumnBounds;", "-", "-\tsuper.resize(event);", "-\t// the x position may change in super.resize.", "-\t// get the column bounds after calling super.resize. Fixes 1G7ALGG", "-\tfillColumnBounds = fillColumn.getBounds();", "-\tfillColumnBounds.width = Math.max(0, getClientArea().width - getContentWidth());", "-\tfillColumn.setBounds(fillColumnBounds);", "-\tresizeHeader();", "-}", "+void updateHorizontalBar () {", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint maxX = 0;", "+\tif (columns.length > 0) {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tmaxX += columns [i].width;", "+\t\t}", "+\t} else {", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tRectangle itemBounds = items [i].getBounds ();", "+\t\t\tmaxX = Math.max (maxX, itemBounds.x + itemBounds.width + horizontalOffset);", "+\t", "+\tint clientWidth = getClientArea ().width;", "+\tif (maxX != hBar.getMaximum ()) {", "+\t\thBar.setMaximum (maxX);", "+\t}", "+\tint thumb = Math.min (clientWidth, maxX);", "+\tif (thumb != hBar.getThumb ()) {", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t}", "+\thBar.setVisible (clientWidth < maxX);", "+\t", "+\t/* reclaim any space now left on the right */", "+\tif (maxX < horizontalOffset + thumb) {", "+\t\thorizontalOffset = maxX - thumb;", "+\t\thBar.setSelection (horizontalOffset);", "+\t\tredraw ();", "+\t} else {", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}], "num": 16602}