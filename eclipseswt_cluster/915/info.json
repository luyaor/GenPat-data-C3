{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c62a6dd35ae2419cb2bc7ae2900bd8f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b66314b6d1ab7ca5a972457fbca8deeb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "07868d336bfbd0f5ad22e9824af4c793cea4f15b", "commitAfterChange": "2dcd4e15d2731c2f495b41254c11d2b5a7ea7a9d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void setStyle (TextStyle style, int start, int end)", "signatureAfterChange": "  public void setStyle (TextStyle style, int start, int end)", "diff": ["-\t* Bug in Pango. Pango will cause a segmentation fault in a style", "-\t* is not applied for the whole LanAlef ligature when it is located", "-\t* at the end of directional run.  The fix is to applied set the", "+\t* Bug in Pango. Pango 1.2.2 will cause a segmentation fault if a style", "+\t* is not applied for a whole ligature.  The fix is to applied the", "-\t* TODO: Check other ligatures and try to seek a more fine tuned solution.", "-\t* FH it does happen for other ligatuers (thai), this bug is fixed in pango > 1.2.3", "+\t* NOTE that fix only LamAlef ligatures. ", "-//\tif (start > 0 && isAlef(text.charAt(start)) && isLam(text.charAt(start - 1))) {", "-//\t\tstart--;", "-//\t}", "-//\tif (end < length - 1 && isLam(text.charAt(end)) && isAlef(text.charAt(end + 1))) {", "-//\t\tend++;", "-//\t}", "+\tif (start > 0 && isAlef(text.charAt(start)) && isLam(text.charAt(start - 1))) {", "+\t\tstart--;", "+\t}", "+\tif (end < length - 1 && isLam(text.charAt(end)) && isAlef(text.charAt(end + 1))) {", "+\t\tend++;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deaa31871259ee887eab8014ae2a5112", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0b66692057c7b8e5e6ba08c35cd8643753a93cdc", "commitAfterChange": "02b69f0a6c1a178141e1f22f2c967af8a5787207", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["+\t\tif (movement == MOVEMENT_WORD) {", "+\t\t\twhile (newOffset[0] < length && Compatibility.isWhitespace(text.charAt(newOffset[0]))) {", "+\t\t\t\tnewOffset[0]++;", "+\t\t\t}", "+\t\t}", "+\t\tif (movement == MOVEMENT_WORD) {", "+\t\t\twhile (newOffset[0] > 1 && Compatibility.isWhitespace(text.charAt(newOffset[0] - 1))) {", "+\t\t\t\tnewOffset[0]--;", "+\t\t\t}", "+\t\t}"]}], "num": 915}