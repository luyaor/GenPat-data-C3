{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b36ad41da8d4c5673031060582d9fae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17f201ae923a24ce1ff64894e05318a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/HelperAppLauncherDialog.java", "commitBeforeChange": "d665122b16f11ea3b50bca7d906c35635cab24f0", "commitAfterChange": "09a2847b5f635bf1aa46ff6e6b4bc58211f7cb59", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public int PromptForSaveToFile(int aLauncher, int aWindowContext, int aDefaultFile, int aSuggestedFileExtension, int _retval)", "signatureAfterChange": "  public int PromptForSaveToFile(int arg0, int arg1, int arg2, int arg3, int arg4)", "diff": ["-public int PromptForSaveToFile(int aLauncher, int aWindowContext, int aDefaultFile, int aSuggestedFileExtension, int _retval) {", "-\tnsIHelperAppLauncher helperAppLauncher = new nsIHelperAppLauncher(aLauncher);", "+public int PromptForSaveToFile(int arg0, int arg1, int arg2, int arg3, int arg4) {", "+\tnsIHelperAppLauncher helperAppLauncher = null;", "+\tint aDefaultFile, aSuggestedFileExtension, _retval;", "+\t/*", "+\t* Feature in Mozilla.  The nsIHelperAppLauncherDialog interface is not frozen ", "+\t* despite being the only way to download files when embedding Mozilla.  Starting ", "+\t* with Mozilla 1.5, the method PromptForSaveToFile takes an extra argument and ", "+\t* previous arguments are shifted by one position.  The workaround is to provide ", "+\t* an XPCOMObject that fits the newer API.  In all cases the first argument is a ", "+\t* nsISupports reference. In the newer versions, that argument is nsIHelperAppLauncher,", "+\t* a subclass of nsISupports.  The ordering of the arguments is inferred from the ", "+\t* type of the first argument. ", "+\t*/", "+\tnsISupports support = new nsISupports(arg0);", "+\tint[] result = new int[1];", "+\tint rc = support.QueryInterface(nsIHelperAppLauncher.NS_IHELPERAPPLAUNCHER_IID, result);", "+\tif (rc != XPCOM.NS_OK || result[0] != arg0) { ", "+\t\taDefaultFile = arg1;", "+\t\taSuggestedFileExtension = arg2;", "+\t\t_retval = arg3;", "+\t}", "+\telse {", "+\t\thelperAppLauncher = new nsIHelperAppLauncher(arg0);", "+\t\taDefaultFile = arg2;", "+\t\taSuggestedFileExtension = arg3;", "+\t\t_retval = arg4;", "+\t}", "+\tresult[0] = 0;", "-\t\tint rc = helperAppLauncher.Cancel();", "-\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\t\treturn XPCOM.NS_OK;", "+\t\tif (helperAppLauncher != null) {", "+\t\t\trc = helperAppLauncher.Cancel();", "+\t\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t}", "+\t\treturn XPCOM.NS_ERROR_FAILURE;", "-\tint[] result = new int[1];", "-\tint rc = XPCOM.NS_NewLocalFile(path.getAddress(), true, result);", "+\trc = XPCOM.NS_NewLocalFile(path.getAddress(), true, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e422e3a3fd0ba2d2f2e661c56ddf54f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public Point getLocation ()", "signatureAfterChange": " public Point getLocation ()", "diff": ["-\tint x = OS.GTK_WIDGET_X (topHandle);", "-\tint y = OS.GTK_WIDGET_Y (topHandle);", "+\tint x = 0;", "+\tint y = 0;", "+\tint width = 0;", "+\tGtkAllocation allocation = new GtkAllocation ();", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\tOS.gtk_widget_get_allocation(topHandle, allocation);", "+\t\tx = allocation.x;", "+\t\ty = allocation.y;", "+\t} else {", "+\t\tx = OS.GTK_WIDGET_X (topHandle);", "+\t\ty = OS.GTK_WIDGET_Y (topHandle);", "+\t}", "-\t\tint width = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\twidth = (state & ZERO_WIDTH) != 0 ? 0 : allocation.width;", "+\t\t} else {", "+\t\t\twidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t}"]}], "num": 43019}