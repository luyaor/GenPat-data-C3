{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fb92f436a18e6e7d223f8ad7bd479bc", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b89ca64d10b775f1ae1c4a6629eed7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bcd55dd512f5b1bdf742949f657ced196a25bb30", "commitAfterChange": "e191140321c16422e44c47bc2f21064b253b3377", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " public Shell [] getShells ()", "signatureAfterChange": " public Shell [] getShells ()", "diff": ["-\t/*", "-\t* NOTE:  Need to check that the shells that belong", "-\t* to another display have not been disposed by the", "-\t* other display's thread as the shells list is being", "-\t* processed.", "-\t*/", "-\tint count = 0;", "-\tShell [] shells = WidgetTable.shells ();", "-\tfor (int i=0; i<shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (!shell.isDisposed () && this == shell.display) {", "-\t\t\tcount++;", "-\t\t}", "+\tint length = 0;", "+\tfor (int i=0; i<shellTable.length; i++) {", "+\t\tif (shellTable [i] != null) length++;", "-\tif (count == shells.length) return shells;", "-\tShell [] result = new Shell [count];", "-\tfor (int i=0; i<shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (!shell.isDisposed () && this == shell.display) {", "-\t\t\tresult [index++] = shell;", "-\t\t}", "+\tShell [] result = new Shell [length];", "+\tfor (int i=0; i<shellTable.length; i++) {", "+\t\tShell widget = shellTable [i];", "+\t\tif (widget != null) result [index++] = widget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74992cc19a7f286fe6937b476e44ca13", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "16f7714e341fe5d5bf0773c0a0980725cc289841", "commitAfterChange": "949a243710db76895ae62e7e3836ee5ccd5921de", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 56, "signatureBeforeChange": " public Shell [] getShells ()", "signatureAfterChange": " public Shell [] getShells ()", "diff": ["-\t/*", "-\t* NOTE:  Need to check that the shells that belong", "-\t* to another display have not been disposed by the", "-\t* other display's thread as the shells list is being", "-\t* processed.", "-\t*/", "-\tShell [] shells = WidgetTable.shells ();", "-\tfor (int i=0; i<shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (!shell.isDisposed () && this == shell.display) {", "-\t\t\tcount++;", "-\t\t}", "+\tfor (int i=0; i<controlTable.length; i++) {", "+\t\tControl control = controlTable [i];", "+\t\tif (control != null && control instanceof Shell) count++;", "-\tif (count == shells.length) return shells;", "-\tfor (int i=0; i<shells.length; i++) {", "-\t\tShell shell = shells [i];", "-\t\tif (!shell.isDisposed () && this == shell.display) {", "-\t\t\tresult [index++] = shell;", "+\tfor (int i=0; i<controlTable.length; i++) {", "+\t\tControl control = controlTable [i];", "+\t\tif (control != null && control instanceof Shell) {", "+\t\t\tresult [index++] = (Shell) control;"]}], "num": 39621}