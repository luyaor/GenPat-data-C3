{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "906cd178d0b5a2c7403ff22728f565a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07002565e3f46f362f38cbcba489a3ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "747510f9a00f1437e5879de92c35f5d1da173a8a", "commitAfterChange": "27d6879775783848962b3d35adec4cb85bd44588", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "signatureAfterChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "diff": ["-\t\t\tNSRange selectedRange = fieldEditor.selectedRange();", "-\t\t\tif (textLimit != LIMIT) {", "-\t\t\t\tint /*long*/ charCount = fieldEditor.string().length();", "-\t\t\t\tif (charCount - selectedRange.length + length > textLimit) {", "-\t\t\t\t\tlength = (int)/*64*/(textLimit - charCount + selectedRange.length);", "+\t\t\tif (fieldEditor != null) {", "+\t\t\t\tNSRange selectedRange = fieldEditor.selectedRange();", "+\t\t\t\tif (textLimit != LIMIT) {", "+\t\t\t\t\tint /*long*/ charCount = fieldEditor.string().length();", "+\t\t\t\t\tif (charCount - selectedRange.length + length > textLimit) {", "+\t\t\t\t\t\tlength = (int)/*64*/(textLimit - charCount + selectedRange.length);", "+\t\t\t\t\t}", "+\t\t\t\tchar [] buffer = new char [length];", "+\t\t\t\tnewText.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\tNSString nsstring = NSString.stringWithCharacters (buffer, buffer.length);", "+\t\t\t\tfieldEditor.replaceCharactersInRange (fieldEditor.selectedRange (), nsstring);", "+\t\t\t\tresult = false;", "-\t\t\tchar [] buffer = new char [length];", "-\t\t\tnewText.getChars (0, buffer.length, buffer, 0);", "-\t\t\tNSString nsstring = NSString.stringWithCharacters (buffer, buffer.length);", "-\t\t\tfieldEditor.replaceCharactersInRange (fieldEditor.selectedRange (), nsstring);", "-\t\t\tresult = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f337a51cba1511b03ffd46b439f394a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5a1722e7ed2ad9d5a4489af845cf0419502b0fda", "commitAfterChange": "13fdd1d635c82d6269b098a4008efefeaf88b0d2", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "signatureAfterChange": "  boolean shouldChangeTextInRange_replacementString(int id, int sel, int affectedCharRange, int replacementString)", "diff": ["-\t\tString text = new NSString(replacementString).getString();", "+\t\tString string = new NSString(replacementString).getString();", "-\t\tString newText = verifyText(text, (int)/*64*/range.location, (int)/*64*/(range.location+range.length), currentEvent);", "+\t\tString newText = verifyText(string, (int)/*64*/range.location, (int)/*64*/(range.location+range.length), currentEvent);", "-\t\tif (text != newText) {", "-\t\t\tinsertEditText(newText);", "+\t\tif (!string.equals(newText)) {", "+\t\t\tint length = newText.length();", "+\t\t\tPoint selection = getSelection();", "+\t\t\tif (textLimit != LIMIT) {", "+\t\t\t\tint charCount = getCharCount();", "+\t\t\t\tif (charCount - (selection.y - selection.x) + length > textLimit) {", "+\t\t\t\t\tlength = textLimit - charCount + (selection.y - selection.x);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tchar [] buffer = new char [length];", "+\t\t\tnewText.getChars (0, buffer.length, buffer, 0);", "+\t\t\tNSString nsstring = NSString.stringWithCharacters (buffer, buffer.length);", "+\t\t\tNSText fieldEditor = ((NSTextField) view).currentEditor ();", "+\t\t\tfieldEditor.replaceCharactersInRange (fieldEditor.selectedRange (), nsstring);", "+\t\t\ttext = fieldEditor.string().getString();", "+\t\t\tsendEvent (SWT.Modify);", "-\t\t}", "-\t\tif (!result) sendEvent (SWT.Modify);", "+\t\t} ", "+\t}", "+\tif (result) {", "+\t\tchar[] chars = new char[text.length()];", "+\t\ttext.getChars(0, chars.length, chars, 0);", "+\t\tNSMutableString mutable = (NSMutableString) NSMutableString.stringWithCharacters(chars, chars.length);", "+\t\tmutable.replaceCharactersInRange(range, new NSString(replacementString));", "+\t\ttext = mutable.getString();", "+\t\tselectionRange = null;"]}], "num": 50964}