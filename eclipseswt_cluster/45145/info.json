{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e56a29903c731441c3c58b85dcd6a553", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a625f0e3154a0c23f2c23a4a4edbe9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "267efeba946291455291f7e37b5a9adb5c1006b4", "commitAfterChange": "20492b8023f4da8a65e4db2fb7cb69e8486d81b2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t", "-\t\t\t/* If the childID was created by the application, delegate to the accessible for the control. */", "-\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "-\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tint childID = getChildIDFromEvent(theEvent);", "+\t\t\tif (childID != ACC.CHILDID_SELF) {", "+\t\t\t\t/* If the childID was created by the application, delegate to the accessible for the control. */", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleObject, OS.typeCFTypeRef, 4, new int [] {axuielementref});", "+\t\t\t\tcode = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69cb9af8e40b1c0a8e970b11b5b5589", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "006d9583acddd2d2c813b743b6df5768ec76cd9d", "commitAfterChange": "64c700c763e86589cd386ff2011f203300090e0b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "-\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "-\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "-\t\t\tlistener.getChildren(event);", "-\t\t}", "-\t\tObject [] appChildren = event.children;", "-\t\tif (appChildren != null && appChildren.length > 0) {", "-\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "-\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "-\t\t\tif (children != 0) {", "-\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "-\t\t\t\t\tObject child = appChildren[i];", "-\t\t\t\t\tif (child instanceof Integer) {", "-\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t", "-\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "-\t\t\t\tOS.CFRelease(children);", "-\t\t\t\treturn OS.noErr;", "+\t\tint childID = getChildIDFromEvent(theEvent);", "+\t\tif (childID == ACC.CHILDID_SELF) {", "+\t\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\t\tevent.childID = childID;", "+\t\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\t\tlistener.getChildren(event);", "+\t\t\t}", "+\t\t\tObject [] appChildren = event.children;", "+\t\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\t\tif (children != 0) {", "+\t\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}\t\t\t", "+\t\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\t\tOS.CFRelease(children);", "+\t\t\t\t\treturn OS.noErr;", "+\t\t\t\t}"]}], "num": 45145}