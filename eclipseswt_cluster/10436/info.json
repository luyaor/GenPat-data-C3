{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42de4bea9399d639f2e7e5a0586fd0bc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ad0899da1aba5ec1d50487aee27931e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "ea9540b686e96f5d19aacde5425f9dc76c48dc05", "commitAfterChange": "1ab6b40d1967fe176e8d0b93bab625c980bc30d9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void destroyItem (ExpandItem item)", "signatureAfterChange": "  void destroyItem (ExpandItem item)", "diff": ["-\tint index = 0;", "-\twhile (index < itemCount) {", "-\t\tif (items [index] == item) break;", "-\t\tindex++;", "-\t}", "-\tif (index == itemCount) return;", "-\tSystem.arraycopy (items, index + 1, items, index, --itemCount - index);", "-\titems [itemCount] = null;", "+\tint items = OS.Panel_Children (handle);", "+\tOS.UIElementCollection_Remove (items, item.topHandle ());", "+\tint count = OS.UIElementCollection_Count (items);", "+\tOS.GCHandle_Free (items);", "+\tif (itemCount == count) error (SWT.ERROR_ITEM_NOT_REMOVED);", "+\titemCount--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "749703fff61ba2926b7a9a401c6622ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   \tvoid calculateVisible(int startLine, int newLineCount)", "signatureAfterChange": " \tpublic void calculateClientArea ()", "diff": ["-\t */  ", "-\tvoid calculateVisible(int startLine, int newLineCount) {", "-\t\tint topIndex = parent.getTopIndex();", "-\t\tint bottomLine = Math.min(parent.getPartialBottomIndex(), startLine + newLineCount);", "-\t\tstartLine = Math.max(startLine, topIndex);", "-\t\tcalculate(startLine, bottomLine - startLine + 1);", "+\t */", "+\tpublic void calculateClientArea () {", "+\t\tint index = parent.getTopIndex();", "+\t\tint lineCount = parent.content.getLineCount();", "+\t\tint height = parent.getClientArea().height;", "+\t\tint y = 0;", "+\t\twhile (height > y && lineCount > index) {", "+\t\t\tcalculate(index, 1);", "+\t\t\ty += lineHeight[index++];", "+\t\t}"]}], "num": 10436}