{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0a7291bc40bbc36d40d8c22f833a23c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e4f466138546fe8adc3fd5a93a6539", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "34d8f908103f79ef01befd5c75eb28b372b686b0", "commitAfterChange": "aa14e77e1ea6052ba1798c3e57a027ecd502ef50", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\t\t/*", "-\t\t* This code intentionally commented.", "-\t\t*/", "-//\t\tGC gc = GC.win32_new (struct.hDC, null);", "-//\t\tgc.drawImage (image, struct.left, struct.top);", "-\t\tint hImage = image.handle;", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP:", "-\t\t\t\tBITMAP bm = new BITMAP ();", "-\t\t\t\tOS.GetObject (hImage, BITMAP.sizeof, bm);", "-\t\t\t\tint hDC = OS.CreateCompatibleDC (struct.hDC);", "-\t\t\t\tint oldBitmap = OS.SelectObject (hDC, hImage);", "-\t\t\t\tOS.BitBlt (struct.hDC, struct.left, struct.top + 2, bm.bmWidth, bm.bmHeight, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\tOS.SelectObject (hDC, oldBitmap);", "-\t\t\t\tOS.DeleteDC (hDC);", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.ICON:", "-\t\t\t\tOS.DrawIconEx (struct.hDC, struct.left, struct.top + 2, hImage, 0, 0, 0, 0, OS.DI_NORMAL);", "-\t\t\t\tbreak;", "-\t\t}", "+\t\tGCData data = new GCData();", "+\t\tdata.device = display;", "+\t\tGC gc = GC.win32_new (struct.hDC, data);", "+\t\tgc.drawImage (image, struct.left, struct.top + 2);", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63694989a6d4e257c19d7a784689280a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "69fe255a91d281ad913c54b0bad5a3812ad465cb", "commitAfterChange": "aebd0142bcef6136a18a211fc092cba38791460d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\t\t\tcase SWT.BITMAP:", "-\t\t\t\thImage = createAlphaFromMask (image);", "+\t\t\tcase SWT.BITMAP: {", "+\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\t\t\thImage = image.handle;", "+\t\t\t\t} else {", "+\t\t\t\t\tImageData data = image.getImageData ();", "+\t\t\t\t\tif (data.alpha != -1 || data.alphaData != null || data.transparentPixel != -1) {", "+\t\t\t\t\t\thImage = createAlphaFromMask (image.handle, data.alpha, data.alphaData, data.transparentPixel);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\thImage = image.handle;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\tcase SWT.ICON:", "+\t\t\t}", "+\t\t\tcase SWT.ICON: {", "+\t\t\t}", "-\tif (image != null && image.handle != hImage) OS.DeleteObject (hImage);\t", "+\t", "+\t/*", "+\t* When STM_SETIMAGE encounters an bitmap with alpha information,", "+\t* it takes a copy of the bitmap.  Therefore it is necessary to", "+\t* free the copy that was made to preserve transparency.", "+\t*/", "+\tif (image != null && image.handle != hImage) {", "+\t\tOS.DeleteObject (hImage);\t", "+\t}", "+"]}], "num": 7414}