{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c038c76260d865a0775cfe486759fa42", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c677439e1a6283061d6c6dbaa277ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/views/MacGeneratorView.java", "commitBeforeChange": "78d0998c278ea3b9e8ad98792cb32a0685828ee5", "commitAfterChange": "e0eebc7184e9e030d713fedc011776bd0bf1aa18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic MacGeneratorView()", "signatureAfterChange": " \tpublic MacGeneratorView()", "diff": ["-\t\tIWorkspaceRoot workspace = ResourcesPlugin.getWorkspace().getRoot();", "-\t\troot = workspace.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));", "+\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();", "+\t\troot = workspaceRoot.findMember(new Path(\"org.eclipse.swt/Eclipse SWT PI/cocoa\"));\t\t", "+\t\tlistener = new IResourceChangeListener() {", "+\t\t\tpublic void resourceChanged(IResourceChangeEvent event) {", "+\t\t\t\tif (job != null) return;", "+\t\t\t\tif (event.getType() != IResourceChangeEvent.POST_CHANGE) return;", "+\t\t\t\tIResourceDelta rootDelta = event.getDelta();", "+\t\t\t\tIResourceDelta piDelta = rootDelta.findMember(root.getFullPath());", "+\t\t\t\tif (piDelta == null) return;", "+\t\t\t\tfinal ArrayList changed = new ArrayList();", "+\t\t\t\tIResourceDeltaVisitor visitor = new IResourceDeltaVisitor() {", "+\t\t\t\t\tpublic boolean visit(IResourceDelta delta) {", "+\t\t\t\t\t\tif (delta.getKind() != IResourceDelta.CHANGED) return true;", "+\t\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.CONTENT) == 0) return true;", "+\t\t\t\t\t\tIResource resource = delta.getResource();", "+\t\t\t\t\t\tif (resource.getType() == IResource.FILE && \"extras\".equalsIgnoreCase(resource.getFileExtension())) {", "+\t\t\t\t\t\t\tchanged.add(resource);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t};", "+\t\t\t\ttry {", "+\t\t\t\t\tpiDelta.accept(visitor);", "+\t\t\t\t} catch (CoreException e) {}", "+\t\t\t\tif (changed.size() > 0) {", "+\t\t\t\t\tui.refresh();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\tworkspace.addResourceChangeListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27f54cc6e54c001161a32f11d6de348", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "34066a19fa70ed4fbdac3126ec1d0ac679f3f849", "commitAfterChange": "55e256ffa6e7c89a4c4d086309d5e766d0c33961", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tint atkText_get_text_after_offset (int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_after_offset (int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["+\t\t\toffset = Math.min (offset, length - 1);", "-\t\t\t\t\tint wordStart1 = nextIndexOfChar (text, \" !?.\\n\", offset);", "+\t\t\t\t\tint wordStart1 = nextIndexOfChar (text, \" !?.\\n\", offset - 1);", "+\t\t\t\t\tint previousWordEnd = previousIndexOfNotChar (text, \" \\n\", offset); ", "+\t\t\t\t\tif (previousWordEnd == -1 || previousWordEnd != offset - 1) {", "+\t\t\t\t\t\toffset = nextIndexOfNotChar (text, \" \\n\", offset);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (offset == -1) {", "+\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "-\t\t\t\t\tint sentenceStart1 = nextIndexOfChar (text, \"!?.\", offset);", "-\t\t\t\t\tif (sentenceStart1 == -1) {", "-\t\t\t\t\t\tstartBounds = endBounds = length;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\tint previousSentenceEnd = previousIndexOfChar (text, \"!?.\", offset);", "+\t\t\t\t\tint previousText = previousIndexOfNotChar (text, \" !?.\\n\", offset);", "+\t\t\t\t\tint sentenceStart1 = 0;", "+\t\t\t\t\tif (previousSentenceEnd >= previousText) {", "+\t\t\t\t\t\tsentenceStart1 = nextIndexOfNotChar (text, \" !?.\\n\", offset);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tsentenceStart1 = nextIndexOfChar (text, \"!?.\", offset);", "+\t\t\t\t\t\tif (sentenceStart1 == -1) {", "+\t\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tsentenceStart1 = nextIndexOfNotChar (text, \" !?.\\n\", sentenceStart1);", "-\t\t\t\t\tsentenceStart1 = nextIndexOfNotChar (text, \" !?.\\n\", sentenceStart1);", "-\t\t\t\t\tint lineStart1 = text.indexOf ('\\n', offset);", "+\t\t\t\t\tint lineStart1 = text.indexOf ('\\n', offset - 1);"]}], "num": 50295}