{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3670f940c247c8cfebf1d10827c4a70b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced8f8b2be49845a2e03a94d1bd3e6a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/ControlsWithAccessibleNamesExample.java", "commitBeforeChange": "b50dd73d058b5cf406183f7ba788701fc2769bb2", "commitAfterChange": "02ecc9fac6a8fdc56fdf1cad3657e9c3a80838ea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic static void main(String[] args)", "signatureAfterChange": " \t\t \tpublic static void main(String[] args)", "diff": ["-\t\tshell.setLayout(new GridLayout(2, true));", "+\t\tshell.setLayout(new GridLayout(4, true));", "+\t\tnew Label(shell, SWT.NONE).setText(\"Use Platform Name\");", "+\t\tnew Label(shell, SWT.NONE).setText(\"Override Platform Name\");", "+//\t\tText text, overrideText;", "+\t\ttext = new Text(shell, SWT.SINGLE | SWT.BORDER);", "+\t\ttext.setText(\"Contents of single-line Text\");", "+\t\t", "+\t\toverrideText = new Text(shell, SWT.SINGLE | SWT.BORDER);", "+\t\toverrideText.setText(\"Contents of single-line Text\");", "+\t\toverrideText.setData(\"name\", \"Text\");", "+\t\toverrideText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\t", "+//\t\tText multiLineText, overrideMultiLineText;", "+\t\tmultiLineText = new Text(shell, SWT.MULTI | SWT.BORDER);", "+\t\tmultiLineText.setText(\"Contents of multi-line Text\\nLine 2\\nLine 3\\nLine 4\");", "+\t\t", "+\t\toverrideMultiLineText = new Text(shell, SWT.MULTI | SWT.BORDER);", "+\t\toverrideMultiLineText.setText(\"Contents of multi-line Text\\nLine 2\\nLine 3\\nLine 4\");", "+\t\toverrideMultiLineText.setData(\"name\", \"MultiLineText\");", "+\t\toverrideMultiLineText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+", "-\t\t", "-//\t\tText text, overrideText;", "-\t\ttext = new Text(shell, SWT.SINGLE | SWT.BORDER);", "-\t\ttext.setText(\"Contents of Text\");", "-\t\t", "-\t\toverrideText = new Text(shell, SWT.SINGLE | SWT.BORDER);", "-\t\toverrideText.setText(\"Contents of Text\");", "-\t\toverrideText.setData(\"name\", \"Text\");", "-\t\toverrideText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "-\t\t// Note: currently, MSAA does not support coolbar", "+\t\t/* Set a caret into the canvas so that it will take focus. */", "-\t\tcaret.setSize(2, 10);", "+\t\tcaret.setBounds(15, 25, 2, 20);", "+\t\t\t\te.doit = true;", "+\t\t\t\te.doit = true;", "+\t\t/* Set a caret into the canvas so that it will take focus. */", "-\t\tcaret.setSize(2, 10);", "+\t\tcaret.setBounds(15, 25, 2, 20);", "+\t\t\t\te.doit = true;", "+\t\t\t\te.doit = true;", "-\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\");", "-\t\tstyledText.setText(\"Contents of StyledText\");", "+\t\tstyledText.setText(\"Contents of single-line StyledText\");", "-\t\toverrideStyledText.setText(\"Contents of StyledText\");", "+\t\toverrideStyledText.setText(\"Contents of single-line StyledText\");", "+\t", "+//\t\tStyledText multiLineStyledText, overrideMultiLineStyledText;", "+\t\tmultiLineStyledText = new StyledText(shell, SWT.MULTI | SWT.BORDER);", "+\t\tmultiLineStyledText.setText(\"Contents of multi-line StyledText\\nLine 2\\nLine 3\\nLine 4\");", "+\t\t", "+\t\toverrideMultiLineStyledText = new StyledText(shell, SWT.MULTI | SWT.BORDER);", "+\t\toverrideMultiLineStyledText.setText(\"Contents of multi-line StyledText\\nLine 2\\nLine 3\\nLine 4\");", "+\t\toverrideMultiLineStyledText.setData(\"name\", \"MultiLineStyledText\");", "+\t\toverrideMultiLineStyledText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "-\t\tprogressBar = new ProgressBar(shell, SWT.NONE);", "-\t\tprogressBar.setSelection(50);", "-\t\tprogressBar.setToolTipText(\"ProgressBar ToolTip\");", "-", "-\t\toverrideProgressBar = new ProgressBar(shell, SWT.NONE);", "-\t\toverrideProgressBar.setSelection(50);", "-\t\toverrideProgressBar.setToolTipText(\"ProgressBar ToolTip\");", "-\t\toverrideProgressBar.setData(\"name\", \"ProgressBar\");", "-\t\toverrideProgressBar.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\tif (!SWT.getPlatform().equals(\"cocoa\")) {", "+\t\t\tprogressBar = new ProgressBar(shell, SWT.NONE);", "+\t\t\tprogressBar.setSelection(50);", "+\t\t\tprogressBar.setToolTipText(\"ProgressBar ToolTip\");", "+\t", "+\t\t\toverrideProgressBar = new ProgressBar(shell, SWT.NONE);", "+\t\t\toverrideProgressBar.setSelection(50);", "+\t\t\toverrideProgressBar.setToolTipText(\"ProgressBar ToolTip\");", "+\t\t\toverrideProgressBar.setData(\"name\", \"ProgressBar\");", "+\t\t\toverrideProgressBar.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\t}", "+//\t\tLink link, overrideLink;", "+\t\tlink = new Link(shell, SWT.NONE);", "+\t\tlink.setText(\"<a>This is a link</a>\");", "+\t\tlink.setToolTipText(\"Link ToolTip\");", "+", "+\t\toverrideLink = new Link(shell, SWT.NONE);", "+\t\toverrideLink.setText(\"<a>This is a link</a>\");", "+\t\toverrideLink.setToolTipText(\"Link ToolTip\");", "+\t\toverrideLink.setData(\"name\", \"Link\");", "+\t\toverrideLink.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf61f5336d6bb20058095e338ec36da3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/ControlsWithAccessibleNamesExample.java", "commitBeforeChange": "57a20617337f8159490b8e31b9f89d96a194be18", "commitAfterChange": "c5108943847313e78cf02492519dc4d2db49ff6b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic static void main(String[] args)", "signatureAfterChange": " \t\t \tpublic static void main(String[] args)", "diff": ["+\t\t", "+\t\tlargeImage = new Image(display, ControlsWithAccessibleNamesExample.class.getResourceAsStream(\"run_wiz.gif\"));", "+\t\tsmallImage = new Image(display, ControlsWithAccessibleNamesExample.class.getResourceAsStream(\"run.gif\"));", "+\t\tImageData source = smallImage.getImageData();", "+\t\tImageData mask = source.getTransparencyMask();", "+\t\ttransparentImage = new Image(display, source, mask);", "-//\t\tstatic Shell shell;", "+//\t\tShell shell;", "-//\t\tstatic Label label, overrideLabel;", "+//\t\tLabel label, overrideLabel;", "-//\t\tstatic Label imageLabel, overrideImageLabel;", "-\t\timage = new Image(display, ControlsWithAccessibleNamesExample.class.getResourceAsStream(\"run_wiz.gif\"));", "+//\t\tLabel imageLabel, overrideImageLabel;", "-\t\timageLabel.setImage(image);", "+\t\timageLabel.setImage(largeImage);", "-\t\toverrideImageLabel.setImage(image);", "+\t\toverrideImageLabel.setImage(largeImage);", "-//\t\tstatic Button button, overrideButton;", "+//\t\tButton button, overrideButton;", "-//\t\tstatic Button imageButton, overrideImageButton;", "+//\t\tButton imageButton, overrideImageButton;", "-\t\timageButton.setImage(image);", "+\t\timageButton.setImage(smallImage);", "-\t\toverrideImageButton.setImage(image);", "+\t\toverrideImageButton.setImage(smallImage);", "-//\t\tstatic Combo combo, overrideCombo;", "+//\t\tCombo combo, overrideCombo;", "-//\t\tstatic Spinner spinner, overrideSpinner;", "+//\t\tSpinner spinner, overrideSpinner;", "-//\t\tstatic List list, overrideList;", "+//\t\tList list, overrideList;", "-//\t\tstatic Text text, overrideText;", "+//\t\tText text, overrideText;", "-\t\ttext.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "+\t\ttext.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));", "-\t\toverrideText.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "+\t\toverrideText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));", "-//\t\tstatic Table table, overrideTable;", "+//\t\tTable table, overrideTable;", "-//\t\tstatic Tree tree, overrideTree;", "+//\t\tTree tree, overrideTree;", "-\t\ttree.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "-\t\toverrideTree.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "-//\t\tstatic Tree treeTable, overrideTreeTable;", "+//\t\tTree treeTable, overrideTreeTable;", "-\t\ttreeTable.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "-\t\toverrideTreeTable.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "-//\t\tstatic ToolBar toolBar, overrideToolBar;", "+//\t\tToolBar toolBar, overrideToolBar;", "-//\t\tstatic ToolBar imageToolBar, overrideImageToolBar;", "+//\t\tToolBar imageToolBar, overrideImageToolBar;", "-\t\t\ttry {", "-\t\t\t\tImageData source = new ImageData(ControlsWithAccessibleNamesExample.class.getResourceAsStream(\"run.gif\"));", "-\t\t\t\tImageData mask = source.getTransparencyMask();", "-\t\t\t\titem.setImage(new Image(display, source, mask));", "-\t\t\t} catch (Exception e) {", "-\t\t\t\titem.setText(\"Image?\");", "-\t\t\t}", "+\t\t\titem.setImage(transparentImage);", "-\t\t\ttry {", "-\t\t\t\tImageData source = new ImageData(ControlsWithAccessibleNamesExample.class.getResourceAsStream(\"run.gif\"));", "-\t\t\t\tImageData mask = source.getTransparencyMask();", "-\t\t\t\titem.setImage(new Image(display, source, mask));", "-\t\t\t} catch (Exception e) {", "-\t\t\t\titem.setText(\"Image?\");", "-\t\t\t}", "+\t\t\titem.setImage(transparentImage);", "-//\t\tstatic CoolBar coolBar, overrideCoolBar;", "+//\t\tCoolBar coolBar, overrideCoolBar;", "-//\t\tstatic Canvas canvas, overrideCanvas;", "+//\t\tCanvas canvas, overrideCanvas;", "-//\t\tstatic Group group, overrideGroup;", "+//\t\tGroup group, overrideGroup;", "-//\t\tstatic TabFolder tabFolder, overrideTabFolder;", "+//\t\tTabFolder tabFolder, overrideTabFolder;", "-//\t\tstatic CLabel cLabel, overrideCLabel;", "+//\t\tCLabel cLabel, overrideCLabel;", "-//\t\tstatic CCombo cCombo, overrideCCombo;", "+//\t\tCCombo cCombo, overrideCCombo;", "-//\t\tstatic CTabFolder cTabFolder, overrideCTabFolder;", "+//\t\tCTabFolder cTabFolder, overrideCTabFolder;", "-//\t\tstatic Scale scale, overrideScale;", "+//\t\tScale scale, overrideScale;", "-//\t\tstatic Slider slider, overrideSlider;", "+//\t\tSlider slider, overrideSlider;", "-//\t\tstatic ProgressBar progressBar, overrideProgressBar;", "+//\t\tProgressBar progressBar, overrideProgressBar;", "-//\t\tstatic Sash sash, overrideSash;", "-\t\tsash = new Sash(shell, SWT.NONE);", "+//\t\tSash sash, overrideSash;", "+\t\tsash = new Sash(shell, SWT.BORDER);", "+\t\tsash.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));", "-\t\toverrideSash = new Sash(shell, SWT.NONE);", "+\t\toverrideSash = new Sash(shell, SWT.BORDER);", "+\t\toverrideSash.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));", "-\t\timage.dispose();", "+\t\tlargeImage.dispose();", "+\t\tsmallImage.dispose();", "+\t\ttransparentImage.dispose();"]}], "num": 7415}