{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e073a9d7ea33e0472f344e4015f6ea2f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76bda4e332e4e7423b275d6eedcb6c6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0d071739ca20d31ed231d1d4bd90df94b5e42817", "commitAfterChange": "ca2ab800288a0cff39f00b82f164bf6ac861ac7a", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " void shape (final int hdc, final StyleItem run)", "signatureAfterChange": " void shape (final int hdc, final StyleItem run)", "diff": ["-\t\t\t* using only white spaces. The solution is to use the font fallback of the ", "-\t\t\t* previous or next run of the same script.    ", "+\t\t\t* using only white spaces. The solution is to use the font of the previous  ", "+\t\t\t* or next run of the same script.    ", "-\t\t\t\t\t\tif (pRun.fallbackFont != 0 && pRun.analysis.eScript == run.analysis.eScript) {", "+\t\t\t\t\t\tif (pRun.analysis.eScript == run.analysis.eScript) {", "+\t\t\t\t\t\t\tint /*long*/ pFont = getItemFont(pRun);", "-\t\t\t\t\t\t\tOS.GetObject(pRun.fallbackFont, LOGFONT.sizeof, logFont);", "+\t\t\t\t\t\t\tOS.GetObject(pFont, LOGFONT.sizeof, logFont);", "+\t\t\t\t\t\t\t\tOS.SelectObject(hdc, getItemFont(nRun));", "-\t\t\t\t\t\t\t\tif (nRun.fallbackFont != 0) {", "-\t\t\t\t\t\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();", "-\t\t\t\t\t\t\t\t\tOS.GetObject(nRun.fallbackFont, LOGFONT.sizeof, logFont);", "-\t\t\t\t\t\t\t\t\tnewFont = OS.CreateFontIndirect(logFont);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tint /*long*/ nFont = getItemFont(nRun);", "+\t\t\t\t\t\t\t\tLOGFONT logFont = OS.IsUnicode ? (LOGFONT)new LOGFONTW() : new LOGFONTA();", "+\t\t\t\t\t\t\t\tOS.GetObject(nFont, LOGFONT.sizeof, logFont);", "+\t\t\t\t\t\t\t\tnewFont = OS.CreateFontIndirect(logFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df4dc3ed603588fef7c2ef73116e707", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7c921fde1a3e57d6090fd86368a01a1c5424c9a7", "commitAfterChange": "828d864b1718709d086376d079e5b86cae8605c6", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": " public TableItem getItem (Point point)", "signatureAfterChange": " public TableItem getItem (Point point)", "diff": ["-\tif (0 < lastHittest && lastHittest <= itemCount && lastHittestColumn != 0) {", "+\tint lastHittestIndex = getIndex (lastHittest);", "+\tif (0 <= lastHittestIndex && lastHittestIndex < itemCount && lastHittestColumn != 0) {", "-\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (lastHittest - 1);", "+\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (lastHittestIndex);", "-\t\t\t\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (lastHittest - 1);", "+\t\t\t\t\t\tif (OS.PtInRect (pt, rect)) return _getItem (lastHittestIndex);", "-    OS.GetDataBrowserScrollPosition(handle, top, left);", "+    OS.GetDataBrowserScrollPosition (handle, top, left);", "-\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, index + 1, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (index), columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, index + 1, columns [j].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (index), columns [j].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\tif (OS.GetDataBrowserItemPartBounds (handle, i + 1, columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (i), columnId, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "-\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, i + 1, columns [j].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {", "+\t\t\t\t\t\tif (OS.GetDataBrowserItemPartBounds (handle, getId (i), columns [j].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {"]}], "num": 18573}