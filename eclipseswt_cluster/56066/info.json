{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "38d3515091837c5e77ea9006dec6a7b6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530e0931164a4b6729c36d6a5b262a46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 326, "methodNumberAfterChange": 327, "signatureBeforeChange": " \tint get_hyperlink(int index, int ppHyperlink)", "signatureAfterChange": " \tint get_hyperlink(int index, int ppHyperlink)", "diff": ["-\t\tif (accessible != null) {", "-\t\t\taccessible.AddRef();", "-\t\t\tsetPtrVARIANT(ppHyperlink, COM.VT_DISPATCH, accessible.getAddress());", "+\t\tif (accessible == null) {", "+\t\t\tsetIntVARIANT(ppHyperlink, COM.VT_EMPTY, 0);", "+\t\t\treturn COM.E_INVALIDARG;", "+\t\taccessible.AddRef();", "+\t\tsetPtrVARIANT(ppHyperlink, COM.VT_DISPATCH, accessible.getAddress());", "-\t\t// TODO: @retval E_INVALIDARG if bad [in] passed, [out] value is NULL"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e54366f84f8cf0ab98e6d2748df8076", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 332, "signatureBeforeChange": " \tint get_cellAt(int row, int column, int ppCell)", "signatureAfterChange": " \tint get_cellAt(int row, int column, int ppCell)", "diff": ["-\t\tif (accessible != null) {", "-\t\t\taccessible.AddRef();", "-\t\t\tsetPtrVARIANT(ppCell, COM.VT_DISPATCH, accessible.getAddress());", "-\t\t}", "+\t\tif (accessible == null) return COM.E_INVALIDARG;", "+\t\taccessible.AddRef();", "+\t\tCOM.MoveMemory(ppCell, new int /*long*/[] { accessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t// TODO: @retval E_INVALIDARG if bad [in] passed, [out] value is NULL"]}], "num": 56066}