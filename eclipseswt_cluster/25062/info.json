{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d0ff2a5c1bf270c2abdcef446bde5bd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5501dca2a3c2dd314aafb52bb82246", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "d81e473e483ae4fce965f43d47dd34220fc3e0cd", "commitAfterChange": "a38b0e1c16db17f32238a4af0323e106634ade69", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setFont (int index, Font font)", "signatureAfterChange": " public void setFont (int index, Font font)", "diff": ["+\tif (font != null && font.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tint count = Math.max (1, parent.columnCount);", "+\tif (0 > index || index > count - 1) return;", "+\tint parentHandle = parent.handle;", "+\tint column = OS.gtk_tree_view_get_column (parentHandle, index);", "+\tif (column == 0) return;", "+\tint modelIndex = parent.columnCount == 0 ? Table.FIRST_COLUMN : parent.columns [index].modelIndex;", "+\tint fontHandle  = font != null ? font.handle : 0;", "+\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex + 4, fontHandle, -1);", "+\t", "+\tif (font != null) {", "+\t\tboolean customDraw = (parent.columnCount == 0)  ? parent.firstCustomDraw : parent.columns [index].customDraw;", "+\t\tif (!customDraw) {", "+\t\t\tint list = OS.gtk_tree_view_column_get_cell_renderers (column);", "+\t\t\tint length = OS.g_list_length (list);", "+\t\t\tint imageRenderer = OS.g_list_nth_data (list, length - 2);", "+\t\t\tint textRenderer = OS.g_list_nth_data (list, length - 1);", "+\t\t\tOS.g_list_free (list);", "+\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, imageRenderer, display.pixbufCellDataProc, parent.handle, 0);", "+\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, textRenderer, display.textCellDataProc, parent.handle, 0);", "+\t\t\tif (parent.columnCount == 0) {", "+\t\t\t\tparent.firstCustomDraw = true;", "+\t\t\t} else {", "+\t\t\t\tparent.columns [index].customDraw = true;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27729444da8f0b09b89125ca37fdccb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "d7f52e244190d0233789b162a34cf1d32f1aac26", "commitAfterChange": "ab790bd82f5e4890a492355780ef36249213722b", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void setImages (Image image, Image [] images)", "signatureAfterChange": "  void setImages (Image image, Image [] images)", "diff": ["-\t//TODO", "+\tint encoder = OS.gcnew_TiffBitmapEncoder ();", "+\tint frames = OS.BitmapEncoder_Frames (encoder);", "+\tif (image != null) {", "+\t\tint frame = OS.BitmapFrame_Create (image.handle);", "+\t\tOS.BitmapFrameCollection_Add (frames, frame);", "+\t\tOS.GCHandle_Free (frame);", "+\t}", "+\tif (images != null) {", "+\t\tif (images.length > 1) {", "+\t\t\tImageData [] datas = null;", "+\t\t\tImage [] bestImages = new Image [images.length];", "+\t\t\tSystem.arraycopy (images, 0, bestImages, 0, images.length);", "+\t\t\tdatas = new ImageData [images.length];", "+\t\t\tfor (int i=0; i<datas.length; i++) {", "+\t\t\t\tdatas [i] = images [i].getImageData ();", "+\t\t\t}", "+\t\t\timages = bestImages;", "+\t\t\tsort (images, datas);", "+\t\t}", "+\t\tfor (int i = 0; i < images.length; i++) {", "+\t\t\tint frame = OS.BitmapFrame_Create (images [i].handle);", "+\t\t\tOS.BitmapFrameCollection_Add (frames, frame);", "+\t\t\tOS.GCHandle_Free (frame);", "+\t\t}", "+\t}", "+\tOS.GCHandle_Free (frames);", "+\tint stream = OS.gcnew_MemoryStream ();", "+\tOS.BitmapEncoder_Save (encoder, stream);", "+\tOS.GCHandle_Free (encoder);", "+\tint decoder = OS.BitmapDecoder_Create (stream, OS.BitmapCreateOptions_None, OS.BitmapCacheOption_Default);", "+\tframes = OS.BitmapDecoder_Frames (decoder);", "+\tint icon = OS.BitmapFrameCollection_default (frames, 0);", "+\tOS.GCHandle_Free (frames);", "+\tOS.GCHandle_Free (decoder);", "+\tOS.Window_Icon(shellHandle, icon);", "+\tOS.GCHandle_Free (icon);"]}], "num": 25062}