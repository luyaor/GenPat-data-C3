{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba76f60504df5a813ff9b691a0626d2e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169ab76de8e68e3812a7747a13686526", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "a77f01ad32aee4b2051355e0bb7f1229b1e344f8", "commitAfterChange": "475fd80af7f44f11c184ce4e415e7e668e7066c7", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  LRESULT wmSysKeyDown (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmSysKeyDown (int hwnd, int wParam, int lParam)", "diff": ["+\t\t\t/*", "+\t\t\t* Feature in Windows.  Calling to ToAscii() or ToUnicode(), clears", "+\t\t\t* the accented state such that the next WM_CHAR loses the accent.", "+\t\t\t* This makes is critical that the accent key is detected.  Also,", "+\t\t\t* these functions clear the character that is entered using the", "+\t\t\t* special Windows keypad sequence when NumLock is down (ie. typing ", "+\t\t\t* ALT+0231 should gives 'c' with a cedilla when NumLock is down).", "+\t\t\t*/", "+\t\t\tif (display.asciiKey (display.lastKey) != 0) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10bd890154f8d0405e1925afd2bccfb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "e07421d7ad3095ac3b4269a15d64f1ba415fcb3b", "commitAfterChange": "5ad37348be00037751ae1867dd2496296ebe03cc", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  int kEventControlHitTest (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlHitTest (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t/*", "+\t\t* Feature in the Macintosh.  When kWindowCompositingAttribute is", "+\t\t* set in the window, controls within the window are selected when", "+\t\t* any button is pressed, not just the left one.  When the control", "+\t\t* has a menu, this causes both selection and a menu to be displayed.", "+\t\t* The fix is to check for button two and avoid setting the part", "+\t\t* code, which stops the selection from happening.", "+\t\t*/\t\t", "+\t\tif (display.clickCountButton == 2) return OS.noErr;"]}], "num": 21247}