{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f96770bb136bee9da3404f855babc17", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90acfabf878db21196ec66e396e2f879", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f6e418ce08de208f524d556323de8e3b12653f8f", "commitAfterChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public int indexOf (MenuItem item)", "signatureAfterChange": " public int indexOf (MenuItem item)", "diff": ["-\t", "-\t/* AW", "-\tint index = 0;", "-\tMENUITEMINFO info = new MENUITEMINFO ();", "-\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\tinfo.fMask = OS.MIIM_ID;", "-\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {", "-\t\tif (info.wID == item.id) return index;", "-\t\tindex++;", "-\t}", "-\t*/", "-\t", "-\tint[] menu= new int[1];", "-\tshort[] index= new short[1];", "-\tif (OS.GetIndMenuItemWithCommandID(handle, item.id, 1, menu, index) == OS.noErr) {", "-\t\tif (handle == menu[0])\t// ensure that we found item not in submenu", "-\t\t\treturn index[0];", "-\t}", "+\tint [] outMenu = new int [1];", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (handle, item.id, 1, outMenu, outIndex) == OS.noErr) {", "+\t\treturn handle == outMenu [0] ? outIndex [0] - 1 : 0;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e45d0cb5a63bf48382ea9b12da603296", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": " public int indexOf (MenuItem item)", "signatureAfterChange": "  public int indexOf (MenuItem item)", "diff": ["- */", "+", "-\t", "-\t/* AW", "-\tint index = 0;", "-\tMENUITEMINFO info = new MENUITEMINFO ();", "-\tinfo.cbSize = MENUITEMINFO.sizeof;", "-\tinfo.fMask = OS.MIIM_ID;", "-\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {", "-\t\tif (info.wID == item.id) return index;", "-\t\tindex++;", "-\t}", "-\t*/", "-\t", "-\tint[] menu= new int[1];", "-\tshort[] index= new short[1];", "-\tif (OS.GetIndMenuItemWithCommandID(handle, item.id, 1, menu, index) == OS.kNoErr) {", "-\t\tif (handle == menu[0])\t// ensure that we found item not in submenu", "-\t\t\treturn index[0];", "-\t}", "+\tint [] outMenu = new int [1];", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (handle, item.id, 1, outMenu, outIndex) == OS.noErr) {", "+\t\treturn handle == outMenu [0] ? outIndex [0] - 1 : 0;", "+\t}\t"]}], "num": 16264}