{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc20069aebff34e53210d3e061c6ae3c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c969ef168af49b8f463c2e65e59828", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/internal/Converter.java", "commitBeforeChange": "5f80bb3b53d7e26adb3e7ce4f4f973204cc40174", "commitAfterChange": "5fbe5d6518706b4f002ddbbebf7e1f63d1877af8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r public static byte [] wcsToMbcs (String codePage, char [] buffer, boolean terminate)", "signatureAfterChange": "\r \r public static byte [] wcsToMbcs (String codePage, char [] buffer, boolean terminate)", "diff": ["-\t//SLOW AND BOGUS\r", "-\tString cp = codePage == null ? defaultCodePage () : codePage;\r", "-\ttry {\r", "-\t\tif (!terminate) return new String (buffer).getBytes (cp);\r", "-\t\tbyte [] buffer1 = new String (buffer).getBytes (cp);\r", "-\t\tbyte [] buffer2 = new byte [buffer1.length + 1];\r", "-\t\tSystem.arraycopy (buffer1, 0, buffer2, 0, buffer1.length);\r", "-\t\treturn buffer2;\r", "-\t} catch (Exception e) {\r", "-\t\treturn terminate ? NullByteArray : EmptyByteArray;\r", "-\t}\r", "+\tint [] items_read = new int [1], items_written = new int [1];\r", "+\tint ptr = OS.g_utf16_to_utf8 (buffer, buffer.length, items_read, items_written, null);\r", "+\tif (ptr == 0) return terminate ? NullByteArray : EmptyByteArray;\r", "+\tint written = items_written [0];\r", "+\t//TEMPORARY CODE - convertion stops at the first NULL\r", "+\tif (items_read [0] != buffer.length) written++;\r", "+\tbyte [] bytes = new byte [written + (terminate ? 1 : 0)];\r", "+\tOS.memmove (bytes, ptr, written);\r", "+\tOS.g_free (ptr);\r", "+\treturn bytes;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0134354935a0aca9777d376c88c22e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/internal/Converter.java", "commitBeforeChange": "5f80bb3b53d7e26adb3e7ce4f4f973204cc40174", "commitAfterChange": "5fbe5d6518706b4f002ddbbebf7e1f63d1877af8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public static char [] mbcsToWcs (String codePage, byte [] buffer)", "signatureAfterChange": "\r \r public static char [] mbcsToWcs (String codePage, byte [] buffer)", "diff": ["-\t//SLOW AND BOGUS\r", "-\tString cp = codePage == null ? defaultCodePage () : codePage;\r", "-\ttry {\r", "-\t\treturn new String (buffer, cp).toCharArray ();\r", "-\t} catch (Exception e) {\r", "-\t\treturn NullCharArray;\r", "-\t}\r", "+\tint [] items_written = new int [1];\r", "+\tint ptr = OS.g_utf8_to_utf16 (buffer, buffer.length, null, items_written, null);\r", "+\tif (ptr == 0) return EmptyCharArray;\r", "+\tint length = items_written [0];\r", "+\tchar [] chars = new char [length];\r", "+\tOS.memmove (chars, ptr, length * 2);\r", "+\tOS.g_free (ptr);\r", "+\treturn chars;\r"]}], "num": 20353}