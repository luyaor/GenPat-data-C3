{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95613e241eefe85bda1a9b99e6e13b11", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e3f8da91455befe0ec48669982c933", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "7f1555a570e0630345de4a3befbd9ab7828e99f7", "commitAfterChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " Point drawImage(GC gc, Point destinationPosition, int index)", "signatureAfterChange": " Point drawImage(GC gc, Point destinationPosition, int index)", "diff": ["+\tint itemHeight = parent.getItemHeight();", "-\t\t// full row select would obscure transparent images in all but the first column", "-\t\t// so always clear the image area in this case. Fixes 1FYNITC", "-\t\tif ((parent.getStyle() & SWT.FULL_SELECTION) != 0 && index != TableColumn.FIRST) {", "+\t\tif (index == TableColumn.FIRST){", "+\t\t\tgc.setBackground(getBackground(index));", "-\t\t\t\tdestinationImageExtent.x, destinationImageExtent.y);", "+\t\t\t\tdestinationImageExtent.x, itemHeight);", "+\t\t} else {", "+\t\t\t// full row select would obscure transparent images in all but the first column", "+\t\t\t// so always clear the image area in this case. Fixes 1FYNITC", "+\t\t\tif ((parent.getStyle() & SWT.FULL_SELECTION) != 0) {", "+\t\t\t\tgc.fillRectangle(", "+\t\t\t\t\tdestinationPosition.x, destinationPosition.y,\t\t\t", "+\t\t\t\t\tdestinationImageExtent.x, destinationImageExtent.y);", "+\t\t\t}", "-\t\timageOffset = (parent.getItemHeight() - destinationImageExtent.y) / 2;", "+\t\timageOffset = (itemHeight - destinationImageExtent.y) / 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "744e0c942174c241d059f963445e5435", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "a137c5853ab0ae7afcd3da9d3d83b4bdd3098087", "commitAfterChange": "a0843f74d4e12fd014b36423a42de3c3ddd5e16b", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 60, "signatureBeforeChange": "  void updateText (boolean layout)", "signatureAfterChange": "  void updateText (boolean layout)", "diff": ["-\t\tColor foreground = parent.getForeground();", "-\t\tgc.setForeground(foreground);", "+\t\tColor foreground = parent.getForeground ();", "+\t\tgc.setForeground (foreground);", "+\t\tif (parent.background != null) {", "+\t\t\tgc.setBackground (parent.getBackground ());", "+\t\t\tgc.fillRectangle (0, 0, size.x, size.y);", "+\t\t}", "-\t\tImageData data = image.getImageData ();", "-\t\tdata.transparentPixel = 0xFFFFFF;", "-\t\timage.dispose ();", "-\t\timage = new Image (display, data, data.getTransparencyMask());", "+\t\tif (parent.background == null) {", "+\t\t\tImageData data = image.getImageData ();", "+\t\t\tdata.transparentPixel = 0xFFFFFF;", "+\t\t\timage.dispose ();", "+\t\t\timage = new Image (display, data, data.getTransparencyMask ());", "+\t\t}"]}], "num": 60956}