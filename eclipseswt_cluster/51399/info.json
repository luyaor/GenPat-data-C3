{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f90f7731b4093b9d7a9c3883037bc4b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6696d295ec9dba9230b4ad11406077c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "22ebc0bfda7d51c576a69d9ad65b1367c74fe002", "commitAfterChange": "b024555b7be59ed9c69f2568310cc99cd0b6720a", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-", "-LRESULT WM_KEYDOWN (int wParam, int lParam) {", "-\tLRESULT result = super.WM_KEYDOWN (wParam, lParam);", "-\tif (result != null) return result;", "-\tswitch (wParam) {", "-\t\tcase OS.VK_SPACE: {", "-\t\t\t\treturn LRESULT.ZERO;", "-\t\t\tbreak;", "+", "+LRESULT WM_KEYDOWN (int wParam, int lParam) {", "+\tLRESULT result = super.WM_KEYDOWN (wParam, lParam);", "+\tif (result != null) return result;", "+\tswitch (wParam) {", "+\t\tcase OS.VK_SPACE:", "+\t\t\t/*", "+\t\t\t* Ensure that the window proc does not process VK_SPACE", "+\t\t\t* so that it can be handled in WM_CHAR.  This allows the", "+\t\t\t* application to cancel an operation that is normally", "+\t\t\t* performed in WM_KEYDOWN from WM_CHAR.", "+\t\t\t*/", "+\t\t\treturn LRESULT.ZERO;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3254d8d39c6fee34961622791bc2a09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "71383ddf70997eb356fc8596e615d7524d8c3273", "commitAfterChange": "a6baca0c93ee7535e1500c50336143cc4b7239f0", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \r LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_GETDLGCODE (int wParam, int lParam)", "diff": ["+LRESULT WM_GETDLGCODE (int wParam, int lParam) {\r", "+\tLRESULT result = super.WM_GETDLGCODE (wParam, lParam);\r", "+\t/*\r", "+\t* Return DLGC_BUTTON so that mnemonics will be\r", "+\t* processed without needing to press the ALT key\r", "+\t* when the widget has focus.\r", "+\t*/\r", "+\tif (result != null) return result;\r", "+\treturn new LRESULT (OS.DLGC_BUTTON);\r", "+}\r", "-\r", "-LRESULT WM_CHAR (int wParam, int lParam) {\r", "-\tLRESULT result = super.WM_CHAR (wParam, lParam);\r", "-\tif (result != null) return result;\r", "-\tint [] id = new int [1];\r", "-\tif (OS.SendMessage (handle, OS.TB_MAPACCELERATOR, wParam, id) != 0) {\r", "-\t\tint index = OS.SendMessage (handle, OS.TB_COMMANDTOINDEX, id [0], 0);\r", "-\t\tif (index != -1) {\r", "-\t\t\tOS.SendMessage (handle, OS.TB_SETHOTITEM, index, 0);\r", "-\t\t\titems [id [0]].click (false);\r", "-\t\t\treturn LRESULT.ZERO;\r", "-\t\t}\r", "-\t}\r", "-\treturn result;\r"]}], "num": 51399}