{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "901f2e6c4f9f44df59d25cfb669597e5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad027d8832bf4661f24da57889c70b6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "2f67431438840595e1e9791a10355b49c31e5378", "commitAfterChange": "8df10004fc678a6a9f643424a1754573f7011ae9", "methodNumberBeforeChange": 304, "methodNumberAfterChange": 304, "signatureBeforeChange": " public void setTopIndex(int topIndex)", "signatureAfterChange": " public void setTopIndex(int topIndex)", "diff": ["-\tint lineCount = content.getLineCount();", "-\t//TODO broken for variable line height", "-\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "-\tif (topIndex < 0) {", "-\t\ttopIndex = 0;", "-\t} else if (topIndex > lineCount - pageSize) {", "-\t\ttopIndex = lineCount - pageSize;", "-\t}", "-\tint pixel = getLinePixel(topIndex);", "+\tint lineCount = content.getLineCount(), pixel;", "+\tif (isFixedLineHeight()) {", "+\t\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "+\t\tif (topIndex < 0) {", "+\t\t\ttopIndex = 0;", "+\t\t} else if (topIndex > lineCount - pageSize) {", "+\t\t\ttopIndex = lineCount - pageSize;", "+\t\t}", "+\t\tpixel = getLinePixel(topIndex);", "+\t} else {", "+\t\ttopIndex = Math.max(0, Math.min(lineCount - 1, topIndex));", "+\t\tpixel = getLinePixel(topIndex);", "+\t\tif (pixel > 0) {", "+\t\t\tpixel = getAvailableHeightBellow(pixel);", "+\t\t} else {", "+\t\t\tpixel = getAvailableHeightAbove(pixel);", "+\t\t}", "+\t} "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8f47b9eebe4b39fcc08c66c4400b68c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 431, "methodNumberAfterChange": 302, "signatureBeforeChange": " public void setTopIndex(int topIndex)", "signatureAfterChange": " public void setTopIndex(int topIndex)", "diff": ["-\tint lineCount = logicalContent.getLineCount();", "-\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "-\t", "-\t}\t", "+\t}", "+\tint lineCount = content.getLineCount();", "+\t//TODO broken for variable line height", "+\tint pageSize = Math.max(1, Math.min(lineCount, getLineCountWhole()));", "-\t}", "-\telse ", "-\tif (topIndex > lineCount - pageSize) {", "+\t} else if (topIndex > lineCount - pageSize) {", "-\tif (wordWrap) {", "-\t\tint logicalLineOffset = logicalContent.getOffsetAtLine(topIndex);", "-\t\ttopIndex = content.getLineAtOffset(logicalLineOffset);", "-\t}", "-\tsetVerticalScrollOffset(topIndex * getVerticalIncrement(), true);", "+\tint pixel = getLinePixel(topIndex);", "+\tscrollVertical(pixel, true);"]}], "num": 24230}