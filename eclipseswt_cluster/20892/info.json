{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b9b2954ddfde900fe489d2eabd7844e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1171f099b464a78ae99ddd019d45838b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "9589f5ace9834c0def730a259bf141a95bafa0fc", "commitAfterChange": "383a80433afc61cc886a8f79bd2505cc671c6501", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public void setEnabled (boolean enabled)", "signatureAfterChange": "\r public void setEnabled (boolean enabled)", "diff": ["-\t\t/* if it is a top level menu item, set the state in the corresponding tool item */\r", "-\t\tDecorations shell = parent.parent;\r", "-\t\tif (parent == shell.menuBar) {\r", "-\t\t\tint fsState = OS.SendMessage (shell.hwndTB, OS.TB_GETSTATE, id, 0);\r", "-\t\t\tfsState &= ~OS.TBSTATE_ENABLED;\r", "-\t\t\tif (enabled) fsState |= OS.TBSTATE_ENABLED;\r", "-\t\t\tOS.SendMessage (shell.hwndTB, OS.TB_SETSTATE, id, fsState);\r", "+\t\tif (OS.IsPPC) {\r", "+\t\t\t/* if it is a top level menu item, set the state in the corresponding tool item */\r", "+\t\t\tDecorations shell = parent.parent;\r", "+\t\t\tif (parent == shell.menuBar) {\r", "+\t\t\t\tint fsState = OS.SendMessage (shell.hwndTB, OS.TB_GETSTATE, id, 0);\r", "+\t\t\t\tfsState &= ~OS.TBSTATE_ENABLED;\r", "+\t\t\t\tif (enabled) fsState |= OS.TBSTATE_ENABLED;\r", "+\t\t\t\tOS.SendMessage (shell.hwndTB, OS.TB_SETSTATE, id, fsState);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e46d2a36deaefc65d866b909496838b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "3e0761174be0fece9e72ba33278fba6a309d93c2", "commitAfterChange": "cf16d9c5894426fff41434c80f15d96ea4812bee", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSCOMMAND (int wParam, int lParam)", "diff": ["-\t* NOTE:  The default window proc activates the next top-level", "-\t* window in the Z order while ShowWindow () with SW_SHOWMINIMIZED", "-\t* does not.  There is no fix for this at this time.", "+\t* NOTE:  The default window proc activates the next", "+\t* top-level window in the Z-order while ShowWindow()", "+\t* with SW_SHOWMINIMIZED does not.  There is no fix for", "+\t* this at this time.", "-\tint cmd = wParam & 0xFFF0;", "-\tswitch (cmd) {", "-\t\tcase OS.SC_MINIMIZE:", "-\t\t\tlong memory = Runtime.getRuntime ().totalMemory ();", "-\t\t\tif (memory >= 32 * 1024 * 1024) {", "-\t\t\t\tOS.ShowWindow (handle, OS.SW_SHOWMINIMIZED);", "-\t\t\t\treturn LRESULT.ZERO;", "-\t\t\t}", "+\tif (OS.IsWinNT) {", "+\t\tint cmd = wParam & 0xFFF0;", "+\t\tswitch (cmd) {", "+\t\t\tcase OS.SC_MINIMIZE:", "+\t\t\t\tlong memory = Runtime.getRuntime ().totalMemory ();", "+\t\t\t\tif (memory >= 32 * 1024 * 1024) {", "+\t\t\t\t\tOS.ShowWindow (handle, OS.SW_SHOWMINIMIZED);", "+\t\t\t\t\treturn LRESULT.ZERO;", "+\t\t\t\t}", "+\t\t}"]}], "num": 20892}