{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "642d23bbd0d19ddb8de916b3fa45fd90", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afcfb08e10ba2403616c580643f03afe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b2f615012e6ccb5bb48de8158061d8fb44ca11c3", "commitAfterChange": "3d9c2cb2520654c5b26b0b0cfee3576c14bbb71b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\t\t/* Ensure that the status text can be set through means like javascript */ ", "+\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_DISABLEWINDOWSTATUSCHANGE, true);", "+\t\trc = prefBranch.SetBoolPref (buffer, 0);", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tbrowser.dispose ();", "+\t\t\terror (rc);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a382adf0e4cdc5b6031113b768c40516", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "68c806c67ab749e6cce9971643b0bff5edff9d71", "commitAfterChange": "2af93dbd1644168624ca28d452a4ce599d0e9d63", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\t\t/*", "+\t\t* Ensure that windows that are shown during page loads are not blocked.  Firefox may", "+\t\t* try to block these by default since such windows are often unwelcome, but this", "+\t\t* assumption should not be made in the Browser's context.  Since the Browser client", "+\t\t* is responsible for creating the new Browser and Shell in an OpenWindowListener,", "+\t\t* they should decide whether the new window is unwelcome or not and act accordingly. ", "+\t\t*/", "+\t\tbuffer = MozillaDelegate.wcsToMbcs (null, PREFERENCE_DISABLEOPENDURINGLOAD, true);", "+\t\trc = prefBranch.SetBoolPref (buffer, 0);", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tbrowser.dispose ();", "+\t\t\terror (rc);", "+\t\t}"]}], "num": 6972}