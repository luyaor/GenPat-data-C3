{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9e70d53c2497f11b3e1cddedb38d76e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897746a8c89e010fcd822b79b4c9bf73", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/HelperAppLauncherDialog.java", "commitBeforeChange": "a98eb2d6a83b6b63d61b42e51f7f149a33b7fbac", "commitAfterChange": "395692675e255578e24bb51eb09e1b4119931dff", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int Show (int aLauncher, int aContext, int aReason)", "signatureAfterChange": "  int Show (int aLauncher, int aContext, int aReason)", "diff": ["-\t * The interface for nsIHelperAppLauncher changed as of mozilla 1.8.  Query the received", "-\t * nsIHelperAppLauncher for the new interface, and if it is not found then fall back to", "-\t * the old interface. ", "-\t */", "+\t* The interface for nsIHelperAppLauncher changed in GRE versions 1.8 and 1.9.  Query for", "+\t* each of these interfaces in turn until one is found.", "+\t*/", "-\tint rc = supports.QueryInterface (nsIHelperAppLauncher_1_8.NS_IHELPERAPPLAUNCHER_IID, result);", "-\tif (rc == 0) {\t/* >= 1.8 */", "+\tint rc = supports.QueryInterface (nsIHelperAppLauncher_1_9.NS_IHELPERAPPLAUNCHER_IID, result);", "+\tif (rc == 0) {", "+\t\tnsIHelperAppLauncher_1_9 helperAppLauncher = new nsIHelperAppLauncher_1_9 (aLauncher);", "+\t\trc = helperAppLauncher.SaveToDisk (0, false);", "+\t\thelperAppLauncher.Release ();", "+\t\treturn rc;", "+\t}", "+", "+\tresult[0] = 0;", "+\trc = supports.QueryInterface (nsIHelperAppLauncher_1_8.NS_IHELPERAPPLAUNCHER_IID, result);", "+\tif (rc == 0) {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba3906582c09e971a96658159f45d0f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "f7f5c375928378127062a3e02e04949158cfcf27", "commitAfterChange": "d05abc428f3c8f90042a97dffce16dbae47dc11d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int getLicenseInfo(GUID clsid)", "signatureAfterChange": " protected int getLicenseInfo(GUID clsid)", "diff": ["-", "-\tif (COM.CoGetClassObject(clsid, COM.CLSCTX_INPROC_HANDLER | COM.CLSCTX_INPROC_SERVER, 0, COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "+\tif (COM.CoGetClassObject(clsid, COM.CLSCTX_INPROC_HANDLER", "+\t\t\t\t| COM.CLSCTX_INPROC_SERVER, 0, COM.IIDIClassFactory, ppvObject) != COM.S_OK) {", "-\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "-\tLICINFO licinfo = new LICINFO();", "-\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "-\t\tclassFactory.Release();", "-\t\treturn 0;", "-\t}", "-\tint /*long*/[] pBstrKey = new int /*long*/[1];", "-\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "-\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "-\t\t\tclassFactory.Release();", "-\t\t\treturn pBstrKey[0];", "+\tIUnknown unknown = new IUnknown(ppvObject[0]);", "+\ttry {", "+\t\tif (unknown.QueryInterface(COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "+\t\t\treturn 0;", "+\t\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "+\t\ttry {", "+\t\t\tLICINFO licinfo = new LICINFO();", "+\t\t\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "+\t\t\t\treturn 0;", "+\t\t\t}", "+\t\t\tint /*long*/[] pBstrKey = new int /*long*/[1];", "+\t\t\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "+\t\t\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "+\t\t\t\t\treturn pBstrKey[0];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn 0;", "+\t\t} finally {", "+\t\t\tclassFactory.Release();", "+\t\t}", "+\t} finally {", "+\t\tunknown.Release();\t", "-\tclassFactory.Release();", "-\treturn 0;"]}], "num": 9335}