{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5e47b6fea09ab601ea04a4c2c155bb2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e87b7ed534a531b1611b89108a6522e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "8e9705d93325d1390b1c14aa0ba55b9649457ef3", "commitAfterChange": "6bc2e4ca5332d0ed9c2e86c21bb2d52348bc9673", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r public Object getContents(Transfer transfer)", "signatureAfterChange": "\r \r public Object getContents(Transfer transfer)", "diff": ["-\t\tselection_data = OS.gtk_clipboard_wait_for_contents(pGtkClipboard, typeIds[i]);\r", "+\t\t// try the primary selection first\r", "+\t\tselection_data = OS.gtk_clipboard_wait_for_contents(pGtkPrimary, typeIds[i]);\r", "-\tif (selection_data == 0) return null; // No data available for this transfer\r", "+\tif (selection_data == 0) {\r", "+\t\t// try the clipboard selection second\r", "+\t\tfor (int i = 0; i < typeIds.length; i++) {\r", "+\t\t\tselection_data = OS.gtk_clipboard_wait_for_contents(pGtkClipboard, typeIds[i]);\r", "+\t\t\tif( selection_data != 0) break;\r", "+\t\t};\r", "+\t}\r", "+\tif (selection_data == 0) {\r", "+\t\treturn null; // No data available for this transfer\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e84067ad30b176c9f41ecdde22b9166", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "152b8ecc4468b8428592c6205680eaeb0e413474", "commitAfterChange": "f66c549c26fb5e54d5fe957977b746561be541c9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t} else if (method.getName().equals(\"VtblCall\")) {", "+\t} else if (method.getName().startsWith(\"VtblCall\")) {", "-\t\toutput(\" (STDMETHODCALLTYPE *)())(*(int **)arg1)[arg0])\");", "+\t\toutput(\" (STDMETHODCALLTYPE *)(\");", "+\t\tfor (int i = 1; i < paramTypes.length; i++) {", "+\t\t\tif (i != 1) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\toutput(getTypeSignature4(paramType));", "+\t\t}", "+\t\toutput(\"))(*(int **)arg1)[arg0])\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a4df19c1f5286d8f55f26b3947e796", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "79096269bec9be1584da7b8d31d5fe9573da995d", "commitAfterChange": "6509ef8bfeb70fc2d3b31e1b10ac7b68ca1e7295", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " void setButtonBounds()", "signatureAfterChange": " void setButtonBounds()", "diff": ["-\t\t\tint lastIndex = getLastIndex();", "+\t\t\tint i = 0, lastIndex = -1;", "+\t\t\twhile (i < priority.length && items[priority[i]].showing) {", "+\t\t\t\tlastIndex = Math.max(lastIndex, priority[i++]);", "+\t\t\t}", "+\t\t\tif (lastIndex == -1) lastIndex = firstIndex;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e47da937b4a77bff016b0a5e7b1457", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_ImageLoader.java", "commitBeforeChange": "0461f74b67375ddab2ba44f6763a1f498daff215", "commitAfterChange": "97e38307cc492c75c11b3f0b863d803dfbe32dac", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test_removeImageLoaderListenerLorg_eclipse_swt_graphics_ImageLoaderListener()", "signatureAfterChange": "  public void test_removeImageLoaderListenerLorg_eclipse_swt_graphics_ImageLoaderListener()", "diff": ["-\tImageLoaderListener loaderListener = new ImageLoaderListener() {", "-\t\tpublic void imageDataLoaded(ImageLoaderEvent e) {", "+\tImageLoaderListener[] listeners = new ImageLoaderListener[COUNT];", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tlisteners[i] = new ImageLoaderListener() {", "+\t\t\tpublic void imageDataLoaded(ImageLoaderEvent e) {}", "-\t};", "+\t\tloader.addImageLoaderListener(listeners[i]);", "+\t}", "-\t\tloader.removeImageLoaderListener(loaderListener);", "+\t\tloader.removeImageLoaderListener(listeners[i]);"]}], "num": 24709}