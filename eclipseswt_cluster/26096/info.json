{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1db5b362669ad8b2422d1c1086c393a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbcacf531916dd369ff0a4b0f39f6f2d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "a4973a3115c15364761906ff1d392981af1f6dae", "commitAfterChange": "d24cc875dbac5a052da7e8dae172e4ff7a028bf3", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\tif (hwnd == hwndText) {", "+\tif (hwnd == hwndText || hwnd == hwndUpDown) {", "-\t\t\tcase OS.WM_CHAR:\t\tresult = WM_CHAR (wParam, lParam); break;", "-\t\t\tcase OS.WM_IME_CHAR:\tresult = WM_IME_CHAR (wParam, lParam); break;", "-\t\t\tcase OS.WM_KEYDOWN:\t\tresult = WM_KEYDOWN (wParam, lParam); break;", "-\t\t\tcase OS.WM_KEYUP:\t\tresult = WM_KEYUP (wParam, lParam); break;", "-\t\t\tcase OS.WM_SYSCHAR:\t\tresult = WM_SYSCHAR (wParam, lParam); break;", "-\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = WM_SYSKEYDOWN (wParam, lParam); break;", "-\t\t\tcase OS.WM_SYSKEYUP:\tresult = WM_SYSKEYUP (wParam, lParam); break;", "-\t\t\t\t\t\t", "-\t\t\tcase OS.WM_CONTEXTMENU:", "-\t\t\t\t/* Pretend the WM_CONTEXTMENU was sent to the spinner */", "-\t\t\t\tresult = WM_CONTEXTMENU (handle, lParam); break;", "-\t\t\t\t", "-//\t\t\t/* Focus messaegs */\t", "-//\t\t\tcase OS.WM_KILLFOCUS:\t\t\tresult = WM_KILLFOCUS (wParam, lParam); break;", "-//\t\t\tcase OS.WM_SETFOCUS:\t\t\tresult = WM_SETFOCUS (wParam, lParam); break;", "+\t\t\tcase OS.WM_CHAR:\t\tresult = wmChar (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_IME_CHAR:\tresult = wmIMEChar (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_KEYDOWN:\t\tresult = wmKeyDown (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_KEYUP:\t\tresult = wmKeyUp (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_SYSCHAR:\t\tresult = wmSysChar (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = wmSysKeyDown (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_SYSKEYUP:\tresult = wmSysKeyUp (hwnd, wParam, lParam); break;", "+\t", "+\t\t\t/* Mouse Messages */", "+\t\t\tcase OS.WM_LBUTTONDBLCLK:\tresult = wmLButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_LBUTTONDOWN:\t\tresult = wmLButtonDown (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_LBUTTONUP:\t\tresult = wmLButtonUp (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MBUTTONDBLCLK:\tresult = wmMButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MBUTTONDOWN:\t\tresult = wmMButtonDown (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MBUTTONUP:\t\tresult = wmMButtonUp (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MOUSEHOVER:\t\tresult = wmMouseHover (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MOUSELEAVE:\t\tresult = wmMouseLeave (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_MOUSEMOVE:\t\tresult = wmMouseMove (hwnd, wParam, lParam); break;", "+\t//\t\tcase OS.WM_MOUSEWHEEL:\t\tresult = wmMouseWheel (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_RBUTTONDBLCLK:\tresult = wmRButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_RBUTTONDOWN:\t\tresult = wmRButtonDown (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_RBUTTONUP:\t\tresult = wmRButtonUp (hwnd, wParam, lParam); break;", "+\t\t\t", "+\t\t\t/* Focus Messages */", "+\t\t\tcase OS.WM_SETFOCUS:\t\tresult = wmSetFocus (hwnd, wParam, lParam); break;", "+\t\t\tcase OS.WM_KILLFOCUS:\t\tresult = wmKillFocus (hwnd, wParam, lParam); break;", "+\t", "+\t\t\t/* Paint messages */", "+\t\t\tcase OS.WM_PAINT:\t\t\tresult = wmPaint (hwnd, wParam, lParam); break;", "+\t", "+\t\t\t/* Menu messages */", "+\t\t\tcase OS.WM_CONTEXTMENU:\t\tresult = wmContextMenu (hwnd, wParam, lParam);", "+\t//\t\tcase OS.WM_MENUCHAR:\t\tresult = WM_MENUCHAR (wParam, lParam); break;", "+\t//\t\tcase OS.WM_MENUSELECT:\t\tresult = WM_MENUSELECT (wParam, lParam); break;", "-\t\t\t\tresult = wmClipboard (hwndText, msg, wParam, lParam);", "-\t\t\t\tbreak;\t\t\t\t\t", "+\t\t\t\tif (hwnd == hwndText) {", "+\t\t\t\t\tresult = wmClipboard (hwnd, msg, wParam, lParam);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "-\t\treturn OS.CallWindowProc (EditProc, hwnd, msg, wParam, lParam);", "-\t}", "-\tif (hwnd == hwndUpDown) {", "-\t\treturn OS.CallWindowProc (UpDownProc, hwnd, msg, wParam, lParam);", "+\t\treturn callWindowProc (hwnd, msg, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4911aa8667133578f32e98c1837713fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "272967205f3824ec29456112026262c64ae69dfa", "commitAfterChange": "fc62fa389f9358a82d98c59fbeba910f7ca8c593", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 67, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["-\t\t\t\tcase OS.WM_CHAR:\t\tresult = WM_CHAR (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_IME_CHAR:\tresult = WM_IME_CHAR (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_KEYDOWN:\t\tresult = WM_KEYDOWN (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_KEYUP:\t\tresult = WM_KEYUP (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_SYSCHAR:\t\tresult = WM_SYSCHAR (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = WM_SYSKEYDOWN (wParam, lParam); break;", "-\t\t\t\tcase OS.WM_SYSKEYUP:\tresult = WM_SYSKEYUP (wParam, lParam); break;", "+\t\t\t\tcase OS.WM_CHAR:\t\tresult = wmChar (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_IME_CHAR:\tresult = wmIMEChar (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_KEYDOWN:\t\tresult = wmKeyDown (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_KEYUP:\t\tresult = wmKeyUp (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_SYSCHAR:\t\tresult = wmSysChar (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_SYSKEYDOWN:\tresult = wmSysKeyDown (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_SYSKEYUP:\tresult = wmSysKeyUp (hwnd, wParam, lParam); break;", "-\t\t\t\t/* Context menu messages */", "-\t\t\t\tcase OS.WM_CONTEXTMENU:", "-\t\t\t\t\t/* Pretend the WM_CONTEXTMENU was sent to the combo box */", "-\t\t\t\t\tresult = WM_CONTEXTMENU (handle, lParam);", "-\t\t\t\t\tbreak;", "+\t\t\t\t/* Mouse Messages */", "+\t\t\t\tcase OS.WM_LBUTTONDBLCLK:\tresult = wmLButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_LBUTTONDOWN:\t\tresult = wmLButtonDown (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_LBUTTONUP:\t\tresult = wmLButtonUp (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MBUTTONDBLCLK:\tresult = wmMButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MBUTTONDOWN:\t\tresult = wmMButtonDown (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MBUTTONUP:\t\tresult = wmMButtonUp (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MOUSEHOVER:\t\tresult = wmMouseHover (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MOUSELEAVE:\t\tresult = wmMouseLeave (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_MOUSEMOVE:\t\tresult = wmMouseMove (hwnd, wParam, lParam); break;", "+//\t\t\t\tcase OS.WM_MOUSEWHEEL:\t\tresult = wmMouseWheel (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_RBUTTONDBLCLK:\tresult = wmRButtonDblClk (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_RBUTTONDOWN:\t\tresult = wmRButtonDown (hwnd, wParam, lParam); break;", "+\t\t\t\tcase OS.WM_RBUTTONUP:\t\tresult = wmRButtonUp (hwnd, wParam, lParam); break;", "+", "+\t\t\t\t/* Paint messages */", "+\t\t\t\tcase OS.WM_PAINT:\t\t\tresult = wmPaint (hwnd, wParam, lParam); break;", "+", "+\t\t\t\t/* Menu messages */", "+\t\t\t\tcase OS.WM_CONTEXTMENU:\t\tresult = wmContextMenu (hwnd, wParam, lParam);", "+//\t\t\t\tcase OS.WM_MENUCHAR:\t\tresult = WM_MENUCHAR (wParam, lParam); break;", "+//\t\t\t\tcase OS.WM_MENUSELECT:\t\tresult = WM_MENUSELECT (wParam, lParam); break;", "-\t\t\t\t\t\tresult = wmClipboard (hwndText, msg, wParam, lParam);", "+\t\t\t\t\t\tresult = wmClipboard (hwnd, msg, wParam, lParam);", "-\t\t\t\t\t\t\treturn callWindowProc (OS.CB_SETCURSEL, index, lParam);", "+\t\t\t\t\t\t\treturn callWindowProc (handle, OS.CB_SETCURSEL, index, lParam);"]}], "num": 26096}