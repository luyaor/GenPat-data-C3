{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08b5cab6496aa03986087aab5fa91d98", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c211b7d1984f9d8977b35aebb6b79c9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bd64112265c2a125577ef5db8ecfbdb762c0aeab", "commitAfterChange": "9b08189f8ee7e189cc76f5fea12f3ad05eb7e51b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void checkGC(int mask)", "signatureAfterChange": "  void checkGC(int mask)", "diff": ["-\tif ((state & (FOREGROUND | LINE_WIDTH | LINE_STYLE | LINE_JOIN | LINE_CAP)) != 0) {", "+\tif ((state & (FOREGROUND | LINE_WIDTH | LINE_STYLE | LINE_JOIN | LINE_CAP | LINE_MITERLIMIT)) != 0) {", "-\t\tint width = data.lineWidth;", "-\t\tOS.Pen_Thickness(pen, Math.max (1, width));\t\t\t", "+\t\tfloat width = data.lineWidth;", "+\t\tOS.Pen_Thickness(pen, width);", "-\t\t\tdashStyle = OS.gcnew_DashStyle(list, 0);", "+\t\t\tdashStyle = OS.gcnew_DashStyle(list, data.lineDashesOffset);", "+\t\tOS.Pen_MiterLimit(pen, data.lineMiterLimit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01d19c2131204524069872385684c154", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/internal/mozilla/XPCOMObject.java", "commitBeforeChange": "4cc5ca7de1624c8b539a57f5d1339651e93d2a21", "commitAfterChange": "6c47784c5a7b45e769c078aad8b37a11143d5176", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public XPCOMObject(int[] argCounts)", "signatureAfterChange": " \t public XPCOMObject(int[] argCounts)", "diff": ["-\tint[] callbackAddresses = new int[argCounts.length];", "+\tint /*long*/[] callbackAddresses = new int /*long*/[argCounts.length];", "-\t\t/*", "-\t\t* Note. The following code compiles without warning on a ", "-\t\t* 64 bit platform but won't run. ", "-\t\t*/", "-\t\tcallbackAddresses[i] = (int)/*64*/Callbacks[i][argCounts[i]].getAddress();", "+\t\tcallbackAddresses[i] = Callbacks[i][argCounts[i]].getAddress();", "-\tint pVtable = XPCOM.PR_Malloc(4 * argCounts.length);", "-\tXPCOM.memmove(pVtable, callbackAddresses, 4 * argCounts.length);", "-\tppVtable = XPCOM.PR_Malloc(4);", "-\tXPCOM.memmove(ppVtable, new int[] {pVtable}, 4);", "-\tObjectMap.put(new Integer(ppVtable), this);", "+\tint /*long*/ pVtable = XPCOM.PR_Malloc(OS.PTR_SIZEOF * argCounts.length);", "+\tXPCOM.memmove(pVtable, callbackAddresses, OS.PTR_SIZEOF * argCounts.length);", "+\tppVtable = XPCOM.PR_Malloc(OS.PTR_SIZEOF);", "+\tXPCOM.memmove(ppVtable, new int /*long*/[] {pVtable}, OS.PTR_SIZEOF);", "+\tObjectMap.put(new LONG(ppVtable), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6740934710329d9579c3297826ad1ea9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/internal/ole/win32/COMObject.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public COMObject(int[] argCounts)", "signatureAfterChange": " \t public COMObject(int[] argCounts)", "diff": ["-\tint[] callbackAddresses = new int[argCounts.length];", "+\tint /*long*/[] callbackAddresses = new int /*long*/[argCounts.length];", "-\tint pVtable = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, 4 * argCounts.length);", "-\tCOM.MoveMemory(pVtable, callbackAddresses, 4 * argCounts.length);", "-\tppVtable = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, 4);", "-\tCOM.MoveMemory(ppVtable, new int[] {pVtable}, 4);", "-\tObjectMap.put(new Integer(ppVtable), this);", "+\tint /*long*/ pVtable = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, OS.PTR_SIZEOF * argCounts.length);", "+\tCOM.MoveMemory(pVtable, callbackAddresses, OS.PTR_SIZEOF * argCounts.length);", "+\tppVtable = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, OS.PTR_SIZEOF);", "+\tCOM.MoveMemory(ppVtable, new int /*long*/[] {pVtable}, OS.PTR_SIZEOF);", "+\tObjectMap.put(new LONG(ppVtable), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91de1798bd897c6f551b52be14df8c78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "5c04f61b96ebe5acfb72906825424e75ed65a998", "commitAfterChange": "1a87852af7f3e19da4adcc91875a3255f83bee3b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public static void setKeyboardLanguage(int language)", "signatureAfterChange": " public static void setKeyboardLanguage(int language)", "diff": ["-\t\t\tint id = list[i] & 0x000000FF;", "+\t\t\tint id = OS.PRIMARYLANGID(OS.LOWORD(list[i]));", "-\t\t\tint id = list[i] & 0x000000FF;", "+\t\t\tint id = OS.PRIMARYLANGID(OS.LOWORD(list[i]));"]}], "num": 48495}