{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87889b6c07939b2873f497cd1fccdaa7", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59dbd42aca5000c80ac0ea3abddfb197", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem)", "signatureAfterChange": "  int calculateWidth (int index, GC gc)", "diff": ["-/* note that the result includes tree hierarchy indentation for column 0 */", "-int calculateWidth (int columnIndex, GC gc, boolean recurse, boolean callMeasureItem) {", "-\tif (!cached) return 0;", "-", "-\tint width = 0;", "-\tif (!callMeasureItem && customWidth != -1) {", "-\t\twidth = customWidth;", "-\t} else {", "-\t\tNSBrowserCell cell = parent.dataCell;", "-\t\tcell.setFont (getFont (columnIndex).handle);", "-\t\tcell.setTitle (NSString.stringWith (getText (columnIndex)));", "-\t\tImage image = getImage (columnIndex);", "-\t\tcell.setImage (image != null ? image.handle : null);", "-\t\tNSSize size = cell.cellSize ();", "-\t\twidth = (int)Math.ceil (size.width);", "-\t\tif (image != null) {", "-\t\t\t/* margin between item image and text */", "-\t\t\twidth += IMAGETEXT_MARGIN;", "-\t\t}", "-", "-\t\tif (callMeasureItem && parent.hooks (SWT.MeasureItem)) {", "-\t\t\tNSOutlineView outlineView = (NSOutlineView)parent.view;", "-\t\t\tint /*long*/ nsColumnIndex = 0;", "-\t\t\tif (parent.columnCount > 0) {", "-\t\t\t\tnsColumnIndex = outlineView.columnWithIdentifier (parent.columns[columnIndex].nsColumn);", "-\t\t\t}", "-\t\t\tint rowIndex = (int)/*64*/outlineView.rowForItem (handle);", "-\t\t\tNSRect rect = outlineView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\t\tint rowHeight = (int)outlineView.rowHeight ();", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.item = this;", "-\t\t\tevent.index = columnIndex;", "-\t\t\tevent.gc = gc;", "-\t\t\tevent.x = (int)contentRect.x;", "-\t\t\tevent.y = (int)contentRect.y;", "-\t\t\tevent.width = width;", "-\t\t\tevent.height = rowHeight;", "-\t\t\tparent.sendEvent (SWT.MeasureItem, event);", "-\t\t\tif (rowHeight < event.height) {", "-\t\t\t\toutlineView.setRowHeight (event.height);", "-\t\t\t}", "-\t\t\tif (parent.columnCount == 0) {", "-\t\t\t\tint change = event.width - (customWidth != -1 ? customWidth : width);", "-\t\t\t\tif (customWidth != -1 || event.width != width) {", "-\t\t\t\t\tcustomWidth = event.width;\t", "-\t\t\t\t}", "-\t\t\t\tif (change != 0) parent.setScrollWidth (this, false, false);", "-\t\t\t}", "-\t\t\twidth = event.width;", "-\t\t}", "+int calculateWidth (int index, GC gc) {", "+\tif (index == 0 && width != -1) return width;", "+\tFont font = null;", "+\tif (cellFont != null) font = cellFont[index];", "+\tif (font == null) font = this.font;", "+\tif (font == null) font = parent.font;", "+\tif (font == null) font = parent.defaultFont();", "+\tString text = index == 0 ? this.text : (strings == null ? \"\" : strings [index]);", "+\tImage image = index == 0 ? this.image : (images == null ? null : images [index]);", "+\tNSBrowserCell cell = parent.dataCell;", "+\tcell.setFont (font.handle);", "+\tcell.setTitle (NSString.stringWith(text != null ? text : \"\"));", "+\tcell.setImage (image != null ? image.handle : null);", "+\tNSSize size = cell.cellSize ();", "+\tint width = (int)Math.ceil (size.width);", "+\tboolean sendMeasure = true;", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tsendMeasure = cached;", "-", "-\tif (columnIndex == 0) {", "+\tif (sendMeasure && parent.hooks (SWT.MeasureItem)) {", "+\t\tgc.setFont (font);", "+\t\tEvent event = new Event ();", "+\t\tevent.item = this;", "+\t\tevent.index = index;", "+\t\tevent.gc = gc;", "+\t\tNSTableView widget = (NSTableView)parent.view;", "+\t\tint height = (int)widget.rowHeight ();", "+\t\tevent.width = width;", "+\t\tevent.height = height;", "+\t\tparent.sendEvent (SWT.MeasureItem, event);", "+\t\tif (height < event.height) {", "+\t\t\twidget.setRowHeight (event.height);", "+\t\t\twidget.setNeedsDisplay (true);", "+\t\t}", "+\t\twidth = event.width;", "+\t}", "+\tif (index == 0) {", "-\t}", "-\tif (recurse && expanded) {", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\tTreeItem item = items [i];", "-\t\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\t\twidth = Math.max (width, item.calculateWidth (columnIndex, gc, recurse, callMeasureItem));", "-\t\t\t}", "-\t\t}", "+\t\tthis.width = width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bdac3ce75db287fc1b1f09df25979a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "7626dd6837c79b3d44c889ada194bd6cf6fefbaf", "commitAfterChange": "f490c340b8fb06c8878d22853dfd8ecb77079ee9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int calculateWidth (int columnIndex, GC gc, boolean callMeasureItem)", "signatureAfterChange": "  int calculateWidth (int index, GC gc)", "diff": ["-int calculateWidth (int columnIndex, GC gc, boolean callMeasureItem) {", "-\tif (!callMeasureItem && customWidth != -1) return customWidth;", "-", "+int calculateWidth (int index, GC gc) {", "+\tif (index == 0 && width != -1) return width;", "+\tFont font = null;", "+\tif (cellFont != null) font = cellFont[index];", "+\tif (font == null) font = this.font;", "+\tif (font == null) font = parent.font;", "+\tif (font == null) font = parent.defaultFont();", "+\tString text = index == 0 ? this.text : (strings == null ? \"\" : strings [index]);", "+\tImage image = index == 0 ? this.image : (images == null ? null : images [index]);", "-\tcell.setFont (getFont (columnIndex).handle);", "-\tcell.setTitle (NSString.stringWith (getText (columnIndex)));", "-\tImage image = getImage (columnIndex);", "+\tcell.setFont (font.handle);", "+\tcell.setTitle (NSString.stringWith(text != null ? text : \"\"));", "-\tif (image != null) {", "-\t\t/* margin between item image and text */", "-\t\twidth += IMAGETEXT_MARGIN;", "+\tboolean sendMeasure = true;", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tsendMeasure = cached;", "-", "-\tif (callMeasureItem && parent.hooks (SWT.MeasureItem)) {", "-\t\tNSTableView tableView = (NSTableView)parent.view;", "-\t\tint /*long*/ nsColumnIndex = 0;", "-\t\tif (parent.columnCount > 0) {", "-\t\t\tnsColumnIndex = tableView.columnWithIdentifier (parent.columns[columnIndex].nsColumn);", "-\t\t}", "-\t\tint rowIndex = parent.indexOf (this);", "-\t\tNSRect rect = tableView.frameOfCellAtColumn (nsColumnIndex, rowIndex);", "-\t\tNSRect contentRect = cell.titleRectForBounds (rect);", "-\t\tint rowHeight = (int)tableView.rowHeight ();", "+\tif (sendMeasure && parent.hooks (SWT.MeasureItem)) {", "+\t\tgc.setFont (font);", "-\t\tevent.index = columnIndex;", "+\t\tevent.index = index;", "-\t\tevent.x = (int)contentRect.x;", "-\t\tevent.y = (int)contentRect.y;", "+\t\tNSTableView widget = (NSTableView)parent.view;", "+\t\tint height = (int)widget.rowHeight ();", "-\t\tevent.height = rowHeight;", "+\t\tevent.height = height;", "-\t\tif (rowHeight < event.height) {", "-\t\t\ttableView.setRowHeight (event.height);", "-\t\t}", "-\t\tif (parent.columnCount == 0) {", "-\t\t\tint change = event.width - (customWidth != -1 ? customWidth : width);", "-\t\t\tif (customWidth != -1 || event.width != width) {", "-\t\t\t\tcustomWidth = event.width;\t", "-\t\t\t}", "-\t\t\tif (change != 0) parent.setScrollWidth (this, false);", "+\t\tif (height < event.height) {", "+\t\t\twidget.setRowHeight (event.height);", "+\t\t\twidget.setNeedsDisplay (true);", "+\tif (index == 0) this.width = width;"]}], "num": 10594}