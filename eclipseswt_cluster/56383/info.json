{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27206f8b6138c83802ff6c152c9b1a1f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7405fe633304721990fcd717785b581", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4a4a6fd5bc70f20488e7520d667c36339c6d8575", "commitAfterChange": "68148873deda9abdbd93a85f02b52f969d07a7fd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "signatureAfterChange": "  void drawImage(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple)", "diff": ["-\t\tif (provider == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, false, 0);", "-\t\tOS.CGDataProviderRelease(provider);", "-\t\tif (subImage == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "- \t\tOS.CGContextDrawImage(handle, rect, subImage);", "- \t\tOS.CGImageRelease(subImage);", "+\t\tif (provider != 0) {", "+\t\t\tint subImage = OS.CGImageCreate(srcWidth, srcHeight, bpc, bpp, bpr, colorspace, alphaInfo, provider, null, false, 0);", "+\t\t\tOS.CGDataProviderRelease(provider);", "+\t\t\tif (subImage != 0) {", "+\t\t \t\tOS.CGContextDrawImage(handle, rect, subImage);", "+ \t\t\t\tOS.CGImageRelease(subImage);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a646f3d9df112f7aa0fb45db7f75cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e754a125a2aabb2687419e882314322d456d220e", "commitAfterChange": "97d7bbf8cfdbb6f96f4719f1f7be7a03fa93a649", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "signatureAfterChange": " void drawImageMask(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight)", "diff": ["-\t\tif (pixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tint colormap = OS.gdk_colormap_get_system();", "-\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "-\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "-\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "-\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "-\t\tif (gdkImagePtr == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tbyte[] line = new byte[stride];", "-\t\tfor (int y=0; y<srcHeight; y++) {", "-\t\t\tint offset = pixels + (y * stride);", "-\t\t\tOS.memmove(line, offset, stride);", "-\t\t\tfor (int x=0; x<srcWidth; x++) {", "-\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "-\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "-\t\t\t\t} else {", "-\t\t\t\t\tline[x*4+3] = 0;", "+\t\tif (pixbuf != 0) {", "+\t\t\tint colormap = OS.gdk_colormap_get_system();", "+\t\t\tOS.gdk_pixbuf_get_from_drawable(pixbuf, colorPixmap, colormap, srcX, srcY, 0, 0, srcWidth, srcHeight);", "+\t\t\tint gdkImagePtr = OS.gdk_drawable_get_image(maskPixmap, 0, 0, imgWidth, imgHeight);", "+\t\t\tif (gdkImagePtr != 0) {", "+\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride(pixbuf);", "+\t\t\t\tint pixels = OS.gdk_pixbuf_get_pixels(pixbuf);", "+\t\t\t\tbyte[] line = new byte[stride];", "+\t\t\t\tfor (int y=0; y<srcHeight; y++) {", "+\t\t\t\t\tint offset = pixels + (y * stride);", "+\t\t\t\t\tOS.memmove(line, offset, stride);", "+\t\t\t\t\tfor (int x=0; x<srcWidth; x++) {", "+\t\t\t\t\t\tif (OS.gdk_image_get_pixel(gdkImagePtr, x + srcX, y + srcY) != 0) {", "+\t\t\t\t\t\t\tline[x*4+3] = (byte)0xFF;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tline[x*4+3] = 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.memmove(offset, line, stride);", "+\t\t\t\t}", "+\t\t\t\tOS.g_object_unref(gdkImagePtr);", "+\t\t\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "+\t\t\t\tif (scaledPixbuf != 0) {", "+\t\t\t\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "+\t\t\t\t\t\tscaledPixbuf, data.drawable,", "+\t\t\t\t\t\t0, 0, destX, destY, destWidth, destHeight,", "+\t\t\t\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "+\t\t\t\t\tOS.g_object_unref(scaledPixbuf);", "-\t\t\tOS.memmove(offset, line, stride);", "+\t\t\tOS.g_object_unref(pixbuf);", "-\t\tOS.g_object_unref(gdkImagePtr);", "-\t\tint scaledPixbuf = OS.gdk_pixbuf_scale_simple(pixbuf, destWidth, destHeight, OS.GDK_INTERP_BILINEAR);", "-\t\tOS.g_object_unref(pixbuf);", "-\t\tif (scaledPixbuf == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gdk_pixbuf_render_to_drawable_alpha(", "-\t\t\tscaledPixbuf, data.drawable,", "-\t\t\t0, 0, destX, destY, destWidth, destHeight,", "-\t\t\tOS.GDK_PIXBUF_ALPHA_BILEVEL, 128, OS.GDK_RGB_DITHER_NORMAL, 0, 0);", "-\t\tOS.g_object_unref(scaledPixbuf);"]}], "num": 56383}