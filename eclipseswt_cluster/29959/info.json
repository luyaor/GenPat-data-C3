{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d6dee5896bc49cc9eb250f4deb9d09d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a267029445440dd346e304570cf8df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TableDragSourceEffect.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tImage getDragSourceImage(DragSourceEvent event)", "signatureAfterChange": " \t \tImage getDragSourceImage(DragSourceEvent event)", "diff": ["-\t\t\t\tint /*long*/ hImage = shdi.hbmpDragImage;", "+\t\t\t\tlong /*int*/ hImage = shdi.hbmpDragImage;", "-\t\t\t\t\tint /*long*/ hdc = OS.GetDC (0);", "-\t\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC (hdc);", "-\t\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "-\t\t\t\t\tint /*long*/ memHdc = OS.CreateCompatibleDC (hdc);", "+\t\t\t\t\tlong /*int*/ hdc = OS.GetDC (0);", "+\t\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC (hdc);", "+\t\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\tlong /*int*/ memHdc = OS.CreateCompatibleDC (hdc);", "-\t\t\t\t\tint /*long*/ [] pBits = new int /*long*/ [1];", "-\t\t\t\t\tint /*long*/ memDib = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\t\t\t\t\tlong /*int*/ [] pBits = new long /*int*/ [1];", "+\t\t\t\t\tlong /*int*/ memDib = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\t\t\t\t\tint /*long*/ oldMemBitmap = OS.SelectObject (memHdc, memDib);", "+\t\t\t\t\tlong /*int*/ oldMemBitmap = OS.SelectObject (memHdc, memDib);", "-\t\tint /*long*/ tableImageList = OS.SendMessage (table.handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "+\t\tlong /*int*/ tableImageList = OS.SendMessage (table.handle, OS.LVM_GETIMAGELIST, OS.LVSIL_SMALL, 0);", "-\t\t\tint /*long*/ hDC = OS.GetDC(0);", "-\t\t\tint /*long*/ hDC1 = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ hDC = OS.GetDC(0);", "+\t\t\tlong /*int*/ hDC1 = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ bitmap = OS.CreateCompatibleBitmap(hDC, bounds.width, bounds.height);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hDC1, bitmap);", "+\t\t\tlong /*int*/ bitmap = OS.CreateCompatibleBitmap(hDC, bounds.width, bounds.height);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hDC1, bitmap);", "-\t\t\tint /*long*/ hBrush = OS.GetStockObject(OS.WHITE_BRUSH);", "+\t\t\tlong /*int*/ hBrush = OS.GetStockObject(OS.WHITE_BRUSH);", "-\t\t\t\tint /*long*/ imageList = OS.SendMessage (table.handle, OS.LVM_CREATEDRAGIMAGE, table.indexOf(selected), pt);", "+\t\t\t\tlong /*int*/ imageList = OS.SendMessage (table.handle, OS.LVM_CREATEDRAGIMAGE, table.indexOf(selected), pt);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912b15e5cd9fe3a616e372f967f8e374", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TreeDragSourceEffect.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tImage getDragSourceImage(DragSourceEvent event)", "signatureAfterChange": "  \tImage getDragSourceImage(DragSourceEvent event)", "diff": ["-\t\t\t\tint /*long*/ hImage = shdi.hbmpDragImage;", "+\t\t\t\tlong /*int*/ hImage = shdi.hbmpDragImage;", "-\t\t\t\t\tint /*long*/ hdc = OS.GetDC (0);", "-\t\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC (hdc);", "-\t\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "-\t\t\t\t\tint /*long*/ memHdc = OS.CreateCompatibleDC (hdc);", "+\t\t\t\t\tlong /*int*/ hdc = OS.GetDC (0);", "+\t\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC (hdc);", "+\t\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\tlong /*int*/ memHdc = OS.CreateCompatibleDC (hdc);", "-\t\t\t\t\tint /*long*/ [] pBits = new int /*long*/ [1];", "-\t\t\t\t\tint /*long*/ memDib = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "+\t\t\t\t\tlong /*int*/ [] pBits = new long /*int*/ [1];", "+\t\t\t\t\tlong /*int*/ memDib = OS.CreateDIBSection (0, bmi, OS.DIB_RGB_COLORS, pBits, 0, 0);", "-\t\t\t\t\tint /*long*/ oldMemBitmap = OS.SelectObject (memHdc, memDib);", "+\t\t\t\t\tlong /*int*/ oldMemBitmap = OS.SelectObject (memHdc, memDib);", "-\t\tint /*long*/ treeImageList = OS.SendMessage (tree.handle, OS.TVM_GETIMAGELIST, OS.TVSIL_NORMAL, 0);", "+\t\tlong /*int*/ treeImageList = OS.SendMessage (tree.handle, OS.TVM_GETIMAGELIST, OS.TVSIL_NORMAL, 0);", "-\t\t\tint /*long*/ hDC = OS.GetDC(tree.handle);", "-\t\t\tint /*long*/ hDC1 = OS.CreateCompatibleDC(hDC);", "-\t\t\tint /*long*/ bitmap = OS.CreateCompatibleBitmap(hDC, bounds.width, bounds.height);", "-\t\t\tint /*long*/ hOldBitmap = OS.SelectObject(hDC1, bitmap);", "+\t\t\tlong /*int*/ hDC = OS.GetDC(tree.handle);", "+\t\t\tlong /*int*/ hDC1 = OS.CreateCompatibleDC(hDC);", "+\t\t\tlong /*int*/ bitmap = OS.CreateCompatibleBitmap(hDC, bounds.width, bounds.height);", "+\t\t\tlong /*int*/ hOldBitmap = OS.SelectObject(hDC1, bitmap);", "-\t\t\tint /*long*/ hBrush = OS.GetStockObject(OS.WHITE_BRUSH);", "+\t\t\tlong /*int*/ hBrush = OS.GetStockObject(OS.WHITE_BRUSH);", "-\t\t\t\tint /*long*/ imageList = OS.SendMessage(tree.handle, OS.TVM_CREATEDRAGIMAGE, 0, selected.handle);", "+\t\t\t\tlong /*int*/ imageList = OS.SendMessage(tree.handle, OS.TVM_CREATEDRAGIMAGE, 0, selected.handle);"]}], "num": 29959}