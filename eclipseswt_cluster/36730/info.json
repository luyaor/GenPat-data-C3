{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "504bc5dcd8bac23f18818cf2772f35e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9022ec13f53fa5e4dffbead6d3207fa4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "dbb867f00ae35fdce66baf48ea942146496b4f1b", "commitAfterChange": "a79b48a96506f5d7be70bc5cf8ee067cbbd5d771", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection)", "diff": ["-void drawLines(boolean advance, int /*long*/ graphics, int x, int y, StyleItem run, int /*long*/ color) {", "+void drawLines(boolean advance, int /*long*/ graphics, int x, int y, StyleItem run, int /*long*/ color, boolean selection) {", "+\t\tint /*long*/ brush = color;", "-\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, underlineY, run.width, run.underlineThickness);", "+\t\t\tif (!selection && run.style.underlineColor != null) {", "+\t\t\t\tint c = run.style.underlineColor.handle;", "+\t\t\t\tint argb = (0xFF << 24) | ((c >> 16) & 0xFF) | (c & 0xFF00) | ((c & 0xFF) << 16);", "+\t\t\t\tint /*long*/ gdiColor = Gdip.Color_new(argb); ", "+\t\t\t\tbrush = Gdip.SolidBrush_new(gdiColor);", "+\t\t\t\tGdip.Color_delete(gdiColor);", "+\t\t\t}", "+\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, underlineY, run.width, run.underlineThickness);", "+\t\t\tif (brush != color) Gdip.SolidBrush_delete(brush);", "-\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, strikeoutY, run.width, run.strikeoutThickness);", "+\t\t\tif (!selection && run.style.strikeoutColor != null) {", "+\t\t\t\tint c = run.style.strikeoutColor.handle;", "+\t\t\t\tint argb = (0xFF << 24) | ((c >> 16) & 0xFF) | (c & 0xFF00) | ((c & 0xFF) << 16);", "+\t\t\t\tint /*long*/ gdiColor = Gdip.Color_new(argb); ", "+\t\t\t\tbrush = Gdip.SolidBrush_new(gdiColor);", "+\t\t\t\tGdip.Color_delete(gdiColor);", "+\t\t\t}", "+\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x, strikeoutY, run.width, run.strikeoutThickness);", "+\t\t\tif (brush != color) Gdip.SolidBrush_delete(brush);", "-\t\tint /*long*/ brush = OS.CreateSolidBrush((int)/*64*/color);", "+\t\tint colorRefUnderline = (int)/*64*/color;", "+\t\tint colorRefStrikeout = (int)/*64*/color;", "+\t\tint /*long*/ brushUnderline = 0;", "+\t\tint /*long*/ brushStrikeout = 0;", "+\t\t\tif (!selection && run.style.underlineColor != null) {", "+\t\t\t\tcolorRefUnderline = run.style.underlineColor.handle;", "+\t\t\t}", "+\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "-\t\t\tOS.FillRect(graphics, rect, brush);", "+\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\tif (!selection && run.style.strikeoutColor != null) {", "+\t\t\t\tcolorRefStrikeout = run.style.strikeoutColor.handle;", "+\t\t\t}", "+\t\t\tif (brushUnderline != 0 && colorRefStrikeout == colorRefUnderline) {", "+\t\t\t\tbrushStrikeout = brushUnderline;", "+\t\t\t} else {", "+\t\t\t\tbrushStrikeout = OS.CreateSolidBrush(colorRefStrikeout);", "+\t\t\t}", "-\t\t\tOS.FillRect(graphics, rect, brush);", "+\t\t\tOS.FillRect(graphics, rect, brushStrikeout);", "-\t\tOS.DeleteObject(brush);", "+\t\tif (brushUnderline != 0) OS.DeleteObject(brushUnderline);", "+\t\tif (brushStrikeout != 0 && brushStrikeout != brushUnderline) OS.DeleteObject(brushStrikeout);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f18215780f0204bab60cc53211d9aee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "deba00683b7e799ad97b05b6dcbb1d19c053de72", "commitAfterChange": "f295d81c96c5f0cad60547a25236d1a3bb649162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection, RECT clipRect, int alpha)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, boolean selection, RECT clipRect, int alpha)", "diff": ["-\t\t\t\tcase SWT.UNDERLINE_ERROR:", "-\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "-\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x - run.underlineThickness, underlineY, run.width, run.underlineThickness * 2);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\t}", "+\t\t\t\tcase UNDERLINE_IME_THICK:", "+\t\t\t\t\tGdip.Graphics_FillRectangle(graphics, brush, x - run.underlineThickness, underlineY, run.width, run.underlineThickness * 2);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase UNDERLINE_IME_DOT:", "+\t\t\t\tcase UNDERLINE_IME_DASH: {", "+\t\t\t\t\tint /*long*/ pen = Gdip.Pen_new(brush, 1);", "+\t\t\t\t\tint dashStyle = style.underlineStyle == UNDERLINE_IME_DOT ? Gdip.DashStyleDot : Gdip.DashStyleDash;", "+\t\t\t\t\tGdip.Pen_SetDashStyle(pen, dashStyle);", "+\t\t\t\t\tGdip.Graphics_DrawLine(graphics, pen, x, underlineY, x + run.width, underlineY);", "+\t\t\t\t\tGdip.Pen_delete(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\t\tcase SWT.UNDERLINE_ERROR:", "-\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "-\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "-\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "-\t\t\t\t\tOS.SetRect(rect, x, underlineY - run.underlineThickness, x + run.width, underlineY + run.underlineThickness);", "-\t\t\t\t\tif (clipRect != null) {", "-\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "-\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\t}", "+\t\t\t\tcase UNDERLINE_IME_THICK:", "+\t\t\t\t\tbrushUnderline = OS.CreateSolidBrush(colorRefUnderline);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY - run.underlineThickness, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.FillRect(graphics, rect, brushUnderline);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase UNDERLINE_IME_DASH:", "+\t\t\t\tcase UNDERLINE_IME_DOT: {", "+\t\t\t\t\tunderlineY = y + run.ascent + run.descent;", "+\t\t\t\t\tint penStyle = style.underlineStyle == UNDERLINE_IME_DASH ? OS.PS_DASH : OS.PS_DOT;", "+\t\t\t\t\tint /*long*/ pen = OS.CreatePen(penStyle, 1, colorRefUnderline);", "+\t\t\t\t\tint /*long*/ oldPen = OS.SelectObject(graphics, pen);", "+\t\t\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\trect.left = Math.max(rect.left, clipRect.left);", "+\t\t\t\t\t\trect.right = Math.min(rect.right, clipRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.MoveToEx(graphics, rect.left, rect.top, 0);", "+\t\t\t\t\tOS.LineTo(graphics, rect.right, rect.top);", "+\t\t\t\t\tOS.SelectObject(graphics, oldPen);", "+\t\t\t\t\tOS.DeleteObject(pen);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}"]}], "num": 36730}