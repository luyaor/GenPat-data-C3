{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c89b455d6c8ca979c169ffcc705bcc6a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae1e1991fa4fd60d889a153963af4117", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "43d57047107c819bb61865d14598f4db151f8244", "commitAfterChange": "2e3386598a4f33617b6a11814885bbf31d66e3df", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t* \r", "+\t* NOTE:  This work around is unnecessary on XP.  There is no\r", "+\t* flickering and clearing the TBSTYLE_TRANSPARENT interferes\r", "+\t* with the XP theme.\r", "-\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "-\tbits &= ~OS.TBSTYLE_TRANSPARENT;\r", "-\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\tif (COMCTL32_MAJOR < 6) {\r", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\t\tbits &= ~OS.TBSTYLE_TRANSPARENT;\r", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f54a6615aef2803c3356bf5547005e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ee1541799783b7a2d49deac3fcb18abcfaa6358c", "commitAfterChange": "613ef52a512ea94b5664ef2017085c02bc3c04da", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " public void setRedraw (boolean redraw)", "signatureAfterChange": " public void setRedraw (boolean redraw)", "diff": ["-\t\t\t\tOS.gdk_window_set_back_pixmap (redrawWindow, 0, false);", "-\t\t\t\tOS.gdk_window_raise (redrawWindow);", "-\t\t\t\tOS.gdk_window_show (redrawWindow);", "+\t\t\t\tif (redrawWindow != 0) {", "+\t\t\t\t\tOS.gdk_window_set_back_pixmap (redrawWindow, 0, false);", "+\t\t\t\t\tOS.gdk_window_raise (redrawWindow);", "+\t\t\t\t\tOS.gdk_window_show (redrawWindow);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea67401e2a14f90339046b4f1ca947ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2b9d73f5d4c4b43aebd3342dc0755134d9491901", "commitAfterChange": "c0ad025a537e23c7ad00b303004f0353d963c808", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " public void setTopItem (TreeItem item)", "signatureAfterChange": " public void setTopItem (TreeItem item)", "diff": ["-\tgetVerticalBar ().setSelection (topIndex);", "-\tGC gc = new GC (this);", "-\tgc.copyArea (0, 0, clientArea.width, clientArea.height, 0, change * itemHeight);", "-\tgc.dispose ();", "+\tif (drawCount == 0) {", "+\t\tgetVerticalBar ().setSelection (topIndex);", "+\t\tGC gc = new GC (this);", "+\t\tgc.copyArea (0, 0, clientArea.width, clientArea.height, 0, change * itemHeight);", "+\t\tgc.dispose ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c54901235a446ca9ecffc8748de872a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "0c1ecc659b601ebf49f7e256c22e4c8c778da8e2", "commitAfterChange": "3810f49c97f1cc24b55ae6ef05855b7382d37d87", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r void onPaint(Event event)", "signatureAfterChange": "\r void onPaint(Event event)", "diff": ["-\t\t\tgc.setForeground(shadowColor);\r", "-\t\t\tgc.drawLine(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);\r", "-\t\t\tgc.setForeground(highlightColor);\r", "-\t\t\tgc.drawLine(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);\r", "-\t\t\r", "+\t\t\tif (i != 0) {\r", "+\t\t\t\tgc.setForeground(shadowColor);\r", "+\t\t\t\tgc.drawLine(bounds.x, bounds.y, bounds.x, bounds.y + bounds.height - 1);\r", "+\t\t\t\tgc.setForeground(highlightColor);\r", "+\t\t\t\tgc.drawLine(bounds.x + 1, bounds.y, bounds.x + 1, bounds.y + bounds.height - 1);\r", "+\t\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a3ffb687512b4fc788086ec420e584", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2b9d73f5d4c4b43aebd3342dc0755134d9491901", "commitAfterChange": "c0ad025a537e23c7ad00b303004f0353d963c808", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void showColumn (TreeColumn column)", "signatureAfterChange": " public void showColumn (TreeColumn column)", "diff": ["-\tgetHorizontalBar ().setSelection (horizontalOffset);", "-\tredraw ();", "-\tif (header.isVisible ()) header.redraw ();", "+\tif (drawCount == 0) {", "+\t\tgetHorizontalBar ().setSelection (horizontalOffset);", "+\t\tredraw ();", "+\t\tif (header.isVisible ()) header.redraw ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b119b61ed8bcd19f5244c76127333fb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "e033c0e2ebd55c296e80b4ffbe0e8fb51e6aeab5", "commitAfterChange": "2adc7bfc8aac13ddcf9312b69aa9703cfc6bc5cd", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  \tboolean setMacFocusHandle(int wHandle, int focusHandle)", "signatureAfterChange": "  \tboolean setMacFocusHandle(int wHandle, int focusHandle)", "diff": ["-\t\t\t//fFocusControl= focusHandle;", "-\t\t\tint[] focusControl= new int[1];", "-\t\t\tOS.GetKeyboardFocus(wHandle, focusControl);", "-\t\t\tif (focusControl[0] != fFocusControl) {", "-\t\t\t\tOS.SetKeyboardFocus(wHandle, focusHandle, (short)-1);", "-\t\t\t\t//if (rc != OS.kNoErr)", "-\t\t\t\t//\tSystem.out.println(\"Display.setMacFocusHandle: SetKeyboardFocus \" + rc);", "+\t\t\tif (wHandle != 0) {", "+\t\t\t\tint[] focusControl= new int[1];", "+\t\t\t\tOS.GetKeyboardFocus(wHandle, focusControl);", "+\t\t\t\tif (focusControl[0] != fFocusControl) {", "+\t\t\t\t\tOS.SetKeyboardFocus(wHandle, focusHandle, (short)-1);", "+\t\t\t\t\t//if (rc != OS.kNoErr)", "+\t\t\t\t\t//\tSystem.out.println(\"Display.setMacFocusHandle: SetKeyboardFocus \" + rc);", "+\t\t\t\t}"]}], "num": 5819}