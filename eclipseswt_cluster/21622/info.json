{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a593f5f868de3f5ede78d7754bd7cbf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6da03da038612bb3a0bfb9deb35da3f4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fb1da3f03b1857a16fe11c426e420376a5d20e97", "commitAfterChange": "aef76dfd13cf214c26f3af2061d0fb9194e9264a", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "signatureAfterChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "diff": ["-//\t\tCOM.MoveMemory(pGroupLevel, new int [] { groupLevel }, 4);", "+\t\tint groupLevel = 0;", "+\t\tCOM.MoveMemory(pGroupLevel, new int [] { groupLevel }, 4);", "-\t\t//collect all children with the same role", "-//\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);", "-\t\t//find this guy's index in the collection", "-//\t\tCOM.MoveMemory(pPositionInGroup, new int [] { positionInGroup }, 4);", "-//\t\treturn COM.S_OK;", "-\t\treturn COM.S_FALSE;", "-\t\t// TODO: @retval S_OK if at least one value is valid @retval S_FALSE if no values are valid", "+\t\t//collect all children with the same role, if none, then 0 (for N/A)", "+\t\tint similarItemsInGroup = 0;", "+\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);", "+\t\t//find this guy's 1-based index in the children of the parent (0 for N/A)", "+\t\tint positionInGroup = 0;", "+\t\tCOM.MoveMemory(pPositionInGroup, new int [] { positionInGroup }, 4);", "+\t\tif (groupLevel == 0 && similarItemsInGroup == 0 && positionInGroup == 0) return COM.S_FALSE;", "+\t\treturn COM.S_OK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1049ff9fc37f4b395b7500bc66e88fa1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "823cc6c2771fef0325da5857f1a25b2b047efde4", "commitAfterChange": "acd21e0605604e65519caa05a651b424c54e8bba", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "signatureAfterChange": " \tint get_groupPosition(int pGroupLevel, int pSimilarItemsInGroup, int pPositionInGroup)", "diff": ["-\t\t//collect all children with the same role, if none, then 0 (for N/A)", "+\t\t//count all children with the same role, if none, then 0 (for N/A)", "+\t\t//find this control's 1-based index in the same-type children of the parent (0 for N/A)", "-\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);", "-\t\t//find this guy's 1-based index in the children of the parent (0 for N/A)", "+\t\tif (control instanceof Button && ((control.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t/* We currently only determine position and count for radio buttons. */", "+\t\t\tControl [] children = control.getParent().getChildren();", "+\t\t\tpositionInGroup = 1;", "+\t\t\tsimilarItemsInGroup = 1;", "+\t\t\tfor (int i = 0; i < children.length; i++) {", "+\t\t\t\tControl child = children[i];", "+\t\t\t\tif (child instanceof Button && ((child.getStyle() & SWT.RADIO) != 0)) {", "+\t\t\t\t\tif (child == control) positionInGroup = similarItemsInGroup;", "+\t\t\t\t\telse similarItemsInGroup++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tCOM.MoveMemory(pSimilarItemsInGroup, new int [] { similarItemsInGroup }, 4);"]}], "num": 21622}