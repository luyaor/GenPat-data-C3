{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7adb868deb7540d2a25b3f991af2ae96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40e7bb1236b0eb591cc4b614afc46e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f6a78259c00d650ff90e53c82940af7858b5277b", "commitAfterChange": "3e57ee0ed42c71cf5b75eff6d71364caee02a643", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 274, "signatureBeforeChange": "  \tint queryAccessible2Interfaces(GUID guid, long ppvObject)", "signatureAfterChange": "  \tint queryAccessible2Interfaces(GUID guid, long ppvObject)", "diff": ["-\t\t\tif (accessibleActionListeners.size() > 0 || accessibleAttributeListeners.size() > 0 ||", "-\t\t\t\t\taccessibleHyperlinkListeners.size() > 0 || accessibleTableListeners.size() > 0 ||", "-\t\t\t\t\taccessibleTableCellListeners.size() > 0 || accessibleTextExtendedListeners.size() > 0 ||", "-\t\t\t\t\taccessibleValueListeners.size() > 0 || getRelationCount() > 0", "+\t\t\tif (accessibleActionListenersSize() > 0 || accessibleAttributeListenersSize() > 0 ||", "+\t\t\t\t\taccessibleHyperlinkListenersSize() > 0 || accessibleTableListenersSize() > 0 ||", "+\t\t\t\t\taccessibleTableCellListenersSize() > 0 || accessibleTextExtendedListenersSize() > 0 ||", "+\t\t\t\t\taccessibleValueListenersSize() > 0 || getRelationCount() > 0", "-\t\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\tif (accessibleActionListenersSize() > 0) {", "-//\t\t\tif (accessibleControlListeners.size() > 0) { // TO DO: can we reduce the scope of this somehow?", "+//\t\t\tif (accessibleControlListenersSize() > 0) { // TO DO: can we reduce the scope of this somehow?", "-\t\t\tif (accessibleEditableTextListeners.size() > 0) {", "+\t\t\tif (accessibleEditableTextListenersSize() > 0) {", "-\t\t\tif (accessibleHyperlinkListeners.size() > 0) {", "+\t\t\tif (accessibleHyperlinkListenersSize() > 0) {", "-\t\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\tif (accessibleTextExtendedListenersSize() > 0) {", "-//\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "+//\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleAccessibleListenersSize() > 0 || accessibleControlListenersSize() > 0)) {", "-\t\t\tif (accessibleTableListeners.size() > 0) {", "+\t\t\tif (accessibleTableListenersSize() > 0) {", "-\t\t\tif (accessibleTableCellListeners.size() > 0) {", "+\t\t\tif (accessibleTableCellListenersSize() > 0) {", "-\t\t\tif (accessibleTextExtendedListeners.size() > 0 || accessibleAttributeListeners.size() > 0) {", "+\t\t\tif (accessibleTextExtendedListenersSize() > 0 || accessibleAttributeListenersSize() > 0) {", "-\t\t\tif (accessibleValueListeners.size() > 0) {", "+\t\t\tif (accessibleValueListenersSize() > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74a96e78d41cf66c0b697042556775b9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bb50d013efc19825e8fad10d3794d4669d974d4f", "commitAfterChange": "3432d57cc04ef1f655fa110268dd9aa31a9cd42d", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 227, "signatureBeforeChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "signatureAfterChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "diff": ["-\t\t\t\t\taccessibleHyperlinkListeners.size() > 0 || accessibleScrollListeners.size() > 0 ||", "-\t\t\t\t\taccessibleTableListeners.size() > 0 || accessibleTableCellListeners.size() > 0 ||", "-\t\t\t\t\taccessibleTextExtendedListeners.size() > 0 || accessibleValueListeners.size() > 0 || getRelationCount() > 0) {", "+\t\t\t\t\taccessibleHyperlinkListeners.size() > 0 || accessibleTableListeners.size() > 0 ||", "+\t\t\t\t\taccessibleTableCellListeners.size() > 0 || accessibleTextExtendedListeners.size() > 0 ||", "+\t\t\t\t\taccessibleValueListeners.size() > 0 || getRelationCount() > 0) {", "-\t\t\tif (accessibleControlListeners.size() > 0) { // TODO: can we reduce the scope of this somehow?", "-\t\t\t\tif (objIAccessibleComponent == null) createIAccessibleComponent();", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleComponent.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\t\tAddRef();", "-\t\t\t\treturn COM.S_OK;", "-\t\t\t}", "+\t\t\t// The following lines are intentionally commented. We are not supporting IAccessibleComponent at this time.", "+//\t\t\tif (accessibleControlListeners.size() > 0) { // TO DO: can we reduce the scope of this somehow?", "+//\t\t\t\tif (objIAccessibleComponent == null) createIAccessibleComponent();", "+//\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleComponent.getAddress() }, OS.PTR_SIZEOF);", "+//\t\t\t\tAddRef();", "+//\t\t\t\treturn COM.S_OK;", "+//\t\t\t}", "-\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "-\t\t\t\tif (objIAccessibleImage == null) createIAccessibleImage();", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleImage.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\t\tAddRef();", "-\t\t\t\treturn COM.S_OK;", "-\t\t\t}", "+\t\t\t// The following lines are intentionally commented. We are not supporting IAccessibleImage at this time.", "+//\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "+//\t\t\t\tif (objIAccessibleImage == null) createIAccessibleImage();", "+//\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleImage.getAddress() }, OS.PTR_SIZEOF);", "+//\t\t\t\tAddRef();", "+//\t\t\t\treturn COM.S_OK;", "+//\t\t\t}"]}], "num": 54983}