{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccf4729b791eea008b4a4f41326c728a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b93c60c9527c9d72412761c4f1c5f4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "564af48002efb7dde4608cffc2bddfed66929de1", "commitAfterChange": "25e834c280324b3e7770e2b3f82a7d7ca7a1f981", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void setBackgroundColor (GdkColor color)", "signatureAfterChange": "  GdkColor getForegroundColor ()", "diff": ["+", "+GdkColor getForegroundColor () {", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {", "+\t\tif ((state & FOREGROUND) == 0) {", "+\t\t\treturn display.getSystemColor (SWT.COLOR_TITLE_FOREGROUND).handle;", "+\t\t}", "+\treturn super.getForegroundColor ();", "-void setBackgroundColor (GdkColor color) {", "-\tsuper.setBackgroundColor (color);", "-\tsetBackgroundColor (fixedHandle, color);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584b4e864c7f1f8882ed5f2719a3592f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "db13faae245b407f6345fa8fc55075cebcc4e230", "commitAfterChange": "5b47d830b20261b6283850c91958bad9f5f2ea6e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void addAccessibleScrollListener(AccessibleScrollListener listener)", "signatureAfterChange": " \t \tAccessibleObject getAccessibleObject ()", "diff": ["-\t */", "-\tpublic void addAccessibleScrollListener(AccessibleScrollListener listener) {", "-\t\tcheckWidget();", "-\t\tif (listener == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\t\taccessibleScrollListeners.addElement(listener);", "-\t}", "+\t", "+\tAccessibleObject getAccessibleObject () {", "+\t\tif (accessibleObject == null) {", "+\t\t\tif (parent == null) {", "+\t\t\t\tAccessibleFactory.createAccessible(this);", "+\t\t\t} else {", "+\t\t\t\taccessibleObject = AccessibleFactory.createChildAccessible(this, ACC.CHILDID_SELF);", "+\t\t\t\taccessibleObject.id = ACC.CHILDID_SELF;", "+\t\t\t}", "+\t\t}", "+\t\treturn accessibleObject;"]}], "num": 6955}