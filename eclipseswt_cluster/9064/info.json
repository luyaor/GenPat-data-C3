{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69c48bd84dc196447bb8e80517c3dba2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced8f8b2be49845a2e03a94d1bd3e6a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/accessibility/ControlsWithAccessibleNamesExample.java", "commitBeforeChange": "b50dd73d058b5cf406183f7ba788701fc2769bb2", "commitAfterChange": "02ecc9fac6a8fdc56fdf1cad3657e9c3a80838ea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic static void main(String[] args)", "signatureAfterChange": " \t\t \tpublic static void main(String[] args)", "diff": ["-\t\tshell.setLayout(new GridLayout(2, true));", "+\t\tshell.setLayout(new GridLayout(4, true));", "+\t\tnew Label(shell, SWT.NONE).setText(\"Use Platform Name\");", "+\t\tnew Label(shell, SWT.NONE).setText(\"Override Platform Name\");", "+//\t\tText text, overrideText;", "+\t\ttext = new Text(shell, SWT.SINGLE | SWT.BORDER);", "+\t\ttext.setText(\"Contents of single-line Text\");", "+\t\t", "+\t\toverrideText = new Text(shell, SWT.SINGLE | SWT.BORDER);", "+\t\toverrideText.setText(\"Contents of single-line Text\");", "+\t\toverrideText.setData(\"name\", \"Text\");", "+\t\toverrideText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\t", "+//\t\tText multiLineText, overrideMultiLineText;", "+\t\tmultiLineText = new Text(shell, SWT.MULTI | SWT.BORDER);", "+\t\tmultiLineText.setText(\"Contents of multi-line Text\\nLine 2\\nLine 3\\nLine 4\");", "+\t\t", "+\t\toverrideMultiLineText = new Text(shell, SWT.MULTI | SWT.BORDER);", "+\t\toverrideMultiLineText.setText(\"Contents of multi-line Text\\nLine 2\\nLine 3\\nLine 4\");", "+\t\toverrideMultiLineText.setData(\"name\", \"MultiLineText\");", "+\t\toverrideMultiLineText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+", "-\t\t", "-//\t\tText text, overrideText;", "-\t\ttext = new Text(shell, SWT.SINGLE | SWT.BORDER);", "-\t\ttext.setText(\"Contents of Text\");", "-\t\t", "-\t\toverrideText = new Text(shell, SWT.SINGLE | SWT.BORDER);", "-\t\toverrideText.setText(\"Contents of Text\");", "-\t\toverrideText.setData(\"name\", \"Text\");", "-\t\toverrideText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "-\t\t// Note: currently, MSAA does not support coolbar", "+\t\t/* Set a caret into the canvas so that it will take focus. */", "-\t\tcaret.setSize(2, 10);", "+\t\tcaret.setBounds(15, 25, 2, 20);", "+\t\t\t\te.doit = true;", "+\t\t\t\te.doit = true;", "+\t\t/* Set a caret into the canvas so that it will take focus. */", "-\t\tcaret.setSize(2, 10);", "+\t\tcaret.setBounds(15, 25, 2, 20);", "+\t\t\t\te.doit = true;", "+\t\t\t\te.doit = true;", "-\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for TabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\");", "-\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\\n\");", "+\t\t\titemText.setText(\"\\nText for CTabItem \" + i + \"\\n\\n\");", "-\t\tstyledText.setText(\"Contents of StyledText\");", "+\t\tstyledText.setText(\"Contents of single-line StyledText\");", "-\t\toverrideStyledText.setText(\"Contents of StyledText\");", "+\t\toverrideStyledText.setText(\"Contents of single-line StyledText\");", "+\t", "+//\t\tStyledText multiLineStyledText, overrideMultiLineStyledText;", "+\t\tmultiLineStyledText = new StyledText(shell, SWT.MULTI | SWT.BORDER);", "+\t\tmultiLineStyledText.setText(\"Contents of multi-line StyledText\\nLine 2\\nLine 3\\nLine 4\");", "+\t\t", "+\t\toverrideMultiLineStyledText = new StyledText(shell, SWT.MULTI | SWT.BORDER);", "+\t\toverrideMultiLineStyledText.setText(\"Contents of multi-line StyledText\\nLine 2\\nLine 3\\nLine 4\");", "+\t\toverrideMultiLineStyledText.setData(\"name\", \"MultiLineStyledText\");", "+\t\toverrideMultiLineStyledText.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "-\t\tprogressBar = new ProgressBar(shell, SWT.NONE);", "-\t\tprogressBar.setSelection(50);", "-\t\tprogressBar.setToolTipText(\"ProgressBar ToolTip\");", "-", "-\t\toverrideProgressBar = new ProgressBar(shell, SWT.NONE);", "-\t\toverrideProgressBar.setSelection(50);", "-\t\toverrideProgressBar.setToolTipText(\"ProgressBar ToolTip\");", "-\t\toverrideProgressBar.setData(\"name\", \"ProgressBar\");", "-\t\toverrideProgressBar.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\tif (!SWT.getPlatform().equals(\"cocoa\")) {", "+\t\t\tprogressBar = new ProgressBar(shell, SWT.NONE);", "+\t\t\tprogressBar.setSelection(50);", "+\t\t\tprogressBar.setToolTipText(\"ProgressBar ToolTip\");", "+\t", "+\t\t\toverrideProgressBar = new ProgressBar(shell, SWT.NONE);", "+\t\t\toverrideProgressBar.setSelection(50);", "+\t\t\toverrideProgressBar.setToolTipText(\"ProgressBar ToolTip\");", "+\t\t\toverrideProgressBar.setData(\"name\", \"ProgressBar\");", "+\t\t\toverrideProgressBar.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+\t\t}", "+//\t\tLink link, overrideLink;", "+\t\tlink = new Link(shell, SWT.NONE);", "+\t\tlink.setText(\"<a>This is a link</a>\");", "+\t\tlink.setToolTipText(\"Link ToolTip\");", "+", "+\t\toverrideLink = new Link(shell, SWT.NONE);", "+\t\toverrideLink.setText(\"<a>This is a link</a>\");", "+\t\toverrideLink.setToolTipText(\"Link ToolTip\");", "+\t\toverrideLink.setData(\"name\", \"Link\");", "+\t\toverrideLink.getAccessible().addAccessibleListener(overrideAccessibleAdapter);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db853fc83257716714be724226786263", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "eef46a81239fc62775211063be21707fe2608332", "commitAfterChange": "3267320d7c5bbaa6743022a44ad2fb9c8bf04682", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid createExampleWidgets ()", "signatureAfterChange": " \tvoid createExampleWidgets ()", "diff": ["+\t\tif (fullSelectionButton.getSelection ()) style |= SWT.FULL_SELECTION;", "-\t\ttextNode1 = new TreeItem (tree1, SWT.NONE);", "-\t\ttextNode1.setText (ControlExample.getResourceString(\"Node_1\"));", "-\t\tTreeItem node2 = new TreeItem (tree1, SWT.NONE);", "-\t\tnode2.setText (ControlExample.getResourceString(\"Node_2\"));", "-\t\tTreeItem node3 = new TreeItem (tree1, SWT.NONE);", "-\t\tnode3.setText (ControlExample.getResourceString(\"Node_3\"));", "-\t\tTreeItem node4 = new TreeItem (tree1, SWT.NONE);", "-\t\tnode4.setText (ControlExample.getResourceString(\"Node_4\"));", "-\t\tTreeItem node1_1 = new TreeItem (textNode1, SWT.NONE);", "-\t\tnode1_1.setText (ControlExample.getResourceString(\"Node_1_1\"));", "-\t\tTreeItem node2_1 = new TreeItem (node2, SWT.NONE);", "-\t\tnode2_1.setText (ControlExample.getResourceString(\"Node_2_1\"));", "-\t\tTreeItem node3_1 = new TreeItem (node3, SWT.NONE);", "-\t\tnode3_1.setText (ControlExample.getResourceString(\"Node_3_1\"));", "-\t\tTreeItem node2_2 = new TreeItem (node2, SWT.NONE);", "-\t\tnode2_2.setText (ControlExample.getResourceString(\"Node_2_2\"));", "-\t\tTreeItem node2_2_1 = new TreeItem (node2_2, SWT.NONE);", "-\t\tnode2_2_1.setText (ControlExample.getResourceString(\"Node_2_2_1\"));", "-\t", "+\t\tif (multipleColumns.getSelection()) {", "+\t\t\tfor (int i = 0; i < columnTitles.length; i++) {", "+\t\t\t\tTreeColumn treeColumn = new TreeColumn(tree1, SWT.NONE);", "+\t\t\t\ttreeColumn.setText(columnTitles[i]);", "+\t\t\t}", "+\t\t}", "+\t\tfor (int i = 0; i < 4; i++) {", "+\t\t\tTreeItem item = new TreeItem (tree1, SWT.NONE);", "+\t\t\tsetItemText(item, i, ControlExample.getResourceString(\"Node_\" + (i + 1)));", "+\t\t\tif (i < 3) {", "+\t\t\t\tTreeItem subitem = new TreeItem (item, SWT.NONE);", "+\t\t\t\tsetItemText(subitem, i, ControlExample.getResourceString(\"Node_\" + (i + 1) + \"_1\"));", "+\t\t\t}", "+\t\t}", "+\t\tTreeItem treeRoots[] = tree1.getItems ();", "+\t\tTreeItem item = new TreeItem (treeRoots[1], SWT.NONE);", "+\t\tsetItemText(item, 1, ControlExample.getResourceString(\"Node_2_2\"));", "+\t\titem = new TreeItem (item, SWT.NONE);", "+\t\tsetItemText(item, 1, ControlExample.getResourceString(\"Node_2_2_1\"));\t\t\t\t\t", "+\t\ttextNode1 = treeRoots[0];", "+\t\tpackColumns(tree1);", "+", "-\t\timageNode1 = new TreeItem (tree2, SWT.NONE);", "-\t\timageNode1.setText (ControlExample.getResourceString(\"Node_1\"));", "-\t\timageNode1.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode2 = new TreeItem (tree2, SWT.NONE);", "-\t\tnode2.setText (ControlExample.getResourceString(\"Node_2\"));", "-\t\tnode2.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode3 = new TreeItem (tree2, SWT.NONE);", "-\t\tnode3.setText (ControlExample.getResourceString(\"Node_3\"));", "-\t\tnode3.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode4 = new TreeItem (tree2, SWT.NONE);", "-\t\tnode4.setText (ControlExample.getResourceString(\"Node_4\"));", "-\t\tnode4.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode1_1 = new TreeItem (imageNode1, SWT.NONE);", "-\t\tnode1_1.setText (ControlExample.getResourceString(\"Node_1_1\"));", "-\t\tnode1_1.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode2_1 = new TreeItem (node2, SWT.NONE);", "-\t\tnode2_1.setText (ControlExample.getResourceString(\"Node_2_1\"));", "-\t\tnode2_1.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode3_1 = new TreeItem (node3, SWT.NONE);", "-\t\tnode3_1.setText (ControlExample.getResourceString(\"Node_3_1\"));", "-\t\tnode3_1.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode2_2 = new TreeItem(node2, SWT.NONE);", "-\t\tnode2_2.setText (ControlExample.getResourceString(\"Node_2_2\"));", "-\t\tnode2_2.setImage (instance.images[ControlExample.ciClosedFolder]);", "-\t\tnode2_2_1 = new TreeItem (node2_2, SWT.NONE);", "-\t\tnode2_2_1.setText (ControlExample.getResourceString(\"Node_2_2_1\"));", "-\t\tnode2_2_1.setImage (instance.images[ControlExample.ciClosedFolder]);", "+\t\tImage image = instance.images[ControlExample.ciClosedFolder];", "+\t\tif (multipleColumns.getSelection()) {", "+\t\t\tfor (int i = 0; i < columnTitles.length; i++) {", "+\t\t\t\tTreeColumn treeColumn = new TreeColumn(tree2, SWT.NONE);", "+\t\t\t\ttreeColumn.setText(columnTitles[i]);", "+\t\t\t}", "+\t\t}", "+\t\tfor (int i = 0; i < 4; i++) {", "+\t\t\titem = new TreeItem (tree2, SWT.NONE);", "+\t\t\tsetItemText(item, i, ControlExample.getResourceString(\"Node_\" + (i + 1)));", "+\t\t\titem.setImage(image);", "+\t\t\tif (i < 3) {", "+\t\t\t\tTreeItem subitem = new TreeItem (item, SWT.NONE);", "+\t\t\t\tsetItemText(subitem, i, ControlExample.getResourceString(\"Node_\" + (i + 1) + \"_1\"));", "+\t\t\t\tsubitem.setImage(image);", "+\t\t\t}", "+\t\t}", "+\t\ttreeRoots = tree2.getItems ();", "+\t\titem = new TreeItem (treeRoots[1], SWT.NONE);", "+\t\tsetItemText(item, 1, ControlExample.getResourceString(\"Node_2_2\"));", "+\t\titem.setImage(image);", "+\t\titem = new TreeItem (item, SWT.NONE);", "+\t\tsetItemText(item, 1, ControlExample.getResourceString(\"Node_2_2_1\"));", "+\t\titem.setImage(image);", "+\t\timageNode1 = treeRoots[0];", "+\t\tpackColumns(tree2);", "+\t}"]}], "num": 9064}