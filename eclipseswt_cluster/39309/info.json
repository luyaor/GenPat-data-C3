{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15fcfdd03d29e934f52949763463add4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2fc57a57c5354ea19dc9fbb23ae992", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r int processMouseDown (int callData)", "signatureAfterChange": "\r int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\r", "-int processMouseDown (int callData) {\r", "-\tsuper.processMouseDown (callData);\r", "-\tXButtonEvent xEvent = new XButtonEvent ();\r", "-\tOS.memmove (xEvent, callData, XButtonEvent.sizeof);\r", "-\tif (xEvent.button != 1) return 0;\r", "-\tstartX = xEvent.x;  startY = xEvent.y;\r", "-\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0, OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\tint border = argList [9], width = argList [5] + (border * 2), height = argList [7] + (border * 2);\r", "-\tlastX = ((short) argList [1]) - border;  lastY = ((short) argList [3]) - border;\r", "-\t/* The event must be sent because its doit flag is used. */\r", "-\tEvent event = new Event ();\r", "-\tevent.detail = SWT.DRAG;\r", "-\tevent.time = xEvent.time;\r", "-\tevent.x = lastX;  event.y = lastY;\r", "-\tevent.width = width;  event.height = height;\r", "-\t/*\r", "-\t * It is possible (but unlikely) that client code could have disposed\r", "-\t * the widget in the selection event.  If this happens end the processing\r", "-\t * of this message by returning.\r", "-\t */\r", "-\tsendEvent (SWT.Selection, event);\r", "-\tif (isDisposed ()) return 0;\r", "-\tif (event.doit) {\r", "-\t\tdragging = true;\r", "-\t\tOS.XmUpdateDisplay (handle);\r", "-\t\tdrawBand (lastX = event.x, lastY = event.y, width, height);\r", "-\t}\r", "-\treturn 0;\r", "-}\r", "+int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tint result = super.XButtonPress (w, client_data, call_data, continue_to_dispatch);\r", "+\tif (result != 0) return result;\r", "+\tXButtonEvent xEvent = new XButtonEvent ();\r", "+\tOS.memmove (xEvent, call_data, XButtonEvent.sizeof);\r", "+\tif (xEvent.button != 1) return result;\r", "+\tstartX = xEvent.x;  startY = xEvent.y;\r", "+\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0, OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\tint border = argList [9], width = argList [5] + (border * 2), height = argList [7] + (border * 2);\r", "+\tlastX = ((short) argList [1]) - border;  lastY = ((short) argList [3]) - border;\r", "+\t/* The event must be sent because its doit flag is used. */\r", "+\tEvent event = new Event ();\r", "+\tevent.detail = SWT.DRAG;\r", "+\tevent.time = xEvent.time;\r", "+\tevent.x = lastX;  event.y = lastY;\r", "+\tevent.width = width;  event.height = height;\r", "+\t/*\r", "+\t * It is possible (but unlikely) that client code could have disposed\r", "+\t * the widget in the selection event.  If this happens end the processing\r", "+\t * of this message by returning.\r", "+\t */\r", "+\tsendEvent (SWT.Selection, event);\r", "+\tif (isDisposed ()) return result;\r", "+\tif (event.doit) {\r", "+\t\tdragging = true;\r", "+\t\tOS.XmUpdateDisplay (handle);\r", "+\t\tdrawBand (lastX = event.x, lastY = event.y, width, height);\r", "+\t}\r", "+\treturn result;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caecabdddde09502ff13b251ca1f51c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "abcda6211c0bcc3a908332242b9d1409108c82ba", "commitAfterChange": "04de3fc7ae68f9215fb3d4fcc47ca5754e572bac", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int callData, int int1, int int2)", "diff": ["+", "+int processMouseDown (int callData, int int1, int int2) {", "+\tsuper.processMouseDown (callData, int1, int2);", "+\tint button = OS.gdk_event_button_get_button (callData);", "+\tif (button != 1) return 0;", "+\tdouble[] px = new double [1], py = new double [1];", "+\tOS.gdk_event_get_coords (callData, px, py);", "+\tstartX = (int)px [0];  startY = (int) py [0];", "+\tint border = 0;", "+\tint x = OS.GTK_WIDGET_X (handle);", "+\tint y = OS.GTK_WIDGET_Y (handle);", "+\tint width = OS.GTK_WIDGET_WIDTH (handle);", "+\tint height = OS.GTK_WIDGET_HEIGHT (handle);", "+\tlastX = x - border;  lastY = y - border;", "+\t/* The event must be sent because its doit flag is used. */", "+\tEvent event = new Event ();", "+\tevent.detail = SWT.DRAG;", "+\tevent.time = OS.gdk_event_get_time (callData);", "+\tevent.x = lastX;  event.y = lastY;", "+\tevent.width = width;  event.height = height;", "+\t/*", "+\t * It is possible (but unlikely) that client code could have disposed", "+\t * the widget in the selection event.  If this happens end the processing", "+\t * of this message by returning.", "+\t */", "+\tsendEvent (SWT.Selection, event);", "+\tif (isDisposed ()) return 0;", "+\tif (event.doit) {", "+\t\tdragging = true;", "+//\t\tOS.XmUpdateDisplay (handle);", "+\t\tdrawBand (lastX = event.x, lastY = event.y, width, height);", "+\t}", "+\treturn 0;\t", "+}", "-", "-int processMouseDown (int callData, int arg1, int int2) {", "-\tsuper.processMouseDown (callData,arg1,int2);", "-\tif (OS.gdk_event_button_get_button(callData) != 1) return 0;", "-\t", "-\toriginX = OS.GTK_WIDGET_X(handle);", "-\toriginY = OS.GTK_WIDGET_Y(handle);", "-\tlastX = 0;", "-\tlastY = 0;", "-\t", "-\t/* The event must be sent because its doit flag is used. */", "-\tEvent event = new Event ();", "-\tevent.detail = SWT.DRAG;", "-\tevent.time = OS.gdk_event_get_time(callData);", "-\tevent.x = originX;", "-\tevent.y = originY;", "-\tevent.width = OS.GTK_WIDGET_WIDTH (handle);", "-\tevent.height = OS.GTK_WIDGET_HEIGHT (handle);", "-\t/*", "-\t * It is possible (but unlikely) that client code could have disposed", "-\t * the widget in the selection event.  If this happens end the processing", "-\t * of this message by returning.", "-\t */", "-\tsendEvent (SWT.Selection, event);", "-\tif (isDisposed ()) return 0;", "-\tif (event.doit) {", "-\t\tdragging = true;", "-\t\tdrawBand (originX, originY, event.width, event.height);", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06b3339f653d4a2229d83d58809292f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r int processMouseMove (int callData)", "signatureAfterChange": "\r int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-}\r", "-int processMouseMove (int callData) {\r", "-\tsuper.processMouseMove (callData);\r", "-\tXMotionEvent xEvent = new XMotionEvent ();\r", "-\tOS.memmove (xEvent, callData, XMotionEvent.sizeof);\r", "-\tif (!dragging || (xEvent.state & OS.Button1Mask) == 0) return 0;\r", "-\tint [] argList1 = {OS.XmNx, 0, OS.XmNy, 0, OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "-\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "-\tint border = argList1 [9], x = ((short) argList1 [1]) - border, y = ((short) argList1 [3]) - border;\r", "-\tint width = argList1 [5] + (border * 2), height = argList1 [7] + (border * 2);\r", "-\tint [] argList2 = {OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "-\tOS.XtGetValues (parent.handle, argList2, argList2.length / 2);\r", "-\tint parentBorder = argList2 [5];\r", "-\tint parentWidth = argList2 [1] + (parentBorder * 2);\r", "-\tint parentHeight = argList2 [3] + (parentBorder * 2);\r", "-\tint newX = lastX, newY = lastY;\r", "-\tif ((style & SWT.VERTICAL) != 0) {\r", "-\t\tnewX = Math.min (Math.max (0, xEvent.x + x - startX - parentBorder), parentWidth - width);\r", "-\t} else {\r", "-\t\tnewY = Math.min (Math.max (0, xEvent.y + y - startY - parentBorder), parentHeight - height);\r", "-\t}\r", "-\tif (newX == lastX && newY == lastY) return 0;\r", "-\tdrawBand (lastX, lastY, width, height);\r", "-\t/* The event must be sent because its doit flag is used. */\r", "-\tEvent event = new Event ();\r", "-\tevent.detail = SWT.DRAG;\r", "-\tevent.time = xEvent.time;\r", "-\tevent.x = newX;  event.y = newY;\r", "-\tevent.width = width;  event.height = height;\r", "-\t/*\r", "-\t * It is possible (but unlikely) that client code could have disposed\r", "-\t * the widget in the selection event.  If this happens end the processing\r", "-\t * of this message by returning.\r", "-\t */\r", "-\tsendEvent (SWT.Selection, event);\r", "-\tif (isDisposed ()) return 0;\r", "-\tif (event.doit) {\r", "-\t\tlastX = event.x;  lastY = event.y;\r", "-\t\tOS.XmUpdateDisplay (handle);\r", "-\t\tdrawBand (lastX, lastY, width, height);\r", "-\t}\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tint result = super.XPointerMotion (w, client_data, call_data, continue_to_dispatch);\r", "+\tif (result != 0) return result;\r", "+\tXMotionEvent xEvent = new XMotionEvent ();\r", "+\tOS.memmove (xEvent, call_data, XMotionEvent.sizeof);\r", "+\tif (!dragging || (xEvent.state & OS.Button1Mask) == 0) return result;\r", "+\tint [] argList1 = {OS.XmNx, 0, OS.XmNy, 0, OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "+\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "+\tint border = argList1 [9], x = ((short) argList1 [1]) - border, y = ((short) argList1 [3]) - border;\r", "+\tint width = argList1 [5] + (border * 2), height = argList1 [7] + (border * 2);\r", "+\tint [] argList2 = {OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "+\tOS.XtGetValues (parent.handle, argList2, argList2.length / 2);\r", "+\tint parentBorder = argList2 [5];\r", "+\tint parentWidth = argList2 [1] + (parentBorder * 2);\r", "+\tint parentHeight = argList2 [3] + (parentBorder * 2);\r", "+\tint newX = lastX, newY = lastY;\r", "+\tif ((style & SWT.VERTICAL) != 0) {\r", "+\t\tnewX = Math.min (Math.max (0, xEvent.x + x - startX - parentBorder), parentWidth - width);\r", "+\t} else {\r", "+\t\tnewY = Math.min (Math.max (0, xEvent.y + y - startY - parentBorder), parentHeight - height);\r", "+\t}\r", "+\tif (newX == lastX && newY == lastY) return result;\r", "+\tdrawBand (lastX, lastY, width, height);\r", "+\t/* The event must be sent because its doit flag is used. */\r", "+\tEvent event = new Event ();\r", "+\tevent.detail = SWT.DRAG;\r", "+\tevent.time = xEvent.time;\r", "+\tevent.x = newX;  event.y = newY;\r", "+\tevent.width = width;  event.height = height;\r", "+\t/*\r", "+\t * It is possible (but unlikely) that client code could have disposed\r", "+\t * the widget in the selection event.  If this happens end the processing\r", "+\t * of this message by returning.\r", "+\t */\r", "+\tsendEvent (SWT.Selection, event);\r", "+\tif (isDisposed ()) return result;\r", "+\tif (event.doit) {\r", "+\t\tlastX = event.x;  lastY = event.y;\r", "+\t\tOS.XmUpdateDisplay (handle);\r", "+\t\tdrawBand (lastX, lastY, width, height);\r", "+\t}\r", "+\treturn result;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917b65ac2878bbf73697a25aeb363c45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "abcda6211c0bcc3a908332242b9d1409108c82ba", "commitAfterChange": "04de3fc7ae68f9215fb3d4fcc47ca5754e572bac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "  int processMouseMove (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseMove (int callData, int int1, int int2)", "diff": ["+", "+int processMouseMove (int callData, int int1, int int2) {", "+\tsuper.processMouseMove (callData, int1, int2);", "+\tint [] state = new int [1];", "+\tOS.gdk_event_get_state (callData, state);", "+\tif (!dragging || (state [0] & OS.GDK_BUTTON1_MASK) == 0) return 0;", "+\tint x = OS.GTK_WIDGET_X (handle);", "+\tint y = OS.GTK_WIDGET_Y (handle);", "+\tint width = OS.GTK_WIDGET_WIDTH (handle);", "+\tint height = OS.GTK_WIDGET_HEIGHT (handle);", "+\tint border = 0, parentBorder = 0;", "+\tint parentWidth = OS.GTK_WIDGET_WIDTH (parent.handle);", "+\tint parentHeight = OS.GTK_WIDGET_WIDTH (parent.handle);", "+\tdouble[] px = new double [1], py = new double [1];", "+\tOS.gdk_event_get_coords (callData, px, py);", "+\tint newX = lastX, newY = lastY;", "+\tif ((style & SWT.VERTICAL) != 0) {", "+\t\tnewX = Math.min (Math.max (0, (int)px [0] + x - startX - parentBorder), parentWidth - width);", "+\t} else {", "+\t\tnewY = Math.min (Math.max (0, (int)py[0] + y - startY - parentBorder), parentHeight - height);", "+\t}", "+\tif (newX == lastX && newY == lastY) return 0;", "+\tdrawBand (lastX, lastY, width, height);", "+\t/* The event must be sent because its doit flag is used. */", "+\tEvent event = new Event ();", "+\tevent.detail = SWT.DRAG;", "+\tevent.time = OS.gdk_event_get_time (callData);", "+\tevent.x = newX;  event.y = newY;", "+\tevent.width = width;  event.height = height;", "+\t/*", "+\t * It is possible (but unlikely) that client code could have disposed", "+\t * the widget in the selection event.  If this happens end the processing", "+\t * of this message by returning.", "+\t */", "+\tsendEvent (SWT.Selection, event);", "+\tif (isDisposed ()) return 0;", "+\tif (event.doit) {", "+\t\tlastX = event.x;  lastY = event.y;", "+//\t\tOS.XmUpdateDisplay (handle);", "+\t\tdrawBand (lastX, lastY, width, height);", "+\t}", "+\treturn 0;", "+}", "-", "-int processMouseMove (int callData, int arg1, int int2) {", "-\tsuper.processMouseMove (callData, arg1, int2);", "-\tif (!dragging) return 0;", "-\t", "-\t/* Get the coordinates where the event happened, relative to the receiver */", "-\tdouble[] px = new double[1];", "-\tdouble[] py = new double[1];", "-\tOS.gdk_event_get_coords(callData, px, py);", "-\tint x = (int)(px[0]);", "-\tint y = (int)(py[0]);", "-\t", "-\tint width = OS.GTK_WIDGET_WIDTH(handle);", "-\tint height = OS.GTK_WIDGET_HEIGHT(handle);", "-", "-\tif ((style & SWT.VERTICAL) != 0) {", "-\t\t/* Erase the old one */", "-\t\tint oldDrawX = originX + lastX;", "-\t\tdrawBand(oldDrawX, originY, width, height);", "-\t\t/* Draw the new */", "-\t\tint drawX = originX + x;", "-\t\tdrawBand(drawX, originY, width, height);", "-\t\tlastX = x;", "-\t} else {", "-\t\t/* Erase the old one */", "-\t\tint oldDrawY = originY + lastY;", "-\t\tdrawBand(originX, oldDrawY, width, height);", "-\t\t/* Draw the new */", "-\t\tint drawY = originY + y;", "-\t\tdrawBand(originX, drawY, width, height);", "-\t\tlastY = y;", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c2fe8a5c108f2dd2eab7bdf9ffcaf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r int processMouseUp (int callData)", "signatureAfterChange": "\r int XButtonRelease (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-}\r", "-int processMouseUp (int callData) {\r", "-\tsuper.processMouseUp (callData);\r", "-\tXButtonEvent xEvent = new XButtonEvent ();\r", "-\tOS.memmove (xEvent, callData, XButtonEvent.sizeof);\r", "-\tif (xEvent.button != 1) return 0;\r", "-\tif (!dragging) return 0;\r", "-\tdragging = false;\r", "-\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\tint border = argList [5];\r", "-\tint width = argList [1] + (border * 2), height = argList [3] + (border * 2);\r", "-\t/* The event must be sent because its doit flag is used. */\r", "-\tEvent event = new Event ();\r", "-\tevent.time = xEvent.time;\r", "-\tevent.x = lastX;  event.y = lastY;\r", "-\tevent.width = width;  event.height = height;\r", "-\tdrawBand (lastX, lastY, width, height);\r", "-\tsendEvent (SWT.Selection, event);\r", "-\t/* widget could be disposed here */\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XButtonRelease (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tint result = super.XButtonRelease (w, client_data, call_data, continue_to_dispatch);\r", "+\tif (result != 0) return result;\r", "+\tXButtonEvent xEvent = new XButtonEvent ();\r", "+\tOS.memmove (xEvent, call_data, XButtonEvent.sizeof);\r", "+\tif (xEvent.button != 1) return result;\r", "+\tif (!dragging) return result;\r", "+\tdragging = false;\r", "+\tint [] argList = {OS.XmNwidth, 0, OS.XmNheight, 0, OS.XmNborderWidth, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\tint border = argList [5];\r", "+\tint width = argList [1] + (border * 2), height = argList [3] + (border * 2);\r", "+\t/* The event must be sent because its doit flag is used. */\r", "+\tEvent event = new Event ();\r", "+\tevent.time = xEvent.time;\r", "+\tevent.x = lastX;  event.y = lastY;\r", "+\tevent.width = width;  event.height = height;\r", "+\tdrawBand (lastX, lastY, width, height);\r", "+\tsendEvent (SWT.Selection, event);\r", "+\t/* widget could be disposed here */\r", "+\treturn result;\r", "+}\r"]}], "num": 39309}