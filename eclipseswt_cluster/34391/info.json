{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8137c2c29cee55a856d03ae928aae1b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0914ec178dbc999a7a0522a3120548fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": " static boolean cde_init(Display display)", "signatureAfterChange": "  static boolean cde_init(Display display)", "diff": ["+", "-\tint widgetClass = OS.topLevelShellWidgetClass();", "-\tint shell = OS.XtAppCreateShell(appName, appName, widgetClass, display.xDisplay, null, 0);", "-\tboolean initOK = CDE.DtAppInitialize(xtContext, display.xDisplay, shell, appName, appName);", "-\tif (!initOK) {", "-\t\tOS.XtDestroyWidget(shell);", "-\t}", "-\telse {", "-\t\tCDE.DtDbLoad();", "-\t\tdisplay.setData(CDE_SHELL, new Integer(shell));", "-\t\tdisplay.disposeExec(new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\t/* This logic assumes that when the corresponding display is", "-\t\t\t\t * being disposed, it must be the current one.", "-\t\t\t\t */", "-\t\t\t\tInteger shellData = (Integer)Display.getCurrent().getData(CDE_SHELL);", "-\t\t\t\tif (shellData != null) OS.XtDestroyWidget(shellData.intValue());", "-\t\t\t}", "-\t\t});", "-\t}\t", "+\tInteger shell = (Integer)display.getData(SHELL_HANDLE_KEY);", "+\tboolean initOK = CDE.DtAppInitialize(xtContext, display.xDisplay, shell.intValue(), appName, appName);", "+\tif (initOK) CDE.DtDbLoad();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47072d233f8e69c40820d312c714a784", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5e356c18b07e7f5af1a6b17c096783ad43ee7650", "commitAfterChange": "bec9de216652a0f1829bdec4dfa5d60c81e5e090", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 5, "signatureBeforeChange": " static boolean cde_init( Display display )", "signatureAfterChange": " static boolean cde_init(Display display)", "diff": ["+ */", "+static boolean cde_init(Display display) {", "+\ttry {", "+\t\tLibrary.loadLibrary(\"swt-cde\");", "+\t} catch (Throwable e) {", "+\t\treturn false;", "+\t}", "+", "+\t/* Use the character encoding for the default locale */", "+\tbyte[] appName = Converter.wcsToMbcs(null, \"SWT\", true);", "+\tint xtContext = OS.XtDisplayToApplicationContext(display.xDisplay);", "+\tint widgetClass = OS.topLevelShellWidgetClass();", "+\tint shell = OS.XtAppCreateShell(appName, appName, widgetClass, display.xDisplay, null, 0);", "+\tboolean initOK = CDE.DtAppInitialize(xtContext, display.xDisplay, shell, appName, appName);", "+\tif (!initOK) {", "+\t\tOS.XtDestroyWidget(shell);", "+\t}", "+\telse {", "+\t\tCDE.DtDbLoad();", "+\t\tdisplay.setData(CDE_SHELL, new Integer(shell));", "+\t\tdisplay.disposeExec(new Runnable() {", "+\t\t\tpublic void run() {", "+\t\t\t\t/* This logic assumes that when the corresponding display is", "+\t\t\t\t * being disposed, it must be the current one.", "+\t\t\t\t */", "+\t\t\t\tInteger shell = (Integer)Display.getCurrent().getData(CDE_SHELL);", "+\t\t\t\tif (shell != null) OS.XtDestroyWidget(shell.intValue());", "+\t\t\t}", "+\t\t});", "+\t}\t", "+\treturn initOK;", "- */", "-static boolean cde_init( Display display ) {", "-\ttry {", "-\t\tLibrary.loadLibrary(\"swt-cde\");", "-\t} catch (Throwable e) {", "-\t\treturn false;", "-\t}", "-", "-\t/* Use the character encoding for the default locale */", "-\tbyte[] appName = Converter.wcsToMbcs( null, \"SWT\", true );", "-\tint xtContext  = OS.XtDisplayToApplicationContext( display.xDisplay );", "-\tint widgetClass = OS.topLevelShellWidgetClass();", "-\tint shell = OS.XtAppCreateShell( appName, appName, widgetClass, display.xDisplay, null, 0 );", "-\tboolean initOK  = CDE.DtAppInitialize( xtContext, display.xDisplay, shell, appName, appName );", "-\tif (!initOK) {", "-\t\tOS.XtDestroyWidget( shell );", "-\t}", "-\telse {", "-\t\tCDE.DtDbLoad();", "-\t\tdisplay.setData( cdeShell, new Integer(shell) );", "-\t\tdisplay.disposeExec( new Runnable() {", "-\t\t\tpublic void run() {", "-\t\t\t\t// This logic assumes that when the corresponding display is", "-\t\t\t\t// being disposed, it must be the current one.", "-\t\t\t\tInteger shell = (Integer) Display.getCurrent().getData( cdeShell );", "-\t\t\t\tif (shell != null) {", "-\t\t\t\t\tOS.XtDestroyWidget( shell.intValue() );", "-\t\t\t\t}", "-\t\t\t}", "-\t\t});", "-\t}\t", "-\treturn initOK;"]}], "num": 34391}