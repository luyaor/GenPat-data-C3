{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97f6209b93b0645f2aafb6b1658a69e8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c330315430d16626934dda82748cc510", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/StatsGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void generateFunctionEnum(Method[] methods)", "signatureAfterChange": "  void generateFunctionEnum(JNIMethod[] methods)", "diff": ["-void generateFunctionEnum(Method[] methods) {", "+void generateFunctionEnum(JNIMethod[] methods) {", "-\t\tMethod method = methods[i];", "+\t\tJNIMethod method = methods[i];", "+\t\tString function = getFunctionName(method), function64 = getFunctionName(method, method.getParameterTypes64());", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutput(\"#ifndef \");", "+\t\t\toutput(JNI64);", "+\t\t\toutputln();", "+\t\t}", "-\t\toutput(getFunctionName(method));", "+\t\toutput(function);", "+\t\tif (!function.equals(function64)) {", "+\t\t\toutputln(\"#else\");", "+\t\t\toutput(\"\\t\");", "+\t\t\toutput(function64);", "+\t\t\toutputln(\"_FUNC,\");", "+\t\t\toutputln(\"#endif\");", "+\t\t}", "-\tClass clazz = methods[0].getDeclaringClass();", "+\tJNIClass clazz = methods[0].getDeclaringClass();", "-\toutput(getClassName(clazz));", "+\toutput(clazz.getSimpleName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979762ed47d9c7fb379c54a14b84a85c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void generateExitMacro(Method method, String function)", "signatureAfterChange": "  void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter)", "diff": ["-void generateExitMacro(Method method, String function) {", "+void generateEnterExitMacro(JNIMethod method, String function, String function64, boolean enter) {", "+\tif (!function.equals(function64)) {", "+\t\toutput(\"#ifndef \");", "+\t\toutput(JNI64);", "+\t\toutputln();", "+\t}", "-\toutput(getClassName(method.getDeclaringClass()));", "-\toutput(\"_NATIVE_EXIT(env, that, \");", "+\toutput(method.getDeclaringClass().getSimpleName());", "+\toutput(\"_NATIVE_\");", "+\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\toutput(\"(env, that, \");", "+\tif (!function.equals(function64)) {", "+\t\toutputln(\"#else\");", "+\t\toutput(\"\\t\");", "+\t\toutput(method.getDeclaringClass().getSimpleName());", "+\t\toutput(\"_NATIVE_\");", "+\t\toutput(enter ? \"ENTER\" : \"EXIT\");", "+\t\toutput(\"(env, that, \");", "+\t\toutput(function64);", "+\t\toutputln(\"_FUNC);\");", "+\t\toutputln(\"#endif\");", "+\t}"]}], "num": 63384}