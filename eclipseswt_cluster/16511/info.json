{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0897bd598f9c823aa18d5c473eb832fc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b915fd54861576bb34806775189f6529", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee7a783083e0c18c9c0e00c3f49a7de5eaa86f7e", "commitAfterChange": "df518e1d40069787b8bec5a1ea6e923fc650b996", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public Shell getActiveShell ()", "signatureAfterChange": " public Shell getActiveShell ()", "diff": ["+\t\t", "+\t\t// Embedded shell test: If the NSWindow isn't an SWTWindow walk up the", "+\t\t// hierarchy from the hit view to see if some view maps to a Shell.", "+\t\tNSPoint windowLocation = window.mouseLocationOutsideOfEventStream();", "+\t\tNSView hitView = window.contentView().hitTest(windowLocation);", "+\t\twhile (hitView != null) {", "+\t\t\twidget = getWidget(hitView.id);", "+\t\t\tif (widget instanceof Shell) {", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\thitView = hitView.superview();", "+\t\t}", "+\t\treturn (Shell)widget;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "804dd40754a79b412d5bef41df00f8a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d482d3ac5db20fa051bd067d7f91f3fa9cbb9993", "commitAfterChange": "98a4a56c018233577cff0e8e47d70c6c037c182b", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " public void setCursor (Cursor cursor)", "signatureAfterChange": " public void setCursor (Cursor cursor)", "diff": ["-\tview.window().invalidateCursorRectsForView(view);", "+\tNSWindow window = view.window();", "+\tNSPoint location = window.convertScreenToBase(NSEvent.mouseLocation());", "+\tNSView view = window.contentView().hitTest(location);", "+\tControl control = null;", "+\tif (view != null) {", "+\t\tdo {", "+\t\t\tWidget widget = display.getWidget (view);", "+\t\t\tif (widget instanceof Control) {", "+\t\t\t\tcontrol = (Control)widget;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tview = view.superview();", "+\t\t} while (view != null);", "+\t}", "+\tif (control != null && control.isTrim (view)) control = null;", "+\tdisplay.setCursor (control);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ec529ffe1435e47f45fce3df385d3b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "3b3d098520cdb7d3ef28038423dd059e929d36f7", "commitAfterChange": "b5ab9fca0706738cbb566934a936be42e3684cd0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void viewWillMoveToWindow(int id, int sel, int arg0)", "signatureAfterChange": "  void viewWillMoveToWindow(int id, int sel, int arg0)", "diff": ["-\tif (glcontext != null) {", "-\t\tnew NSWindow(arg0).setOpaque(false);", "-\t\tShell shell = getShell();", "-\t\tNSWindow window = shell.window;", "-\t\tif (window != null) {", "-\t\t\twindow.setOpaque(shell.region == null);", "+\tif (glcontext != null && id == view.id && arg0 != 0) {", "+\t\tWidget newShell = display.getWidget(new NSWindow(arg0).contentView());", "+\t\tif (newShell instanceof Shell) {", "+\t\t\t((Shell) newShell).glContextCount++;", "+\t\t\t((Shell) newShell).updateOpaque();", "+\t\tShell shell = getShell();", "+\t\tshell.glContextCount--;", "+\t\tshell.updateOpaque();"]}], "num": 16511}