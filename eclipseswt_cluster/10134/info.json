{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4029f6ee41cbc62e3885c825276cf6c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093eec6a847d31bb924803bee447b17e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/photon/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "cec669ea3b0cf84e0380b5bd6c8017a8050ce7e0", "commitAfterChange": "75fc9e9240c137385aef55f04172aedfdf72ca1f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void removeProgressListener(ProgressListener listener)", "signatureAfterChange": " public void removeProgressListener(ProgressListener listener)", "diff": ["+ */", "+\tif (progressListeners.length == 0) return;", "+\tint index = -1;", "+\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\tif (listener == progressListeners[i]) {", "+\t\t\tindex = i;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (index == -1) return;", "+\tif (progressListeners.length == 1) {", "+\t\tprogressListeners = new ProgressListener[0];", "+\t\treturn;", "+\t}", "+\tProgressListener[] newProgressListeners = new ProgressListener[progressListeners.length - 1];", "+\tSystem.arraycopy(progressListeners, 0, newProgressListeners, 0, index);", "+\tSystem.arraycopy(progressListeners, index + 1, newProgressListeners, index, progressListeners.length - index - 1);", "+\tprogressListeners = newProgressListeners;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c53fd7841fa36cdc26401e9ecfcee62a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "commitAfterChange": "e5951bd17b31b8cb707a15cbf154c50c6581fd3e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 86, "signatureBeforeChange": "  public void removeProgressListener(ProgressListener listener)", "signatureAfterChange": " public void removeProgressListener(ProgressListener listener)", "diff": ["+ */", "+\tif (progressListeners.length == 0) return;", "+\tint index = -1;", "+\tfor (int i = 0; i < progressListeners.length; i++) {", "+\t\tif (listener == progressListeners[i]){", "+\t\t\tindex = i;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (index == -1) return;", "+\tif (progressListeners.length == 1) {", "+\t\tprogressListeners = new ProgressListener[0];", "+\t\treturn;", "+\t}", "+\tProgressListener[] newProgressListeners = new ProgressListener[progressListeners.length - 1];", "+\tSystem.arraycopy(progressListeners, 0, newProgressListeners, 0, index);", "+\tSystem.arraycopy(progressListeners, index + 1, newProgressListeners, index, progressListeners.length - index - 1);", "+\tprogressListeners = newProgressListeners;"]}], "num": 10134}