{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15d9ed8a492af2caf0f8752cca60dd64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b351cbededff0f6b28d340662c279743", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/SashForm.java", "commitBeforeChange": "dbaeb017fa8743be4b376f4ce8fd6661dd6d9b13", "commitAfterChange": "24805dc1a472fa501912bfe277317d37689c2f18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tControl[] controls = getControls(true);", "-\tif (controls.length == 0) return new Point(wHint, hHint);", "+\tControl[] cArray = getControls(true);", "+\tif (cArray.length == 0) return new Point(wHint, hHint);", "-\t\theight += (controls.length - 1) * sashwidth;", "+\t\theight += (cArray.length - 1) * sashwidth;", "-\t\twidth += (controls.length - 1) * sashwidth;", "+\t\twidth += (cArray.length - 1) * sashwidth;", "-\tfor (int i = 0; i < controls.length; i++) {", "+\tfor (int i = 0; i < cArray.length; i++) {", "-\t\t\tPoint size = controls[i].computeSize(wHint, SWT.DEFAULT);", "+\t\t\tPoint size = cArray[i].computeSize(wHint, SWT.DEFAULT);", "-\t\t\tPoint size = controls[i].computeSize(SWT.DEFAULT, hHint);", "+\t\t\tPoint size = cArray[i].computeSize(SWT.DEFAULT, hHint);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7352d21b259e13987a6250d2f2d14598", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5b6167a269cbdff7d19c385167fb7b77812b82c6", "commitAfterChange": "f6487111032547e1ade3cf517d365a21b313b806", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tint fontList = data.fontList;", "+\tFont font = data.font;", "+\tint fontList = font.handle;", "-\t\tif (buffer[0] == 0) { ", "+\t\tif (buffer[0] == 0) {", "-\t\t\tascent = ascent > fontStruct.max_bounds_ascent ? ascent : fontStruct.max_bounds_ascent;", "-\t\t\tdescent = descent > fontStruct.descent ? descent : fontStruct.descent;", "-\t\t\tint tmp = fontStruct.ascent + fontStruct.descent;", "-\t\t\theight = height > tmp ? height : tmp;", "-\t\t\ttmp = fontStruct.ascent - fontStruct.max_bounds_ascent;", "-\t\t\tleading = leading > tmp ? leading : tmp;", "+\t\t\tascent = Math.max(ascent, fontStruct.max_bounds_ascent);", "+\t\t\tdescent = Math.max(descent, fontStruct.max_bounds_descent);", "+\t\t\tint fontHeight = fontStruct.max_bounds_ascent + fontStruct.max_bounds_descent;", "+\t\t\theight = Math.max(height, fontHeight);", "-\t\t}", "-\t\telse { ", "+\t\t} else {", "-\t\t\tfor (int i = 0; i < nFonts; i++) { ", "+\t\t\tfor (int i = 0; i < nFonts; i++) {", "-\t\t\t\tascent = ascent > fontStruct.max_bounds_ascent ? ascent : fontStruct.max_bounds_ascent;", "-\t\t\t\tdescent = descent > fontStruct.descent ? descent : fontStruct.descent;", "-\t\t\t\tint tmp = fontStruct.ascent + fontStruct.descent;", "-\t\t\t\theight = height > tmp ? height : tmp;", "-\t\t\t\ttmp = fontStruct.ascent - fontStruct.max_bounds_ascent;", "-\t\t\t\tleading = leading > tmp ? leading : tmp;", "+\t\t\t\tascent = Math.max(ascent, fontStruct.max_bounds_ascent);", "+\t\t\t\tdescent = Math.max(descent, fontStruct.max_bounds_descent);", "+\t\t\t\tint fontHeight = fontStruct.max_bounds_ascent + fontStruct.max_bounds_descent;", "+\t\t\t\theight = Math.max(height, fontHeight);"]}], "num": 62595}