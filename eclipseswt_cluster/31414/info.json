{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e36a1d0109b42bccbf651dcefee42d1f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9506048fdf1cfe469bf5a201e7cf3f09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\tOS.GetControlBounds(data.control, rect);\t\t", "+\t\tOS.GetControlBounds(data.control, rect);", "+\t\tint convertX = 0, convertY = 0;", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tint[] contentView = new int[1];", "+\t\t\tOS.HIViewFindByID(OS.HIViewGetRoot(window), OS.kHIViewWindowContentID(), contentView);", "+\t\t\tOS.HIViewConvertPoint(pt, OS.HIViewGetSuperview(data.control), contentView[0]);", "+\t\t\tconvertX = rect.left + (int) pt.x;", "+\t\t\tconvertY = rect.top + (int) pt.y;", "+\t\t\trect.left += (int) pt.x;", "+\t\t\trect.top += (int) pt.y;", "+\t\t\trect.right += (int) pt.x;", "+\t\t\trect.bottom += (int) pt.y;", "+\t\t}", "-\t\tOS.RectRgn(srcRgn, srcRect);\t\t", "+\t\tOS.RectRgn(srcRgn, srcRect);", "-\t\t\tOS.InvalWindowRgn(window, invalRgn);", "+\t\t\tif (OS.HIVIEW) {", "+\t\t\t\tOS.OffsetRgn(invalRgn, (short)-convertX, (short)-convertY);", "+\t\t\t\tOS.HIViewSetNeedsDisplayInRegion(data.control, invalRgn, true);", "+\t\t\t} else {", "+\t\t\t\tOS.InvalWindowRgn(window, invalRgn);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c95a35b1c640846809539e85e0a6a60d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "64cbe9dba56fd19153259107fd9e294dc23f8148", "commitAfterChange": "f3c932634f01c615b66ab97c33ec9f24e06338d1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t\tcase OS.kDataBrowserContainerClosing: {", "+\t\t\t/*", "+\t\t\t* Bug in the Macintosh.  For some reason, if the selected sub items of an item", "+\t\t\t* get a kDataBrowserItemDeselected notificaton when the item is collapsed, a", "+\t\t\t* call to GetDataBrowserSelectionAnchor () will cause a segment fault.  The", "+\t\t\t* fix is to deselect these items ignoring kDataBrowserItemDeselected and them", "+\t\t\t* issue a selection event.", "+\t\t\t*/", "+\t\t\tint ptr = OS.NewHandle (0);", "+\t\t\tif (OS.GetDataBrowserItems (handle, item.id, true, OS.kDataBrowserItemIsSelected, ptr) == OS.noErr) {", "+\t\t\t\tint count = OS.GetHandleSize (ptr) / 4;", "+\t\t\t\tif (count > 0) {", "+\t\t\t\t\tint [] ids = new int [count];", "+\t\t\t\t\tOS.HLock (ptr);", "+\t\t\t\t\tint [] start = new int [1];", "+\t\t\t\t\tOS.memcpy (start, ptr, 4);", "+\t\t\t\t\tOS.memcpy (ids, start [0], count * 4);", "+\t\t\t\t\tOS.HUnlock (ptr);", "+\t\t\t\t\tignoreSelect = true;", "+\t\t\t\t\tOS.SetDataBrowserSelectedItems (handle, ids.length, ids, OS.kDataBrowserItemsRemove);", "+\t\t\t\t\tignoreSelect = false;", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.item = item;", "+\t\t\t\t\tif (ignoreExpand) {", "+\t\t\t\t\t\tsendEvent (SWT.Selection, event);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t}\t\t\t\t\t\t ", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.DisposeHandle (ptr);", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ea0790ce1ec8205c9b9d4089234183", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d4ce2fe3631bc060a94000536e7454e9ee602a3d", "commitAfterChange": "be954920b3bf51c2767d57c5bc9db3ba96994f28", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": "  void applicationWillFinishLaunching (int id, int sel, int notification)", "signatureAfterChange": "  void applicationWillFinishLaunching (int id, int sel, int notification)", "diff": ["+\t", "+\t/*", "+\t * Bug in AWT:  If the AWT starts up first when the VM was started on the first thread it assumes that", "+\t * a Carbon-based SWT will be used, so it calls NSApplicationLoad().  This causes the Carbon menu", "+\t * manager to create an application menu that isn't accessible via NSMenu.  It is, however, accessible", "+\t * via the Carbon menu manager, so find and delete the menu items it added. ", "+\t * ", "+\t * Note that this code will continue to work if Apple does change this. GetIndMenuWithCommandID will", "+\t * return a non-zero value indicating failure, which we ignore.", "+\t */", "+\tif (isEmbedded) {", "+\t\tint /*long*/ outMenu [] = new int /*long*/ [1];", "+\t\tshort outIndex[] = new short[1];", "+\t\tint status = OS.GetIndMenuItemWithCommandID(0, OS.kHICommandHide, 1, outMenu, outIndex);", "+\t\tif (status == 0) OS.DeleteMenuItem(outMenu[0], outIndex[0]);", "+\t\tstatus = OS.GetIndMenuItemWithCommandID(0, OS.kHICommandHideOthers, 1, outMenu, outIndex);", "+\t\tif (status == 0) OS.DeleteMenuItem(outMenu[0], outIndex[0]);", "+\t\tstatus = OS.GetIndMenuItemWithCommandID(0, OS.kHICommandShowAll, 1, outMenu, outIndex);", "+\t\tif (status == 0) OS.DeleteMenuItem(outMenu[0], outIndex[0]);", "+\t\tstatus = OS.GetIndMenuItemWithCommandID(0, OS.kHICommandQuit, 1, outMenu, outIndex);", "+\t\tif (status == 0) OS.DeleteMenuItem(outMenu[0], outIndex[0]);", "+\t\tstatus = OS.GetIndMenuItemWithCommandID(0, OS.kHICommandServices, 1, outMenu, outIndex);", "+\t\tif (status == 0) OS.DeleteMenuItem(outMenu[0], outIndex[0]);", "+\t}", "+"]}], "num": 31414}