{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fd4bb4efd703529d497e44279a9b955", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cba748d53850bb0367b73318e1e4301", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B()", "signatureAfterChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B()", "diff": ["-", "-public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B() {", "-\t// illegal argument, width < 0", "-\t\tnew ImageData(-1, 1, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 4, new byte[] {});", "-\t// illegal argument, height < 0", "-\t\tnew ImageData(1, -1, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 4, new byte[] {});", "-\t// illegal argument, depth != 1, 2, 4, 8, 16, 24 or 32", "-\t\tnew ImageData(1, 1, 7, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 4, new byte[] {});", "-\t\tfail(\"No exception thrown for depth != 1, 2, 4, 8, 16, 24 or 32\");", "-\t// illegal argument, palette is null", "-\t\tnew ImageData(1, 1, 8, null, 4, new byte[] {});", "-\t\tfail(\"No exception thrown for null palette\");", "+", "+public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B() {", "+\ttry {", "+\t\tnew ImageData(-1, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tfail(\"No exception thrown for width < 0\");", "+\ttry {", "+\t\tnew ImageData(1, -1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tfail(\"No exception thrown for height < 0\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 1, null, 0, new byte[] {});", "+\t\tfail(\"No exception thrown for paletteData == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, null);", "+\t\tfail(\"No exception thrown for data == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 3, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tfail(\"No exception thrown for unsupported depth\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tint[] validDepths = {1, 2, 4, 8, 16, 24, 32};", "+\tfor (int i = 0; i < validDepths.length; i++) {", "+\t\tnew ImageData(1, 1, validDepths[i], new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t};", "+\t", "-", "-\t// illegal argument, scanlinePad == 0", "+\t", "+\t// divide by zero exception if scanlinePad == 0"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdd8a4e1b5f374a872bf46f270e4a072", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "fe260d54c4731861d4b67096b0a0278dfb8bbb94", "commitAfterChange": "4102fdcf3ccacda6c1d64a2cea030a4503d7a339", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B()", "signatureAfterChange": "  public void test_ConstructorIIILorg_eclipse_swt_graphics_PaletteDataI$B()", "diff": ["+\tbyte[] validData = new byte[] {0, 0x4f, 0x4f, 0};", "+\t", "-\t\tnew ImageData(-1, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tnew ImageData(-1, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, validData);", "-\t\tnew ImageData(1, -1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tnew ImageData(1, -1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, validData);", "-\t\tnew ImageData(1, 1, 1, null, 0, new byte[] {});", "+\t\tnew ImageData(1, 1, 1, null, 0, validData);", "-\t\tnew ImageData(1, 1, 3, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tnew ImageData(1, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tfail(\"No exception thrown for data array too small\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 16, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {0x4f});", "+\t\tfail(\"No exception thrown for data array too small\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 32, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {0x4f, 0x4f});", "+\t\tfail(\"No exception thrown for data array too small\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(2, 2, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {0x4f, 0x4f, 0x4f});", "+\t\tfail(\"No exception thrown for data array too small\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\ttry {", "+\t\tnew ImageData(1, 1, 3, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, validData);", "+\t// verify all valid depths", "-\t\tnew ImageData(1, 1, validDepths[i], new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, new byte[] {});", "+\t\tnew ImageData(1, 1, validDepths[i], new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 1, validData);", "-\t// illegal argument, data is null", "+\t// verify no divide by zero exception if scanlinePad == 0", "-\t\tnew ImageData(1, 1, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 4, null);", "-\t\tfail(\"No exception thrown for null data\");", "-\t} catch (IllegalArgumentException e) {", "-\t}", "-\t", "-\t// divide by zero exception if scanlinePad == 0", "-\ttry {", "-\t\tnew ImageData(1, 1, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 0, new byte[] {});", "+\t\tnew ImageData(1, 1, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}), 0, validData);"]}], "num": 38596}