{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91be2695c7f4316e28818c7b9795e2c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ea909fa879c31728a4a7864f5902fd3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "0279ac89ad933bec67322b956321e83b2a1ac93a", "commitAfterChange": "dbc3f579c8454ac59e01ac2d56752eda0d58b6cd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tstate |= THEME_BACKGROUND;", "-\tif (hasBorder()) {", "-\t\tNSRect rect = new NSRect();", "-\t\tNSScrollView scrollWidget = (NSScrollView)new SWTScrollView().alloc();", "-\t\tscrollWidget.initWithFrame (rect);", "-\t\tscrollWidget.setDrawsBackground(false);", "-\t\tscrollWidget.setBorderType(OS.NSBezelBorder);", "-\t\tscrollView = scrollWidget;", "+\tif ((style & SWT.SMOOTH) != 0) {", "+\t\tnsToolbar = ((NSToolbar)new SWTToolbar().alloc()).initWithIdentifier(NSString.stringWith(String.valueOf(NEXT_ID++)));", "+\t\tnsToolbar.setDelegate(nsToolbar);", "+\t\tnsToolbar.setDisplayMode(OS.NSToolbarDisplayModeIconOnly);", "+\t\tNSWindow window = parent.view.window();", "+\t\twindow.setToolbar(nsToolbar);", "+\t\tnsToolbar.setVisible(true);", "+\t\tNSArray views = window.contentView().superview().subviews();", "+\t\tfor (int i = 0; i < views.count(); i++) {", "+\t\t\tid id = views.objectAtIndex(i);", "+\t\t\tif (new NSObject(id).className().getString().equals(\"NSToolbarView\")) {", "+\t\t\t\tview = new NSView(id);", "+\t\t\t\tOS.object_setClass(view.id, OS.objc_getClass(\"SWTToolbarView\"));", "+\t\t\t\tview.retain();", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tstyle &= ~SWT.SMOOTH;", "+\t} else {", "+\t\tstate |= THEME_BACKGROUND;", "+\t\tif (hasBorder()) {", "+\t\t\tNSRect rect = new NSRect();", "+\t\t\tNSScrollView scrollWidget = (NSScrollView)new SWTScrollView().alloc();", "+\t\t\tscrollWidget.initWithFrame (rect);", "+\t\t\tscrollWidget.setDrawsBackground(false);", "+\t\t\tscrollWidget.setBorderType(OS.NSBezelBorder);", "+\t\t\tscrollView = scrollWidget;", "+\t\t}", "+\t\tNSView widget = (NSView)new SWTView().alloc();", "+\t\twidget.init();", "+\t\tview = widget;", "+\t\tif (scrollView != null) view.setAutoresizingMask(OS.NSViewHeightSizable | OS.NSViewWidthSizable);", "-\tNSView widget = (NSView)new SWTView().alloc();", "-\twidget.init();", "-//\twidget.setDrawsBackground(false);", "-\tview = widget;", "-\tif (scrollView != null) view.setAutoresizingMask(OS.NSViewHeightSizable | OS.NSViewWidthSizable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37231a79108d2544e17dbed286f0f4f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "867309de6a2e74382934d9b48eadafbb2b40e750", "commitAfterChange": "31e6ef027d1dd1cf0d05f7bfe07c6688c8fe50b5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tvoid createButtonSelected(SelectionEvent event)", "signatureAfterChange": " \tvoid createButtonSelected(SelectionEvent event)", "diff": ["-\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER + Text.DELIMITER);", "+\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getRGB() = \" + dialog.getRGB() + Text.DELIMITER + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getFileNames() =\" + Text.DELIMITER);", "-\t\t\ttextWidget.append (Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getFilterIndex() = \" + dialog.getFilterIndex() + Text.DELIMITER + Text.DELIMITER);", "-\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER + Text.DELIMITER);", "+\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getFontList() =\" + Text.DELIMITER);", "+\t\t\tFontData [] fonts = dialog.getFontList ();", "+\t\t\tif (fonts != null) {", "+\t\t\t\tfor (int i=0; i<fonts.length; i++) {", "+\t\t\t\t\ttextWidget.append (\"\\t\" + fonts [i] + Text.DELIMITER);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\ttextWidget.append (\"getRGB() = \" + dialog.getRGB() + Text.DELIMITER + Text.DELIMITER);", "-\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER + Text.DELIMITER);", "+\t\t\ttextWidget.append (ControlExample.getResourceString(\"Result\", new String [] {\"\" + result}) + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getScope() = \" + dialog.getScope() + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getStartPage() = \" + dialog.getStartPage() + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getEndPage() = \" + dialog.getEndPage() + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getPrintToFile() = \" + dialog.getPrintToFile() + Text.DELIMITER + Text.DELIMITER);"]}], "num": 17772}