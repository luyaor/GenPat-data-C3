{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75ff5b6aea6122cf71f094bf84a67a61", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bda55fd1c34a26165f59746cdb49e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9cb2700ee8133266a3c10b257f5f1f7ef678579e", "commitAfterChange": "2c023cbbe3c181a70cb0b0641594e43819864e6b", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r \r void releaseDisplay ()", "signatureAfterChange": "\r \r void releaseDisplay ()", "diff": ["+\t\r", "+\tif (nullImage != 0) {\r", "+\t\tPhImage_t phImage = new PhImage_t();\r", "+\t\tOS.memmove(phImage, nullImage, PhImage_t.sizeof);\r", "+\t\tphImage.flags = OS.Ph_RELEASE_IMAGE_ALL;\r", "+\t\tOS.memmove(nullImage, phImage, PhImage_t.sizeof);\r", "+\t\tOS.PhReleaseImage(nullImage);\r", "+\t\tOS.free(nullImage);\r", "+\t\tnullImage = 0;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35e0d992cb5307e0f42920080daa542", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1b4bf2560a13cbe7bbaefe761d35208d64534690", "commitAfterChange": "4dfb9b2e7115a7b57c3f5b8a9e47ea812d940f92", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 78, "signatureBeforeChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "diff": ["-\tif ((nmcd.uItemState & OS.CDIS_FOCUS) != 0) {", "+//\tif ((nmcd.uItemState & OS.CDIS_FOCUS) != 0) {", "+\tif (OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED) == nmcd.dwItemSpec) {", "+\t\tignoreDrawFocus = (event.detail & SWT.FOCUSED) == 0;", "-\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = true;", "+\t\tignoreDrawForeground = ignoreDrawBackground = ignoreDrawSelection = ignoreDrawFocus = true;", "-\t\t\tnmcd.uItemState &= ~(OS.CDIS_SELECTED | OS.CDIS_FOCUS);", "+\t\t\tnmcd.uItemState &= ~OS.CDIS_SELECTED;", "+\t}", "+\tif (ignoreDrawFocus) {", "+\t\tnmcd.uItemState &= ~OS.CDIS_FOCUS;", "+\t\tOS.MoveMemory (lParam, nmcd, NMLVCUSTOMDRAW.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e1b66e78b929b10ed577e60744aaf5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f75fdeadffc43f5b76cf05ecbed2c970119ae37c", "commitAfterChange": "a55f512ff897438f07aa817017d2c93ae719cbb5", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 81, "signatureBeforeChange": "  void setZOrder (Control control, boolean above)", "signatureAfterChange": "  void setZOrder (Control control, boolean above)", "diff": ["-//\tif (above) {", "-//\t\t//NOT DONE - move one window above another", "-//\t \tOS.BringToFront (shellHandle);", "-//\t } else {", "-//\t\tint window = control == null ? 0 : OS.GetControlOwner (control.handle);", "-//\t\tOS.SendBehind (shellHandle, window);", "-//\t}", "+\tif (window == null) return;", "+\tif (control == null) {", "+\t\tif (above) {", "+\t\t\twindow.orderFront(null);", "+\t\t} else {", "+\t\t\twindow.orderBack(null);", "+\t\t}", "+\t} else {", "+\t\tNSWindow otherWindow = control.getShell().window;", "+\t\twindow.orderWindow(above ? OS.NSWindowAbove : OS.NSWindowBelow, otherWindow.windowNumber());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53471d4a90e4d72664fcd8343cc70bf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["-\t//TODO", "+\tif (color != null && color.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tif (color != null) {", "+\t\tint brush = OS.gcnew_SolidColorBrush (color.handle);", "+\t\tOS.Control_Background (handle, brush);", "+\t\tOS.GCHandle_Free (brush);", "+\t} else {", "+\t\tint property = OS.Control_BackgroundProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t}", "+\tbackground = color;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6e111254dbcb715814ff40a37a8b1c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "01cb2fa726502c19e2cfdc967af07c4b3d8863e8", "commitAfterChange": "acef77af78be86949f7fcd443acab7ba7924332a", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void updateText (int index)", "signatureAfterChange": "  void updateText (int index)", "diff": ["+\tif (strings == null) return;", "-\t\tint strPtr = createDotNetString (strings[index], false);", "-\t\tOS.TextBlock_Text (textBlock, strPtr);\t\t", "-\t\tOS.GCHandle_Free (strPtr);", "+\t\tif (strings [index] != null) {", "+\t\t\tint strPtr = createDotNetString (strings[index], false);", "+\t\t\tint text = OS.TextBlock_Text (textBlock);", "+\t\t\tOS.TextBlock_Text (textBlock, strPtr);", "+\t\t\tOS.GCHandle_Free (text);", "+\t\t\tOS.GCHandle_Free (strPtr);", "+\t\t} else {", "+\t\t\tint property = OS.TextBlock_TextProperty ();", "+\t\t\tOS.DependencyObject_ClearValue (textBlock, property);", "+\t\t\tOS.GCHandle_Free (property);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "910d67c80e24b679c0e9bcf68b1bfee8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void setForeground (Color color)", "signatureAfterChange": " public void setForeground (Color color)", "diff": ["-\t//TODO", "-//\tint pixel = -1;", "-//\tif (color != null) {", "-//\t\tparent.setCustomDraw (true);", "-//\t\tpixel = color.handle;", "-//\t}", "-//\tif (foreground == pixel) return;", "-//\tforeground = pixel;", "+\tif (color != null) {", "+\t\tint brush = OS.gcnew_SolidColorBrush (color.handle);", "+\t\tOS.Control_Foreground (handle, brush);", "+\t\tOS.GCHandle_Free (brush);", "+\t} else {", "+\t\tint property = OS.Control_ForegroundProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t}", "+\tforeground = color;", "-//\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e75e64ed6dbd4b9fb4fe898b946c78e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "accca3b673d3390ae7927f3a41037eac649d871a", "commitAfterChange": "5da35fc3c0cc5b018b8fdd8b0bd681c0c5481f98", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "  int textInputProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int textInputProc (int nextHandler, int theEvent, int userData)", "diff": ["-\tWidget widget = getWidget (userData);", "-\tif (widget == null) {", "-\t\tint theWindow = OS.GetUserFocusWindow ();", "-\t\tif (theWindow == 0) return OS.eventNotHandledErr;", "+\tint theWindow = OS.GetUserFocusWindow ();", "+\tif (theWindow != 0) {", "-\t\twidget = getWidget (theControl [0]);", "+\t\tWidget widget = getWidget (theControl [0]);", "+\t\tif (widget != null) {", "+\t\t\t/* Stop the default event handler from activating the default button */", "+\t\t\tOS.GetWindowDefaultButton (theWindow, theControl);", "+\t\t\tOS.SetWindowDefaultButton (theWindow, 0);", "+\t\t\tint result = widget.textInputProc (nextHandler, theEvent, userData);", "+\t\t\tif (result == OS.eventNotHandledErr) {", "+\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t}", "+\t\t\tOS.SetWindowDefaultButton (theWindow, theControl [0]);", "+\t\t\treturn result;", "+\t\t}", "-\tif (widget != null) return widget.textInputProc (nextHandler, theEvent, userData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a16d8c575b3f8d9fc5901b9d2a845d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tint atkObjectFactory_create_accessible (int widget)", "signatureAfterChange": "  \tint atkObjectFactory_create_accessible (int widget)", "diff": ["-\t\treturn accessibleType.createObject (accessible, widget);", "+\t\tif (accessible == null) {", "+\t\t\t// we don't care about this control, so create it with the parent's ", "+\t\t\t// type so that its accessibility callbacks will not pass though here", "+\t\t\tint result = ATK.g_object_new (objectParentType, 0);", "+\t\t\tATK.atk_object_initialize (result, widget);", "+\t\t\treturn result;", "+\t\t}", "+\t\tAccessibleObject object = new AccessibleObject (objectType, widget, accessible, objectParentType, false);", "+\t\taccessible.accessibleObject = object;", "+\t\treturn object.handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e059b383d785dc65ef8e4f22d080c539", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "09cfe393cadcc6af1f04e0253e0a32ffe94fa83a", "commitAfterChange": "2c464df8c4df814b94d6e6626547589fd3236ce4", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": " public void paste()", "signatureAfterChange": " public void paste()", "diff": ["-\t\tevent.text = getModelDelimitedText(text);", "+\t\tString delimitedText = getModelDelimitedText(text);", "+\t\tif (textLimit > 0) {", "+\t\t\tint uneditedTextLength = getCharCount() - (selection.y - selection.x);", "+\t\t\tif ((uneditedTextLength + delimitedText.length()) > textLimit) {", "+\t\t\t\tint endIndex = textLimit - uneditedTextLength;", "+\t\t\t\tdelimitedText = delimitedText.substring(0, Math.max(endIndex, 0));", "+\t\t\t}", "+\t\t}", "+\t\tevent.text = delimitedText;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f4f3d1a895ea41108e02de50632437", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void setBackground (Color color)", "signatureAfterChange": " public void setBackground (Color color)", "diff": ["-//\tint pixel = -1;", "-\t//TODO", "-//\tif (color != null) {", "-//\t\tparent.setCustomDraw (true);", "-//\t\tpixel = color.handle;", "-//\t}", "-//\tif (background == pixel) return;", "-//\tbackground = pixel;", "+\tif (color != null) {", "+\t\tint brush = OS.gcnew_SolidColorBrush (color.handle);", "+\t\tOS.Control_Background (handle, brush);", "+\t\tOS.GCHandle_Free (brush);", "+\t} else {", "+\t\tint property = OS.Control_BackgroundProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t}", "+\tbackground = color;", "-//\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7bfbb93bf25a5bbf81eb30310b5003", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void setForeground (Color color)", "signatureAfterChange": " public void setForeground (Color color)", "diff": ["-\t//TODO", "+\tif (color != null) {", "+\t\tint brush = OS.gcnew_SolidColorBrush (color.handle);", "+\t\tOS.Control_Foreground (handle, brush);", "+\t\tOS.GCHandle_Free (brush);", "+\t} else {", "+\t\tint property = OS.Control_ForegroundProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t}", "+\tforeground = color;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a08f86459c0edec8934da1deb4bc5239", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "adcfb0b52d7d7103376a18db3fb70de039c4c845", "commitAfterChange": "9bf8df18469d100b663ea8d986003de435f816fc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public ImageData getImageData()", "signatureAfterChange": "\r public ImageData getImageData()", "diff": ["-\t\t\t\t\thandle = createDIBFromDDB(hDC, handle, width, height);\r", "+\t\t\t\t\tboolean mustRestore = false;\r", "+\t\t\t\t\tif (memGC != null && !memGC.isDisposed()) {\r", "+\t\t\t\t\t\tmustRestore = true;\r", "+\t\t\t\t\t\tGCData data = memGC.data;\r", "+\t\t\t\t\t\tif (data.hNullBitmap != 0) {\r", "+\t\t\t\t\t\t\tOS.SelectObject(memGC.handle, data.hNullBitmap);\r", "+\t\t\t\t\t\t\tdata.hNullBitmap = 0;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\thandle = createDIBFromDDB(hDC, this.handle, width, height);\r", "+\t\t\t\t\tif (mustRestore) {\r", "+\t\t\t\t\t\tint hOldBitmap = OS.SelectObject(memGC.handle, handle);\r", "+\t\t\t\t\t\tmemGC.data.hNullBitmap = hOldBitmap;\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251b608cad661729fe4bbdec7100fde4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "4476d224ad88035ab8f69d073d6c54c9bccf68f1", "commitAfterChange": "1c6a4189f07d97e9405f58322637972f78a68429", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (wHint == SWT.DEFAULT) wHint = 200;", "-\treturn super.computeSize (wHint, hHint, changed);", "+\tPoint size = super.computeSize (wHint, hHint, changed);", "+\tif (wHint != SWT.DEFAULT) {", "+\t\tsize.x = wHint;", "+\t} else {", "+\t\tGtkStyle st = new GtkStyle ();", "+\t\tOS.memmove (st, OS.gtk_widget_get_style (handle));", "+\t\tsize.x = OS.gtk_clist_optimal_column_width (handle, 0) + vScrollBarWidth() + st.xthickness * 2;", "+\t}", "+\treturn size;"]}], "num": 47414}