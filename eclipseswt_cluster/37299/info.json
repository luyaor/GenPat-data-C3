{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ae71254280cba00bae76cc4f2ce0d49", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86ebacdbb06299fb54c684f51fcc5ed5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "be47779c075ddeb725ac1f8135886099b6749779", "commitAfterChange": "22fad4b9a87bb939b1b21ec5ed85ad80da1c9bdd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public String getText (int index)", "signatureAfterChange": " public String getText (int index)", "diff": ["-\tif (row == -1) return null;\r", "+\tif (row == -1) error (SWT.ERROR_CANNOT_GET_TEXT);\r", "-//\tint ptr = 0;\r", "-\tint ptr = OS.g_malloc (256);\r", "-\tint [] address = new int [] {ptr};\r", "-\tOS.gtk_clist_get_pixtext (clist, row, index, address, null, null, null);\r", "+\tint [] address = new int [1];\r", "+\tint [] pixmap = new int [1];\r", "+\tOS.gtk_clist_get_pixtext (clist, row, index, address, null, pixmap, null);\r", "+\tif (pixmap [0] == 0) {\r", "+\t\tOS.gtk_clist_get_text (clist, row, index, address);\r", "+\t}\r", "+\tif (address [0] == 0) return \"\";\r", "-\tOS.g_free (ptr);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af5b4a927c828538717729cfa957a4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "6a0e6d2a186a9e31274ce1b648559ef57d72e2a4", "commitAfterChange": "03aeb08d53d44a0197811ad6f2be3e6fd627ddfe", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["-\t* process the raw key event into unicode.  The fix to call", "-\t* the default handler by sending the event directly to the", "-\t* application event target.", "+\t* process the raw key event into unicode.  The fix to send", "+\t* the key from kEventRawKeyDown instead.", "-\t\treturn OS.SendEventToEventTarget (theEvent, OS.GetApplicationEventTarget ());", "+\t\tint [] theControl = new int[1];", "+\t\tOS.GetKeyboardFocus (OS.GetControlOwner(handle), theControl);", "+\t\tif (theControl[0] != handle) {", "+\t\t\tif (!sendKeyEvent (SWT.KeyDown, theEvent)) return OS.noErr;", "+\t\t}"]}], "num": 37299}