{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ad96fbcb102d7f404c69830b70cdf4d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "504f823833257261ef5cbdee44eaa137", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e14cbb58498cee19f17ae6c93d69bdd0e702a2fd", "commitAfterChange": "a21b70180b6d659096f68c12e40b6360e3518379", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "signatureAfterChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "diff": ["+\t\tNSRange attributeRange = new NSRange();", "+\t\t", "-\t\t\tif (event.start == -1 && event.end == -1) {", "-\t\t\t\treturn stringFragment;", "-\t\t\t} else {", "-\t\t\t\tevent.offset = event.end;", "-\t\t\t}\t\t\t", "-", "-\t\t\tNSRange attributeRange = new NSRange();", "+\t\t\tif (event.start == -1 && event.end == -1) return stringFragment;", "+\t\t\t", "+\t\t\t// The returned attributed string must have zero-based attributes.", "-\t\t\t", "+", "+\t\t\t// attributeRange.location can be negative if the start of the requested range falls in the middle of a style run.", "+\t\t\t// If that happens, clamp to zero and adjust the length by the amount of adjustment.", "+\t\t\tif (attributeRange.location < 0) {", "+\t\t\t\tattributeRange.length -= -attributeRange.location;", "+\t\t\t\tattributeRange.location = 0;", "+\t\t\t}", "+", "+\t\t\t// Likewise, make sure the last attribute set does not run past the end of the requested range. ", "+\t\t\tif (attributeRange.location + attributeRange.length > range.length) {", "+\t\t\t\tattributeRange.length = range.length - attributeRange.location;", "+\t\t\t}", "+", "+\t\t\t// Reset the offset so we pick up the next set of attributes that change.", "+\t\t\tevent.offset = event.end;", "+", "+\t\t\trange.location = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a01252d259c9657b6d48a3fd85c094e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "32c09d8f3234247ca1b573423e5d4d72bbdbf08a", "commitAfterChange": "940e0a0cd5dddd2d3fdf0714f46e96d2b27435e7", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "signatureAfterChange": "  \tid getAttributedStringForRangeParameterizedAttribute(id parameter, int childID)", "diff": ["+\t\tNSRange attributeRange = new NSRange();", "+\t\t", "-\t\t\tif (event.start == -1 && event.end == -1) {", "-\t\t\t\treturn stringFragment;", "-\t\t\t} else {", "-\t\t\t\tevent.offset = event.end;", "-\t\t\t}\t\t\t", "-", "-\t\t\tNSRange attributeRange = new NSRange();", "+\t\t\tif (event.start == -1 && event.end == -1) return stringFragment;", "+\t\t\t", "+", "+\t\t\tif (attributeRange.location < 0) {", "+\t\t\t\tattributeRange.length -= -attributeRange.location;", "+\t\t\t\tattributeRange.location = 0;", "+\t\t\t}", "+", "+\t\t\tif (attributeRange.location + attributeRange.length > range.length) {", "+\t\t\t\tattributeRange.length = range.length - attributeRange.location;", "+\t\t\t}", "+\t\t\t", "+\t\t\tevent.offset = event.end;", "+", "+\t\t\trange.location = 0;"]}], "num": 52837}