{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6605f53987b14a782349fa9cfff5f98", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3039885feec22c783c26425a3b5ee100", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9bae3043b8c03528811ea12dd167ee4b0dbee04f", "commitAfterChange": "d5daa8f36f1cf3782d0b78f004964f7faa681453", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "signatureAfterChange": " \t\t \tprivate int handleMouseEvent(int nextHandler, int eRefHandle, int eventKind, int whichWindow)", "diff": ["+\t\tif (whichWindow == 0 && eventKind == OS.kEventMouseDown) {", "+\t\t\tint[] wHandle= new int[1];", "+\t\t\tint rc= OS.GetEventParameter(eRefHandle, OS.kEventParamWindowRef, OS.typeWindowRef, null, null, wHandle);", "+\t\t\tif (rc == OS.kNoErr)", "+\t\t\t\twhichWindow= wHandle[0];", "+\t\t}", "+\t\t", "+\t\t", "+\t\tcase OS.kEventMouseWheelMoved:", "+\t\t\tOS.QDGlobalToLocalPoint(OS.GetWindowPort(whichWindow), where.getData());\t\t\t", "+\t\t\tint cntrl= MacUtil.findControlUnderMouse(where, whichWindow, null);", "+\t\t\tWidget ww= findWidget(cntrl);", "+\t\t\tif (ww instanceof Composite) {", "+\t\t\t\tComposite s= (Composite) ww;", "+\t\t\t\tScrollBar sb= s.getVerticalBar();", "+\t\t\t\tif (sb != null)", "+\t\t\t\t\treturn sb.processWheel(eRefHandle);", "+\t\t\t}", "+\t\t\tbreak;", "-\t\t\tfTrackedControl= 0;", "-\t\t", "+\t\t\tfTrackedControl= 0;\t\t\t", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae10aefe7ceb01aa1ae137a1a43be428", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c53e2b63fa7a9c733204725abd2e8529aad3827d", "commitAfterChange": "91bf69e39d5953c1dbfa01dee3b55c5c62a41e78", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle, int whichWindow)", "signatureAfterChange": " \t\t \tprivate int handleMouseCallback(int nextHandler, int eRefHandle, int whichWindow)", "diff": ["-\t\t\t\tint ww= OS.GetControlOwner(fTrackedControl);", "-\t\t\t\tint[] w= new int[1];", "-\t\t\t\tint rc= OS.GetEventParameter(eRefHandle, OS.kEventParamWindowRef, OS.typeWindowRef, null, 4, null, w);", "-\t\t\t\tif (rc == OS.noErr)", "-\t\t\t\t\twhichWindow= w[0];", "-\t\t\t\tif (whichWindow != ww)", "-\t\t\t\t\tSystem.out.println(\"Display.handleMouseEvent:  oops\");", "+\t\t\t\twhichWindow= OS.GetControlOwner(fTrackedControl);", "-\t\t\tif (fTrackedControl != 0) {", "+\t\t\tif (fTrackedControl != 0) {\t// continue mouse tracking", "-\t\t\t\tfTrackedControl= 0;", "+\t\t\t\tfTrackedControl= 0;\t\t// continue mouse tracking"]}], "num": 5039}