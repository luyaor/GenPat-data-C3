{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c852246629b1b1bccc5e253e02e51a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a376852afe951bd1721235cb78248e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["-\t//TODO", "+\tif (font != null) {", "+\t\tint family = OS.Typeface_FontFamily (font.handle);", "+\t\tOS.Control_FontFamily (handle, family);", "+\t\tOS.GCHandle_Free (family);", "+\t\tint stretch = OS.Typeface_Stretch (font.handle);", "+\t\tOS.Control_FontStretch (handle, stretch);", "+\t\tOS.GCHandle_Free (stretch);", "+\t\tint style = OS.Typeface_Style (font.handle);", "+\t\tOS.Control_FontStyle (handle, style);", "+\t\tOS.GCHandle_Free (style);", "+\t\tint weight = OS.Typeface_Weight (font.handle);", "+\t\tOS.Control_FontWeight (handle, weight);", "+\t\tOS.GCHandle_Free (weight);", "+\t\tOS.Control_FontSize (handle, font.size);", "+\t} else {", "+\t\tint property = OS.Control_FontFamilyProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tproperty = OS. Control_FontStyleProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tproperty = OS.Control_FontStretchProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tproperty = OS.Control_FontWeightProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tproperty = OS.Control_FontSizeProperty ();", "+\t\tOS.DependencyObject_ClearValue (handle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t}", "+\tthis.font = font;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60bdba95241693e41e4dfcb15906066d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "da73e4e9d77d3d189a51ac8699bc35dc6a7e1a25", "commitAfterChange": "da27f2fb43178376570f08fa3646e1091c342061", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void drawBackground (GC gc, int x, int y, int width, int height)", "signatureAfterChange": " public void drawBackground (GC gc, int x, int y, int width, int height)", "diff": ["-\t//int pixel = background == -1 ? gc.getBackground ().handle : -1;", "-\t//TODO WHAT COLOR TO USE ?", "-\t", "-\tgc.fillRectangle (x, y, width, height);", "-//\tint drawingContext = gc.handle;", "-//\tint color = getBackgroundColor ();", "-//\tint brush = OS.gcnew_SolidColorBrush (color);", "-//\tint rect = OS.gcnew_Rect (x, y, width, height);", "-//\tOS.DrawingContext_DrawRectangle (drawingContext, brush, 0, rect);", "-//\tOS.GCHandle_Free (rect);", "-//\tOS.GCHandle_Free (brush);", "+\tControl control = findBackgroundControl ();", "+\tif (control != null) {", "+\t\tif (width < 0) {", "+\t\t\tx = x + width;", "+\t\t\twidth = -width;", "+\t\t}", "+\t\tif (height < 0) {", "+\t\t\ty = y + height;", "+\t\t\theight = -height;", "+\t\t}", "+\t\tPoint pt = display.map (this, control, 0, 0);", "+\t\tint transform = OS.gcnew_TranslateTransform (-pt.x, -pt.y);", "+\t\tOS.DrawingContext_PushTransform (gc.handle, transform);", "+\t\tx += pt.x;", "+\t\ty += pt.y;", "+\t\tint rect = OS.gcnew_Rect (x, y, width, height);", "+\t\tint backgroundHandle = control.backgroundHandle ();", "+\t\tint property = backgroundProperty ();", "+\t\tint brush = OS.DependencyObject_GetValue (backgroundHandle, property);", "+\t\tOS.GCHandle_Free (property);", "+\t\tOS.DrawingContext_DrawRectangle (gc.handle, brush, 0, rect);", "+\t\tOS.DrawingContext_Pop (gc.handle);", "+\t\tOS.GCHandle_Free (transform);", "+\t\tOS.GCHandle_Free (rect);", "+\t\tOS.GCHandle_Free (brush);", "+\t} else {", "+\t\tgc.fillRectangle (x, y, width, height);", "+\t}", "+"]}], "num": 279}