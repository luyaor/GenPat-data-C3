{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89d20827a1a04eb2caee02c48945483b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe88fdf7248a5c2a4df1e113e3fc6868", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e0bfce063b10ab9009158edcab791bbfb083e7a6", "commitAfterChange": "c362fc0733e4a527675367d730769363f8141641", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public GCData getGCData()", "signatureAfterChange": " public GCData getGCData()", "diff": ["-\tcheckGC(TRANSFORM | CLIPPING);", "+\tNSAutoreleasePool pool = checkGC(TRANSFORM | CLIPPING);", "+\tuncheckGC(pool);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3279a7309c9f1bc4c8e82e4336a117b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void drawFocus(int x, int y, int width, int height)", "signatureAfterChange": " public void drawFocus(int x, int y, int width, int height)", "diff": ["-\tcheckGC(CLIPPING | TRANSFORM);", "-//\tint[] metric = new int[1];", "-//\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "-//\tCGRect rect = new CGRect ();", "-//\trect.x = x + metric[0];", "-//\trect.y = y + metric[0];", "-//\trect.width = width - metric[0] * 2;", "-//\trect.height = height - metric[0] * 2;", "-//\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "-\tuncheckGC();", "+\tNSAutoreleasePool pool = checkGC(CLIPPING | TRANSFORM);", "+\ttry {", "+\t\t//\tint[] metric = new int[1];", "+\t\t//\tOS.GetThemeMetric(OS.kThemeMetricFocusRectOutset, metric);", "+\t\t//\tCGRect rect = new CGRect ();", "+\t\t//\trect.x = x + metric[0];", "+\t\t//\trect.y = y + metric[0];", "+\t\t//\trect.width = width - metric[0] * 2;", "+\t\t//\trect.height = height - metric[0] * 2;", "+\t\t//\tOS.HIThemeDrawFocusRect(rect, true, handle, OS.kHIThemeOrientationNormal);", "+\t} finally {", "+\t\tuncheckGC(pool);", "+\t}"]}], "num": 2608}