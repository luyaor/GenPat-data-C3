{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77417cda6dc81c13d5d6e08c0636d583", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442c6113fc1eb05d7003b30cffd1f961", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "-\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\tsrcRect.width = width;", "-\t\t\t\tsrcRect.height = height;", "-\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "-\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "-\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\t\t\tOS.gdk_region_destroy (copyRegion);", "-\t\t\t\tOS.gdk_region_destroy (invalidateRegion);", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\t\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t ();", "+\t\t\t\t\tsrcRect.x = srcX;", "+\t\t\t\t\tsrcRect.y = srcY;", "+\t\t\t\t\tsrcRect.width = width;", "+\t\t\t\t\tsrcRect.height = height;", "+\t\t\t\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "+\t\t\t\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "+\t\t\t\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);", "+\t\t\t\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\t\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "+\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "+\t\t\t\t\tCairo.cairo_region_destroy (visibleRegion);", "+\t\t\t\t\tCairo.cairo_region_destroy (copyRegion);", "+\t\t\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "+\t\t\t\t} else {", "+\t\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "+\t\t\t\t\tsrcRect.x = srcX;", "+\t\t\t\t\tsrcRect.y = srcY;", "+\t\t\t\t\tsrcRect.width = width;", "+\t\t\t\t\tsrcRect.height = height;", "+\t\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\t\t\tOS.gdk_region_intersect (copyRegion, visibleRegion);", "+\t\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "+\t\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\t\t\t\tOS.gdk_region_destroy (copyRegion);", "+\t\t\t\t\tOS.gdk_region_destroy (invalidateRegion);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5848ac9850686537d4efc1309d2809a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\t\t\tlong /*int*/ visibleRegion = 0;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\t\t\tvisibleRegion = OS.gdk_window_get_visible_region (drawable);", "-\t\t\t\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tCairo.cairo_region_destroy (visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (copyRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "-\t\t\t\t} else {", "-\t\t\t\t\tvisibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "-\t\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (copyRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (invalidateRegion);", "-\t\t\t\t}", "+\t\t\t\tlong /*int*/ visibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "+\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "+\t\t\t\tsrcRect.x = srcX;", "+\t\t\t\tsrcRect.y = srcY;", "+\t\t\t\tsrcRect.width = width;", "+\t\t\t\tsrcRect.height = height;", "+\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "+\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "+\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\t\t\tOS.gdk_region_destroy (copyRegion);", "+\t\t\t\tOS.gdk_region_destroy (invalidateRegion);"]}], "num": 30063}