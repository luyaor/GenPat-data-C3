{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1d710e4640eeea49550d65bb9f4bbb0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e228ff82831acccb69718065871b229c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "012bcd5ad33eb8f874b0e882b660168d07a6e07b", "commitAfterChange": "85f8f40ad2f5a5828657483f09a47fe1554ac511", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 99, "signatureBeforeChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "signatureAfterChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "diff": ["-\t", "+\t/*", "+\t* Bug in Mozilla.  The argument aRequest is always null.  The fix is", "+\t* to compare the URI aLocation with the current URI.", "+\t*/", "-\tbyte[] dest = new byte[length];", "+\tbyte[] dest = new byte[length + 1];", "+", "+\tint[] aContentDOMWindow = new int[1];", "+\tint rc = webBrowser.GetContentDOMWindow(aContentDOMWindow);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aContentDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+", "+\tnsIDOMWindow domWindow = new nsIDOMWindow(aContentDOMWindow[0]);", "+\tint[] result = new int[1];", "+\trc = domWindow.QueryInterface(nsIDOMWindowInternal.NS_IDOMWINDOWINTERNAL_IID, result);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindow.Release();", "+         ", "+\tnsIDOMWindowInternal domWindowInternal = new nsIDOMWindowInternal(result[0]);", "+\tint[] aCurrentLocation = new int[1];  ", "+\trc = domWindowInternal.GetLocation(aCurrentLocation);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aCurrentLocation[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindowInternal.Release();", "+", "+\tnsIDOMLocation domLocation = new nsIDOMLocation(aCurrentLocation[0]); ", "+\tnsString _retval = new nsString();", "+\trc = domLocation.ToString(_retval.getAddress());", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tdomLocation.Release();  ", "-\tLocationEvent event = new LocationEvent(this);", "-\tevent.location = new String(dest);", "-\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\tlocationListeners[i].changed(event);", "+\tint nsString = XPCOM.nsString_new();", "+\tXPCOM.nsString_AssignWithConversion(nsString, dest);", "+\tboolean send = XPCOM.nsString_Equals(_retval.getAddress(), nsString);", "+\tXPCOM.nsString_delete(nsString);", "+\t_retval.dispose();", "+\t\t", "+\tif (send) {", "+\t\tLocationEvent event = new LocationEvent(this);", "+\t\tevent.location = new String(dest);", "+\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\tlocationListeners[i].changed(event);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395f7543a1eb9593119ddadd443585c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "f63d2d89eea406485e981f9daea08c5a772ca9aa", "commitAfterChange": "37a89c226e0afdd207de782e49ef0b2912a4c1ef", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 98, "signatureBeforeChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "signatureAfterChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "diff": ["-\t", "+\t/*", "+\t* Bug in Mozilla.  The argument aRequest is always null.  The fix is", "+\t* to compare the URI aLocation with the current URI.", "+\t*/", "-\tbyte[] dest = new byte[length];", "+\tbyte[] dest = new byte[length + 1];", "+", "+\tint[] aContentDOMWindow = new int[1];", "+\tint rc = webBrowser.GetContentDOMWindow(aContentDOMWindow);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aContentDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+", "+\tnsIDOMWindow domWindow = new nsIDOMWindow(aContentDOMWindow[0]);", "+\tint[] result = new int[1];", "+\trc = domWindow.QueryInterface(nsIDOMWindowInternal.NS_IDOMWINDOWINTERNAL_IID, result);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindow.Release();", "+         ", "+\tnsIDOMWindowInternal domWindowInternal = new nsIDOMWindowInternal(result[0]);", "+\tint[] aCurrentLocation = new int[1];  ", "+\trc = domWindowInternal.GetLocation(aCurrentLocation);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aCurrentLocation[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindowInternal.Release();", "+", "+\tnsIDOMLocation domLocation = new nsIDOMLocation(aCurrentLocation[0]); ", "+\tnsString _retval = new nsString();", "+\trc = domLocation.ToString(_retval.getAddress());", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tdomLocation.Release();  ", "-\tLocationEvent event = new LocationEvent(this);", "-\tevent.location = new String(dest);", "-\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\tlocationListeners[i].changed(event);", "+\tint nsString = XPCOM.nsString_new();", "+\tXPCOM.nsString_AssignWithConversion(nsString, dest);", "+\tboolean send = XPCOM.nsString_Equals(_retval.getAddress(), nsString);", "+\tXPCOM.nsString_delete(nsString);", "+\t_retval.dispose();", "+\t\t", "+\tif (send) {", "+\t\tLocationEvent event = new LocationEvent(this);", "+\t\tevent.location = new String(dest);", "+\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\tlocationListeners[i].changed(event);", "+\t}"]}], "num": 11694}