{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a9a03e66fdf9264b1ac25bb57e636ba", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e03dcc26e75fbcc1e22fc2608cec64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void setMainClassName(String str)", "signatureAfterChange": "  public void setMainClassName(String str)", "diff": ["-\t\tString[] list = ItemData.split(mainClasses, \",\");", "+\t\tString[] list = JNIGenerator.split(mainClasses, \",\");", "-\t\t\tmainClass = Class.forName(mainClassName, false, getClass().getClassLoader());", "+\t\t\tString sourcePath = new File(outputDir).getParent() + \"/\" + mainClassName.replace('.', '/') + \".java\";", "+\t\t\tif (USE_AST) {", "+\t\t\t\tmainClass = new ASTClass(sourcePath, metaData);", "+\t\t\t} else {", "+\t\t\t\tmainClass = new ReflectClass(Class.forName(mainClassName, false, getClass().getClassLoader()), metaData, sourcePath);", "+\t\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda5c4529bc4810c7b32566368f7dffd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorApp.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void generateAll()", "signatureAfterChange": "  public void generateAll()", "diff": ["-\t\tString[] list = ItemData.split(mainClasses, \",\");", "+\t\tString[] list = JNIGenerator.split(mainClasses, \",\");", "-\t\t\ttry {", "-\t\t\t\tClass.forName(className, false, getClass().getClassLoader());", "-\t\t\t} catch (Throwable e) {", "-\t\t\t\tcontinue;", "+\t\t\tif (!USE_AST) {", "+\t\t\t\ttry {", "+\t\t\t\t\tClass.forName(className, false, getClass().getClassLoader());", "+\t\t\t\t} catch (Throwable e) {", "+\t\t\t\t\tcontinue;", "+\t\t\t\t}"]}], "num": 23366}