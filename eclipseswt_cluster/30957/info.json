{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5bcb2d8b00691bb169dc6b04827432d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29879df229d67dda4d633f144cae0d1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "e3b3895ab4dae7d82ff4ee1965153f9ffdacb4b6", "commitAfterChange": "01f2a277618f1956f9a104e730dbfc9ec2828935", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void getImageData1()", "signatureAfterChange": "  void getImageData1()", "diff": ["-\tImageLoader loader = new ImageLoader();", "-\tImageData data1 = loader.load(SwtTestCase.class.getResourceAsStream(\"dot.gif\"))[0];", "-", "-\tImage image = new Image(display, data1);", "-\tImageData data2 = image.getImageData();", "-\t", "-\tassertEquals(\"Image width should be the same\", data1.width, data2.width);", "-\tassertEquals(\"Image height should be the same\", data1.height, data2.height);", "+\tint numFormats = SwtTestCase.imageFormats.length;", "+\tString fileName = SwtTestCase.imageFilenames[0];", "+\tfor (int i=0; i<numFormats; i++) {", "+\t\tString format = SwtTestCase.imageFormats[i];", "+\t\tImageLoader loader = new ImageLoader();", "+\t\tInputStream stream = SwtTestCase.class.getResourceAsStream(fileName + \".\" + format);", "+\t\tImageData data1 = loader.load(stream)[0];", "+\t\tImage image = new Image(display, data1);", "+\t\tImageData data2 = image.getImageData();", "+\t\tassertEquals(\"Image width should be the same\", data1.width, data2.width);", "+\t\tassertEquals(\"Image height should be the same\", data1.height, data2.height);", "+\t\ttry {", "+\t\t\tstream.close();", "+\t\t} catch (IOException e) {", "+\t\t\t// continue;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be3bcec4d3452837f956c1d4671706b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Cursor.java", "commitBeforeChange": "e3b3895ab4dae7d82ff4ee1965153f9ffdacb4b6", "commitAfterChange": "01f2a277618f1956f9a104e730dbfc9ec2828935", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageDataII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageDataII()", "diff": ["-\tImageLoader loader = new ImageLoader();", "-\tImageData source = loader.load(SwtTestCase.class.getResourceAsStream(\"dot.gif\"))[0];", "-\tImageData mask = source.getTransparencyMask();", "-\tCursor cursor = new Cursor(display, source, mask, 0, 0);", "-\tcursor.dispose();", "+\tint numFormats = SwtTestCase.imageFormats.length;", "+\tString fileName = SwtTestCase.imageFilenames[0];", "+\tfor (int i=0; i<numFormats; i++) {", "+\t\tString format = SwtTestCase.imageFormats[i];", "+\t\tImageLoader loader = new ImageLoader();", "+\t\tInputStream stream = SwtTestCase.class.getResourceAsStream(fileName + \".\" + format);", "+\t\tImageData source = loader.load(stream)[0];", "+\t\tImageData mask = source.getTransparencyMask();", "+\t\tif (mask != null && (source.depth == 1)) {", "+\t\t\tCursor cursor = new Cursor(display, source, mask, 0, 0);", "+\t\t\tcursor.dispose();", "+\t\t}", "+\t\ttry {", "+\t\t\tstream.close();", "+\t\t} catch (IOException e) {", "+\t\t\t// continue;", "+\t\t}", "+\t}"]}], "num": 30957}