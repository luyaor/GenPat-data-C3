{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4fb711d185c7408f0bee82a0e8fe06f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd500661fe74fc85ffd81a03105338d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "44be5983a5fff33f337bb260817cc50987bb398a", "commitAfterChange": "47bdf987fcc6a0c67f43a42299353f6d35603f81", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 25, "signatureBeforeChange": " private int styledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData)", "signatureAfterChange": " private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData)", "diff": ["+ */", "+private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData) {", "+\tString textSegment;", "+\tint textLength = text.length();", "+\tint textIndex = 0;", "+", "+\tfor (int styleIndex = 0; styleIndex < lineStyles.length; styleIndex++) {", "+\t\tStyleRange style = lineStyles[styleIndex];", "+\t\tint textEnd;", "+\t\tint styleSegmentStart = style.start - textStartOffset;", "+\t\tif (styleSegmentStart + style.length < 0) {", "+\t\t\tcontinue;", "+\t\t}", "+\t\tif (styleSegmentStart >= textLength) {", "+\t\t\tbreak;", "+\t\t}", "+\t\t// is there a style for the current string position?", "+\t\tif (textIndex < styleSegmentStart) {", "+\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "+\t\t\ttextSegment = text.substring(textIndex, styleSegmentStart);", "+\t\t\tpaintX += gc.stringExtent(textSegment).x;", "+\t\t\ttextIndex = styleSegmentStart;", "+\t\t}", "+\t\ttextEnd = Math.min(textLength, styleSegmentStart + style.length);", "+\t\tsetLineFont(gc, fontData, style.fontStyle);", "+\t\ttextSegment = text.substring(textIndex, textEnd);", "+\t\tpaintX += gc.stringExtent(textSegment).x;", "+\t\ttextIndex = textEnd;", "+\t}", "+\t// is there unmeasured and unstyled text?", "+\tif (textIndex < textLength) {", "+\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "+\t\ttextSegment = text.substring(textIndex, textLength);", "+\t\tpaintX += gc.stringExtent(textSegment).x;", "+\t}", "+\treturn paintX;", "+}", "- */", "-private int styledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData) {", "-\tString textSegment;", "-\tint textLength = text.length();", "-\tint textIndex = 0;", "-", "-\tfor (int styleIndex = 0; styleIndex < lineStyles.length; styleIndex++) {", "-\t\tStyleRange style = lineStyles[styleIndex];", "-\t\tint textEnd;", "-\t\tint styleSegmentStart = style.start - textStartOffset;", "-\t\tif (styleSegmentStart + style.length < 0) {", "-\t\t\tcontinue;", "-\t\t}", "-\t\tif (styleSegmentStart >= textLength) {", "-\t\t\tbreak;", "-\t\t}", "-\t\t// is there a style for the current string position?", "-\t\tif (textIndex < styleSegmentStart) {", "-\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\t\ttextSegment = text.substring(textIndex, styleSegmentStart);", "-\t\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\t\ttextIndex = styleSegmentStart;", "-\t\t}", "-\t\ttextEnd = Math.min(textLength, styleSegmentStart + style.length);", "-\t\tsetLineFont(gc, fontData, style.fontStyle);", "-\t\ttextSegment = text.substring(textIndex, textEnd);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\ttextIndex = textEnd;", "-\t}", "-\t// is there unmeasured and unstyled text?", "-\tif (textIndex < textLength) {", "-\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\ttextSegment = text.substring(textIndex, textLength);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t}", "-\treturn paintX;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "534e96649709b3c94ae2f309c330fc23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f9c3b5973aa314c2c0842a04a410e5cc909a74fe", "commitAfterChange": "4e22aa7cc6f558a2b3130ccb8327c63b7cc18d3f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData)", "signatureAfterChange": " protected abstract int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc);", "diff": ["-private int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc, FontData fontData) {", "-\tString textSegment;", "-\tint textLength = text.length();", "-\tint textIndex = 0;", "-", "-\tfor (int styleIndex = 0; styleIndex < lineStyles.length; styleIndex++) {", "-\t\tStyleRange style = lineStyles[styleIndex];", "-\t\tint textEnd;", "-\t\tint styleSegmentStart = style.start - textStartOffset;", "-\t\tif (styleSegmentStart + style.length < 0) {", "-\t\t\tcontinue;", "-\t\t}", "-\t\tif (styleSegmentStart >= textLength) {", "-\t\t\tbreak;", "-\t\t}", "-\t\t// is there a style for the current string position?", "-\t\tif (textIndex < styleSegmentStart) {", "-\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\t\ttextSegment = text.substring(textIndex, styleSegmentStart);", "-\t\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\t\ttextIndex = styleSegmentStart;", "-\t\t}", "-\t\ttextEnd = Math.min(textLength, styleSegmentStart + style.length);", "-\t\tsetLineFont(gc, fontData, style.fontStyle);", "-\t\ttextSegment = text.substring(textIndex, textEnd);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t\ttextIndex = textEnd;", "-\t}", "-\t// is there unmeasured and unstyled text?", "-\tif (textIndex < textLength) {", "-\t\tsetLineFont(gc, fontData, SWT.NORMAL);", "-\t\ttextSegment = text.substring(textIndex, textLength);", "-\t\tpaintX += gc.stringExtent(textSegment).x;", "-\t}", "-\treturn paintX;", "-}", "+protected abstract int getStyledTextWidth(String text, int textStartOffset, StyleRange[] lineStyles, int paintX, GC gc);"]}], "num": 29301}