{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3473d8f98f886f0017d66b5e986469db", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e70b7f00830a0b79d731caeca6324e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "a6d0bd56d1047cb2c0d9cb4a431b8966deb39d3d", "commitAfterChange": "f7326a95e5402b3eded8a53925330b507f452482", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["+\tboolean sheet = window.isSheet();", "+\tif (sheet && move && !resize) return;", "-\tframe.x = x;", "-\tframe.y = screenHeight - (int)(y + height);", "-\tframe.width = width;", "-\tframe.height = height;", "-\twindow.setFrame(frame, isVisible());", "+\tif (sheet) {", "+\t\ty = screenHeight - (int)(frame.y + frame.height);", "+\t\tNSRect parentRect = parent.getShell().window.frame();", "+\t\tframe.width = width;", "+\t\tframe.height = height;", "+\t\tframe.x = parentRect.x + (parentRect.width - frame.width) / 2;", "+\t\tframe.y = screenHeight - (int)(y + frame.height);", "+\t\twindow.setFrame(frame, isVisible(), true);", "+\t} else {", "+\t\tframe.x = x;", "+\t\tframe.y = screenHeight - (int)(y + height);", "+\t\tframe.width = width;", "+\t\tframe.height = height;", "+\t\twindow.setFrame(frame, isVisible());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5138599e1585b73571168e954b5d7d6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "50f1929fc834bc388c35fa06bf51ab17286d80fc", "commitAfterChange": "f75fdeadffc43f5b76cf05ecbed2c970119ae37c", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void setMinimumSize (int width, int height)", "signatureAfterChange": " public void setMinimumSize (int width, int height)", "diff": ["-//\tint clientWidth = 0, clientHeight = 0;", "-//\tint trim = SWT.TITLE | SWT.CLOSE | SWT.MIN | SWT.MAX;", "-//\tif ((style & SWT.NO_TRIM) == 0 && (style & trim) != 0) {", "-//\t\tclientWidth = DEFAULT_CLIENT_WIDTH;", "-//\t\tclientHeight = DEFAULT_CLIENT_HEIGHT;", "-//\t}", "-//\tRect rect = new Rect ();", "-//\tOS.GetWindowStructureWidths (shellHandle, rect);", "-//\tCGPoint inMinLimits = new CGPoint (), inMaxLimits = new CGPoint ();", "-//\tOS.GetWindowResizeLimits (shellHandle, inMinLimits, inMaxLimits);", "-//\twidth = Math.max (width, clientWidth + rect.left + rect.right);", "-//\theight = Math.max (height, clientHeight + rect.top + rect.bottom);", "-//\tinMinLimits.x = width - (rect.left + rect.right);", "-//\tinMinLimits.y = height - (rect.top + rect.bottom);", "-//\tOS.SetWindowResizeLimits (shellHandle, inMinLimits, inMaxLimits);", "-//\tPoint size = getSize ();", "-//\tint newWidth = Math.max (size.x, width), newHeight = Math.max (size.y, height);", "-//\tif (newWidth != size.x || newHeight != size.y) setSize (newWidth, newHeight);", "+\tif (window == null) return;", "+\tNSSize size = new NSSize();", "+\tsize.width = width;", "+\tsize.height = height;", "+\twindow.setMinSize(size);", "+\tNSRect frame = window.frame();", "+\tif (width > frame.width || height > frame.height) {", "+\t\twidth = (int)(width > frame.width ? width : frame.width);", "+\t\theight = (int)(height > frame.height ? height : frame.height);", "+\t\tsetBounds(0, 0, width, height, false, true);", "+\t}"]}], "num": 109}