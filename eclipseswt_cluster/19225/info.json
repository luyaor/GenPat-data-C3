{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b48da1f7b9d0f7faa9b92117c4524d7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b581e74898cb751581be5ca422c957d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 53, "signatureBeforeChange": " public Color getSystemColor (int id)", "signatureAfterChange": "  public Color getSystemColor (int id)", "diff": ["- */", "+", "-\tColor xColor = null;", "+\t//NOT DONE", "+\t", "+\tRGBColor rgb = new RGBColor ();", "-\t\tcase SWT.COLOR_INFO_FOREGROUND: \t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "-\t\tcase SWT.COLOR_INFO_BACKGROUND: \t\treturn COLOR_INFO_BACKGROUND;", "-\t\tcase SWT.COLOR_TITLE_FOREGROUND:\t\treturn super.getSystemColor (SWT.COLOR_WHITE);", "-\t\tcase SWT.COLOR_TITLE_BACKGROUND:\t\treturn super.getSystemColor (SWT.COLOR_DARK_BLUE);", "-\t\tcase SWT.COLOR_TITLE_BACKGROUND_GRADIENT:\treturn super.getSystemColor (SWT.COLOR_BLUE);", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_FOREGROUND:\treturn super.getSystemColor (SWT.COLOR_BLACK);", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND:\treturn super.getSystemColor (SWT.COLOR_DARK_GRAY);", "-\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND_GRADIENT:\treturn super.getSystemColor (SWT.COLOR_GRAY);", "-\t\tcase SWT.COLOR_WIDGET_DARK_SHADOW:\txColor = COLOR_WIDGET_DARK_SHADOW; break;", "-\t\tcase SWT.COLOR_WIDGET_NORMAL_SHADOW:\txColor = COLOR_WIDGET_NORMAL_SHADOW; break;", "-\t\tcase SWT.COLOR_WIDGET_LIGHT_SHADOW: \txColor = COLOR_WIDGET_LIGHT_SHADOW; break;", "-\t\tcase SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW:\txColor = COLOR_WIDGET_HIGHLIGHT_SHADOW; break;", "-\t\tcase SWT.COLOR_WIDGET_BACKGROUND: \txColor = COLOR_WIDGET_BACKGROUND; break;", "-\t\tcase SWT.COLOR_WIDGET_FOREGROUND:", "-\t\tcase SWT.COLOR_WIDGET_BORDER: \t\txColor = COLOR_WIDGET_BORDER; break;", "-\t\tcase SWT.COLOR_LIST_FOREGROUND: \txColor = COLOR_LIST_FOREGROUND; break;", "-\t\tcase SWT.COLOR_LIST_BACKGROUND: \txColor = COLOR_LIST_BACKGROUND; break;", "-\t\tcase SWT.COLOR_LIST_SELECTION: \t\txColor = COLOR_LIST_SELECTION; break;", "-\t\tcase SWT.COLOR_LIST_SELECTION_TEXT: \txColor = COLOR_LIST_SELECTION_TEXT; break;", "+\t\tcase SWT.COLOR_INFO_FOREGROUND: \t\t\t\t\t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "+\t\tcase SWT.COLOR_INFO_BACKGROUND: \t\t\t\t\t\treturn Color.carbon_new (this, new float [] {0xFF / 255f, 0xFF / 255f, 0xE1 / 255f, 1});", "+\t\tcase SWT.COLOR_TITLE_FOREGROUND:\t\t\t\t\t\tOS.GetThemeTextColor((short)OS.kThemeTextColorDocumentWindowTitleActive, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_TITLE_BACKGROUND:\t\t\t\t\t\tOS.GetThemeBrushAsColor((short)-5/*undocumented darker highlight color*/, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_TITLE_BACKGROUND_GRADIENT: \tOS.GetThemeBrushAsColor((short)OS.kThemeBrushPrimaryHighlightColor, (short)getDepth(), true, rgb) ; break;", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_FOREGROUND:\tOS.GetThemeTextColor((short)OS.kThemeTextColorDocumentWindowTitleInactive, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND: \tOS.GetThemeBrushAsColor((short)OS.kThemeBrushSecondaryHighlightColor, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_TITLE_INACTIVE_BACKGROUND_GRADIENT: OS.GetThemeBrushAsColor((short)OS.kThemeBrushSecondaryHighlightColor, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_WIDGET_DARK_SHADOW:\t\t\t\treturn Color.carbon_new (this, new float [] {0x33 / 255f, 0x33 / 255f, 0x33 / 255f, 1});", "+\t\tcase SWT.COLOR_WIDGET_NORMAL_SHADOW:\t\t\treturn Color.carbon_new (this, new float [] {0x66 / 255f, 0x66 / 255f, 0x66 / 255f, 1});", "+\t\tcase SWT.COLOR_WIDGET_LIGHT_SHADOW: \t\t\t\treturn Color.carbon_new (this, new float [] {0x99 / 255f, 0x99 / 255f, 0x99 / 255f, 1});", "+\t\tcase SWT.COLOR_WIDGET_HIGHLIGHT_SHADOW:\t\treturn Color.carbon_new (this, new float [] {0xCC / 255f, 0xCC / 255f, 0xCC / 255f, 1});", "+\t\tcase SWT.COLOR_WIDGET_BACKGROUND: \t\t\t\t\tOS.GetThemeBrushAsColor((short)OS.kThemeBrushButtonFaceActive, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_WIDGET_FOREGROUND:\t\t\t\t\tOS.GetThemeTextColor((short)OS.kThemeTextColorPushButtonActive, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_WIDGET_BORDER: \t\t\t\t\t\t\treturn super.getSystemColor (SWT.COLOR_BLACK);", "+\t\tcase SWT.COLOR_LIST_FOREGROUND: \t\t\t\t\t\tOS.GetThemeTextColor((short)OS.kThemeTextColorListView, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_LIST_BACKGROUND: \t\t\t\t\t\tOS.GetThemeBrushAsColor((short)OS.kThemeBrushListViewBackground, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_LIST_SELECTION_TEXT: \t\t\t\t\tOS.GetThemeTextColor((short)OS.kThemeTextColorListView, (short)getDepth(), true, rgb); break;", "+\t\tcase SWT.COLOR_LIST_SELECTION:\t\t\t\t\t\t\t\tOS.GetThemeBrushAsColor((short)OS.kThemeBrushPrimaryHighlightColor, (short)getDepth(), true, rgb); break;", "-\tif (xColor == null)", "-\t\tSystem.out.println(\"Display.getSystemColor: color null \" + id);", "-\tif (xColor == null) return super.getSystemColor (SWT.COLOR_BLACK);", "-\t//return Color.carbon_new (this, xColor);", "-\treturn xColor;", "-\t// return getSystemColor(this, id);", "+\tfloat red = ((rgb.red >> 8) & 0xFF) / 255f;", "+\tfloat green = ((rgb.green >> 8) & 0xFF) / 255f;", "+\tfloat blue = ((rgb.blue >> 8) & 0xFF) / 255f;", "+\treturn Color.carbon_new (this, new float[]{red, green, blue, 1});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2773a45d25ea70641c82cbc709971964", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 5, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " \t public FontData open ()", "diff": ["- */", "-\tshell = new Shell (getParent (), getStyle () | SWT.TITLE | SWT.BORDER | SWT.APPLICATION_MODAL);", "-\tcreateChildren ();", "-\tinstallListeners ();\t", "-\t", "-\tinitializeWidgets ();", "-\tsetFontData (null);", "-\topenDialog ();", "-\tDisplay display = shell.getDisplay ();", "-\twhile (!shell.isDisposed ()) {", "+\tFontSelectionQDStyle qdStyle = new FontSelectionQDStyle();", "+\tqdStyle.version = OS.kFontSelectionQDStyleVersionZero;", "+\t// NEEDS WORK - color not supported in native dialog for Carbon", "+\tif (rgb != null) {", "+\t\tqdStyle.hasColor = true;", "+\t\tqdStyle.color_red = (short)(rgb.red * 257);", "+\t\tqdStyle.color_green = (short)(rgb.green * 257);", "+\t\tqdStyle.color_blue = (short)(rgb.blue * 257);", "+\t}", "+\tif (fontData != null) {", "+\t\tString familyName = fontData.name;", "+\t\tbyte [] buffer = new byte [256];", "+\t\tint length = familyName.length();", "+\t\tif (length > 255) length = 255;", "+\t\tbuffer [0] = (byte)length;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tbuffer [i+1] = (byte) familyName.charAt(i);", "+\t\t}", "+\t\tint id = OS.FMGetFontFamilyFromName (buffer);", "+\t\tif (id == OS.kInvalidFontFamily) id = OS.GetAppFont();", "+\t\tqdStyle.instance_fontFamily = (short)id;", "+\t\tint style = fontData.style;", "+\t\tint fontStyle = OS.normal;", "+\t\tif ((style & SWT.BOLD) != 0) fontStyle |= OS.bold;", "+\t\tif ((style & SWT.ITALIC) != 0) fontStyle |= OS.italic;", "+\t\tqdStyle.instance_fontStyle = (short)fontStyle;", "+\t\tqdStyle.size = (short)fontData.height;", "+\t}", "+\tint ptr = OS.NewPtr(FontSelectionQDStyle.sizeof);", "+\tOS.memcpy (ptr, qdStyle, FontSelectionQDStyle.sizeof);", "+\tOS.SetFontInfoForSelection(OS.kFontSelectionQDType, 1, ptr, 0);", "+\tOS.DisposePtr (ptr);", "+\tint[] mask = new int[] {", "+\t\tOS.kEventClassFont, OS.kEventFontSelection,", "+\t\tOS.kEventClassFont, OS.kEventFontPanelClosed,", "+\t};", "+\tCallback fontPanelCallback = new Callback (this, \"fontProc\", 3);", "+\tint appTarget = OS.GetApplicationEventTarget ();", "+\tint [] outRef = new int [1];", "+\tOS.InstallEventHandler (appTarget, fontPanelCallback.getAddress(), mask.length / 2, mask, 0, outRef);", "+\tfontData = null;", "+\trgb = null;", "+\topen = true;", "+\tOS.FPShowHideFontPanel ();\t", "+\tDisplay display = parent.getDisplay ();", "+\twhile (!parent.isDisposed() && open) {", "-\t}", "-\t", "-\tFontData result = null;", "-\tif (okSelected) result = getFontData ();", "-\tif (sampleFont != null) sampleFont.dispose ();", "-\treturn result;", "+\t};", "+\tOS.RemoveEventHandler (outRef [0]);", "+\tfontPanelCallback.dispose ();", "+\treturn fontData;"]}], "num": 19225}