{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a15a07c3fa900dd2be2e0801434adbe5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0e08a054edb41d71ef46068c016a3e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b302d875486b75e533e3d2399973295d9226483f", "commitAfterChange": "7c792fbfb245e095de7492a841c53ba97a7be55a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tvoid writeStyledLine(String line, int lineOffset, StyleRange[] styles, Color lineBackground)", "signatureAfterChange": "\r \tvoid writeStyledLine(String line, int lineOffset, StyleRange[] styles, Color lineBackground)", "diff": ["+\t\tint lineEndOffset = Math.min(lineLength, endOffset - lineOffset);\r", "-\t\t\t// break on partial last line\r", "-\t\t\tif (style.start > endOffset) {\r", "+\t\t\t// style starts beyond line end or RTF write end\r", "+\t\t\tif (start >= lineEndOffset) {\r", "-\t\t\t\t// copy to start of style or end of write range (specified \r", "-\t\t\t\t// during object creation) or end of line\r", "-\t\t\t\tcopyEnd = Math.min(start, endOffset - lineOffset);\r", "-\t\t\t\tcopyEnd = Math.min(copyEnd, lineLength);\r", "-\t\t\t\twrite(line, lineIndex, copyEnd);\r", "-\t\t\t\tlineIndex = copyEnd;\r", "-\t\t\t\tif (copyEnd != start) {\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\t}\r", "+\t\t\t\t// copy to start of style\r", "+\t\t\t\t// style starting betond end of write range or end of line \r", "+\t\t\t\t// is guarded against above.\r", "+\t\t\t\twrite(line, lineIndex, start);\r", "+\t\t\t\tlineIndex = start;\r", "-\t\t\t// copy to end of style or end of write range (specified \r", "-\t\t\t// during object creation) or end of line\r", "-\t\t\tcopyEnd = Math.min(end, endOffset - lineOffset);\r", "-\t\t\tcopyEnd = Math.min(copyEnd, lineLength);\r", "+\t\t\t// copy to end of style or end of write range or end of line\r", "+\t\t\tcopyEnd = Math.min(end, lineEndOffset);\r", "+\t\t\t// guard against invalid styles and let style processing continue\r", "+\t\t\tcopyEnd = Math.max(copyEnd, lineIndex);\r", "-\t\t\tif (copyEnd != end) {\r", "-\t\t\t\tbreak;\r", "-\t\t\t}\r", "-\t\tcopyEnd = Math.min(lineLength, endOffset - lineOffset);\r", "-\t\tif (lineIndex < copyEnd) {\r", "-\t\t\twrite(line, lineIndex, copyEnd);\r", "+\t\t// write unstyled text at the end of the line\r", "+\t\tif (lineIndex < lineEndOffset) {\r", "+\t\t\twrite(line, lineIndex, lineEndOffset);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49f42cf01255068fd8fa5e936bb58e4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void setTopItem(TreeItem2 item)", "signatureAfterChange": " public void setTopItem(TreeItem2 item)", "diff": ["+ */", "-\tif (item.getParent() != this) return;", "-", "-\tif (!item.isAvailable()) item.expandAncestors();", "-\t", "-\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\tint index = Math.min (item.availableIndex, availableItems.length - visibleItemCount);", "-\tif (topIndex == index) return;", "-\ttopIndex = index;", "-\tgetVerticalBar().setSelection(topIndex);", "-\tredraw();", "+\tif (item.isVisible() == false) {", "+\t\titem.makeVisible();", "+\t}", "+\tscrollExpandedItemsIntoView(item);"]}], "num": 23422}