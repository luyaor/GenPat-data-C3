{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d3dd2fd3cbd80aaa9b5e824918fd084", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d042fb02f6e22e648679124afc643f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "8136796db3d8484cb392a96b5dd6ff6574cfebd8", "commitAfterChange": "5774f905fede0ff1c282c0eb1d6ab008948e6804", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void onPaint(GC gc, boolean isSelected)", "signatureAfterChange": "\r void onPaint(GC gc, boolean isSelected)", "diff": ["-\t\t\r", "-\t\tif (parent.isFocusControl()) {\r", "-\t\t\t// draw a focus rectangle\r", "-\t\t\tgc.drawFocus(x + 2, y + 1, width - 3, height - 1);\r", "-\t\t}\r", "-\t\tfinal Rectangle bounds;\r", "-\t\tif (index == parent.topTabIndex) {\r", "-\t\t\tbounds = new Rectangle(x + 1, y, width - 2, height);\r", "+\r", "+\t\tRectangle bounds = null;\r", "+\t\tif (!parent.onBottom) {\r", "+\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\tbounds = new Rectangle(x + 1, y + 1, width - 2, height - 1);\r", "+\t\t\t} else {\r", "+\t\t\t\tbounds = new Rectangle(x + 2, y + 1, width - 3, height - 1);\r", "+\t\t\t}\r", "-\t\t\tbounds = new Rectangle(x + 2, y, width - 3, height);\r", "+\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\tbounds = new Rectangle(x + 1, y + 1, width - 2, height - 2);\r", "+\t\t\t} else {\r", "+\t\t\t\tbounds = new Rectangle(x + 2, y + 1, width - 3, height - 2);\r", "+\t\t\t}\r", "-\t\t\tfinal Color oldBackground = gc.getBackground();\r", "+\t\t\tColor oldBackground = gc.getBackground();\r", "-\t\t\t\tfinal Color oldForeground = gc.getForeground();\r", "+\t\t\t\tColor oldForeground = gc.getForeground();\r", "-\t\t\t\t\tfinal int gradientWidth = (parent.gradientPercents[i] * bounds.width / 100) - pos;\r", "+\t\t\t\t\tint gradientWidth = (parent.gradientPercents[i] * bounds.width / 100) - pos;\r", "+\t\tif (parent.isFocusControl()) {\r", "+\t\t\t// draw a focus rectangle\r", "+\t\t\tint x1, y1, width1, height1;\r", "+\t\t\tif (!parent.onBottom) {\r", "+\t\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\t\tx1 = x + 2; y1 = y + 2; width1 = width - 4; height1 = height - 3;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tx1 = x + 3; y1 = y + 2; width1 = width - 5; height1 = height - 3;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tif (index == parent.topTabIndex) {\r", "+\t\t\t\t\tx1 = x + 2; y1 = y + 2; width1 = width - 4; height1 = height - 4;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tx1 = x + 3; y1 = y + 2; width1 = width - 5; height1 = height - 4;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tgc.setBackground(display.getSystemColor(SWT.COLOR_BLACK));\r", "+\t\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_WHITE));\r", "+\t\t\tgc.drawFocus(x1, y1, width1, height1);\r", "+\t\t}\r", "-\t//gc.drawText(text, xDraw, textY, true, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a51aa5035eb620d57decb1e7729e19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "e46a4e42b9be11fdc8b9e91fa09c391a8595e5e7", "commitAfterChange": "0bbeaceec2403973574dd6a4c787fc264d387814", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private void onPaint(PaintEvent event)", "signatureAfterChange": "\r private void onPaint(PaintEvent event)", "diff": ["-\tImage i = image;\r", "+\tImage img = image;\r", "-\tPoint extent = getTotalSize(i, t);\r", "+\tPoint extent = getTotalSize(img, t);\r", "-\t\ti = null;\r", "-\t\textent = getTotalSize(i, t);\r", "+\t\timg = null;\r", "+\t\textent = getTotalSize(img, t);\r", "-\t\textent = getTotalSize(i, t);\r", "+\t\textent = getTotalSize(img, t);\r", "-\tif (backgroundImage != null) {\r", "-\t\tRectangle imageRect = backgroundImage.getBounds();\r", "-\t\ttry {\r", "+\ttry {\r", "+\t\tif (backgroundImage != null) {\r", "+\t\t\t// draw a background image behind the text\r", "+\t\t\tRectangle imageRect = backgroundImage.getBounds();\r", "-\t\t\t                              0, 0, rect.width, rect.height);\r", "-\t\t} catch(SWTException e) {\r", "+\t\t\t\t0, 0, rect.width, rect.height);\r", "+\t\t} else if (gradientColors != null) {\r", "+\t\t\t// draw a gradient behind the text\r", "+\t\t\tfinal Color oldBackground = gc.getBackground();\r", "+\t\t\tif (gradientColors.length == 1) {\r", "+\t\t\t\tif (gradientColors[0] != null) gc.setBackground(gradientColors[0]);\r", "+\t\t\t\tgc.fillRectangle(0, 0, rect.width, rect.height);\r", "+\t\t\t} else {\r", "+\t\t\t\tfinal Color oldForeground = gc.getForeground();\r", "+\t\t\t\tColor lastColor = gradientColors[0];\r", "+\t\t\t\tif (lastColor == null) lastColor = oldBackground;\r", "+\t\t\t\tfor (int i = 0, pos = 0; i < gradientPercents.length; ++i) {\r", "+\t\t\t\t\tgc.setForeground(lastColor);\r", "+\t\t\t\t\tlastColor = gradientColors[i + 1];\r", "+\t\t\t\t\tif (lastColor == null) lastColor = oldBackground;\r", "+\t\t\t\t\tgc.setBackground(lastColor);\r", "+\t\t\t\t\tfinal int gradientWidth = (gradientPercents[i] * rect.width / 100) - pos;\r", "+\t\t\t\t\tgc.fillGradientRectangle(pos, 0, gradientWidth, rect.height, false);\r", "+\t\t\t\t\tpos += gradientWidth;\r", "+\t\t\t\t}\r", "+\t\t\t\tgc.setForeground(oldForeground);\r", "+\t\t\t}\r", "+\t\t\tgc.setBackground(oldBackground);\r", "+\t\t} else {\r", "-\t} else {\r", "+\t} catch (SWTException e) {\r", "+\r", "-\tif (i != null) {\r", "-\t\tRectangle imageRect = i.getBounds();\r", "-\t\tgc.drawImage(i, 0, 0, imageRect.width, imageRect.height, \r", "+\tif (img != null) {\r", "+\t\tRectangle imageRect = img.getBounds();\r", "+\t\tgc.drawImage(img, 0, 0, imageRect.width, imageRect.height, \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4778c301c8a38195b44c3aa0a47049ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "e46a4e42b9be11fdc8b9e91fa09c391a8595e5e7", "commitAfterChange": "0bbeaceec2403973574dd6a4c787fc264d387814", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r void onPaint(GC gc, boolean isSelected)", "signatureAfterChange": "\r void onPaint(GC gc, boolean isSelected)", "diff": ["-\t\t// draw a background image behind the text\r", "+\t\tfinal Rectangle bounds;\r", "+\t\tif (index == parent.topTabIndex) {\r", "+\t\t\tbounds = new Rectangle(x + 1, y, width - 2, height);\r", "+\t\t} else {\r", "+\t\t\tbounds = new Rectangle(x + 2, y, width - 3, height);\r", "+\t\t}\r", "-\t\t\tif (index == parent.topTabIndex){\r", "-\t\t\t\tRectangle imageRect = parent.backgroundImage.getBounds();\r", "-\t\t\t\tgc.drawImage(parent.backgroundImage, 0, 0, imageRect.width, imageRect.height, \r", "-\t\t\t\t                                   x + 1, y, width - 2, height);\r", "+\t\t\t// draw a background image behind the text\r", "+\t\t\tRectangle imageRect = parent.backgroundImage.getBounds();\r", "+\t\t\tgc.drawImage(parent.backgroundImage, 0, 0, imageRect.width, imageRect.height,\r", "+\t\t\t\tbounds.x, bounds.y, bounds.width, bounds.height);\r", "+\t\t} else if (parent.gradientColors != null) {\r", "+\t\t\t// draw a gradient behind the text\r", "+\t\t\tfinal Color oldBackground = gc.getBackground();\r", "+\t\t\tif (parent.gradientColors.length == 1) {\r", "+\t\t\t\tif (parent.gradientColors[0] != null) gc.setBackground(parent.gradientColors[0]);\r", "+\t\t\t\tgc.fillRectangle(bounds.x, bounds.y, bounds.width, bounds.height);\r", "-\t\t\t\tRectangle imageRect = parent.backgroundImage.getBounds();\r", "-\t\t\t\tgc.drawImage(parent.backgroundImage, 0, 0, imageRect.width, imageRect.height, \r", "-\t\t\t\t                                   x + 2, y, width - 3, height);\r", "+\t\t\t\tfinal Color oldForeground = gc.getForeground();\r", "+\t\t\t\tColor lastColor = parent.gradientColors[0];\r", "+\t\t\t\tif (lastColor == null) lastColor = oldBackground;\r", "+\t\t\t\tfor (int i = 0, pos = 0; i < parent.gradientPercents.length; ++i) {\r", "+\t\t\t\t\tgc.setForeground(lastColor);\r", "+\t\t\t\t\tlastColor = parent.gradientColors[i + 1];\r", "+\t\t\t\t\tif (lastColor == null) lastColor = oldBackground;\r", "+\t\t\t\t\tgc.setBackground(lastColor);\r", "+\t\t\t\t\tfinal int gradientWidth = (parent.gradientPercents[i] * bounds.width / 100) - pos;\r", "+\t\t\t\t\tgc.fillGradientRectangle(bounds.x + pos, bounds.y, gradientWidth, bounds.height, false);\r", "+\t\t\t\t\tpos += gradientWidth;\r", "+\t\t\t\t}\r", "+\t\t\t\tgc.setForeground(oldForeground);\r", "+\t\t\tgc.setBackground(oldBackground);\r"]}], "num": 57145}