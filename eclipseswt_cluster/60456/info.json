{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bec30fa55ffb3a3162899847fda04b83", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04010c85b17694df7a1ae3b09955fc0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "86e590387fc98740eb431ea80c5942750b2c6d0c", "commitAfterChange": "b9e679d47d2b65f7ad52dcb0b148e03cb3e9caf3", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 38, "signatureBeforeChange": " public Point getSelection ()", "signatureAfterChange": " public Point getSelection ()", "diff": ["+\tPoint selection;", "-\t\treturn new Point (start [0], end [0]);", "+\t\tselection = new Point (start [0], end [0]);", "+\t} else {", "+\t\tbyte [] startIter =  new byte [ITER_SIZEOF];", "+\t\tbyte [] endIter =  new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_selection_bounds (bufferHandle, startIter, endIter);", "+\t\tbyte [] zero = new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_iter_at_offset(bufferHandle, zero, 0);", "+\t\tint /*long*/ ptr = OS.gtk_text_buffer_get_text (bufferHandle, zero, endIter, true);", "+\t\tint start = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, OS.gtk_text_iter_get_offset (startIter));", "+\t\tint end = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, OS.gtk_text_iter_get_offset (endIter));", "+\t\tOS.g_free (ptr);", "+\t\tselection = new Point (start, end);", "-\tbyte [] startIter =  new byte [ITER_SIZEOF];", "-\tbyte [] endIter =  new byte [ITER_SIZEOF];", "-\tOS.gtk_text_buffer_get_selection_bounds (bufferHandle, startIter, endIter);", "-\tbyte [] zero = new byte [ITER_SIZEOF];", "-\tOS.gtk_text_buffer_get_iter_at_offset(bufferHandle, zero, 0);", "-\tint /*long*/ ptr = OS.gtk_text_buffer_get_text (bufferHandle, zero, endIter, true);", "-\tint start = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, OS.gtk_text_iter_get_offset (startIter));", "-\tint end = (int)/*64*/OS.g_utf8_offset_to_utf16_offset (ptr, OS.gtk_text_iter_get_offset (endIter));", "-\tOS.g_free (ptr);", "-\treturn new Point (start, end);", "+\tif (segments != null) {", "+\t\tselection.x = untranslateOffset (selection.x);", "+\t\tselection.y = untranslateOffset (selection.y);", "+\t}", "+\treturn selection;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54fd39f3b471cd17271fcd43475f929f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 272, "signatureBeforeChange": " \tint get_accParent(int ppdispParent)", "signatureAfterChange": " \tint get_accParent(int ppdispParent)", "diff": ["-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "-\t\t// Currently, we don't let the application override this. Forward to the proxy.", "-\t\treturn iaccessible.get_accParent(ppdispParent);", "+\t\t// TODO: Do we need getParent API? Returning 'parent', or proxy's parent should be ok?", "+\t\tint code = COM.DISP_E_MEMBERNOTFOUND;", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Currently, we don't expose this as API. Forward to the proxy. */", "+\t\t\tcode = iaccessible.get_accParent(ppdispParent);", "+\t\t} else if (parent != null) {", "+\t\t\t/* For lightweight accessibles, return the accessible's parent. */", "+\t\t\tparent.AddRef();", "+\t\t\tsetPtrVARIANT(ppdispParent, COM.VT_DISPATCH, parent.getAddress());", "+\t\t\tcode = COM.S_OK;", "+\t\t}", "+\t\treturn code;"]}], "num": 60456}