{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de5fbfaed23ed347df828ce07f91c9a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad51ee0387e3213b34422778cfef6413", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f5eb06c9804241f856206de14e875665a6f3a84a", "commitAfterChange": "4846c1a90b46c82b860efd9a6413e3cc3db7c0b8", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": " public boolean sleep ()", "signatureAfterChange": " public boolean sleep ()", "diff": ["+\t", "+\t/*", "+\t* Feature in the Macintosh.  No kAppearanceEventClass event exists", "+\t* for a change of the Highlight Color.  The fix is to poll for the", "+\t* change while waiting for an event.", "+\t*/", "-\t\tint status = OS.noErr, depth = getDepth ();", "+\t\tint result = 0, depth = getDepth ();", "-\t\t\tallowTimers = false;", "-\t\t\tstatus = OS.ReceiveNextEvent (0, null, 0.5, false, null);", "-\t\t\tallowTimers = true;", "-\t\t\tif (status == OS.eventLoopTimedOutErr) {", "+\t\t\tallowTimers = runAsyncMessages = false;", "+\t\t\tresult = OS.CFRunLoopRunInMode (OS.kCFRunLoopDefaultMode (), 0.5, true);", "+\t\t\tallowTimers = runAsyncMessages = true;", "+\t\t\tif (result == OS.kCFRunLoopRunTimedOut) {", "-\t\t} while (status == OS.eventLoopTimedOutErr);", "-\t\treturn status == OS.noErr;", "+\t\t} while (result == OS.kCFRunLoopRunTimedOut);", "+\t\treturn result == OS.kCFRunLoopRunHandledSource;", "-\tallowTimers = false;", "-\tint status = OS.ReceiveNextEvent (0, null, OS.kEventDurationForever, false, null);", "-\tallowTimers = true;", "-\treturn status == OS.noErr;", "+\t", "+\t/* Wait for an event and timeout after a day */", "+\tallowTimers = runAsyncMessages = false;", "+\tint result = OS.CFRunLoopRunInMode (OS.kCFRunLoopDefaultMode (), 60 * 60 * 24, true);", "+\tallowTimers = runAsyncMessages = true;", "+\treturn result == OS.kCFRunLoopRunHandledSource;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec951ace6e0db5ad8bbaf8334747b90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2c3d617dfc7ace796447cd7d973caeaf8024e8e7", "commitAfterChange": "9f9af4ad0c7e3e551752ef0d45c7733d9c3d7611", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " public boolean sleep ()", "signatureAfterChange": " public boolean sleep ()", "diff": ["+\tif (eventTable != null && eventTable.hooks (SWT.Settings)) {", "+\t\tRGBColor color = new RGBColor ();", "+\t\tint status = OS.noErr, depth = getDepth ();", "+\t\tdo {", "+\t\t\tallowTimers = false;", "+\t\t\tstatus = OS.ReceiveNextEvent (0, null, 0.5, false, null);", "+\t\t\tallowTimers = true;", "+\t\t\tif (status == OS.eventLoopTimedOutErr) {", "+\t\t\t\tOS.GetThemeBrushAsColor ((short) OS.kThemeBrushPrimaryHighlightColor, (short) depth, true, color);", "+\t\t\t\tif (highlightColor.red != color.red || highlightColor.green != color.green || highlightColor.blue != color.blue) {", "+\t\t\t\t\thighlightColor = color;", "+\t\t\t\t\trunSettings = true;", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} while (status == OS.eventLoopTimedOutErr);", "+\t\treturn status == OS.noErr;", "+\t}", "-\tboolean result = OS.ReceiveNextEvent (0, null, OS.kEventDurationForever, false, null) == OS.noErr;", "+\tint status = OS.ReceiveNextEvent (0, null, OS.kEventDurationForever, false, null);", "-\treturn result;", "+\treturn status == OS.noErr;"]}], "num": 60547}