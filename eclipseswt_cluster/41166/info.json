{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f83f41308e6e14654e9d70ba1c218b8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68b618bf85aa3744bb0dac1a0d4f2706", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "28f2c95555bb2ed2b6c2a58fbef9c726a4ca8116", "commitAfterChange": "5782ed835cc34300c35de16696ca0fbe1e498ed9", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "  void setInitialSize ()", "signatureAfterChange": "  void setInitialSize ()", "diff": ["-\tresizeHandle (1, 1);", "-\t/*", "-\t* Force the container to allocate the size of its children.", "-\t*/", "-\tint /*long*/ parentHandle = parent.parentingHandle ();", "-\tOS.gtk_container_resize_children (parentHandle);", "+\t// Comment this line to disable zero-sized widgets", "+\tstate |= ZERO_SIZED;", "+\tif ((state & ZERO_SIZED) != 0) {", "+\t\t/*", "+\t\t* Feature in GTK.  On creation, each widget's allocation is", "+\t\t* initialized to a position of (-1, -1) until the widget is", "+\t\t* first sized.  The fix is to set the value to (0, 0) as", "+\t\t* expected by SWT.", "+\t\t*/", "+\t\tint /*long*/ topHandle = topHandle ();", "+\t\tOS.GTK_WIDGET_SET_X (topHandle, 0);", "+\t\tOS.GTK_WIDGET_SET_Y (topHandle, 0);", "+\t} else {", "+\t\tresizeHandle (1, 1);", "+\t\t/*", "+\t\t* Force the container to allocate the size of its children.", "+\t\t*/", "+\t\tint /*long*/ parentHandle = parent.parentingHandle ();", "+\t\tOS.gtk_container_resize_children (parentHandle);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cde5b57fa3712ae08e48d1ae40c93b67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "84df4391d1db7f9eaa5181877d5c472921dcc901", "commitAfterChange": "3e26cc4e76e098b351d3cf6aab1b97c2f5e7da4d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t\t* Force the container to allocate the size of its children.", "+\t\t* Cause a size allocation this widget's topHandle.  Note that", "+\t\t* all calls to gtk_widget_size_allocate() must be preceded by", "+\t\t* a call to gtk_widget_size_request().", "-\t\tint /*long*/ parentHandle = parent.parentingHandle ();", "-\t\tOS.gtk_container_resize_children (parentHandle);", "+\t\tGtkRequisition requisition = new GtkRequisition ();", "+\t\tOS.gtk_widget_size_request (topHandle, requisition);", "+\t\tGtkAllocation allocation = new GtkAllocation ();", "+\t\tif (move) {", "+\t\t\tallocation.x = x;", "+\t\t\tallocation.y = y;", "+\t\t} else {", "+\t\t\tallocation.x = OS.GTK_WIDGET_X (topHandle);", "+\t\t\tallocation.y = OS.GTK_WIDGET_Y (topHandle);", "+\t\t}", "+\t\tif (resize) {", "+\t\t\tallocation.width = width;", "+\t\t\tallocation.height = height;", "+\t\t} else {", "+\t\t\tallocation.width = OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\t\tallocation.height = OS.GTK_WIDGET_HEIGHT (topHandle);", "+\t\t}", "+\t\tOS.gtk_widget_size_allocate (topHandle, allocation);"]}], "num": 41166}