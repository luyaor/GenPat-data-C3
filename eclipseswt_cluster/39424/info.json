{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "545cca66a76d5f587a1459a624053f79", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764869d5063651b6a6a206bcea6da6f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int maskPixmap, int maskType)", "signatureAfterChange": " void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long maskPixmap, int maskType)", "diff": ["-void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, int /*long*/ maskPixmap, int maskType) {", "+void drawImageXRender(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, int imgWidth, int imgHeight, long /*int*/ maskPixmap, int maskType) {", "-\tint /*long*/ drawable = data.drawable;", "+\tlong /*int*/ drawable = data.drawable;", "-\t\tint /*long*/ [] real_drawable = new int /*long*/ [1];", "+\t\tlong /*int*/ [] real_drawable = new long /*int*/ [1];", "-\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\tint /*long*/ maskPict = 0;", "+\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\tlong /*int*/ maskPict = 0;", "-\tint /*long*/ format = OS.XRenderFindVisualFormat(xDisplay, OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system()));", "-\tint /*long*/ destPict = OS.XRenderCreatePicture(xDisplay, OS.gdk_x11_drawable_get_xid(drawable), format, 0, null);", "+\tlong /*int*/ format = OS.XRenderFindVisualFormat(xDisplay, OS.gdk_x11_visual_get_xvisual(OS.gdk_visual_get_system()));", "+\tlong /*int*/ destPict = OS.XRenderCreatePicture(xDisplay, OS.gdk_x11_drawable_get_xid(drawable), format, 0, null);", "-\tint /*long*/ srcPict = OS.XRenderCreatePicture(xDisplay, OS.gdk_x11_drawable_get_xid(srcImage.pixmap), format, 0, null);", "+\tlong /*int*/ srcPict = OS.XRenderCreatePicture(xDisplay, OS.gdk_x11_drawable_get_xid(srcImage.pixmap), format, 0, null);", "-\tint /*long*/ clipping = data.clipRgn;", "+\tlong /*int*/ clipping = data.clipRgn;", "-\t\tint /*long*/[] rects = new int /*long*/[1];", "+\t\tlong /*int*/[] rects = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4737921c5546df6d881bec6fbcd4537a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void destroyItem (TreeColumn column)", "signatureAfterChange": "  void destroyItem (TreeColumn column)", "diff": ["-\tint /*long*/ columnHandle = column.handle;", "+\tlong /*int*/ columnHandle = column.handle;", "-\t\tint /*long*/ oldModel = modelHandle;", "-\t\tint /*long*/[] types = getColumnTypes (1);", "-\t\tint /*long*/ newModel = OS.gtk_tree_store_newv (types.length, types);", "+\t\tlong /*int*/ oldModel = modelHandle;", "+\t\tlong /*int*/[] types = getColumnTypes (1);", "+\t\tlong /*int*/ newModel = OS.gtk_tree_store_newv (types.length, types);", "-\t\tcopyModel(oldModel, column.modelIndex, newModel, FIRST_COLUMN, types, (int /*long*/)0, (int /*long*/)0, FIRST_COLUMN + CELL_TYPES);", "+\t\tcopyModel(oldModel, column.modelIndex, newModel, FIRST_COLUMN, types, (long /*int*/)0, (long /*int*/)0, FIRST_COLUMN + CELL_TYPES);", "-\t\t\t\tint /*long*/ iter = item.handle;", "+\t\t\t\tlong /*int*/ iter = item.handle;", "-\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_PIXBUF, (int /*long*/)0, -1);", "-\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_TEXT, (int /*long*/)0, -1);", "-\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_FOREGROUND, (int /*long*/)0, -1);", "-\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_BACKGROUND, (int /*long*/)0, -1);", "-\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_FONT, (int /*long*/)0, -1);", "+\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_PIXBUF, (long /*int*/)0, -1);", "+\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_TEXT, (long /*int*/)0, -1);", "+\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_FOREGROUND, (long /*int*/)0, -1);", "+\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_BACKGROUND, (long /*int*/)0, -1);", "+\t\t\t\tOS.gtk_tree_store_set (modelHandle, iter, modelIndex + CELL_FONT, (long /*int*/)0, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392442da0e682158167c8478dce78fbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (long wParam, long lParam)", "diff": ["-LRESULT WM_KEYDOWN (int /*long*/ wParam, int /*long*/ lParam) {", "+LRESULT WM_KEYDOWN (long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\t   int /*long*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam == OS.VK_RIGHT ? OS.VK_LEFT : OS.VK_RIGHT, lParam);", "+\t\t\t   long /*int*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam == OS.VK_RIGHT ? OS.VK_LEFT : OS.VK_RIGHT, lParam);", "-\t\t\t\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tlong /*int*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\tint /*long*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "+\t\t\t\t\tlong /*int*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "-\t\t\t\t\tint /*long*/ hNewItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\t\tlong /*int*/ hNewItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\tint /*long*/ hDeselectItem = hItem;\t\t\t\t\t", "+\t\t\t\t\tlong /*int*/ hDeselectItem = hItem;\t\t\t\t\t", "-\t\t\t\t\tint /*long*/ hSelectItem = hAnchor;", "+\t\t\t\t\tlong /*int*/ hSelectItem = hAnchor;", "-\t\t\t\tint /*long*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "+\t\t\t\tlong /*int*/ hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);", "-\t\t\t\t\tint /*long*/ hNewItem = 0;", "+\t\t\t\t\tlong /*int*/ hNewItem = 0;", "-\t\t\t\t\t\t\t\tint /*long*/ hVisible = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hNewItem);", "+\t\t\t\t\t\t\t\tlong /*int*/ hVisible = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_NEXTVISIBLE, hNewItem);", "-\t\t\tint /*long*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "+\t\t\tlong /*int*/ code = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1675f7fa4533e6906acce1f7a5dcf950", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static int getDesktop(final Display display)", "signatureAfterChange": " static int getDesktop(final Display display)", "diff": ["-\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\tint /*long*/ rootWindow = OS.XDefaultRootWindow(xDisplay);", "+\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\tlong /*int*/ rootWindow = OS.XDefaultRootWindow(xDisplay);", "-\tint /*long*/ propList = OS.XListProperties(xDisplay, rootWindow, numProp);", "-\tint /*long*/ [] property = new int /*long*/ [numProp[0]];", "+\tlong /*int*/ propList = OS.XListProperties(xDisplay, rootWindow, numProp);", "+\tlong /*int*/ [] property = new long /*int*/ [numProp[0]];", "-\t\tint /*long*/ gnome = OS.XInternAtom(xDisplay, gnomeName, true);", "+\t\tlong /*int*/ gnome = OS.XInternAtom(xDisplay, gnomeName, true);", "-\t\t\tint /*long*/ libgio = OS.dlopen(buffer, flags);", "+\t\t\tlong /*int*/ libgio = OS.dlopen(buffer, flags);", "-\t\t\t\tint /*long*/ g_app_info_launch_default_for_uri = OS.dlsym(libgio, buffer);", "+\t\t\t\tlong /*int*/ g_app_info_launch_default_for_uri = OS.dlsym(libgio, buffer);", "-\t\t\t\tint /*long*/ icon_theme = GNOME.gnome_icon_theme_new();", "+\t\t\t\tlong /*int*/ icon_theme = GNOME.gnome_icon_theme_new();", "-\t\t\t\tint /*long*/ libgnomevfs = OS.dlopen(buffer, OS.RTLD_LAZY);", "+\t\t\t\tlong /*int*/ libgnomevfs = OS.dlopen(buffer, OS.RTLD_LAZY);", "-\t\t\t\t\tint /*long*/ gnome_vfs_url_show = OS.dlsym(libgnomevfs, buffer);", "+\t\t\t\t\tlong /*int*/ gnome_vfs_url_show = OS.dlsym(libgnomevfs, buffer);", "-\t\tint /*long*/ cde = OS.XInternAtom(xDisplay, cdeName, true);", "+\t\tlong /*int*/ cde = OS.XInternAtom(xDisplay, cdeName, true);"]}], "num": 39424}