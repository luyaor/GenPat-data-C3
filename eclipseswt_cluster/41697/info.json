{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9097a0888831f621da11c6677d49c40", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1640dc04e480ae2a0b02d3f43c5550b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "4d3b01a55a97ac4a054bfd451acec439cbc8df1a", "commitAfterChange": "3e191148ef45a3ccb2e199821e208067a679c1f3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  void handleEvent(int evtId)", "signatureAfterChange": "  void handleEvent(int evtId)", "diff": ["+\tif (DOMEVENT_MOUSEWHEEL.equals(type)) {", "+\t\tDOMWheelEvent event = new DOMWheelEvent(evtId);", "+\t\tint clientX = event.clientX();", "+\t\tint clientY = event.clientY();", "+\t\tint delta = event.wheelDelta();", "+\t\tboolean ctrl = event.ctrlKey();", "+\t\tboolean shift = event.shiftKey();", "+\t\tboolean alt = event.altKey();", "+\t\tboolean meta = event.metaKey();", "+\t\tEvent mouseEvent = new Event();", "+\t\tmouseEvent.type = SWT.MouseWheel;", "+\t\tmouseEvent.widget = browser;", "+\t\tmouseEvent.x = clientX; mouseEvent.y = clientY;", "+\t\tmouseEvent.count = delta / 120;", "+\t\tmouseEvent.stateMask = (alt ? SWT.ALT : 0) | (ctrl ? SWT.CTRL : 0) | (shift ? SWT.SHIFT : 0) | (meta ? SWT.COMMAND : 0);", "+\t\tbrowser.notifyListeners (mouseEvent.type, mouseEvent);", "+\t\treturn;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33d855a6d335ae28f8116557bab295f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4df75498fdab17c2d1e2d874e7ccc227afa49b01", "commitAfterChange": "f17083d4db46878a6139bee0326050eca39ba8de", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": "  boolean sendDragEvent (NSEvent nsEvent)", "signatureAfterChange": "  boolean sendDragEvent (NSEvent nsEvent)", "diff": ["-\treturn sendMouseEvent(nsEvent, SWT.DragDetect, true);", "+\tint button = (int)/*64*/nsEvent.buttonNumber();", "+\tNSPoint windowPoint;", "+\tif (nsEvent == null || nsEvent.type() == OS.NSMouseMoved) {", "+\t\twindowPoint = view.window().convertScreenToBase(NSEvent.mouseLocation()); ", "+\t} else {", "+\t\twindowPoint = nsEvent.locationInWindow();", "+\t}", "+\tNSPoint viewPoint = view.convertPoint_fromView_(windowPoint, null);", "+\tEvent event = new Event ();", "+\tswitch (button) {", "+\t\tcase 0: event.button = 1; break;", "+\t\tcase 1: event.button = 3; break;", "+\t\tcase 2: event.button = 2; break;", "+\t\tcase 3: event.button = 4; break;", "+\t\tcase 4: event.button = 5; break;", "+\t}", "+", "+\tevent.x = (int)viewPoint.x;", "+\tevent.y = (int)viewPoint.y;", "+\tsetInputState(event, nsEvent, SWT.DragDetect);", "+\tpostEvent (SWT.DragDetect, event);", "+\treturn event.doit;"]}], "num": 41697}