{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2055cde058cb3506aa98043c5b6cdfe6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8fbe1d0bdb6995dadb89f0a445fcbd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "108b9dd38cc7c1124205fb1899f8aad5ad317989", "commitAfterChange": "5014eebfedd0f623cdc5c8c21ddc6fda2b771129", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t\treturn computeNativeSize (handle, wHint, hHint, changed);", "-\t}", "-\tif (wHint != SWT.DEFAULT && wHint < 0) wHint = 0;", "-\tif (hHint != SWT.DEFAULT && hHint < 0) hHint = 0;", "-\tint[] w = new int [1], h = new int [1];", "-\tOS.gtk_widget_realize (entryHandle);", "-\tint /*long*/ layout = OS.gtk_entry_get_layout (entryHandle);", "-\tOS.pango_layout_get_size (layout, w, h);", "-\tint xborder = Display.INNER_BORDER, yborder = Display.INNER_BORDER;", "-\tint /*long*/ style = OS.gtk_widget_get_style (entryHandle);", "-\txborder += OS.gtk_style_get_xthickness (style);", "-\tyborder += OS.gtk_style_get_ythickness (style);", "-\tint [] property = new int [1];", "-\tOS.gtk_widget_style_get (entryHandle, OS.interior_focus, property, 0);", "-\tif (property [0] == 0) {", "-\t\tOS.gtk_widget_style_get (entryHandle, OS.focus_line_width, property, 0);", "-\t\txborder += property [0];", "-\t\tyborder += property [0];", "-\t}", "-\tint width = OS.PANGO_PIXELS (w [0]) + xborder  * 2;", "-\tint height = OS.PANGO_PIXELS (h [0]) + yborder  * 2;", "-", "-\tGtkRequisition arrowRequesition = new GtkRequisition ();", "-\tOS.gtk_widget_size_request (buttonHandle, arrowRequesition);", "-\tGtkRequisition listRequesition = new GtkRequisition ();", "-\tint /*long*/ listParent = OS.gtk_widget_get_parent (listHandle);", "-\tOS.gtk_widget_size_request (listParent != 0 ? listParent : listHandle, listRequesition);", "-\t", "-\twidth = Math.max (listRequesition.width, width) + arrowRequesition.width + 4;", "-\twidth = wHint == SWT.DEFAULT ? width : wHint;", "-\theight = hHint == SWT.DEFAULT ? height : hHint;", "-\treturn new Point (width, height);", "+\treturn computeNativeSize (handle, wHint, hHint, changed);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf81f9710f61e31832c613fa9104eadd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "6351a474b1ab7b8c3b9258742a72f9361637458c", "commitAfterChange": "1b2cca0b6c41113211d8146c1c6ceaaca7d5989c", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 31, "signatureBeforeChange": "  static int resolveTextDirection(String text)", "signatureAfterChange": " public boolean isAutoDirection ()", "diff": ["+ */", "+public boolean isAutoDirection () {", "+\treturn (state & HAS_AUTO_DIRECTION) != 0;", "+}", "-", "-static int resolveTextDirection(String text) {", "-\tif (text == null) return SWT.NONE;", "-\tint length = text.length();", "-\tif (length == 0) return SWT.NONE;", "-\tchar[] rtlProbe = {' ', ' ', '1'};", "-\t/*", "-\t * \"Wide\" version of win32 API can also run even on non-Unicode Windows,", "-\t * hence need for OS.IsUnicode check here. ", "-\t */", "-\tchar[] ltrProbe = {RLE, 'a', ' '};", "-\tchar[] numberProbe = {'\\u05d0', ' ', ' '};", "-\tGCP_RESULTS result = new GCP_RESULTS();", "-\tresult.lStructSize = GCP_RESULTS.sizeof;", "-\tint nGlyphs = result.nGlyphs = ltrProbe.length;", "-\tlong /*int*/ hHeap = OS.GetProcessHeap();", "-\tlong /*int*/ lpOrder = result.lpOrder = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, nGlyphs * 4);", "-\tlong /*int*/ hdc = OS.GetDC(0);", "-\tint[] order = new int[1];", "-\tint textDirection = SWT.NONE;", "-\tfor (int i = 0; i < length; i++) {", "-\t\tchar ch = text.charAt(i);", "-\t\trtlProbe[0] = ch;", "-\t\tOS.GetCharacterPlacementW(hdc, rtlProbe, rtlProbe.length, 0, result, OS.GCP_REORDER);", "-\t\tOS.MoveMemory(order, result.lpOrder, 4);", "-\t\tif (order[0] == 2) {", "-\t\t\ttextDirection = SWT.RIGHT_TO_LEFT;", "-\t\t\tbreak;", "-\t\t}", "-\t\tltrProbe[2] = ch;", "-\t\tOS.GetCharacterPlacementW(hdc, ltrProbe, ltrProbe.length, 0, result, OS.GCP_REORDER);", "-\t\tOS.MoveMemory(order, result.lpOrder + 4, 4);", "-\t\tif (order[0] == 1) {", "-\t\t\tnumberProbe[2] = ch;", "-\t\t\tOS.GetCharacterPlacementW(hdc, numberProbe, numberProbe.length, 0, result, OS.GCP_REORDER);", "-\t\t\tOS.MoveMemory(order, result.lpOrder, 4);", "-\t\t\tif (order[0] == 0) {", "-\t\t\t\ttextDirection = SWT.LEFT_TO_RIGHT;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t}", "-\tOS.ReleaseDC (0, hdc);", "-\tOS.HeapFree(hHeap, 0, lpOrder);", "-\treturn textDirection;"]}], "num": 31519}