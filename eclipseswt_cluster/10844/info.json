{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "983bb82889471850277be856c4406926", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ec3a56b511cc69c882195b18f93b0c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TableItem.java", "commitBeforeChange": "80dfb437e1cf72ae8fdf50da1fe73b0a6cf99eed", "commitAfterChange": "5f54319c118c62a8385f5e04df3f5c1e943c1812", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TableII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_widgets_TableII()", "diff": ["-\twarnUnimpl(\"Test test_ConstructorLorg_eclipse_swt_widgets_TableII not written\");", "+\ttry {", "+\t\tnew TableItem(table, SWT.NONE, 5);", "+\t\tfail(\"No exception thrown for illegal index argument\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f838c3fe9136a50feb9160776583d51", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "a1670f52d7c9641448babf7d1299c2e4f0a1bbfb", "commitAfterChange": "4064bd56ae1e255dc144d4b4f0d2d04ddcb4d4d0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void test_addVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener()", "signatureAfterChange": "  public void test_removeVisibilityWindowListenerLorg_eclipse_swt_browser_VisibilityWindowListener()", "diff": ["-public void test_addVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener() {", "-\twarnUnimpl(\"Test test_addVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener not written\");", "+public void test_removeVisibilityWindowListenerLorg_eclipse_swt_browser_VisibilityWindowListener() {", "+\ttry {", "+\t\tbrowser.removeVisibilityWindowListener(null);", "+\t\tfail(\"No exception thrown for listener == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t// tested in addVisibilityWindowListener"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0cd4e1a4159295dd61a5562042383a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "20379ae038e348375035db8b448f9107315b84d4", "commitAfterChange": "93b5240d251779d27bd20aa14de9b3e26e010dea", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test_addNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener()", "signatureAfterChange": "  public void test_removeOpenWindowListenerLorg_eclipse_swt_browser_OpenWindowListener()", "diff": ["-public void test_addNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener() {", "-\twarnUnimpl(\"Test test_addNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener not written\");", "+public void test_removeOpenWindowListenerLorg_eclipse_swt_browser_OpenWindowListener() {", "+\ttry {", "+\t\tbrowser.removeOpenWindowListener(null);", "+\t\tfail(\"No exception thrown for listener == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t// tested in addOpenWindowListener"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e355c41845eb7172b7051f15687e92a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "20379ae038e348375035db8b448f9107315b84d4", "commitAfterChange": "93b5240d251779d27bd20aa14de9b3e26e010dea", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test_removeNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener()", "signatureAfterChange": "  public void test_removeCloseWindowListenerLorg_eclipse_swt_browser_CloseWindowListener()", "diff": ["+public void test_removeCloseWindowListenerLorg_eclipse_swt_browser_CloseWindowListener() {", "+\ttry {", "+\t\tbrowser.removeCloseWindowListener(null);", "+\t\tfail(\"No exception thrown for listener == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t// tested in addCloseWindowListener", "+}", "-public void test_removeNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener() {", "-\twarnUnimpl(\"Test test_removeNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener not written\");"]}], "num": 10844}