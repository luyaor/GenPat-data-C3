{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec42af81cd7d44ee092c50e783d18b6a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6d4ad87891fb461bef03a94ffe56ced", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "2a453289bd44f7a775eb792bac5c0306a39048d4", "commitAfterChange": "00044d960d22ae0ff107fa60b140159a76aa4f68", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": " void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground)", "signatureAfterChange": " void redrawLines(int firstLine, int offsetInFirstLine, int lastLine, int endOffset, boolean clearBackground)", "diff": ["-\tint firstLineOffset = content.getOffsetAtLine(firstLine);", "+\tint lineOffset = content.getOffsetAtLine(firstLine);", "-\tStyledTextEvent event;", "-\tif (clearBackground && endOffset - firstLineOffset >= line.length()) {", "+\tif (clearBackground && endOffset - lineOffset >= line.length()) {", "-\tevent = renderer.getLineStyleData(firstLineOffset, line);", "-\tTextLayout layout = renderer.getTextLayout(line, firstLineOffset, event);", "+\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "-\trenderer.disposeTextLayout(layout, event);", "+\trenderer.disposeTextLayout(layout);", "-\t\tint offsetInLastLine = endOffset - content.getOffsetAtLine(lastLine);\t", "+\t\tlineOffset = content.getOffsetAtLine(lastLine);", "+\t\tint offsetInLastLine = endOffset - lineOffset;\t", "-\t\t\tevent = renderer.getLineStyleData(offsetInLastLine, line);", "-\t\t\tlayout = renderer.getTextLayout(line, endOffset, event);", "+\t\t\tlayout = renderer.getTextLayout(line, lineOffset);", "-\t\t\trenderer.disposeTextLayout(layout, event);", "+\t\t\trenderer.disposeTextLayout(layout);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc7b628571c943c9f9c6ddc9f6248fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "62eca11b7a72103456eab5e7b76c323c78c52a25", "commitAfterChange": "b243b45a5d0e4308832d914b27c7d7a19a7629db", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 174, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\t\tboolean hasPopup = menu != null && !menu.isDisposed ();", "-\t\t* Note on WinCE PPC.  Detect the gesture for a popup menu", "-\t\t* only if a valid menu has been set or if there are", "-\t\t* registered listeners for the MenuDetect event.", "+\t\t* Note: On WinCE PPC, only attempt to recognize the gesture for", "+\t\t* a context menu when the control contains a valid menu or there", "+\t\t* are listeners for the MenuDetect event.", "-\t\tif (hasPopup || hooks (SWT.MenuDetect)) {", "+\t\tboolean hasMenu = menu != null && !menu.isDisposed ();", "+\t\tif (hasMenu || hooks (SWT.MenuDetect)) {", "-\t\t\tif (type == OS.GN_CONTEXTMENU) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.x = x;", "-\t\t\t\tevent.y = y;", "-\t\t\t\tsendEvent (SWT.MenuDetect, event);", "-\t\t\t\tif (event.doit && hasPopup) {", "-\t\t\t\t\tmenu.setVisible (true); ", "-\t\t\t\t} ", "-\t\t\t}", "+\t\t\tif (type == OS.GN_CONTEXTMENU) showMenu (x, y);"]}], "num": 49505}