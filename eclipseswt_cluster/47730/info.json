{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "851ef45058dff06631e41f2fe8b9452e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88fe4fae4a9184539ba9febfc40715e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "3e191148ef45a3ccb2e199821e208067a679c1f3", "commitAfterChange": "1a4f56d795428ec7c06bef86ec797cfdd29fac5c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void handleMouseEvent (OleEvent e)", "signatureAfterChange": "  void handleMouseEvent (OleEvent e)", "diff": ["-\tint[] rgdispid = event.getIDsOfNames(new String[]{ \"type\" }); //$NON-NLS-1$", "+\tint[] rgdispid = event.getIDsOfNames(new String[]{ PROPERTY_TYPE });", "-\tif (eventType.equals(\"mouseover\")) { //$NON-NLS-1$", "-\t\trgdispid = event.getIDsOfNames(new String[] { \"fromElement\" }); //$NON-NLS-1$", "+\tif (eventType.equals(EVENT_MOUSEOVER)) {", "+\t\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_FROMELEMENT });", "-\tif (eventType.equals(\"mouseout\")) { //$NON-NLS-1$", "-\t\trgdispid = event.getIDsOfNames(new String[] { \"toElement\" }); //$NON-NLS-1$", "+\tif (eventType.equals(EVENT_MOUSEOUT)) {", "+\t\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_TOELEMENT });", "-\trgdispid = event.getIDsOfNames(new String[] { \"clientX\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_CLIENTX });", "-\trgdispid = event.getIDsOfNames(new String[] { \"clientY\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_CLIENTY });", "-\trgdispid = event.getIDsOfNames(new String[] { \"ctrlKey\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_CTRLKEY });", "-\trgdispid = event.getIDsOfNames(new String[] { \"altKey\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_ALTKEY });", "-\trgdispid = event.getIDsOfNames(new String[] { \"shiftKey\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_SHIFTKEY });", "-\trgdispid = event.getIDsOfNames(new String[] { \"button\" }); //$NON-NLS-1$", "+\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_BUTTON });", "-\tif (eventType.equals(\"mousedown\")) { //$NON-NLS-1$", "+\tif (eventType.equals(EVENT_MOUSEDOWN)) {", "-\t} else if (eventType.equals(\"mouseup\") || eventType.equals(\"dragend\")) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t} else if (eventType.equals(EVENT_MOUSEUP) || eventType.equals(EVENT_DRAGEND)) {", "-\t} else if (eventType.equals(\"mousewheel\")) { //$NON-NLS-1$", "+\t} else if (eventType.equals(EVENT_MOUSEWHEEL)) {", "-\t\trgdispid = event.getIDsOfNames(new String[] { \"wheelDelta\" }); //$NON-NLS-1$", "+\t\trgdispid = event.getIDsOfNames(new String[] { PROPERTY_WHEELDELTA });", "-\t} else if (eventType.equals(\"mousemove\")) { //$NON-NLS-1$", "+\t} else if (eventType.equals(EVENT_MOUSEMOVE)) {", "+\t\t/*", "+\t\t* Feature in IE.  Spurious and redundant mousemove events are often received.  The workaround", "+\t\t* is to not fire MouseMove events whose x and y values match the last MouseMove.  ", "+\t\t*/", "+\t\tif (newEvent.x == lastMouseMoveX && newEvent.y == lastMouseMoveY) return;", "-\t} else if (eventType.equals(\"mouseover\")) { //$NON-NLS-1$", "+\t\tlastMouseMoveX = newEvent.x; lastMouseMoveY = newEvent.y;", "+\t} else if (eventType.equals(EVENT_MOUSEOVER)) {", "-\t} else if (eventType.equals(\"mouseout\")) { //$NON-NLS-1$", "+\t} else if (eventType.equals(EVENT_MOUSEOUT)) {", "-\t} else if (eventType.equals(\"dragstart\")) { //$NON-NLS-1$", "+\t} else if (eventType.equals(EVENT_DRAGSTART)) {", "-\tif (eventType.equals(\"dblclick\")) { //$NON-NLS-1$", "+\tif (eventType.equals(EVENT_DOUBLECLICK)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a58438c2aeb6093c96f629296caa916f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "c6a2c6fb0b51cee8e07083f4117ccb857d00475a", "commitAfterChange": "f980f92ddaa06400d01ca6217ebe85dd24cefb9a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public Cursor(Device device, int style)", "signatureAfterChange": " public Cursor(Device device, int style)", "diff": ["-\tint osFlag = 0;", "+\tint shape = 0;", "-\t\tcase SWT.CURSOR_ARROW:\t\t\t\tosFlag = OS.GDK_LEFT_PTR; break;", "-\t\tcase SWT.CURSOR_WAIT:\t\t\t\t\t\tosFlag = OS.GDK_WATCH; break;", "-\t\tcase SWT.CURSOR_CROSS:\t\t\t\tosFlag = OS.GDK_CROSS; break;", "-\t\tcase SWT.CURSOR_APPSTARTING:\tosFlag = OS.GDK_LEFT_PTR; break;", "-\t\tcase SWT.CURSOR_HAND:\t\t\t\t\tosFlag = OS.GDK_HAND1; break;", "-\t\tcase SWT.CURSOR_HELP:\t\t\t\t\tosFlag = OS.GDK_QUESTION_ARROW; break;", "-\t\tcase SWT.CURSOR_SIZEALL:\t\t\t\tosFlag = OS.GDK_FLEUR; break;", "-\t\tcase SWT.CURSOR_SIZENESW:\t\t\tosFlag = OS.GDK_SIZING; break;", "-\t\tcase SWT.CURSOR_SIZENS:\t\t\t\tosFlag = OS.GDK_DOUBLE_ARROW; break;", "-\t\tcase SWT.CURSOR_SIZENWSE:\t\t\tosFlag = OS.GDK_SIZING; break;", "-\t\tcase SWT.CURSOR_SIZEWE:\t\t\t\tosFlag = OS.GDK_SB_H_DOUBLE_ARROW; break;", "-\t\tcase SWT.CURSOR_SIZEN:\t\t\t\t\tosFlag = OS.GDK_TOP_SIDE; break;", "-\t\tcase SWT.CURSOR_SIZES:\t\t\t\t\tosFlag = OS.GDK_BOTTOM_SIDE; break;", "-\t\tcase SWT.CURSOR_SIZEE:\t\t\t\t\tosFlag = OS.GDK_RIGHT_SIDE; break;", "-\t\tcase SWT.CURSOR_SIZEW:\t\t\t\t\tosFlag = OS.GDK_LEFT_SIDE; break;", "-\t\tcase SWT.CURSOR_SIZENE:\t\t\t\tosFlag = OS.GDK_TOP_RIGHT_CORNER; break;", "-\t\tcase SWT.CURSOR_SIZESE:\t\t\t\t\tosFlag = OS.GDK_BOTTOM_RIGHT_CORNER; break;", "-\t\tcase SWT.CURSOR_SIZESW:\t\t\t\tosFlag = OS.GDK_BOTTOM_LEFT_CORNER; break;", "-\t\tcase SWT.CURSOR_SIZENW:\t\t\t\tosFlag = OS.GDK_TOP_LEFT_CORNER; break;", "-\t\tcase SWT.CURSOR_UPARROW:\t\t\tosFlag = OS.GDK_SB_UP_ARROW; break;", "-\t\tcase SWT.CURSOR_IBEAM:\t\t\t\t\tosFlag = OS.GDK_XTERM; break;", "-\t\tcase SWT.CURSOR_NO:\t\t\t\t\t\tosFlag = OS.GDK_X_CURSOR; break;", "+\t\tcase SWT.CURSOR_ARROW:\t\t\tshape = OS.GDK_LEFT_PTR; break;", "+\t\tcase SWT.CURSOR_WAIT:\t\t\tshape = OS.GDK_WATCH; break;", "+\t\tcase SWT.CURSOR_CROSS:\t\t\tshape = OS.GDK_CROSS; break;", "+\t\tcase SWT.CURSOR_APPSTARTING:\tbreak;", "+\t\tcase SWT.CURSOR_HAND:\t\t\tshape = OS.GDK_HAND1; break;", "+\t\tcase SWT.CURSOR_HELP:\t\t\tshape = OS.GDK_QUESTION_ARROW; break;", "+\t\tcase SWT.CURSOR_SIZEALL:\t\tshape = OS.GDK_FLEUR; break;", "+\t\tcase SWT.CURSOR_SIZENESW:\t\tshape = OS.GDK_SIZING; break;", "+\t\tcase SWT.CURSOR_SIZENS:\t\t\tshape = OS.GDK_DOUBLE_ARROW; break;", "+\t\tcase SWT.CURSOR_SIZENWSE:\t\tshape = OS.GDK_SIZING; break;", "+\t\tcase SWT.CURSOR_SIZEWE:\t\t\tshape = OS.GDK_SB_H_DOUBLE_ARROW; break;", "+\t\tcase SWT.CURSOR_SIZEN:\t\t\tshape = OS.GDK_TOP_SIDE; break;", "+\t\tcase SWT.CURSOR_SIZES:\t\t\tshape = OS.GDK_BOTTOM_SIDE; break;", "+\t\tcase SWT.CURSOR_SIZEE:\t\t\tshape = OS.GDK_RIGHT_SIDE; break;", "+\t\tcase SWT.CURSOR_SIZEW:\t\t\tshape = OS.GDK_LEFT_SIDE; break;", "+\t\tcase SWT.CURSOR_SIZENE:\t\t\tshape = OS.GDK_TOP_RIGHT_CORNER; break;", "+\t\tcase SWT.CURSOR_SIZESE:\t\t\tshape = OS.GDK_BOTTOM_RIGHT_CORNER; break;", "+\t\tcase SWT.CURSOR_SIZESW:\t\t\tshape = OS.GDK_BOTTOM_LEFT_CORNER; break;", "+\t\tcase SWT.CURSOR_SIZENW:\t\t\tshape = OS.GDK_TOP_LEFT_CORNER; break;", "+\t\tcase SWT.CURSOR_UPARROW:\t\tshape = OS.GDK_SB_UP_ARROW; break;", "+\t\tcase SWT.CURSOR_IBEAM:\t\t\tshape = OS.GDK_XTERM; break;", "+\t\tcase SWT.CURSOR_NO:\t\t\t\tshape = OS.GDK_X_CURSOR; break;", "-\tthis.handle = OS.gdk_cursor_new(osFlag);", "+\tif (shape == 0 && style == SWT.CURSOR_APPSTARTING) {", "+\t\thandle = createCursor(APPSTARTING_SRC, APPSTARTING_MASK, 32, 32, 2, 2);\t\t", "+\t} else {", "+\t\thandle = OS.gdk_cursor_new(shape);", "+\t}"]}], "num": 47730}