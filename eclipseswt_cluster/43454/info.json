{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d62c016a5a8ffa3ecad5797cbf47992b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "184fd94262bbdd8099b4397aa8a7240b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "fa3d675595b33a2b5291d7bf5d7294efc90c66b4", "commitAfterChange": "85fb5f95e7007b054d710666a8df54731f3daa88", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["+", "+\tOS.gtk_widget_realize (handle);", "+", "+\t/*", "+\t * Reverting the code for bug 459072. With gtk_tree_view_scroll_to_cell, there are some pending gtk events.", "+\t * the scroll does not happen immediately. We still need to perform gtk_tree_view_scroll_to_point to complete", "+\t * all the pending events and update top index.", "+\t */", "+\tGdkRectangle visibleRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\tGdkRectangle cellRect = new GdkRectangle ();", "+\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\tint[] tx = new int[1], ty = new int[1];", "+\tOS.gtk_tree_view_convert_bin_window_to_tree_coords(handle, cellRect.x, cellRect.y, tx, ty);", "+\tif (ty[0] < visibleRect.y ) {", "+\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "+\t} else {", "+\t\tint height = Math.min (visibleRect.height, cellRect.height);", "+\t\tif (ty[0] + height > visibleRect.y + visibleRect.height) {", "+\t\t\tty[0] += cellRect.height - visibleRect.height;", "+\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, ty[0]);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6e6770d4e9c6a08e3bfdeaa911dae7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7cb97e4ecc9781f006aacc94d00852f3c95f4dd1", "commitAfterChange": "750fbf7ef7f008b0864e26e584fad6255dbe4f53", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void showItem (int path, boolean scroll)", "signatureAfterChange": "  void showItem (int path, boolean scroll)", "diff": ["-\t\tif (isHidden) OS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);\t", "+\t\tif (isHidden) {", "+\t\t\t/*", "+\t\t\t* This code intentionally commented.", "+\t\t\t* Bug in GTK.  According to the documentation, gtk_tree_view_scroll_to_cell", "+\t\t\t* should scroll the minimum amount to show the cell if use_align is false.", "+\t\t\t* However, what actually happens is the cell is scrolled to the top.", "+\t\t\t* The fix is to determine the new location and use gtk_tree_view_scroll_to_point.", "+\t\t\t* If the widget is a pinhead, calling gtk_tree_view_scroll_to_point", "+\t\t\t* will have no effect. Therefore, it is still neccessary to ", "+\t\t\t* call gtk_tree_view_scroll_to_cell.", "+\t\t\t*/", "+\t\t\t//\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, depth != 1, 0.5f, 0.0f);", "+\t\t\tif (depth != 1) {", "+\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, true, 0.5f, 0.0f);", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_widget_realize (handle);", "+\t\t\t\tGdkRectangle cellRect = new GdkRectangle ();", "+\t\t\t\tOS.gtk_tree_view_get_cell_area (handle, path, 0, cellRect);", "+\t\t\t\tGdkRectangle visibleRect = new GdkRectangle ();", "+\t\t\t\tOS.gtk_tree_view_get_visible_rect (handle, visibleRect);", "+\t\t\t\tOS.gtk_tree_view_scroll_to_cell (handle, path, 0, false, 0f, 0f);", "+\t\t\t\tint height = Math.min (visibleRect.height, cellRect.height);", "+\t\t\t\tif (cellRect.y + height > visibleRect.y + visibleRect.height) {", "+\t\t\t\t\tint tree_y = visibleRect.y + cellRect.y - visibleRect.height + cellRect.height;", "+\t\t\t\t\tOS.gtk_tree_view_scroll_to_point (handle, -1, tree_y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}], "num": 43454}