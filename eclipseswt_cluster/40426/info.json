{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f1366d17c6add92f276300ee47185f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e792d08cd1fa432619525c3e77cd891", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "9a7fa067b54fe8d9322f6f6f0089515e7f127d5c", "commitAfterChange": "689db4ba08dcc7facbd51d11e6e55baa5542ebfa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  String getProfilePath ()", "signatureAfterChange": "  String getProfilePath ()", "diff": ["+", "+\t/*", "+\t* Bug in Sun JRE.  Under some circumstances the value of java property \"user.home\" is", "+\t* \"?\", even when the HOME environment variable has a valid value.  If this happens", "+\t* then attempt to read the value from the environment directly.", "+\t*/", "+\tif (baseDir.equals (\"?\")) { //$NON-NLS-1$", "+\t\tint /*long*/ ptr = C.getenv (wcsToMbcs (null, \"HOME\", true)); //$NON-NLS-1$", "+\t\tif (ptr != 0) {", "+\t\t\tint length = C.strlen (ptr);", "+\t\t\tbyte[] bytes = new byte[length];", "+\t\t\tC.memmove (bytes, ptr, length);", "+\t\t\tbaseDir = new String (mbcsToWcs (null, bytes));", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee2b201d6262a42871d93c0f5ce17e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6824278b35cb6d52d341f9cd0fcf2c132c77449b", "commitAfterChange": "bea6ad5ba26c7753b0da238d2aa3d59686d9248f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+", "+\t\t\t/*", "+\t\t\t * A XULRunner was not found that supports wrapping of XPCOM handles as JavaXPCOM objects.", "+\t\t\t * Drop the lower version bound and try to detect an earlier XULRunner installation.", "+\t\t\t */", "+\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\tC.free (lower);", "+\t\t\t\tbytes = MozillaDelegate.wcsToMbcs (null, GRERANGE_LOWER_FALLBACK, true);", "+\t\t\t\tlower = C.malloc (bytes.length);", "+\t\t\t\tC.memmove (lower, bytes, bytes.length);", "+\t\t\t\trange.lower = lower;", "+\t\t\t\trc = XPCOMInit.GRE_GetGREPathWithProperties (range, 1, propertiesPtr, 0, greBuffer, length);", "+\t\t\t}", "+"]}], "num": 40426}