{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61fdbcbfa830db9e731360651e82ab37", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56265de0c32146ffe9e29c8d44c8f9fa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ebb5060cad733406a88647907ec2c4a932cfe720", "commitAfterChange": "28f166fa20c7ba5aa3886efdb6cf282aa0351b06", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "\r boolean translateTraversal (int key, XKeyEvent xEvent)", "signatureAfterChange": "\r boolean translateTraversal (int key, XKeyEvent xEvent)", "diff": ["-\tint detail = 0;\r", "+\tint detail = SWT.TRAVERSE_NONE;\r", "+\tboolean all = false;\r", "+\t\tcase OS.XK_Page_Up:\r", "+\t\tcase OS.XK_Page_Down:\r", "+\t\t\tall = true;\r", "+\t\t\tif ((xEvent.state & OS.ControlMask) == 0) return false;\r", "+\t\t\tdetail = key == OS.XK_Page_Down ? SWT.TRAVERSE_PAGE_NEXT : SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\t\t\tbreak;\r", "-\tif (hooks (SWT.Traverse)) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.doit = doit;\r", "-\t\tevent.detail = detail;\r", "-\t\tevent.time = xEvent.time;\r", "-\t\tsetKeyState (event, xEvent);\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "-\t}\r", "-\tif (doit) {\r", "-\t\tint flags = SWT.TRAVERSE_RETURN | SWT.TRAVERSE_ESCAPE;\r", "-\t\tif ((detail & flags) != 0 || (state & CANVAS) != 0) {\r", "-\t\t\treturn traverse (detail);\r", "-\t\t}\r", "-\t}\r", "+\tint flags = SWT.TRAVERSE_RETURN | SWT.TRAVERSE_ESCAPE | SWT.TRAVERSE_PAGE_NEXT | SWT.TRAVERSE_PAGE_PREVIOUS;\r", "+\tif ((detail & flags) == 0 && (state & CANVAS) == 0) return false;\r", "+\tEvent event = new Event ();\r", "+\tevent.doit = doit;\r", "+\tevent.detail = detail;\r", "+\tevent.time = xEvent.time;\r", "+\tsetKeyState (event, xEvent);\r", "+\tShell shell = getShell ();\r", "+\tControl control = this;\r", "+\tdo {\r", "+\t\tif (control.traverse (event)) return true;\r", "+\t\tif (control == shell) return false;\r", "+\t\tcontrol = control.parent;\r", "+\t} while (all && control != null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bdaee27e3d27e0cc31e6d64dea744b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "94a5701004de0b95fe8497574b0ba3074f8c94a1", "commitAfterChange": "7b7e7a22b9cad0264ceb1c3f2dfd3d995d8a4b4e", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 120, "signatureBeforeChange": "\r \r boolean translateTraversal (MSG msg)", "signatureAfterChange": "\r \r boolean translateTraversal (MSG msg)", "diff": ["-\tboolean doit = true;\r", "+\tboolean doit = true, all = false;\r", "-\t\t\tdetail = SWT.TRAVERSE_TAB_PREVIOUS;\r", "-\t\t\tif (next) detail = SWT.TRAVERSE_TAB_NEXT;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_TAB_NEXT : SWT.TRAVERSE_TAB_PREVIOUS;\r", "-\t\t\tif ((code & OS.DLGC_WANTARROWS) != 0) doit = false;\r", "-\t\t\tdetail = SWT.TRAVERSE_ARROW_PREVIOUS;\r", "-\t\t\tif (key == OS.VK_DOWN || key == OS.VK_RIGHT) {\t\r", "-\t\t\t\tdetail = SWT.TRAVERSE_ARROW_NEXT;\r", "-\t\t\t}\r", "+\t\t\tif ((code & (OS.DLGC_WANTARROWS /*| OS.DLGC_WANTALLKEYS*/)) != 0) doit = false;\r", "+\t\t\tboolean next = key == OS.VK_DOWN || key == OS.VK_RIGHT;\r", "+\t\t\tdetail = next ? SWT.TRAVERSE_ARROW_NEXT : SWT.TRAVERSE_ARROW_PREVIOUS;\r", "+\t\t\tbreak;\r", "+\t\t}\r", "+\t\tcase OS.VK_PRIOR:\r", "+\t\tcase OS.VK_NEXT: {\r", "+\t\t\tall = true;\r", "+\t\t\tlastVirtual = true;\r", "+\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) >= 0) return false;\r", "+\t\t\tint code = OS.SendMessage (hwnd, OS.WM_GETDLGCODE, 0, 0);\r", "+\t\t\tif ((code & OS.DLGC_WANTALLKEYS) != 0) doit = false;\r", "+\t\t\tdetail = key == OS.VK_PRIOR ? SWT.TRAVERSE_PAGE_PREVIOUS : SWT.TRAVERSE_PAGE_NEXT;\r", "-\t\t/*\r", "-\t\t* It is possible (but unlikely), that application\r", "-\t\t* code could have disposed the widget in the traverse\r", "-\t\t* event.  If this happens, return true to stop further\r", "-\t\t* event processing.\r", "-\t\t*/\r", "-\t\tsendEvent (SWT.Traverse, event);\r", "-\t\tif (isDisposed ()) return true;\r", "-\t\tdoit = event.doit;\r", "-\t\tdetail = event.detail;\r", "+\t\tShell shell = getShell ();\r", "+\t\tControl control = this;\r", "+\t\tdo {\r", "+\t\t\t/*\r", "+\t\t\t* It is possible (but unlikely), that application\r", "+\t\t\t* code could have disposed the widget in the traverse\r", "+\t\t\t* event.  If this happens, return true to stop further\r", "+\t\t\t* event processing.\r", "+\t\t\t*/\t\r", "+\t\t\tcontrol.sendEvent (SWT.Traverse, event);\r", "+\t\t\tif (control.isDisposed ()) return true;\r", "+\t\t\tdoit = event.doit;\r", "+\t\t\tdetail = event.detail;\r", "+\t\t\tif (control == shell) break;\r", "+\t\t\tcontrol = control.parent;\r", "+\t\t} while (all && !doit);\r"]}], "num": 34578}