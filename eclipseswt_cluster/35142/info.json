{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b25acfb34fea9b23aae8d868cd1c72f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0583e1676c7dc49291fe729716136a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleFrame.java", "commitBeforeChange": "f33c361e9050ef88c601f32e8124e2e48510bd92", "commitAfterChange": "6a31a88c4dd02044117260b4697f4f85ff7a38d7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static int getMsgProc(int code, int wParam, int lParam)", "signatureAfterChange": " static int getMsgProc(int code, int wParam, int lParam)", "diff": ["-\t\t\t\t\t/*", "-\t\t\t\t\t * Do not allow the activeX control to translate events ", "-\t\t\t\t\t * when a menu is active.", "-\t\t\t\t\t */", "+\t\t\t\t\tboolean consumed = false;", "+\t\t\t\t\t/* Allow activeX control to translate accelerators except when a menu is active. */", "-\t\t\t\t\t\tif (frame.translateOleAccelerator(msg)) {", "-\t\t\t\t\t\t\t// In order to prevent this message from also being processed", "-\t\t\t\t\t\t\t// by the application, zero out message, wParam and lParam", "-\t\t\t\t\t\t\tmsg.message = OS.WM_NULL;", "-\t\t\t\t\t\t\tmsg.wParam = 0;", "-\t\t\t\t\t\t\tmsg.lParam = 0;", "-\t\t\t\t\t\t\tOS.MoveMemory(lParam, msg, MSG.sizeof);", "-\t\t\t\t\t\t\treturn 0;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tconsumed = frame.translateOleAccelerator(msg);", "+\t\t\t\t\t/* Allow OleClientSite to process key events before activeX control */", "+\t\t\t\t\tif (!consumed) {", "+\t\t\t\t\t\tint flags = OS.PM_REMOVE | OS.PM_NOYIELD | OS.PM_QS_INPUT | OS.PM_QS_POSTMESSAGE;", "+\t\t\t\t\t\tint hwndOld = msg.hwnd;", "+\t\t\t\t\t\tmsg.hwnd = site.handle;", "+\t\t\t\t\t\tconsumed = OS.DispatchMessage (msg) == 1;", "+\t\t\t\t\t\tmsg.hwnd = hwndOld;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (consumed) {", "+\t\t\t\t\t\t// In order to prevent this message from also being processed", "+\t\t\t\t\t\t// by the application, zero out message, wParam and lParam", "+\t\t\t\t\t\tmsg.message = OS.WM_NULL;", "+\t\t\t\t\t\tmsg.wParam = msg.lParam = 0;", "+\t\t\t\t\t\tOS.MoveMemory(lParam, msg, MSG.sizeof);", "+\t\t\t\t\t\treturn 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "472860fd9d6c1dca43f5daa20afce6cc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "987af0c1a8e50b91610dc708ae32ccb823d7730d", "commitAfterChange": "364f2b857656c5e7701da71aae15e84ab16b2eb2", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["+\t\t\t* ", "+\t\t\t* NOTE: The header tooltip can subclass the header proc so the", "+\t\t\t* current proc must be restored or header tooltips stop working.", "-\t\t\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) {", "+\t\t\tint oldProc = 0;", "+\t\t\tboolean fixSubclass = !hasChildren () && !hooks (SWT.Paint) && !filters (SWT.Paint);", "+\t\t\tif (fixSubclass) {", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\toldProc = OS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, HeaderProc);", "-\t\t\tsubclass ();", "+\t\t\tif (fixSubclass) {", "+\t\t\t\tsubclass ();", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tOS.SetWindowLong (hwndHeader, OS.GWL_WNDPROC, oldProc);", "+\t\t\t}"]}], "num": 35142}