{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40ce34dcd9da078641a02a25bdd5dccf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15d5f1fb8a703ac120a5cbd7f7ae80f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "f7e5b6517c8145c41edb4cee11eaf48a485d125a", "commitAfterChange": "9cbd0cd7c02cc05e4296cf317d9160ca8585a1f1", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  void initGdip()", "signatureAfterChange": "  void initGdip()", "diff": ["-\tif (gdipGraphics != 0) return ;", "+\tif (gdipGraphics != 0) return;", "+", "+\t/*", "+\t* Bug in GDI+.  GDI+ does not work when the HDC layout is RTL.  There", "+\t* are many issues like pixel corruption, but the most visible problem", "+\t* is that it does not have an effect when drawing to an bitmap.  The", "+\t* fix is to clear the bit before creating the GDI+ graphics and install", "+\t* a mirroring matrix ourselfs.", "+\t*/", "+\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\tOS.SetLayout(handle, OS.GetLayout(handle) & ~OS.LAYOUT_RTL);", "+\t}", "+", "+\tif ((data.style & SWT.MIRRORED) != 0) {", "+\t\tint matrix = identity();", "+\t\tGdip.Graphics_SetTransform(gdipGraphics, matrix);", "+\t\tGdip.Matrix_delete(matrix);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb7602e3d8a074d73e5138350abef2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int gtk_motion_notify_event (int widget, int eventPtr)", "signatureAfterChange": "  int gtk_motion_notify_event (int widget, int eventPtr)", "diff": ["+\tif ((parent.style & SWT.MIRRORED) != 0) event.x = parent.getClientWidth() - width  - event.x;", "+\t\tif ((parent.style & SWT.MIRRORED) != 0) lastX = parent.getClientWidth () - width  - lastX;", "-\t\tsetBounds (lastX, lastY, width, height);", "+\t\tsetBounds (event.x, lastY, width, height);"]}], "num": 7067}