{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "210377409bda174601e75010eb7aaf36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f154c87ecbef348ed23bdeea485aa11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4ae7c7f058994a04613cca5e83c6754094e0435f", "commitAfterChange": "630867c677acb403ca1cea9965df17e2af419fee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["+\tGCData data = gc.data;", "+\tint /*long*/ cairo = data.cairo;", "-\t\tOS.gdk_draw_layout(gc.data.drawable, gc.handle, x, y, layout);", "+\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\tCairo.cairo_move_to(cairo, x, y);", "+\t\t\tOS.pango_cairo_show_layout(cairo, layout);", "+\t\t} else {", "+\t\t\tOS.gdk_draw_layout(data.drawable, gc.handle, x, y, layout);", "+\t\t}", "-\t\t\tOS.gdk_draw_layout_with_colors(gc.data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tint /*long*/ ptr = OS.pango_layout_get_text(layout);", "+\t\t\t\tdrawWithCairo(cairo, x, y, 0, OS.strlen(ptr), fullSelection, selectionBackground.handle, selectionForeground.handle);", "+\t\t\t} else {", "+\t\t\t\tOS.gdk_draw_layout_with_colors(data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\t}", "-\t\t\tRegion clipping = new Region();", "-\t\t\tgc.getClipping(clipping);", "-\t\t\tOS.gdk_draw_layout(gc.data.drawable, gc.handle, x, y, layout);", "-\t\t\tint[] ranges = new int[]{byteSelStart, byteSelEnd};", "-\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "-\t\t\tif (rgn != 0) {", "-\t\t\t\tOS.gdk_gc_set_clip_region(gc.handle, rgn);", "-\t\t\t\tOS.gdk_region_destroy(rgn);", "+\t\t\tif (cairo != 0 && OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "+\t\t\t\tdrawWithCairo(cairo, x, y, byteSelStart, byteSelEnd, fullSelection, selectionBackground.handle, selectionForeground.handle);", "+\t\t\t} else {", "+\t\t\t\tRegion clipping = new Region();", "+\t\t\t\tgc.getClipping(clipping);", "+\t\t\t\tOS.gdk_draw_layout(data.drawable, gc.handle, x, y, layout);", "+\t\t\t\tint[] ranges = new int[]{byteSelStart, byteSelEnd};", "+\t\t\t\tint /*long*/ rgn = OS.gdk_pango_layout_get_clip_region(layout, x, y, ranges, ranges.length / 2);", "+\t\t\t\tif (rgn != 0) {", "+\t\t\t\t\tOS.gdk_gc_set_clip_region(gc.handle, rgn);", "+\t\t\t\t\tOS.gdk_region_destroy(rgn);", "+\t\t\t\t}", "+\t\t\t\tOS.gdk_draw_layout_with_colors(data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "+\t\t\t\tgc.setClipping(clipping);", "+\t\t\t\tclipping.dispose();", "-\t\t\tOS.gdk_draw_layout_with_colors(gc.data.drawable, gc.handle, x, y, layout, selectionForeground.handle, selectionBackground.handle);", "-\t\t\tgc.setClipping(clipping);", "-\t\t\tclipping.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426489a0d5bc91373cad666b07560571", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 6, "signatureBeforeChange": "  @Override public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  @Override public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+", "+\t//For Date and Time, we cache the preffered size as there is no need to recompute it.", "+\tif (!changed && (isDate () || isTime ()) && OS.GTK3 && prefferedSize != null) {", "+\t\twidth = (wHint != SWT.DEFAULT) ? wHint : prefferedSize.x;", "+\t\theight= (hHint != SWT.DEFAULT) ? hHint : prefferedSize.y;", "+\t\treturn new Point (width,height);", "+\t}", "+", "-\t\tif ((style & SWT.CALENDAR) != 0) {", "-\t\t\tPoint size = computeNativeSize(handle, wHint, hHint, changed);", "+\t\tif (isCalendar ()) {", "+\t\t\tPoint size = computeNativeSize (containerHandle, wHint, hHint, changed);", "-\t\t} else { /* SWT.DATE and SWT.TIME */", "-\t\t\tGC gc = new GC(text);", "-\t\t\tPoint textSize = gc.stringExtent(getComputeSizeString(style));", "-\t\t\tgc.dispose();", "-\t\t\tRectangle trim = text.computeTrim(0, 0, textSize.x, textSize.y);", "-\t\t\tPoint buttonSize = down.computeSize(SWT.DEFAULT, SWT.DEFAULT, changed);", "-\t\t\twidth = trim.width + buttonSize.x;", "-\t\t\theight = Math.max(trim.height, buttonSize.y);", "+\t\t} else {", "+\t\t\tPoint textSize = computeNativeSize (textEntryHandle, wHint, hHint, changed);", "+\t\t\tRectangle trim = computeTrim (0,0, textSize.x,textSize.y);", "+\t\t\tif (isDateWithDropDownButton ()){", "+\t\t\t\tPoint buttonSize = down.computeSize (SWT.DEFAULT, SWT.DEFAULT, changed);", "+\t\t\t\twidth = trim.width + buttonSize.x;", "+\t\t\t\theight = Math.max (trim.height, buttonSize.y);", "+\t\t\t} else if (isDate () || isTime ()) {", "+\t\t\t\tif (OS.GTK3) {", "+\t\t\t\t\twidth = trim.width;", "+\t\t\t\t\theight = trim.height;", "+\t\t\t\t} else", "+\t\t\t\t{ //in GTK2, spin button looks broken if you incorperate the trim. Thus do not compute trim.", "+\t\t\t\t\twidth = textSize.x;", "+\t\t\t\t\theight = textSize.y;", "+\t\t\t\t}", "+\t\t\t}", "-\treturn new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+", "+\tif (prefferedSize == null && (isDateWithDropDownButton () && OS.GTK3)) {", "+\t\tprefferedSize = new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+\t\treturn prefferedSize;", "+\t} else {", "+\t\treturn new Point (width + 2*borderWidth, height+ 2*borderWidth);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7994fd8caf1cc119d3d0b4de46e6b7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "165a14baa4f28638048d0b616f73e1b86413e4a2", "commitAfterChange": "195c35fb4aaf6777b97d64fa53ba79208d6d54ee", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public Rectangle getThumbTrackBounds ()", "signatureAfterChange": " public Rectangle getThumbTrackBounds ()", "diff": ["+\tGtkAllocation allocation = new GtkAllocation ();", "+\tint stepperSize = 0;\t", "-\t\tint stepperSize = OS.GTK_WIDGET_WIDTH (handle);", "-\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\tstepperSize = allocation.width;", "+\t\t\tx = allocation.x;", "+\t\t} else {", "+\t\t\tstepperSize = OS.GTK_WIDGET_WIDTH (handle);\t", "+\t\t\tx = OS.GTK_WIDGET_X (handle);", "+\t\t}", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle) - y;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\twidth = allocation.width;", "+\t\t\theight = allocation.height - y;\t", "+\t\t} else {", "+\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "+\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle) - y;\t", "+\t\t}", "-\t\tint stepperSize = OS.GTK_WIDGET_HEIGHT (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\tOS.gtk_widget_get_allocation(handle, allocation);", "+\t\t\tstepperSize = allocation.height;", "+\t\t} else {", "+\t\t\tstepperSize = OS.GTK_WIDGET_HEIGHT (handle);\t", "+\t\t}", "-\t\ty = OS.GTK_WIDGET_Y (handle);", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle) - x;", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\ty = allocation.y;", "+\t\t\twidth = allocation.width -x;", "+\t\t} else {", "+\t\t\ty = OS.GTK_WIDGET_Y (handle);", "+\t\t\twidth = OS.GTK_WIDGET_WIDTH (handle) - x;\t", "+\t\t}", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "+\t\t\theight = allocation.height;", "+\t\t} else {", "+\t\t\theight = OS.GTK_WIDGET_HEIGHT (handle);\t", "+\t\t}"]}], "num": 19296}