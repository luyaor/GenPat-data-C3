{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b59187a200c0b465f62ac00f84eb625", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "285fa8a785579710896ec9e20518bc88", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public Rectangle getBounds(int start, int end)", "signatureAfterChange": " public Rectangle getBounds(int start, int end)", "diff": ["-\t//TODO", "-\treturn getBounds();", "+\tint length = text.length();", "+\tif (length == 0) return new Rectangle(0, 0, 0, 0);", "+\tif (start > end) return new Rectangle(0, 0, 0, 0);", "+\tstart = Math.min(Math.max(0, start), length - 1);", "+\tend = Math.min(Math.max(0, end), length - 1);", "+\tstart = translateOffset(start);", "+\tend = translateOffset(end);", "+\tNSRange range = new NSRange();", "+\trange.location = layoutManager.glyphIndexForCharacterAtIndex(start);", "+\trange.length = layoutManager.glyphIndexForCharacterAtIndex(end + 1) - range.location;", "+\tNSRect rect = layoutManager.boundingRectForGlyphRange(range, textContainer);", "+\treturn new Rectangle((int)rect.x, (int)rect.y, (int)Math.ceil(rect.width), (int)Math.ceil(rect.height));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb497020f7b925cf4903c5879cfdac8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "a0f9d64942b79177b3cd39b251a67144c28fee9f", "commitAfterChange": "950ac4372cf4962c3ea708dfb4a975b7d8e7d719", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tNSString str;", "+\tif (!(start <= end && 0 <= end)) return \"\"; //$NON-NLS-1$", "-\t\tstr = new NSTextFieldCell(((NSTextField)view).cell()).title();", "-\t\t ", "-\t} else {", "-\t\tstr = null;", "-//\t\treturn getTXNText (OS.kTXNStartOffset, OS.kTXNEndOffset);", "+\t\tNSString string = new NSTextFieldCell(((NSTextField)view).cell()).title();", "+\t\tif (string == null) return \"\"; //$NON-NLS-1$", "+\t\tend = Math.min (end, string.length() - 1);", "+\t\tif (start > end) return \"\"; //$NON-NLS-1$", "+\t\tstart = Math.max (0, start);", "+\t\tchar[] buffer = new char[string.length()];", "+\t\tstring.getCharacters_(buffer);", "+\t\treturn new String(buffer, start, end - start + 1);", "-\tif (str == null) return \"\";", "-\tchar[] buffer = new char[str.length()];", "-\tstr.getCharacters_(buffer);", "-\treturn new String(buffer, start, end - start);", "+\tNSTextStorage storage = ((NSTextView)view).textStorage();", "+\tend = Math.min (end, storage.length() - 1);", "+\tif (start > end) return \"\"; //$NON-NLS-1$", "+\tstart = Math.max (0, start);", "+\tNSRange range = new NSRange();", "+\trange.location = start;", "+\trange.length = end - start + 1;", "+\tNSAttributedString substring = storage.attributedSubstringFromRange(range);", "+\tNSString string = substring.string();", "+\tchar[] buffer = new char[string.length()];", "+\tstring.getCharacters_(buffer);", "+\treturn new String(buffer);"]}], "num": 44623}