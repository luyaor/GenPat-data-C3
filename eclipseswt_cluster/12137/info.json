{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1458ce6cd565fde937241020d4a9f92", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df2783b4c943d0b42096673053b4f26", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "signatureAfterChange": "  void drawWidget (int control, int context, int damageRgn, int visibleRgn, int theEvent)", "diff": ["-void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent) {", "+void drawWidget (int control, int context, int damageRgn, int visibleRgn, int theEvent) {", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (handle, rect);", "-\t\tif ((style & SWT.SEPARATOR) != 0 && this.control == null) {", "-\t\t\trect.top += 2;", "-\t\t\trect.bottom -= 2;", "-\t\t\tOS.DrawThemeSeparator (rect, state);", "-\t\t}", "-\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\tint height = rect.bottom - rect.top;", "-\t\t\trect.top = (short) (rect.bottom - (height / 2) - 1);", "-\t\t\trect.left = (short) (rect.right - ARROW_WIDTH);", "-\t\t\tOS.DrawThemePopupArrow (rect, (short) OS.kThemeArrowDown, (short) OS.kThemeArrow5pt, state, 0, 0);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGRect rect = new CGRect ();", "+\t\t\tOS.HIViewGetBounds (handle, rect);", "+\t\t\tif ((style & SWT.SEPARATOR) != 0 && this.control == null) {", "+\t\t\t\trect.y += 2;", "+\t\t\t\trect.height -= 4;", "+\t\t\t\tHIThemeSeparatorDrawInfo info = new HIThemeSeparatorDrawInfo ();", "+\t\t\t\tinfo.state = state;", "+\t\t\t\tOS.HIThemeDrawSeparator (rect, info, context, OS.kHIThemeOrientationNormal);", "+\t\t\t}", "+\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\t\trect.y = rect.height / 2 - 1;", "+\t\t\t\trect.x = rect.width - ARROW_WIDTH;", "+\t\t\t\tHIThemePopupArrowDrawInfo info = new HIThemePopupArrowDrawInfo ();", "+\t\t\t\tinfo.state = state;", "+\t\t\t\tinfo.orientation = (short) OS.kThemeArrowDown;", "+\t\t\t\tinfo.size = (short) OS.kThemeArrow5pt;", "+\t\t\t\tOS.HIThemeDrawPopupArrow (rect, info, context, OS.kHIThemeOrientationNormal);", "+\t\t\t}\t\t\t", "+\t\t} else {", "+\t\t\tRect rect = new Rect ();", "+\t\t\tOS.GetControlBounds (handle, rect);", "+\t\t\tif ((style & SWT.SEPARATOR) != 0 && this.control == null) {", "+\t\t\t\trect.top += 2;", "+\t\t\t\trect.bottom -= 2;", "+\t\t\t\tOS.DrawThemeSeparator (rect, state);", "+\t\t\t}", "+\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\t\tint height = rect.bottom - rect.top;", "+\t\t\t\trect.top = (short) (rect.bottom - (height / 2) - 1);", "+\t\t\t\trect.left = (short) (rect.right - ARROW_WIDTH);", "+\t\t\t\tOS.DrawThemePopupArrow (rect, (short) OS.kThemeArrowDown, (short) OS.kThemeArrow5pt, state, 0, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5297c8566d8895660dff06938c2411", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "0279ac89ad933bec67322b956321e83b2a1ac93a", "commitAfterChange": "dbc3f579c8454ac59e01ac2d56752eda0d58b6cd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void drawImageWithFrameInView (int id, int sel, int image, NSRect rect, int view)", "signatureAfterChange": "  void drawImageWithFrameInView (int id, int sel, int image, NSRect rect, int view)", "diff": ["-\tcallSuper (id, sel, image, rect, view);", "+\tint /*long*/ cgContext = NSGraphicsContext.currentContext().graphicsPort();", "+\tNSCell cell = new NSCell(id);", "+\tboolean drawSelected = (parent.nsToolbar != null) && getSelection() && ((style & SWT.CHECK) != 0) && !cell.isHighlighted();", "+", "+\tif (drawSelected) {", "+\t\tNSGraphicsContext.currentContext().saveGraphicsState();", "+\t\tCGRect cgRect = new CGRect();", "+\t\tcgRect.origin.x = rect.x;", "+\t\tcgRect.origin.y = rect.y;", "+\t\tcgRect.size.width = rect.width;", "+\t\tcgRect.size.height = rect.height;", "+\t\tOS.CGContextBeginTransparencyLayerWithRect(cgContext, cgRect, 0);", "+\t}", "+", "+\tsuper.drawImageWithFrameInView(id, sel, image, rect, view);", "+", "+\tif (drawSelected) {", "+\t\tNSColor.colorWithCalibratedRed(0,0,0,.3f).setFill();", "+\t\tOS.NSRectFillUsingOperation(rect, OS.NSCompositeSourceAtop);", "+\t\tOS.CGContextEndTransparencyLayer(cgContext);", "+\t\tNSGraphicsContext.currentContext().restoreGraphicsState();", "+\t}", "+}"]}], "num": 12137}