{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24a66ab40ec093b2b150112cace8782d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1b33a4f0506eaa87a3d83080c64380", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7eb4a5c25b1a8d792caa8831ff0270201ed1cba5", "commitAfterChange": "ea56eb1d77331a78b6a356377f8f6d91d536206f", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " boolean sendKeyEvent (NSEvent nsEvent, int type)", "signatureAfterChange": " boolean sendKeyEvent (NSEvent nsEvent, int type)", "diff": ["+\t\t\tswitch (event.keyCode) {", "+\t\t\t\tcase SWT.BS: event.character = '\\b'; break;", "+\t\t\t\tcase SWT.DEL: event.character = 0x7F; break;", "+\t\t\t}", "-\t\t\t/* ", "-\t\t\t* Feature on OSX.  The backspace key (labeled Delete on Mac keyboards) is mapped to SWT's", "-\t\t\t* Delete key code.  Fix the Backspace and Delete cases to be consistent with other platforms.", "-\t\t\t*/", "-\t\t\tif (event.keyCode == 127) {", "-\t\t\t\tevent.keyCode = event.character = '\\b';", "-\t\t\t} else if ((event.keyCode & 0xFFFF) == OS.NSDeleteFunctionKey) {", "-\t\t\t\tevent.keyCode = event.character = 127;", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae66948be909c749633884902f9d9c4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["-\tMacControlEvent mce= (MacControlEvent) callData;", "+\t//if (!hooks (SWT.Paint)) return 0;", "+\t", "+\t/*", "+\tif (!fVisible || fDrawCount > 0) {", "+\t\tSystem.out.println(\"Control.processPaint: premature exit\");", "+\t\treturn 0;", "+\t}", "+\t*/", "+    /* AW", "+\tevent.count = xEvent.count;", "+\tevent.time = OS.XtLastTimestampProcessed (xDisplay);", "+    */", "+    ", "-\tRectangle r= gc.carbon_focus(mce.getDamageRegionHandle(), mce.getGCContext());", "+\tMacControlEvent me= (MacControlEvent) callData;", "+\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "-\t\t// erase background", "-\t\tif ((state & CANVAS) != 0 && (style & SWT.NO_BACKGROUND) == 0)", "-\t\t\tgc.fillRectangle(r);", "-\t\tif (hooks (SWT.Paint) || filters (SWT.Paint)) {", "+\t\t\t\t", "+\t\tif (!MacUtil.HIVIEW) {", "+\t\t\t// erase background", "+\t\t\t//if ((state & CANVAS) != 0) {", "+\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\t//gc.setBackground(getDisplay().getSystemColor(SWT.COLOR_YELLOW));", "+\t\t\t\t\tgc.fillRectangle(r);", "+\t\t\t\t}", "+\t\t\t//}", "+\t\t}", "+\t\t", "+\t\tif (hooks (SWT.Paint)) {", "-\t\t\t//event.count = xEvent.count;", "-\t\t\t//event.time = OS.XtLastTimestampProcessed (xDisplay);", "+\t\t\t", "+\t", "+\t", "-\treturn OS.noErr;", "+", "+\treturn 0;"]}], "num": 16864}