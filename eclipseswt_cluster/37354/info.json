{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16c80b35c968e7c2a19325c28705ec2d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479f3623a0c0dd86857c34b2fd65ac68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": " void doPageUp(int stateMask)", "signatureAfterChange": " Image getCollapsedImage()", "diff": ["-}", "-void doPageUp(int stateMask) {", "-\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\tnewFocusIndex = Math.max(newFocusIndex, 0);", "-\t\tTreeItem2 item = availableItems[newFocusIndex];", "-\t\tselectItem(item, false);", "-\t\tsetFocusItem(item, true);", "-\t\tshowItem(item);", "-\t\tredrawItem(item.availableIndex);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\t\tnewFocusIndex = Math.max(newFocusIndex, 0);", "-\t\t\tTreeItem2 item = availableItems[newFocusIndex];", "-\t\t\tselectItem(item, false);", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(item.availableIndex);", "-\t\t\treturn;", "-\t\t}", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif (focusItem.availableIndex != topIndex) {", "-\t\t\tsetFocusItem(availableItems[topIndex], true);", "-\t\t\tredrawItem(topIndex);", "-\t\t\treturn;", "-\t\t}", "-\t\tif (focusItem.availableIndex == 0) return;\t\t/* at top */", "-\t\tint newTopIndex = Math.max(0, topIndex - visibleItemCount + 1);", "-\t\tsetFocusItem(availableItems[newTopIndex], false);", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\t/* SWT.SHIFT */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint selectIndex = Math.max(0,focusItem.availableIndex - visibleItemCount + 1);", "-\tTreeItem2 selectedItem = availableItems[selectIndex];", "-\tTreeItem2[] newSelection = new TreeItem2 [Math.abs(anchorIndex - selectIndex) + 1];", "-\tint step = anchorIndex < selectIndex ? 1 : -1;", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "-\t\tnewSelection[writeIndex++] = availableItems[i];", "-\t}", "-\tnewSelection[writeIndex] = availableItems[selectIndex];", "-\tsetSelection(newSelection);", "-\tsetFocusItem(selectedItem, true);", "-\tshowItem(selectedItem);", "-\tEvent newEvent = new Event();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent(SWT.Selection, newEvent);", "-}", "+ */", "+Image getCollapsedImage() {", "+\tif (collapsedImage == null) {", "+\t\tcollapsedImage = new Image(display, CollapsedImageData);", "+\t}", "+\treturn collapsedImage;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ead79d447867e6f904b2b42a0f13fe1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 41, "signatureBeforeChange": " void doArrowDown (int stateMask)", "signatureAfterChange": " static void initializeImageData()", "diff": ["-}", "-void doArrowDown (int stateMask) {", "-\tif ((stateMask & SWT.SHIFT) == 0 && (stateMask & SWT.CTRL) == 0) {", "-\t\tint newFocusIndex = focusItem.availableIndex + 1;", "-\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\t\tselectItem(availableItems[newFocusIndex], false);", "-\t\tsetFocusItem(availableItems[newFocusIndex], true);", "-\t\tredrawItem(newFocusIndex);", "-\t\tshowItem(availableItems[newFocusIndex]);", "-\t\tEvent newEvent = new Event();", "-\t\tnewEvent.item = this;", "-\t\tsendEvent(SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "-\t\t\ttopIndex++;", "-\t\t\tgetVerticalBar().setSelection(topIndex);", "-\t\t\tRectangle clientArea = getClientArea();", "-\t\t\tGC gc = new GC(this);", "-\t\t\tgc.copyArea(", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, -itemHeight);", "-\t\t\tgc.dispose();", "-\t\t\treturn;", "-\t\t}", "-\t\tint newFocusIndex = focusItem.availableIndex + 1;", "-\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\t\tselectItem(availableItems[newFocusIndex], false);", "-\t\tsetFocusItem(availableItems[newFocusIndex], true);", "-\t\tredrawItem(newFocusIndex);", "-\t\tshowItem(availableItems[newFocusIndex]);", "-\t\tEvent newEvent = new Event();", "-\t\tnewEvent.item = this;", "-\t\tsendEvent(SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "-\t\t\ttopIndex++;", "-\t\t\tgetVerticalBar().setSelection(topIndex);", "-\t\t\tRectangle clientArea = getClientArea();", "-\t\t\tGC gc = new GC(this);", "-\t\t\tgc.copyArea(", "-\t\t\t\t0, 0,", "-\t\t\t\tclientArea.width, clientArea.height,", "-\t\t\t\t0, -itemHeight);", "-\t\t\tgc.dispose();", "-\t\t\treturn;", "-\t\t}", "-\t\tint focusIndex = focusItem.availableIndex; ", "-\t\tif (focusIndex == availableItems.length - 1) return;\t/* at bottom */", "-\t\tTreeItem2 newFocusItem = availableItems[focusIndex + 1];", "-\t\tsetFocusItem(newFocusItem, true);", "-\t\tshowItem(newFocusItem);", "-\t\tredrawItem(newFocusItem.availableIndex);", "-\t\treturn;", "-\t}", "-\tint newFocusIndex = focusItem.availableIndex + 1;", "-\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tselectItem(availableItems[newFocusIndex], true);", "-\tsetFocusItem(availableItems[newFocusIndex], true);", "-\tredrawItem(newFocusIndex);", "-\tshowItem(availableItems[newFocusIndex]);", "-\tEvent newEvent = new Event();", "-\tnewEvent.item = this;", "-\tsendEvent(SWT.Selection, newEvent);", "-}", "+ */", "+static void initializeImageData() {", "+\tPaletteData fourBit = new PaletteData(", "+\t\tnew RGB[] {new RGB(0, 0, 0), new RGB (128, 0, 0), new RGB (0, 128, 0), new RGB (128, 128, 0), new RGB (0, 0, 128), new RGB (128, 0, 128), new RGB (0, 128, 128), new RGB (128, 128, 128), new RGB (192, 192, 192), new RGB (255, 0, 0), new RGB (0, 255, 0), new RGB (255, 255, 0), new RGB (0, 0, 255), new RGB (255, 0, 255), new RGB (0, 255, 255), new RGB (255, 255, 255)});", "+\t", "+\tCollapsedImageData = new ImageData(", "+\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t// width, height, depth", "+\t\tfourBit, 4,", "+\t\tnew byte[] {119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0, 127, 0, 0, 15, 112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0, 127, -1, 15, -1, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "+\tCollapsedImageData.transparentPixel = 15;\t\t\t// use white for transparency", "+\tExpandedImageData = new ImageData(", "+\t\t9, 9, 4, \t\t\t\t\t\t\t\t\t\t// width, height, depth", "+\t\tfourBit, 4,", "+\t\tnew byte[] {119, 119, 119, 119, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, 0, 0, 15, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 127, -1, -1, -1, 112, 0, 0, 0, 119, 119, 119, 119, 112, 0, 0, 0});", "+\tExpandedImageData.transparentPixel = 15;\t\t\t// use white for transparency", "+}"]}], "num": 37354}