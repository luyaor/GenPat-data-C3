{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "20b28a65899554f702b55550257eee80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1625b00fb6b358e511f1917d8ef573a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "99e0a1867a438da276ff0ae73d406d471f437071", "commitAfterChange": "0d2f1849f1c2d624e949f8423d4acfbeacdecd34", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["-\tcolumn.id = COLUMN_ID + idCount++;", "+\tcolumn.id = column_id + idCount++;", "-\tfor (int i=0; i<itemCount; i++) {", "-\t\tTableItem item = items [i];", "-\t\tfor (int j=columnCount-1; j>index; --j) {", "-\t\t\t// TODO - don't call setter", "-\t\t\titem.setText (j, item.getText (j - 1));", "-\t\t\titem.setImage (j, item.getImage (j - 1));", "-\t\t}", "-\t\tif (columnCount > 1) {\t\t", "-\t\t\titem.setText (index, \"\");", "-\t\t\titem.setImage (index, null);", "-\t\t", "+\tif (columnCount > 1) {", "+\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\tTableItem item = items [i];", "+\t\t\tImage [] images = item.images;", "+\t\t\tif (images != null) {", "+\t\t\t\tImage [] temp = new Image [columnCount];", "+\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (images, index, temp, index+1, columnCount-index-1);", "+\t\t\t\titems [i].images = temp;", "+\t\t\t}", "+\t\t\tString [] strings = item.strings;", "+\t\t\tif (strings != null) {", "+\t\t\t\tString [] temp = new String [columnCount];", "+\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (strings, index, temp, index+1, columnCount-index-1);", "+\t\t\t\ttemp [index] = \"\";", "+\t\t\t\titems [i].strings = temp;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6aae830b8eb9e2a7aff2865596149e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "99e0a1867a438da276ff0ae73d406d471f437071", "commitAfterChange": "0d2f1849f1c2d624e949f8423d4acfbeacdecd34", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["-\tfor (int i=0; i<itemCount; i++) {", "-\t\tTableItem item = items [i];", "-\t\tfor (int j=index; j<columnCount-1; j++) {", "-\t\t\t// TODO - don't call setter", "-\t\t\titem.setText (j, item.getText (j + 1));", "-\t\t\titem.setImage (j, item.getImage (j + 1));", "-\t\t}", "-\t\tif (columnCount > 1) {", "-\t\t\titem.setText (columnCount - 1, \"\");", "-\t\t\titem.setImage (columnCount - 1, null);", "-", "+\tif (columnCount > 1) {", "+\t\tfor (int i=0; i<itemCount; i++) {", "+\t\t\tTableItem item = items [i];", "+\t\t\tImage [] images = item.images;", "+\t\t\tif (images != null) {", "+\t\t\t\tImage [] temp = new Image [columnCount - 1];", "+\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (images, index +1, temp, index, columnCount - 1 - index);", "+\t\t\t\titems [i].images = temp;", "+\t\t\t}", "+\t\t\tString [] strings = item.strings;", "+\t\t\tif (strings != null) {", "+\t\t\t\tString [] temp = new String [columnCount - 1];", "+\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\titems [i].strings = temp;", "+\t\t\t}", "-\t\t//TODO - reassign COLUMN_ID when last column deleted", "+\t\tcolumn_id = column.id; idCount = 0;", "+\t\tDataBrowserListViewHeaderDesc desc = new DataBrowserListViewHeaderDesc ();", "+\t\tdesc.version = OS.kDataBrowserListViewLatestHeaderDesc;", "+\t\tshort [] width = new short [1];", "+\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "+\t\tdesc.minimumWidth = desc.maximumWidth = width [0];", "+\t\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, new char [0], 0);", "+\t\tdesc.titleString = str;", "+\t\tOS.SetDataBrowserListViewHeaderDesc (handle, column_id, desc);", "+\t\tOS.CFRelease (str);"]}], "num": 17863}