{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5352874348243bcaf9801fd773b69c68", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e058b0bbc1a62a292b083fce4972f47b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (long aWebProgress, long aRequest, int aStateFlags, int aStatus)", "diff": ["-int OnStateChange (int /*long*/ aWebProgress, int /*long*/ aRequest, int aStateFlags, int aStatus) {", "+int OnStateChange (long /*int*/ aWebProgress, long /*int*/ aRequest, int aStateFlags, int aStatus) {", "-\t\tint /*long*/ name = XPCOM.nsEmbedCString_new ();", "+\t\tlong /*int*/ name = XPCOM.nsEmbedCString_new ();", "-\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (name);", "+\t\t\tlong /*int*/ buffer = XPCOM.nsEmbedCString_get (name);", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];", "-\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\tlong /*int*/[] window = new long /*int*/[1];", "-\t\t\tint /*long*/ name = XPCOM.nsEmbedCString_new ();", "+\t\t\tlong /*int*/ name = XPCOM.nsEmbedCString_new ();", "-\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (name);", "+\t\t\tlong /*int*/ buffer = XPCOM.nsEmbedCString_get (name);", "-\t\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new (aString, aString.length);", "+\t\t\t\tlong /*int*/ aSpec = XPCOM.nsEmbedCString_new (aString, aString.length);", "-\t\t\t\tint /*long*/ aContentType = XPCOM.nsEmbedCString_new (contentTypeBuffer, contentTypeBuffer.length);", "+\t\t\t\tlong /*int*/ aContentType = XPCOM.nsEmbedCString_new (contentTypeBuffer, contentTypeBuffer.length);", "-\t\t\t\tint /*long*/ ptr = C.malloc (htmlBytes.length);", "+\t\t\t\tlong /*int*/ ptr = C.malloc (htmlBytes.length);", "-\t\t\t\tint /*long*/ current = ptr;", "+\t\t\t\tlong /*int*/ current = ptr;", "-\t\t\t\tint /*long*/[] window = new int /*long*/[1];", "+\t\t\t\tlong /*int*/[] window = new long /*int*/[1];", "-\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\tlong /*int*/[] result = new long /*int*/[1];", "-\t\t\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new ();", "+\t\t\t\tlong /*int*/ aSpec = XPCOM.nsEmbedCString_new ();", "-\t\t\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "+\t\t\t\tlong /*int*/ buffer = XPCOM.nsEmbedCString_get (aSpec);", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c08fb9ca8d41686f5f453f32f66fca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " void shape (final int hdc, final StyleItem run)", "signatureAfterChange": " void shape (final long hdc, final StyleItem run)", "diff": ["-void shape (final int /*long*/ hdc, final StyleItem run) {", "+void shape (final long /*int*/ hdc, final StyleItem run) {", "-\tint /*long*/ hHeap = OS.GetProcessHeap();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap();", "-\t\tint /*long*/ hFont = OS.GetCurrentObject(hdc, OS.OBJ_FONT);", "-\t\tint /*long*/ newFont = 0;", "+\t\tlong /*int*/ hFont = OS.GetCurrentObject(hdc, OS.OBJ_FONT);", "+\t\tlong /*int*/ newFont = 0;", "-\t\t\tint /*long*/ ssa = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, OS.SCRIPT_STRING_ANALYSIS_sizeof());", "-\t\t\tint /*long*/ metaFileDc = OS.CreateEnhMetaFile(hdc, null, null, null);", "-\t\t\tint /*long*/ oldMetaFont = OS.SelectObject(metaFileDc, hFont);", "+\t\t\tlong /*int*/ ssa = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, OS.SCRIPT_STRING_ANALYSIS_sizeof());", "+\t\t\tlong /*int*/ metaFileDc = OS.CreateEnhMetaFile(hdc, null, null, null);", "+\t\t\tlong /*int*/ oldMetaFont = OS.SelectObject(metaFileDc, hFont);", "-\t\t\tint /*long*/ metaFile = OS.CloseEnhMetaFile(metaFileDc);", "+\t\t\tlong /*int*/ metaFile = OS.CloseEnhMetaFile(metaFileDc);", "-\t\t\t\tint /*long*/ metaFileEnumProc (int /*long*/ hDC, int /*long*/ table, int /*long*/ record, int /*long*/ nObj, int /*long*/ lpData) {", "+\t\t\t\tlong /*int*/ metaFileEnumProc (long /*int*/ hDC, long /*int*/ table, long /*int*/ record, long /*int*/ nObj, long /*int*/ lpData) {", "-\t\t\tint /*long*/ address = callback.getAddress();", "+\t\t\tlong /*int*/ address = callback.getAddress();", "-\t\t\t\t\t\t\tint /*long*/ pFont = getItemFont(pRun);", "+\t\t\t\t\t\t\tlong /*int*/ pFont = getItemFont(pRun);", "-\t\t\t\t\t\t\t\tint /*long*/ nFont = getItemFont(nRun);", "+\t\t\t\t\t\t\t\tlong /*int*/ nFont = getItemFont(nRun);", "-\t\t\t\tint /*long*/[] hNewFont = new int /*long*/[1];", "+\t\t\t\tlong /*int*/[] hNewFont = new long /*int*/[1];", "-\t\t\t\t\tint /*long*/ mLangFont = OS.CreateFontIndirect(logFont);", "-\t\t\t\t\tint /*long*/ oldFont = OS.SelectObject(hdc, mLangFont);", "+\t\t\t\t\tlong /*int*/ mLangFont = OS.CreateFontIndirect(logFont);", "+\t\t\t\t\tlong /*int*/ oldFont = OS.SelectObject(hdc, mLangFont);"]}], "num": 49636}