{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a076edba18e84062d317eeaa141ca3b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6dcddb7d1893738f89b34988fca478a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cbdd91157986b85a261cf2dcb490e1e504e3a9d3", "commitAfterChange": "63f0ecd411e6ee67aae7ff248c6596d6542dd1a0", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  void setItemCount (TreeItem parentItem, int count)", "signatureAfterChange": "   void setItemCount (TreeItem parentItem, int count)", "diff": ["+", "+\tNSOutlineView widget = (NSOutlineView) view;", "+\tint length = Math.max (4, (count + 3) / 4 * 4);", "+\tboolean expanded = parentItem == null || parentItem.getExpanded();", "+\t\t/*", "+\t\t* Note that the item count has to be updated before the call to reloadItem(), but", "+\t\t* the items have to be released after.", "+\t\t*/", "+\t\tif (parentItem == null) {", "+\t\t\tthis.itemCount = count;", "+\t\t} else {", "+\t\t\tparentItem.itemCount = count;", "+\t\t}", "+\t\twidget.reloadItem (parentItem != null ? parentItem.handle : null, expanded);", "-\t}", "-\tif (count > itemCount) {", "-\t\tif ((getStyle() & SWT.VIRTUAL) == 0) {", "+\t\tTreeItem [] newItems = new TreeItem [length];", "+\t\tif (children != null) {", "+\t\t\tSystem.arraycopy (children, 0, newItems, 0, Math.min (count, itemCount));", "+\t\t}", "+\t\tchildren = newItems;", "+\t\tif (parentItem == null) {", "+\t\t\tthis.items = newItems;", "+\t\t} else {", "+\t\t\tparentItem.items = newItems;", "+\t\t}", "+\t} else {", "+\t\tif ((style & SWT.VIRTUAL) == 0) {", "-\t\t\treturn;", "-\t\t} ", "+\t\t} else {", "+\t\t\tTreeItem [] newItems = new TreeItem [length];", "+\t\t\tif (children != null) {", "+\t\t\t\tSystem.arraycopy (children, 0, newItems, 0, Math.min (count, itemCount));", "+\t\t\t}", "+\t\t\tchildren = newItems;", "+\t\t\tif (parentItem == null) {", "+\t\t\t\tthis.items = newItems;", "+\t\t\t\tthis.itemCount = count;", "+\t\t\t} else {", "+\t\t\t\tparentItem.items = newItems;", "+\t\t\t\tparentItem.itemCount = count;", "+\t\t\t}", "+\t\t\twidget.reloadItem (parentItem != null ? parentItem.handle : null, expanded);", "+\t\t}", "-\tint length = Math.max (4, (count + 3) / 4 * 4);", "-\tTreeItem [] newItems = new TreeItem [length];", "-\tif (children != null) {", "-\t\tSystem.arraycopy (children, 0, newItems, 0, Math.min (count, itemCount));", "-\t}", "-\tchildren = newItems;", "-\tif (parentItem == null) {", "-\t\tthis.items = newItems;", "-\t\tthis.itemCount = count;", "-\t} else {", "-\t\tparentItem.items = newItems;", "-\t\tparentItem.itemCount = count;", "-\t}", "-\tNSOutlineView widget = (NSOutlineView) view;", "-\twidget.reloadItem (parentItem != null ? parentItem.handle : null, true);", "-\twidget.noteNumberOfRowsChanged();", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda72447b8d03d075d00263e08dff208", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "d589019807dc8edefe4eebafacf497892e57bece", "commitAfterChange": "7ec2e420459073a76767eaf4412d2bd5b970dc99", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void setItemCount (int count, int hItem, TreeItem parent)", "signatureAfterChange": "  void setItemCount (int count, int hParent, int hItem)", "diff": ["-void setItemCount (int count, int hItem, TreeItem parent) {", "+void setItemCount (int count, int hParent, int hItem) {", "+\tboolean redraw = false;", "+\tif (OS.SendMessage (handle, OS.TVM_GETCOUNT, 0, 0) == 0) {", "+\t\tredraw = drawCount == 0 && OS.IsWindowVisible (handle);", "+\t\tif (redraw) OS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "+\t}", "+\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_PREVIOUS, hItem);", "-\t\t\tTreeItem item = items [tvItem.lParam];", "-\t\t\tif (item != null && !item.isDisposed ()) item.dispose ();", "+\t\t\tTreeItem item = tvItem.lParam != -1 ? items [tvItem.lParam] : null;", "+\t\t\tif (item != null && !item.isDisposed ()) {", "+\t\t\t\titem.dispose ();", "+\t\t\t} else {", "+\t\t\t\treleaseItem (tvItem.hItem, tvItem, false);", "+\t\t\t\tdestroyItem (null, tvItem.hItem);", "+\t\t\t}", "-\t\ttvItem.hItem = hItem;", "-\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);", "-\t\tTreeItem item = items [tvItem.lParam];", "-\t\tif (item != null && !item.isDisposed ()) item.dispose ();", "-\tshrink = true;", "-\tint extra = Math.max (4, (count + 3) / 4 * 4);", "-\tTreeItem [] newItems =  new TreeItem [items.length + extra];", "-\tSystem.arraycopy (items, 0, newItems, 0, Math.min (count, itemCount));", "-\titems = newItems;", "-\tfor (int i=itemCount; i<count; i++) {", "-\t\tif (parent == null) {", "-\t\t\tnew TreeItem (this, SWT.NONE);", "-\t\t} else {", "-\t\t\tnew TreeItem (parent, SWT.NONE);", "+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\tfor (int i=itemCount; i<count; i++) {", "+\t\t\tcreateItem (null, hParent, OS.TVI_LAST, 0);", "+\t} else {", "+\t\tshrink = true;", "+\t\tint extra = Math.max (4, (count + 3) / 4 * 4);", "+\t\tTreeItem [] newItems = new TreeItem [items.length + extra];", "+\t\tSystem.arraycopy (items, 0, newItems, 0, items.length);", "+\t\titems = newItems;", "+\t\tfor (int i=itemCount; i<count; i++) {", "+\t\t\tnew TreeItem (this, SWT.NONE, hParent, OS.TVI_LAST, 0);", "+\t\t}", "+\t}", "+\tif (redraw) {", "+\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\tOS.InvalidateRect (handle, null, true);"]}], "num": 5148}