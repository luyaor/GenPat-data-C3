{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "114fce3e4fb7b8adb22c4cae0bd690a2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479f3623a0c0dd86857c34b2fd65ac68", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": " void doPageUp(int stateMask)", "signatureAfterChange": " Image getCollapsedImage()", "diff": ["-}", "-void doPageUp(int stateMask) {", "-\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\tnewFocusIndex = Math.max(newFocusIndex, 0);", "-\t\tTreeItem2 item = availableItems[newFocusIndex];", "-\t\tselectItem(item, false);", "-\t\tsetFocusItem(item, true);", "-\t\tshowItem(item);", "-\t\tredrawItem(item.availableIndex);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "-\t\t\tnewFocusIndex = Math.max(newFocusIndex, 0);", "-\t\t\tTreeItem2 item = availableItems[newFocusIndex];", "-\t\t\tselectItem(item, false);", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(item.availableIndex);", "-\t\t\treturn;", "-\t\t}", "-\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "-\t\tif (newTopIndex == topIndex) return;", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif (focusItem.availableIndex != topIndex) {", "-\t\t\tsetFocusItem(availableItems[topIndex], true);", "-\t\t\tredrawItem(topIndex);", "-\t\t\treturn;", "-\t\t}", "-\t\tif (focusItem.availableIndex == 0) return;\t\t/* at top */", "-\t\tint newTopIndex = Math.max(0, topIndex - visibleItemCount + 1);", "-\t\tsetFocusItem(availableItems[newTopIndex], false);", "-\t\tsetTopItem(availableItems[newTopIndex]);", "-\t\treturn;", "-\t}", "-\t/* SWT.SHIFT */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint selectIndex = Math.max(0,focusItem.availableIndex - visibleItemCount + 1);", "-\tTreeItem2 selectedItem = availableItems[selectIndex];", "-\tTreeItem2[] newSelection = new TreeItem2 [Math.abs(anchorIndex - selectIndex) + 1];", "-\tint step = anchorIndex < selectIndex ? 1 : -1;", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "-\t\tnewSelection[writeIndex++] = availableItems[i];", "-\t}", "-\tnewSelection[writeIndex] = availableItems[selectIndex];", "-\tsetSelection(newSelection);", "-\tsetFocusItem(selectedItem, true);", "-\tshowItem(selectedItem);", "-\tEvent newEvent = new Event();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent(SWT.Selection, newEvent);", "-}", "+ */", "+Image getCollapsedImage() {", "+\tif (collapsedImage == null) {", "+\t\tcollapsedImage = new Image(display, CollapsedImageData);", "+\t}", "+\treturn collapsedImage;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3f08bb5b015b66b10793f60dcd17d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "b197fadb3502216356123da9439cdb60982a1cd2", "commitAfterChange": "849f9fe02214fcd8662b26bd0db659c0d86c1384", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " void doPageUp(int stateMask)", "signatureAfterChange": " void doPageUp(int stateMask)", "diff": ["+\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\t\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\t// TODO handle modifier key cases", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == (SWT.CTRL | SWT.SHIFT)) {", "+\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem(availableItems[newTopIndex]);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\tint newFocusIndex = focusItem.availableIndex - visibleItemCount + 1;", "+\t\t\tnewFocusIndex = Math.max(newFocusIndex, 0);", "+\t\t\tTreeItem2 item = availableItems[newFocusIndex];", "+\t\t\tselectItem(item, false);", "+\t\t\tsetFocusItem(item, true);", "+\t\t\tshowItem(item);", "+\t\t\tredrawItem(item.availableIndex);", "+\t\t\treturn;", "+\t\t}", "+\t\tint newTopIndex = Math.max (0, topIndex - visibleItemCount);", "+\t\tif (newTopIndex == topIndex) return;", "+\t\tsetTopItem(availableItems[newTopIndex]);", "+\t\treturn;", "+\t}", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif (focusItem.availableIndex != topIndex) {", "+\t\t\tsetFocusItem(availableItems[topIndex], true);", "+\t\t\tredrawItem(topIndex);", "+\t\t\treturn;", "+\t\t}", "+\t\tif (focusItem.availableIndex == 0) return;\t\t/* at top */", "+\t\tint newTopIndex = Math.max(0, topIndex - visibleItemCount + 1);", "+\t\tsetFocusItem(availableItems[newTopIndex], false);", "+\t\tsetTopItem(availableItems[newTopIndex]);", "+\t\treturn;", "+\t}", "+\t/* SWT.SHIFT */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex = Math.max(0,focusItem.availableIndex - visibleItemCount + 1);", "+\tTreeItem2 selectedItem = availableItems[selectIndex];", "+\tTreeItem2[] newSelection = new TreeItem2 [Math.abs(anchorIndex - selectIndex) + 1];", "+\tint step = anchorIndex < selectIndex ? 1 : -1;", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i != selectIndex; i += step) {", "+\t\tnewSelection[writeIndex++] = availableItems[i];", "+\t}", "+\tnewSelection[writeIndex] = availableItems[selectIndex];", "+\tsetSelection(newSelection);", "+\tsetFocusItem(selectedItem, true);", "+\tshowItem(selectedItem);", "+\tEvent newEvent = new Event();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent(SWT.Selection, newEvent);"]}], "num": 12673}