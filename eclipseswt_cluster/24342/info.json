{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e813ad6f85175ee355e4bc38d5631f96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1f8bb8657f56100edd7e71438ce24fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "11d7e622edab38042f1e9855a2ec52dfb4825a8d", "commitAfterChange": "21e3a1c324afd8e1ecf94860a56b2da99d402638", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r int processPaint (int callData)", "signatureAfterChange": "\r int processPaint (int callData)", "diff": ["+\tfinal String plainText = stripMnemonicCodes(this.text);\r", "-\tint preMnemonicWidth = 0, mnemonicWidth = 0;\r", "-\tif (text.length () != 0) {\r", "-\t\tif (mnemonicPos != -1) {\r", "-\t\t\tpreMnemonicWidth = gc.textExtent(text.substring(0, mnemonicPos)).x;\r", "-\t\t\tmnemonicWidth = gc.getAdvanceWidth(text.charAt(mnemonicPos));\r", "-\t\t\tint postMnemonicWidth = gc.textExtent(text.substring(mnemonicPos + 1)).x;\r", "-\t\t\ttextWidth = preMnemonicWidth + mnemonicWidth + postMnemonicWidth;\r", "-\t\t\ttextHeight = gc.textExtent(text).y;\r", "-\t\t} else {\r", "-\t\t\tPoint textExtent = gc.textExtent (text);\r", "-\t\t\ttextWidth = textExtent.x;\r", "-\t\t\ttextHeight = textExtent.y;\r", "-\t\t}\t\r", "+\tif (plainText.length () != 0) {\r", "+\t\tPoint textExtent = gc.textExtent (plainText);\r", "+\t\ttextWidth = textExtent.x;\r", "+\t\ttextHeight = textExtent.y;\r", "-\t\tif (mnemonicPos != -1) {\r", "-\t\t\tint x = textX;\r", "-\t\t\tif (preMnemonicWidth > 0) {\r", "-\t\t\t\tgc.drawText(text.substring(0, mnemonicPos), x, textY, false);\r", "-\t\t\t\tx += preMnemonicWidth;\r", "-\t\t\t}\r", "-\t\t\tif (mnemonicWidth > 0) {\r", "-\t\t\t\tgc.drawText(text.substring(mnemonicPos, mnemonicPos + 1), x, textY, false);\r", "-\t\t\t\t// draw an underscore just like the one Motif uses\r", "-\t\t\t\tFontMetrics fontMetrics = gc.getFontMetrics();\r", "-\t\t\t\tint underlineY = textY + fontMetrics.getHeight();\r", "-\t\t\t\tgc.drawLine(x, underlineY, x + mnemonicWidth, underlineY);\r", "-\t\t\t\t// Should use OS.XmStringDrawUnderline instead, but this functionality\r", "-\t\t\t\t// really belongs in GC so we'll deal with this the right way later.\r", "-\t\t\t\tx += mnemonicWidth;\r", "-\t\t\t}\r", "-\t\t\tif (mnemonicPos < text.length()) gc.drawText(text.substring(mnemonicPos + 1),\r", "-\t\t\t\tx, textY, false);\r", "-\t\t} else {\r", "-\t\t\tgc.drawText(text, textX, textY, false);\r", "-\t\t}\r", "+\t\t/* To display the mnemonic underscore we'll want to use XmStringDrawUnderline here */\r", "+\t\tgc.drawText(plainText, textX, textY, false);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58a49bb81ac3884c3be2e0a49c5a139d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "0350a8749caca9c8ccc77b03be7663653430f1b4", "commitAfterChange": "d582a24e628223c524dff89c036f22608917d014", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r int processPaint (int callData)", "signatureAfterChange": "\r int processPaint (int callData)", "diff": ["+\tint preMnemonicWidth = 0, mnemonicWidth = 0;\r", "-\t\tPoint textExtent = gc.textExtent (text);\r", "-\t\ttextWidth = textExtent.x;\r", "-\t\ttextHeight = textExtent.y;\r", "+\t\tif (mnemonicPos != -1) {\r", "+\t\t\tpreMnemonicWidth = gc.textExtent(text.substring(0, mnemonicPos)).x;\r", "+\t\t\tmnemonicWidth = gc.getAdvanceWidth(text.charAt(mnemonicPos));\r", "+\t\t\tint postMnemonicWidth = gc.textExtent(text.substring(mnemonicPos + 1)).x;\r", "+\t\t\ttextWidth = preMnemonicWidth + mnemonicWidth + postMnemonicWidth;\r", "+\t\t\ttextHeight = gc.textExtent(text).y;\r", "+\t\t} else {\r", "+\t\t\tPoint textExtent = gc.textExtent (text);\r", "+\t\t\ttextWidth = textExtent.x;\r", "+\t\t\ttextHeight = textExtent.y;\r", "+\t\t}\r", "-\tif (textWidth > 0) gc.drawText(text, textX, textY, false);\r", "+\tif (textWidth > 0) {\r", "+\t\tif (mnemonicPos != -1) {\r", "+\t\t\tint x = textX;\r", "+\t\t\tif (preMnemonicWidth > 0) {\r", "+\t\t\t\tgc.drawText(text.substring(0, mnemonicPos), x, textY, false);\r", "+\t\t\t\tx += preMnemonicWidth;\r", "+\t\t\t}\r", "+\t\t\tif (mnemonicWidth > 0) {\r", "+\t\t\t\tgc.drawText(text.substring(mnemonicPos, mnemonicPos + 1), x, textY, false);\r", "+\t\t\t\t// draw an underscore just like the one Motif uses\r", "+\t\t\t\tFontMetrics fontMetrics = gc.getFontMetrics();\r", "+\t\t\t\tint underlineY = textY + fontMetrics.getHeight();\r", "+\t\t\t\tgc.drawLine(x, underlineY, x + mnemonicWidth, underlineY);\r", "+\t\t\t\tx += mnemonicWidth;\r", "+\t\t\t}\r", "+\t\t\tif (mnemonicPos < text.length()) gc.drawText(text.substring(mnemonicPos + 1),\r", "+\t\t\t\tx, textY, false);\r", "+\t\t} else {\r", "+\t\t\tgc.drawText(text, textX, textY, false);\r", "+\t\t}\r", "+\t}\r"]}], "num": 24342}