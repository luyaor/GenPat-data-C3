{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1af06d1f46fc038e1b14282023b69775", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcb6e3f5c022ddba64d909aebe09ce7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "6384119f0991b9686159e4c1ab4031958e1a87bf", "commitAfterChange": "e69ccdf91eaf47c7d23ca34831636ebd90362b25", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int filterProc (int theItem, int infoPtr, int callBackUD, int filterMode)", "signatureAfterChange": "  int filterProc (int theItem, int infoPtr, int callBackUD, int filterMode)", "diff": ["+\tint result = 1;", "-\t\t\t\tOS.AECoerceDesc (theItem, OS.typeFSRef, theItem);", "+\t\t\t\tAEDesc desc = new AEDesc();", "+\t\t\t\tOS.AECoerceDesc (theItem, OS.typeFSRef, desc);", "-\t\t\t\tif (OS.AEGetDescData (theItem, fsRef, fsRef.length) == OS.noErr) {", "+\t\t\t\tif (OS.AEGetDescData (desc, fsRef, fsRef.length) == OS.noErr) {", "+\t\t\t\t\t\t\tresult = 0;", "-\t\t\t\t\t\t\t\tif (filter.equals (\"*\") || filter.equals (\"*.*\")) return 1;", "+\t\t\t\t\t\t\t\tif (filter.equals (\"*\") || filter.equals (\"*.*\")) {", "+\t\t\t\t\t\t\t\t\tresult = 1;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (filter.toLowerCase ().equals(extension.toLowerCase ())) return 1;", "+\t\t\t\t\t\t\t\tif (filter.toLowerCase ().equals(extension.toLowerCase ()))  {", "+\t\t\t\t\t\t\t\t\tresult = 1;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\tOS.AEDisposeDesc(desc);", "-\treturn 1;", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79360416d9ff50d214d491819fde7315", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "570b5fc0d382bc478b5f6f4f7310bb7c3c790232", "commitAfterChange": "78d6ba1a338d9a8dfe511ee0f7c37bb97e3281c6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\theight += hScrollBarWidth();", "-\t\t// FIXME - check for border", "+\t\tint hBarHandle = OS.GTK_SCROLLED_WINDOW_HSCROLLBAR(scrolledHandle);", "+\t\tGtkRequisition requisition = new GtkRequisition();", "+\t\tOS.gtk_widget_size_request(hBarHandle, requisition);", "+\t\theight += requisition.height + OS.GTK_SCROLLED_WINDOW_SCROLLBAR_SPACING(scrolledHandle);", "-\t\tfor (int i = 0; i<count; i++) width += getColumn(i).getWidth();", "+\t\tfor (int i = 0; i<count; i++) {", "+\t\t\twidth += OS.gtk_clist_optimal_column_width(handle, i);", "+\t\t}", "-\t\t// FIXME - check for border"]}], "num": 24331}