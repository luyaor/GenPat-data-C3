{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2553edf17d918f7ce9f625325c198a8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bd2f6d02519e816f2b5a1a664384f17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "03f864053a819bb2c8e3afbda94c0e0bd4fb3b51", "commitAfterChange": "ce858f918bbe31cedabd008a4a19b9547bae0adc", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tint type = event.type;", "-\tswitch (type) {", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.KeyUp: {", "-\t\t\tint vKey = Display.untranslateKey (event.keyCode);", "-\t\t\tif (vKey != 0) {", "-\t\t\t\treturn OS.CGPostKeyboardEvent (0, vKey, type == SWT.KeyDown) == 0;", "-\t\t\t} else {", "-\t\t\t\tvKey = -1;", "-\t\t\t\tint kchrPtr = OS.GetScriptManagerVariable ((short) OS.smKCHRCache);", "-\t\t\t\tint key = -1;", "-\t\t\t\tint [] state = new int [1];", "-\t\t\t\tint [] encoding = new int [1];", "-\t\t\t\tshort keyScript = (short) OS.GetScriptManagerVariable ((short) OS.smKeyScript);", "-\t\t\t\tshort regionCode = (short) OS.GetScriptManagerVariable ((short) OS.smRegionCode);", "-\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, regionCode, null, encoding) == OS.paramErr) {", "-\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, (short) OS.kTextRegionDontCare, null, encoding) == OS.paramErr) {", "-\t\t\t\t\t\tencoding [0] = OS.kTextEncodingMacRoman;", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tint vKey = Display.untranslateKey (event.keyCode);", "+\t\t\t\tif (vKey != 0) {", "+\t\t\t\t\treturn OS.CGPostKeyboardEvent (0, vKey, type == SWT.KeyDown) == 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tvKey = -1;", "+\t\t\t\t\tint kchrPtr = OS.GetScriptManagerVariable ((short) OS.smKCHRCache);", "+\t\t\t\t\tint key = -1;", "+\t\t\t\t\tint [] state = new int [1];", "+\t\t\t\t\tint [] encoding = new int [1];", "+\t\t\t\t\tshort keyScript = (short) OS.GetScriptManagerVariable ((short) OS.smKeyScript);", "+\t\t\t\t\tshort regionCode = (short) OS.GetScriptManagerVariable ((short) OS.smRegionCode);", "+\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, regionCode, null, encoding) == OS.paramErr) {", "+\t\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, (short) OS.kTextRegionDontCare, null, encoding) == OS.paramErr) {", "+\t\t\t\t\t\t\tencoding [0] = OS.kTextEncodingMacRoman;", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tint [] encodingInfo = new int [1];", "-\t\t\t\tOS.CreateUnicodeToTextInfoByEncoding (encoding [0], encodingInfo);", "-\t\t\t\tif (encodingInfo [0] != 0) {", "-\t\t\t\t\tchar [] input = {event.character};", "-\t\t\t\t\tbyte [] buffer = new byte [2];", "-\t\t\t\t\tOS.ConvertFromUnicodeToPString (encodingInfo [0], 2, input, buffer);", "-\t\t\t\t\tOS.DisposeUnicodeToTextInfo (encodingInfo);", "-\t\t\t\t\tkey = buffer [1] & 0x7f;", "-\t\t\t\t}", "-\t\t\t\tif (key == -1) return false;\t\t\t\t", "-\t\t\t\tfor (int i = 0 ; i <= 0x7F ; i++) {", "-\t\t\t\t\tint result1 = OS.KeyTranslate (kchrPtr, (short) (i | 512), state);", "-\t\t\t\t\tint result2 = OS.KeyTranslate (kchrPtr, (short) i, state);", "-\t\t\t\t\tif ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {", "-\t\t\t\t\t\tvKey = i;", "-\t\t\t\t\t\tbreak;", "+\t\t\t\t\tint [] encodingInfo = new int [1];", "+\t\t\t\t\tOS.CreateUnicodeToTextInfoByEncoding (encoding [0], encodingInfo);", "+\t\t\t\t\tif (encodingInfo [0] != 0) {", "+\t\t\t\t\t\tchar [] input = {event.character};", "+\t\t\t\t\t\tbyte [] buffer = new byte [2];", "+\t\t\t\t\t\tOS.ConvertFromUnicodeToPString (encodingInfo [0], 2, input, buffer);", "+\t\t\t\t\t\tOS.DisposeUnicodeToTextInfo (encodingInfo);", "+\t\t\t\t\t\tkey = buffer [1] & 0x7f;", "+\t\t\t\t\tif (key == -1) return false;\t\t\t\t", "+\t\t\t\t\tfor (int i = 0 ; i <= 0x7F ; i++) {", "+\t\t\t\t\t\tint result1 = OS.KeyTranslate (kchrPtr, (short) (i | 512), state);", "+\t\t\t\t\t\tint result2 = OS.KeyTranslate (kchrPtr, (short) i, state);", "+\t\t\t\t\t\tif ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {", "+\t\t\t\t\t\t\tvKey = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (vKey == -1) return false;", "+\t\t\t\t\treturn OS.CGPostKeyboardEvent (key, vKey, type == SWT.KeyDown) == 0;", "-\t\t\t\tif (vKey == -1) return false;", "-\t\t\t\treturn OS.CGPostKeyboardEvent (key, vKey, type == SWT.KeyDown) == 0;", "-\t\t}", "-\t\tcase SWT.MouseDown:", "-\t\tcase SWT.MouseMove: ", "-\t\tcase SWT.MouseUp: {", "-\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "-\t\t\tint chord = OS.GetCurrentEventButtonState ();", "-\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\tmouseCursorPosition.x = event.x;", "-\t\t\t\tmouseCursorPosition.y = event.y;", "-\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "-\t\t\t} else {", "-\t\t\t\tint button = event.button;", "-\t\t\t\tif (button < 1 || button > 5) return false;", "-\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "- \t\t\t\tswitch (button) {", "-\t\t\t\t\tcase 1: {", "-\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove: ", "+\t\t\tcase SWT.MouseUp: {", "+\t\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "+\t\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\tmouseCursorPosition.x = event.x;", "+\t\t\t\t\tmouseCursorPosition.y = event.y;", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tif (button < 1 || button > 5) return false;", "+\t\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "+\t \t\t\t\tswitch (button) {", "+\t\t\t\t\t\tcase 1: {", "+\t\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 2: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 3: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "-\t\t\t\t\tcase 2: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 3: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 4: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\tcase 5: {", "-\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "+\t\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\t\t\tOS.GetGlobalMouse (pt);", "+\t\t\t\t\tmouseCursorPosition.x = pt.h;", "+\t\t\t\t\tmouseCursorPosition.y = pt.v;", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "-\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\tOS.GetGlobalMouse (pt);", "-\t\t\t\tmouseCursorPosition.x = pt.h;", "-\t\t\t\tmouseCursorPosition.y = pt.v;", "-\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "-\t\t}", "-\t\tcase SWT.MouseWheel: {", "-\t\t\treturn OS.CGPostScrollWheelEvent (1, event.count) == 0;", "-\t\t}", "-\t} ", "-\treturn false;", "+\t\t\tcase SWT.MouseWheel: {", "+\t\t\t\treturn OS.CGPostScrollWheelEvent (1, event.count) == 0;", "+\t\t\t}", "+\t\t} ", "+\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b5ac1389b6369df219283e27eb8e393", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9080b56426ba1c9487cec6c9519043946c8b5600", "commitAfterChange": "3523bdf0c87520ba95cbb2f637280ad776e568bc", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public boolean post(Event event)", "signatureAfterChange": " public boolean post(Event event)", "diff": ["-//\t\tint type = event.type;", "-//\t\tswitch (type) {", "-//\t\t\tcase SWT.KeyDown:", "-//\t\t\tcase SWT.KeyUp: {", "-//\t\t\t\tint vKey = Display.untranslateKey (event.keyCode);", "-//\t\t\t\tif (vKey != 0) {", "-//\t\t\t\t\treturn OS.CGPostKeyboardEvent (0, vKey, type == SWT.KeyDown) == 0;", "-//\t\t\t\t} else {", "-//\t\t\t\t\tvKey = -1;", "-//\t\t\t\t\tint kchrPtr = OS.GetScriptManagerVariable ((short) OS.smKCHRCache);", "-//\t\t\t\t\tint key = -1;", "-//\t\t\t\t\tint [] state = new int [1];", "-//\t\t\t\t\tint [] encoding = new int [1];", "-//\t\t\t\t\tshort keyScript = (short) OS.GetScriptManagerVariable ((short) OS.smKeyScript);", "-//\t\t\t\t\tshort regionCode = (short) OS.GetScriptManagerVariable ((short) OS.smRegionCode);", "-//\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, regionCode, null, encoding) == OS.paramErr) {", "-//\t\t\t\t\t\tif (OS.UpgradeScriptInfoToTextEncoding (keyScript, (short) OS.kTextLanguageDontCare, (short) OS.kTextRegionDontCare, null, encoding) == OS.paramErr) {", "-//\t\t\t\t\t\t\tencoding [0] = OS.kTextEncodingMacRoman;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t}", "-//\t\t\t\t\tint [] encodingInfo = new int [1];", "-//\t\t\t\t\tOS.CreateUnicodeToTextInfoByEncoding (encoding [0], encodingInfo);", "-//\t\t\t\t\tif (encodingInfo [0] != 0) {", "-//\t\t\t\t\t\tchar [] input = {event.character};", "-//\t\t\t\t\t\tbyte [] buffer = new byte [2];", "-//\t\t\t\t\t\tOS.ConvertFromUnicodeToPString (encodingInfo [0], 2, input, buffer);", "-//\t\t\t\t\t\tOS.DisposeUnicodeToTextInfo (encodingInfo);", "-//\t\t\t\t\t\tkey = buffer [1] & 0x7f;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tif (key == -1) return false;\t\t\t\t", "-//\t\t\t\t\tfor (int i = 0 ; i <= 0x7F ; i++) {", "-//\t\t\t\t\t\tint result1 = OS.KeyTranslate (kchrPtr, (short) (i | 512), state);", "-//\t\t\t\t\t\tint result2 = OS.KeyTranslate (kchrPtr, (short) i, state);", "-//\t\t\t\t\t\tif ((result1 & 0x7f) == key || (result2 & 0x7f) == key) {", "-//\t\t\t\t\t\t\tvKey = i;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t}", "-//\t\t\t\t\tif (vKey == -1) return false;", "-//\t\t\t\t\treturn OS.CGPostKeyboardEvent (key, vKey, type == SWT.KeyDown) == 0;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t\tcase SWT.MouseDown:", "-//\t\t\tcase SWT.MouseMove: ", "-//\t\t\tcase SWT.MouseUp: {", "-//\t\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "-//\t\t\t\tint chord = OS.GetCurrentEventButtonState ();", "-//\t\t\t\tif (type == SWT.MouseMove) {", "-//\t\t\t\t\tmouseCursorPosition.x = event.x;", "-//\t\t\t\t\tmouseCursorPosition.y = event.y;", "-//\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "-//\t\t\t\t} else {", "-//\t\t\t\t\tint button = event.button;", "-//\t\t\t\t\tif (button < 1 || button > 5) return false;", "-//\t\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "-//\t \t\t\t\tswitch (button) {", "-//\t\t\t\t\t\tcase 1: {", "-//\t\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "-//\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-//\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-//\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-//\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tcase 2: {", "-//\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-//\t\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "-//\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-//\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-//\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tcase 3: {", "-//\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-//\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-//\t\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "-//\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-//\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tcase 4: {", "-//\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-//\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-//\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-//\t\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "-//\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tcase 5: {", "-//\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "-//\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "-//\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "-//\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "-//\t\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "-//\t\t\t\t\t\t\tbreak;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t}", "-//\t\t\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-//\t\t\t\t\tOS.GetGlobalMouse (pt);", "-//\t\t\t\t\tmouseCursorPosition.x = pt.h;", "-//\t\t\t\t\tmouseCursorPosition.y = pt.v;", "-//\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "-//\t\t\t\t}", "-//\t\t\t}", "-//\t\t\tcase SWT.MouseWheel: {", "-//\t\t\t\treturn OS.CGPostScrollWheelEvent (1, event.count) == 0;", "-//\t\t\t}", "-//\t\t} ", "+", "+\t\tif (!eventSourceDelaySet) {", "+\t\t\tOS.CGSetLocalEventsSuppressionInterval(0.0);", "+\t        OS.CGEnableEventStateCombining(true);", "+\t        OS.CGSetLocalEventsFilterDuringSuppressionState(OS.kCGEventFilterMaskPermitLocalKeyboardEvents | OS.kCGEventFilterMaskPermitLocalMouseEvents | OS.kCGEventFilterMaskPermitSystemDefinedEvents, OS.kCGEventSuppressionStateSuppressionInterval);", "+\t        OS.CGSetLocalEventsFilterDuringSuppressionState(OS.kCGEventFilterMaskPermitLocalKeyboardEvents | OS.kCGEventFilterMaskPermitLocalMouseEvents | OS.kCGEventFilterMaskPermitSystemDefinedEvents, OS.kCGEventSuppressionStateRemoteMouseDrag);", "+\t\t\teventSourceDelaySet = true;", "+\t\t}", "+", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tshort vKey = (short)Display.untranslateKey (event.keyCode);", "+\t\t\t\tif (vKey == 0) {", "+\t\t\t\t\tint /*long*/ uchrPtr = 0;", "+\t\t\t\t\tint /*long*/ currentKbd = OS.TISCopyCurrentKeyboardInputSource();", "+\t\t\t\t\tint /*long*/ uchrCFData = OS.TISGetInputSourceProperty(currentKbd, OS.kTISPropertyUnicodeKeyLayoutData());", "+\t\t\t\t\t", "+\t\t\t\t\tif (uchrCFData == 0) return false;", "+\t\t\t\t\tuchrPtr = OS.CFDataGetBytePtr(uchrCFData);", "+\t\t\t\t\tif (uchrPtr == 0) return false;", "+\t\t\t\t\tif (OS.CFDataGetLength(uchrCFData) == 0) return false;", "+\t\t\t\t\tint maxStringLength = 256;", "+\t\t\t\t\tvKey = -1;", "+\t\t\t\t\tchar [] output = new char [maxStringLength];", "+\t\t\t\t\tint [] actualStringLength = new int [1];", "+\t\t\t\t\tfor (short i = 0 ; i <= 0x7F ; i++) {", "+\t\t\t\t\t\tOS.UCKeyTranslate (uchrPtr, i, (short)(type == SWT.KeyDown ? OS.kUCKeyActionDown : OS.kUCKeyActionUp), 0, OS.LMGetKbdType(), 0, deadKeyState, maxStringLength, actualStringLength, output);", "+\t\t\t\t\t\tif (output[0] == event.character) {", "+\t\t\t\t\t\t\tvKey = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (vKey == -1) {", "+\t\t\t\t\t\tfor (short i = 0 ; i <= 0x7F ; i++) {", "+\t\t\t\t\t\t\tOS.UCKeyTranslate (uchrPtr, i, (short)(type == SWT.KeyDown ? OS.kUCKeyActionDown : OS.kUCKeyActionUp), OS.shiftKey, OS.LMGetKbdType(), 0, deadKeyState, maxStringLength, actualStringLength, output);", "+\t\t\t\t\t\t\tif (output[0] == event.character) {", "+\t\t\t\t\t\t\t\tvKey = i;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (vKey == -1) return false;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\treturn OS.CGPostKeyboardEvent((short)0, vKey, type == SWT.KeyDown) == 0;", "+\t\t\t}", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove: ", "+\t\t\tcase SWT.MouseUp: {", "+\t\t\t\tCGPoint mouseCursorPosition = new CGPoint ();", "+\t\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\t\tmouseCursorPosition.x = event.x;", "+\t\t\t\tmouseCursorPosition.y = event.y;", "+", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, (chord & 0x1) != 0, (chord & 0x2) != 0, (chord & 0x4) != 0, (chord & 0x8) != 0, (chord & 0x10) != 0) == 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tif (button < 1 || button > 5) return false;", "+\t\t\t\t\tboolean button1 = false, button2 = false, button3 = false, button4 = false, button5 = false;", "+\t \t\t\t\tswitch (button) {", "+\t\t\t\t\t\tcase 1: {", "+\t\t\t\t\t\t\tbutton1 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 2: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 3: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 4: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbutton5 = (chord & 0x10) != 0;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase 5: {", "+\t\t\t\t\t\t\tbutton1 = (chord & 0x1) != 0;", "+\t\t\t\t\t\t\tbutton2 = (chord & 0x4) != 0;", "+\t\t\t\t\t\t\tbutton3 = (chord & 0x2) != 0;", "+\t\t\t\t\t\t\tbutton4 = (chord & 0x8) != 0;", "+\t\t\t\t\t\t\tbutton5 = type == SWT.MouseDown;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+", "+\t\t\t\t\treturn OS.CGPostMouseEvent (mouseCursorPosition, true, 5, button1, button3, button2, button4, button5) == 0;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcase SWT.MouseWheel: {", "+\t\t\t\treturn OS.CGPostScrollWheelEvent(1, event.count) == 0;", "+\t\t\t}", "+\t\t} "]}], "num": 21555}