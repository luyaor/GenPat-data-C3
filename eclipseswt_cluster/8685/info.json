{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53e21f6432c30645b1924779f6b1d859", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79a68cdb7d47e99f77fe26334add1c21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "ae857a34264d288e1dc57e6e3cb1970e51ca7ffa", "commitAfterChange": "1acbdc06fccff8d6f8ed7a4bad9ea879798c7b62", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test_setSelectionII()", "signatureAfterChange": "  public void test_setSelectionII()", "diff": ["-\tint number = 5;", "+\tint number = 8;", "-\tlist.setSelection(1, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {1});", "-", "-\tlist.setSelection(10, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "-", "-\tlist.setSelection(3, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "-", "-\tlist.setSelection(-1, -1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "-", "-\tlist.setSelection(1, 3);", "-\tassertSame(list.getSelectionIndices(), new int[] {1, 2, 3});", "-", "-\tif (fCheckSWTPolicy == true) {", "-\t\tlist.setSelection(-1, 3);", "-\t\tassertSame(list.getSelectionIndices(), new int[] {0, 1, 2, 3});", "-", "-\t\tlist.setSelection(-1, 30);", "-\t\tassertSame(list.getSelectionIndices(), new int[] {0, 1, 2, 3, 4});", "-\t}", "-", "-\titems = new String[] { \"item0\", \"item1\", \"item2\", \"item3\" };", "-\tlist.setItems(items);", "-\tassertSame(list.getSelectionIndices(), new int[] { 1, 2 });", "-\tlist.setSelection(3, 3);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "-\tlist.setSelection(3, 2);", "-\tassertEquals(list.getSelectionIndices(), new int[] {}); ///IS THAT THE CORRECT ANSWER ??", "+\tassertEquals(list.getSelectionIndices(), new int[] {1, 2});", "+\tassertEquals(list.getFocusIndex(), 1);", "-\tlist.setSelection(0, 3);", "-\tassertSame(list.getSelectionIndices(), new int[] { 0, 1, 2, 3 });", "-\tlist.setSelection(4, 4);", "-\tassertEquals(list.getSelectionIndices(), new int[] {}); ///IS THAT THE CORRECT ANSWER ??", "+\tlist.setSelection(-3, -2);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 1);", "+\t", "+\tlist.setSelection(0, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0, 1});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(-2, -1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 0);", "-\tlist.setSelection(2, 5);", "-\tassertSame(list.getSelectionIndices(), new int[] { 2, 3 });", "-\tlist.setSelection(-2, 500);", "-\tassertSame(list.getSelectionIndices(), new int[] { 0, 1, 2, 3 });", "+\tlist.setSelection(number - 2, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 2, number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 2);", "+", "+\tlist.setSelection(number - 1, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+", "+\tlist.setSelection(-1, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(number, number + 1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(0, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(2, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), 0);", "+", "+\tlist.setSelection(number - 1, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\t", "+\tlist.setSelection(-1, -1);", "+\tassertEquals(list.getSelectionIndices(), new int[0]);", "+\tassertEquals(list.getFocusIndex(), number - 1);", "-", "+\tassertEquals(list.getFocusIndex(), 2);", "-\tlist.deselectAll();", "-\tlist.setSelection(10, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tlist.setSelection(-3, -2);", "+\tassertEquals(list.getSelectionIndices(), new int[] {2});", "+\tassertEquals(list.getFocusIndex(), 2);", "+\t", "+\tlist.setSelection(0, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {1});", "+\tassertEquals(list.getFocusIndex(), 1);", "+\t", "+\tlist.setSelection(-2, -1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {1});", "+\tassertEquals(list.getFocusIndex(), 1);", "-\tlist.setSelection(3, 1);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "+\tlist.setSelection(number - 2, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\tlist.setSelection(number - 1, number);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+", "+\tlist.setSelection(-1, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(number, number + 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(0, 0);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+\t", "+\tlist.setSelection(2, 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {0});", "+\tassertEquals(list.getFocusIndex(), 0);", "+", "+\tlist.setSelection(number - 1, number - 1);", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);", "+\t", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "-", "-\tlist.setSelection(1, 3);", "-\tassertEquals(list.getSelectionIndices(), new int[] {3});", "-", "-\tlist.setSelection(-1, 3);", "-\tassertEquals(list.getSelectionIndices(), new int[] {3});", "-", "-\tlist.setSelection(-1, 30);", "-\tassertEquals(list.getSelectionIndices(), new int[] {3});", "-", "-\tlist.setSelection(1, 2);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 2 });", "-", "-\tlist.setSelection(3, 3);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.setSelection(3, 2);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.setSelection(0, 3);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.deselectAll();", "-\tlist.setSelection(4, 4);", "-\tassertEquals(list.getSelectionIndices(), new int[] {});", "-", "-\tlist.setSelection(2, 5);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "-", "-\tlist.setSelection(-2, 500);", "-\tassertEquals(list.getSelectionIndices(), new int[] { 3 });", "+\tassertEquals(list.getSelectionIndices(), new int[] {number - 1});", "+\tassertEquals(list.getFocusIndex(), number - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3805e179f8a33ae4f42f56a833a08a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "ba37366be2ce4b81c2ea0b47314627621478b774", "commitAfterChange": "2c04ec257a967dc9b71448cc82c356c64107e558", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tAccessible(Control control)", "signatureAfterChange": "  \tAccessible(Control control)", "diff": ["-\t\tint[] ppvObject = new int[1];", "+\t\tint /*long*/[] ppvObject = new int /*long*/[1];", "-\t\tint result = COM.CreateStdAccessibleObject(control.handle, COM.OBJID_CLIENT, COM.IIDIAccessible, ppvObject);", "+\t\tint result = (int)/*64*/COM.CreateStdAccessibleObject(control.handle, COM.OBJID_CLIENT, COM.IIDIAccessible, ppvObject);", "-\t", "-\t\tobjIAccessible = new COMObject(new int[] {2,0,0,1,3,5,8,1,1,5,5,5,5,5,5,5,6,5,1,1,5,5,8,6,3,4,5,5}) {", "-\t\t\tpublic int method0(int[] args) {return QueryInterface(args[0], args[1]);}", "-\t\t\tpublic int method1(int[] args) {return AddRef();}", "-\t\t\tpublic int method2(int[] args) {return Release();}", "+", "+\t\tobjIAccessible = new COMObject(new int[] {2,0,0,1,3,5,8,1,1,2,2,2,2,2,2,2,3,2,1,1,2,2,5,3,3,1,2,2}) {", "+\t\t\tpublic int /*long*/ method0(int /*long*/[] args) {return QueryInterface(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method1(int /*long*/[] args) {return AddRef();}", "+\t\t\tpublic int /*long*/ method2(int /*long*/[] args) {return Release();}", "-\t\t\tpublic int method7(int[] args) {return get_accParent(args[0]);}", "-\t\t\tpublic int method8(int[] args) {return get_accChildCount(args[0]);}", "-\t\t\tpublic int method9(int[] args) {return get_accChild(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method10(int[] args) {return get_accName(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method11(int[] args) {return get_accValue(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method12(int[] args) {return get_accDescription(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method13(int[] args) {return get_accRole(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method14(int[] args) {return get_accState(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method15(int[] args) {return get_accHelp(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method16(int[] args) {return get_accHelpTopic(args[0], args[1], args[2], args[3], args[4], args[5]);}", "-\t\t\tpublic int method17(int[] args) {return get_accKeyboardShortcut(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method18(int[] args) {return get_accFocus(args[0]);}", "-\t\t\tpublic int method19(int[] args) {return get_accSelection(args[0]);}", "-\t\t\tpublic int method20(int[] args) {return get_accDefaultAction(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method21(int[] args) {return accSelect(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method22(int[] args) {return accLocation(args[0], args[1], args[2], args[3], args[4], args[5], args[6], args[7]);}", "-\t\t\tpublic int method23(int[] args) {return accNavigate(args[0], args[1], args[2], args[3], args[4], args[5]);}", "-\t\t\tpublic int method24(int[] args) {return accHitTest(args[0], args[1], args[2]);}", "-\t\t\tpublic int method25(int[] args) {return accDoDefaultAction(args[0], args[1], args[2], args[3]);}", "-\t\t\tpublic int method26(int[] args) {return put_accName(args[0], args[1], args[2], args[3], args[4]);}", "-\t\t\tpublic int method27(int[] args) {return put_accValue(args[0], args[1], args[2], args[3], args[4]);}", "+\t\t\tpublic int /*long*/ method7(int /*long*/[] args) {return get_accParent(args[0]);}", "+\t\t\tpublic int /*long*/ method8(int /*long*/[] args) {return get_accChildCount(args[0]);}", "+\t\t\tpublic int /*long*/ method9(int /*long*/[] args) {return get_accChild(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method10(int /*long*/[] args) {return get_accName(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method11(int /*long*/[] args) {return get_accValue(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method12(int /*long*/[] args) {return get_accDescription(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method13(int /*long*/[] args) {return get_accRole(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method14(int /*long*/[] args) {return get_accState(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method15(int /*long*/[] args) {return get_accHelp(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method16(int /*long*/[] args) {return get_accHelpTopic(args[0], args[1], args[2]);}", "+\t\t\tpublic int /*long*/ method17(int /*long*/[] args) {return get_accKeyboardShortcut(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method18(int /*long*/[] args) {return get_accFocus(args[0]);}", "+\t\t\tpublic int /*long*/ method19(int /*long*/[] args) {return get_accSelection(args[0]);}", "+\t\t\tpublic int /*long*/ method20(int /*long*/[] args) {return get_accDefaultAction(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method21(int /*long*/[] args) {return accSelect((int)/*64*/args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method22(int /*long*/[] args) {return accLocation(args[0], args[1], args[2], args[3], args[4]);}", "+\t\t\tpublic int /*long*/ method23(int /*long*/[] args) {return accNavigate((int)/*64*/args[0], args[1], args[2]);}", "+\t\t\tpublic int /*long*/ method24(int /*long*/[] args) {return accHitTest((int)/*64*/args[0], (int)/*64*/args[1], args[2]);}", "+\t\t\tpublic int /*long*/ method25(int /*long*/[] args) {return accDoDefaultAction(args[0]);}", "+\t\t\tpublic int /*long*/ method26(int /*long*/[] args) {return put_accName(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method27(int /*long*/[] args) {return put_accValue(args[0], args[1]);}", "-\t\t", "+", "+\t\tint /*long*/ ppVtable = objIAccessible.ppVtable;", "+\t\tint /*long*/[] pVtable = new int /*long*/[1];", "+\t\tCOM.MoveMemory(pVtable, ppVtable, OS.PTR_SIZEOF);", "+\t\tint /*long*/[] funcs = new int /*long*/[28];", "+\t\tCOM.MoveMemory(funcs, pVtable[0], OS.PTR_SIZEOF * funcs.length);", "+\t\tfuncs[9] = COM.get_accChild_CALLBACK(funcs[9]);", "+\t\tfuncs[10] = COM.get_accName_CALLBACK(funcs[10]);", "+\t\tfuncs[11] = COM.get_accValue_CALLBACK(funcs[11]);", "+\t\tfuncs[12] = COM.get_accDescription_CALLBACK(funcs[12]);", "+\t\tfuncs[13] = COM.get_accRole_CALLBACK(funcs[13]);", "+\t\tfuncs[14] = COM.get_accState_CALLBACK(funcs[14]);", "+\t\tfuncs[15] = COM.get_accHelp_CALLBACK(funcs[15]);", "+\t\tfuncs[16] = COM.get_accHelpTopic_CALLBACK(funcs[16]);", "+\t\tfuncs[17] = COM.get_accKeyboardShortcut_CALLBACK(funcs[17]);", "+\t\tfuncs[20] = COM.get_accDefaultAction_CALLBACK(funcs[20]);", "+\t\tfuncs[21] = COM.accSelect_CALLBACK(funcs[21]);", "+\t\tfuncs[22] = COM.accLocation_CALLBACK(funcs[22]);", "+\t\tfuncs[23] = COM.accNavigate_CALLBACK(funcs[23]);", "+\t\tfuncs[25] = COM.accDoDefaultAction_CALLBACK(funcs[25]);", "+\t\tfuncs[26] = COM.put_accName_CALLBACK(funcs[26]);", "+\t\tfuncs[27] = COM.put_accValue_CALLBACK(funcs[27]);", "+\t\tCOM.MoveMemory(pVtable[0], funcs, OS.PTR_SIZEOF * funcs.length);", "+", "-\t\t\tpublic int method0(int[] args) {return QueryInterface(args[0], args[1]);}", "-\t\t\tpublic int method1(int[] args) {return AddRef();}", "-\t\t\tpublic int method2(int[] args) {return Release();}", "-\t\t\tpublic int method3(int[] args) {return Next(args[0], args[1], args[2]);}", "-\t\t\tpublic int method4(int[] args) {return Skip(args[0]);}", "-\t\t\tpublic int method5(int[] args) {return Reset();}", "+\t\t\tpublic int /*long*/ method0(int /*long*/[] args) {return QueryInterface(args[0], args[1]);}", "+\t\t\tpublic int /*long*/ method1(int /*long*/[] args) {return AddRef();}", "+\t\t\tpublic int /*long*/ method2(int /*long*/[] args) {return Release();}", "+\t\t\tpublic int /*long*/ method3(int /*long*/[] args) {return Next((int)args[0], args[1], args[2]);}", "+\t\t\tpublic int /*long*/ method4(int /*long*/[] args) {return Skip((int)args[0]);}", "+\t\t\tpublic int /*long*/ method5(int /*long*/[] args) {return Reset();}"]}], "num": 8685}