{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "798be8243d749b4b6d937a64abe7e57b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef5c86943408caf2ae05e3013a23a47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "057b095fa8e4dd6d39ae5d30c54221920abf599e", "commitAfterChange": "edb7cab795f83762a0210a9ca1fe60b8fce98255", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint xborder = 0, yborder = 0;", "+\tint[] w = new int [1], h = new int [1];", "-\t\treturn super.computeSize (wHint, hHint, changed);", "-\t}", "-\tboolean fixWrap = (style & SWT.WRAP) != 0 && wHint == SWT.DEFAULT;", "-\tif (fixWrap) OS.gtk_text_view_set_wrap_mode (handle, OS.GTK_WRAP_NONE);", "-\tint width = OS.GTK_WIDGET_WIDTH (handle);", "-\tint height = OS.GTK_WIDGET_HEIGHT (handle);", "-\tOS.gtk_widget_set_size_request (handle, wHint, hHint); ", "-\tif ((style & SWT.WRAP) != 0) {", "-\t\twhile (OS.gtk_events_pending () != 0) {", "-\t\t\tOS.gtk_main_iteration ();", "+\t\tint layout = OS.gtk_entry_get_layout (handle);", "+\t\tOS.pango_layout_get_size (layout, w, h);", "+\t\tif ((style & SWT.BORDER) != 0) {", "+\t\t\tGtkStyle style = new GtkStyle (); ", "+\t\t\tOS.memmove (style, OS.gtk_widget_get_style (handle));", "+\t\t\txborder += style.xthickness;", "+\t\t\tyborder += style.ythickness;", "+\t\txborder += INNER_BORDER;", "+\t\tyborder += INNER_BORDER;", "+\t} else {", "+\t\tbyte [] start =  new byte [ITER_SIZEOF], end  =  new byte [ITER_SIZEOF];", "+\t\tOS.gtk_text_buffer_get_bounds (bufferHandle, start, end);", "+\t\tint text = OS.gtk_text_buffer_get_text (bufferHandle, start, end, true);", "+\t\tint layout = OS.gtk_widget_create_pango_layout (handle, text);", "+\t\tOS.g_free (text);", "+\t\tOS.pango_layout_set_width (layout, wHint * OS.PANGO_SCALE);", "+\t\tOS.pango_layout_get_size (layout, w, h);", "+\t\tOS.g_object_unref (layout);", "+\t\tint borderWidth = OS.gtk_container_get_border_width (handle);  ", "+\t\txborder += borderWidth;", "+\t\tyborder += borderWidth;", "-\tGtkRequisition requisition = new GtkRequisition ();", "-\tOS.gtk_widget_size_request (handle, requisition);", "-\tOS.gtk_widget_set_size_request (handle, width, height);", "-\twidth = wHint == SWT.DEFAULT ? requisition.width : wHint;", "-\theight = hHint == SWT.DEFAULT ? requisition.height : hHint;", "-\tif (fixWrap) OS.gtk_text_view_set_wrap_mode (handle, OS.GTK_WRAP_WORD);", "+\tint [] property = new int [1];", "+\tOS.gtk_widget_style_get (handle, OS.interior_focus, property, 0);", "+\tif (property [0] != 0) {", "+\t\tOS.gtk_widget_style_get (handle, OS.focus_line_width, property, 0);", "+\t\txborder += property [0];", "+\t\tyborder += property [0];", "+\t}", "+\tint width = OS.PANGO_PIXELS (w [0]) + 2 * xborder;", "+\tint height = OS.PANGO_PIXELS (h [0]) + 2 * yborder;", "+\twidth = wHint == SWT.DEFAULT ? width : wHint;", "+\theight = hHint == SWT.DEFAULT ? height : hHint;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305503a0914874a8c6030f70ce8ad623", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "6215640175ccfe897f3840a8201a886b754fe47e", "commitAfterChange": "45ceafadc60325534082e286f4aafee627d1de0d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "    private static Hashtable gnome_getMimeInfo()", "signatureAfterChange": " private static Hashtable gnome_getMimeInfo()", "diff": ["-  ", "-\t", "-\t// Extract the mime info from the system directory.", "-\tString mimeDirectory = gnome_getDataDirectory (\"mime-info\");", "-\tgnome_getMimeInfoFromDirectory( mimeInfo, new File( mimeDirectory ) );", "-\t", "-\t// Append the mime info from the user's directory (if it exists).", "-\tString userDirectory = gnome_getHomeDirectory();", "-\tif (userDirectory != null) {", "-\t\tuserDirectory = userDirectory + File.separator + \".gnome\" + File.separator + \"mime-info\";", "-\t\tgnome_getMimeInfoFromDirectory( mimeInfo, new File( userDirectory ) );", "+\tint[] mimeData = new int[1];", "+\tint[] extensionData = new int[1];", "+\tint mimeList = GNOME.gnome_vfs_get_registered_mime_types();", "+\tint mimeElement = mimeList;", "+\twhile (mimeElement != 0) {", "+\t\tOS.memmove (mimeData, mimeElement, 4);", "+\t\tint mimePtr = mimeData[0];", "+\t\tint mimeLength = OS.strlen(mimePtr);", "+\t\tbyte[] mimeTypeBuffer = new byte[mimeLength];", "+\t\tOS.memmove(mimeTypeBuffer, mimePtr, mimeLength);", "+\t\tString mimeType = new String(Converter.mbcsToWcs(null, mimeTypeBuffer));", "+\t\tint extensionList = GNOME.gnome_vfs_mime_get_extensions_list(mimePtr);", "+\t\tif (extensionList != 0) {", "+\t\t\tVector extensions = new Vector();", "+\t\t\tint extensionElement = extensionList;", "+\t\t\twhile (extensionElement != 0) {", "+\t\t\t\tOS.memmove(extensionData, extensionElement, 4);", "+\t\t\t\tint extensionPtr = extensionData[0];", "+\t\t\t\tint extension_length = OS.strlen(extensionPtr);", "+\t\t\t\tbyte[] extensionBuffer = new byte[extension_length];", "+\t\t\t\tOS.memmove(extensionBuffer, extensionPtr, extension_length);", "+\t\t\t\tString extension = new String(Converter.mbcsToWcs(null, extensionBuffer));", "+\t\t\t\textension = '.' + extension;", "+\t\t\t\textensions.add(extension);", "+\t\t\t\textensionElement = GNOME.g_list_next(extensionElement); ", "+\t\t\t}", "+\t\t\tGNOME.gnome_vfs_mime_extensions_list_free(extensionList);", "+\t\t\tif (extensions.size() > 0) mimeInfo.put(mimeType, extensions);", "+\t\t}", "+\t\tmimeElement = GNOME.g_list_next(mimeElement);", "-", "+\tif (mimeList != 0) GNOME.gnome_vfs_mime_registered_mime_type_list_free(mimeList);"]}], "num": 18887}