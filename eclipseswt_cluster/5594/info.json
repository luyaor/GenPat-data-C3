{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b584fd56a31d440c866e54e372c92f5d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f06d5f857c95406f06dc5e9cb773695", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void clearContents(int clipboards)", "signatureAfterChange": " public void clearContents(int clipboards)", "diff": ["-\t// TODO only clear clipbaord if current Clipboard object is the owner", "-\tif (true || (clipboards & DND.CLIPBOARD) == 0) return;", "-\tint xDisplay = OS.XtDisplay (shellHandle);", "-\tif (xDisplay == 0) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);", "-\tint xWindow = OS.XtWindow (shellHandle);", "-\tif (xWindow == 0) DND.error(DND.ERROR_CANNOT_SET_CLIPBOARD);\t", "-\t// Open clipboard for setting", "-\tint[] item_id = new int[1];\t\t\t", "-\tif (OS.XmClipboardStartCopy(xDisplay, xWindow, 0, OS.XtLastTimestampProcessed(xDisplay), shellHandle, 0, item_id) != OS.XmClipboardSuccess){", "-\t\treturn;", "+\tint xDisplay = OS.XtDisplay(shellHandle);", "+\tif (xDisplay == 0) return;", "+\tif ((clipboards & DND.CLIPBOARD) != 0 && activeClipboard == this) {", "+\t\tOS.XtDisownSelection(shellHandle, clipboardAtom, OS.CurrentTime);", "-\t// close clipboard  for setting", "-\tOS.XmClipboardEndCopy(xDisplay, xWindow, item_id[0]);", "+\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0 && activePrimaryClipboard == this) {", "+\t\tOS.XtDisownSelection(shellHandle, primaryAtom, OS.CurrentTime);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16606e62e92efc1e20d23ebefc08a74e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "d099ecf28ae6761de33550ff2099dd439ec506a3", "commitAfterChange": "ea1614638a2d49cacb0be9856960133527b7df52", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  TextStyle getStyle (NSDictionary attribs)", "signatureAfterChange": "  TextStyle getStyle (NSDictionary attribs)", "diff": ["-\t\t\tNSColor color = new NSColor (attribs.objectForKey (key)).colorUsingColorSpaceName (OS.NSCalibratedRGBColorSpace);", "-\t\t\tfloat /*double*/ [] rgbColor = new float /*double*/ []{color.redComponent(), color.greenComponent(), color.blueComponent(), color.alphaComponent()};", "-\t\t\tstyle.background = Color.cocoa_new (display, rgbColor);", "+\t\t\tNSColor color = new NSColor (attribs.objectForKey (key));", "+\t\t\tstyle.background = Color.cocoa_new (display, display.getNSColorRGB(color));", "-\t\t\tNSColor color = new NSColor (attribs.objectForKey (key)).colorUsingColorSpaceName (OS.NSCalibratedRGBColorSpace);", "-\t\t\tfloat /*double*/ [] rgbColor = new float /*double*/ []{color.redComponent(), color.greenComponent(), color.blueComponent(), color.alphaComponent()};", "-\t\t\tstyle.foreground = Color.cocoa_new (display, rgbColor);", "+\t\t\tNSColor color = new NSColor (attribs.objectForKey (key));", "+\t\t\tstyle.foreground = Color.cocoa_new (display, display.getNSColorRGB(color));", "-\t\t\tNSColor color = new NSColor (attribs.objectForKey (key)).colorUsingColorSpaceName (OS.NSCalibratedRGBColorSpace);", "-\t\t\tfloat /*double*/ [] rgbColor = new float /*double*/ []{color.redComponent(), color.greenComponent(), color.blueComponent(), color.alphaComponent()};", "-\t\t\tstyle.underlineColor = Color.cocoa_new (display, rgbColor);", "+\t\t\tNSColor color = new NSColor (attribs.objectForKey (key));", "+\t\t\tstyle.underlineColor = Color.cocoa_new (display, display.getNSColorRGB(color));", "-\t\t\tNSColor color = new NSColor (attribs.objectForKey (key)).colorUsingColorSpaceName (OS.NSCalibratedRGBColorSpace);", "-\t\t\tfloat /*double*/ [] rgbColor = new float /*double*/ []{color.redComponent(), color.greenComponent(), color.blueComponent(), color.alphaComponent()};", "-\t\t\tstyle.strikeoutColor = Color.cocoa_new (display, rgbColor);", "+\t\t\tNSColor color = new NSColor (attribs.objectForKey (key));", "+\t\t\tstyle.strikeoutColor = Color.cocoa_new (display, display.getNSColorRGB(color));"]}], "num": 5594}