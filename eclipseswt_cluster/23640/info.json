{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6004be0f62387b1a52a0d0548bfaa582", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea311de28d94e6f6f0e2ed54e18b99dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "de766ef242b8ebbad306657d3d5abb2d86c9b9e7", "commitAfterChange": "fcb03e79dde32a89759aa5430057cfbfb123e6d3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t * Feature in Motif. If a label's labelType is XmSTRING but it", "-\t * has no label set into it yet, recomputing the size will", "-\t * not take into account the height of the font, as we would", "-\t * like it to. Take care of this case.", "-\t */", "+\t* Feature in Motif. If a label's labelType is XmSTRING but ", "+\t* the label string is empty, recomputing the size will", "+\t* not take into account the height of the font, as we would", "+\t* like it to. Take care of this case.", "+\t* ", "+\t* Note:  When the label string is empty a single space is set", "+\t* into the widget. So the preferred height is computed properly.", "+\t* Just make sure the preferred width is zero.", "+\t*/", "-\t\theight += getFontHeight ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551711b9340356783996d5dcc1da30f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandItem.java", "commitBeforeChange": "233294baae647079b9bf91289ab503d2417a7094", "commitAfterChange": "01c8415fbe8cd71cf836c2de31e64ee06c86d7e1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  void resizeControl (int yScroll)", "signatureAfterChange": "  void resizeControl (int yScroll)", "diff": ["-\t\t\tint x = allocation.x;", "-\t\t\tint y = allocation.y;", "+", "+\t\t\t//454940 change in hierarchy", "+\t\t\t/* SWT's calls to gtk_widget_size_allocate and gtk_widget_set_allocation", "+\t\t\t* causes GTK+ to move the clientHandle's SwtFixed down by the size of the label.", "+\t\t\t* These calls can come up from 'shell' and ExpandItem has no control over these calls.", "+\t\t\t* This is an undesired side-effect. Client handle's x & y positions should never", "+\t\t\t* be incremented as this is an internal sub-container.", "+\t\t\t* As of GTK3, the hierarchy is changed, this affected child-size allocation and a fix", "+\t\t\t* is now neccessary.", "+\t\t\t* See also other 454940 notes and similar fix in: 453827 */", "+\t\t\tint x = (OS.GTK3) ? 0 : allocation.x;", "+\t\t\tint y = (OS.GTK3) ? 0 : allocation.y;", "+"]}], "num": 23640}