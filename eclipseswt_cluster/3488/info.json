{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff8843fa6e5520abd3eca72de573e556", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06214d41172feb9d54d9aff947c6e6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5ed60ecb35f5c775263e8bbccde6c6752ec6338a", "commitAfterChange": "ea98a7c7d60d7be14d294645669772df15717e8f", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void setLineWidth(int width)", "signatureAfterChange": " public void setLineWidth(int width)", "diff": ["+\tint xDisplay = data.display;", "+\tXGCValues values = new XGCValues();", "+\tOS.XGetGCValues(xDisplay, handle, OS.GCLineWidth | OS.GCCapStyle | OS.GCJoinStyle, values);", "-\tOS.XSetLineAttributes(data.display, handle, width, line_style, OS.CapRound, OS.JoinMiter);\t", "+\tOS.XSetLineAttributes(data.display, handle, width, line_style, values.cap_style, values.join_style);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c73e629ddb472d21005b153fa34278", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "99b4684be0370208c176493487bdf6723943c26b", "commitAfterChange": "c6b1a4f6fe4a9647d909944ff27270debdbe77b6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r int Pt_CB_ACTIVATE (int widget, int info)", "signatureAfterChange": "\r \r int Pt_CB_ACTIVATE (int widget, int info)", "diff": ["+\t\tint topHandle = topHandle ();\r", "+\t\tPhArea_t area = new PhArea_t ();\r", "+\t\tOS.PtWidgetArea (topHandle, area);\r", "+\t\tevent.x = area.pos_x;\r", "+\t\tevent.y = area.pos_y + area.size_h;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283043a5cf3e4b5537c884ec37411da5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fbe88d4321dc9e91f0c1ba5bd5a2fd1fe4f91cee", "commitAfterChange": "ab6df2e74939b4f66ef444130ab96fcc8c5ac75d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  Point computeNativeSize (int h, int wHint, int hHint, boolean changed)", "signatureAfterChange": "  Point computeNativeSize (int h, int wHint, int hHint, boolean changed)", "diff": ["-\tOS.gtk_widget_set_usize(h, wHint==SWT.DEFAULT? -1:wHint, hHint==SWT.DEFAULT? -1:hHint);", "-\tGtkRequisition requisition = new GtkRequisition();", "-\tOS.gtk_widget_size_request(h, requisition);", "-\t/* This is the only place where we use the horrible and deprecated", "-\t * set_usize, so we don't need to restore the previous value", "-\t */", "-\tOS.gtk_widget_set_usize(h, -1, -1);", "-\treturn new Point (requisition.width, requisition.height);\t", "+\tint width = OS.GTK_WIDGET_WIDTH (h);", "+\tint height = OS.GTK_WIDGET_HEIGHT (h);", "+\tOS.gtk_widget_set_size_request (h, -1, -1);", "+\tGtkRequisition requisition = new GtkRequisition ();", "+\tOS.gtk_widget_size_request (h, requisition);", "+\tOS.gtk_widget_set_size_request (h, width, height);", "+\twidth = wHint == SWT.DEFAULT ? requisition.width : wHint;", "+\theight = hHint == SWT.DEFAULT ? requisition.height : hHint;", "+\treturn new Point (width, height);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a5b559ea3657610f37346105230757e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "74633fa01aa8c5998245320589a13e924ab066bc", "commitAfterChange": "9aa111009eb55f78239030ddcabfd6bb90983b3a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " Rectangle getCellBounds (int columnIndex)", "signatureAfterChange": " Rectangle getCellBounds (int columnIndex)", "diff": ["+ */", "-\tif (parent.columns.length == 0 || columnIndex != 0) {", "-\t\treturn getBounds (columnIndex);", "+\tint y = parent.getItemY (this);", "+\tif (parent.columns.length == 0) {", "+\t\tint width = getTextX (0) + getTextPaintWidth (0) + parent.horizontalOffset;", "+\t\treturn new Rectangle (-parent.horizontalOffset, y, width, parent.itemHeight);", "-\tif (!isAvailable ()) return new Rectangle (0, 0, 0, 0);", "-", "-\treturn new Rectangle (column.getX (), parent.getItemY (this), column.width, parent.itemHeight);", "+\treturn new Rectangle (column.getX (), y, column.width, parent.itemHeight);"]}], "num": 3488}