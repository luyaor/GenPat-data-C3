{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b42f0785eb402691147f375567352c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e6c008fa180dd88853fd1c82efb050", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0e8eba587ace8c864b254623d1bcda0e8d381c1b", "commitAfterChange": "55d4c0b4d419adc527727416a3fcad644cc164a7", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t/*", "-\t* Feature in the Macintosh.  For some reason, when the user hits an", "-\t* up or down arrow to traverse the items in a Data Browser, the item", "-\t* scrolls to the left such that the white space that is normally", "-\t* visible to the right of the every item is scrolled out of view.", "-\t* The fix is to do the arrow traversal in Java and not call the", "-\t* default handler.", "-\t*/", "+\t\tcase 36: { /* Return */", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\tbreak;", "+\t\t}", "+\t\t/*", "+\t\t* Feature in the Macintosh.  For some reason, when the user hits an", "+\t\t* up or down arrow to traverse the items in a Data Browser, the item", "+\t\t* scrolls to the left such that the white space that is normally", "+\t\t* visible to the right of the every item is scrolled out of view.", "+\t\t* The fix is to do the arrow traversal in Java and not call the", "+\t\t* default handler.", "+\t\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0d4cf7e8acb74a24973823c5e9d59a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon2/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0e8eba587ace8c864b254623d1bcda0e8d381c1b", "commitAfterChange": "55d4c0b4d419adc527727416a3fcad644cc164a7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  int kEventRawKeyRepeat (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyRepeat (int nextHandler, int theEvent, int userData)", "diff": ["-\t/*", "-\t* Feature in the Macintosh.  For some reason, when the user hits an", "-\t* up or down arrow to traverse the items in a Data Browser, the item", "-\t* scrolls to the left such that the white space that is normally", "-\t* visible to the right of the every item is scrolled out of view.", "-\t* The fix is to do the arrow traversal in Java and not call the", "-\t* default handler.", "-\t*/", "+\t\tcase 36: { /* Return */", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\tbreak;", "+\t\t}", "+\t\t/*", "+\t\t* Feature in the Macintosh.  For some reason, when the user hits an", "+\t\t* up or down arrow to traverse the items in a Data Browser, the item", "+\t\t* scrolls to the left such that the white space that is normally", "+\t\t* visible to the right of the every item is scrolled out of view.", "+\t\t* The fix is to do the arrow traversal in Java and not call the", "+\t\t* default handler.", "+\t\t*/", "-\t\t\tsetSelection (Math.min (itemCount - 1, index + 1));", "+\t\t\tsetSelection (Math.min (itemCount - 1, index + 1), true);", "-\t\t\tsetSelection (Math.max (0, index - 1));", "+\t\t\tsetSelection (Math.max (0, index - 1), true);"]}], "num": 46413}