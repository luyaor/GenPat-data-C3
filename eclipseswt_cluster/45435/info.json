{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "791574dedc18149e7531b372731833f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5515b2186acd90a231ad5fd0955e91e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 17, "signatureBeforeChange": " void drawColumnResizeLine(int xPosition)", "signatureAfterChange": " void destroyItem (TableColumn column)", "diff": ["+void destroyItem (TableColumn column) {", "+\tint numColumns = columns.length;", "+\tint index = column.getIndex ();", "+\tTableColumn[] newColumns = new TableColumn [columns.length - 1];", "+\tSystem.arraycopy (columns, 0, newColumns, 0, index);", "+\tSystem.arraycopy (columns, index + 1, newColumns, index, newColumns.length - index);", "+\tcolumns = newColumns;", "+", "+\t/* allow all items to update their internal structures accordingly */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems [i].removeColumn (column, index);", "+\t/* update horizontal scrollbar */", "+\tint lastColumnIndex = columns.length - 1;", "+\tif (lastColumnIndex < 0) {\t\t/* no more columns */", "+\t\tupdateHorizontalBar ();", "+\t} else {", "+\t\tint newWidth = 0;", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tnewWidth += columns [i].width;", "+\t\t}", "+\t\tScrollBar hBar = getHorizontalBar (); ", "+\t\thBar.setMaximum (newWidth);", "+\t\thBar.setVisible (getClientArea ().width < newWidth);", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\tfor (int i = index; i < columns.length; i++) {", "+\t\tEvent event = new Event ();", "+\t\tevent.widget = columns [i];", "+\t\tcolumns [i].sendEvent (SWT.Move, event);", "+\t}", "- */", "-void drawColumnResizeLine(int xPosition) {", "-\tGC gc = new GC(this);", "-\tint lineHeight = getClientArea().height;", "-\tint lineWidth = getGridLineWidth();", "-\t", "-\tredraw(getColumnResizeX() - lineWidth, 0, 1, lineHeight, false);", "-\tsetColumnResizeX(xPosition);", "-\tgc.drawLine(xPosition - lineWidth, 0, xPosition - lineWidth, lineHeight);", "-\tgc.dispose();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1532dddea98db7783e15380c4472d685", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e0f424f4d8f50a0b627d5547781b8a9ee0dd7d5d", "commitAfterChange": "fcdb639e3cc78f86b4ef0958aadf0dd2ef687069", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 9, "signatureBeforeChange": " void removeColumn (TreeColumn column)", "signatureAfterChange": " void destroyItem (TreeColumn column)", "diff": ["+}", "+void destroyItem (TreeColumn column) {", "+\tint numColumns = getColumnCount ();", "+\tint index = column.getIndex ();", "+", "+\tTreeColumn[] newColumns = new TreeColumn[columns.length - 1];", "+\tSystem.arraycopy (columns, 0, newColumns, 0, index);", "+\tSystem.arraycopy (columns, index + 1, newColumns, index, newColumns.length - index);", "+\tcolumns = newColumns;", "+\t", "+\t/* ensure that column 0 always has left-alignment */", "+\tif (index == 0 && columns.length > 0) {", "+\t\tcolumns [0].style |= SWT.LEFT;", "+\t\tcolumns [0].style &= ~(SWT.CENTER | SWT.RIGHT);", "+\t}", "+\t", "+\t/* allow all items to update their internal structures accordingly */", "+\tfor (int i = 0; i < items.length; i++) {", "+\t\titems [i].removeColumn (column, index);", "+\t}", "+\t", "+\tint lastColumnIndex = columns.length - 1;", "+\tif (lastColumnIndex < 0) {\t/* no more columns */", "+\t\tupdateHorizontalBar ();", "+\t} else {", "+\t\tint newWidth = 0;", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tnewWidth += columns[i].width;", "+\t\t}", "+\t\tScrollBar hBar = getHorizontalBar (); ", "+\t\thBar.setMaximum (newWidth);", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}", "+}", "-}", "-void removeColumn (TreeColumn column) {", "-\tint numColumns = getColumnCount ();", "-\tint index = column.getIndex ();", "-", "-\tTreeColumn[] newColumns = new TreeColumn[columns.length - 1];", "-\tSystem.arraycopy (columns, 0, newColumns, 0, index);", "-\tSystem.arraycopy (columns, index + 1, newColumns, index, newColumns.length - index);", "-\tcolumns = newColumns;", "-\t", "-\t/* ensure that column 0 always has left-alignment */", "-\tif (index == 0 && columns.length > 0) {", "-\t\tcolumns [0].style |= SWT.LEFT;", "-\t\tcolumns [0].style &= ~(SWT.CENTER | SWT.RIGHT);", "-\t}", "-\t", "-\t/* allow all items to update their internal structures accordingly */", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\titems [i].columnRemoved (column, index);", "-\t}", "-\t", "-\tint lastColumnIndex = columns.length - 1;", "-\tif (lastColumnIndex < 0) {\t/* no more columns */", "-\t\tupdateHorizontalBar ();", "-\t} else {", "-\t\tint newWidth = 0;", "-\t\tfor (int i = 0; i < columns.length; i++) {", "-\t\t\tnewWidth += columns[i].width;", "-\t\t}", "-\t\tScrollBar hBar = getHorizontalBar (); ", "-\t\thBar.setMaximum (newWidth);", "-\t\tint selection = hBar.getSelection ();", "-\t\tif (selection != horizontalOffset) {", "-\t\t\thorizontalOffset = selection;", "-\t\t\tredraw ();", "-\t\t}", "-\t}"]}], "num": 45435}