{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e89537445275c457a1f2ff69934b6c53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7480b7ce61caa477754a63991e6da2df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "e5312f3eb31f776f45524f819378bceb63c7e574", "commitAfterChange": "7b024ae87a602545f2b46be9690a03cba84486b8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "signatureAfterChange": "  int TranslateAccelerator(int lpMsg, int pguidCmdGroup, int nCmdID)", "diff": ["-\treturn COM.E_NOTIMPL;", "+\t/*", "+\t* Feature on Internet Explorer.  By default the embedded Internet Explorer control runs", "+\t* the Internet Explorer shortcuts (e.g. F5 for refresh).  This overrides the shortcuts", "+\t* defined by SWT.  The workaround is to forward the accelerator keys to the parent window", "+\t* and have Internet Explorer ignore the ones handled by the parent window.", "+\t*/", "+\tMenu menubar = getShell().getMenuBar();", "+\tif (menubar != null && !menubar.isDisposed() && menubar.isEnabled()) {", "+\t\tShell shell = menubar.getShell();", "+\t\tint hwnd = shell.handle;", "+\t\tint hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);", "+\t\tif (hAccel != 0) {", "+\t\t\tMSG msg = new MSG();", "+\t\t\tOS.MoveMemory(msg, lpMsg, MSG.sizeof);", "+\t\t\tif (OS.TranslateAccelerator(hwnd, hAccel, msg) != 0) return COM.S_OK;", "+\t\t}", "+\t}", "+\treturn COM.S_FALSE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a9d26e7714ad59a8dc326a0c892858", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r private int GetWindowContext(int ppFrame, int ppDoc, int lprcPosRect, int lprcClipRect, int lpFrameInfo)", "signatureAfterChange": "\r private int GetWindowContext(int ppFrame, int ppDoc, int lprcPosRect, int lprcClipRect, int lpFrameInfo)", "diff": ["-\t//frameInfo.cAccelEntries = ??;\r", "-\t//frameInfo.hAccel = ??;\r", "+\tMenu menubar = frame.getMenubar();\r", "+\tif (menubar != null && !menubar.isDisposed()) {\r", "+\t\tShell shell = menubar.getShell();\r", "+\t\tint hwnd = shell.handle;\r", "+\t\tint cAccel = OS.SendMessage(hwnd, OS.WM_APP, 0, 0);\r", "+\t\tif (cAccel != 0) {\r", "+\t\t\tint hAccel = OS.SendMessage(hwnd, OS.WM_APP+1, 0, 0);\r", "+\t\t\tif (hAccel != 0) {\r", "+\t\t\t\tframeInfo.cAccelEntries = cAccel;\r", "+\t\t\t\tframeInfo.haccel = hAccel;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r"]}], "num": 24103}