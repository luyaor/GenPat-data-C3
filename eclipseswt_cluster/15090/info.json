{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab0fa6e3cd1f2879c9f6aeeaa8636160", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4414514c56323b07364001952729a28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "246f8e3e00c66633323b25d0206889fcfcd2e089", "commitAfterChange": "a65e125940a26cdd7e44a519db755a1c1628c98c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tcheckWidget();", "-\tint minWidth = 0;", "-\tint minHeight = 0;", "+\tcheckWidget();\t", "+\tint tabW = 0;", "-\tint selectedMax = 0;", "-\tint selectedMaxIndex = -1;", "-\t\tint width = items[i].preferredWidth(gc, true);", "-\t\tif ( width > selectedMax) {", "-\t\t\tselectedMax = width;", "-\t\t\tselectedMaxIndex = i;", "+\t\tif (single) {", "+\t\t\ttabW = Math.max(tabW, items[i].preferredWidth(gc, true));", "+\t\t} else {", "+\t\t\ttabW += items[i].preferredWidth(gc, i == selectedIndex);", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tminWidth += items[i].preferredWidth(gc, i == selectedMaxIndex);", "-\t}", "-", "+\tif (showMax) tabW += BUTTON_SIZE;", "+\tif (showMin) tabW += BUTTON_SIZE;", "+\tif (single) tabW += 3*BUTTON_SIZE/2; //chevron", "+\tif (topRight != null) tabW += topRight.computeSize(SWT.DEFAULT, tabHeight).x;", "+\t", "+\tint controlW = 0;", "+\tint controlH = 0;", "-\t\t\tminWidth = Math.max (minWidth, size.x);", "-\t\t\tminHeight = Math.max (minHeight, size.y);", "+\t\t\tcontrolW = Math.max (controlW, size.x);", "+\t\t\tcontrolH = Math.max (controlH, size.y);", "+\tint minWidth = Math.max(tabW, controlW);", "+\tint minHeight = (minimized) ? 0 : controlH;", "-", "-\tif (minimized) minHeight = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4775a86050ab373bb9563684a393c9af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8fd543c924826dfc972ef6a8022268f1984aa82b", "commitAfterChange": "a6b48034db4656132c943ef122f732c8fe096a59", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 90, "signatureBeforeChange": " public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": " public void setLayout (Layout layout)", "diff": ["-}", "-public Point computeSize (int wHint, int hHint, boolean changed) {", "-\tcheckWidget();\t", "-\t// preferred width of tab area to show all tabs", "-\tint tabW = 0;", "-\tGC gc = new GC(this);", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tif (single) {", "-\t\t\ttabW = Math.max(tabW, items[i].preferredWidth(gc, true, false));", "-\t\t} else {", "-\t\t\ttabW += items[i].preferredWidth(gc, i == selectedIndex, false);", "-\t\t}", "-\t}", "-\tgc.dispose();", "-\ttabW += 3;", "-\tif (showMax) tabW += BUTTON_SIZE;", "-\tif (showMin) tabW += BUTTON_SIZE;", "-\tif (single) tabW += 3*BUTTON_SIZE/2; //chevron", "-\tif (topRight != null) tabW += topRight.computeSize(SWT.DEFAULT, tabHeight).x;", "-\tif (!single && !simple) tabW += curveWidth - 2*curveIndent;", "-\t", "-\tint controlW = 0;", "-\tint controlH = 0;", "-\t// preferred size of controls in tab items", "-\tfor (int i = 0; i < items.length; i++) {", "-\t\tControl control = items[i].getControl();", "-\t\tif (control != null && !control.isDisposed()){", "-\t\t\tPoint size = control.computeSize (wHint, hHint);", "-\t\t\tcontrolW = Math.max (controlW, size.x);", "-\t\t\tcontrolH = Math.max (controlH, size.y);", "-\t\t}", "-\t}", "-", "-\tint minWidth = Math.max(tabW, controlW);", "-\tint minHeight = (minimized) ? 0 : controlH;", "-\tif (minWidth == 0) minWidth = DEFAULT_WIDTH;", "-\tif (minHeight == 0) minHeight = DEFAULT_HEIGHT;", "-\t", "-\tif (wHint != SWT.DEFAULT) minWidth  = wHint;", "-\tif (hHint != SWT.DEFAULT) minHeight = hHint;", "-", "-\tRectangle trim = computeTrim(0, 0, minWidth, minHeight);", "-\treturn new Point (trim.width, trim.height);", "+ */", "+public void setLayout (Layout layout) {", "+\tcheckWidget();", "+\treturn;"]}], "num": 15090}