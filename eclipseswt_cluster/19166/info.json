{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e204fdf22f5c0d4fd69abecbd5aa0a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98cd3c2c79e2e1575958fe4466db7d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "d0c3def3c272326b223c16d9ee781437fa47dfea", "commitAfterChange": "44f4d2e58cfc39923e1bdf065af332dedb6d340a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\t\tshell.setData(BROWSER_COCOA_BUTTON, \"true\");", "+\t\t\tshell.setData(BROWSER_COCOA_BUTTON, \"true\"); //$NON-NLS-1$", "-\t* Note that when reparent the browser is reparented, the web view has to", "-\t* be reparent by hand by hooking kEventControlOwningWindowChanged.", "+\t* Note that when the browser is reparented, the web view has to", "+\t* be reparented by hand by hooking kEventControlOwningWindowChanged.", "+\t\t\t\tcase SWT.Activate: {", "+\t\t\t\t\tCocoa.objc_msgSend(Cocoa.objc_msgSend(Cocoa.HIWebViewGetWebView(webViewHandle), Cocoa.S_window), Cocoa.S_makeKeyWindow);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.FocusIn: {", "+\t\t\t\t\tOS.SetKeyboardFocus(OS.GetControlOwner(browser.handle), webViewHandle, (short)-1);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\tbrowser.addListener(SWT.FocusIn, listener);", "+\tbrowser.addListener(SWT.KeyDown, listener); /* needed to make browser traversable */", "+\tbrowser.getShell().addListener(SWT.Activate, listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc33338a5511f707092bceb7448ed21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "be91c6378853be89eec60aa864eb2c5076be911c", "commitAfterChange": "9e2702afa6b962fde80f1108a5ec6c9116dd479c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\tfinal Listener filter = new Listener () {", "-\t\tpublic void handleEvent (Event event) {", "-\t\t\tswitch (event.type) {", "-\t\t\t\tcase SWT.Traverse: {", "-\t\t\t\t\ttraverseNext = event.detail != SWT.TRAVERSE_TAB_PREVIOUS;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t};", "-\t\t\t\tcase SWT.Activate: {", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase SWT.Deactivate: {", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbrowser.getDisplay ().addFilter (SWT.Traverse, filter);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\t\tbrowser.getDisplay ().removeFilter (SWT.Traverse, filter);", "-\t\t\t\t\tonFocus ();", "+\t\t\t\t\tOS.SetFocus (webViewWindowHandle);", "-\tbrowser.addListener (SWT.Activate, listener);", "-\tbrowser.addListener (SWT.Deactivate, listener);", "-\tif (!browser.isFocusControl ()) {", "-\t\tbrowser.getDisplay ().addFilter (SWT.Traverse, filter);", "-\t}"]}], "num": 19166}