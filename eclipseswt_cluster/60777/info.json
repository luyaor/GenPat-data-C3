{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00a7ab245a465a9ada6a8bddd1da9e3f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ade393c80d6597a939bdecf1cf790d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_ImageData.java", "commitBeforeChange": "156a66065c5aa36f961f5f6dcc808208536d5c1d", "commitAfterChange": "0d6738f372469d9527fdb6984c0f956cbb0c021a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test_getPixelII()", "signatureAfterChange": "  public void test_getPixelII()", "diff": ["+\tint width = 3;", "+\tint height = 3;", "+\tint depth = 4;", "+\tbyte pixelValue = 1;", "+\tbyte[] data = {(byte) ((pixelValue << 4) + pixelValue), (byte) (pixelValue << 4), (byte) ((pixelValue << 4) + pixelValue), (byte) (pixelValue << 4), (byte) ((pixelValue << 4) + pixelValue), (byte) (pixelValue << 4)}; ", "+\timageData = new ImageData(width, height, depth, new PaletteData(new RGB[] {new RGB(0, 0, 255), new RGB(111, 111, 111)}), 1, data);", "+\tfor (int y = 0; y < height; y++) {", "+\t\tfor (int x = 0; x < width; x++) {", "+\t\t\tint pixel = imageData.getPixel(x, y);", "+\t\t\tassertEquals(\"Bad pixel data\", pixelValue, pixel);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f2190f4c870b0ef3479c07d9fea4d1e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "454d6a5c1a3f7cb78ffb95180849ad2b69623071", "commitAfterChange": "b84d7d116f98b7b51b98d6c79a1f0ff2a142d0ea", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\tImage image = new Image(null, 16, 16);", "-\tImageData imageData = image.getImageData ();", "-\timage.dispose ();", "+\tImageData id= new ImageData(16, 16, 2, ", "+\t\tnew PaletteData(", "+\t\t\tnew RGB[] {", "+\t\t\t\tnew RGB(0, 0, 0), ", "+\t\t\t\tnew RGB(128, 128, 128)", "+\t\t\t}", "+\t\t)", "+\t);", "+\tid.transparentPixel= 0;\t\t\t// use black for transparency", "+\t", "+\tfor (int y= 2; y < 14; y++) ", "+\t\tfor (int x= 2; x < 14; x++)", "+\t\t\tif (x == 2 || x == 13 || y == 2 || y == 13)", "+\t\t\t\tid.setPixel(x, y, 1);", "+\t\t\t\t", "+\t//Image im= new Image(null, id);", "+\t//id= im.getImageData();", "-\treturn imageData;", "+\treturn id;"]}], "num": 60777}