{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78baf9a3f7a4289e16d9d9be4a8a04e6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb2839da3fa23e719158e4d8aa7781c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r Point computeSize ()", "signatureAfterChange": "\r \r Point computeSize ()", "diff": ["-\t//if (control != null) return control.computeSize(SWT.DEFAULT, SWT.DEFAULT, true);\r", "-\r", "+\tif ((style & SWT.SEPARATOR) != 0) {\r", "+\t\tint [] argList = {\r", "+\t\t\tOS.XmNwidth, 0,\r", "+\t\t\tOS.XmNheight, 0,\r", "+\t\t};\r", "+\t\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\t\tint width = argList [1], height = argList [3];\r", "+\t\treturn new Point(width, height);\r", "+\t}\r", "-\t\tOS.XmNhighlightThickness, 0,\r", "-\tint marginHeight = argList[1];\r", "-\tint marginWidth = argList[3];\r", "-\tint shadowThickness = 2; //argList[5];\r", "-\tint highlightThickness = argList[7];\r", "-\r", "+\tint marginHeight = argList [1], marginWidth = argList [3];\r", "+\tint shadowThickness = argList [5];\r", "+\tif ((parent.style & SWT.FLAT) != 0) {\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tshadowThickness = Math.min (2, display.buttonShadowThickness);\r", "+\t}\r", "-\tif (text != null && text.length() > 0) {\r", "+\tif (text.length () != 0) {\r", "-\tif (image !=  null) {\r", "-\t\tRectangle rect = image.getBounds();\r", "+\tif (image != null) {\r", "+\t\tRectangle rect = image.getBounds ();\r", "-\t\timageHeight= rect.height;\r", "+\t\timageHeight = rect.height;\r", "-\t\r", "-\tint contentHeight = 0, contentWidth = 0;\r", "-\tif ((parent.style & SWT.RIGHT) > 0) {\r", "-\t\tcontentHeight = Math.max(imageHeight, textHeight);\r", "-\t\tcontentWidth = imageWidth + textWidth;\r", "-\t\tif (imageWidth > 0 && textWidth > 0) contentWidth += marginWidth;\r", "+\tint width = 0, height = 0;\r", "+\tif ((parent.style & SWT.RIGHT) != 0) {\r", "+\t\twidth = imageWidth + textWidth;\r", "+\t\theight = Math.max (imageHeight, textHeight);\r", "+\t\tif (imageWidth != 0 && textWidth != 0) width += 2;\r", "-\t\tcontentHeight = imageHeight + textHeight;\r", "-\t\tif (imageHeight > 0 && textHeight > 0) contentHeight += marginHeight;\r", "-\t\tcontentWidth = Math.max(imageWidth, textWidth);\r", "+\t\theight = imageHeight + textHeight;\r", "+\t\tif (imageHeight != 0 && textHeight != 0) height += 2;\r", "+\t\twidth = Math.max (imageWidth, textWidth);\r", "+\tif ((style & SWT.DROP_DOWN) != 0) width += 12;\r", "-\t/* This value comes from Windows */\r", "-\tint height = 22;\r", "-\tif (contentHeight != 0) {\r", "-\t\theight = contentHeight \r", "-\t\t\t+ (2 * marginHeight) \r", "-\t\t\t+ (2 * shadowThickness) \r", "-\t\t\t+ (2 * highlightThickness);\r", "+\t/* The 24 and 22 values come from Windows */\r", "+\tif (width != 0) {\r", "+\t\twidth += (marginWidth + shadowThickness) * 2 + 2;\r", "+\t} else {\r", "+\t\twidth = 24;\r", "-\t\r", "-\t/* This value comes from Windows */\t\r", "-\tint width = 24;\r", "-\tif (contentWidth != 0) {\r", "-\t\twidth = contentWidth\r", "-\t\t\t+ (2 * marginWidth) \r", "-\t\t\t+ (2 * shadowThickness) \r", "-\t\t\t+ (2 * highlightThickness);\r", "+\tif (height != 0) {\r", "+\t\theight += (marginHeight + shadowThickness) * 2 + 2;\r", "+\t} else {\r", "+\t\theight = 22;\r", "-\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec123980f06a4c298d055f92ff759dac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 5, "signatureBeforeChange": " Point computeSize ()", "signatureAfterChange": "  Point computeSize ()", "diff": ["-}", "+", "-\tif ((style & SWT.SEPARATOR) != 0) {", "-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetControlBounds(handle, bounds.getData());", "-\t\treturn bounds.getSize();", "-\t}", "-\t/* AW", "-\tint [] argList = {", "-\t\tOS.XmNmarginHeight, 0,", "-\t\tOS.XmNmarginWidth, 0,", "-\t\tOS.XmNshadowThickness, 0,", "-\t};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint marginHeight = argList [1], marginWidth = argList [3];", "-\tint shadowThickness = argList [5];", "-\t*/", "-\tint marginHeight = 2, marginWidth = 2;", "-\tint shadowThickness = 1;", "-\tif ((parent.style & SWT.FLAT) != 0) {", "-\t\tDisplay display = getDisplay ();", "-\t\tshadowThickness = Math.min (2, display.buttonShadowThickness);", "-\t}", "-\tint textWidth = 0, textHeight = 0;", "-\tif (text.length () != 0) {", "-\t\tGC gc = new GC (parent);", "-\t\tint flags = SWT.DRAW_DELIMITER | SWT.DRAW_TAB | SWT.DRAW_MNEMONIC;", "-\t\tPoint textExtent = gc.textExtent (text, flags);", "-\t\ttextWidth = textExtent.x;", "-\t\ttextHeight = textExtent.y;", "-\t\tgc.dispose ();", "-\t}", "-\tint imageWidth = 0, imageHeight = 0;", "-\tif (image != null) {", "-\t\tRectangle rect = image.getBounds ();", "-\t\timageWidth = rect.width;", "-\t\timageHeight = rect.height;", "-\t}", "+\tcheckWidget();", "-\tif ((parent.style & SWT.RIGHT) != 0) {", "-\t\twidth = imageWidth + textWidth;", "-\t\theight = Math.max (imageHeight, textHeight);", "-\t\tif (imageWidth != 0 && textWidth != 0) width += 2;", "+\tif ((style & SWT.SEPARATOR) != 0) {", "+\t\tif ((style & SWT.HORIZONTAL) != 0) {", "+\t\t\twidth = getWidth ();", "+\t\t\theight = DEFAULT_HEIGHT;", "+\t\t} else {", "+\t\t\twidth = DEFAULT_WIDTH;", "+\t\t\theight = getWidth ();", "+\t\t}", "-\t\theight = imageHeight + textHeight;", "-\t\tif (imageHeight != 0 && textHeight != 0) height += 2;", "-\t\twidth = Math.max (imageWidth, textWidth);", "-\t}", "-\tif ((style & SWT.DROP_DOWN) != 0) width += 12;", "-\t", "-\tif (width != 0) {", "-\t\twidth += (marginWidth + shadowThickness) * 2 + 2;", "-\t} else {", "-\t\twidth = DEFAULT_WIDTH;", "-\t}", "-\tif (height != 0) {", "-\t\theight += (marginHeight + shadowThickness) * 2 + 2;", "-\t} else {", "-\t\theight = DEFAULT_HEIGHT;", "+\t\tint space = 0;", "+\t\tint stringWidth = 0, stringHeight = 0;", "+\t\tif (text.length () != 0) {", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tPoint size = gc.stringExtent (text);", "+\t\t\tstringWidth = size.x;", "+\t\t\tstringHeight = size.y;", "+\t\t\tgc.dispose ();", "+\t\t}", "+\t\tint imageWidth = 0, imageHeight = 0;", "+\t\tif (image != null) {", "+\t\t\tif (text.length () != 0) space = 2;", "+\t\t\tRectangle rect = image.getBounds ();", "+\t\t\timageWidth = rect.width;", "+\t\t\timageHeight = rect.height;", "+\t\t}", "+\t\tif ((parent.style & SWT.RIGHT) != 0) {", "+\t\t\twidth = stringWidth + imageWidth;", "+\t\t\theight = Math.max (stringHeight, imageHeight);", "+\t\t} else {", "+\t\t\twidth = Math.max (stringWidth, imageWidth);", "+\t\t\theight = stringHeight + imageHeight;", "+\t\t}", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tint arrowWidth = 6; //NOT DONE", "+\t\t\twidth += 3 + arrowWidth;", "+\t\t}", "+\t\tint inset = 3;", "+\t\twidth += space + inset * 2;", "+\t\theight += space + inset * 2;"]}], "num": 39663}