{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d60aabc8bb968a83f974410b668238fc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba5c161d340fe702c8bc502c570fd021", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "10cff956b5a7baa336ed7e4f79deb8729cdad298", "commitAfterChange": "4a54739762437bd8066c9b7d36c4c3d14493b18a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tint count = url.length();", "-\tchar[] chars = new char[count + 1];", "-\turl.getChars(0, count, chars, 0);", "-\tint codePage = OS.GetACP();", "-\tint cchMultiByte = OS.WideCharToMultiByte(codePage, 0, chars, -1, null, 0, null, null);", "-\tif (cchMultiByte == 0) {", "+\tif (transferData.type == CFSTR_INETURLIDW) {", "+\t\tint charCount = url.length ();", "+\t\tchar[] chars = new char[charCount+1];", "+\t\turl.getChars (0, charCount, chars, 0);", "+\t\tint byteCount = chars.length * 2;", "+\t\tint /*long*/ newPtr = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, byteCount);", "+\t\tOS.MoveMemory(newPtr, chars, byteCount);", "-\t\ttransferData.result = COM.DV_E_STGMEDIUM;", "-\t\treturn;", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\ttransferData.stgmedium.unionField = newPtr;", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\ttransferData.result = COM.S_OK;", "+\t} else if (transferData.type == CFSTR_INETURLID) {", "+\t\tint count = url.length();", "+\t\tchar[] chars = new char[count + 1];", "+\t\turl.getChars(0, count, chars, 0);", "+\t\tint codePage = OS.GetACP();", "+\t\tint cchMultiByte = OS.WideCharToMultiByte(codePage, 0, chars, -1, null, 0, null, null);", "+\t\tif (cchMultiByte == 0) {", "+\t\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\t\ttransferData.result = COM.DV_E_STGMEDIUM;", "+\t\t\treturn;", "+\t\t}", "+\t\tint /*long*/ lpMultiByteStr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, cchMultiByte);", "+\t\tOS.WideCharToMultiByte(codePage, 0, chars, -1, lpMultiByteStr, cchMultiByte, null, null);", "+\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\ttransferData.stgmedium.unionField = lpMultiByteStr;", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\ttransferData.result = COM.S_OK;", "-\tint /*long*/ lpMultiByteStr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, cchMultiByte);", "-\tOS.WideCharToMultiByte(codePage, 0, chars, -1, lpMultiByteStr, cchMultiByte, null, null);", "-\ttransferData.stgmedium = new STGMEDIUM();", "-\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "-\ttransferData.stgmedium.unionField = lpMultiByteStr;", "-\ttransferData.stgmedium.pUnkForRelease = 0;", "-\ttransferData.result = COM.S_OK;", "-\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49867465166a322807ffaadfae55fb0d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public static boolean launch (String fileName)", "signatureAfterChange": "\r public static boolean launch (String fileName)", "diff": ["+\t\r", "-\tbyte [] OPEN = Converter.wcsToMbcs (0, \"open\", true);\r", "-\tbyte [] lpFile = Converter.wcsToMbcs (0, fileName, true);\r", "-\treturn OS.ShellExecute (0, OPEN, lpFile, null, null, OS.SW_SHOW) > 32;\r", "+\tint hHeap = OS.GetProcessHeap ();\r", "+\tTCHAR buffer1 = new TCHAR (0, \"open\", true);\r", "+\tint byteCount1 = buffer1.length () * TCHAR.sizeof;\r", "+\tint lpVerb = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount1);\r", "+\tOS.MoveMemory (lpVerb, buffer1, byteCount1);\r", "+\tTCHAR buffer2 = new TCHAR (0, fileName, true);\r", "+\tint byteCount2 = buffer2.length () * TCHAR.sizeof;\r", "+\tint lpFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount2);\r", "+\tOS.MoveMemory (lpFile, buffer2, byteCount2);\r", "+\t\r", "+\tSHELLEXECUTEINFO info = new SHELLEXECUTEINFO ();\r", "+\tinfo.cbSize = SHELLEXECUTEINFO.sizeof;\r", "+\tinfo.lpVerb = lpVerb;\r", "+\tinfo.lpFile = lpFile;\r", "+\tinfo.nShow = OS.SW_SHOW;\r", "+\t\r", "+\tboolean result = OS.ShellExecuteEx (info);\r", "+\t\t\r", "+\tif (lpVerb != 0) OS.HeapFree (hHeap, 0, lpVerb);\t\r", "+\tif (lpFile != 0) OS.HeapFree (hHeap, 0, lpFile);\r", "+\t\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db745ccf66f2c59e42d96105de82119f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5ca9f19c3ae67d7b05114fa944051be6178e9094", "commitAfterChange": "61789e08650fd465876c4e0ddba32e2bb8e1d42b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\ttry {", "-\t\tString commandLine = prefix + fileName + suffix;", "-\t\tCompatibility.exec (commandLine);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tString commandLine = prefix + fileName + suffix;", "+\tint length = commandLine.length ();", "+\tchar [] buffer = new char [length + 1];", "+\tcommandLine.getChars (0, length, buffer, 0);", "+\tSTARTUPINFOW lpStartupInfo = new STARTUPINFOW ();", "+\tlpStartupInfo.cb = STARTUPINFOW.sizeof;", "+\tPROCESS_INFORMATION lpProcessInformation = new PROCESS_INFORMATION ();", "+\tboolean success = OS.CreateProcessW (0, buffer, 0, 0, false, 0, 0, 0, lpStartupInfo, lpProcessInformation);", "+\tif (lpProcessInformation.hProcess != 0) OS.CloseHandle (lpProcessInformation.hProcess);", "+\tif (lpProcessInformation.hThread != 0) OS.CloseHandle (lpProcessInformation.hThread);", "+\treturn success;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12cd38fe198bab64c5ce1dd44f62447b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "5be038b998cd27bf503c68ee3f43ba54105e38ff", "commitAfterChange": "fb65c554be6a3a1e1959739ca6c1354d5cc361a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": "\r public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof String)) return;\r", "-\t\t\r", "+\tif (object == null || !(object instanceof String)) {\r", "+\t\ttransferData.result = COM.E_FAIL;\r", "+\t\treturn;\r", "+\t}\r", "-\t// create a byte array from object\r", "-\tString text = (String) object+'\\0';\r", "-\t// pass byte array on to super to convert to native\r", "-\tsuper.javaToNative(text.getBytes(), transferData);\r", "+\tif (isSupportedType(transferData)) {\r", "+\t\tString string = (String)object;\r", "+\t\tint count = string.length ();\r", "+\t\tchar [] buffer = new char [count + 1];\r", "+\t\tstring.getChars (0, count, buffer, 0);\r", "+\t\tint cchMultiByte = OS.WideCharToMultiByte (CodePage, 0, buffer, -1, null, 0, null, null);\r", "+\t\tif (cchMultiByte == 0) {\r", "+\t\t\ttransferData.stgmedium = new STGMEDIUM();\r", "+\t\t\ttransferData.result = COM.DV_E_STGMEDIUM;\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\tint lpMultiByteStr = COM.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, cchMultiByte);\r", "+\t\tOS.WideCharToMultiByte (CodePage, 0, buffer, -1, lpMultiByteStr, cchMultiByte, null, null);\r", "+\t\ttransferData.stgmedium = new STGMEDIUM();\r", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;\r", "+\t\ttransferData.stgmedium.unionField = lpMultiByteStr;\r", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;\r", "+\t\ttransferData.result = COM.S_OK;\r", "+\t\treturn;\r", "+\t}\r", "+\t\r", "+\t// did not match the TYMED\r", "+\ttransferData.stgmedium = new STGMEDIUM();\r", "+\ttransferData.result = COM.DV_E_TYMED;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d948965147b490e5d3e27f744b14bf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "74553fa6850361f786837718de64643b391519f8", "commitAfterChange": "bf33a068cd8d34feb66b3cb1cbaacdbe09b72620", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof String)) {", "-\t\ttransferData.result = COM.E_FAIL;", "-\t\treturn;", "-\t}", "-\t", "-\tif (isSupportedType(transferData)) {", "-\t\tTCHAR buffer = new TCHAR(0, (String)object, true);", "-\t\tint byteCount = buffer.length() * TCHAR.sizeof;", "-\t\tint newPtr = COM.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, byteCount);", "-\t\tCOM.MoveMemory(newPtr, buffer, byteCount);", "-\t\t", "+\ttransferData.result = COM.E_FAIL;", "+\tif (object == null || !(object instanceof String)) return;", "+\tif (!isSupportedType(transferData)) {", "+\t\t// did not match the TYMED", "-\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "-\t\ttransferData.stgmedium.unionField = newPtr;", "-\t\ttransferData.stgmedium.pUnkForRelease = 0;", "-\t\ttransferData.result = COM.S_OK;", "+\t\ttransferData.result = COM.DV_E_TYMED;", "-\t", "-\t// did not match the TYMED", "-\ttransferData.stgmedium = new STGMEDIUM();", "-\ttransferData.result = COM.DV_E_TYMED;", "-\t", "+\tswitch (transferData.type) {", "+\t\tcase COM.CF_UNICODETEXT: {", "+\t\t\tTCHAR buffer = new TCHAR(0, (String)object, true);", "+\t\t\tint byteCount = buffer.length() * TCHAR.sizeof;", "+\t\t\tint newPtr = COM.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, byteCount);", "+\t\t\tCOM.MoveMemory(newPtr, buffer, byteCount);\t", "+\t\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\t\ttransferData.stgmedium.unionField = newPtr;", "+\t\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\t\ttransferData.result = COM.S_OK;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase COM.CF_TEXT: {", "+\t\t\tString string = (String)object;", "+\t\t\tint count = string.length();", "+\t\t\tif (count == 0) return;", "+\t\t\tchar[] chars = new char[count + 1];", "+\t\t\tstring.getChars(0, count, chars, 0);", "+\t\t\tint cchMultiByte = COM.WideCharToMultiByte(CodePage, 0, chars, -1, null, 0, null, null);", "+\t\t\tif (cchMultiByte == 0) {", "+\t\t\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\t\t\ttransferData.result = COM.DV_E_STGMEDIUM;", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tint lpMultiByteStr = COM.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, cchMultiByte);", "+\t\t\tCOM.WideCharToMultiByte(CodePage, 0, chars, -1, lpMultiByteStr, cchMultiByte, null, null);", "+\t\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\t\ttransferData.stgmedium.unionField = lpMultiByteStr;", "+\t\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\t\ttransferData.result = COM.S_OK;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb2c707eb2e3b9f252579cc63db8fd7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "0965c047c4647355d2d59defeda7977f1c34f584", "commitAfterChange": "cc500238418d38b85dc837cf8469541ca5f69f28", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": "\r public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tif (object == null || !(object instanceof String)) return;\r", "+\tif (object == null || !(object instanceof String)) {\r", "+\t\ttransferData.result = COM.E_FAIL;\r", "+\t\treturn;\r", "+\t}\r", "+\t\r", "+\tif (isSupportedType(transferData)) {\r", "+\t\tTCHAR buffer = new TCHAR(0, (String)object, true);\r", "+\t\tint byteCount = buffer.length() * TCHAR.sizeof;\r", "+\t\tint newPtr = COM.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, byteCount);\r", "+\t\tCOM.MoveMemory(newPtr, buffer, byteCount);\r", "-\t// CF_TEXT is stored as a null terminated byte array\r", "-\t// create a byte array from object\r", "-\tString text = (String) object+'\\0';\r", "-\t// pass byte array on to super to convert to native\r", "-\tsuper.javaToNative(text.getBytes(), transferData);\r", "+\t\ttransferData.stgmedium = new STGMEDIUM();\r", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;\r", "+\t\ttransferData.stgmedium.unionField = newPtr;\r", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;\r", "+\t\ttransferData.result = COM.S_OK;\r", "+\t\treturn;\r", "+\t}\r", "+\t\r", "+\t// did not match the TYMED\r", "+\ttransferData.stgmedium = new STGMEDIUM();\r", "+\ttransferData.result = COM.DV_E_TYMED;\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ae56cdf4c22c2b7a9ba8cd223b1edc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/wpf/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5ca9f19c3ae67d7b05114fa944051be6178e9094", "commitAfterChange": "61789e08650fd465876c4e0ddba32e2bb8e1d42b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public static boolean launch (String fileName)", "signatureAfterChange": " public static boolean launch (String fileName)", "diff": ["-\tif (fileName == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "-\ttry {", "-\t\tCompatibility.exec (fileName);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tif (fileName == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\t", "+\tint hHeap = OS.GetProcessHeap ();", "+\tint length = fileName.length ();", "+\tchar [] buffer = new char [length + 1];", "+\tfileName.getChars (0, length, buffer, 0);", "+\tint byteCount = buffer.length  * 2;", "+\tint lpFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tOS.MoveMemory (lpFile, buffer, byteCount);", "+\tSHELLEXECUTEINFOW info = new SHELLEXECUTEINFOW ();", "+\tinfo.cbSize = SHELLEXECUTEINFOW.sizeof;", "+\tinfo.lpFile = lpFile;", "+\tinfo.nShow = OS.SW_SHOW;", "+\tboolean result = OS.ShellExecuteExW (info);", "+\tif (lpFile != 0) OS.HeapFree (hHeap, 0, lpFile);", "+\treturn result;"]}], "num": 733}