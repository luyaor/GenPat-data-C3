{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "135df1590758620a796627b49c385912", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcf39238bb4351377aa89fff9348879", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "df55805e4a74ab0fc8f545a1792d755c95a4e419", "commitAfterChange": "b178ded274cefa13fff8fc6fb8115ee14a844dc8", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": "  void setClipping(long clipRgn)", "signatureAfterChange": "  void setClipping(long clipRgn)", "diff": ["-\t\t\tOS.gdk_region_destroy(data.clipRgn);", "+\t\t\tcairo_region_destroy (data.clipRgn);", "-\t\tif (data.clipRgn == 0) data.clipRgn = OS.gdk_region_new();", "-\t\tOS.gdk_region_subtract(data.clipRgn, data.clipRgn);", "-\t\tOS.gdk_region_union(data.clipRgn, clipRgn);", "+\t\tif (data.clipRgn == 0) data.clipRgn = cairo_region_create ();", "+\t\tcairo_region_subtract (data.clipRgn, data.clipRgn);", "+\t\tcairo_region_union (data.clipRgn, clipRgn);", "-\t\t\t\tclipping = OS.gdk_region_new();", "-\t\t\t\tOS.gdk_region_union(clipping, clipRgn);", "-\t\t\t\tOS.gdk_region_intersect(clipping, data.damageRgn);", "+\t\t\t\tclipping = cairo_region_create ();", "+\t\t\t\tcairo_region_union (clipping, clipRgn);", "+\t\t\t\tcairo_region_intersect (clipping, data.damageRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f932d210570840bbb9b414797f0f79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "fd96aaa0e3904559327e9667898cb5328ebabee0", "commitAfterChange": "313563943c29ee266380e6415239b78d7819595d", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tprivate boolean focus(boolean doClip, Rect bounds)", "signatureAfterChange": " \t \tprivate boolean focus(boolean doClip, Rect bounds)", "diff": ["-", "-\t\tif (fIsFocused && !fPendingClip) {", "+\t\tif (data.isFocused && !data.pendingClip) {", "-\t\tOS.GetGWorld(fSavePort, fSaveGWorld);\t\t", "-\t\tOS.SetGWorld(handle, fSaveGWorld[0]);", "+\t\tOS.GetGWorld(data.savePort, data.saveGWorld);\t\t", "+\t\tOS.SetGWorld(handle, data.saveGWorld[0]);", "-\t\tOS.GetClip(fSaveClip);", "+\t\tOS.GetClip(data.saveClip);", "-\t\t\tif (fDamageRgn == 0) {", "+\t\t\tif (data.damageRgn == 0) {", "-\t\t\t\tMacUtil.getVisibleRegion(data.controlHandle, result, fClipAgainstChildren); ", "+\t\t\t\tMacUtil.getVisibleRegion(data.controlHandle, result, data.clipAgainstChildren); ", "-\t\t\t\tOS.CopyRgn(fDamageRgn, result);", "+\t\t\t\tOS.CopyRgn(data.damageRgn, result);", "-\t\tfPendingClip= false;", "+\t\tdata.pendingClip= false;"]}], "num": 42020}