{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2c4792e23f062df5c483c522db2f661a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc02f3ca9ad6f1fb325336b4d7f66558", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 4, "signatureBeforeChange": " void recomputeTextWidths (GC gc)", "signatureAfterChange": " void calculateVisibleItemCount()", "diff": ["+ */", "+void calculateVisibleItemCount() {", "+\tVector children;", "+\tTreeItem2 child;", "+\tint visibleItemCount = 0;", "+\t", "+\t// check isExpanded field directly for performance", "+\tif (internalGetExpanded() == true) {", "+\t\tchildren = getChildren();", "+\t\tvisibleItemCount = children.size();", "+\t\tfor (int i = 0; i < children.size(); i++) {", "+\t\t\tchild = (TreeItem2) children.elementAt(i);", "+\t\t\tvisibleItemCount += child.getVisibleItemCount();", "+\t\t}", "+\t}", "+\tsetVisibleItemCount(visibleItemCount);", "+\tcalculateVisibleItemCountParent();", "+}", "-}", "-void recomputeTextWidths (GC gc) {", "-\ttextWidths = new int [texts.length];", "-\tFont oldFont = gc.getFont ();", "-\tfor (int i = 0; i < texts.length; i++) {", "-\t\tString value = texts [i];", "-\t\tif (value != null) {", "-\t\t\tboolean fontChanged = false;", "-\t\t\tFont font = getFont (i);", "-\t\t\tif (!font.equals (oldFont)) {", "-\t\t\t\tgc.setFont (font);", "-\t\t\t\tfontChanged = true;", "-\t\t\t}", "-\t\t\ttextWidths[i] = gc.textExtent (value).x;", "-\t\t\tif (fontChanged) gc.setFont (oldFont);", "-\t\t}", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be806f3d51b2b7c2d1812215ff696a6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 40, "signatureBeforeChange": " void drawText(String label, GC gc, Point position, int index)", "signatureAfterChange": " void recomputeTextWidths (GC gc)", "diff": ["- */", "-void drawText(String label, GC gc, Point position, int index) {", "-\tTable parent = getParent();", "-\tint textOffset, alignmentOffset;", "-\tif (label != null) {", "-\t\tgc.setFont(getFont(index));", "-\t\tboolean drawSelection = (index == TableColumn.FIRST || (parent.getStyle() & SWT.FULL_SELECTION) != 0) &&", "-\t\t\t((parent.style & SWT.HIDE_SELECTION) == 0 || parent.isFocusControl());", "-\t\tif (isSelected() == true && drawSelection == true) {", "-\t\t\tgc.setForeground(getSelectionForegroundColor());", "-\t\t} else {", "-\t\t\tgc.setForeground(getForeground(index));", "-\t\talignmentOffset = getAlignmentOffset (index, getBounds(index).width, gc);", "-\t\ttextOffset = (parent.getItemHeight() - parent.getFontHeight()) / 2;\t\t\t// vertically center the text", "-\t\tgc.drawString(label, position.x + alignmentOffset, position.y + textOffset, true);", "+void recomputeTextWidths (GC gc) {", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\ttextWidths = new int [validColumnCount];", "+\tFont oldFont = gc.getFont ();", "+\tfor (int i = 0; i < textWidths.length; i++) {", "+\t\tString value = getDisplayText (i);", "+\t\tif (value != null) {", "+\t\t\tboolean fontChanged = false;", "+\t\t\tFont font = getFont (i);", "+\t\t\tif (!font.equals (oldFont)) {", "+\t\t\t\tgc.setFont (font);", "+\t\t\t\tfontChanged = true;", "+\t\t\t}", "+\t\t\ttextWidths [i] = gc.textExtent (value).x;", "+\t\t\tif (fontChanged) gc.setFont (oldFont);"]}], "num": 33272}