{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25387df5787c80aa630fbe21fafd4b3e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a914924b547fa5de38a98a546379aaf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "730383938344c8db63a066870828ce1e9edbaeff", "commitAfterChange": "ff5cee0ddb447114a3cb637cbfa7673f5548d1d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\tint selBrush = 0;", "-\tif (hasSelection) selBrush = OS.CreateSolidBrush (selectionBackground.handle);", "+\tint selBrush = 0, selPen = 0;", "+\tif (hasSelection) {", "+\t\tselBrush = OS.CreateSolidBrush(selectionBackground.handle);", "+\t\tselPen = OS.CreatePen(OS.BS_SOLID, 1, selectionForeground.handle);", "+\t}", "+\t\t\t\t\tif ((run.style != null) && (run.style.underline || run.style.strikeout)) {", "+\t\t\t\t\t\tint newPen = fg == selectionForeground.handle ? selPen : OS.CreatePen(OS.BS_SOLID, 1, fg);", "+\t\t\t\t\t\tint oldPen = OS.SelectObject(hdc, newPen);", "+\t\t\t\t\t\tif (run.style.underline) {", "+\t\t\t\t\t\t\tint underlineY = drawY + baseline + 1;", "+\t\t\t\t\t\t\tOS.MoveToEx(hdc, drawX, underlineY, 0);", "+\t\t\t\t\t\t\tOS.LineTo(hdc, drawX + run.width, underlineY);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (run.style.strikeout) {", "+\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.leading + run.ascent / 2;", "+\t\t\t\t\t\t\tOS.MoveToEx(hdc, drawX, strikeoutY, 0);", "+\t\t\t\t\t\t\tOS.LineTo(hdc, drawX + run.width, strikeoutY);\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.SelectObject(hdc, oldPen);", "+\t\t\t\t\t\tif (fg != selectionForeground.handle) OS.DeleteObject(newPen);", "+\t\t\t\t\t}", "+\t\t\t\t\t\tif ((run.style != null) && (run.style.underline || run.style.strikeout)) {\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tint oldPen = OS.SelectObject(hdc, selPen);", "+\t\t\t\t\t\t\tif (run.style.underline) {", "+\t\t\t\t\t\t\t\tint underlineY = drawY + baseline + 1;", "+\t\t\t\t\t\t\t\tOS.MoveToEx(hdc, rect.left, underlineY, 0);", "+\t\t\t\t\t\t\t\tOS.LineTo(hdc, rect.right, underlineY);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (run.style.strikeout) {", "+\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.leading + run.ascent / 2;", "+\t\t\t\t\t\t\t\tOS.MoveToEx(hdc, rect.left, strikeoutY, 0);", "+\t\t\t\t\t\t\t\tOS.LineTo(hdc, rect.right, strikeoutY);\t", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tOS.SelectObject(hdc, oldPen);", "+\t\t\t\t\t\t}", "+\tif (selPen != 0) OS.DeleteObject (selPen);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86039d034f95a78dd5d8f9a10291660d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "c2fae840e2c4504c79425ea45901026fd92628c1", "commitAfterChange": "3fa364044e14640667896a5a3291a209ebfed153", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color)", "diff": ["-\t\tint /*long*/ newPen = 0;", "-\t\t\tnewPen = Gdip.Pen_new(color, run.underlineThickness);", "-\t\t\tGdip.Graphics_DrawLine(graphics, newPen, x, underlineY, x + run.width, underlineY);", "+\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, underlineY, run.width, run.underlineThickness);", "-\t\t\tif (newPen == 0 || run.strikeoutThickness != run.underlineThickness) {", "-\t\t\t\tif (newPen != 0) {", "-\t\t\t\t\tGdip.Pen_delete(newPen);", "-\t\t\t\t}", "-\t\t\t\tnewPen = Gdip.Pen_new(color, run.strikeoutThickness);", "-\t\t\t}", "-\t\t\tGdip.Graphics_DrawLine(graphics, newPen, x, strikeoutY, x + run.width, strikeoutY);", "+\t\t\tGdip.Graphics_FillRectangle(graphics, color, x, strikeoutY, run.width, run.strikeoutThickness);", "-\t\tGdip.Pen_delete(newPen);", "-\t\tint /*long*/ newPen = 0;", "-\t\tint /*long*/ oldPen = 0;", "+\t\tint /*long*/ brush = OS.CreateSolidBrush((int)/*64*/color);", "+\t\tRECT rect = new RECT();", "-\t\t\tnewPen = OS.CreatePen(OS.PS_SOLID, run.underlineThickness, (int)/*64*/color);", "-\t\t\toldPen = OS.SelectObject(graphics, newPen);", "-\t\t\tOS.MoveToEx(graphics, x, underlineY, 0);", "-\t\t\tOS.LineTo(graphics, x + run.width, underlineY);", "+\t\t\tOS.SetRect(rect, x, underlineY, x + run.width, underlineY + run.underlineThickness);", "+\t\t\tOS.FillRect(graphics, rect, brush);", "-\t\t\tif (newPen == 0 || run.strikeoutThickness != run.underlineThickness) {", "-\t\t\t\tif (newPen != 0) {", "-\t\t\t\t\tOS.SelectObject(graphics, oldPen);", "-\t\t\t\t\tOS.DeleteObject(newPen);", "-\t\t\t\t}", "-\t\t\t\tnewPen = OS.CreatePen(OS.PS_SOLID, run.strikeoutThickness, (int)/*64*/color);", "-\t\t\t\toldPen = OS.SelectObject(graphics, newPen);", "-\t\t\t}", "-\t\t\tOS.MoveToEx(graphics, x, strikeoutY, 0);", "-\t\t\tOS.LineTo(graphics, x + run.width, strikeoutY);\t", "+\t\t\tOS.SetRect(rect, x, strikeoutY, x + run.width, strikeoutY + run.strikeoutThickness);", "+\t\t\tOS.FillRect(graphics, rect, brush);", "-\t\tOS.SelectObject(graphics, oldPen);", "-\t\tOS.DeleteObject(newPen);", "+\t\tOS.DeleteObject(brush);"]}], "num": 57887}