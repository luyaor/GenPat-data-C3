{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eeed8f5b7e4de5e3307916a210b6f59f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6bf1c8ce20fccd3ce0595b7f41db8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e477a4358e3d45070bae31c4dbb6a267e439c2a4", "commitAfterChange": "22ef6cb2f9d6090c9cecda0b3ee039cf6ee05768", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\tevent.x = xEvent.x;  event.y = xEvent.y;", "-\tevent.width = xEvent.width;  event.height = xEvent.height;", "-\tGC gc = event.gc = new GC (this);", "-\tgc.setClipping (event.x, event.y, event.width, event.height);", "+\tevent.x = xEvent.x;", "+\tevent.y = xEvent.y;", "+\tevent.width = xEvent.width;", "+\tevent.height = xEvent.height;", "+\tXRectangle rect = new XRectangle ();", "+\trect.x = (short) xEvent.x;", "+\trect.y = (short) xEvent.y;", "+\trect.width = (short) xEvent.width;", "+\trect.height = (short) xEvent.height;", "+\tint damageRgn = OS.XCreateRegion ();", "+\tOS.XUnionRectWithRegion (rect, damageRgn, damageRgn);", "+\tGCData data = new GCData();", "+\tdata.damageRgn = damageRgn;", "+\tGC gc = event.gc = GC.motif_new(this, data);", "+\tOS.XSetRegion (xDisplay, gc.handle, damageRgn);", "-\tif (!gc.isDisposed ()) gc.dispose ();", "+\tgc.dispose ();", "+\tOS.XDestroyRegion(damageRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee94678422bba8662344ac4f324238f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["+", "-\tint handle = parent.handle;", "-\t", "-\tint clipRgn= OS.NewRgn();", "-\tMacUtil.getVisibleRegion(parent.handle, clipRgn, true);", "-", "-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(parent.handle, bounds.getData());", "-\tbounds= new MacRect(x+bounds.getX(), y+bounds.getY(), nWidth, nHeight);", "-\t", "-\tint caretRgn= OS.NewRgn();", "-\tOS.RectRgn(caretRgn, bounds.getData());", "-\tOS.SectRgn(caretRgn, clipRgn, caretRgn);", "-\t", "-\tif (!OS.EmptyRgn(caretRgn)) {", "-\t\tint port= OS.GetPort();", "-\t\tOS.SetPortWindowPort(OS.GetControlOwner(handle));\t", "-\t\tOS.InvertRgn(caretRgn);", "-\t\tOS.SetPort(port);", "-\t}", "-\t", "-\tOS.DisposeRgn(clipRgn);", "-\tOS.DisposeRgn(caretRgn);", "-", "+\tint parentHandle = parent.handle;", "+\tint window = OS.GetControlOwner (parentHandle);", "+\tint port = OS.GetWindowPort (window);", "+\tint [] currentPort = new int [1];", "+\tOS.GetPort (currentPort);", "+\tOS.SetPort (port);", "+\tint oldClip = OS.NewRgn ();", "+\tint visibleRgn = getVisibleRegion (parentHandle);", "+\tOS.GetClip (oldClip);", "+\tOS.SetClip (visibleRgn);", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (parentHandle, rect);", "+\tint left = rect.left + x;", "+\tint top = rect.top + y;", "+\tOS.SetRect(rect, (short) left, (short) top, (short) (left + nWidth), (short) (top + nHeight));", "+\tRGBColor color = new RGBColor ();", "+\tcolor.red = (short) 0xFFFF;", "+\tcolor.green = (short) 0xFFFF;", "+\tcolor.blue = (short) 0xFFFF;", "+\tOS.RGBBackColor (color);", "+\tOS.InvertRect (rect);\t", "+\tOS.SetClip (oldClip);", "+\tOS.DisposeRgn (visibleRgn);", "+\tOS.DisposeRgn (oldClip);", "+\tOS.SetPort (currentPort [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "138bdd571a408aaec8b63b7f2eaf6495", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "b7a00bf87c6bba490035767725a315da54b8693f", "commitAfterChange": "27a42a02f1d3398db6d0fbf73906bf95e2b7693c", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 86, "signatureBeforeChange": "  void redrawWidget (int control)", "signatureAfterChange": "  void redrawWidget (int control, int x, int y, int width, int height, boolean children)", "diff": ["-void redrawWidget (int control) {", "-\tredrawWidget (control, false);", "+void redrawWidget (int control, int x, int y, int width, int height, boolean children) {", "+\tif (!isDrawing (control)) return;", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (control, rect);", "+\tx += rect.left;", "+\ty += rect.top;", "+\tOS.SetRect (rect, (short) x, (short) y, (short) (x + width), (short) (y + height));", "+\tint rectRgn = OS.NewRgn();", "+\tOS.RectRgn (rectRgn, rect);", "+\tint visibleRgn = getVisibleRegion (control, !children);", "+\tOS.SectRgn (rectRgn, visibleRgn, visibleRgn);", "+\tOS.InvalWindowRgn (window, visibleRgn);", "+\tOS.DisposeRgn (rectRgn);", "+\tOS.DisposeRgn (visibleRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40174dc9a1101c9417daacc2c35ed60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "a7462f6b30f403b541de53811b1a2d45dd86b987", "commitAfterChange": "37c3fc5edd360862e04e4236fb6d1206ffdadd53", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void oldRelayout()", "signatureAfterChange": " \t \tprivate void oldRelayout()", "diff": ["-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetControlBounds(hndl, bounds.getData());", "+\t\tRect bounds= new Rect();", "+\t\tOS.GetControlBounds(hndl, bounds);", "-\t\tint x= bounds.getX();", "-\t\tint y= bounds.getY();", "-\t\tint w= bounds.getWidth();", "-\t\tint h= bounds.getHeight();", "+\t\tint x= bounds.left;", "+\t\tint y= bounds.top;", "+\t\tint w= bounds.right-bounds.left;", "+\t\tint h= bounds.bottom-bounds.top;", "-\t\tif (hsb != null)", "-\t\t\thsb.internalSetBounds(new MacRect(x, y+h-s, ww, s));", "+\t\tRect rect = new Rect();", "+\t\tif (hsb != null) {", "+\t\t\tOS.SetRect(rect, (short)x, (short)(y+h-s), (short)(x+ww), (short)(y+h));", "+\t\t\thsb.internalSetBounds(rect);", "+\t\t}", "-\t\tif (vsb != null)", "-\t\t\tvsb.internalSetBounds(new MacRect(x+w-s, y, s, hh));", "+\t\tif (vsb != null) {", "+\t\t\tOS.SetRect(rect, (short)(x+w-s), (short)y, (short)(x+w), (short)(y+hh));", "+\t\t\tvsb.internalSetBounds(rect);", "+\t\t}", "-\t\tOS.SetControlBounds(handle, new MacRect(x, y, ww, hh).getData());", "+\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x+ww), (short)(y+hh));", "+\t\tOS.SetControlBounds(handle, rect);", "-\t\tif (ww != w && hh != h)", "-\t\t\tOS.InvalWindowRect(OS.GetControlOwner(handle), new MacRect(x+w-s, y+h-s, s, s).getData());", "+\t\tif (ww != w && hh != h) {", "+\t\t\tOS.SetRect(rect, (short)(x+w-s), (short)(y+h-s), (short)(x+w), (short)(y+h));", "+\t\t\tOS.InvalWindowRect(OS.GetControlOwner(handle), rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90a7ad245c6f64c1002361701d4135d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d3e6e1240786b37729a4402b475774900289164f", "commitAfterChange": "37e38fc8a2a2f0d1ea6ec96886a9dec8af756c5e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-\tif (data.clipRgn == 0) {", "+\tif (data.control == 0) {", "-\t\tif (data.control != 0) {", "-\t\t\tRect bounds = new Rect();", "-\t\t\tOS.GetControlBounds(data.control, bounds);", "-\t\t\twidth = bounds.right - bounds.left;", "-\t\t\theight = bounds.bottom - bounds.top;", "-\t\t}", "-\tOS.CopyRgn(data.clipRgn, region.handle);", "+\tRect bounds = new Rect();", "+\tOS.GetControlBounds(data.control, bounds);", "+\tint clipping = region.handle;", "+\tOS.RectRgn(clipping, bounds);", "+\tOS.OffsetRgn(clipping, (short)-bounds.left, (short)-bounds.top);", "+\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "+\tif (data.visibleRgn != 0) {", "+\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);", "+\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);", "+\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757815548855b2c6ef9a1962178c2915", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "99d6fcb049f30826891f5e43c733f0471a09002c", "commitAfterChange": "0130d9e1c9ef3c97a2921f233db1adae9cedcfdc", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "  public void update ()", "signatureAfterChange": "  public void update ()", "diff": ["-\tint updateRgn = OS.NewRgn ();", "-\tOS.GetPortVisibleRegion (port, updateRgn);", "-\tif (!OS.EmptyRgn (updateRgn)) {", "-\t\tint [] currentPort = new int[1];", "-\t\tOS.GetPort (currentPort);", "-\t\tOS.SetPort (port);", "-\t\tOS.BeginUpdate (window);", "-\t\tOS.UpdateControls (window, updateRgn);", "-\t\tOS.EndUpdate (window);", "-\t\tOS.SetPort (currentPort [0]);", "+\tint portRgn = OS.NewRgn ();", "+\tOS.GetPortVisibleRegion (port, portRgn);", "+\tif (!OS.EmptyRgn (portRgn)) {", "+\t\tint updateRgn = OS.NewRgn ();", "+\t\tOS.GetWindowRegion (window, (short)OS.kWindowUpdateRgn, updateRgn);", "+\t\tif (!OS.EmptyRgn (updateRgn)) {", "+\t\t\tint visibleRgn = getVisibleRegion (handle, false);", "+\t\t\tif (!OS.EmptyRgn (visibleRgn)) {", "+\t\t\t\tRect rect = new Rect ();", "+\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t\t\tOS.OffsetRgn (updateRgn, (short)-rect.left, (short)-rect.top);", "+\t\t\t\tOS.SectRgn (portRgn, updateRgn, updateRgn);", "+\t\t\t\tOS.GetRegionBounds(updateRgn, rect);", "+\t\t\t\tif (!OS.EmptyRgn (updateRgn) && !OS.EmptyRgn (visibleRgn)) {", "+\t\t\t\t\tint [] currentPort = new int[1];", "+\t\t\t\t\tOS.GetPort (currentPort);", "+\t\t\t\t\tOS.SetPort (port);", "+\t\t\t\t\tOS.BeginUpdate (window);", "+\t\t\t\t\tOS.UpdateControls (window, updateRgn);", "+\t\t\t\t\tOS.EndUpdate (window);", "+\t\t\t\t\tOS.SetPort (currentPort [0]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.DisposeRgn (visibleRgn);", "+\t\t}", "+\t\tOS.DisposeRgn (updateRgn);", "-\tOS.DisposeRgn (updateRgn);", "+\tOS.DisposeRgn (portRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ba7aa94979810daeaccb21911c7d09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "e170e2bc039501aa7c5918930966f5f032805092", "commitAfterChange": "110b4344af4c3f47d218fd3738d3496877c5fb78", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "  int setBounds (int control, int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "signatureAfterChange": "  int setBounds (int control, int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "diff": ["+\t/*", "+\t* Bug in the Macintosh.  When HIViewSetDrawingEnabled() is used to", "+\t* turn off drawing for a control and the control is moved or resized, ", "+\t* the Mac does not redraw the area where the control once was in the", "+\t* parent.  The fix is to detect this case and redraw the area.", "+\t*/", "+\tif (!OS.HIViewIsDrawingEnabled (control)) {", "+\t\tint parent = OS.HIViewGetSuperview (control);", "+\t\tif (parent != 0 && OS.HIViewIsDrawingEnabled (parent)) {", "+\t\t\tint rgn = OS.NewRgn ();", "+\t\t\tRect rect = new Rect ();", "+\t\t\tOS.SetRect (rect, (short) oldBounds.x, (short) oldBounds.y, (short) (oldBounds.x + oldBounds.width), (short) (oldBounds.y + oldBounds.height));", "+\t\t\tOS.RectRgn (rgn, rect);", "+\t\t\tif (display.inPaint) {", "+\t\t\t\tOS.HIViewConvertRegion (rgn, parent, 0);", "+\t\t\t\tinvalWindowRgn (0, rgn);", "+\t\t\t} else {", "+\t\t\t\tOS.HIViewSetNeedsDisplayInRegion (parent, rgn, true);", "+\t\t\t}", "+\t\t\tOS.DisposeRgn (rgn);", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878ee1a716077bcd2351267f74723933", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d3e6e1240786b37729a4402b475774900289164f", "commitAfterChange": "37e38fc8a2a2f0d1ea6ec96886a9dec8af756c5e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public Rectangle getClipping()", "signatureAfterChange": " public Rectangle getClipping()", "diff": ["-\tif (data.clipRgn == 0) {", "+\tif (data.control == 0) {", "-\t\tif (data.control != 0) {", "-\t\t\tRect bounds = new Rect();", "-\t\t\tOS.GetControlBounds(data.control, bounds);", "-\t\t\twidth = bounds.right - bounds.left;", "-\t\t\theight = bounds.bottom - bounds.top;", "-\t\t}", "-\tOS.GetRegionBounds(data.clipRgn, bounds);", "+\tOS.GetControlBounds(data.control, bounds);", "+\tif (data.clipRgn == 0 && data.visibleRgn == 0) {", "+\t\tint width = bounds.right - bounds.left;", "+\t\tint height = bounds.bottom - bounds.top;", "+\t\treturn new Rectangle(0, 0, width, height);", "+\t}", "+\tint clipping = OS.NewRgn();", "+\tOS.RectRgn(clipping, bounds);", "+\tOS.OffsetRgn(clipping, (short)-bounds.left, (short)-bounds.top);", "+\tif (data.clipRgn != 0) OS.SectRgn(data.clipRgn, clipping, clipping);", "+\tif (data.visibleRgn != 0) {", "+\t\tOS.OffsetRgn(data.visibleRgn, (short)-bounds.left, (short)-bounds.top);", "+\t\tOS.SectRgn(data.visibleRgn, clipping, clipping);", "+\t\tOS.OffsetRgn(data.visibleRgn, bounds.left, bounds.top);", "+\t}", "+\tOS.GetRegionBounds(clipping, bounds);", "+\tOS.DisposeRgn(clipping);"]}], "num": 38019}