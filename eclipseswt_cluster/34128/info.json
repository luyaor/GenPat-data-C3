{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5da1b02ee0f0c43050ee59ed3824c188", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54970471d6a7abb8a477b47343e42ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Header.java", "commitBeforeChange": "9943b3d6da52f8de0da36e26e38ae4bfcae73ce9", "commitAfterChange": "3d30687988c783bc0ef4c36252ff6b060a49574b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r String getText(GC gc, int itemIndex)", "signatureAfterChange": " Point getImageExtent()", "diff": ["- */\r", "-String getText(GC gc, int itemIndex) {\r", "-\tString label = getText(itemIndex);\r", "-\tint maxWidth;\r", "-\r", "-\tif (label != null) {\r", "-\t\tmaxWidth = getMaxLabelWidth(itemIndex);\r", "-\t\tlabel = ((Table) getParent()).trimItemText(label, maxWidth, gc);\r", "-\t}\r", "-\treturn label;\r", "-}\r", "+ */", "+Point getImageExtent(){", "+\tImage image = null;", "+\tint labelCount = getItemCount();", "+\tfor (int i = 0; i < labelCount && image==null; i++) {", "+\t\timage = getImage(i);", "+\t}", "+\tif (image!= null){", "+\t\treturn new Point(image.getBounds().width,image.getBounds().height);", "+\t}", "+\treturn \tnew Point(0, 0);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01142232efe6886fc05fcea2fbbb6527", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "9e2e2840ac367eab30032d03153cd028ed78aaef", "commitAfterChange": "6a4fab6a6810d4c98deea393a2884fa3aa164dfe", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 48, "signatureBeforeChange": " int[] getLineSegments(int index, int[] defaultSegments)", "signatureAfterChange": " void setLineSegmentChars(int startLine, int count, char[] segmentChars)", "diff": ["-int[] getLineSegments(int index, int[] defaultSegments) {", "-\tif (lines == null) return defaultSegments;", "-\tLineInfo info = lines[index];", "-\tif (info != null && (info.flags & SEGMENTS) != 0) {", "-\t\treturn info.segments;", "-\t}", "-\treturn defaultSegments;", "-}", "+void setLineSegmentChars(int startLine, int count, char[] segmentChars) {", "+\tif (lines == null) lines = new LineInfo[lineCount];", "+\tfor (int i = startLine; i < startLine + count; i++) {", "+\t\tif (lines[i] == null) {", "+\t\t\tlines[i] = new LineInfo();", "+\t\t}", "+\t\tlines[i].flags |= SEGMENT_CHARS;", "+\t\tlines[i].segmentsChars = segmentChars;", "+\t}", "+}"]}], "num": 34128}