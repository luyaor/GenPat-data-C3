{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e2451f5658781e51d566ef02219fa71", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff4a4249685d567c1e1c47db200175f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "8093e4de11a4b3e09a48b5b00387350ee1d8feab", "commitAfterChange": "13c317ac82402adf05ac5fa6773736f7f5a76841", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "  int OnStartURIOpen (int aURI, int retval)", "signatureAfterChange": "  int OnStartURIOpen (int aURI, int retval)", "diff": ["+\tauthCount = 0;", "+", "-\t\t\tif (doit && jsEnabledChanged) {", "-\t\t\t\tjsEnabledChanged = false;", "-", "-\t\t\t\tint /*long*/[] result = new int /*long*/[1];", "-\t\t\t\tint rc = webBrowser.QueryInterface (nsIWebBrowserSetup.NS_IWEBBROWSERSETUP_IID, result);", "-\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "-", "-\t\t\t\tnsIWebBrowserSetup setup = new nsIWebBrowserSetup (result[0]);", "-\t\t\t\tresult[0] = 0;", "-\t\t\t\trc = setup.SetProperty (nsIWebBrowserSetup.SETUP_ALLOW_JAVASCRIPT, jsEnabled ? 1 : 0);", "-\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "-\t\t\t\tsetup.Release ();", "+\t\t\tif (doit) {", "+\t\t\t\tif (jsEnabledChanged) {", "+\t\t\t\t\tjsEnabledChanged = false;", "+\t", "+\t\t\t\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\t\t\t\tint rc = webBrowser.QueryInterface (nsIWebBrowserSetup.NS_IWEBBROWSERSETUP_IID, result);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+\t", "+\t\t\t\t\tnsIWebBrowserSetup setup = new nsIWebBrowserSetup (result[0]);", "+\t\t\t\t\tresult[0] = 0;", "+\t\t\t\t\trc = setup.SetProperty (nsIWebBrowserSetup.SETUP_ALLOW_JAVASCRIPT, jsEnabled ? 1 : 0);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\t\t\tsetup.Release ();", "+\t\t\t\t}", "+\t\t\t\tlastNavigateURL = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61eee34465b9f3d8337101ebb4af2f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "59c942d907fe880340f3cd92acf69e830cc831bb", "commitAfterChange": "56f17f635b5e99bd6a800e409a11b7ed0d58babd", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public boolean setText (String html)", "signatureAfterChange": "  public boolean setText (String html)", "diff": ["-\t * First detect if the nsIWebBrowserStream interface is available, since this interface is frozen.", "-\t * However, this may fail because this interface was only introduced as of mozilla 1.8; if this", "-\t * interface is not found then use the pre-1.8 approach of utilizing nsIDocShell instead. ", "-\t */", "-\tint /*long*/[] result = new int /*long*/[1];", "-\tint rc = webBrowser.QueryInterface (nsIWebBrowserStream.NS_IWEBBROWSERSTREAM_IID, result);", "-\tif (rc == XPCOM.NS_OK) {", "-\t\tif (result[0] == 0) error (XPCOM.NS_ERROR_NO_INTERFACE);", "-\t\tnew nsISupports (result[0]).Release ();", "-\t\tresult[0] = 0;", "-", "+\t* If the GRE version is >= 1.8 then use frozen interface nsIWebBrowserStream.", "+\t* If this interface is not available then use the pre-1.8 approach of utilizing", "+\t* nsIDocShell instead.", "+\t*/", "+\tif (Is_1_8) {", "-\t\trc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc = webBrowser.QueryInterface (nsIWebNavigation.NS_IWEBNAVIGATION_IID, result);", "-\t\tresult[0] = 0;", "-", "-\t\trc = XPCOM.NS_GetServiceManager (result);", "+\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tint rc = XPCOM.NS_GetServiceManager (result);"]}], "num": 21310}