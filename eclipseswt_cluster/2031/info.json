{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab60e2c64a3426ff4a42234c24d6fada", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73a1143c46e98a7e6e817c525e85e15c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ebc363b4f81fcefd5c38c3df1f871ec891cbeb94", "commitAfterChange": "38942e3d294a9944f3d71e6660f2d7cf4dac6ff0", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   \tpublic void textChanged(int startOffset, int newLineCount, int replaceLineCount, int newCharCount, int replaceCharCount)", "signatureAfterChange": "   \tpublic void textChanged(int startOffset, int newLineCount, int replaceLineCount, int newCharCount, int replaceCharCount)", "diff": ["-\t\t", "+", "+\t\t// if we are wrapping then it is possible for a deletion on the last", "+\t\t// line of text to shorten the total text length by a line.  If this", "+\t\t// occurs then the startIndex must be adjusted such that a redraw will", "+\t\t// be performed if a visible region is affected.  fixes bug 42947.", "+\t\tif (wordWrap) {", "+\t\t\tint lineCount = content.getLineCount();", "+\t\t\tif (startLine >= lineCount) startLine = lineCount - 1;  ", "+\t\t}", "-\t\t\t// only redraw if the text change is inside or above the ", "-\t\t\t// visible lines. if it is below the visible lines it will", "+\t\t\t// only redraw if the text change affects text inside or above ", "+\t\t\t// the visible lines. if it is below the visible lines it will"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "122a5f5c835d9c6cfdfe542de9fc6a30", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/SelectableItemWidget.java", "commitBeforeChange": "533121ae7dfc12a2cbef11e3b6e04ad92ced0ac4", "commitAfterChange": "b5b39d02a0265bc8c9cb1511c5709dc5c9a1e1ed", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r void doMouseSelect(SelectableItem item, int itemIndex, int eventStateMask, int button)", "signatureAfterChange": "\r void doMouseSelect(SelectableItem item, int itemIndex, int eventStateMask, int button)", "diff": ["+\tif (button != 1 && item.isSelected() == true) {\r", "+\t\t// If the item is already selected, do not change the selection when using \r", "+\t\t// button 2 or 3.  These buttons may invoke drag and drop or open the \r", "+\t\t// context menu for the current selection.\r", "+\t\treturn;\r", "+\t}\r", "-\tif (((eventStateMask & (SWT.MOD3 | SWT.MOD4)) == 0) && (button != 3 || item.isSelected() == false)) {\r", "-\t\t// only select the item (and deselect all others) if the mouse click is \r", "-\t\t// not a button 3 click or if a previously unselected item was clicked.\r", "-\t\t// Fixes 1G97L65\r", "+\tif ((eventStateMask & (SWT.MOD3 | SWT.MOD4)) == 0) {\r", "+\t\t// On MacOSX, holding the control key down while pressing button 1 brings up the context menu.\r", "+\t\t// Do not change the selection in this case.\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5c3ee8c75ad6e317a7f3533606df3ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d636f4503e6c6894569c1f5530b46b3e87886345", "commitAfterChange": "d2bd83a1a061070b632f8cef24791707051becdb", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 240, "signatureBeforeChange": "\r public void setStyleRange(StyleRange range)", "signatureAfterChange": "\r public void setStyleRange(StyleRange range)", "diff": ["+\t\tint firstLine = content.getLineAtOffset(range.start);\r", "+\t\tint lastLine = content.getLineAtOffset(range.start + range.length);\r", "+\t\r", "+\t\t// reset all lines affected by the style change but let the redraw\r", "+\t\t// recalculate only those that are visible.\r", "+\t\tcontentWidth.reset(firstLine, lastLine - firstLine);\r", "-\t\t\tint firstLine = content.getLineAtOffset(range.start);\r", "-\t\t\t// redraw the whole line if the font style changed on the last line\r", "-\t\t\tint lastLine = content.getLineAtOffset(range.start + range.length);\r", "+\t\t\t// redraw the whole line if the font style changed on the last line\t\r", "+\t\t// reset all lines but let the redraw recalculate only those that \r", "+\t\t// are visible.\r", "+\t\tcontentWidth.reset(0, content.getLineCount());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec8f8b3d0f14e27996213d134413e2f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "53eaef42c85a19c6c024eb953b35f15c33827e05", "commitAfterChange": "e8c16f7f9f6a3f2c095dfd48e874b4e7a9e7e851", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \r \tpublic void textChanged(int startLine, int newLineCount, int replaceLineCount)", "signatureAfterChange": "  \r \tpublic void textChanged(int startOffset, int newLineCount, int replaceLineCount, int newCharCount, int replaceCharCount)", "diff": ["-\tpublic void textChanged(int startLine, int newLineCount, int replaceLineCount) {\r", "+\tpublic void textChanged(int startOffset, int newLineCount, int replaceLineCount, int newCharCount, int replaceCharCount) {\r", "+\t\tint startLine = parent.getLineAtOffset(startOffset);\r", "-\t\t// not been visible yet and the changed lines have therefore not been calculated \r", "-\t\t// above.\r", "-\t\tif (removedMaxLine || (maxWidthLineIndex != -1 && lineWidth[maxWidthLineIndex] < maxWidth)) {\r", "+\t\t// not been visible yet and the changed lines have therefore not been\r", "+\t\t// calculated above.\r", "+\t\tif (removedMaxLine || \r", "+\t\t\t(maxWidthLineIndex != -1 && lineWidth[maxWidthLineIndex] < maxWidth)) {\r", "+\t}\r"]}], "num": 2031}