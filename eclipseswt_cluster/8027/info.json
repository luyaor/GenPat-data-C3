{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a0a06884a17e05648b89781e5ab43ac", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db5303666fb94dd06f53a6cb82f944f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5b8aaf545fc4054ab57f7dc34664d38e8adc83b6", "commitAfterChange": "6ce82e8d17055101e2f32d529ca61bfe95b8747f", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\t\t", "-\t\t\t\t//TODO - only double buffer the damage", "-//\t\t\t\tint x = ps.left, y = ps.top;", "-//\t\t\t\tint width = ps.right - ps.left;", "-//\t\t\t\tint height = ps.bottom - ps.top;", "-\t\t\t\tforceResize ();", "-\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\t\tint x = rect.left, y = rect.top;", "-\t\t\t\tint width = rect.right - rect.left;", "-\t\t\t\tint height = rect.bottom - rect.top;", "-\t\t\t\t", "-\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "-\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\tint width = ps.right - ps.left;", "+\t\t\t\tint height = ps.bottom - ps.top;", "+\t\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\t\tPOINT lpPoint1 = new POINT (), lpPoint2 = new POINT ();", "+\t\t\t\t\tOS.SetWindowOrgEx (hDC, ps.left, ps.top, lpPoint1);", "+\t\t\t\t\tOS.SetBrushOrgEx (hDC, ps.left, ps.top, lpPoint2);", "+\t\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "+\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t\t}", "+\t\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\t\tOS.SetWindowOrgEx (hDC, lpPoint1.x, lpPoint1.y, null);", "+\t\t\t\t\tOS.SetBrushOrgEx (hDC, lpPoint2.x, lpPoint2.y, null);", "+\t\t\t\t\tOS.BitBlt (paintDC, ps.left, ps.top, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.gc = gc;", "+\t\t\t\t\t\tevent.x = ps.left;", "+\t\t\t\t\t\tevent.y = ps.top;", "+\t\t\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\t\t// widget could be disposed at this point", "+\t\t\t\t\t\tevent.gc = null;", "+\t\t\t\t\t\tgc.dispose ();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn new LRESULT (code);", "-\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\t\tOS.DeleteObject (hDC);", "-\t\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.gc = gc;", "-\t\t\t\t\tevent.x = ps.left;", "-\t\t\t\t\tevent.y = ps.top;", "-\t\t\t\t\tevent.width = ps.right - ps.left;", "-\t\t\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\t\t// widget could be disposed at this point", "-\t\t\t\t\tevent.gc = null;", "-\t\t\t\t\tgc.dispose ();", "-\t\t\t\t} else {", "-\t\t\t\t\tOS.EndPaint (handle, ps);", "-\t\t\t\t}", "-\t\t\t\treturn new LRESULT (code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeadacf605547340a15a0403d76dce97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "7fcc91e6099f4c3255f26c10dbab47bde91a96c3", "commitAfterChange": "e1c2a8ee201d1582cd315713ea1eef093f129cd6", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\tboolean hooksPaint = hooks (SWT.Paint);", "+\t\t\tif (hooksPaint) {", "-\t", "-\t\t\t//TODO - only double buffer the damage", "-//\t\t\tint x = ps.left, y = ps.top;", "-//\t\t\tint width = ps.right - ps.left;", "-//\t\t\tint height = ps.bottom - ps.top;", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\tint x = rect.left, y = rect.top;", "-\t\t\tint width = rect.right - rect.left;", "-\t\t\tint height = rect.bottom - rect.top;", "-\t", "-\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\tdrawBackground (hDC, rect);", "-\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\tOS.DeleteObject (hDC);", "-\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.x = ps.left;", "-\t\t\t\tevent.y = ps.top;", "-\t\t\t\tevent.width = ps.right - ps.left;", "-\t\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\t// widget could be disposed at this point", "-\t\t\t\tevent.gc = null;", "+\t\t\tint width = ps.right - ps.left;", "+\t\t\tint height = ps.bottom - ps.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\tPOINT lpPoint1 = new POINT (), lpPoint2 = new POINT ();", "+\t\t\t\tOS.SetWindowOrgEx (hDC, ps.left, ps.top, lpPoint1);", "+\t\t\t\tOS.SetBrushOrgEx (hDC, ps.left, ps.top, lpPoint2);", "+\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\tcallWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\tOS.SetWindowOrgEx (hDC, lpPoint1.x, lpPoint1.y, null);", "+\t\t\t\tOS.SetBrushOrgEx (hDC, lpPoint2.x, lpPoint2.y, null);", "+\t\t\t\tOS.BitBlt (paintDC, ps.left, ps.top, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\tif (hooksPaint) {", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.gc = gc;", "+\t\t\t\t\tevent.x = ps.left;", "+\t\t\t\t\tevent.y = ps.top;", "+\t\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\t// widget could be disposed at this point", "+\t\t\t\t\tevent.gc = null;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (hooksPaint) {", "-\t\t\treturn new LRESULT (code);", "+\t\t\treturn LRESULT.ZERO;"]}], "num": 8027}