{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5b684d0e3ac3b7a0f47d9efa1504b8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48ba5fce6445438179be6b59feb89a24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "5d2aa70de2e6cd273dddb20b33e744b162177c39", "commitAfterChange": "8e1de6b463cb1084376d836a06e1d4f89bfc89ec", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "signatureAfterChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "diff": ["-\t/*", "-\t* Bug in Mozilla.  The argument aRequest is always null.  The fix is", "-\t* to compare the URI aLocation with the current URI.", "-\t*/", "-\tnsIURI location = new nsIURI(aLocation);", "-\tint aSpec = XPCOM.nsCString_new();", "-\tlocation.GetSpec(aSpec);", "-\tint length = XPCOM.nsCString_Length(aSpec);", "-\tint buffer = XPCOM.nsCString_get(aSpec);", "-\tbyte[] dest = new byte[length + 1];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsCString_delete(aSpec);", "-", "-\tint[] aContentDOMWindow = new int[1];", "-\tint rc = webBrowser.GetContentDOMWindow(aContentDOMWindow);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (aContentDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\tnsIDOMWindow domWindow = new nsIDOMWindow(aContentDOMWindow[0]);", "-\tint[] result = new int[1];", "-\trc = domWindow.QueryInterface(nsIDOMWindowInternal.NS_IDOMWINDOWINTERNAL_IID, result);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tdomWindow.Release();", "-         ", "-\tnsIDOMWindowInternal domWindowInternal = new nsIDOMWindowInternal(result[0]);", "-\tint[] aCurrentLocation = new int[1];  ", "-\trc = domWindowInternal.GetLocation(aCurrentLocation);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (aCurrentLocation[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tdomWindowInternal.Release();", "-", "-\tnsIDOMLocation domLocation = new nsIDOMLocation(aCurrentLocation[0]); ", "-\tnsString _retval = new nsString();", "-\trc = domLocation.ToString(_retval.getAddress());", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tdomLocation.Release();  ", "-\tint nsString = XPCOM.nsString_new();", "-\tXPCOM.nsString_AssignWithConversion(nsString, dest);", "-\tboolean send = XPCOM.nsString_Equals(_retval.getAddress(), nsString);", "-\tXPCOM.nsString_delete(nsString);", "-\t_retval.dispose();", "-\t\t", "-\tif (send) {", "+\tnsIWebProgress webProgress = new nsIWebProgress(aWebProgress);", "+\tint[] aDOMWindow = new int[1];", "+\tint rc = webProgress.GetDOMWindow(aDOMWindow);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t", "+\tnsIDOMWindow domWindow = new nsIDOMWindow(aDOMWindow[0]);", "+\tint[] aTop = new int[1];", "+\trc = domWindow.GetTop(aTop);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aTop[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindow.Release();", "+\t", "+\tnsIDOMWindow topWindow = new nsIDOMWindow(aTop[0]);", "+\ttopWindow.Release();", "+\t", "+\t/* report only top frame changes */", "+\tif (aTop[0] == aDOMWindow[0]) {", "+\t\tnsIURI location = new nsIURI(aLocation);", "+\t\tint aSpec = XPCOM.nsCString_new();", "+\t\tlocation.GetSpec(aSpec);", "+\t\tint length = XPCOM.nsCString_Length(aSpec);", "+\t\tint buffer = XPCOM.nsCString_get(aSpec);", "+\t\tbyte[] dest = new byte[length + 1];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsCString_delete(aSpec);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f88754dd1e36b50449983ae04a7dfcf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "e4bc9c1893ead2ce8ed6f65933742cbfa25be732", "commitAfterChange": "a7206eed573d4459925f82f41be8140406ab7207", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "signatureAfterChange": "\t\t  int OnLocationChange(int aWebProgress, int aRequest, int aLocation)", "diff": ["-\t/*", "-\t* Bug in Mozilla.  The argument aRequest is always null.  The fix is", "-\t* to compare the URI aLocation with the current URI.", "-\t*/", "-\tnsIURI location = new nsIURI(aLocation);", "-\tint aSpec = XPCOM.nsCString_new();", "-\tlocation.GetSpec(aSpec);", "-\tint length = XPCOM.nsCString_Length(aSpec);", "-\tint buffer = XPCOM.nsCString_get(aSpec);", "-\tbyte[] dest = new byte[length + 1];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsCString_delete(aSpec);", "-", "-\tint[] aContentDOMWindow = new int[1];", "-\tint rc = webBrowser.GetContentDOMWindow(aContentDOMWindow);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (aContentDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-", "-\tnsIDOMWindow domWindow = new nsIDOMWindow(aContentDOMWindow[0]);", "-\tint[] result = new int[1];", "-\trc = domWindow.QueryInterface(nsIDOMWindowInternal.NS_IDOMWINDOWINTERNAL_IID, result);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tdomWindow.Release();", "-         ", "-\tnsIDOMWindowInternal domWindowInternal = new nsIDOMWindowInternal(result[0]);", "-\tint[] aCurrentLocation = new int[1];  ", "-\trc = domWindowInternal.GetLocation(aCurrentLocation);", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tif (aCurrentLocation[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "-\tdomWindowInternal.Release();", "-", "-\tnsIDOMLocation domLocation = new nsIDOMLocation(aCurrentLocation[0]); ", "-\tnsString _retval = new nsString();", "-\trc = domLocation.ToString(_retval.getAddress());", "-\tif (rc != XPCOM.NS_OK) error(rc);", "-\tdomLocation.Release();  ", "-\tint nsString = XPCOM.nsString_new();", "-\tXPCOM.nsString_AssignWithConversion(nsString, dest);", "-\tboolean send = XPCOM.nsString_Equals(_retval.getAddress(), nsString);", "-\tXPCOM.nsString_delete(nsString);", "-\t_retval.dispose();", "-\t\t", "-\tif (send) {", "+\tnsIWebProgress webProgress = new nsIWebProgress(aWebProgress);", "+\tint[] aDOMWindow = new int[1];", "+\tint rc = webProgress.GetDOMWindow(aDOMWindow);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aDOMWindow[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t", "+\tnsIDOMWindow domWindow = new nsIDOMWindow(aDOMWindow[0]);", "+\tint[] aTop = new int[1];", "+\trc = domWindow.GetTop(aTop);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (aTop[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\tdomWindow.Release();", "+\t", "+\tnsIDOMWindow topWindow = new nsIDOMWindow(aTop[0]);", "+\ttopWindow.Release();", "+\t", "+\t/* report only top frame changes */", "+\tif (aTop[0] == aDOMWindow[0]) {", "+\t\tnsIURI location = new nsIURI(aLocation);", "+\t\tint aSpec = XPCOM.nsCString_new();", "+\t\tlocation.GetSpec(aSpec);", "+\t\tint length = XPCOM.nsCString_Length(aSpec);", "+\t\tint buffer = XPCOM.nsCString_get(aSpec);", "+\t\tbyte[] dest = new byte[length + 1];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsCString_delete(aSpec);", "+"]}], "num": 32250}