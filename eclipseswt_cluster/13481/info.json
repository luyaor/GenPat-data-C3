{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4ed113d9510d426a4b5ef8b36d56b8c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1db7ef037913973fe25036c6c8a4f10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "06b18b345f96c678515359697c62cd8eef5350d6", "commitAfterChange": "1f7643c736fc8cac574e87e3f7d34000a6634b1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  static Object convertToJava (nsIVariant variant, short type)", "signatureAfterChange": "  static Object convertToJava (nsIVariant variant, short type)", "diff": ["-\t\t\t\t\t\t\tint[] boolValue = new int[1]; /* PRUInt32 */", "-\t\t\t\t\t\t\tC.memmove (boolValue, ptr[0] + i * 4, 4);", "-\t\t\t\t\t\t\tarrayReturn[i] = new Boolean (boolValue[0] != 0);", "+\t\t\t\t\t\t\t/* mozilla's representation of boolean changed from 4 bytes to 1 byte as of XULRunner 4.x */", "+\t\t\t\t\t\t\tif (nsISupports.IsXULRunner10) {", "+\t\t\t\t\t\t\t\tbyte[] byteValue = new byte[1];", "+\t\t\t\t\t\t\t\tC.memmove (byteValue, ptr[0] + i, 1);", "+\t\t\t\t\t\t\t\tarrayReturn[i] = new Boolean (byteValue[0] != 0);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tint[] boolValue = new int[1]; /* PRUInt32 */", "+\t\t\t\t\t\t\t\tC.memmove (boolValue, ptr[0] + i * 4, 4);", "+\t\t\t\t\t\t\t\tarrayReturn[i] = new Boolean (boolValue[0] != 0);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18870efa571147cca8ca392d977ae9a9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  Object convertToJava (nsIVariant variant, short type)", "signatureAfterChange": "  Object convertToJava (nsIVariant variant, short type)", "diff": ["-\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant, currentType[0]);", "-\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tarrayReturn[i] = convertToJava (currentVariant, currentType[0]);", "+\t\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\t} catch (IllegalArgumentException e) {", "+\t\t\t\t\t\t/* invalid argument value type */", "+\t\t\t\t\t\tcurrentVariant.Release ();", "+\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase nsIDataType.VTYPE_BOOL:", "+\t\t\t\t\t\tarrayReturn = new Object[count[0]];", "+\t\t\t\t\t\tfor (int i = 0; i < count[0]; i++) {", "+\t\t\t\t\t\t\tint[] boolValue = new int[1]; /* PRUInt32 */", "+\t\t\t\t\t\t\tC.memmove (boolValue, ptr[0] + i * 4, 4);", "+\t\t\t\t\t\t\tarrayReturn[i] = new Boolean (boolValue[0] != 0);", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tC.free (ptr[0]);", "+\t\t\t\t\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);"]}], "num": 13481}