{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b9cd35ecc6eb1bc40ea28b2f95b1048", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b960500983c9ef1d794cef352b80983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "1b5f48c2a7ec081e0b09fde05acdf40e02ceb553", "commitAfterChange": "c00e18fa39ffc0a435d7daaa5ef04fb89b884080", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void setTransfer(Transfer[] transferAgents)", "signatureAfterChange": " public void setTransfer(Transfer[] transferAgents)", "diff": ["-\t\tint[] typeIds = transfer.getTypeIds();", "-\t\tString[] typeNames = transfer.getTypeNames();", "-\t\tfor (int j = 0; j < typeIds.length; j++) {", "-\t\t\tGtkTargetEntry entry = new GtkTargetEntry();", "-\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, typeNames[j], true);", "-\t\t\tentry.target = OS.g_malloc(buffer.length);", "-\t\t\tOS.memmove(entry.target, buffer, buffer.length);\t\t\t\t\t\t", "-\t\t\tentry.info = typeIds[j];", "-\t\t\tGtkTargetEntry[] newTargets = new GtkTargetEntry[targets.length + 1];", "-\t\t\tSystem.arraycopy(targets, 0, newTargets, 0, targets.length);", "-\t\t\tnewTargets[targets.length] = entry;", "-\t\t\ttargets = newTargets;", "-\t\t}\t", "+\t\tif (transfer != null) {", "+\t\t\tint[] typeIds = transfer.getTypeIds();", "+\t\t\tString[] typeNames = transfer.getTypeNames();", "+\t\t\tfor (int j = 0; j < typeIds.length; j++) {", "+\t\t\t\tGtkTargetEntry entry = new GtkTargetEntry();", "+\t\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, typeNames[j], true);", "+\t\t\t\tentry.target = OS.g_malloc(buffer.length);", "+\t\t\t\tOS.memmove(entry.target, buffer, buffer.length);\t\t\t\t\t\t", "+\t\t\t\tentry.info = typeIds[j];", "+\t\t\t\tGtkTargetEntry[] newTargets = new GtkTargetEntry[targets.length + 1];", "+\t\t\t\tSystem.arraycopy(targets, 0, newTargets, 0, targets.length);", "+\t\t\t\tnewTargets[targets.length] = entry;", "+\t\t\t\ttargets = newTargets;", "+\t\t\t}\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c7d7aecf11763f29804365e9259d39f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "1b5f48c2a7ec081e0b09fde05acdf40e02ceb553", "commitAfterChange": "c00e18fa39ffc0a435d7daaa5ef04fb89b884080", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void setTransfer(Transfer[] transferAgents)", "signatureAfterChange": " public void setTransfer(Transfer[] transferAgents)", "diff": ["-\t\tint[] typeIds = transfer.getTypeIds();", "-\t\tString[] typeNames = transfer.getTypeNames();", "-\t\tfor (int j = 0; j < typeIds.length; j++) {", "-\t\t\tGtkTargetEntry entry = new GtkTargetEntry();", "-\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, typeNames[j], true);", "-\t\t\tentry.target = OS.g_malloc(buffer.length);", "-\t\t\tOS.memmove(entry.target, buffer, buffer.length);\t\t\t\t\t\t", "-\t\t\tentry.info = typeIds[j];", "-\t\t\tGtkTargetEntry[] newTargets = new GtkTargetEntry[targets.length + 1];", "-\t\t\tSystem.arraycopy(targets, 0, newTargets, 0, targets.length);", "-\t\t\tnewTargets[targets.length] = entry;", "-\t\t\ttargets = newTargets;", "-\t\t}\t", "+\t\tif (transfer != null) {", "+\t\t\tint[] typeIds = transfer.getTypeIds();", "+\t\t\tString[] typeNames = transfer.getTypeNames();", "+\t\t\tfor (int j = 0; j < typeIds.length; j++) {", "+\t\t\t\tGtkTargetEntry entry = new GtkTargetEntry();", "+\t\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, typeNames[j], true);", "+\t\t\t\tentry.target = OS.g_malloc(buffer.length);", "+\t\t\t\tOS.memmove(entry.target, buffer, buffer.length);\t\t\t\t\t\t", "+\t\t\t\tentry.info = typeIds[j];", "+\t\t\t\tGtkTargetEntry[] newTargets = new GtkTargetEntry[targets.length + 1];", "+\t\t\t\tSystem.arraycopy(targets, 0, newTargets, 0, targets.length);", "+\t\t\t\tnewTargets[targets.length] = entry;", "+\t\t\t\ttargets = newTargets;", "+\t\t\t}", "+\t\t}"]}], "num": 4641}