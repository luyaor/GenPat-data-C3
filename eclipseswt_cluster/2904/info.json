{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fefdf3d4db0919ef271db1bce2aa9d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e00dee58acd695bc4dc852b2daef82bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "0bcce8701fee7076e5f1dd2db6410f49b6638dae", "commitAfterChange": "bd48e2b84a6482ec594a06a3c3531b924107c392", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "\r void calculateTopIndex()", "signatureAfterChange": "\r void calculateTopIndex()", "diff": ["-\tif (topIndex > 0 && clientAreaHeight > 0) {\r", "-\t\tint bottomPixel = verticalScrollOffset + clientAreaHeight;\r", "-\t\tint fullLineTopPixel = topIndex * verticalIncrement;\r", "-\t\tint fullLineVisibleHeight = bottomPixel - fullLineTopPixel;\r", "-\t\tif (fullLineVisibleHeight < verticalIncrement) {\r", "-\t\t\ttopIndex--;\r", "+\tif (topIndex > 0) {\r", "+\t\tif (clientAreaHeight > 0) {\r", "+\t\t\tint bottomPixel = verticalScrollOffset + clientAreaHeight;\r", "+\t\t\tint fullLineTopPixel = topIndex * verticalIncrement;\r", "+\t\t\tint fullLineVisibleHeight = bottomPixel - fullLineTopPixel;\r", "+\t\t\t// set top index to partially visible line if no line fully fits in \r", "+\t\t\t// client area or if space is available but not used (the latter should\r", "+\t\t\t// never happen because we use claimBottomFreeSpace)\r", "+\t\t\tif (fullLineVisibleHeight < verticalIncrement) {\r", "+\t\t\t\ttopIndex--;\r", "+\t\t\t}\r", "-\t}\t\r", "+\t\telse \r", "+\t\tif (topIndex >= content.getLineCount()) {\r", "+\t\t\ttopIndex = content.getLineCount() - 1;\r", "+\t\t}\r", "+\t}\r", "+\t\ttopOffset = content.getOffsetAtLine(topIndex);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7324ec59ce1f13827404da4209dfe78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 116, "signatureBeforeChange": " int getBottomIndex()", "signatureAfterChange": " int getBottomIndex()", "diff": ["-\tint lineCount = 1;", "-\tif (lineHeight != 0) {", "-\t\t// calculate the number of lines that are fully visible", "-\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "-\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\tint lineCount = 1;", "+//\tif (lineHeight != 0) {", "+//\t\t// calculate the number of lines that are fully visible", "+//\t\tint partialTopLineHeight = topIndex * lineHeight - verticalScrollOffset;", "+//\t\tlineCount = (getClientArea().height - partialTopLineHeight) / lineHeight;", "+//\t}", "+//\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\tint clientAreaHeight = getClientArea().height;", "+\tint bottomIndex = getLineIndex(clientAreaHeight);", "+\tif (bottomIndex > 0) {", "+\t\tint linePixel = getLinePixel(bottomIndex);", "+\t\tint lineHeight = lineCache.getLineHeight(bottomIndex);", "+\t\tif (linePixel + lineHeight > clientAreaHeight) {", "+\t\t\tbottomIndex--;", "+\t\t}", "-\treturn Math.min(content.getLineCount() - 1, topIndex + Math.max(0, lineCount - 1));", "+\treturn bottomIndex;"]}], "num": 2904}