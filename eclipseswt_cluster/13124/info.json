{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f5bb0e65381cf0bd888e4e2a57e9e56", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6a8c622101f2a4fed22cfb4cab8774", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "753c5d50ce83930c33a89811ce7eadb7faec18f9", "commitAfterChange": "4bcd9e15f1b441014f9ab446e0c5a9a0b39e8f7f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\t} else if (getPlatform().equals(\"carbon\")) {", "+\t\toutputln(\"\\t\\tstatic int initialized = 0;\");", "+\t\toutputln(\"\\t\\tstatic CFBundleRef bundle = NULL;\");", "+\t\toutput(\"\\t\\ttypedef \");", "+\t\toutput(getTypeSignature2(returnType));", "+\t\toutput(\" (*FPTR)(\");", "+\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\tif (i != 0) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\tString cast = paramData.getCast();", "+\t\t\tif (cast.length() > 2) {", "+\t\t\t\toutput(cast.substring(1, cast.length() - 1));", "+\t\t\t} else {", "+\t\t\t\toutput(getTypeSignature4(paramType));", "+\t\t\t}", "+\t\t}", "+\t\toutputln(\");\");", "+\t\toutputln(\"\\t\\tstatic FPTR fptr;\");", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutputln(\"\\t\\trc = 0;\");", "+\t\t\t}", "+\t\t}", "+\t\toutputln(\"\\t\\tif (!initialized) {\");", "+\t\toutput(\"\\t\\t\\tif (!bundle) bundle = CFBundleGetBundleWithIdentifier(CFSTR(\");", "+\t\toutput(name);", "+\t\toutputln(\"_LIB));\");", "+\t\toutput(\"\\t\\t\\tif (bundle) fptr = (FPTR)CFBundleGetFunctionPointerForName(bundle, CFSTR(\\\"\");", "+\t\toutput(name);", "+\t\toutputln(\"\\\"));\");", "+\t\toutputln(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputln(\"\\t\\t}\");", "+\t\toutputln(\"\\t\\tif (fptr) {\");", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"(*fptr)\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes, 0);", "+\t\toutputln();", "+\t\toutputln(\"\\t\\t}\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79ab7002ff5684e748ec1bfe2e42771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "af64dc0cb00680852a28d24c43b228552f8b7b28", "commitAfterChange": "5f337fe3ac34ee9a44ecfc3b3eed6c9c5e733012", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t", "-\toutput(\"\\tvoid *handle = NULL;\");", "-\toutputDelimiter();", "-\toutput(\"\\tint (*fptr)();\");", "-\toutputDelimiter();", "-\tif (returnType != Void.TYPE) {", "-\t\tif (needsReturn) {", "-\t\t\toutput(\"\\trc = 0;\");", "-\t\t\toutputDelimiter();", "+\t", "+\tif (Platform.PLATFORM.equals(\"win32\")) {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic HMODULE hm = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic FARPROC fp = NULL;\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!(hm = GetModuleHandle(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB))) hm = LoadLibrary(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (hm) fp = GetProcAddress(hm, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fp) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"fp\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t} else {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic void *handle = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic int (*fptr)();\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!handle) handle = dlopen(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB, RTLD_LAZY);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (handle) fptr = dlsym(handle, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fptr) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"(*fptr)\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "-\toutput(\"\\tif ((handle = dlopen(\");", "-\toutput(method.getName());", "-\toutput(\"_LIB, RTLD_LAZY)) != NULL && (fptr = dlsym(handle, \\\"\");", "-\toutput(method.getName());", "-\toutput(\"\\\")) != NULL) {\");", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "-\toutput(\"(*fptr)\");", "-\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\toutput(\"}\");", "-\toutputDelimiter();", "+"]}], "num": 13124}