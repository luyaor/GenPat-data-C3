{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b166812fa4a16fc15d746b34ea0b545c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9887982e2b9952f67c59ec42b278925f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "87ca0b2c9048c87ab1533b549c17948e0d1b70ec", "commitAfterChange": "e6b45546639e64b93ec66b49a61667a587a95198", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["-\tif (image != null) {", "-\t\tint /*long*/parentHandle = parent.handle;", "-\t\tint /*long*/ column = OS.gtk_tree_view_get_column (parentHandle, index);", "-\t\tif (OS.gtk_tree_view_column_get_sizing (column) == OS.GTK_TREE_VIEW_COLUMN_FIXED) {", "-\t\t\tparent.setScrollWidth (column, this);", "-\t\t\t/*", "-\t\t\t* Bug in GTK.  When in fixed height mode, GTK does not recalculate the cell renderer width", "-\t\t\t* when the image is changed in the model.  The fix is to force it to recalculate the width if", "-\t\t\t* more space is required.", "-\t\t\t*/", "-\t\t\tint [] w = new int [1];", "-\t\t\tint /*long*/ pixbufRenderer = parent.getPixbufRenderer(column);", "-\t\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, null, w);", "-\t\t\tif (w[0] < image.getBounds().width) {", "-\t\t\t\t/*", "-\t\t\t\t * There is no direct way to clear the cell renderer width so we", "-\t\t\t\t * are relying on the fact that it is done as part of modifying", "-\t\t\t\t * the style.", "-\t\t\t\t */", "-\t\t\t\tint /*long*/ style = OS.gtk_widget_get_modifier_style (parentHandle);", "-\t\t\t\tOS.gtk_widget_modify_style (parentHandle, style);", "+\t/*", "+\t* Bug in GTK.  When using fixed-height-mode,", "+\t* row changes do not cause the row to be repainted.  The fix is to", "+\t* invalidate the row when the image changes.", "+\t* ", "+\t* Bug in GTK.  When using fixed-height-mode, GTK does not recalculate the cell renderer width", "+\t* when the image is changed in the model.  The fix is to force it to recalculate the width if", "+\t* more space is required.", "+\t*/", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2)) {", "+\t\t\tif (parent.columnCount == 0) {", "+\t\t\t\tredraw ();", "+\t\t\t}", "+\t\t\tif (image != null) {", "+\t\t\t\tint /*long*/parentHandle = parent.handle;", "+\t\t\t\tint /*long*/ column = OS.gtk_tree_view_get_column (parentHandle, index);", "+\t\t\t\tint [] w = new int [1];", "+\t\t\t\tint /*long*/ pixbufRenderer = parent.getPixbufRenderer(column);", "+\t\t\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, null, w);", "+\t\t\t\tif (w[0] < image.getBounds().width) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t * There is no direct way to clear the cell renderer width so we", "+\t\t\t\t\t * are relying on the fact that it is done as part of modifying", "+\t\t\t\t\t * the style.", "+\t\t\t\t\t */", "+\t\t\t\t\tint /*long*/ style = OS.gtk_widget_get_modifier_style (parentHandle);", "+\t\t\t\t\tOS.gtk_widget_modify_style (parentHandle, style);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84820db5e9e17ecb90a9f27de3e1c76e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "87ca0b2c9048c87ab1533b549c17948e0d1b70ec", "commitAfterChange": "e6b45546639e64b93ec66b49a61667a587a95198", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["-\tif (image != null) {", "-\t\tint /*long*/parentHandle = parent.handle;", "-\t\tint /*long*/ column = OS.gtk_tree_view_get_column (parentHandle, index);", "-\t\tif (OS.gtk_tree_view_column_get_sizing (column) == OS.GTK_TREE_VIEW_COLUMN_FIXED) {", "-\t\t\tparent.setScrollWidth (column, this);", "+\tif ((parent.style & SWT.VIRTUAL) != 0) {", "+\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 3, 2)) {", "+\t\t\t/*", "+\t\t\t* Bug in GTK.  When using fixed-height-mode,", "+\t\t\t* row changes do not cause the row to be repainted.  The fix is to", "+\t\t\t* invalidate the row when it is cleared.", "+\t\t\t*/", "+\t\t\tredraw ();", "-\t\t\tint [] w = new int [1];", "-\t\t\tint /*long*/ pixbufRenderer = parent.getPixbufRenderer(column);", "-\t\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, null, w);", "-\t\t\tif (w[0] < image.getBounds().width) {", "-\t\t\t\t/*", "-\t\t\t\t* There is no direct way to clear the cell renderer width so we", "-\t\t\t\t* are relying on the fact that it is done as part of modifying", "-\t\t\t\t* the style.", "-\t\t\t\t*/", "-\t\t\t\tint /*long*/ style = OS.gtk_widget_get_modifier_style (parentHandle);", "-\t\t\t\tOS.gtk_widget_modify_style (parentHandle, style);", "+\t\t\tif (image != null) {", "+\t\t\t\tint /*long*/parentHandle = parent.handle;", "+\t\t\t\tint /*long*/ column = OS.gtk_tree_view_get_column (parentHandle, index);", "+\t\t\t\tint [] w = new int [1];", "+\t\t\t\tint /*long*/ pixbufRenderer = parent.getPixbufRenderer(column);", "+\t\t\t\tOS.gtk_tree_view_column_cell_get_position (column, pixbufRenderer, null, w);", "+\t\t\t\tif (w[0] < image.getBounds().width) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* There is no direct way to clear the cell renderer width so we", "+\t\t\t\t\t* are relying on the fact that it is done as part of modifying", "+\t\t\t\t\t* the style.", "+\t\t\t\t\t*/", "+\t\t\t\t\tint /*long*/ style = OS.gtk_widget_get_modifier_style (parentHandle);", "+\t\t\t\t\tOS.gtk_widget_modify_style (parentHandle, style);", "+\t\t\t\t}"]}], "num": 14194}