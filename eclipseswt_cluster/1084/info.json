{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc7e6abe7325d00dd017633bc38e82e1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017451921215da1908f30187c608f6c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "ed9a288df70bc38bf74fc369dac562500bb7bfe8", "commitAfterChange": "3d9a745937224b38cf406ad93b5005f8ff95bd1b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "signatureAfterChange": " public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "diff": ["-\tRECT rect = null;", "+\tint length = renderDx.length;", "+\t", "+\t\trenderDx[length-1]--;               //fixes bug 40006", "-\t}", "-\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length, renderDx);", "+\t}\t", "+\t// render transparently to avoid overlapping segments. fixes bug 40006", "+\tint oldBkMode = OS.SetBkMode(gc.handle, OS.TRANSPARENT);", "+\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX , null, renderBuffer, renderBuffer.length, renderDx);", "+\tOS.SetBkMode(gc.handle, oldBkMode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4e544fe86480c94a3a19d3d61af1e7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/internal/BidiUtil.java", "commitBeforeChange": "9bbf56108afb38e7247b78ff301c43989c6d0e68", "commitAfterChange": "8f49d4a8201f325fab6add743b89ff69adf390c8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public static void drawGlyphs(GC gc, byte[] renderBuffer, int[] renderDx, int x, int y)", "signatureAfterChange": "\r public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y)", "diff": ["-public static void drawGlyphs(GC gc, byte[] renderBuffer, int[] renderDx, int x, int y) {\r", "+public static void drawGlyphs(GC gc, char[] renderBuffer, int[] renderDx, int x, int y) {\r", "-\t// why do we have to specify the WORD count, not the byte count?\r", "-\t// when using the ANSI version of ExtTextOut cbCount is supposed to specify the byte count.\r", "-\tOS.ExtTextOutA(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length / 2, renderDx);\r", "+\tOS.ExtTextOutW(gc.handle, x, y, ETO_GLYPH_INDEX, rect, renderBuffer, renderBuffer.length, renderDx);\r"]}], "num": 1084}