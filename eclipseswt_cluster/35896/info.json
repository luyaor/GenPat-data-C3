{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d626c4f5261a41a597ab1ff60aad40b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f71cb845c6325f606ada814ba46099b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f8210784d009eb3c65e7938f5f5aff02273c198f", "commitAfterChange": "cf9134cf619a5e3e9738e79476f9c444005e0002", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "  static int windowDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowDelegateProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_setImage_) {", "+\t\twidget.setImage(id, sel, arg0);", "+\t} else if (sel == OS.sel_imageRectForBounds_) {", "+\t\tNSRect rect = new NSRect();", "+\t\tOS.memmove(rect, arg0, NSRect.sizeof);", "+\t\trect = widget.imageRectForBounds(id, sel, rect);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;", "+\t} else if (sel == OS.sel_titleRectForBounds_) {", "+\t\tNSRect rect = new NSRect();", "+\t\tOS.memmove(rect, arg0, NSRect.sizeof);", "+\t\trect = widget.titleRectForBounds(id, sel, rect);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcb72c6f440d63185486cc783f4f010", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3fcd225fa2e66d3e13758e8a90c5c8fb576c874a", "commitAfterChange": "95f8ac5e2e6850065945e7f7faeea45702471c6f", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_columnAtPoint_) {", "+\t\tNSPoint point = new NSPoint();", "+\t\tOS.memmove(point, arg0, NSPoint.sizeof);", "+\t\treturn widget.columnAtPoint(id, sel, point);", "+\t} else if (sel == OS.sel_headerRectOfColumn_) {", "+\t\tNSRect rect = widget.headerRectOfColumn(id, sel, arg0);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}], "num": 35896}