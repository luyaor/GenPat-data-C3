{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6262ff07f6308790b07bc8937fa2dac2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b254a615f01f3d451d135b49576bcf7c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0a5ce139580f2cfdd7832bcaa6dbbfba4cc58225", "commitAfterChange": "f0d2633c2c6f8c5fb1114f85f4f664ece52dbf75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  NSAttributedString createString(String string, int flags)", "signatureAfterChange": "  NSAttributedString createString(String string, int flags, boolean draw)", "diff": ["-NSAttributedString createString(String string, int flags) {", "-\tNSMutableDictionary dict = NSMutableDictionary.dictionaryWithCapacity(4);", "-\tfloat /*double*/ [] foreground = data.foreground;\t", "-\tPattern pattern = data.foregroundPattern;", "-\tif (pattern != null) {", "-\t\tif (pattern.color != null) dict.setObject(pattern.color, OS.NSForegroundColorAttributeName);", "-\t} else {", "-\t\tNSColor color = NSColor.colorWithDeviceRed(foreground[0], foreground[1], foreground[2], data.alpha / 255f);", "-\t\tdict.setObject(color, OS.NSForegroundColorAttributeName);", "-\t}", "+NSAttributedString createString(String string, int flags, boolean draw) {", "+\tNSMutableDictionary dict = ((NSMutableDictionary)new NSMutableDictionary().alloc()).initWithCapacity(3);", "-\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "-\t\tfloat /*double*/ [] background = data.background;", "-\t\tNSColor color = NSColor.colorWithDeviceRed(background[0], background[1], background[2], data.alpha / 255f);", "-\t\tdict.setObject(color, OS.NSBackgroundColorAttributeName);", "+\tif (draw) {", "+\t\tPattern pattern = data.foregroundPattern;", "+\t\tif (pattern != null) {", "+\t\t\tif (pattern.color != null) dict.setObject(pattern.color, OS.NSForegroundColorAttributeName);", "+\t\t} else {", "+\t\t\tNSColor fg = data.fg;", "+\t\t\tif (fg == null) {", "+\t\t\t\tfloat /*double*/ [] color = data.foreground;", "+\t\t\t\tfg = data.fg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\t\tfg.retain();", "+\t\t\t}", "+\t\t\tdict.setObject(fg, OS.NSForegroundColorAttributeName);", "+\t\t}", "-\t\tNSMutableParagraphStyle paragraph = (NSMutableParagraphStyle)new NSMutableParagraphStyle().alloc().init();", "-\t\tparagraph.setAlignment(OS.NSLeftTextAlignment);", "-\t\tparagraph.setLineBreakMode(OS.NSLineBreakByClipping);", "-\t\tparagraph.setTabStops(NSArray.array());", "-\t\tdict.setObject(paragraph, OS.NSParagraphStyleAttributeName);", "-\t\tparagraph.release();", "+\t\tdict.setObject(device.paragraphStyle, OS.NSParagraphStyleAttributeName);", "-\tNSString str = NSString.stringWithCharacters(chars, length);", "-\treturn ((NSAttributedString)new NSAttributedString().alloc()).initWithString(str, dict);", "+\tNSString str = ((NSString)new NSString().alloc()).initWithCharacters(chars, length);", "+\tNSAttributedString attribStr = ((NSAttributedString)new NSAttributedString().alloc()).initWithString(str, dict);", "+\tdict.release();", "+\tstr.release();", "+\treturn attribStr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65e03fa4e45c273d29c53a7042a2aaf9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b254513b5fa1f9602e91ee9bc5ce7dfb2142807f", "commitAfterChange": "8f8824f7cb88c37bf497e6791ee76080a97b10d1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void menuWillOpen(int id, int sel, int menu)", "signatureAfterChange": "  void menuWillOpen(int id, int sel, int menu)", "diff": ["-\tfor (int i=0; i<items.length; i++) {", "+\tfloat /*double*/ width = 0;", "+\tNSAttributedString[] strs = new NSAttributedString[itemCount];", "+\tfor (int i=0; i<itemCount; i++) {", "-\t\tif (item != null)  item.updateAccelerator (true);", "+\t\tNSMenuItem nsItem = item.nsItem;", "+\t\tstrs[i] = nsItem.attributedTitle();", "+\t\tNSImage nsImage = nsItem.image();", "+\t\tfloat /*double*/ w = GAP;", "+\t\tif (strs[i] != null) {", "+\t\t\tw += strs[i].size().width;", "+\t\t}", "+\t\tif (nsImage != null) {", "+\t\t\tw += (nsImage.size().width + GAP);", "+\t\t}", "+\t\tif (strs[i] != null) width = Math.max(width, w);", "+\t}", "+\tfor (int i=0; i<itemCount; i++) {", "+\t\tMenuItem item = items [i];", "+\t\tif (item.accelerator != 0 || strs[i] == null || (style & SWT.BAR) != 0 || (item.style & SWT.CASCADE) != 0) continue;", "+\t\tint accelIndex = item.text.indexOf ('\\t');", "+\t\tif (accelIndex != -1) {", "+\t\t\tString accelText = item.text.substring (accelIndex);", "+\t\t\tint length = accelText.length ();", "+\t\t\tif (length > 1) {", "+\t\t\t\tNSMenuItem nsItem = item.nsItem;", "+\t\t\t\tNSImage nsImage = nsItem.image();", "+\t\t\t\tfloat /*double*/ tab = width;", "+\t\t\t\tif (nsImage != null) {", "+\t\t\t\t\ttab -= (nsImage.size().width + GAP);", "+\t\t\t\t}", "+\t\t\t\tNSMutableAttributedString str = new NSMutableAttributedString(strs[i].mutableCopy());", "+\t\t\t\t", "+\t\t\t\t/* Append accelerator text */", "+\t\t\t\tNSString label = (NSString) new NSString().alloc();", "+\t\t\t\tlabel = label.initWithString(accelText);", "+\t\t\t\tNSMutableDictionary dict = ((NSMutableDictionary)new NSMutableDictionary().alloc()).initWithCapacity(1);", "+\t\t\t\tdict.setObject (NSFont.menuBarFontOfSize(0), OS.NSFontAttributeName);", "+\t\t\t\tNSAttributedString attribStr = ((NSAttributedString) new NSAttributedString ().alloc ()).initWithString (label, dict);", "+\t\t\t\tdict.release();", "+\t\t\t\tlabel.release();", "+\t\t\t\tstr.appendAttributedString(attribStr);", "+\t\t\t\tattribStr.release();", "+\t\t\t\t", "+\t\t\t\t/* Align accelerator text */", "+\t\t\t\tNSRange range = new NSRange();", "+\t\t\t\trange.length = str.length();", "+\t\t\t\tNSMutableParagraphStyle paragraphStyle = (NSMutableParagraphStyle)new NSMutableParagraphStyle ().alloc ().init ();", "+\t\t\t\tparagraphStyle.setTabStops(NSArray.array());", "+\t\t\t\tNSTextTab stop = (NSTextTab)new NSTextTab().alloc();", "+\t\t\t\tstop = stop.initWithType(OS.NSLeftTabStopType, tab);", "+\t\t\t\tparagraphStyle.addTabStop(stop);", "+\t\t\t\tstop.release();", "+\t\t\t\tstr.addAttribute(OS.NSParagraphStyleAttributeName, paragraphStyle, range);", "+\t\t\t\tparagraphStyle.release ();", "+\t\t\t\t", "+\t\t\t\tnsItem.setAttributedTitle(str);", "+\t\t\t\tstr.release();", "+\t\t\t}", "+\t\t}"]}], "num": 60571}