{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc521ce54948acce4ef54bdf04d43d7f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26ea0af952da7ff3a45bfcf76d877ce1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java", "commitBeforeChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "commitAfterChange": "fc949910d259b2f09c2a6d209f57255840ca1162", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void print(Node node, int level)", "signatureAfterChange": " \t \tpublic void print(Node node, int level)", "diff": ["-\t\t\t\t\tArrayList nodes = new ArrayList();", "+\t\t\t\t\tArrayList<Node> nodes = new ArrayList<Node>();", "-\t\t\t\t\tCollections.sort(nodes, new Comparator() {", "-\t\t\t\t\t\tpublic int compare(Object arg0, Object arg1) {", "-\t\t\t\t\t\t\tNode a = (Node)arg0;", "-\t\t\t\t\t\t\tNode b = (Node)arg1;", "+\t\t\t\t\tCollections.sort(nodes, new Comparator<Node>() {", "+\t\t\t\t\t\tpublic int compare(Node a, Node b) {", "-\t\t\t\t\t\tprint((Node)nodes.get(i), level + 1);", "+\t\t\t\t\t\tprint(nodes.get(i), level + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "327b3cbf8cc82c5bd3dbc1da88f3117a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/DOMWriter.java", "commitBeforeChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "commitAfterChange": "fc949910d259b2f09c2a6d209f57255840ca1162", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tAttr[] sort(NamedNodeMap attrs)", "signatureAfterChange": "  \tAttr[] sort(NamedNodeMap attrs)", "diff": ["-\t\tArrays.sort(result, new Comparator() {", "-\t\t\tpublic int compare(Object arg0, Object arg1) {", "-\t\t\t\treturn nodeName((Node) arg0).compareTo(nodeName((Node) arg1));", "+\t\tArrays.sort(result, new Comparator<Node>() {", "+\t\t\tpublic int compare(Node arg0, Node arg1) {", "+\t\t\t\treturn nodeName(arg0).compareTo(nodeName(arg1));"]}], "num": 46353}