{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c187971c1c4fb7c401af8f1c69f79aa4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b41f5c0d6f63e371f65ccd1ec03deed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "e9b2aa01539eb3c1be0f7d0c4b58d64c5126fa42", "commitAfterChange": "c0d13b04fb90a4c8daa9e9ebccd8301b692736db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["-\t", "-\t/* Get the HDC for the device */", "-\tDevice device = data.device;", "- \tint hDC = device.internal_new_GC(null);", "- \t", "+", "-\tint memHdc = OS.CreateCompatibleDC(hDC);", "+\tint memHdc = OS.CreateCompatibleDC(handle);", "-\t", "-\t/* Release the HDC for the device */", "-\tdevice.internal_dispose_GC(hDC, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d075fd475490891de3ead6258883e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Control.java", "commitBeforeChange": "eb0f86c374884819ce5c3dbe5720c630b12250b8", "commitAfterChange": "08347d91517aa7ccd06558bf822db6fa50007dee", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void test_internal_new_GCLorg_eclipse_swt_graphics_GCData()", "signatureAfterChange": "  public void test_internal_new_GCLorg_eclipse_swt_graphics_GCData()", "diff": ["-\tGCData data = new GCData();", "-\tint hDC = control.internal_new_GC(data);", "-\tcontrol.internal_dispose_GC(hDC, data);", "+\t// intentionally not tested - not public API"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13240809ca3ed2ab54a45ae43a51808", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "62e797223f6c6aa3b4feac4a904182e94088a92c", "commitAfterChange": "1c70972bfbe39a9f87e858e5e97e923ee244c636", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-", "-\t/* Get the HDC for the device */", "-\tDevice device = data.device;", "- \tint hDC = device.internal_new_GC(null);", "-\t\tint maskHdc = OS.CreateCompatibleDC(hDC);", "+\t\tint maskHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint tempHdc = OS.CreateCompatibleDC(hDC);", "-\t\t\tint tempBitmap = OS.CreateCompatibleBitmap(hDC, destWidth, destHeight);\t", "+\t\t\tint tempHdc = OS.CreateCompatibleDC(handle);", "+\t\t\tint tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "-\t", "-\t/* Release the HDC for the device */", "-\tdevice.internal_dispose_GC(hDC, null);"]}], "num": 49422}