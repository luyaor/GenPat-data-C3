{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16f3ca757d4b948cac2db3b56e83910f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39505688ce29aab433605b34b3e2149c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "026ec216fd746b5e9f0ce3f8740b6030120c3888", "commitAfterChange": "b9c769186b6eec3de3a834e03089cad0e02d351b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\t\t\tint x1 = left.solveX (width);", "-\t\t\tint x2 = right.solveX (width);", "-//\t\t\tif ((child.getStyle () & SWT.WRAP) != 0) {", "-//\t\t\t\tif (data.width == SWT.DEFAULT && data.cacheWidth == -1) {", "-//\t\t\t\t\t//width favoured over height (calling getLeftAttachment() does this)", "-//\t\t\t\t\t//this means that when y1 and y2 are computed, the cached height values", "-//\t\t\t\t\t//reflect the desired height wrt \"x2 - x1\" rather than \"width\".  This", "-//\t\t\t\t\t//means that the cache is wrong wrt \"width\" and should be cleared", "-//\t\t\t\t\t//bug (x2 - x1) needs to get rid of trim", "-//\t\t\t\t\tint border = child.getBorderWidth ();", "-//\t\t\t\t\tdata.computeCache (child, x2 - x1 - border * 2, data.height, flushCache);", "-//\t\t\t\t}", "-//\t\t\t}", "+\t\t\tint x1 = left.solveX (width), x2 = right.solveX (width);", "+\t\t\tif (data.width == SWT.DEFAULT && data.height == SWT.DEFAULT) {", "+\t\t\t\tif (data.cacheWidth == -1 && (child.getStyle () & SWT.WRAP) != 0) {", "+\t\t\t\t\t//width favoured over height (calling getLeftAttachment() does this)", "+\t\t\t\t\t//this means that when y1 and y2 are computed, the cached height values", "+\t\t\t\t\t//reflect the desired height wrt \"x2 - x1\" rather than \"width\".  This", "+\t\t\t\t\t//means that the cache is wrong wrt \"width\" and should be cleared", "+\t\t\t\t\t//bug (x2 - x1) needs to get rid of trim", "+\t\t\t\t\tint border = child.getBorderWidth ();", "+\t\t\t\t\tdata.computeCache (child, x2 - x1 - border * 2, data.height, flushCache);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aea82df24e6e41ccc10e1c2788976cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/FormLayout.java", "commitBeforeChange": "f84adb86ff2ce7b96080589609cee34a4414ec51", "commitAfterChange": "4cb4568068eb68c85f899a6e7e655252aaee71ed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["+\t\t\tdata.needed = false;", "-\t\t\t\tif (data.cacheWidth == -1 && (child.getStyle () & SWT.WRAP) != 0) {", "-\t\t\t\t\t//width favoured over height (calling getLeftAttachment() does this)", "-\t\t\t\t\t//this means that when y1 and y2 are computed, the cached height values", "-\t\t\t\t\t//reflect the desired height wrt \"x2 - x1\" rather than \"width\".  This", "-\t\t\t\t\t//means that the cache is wrong wrt \"width\" and should be cleared", "-\t\t\t\t\t//bug (x2 - x1) needs to get rid of trim", "-\t\t\t\t\t//int border = child.getBorderWidth ();", "-\t\t\t\t\t//data.computeCache (child, x2 - x1 - border * 2, data.height, flushCache);", "+\t\t\t\tif (!data.needed && (child.getStyle () & SWT.WRAP) != 0) {", "+\t\t\t\t\tint trim = 0;", "+\t\t\t\t\tif (child instanceof Scrollable) {", "+\t\t\t\t\t\tRectangle rect = ((Scrollable) child).computeTrim (0, 0, 0, 0);", "+\t\t\t\t\t\ttrim = rect.width;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttrim = child.getBorderWidth () * 2;", "+\t\t\t\t\t}", "+\t\t\t\t\tdata.computeCache (child, x2 - x1 - trim, data.height, flushCache);"]}], "num": 17939}