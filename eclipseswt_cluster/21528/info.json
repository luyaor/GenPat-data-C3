{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43474d805222e2b4b68022e799fca5db", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11fdccb058a4698888dff7a8a983d40", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "54942bc8122ab5be263e29cd3c306c3f16f22421", "commitAfterChange": "b593285f9ac777062f9ad7e57ee6b21c57701934", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 64, height = 64;", "+\tint width = 0, height = 0;", "+\tif (wHint == SWT.DEFAULT || hHint == SWT.DEFAULT) {", "+\t\tif ((style & SWT.CALENDAR) != 0) {", "+\t\t\t// TODO", "+\t\t\twidth = 100;", "+\t\t\theight = 100;", "+\t\t} else {", "+\t\t\t// TODO: get the height of the current font", "+\t\t\theight = 20;", "+\t\t\t// TODO: max with the height of the up/down buttons", "+\t\t\tint upDownHeight = 24;", "+\t\t\theight = Math.max (height, upDownHeight);", "+\t\t\t", "+\t\t\t// TODO: determine the stringWidth of date or time string in current font (take code from GC)", "+\t\t\tString string = \"00/00/0000\";", "+\t\t\tif ((style & SWT.TIME) != 0) string = \"00:00:00 AM\";", "+\t\t\tGC gc = new GC(this);", "+\t\t\twidth = gc.stringExtent(string).x;", "+\t\t\tgc.dispose();", "+\t\t\t// TODO: max with the height of the up/down buttons (maybe plus some margin?)", "+\t\t\tint upDownWidth = 20;", "+\t\t\twidth += upDownWidth + 5; // MARGIN", "+\t\t}", "+\t}", "+\tif (width == 0) width = DEFAULT_WIDTH;", "+\tif (height == 0) height = DEFAULT_HEIGHT;", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tint border = getBorderWidth ();", "+\twidth += border * 2; height += border * 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5908c2df53cddecf13980abe43c63d5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "e2be076190143565bdb8c51e2ff8ec2fa705a6b0", "commitAfterChange": "32519857d7ad2eb01dc0315f618d4bd0cd96d2c6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = 0, height = 0;", "-\tif ((style & SWT.SEPARATOR) != 0) {", "-\t\tif ((style & SWT.HORIZONTAL) != 0) {", "-\t\t\twidth = DEFAULT_WIDTH;", "-\t\t\theight = 3;", "-\t\t} else {", "-\t\t\twidth = 3;", "-\t\t\theight = DEFAULT_HEIGHT;", "-\t\t}", "+\tNSRect oldRect = view.frame ();", "+\tint width = DEFAULT_WIDTH;", "+\tint height = DEFAULT_HEIGHT;", "+\tif (!isImage) {", "+\t\t((NSBox) view).sizeToFit ();", "+\t\tNSRect newRect = view.frame ();", "+\t\twidth = (int) newRect.width;", "+\t\theight = (int) newRect.height;", "+\t\tview.setFrame (oldRect);", "-\t\tif (image != null && isImage) {", "-\t\t\tRectangle bounds = image.getBounds();", "-\t\t\twidth = bounds.width;", "-\t\t\theight = bounds.height;", "-\t\t} else {", "-\t\t\tNSRect oldRect = textView.frame();", "-\t\t\ttextView.sizeToFit();", "-\t\t\tNSRect newRect = textView.frame();", "-\t\t\ttextView.setFrame (oldRect);", "-\t\t\twidth = (int)newRect.width;", "-\t\t\theight = (int)newRect.height;", "-\t\t}", "+\t\tNSImage nsimage = image.handle;", "+\t\tNSSize size = nsimage.size ();", "+\t\twidth = (int) size.width;", "+\t\theight = (int) size.height;", "-\tif (wHint != SWT.DEFAULT) width = wHint;", "-\tif (hHint != SWT.DEFAULT) height = hHint;"]}], "num": 21528}