{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74691a458d9ab60a0dee20b05c3eeb85", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab95be3faf70cdc48a83824b99cbb30c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "26107c4df698e35753dc6a3dcb5e875af68d4199", "commitAfterChange": "98bbb377c8fa0a6157f81dc426a5fddf7133e096", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 20, "signatureBeforeChange": " int processSelection  (int int0, int int1, int int2)", "signatureAfterChange": "  int processSelection  (int int0, int int1, int int2)", "diff": ["-*/", "+", "+\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\tint eventPtr = OS.gtk_get_current_event ();", "+\t\tif (eventPtr != 0) {", "+\t\t\tGdkEvent gdkEvent = new GdkEvent ();", "+\t\t\tOS.memmove (gdkEvent, eventPtr, GdkEvent.sizeof);", "+\t\t\tswitch (gdkEvent.type) {", "+\t\t\t\tcase OS.GDK_BUTTON_PRESS:", "+\t\t\t\tcase OS.GDK_2BUTTON_PRESS: ", "+\t\t\t\tcase OS.GDK_BUTTON_RELEASE: {", "+\t\t\t\t\tdouble [] x_win = new double [1];", "+\t\t\t\t\tdouble [] y_win = new double [1];", "+\t\t\t\t\tOS.gdk_event_get_coords (eventPtr, x_win, y_win);", "+\t\t\t\t\tif ((int) x_win [0] > OS.GTK_WIDGET_WIDTH (boxHandle)) {", "+\t\t\t\t\t\tevent.detail = SWT.ARROW;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b63a42df73fb660cc1efdec335efb84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "92e83b54977a11052b46f2a93227c10bd401de89", "commitAfterChange": "91ca9b8718f2b061952edf08ad752d3a1aa6ef26", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  int gtk_clicked (int widget)", "signatureAfterChange": "  int gtk_clicked (int widget)", "diff": ["-\tpostEvent (SWT.Selection);", "+\t/*", "+\t* There is no API to get a double click on a table column.  Normally, when", "+\t* the mouse is double clicked, this is indicated by GDK_2BUTTON_PRESS", "+\t* but the table column sends the click signal on button release.  The fix is to", "+\t* test for doublc click by remembering the last click time and mouse button", "+\t* and testing for the double click interval.", "+\t*/", "+\tboolean doubleClick = false;", "+\tint eventPtr = OS.gtk_get_current_event ();", "+\tif (eventPtr != 0) {", "+\t\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\t\tOS.memmove (gdkEvent, eventPtr, GdkEventButton.sizeof);", "+\t\tswitch (gdkEvent.type) {", "+\t\t\tcase OS.GDK_BUTTON_RELEASE: {", "+\t\t\t\tDisplay display = getDisplay ();", "+\t\t\t\tint clickTime = display.getDoubleClickTime ();", "+\t\t\t\tint eventTime = gdkEvent.time, eventButton = gdkEvent.button;", "+\t\t\t\tif (lastButton == eventButton && lastTime != 0 && Math.abs (lastTime - eventTime) <= clickTime) {", "+\t\t\t\t\tdoubleClick = true;", "+\t\t\t\t}", "+\t\t\t\tlastTime = eventTime == 0 ? 1: eventTime;", "+\t\t\t\tlastButton = eventButton;", "+\t\t\t}", "+\t\t}", "+\t\tOS.gdk_event_free (eventPtr);", "+\t}", "+\tpostEvent (doubleClick ? SWT.DefaultSelection : SWT.Selection);"]}], "num": 46355}