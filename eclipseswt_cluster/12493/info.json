{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a72838823710c560fb8cc58fb6e7a3c9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba5c161d340fe702c8bc502c570fd021", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "10cff956b5a7baa336ed7e4f79deb8729cdad298", "commitAfterChange": "4a54739762437bd8066c9b7d36c4c3d14493b18a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tint count = url.length();", "-\tchar[] chars = new char[count + 1];", "-\turl.getChars(0, count, chars, 0);", "-\tint codePage = OS.GetACP();", "-\tint cchMultiByte = OS.WideCharToMultiByte(codePage, 0, chars, -1, null, 0, null, null);", "-\tif (cchMultiByte == 0) {", "+\tif (transferData.type == CFSTR_INETURLIDW) {", "+\t\tint charCount = url.length ();", "+\t\tchar[] chars = new char[charCount+1];", "+\t\turl.getChars (0, charCount, chars, 0);", "+\t\tint byteCount = chars.length * 2;", "+\t\tint /*long*/ newPtr = OS.GlobalAlloc(COM.GMEM_FIXED | COM.GMEM_ZEROINIT, byteCount);", "+\t\tOS.MoveMemory(newPtr, chars, byteCount);", "-\t\ttransferData.result = COM.DV_E_STGMEDIUM;", "-\t\treturn;", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\ttransferData.stgmedium.unionField = newPtr;", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\ttransferData.result = COM.S_OK;", "+\t} else if (transferData.type == CFSTR_INETURLID) {", "+\t\tint count = url.length();", "+\t\tchar[] chars = new char[count + 1];", "+\t\turl.getChars(0, count, chars, 0);", "+\t\tint codePage = OS.GetACP();", "+\t\tint cchMultiByte = OS.WideCharToMultiByte(codePage, 0, chars, -1, null, 0, null, null);", "+\t\tif (cchMultiByte == 0) {", "+\t\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\t\ttransferData.result = COM.DV_E_STGMEDIUM;", "+\t\t\treturn;", "+\t\t}", "+\t\tint /*long*/ lpMultiByteStr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, cchMultiByte);", "+\t\tOS.WideCharToMultiByte(codePage, 0, chars, -1, lpMultiByteStr, cchMultiByte, null, null);", "+\t\ttransferData.stgmedium = new STGMEDIUM();", "+\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\t\ttransferData.stgmedium.unionField = lpMultiByteStr;", "+\t\ttransferData.stgmedium.pUnkForRelease = 0;", "+\t\ttransferData.result = COM.S_OK;", "-\tint /*long*/ lpMultiByteStr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, cchMultiByte);", "-\tOS.WideCharToMultiByte(codePage, 0, chars, -1, lpMultiByteStr, cchMultiByte, null, null);", "-\ttransferData.stgmedium = new STGMEDIUM();", "-\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "-\ttransferData.stgmedium.unionField = lpMultiByteStr;", "-\ttransferData.stgmedium.pUnkForRelease = 0;", "-\ttransferData.result = COM.S_OK;", "-\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad545f68f7673485266877fff39a7498", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/ByteArrayTransfer.java", "commitBeforeChange": "74553fa6850361f786837718de64643b391519f8", "commitAfterChange": "bf33a068cd8d34feb66b3cb1cbaacdbe09b72620", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " protected void javaToNative (Object object, TransferData transferData)", "diff": ["-protected void javaToNative (Object object, TransferData transferData){", "-\tif (object == null || !(object instanceof byte[])) {", "-\t\ttransferData.result = COM.E_FAIL;", "-\t\treturn;", "-\t}", "-", "-\tbyte[] data = (byte[])object;", "-\t", "-\tif (isSupportedType(transferData)) {", "-\t\t// Allocate the memory because the caller (DropTarget) has not handed it in", "-\t\t// The caller of this method must release the data when it is done with it.", "-\t\tint size = data.length;", "-\t\tint newPtr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, size);", "-\t\tOS.MoveMemory(newPtr, data, size);", "-\t\t", "+protected void javaToNative (Object object, TransferData transferData) {", "+\ttransferData.result = COM.E_FAIL;", "+\tif (object == null || !(object instanceof byte[])) return;", "+\tif (!isSupportedType(transferData)) {", "+\t\t// did not match the TYMED", "-\t\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "-\t\ttransferData.stgmedium.unionField = newPtr;", "-\t\ttransferData.stgmedium.pUnkForRelease = 0;", "-\t\ttransferData.result = COM.S_OK;", "+\t\ttransferData.result = COM.DV_E_TYMED;", "-\t", "-\t// did not match the TYMED", "+\t// Allocate the memory because the caller (DropTarget) has not handed it in", "+\t// The caller of this method must release the data when it is done with it.", "+\tbyte[] data = (byte[])object;", "+\tint size = data.length;", "+\tint newPtr = OS.GlobalAlloc(OS.GMEM_FIXED | OS.GMEM_ZEROINIT, size);", "+\tOS.MoveMemory(newPtr, data, size);\t", "-\ttransferData.result = COM.DV_E_TYMED;", "+\ttransferData.stgmedium.tymed = COM.TYMED_HGLOBAL;", "+\ttransferData.stgmedium.unionField = newPtr;", "+\ttransferData.stgmedium.pUnkForRelease = 0;", "+\ttransferData.result = COM.S_OK;"]}], "num": 12493}