{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a069836522f2013cb7b94a4f23230eca", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339a75bd459d904b140518cb5e361a42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "91999dea023f538a28afe60645e6dff08a1085a9", "commitAfterChange": "d2c1767eb08a28bfa31c8e2d549b4275c725bd40", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test_getText()", "signatureAfterChange": "  public void test_getText()", "diff": ["+\t", "+\t// tests a SINGLE line text editor", "+\tmakeCleanEnvironment(true);", "+\tassertEquals(\"\", text.getText());", "+\ttext.setText(\"01234567890\");", "+\tassertEquals(\"01234567890\", text.getText());", "+\ttext.setText(\"\");", "+\tassertEquals(\"\", text.getText());", "+\t", "+\t// tests a SINGLE line text editor with border", "+\tmakeCleanEnvironment(true, true);", "+\tassertEquals(\"\", text.getText());", "+\ttext.setText(\"01234567890\");", "+\tassertEquals(\"01234567890\", text.getText());", "+\ttext.setText(\"\");", "+\tassertEquals(\"\", text.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd9edf934fb174e846ce0c69c41d25e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test_getSelectionIndex()", "signatureAfterChange": "  public void test_getSelectionIndex()", "diff": ["+\t// not properly spec'd for multi-select lists", "+\tlist.setItems(items);", "+\tlist.setSelection(items);", "+\tassertEquals(0, list.getSelectionIndex());", "+", "+\t", "-\tassertEquals(items.length - 1, list.getSelectionIndex());", "+\tassertEquals(-1, list.getSelectionIndex());", "+", "+\tlist.setSelection(new String[] { \"text1\" });", "+\tassertEquals(0, list.getSelectionIndex());", "+", "+\tlist.setSelection(new String[] { \"text2\" });", "+\tassertEquals(1, list.getSelectionIndex());", "+", "+\tlist.setSelection(new String[] { \"text3\" });", "+\tassertEquals(2, list.getSelectionIndex());", "+", "+\tlist.setSelection(items);", "+\tassertEquals(-1, list.getSelectionIndex());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "778523bbaf6175cbc0597d7c500a9fa5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_custom_StyledText.java", "commitBeforeChange": "fb0381a9298c2baaf1b996c42b6a80ea925bdfbc", "commitAfterChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  public void test_replaceTextRangeIILjava_lang_String()", "signatureAfterChange": "  public void test_replaceTextRangeIILjava_lang_String()", "diff": ["-\tString defaultText = \"line0\\n\\rline1\\n\\rline2\\n\\r\";", "-\tint defaultTextLength = defaultText.length();", "-\tint selectionStart = 7;", "-\tint selectionLength = 7;", "-\tint replaceStart = selectionStart + selectionLength + 1;", "-\tint replaceLength = 5;", "+\tfinal String defaultText = \"line0\\n\\rline1\\n\\rline2\\n\\r\";", "+\tfinal int defaultTextLength = defaultText.length();", "+\tfinal int selectionStart = 7;", "+\tfinal int selectionLength = 7;", "+\tfinal int replaceStart = selectionStart + selectionLength + 1;", "+\tfinal int replaceLength = 5;", "-\tString newText = \"newline0\\n\\rnewline1\";", "-\tint newTextLength = newText.length();", "+\tfinal String newText = \"newline0\\n\\rnewline1\";", "+\tfinal int newTextLength = newText.length();", "+\tclass TestSelectionListener extends SelectionAdapter {", "+\t\tpublic Point eventSelection = new Point(0, 0);", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\teventSelection.x = e.x;", "+\t\t\teventSelection.y = e.y;", "+\t\t}", "+\t}", "+\tfinal TestSelectionListener selectionListener = new TestSelectionListener();", "+\ttext.addSelectionListener(selectionListener);", "+\tassertEquals(text.getSelection(), selectionListener.eventSelection);", "+\tassertEquals(text.getSelection(), selectionListener.eventSelection);", "+\tassertEquals(text.getSelection(), selectionListener.eventSelection);", "+\tassertEquals(text.getSelection(), selectionListener.eventSelection);", "+\ttext.removeSelectionListener(selectionListener);"]}], "num": 57847}