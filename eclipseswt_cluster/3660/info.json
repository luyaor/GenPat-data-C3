{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dd149303ea6ec6585c40bef222347517", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906eafbabb0e66859263ea984e4d53ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "8c1742e67c1e4d288877ced18ec4003ddd91b26c", "commitAfterChange": "6cd1ca6632ac80e9ec1f495926ca79670db9ab98", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic int getType (byte[] widgetTypeName, Accessible accessible, int parentType, int childId)", "signatureAfterChange": "  \tstatic int getType (byte[] widgetTypeName, Accessible accessible, int parentType, int childId)", "diff": ["-\t\tif (action) swtTypeName += \"Action\";", "-\t\tif (hypertext) swtTypeName += \"Hypertext\";", "-\t\tif (selection) swtTypeName += \"Selection\";", "-\t\tif (text) swtTypeName += \"Text\";", "+\t\tif (action) swtTypeName += \"Action\"; //$NON-NLS-1$", "+\t\tif (hypertext) swtTypeName += \"Hypertext\"; //$NON-NLS-1$", "+\t\tif (selection) swtTypeName += \"Selection\"; //$NON-NLS-1$", "+\t\tif (text) swtTypeName += \"Text\"; //$NON-NLS-1$", "-\t\t\tATK.g_type_query (parentType, queryPtr);", "+\t\t\tOS.g_type_query (parentType, queryPtr);", "-\t\t\tATK.memmove (query, queryPtr, GTypeQuery.sizeof);", "+\t\t\tOS.memmove (query, queryPtr, GTypeQuery.sizeof);", "-\t\t\tATK.memmove (ObjectIfaceDefinition, typeInfo, GTypeInfo.sizeof);", "+\t\t\tOS.memmove (ObjectIfaceDefinition, typeInfo, GTypeInfo.sizeof);", "-\t\t\ttype = ATK.g_type_register_static (parentType, nameBytes, ObjectIfaceDefinition, 0);", "-\t\t\tATK.g_type_add_interface_static (type, AccessibleObject.ATK_COMPONENT_TYPE, ComponentIfaceDefinition);", "-\t\t\tif (action) ATK.g_type_add_interface_static (type, AccessibleObject.ATK_ACTION_TYPE, ActionIfaceDefinition);", "-\t\t\tif (hypertext) ATK.g_type_add_interface_static (type, AccessibleObject.ATK_HYPERTEXT_TYPE, HypertextIfaceDefinition);", "-\t\t\tif (selection) ATK.g_type_add_interface_static (type, AccessibleObject.ATK_SELECTION_TYPE, SelectionIfaceDefinition);", "-\t\t\tif (text) ATK.g_type_add_interface_static (type, AccessibleObject.ATK_TEXT_TYPE, TextIfaceDefinition);", "+\t\t\ttype = OS.g_type_register_static (parentType, nameBytes, ObjectIfaceDefinition, 0);", "+\t\t\tOS.g_type_add_interface_static (type, AccessibleObject.ATK_COMPONENT_TYPE, ComponentIfaceDefinition);", "+\t\t\tif (action) OS.g_type_add_interface_static (type, AccessibleObject.ATK_ACTION_TYPE, ActionIfaceDefinition);", "+\t\t\tif (hypertext) OS.g_type_add_interface_static (type, AccessibleObject.ATK_HYPERTEXT_TYPE, HypertextIfaceDefinition);", "+\t\t\tif (selection) OS.g_type_add_interface_static (type, AccessibleObject.ATK_SELECTION_TYPE, SelectionIfaceDefinition);", "+\t\t\tif (text) OS.g_type_add_interface_static (type, AccessibleObject.ATK_TEXT_TYPE, TextIfaceDefinition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b55490f9e3981d042c409f732e99b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "d65574be2b80e5860c35d7514f11464a345b996f", "commitAfterChange": "f583ce777b499cca4aaaa2f88ac939554f6b0b09", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid createColorGroup ()", "signatureAfterChange": " \tvoid createColorGroup ()", "diff": ["-\t\ttreeItemGroup = new Group (colorGroup, SWT.NONE);", "-\t\ttreeItemGroup.setText (ControlExample.getResourceString (\"Tree_Item_Colors\"));", "+\t\titemGroup = new Group (colorGroup, SWT.NONE);", "+\t\titemGroup.setText (ControlExample.getResourceString (\"Tree_Item_Colors\"));", "-\t\ttreeItemGroup.setLayoutData (data);", "-\t\ttreeItemGroup.setLayout (new GridLayout (2, false));", "-\t\tnew Label (treeItemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Foreground_Color\"));", "-\t\titemForegroundButton = new Button (treeItemGroup, SWT.PUSH);", "-\t\tnew Label (treeItemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Background_Color\"));", "-\t\titemBackgroundButton = new Button (treeItemGroup, SWT.PUSH);", "-\t\titemFontButton = new Button (treeItemGroup, SWT.PUSH);", "+\t\titemGroup.setLayoutData (data);", "+\t\titemGroup.setLayout (new GridLayout (2, false));", "+\t\tnew Label (itemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Foreground_Color\"));", "+\t\titemForegroundButton = new Button (itemGroup, SWT.PUSH);", "+\t\tnew Label (itemGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Background_Color\"));", "+\t\titemBackgroundButton = new Button (itemGroup, SWT.PUSH);", "+\t\titemFontButton = new Button (itemGroup, SWT.PUSH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "798edf621089d113e0d990e7f03e1cb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/internal/mozilla/XPCOMObject.java", "commitBeforeChange": "a6131ac9e2d912fd79a498410994704f80907b17", "commitAfterChange": "e758c60c4fb72428ae282ccc25e3e75b0adf65c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public XPCOMObject(int[] argCounts)", "signatureAfterChange": " \t public XPCOMObject (int[] argCounts)", "diff": ["-public XPCOMObject(int[] argCounts) {", "+public XPCOMObject (int[] argCounts) {", "-\t\t\tCallbacks[i][argCounts[i]] = new Callback(this.getClass(), \"callback\"+i, argCounts[i] + 1, true); //$NON-NLS-1$", "+\t\t\tCallbacks[i][argCounts[i]] = new Callback (getClass (), \"callback\"+i, argCounts[i] + 1, true); //$NON-NLS-1$", "-\t\tcallbackAddresses[i] = Callbacks[i][argCounts[i]].getAddress();", "+\t\tcallbackAddresses[i] = Callbacks[i][argCounts[i]].getAddress ();", "-\tint /*long*/ pVtable = OS.g_malloc(OS.PTR_SIZEOF * argCounts.length);", "-\tXPCOM.memmove(pVtable, callbackAddresses, OS.PTR_SIZEOF * argCounts.length);", "-\tppVtable = OS.g_malloc(OS.PTR_SIZEOF);", "-\tXPCOM.memmove(ppVtable, new int /*long*/[] {pVtable}, OS.PTR_SIZEOF);", "-\tObjectMap.put(new LONG(ppVtable), this);", "+\tint /*long*/ pVtable = C.malloc (C.PTR_SIZEOF * argCounts.length);", "+\tXPCOM.memmove (pVtable, callbackAddresses, C.PTR_SIZEOF * argCounts.length);", "+\tppVtable = C.malloc (C.PTR_SIZEOF);", "+\tXPCOM.memmove (ppVtable, new int /*long*/[] {pVtable}, C.PTR_SIZEOF);", "+\tObjectMap.put (new LONG (ppVtable), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efd9ec497d3e036aafeae1d1e293230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/PromptService.java", "commitBeforeChange": "a6131ac9e2d912fd79a498410994704f80907b17", "commitAfterChange": "e758c60c4fb72428ae282ccc25e3e75b0adf65c4", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public int PromptUsernameAndPassword(int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "signatureAfterChange": "  public int PromptUsernameAndPassword (int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "diff": ["-public int /*long*/ PromptUsernameAndPassword(int /*long*/ parent, int /*long*/ dialogTitle, int /*long*/ text, int /*long*/ username, int /*long*/ password, int /*long*/ checkMsg, int /*long*/ checkValue, int /*long*/ _retval) {", "-\tBrowser browser = getBrowser(parent);", "+public int /*long*/ PromptUsernameAndPassword (int /*long*/ parent, int /*long*/ dialogTitle, int /*long*/ text, int /*long*/ username, int /*long*/ password, int /*long*/ checkMsg, int /*long*/ checkValue, int /*long*/ _retval) {", "+\tBrowser browser = getBrowser (parent);", "-\t\tlength = XPCOM.strlen_PRUnichar(dialogTitle);", "+\t\tlength = XPCOM.strlen_PRUnichar (dialogTitle);", "-\t\tXPCOM.memmove(dest, dialogTitle, length * 2);", "-\t\ttitleLabel = new String(dest);", "+\t\tXPCOM.memmove (dest, dialogTitle, length * 2);", "+\t\ttitleLabel = new String (dest);", "-\tlength = XPCOM.strlen_PRUnichar(text);", "+\tlength = XPCOM.strlen_PRUnichar (text);", "-\tXPCOM.memmove(dest, text, length * 2);", "-\ttextLabel = new String(dest);", "+\tXPCOM.memmove (dest, text, length * 2);", "+\ttextLabel = new String (dest);", "-\tXPCOM.memmove(userAddr, username, OS.PTR_SIZEOF);", "+\tXPCOM.memmove (userAddr, username, C.PTR_SIZEOF);", "-\t\tlength = XPCOM.strlen_PRUnichar(userAddr[0]);", "+\t\tlength = XPCOM.strlen_PRUnichar (userAddr[0]);", "-\t\tXPCOM.memmove(dest, userAddr[0], length * 2);", "-\t\tuserLabel[0] = new String(dest);\t\t", "+\t\tXPCOM.memmove (dest, userAddr[0], length * 2);", "+\t\tuserLabel[0] = new String (dest);\t\t", "-\tXPCOM.memmove(passAddr, password, OS.PTR_SIZEOF);", "+\tXPCOM.memmove (passAddr, password, C.PTR_SIZEOF);", "-\t\tlength = XPCOM.strlen_PRUnichar(passAddr[0]);", "+\t\tlength = XPCOM.strlen_PRUnichar (passAddr[0]);", "-\t\tXPCOM.memmove(dest, passAddr[0], length * 2);", "-\t\tpassLabel[0] = new String(dest);\t\t", "+\t\tXPCOM.memmove (dest, passAddr[0], length * 2);", "+\t\tpassLabel[0] = new String (dest);\t\t", "-\t\tlength = XPCOM.strlen_PRUnichar(checkMsg);", "+\t\tlength = XPCOM.strlen_PRUnichar (checkMsg);", "-\t\tXPCOM.memmove(dest, checkMsg, length * 2);", "-\t\tcheckLabel = new String(dest);", "+\t\tXPCOM.memmove (dest, checkMsg, length * 2);", "+\t\tcheckLabel = new String (dest);", "-\tPromptDialog dialog = new PromptDialog(browser.getShell());", "+\tPromptDialog dialog = new PromptDialog (browser.getShell());", "-\tif (checkValue != 0) XPCOM.memmove(check, checkValue, 4);", "-\tdialog.promptUsernameAndPassword(titleLabel, textLabel, checkLabel, userLabel, passLabel, check, result);", "+\tif (checkValue != 0) XPCOM.memmove (check, checkValue, 4);", "+\tdialog.promptUsernameAndPassword (titleLabel, textLabel, checkLabel, userLabel, passLabel, check, result);", "-\tXPCOM.memmove(_retval, result, 4);", "+\tXPCOM.memmove (_retval, result, 4);", "-\t\t\tcnt = userLabel[0].length();", "+\t\t\tcnt = userLabel[0].length ();", "-\t\t\tuserLabel[0].getChars(0, cnt, buffer, 0);", "+\t\t\tuserLabel[0].getChars (0, cnt, buffer, 0);", "-\t\t\tptr = OS.g_malloc(size);", "-\t\t\tXPCOM.memmove(ptr, buffer, size);", "-\t\t\tXPCOM.memmove(username, new int /*long*/[] {ptr}, OS.PTR_SIZEOF);", "+\t\t\tptr = C.malloc (size);", "+\t\t\tXPCOM.memmove (ptr, buffer, size);", "+\t\t\tXPCOM.memmove (username, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "-\t\t\t\tint rc = XPCOM.NS_GetServiceManager(result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error(rc);", "-\t\t\t\tif (result2[0] == 0) SWT.error(XPCOM.NS_NOINTERFACE);", "+\t\t\t\tint rc = XPCOM.NS_GetServiceManager (result2);", "+\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);", "-\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager(result2[0]);", "+\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result2[0]);", "-\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\t\trc = serviceManager.GetServiceByContractID(aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error(rc);", "-\t\t\t\tif (result[0] == 0) SWT.error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\t\t\tserviceManager.Release();", "+\t\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "+\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "+\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\t\tif (result[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);\t\t", "+\t\t\t\tserviceManager.Release ();", "-\t\t\t\tnsIMemory memory = new nsIMemory(result2[0]);", "+\t\t\t\tnsIMemory memory = new nsIMemory (result2[0]);", "-\t\t\t\tmemory.Free(userAddr[0]);", "-\t\t\t\tmemory.Release();", "+\t\t\t\tmemory.Free (userAddr[0]);", "+\t\t\t\tmemory.Release ();", "-\t\t\tcnt = passLabel[0].length();", "+\t\t\tcnt = passLabel[0].length ();", "-\t\t\tpassLabel[0].getChars(0, cnt, buffer, 0);", "+\t\t\tpassLabel[0].getChars (0, cnt, buffer, 0);", "-\t\t\tptr = OS.g_malloc(size);", "-\t\t\tXPCOM.memmove(ptr, buffer, size);", "-\t\t\tXPCOM.memmove(password, new int /*long*/[] {ptr}, OS.PTR_SIZEOF);", "+\t\t\tptr = C.malloc (size);", "+\t\t\tXPCOM.memmove (ptr, buffer, size);", "+\t\t\tXPCOM.memmove (password, new int /*long*/[] {ptr}, C.PTR_SIZEOF);", "-\t\t\t\tint rc = XPCOM.NS_GetServiceManager(result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error(rc);", "-\t\t\t\tif (result2[0] == 0) SWT.error(XPCOM.NS_NOINTERFACE);", "-\t\t\t", "-\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager(result2[0]);", "+\t\t\t\tint rc = XPCOM.NS_GetServiceManager (result2);", "+\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\t\tnsIServiceManager serviceManager = new nsIServiceManager (result2[0]);", "-\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\t\trc = serviceManager.GetServiceByContractID(aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "-\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error(rc);", "-\t\t\t\tif (result2[0] == 0) SWT.error(XPCOM.NS_NOINTERFACE);\t\t", "-\t\t\t\tserviceManager.Release();", "-\t\t\t\t", "-\t\t\t\tnsIMemory memory = new nsIMemory(result2[0]);", "+\t\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_MEMORY_CONTRACTID, true);", "+\t\t\t\trc = serviceManager.GetServiceByContractID (aContractID, nsIMemory.NS_IMEMORY_IID, result2);", "+\t\t\t\tif (rc != XPCOM.NS_OK) SWT.error (rc);", "+\t\t\t\tif (result2[0] == 0) SWT.error (XPCOM.NS_NOINTERFACE);\t\t", "+\t\t\t\tserviceManager.Release ();", "+", "+\t\t\t\tnsIMemory memory = new nsIMemory (result2[0]);", "-\t\t\t\tmemory.Free(passAddr[0]);", "-\t\t\t\tmemory.Release();", "+\t\t\t\tmemory.Free (passAddr[0]);", "+\t\t\t\tmemory.Release ();", "-\tif (checkValue != 0) XPCOM.memmove(checkValue, check, 4);", "+\tif (checkValue != 0) XPCOM.memmove (checkValue, check, 4);"]}], "num": 3660}