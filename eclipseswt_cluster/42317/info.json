{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0eddc0e5790aadf56478d84f79a44d63", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56962a36e861e908d4833d69346b1667", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getContentX (int columnIndex)", "diff": ["-\t\treturn parent.getColumn(columnIndex).getX() + Tree2.MARGIN_IMAGE;", "+\t\tTreeColumn column = parent.getColumn(columnIndex);", "+\t\tint contentX = column.getX() + MARGIN_TEXT;", "+\t\tif ((column.style & SWT.LEFT) != 0) return contentX;", "+\t\t", "+\t\tint contentWidth = internalGetTextWidth(columnIndex);", "+\t\tImage image = internalGetImage(columnIndex);", "+\t\tif (image != null) {", "+\t\t\tcontentWidth += Tree2.MARGIN_IMAGE + image.getBounds().width;", "+\t\t}", "+\t\tif ((column.style & SWT.RIGHT) != 0) {", "+\t\t\tint padding = parent.getCellPadding();", "+\t\t\tcontentX = Math.max(contentX, column.getX() + column.getWidth() - padding - contentWidth);\t", "+\t\t} else {\t/* SWT.CENTER */", "+\t\t\tcontentX = Math.max(contentX, column.getX() + (column.getWidth() - contentWidth) / 2);", "+\t\t}", "+\t\treturn contentX;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a528fe7b8e3b0d7a32c0e8dc57cdaf4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "bd05df9dcb7d1652d6e5b72fffe12747a100cab4", "commitAfterChange": "c9ac8f2d9ada6c732686595800ecf1748663dfe1", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint (GC gc, TreeColumn column, boolean paintCellContent)", "diff": ["-\t\tif (parent.linesVisible) cellRightX--;", "-\t\t\tint fillWidth = focusBounds.width;", "-\t\t\tif (parent.columns.length > 0 && !parent.linesVisible) fillWidth++;", "+\t\t\tint fillWidth = 0;", "+\t\t\tif (column == null) {", "+\t\t\t\tfillWidth = focusBounds.width;", "+\t\t\t} else {", "+\t\t\t\tfillWidth = column.width - focusBounds.x;", "+\t\t\t\tif (parent.linesVisible) fillWidth--;", "+\t\t\t}", "-\t\t\tif (!parent.linesVisible) fillWidth++;", "+\t\t\tif (parent.linesVisible) fillWidth--;", "-\tif (isSelected () && columnIndex == 0) {", "+\tif (isSelected () && (columnIndex == 0 || (parent.style & SWT.FULL_SELECTION) != 0)) {", "-\t\tRectangle focusBounds = getFocusBounds ();", "-\t\tgc.fillRectangle (focusBounds.x + 1, focusBounds.y + 1, focusBounds.width - 2, focusBounds.height - 2);", "+\t\tif (columnIndex == 0) {", "+\t\t\tRectangle focusBounds = getFocusBounds ();", "+\t\t\tint fillWidth = focusBounds.width;", "+\t\t\tif (parent.columns.length == 1 || (parent.style & SWT.FULL_SELECTION) == 0) {", "+\t\t\t\tfillWidth -= 2;\t/* space for right bound of focus rect */", "+\t\t\t}", "+\t\t\tgc.fillRectangle (focusBounds.x + 1, focusBounds.y + 1, fillWidth, focusBounds.height - 2);", "+\t\t} else {", "+\t\t\tint fillWidth = column.width;", "+\t\t\tif (columnIndex == parent.columns.length - 1) {", "+\t\t\t\tfillWidth -= 2;\t\t/* space for right bound of focus rect */", "+\t\t\t}", "+\t\t\tgc.fillRectangle (column.getX (), y + 2, fillWidth, itemHeight - 3);", "+\t\t}", "-\t\tif (isSelected () && columnIndex == 0) {", "+\t\tif (isSelected () && (columnIndex == 0 || (parent.style & SWT.FULL_SELECTION) != 0)) {"]}], "num": 42317}