{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fed0d2e65f246ce3847244b504161ba", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "804e307865f603a44b78c7fe9e61ea2d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b1a31ab4f172a1a2e228d0d4b5317b0bc24de7aa", "commitAfterChange": "b72bc1d2aeff462f0ad0e8ecfa6bc39ebd385109", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 151, "signatureBeforeChange": "  int OnStartURIOpen (int aURI, int retval)", "signatureAfterChange": "  int OnStartURIOpen (int aURI, int retval)", "diff": ["+\tif (isRetrievingBadCert) return XPCOM.NS_OK;", "+", "+\t/*", "+\t* Navigating to \"...aboutCertError.xhtml\", or to \"javascript:showSecuritySection()\" when", "+\t* the page \"netError.xhtml\" is showing, indicates that the last attempted page view had", "+\t* an invalid certificate.  When this happens, veto the current navigate and re-navigate", "+\t* to the page with the bad certificate so that NotifyCertProblem will be invoked.", "+\t*/", "+\tif (value.indexOf (\"aboutCertError.xhtml\") != -1 || (isViewingErrorPage && value.indexOf (\"javascript:showSecuritySection\") != -1)) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tXPCOM.memmove (retval, new int[] {1}, 4); /* PRBool */", "+\t\tisRetrievingBadCert = true;", "+\t\tsetUrl (lastNavigateURL);", "+\t\treturn XPCOM.NS_OK;", "+\t}", "+\tisViewingErrorPage = value.indexOf (\"netError.xhtml\") != -1; //$NON-NLS-1$", "+", "-\t\t\t\tlastNavigateURL = value;", "+\t\t\t\tif (!isViewingErrorPage) lastNavigateURL = value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd733892770d917b7ce184505ca71932", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "b1a31ab4f172a1a2e228d0d4b5317b0bc24de7aa", "commitAfterChange": "b72bc1d2aeff462f0ad0e8ecfa6bc39ebd385109", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int Alert (int aParent, int aDialogTitle, int aText)", "signatureAfterChange": "  int Alert (int aParent, int aDialogTitle, int aText)", "diff": ["-\tBrowser browser = getBrowser (aParent);", "+\tfinal Browser browser = getBrowser (aParent);", "+\t/*", "+\t* If mozilla is showing its errors with dialogs (as opposed to pages) then the only", "+\t* opportunity to detect that a page has an invalid certificate, without receiving", "+\t* all notification callbacks on the channel, is to detect the displaying of an alert", "+\t* whose message contains an internal cert error code.  If a such a message is", "+\t* detected then instead of showing it, re-navigate to the page with the invalid", "+\t* certificate so that the browser's nsIBadCertListener2 will be invoked.", "+\t*/", "+\tif (textLabel.indexOf (\"ssl_error_bad_cert_domain\") != -1 ||", "+\t\ttextLabel.indexOf (\"sec_error_unknown_issuer\") != -1 ||", "+\t\ttextLabel.indexOf (\"sec_error_expired_certificate\") != -1) { //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\tif (browser != null) {", "+\t\t\t\tMozilla mozilla = (Mozilla)browser.webBrowser;", "+\t\t\t\tmozilla.isRetrievingBadCert = true;", "+\t\t\t\tbrowser.setUrl (mozilla.lastNavigateURL);", "+\t\t\t\treturn XPCOM.NS_OK;", "+\t\t\t}", "+\t}", "+"]}], "num": 119}