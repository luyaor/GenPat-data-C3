{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "578963576d0e7f38e87c07089e870789", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cccdac8527ec5a04dad5de17bc8ad5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "68f73a31d3bd23bb9be3de8de4cfa69258483b46", "commitAfterChange": "73a144cd9caacbd3526d52dd7dce25f37ea2adb6", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "  int OnStartURIOpen(int aURI, int retval)", "signatureAfterChange": "  int OnStartURIOpen(int aURI, int retval)", "diff": ["-\tnsIURI location = new nsIURI(aURI);", "-\tint aSpec = XPCOM.nsEmbedCString_new();", "-\tlocation.GetSpec(aSpec);", "-\tint length = XPCOM.nsEmbedCString_Length(aSpec);", "-\tint buffer = XPCOM.nsEmbedCString_get(aSpec);", "-\tbuffer = XPCOM.nsEmbedCString_get(aSpec);", "-\tbyte[] dest = new byte[length];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aSpec);", "-\t", "-\t\tLocationEvent event = new LocationEvent(this);", "-\t\tevent.display = getDisplay();", "-\t\tevent.widget = this;", "-\t\tevent.location = new String(dest);", "-\t\tevent.doit = true;", "-\t\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\t\tlocationListeners[i].changing(event);", "-\t\tdoit = event.doit;", "+\t\tnsIURI location = new nsIURI(aURI);", "+\t\tint aSpec = XPCOM.nsEmbedCString_new();", "+\t\tlocation.GetSpec(aSpec);", "+\t\tint length = XPCOM.nsEmbedCString_Length(aSpec);", "+\t\tint buffer = XPCOM.nsEmbedCString_get(aSpec);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aSpec);", "+\t\tbyte[] dest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aSpec);", "+\t\tString value = new String(dest);", "+\t\t/*", "+\t\t* Feature in Mozilla.  In Mozilla 1.7.5, navigating to an ", "+\t\t* HTTPS link without a user profile set causes a crash. ", "+\t\t* HTTPS requires a user profile to be set to persist security", "+\t\t* information.  This requires creating a new user profile", "+\t\t* (i.e. creating a new folder) or locking an existing Mozilla ", "+\t\t* user profile.  The Mozilla Profile API is not frozen and it is not ", "+\t\t* currently implemented.  The workaround is to not load ", "+\t\t* HTTPS resources to avoid the crash.", "+\t\t*/", "+\t\tif (value.startsWith(XPCOM.HTTPS_PROTOCOL)) {", "+\t\t\tdoit = false;", "+\t\t} else {", "+\t\t\tLocationEvent event = new LocationEvent(this);", "+\t\t\tevent.display = getDisplay();", "+\t\t\tevent.widget = this;", "+\t\t\tevent.location = value;", "+\t\t\tevent.doit = true;", "+\t\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\t\tlocationListeners[i].changing(event);", "+\t\t\tdoit = event.doit;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fc4446016116caeed7351ef55c5e763", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "68f73a31d3bd23bb9be3de8de4cfa69258483b46", "commitAfterChange": "73a144cd9caacbd3526d52dd7dce25f37ea2adb6", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "  int OnStartURIOpen(int aURI, int retval)", "signatureAfterChange": "  int OnStartURIOpen(int aURI, int retval)", "diff": ["-\tnsIURI location = new nsIURI(aURI);", "-\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new();", "-\tlocation.GetSpec(aSpec);", "-\tint length = XPCOM.nsEmbedCString_Length(aSpec);", "-\tint /*long*/ buffer = XPCOM.nsEmbedCString_get(aSpec);", "-\tbuffer = XPCOM.nsEmbedCString_get(aSpec);", "-\tbyte[] dest = new byte[length];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aSpec);", "-\t", "-\t\tLocationEvent event = new LocationEvent(this);", "-\t\tevent.display = getDisplay();", "-\t\tevent.widget = this;", "-\t\tevent.location = new String(dest);", "-\t\tevent.doit = true;", "-\t\tfor (int i = 0; i < locationListeners.length; i++)", "-\t\t\tlocationListeners[i].changing(event);", "-\t\tdoit = event.doit;", "+\t\tnsIURI location = new nsIURI(aURI);", "+\t\tint /*long*/ aSpec = XPCOM.nsEmbedCString_new();", "+\t\tlocation.GetSpec(aSpec);", "+\t\tint length = XPCOM.nsEmbedCString_Length(aSpec);", "+\t\tint /*long*/ buffer = XPCOM.nsEmbedCString_get(aSpec);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aSpec);", "+\t\tbyte[] dest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aSpec);", "+\t\tString value = new String(dest);", "+\t\t/*", "+\t\t* Feature in Mozilla.  In Mozilla 1.7.5, navigating to an ", "+\t\t* HTTPS link without a user profile set causes a crash. ", "+\t\t* HTTPS requires a user profile to be set to persist security", "+\t\t* information.  This requires creating a new user profile", "+\t\t* (i.e. creating a new folder) or locking an existing Mozilla ", "+\t\t* user profile.  The Mozilla Profile API is not frozen and it is not ", "+\t\t* currently implemented.  The workaround is to not load ", "+\t\t* HTTPS resources to avoid the crash.", "+\t\t*/", "+\t\tif (value.startsWith(XPCOM.HTTPS_PROTOCOL)) {", "+\t\t\tdoit = false;", "+\t\t} else {", "+\t\t\tLocationEvent event = new LocationEvent(this);", "+\t\t\tevent.display = getDisplay();", "+\t\t\tevent.widget = this;", "+\t\t\tevent.location = value;", "+\t\t\tevent.doit = true;", "+\t\t\tfor (int i = 0; i < locationListeners.length; i++)", "+\t\t\t\tlocationListeners[i].changing(event);", "+\t\t\tdoit = event.doit;", "+\t\t}"]}], "num": 43592}