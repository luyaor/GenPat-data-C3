{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c64835842df6fec00a6b90b725f66f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8548d0f2274b5c484a7388f555c3821c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a1f7149f8a67dd08842e95288d377cd23ead83aa", "commitAfterChange": "b82b6bee783c1b3671f806906cfa127c639f7ce6", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\tGC gc = null;", "-\t\tint paintDC = 0;", "-\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "-\t\tif (hooks (SWT.Paint)) {", "-\t\t\tGCData data = new GCData ();", "-\t\t\tdata.ps = ps;", "-\t\t\tdata.hwnd = handle;", "-\t\t\tgc = GC.win32_new (this, data);", "-\t\t\tpaintDC = gc.handle;", "-\t\t} else {", "-\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\tboolean doubleBuffer = true;", "+\t\tif (EXPLORER_THEME) {", "+\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\t\tint exStyle = OS.SendMessage (handle, OS.TVM_GETEXTENDEDSTYLE, 0, 0);", "+\t\t\t\tif ((exStyle & OS.TVS_EX_DOUBLEBUFFER) != 0) doubleBuffer = false;", "+\t\t\t}", "-", "-\t\t//TODO - only double buffer the damage", "-//\t\tint x = ps.left, y = ps.top;", "-//\t\tint width = ps.right - ps.left;", "-//\t\tint height = ps.bottom - ps.top;", "-\t\tforceResize ();", "-\t\tRECT rect = new RECT ();", "-\t\tOS.GetClientRect (handle, rect);", "-\t\tint x = rect.left, y = rect.top;", "-\t\tint width = rect.right - rect.left;", "-\t\tint height = rect.bottom - rect.top;", "-", "-\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\tdrawBackground (hDC, rect);", "-\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\tOS.DeleteObject (hBitmap);", "-\t\tOS.DeleteObject (hDC);", "-\t\tif (hooks (SWT.Paint)) {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.gc = gc;", "-\t\t\tevent.x = ps.left;", "-\t\t\tevent.y = ps.top;", "-\t\t\tevent.width = ps.right - ps.left;", "-\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t// widget could be disposed at this point", "-\t\t\tevent.gc = null;", "-\t\t\tgc.dispose ();", "-\t\t} else {", "-\t\t\tOS.EndPaint (handle, ps);", "+\t\tif (doubleBuffer) {", "+\t\t\tGC gc = null;", "+\t\t\tint paintDC = 0;", "+\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\tGCData data = new GCData ();", "+\t\t\t\tdata.ps = ps;", "+\t\t\t\tdata.hwnd = handle;", "+\t\t\t\tgc = GC.win32_new (this, data);", "+\t\t\t\tpaintDC = gc.handle;", "+\t\t\t} else {", "+\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\t\t}", "+\t", "+\t\t\t//TODO - only double buffer the damage", "+//\t\t\tint x = ps.left, y = ps.top;", "+//\t\t\tint width = ps.right - ps.left;", "+//\t\t\tint height = ps.bottom - ps.top;", "+\t\t\tforceResize ();", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\tint x = rect.left, y = rect.top;", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tint height = rect.bottom - rect.top;", "+\t", "+\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\tdrawBackground (hDC, rect);", "+\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\tOS.DeleteObject (hDC);", "+\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t\tgc.dispose ();", "+\t\t\t} else {", "+\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t}", "+\t\t\treturn new LRESULT (code);", "-\t\treturn new LRESULT (code);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af7911cf8a9362ea24b1628f67ffa3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ae389dbe449195e7477ade6fe0e755e5f703e0cd", "commitAfterChange": "8a3f84f19fbbca28960cc423186c3d1a52a1d637", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\tif ((style & SWT.DOUBLE_BUFFERED) != 0) {", "-\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "-\t\tif ((bits & OS.LVS_EX_DOUBLEBUFFER) == 0) {", "-\t\t\tGC gc = null;", "-\t\t\tint paintDC = 0;", "-\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "-\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\tGCData data = new GCData ();", "-\t\t\t\tdata.ps = ps;", "-\t\t\t\tdata.hwnd = handle;", "-\t\t\t\tgc = GC.win32_new (this, data);", "-\t\t\t\tpaintDC = gc.handle;", "-\t\t\t} else {", "-\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\tif ((style & SWT.DOUBLE_BUFFERED) != 0 || findImageControl () != null) {", "+\t\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\t\t\tif ((bits & OS.LVS_EX_DOUBLEBUFFER) == 0) {", "+\t\t\t\tGC gc = null;", "+\t\t\t\tint paintDC = 0;", "+\t\t\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\tGCData data = new GCData ();", "+\t\t\t\t\tdata.ps = ps;", "+\t\t\t\t\tdata.hwnd = handle;", "+\t\t\t\t\tgc = GC.win32_new (this, data);", "+\t\t\t\t\tpaintDC = gc.handle;", "+\t\t\t\t} else {", "+\t\t\t\t\tpaintDC = OS.BeginPaint (handle, ps);", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\t//TODO - only double buffer the damage", "+//\t\t\t\tint x = ps.left, y = ps.top;", "+//\t\t\t\tint width = ps.right - ps.left;", "+//\t\t\t\tint height = ps.bottom - ps.top;", "+\t\t\t\tforceResize ();", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\t\tint x = rect.left, y = rect.top;", "+\t\t\t\tint width = rect.right - rect.left;", "+\t\t\t\tint height = rect.bottom - rect.top;", "+\t\t\t\t", "+\t\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "+\t\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "+\t\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "+\t\t\t\tif (OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "+\t\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\t}", "+\t\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "+\t\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "+\t\t\t\tOS.SelectObject (hDC, hOldBitmap);", "+\t\t\t\tOS.DeleteObject (hBitmap);", "+\t\t\t\tOS.DeleteObject (hDC);", "+\t\t\t\tif (hooks (SWT.Paint)) {", "+\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\tevent.gc = gc;", "+\t\t\t\t\tevent.x = ps.left;", "+\t\t\t\t\tevent.y = ps.top;", "+\t\t\t\t\tevent.width = ps.right - ps.left;", "+\t\t\t\t\tevent.height = ps.bottom - ps.top;", "+\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\t// widget could be disposed at this point", "+\t\t\t\t\tevent.gc = null;", "+\t\t\t\t\tgc.dispose ();", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.EndPaint (handle, ps);", "+\t\t\t\t}", "+\t\t\t\treturn new LRESULT (code);", "-\t\t\t", "-\t\t\t//TODO - only double buffer the damage", "-//\t\t\tint x = ps.left, y = ps.top;", "-//\t\t\tint width = ps.right - ps.left;", "-//\t\t\tint height = ps.bottom - ps.top;", "-\t\t\tforceResize ();", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tOS.GetClientRect (handle, rect);", "-\t\t\tint x = rect.left, y = rect.top;", "-\t\t\tint width = rect.right - rect.left;", "-\t\t\tint height = rect.bottom - rect.top;", "-\t\t\t", "-\t\t\tint hDC = OS.CreateCompatibleDC (paintDC);", "-\t\t\tint hBitmap = OS.CreateCompatibleBitmap (paintDC, width, height);", "-\t\t\tint hOldBitmap = OS.SelectObject (hDC, hBitmap);", "-\t\t\tint code = callWindowProc (handle, OS.WM_PAINT, hDC, 0);", "-\t\t\tOS.BitBlt (paintDC, x, y, width, height, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\tOS.SelectObject (hDC, hOldBitmap);", "-\t\t\tOS.DeleteObject (hBitmap);", "-\t\t\tOS.DeleteObject (hDC);", "-\t\t\tif (hooks (SWT.Paint)) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.gc = gc;", "-\t\t\t\tevent.x = ps.left;", "-\t\t\t\tevent.y = ps.top;", "-\t\t\t\tevent.width = ps.right - ps.left;", "-\t\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\t// widget could be disposed at this point", "-\t\t\t\tevent.gc = null;", "-\t\t\t\tgc.dispose ();", "-\t\t\t} else {", "-\t\t\t\tOS.EndPaint (handle, ps);", "-\t\t\t}", "-\t\t\treturn new LRESULT (code);"]}], "num": 37662}