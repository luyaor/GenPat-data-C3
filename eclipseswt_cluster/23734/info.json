{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86ff0dd6a408dc47c0dddb93c105f569", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c1e83372206e68619ab8d9d77e6000", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "cac6973b2c58ca0acd4675b42eb96193c2a77ffe", "commitAfterChange": "bb6359af4f45e12393d67d626b7c45734cc22977", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "signatureAfterChange": "  \tint queryAccessible2Interfaces(GUID guid, int ppvObject)", "diff": ["-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible2)", "-\t\t\t\t&& (accessibleControlListeners.size() > 0 || accessibleScrollListeners.size() > 0 || accessibleAttributeListeners.size() > 0)) {", "-\t\t\tif (objIAccessible2 == null) createIAccessible2();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible2.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible2)) {", "+\t\t\tif (accessibleActionListeners.size() > 0 || accessibleAttributeListeners.size() > 0 ||", "+\t\t\t\t\taccessibleHyperlinkListeners.size() > 0 || accessibleScrollListeners.size() > 0 ||", "+\t\t\t\t\taccessibleTableListeners.size() > 0 || accessibleTableCellListeners.size() > 0 ||", "+\t\t\t\t\taccessibleTextExtendedListeners.size() > 0 || accessibleValueListeners.size() > 0 || getRelationCount() > 0) {", "+\t\t\t\tif (objIAccessible2 == null) createIAccessible2();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible2.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleAction) && accessibleActionListeners.size() > 0) {", "-\t\t\tif (objIAccessibleAction == null) createIAccessibleAction();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleAction.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleAction)) {", "+\t\t\tif (accessibleActionListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleAction == null) createIAccessibleAction();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleAction.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleComponent) && accessibleControlListeners.size() > 0) {", "-\t\t\tif (objIAccessibleComponent == null) createIAccessibleComponent();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleComponent.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleComponent)) {", "+\t\t\tif (accessibleControlListeners.size() > 0) { // TODO: can we reduce the scope of this somehow?", "+\t\t\t\tif (objIAccessibleComponent == null) createIAccessibleComponent();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleComponent.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\t// The following lines are intentionally commented. We are not providing IAccessibleEditableText at this time.", "-//\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleEditableText) && accessibleEditableTextListeners.size() > 0) {", "-//\t\t\tif (objIAccessibleEditableText == null) createIAccessibleEditableText();", "-//\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleEditableText.getAddress() }, OS.PTR_SIZEOF);", "-//\t\t\tAddRef();", "-//\t\t\treturn COM.S_OK;", "-//\t\t}", "-\t\t", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHyperlink) && accessibleHyperlinkListeners.size() > 0) {", "-\t\t\tif (objIAccessibleHyperlink == null) createIAccessibleHyperlink();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleHyperlink.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleEditableText)) {", "+\t\t\t// The following lines are intentionally commented. We are not supporting IAccessibleEditableText at this time.", "+//\t\t\tif (accessibleEditableTextListeners.size() > 0) {", "+//\t\t\t\tif (objIAccessibleEditableText == null) createIAccessibleEditableText();", "+//\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleEditableText.getAddress() }, OS.PTR_SIZEOF);", "+//\t\t\t\tAddRef();", "+//\t\t\t\treturn COM.S_OK;", "+//\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHypertext) && accessibleTextExtendedListeners.size() > 0) {", "-\t\t\tif (objIAccessibleHypertext == null) createIAccessibleHypertext();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleHypertext.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHyperlink)) {", "+\t\t\tif (accessibleHyperlinkListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleHyperlink == null) createIAccessibleHyperlink();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleHyperlink.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleImage)", "-\t\t\t\t&& (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "-\t\t\tif (objIAccessibleImage == null) createIAccessibleImage();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleImage.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleHypertext)) {", "+\t\t\tif (accessibleTextExtendedListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleHypertext == null) createIAccessibleHypertext();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleHypertext.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable2) && accessibleTableListeners.size() > 0) {", "-\t\t\tif (objIAccessibleTable2 == null) createIAccessibleTable2();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleTable2.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleImage)) {", "+\t\t\tif (getRole() == ACC.ROLE_GRAPHIC && (accessibleListeners.size() > 0 || accessibleControlListeners.size() > 0)) {", "+\t\t\t\tif (objIAccessibleImage == null) createIAccessibleImage();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleImage.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTableCell) && accessibleTableCellListeners.size() > 0) {", "-\t\t\tif (objIAccessibleTableCell == null) createIAccessibleTableCell();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleTableCell.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable)) {", "+\t\t\t// We are not supporting IAccessibleTable at this time.", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleText)", "-\t\t\t\t&& (accessibleTextListeners.size() > 0 || accessibleTextExtendedListeners.size() > 0 || accessibleAttributeListeners.size() > 0)) {", "-\t\t\tif (objIAccessibleText == null) createIAccessibleText();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleText.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTable2)) {", "+\t\t\tif (accessibleTableListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleTable2 == null) createIAccessibleTable2();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleTable2.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleValue) && accessibleValueListeners.size() > 0) {", "-\t\t\tif (objIAccessibleValue == null) createIAccessibleValue();", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleValue.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleTableCell)) {", "+\t\t\tif (accessibleTableCellListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleTableCell == null) createIAccessibleTableCell();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleTableCell.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "+\t\t}", "+\t\t", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleText)) {", "+\t\t\tif (accessibleTextExtendedListeners.size() > 0 || accessibleAttributeListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleText == null) createIAccessibleText();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleText.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "+\t\t}", "+\t\t", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessibleValue)) {", "+\t\t\tif (accessibleValueListeners.size() > 0) {", "+\t\t\t\tif (objIAccessibleValue == null) createIAccessibleValue();", "+\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessibleValue.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tAddRef();", "+\t\t\t\treturn COM.S_OK;", "+\t\t\t}", "+\t\t\treturn COM.E_NOINTERFACE;", "-\t\treturn COM.E_NOINTERFACE;", "+\t\treturn COM.S_FALSE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86be8f24bb5de5918f18f0e0b90105b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common_j2me/org/eclipse/swt/internal/Compatibility.java", "commitBeforeChange": "098af5ec2b198821057039766d74d38644e2ef1e", "commitAfterChange": "9e77789a2687a7be424ce0cfa722d981f9130674", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public static String getMessage(String key)", "signatureAfterChange": "\r public static String getMessage(String key)", "diff": ["-\tString answer = key;\r", "-\t\r", "-\tif (key == null)\r", "-\t\tSWT.error (SWT.ERROR_NULL_ARGUMENT);\t\r", "-\tif (key.equals( \"SWT_Yes\"))\r", "-\t\treturn \"Yes\";\r", "-\tif (key.equals(\"SWT_No\"))\r", "-\t\treturn \"No\";\r", "-\tif (key.equals(\"SWT_OK\")) \r", "-\t\treturn \"OK\";\r", "-\tif (key.equals(\"SWT_Cancel\"))\r", "-\t \treturn \"Cancel\";\r", "-\tif (key.equals(\"SWT_Abort\"))\r", "-\t \treturn \"Abort\";\r", "-\tif (key.equals(\"SWT_Retry\"))\r", "-\t \treturn \"Retry\";\r", "-\tif (key.equals(\"SWT_Ignore\"))\r", "-\t \treturn \"Ignore\";\r", "-\tif (key.equals(\"SWT_Sample\"))\r", "-\t \treturn \"Sample\";\r", "-\tif (key.equals(\"SWT_A_Sample_Text\"))\r", "-\t \treturn \"A Sample Text\";\r", "-\tif (key.equals(\"SWT_Selection\"))\r", "-\t \treturn \"Selection\";\r", "-\tif (key.equals(\"SWT_Current_Selection\"))\r", "-\t \treturn \"Current Selection\";\r", "-\tif (key.equals(\"SWT_Character_set\"))\r", "-\t \treturn \"Character set\";\r", "-\tif (key.equals(\"SWT_Font\"))\r", "-\t \treturn \"Font\";\r", "-\tif (key.equals(\"SWT_Extended_style\"))\r", "-\t \treturn \"Extended style\";\r", "-\tif (key.equals(\"SWT_Size\"))\r", "-\t \treturn \"Size\";\r", "-\tif (key.equals(\"SWT_Style\"))\r", "-\t \treturn \"Style\";\r", "-\t \t\r", "+\tif (key == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);\t\r", "+\tif (key.equals(\"SWT_Yes\")) return \"Yes\";\r", "+\tif (key.equals(\"SWT_No\")) return \"No\";\r", "+\tif (key.equals(\"SWT_OK\")) return \"OK\";\r", "+\tif (key.equals(\"SWT_Cancel\")) return \"Cancel\";\r", "+\tif (key.equals(\"SWT_Abort\")) return \"Abort\";\r", "+\tif (key.equals(\"SWT_Retry\")) return \"Retry\";\r", "+\tif (key.equals(\"SWT_Ignore\")) return \"Ignore\";\r", "+\tif (key.equals(\"SWT_Sample\")) return \"Sample\";\r", "+\tif (key.equals(\"SWT_A_Sample_Text\")) return \"A Sample Text\";\r", "+\tif (key.equals(\"SWT_Selection\")) return \"Selection\";\r", "+\tif (key.equals(\"SWT_Current_Selection\")) return \"Current Selection\";\r", "+\tif (key.equals(\"SWT_Character_set\")) return \"Character set\";\r", "+\tif (key.equals(\"SWT_Font\")) return \"Font\";\r", "+\tif (key.equals(\"SWT_Extended_style\")) return \"Extended style\";\r", "+\tif (key.equals(\"SWT_Size\")) return \"Size\";\r", "+\tif (key.equals(\"SWT_Style\")) return \"Style\";\r", "+\tif (key.equals(\"SWT_Save\")) return \"Save\";\r", "+\tif (key.equals(\"SWT_Character_set\")) return \"Character set\";\r", "+\tif (key.equals(\"SWT_ColorDialog_Title\")) return \"Colors\";\r", "+\tif (key.equals(\"SWT_FontDialog_Title\")) return \"Fonts\";\r", "+\tif (key.equals(\"SWT_Charset_Western\")) return \"western\";\r", "+\tif (key.equals(\"SWT_Charset_EastEuropean\")) return \"east european\";\r", "+\tif (key.equals(\"SWT_Charset_SouthEuropean\")) return \"south european\";\r", "+\tif (key.equals(\"SWT_Charset_NorthEuropean\")) return \"north european\";\r", "+\tif (key.equals(\"SWT_Charset_Cyrillic\")) return \"cyrillic\";\r", "+\tif (key.equals(\"SWT_Charset_Arabic\")) return \"arabic\";\r", "+\tif (key.equals(\"SWT_Charset_Greek\")) return \"greek\";\r", "+\tif (key.equals(\"SWT_Charset_Hebrew\")) return \"hebrew\";\r", "+\tif (key.equals(\"SWT_Charset_Turkish\")) return \"turkish\";\r", "+\tif (key.equals(\"SWT_Charset_Nordic\")) return \"nordic\";\t\t \t\r", "+\tif (key.equals(\"SWT_Charset_Thai\")) return \"thai\";\r", "+\tif (key.equals(\"SWT_Charset_BalticRim\")) return \"baltic rim\";\r", "+\tif (key.equals(\"SWT_Charset_Celtic\")) return \"celtic\";\r", "+\tif (key.equals(\"SWT_Charset_Euro\")) return \"euro\";\r", "+\tif (key.equals(\"SWT_Charset_Romanian\")) return \"romanian\";\r", "+\tif (key.equals(\"SWT_Charset_SimplifiedChinese\")) return \"simplified chinese\";\r", "+\tif (key.equals(\"SWT_Charset_TraditionalChinese\")) return \"traditional chinese\";\r", "+\tif (key.equals(\"SWT_Charset_Japanese\")) return \"japanese\";\r", "+\tif (key.equals(\"SWT_Charset_Korean\")) return \"korean\";\r", "+\tif (key.equals(\"SWT_Charset_Unicode\")) return \"unicode\";\r", "+\tif (key.equals(\"SWT_Charset_ASCII\")) return \"ASCII\";\r", "+\tif (key.equals(\"SWT_InputMethods\")) return \"Input Methods\";\r"]}], "num": 23734}