{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b69816a481394598075b86af8915c5a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca8e7f6506484ef007f173b5c3aa1073", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cairo/org/eclipse/swt/internal/cairo/Cairo.java", "commitBeforeChange": "2651399e384e9c4829133440651b843cd4086a42", "commitAfterChange": "ac97e9de76dcc2aa6055a132a144ae7128e3ee2d", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 275, "signatureBeforeChange": " public static final synchronized native int cairo_xlib_surface_create_for_bitmap (int dpy, int pixmap, int screen, int width, int height);", "signatureAfterChange": " public static final int cairo_xlib_surface_create_for_bitmap(int dpy, int pixmap, int screen, int width, int height)", "diff": ["-public static final synchronized native int /*long*/ cairo_xlib_surface_create (int /*long*/ dpy, int /*long*/ drawable, int /*long*/ visual, int width, int height);", "-public static final synchronized native int /*long*/ cairo_xlib_surface_create_for_bitmap (int /*long*/ dpy, int /*long*/ pixmap, int /*long*/ screen, int width, int height);", "+public static final native int /*long*/ _cairo_xlib_surface_create_for_bitmap(int /*long*/ dpy, int /*long*/ pixmap, int /*long*/ screen, int width, int height);", "+public static final int /*long*/ cairo_xlib_surface_create_for_bitmap(int /*long*/ dpy, int /*long*/ pixmap, int /*long*/ screen, int width, int height) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _cairo_xlib_surface_create_for_bitmap(dpy, pixmap, screen, width, height);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "134e6ced1cc80fb54c5370a14ce56d39", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "50c09de4a56d0cb9a2785e0143f4e09696aa0da3", "commitAfterChange": "4faa718e848bca5a7335031d1c00baad23787159", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 338, "signatureBeforeChange": " public static final synchronized native int g_utf16_to_utf8(char[] str, int len, int[] items_read, int[] items_written, int[] error);", "signatureAfterChange": " public static final int g_utf16_to_utf8(char[] str, int len, int[] items_read, int[] items_written, int[] error)", "diff": ["-public static final synchronized native boolean g_thread_supported();", "-public static final synchronized native int /*long*/ g_utf16_to_utf8(char[] str, int /*long*/ len, int /*long*/[] items_read, int /*long*/[] items_written, int /*long*/[] error);", "+public static final native int /*long*/ _g_utf16_to_utf8(char[] str, int /*long*/ len, int /*long*/[] items_read, int /*long*/[] items_written, int /*long*/[] error);", "+public static final int /*long*/ g_utf16_to_utf8(char[] str, int /*long*/ len, int /*long*/[] items_read, int /*long*/[] items_written, int /*long*/[] error) {", "+\tlock.lock();", "+\ttry {", "+\t\treturn _g_utf16_to_utf8(str, len, items_read, items_written, error);", "+\t} finally {", "+\t\tlock.unlock();", "+\t}", "+}"]}], "num": 38488}