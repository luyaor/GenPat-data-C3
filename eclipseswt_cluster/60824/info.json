{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbd71e7489fa8353e7ef27cc2058e184", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d91ccebf9ef9aeb20b5854bc5ba38f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "55b6066878b69201139e6f04cc001a4b1b229859", "commitAfterChange": "5470df484e0b788f5edfa2564ca191a70d7ee294", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  void updateSystemUIMode ()", "signatureAfterChange": "  void updateSystemUIMode ()", "diff": ["-\t\tOS.SetSystemUIMode (mode, 0);", "+\t\tint uiMode[] = new int[1];", "+\t\tOS.GetSystemUIMode(uiMode, null);", "+\t\tif (uiMode[0] != mode) OS.SetSystemUIMode (mode, 0);", "-\t\tOS.SetSystemUIMode (OS.kUIModeNormal, 0);", "+\t\tint uiMode[] = new int[1];", "+\t\tOS.GetSystemUIMode(uiMode, null);", "+\t\tif (uiMode[0] != OS.kUIModeNormal) OS.SetSystemUIMode (OS.kUIModeNormal, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9fb3d19172c43404db04cf099b9233d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "02071a926437c5043a62d4c014c04a93364c6e23", "commitAfterChange": "304e1d633c64bc4e0e787e704a5454a54c754512", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r void createWidget (int index)", "signatureAfterChange": "\r \r void createWidget (int index)", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Motif.  When the XmNfontList resource is set for\r", "+\t* a widget, Motif creates a copy of the fontList and disposes\r", "+\t* the copy when the widget is disposed.  This means that when\r", "+\t* the programmer queries the font, not only will the handle be\r", "+\t* different but the font will be unexpectedly disposed when\r", "+\t* the widget is disposed.  This can cause GP's when the font\r", "+\t* is set in another widget.  The fix is to cache the font the\r", "+\t* the programmer provides.  The initial value of the cache is\r", "+\t* the default font for the widget.\r", "+\t*/\r", "+\t\r", "+\t/*\r", "+\t* Explicitly set the tab ordering for XmTAB_GROUP widgets to\r", "+\t* override the default traversal.  This is done so that the\r", "+\t* traversal order can be changed after the widget tree is\r", "+\t* created.  Unless explicitly changed, the overridded traversal\r", "+\t* order is the same as the default.\r", "+\t*/\r", "+\tint [] argList1 = new int [] {OS.XmNnavigationType, 0};\r", "+\tOS.XtGetValues (handle, argList1, argList1.length / 2);\r", "+\tif (argList1 [1] == OS.XmTAB_GROUP) {\r", "+\t\tint [] argList2 = new int [] {OS.XmNnavigationType, OS.XmEXCLUSIVE_TAB_GROUP};\r", "+\t\tOS.XtSetValues (handle, argList2, argList2.length / 2);\r", "+\t}\r"]}], "num": 60824}