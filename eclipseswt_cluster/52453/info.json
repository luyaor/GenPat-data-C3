{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f735accbcb30c22e5d7049966baf79b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdfe88266b8dc62d6cad1134d155e67b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "f4abd83d57d77245094f225bf96065fc437b4479", "commitAfterChange": "8ab0cb1a59e576205e88d233b12556089108ede1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["+\t//TODO printing is not working. NSPrintOperation does not fit our API well", "+\t// maybe should core printing directly", "-\t", "-//\tint[] buffer = new int[1];", "-//\tif (OS.PMCreateSession(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\tprintSession = buffer[0];", "-//\tif (printSession == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\t", "-//\tif (data.otherData != null) {", "-//\t\t/* Deserialize settings */", "-//\t\tint offset = 0;", "-//\t\tbyte[] otherData = data.otherData;", "-//\t\toffset = unpackData(buffer, otherData, offset);", "-//\t\tint flatSettings = buffer[0];", "-//\t\toffset = unpackData(buffer, otherData, offset);", "-//\t\tint flatFormat = buffer[0];", "-//\t\tif (OS.PMUnflattenPrintSettings(flatSettings, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tprintSettings = buffer[0];", "-//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tif (OS.PMUnflattenPageFormat(flatFormat, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tpageFormat = buffer[0];", "-//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tOS.DisposeHandle(flatSettings);", "-//\t\tOS.DisposeHandle(flatFormat);", "-//\t} else {", "-//\t\t/* Create default settings */", "-//\t\tif (OS.PMCreatePrintSettings(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tprintSettings = buffer[0];", "-//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tOS.PMSessionDefaultPrintSettings(printSession, printSettings);", "-//\t\tif (OS.PMCreatePageFormat(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tpageFormat = buffer[0];", "-//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-//\t\tOS.PMSessionDefaultPageFormat(printSession, pageFormat);", "-//\t}", "-//\t", "-//\tif (PREVIEW_DRIVER.equals(data.driver)) {", "-//\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "-//\t}", "-//\tString name = data.name;", "-//\tchar[] buffer1 = new char[name.length ()];", "-//\tname.getChars(0, buffer1.length, buffer1, 0);", "-//\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer1, buffer1.length);", "-//\tif (ptr != 0) {", "-//\t\tOS.PMSessionSetCurrentPrinter(printSession, ptr); ", "-//\t\tOS.CFRelease(ptr);", "-//\t}", "-//\t", "-//\tOS.PMSessionValidatePrintSettings(printSession, printSettings, null);", "-//\tOS.PMSessionValidatePageFormat(printSession, pageFormat, null);\t", "-//\t", "-//\tint graphicsContextsArray = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "-//\tif (graphicsContextsArray != 0) {", "-//\t\tOS.CFArrayAppendValue(graphicsContextsArray, OS.kPMGraphicsContextCoreGraphics());", "-//\t\tOS.PMSessionSetDocumentFormatGeneration(printSession, OS.kPMDocumentFormatPDF(), graphicsContextsArray, 0);", "-//\t\tOS.CFRelease(graphicsContextsArray);", "-//\t}", "+\tif (data.otherData != null) {", "+\t\tNSData nsData = NSData.dataWithBytes(data.otherData, data.otherData.length);", "+\t\tprintInfo = new NSPrintInfo(NSKeyedUnarchiver.unarchiveObjectWithData(nsData).id);", "+\t} else {", "+\t\tprintInfo = NSPrintInfo.sharedPrintInfo();", "+\t}", "+\tprintInfo.retain();", "+\tprintInfo.setPrinter(printer);", "+\twindow = (NSWindow)new NSWindow().alloc();", "+\twindow.initWithContentRect_styleMask_backing_defer_(printInfo.imageablePageBounds(), OS.NSBorderlessWindowMask, OS.NSBackingStoreBuffered, false);", "+\tview = (NSView)new NSView().alloc();", "+\tview.initWithFrame(new NSRect());", "+\twindow.setContentView(view);", "+\toperation = NSPrintOperation.static_printOperationWithView_printInfo_(view, printInfo);", "+//\toperation = NSPrintOperation.static_PDFOperationWithView_insideRect_toPath_printInfo_(view, printInfo.imageablePageBounds(), NSString.stringWith(\"/Users/silenioquarti/Desktop/u.pdf\"), printInfo);", "+\toperation.retain();", "+\toperation.setShowsPrintPanel(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f352dcdc22d65a46b413b3ba5e40e47b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "0a50d92817a0ec852579e15a962a04552ba58310", "commitAfterChange": "5f8c70f9663ba812b07371317d526ce083d22a28", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["-\tint[] buffer = new int[1];", "-\tif (OS.PMCreateSession(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tprintSession = buffer[0];", "-\tif (printSession == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t", "-\tif (data.otherData != null) {", "-\t\t/* Deserialize settings */", "-\t\tint offset = 0;", "-\t\tbyte[] otherData = data.otherData;", "-\t\toffset = unpackData(buffer, otherData, offset);", "-\t\tint flatSettings = buffer[0];", "-\t\toffset = unpackData(buffer, otherData, offset);", "-\t\tint flatFormat = buffer[0];", "-\t\tif (OS.PMUnflattenPrintSettings(flatSettings, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tprintSettings = buffer[0];", "-\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tif (OS.PMUnflattenPageFormat(flatFormat, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tpageFormat = buffer[0];", "-\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.DisposeHandle(flatSettings);", "-\t\tOS.DisposeHandle(flatFormat);", "-\t} else {", "-\t\t/* Create default settings */", "-\t\tif (OS.PMCreatePrintSettings(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tprintSettings = buffer[0];", "-\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.PMSessionDefaultPrintSettings(printSession, printSettings);", "-\t\tif (OS.PMCreatePageFormat(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tpageFormat = buffer[0];", "-\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.PMSessionDefaultPageFormat(printSession, pageFormat);", "-\t}", "+\tprinter = NSPrinter.static_printerWithName_(NSString.stringWith(data.name));", "+\tprinter.retain();", "-\tif (PREVIEW_DRIVER.equals(data.driver)) {", "-\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "-\t}", "-\tString name = data.name;", "-\tchar[] buffer1 = new char[name.length ()];", "-\tname.getChars(0, buffer1.length, buffer1, 0);", "-\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer1, buffer1.length);", "-\tif (ptr != 0) {", "-\t\tOS.PMSessionSetCurrentPrinter(printSession, ptr); ", "-\t\tOS.CFRelease(ptr);", "-\t}", "-\t", "-\tOS.PMSessionValidatePrintSettings(printSession, printSettings, null);", "-\tOS.PMSessionValidatePageFormat(printSession, pageFormat, null);\t", "-\t", "-\tint graphicsContextsArray = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "-\tif (graphicsContextsArray != 0) {", "-\t\tOS.CFArrayAppendValue(graphicsContextsArray, OS.kPMGraphicsContextCoreGraphics());", "-\t\tOS.PMSessionSetDocumentFormatGeneration(printSession, OS.kPMDocumentFormatPDF(), graphicsContextsArray, 0);", "-\t\tOS.CFRelease(graphicsContextsArray);", "-\t}", "+//\tint[] buffer = new int[1];", "+//\tif (OS.PMCreateSession(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\tprintSession = buffer[0];", "+//\tif (printSession == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\t", "+//\tif (data.otherData != null) {", "+//\t\t/* Deserialize settings */", "+//\t\tint offset = 0;", "+//\t\tbyte[] otherData = data.otherData;", "+//\t\toffset = unpackData(buffer, otherData, offset);", "+//\t\tint flatSettings = buffer[0];", "+//\t\toffset = unpackData(buffer, otherData, offset);", "+//\t\tint flatFormat = buffer[0];", "+//\t\tif (OS.PMUnflattenPrintSettings(flatSettings, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tprintSettings = buffer[0];", "+//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tif (OS.PMUnflattenPageFormat(flatFormat, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tpageFormat = buffer[0];", "+//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.DisposeHandle(flatSettings);", "+//\t\tOS.DisposeHandle(flatFormat);", "+//\t} else {", "+//\t\t/* Create default settings */", "+//\t\tif (OS.PMCreatePrintSettings(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tprintSettings = buffer[0];", "+//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.PMSessionDefaultPrintSettings(printSession, printSettings);", "+//\t\tif (OS.PMCreatePageFormat(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tpageFormat = buffer[0];", "+//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.PMSessionDefaultPageFormat(printSession, pageFormat);", "+//\t}", "+//\t", "+//\tif (PREVIEW_DRIVER.equals(data.driver)) {", "+//\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "+//\t}", "+//\tString name = data.name;", "+//\tchar[] buffer1 = new char[name.length ()];", "+//\tname.getChars(0, buffer1.length, buffer1, 0);", "+//\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer1, buffer1.length);", "+//\tif (ptr != 0) {", "+//\t\tOS.PMSessionSetCurrentPrinter(printSession, ptr); ", "+//\t\tOS.CFRelease(ptr);", "+//\t}", "+//\t", "+//\tOS.PMSessionValidatePrintSettings(printSession, printSettings, null);", "+//\tOS.PMSessionValidatePageFormat(printSession, pageFormat, null);\t", "+//\t", "+//\tint graphicsContextsArray = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "+//\tif (graphicsContextsArray != 0) {", "+//\t\tOS.CFArrayAppendValue(graphicsContextsArray, OS.kPMGraphicsContextCoreGraphics());", "+//\t\tOS.PMSessionSetDocumentFormatGeneration(printSession, OS.kPMDocumentFormatPDF(), graphicsContextsArray, 0);", "+//\t\tOS.CFRelease(graphicsContextsArray);", "+//\t}"]}], "num": 52453}