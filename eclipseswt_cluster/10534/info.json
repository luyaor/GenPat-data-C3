{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8aeb3aac0265b84579b7df3322103660", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81145f5db3380be2c9553bcdc89d5873", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6b905c3eb76c3c0c8d47ed9e88c64f2954530229", "commitAfterChange": "8b66a88111a5c0bbf49bacf4f87f8d702b5567a8", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["+\t\tif (image != null && image.type == SWT.ICON) {", "+\t\t\tif (image.equals (this.image)) return;", "+\t\t}", "-\tint columnCount = parent.columnCount;", "-\tif (0 <= index && index < columnCount) {", "-\t\tif (images == null) images = new Image [columnCount];", "+\tint count = Math.max (1, parent.columnCount);", "+\tif (0 <= index && index < count) {", "+\t\tif (images == null) images = new Image [count];", "+\t\tif (image != null && image.type == SWT.ICON) {", "+\t\t\tif (image.equals (images [index])) return;", "+\t\t}", "-\tif (parent.ignoreRedraw) return;", "-\tif (parent.drawCount == 0) {", "-\t\tif (index == 0) parent.setScrollWidth (this);", "-\t\tint [] id = new int [] {itemIndex + 1};", "-\t\tOS.UpdateDataBrowserItems (parent.handle, 0, id.length, id, OS.kDataBrowserItemNoProperty, OS.kDataBrowserNoItem);", "-\t}", "+\tif (index == 0) parent.setScrollWidth (this);", "+\tredraw ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ac69c05ba1ca0e5592942ffe307a29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6268623a1aefd83248566a5b16698cb19ee6b719", "commitAfterChange": "8f69618fc3b877d652c7fe2fd695fbdc73e7c8ea", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "  boolean sendTouchEvent (int hWnd, TOUCHINPUT touchInput[])", "signatureAfterChange": "  boolean sendTouchEvent (TOUCHINPUT touchInput [])", "diff": ["-boolean sendTouchEvent (int /*long*/ hWnd, TOUCHINPUT touchInput[]) {", "+boolean sendTouchEvent (TOUCHINPUT touchInput []) {", "-\tPoint cursorLoc = display.getCursorLocation();", "-\tcursorLoc = toControl(cursorLoc);", "-\tevent.x = cursorLoc.x;", "-\tevent.y = cursorLoc.y;", "-\t", "-\tTouch[] touches = new Touch[touchInput.length];", "-", "+\tPOINT pt = new POINT ();", "+\tOS.GetCursorPos (pt);", "+\tOS.ScreenToClient (handle, pt);", "+\tevent.x = pt.x;", "+\tevent.y = pt.y;", "+\tTouch [] touches = new Touch [touchInput.length];", "+\tMonitor monitor = getMonitor ();", "-\t\tTOUCHINPUT touch = touchInput[i];", "-\t\tint identity = touch.dwID;", "-\t\tint /*long*/ source = touch.hSource;", "-\t\tTouchSource inputSource = display.findTouchSource(source, getMonitor());", "+\t\tTOUCHINPUT ti = touchInput [i];", "+\t\tTouchSource inputSource = display.findTouchSource (ti.hSource, monitor);", "-\t\tboolean primary = false;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_DOWN) != 0) state = SWT.TOUCHSTATE_DOWN;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_UP) != 0) state = SWT.TOUCHSTATE_UP;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_MOVE) != 0) state = SWT.TOUCHSTATE_MOVE;", "-\t\tif ((touch.dwFlags & OS.TOUCHEVENTF_PRIMARY) != 0) primary = true;", "-\t\ttouches[i] = new Touch(identity, inputSource, state, primary, (int)OS.TOUCH_COORD_TO_PIXEL(touch.x), (int)OS.TOUCH_COORD_TO_PIXEL(touch.y));", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_DOWN) != 0) state = SWT.TOUCHSTATE_DOWN;", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_UP) != 0) state = SWT.TOUCHSTATE_UP;", "+\t\tif ((ti.dwFlags & OS.TOUCHEVENTF_MOVE) != 0) state = SWT.TOUCHSTATE_MOVE;", "+\t\tboolean primary = (ti.dwFlags & OS.TOUCHEVENTF_PRIMARY) != 0;", "+\t\tint x = (int)OS.TOUCH_COORD_TO_PIXEL (ti.x);", "+\t\tint y = (int)OS.TOUCH_COORD_TO_PIXEL (ti.y);", "+\t\ttouches [i] = new Touch (ti.dwID, inputSource, state, primary, x, y);", "-", "-\treturn event.doit;", "+\treturn true;"]}], "num": 10534}