{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6b50039a14c4b6624625bab34249215", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc913a72a6303544614c2087d2ee176", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b8f9d45a80c733a8f5884af87c95e68f3463aaa7", "commitAfterChange": "e2ae18014fd9c71ab4dc0b52900b77c1d3a0f5b7", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 95, "signatureBeforeChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground, StyledTextBidi bidi)", "signatureAfterChange": "\r void drawStyledLine(String line, int lineOffset, int renderOffset, StyleRange[] styles, int paintX, int paintY, GC gc, Color lineBackground, Color lineForeground, StyledTextBidi bidi)", "diff": ["-\t\t\t\tint fillWidth = textWidth(line, lineOffset, renderOffset, styleLineLength, filteredStyles, paintX, gc, bidi);\r", "+\t\t\t\tint fillWidth = textWidth(line, lineOffset, renderOffset, styleLineLength, filteredStyles, paintX, gc);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a2dbb04009a82de35b48b9bf40ac05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r\rprotected String[] getTypeNames()", "signatureAfterChange": "\r\rprotected String[] getTypeNames()", "diff": ["- */\rpublic Object nativeToJava(TransferData transferData){\r\tif (!isSupportedType(transferData) || transferData.data == null) return null;\r\tif (transferData.data.length == 0) return null;\r\tbyte[] buffer = transferData.data[0];\r\tint encoding = OS.CFStringGetSystemEncoding();\r\tint cfstring = OS.CFStringCreateWithBytes(OS.kCFAllocatorDefault, buffer, buffer.length, encoding, true);\r\tif (cfstring == 0) return null;\r\ttry {\r\t\tint length = OS.CFStringGetLength(cfstring);\r\t\tif (length == 0) return null;\r\t\tchar[] chars = new char[length];\r\t\tCFRange range = new CFRange();\r\t\trange.length = length;\r\t\tOS.CFStringGetCharacters(cfstring, range, chars);\r\t\treturn new String(chars);\r\t} finally {\r\t\tOS.CFRelease(cfstring);\r\t}\r}\r\rprotected int[] getTypeIds(){\r\treturn new int[] {URL_ID, URLN_ID};\r}\r\rprotected String[] getTypeNames(){\r\treturn new String[] {URL, URLN}; \r}\r\rboolean checkURL(Object object) {\r\treturn object != null && (object instanceof String) && ((String)object).length() > 0;\r}\r\rprotected boolean validate(Object object) {\r\treturn checkURL(object);\r}\r}\r", "\\ No newline at end of file", "+ */\rpublic Object nativeToJava(TransferData transferData){\r\tif (!isSupportedType(transferData) || transferData.data == null) return null;\r\tNSURL nsUrl = (NSURL) transferData.data;\r\tNSString nsString = nsUrl.absoluteString();\r\treturn getString(nsString);\r}\r\rprotected int[] getTypeIds(){\r\treturn new int[] {URL_ID};\r}\r\rprotected String[] getTypeNames(){\r\treturn new String[] {URL}; \r}\r\rboolean checkURL(Object object) {\r\treturn object != null && (object instanceof String) && ((String)object).length() > 0;\r}\r\rprotected boolean validate(Object object) {\r\treturn checkURL(object);\r}\r}\r", "\\ No newline at end of file"]}], "num": 57707}