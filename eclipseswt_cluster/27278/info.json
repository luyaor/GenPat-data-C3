{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3780b2b04314fee334b646541914f78", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd35bac557b7add6e51ce87f295daaf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "diff": ["-\tassertEquals(new TableItem[]{items[0]}, table.getSelection());\t", "+\tassertEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[3]}, table.getSelection());\t", "+\tassertEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[1]}, table.getSelection());\t", "+\tassertEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[0]}, table.getSelection());", "+\tassertEquals(new TableItem[]{}, table.getSelection());", "-\tassertEquals(new TableItem[]{items[2]}, table.getSelection());\t", "-", "-\ttable.setSelection(new TableItem[]{items[4], items[4], items[4], items[4], items[4], items[4]});", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertEquals(new TableItem[]{}, table.getSelection());\t", "-\tfor (int i = 0; i < number; i++)", "-\t\titems[i] = new TableItem(table, 0);", "-", "+", "+\ttable.setSelection(new TableItem[]{items[4], items[4], items[4], items[4], items[4], items[4]});", "+\tassertEquals(new TableItem[]{}, table.getSelection());\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf8065a754fee9744755ca23aa06ee7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "61108effd627c72a8074475656abbceb5f48f2f4", "commitAfterChange": "16e83d2acc42341811407b388261b0d0ab5e549b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TreeItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TreeItem()", "diff": ["-\tTreeItem[] selItems = tree.getSelection();", "-\tint selLength = selItems.length;", "-\tif (fCheckMultiSelectTree) {", "-\t\tassertTrue(\":len:\" + String.valueOf(selLength), selLength != itemsToBeSelected.length);", "-\t\tfor (int i = 0; i < selLength; i++)", "-\t\t\tif (selItems[i] == itemsToBeSelected[i])", "-\t\t\t\tfail();", "-\t}", "+\tassertEquals(\":a:\", itemsToBeSelected, tree.getSelection());", "-\tassertEquals(\":b:\", items, tree.getItems());", "+\tassertEquals(\":b:\", items, tree.getSelection());", "-\tif (fCheckMultiSelectTree)", "-\t\tassertEquals(\":c:\", new TreeItem[] {}, tree.getItems());", "+\tassertEquals(\":c:\", new TreeItem[] {}, tree.getSelection());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7124feb42913758f094965e0723001", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "69ca4def95e26b4f7985d8aa70882f0b37698d59", "commitAfterChange": "c7ffe68125d78bc1bb1c15b6e270edf7c3020f35", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TreeItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TreeItem()", "diff": ["-\tassertEquals(\":a:\", new TreeItem[] {}, tree.getSelection());", "+\tassertEquals(new TreeItem[] {}, tree.getSelection());", "+\ttree.setSelection(new TreeItem[]{items[10]});", "+\tassertEquals(new TreeItem[] {items[10]}, tree.getSelection());", "+\t", "+\ttree.setSelection(new TreeItem[]{items[number-1]});", "+\tassertEquals(new TreeItem[] {items[number-1]}, tree.getSelection());", "+\t", "+\ttree.setSelection(new TreeItem[]{items[2]});", "+\tassertEquals(new TreeItem[] {items[2]}, tree.getSelection());", "+\t", "-\tassertEquals(\":b:\", new TreeItem[] {items[10]}, tree.getSelection());", "+\tassertEquals(new TreeItem[] {}, tree.getSelection());", "-\tassertEquals(\":c:\", new TreeItem[] {items[0]}, tree.getSelection());", "+\tassertEquals(new TreeItem[] {}, tree.getSelection());", "-\tassertEquals(\":b:\", new TreeItem[]{items[0]}, tree.getSelection());\t", "+\tassertEquals(\":b:\", new TreeItem[]{}, tree.getSelection());\t", "-\tassertEquals(\":c:\", new TreeItem[]{items[3]}, tree.getSelection());\t", "+\tassertEquals(\":c:\", new TreeItem[]{}, tree.getSelection());\t", "-\tassertEquals(\":d:\", new TreeItem[]{items[1]}, tree.getSelection());\t", "+\tassertEquals(\":d:\", new TreeItem[]{}, tree.getSelection());\t", "-\tassertEquals(\":e:\", new TreeItem[]{items[0]}, tree.getSelection());", "+\tassertEquals(\":e:\", new TreeItem[]{}, tree.getSelection());", "-\tassertEquals(\":f:\", new TreeItem[]{items[2]}, tree.getSelection());\t", "+\tassertEquals(\":f:\", new TreeItem[]{}, tree.getSelection());\t", "-\tassertEquals(\":g:\", new TreeItem[]{items[4]}, tree.getSelection());\t", "+\tassertEquals(\":g:\", new TreeItem[]{}, tree.getSelection());\t", "-", "-\tmakeCleanEnvironment(true); //single-selection tree", "-\t", "-\tnumber = 5;", "-\titems = new TreeItem[number];", "-\tfor (int i = 0; i < number; i++)", "-\t\titems[i] = new TreeItem(tree, 0);"]}], "num": 27278}