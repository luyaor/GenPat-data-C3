{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec5035f7488de991f4680d7134703c9c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f984077e1c76c28debc70911a01de9f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " Point adjustResizeCursor (int xDisplay, int xWindow)", "signatureAfterChange": "  Point adjustResizeCursor (int xDisplay, int xWindow)", "diff": ["-Point adjustResizeCursor (int xDisplay, int xWindow) {", "-\t/* AW", "-\tint newX, newY;", "-\tRectangle bounds = computeBounds ();", "-\tif ((cursorOrientation & SWT.LEFT) != 0) {", "-\t\tnewX = bounds.x;", "-\t} else if ((cursorOrientation & SWT.RIGHT) != 0) {", "-\t\tnewX = bounds.x + bounds.width;", "-\t} else {", "-\t\tnewX = bounds.x + bounds.width / 2;", "-\t}", "-\t", "-\tif ((cursorOrientation & SWT.UP) != 0) {", "-\t\tnewY = bounds.y;", "-\t} else if ((cursorOrientation & SWT.DOWN) != 0) {", "-\t\tnewY = bounds.y + bounds.height;", "-\t} else {", "-\t\tnewY = bounds.y + bounds.height / 2;", "-\t}", "-\t*/", "-\t", "-\tint actualX[] = new int[1];", "-\tint actualY[] = new int[1];", "-\t/* AW", "-\tOS.XWarpPointer (xDisplay, SWT.NONE, xWindow, 0, 0, 0, 0, newX, newY);", "-\t*/", "-\t/*", "-\t * The call to XWarpPointer does not always place the pointer on the", "-\t * exact location that is specified, so do a query (below) to get the", "-\t * actual location of the pointer after it has been moved.", "-\t */", "-\t/* AW", "-\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, actualX, actualY, unused, unused, unused);", "-\t*/", "-\treturn new Point (actualX[0], actualY[0]);", "+Point adjustResizeCursor (int xDisplay, int xWindow) {", "+\treturn new Point (0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca3cc281a0a2dc73df8f26cfcde941a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tracker.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  Point adjustMoveCursor (int xDisplay, int xWindow)", "signatureAfterChange": "  Point adjustMoveCursor (int xDisplay, int xWindow)", "diff": ["-\tint actualX[] = new int[1];", "-\tint actualY[] = new int[1];", "-\t", "-\t/* AW", "-\tRectangle bounds = computeBounds ();", "-\tint newX = bounds.x + bounds.width / 2;", "-\tint newY = bounds.y;", "-\t*/", "-\t", "-\t/* AW", "-\tOS.XWarpPointer (xDisplay, OS.None, xWindow, 0, 0, 0, 0, newX, newY);", "-\t*/", "-\t/*", "-\t * The call to XWarpPointer does not always place the pointer on the", "-\t * exact location that is specified, so do a query (below) to get the", "-\t * actual location of the pointer after it has been moved.", "-\t */", "-\t/* AW", "-\tOS.XQueryPointer (xDisplay, xWindow, unused, unused, actualX, actualY, unused, unused, unused);", "-\t*/", "-\treturn new Point (actualX[0], actualY[0]);", "+\treturn new Point (0, 0);"]}], "num": 49918}