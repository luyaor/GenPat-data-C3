{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bda9f776385d45cf67e480e534d548a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e75f59a966f53b46f016f681aa35222", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 113, "signatureBeforeChange": " void draw(int x, int y, int width, int height, boolean clearBackground)", "signatureAfterChange": " void draw(int x, int y, int width, int height)", "diff": ["-void draw(int x, int y, int width, int height, boolean clearBackground) {", "-\tif (clearBackground) {", "-\t\tredraw(x, y, width, height, true);", "-\t} else {", "-\t\tint startLine = getLineIndex(y);", "-\t\tint endY = y + height;", "-\t\tint paintY = getLinePixel(startLine);", "-\t\tint paintX = getClientArea().x + leftMargin - horizontalScrollOffset;", "-\t\tint lineCount = isSingleLine() ? 1 : content.getLineCount();", "-\t\tGC gc = getGC();", "-\t\tColor background = getBackground();", "-\t\tColor foreground = getForeground();", "-\t\tfor (int i = startLine; paintY < endY && i < lineCount; i++) {", "-\t\t\tString line = content.getLine(i);", "-\t\t\tpaintY += renderer.drawLine(line, i, paintX, paintY, gc, background, foreground, clearBackground);", "-\t\t}", "-\t\tgc.dispose();", "+void draw(int x, int y, int width, int height) {", "+\tCaret caret = getCaret();", "+\tboolean caretVisible = false;", "+\tif (caret != null) {", "+\t\tcaretVisible = caret.getVisible();", "+\t\tcaret.setVisible(false);", "+\t}", "+\tint startLine = getLineIndex(y);", "+\tint endY = y + height;", "+\tint paintY = getLinePixel(startLine);", "+\tint paintX = getClientArea().x + leftMargin - horizontalScrollOffset;", "+\tint lineCount = isSingleLine() ? 1 : content.getLineCount();", "+\tGC gc = new GC(this);", "+\tColor background = getBackground();", "+\tColor foreground = getForeground();", "+\tfor (int i = startLine; paintY < endY && i < lineCount; i++) {", "+\t\tString line = content.getLine(i);", "+\t\tpaintY += renderer.drawLine(line, i, paintX, paintY, 0, gc, background, foreground, false);", "+\t}", "+\tgc.dispose();", "+\tif (caret != null) {", "+\t\tcaret.setVisible(caretVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c886f8413a319d00cbbddc94c26651", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "aa93674761d896e34c7f50d13888b0b9aa441fb8", "commitAfterChange": "e447a9523d07551d4377952bb344bc3db97c3617", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 201, "signatureBeforeChange": "\r void handlePaint(Event event)", "signatureAfterChange": "\r void handlePaint(Event event)", "diff": ["-\tint startLine = (event.y + verticalScrollOffset) / lineHeight;\r", "+\tint startLine = (event.y - topMargin + verticalScrollOffset) / lineHeight;\r", "-\tlineBuffer = new Image(getDisplay(), clientArea.width, renderHeight);\r", "-\tlineGC = new GC(lineBuffer);\t\r", "-\tlineGC.setFont(font);\r", "-\tlineGC.setForeground(foreground);\r", "-\tlineGC.setBackground(background);\r", "-\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "-\t\tString line = content.getLine(i);\r", "-\t\tdrawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "-\t}\r", "-\tif (paintY < renderHeight) {\r", "+\tif (clientArea.width > (leftMargin + rightMargin)) {\r", "+\t\tlineBuffer = new Image(getDisplay(), clientArea.width - leftMargin - rightMargin, renderHeight);\r", "+\t\tlineGC = new GC(lineBuffer);\t\r", "+\t\tlineGC.setFont(font);\r", "+\t\tlineGC.setForeground(foreground);\r", "-\t\tlineGC.setForeground(background);\r", "-\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "+\t\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "+\t\t\tString line = content.getLine(i);\r", "+\t\t\tdrawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "+\t\t}\r", "+\t\tif (paintY < renderHeight) {\r", "+\t\t\tlineGC.setBackground(background);\r", "+\t\t\tlineGC.setForeground(background);\r", "+\t\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "+\t\t}\r", "+\t\tevent.gc.drawImage(lineBuffer, leftMargin, topMargin + startY);\r", "+\t\tlineGC.dispose();\r", "+\t\tlineBuffer.dispose();\r", "-\tevent.gc.drawImage(lineBuffer, 0, startY);\r", "-\tlineGC.dispose();\r", "-\tlineBuffer.dispose();\r", "+\t// clear the margin background\r", "+\tevent.gc.setBackground(background);\r", "+\tevent.gc.fillRectangle(0, 0, clientArea.width, topMargin);\r", "+\tevent.gc.fillRectangle(0, 0, leftMargin, renderHeight);\t\r", "+\tevent.gc.fillRectangle(\r", "+\t\t0, clientArea.height - bottomMargin, \r", "+\t\tclientArea.width, bottomMargin);\r", "+\tevent.gc.fillRectangle(\r", "+\t\tclientArea.width - rightMargin, 0, \r", "+\t\trightMargin, renderHeight);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2f8ea461f0a05362628f6cfad43848", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ec7edbaede68f4fd7608786e759e23fd6dbe2200", "commitAfterChange": "b206c3d5f3a448a2b6dfbc2c13ed7e271cef1597", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 207, "signatureBeforeChange": "\r void handlePaint(Event event)", "signatureAfterChange": "\r void handlePaint(Event event)", "diff": ["-\tint startLine = (event.y - topMargin + verticalScrollOffset) / lineHeight;\r", "+\tint startLine = Math.max(0, (event.y - topMargin + verticalScrollOffset) / lineHeight);\r", "-\tint paintY = 0;\r", "+\tint paintY = topMargin;\r", "-\tif (clientArea.width > (leftMargin + rightMargin)) {\r", "-\t\tlineBuffer = new Image(getDisplay(), clientArea.width - leftMargin - rightMargin, renderHeight);\r", "-\t\tlineGC = new GC(lineBuffer);\t\r", "-\t\tlineGC.setFont(font);\r", "-\t\tlineGC.setForeground(foreground);\r", "-\t\tlineGC.setBackground(background);\r", "-\t\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "-\t\t\tString line = content.getLine(i);\r", "-\t\t\tdrawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "-\t\t}\r", "-\t\tif (paintY < renderHeight) {\r", "-\t\t\tlineGC.setBackground(background);\r", "-\t\t\tlineGC.setForeground(background);\r", "-\t\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "-\t\t}\r", "-\t\tevent.gc.drawImage(lineBuffer, leftMargin, topMargin + startY);\r", "-\t\tlineGC.dispose();\r", "-\t\tlineBuffer.dispose();\r", "+\tlineBuffer = new Image(getDisplay(), clientArea.width, renderHeight);\r", "+\tlineGC = new GC(lineBuffer);\t\r", "+\tlineGC.setFont(font);\r", "+\tlineGC.setForeground(foreground);\r", "+\tlineGC.setBackground(background);\r", "+\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "+\t\tString line = content.getLine(i);\r", "+\t\trenderer.drawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "+\tif (paintY < renderHeight) {\r", "+\t\tlineGC.setBackground(background);\r", "+\t\tlineGC.setForeground(background);\r", "+\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "+\t}\r", "+\tevent.gc.drawImage(lineBuffer, 0, startY);\r", "+\tlineGC.dispose();\r", "+\tlineBuffer.dispose();\r"]}], "num": 44973}