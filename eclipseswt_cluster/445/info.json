{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82e23fbdcdf9d7afba678a06a8c97289", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca453e368bf2923a5b591353dbbdaab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "90e10f87a7ae7a37da940bfc1c89a9d79a9fc04b", "commitAfterChange": "88eab8280b310a9da6d10aff37b2d05bdc27fc4f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void setIMEFont (int hFont)", "signatureAfterChange": "  void setIMEFont ()", "diff": ["-void setIMEFont (int hFont) {", "+void setIMEFont () {", "+\tint hFont = 0;", "+\tif (font != null) hFont = font.handle;", "+\tif (hFont == 0) hFont = defaultFont ();", "+\tint hwnd = parent.handle;", "+\tint hIMC = OS.ImmGetContext (hwnd);", "+\t/* Save the current IME font */", "+\tif (oldFont == null) {", "+\t\toldFont = OS.IsUnicode ? (LOGFONT) new LOGFONTW () : new LOGFONTA ();", "+\t\tif (!OS.ImmGetCompositionFont (hIMC, oldFont)) oldFont = null;", "+\t}", "+\t/* Set new IME font */", "-\t\tint hwnd = parent.handle;", "-\t\tint hIMC = OS.ImmGetContext (hwnd);", "-\t\tOS.ImmReleaseContext (hwnd, hIMC);", "+\tOS.ImmReleaseContext (hwnd, hIMC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe86fca7156c2c8946fb55de35bb0fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "87409dd82190b37fa754f5e929cac3f245e2f344", "commitAfterChange": "94be4e401a3fb2f42f015e966ff3c20eef54b12e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KILLFOCUS (int wParam, int lParam)", "diff": ["-", "-LRESULT WM_KILLFOCUS (int /*long*/ wParam, int /*long*/ lParam) {", "-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ hwnd = parent.handle;", "-\t\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "-\t\tif (hIMC != 0) {", "-\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "-\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "+", "+LRESULT WM_KILLFOCUS (int /*long*/ wParam, int /*long*/ lParam) {", "+\tif (!isInlineEnabled ()) return null;", "+\tint /*long*/ hwnd = parent.handle;", "+\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "+\tif (hIMC != 0) {", "+\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "+\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "+\t\t}", "+\t\tOS.ImmReleaseContext (hwnd, hIMC);"]}], "num": 445}