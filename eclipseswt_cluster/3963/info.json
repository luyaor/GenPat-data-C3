{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29a70be52c3d60babe25399ae0b59657", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7469fd46f0dcd69db6b0bf8133dae19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/carbon/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "bf949f04bde263da1b4dc67d7257d61d6f5c55e6", "commitAfterChange": "a004a75ac1a6b3f1e6b7e042c19df1a70333b3fd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\t\t\t\t\t\tString name = Printer.getCurrentPrinterName(printSession);", "-\t\t\t\t\t\tPrinterData data = new PrinterData(Printer.DRIVER, name);", "-\t\t\t\t\t\tif (destType [0] == OS.kPMDestinationFile) {", "+\t\t\t\t\t\tString name = Printer.getCurrentPrinterName(printSession);", "+\t\t\t\t\t\tString driver = Printer.DRIVER;", "+\t\t\t\t\t\tswitch (destType[0]) {", "+\t\t\t\t\t\t\tcase OS.kPMDestinationFax: driver = Printer.FAX_DRIVER; break;", "+\t\t\t\t\t\t\tcase OS.kPMDestinationFile: driver = Printer.FILE_DRIVER; break;", "+\t\t\t\t\t\t\tcase OS.kPMDestinationPreview: driver = Printer.PREVIEW_DRIVER; break;", "+\t\t\t\t\t\t\tcase OS.kPMDestinationPrinter: driver = Printer.PRINTER_DRIVER; break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tPrinterData data = new PrinterData(driver, name);", "+\t\t\t\t\t\tif (destType[0] == OS.kPMDestinationFile) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75e889765fd5a944b90305a5225bae7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "8c26d9a9eefdd82a00e12564061ed2f6a7f4ee19", "commitAfterChange": "dabb371250244a42d0a102e16d31217d0a0ef72f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r void fillAccel (ACCEL accel)", "signatureAfterChange": "\r \r void fillAccel (ACCEL accel)", "diff": ["+\tint fVirt = OS.FVIRTKEY;\r", "-\tint newKey = Display.untranslateKey (key);\r", "-\tif (newKey != 0) {\r", "-\t\tkey = newKey;\r", "+\tint vKey = Display.untranslateKey (key);\r", "+\tif (vKey != 0) {\r", "+\t\tkey = vKey;\t\r", "-\t\tif (key == 0x7F) {\r", "-\t\t\tkey = OS.VK_DELETE;\r", "-\t\t} else {\r", "-\t\t\tshort ch = (short) wcsToMbcs ((char) key);\r", "-\t\t\tkey = OS.CharUpper (ch);\r", "+\t\tswitch (key) {\r", "+\t\t\t/*\r", "+\t\t\t* Bug in Windows.  For some reason, VkKeyScan\r", "+\t\t\t* fails to map ESC to VK_ESCAPE and DEL to\r", "+\t\t\t* VK_DELETE.  The fix is to map these keys\r", "+\t\t\t* as a special case.\r", "+\t\t\t*/\r", "+\t\t\tcase 27: key = OS.VK_ESCAPE; break;\r", "+\t\t\tcase 127: key = OS.VK_DELETE; break;\r", "+\t\t\tdefault: {\r", "+\t\t\t\tkey = wcsToMbcs ((char) key);\r", "+\t\t\t\tif (key == 0) return;\r", "+\t\t\t\tif (OS.IsWinCE) {\r", "+\t\t\t\t\tkey = OS.CharUpper ((short) key);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tvKey = OS.VkKeyScan ((short) key) & 0xFF;\r", "+\t\t\t\t\tif (vKey == -1) {\r", "+\t\t\t\t\t\tfVirt = 0;\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tkey = vKey;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "-\taccel.fVirt = (byte) OS.FVIRTKEY;\r", "+\taccel.fVirt = (byte) fVirt;\r"]}], "num": 3963}