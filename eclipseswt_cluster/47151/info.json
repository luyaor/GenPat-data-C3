{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0eccf045c95ef7741514e8ffd733278c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb9db4c0d992067c1088426f83fddbe8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData[] getFontData()", "signatureAfterChange": " public FontData[] getFontData()", "diff": ["-\treturn new FontData[] { new FontData(handle.getName(), handle.getSize(), handle.getFace()) };", "-}", "+\tbyte[] buffer = new byte[256];", "+\tOS.FMGetFontFamilyName(id, buffer);", "+\tint length = buffer[0] & 0xFF;", "+\tchar[] chars = new char[length];", "+\tfor (int i=0; i<length; i++) {", "+\t\tchars[i]= (char)buffer[i+1];", "+\t}", "+\tString name = new String(chars);", "+\tint style = SWT.NORMAL;", "+\tif ((this.style & OS.italic) != 0) style |= SWT.ITALIC;", "+\tif ((this.style & OS.bold) != 0) style |= SWT.BOLD;", "+\tFontData data = new FontData(name, size, style);", "+\treturn new FontData[]{data};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33613ba1693eba664f3fa1947c49ee7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "3b0ac113d2b0be33221673aa6f3ada5f0d0911c0", "commitAfterChange": "48737b3c2cf609849ea87ebdfeb38e228af5b142", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public int getSelectionIndex ()", "signatureAfterChange": " public int getSelectionIndex ()", "diff": ["-\tdisplay.treeSelectionLength  = 0;", "-\tdisplay.treeSelection = new int [itemCount];", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 2, 0)) {", "+\t\tdisplay.treeSelectionLength  = 0;", "+\t\tdisplay.treeSelection = new int [itemCount];", "+\t\tint /*long*/ selection = OS.gtk_tree_view_get_selection (handle);", "+\t\tOS.gtk_tree_selection_selected_foreach (selection, display.treeSelectionProc, handle);", "+\t\tif (display.treeSelectionLength == 0) return -1;", "+\t\treturn display.treeSelection [0];", "+\t}", "-\tOS.gtk_tree_selection_selected_foreach (selection, display.treeSelectionProc, handle);", "-\tif (display.treeSelectionLength == 0) return -1;", "-\treturn display.treeSelection [0];", "+\tint /*long*/ list = OS.gtk_tree_selection_get_selected_rows (selection, null);", "+\tif (list != 0) {", "+\t\tint count = OS.g_list_length (list);", "+\t\tint [] index = new int [1];", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tint /*long*/ data = OS.g_list_nth_data (list, i);", "+\t\t\tint /*long*/ indices = OS.gtk_tree_path_get_indices (data);", "+\t\t\tif (indices != 0) {", "+\t\t\t\tOS.memmove (index, indices, 4);", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tOS.g_list_free (list);", "+\t\treturn index [0];", "+\t}", "+\treturn -1;"]}], "num": 47151}