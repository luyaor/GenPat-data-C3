{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd6f78a75e9b0021255cb898f0ce7baf", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef649f691410b6539021c17017f9c34", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "9b2e75bad029158cb5a5c36103892d9c96132a6c", "commitAfterChange": "4347318ee55544599f9aa1e141bed166353844a3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "signatureAfterChange": " public void setValues (int selection, int minimum, int maximum, int thumb, int increment, int pageIncrement)", "diff": ["-\tOS.SetScrollInfo (hwnd, type, info, true);", "-\t\t", "-\t/*", "-\t* Bug in Windows.  For some reason, when the widget", "-\t* is a standard scroll bar, and SetScrollInfo () is", "-\t* called with SIF_RANGE or SIF_PAGE, the widget is", "-\t* incorrectly made visible so that the next time the", "-\t* widget is resized (or another scroll bar operation", "-\t* is performed), the scroll bar draws.  The fix is", "-\t* to hide the scroll bar (again) when already hidden.", "-\t*/", "-\tif ((state & HIDDEN) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.ShowScrollBar (hwnd, type, false);", "-\t\t}", "-\t}", "-\t\t", "-\t/*", "-\t* Feature in Windows.  Using SIF_DISABLENOSCROLL,", "-\t* SetScrollInfo () can change enabled and disabled", "-\t* state of the scroll bar causing a scroll bar that", "-\t* was disabled by the application to become enabled.", "-\t* The fix is to disable the scroll bar (again) when", "-\t* the application has disabled the scroll bar.", "-\t*/", "-\tif ((state & DISABLED) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_DISABLE_BOTH);", "-\t\t}", "-\t}", "+\tSetScrollInfo (hwnd, type, info, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32c135f08ab327e9f6998b436cbd4fe7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "9b2e75bad029158cb5a5c36103892d9c96132a6c", "commitAfterChange": "4347318ee55544599f9aa1e141bed166353844a3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setThumb (int value)", "signatureAfterChange": " public void setThumb (int value)", "diff": ["-", "-\t/* Position the thumb */", "-\tOS.SetScrollInfo (hwnd, type, info, true);", "-\t", "-\t/*", "-\t* Bug in Windows.  For some reason, when the widget", "-\t* is a standard scroll bar, and SetScrollInfo () is", "-\t* called with SIF_RANGE or SIF_PAGE, the widget is", "-\t* incorrectly made visible so that the next time the", "-\t* widget is resized (or another scroll bar operation", "-\t* is performed), the scroll bar draws.  The fix is", "-\t* to hide the scroll bar (again) when already hidden.", "-\t*/", "-\tif ((state & HIDDEN) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.ShowScrollBar (hwnd, type, false);", "-\t\t}", "-\t}", "-\t\t", "-\t/*", "-\t* Feature in Windows.  Using SIF_DISABLENOSCROLL,", "-\t* SetScrollInfo () can change enabled and disabled", "-\t* state of the scroll bar causing a scroll bar that", "-\t* was disabled by the application to become enabled.", "-\t* The fix is to disable the scroll bar (again) when", "-\t* the application has disabled the scroll bar.", "-\t*/", "-\tif ((state & DISABLED) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_DISABLE_BOTH);", "-\t\t}", "-\t}", "+\tSetScrollInfo (hwnd, type, info, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88a1da9f30c6263887971c2a8f2cc2cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "9b2e75bad029158cb5a5c36103892d9c96132a6c", "commitAfterChange": "4347318ee55544599f9aa1e141bed166353844a3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void setMinimum (int value)", "signatureAfterChange": " public void setMinimum (int value)", "diff": ["-\tOS.SetScrollInfo (hwnd, type, info, true);", "-\t", "-\t/*", "-\t* Bug in Windows.  For some reason, when the widget", "-\t* is a standard scroll bar, and SetScrollInfo () is", "-\t* called with SIF_RANGE or SIF_PAGE, the widget is", "-\t* incorrectly made visible so that the next time the", "-\t* widget is resized (or another scroll bar operation", "-\t* is performed), the scroll bar draws.  The fix is", "-\t* to hide the scroll bar (again) when already hidden.", "-\t*/", "-\tif ((state & HIDDEN) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.ShowScrollBar (hwnd, type, false);", "-\t\t}", "-\t}", "-\t\t", "-\t/*", "-\t* Feature in Windows.  Using SIF_DISABLENOSCROLL,", "-\t* SetScrollInfo () can change enabled and disabled", "-\t* state of the scroll bar causing a scroll bar that", "-\t* was disabled by the application to become enabled.", "-\t* The fix is to disable the scroll bar (again) when", "-\t* the application has disabled the scroll bar.", "-\t*/", "-\tif ((state & DISABLED) != 0) {", "-\t\t/*", "-\t\t* This line is intentionally commented.  Currently", "-\t\t* always show scrollbar as being enabled and visible.", "-\t\t*/", "-//\t\tif (OS.IsWinCE) error (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\tif (!OS.IsWinCE) {", "-\t\t\tOS.EnableScrollBar (hwnd, type, OS.ESB_DISABLE_BOTH);", "-\t\t}", "-\t}", "+\tSetScrollInfo (hwnd, type, info, true);"]}], "num": 60481}