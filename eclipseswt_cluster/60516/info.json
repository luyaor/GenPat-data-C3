{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf1656039942e4804672bc892da009ff", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7d0cd831e9727d36e897598399d4c4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bd64112265c2a125577ef5db8ecfbdb762c0aeab", "commitAfterChange": "9b08189f8ee7e189cc76f5fea12f3ad05eb7e51b", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void setLineAttributes(LineAttributes attributes)", "signatureAfterChange": " public void setLineAttributes(LineAttributes attributes)", "diff": ["-\t//TODO", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tif (attributes == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\tint mask = 0;", "+\tfloat lineWidth = attributes.width;", "+\tif (lineWidth != data.lineWidth) {", "+\t\tmask |= LINE_WIDTH;", "+\t}", "+\tint lineStyle = attributes.style;", "+\tif (lineStyle != data.lineStyle) {", "+\t\tmask |= LINE_STYLE;", "+\t\tswitch (lineStyle) {", "+\t\t\tcase SWT.LINE_SOLID:", "+\t\t\tcase SWT.LINE_DASH:", "+\t\t\tcase SWT.LINE_DOT:", "+\t\t\tcase SWT.LINE_DASHDOT:", "+\t\t\tcase SWT.LINE_DASHDOTDOT:", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.LINE_CUSTOM:", "+\t\t\t\tif (attributes.dash == null) lineStyle = SWT.LINE_SOLID;", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tint join = attributes.join;", "+\tif (join != data.lineJoin) {", "+\t\tmask |= LINE_JOIN;", "+\t\tswitch (join) {", "+\t\t\tcase SWT.CAP_ROUND:", "+\t\t\tcase SWT.CAP_FLAT:", "+\t\t\tcase SWT.CAP_SQUARE:", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tint cap = attributes.join;", "+\tif (cap != data.lineCap) {", "+\t\tmask |= LINE_CAP;", "+\t\tswitch (cap) {", "+\t\t\tcase SWT.JOIN_MITER:", "+\t\t\tcase SWT.JOIN_ROUND:", "+\t\t\tcase SWT.JOIN_BEVEL:", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t}", "+\t}", "+\tfloat[] dashes = attributes.dash;", "+\tfloat[] lineDashes = data.lineDashes;", "+\tif (dashes != null && dashes.length > 0) {", "+\t\tboolean changed = lineDashes == null || lineDashes.length != dashes.length;", "+\t\tfor (int i = 0; i < dashes.length; i++) {", "+\t\t\tfloat dash = dashes[i];", "+\t\t\tif (dash <= 0) SWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (!changed && lineDashes[i] != dash) changed = true;", "+\t\t}", "+\t\tif (changed) {", "+\t\t\tfloat[] newDashes = new float[dashes.length];", "+\t\t\tSystem.arraycopy(dashes, 0, newDashes, 0, dashes.length);", "+\t\t\tdashes = newDashes;", "+\t\t\tmask |= LINE_STYLE;", "+\t\t} else {", "+\t\t\tdashes = lineDashes;", "+\t\t}", "+\t} else {", "+\t\tif (lineDashes != null && lineDashes.length > 0) {", "+\t\t\tmask |= LINE_STYLE;", "+\t\t} else {", "+\t\t\tdashes = lineDashes;", "+\t\t}", "+\t}", "+\tfloat dashOffset = attributes.dashOffset;", "+\tif (dashOffset != data.lineDashesOffset) {", "+\t\tmask |= LINE_STYLE;", "+\t}", "+\tfloat miterLimit = attributes.miterLimit;", "+\tif (miterLimit != data.lineMiterLimit) {", "+\t\tmask |= LINE_MITERLIMIT;", "+\t}", "+\tif (mask == 0) return;", "+\tdata.lineWidth = lineWidth;", "+\tdata.lineStyle = lineStyle;", "+\tdata.lineCap = cap;", "+\tdata.lineJoin = join;", "+\tdata.lineDashes = dashes;", "+\tdata.lineDashesOffset = dashOffset;", "+\tdata.lineMiterLimit = miterLimit;", "+\tdata.state &= ~mask;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "780a0c19829767935a277201214a4651", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "839e7aae626325bcc120e28136132e007b50784e", "commitAfterChange": "d77e1468652c0bf6dd5b34c4530c6c4a4033fb64", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\tint hImage = 0, imageBits = 0, fImageType = 0;", "-\tif (image != null) {", "-\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\thImage = image.handle;", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP:", "-\t\t\t\timageBits = OS.BS_BITMAP;", "-\t\t\t\tfImageType = OS.IMAGE_BITMAP;", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.ICON:", "-\t\t\t\timageBits = OS.BS_ICON;", "-\t\t\t\tfImageType = OS.IMAGE_ICON;", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\treturn;", "-\t\t}", "-\t}", "-\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tint oldBits = newBits;", "-\tnewBits &= ~(OS.BS_BITMAP | OS.BS_ICON);", "-\tnewBits |= imageBits;", "-\tif (newBits != oldBits) {", "-\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\tOS.SendMessage (handle, OS.BCM_SETIMAGELIST, 0, 0);", "+\t\tif (imageList != null) imageList.dispose ();", "+\t\timageList = null;", "+\t\tif (image != null) {", "+\t\t\timageList = new ImageList ();", "+\t\t\timageList.add (image);", "+\t\t\tBUTTON_IMAGELIST buttonImageList = new BUTTON_IMAGELIST ();", "+\t\t\tbuttonImageList.himl = imageList.getHandle ();", "+\t\t\tif ((style & SWT.LEFT) != 0) buttonImageList.uAlign = OS.BUTTON_IMAGELIST_ALIGN_LEFT;", "+\t\t\tif ((style & SWT.CENTER) != 0) buttonImageList.uAlign = OS.BUTTON_IMAGELIST_ALIGN_CENTER;", "+\t\t\tif ((style & SWT.RIGHT) != 0) buttonImageList.uAlign = OS.BUTTON_IMAGELIST_ALIGN_RIGHT;", "+\t\t\tTCHAR buffer = new TCHAR (getCodePage (), \"\", true);", "+\t\t\tOS.SetWindowText (handle, buffer);", "+\t\t\tOS.SendMessage (handle, OS.BCM_SETIMAGELIST, 0, buttonImageList);", "+\t\t} else {", "+\t\t\tTCHAR buffer = new TCHAR (getCodePage (), text, true);", "+\t\t\tOS.SetWindowText (handle, buffer);", "+\t\t\tOS.SendMessage (handle, OS.BCM_SETIMAGELIST, 0, 0);", "+\t\t}", "+\t} else {", "+\t\tint hImage = 0, imageBits = 0, fImageType = 0;", "+\t\tif (image != null) {", "+\t\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\thImage = image.handle;", "+\t\t\tswitch (image.type) {", "+\t\t\t\tcase SWT.BITMAP:", "+\t\t\t\t\timageBits = OS.BS_BITMAP;", "+\t\t\t\t\tfImageType = OS.IMAGE_BITMAP;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SWT.ICON:", "+\t\t\t\t\timageBits = OS.BS_ICON;", "+\t\t\t\t\tfImageType = OS.IMAGE_ICON;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t}", "+\t\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tint oldBits = newBits;", "+\t\tnewBits &= ~(OS.BS_BITMAP | OS.BS_ICON);", "+\t\tnewBits |= imageBits;", "+\t\tif (newBits != oldBits) OS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "+\t\tOS.SendMessage (handle, OS.BM_SETIMAGE, fImageType, hImage);", "-\tOS.SendMessage (handle, OS.BM_SETIMAGE, fImageType, hImage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb277e3277ea0ca6fee79699736ffdb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "039da5b6cb01deacaa42e0c472d7c59171188a10", "commitAfterChange": "999cd70b792d3ba6318eaa17a83f0d788d0c9764", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\tint hImage = 0, imageBits = 0, fImageType = 0;", "-\tif (image != null) {", "-\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP: {", "-\t\t\t\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\t\t\t\thImage = image.handle;", "-\t\t\t\t} else {", "-\t\t\t\t\tImageData data = image.getImageData ();", "-\t\t\t\t\tif (data.alpha != -1 || data.alphaData != null || data.transparentPixel != -1) {", "-\t\t\t\t\t\thImage = createAlphaFromMask (image.handle, data.alpha, data.alphaData, data.transparentPixel);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\thImage = image.handle;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\timageBits = OS.SS_BITMAP;", "-\t\t\t\tfImageType = OS.IMAGE_BITMAP;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tcase SWT.ICON: {", "-\t\t\t\thImage = image.handle;", "-\t\t\t\timageBits = OS.SS_ICON;", "-\t\t\t\tfImageType = OS.IMAGE_ICON;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tdefault:", "-\t\t\t\treturn;", "-\t\t}", "-\t}", "-\tthis.image = image;", "-\tRECT rect = new RECT ();", "-\tOS.GetWindowRect (handle, rect);", "-\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-\tint oldBits = newBits;", "-\tnewBits &= ~(OS.SS_BITMAP | OS.SS_ICON);", "-\tnewBits |= imageBits | OS.SS_REALSIZEIMAGE | OS.SS_CENTERIMAGE;", "-\tif (newBits != oldBits) {", "-\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "-\t}", "-\tOS.SendMessage (handle, OS.STM_SETIMAGE, fImageType, hImage);", "-\t", "-\t/*", "-\t* When STM_SETIMAGE encounters a bitmap with alpha information,", "-\t* it takes a copy of the bitmap.  Therefore the bitmap that was", "-\t* created to preserve transparency can be deleted right away.", "-\t*/", "-\tif (image != null && image.handle != hImage) {", "-\t\tOS.DeleteObject (hImage);\t", "-\t}", "-", "-\t/*", "-\t* Feature in Windows.  When STM_SETIMAGE is used to set the", "-\t* image for a static control, Windows either streches the image", "-\t* to fit the control or shrinks the control to fit the image.", "-\t* While not stricly wrong, neither of these is desirable.", "-\t* The fix is to stop Windows from stretching the image by", "-\t* using SS_REALSIZEIMAGE and SS_CENTERIMAGE, allow Windows", "-\t* to shrink the control, and then restore the control to the", "-\t* original size.", "-\t*/", "-\tint flags = OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE | OS.SWP_NOMOVE;", "-\tSetWindowPos (handle, 0, 0, 0, rect.right - rect.left, rect.bottom - rect.top, flags);", "-\tOS.InvalidateRect (handle, null, true);", "+\tif (image != null && image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\t_setImage (this.image = image);"]}], "num": 60516}