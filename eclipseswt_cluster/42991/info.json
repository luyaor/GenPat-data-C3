{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8095799463fd35a3cf37a96fa463890", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc6246231a4963825d34c32805cf6765", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "21ad7e1c41ce1d63dd243622044164fd46b26ef4", "commitAfterChange": "1c5467f79f5b1c73782459594b2f72f13320a777", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 79, "signatureBeforeChange": "  boolean setScrollWidth (TableItem [] items, boolean set)", "signatureAfterChange": "  boolean setScrollWidth (TableItem items[], boolean callMeasureItem)", "diff": ["+", "+boolean setScrollWidth (TableItem items[], boolean callMeasureItem) {", "-", "-boolean setScrollWidth (TableItem [] items, boolean set) {", "-\tif (columnCount != 0) return false;", "-\tif (currentItem != null) {", "-//\t\tfixScrollWidth = true;", "-\t\treturn false;", "-\t}", "-\tif (drawCount != 0) return false;", "-\tGC gc = new GC (this);", "+\tif (/*ignoreRedraw ||*/ drawCount != 0) return false;", "+\tGC gc = new GC (this);", "-\t\tTableItem item = items [i];", "+\t\tTableItem item = items[i];", "-\t\t\tnewWidth = Math.max (newWidth, item.calculateWidth (0, gc, true));", "+\t\t\tnewWidth = Math.max (newWidth, item.calculateWidth (0, gc, callMeasureItem));", "-\t\t\tif (gc.isDisposed ()) gc = new GC (this);", "-//\tif (!set) {", "-//\t\tshort [] width = new short [1];", "-//\t\tOS.GetDataBrowserTableViewNamedColumnWidth (handle, column_id, width);", "-//\t\tif (width [0] >= newWidth) return false;", "-//\t}", "-//\tOS.SetDataBrowserTableViewNamedColumnWidth (handle, column_id, (short) newWidth);", "-\tif (!set) {", "-\t\tif (firstColumn.width() > newWidth) return false;", "+\tif (firstColumn.width () < newWidth) {", "+\t\tNSTableView tableView = (NSTableView)view;", "+\t\tint /*long*/ oldResize = tableView.columnAutoresizingStyle ();", "+\t\ttableView.setColumnAutoresizingStyle (OS.NSTableViewNoColumnAutoresizing);", "+\t\tfirstColumn.setWidth (newWidth);", "+\t\ttableView.setColumnAutoresizingStyle (oldResize);", "+\t\treturn true;", "-\tfirstColumn.setWidth (newWidth);", "-\treturn true;", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2fe674c5ba77519b8b294c97492552e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "a84ad0c351349df1804e73408de9beb15c76ea23", "commitAfterChange": "d6b025633a28920ae40301a1b987f0b923d26e74", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["-\tint hndl= topHandle();", "-\tDisplay display= getDisplay();", "-\t", "-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(hndl, bounds.getData());", "-", "-\tint w= bounds.getWidth();", "-\tint h= bounds.getHeight();", "-\tint borderWidth = (style & SWT.BORDER) != 0 ? 1 : 0;", "-", "-\tgc.carbon_focus();", "+\tMacControlEvent me= (MacControlEvent) callData;", "+\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "-\tgc.fillRectangle(0, 0, w, h);", "+\tif (! r.isEmpty()) {", "+\t\t", "+\t\tMacRect bounds= new MacRect();", "+\t\tint hndl= topHandle();", "+\t\tOS.GetControlBounds(hndl, bounds.getData());", "-\tif (image != null) {", "-\t\tRectangle imageBounds= image.getBounds();", "-\t\tgc.drawImage(image, (w-imageBounds.width) / 2, (h-imageBounds.height) / 2);", "-\t} else {", "-\t\tint sHandle= OS.CFStringCreateWithCharacters(MacUtil.removeMnemonics(text));", "-\t\tboolean wrap= (style & SWT.WRAP) != 0;", "-\t\tshort just= 0;", "-\t\tif ((style & SWT.RIGHT) != 0)", "-\t\t\tjust= 2;", "-\t\telse if ((style & SWT.CENTER) != 0)", "-\t\t\tjust= 1;", "-\t\tif (OS.IsControlEnabled(handle))", "-\t\t\tOS.RGBForeColor(0x000000);", "-\t\telse", "-\t\t\tOS.RGBForeColor(0x808080);", "-\t\tgc.installFont();", "-\t\tbounds.set(bounds.getX()+borderWidth, bounds.getY()+borderWidth, w-2*borderWidth, h-2*borderWidth);", "-\t\tOS.DrawThemeTextBox(sHandle, OS.kThemeCurrentPortFont, OS.kThemeStateActive, wrap, bounds.getData(), just, 0);", "-\t\tOS.CFRelease(sHandle);", "-\t}", "-\t", "-\tif (borderWidth > 0) {", "-\t\tgc.setForeground(display.getSystemColor(SWT.COLOR_GRAY));", "-\t\tgc.drawRectangle(0, 0, w-1, h-1);", "+\t\tint w= bounds.getWidth();", "+\t\tint h= bounds.getHeight();", "+\t\tint borderWidth = (style & SWT.BORDER) != 0 ? 1 : 0;", "+\t\t", "+\t\tgc.fillRectangle(0, 0, r.width, r.height);", "+\t\t", "+\t\tif (image != null) {", "+\t\t\tRectangle imageBounds= image.getBounds();", "+\t\t\tgc.drawImage(image, (w-imageBounds.width) / 2, (h-imageBounds.height) / 2);", "+\t\t} else {", "+\t\t\tint sHandle= OS.CFStringCreateWithCharacters(MacUtil.removeMnemonics(text));", "+\t\t\tboolean wrap= (style & SWT.WRAP) != 0;", "+\t\t\tshort just= 0;", "+\t\t\tif ((style & SWT.RIGHT) != 0)", "+\t\t\t\tjust= 2;", "+\t\t\telse if ((style & SWT.CENTER) != 0)", "+\t\t\t\tjust= 1;", "+\t\t\tif (OS.IsControlEnabled(handle))", "+\t\t\t\tOS.RGBForeColor(0x000000);", "+\t\t\telse", "+\t\t\t\tOS.RGBForeColor(0x808080);", "+\t\t\tgc.installFont();", "+\t\t\tbounds.set(borderWidth, borderWidth, w-2*borderWidth, h-2*borderWidth);", "+\t\t\tOS.DrawThemeTextBox(sHandle, OS.kThemeCurrentPortFont, OS.kThemeStateActive, wrap, bounds.getData(), just, 0);", "+\t\t\tOS.CFRelease(sHandle);", "+\t\t}", "+\t\t", "+\t\tif (borderWidth > 0) {", "+\t\t\tgc.setForeground(getDisplay().getSystemColor(SWT.COLOR_GRAY));", "+\t\t\tgc.drawRectangle(0, 0, w-1, h-1);", "+\t\t}", "+\t\t", "+\t\t// AW: debugging", "+\t\t//gc.drawRectangle(0, 0, r.width-1, r.height-1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cbd56773c9262213623d3d4338fd63a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "19a5806367f3d61f5a6fbd15561b988507a21fcf", "commitAfterChange": "feef74e50d9e0fa5487c0ca3d90c493853212b2e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int accessibilityAttributeValue(int id, int sel, int arg0)", "signatureAfterChange": "  int accessibilityAttributeValue(int id, int sel, int arg0)", "diff": ["-\t} else if (nsAttributeName.isEqualToString (OS.NSAccessibilityTitleAttribute) || nsAttributeName.isEqualToString (OS.NSAccessibilityDescriptionAttribute)) {", "+\t} else if (nsAttributeName.isEqualToString (OS.NSAccessibilityTitleAttribute)) {", "+\t\tString accessibleText = text.length() > 0 ? text : toolTipText;", "+\t\tif (accessibleText != null) {", "+\t\t\treturn NSString.stringWith(accessibleText).id;", "+\t\t} else {", "+\t\t\treturn NSString.string().id;", "+\t\t}", "+\t} else if (nsAttributeName.isEqualToString (OS.NSAccessibilityHelpAttribute)) {", "-\t\tif (accessibleText == null || accessibleText.equals(\"\")) accessibleText = text;", "-\t\tif (!(accessibleText == null || accessibleText.equals(\"\"))) {", "+\t\tif (accessibleText != null) {"]}], "num": 42991}