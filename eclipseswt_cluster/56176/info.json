{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e11867e7c52ef1b0156ddf31f413ae94", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9ee9481afc65b2e4ba629cd8002b84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " Rectangle getHitBounds ()", "signatureAfterChange": " Rectangle getHitBounds ()", "diff": ["-\tint contentX = getContentX (0);", "+\tint[] columnOrder = parent.getColumnOrder ();", "+\tint orderedCol0index = columnOrder.length == 0 ? 0 : parent.columns [columnOrder [0]].getIndex ();", "+\tint contentX = getContentX (orderedCol0index);", "-\t\t\tint[] columnOrder = parent.getColumnOrder ();", "-\t\t\tcolumn = columns [columnOrder [columnOrder.length - 1]];", "+\t\t\tcolumn = columns [columnOrder [columnOrder.length - 1]];\t/* last column */", "-\t\t\tcolumn = columns [0];", "+\t\t\tcolumn = columns [orderedCol0index];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "469bd66210fc3f7d64e164392e136048", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "4554e604711848107217e581c2ea19dd3a200ccc", "commitAfterChange": "943950684f8a4ea21db196bca596eabbe07db1ea", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " Rectangle getFocusBounds ()", "signatureAfterChange": " Rectangle getFocusBounds ()", "diff": ["-\tint x = getTextX (0);", "-\tif (columns.length > 0) {", "-\t\t/* ensure that the focus x does not start beyond the right bound of column 0 */", "-\t\tint rightX = columns [0].getX () + columns [0].width;", "-\t\tx = Math.min (x, rightX - 1);", "-\t}", "-", "+\tint orderedCol0index = columns.length == 0 ? 0 : parent.getOrderedColumns ()[0].getIndex ();", "+\tint x = getTextX (orderedCol0index);", "-\tif (columns.length == 0) {", "-\t\twidth = textWidths [0] + 2 * MARGIN_TEXT;", "-\t} else {", "+\tif (columns.length > 0) {", "+\t\t/* ensure that the focus x does not start beyond the right bound of ordered column 0 */", "+\t\tint rightX = columns [orderedCol0index].getX () + columns [orderedCol0index].width;", "+\t\tx = Math.min (x, rightX - 1);", "+\t\t", "-\t\t\tcolumn = columns [columnOrder [columnOrder.length - 1]];", "+\t\t\tcolumn = columns [columnOrder [columnOrder.length - 1]];\t/* last ordered column */", "-\t\t\tcolumn = columns [0];", "+\t\t\tcolumn = columns [orderedCol0index];", "+\t} else {\t/* no columns */", "+\t\twidth = textWidths [0] + 2 * MARGIN_TEXT;"]}], "num": 56176}