{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f48e92bf7429ca96d07d74cd6d4071ac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fb00ae7379268c061aa4ee436b4a50e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "a35ee243e7e3ebbf4e25e3705934875bf3e00284", "commitAfterChange": "f0d44e9a707b0291a4aabd3bcc1ba2e164e8b901", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void enableWidget (boolean enabled)", "signatureAfterChange": "  void enableWidget (boolean enabled)", "diff": ["-\tif (OS.COMCTL32_MAJOR >= 6) {", "-\t\tif (imageList != null) {", "-\t\t\tBUTTON_IMAGELIST buttonImageList = new BUTTON_IMAGELIST ();", "-\t\t\tOS.SendMessage (handle, OS.BCM_GETIMAGELIST, 0, buttonImageList);", "-\t\t\tif (imageList != null) imageList.dispose ();", "-\t\t\timageList = new ImageList (style & SWT.RIGHT_TO_LEFT);", "-\t\t\tif (OS.IsWindowEnabled (handle)) {", "-\t\t\t\timageList.add (image);", "-\t\t\t} else {", "-\t\t\t\tif (disabledImage != null) disabledImage.dispose ();", "-\t\t\t\tdisabledImage = new Image (display, image, SWT.IMAGE_DISABLE);", "-\t\t\t\timageList.add (disabledImage);", "-\t\t\t}", "-\t\t\tbuttonImageList.himl = imageList.getHandle ();", "-\t\t\tOS.SendMessage (handle, OS.BCM_SETIMAGELIST, 0, buttonImageList);", "-\t\t\t/*", "-\t\t\t* Bug in Windows.  Under certain cirumstances yet to be", "-\t\t\t* isolated, BCM_SETIMAGELIST does not redraw the control", "-\t\t\t* when an image is set.  The fix is to force a redraw.", "-\t\t\t*/", "-\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t}", "-\t}", "+\tupdateImageList ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ba9187fb8171eb7f1ebb3cd2d9802b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bd335e1bbc287472dc24a7618b87762336cc62c6", "commitAfterChange": "7a7a5788e7468756fae5bc596e2c2c6f75583b57", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "  void setBackgroundPixel (int newPixel)", "signatureAfterChange": "  void setBackgroundPixel (int newPixel)", "diff": ["-\tif (findImageControl () != null) return;", "-\tif (newPixel == -1) newPixel = defaultBackground ();", "-\tint oldPixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "-\tif (oldPixel != newPixel) {", "-\t\tif (oldPixel != OS.CLR_NONE) {", "+\tif (!customDraw) {", "+\t\tif (findImageControl () != null) return;", "+\t\tif (newPixel == -1) newPixel = defaultBackground ();", "+\t\tint oldPixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "+\t\tif (oldPixel != newPixel) {", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When the background color is changed,", "+\t\t\t* the table does not redraw until the next WM_PAINT.  The fix", "+\t\t\t* is to force a redraw.", "+\t\t\t*/", "+\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t/*", "-\t\t* Feature in Windows.  When the background color is changed,", "-\t\t* the table does not redraw until the next WM_PAINT.  The fix", "-\t\t* is to force a redraw.", "-\t\t*/", "-\t\tOS.InvalidateRect (handle, null, true);"]}], "num": 13394}