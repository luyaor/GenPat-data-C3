{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea0ee38ff37749e35d1f47c44cd88c46", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02354722eb28224c7c408b28949fc7b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "3ace99cc2cbeca175428eabbe777b2fc353f5d7d", "commitAfterChange": "38b0d2b8f58957af87b01bf2967bf37e853d55b0", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 56, "signatureBeforeChange": "  public void test_removeFilterILorg_eclipse_swt_widgets_Listener()", "signatureAfterChange": "  public void test_removeFilterILorg_eclipse_swt_widgets_Listener()", "diff": ["-\twarnUnimpl(\"Test test_removeFilterILorg_eclipse_swt_widgets_Listener not written\");", "+\tfinal int CLOSE_CALLBACK = 0;", "+\tfinal int DISPOSE_CALLBACK = 1;", "+\tfinal boolean[] callbackReceived = new boolean[] {false, false};", "+\t", "+\tListener listener = new Listener() {", "+\t\tpublic void handleEvent(Event e) {", "+\t\t\tif (e.type == SWT.Close)", "+\t\t\t\tcallbackReceived[CLOSE_CALLBACK] = true;", "+\t\t\telse if (e.type == SWT.Dispose)", "+\t\t\t\tcallbackReceived[DISPOSE_CALLBACK] = true;", "+\t\t};", "+\t};", "+\t", "+\tDisplay display = new Display();", "+\ttry {", "+\t\ttry {", "+\t\t\tdisplay.removeFilter(SWT.Dispose, null);", "+\t\t\tfail(\"No exception thrown for removeFilter with null argument\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for removeFilter with null argument\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\tdisplay.addFilter(SWT.Close, listener);", "+\t\tdisplay.removeFilter(SWT.Close, listener);", "+\t} finally {", "+\t\tdisplay.close();", "+\t}", "+\tassertFalse(callbackReceived[CLOSE_CALLBACK]);", "+\tassertFalse(callbackReceived[DISPOSE_CALLBACK]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2a316c890450a2e5bfc8feff64798a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "3ace99cc2cbeca175428eabbe777b2fc353f5d7d", "commitAfterChange": "38b0d2b8f58957af87b01bf2967bf37e853d55b0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 58, "signatureBeforeChange": "  public void test_removeListenerILorg_eclipse_swt_widgets_Listener()", "signatureAfterChange": "  public void test_removeListenerILorg_eclipse_swt_widgets_Listener()", "diff": ["-\twarnUnimpl(\"Test test_removeListenerILorg_eclipse_swt_widgets_Listener not written\");", "+\tfinal int CLOSE_CALLBACK = 0;", "+\tfinal int DISPOSE_CALLBACK = 1;", "+\tfinal boolean[] callbackReceived = new boolean[] {false, false};", "+\t", "+\tListener listener = new Listener() {", "+\t\tpublic void handleEvent(Event e) {", "+\t\t\tif (e.type == SWT.Close)", "+\t\t\t\tcallbackReceived[CLOSE_CALLBACK] = true;", "+\t\t\telse if (e.type == SWT.Dispose)", "+\t\t\t\tcallbackReceived[DISPOSE_CALLBACK] = true;", "+\t\t};", "+\t};", "+\t", "+\tDisplay display = new Display();", "+\ttry {", "+\t\ttry {", "+\t\t\tdisplay.removeListener(SWT.Close, null);", "+\t\t\tfail(\"No exception thrown for removeListener with null argument\");", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\tassertEquals(\"Incorrect exception thrown for removeListener with null argument\", SWT.ERROR_NULL_ARGUMENT, e);", "+\t\t}", "+\t\t", "+\t\tdisplay.addListener(SWT.Dispose, listener);", "+\t\tdisplay.removeListener(SWT.Dispose, listener);", "+\t} finally {", "+\t\tdisplay.close();", "+\t}", "+\tassertFalse(callbackReceived[CLOSE_CALLBACK]);", "+\tassertFalse(callbackReceived[DISPOSE_CALLBACK]);"]}], "num": 58962}