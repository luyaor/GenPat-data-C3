{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ef67b230029b58f091f7721f4509f7b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b3db9ec9779851875874cba94e83405", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "85cb25180f670b2d2beb50f403dc43c067cc2bca", "commitAfterChange": "285df6e153db08d5dabe434414d6187070844807", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void createHandle (int index)", "signatureAfterChange": "\r void createHandle (int index)", "diff": ["+\t\tif ((style & SWT.FLAT) != 0) {\r", "+\t\t\tint [] argList1 = {\r", "+\t\t\t\tOS.XmNshadowThickness, 0,\r", "+\t\t\t\tOS.XmNborderWidth, 1,\r", "+\t\t\t\tOS.XmNfillOnSelect, 1};\r", "+\t\t\tOS.XtSetValues (handle, argList1, argList1.length / 2);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37ece2eb4f5045812f806b1a0ae89629", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "7f6887648a881f6234ca218a59400de0db7f3c81", "commitAfterChange": "f839e23e6e0acea7801981892477875deaa5d02e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r \r public void setSelection (int start, int end)", "signatureAfterChange": "\r \r public void setSelection (int start, int end)", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Photon. On a multi-line text, the caret position\r", "+\t* is not changed with the selection start and end values are\r", "+\t* the same. The fix is to detect this case and change the\r", "+\t* cursor position.\r", "+\t*/\r", "+\tif ((style & SWT.MULTI) != 0 && start == end) {\r", "+\t\tint [] args = {OS.Pt_ARG_CURSOR_POSITION, start, 0};\r", "+\t\tOS.PtSetResources (handle, args.length / 3, args);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbba33f25ad7e1cabe71774b84aa4c15", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void setImage (Image image)", "signatureAfterChange": "  public void setImage (Image image)", "diff": ["-\tif (imageHandle == 0) return;", "-\t\tOS.gtk_image_set_from_pixbuf (imageHandle, pixbuf);", "+\t\timageHandle = OS.gtk_image_new_from_pixbuf (pixbuf);", "-\t\tOS.gtk_image_set_from_pixbuf (imageHandle, 0);", "-\t\tOS.gtk_widget_hide (imageHandle);", "+\t\timageHandle = OS.gtk_image_new_from_pixbuf (0);", "+\t}", "+\tOS.gtk_tool_button_set_icon_widget (handle, imageHandle);", "+\t/*", "+\t * If Text/Image of a tool-item changes, then it is ", "+\t * required to reset the proxy menu. Otherwise, the ", "+\t * old menuItem appears in the overflow menu.", "+\t */", "+\tif ((style & SWT.CHECK | SWT.RADIO | SWT.DROP_DOWN) != 0) {", "+\t\tproxyMenuItem = 0;", "+\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\tproxyMenuItem = OS.gtk_tool_item_retrieve_proxy_menu_item (handle);", "+\t\t\tOS.g_signal_connect(proxyMenuItem, OS.activate, ToolBar.menuItemSelectedFunc.getAddress(), handle);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac3f1080a7469a12363045aaeaee4a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "69d665c09b44cc1bf170154f675aaf320cd38c04", "commitAfterChange": "068b61e1d9c9e54ae5983b207d876954b9075a57", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getLineCount ()", "signatureAfterChange": " public int getLineCount ()", "diff": ["-\treturn getLineNumber (echoCharacter != '\\0' ? hiddenText.length () : OS.XmTextGetLastPosition (handle));\r", "+\tif ((style & SWT.SINGLE) != 0) return 1;\r", "+\tint [] argList = {OS.XmNtotalLines, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\treturn argList [1];\r"]}], "num": 37982}