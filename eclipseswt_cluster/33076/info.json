{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "666acf9971bfaea44f151c9669d26473", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f39ee75b3a3895cc04b2291f72558790", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "afba1835a270501526a3ca49b40fca2cdc1b5404", "commitAfterChange": "c4e2642145a6c2a97ce8cc2d62ddc74b97fb8d06", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\t\tCTabItem2 item = items[items.length-1];", "-\t\tint rightEdge = getRightItemEdge();", "-\t\tif (single || topTabIndex > 0 || item.x + item.width >= rightEdge) {", "-\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - decoratorWidth;", "+\t\tif (single && selectedIndex != -1){", "+\t\t\tCTabItem2 item = items[selectedIndex];", "+\t\t\tchevronRect.x = Math.min(item.x +item.width + CURVE_WIDTH/2 - decoratorWidth, size.x - borderRight - closeRect.width - expandRect.width - decoratorWidth - 3);", "-\t\t\tif (single) chevronRect.x -= 3;", "+\t\t} else {", "+\t\t\tint rightEdge = getRightItemEdge();", "+\t\t\tCTabItem2 item = items[items.length-1];", "+\t\t\tif (topTabIndex > 0 || item.x + item.width >= rightEdge) {", "+\t\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - decoratorWidth;", "+\t\t\t\tif (borderRight > 0) chevronRect.x += 1;", "+\t\t\t\tchevronRect.y = onBottom ? size.y - borderBottom - tabHeight: borderTop + 1;", "+\t\t\t\tchevronRect.width = decoratorWidth;", "+\t\t\t\tchevronRect.height = tabHeight;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c5305a39c43cead1ffdd867e497084", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "d089b2cf79ce87d2a82f677ea1a4ce5a5ba9d4a4", "commitAfterChange": "78b034106c080360cc188a981bb53f8356762fbe", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void init(int width, int height)", "signatureAfterChange": "  void init(int width, int height)", "diff": ["-\tthis.pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);", "-\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t/* Fill the bitmap with white */", "-\tGdkColor white = new GdkColor();", "-\twhite.red = (short)0xFFFF;", "-\twhite.green = (short)0xFFFF;", "-\twhite.blue = (short)0xFFFF;", "-\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "-\tOS.gdk_colormap_alloc_color(colormap, white, true, true);", "-\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "-\tOS.gdk_gc_set_foreground(gdkGC, white);", "-\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);", "-\tOS.g_object_unref(gdkGC);", "-\tOS.gdk_colormap_free_colors(colormap, white, 1);", "+\tif (OS.USE_CAIRO_SURFACE) {", "+\t\tint stride = Cairo.cairo_format_stride_for_width(Cairo.CAIRO_FORMAT_ARGB32, width);", "+\t\tint /*long*/ data = surfaceData = OS.g_malloc(stride * height);", "+\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, Cairo.CAIRO_FORMAT_ARGB32, width, height, stride);", "+\t\tif (surface == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.memset(data, 0xff, stride * height);", "+\t\tthis.width = width;", "+\t\tthis.height = height;", "+\t} else {", "+\t\tthis.pixmap = OS.gdk_pixmap_new(OS.GDK_ROOT_PARENT(), width, height, -1);", "+\t\tif (pixmap == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t/* Fill the bitmap with white */", "+\t\tGdkColor white = new GdkColor();", "+\t\twhite.red = (short)0xFFFF;", "+\t\twhite.green = (short)0xFFFF;", "+\t\twhite.blue = (short)0xFFFF;", "+\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\tOS.gdk_colormap_alloc_color(colormap, white, true, true);", "+\t\tint /*long*/ gdkGC = OS.gdk_gc_new(pixmap);", "+\t\tOS.gdk_gc_set_foreground(gdkGC, white);", "+\t\tOS.gdk_draw_rectangle(pixmap, gdkGC, 1, 0, 0, width, height);", "+\t\tOS.g_object_unref(gdkGC);", "+\t\tOS.gdk_colormap_free_colors(colormap, white, 1);", "+\t}"]}], "num": 33076}