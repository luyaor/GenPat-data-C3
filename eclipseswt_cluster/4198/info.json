{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b3bef8f302c5c990c1a8b07b2a9530d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb1fc7027ff87b9d7610ff8e3b9d4de2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "09e53cfe9001f0fc72ed497903f248e93a374f11", "commitAfterChange": "72bca330545187aed3f298af1ba72f7fcfb258d6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Windows.  Despite the fact that the\r", "+\t* tool tip text contains \\r\\n, the tooltip will\r", "+\t* not honour the new line unless TTM_SETMAXTIPWIDTH\r", "+\t* is set.  The fix is to set TTM_SETMAXTIPWIDTH to\r", "+\t* a large value.\r", "+\t*/\r", "+\tint hwndToolTip = OS.SendMessage (handle, OS.TCM_GETTOOLTIPS, 0, 0);\r", "+\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, 0x7FFF);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cb44aeb9f20de44c0bc44f551a7df5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a59d4f0fcd6ac77e4b0b411a02002b0581984050", "commitAfterChange": "e2b4ac8fc06ef616c8ab44b7a5fded395b0c30d0", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SYSCHAR (int wParam, int lParam)", "diff": ["+\tboolean consumed = false;", "-\t\tsendKeyEvent (SWT.KeyDown, OS.WM_SYSCHAR, wParam, lParam);", "+\t\tconsumed = !sendKeyEvent (SWT.KeyDown, OS.WM_SYSCHAR, wParam, lParam);", "+\tconsumed |= display.mnemonicKeyHit;", "-\treturn new LRESULT (result);", "+\treturn consumed ? LRESULT.ONE : new LRESULT (result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edc3d6fb159cec5de4eade5c26d2b01", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "31431427273f0c80a023438b9fb412e64b3d4226", "commitAfterChange": "bff1739652af127dada64eb28ed9f3f2bbea4b56", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "  LRESULT WM_SETFONT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_SETFONT (int wParam, int lParam)", "diff": ["+\t", "+\t/*", "+\t* Bug in Windows.  When a header has a sort indicator", "+\t* triangle, Windows resizes the indicator based on the", "+\t* size of the n-1th font.  The fix is to always make", "+\t* the n-1th font be the default.  This makes the sort", "+\t* indicator always be the default size.", "+\t* ", "+\t* NOTE: The table window proc sets the actual font in", "+\t* the header so that all that is necessary here is to", "+\t* set the default first.", "+\t*/", "+\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\tOS.SendMessage (hwndHeader, OS.WM_SETFONT, 0, lParam);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "713e4236c609d818d6a7906e2bc7a303", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "046dc52b7f8c45021a6c2fb3d54effdf9455e5c6", "commitAfterChange": "95064d9c43834d31420a1ed4831413308c49bbd8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public FontMetrics getLineMetrics (int lineIndex)", "signatureAfterChange": " public FontMetrics getLineMetrics (int lineIndex)", "diff": ["-\tint hdc = device.internal_new_GC(null);", "+\tint hDC = device.internal_new_GC(null);", "+\tint srcHdc = OS.CreateCompatibleDC(hDC);", "-\t\tOS.SelectObject(hdc, font.handle);", "-\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\tOS.SelectObject(srcHdc, font.handle);", "+\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\t\t\tOS.SelectObject(hdc, getItemFont(run));", "-\t\t\tOS.GetTextMetrics(hdc, lptm);", "+\t\t\tOS.SelectObject(srcHdc, getItemFont(run));", "+\t\t\tOS.GetTextMetrics(srcHdc, lptm);", "-\tdevice.internal_dispose_GC(hdc, null);", "+\tif (srcHdc != 0) OS.DeleteDC(srcHdc);", "+\tdevice.internal_dispose_GC(hDC, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d99434288d8f3704d529ad7b0970b0cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e718eb89dd160ed3d7ecf97e64e3a4c645670f88", "commitAfterChange": "48d81c66e4c3a4579b6edbedb9a57af347363ecf", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  Point computeNativeSize (long h, int wHint, int hHint, boolean changed)", "signatureAfterChange": "  Point computeNativeSize (long h, int wHint, int hHint, boolean changed)", "diff": ["-\t\twidth = OS.GTK_WIDGET_REQUISITION_WIDTH (h);", "-\t\theight = OS.GTK_WIDGET_REQUISITION_HEIGHT (h);", "+\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "+\t\t\twidth = requisition.width;", "+\t\t\theight = requisition.height;", "+\t\t} else {", "+\t\t\twidth = OS.GTK_WIDGET_REQUISITION_WIDTH (h);", "+\t\t\theight = OS.GTK_WIDGET_REQUISITION_HEIGHT (h);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781e69c1055d68055e17183e68206ead", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "72397a13bfc5cd7311818fd0fdf8b337a816b4af", "commitAfterChange": "06060ba40b1a4fb241403b3a04f76a039ca98393", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "  LRESULT WM_MOUSEMOVE (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_MOUSEMOVE (int wParam, int lParam)", "diff": ["+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  When the new tool rectangle is", "+\t\t\t\t* set using TTM_NEWTOOLRECT and the tooltip is visible,", "+\t\t\t\t* Windows draws the tooltip right away and the sends", "+\t\t\t\t* WM_NOTIFY with TTN_SHOW.  This means that the tooltip", "+\t\t\t\t* shows first at the wrong location and then moves to", "+\t\t\t\t* the right one.  The fix is to hide the tooltip window.", "+\t\t\t\t*/", "+\t\t\t\tif (OS.SendMessage (itemToolTipHandle, OS.TTM_GETCURRENTTOOL, 0, 0) == 0) {", "+\t\t\t\t\tif (OS.IsWindowVisible (itemToolTipHandle)) {", "+\t\t\t\t\t\tOS.ShowWindow (itemToolTipHandle, OS.SW_HIDE);", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2bf169fd18bb48dbb8f8bccfe7f927d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "f664172a0e735d142051b2da26600fbd256e07a6", "commitAfterChange": "894e6297387f95786ffea31acd399cd5951b0afc", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void dragDetect (Control control)", "signatureAfterChange": "  void dragDetect (Control control)", "diff": ["-//\tif (!dragging && control.hooks (SWT.DragDetect)) {", "-//\t\tif (OS.WaitMouseMoved (dragMouseStart)) {", "-//\t\t\tdragging = true;", "-//\t\t\t//control.postEvent (SWT.DragDetect);", "-//\t\t\tcontrol.sendEvent (SWT.DragDetect);", "-//\t\t}", "-//\t}", "+\tif (!dragging && control.hooks (SWT.DragDetect)) {", "+\t\tif (OS.WaitMouseMoved (dragMouseStart)) {", "+\t\t\tdragging = true;", "+\t\t\t//control.postEvent (SWT.DragDetect);", "+\t\t\tcontrol.sendEvent (SWT.DragDetect);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa319c8e6a634588dfd1c4be4e663714", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "7b438a188e6083c30837436d22ffaedbe3dbe31f", "commitAfterChange": "941fe0db3dd763ccfa22752197e6c0aece974d95", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  For some reason, when the style", "+\t\t\t\t* is changed to TBSTYLE_LIST, Windows does not lay out", "+\t\t\t\t* the tool items.  The fix is to use WM_SETFONT to force", "+\t\t\t\t* the tool bar to redraw and lay out.", "+\t\t\t\t*/", "+\t\t\t\tint hFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\t\tOS.SendMessage (handle, OS.WM_SETFONT, hFont, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf19eb56be409f657f12e92bf2f0a80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "771246814116ab7a06d741bac1b7a6515066ce29", "commitAfterChange": "59c7194abace25530f6cc464daa22f94507e57c5", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int windowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\tif (msg == Display.SWT_RESTORECARET) {", "+\t\tcallWindowProc (hwnd, OS.WM_KILLFOCUS, 0, 0);", "+\t\tcallWindowProc (hwnd, OS.WM_SETFOCUS, 0, 0);", "+\t\treturn 1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fa879fd48df8fab2e11a9d01b1ef22d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "66e641150a4707102e1ffedd9b36b5e810501717", "commitAfterChange": "2363d617e4579c59cc8d3e955310574cf8713b18", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  int gtk_motion_notify_event (int widget, int event)", "signatureAfterChange": "  int gtk_motion_notify_event (int widget, int event)", "diff": ["-\tdouble x_root = gdkEvent.x_root, y_root = gdkEvent.y_root;", "+\tdouble x = gdkEvent.x_root, y = gdkEvent.y_root;", "-\t\tOS.gdk_window_get_pointer (0, pointer_x, pointer_y, mask);", "-\t\tx_root = pointer_x [0];", "-\t\ty_root = pointer_y [0];", "+\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (eventHandle ());", "+\t\tOS.gdk_window_get_pointer (window, pointer_x, pointer_y, mask);", "+\t\tx = pointer_x [0];", "+\t\ty = pointer_y [0];", "-\tsendMouseEvent (SWT.MouseMove, 0, gdkEvent.time, x_root, y_root, state, event);", "+\tsendMouseEvent (SWT.MouseMove, 0, gdkEvent.time, x, y, gdkEvent.is_hint != 0, state, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f1660fdb957e5b211a355d208448e10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "6cbff223842b996727f72a9e7755fb89f9f00da3", "commitAfterChange": "d1287e0f5a870758b7df8c69e95f6c8689e39920", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void cut ()", "signatureAfterChange": " public void cut ()", "diff": ["+\tboolean cut = true;", "+\t\t\t\tOS.TXNShowSelection (txnObject, false);", "+\t\t\t\tcut = false;", "-\tOS.TXNCut (txnObject);", "+\tif (cut) OS.TXNCut (txnObject);", "-\tif (!oldSelection.equals (newSelection)) sendEvent (SWT.Modify);", "+\tif (!cut || !oldSelection.equals (newSelection)) sendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc9ab345ddc7b1a1457298fc20dc5113", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "8ab2694b079d42238f2e3bb9154c6203d29b475b", "commitAfterChange": "bb20cc27247c1f1ac9a884571825af6f240e652e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": "  public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["+\t\tlength = OS.g_utf8_strlen(OS.pango_layout_get_text(layout), -1);", "+\t\tselectionStart = translateOffset(selectionStart);", "+\t\tselectionEnd = translateOffset(selectionEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e440847c1369dd8dc6fedaaedfa73a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 117, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["+\t\tif (backgroundImage != null && OS.GetWindow (handle, OS.GW_CHILD) == 0) {", "+\t\t\tflags |= OS.SWP_NOCOPYBITS;", "+\t\t}", "-\t\t\t/*", "-\t\t\t* This code is intentionally commented.  All widgets that", "-\t\t\t* are created by SWT have WS_CLIPSIBLINGS to ensure that", "-\t\t\t* application code does not draw outside of the control.", "-\t\t\t*/", "-//\t\t\tint count = parent.getChildrenCount ();", "-//\t\t\tif (count > 1) {", "-//\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-//\t\t\t\tif ((bits & OS.WS_CLIPSIBLINGS) == 0) flags |= OS.SWP_NOCOPYBITS;", "-//\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7919786c5f6c981ddb3bfbb1d9a968d5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "eb9f3093d2ccd533ae4b0aa12fd0abad012785d8", "commitAfterChange": "62ad874bbf1eb5cd79736eae7970272f5dd7f805", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["+\t\t/* ", "+\t\t* Feature in Windows.  When LVM_SETBKCOLOR is used with", "+\t\t* CLR_NONE and LVM_SETSELECTEDCOLUMN is used to select", "+\t\t* a column, Windows fills the column with the selection", "+\t\t* color, drawing on top of the background image and any", "+\t\t* other custom drawing.  The fix is to avoid setting the", "+\t\t* selected column.", "+\t\t*/", "+\t\tif (OS.SendMessage (hwnd, OS.LVM_GETBKCOLOR, 0, 0) != OS.CLR_NONE) {", "+\t\t\tOS.SendMessage (hwnd, OS.LVM_SETSELECTEDCOLUMN, index, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c09d52da9cac5b59da9ce24e8659021", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "46958a15f43936733bc819b97c827c339d68bc9e", "commitAfterChange": "01725ae6a7a6992a9a2b62746d985a9d4dbdb4ca", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 138, "signatureBeforeChange": "  void scrollWheel (int id, int sel, int theEvent)", "signatureAfterChange": "  void scrollWheel (int id, int sel, int theEvent)", "diff": ["+\t\tNSEvent nsEvent = new NSEvent(theEvent);", "+\t\tif (display.gestureStarted && hooks(SWT.Gesture)) {", "+\t\t\tif (!sendGestureEvent(nsEvent, SWT.GESTURE_PAN, true)) {", "+\t\t\t\thandled = true;\t\t\t\t\t\t", "+\t\t\t}", "+\t\t}", "-\t\t\tNSEvent nsEvent = new NSEvent(theEvent);", "-\t\t\tNSEvent nsEvent = new NSEvent(theEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7e075acd386e4bf9653c22b7850d19a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "de70a0667de50f6f7db613d0fe91d2d42e704047", "commitAfterChange": "16d3df9b450bcf2b246d26812b5f119f6c95deb4", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "  void setDeferResize (boolean defer)", "signatureAfterChange": "  void setDeferResize (boolean defer)", "diff": ["-\t\t\t\t\t\tOS.InvalidateRect (handle, null, false);", "+\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+\t\t\t\t\t\tif (hwndHeader != 0) OS.InvalidateRect (hwndHeader, null, true);", "+\t\t\t\t\t\tOS.InvalidateRect (handle, null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec6c9cdd3dcd5f055d644098dbe982b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "9cc72cd00c181250b1f51b95a0528a6b993c1ed9", "commitAfterChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void relayout ()", "signatureAfterChange": "  void relayout ()", "diff": ["+\tboolean hasTextItems = false;", "-\t\tif (item != null) item.resizeControl ();", "+\t\tif (item != null) {", "+\t\t\titem.resizeControl ();", "+\t\t\thasTextItems |= item.hasText;", "+\t\t}", "+\tif (!hasTextItems) OS.gtk_toolbar_set_style (handle, OS.GTK_TOOLBAR_BOTH_HORIZ);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9e751fee105364c97445ff19f3355d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "f1f04c9cfd4ddd98dcadbbb14f16fa165a044b8a", "commitAfterChange": "9806db4337b5c0fa12aab336ea874ee91655803e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Bug in Windows 98 and NT.  Invoking SetWindowPos can result in\r", "+\t* a dialog being moved behind its parent if the dialog has a sibling\r", "+\t* dialog with style bit ON_TOP.  The workaround is to lock the active\r", "+\t* window's position during the SetWindowPos invocation below.\r", "+\t*/\r", "-//\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "+\tgetDisplay().lockActiveWindow = true;\r", "+\tOS.SetWindowPos (hwndToolTip, OS.HWND_TOPMOST, 0, 0, 0, 0, flags);\r", "+\tgetDisplay().lockActiveWindow = false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190f87049df649889e27e4845cf340fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "7b0912088ebbce5881b352a85c774146a4889b5b", "commitAfterChange": "7626ff31966ce4808bcae79f4d61b2fe12aacf96", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int filterProc (int xEvent, int gdkEvent, int data2)", "signatureAfterChange": "  int filterProc (int xEvent, int gdkEvent, int data2)", "diff": ["+\t\t\t\t\t\tif (isCustomResize ()) {", "+\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (OS.GTK_WIDGET_WINDOW (shellHandle), null, false);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (isCustomResize ()) {", "+\t\t\t\t\t\t\tOS.gdk_window_invalidate_rect (OS.GTK_WIDGET_WINDOW (shellHandle), null, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "646d93bd5ad36ced6fe104f16984d603", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "98713c96307c281d988ad68c845196a3f8629b87", "commitAfterChange": "831ce80fb404a7b31c6931f562fe269f30f39352", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  void updateImages (boolean enabled)", "signatureAfterChange": "  void updateImages (boolean enabled)", "diff": ["-\t", "+\tint /*long*/ hFont = OS.SendMessage (hwnd, OS.WM_GETFONT, 0, 0);", "+\tOS.SendMessage (hwnd, OS.WM_SETFONT, hFont, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9603f81028bad3fc583a36164eb7f27e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "ab9b696e1b90a2bbe964a0dd5e715a4180619302", "commitAfterChange": "15cd4b3b02a9366a3c91dffa7606a25c162b7d95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void checkOrientation (Widget parent)", "signatureAfterChange": "  void checkOrientation (Widget parent)", "diff": ["+\t/* Versions of GTK prior to 2.8 do not render RTL text properly */", "+\tif (OS.GTK_VERSION < OS.VERSION (2, 8, 0)) {", "+\t\tstyle &= ~SWT.RIGHT_TO_LEFT;", "+\t\tstyle |= SWT.LEFT_TO_RIGHT;\t\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2328d4b24f833f082fda69975dccb86", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "a2121a3b36fd9f479b5853f961011d3d772dea1a", "commitAfterChange": "180b63adf3a86ec0ec05574f5a95cc8803880a19", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " int XKeyPress (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XKeyPress (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["+\tboolean doit = true;", "-\t\tsendKeyEvent (SWT.KeyDown, xEvent);", "+\t\tdoit = sendKeyEvent (SWT.KeyDown, xEvent);", "-\t\tsendIMKeyEvent (SWT.KeyDown, xEvent);", "+\t\tdoit = sendIMKeyEvent (SWT.KeyDown, xEvent);", "+\t}", "+\tif (!doit) {", "+\t\tOS.memmove (continue_to_dispatch, new int [1], 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf25772c4cd21047f7f0907ca3ba5db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "dc3ad948ef9245d2ba79b25b1274127c446de5f1", "commitAfterChange": "be8221cac45b1caccd03b5738735a66f059d5ebc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void createItem (TreeColumn column, int index)", "signatureAfterChange": "  void createItem (TreeColumn column, int index)", "diff": ["+\t", "+\t/* Redraw to hide the items when the first column is created */", "+\tif (count == 0 && OS.SendMessage (handle, OS.TVM_GETCOUNT, 0, 0) != 0) {", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t}"]}], "num": 4198}