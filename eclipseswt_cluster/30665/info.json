{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23cd542fa9b6984964a49fbccd5fac99", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21207de70a6b1050500fee1e4de6606b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c75fa2aaa81cd96400f0b4207d26c662b67c5bce", "commitAfterChange": "68dd096752e238c658788f5395a8c9f209d457e7", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": "  static int applicationProc(int id, intsel, int arg0, int arg1, int arg2, int arg3)", "signatureAfterChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "diff": ["+static int /*long*/ applicationProc(int /*long*/ id, int /*long*/ sel, int /*long*/ arg0, int /*long*/ arg1) {", "+\tDisplay display = getCurrent();", "+\tif (display != null) {", "+\t\tif (sel == OS.sel_application_openFile_) {", "+\t\t\tString file = new NSString(arg1).getString();", "+\t\t\tEvent event = new Event();", "+\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\tevent.text = file;", "+\t\t\tdisplay.postEvent(event);", "+\t\t\treturn 1;", "+\t\t} else if (sel == OS.sel_application_openFiles_) {", "+\t\t\tNSArray files = new NSArray(arg1);", "+\t\t\tint /*long*/ count = files.count();", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "+\t\t\t\tEvent event = new Event();", "+\t\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\t\tevent.text = file;", "+\t\t\t\tdisplay.postEvent(event);", "+\t\t\t}", "+\t\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "+\t\t} ", "+\t\telse if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "+\t\t\treturn 1;", "+\t\t}", "+\t}", "+\treturn 0;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa6f3745cb269f266980cfa8e2b430d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tstatic int atkText_get_text (int atkObject, int start_offset, int end_offset)", "signatureAfterChange": "  \tstatic int atkText_get_text (int atkObject, int start_offset, int end_offset)", "diff": ["-\t\tif (object == null) return 0;", "-\t\tString text = object.getText ();", "-\t\tif (text.length () > 0) {", "-\t\t\tif (end_offset == -1) {", "-\t\t\t\tend_offset = text.length ();", "-\t\t\t} else {", "-\t\t\t\tend_offset = Math.min (end_offset, text.length ());\t", "+\t\tif (object != null) {", "+\t\t\tAccessible accessible = object.accessible;", "+\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleTextExtendedEvent event = new AccessibleTextExtendedEvent(accessible);", "+\t\t\t\tif (event.start != event.end) {", "+\t\t\t\t\tevent.start = (int)/*64*/start_offset;", "+\t\t\t\t\tevent.end = (int)/*64*/(end_offset - 1);", "+\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\treturn getStringPtr (event.result);", "-\t\t\tstart_offset = Math.min (start_offset, end_offset);", "-\t\t\ttext = text.substring ((int)/*64*/start_offset, (int)/*64*/end_offset);", "-\t\t\tbyte[] bytes = Converter.wcsToMbcs (null, text, true);", "-\t\t\tint /*long*/ result = OS.g_malloc (bytes.length);", "-\t\t\tOS.memmove (result, bytes, bytes.length);", "-\t\t\treturn result;", "+\t\t\tString text = object.getText ();", "+\t\t\tif (text != null && text.length () > 0) {", "+\t\t\t\tif (end_offset == -1) {", "+\t\t\t\t\tend_offset = text.length ();", "+\t\t\t\t} else {", "+\t\t\t\t\tend_offset = Math.min (end_offset, text.length ());\t", "+\t\t\t\t}", "+\t\t\t\tstart_offset = Math.min (start_offset, end_offset);", "+\t\t\t\ttext = text.substring ((int)/*64*/start_offset, (int)/*64*/end_offset);", "+\t\t\t\treturn getStringPtr (text);", "+\t\t\t}"]}], "num": 30665}