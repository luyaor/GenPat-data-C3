{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce04e5ae8c3850ae8b3e01e3d73bbada", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1621846cc65d5a9d8eae98386cb9e17d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c75fa2aaa81cd96400f0b4207d26c662b67c5bce", "commitAfterChange": "68dd096752e238c658788f5395a8c9f209d457e7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  int coreEventProc (int theAppleEvent, int reply, int handlerRefcon)", "signatureAfterChange": "  int coreEventProc (int theAppleEvent, int reply, int handlerRefcon)", "diff": ["-\tif (!disposing) {", "-\t\tEvent event = new Event ();", "-\t\tsendEvent (SWT.Close, event);", "-\t\tif (event.doit) {", "-\t\t\tdispose ();", "-\t\t\t/*", "-\t\t\t* When the application is closing, no SWT program can continue", "-\t\t\t* to run.  In order to avoid running code after the display has", "-\t\t\t* been disposed, exit from Java.", "-\t\t\t*/", "-\t\t\t/* This code is intentionally commented */", "-//\t\t\tSystem.exit (0);", "-\t\t} else {", "-\t\t\treturn OS.userCanceledErr;", "-\t\t}", "+\tswitch(handlerRefcon) {", "+\t\tcase OS.kAEOpenDocuments:", "+\t\t\tAEDesc docList = new AEDesc();", "+\t\t\tint[] count = new int[1];", "+\t\t    OS.AEGetParamDesc(theAppleEvent, OS.keyDirectObject, OS.typeAEList, docList);", "+\t\t\tOS.AECountItems(docList, count);", "+\t\t\tfor(int index = 1; index <= count[0]; index++) {", "+\t\t\t\tint [] theAEKeyword = new int [1];", "+\t\t\t\tint [] typeCode = new int [1];", "+\t\t\t\tint maximumSize = 80; // size of FSRef", "+\t\t\t\tint dataPtr = OS.NewPtr (maximumSize);", "+\t\t\t\tint [] actualSize = new int [1];", "+\t\t\t\tint status = OS.AEGetNthPtr (docList, 1, OS.typeFSRef, theAEKeyword, typeCode, dataPtr, maximumSize, actualSize);", "+\t\t\t\tif (status == OS.noErr && typeCode [0] == OS.typeFSRef) {", "+\t\t\t\t\tbyte [] fsRef = new byte [actualSize [0]];", "+\t\t\t\t\tOS.memmove (fsRef, dataPtr, actualSize [0]);", "+\t\t\t\t\tint dirUrl = OS.CFURLCreateFromFSRef (OS.kCFAllocatorDefault, fsRef);", "+\t\t\t\t\tint dirString = OS.CFURLCopyFileSystemPath(dirUrl, OS.kCFURLPOSIXPathStyle);", "+\t\t\t\t\tOS.CFRelease (dirUrl);\t\t\t\t\t\t", "+\t\t\t\t\tint length = OS.CFStringGetLength (dirString);", "+\t\t\t\t\tchar [] buffer= new char [length];", "+\t\t\t\t\tCFRange range = new CFRange ();", "+\t\t\t\t\trange.length = length;", "+\t\t\t\t\tOS.CFStringGetCharacters (dirString, range, buffer);", "+\t\t\t\t\tOS.CFRelease (dirString);", "+\t\t\t\t\tString string = new String(buffer);", "+\t\t\t\t\tEvent event = new Event();", "+\t\t\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\t\t\tevent.text = string;", "+\t\t\t\t\tpostEvent(event);", "+\t\t\t\t}", "+\t\t\t\tOS.DisposePtr (dataPtr);", "+\t\t    }", "+\t\t    OS.AEDisposeDesc(docList);", "+\t\t\tbreak;", "+\t\tcase OS.kAEQuitApplication:", "+\t\t\tif (!disposing) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tsendEvent (SWT.Close, event);", "+\t\t\t\tif (event.doit) {", "+\t\t\t\t\tdispose ();", "+\t\t\t\t\t/*", "+\t\t\t\t\t* When the application is closing, no SWT program can continue", "+\t\t\t\t\t* to run.  In order to avoid running code after the display has", "+\t\t\t\t\t* been disposed, exit from Java.", "+\t\t\t\t\t*/", "+\t\t\t\t\t/* This code is intentionally commented */", "+\t\t//\t\t\tSystem.exit (0);", "+\t\t\t\t} else {", "+\t\t\t\t\treturn OS.userCanceledErr;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b718864c04908227cc77743a8f8f9e63", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c75fa2aaa81cd96400f0b4207d26c662b67c5bce", "commitAfterChange": "68dd096752e238c658788f5395a8c9f209d457e7", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "  int styleSetProc (int gobject, int arg1, int user_data)", "signatureAfterChange": "  int signalProc (int gobject, int arg1, int user_data)", "diff": ["-int /*long*/ styleSetProc (int /*long*/ gobject, int /*long*/ arg1, int /*long*/ user_data) {", "-\tsettingsChanged = true;", "+int /*long*/ signalProc (int /*long*/ gobject, int /*long*/ arg1, int /*long*/ user_data) {", "+\tswitch(user_data) {", "+\t\tcase STYLE_SET:", "+\t\t\tsettingsChanged = true;", "+\t\t\tbreak;", "+\t\tcase PROPERTY_NOTIFY:", "+\t\t\tGdkEventProperty gdkEvent = new GdkEventProperty ();", "+\t\t\tOS.memmove (gdkEvent, arg1);", "+\t\t\tif (gdkEvent.type == OS.GDK_PROPERTY_NOTIFY) {", "+\t\t\t\tbyte[] name = Converter.wcsToMbcs (null, \"org.eclipse.swt.filePath.message\", true); //$NON-NLS-1$", "+\t\t\t\tint /*long*/ atom = OS.gdk_x11_atom_to_xatom (OS.gdk_atom_intern (name, true));", "+\t\t\t\tif (atom == OS.gdk_x11_atom_to_xatom (gdkEvent.atom)) {", "+\t\t\t\t\tint /*long*/ xWindow = OS.gdk_x11_drawable_get_xid (OS.GTK_WIDGET_WINDOW( shellHandle));", "+\t\t\t\t\tint /*long*/ [] type = new int /*long*/ [1];", "+\t\t\t\t\tint /*long*/ [] format = new int /*long*/ [1];", "+\t\t\t\t\tlong [] nitems = new long [1];", "+\t\t\t\t\tlong [] bytes_after = new long [1];", "+\t\t\t\t\tint /*long*/ [] data = new int /*long*/ [1];", "+\t\t\t\t\tOS.XGetWindowProperty (OS.GDK_DISPLAY (), xWindow, atom, 0l, -1l, true, OS.AnyPropertyType,", "+\t\t\t\t\t\t\ttype, format, nitems, bytes_after, data);", "+\t\t\t\t\t", "+\t\t\t\t\tif (nitems [0] > 0) {", "+\t\t\t\t\t\tbyte [] buffer = new byte [(int)/*64*/nitems [0]];", "+\t\t\t\t\t\tOS.memmove(buffer, data [0], buffer.length);", "+\t\t\t\t\t\tOS.XFree (data [0]);", "+\t\t\t\t\t\tchar[] chars = Converter.mbcsToWcs(null, buffer);", "+\t\t\t\t\t\tString string = new String (chars);", "+\t\t\t\t\t\t", "+\t\t\t\t\t\tint lastIndex = 0;", "+\t\t\t\t\t\tint index = string.indexOf (':');", "+\t\t\t\t\t\twhile (index != -1) {", "+\t\t\t\t\t\t\tString file = string.substring (lastIndex, index);", "+\t\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\t\tevent.type = SWT.OpenDoc;", "+\t\t\t\t\t\t\tevent.text = file;", "+\t\t\t\t\t\t\tpostEvent (event);", "+\t\t\t\t\t\t\tlastIndex = index+1;", "+\t\t\t\t\t\t\tindex = string.indexOf(':', lastIndex);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t}"]}], "num": 10315}