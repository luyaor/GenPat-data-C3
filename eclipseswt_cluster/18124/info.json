{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af0c08b807f5a0f8c9983cc6e4d1ffc9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ded444dc9e7d21ed68b2b0e48557b0d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "1c6100db3e7e2869dd9939a388c01ffe02266ae6", "commitAfterChange": "e6c08d3d67d466157d79d499808f7b1d4fa4d3e5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void relayout ()", "signatureAfterChange": "  void relayout ()", "diff": ["-\tboolean hasTextItems = false;", "+\tboolean hasText = false, hasImage = false;", "-\t\t\thasTextItems |= item.hasText;", "+\t\t\thasText |= item.text != null && item.text.length() > 0;", "+\t\t\thasImage |= item.image != null;", "-\tif (!hasTextItems) OS.gtk_toolbar_set_style (handle, OS.GTK_TOOLBAR_BOTH_HORIZ);", "+\tint type = OS.GTK_TOOLBAR_ICONS;", "+\tif (hasText && hasImage) {", "+\t\tif ((style & SWT.RIGHT) != 0) { ", "+\t\t\ttype = OS.GTK_TOOLBAR_BOTH_HORIZ;", "+\t\t} else {", "+\t\t\ttype = OS.GTK_TOOLBAR_BOTH;", "+\t\t}", "+\t} else if (hasText) {", "+\t\ttype = OS.GTK_TOOLBAR_TEXT;", "+\t} else if (hasImage) {", "+\t\ttype = OS.GTK_TOOLBAR_ICONS;", "+\t}", "+\tOS.gtk_toolbar_set_style (handle, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e564223dcb103a85b1460372e07fb94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "25c61b73dde0c1ccca89139e198082a546ace6a8", "commitAfterChange": "46a68f0d1948c7c620d9cddf667d96000d831d27", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t\tint align = OS.NSLeftTextAlignment;", "+\t\tif ((style & SWT.CENTER) != 0) align = OS.NSCenterTextAlignment;", "+\t\tif ((style & SWT.RIGHT) != 0) align = OS.NSRightTextAlignment;", "+\t\twidget.setAlignment(align);", "-\t\t", "+\t\tint align = OS.NSLeftTextAlignment;", "+\t\tif ((style & SWT.CENTER) != 0) align = OS.NSCenterTextAlignment;", "+\t\tif ((style & SWT.RIGHT) != 0) align = OS.NSRightTextAlignment;", "+\t\twidget.setAlignment(align);", "+", "-\t", "-//\tint [] outControl = new int [1];", "-//\tif ((style & SWT.MULTI) != 0 || (style & (SWT.BORDER | SWT.SEARCH)) == 0) {", "-//\t\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) != 0) {", "-//\t\t\tint options = 0;", "-//\t\t\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) == (SWT.H_SCROLL | SWT.V_SCROLL)) options |= OS.kHIScrollViewOptionsAllowGrow;", "-//\t\t\tif ((style & SWT.H_SCROLL) != 0) options |= OS.kHIScrollViewOptionsHorizScroll;", "-//\t\t\tif ((style & SWT.V_SCROLL) != 0) options |= OS.kHIScrollViewOptionsVertScroll;", "-//\t\t\tOS.HIScrollViewCreate (options, outControl);", "-//\t\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "-//\t\t\tscrolledHandle = outControl [0];", "-//\t\t\tOS.HIViewSetVisible (scrolledHandle, true);", "-//\t\t}", "-//\t\tint iFrameOptions = OS.kTXNDontDrawCaretWhenInactiveMask | OS.kTXNMonostyledTextMask;", "-//\t\t/*", "-//\t\t* Bug in the Macintosh.  For some reason a single line text does not", "-//\t\t* display properly when it is right aligned.  The fix is to use a", "-//\t\t* multi line text when right aligned.", "-//\t\t*/", "-//\t\tif ((style & SWT.RIGHT) == 0) {", "-//\t\t\tif ((style & SWT.SINGLE) != 0) iFrameOptions |= OS.kTXNSingleLineOnlyMask;", "-//\t\t}", "-//\t\tif ((style & SWT.WRAP) != 0) iFrameOptions |= OS.kTXNAlwaysWrapAtViewEdgeMask;", "-//\t\tOS.HITextViewCreate (null, 0, iFrameOptions, outControl);", "-//\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "-//\t\thandle = outControl [0];", "-//\t\tOS.HIViewSetVisible (handle, true);", "-//\t\tif ((style & SWT.MULTI) != 0 && (style & SWT.BORDER) != 0) {", "-//\t\t\tint features = OS.kControlSupportsEmbedding;", "-//\t\t\tOS.CreateUserPaneControl (0, null, features, outControl);", "-//\t\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "-//\t\t\tframeHandle = outControl [0];\t\t\t", "-//\t\t}", "-//\t\ttxnObject = OS.HITextViewGetTXNObject (handle);\t\t\t", "-//\t\tint ptr = OS.NewPtr (Rect.sizeof);", "-//\t\tRect rect = (style & SWT.SINGLE) != 0 ? inset () : new Rect ();", "-//\t\tOS.memmove (ptr, rect, Rect.sizeof);", "-//\t\tint [] tags = new int [] {", "-//\t\t\tOS.kTXNDisableDragAndDropTag,", "-//\t\t\tOS.kTXNDoFontSubstitution,", "-//\t\t\tOS.kTXNIOPrivilegesTag,", "-//\t\t\tOS.kTXNMarginsTag,", "-//\t\t\tOS.kTXNJustificationTag,", "-//\t\t};", "-//\t\tint just = OS.kTXNFlushLeft;", "-//\t\tif ((style & SWT.CENTER) != 0) just = OS.kTXNCenter;", "-//\t\tif ((style & SWT.RIGHT) != 0) just = OS.kTXNFlushRight;", "-//\t\tint [] datas = new int [] {", "-//\t\t\t1,", "-//\t\t\t1,", "-//\t\t\t(style & SWT.READ_ONLY) != 0 ? 1 : 0,", "-//\t\t\tptr,", "-//\t\t\tjust,", "-//\t\t};", "-//\t\tOS.TXNSetTXNObjectControls (txnObject, false, tags.length, tags, datas);", "-//\t\tOS.DisposePtr (ptr);", "-//\t} else {", "-//\t\tif ((style & SWT.SEARCH) != 0) {", "-//\t\t\tint attributes = (style & SWT.CANCEL) != 0 ? OS.kHISearchFieldAttributesCancel : 0;", "-//\t\t\tOS.HISearchFieldCreate (null, attributes, 0, 0, outControl);", "-//\t\t} else {", "-//\t\t\tint window = OS.GetControlOwner (parent.handle);", "-//\t\t\tOS.CreateEditUnicodeTextControl (window, null, 0, (style & SWT.PASSWORD) != 0, null, outControl);", "-//\t\t}", "-//\t\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "-//\t\thandle = outControl [0];", "-//\t\tif ((style & SWT.SEARCH) != 0 && display.smallFonts) {", "-//\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlSizeTag, 2, new short [] {OS.kControlSizeSmall});", "-//\t\t}", "-//\t\t/*", "-//\t\t* Bug in the Macintosh.  For some reason a single line text does not", "-//\t\t* display selection properly when it is right aligned.  The fix is to use a", "-//\t\t* multi line text when right aligned.", "-//\t\t*/", "-//\t\tif ((style & SWT.RIGHT) == 0) {", "-//\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextSingleLineTag, 1, new byte [] {1});", "-//\t\t}", "-//\t\tif ((style & SWT.READ_ONLY) != 0) {", "-//\t\t\tOS.SetControlData (handle, OS.kControlEntireControl, OS.kControlEditTextLockedTag, 1, new byte [] {1});", "-//\t\t}", "-//\t\tif ((style & (SWT.RIGHT | SWT.CENTER)) != 0) {", "-//\t\t\tControlFontStyleRec fontStyle = new ControlFontStyleRec ();", "-//\t\t\tfontStyle.flags |= OS.kControlUseJustMask;", "-//\t\t\tif ((style & SWT.CENTER) != 0) fontStyle.just = OS.teJustCenter;", "-//\t\t\tif ((style & SWT.RIGHT) != 0) fontStyle.just = OS.teJustRight;", "-//\t\t\tOS.SetControlFontStyle (handle, fontStyle);", "-//\t\t}", "-//\t\tif ((style & SWT.SEARCH) != 0) {", "-//\t\t\tOS.HIViewSetVisible (handle, true);", "-//\t\t}", "-//\t}"]}], "num": 18124}