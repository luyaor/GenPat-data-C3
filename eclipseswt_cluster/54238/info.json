{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d3136c4f68607fe5947a81933ac42a7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31e7b2354503f7ab2e8f9df7ec7b55a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "b1f09c26e574b5fde552f7aad599da1262fca393", "commitAfterChange": "b888a62863473d39a883fc24a28bb3cf49caad76", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns ()", "signatureAfterChange": "  void computeRuns ()", "diff": ["+\t\t\t\t\trun.baseline = 0;", "+\t\t\t\t\trun.baseline = run.width = 0;", "+\t\t\t\t\trun.baseline = run.width = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5352a1e0b421d11acf57a696e2d75bbc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "59af51eb18934a9097a9f535e4d54e66aef53574", "commitAfterChange": "4a0a013600f6e8c588086d0d3817136ed35487ab", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  int kEventControlContextualMenuClick (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlContextualMenuClick (int nextHandler, int theEvent, int userData)", "diff": ["-\tint x, y;", "-\tRect rect = new Rect ();", "-\tint window = OS.GetControlOwner (handle);", "-\tif (OS.HIVIEW) {", "-\t\tCGPoint pt = new CGPoint ();", "-\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "-\t\tx = (int) pt.x;", "-\t\ty = (int) pt.y;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "-\t} else {", "-\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "-\t\tx = pt.h;", "-\t\ty = pt.v;", "-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t}", "-\tx += rect.left;", "-\ty += rect.top;", "-\tEvent event = new Event ();", "-\tevent.x = x;", "-\tevent.y = y;", "-\tsendEvent (SWT.MenuDetect, event);", "-\tif (event.doit) {", "-\t\tif (menu != null && !menu.isDisposed ()) {", "-\t\t\tif (event.x != x || event.y != y) {", "-\t\t\t\tmenu.setLocation (event.x, event.y);", "+\tint [] theControl = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeControlRef, null, 4, null, theControl);", "+\tif (display.getWidget (theControl [0]) == this) {", "+\t\tint x, y;", "+\t\tRect rect = new Rect ();", "+\t\tint window = OS.GetControlOwner (handle);", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\t\tx = (int) pt.x;", "+\t\t\ty = (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "+\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "+\t\t\tx = pt.h;", "+\t\t\ty = pt.v;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}", "+\t\tx += rect.left;", "+\t\ty += rect.top;", "+\t\tEvent event = new Event ();", "+\t\tevent.x = x;", "+\t\tevent.y = y;", "+\t\tsendEvent (SWT.MenuDetect, event);", "+\t\tif (event.doit) {", "+\t\t\tif (menu != null && !menu.isDisposed ()) {", "+\t\t\t\tif (event.x != x || event.y != y) {", "+\t\t\t\t\tmenu.setLocation (event.x, event.y);", "+\t\t\t\t}", "+\t\t\t\tmenu.setVisible (true);", "-\t\t\tmenu.setVisible (true);", "-\treturn OS.noErr;", "+\treturn OS.eventNotHandledErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abb28337bd3243987e117a8cd33a2a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MacUtil.java", "commitBeforeChange": "8d6f036a83cd5cc84341092bbd88ae262c33e48e", "commitAfterChange": "fcbb9a83ad12a942385ad64c110d623b39d7af7a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tstatic int[] getDataBrowserItems(int dataBrowserHandle, int containerID, int state, boolean recurse)", "signatureAfterChange": " \t \tstatic int[] getDataBrowserItems(int dataBrowserHandle, int containerID, int state, boolean recurse)", "diff": ["-\t\tint resultHandle= 0;", "-\t\ttry {", "-\t\t\tresultHandle= OS.NewHandle(0);", "-\t\t\tif (OS.GetDataBrowserItems(dataBrowserHandle, containerID, recurse, state, resultHandle) == OS.noErr) {", "-\t\t\t\tint itemCount= OS.GetHandleSize(resultHandle) / 4;\t// sizeof(int)", "-\t\t\t\tif (itemCount > 0) {\t", "-\t\t\t\t\tint resultIDs[]= new int[itemCount];", "-\t\t\t\t\tOS.getHandleData(resultHandle, resultIDs);", "-\t\t\t\t\treturn resultIDs;", "-\t\t\t\t}", "+\t\tint[] resultIDs= new int[0];", "+\t\tint resultHandle= OS.NewHandle(0);", "+\t\tif (OS.GetDataBrowserItems(dataBrowserHandle, containerID, recurse, state, resultHandle) == OS.noErr) {", "+\t\t\tint itemCount= OS.GetHandleSize(resultHandle) / 4;\t// sizeof(int)", "+\t\t\tif (itemCount > 0) {", "+\t\t\t\tresultIDs= new int[itemCount];", "+\t\t\t\tOS.HLock(resultHandle);", "+\t\t\t\tint[] ptr= new int[1];", "+\t\t\t\tOS.memcpy(ptr, resultHandle, 4);", "+\t\t\t\tOS.memcpy(resultIDs, ptr[0], itemCount*4);", "+\t\t\t\tOS.HUnlock(resultHandle);", "-\t\t} finally {", "-\t\t\tOS.DisposeHandle(resultHandle);", "-\t\treturn new int[0];", "+\t\tOS.DisposeHandle(resultHandle);", "+\t\treturn resultIDs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aff408094fbfc5b736841fff57e7f11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "8d6f036a83cd5cc84341092bbd88ae262c33e48e", "commitAfterChange": "fcbb9a83ad12a942385ad64c110d623b39d7af7a", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t\t \tprivate String getTXNText(int start, int end)", "signatureAfterChange": " \t\t \tprivate String getTXNText(int start, int end)", "diff": ["+\t\tint[] ptr= new int[1];", "+\t\tOS.HLock(dataHandle[0]);", "+\t\tOS.memcpy(ptr, dataHandle[0], 4);", "-\t\tOS.getHandleData(dataHandle[0], chars);", "+\t\tOS.memcpy(chars, ptr[0], length);", "+\t\tOS.HUnlock(dataHandle[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99e54fef2e3634d55c7f3a01df429a25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "7295654de663b127667b1f08deccafc682bb62a1", "commitAfterChange": "cc401b3aae2fa7c5248b2befaf4c524376cff313", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  public void update ()", "signatureAfterChange": "  public void update ()", "diff": ["-\t\tOS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());", "+\t\t/*", "+\t\t* Bug in the Macintosh.  For some reason, when a hierarchy of", "+\t\t* windows is disposed from kEventWindowClose, despite the fact", "+\t\t* that DisposeWindow() has been called, the window is not", "+\t\t* disposed and there are outstandings kEventWindowUpdate events", "+\t\t* in the event queue.  Dispatching these events will cause a", "+\t\t* segment fault.  The fix is to dispatch events to visible", "+\t\t* window only.", "+\t\t*/", "+\t\tint [] theWindow = new int [1];", "+\t\tOS.GetEventParameter (outEvent [0], OS.kEventParamDirectObject, OS.typeWindowRef, null, 4, null, theWindow);", "+\t\tif (OS.IsWindowVisible (theWindow [0])) OS.SendEventToEventTarget (outEvent [0], OS.GetEventDispatcherTarget ());"]}], "num": 54238}