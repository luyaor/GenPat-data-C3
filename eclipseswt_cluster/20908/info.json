{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c886a4c7576f468bc8366d04bdb40f8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31636095bb18f35e97200c706eecb800", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "613386a136aed7f7be85acd46a7cab744bbae94d", "commitAfterChange": "e144c0287be1ac0d08cd8310d65398d20b566a1f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r String getSelectedFoundry()", "signatureAfterChange": "\r \r void showBusyWhile (Display display, Runnable runnable)", "diff": ["- */\r", "-String getSelectedFoundry() {\r", "-\tString translatedFaceName = getFaceNameCombo().getText();\r", "-\tString foundry = new String();\r", "-\tint foundryIndex = translatedFaceName.indexOf(\"(\");\r", "-\r", "-\tif (foundryIndex != -1) {\r", "-\t\tfoundry = translatedFaceName.substring(\r", "-\t\t\tfoundryIndex + 1, translatedFaceName.length()-1);\r", "-\t}\r", "-\treturn foundry;\r", "-}\r", "+\r", "+void showBusyWhile (Display display, Runnable runnable) {\r", "+\tInteger busyId = new Integer (nextBusyId);\r", "+\tnextBusyId++;\r", "+\tCursor cursor = new Cursor (display, SWT.CURSOR_WAIT);\r", "+\tShell[] shells = display.getShells ();\r", "+\tfor (int i = 0; i < shells.length; i++) {\r", "+\t\tInteger id = (Integer) shells[i].getData (BUSYID_NAME);\r", "+\t\tif (id == null) {\r", "+\t\t\tshells[i].setCursor (cursor);\r", "+\t\t\tshells[i].setData (BUSYID_NAME, busyId);\r", "+\t\t}\r", "+\t}\r", "+\r", "+\ttry {\r", "+\t\trunnable.run();\r", "+\t} finally {\r", "+\t\tshells = display.getShells();\r", "+\t\tfor (int i = 0; i < shells.length; i++) {\r", "+\t\t\tInteger id = (Integer) shells[i].getData (BUSYID_NAME);\r", "+\t\t\tif (id == busyId) {\r", "+\t\t\t\tshells[i].setCursor (null);\r", "+\t\t\t\tshells[i].setData (BUSYID_NAME, null);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\tif (cursor != null && !cursor.isDisposed ()) {\r", "+\t\t\tcursor.dispose ();\r", "+\t\t}\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5eaeaf2e4092dd4bc242951e348952", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 111, "signatureBeforeChange": " void resize(Event event)", "signatureAfterChange": " void updateHorizontalBar ()", "diff": ["- */", "-void resize(Event event) {", "-\tTableColumn fillColumn = getFillColumn();", "-\tRectangle fillColumnBounds;", "-", "-\tsuper.resize(event);", "-\t// the x position may change in super.resize.", "-\t// get the column bounds after calling super.resize. Fixes 1G7ALGG", "-\tfillColumnBounds = fillColumn.getBounds();", "-\tfillColumnBounds.width = Math.max(0, getClientArea().width - getContentWidth());", "-\tfillColumn.setBounds(fillColumnBounds);", "-\tresizeHeader();", "-}", "+void updateHorizontalBar () {", "+\tScrollBar hBar = getHorizontalBar ();", "+\tint maxX = 0;", "+\tif (columns.length > 0) {", "+\t\tfor (int i = 0; i < columns.length; i++) {", "+\t\t\tmaxX += columns [i].width;", "+\t\t}", "+\t} else {", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tRectangle itemBounds = items [i].getBounds ();", "+\t\t\tmaxX = Math.max (maxX, itemBounds.x + itemBounds.width + horizontalOffset);", "+\t", "+\tint clientWidth = getClientArea ().width;", "+\tif (maxX != hBar.getMaximum ()) {", "+\t\thBar.setMaximum (maxX);", "+\t}", "+\tint thumb = Math.min (clientWidth, maxX);", "+\tif (thumb != hBar.getThumb ()) {", "+\t\thBar.setThumb (thumb);", "+\t\thBar.setPageIncrement (thumb);", "+\t}", "+\thBar.setVisible (clientWidth < maxX);", "+\t", "+\t/* reclaim any space now left on the right */", "+\tif (maxX < horizontalOffset + thumb) {", "+\t\thorizontalOffset = maxX - thumb;", "+\t\thBar.setSelection (horizontalOffset);", "+\t\tredraw ();", "+\t} else {", "+\t\tint selection = hBar.getSelection ();", "+\t\tif (selection != horizontalOffset) {", "+\t\t\thorizontalOffset = selection;", "+\t\t\tredraw ();", "+\t\t}", "+\t}"]}], "num": 20908}