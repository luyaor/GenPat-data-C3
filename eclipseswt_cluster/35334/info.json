{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "002c347afdc93cf3a3fab07547d73fd0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f736d5593e7a725ace9eff7070effb9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "b40aaea056def887e2580119f19385d674e3e5e8", "commitAfterChange": "ec0fd72dfafa3580c8b3685a082cc525b5e48635", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tint atkText_get_text_after_offset (int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_after_offset (int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["-\t\t\t\t\tint wordStart1 = getIndexOfChar (text, \" !?.\\n\", offset);", "+\t\t\t\t\tint wordStart1 = nextIndexOfChar (text, \" !?.\\n\", offset);", "-\t\t\t\t\twhile (wordStart1 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (wordStart1); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\twordStart1++;", "-\t\t\t\t\t}", "+\t\t\t\t\twordStart1 = nextIndexOfNotChar (text, \" !?.\\n\", wordStart1);", "-\t\t\t\t\tint wordStart2 = getIndexOfChar (text, \" !?.\\n\", wordStart1);", "+\t\t\t\t\tint wordStart2 = nextIndexOfChar (text, \" !?.\\n\", wordStart1);", "-\t\t\t\t\twhile (wordStart2 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (wordStart2); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\twordStart2++;", "-\t\t\t\t\t}", "-\t\t\t\t\tendBounds = wordStart2;", "+\t\t\t\t\tendBounds = nextIndexOfNotChar (text, \" !?.\\n\", wordStart2);", "-\t\t\t\t\tint wordEnd1 = getIndexOfChar (text, \" !?.\\n\", offset);", "+\t\t\t\t\tint wordEnd1 = nextIndexOfChar (text, \" !?.\\n\", offset);", "-\t\t\t\t\tstartBounds = wordEnd1;", "-\t\t\t\t\tint wordEnd2 = wordEnd1;", "-\t\t\t\t\twhile (wordEnd2 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (wordEnd2); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\twordEnd2++;", "+\t\t\t\t\twordEnd1 = nextIndexOfNotChar (text, \"!?.\", wordEnd1);", "+\t\t\t\t\tif (wordEnd1 == length) {", "+\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tstartBounds = wordEnd1;", "+\t\t\t\t\tint wordEnd2 = nextIndexOfNotChar (text, \" \\n\", wordEnd1);", "+\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\twordEnd2 = nextIndexOfChar (text, \" !?.\\n\", wordEnd2);", "+\t\t\t\t\tif (wordEnd2 == -1) {", "-\t\t\t\t\twordEnd2 = getIndexOfChar (text, \" !?.\\n\", wordEnd2);", "-\t\t\t\t\tif (wordEnd2 == -1) {", "-\t\t\t\t\t\tendBounds = length;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tendBounds = wordEnd2;", "-\t\t\t\t\t}", "+\t\t\t\t\tendBounds = nextIndexOfNotChar (text, \"!?.\", wordEnd2);", "-", "-\t\t\t\t\tint sentenceStart1 = getIndexOfChar (text, \"!?.\", offset);", "+\t\t\t\t\tint sentenceStart1 = nextIndexOfChar (text, \"!?.\", offset);", "-\t\t\t\t\twhile (sentenceStart1 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (sentenceStart1); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\tsentenceStart1++;", "-\t\t\t\t\t}", "+\t\t\t\t\tsentenceStart1 = nextIndexOfNotChar (text, \" !?.\\n\", sentenceStart1);", "-\t\t\t\t\tint sentenceStart2 = getIndexOfChar (text, \"!?.\", sentenceStart1);", "+\t\t\t\t\tint sentenceStart2 = nextIndexOfChar (text, \"!?.\", sentenceStart1);", "-\t\t\t\t\twhile (sentenceStart2 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (sentenceStart2); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\tsentenceStart2++;", "-\t\t\t\t\t}", "-\t\t\t\t\tendBounds = sentenceStart2;", "+\t\t\t\t\tendBounds = nextIndexOfNotChar (text, \" !?.\\n\", sentenceStart2);", "-", "-\t\t\t\t\tint sentenceEnd1 = getIndexOfChar (text, \"!?.\", offset);", "+\t\t\t\t\tint sentenceEnd1 = nextIndexOfChar (text, \"!?.\", offset);", "-\t\t\t\t\tstartBounds = sentenceEnd1;", "-\t\t\t\t\tint sentenceEnd2 = sentenceEnd1;", "-\t\t\t\t\twhile (sentenceEnd2 < length) {", "-\t\t\t\t\t\tchar current = text.charAt (sentenceEnd2); ", "-\t\t\t\t\t\tif (current != ' ' && current != '!' && current != '?' && current != '.' && current != '\\n') break;", "-\t\t\t\t\t\tsentenceEnd2++;", "+\t\t\t\t\tsentenceEnd1 = nextIndexOfNotChar (text, \"!?.\", sentenceEnd1);", "+\t\t\t\t\tif (sentenceEnd1 == length) {", "+\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tstartBounds = sentenceEnd1;", "+\t\t\t\t\tint sentenceEnd2 = nextIndexOfNotChar (text, \" \\n\", sentenceEnd1);", "+\t\t\t\t\t\tstartBounds = endBounds = length;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tsentenceEnd2 = nextIndexOfChar (text, \"!?.\", sentenceEnd2);", "+\t\t\t\t\tif (sentenceEnd2 == -1) {", "-\t\t\t\t\tsentenceEnd2 = getIndexOfChar (text, \"!?.\", sentenceEnd2);", "-\t\t\t\t\tif (sentenceEnd2 == -1) {", "-\t\t\t\t\t\tendBounds = length;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tendBounds = sentenceEnd2;", "-\t\t\t\t\t}", "+\t\t\t\t\tendBounds = nextIndexOfNotChar (text, \"!?.\", sentenceEnd2);", "-", "-\t\t\t\t\twhile (lineStart1 < length) {", "-\t\t\t\t\t\tif (text.charAt (lineStart1) != '\\n') break;", "-\t\t\t\t\t\tlineStart1++;", "-\t\t\t\t\t}", "+\t\t\t\t\tlineStart1 = nextIndexOfNotChar (text, \"\\n\", lineStart1);", "-\t\t\t\t\twhile (lineStart2 < length) {", "-\t\t\t\t\t\tif (text.charAt (lineStart2) != '\\n') break;", "-\t\t\t\t\t\tlineStart2++;", "-\t\t\t\t\t}", "+\t\t\t\t\tlineStart2 = nextIndexOfNotChar (text, \"\\n\", lineStart2);", "-\t\t\t\t\tint lineEnd1 = text.indexOf ('\\n', offset);", "+\t\t\t\t\tint lineEnd1 = nextIndexOfChar (text, \"\\n\", offset);", "-\t\t\t\t\tint lineEnd2 = lineEnd1;", "-\t\t\t\t\twhile (lineEnd2 < length) {", "-\t\t\t\t\t\tif (text.charAt (lineEnd2) != '\\n') break;", "-\t\t\t\t\t\tlineEnd2++;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (lineEnd2 == length) {", "+\t\t\t\t\tif (startBounds == length) {", "-\t\t\t\t\tlineEnd2 = text.indexOf ('\\n', lineEnd2);", "+\t\t\t\t\tint lineEnd2 = nextIndexOfChar (text, \"\\n\", lineEnd1 + 1);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tendBounds = lineEnd2;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tendBounds = lineEnd2;", "-//\t\t\tOS.memmove (start_offset, new int[] {startBounds}, 4);", "-//\t\t\tOS.memmove (end_offset, new int[] {endBounds}, 4);", "+\t\t\tOS.memmove (start_offset, new int[] {startBounds}, 4);", "+\t\t\tOS.memmove (end_offset, new int[] {endBounds}, 4);", "-System.out.println(\"result: \\\"\" + text + \"\\\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac59bbf5de9a8807129266faa130fae5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGFileFormat.java", "commitBeforeChange": "1e1ccbf61bda268533d4d88e38bb0e1f77b71b26", "commitAfterChange": "54678335fd7dde7fcf31de28ef4e8a4cec037256", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": " void forwardDCT(int[] dataUnit)", "signatureAfterChange": " void forwardDCT(int[] dataUnit)", "diff": ["-\t\tint scaleFactor1 = ExtendTest[11];", "-\t\tint scaleFactor2 = ExtendTest[12];", "-\t\tint n = z1 + (tmp13 * FIX_0_765366865) + scaleFactor1;", "-\t\tdataUnit[rIndex + 2] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 2]--;", "-\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + scaleFactor1;", "- \t\tdataUnit[rIndex + 6] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 6]--;", "+\t\tint n = z1 + (tmp13 * FIX_0_765366865) + 1024;", "+\t\tdataUnit[rIndex + 2] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 2]--;", "+\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + 1024;", "+ \t\tdataUnit[rIndex + 6] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 6]--;", "-\t\ttmp4 = tmp4 * FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "-\t\ttmp5 = tmp5 * FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "-\t\ttmp6 = tmp6 * FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "-\t\ttmp7 = tmp7 * FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "-\t\tz1 = z1 * (0 - FIX_0_899976223);\t// sqrt(2) * (c7-c3)", "-\t\tz2 = z2 * (0 - FIX_2_562915447);\t// sqrt(2) * (-c1-c3)", "-\t\tz3 = z3 * (0 - FIX_1_961570560);\t// sqrt(2) * (-c3-c5)", "-\t\tz4 = z4 * (0 - FIX_0_390180644);\t// sqrt(2) * (c5-c3)", "+\t\ttmp4 *= FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "+\t\ttmp5 *= FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "+\t\ttmp6 *= FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "+\t\ttmp7 *= FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "+\t\tz1 *= 0 - FIX_0_899976223;\t// sqrt(2) * (c7-c3)", "+\t\tz2 *= 0 - FIX_2_562915447;\t// sqrt(2) * (-c1-c3)", "+\t\tz3 *= 0 - FIX_1_961570560;\t// sqrt(2) * (-c3-c5)", "+\t\tz4 *= 0 - FIX_0_390180644;\t// sqrt(2) * (c5-c3)", "-\t\tz3 = z3 + z5;", "-\t\tz4 = z4 + z5;", "+\t\tz3 += z5;", "+\t\tz4 += z5;", "-\t\tn = tmp4 + z1 + z3 + scaleFactor1;", "-\t\tdataUnit[rIndex + 7] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 7]--;", "-\t\tn = tmp5 + z2 + z4 + scaleFactor1;", "-\t\tdataUnit[rIndex + 5] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 5]--;", "-\t\tn = tmp6 + z2 + z3 + scaleFactor1;", "-\t\tdataUnit[rIndex + 3] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 3]--;", "-\t\tn = tmp7 + z1 + z4 + scaleFactor1;", "-\t\tdataUnit[rIndex + 1] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[rIndex + 1]--;", "+\t\tn = tmp4 + z1 + z3 + 1024;", "+\t\tdataUnit[rIndex + 7] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 7]--;", "+\t\tn = tmp5 + z2 + z4 + 1024;", "+\t\tdataUnit[rIndex + 5] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 5]--;", "+\t\tn = tmp6 + z2 + z3 + 1024;", "+\t\tdataUnit[rIndex + 3] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 3]--;", "+\t\tn = tmp7 + z1 + z4 + 1024;", "+\t\tdataUnit[rIndex + 1] = n >> 11;", "+\t\tif ((n < 0) && ((n & 0x07FF) != 0)) dataUnit[rIndex + 1]--;", "-\t\tint scaleFactor1 = ExtendTest[5];", "-\t\tint scaleFactor2 = ExtendTest[6];", "-\t\tint n = tmp10 + tmp11 + scaleFactor1;", "-\t\tdataUnit[c0] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c0]--;", "-\t\tn = tmp10 - tmp11 + scaleFactor1;", "-\t\tdataUnit[c4] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c4]--;", "+\t\tint n = tmp10 + tmp11 + 16;", "+\t\tdataUnit[c0] = n >> 5;", "+\t\tif ((n < 0) && ((n & 0x1F) != 0)) dataUnit[c0]--;", "+\t\tn = tmp10 - tmp11 + 16;", "+\t\tdataUnit[c4] = n >> 5;", "+\t\tif ((n < 0) && ((n & 0x1F) != 0)) dataUnit[c4]--;", "-\t\tscaleFactor1 = ExtendTest[18];", "-\t\tscaleFactor2 = ExtendTest[19];", "-\t\tn = z1 + (tmp13 * FIX_0_765366865) + scaleFactor1;", "-\t\tdataUnit[c2] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c2]--;", "-\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + scaleFactor1;", "-\t\tdataUnit[c6] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c6]--;", "+\t\tn = z1 + (tmp13 * FIX_0_765366865) + 131072;", "+\t\tdataUnit[c2] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c2]--;", "+\t\tn = z1 + (tmp12 * (0 - FIX_1_847759065)) + 131072;", "+\t\tdataUnit[c6] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c6]--;", "-\t\ttmp4 = tmp4 * FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "-\t\ttmp5 = tmp5 * FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "-\t\ttmp6 = tmp6 * FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "-\t\ttmp7 = tmp7 * FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "-\t\tz1 = z1 * (0 - FIX_0_899976223);\t// sqrt(2) * (c7-c3)", "-\t\tz2 = z2 * (0 - FIX_2_562915447);\t// sqrt(2) * (-c1-c3)", "-\t\tz3 = z3 * (0 - FIX_1_961570560);\t// sqrt(2) * (-c3-c5)", "-\t\tz4 = z4 * (0 - FIX_0_390180644);\t// sqrt(2) * (c5-c3)", "+\t\ttmp4 *= FIX_0_298631336;\t// sqrt(2) * (-c1+c3+c5-c7)", "+\t\ttmp5 *= FIX_2_053119869;\t// sqrt(2) * ( c1+c3-c5+c7)", "+\t\ttmp6 *= FIX_3_072711026;\t// sqrt(2) * ( c1+c3+c5-c7)", "+\t\ttmp7 *= FIX_1_501321110;\t// sqrt(2) * ( c1+c3-c5-c7)", "+\t\tz1 *= 0 - FIX_0_899976223;\t// sqrt(2) * (c7-c3)", "+\t\tz2 *= 0 - FIX_2_562915447;\t// sqrt(2) * (-c1-c3)", "+\t\tz3 *= 0 - FIX_1_961570560;\t// sqrt(2) * (-c3-c5)", "+\t\tz4 *= 0 - FIX_0_390180644;\t// sqrt(2) * (c5-c3)", "-\t\tz3 = z3 + z5;", "-\t\tz4 = z4 + z5;", "+\t\tz3 += z5;", "+\t\tz4 += z5;", "-\t\tn = tmp4 + z1 + z3 + scaleFactor1;", "-\t\tdataUnit[c7] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c7]--;", "-\t\tn = tmp5 + z2 + z4 + scaleFactor1;", "-\t\tdataUnit[c5] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c5]--;", "-\t\tn = tmp6 + z2 + z3 + scaleFactor1;", "-\t\tdataUnit[c3] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c3]--;", "-\t\tn = tmp7 + z1 + z4 + scaleFactor1;", "-\t\tdataUnit[c1] = n / scaleFactor2;", "-\t\tif ((n < 0) && (n % scaleFactor2 != 0)) dataUnit[c1]--;", "+\t\tn = tmp4 + z1 + z3 + 131072;", "+\t\tdataUnit[c7] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c7]--;", "+\t\tn = tmp5 + z2 + z4 + 131072;", "+\t\tdataUnit[c5] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c5]--;", "+\t\tn = tmp6 + z2 + z3 + 131072;", "+\t\tdataUnit[c3] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c3]--;", "+\t\tn = tmp7 + z1 + z4 + 131072;", "+\t\tdataUnit[c1] = n >> 18;", "+\t\tif ((n < 0) && ((n & 0x3FFFF) != 0)) dataUnit[c1]--;"]}], "num": 35334}