{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a8155af90ea9c0aab3ab2cb894cfe9b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d2575873649a1247e784cd189d69d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void setSelection (String [] items)", "signatureAfterChange": " public void setSelection (String [] items)", "diff": ["-    /* AW", "-\tif (items == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tString codePage = getCodePage ();", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tfor (int i=items.length-1; i>=0; --i) {", "-\t\t\tString string = items [i];", "-\t\t\tif (string != null) {", "-\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);", "-\t\t\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\t\t\tif (xmString != 0) {", "-\t\t\t\t\tint index = OS.XmListItemPos (handle, xmString);", "-\t\t\t\t\tif (index != 0) OS.XmListSelectPos (handle, index, false);", "-\t\t\t\t\tOS.XmStringFree (xmString);", "-\t\t\t\t\tif ((index != 0) && OS.XmListPosSelected (handle, index)) return;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tOS.XmListDeselectAllItems (handle);", "-\t\treturn;", "-\t}", "-\tOS.XmListDeselectAllItems (handle);", "-\tint length = 0;", "-\tint [] table = new int [items.length];", "-\tfor (int i=0; i<items.length; i++) {", "-\t\tString string = items [i];", "-\t\tif (string != null) {", "-\t\t\tbyte [] buffer = Converter.wcsToMbcs (codePage, string, true);", "-\t\t\tint xmString = OS.XmStringCreateLocalized (buffer);", "-\t\t\tif (xmString != 0) table [length++] = xmString;", "-\t\t}", "-\t}", "-\tint ptr = OS.XtMalloc (length * 4);", "-\tOS.memmove (ptr, table, length * 4);", "-\tint [] argList = {OS.XmNselectedItems, ptr, OS.XmNselectedItemCount, length};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\tfor (int i=0; i<length; i++) OS.XmStringFree (table [i]);", "-\tOS.XtFree (ptr);", "-\tOS.XmListUpdateSelectedList (handle);", "-    */", "-\tint count= items.length;", "-\tint[] ids= new int[count];", "-\tfor (int i=0; i<count; i++) {", "-\t\tint id= get(items [i]);", "-\t\tids[i]= id;", "-\t}", "+\tint[] ids= getIds(items);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ca080fe2c10ea45f37b8ab30a39913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void select (int start, int end)", "signatureAfterChange": " public void select (int start, int end)", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\t/*", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "-\t*/", "-\t/* AW", "-\tfor (int i=start; i<=end; i++) {", "-\t\tint index = i + 1;", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\t*/", "-    /* AW", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= end-start+1;", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(start+i);", "-\t\tids[i]= p.fId;", "-\t}", "+    int[] ids= getIds(start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6549bf04b923a00a6bd82b08dbb2b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": " public String [] getItems ()", "signatureAfterChange": "  public String [] getItems ()", "diff": ["- */", "+", "-    String[] result= new String[fData.size()];", "-    Iterator iter= fData.iterator();", "-    for (int i= 0; iter.hasNext(); i++) {", "-    \tPair p= (Pair) iter.next();", "-    \tresult[i]= p.fValue;", "-    }", "+    String [] result = new String [itemCount];", "+\tSystem.arraycopy (items, 0, result, 0, itemCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb3f0806b53a55fa94a299c5c4f5381", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void selectAll ()", "signatureAfterChange": " public void selectAll ()", "diff": ["-\t/*", "-\t* Feature in MOTIF.  The X/MOTIF 1.2 spec says that XmListSelectPos ()", "-\t* in a XmEXTENDED_SELECT list widget will add the index to the selected", "-\t* indices.  The observed behavior does not match the spec.  The fix is", "-\t* to temporarily switch the XmNselectionPolicy to XmMULTIPLE_SELECT", "-\t* and then switch it back because XmListSelectPos () works as specified", "-\t* for XmMULTIPLE_SELECT list widgets.", "-\t*/", "-    /* AW", "-\tint [] argList = {OS.XmNselectionPolicy, 0, OS.XmNitemCount, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tint oldPolicy = argList [1];", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmMULTIPLE_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-\tfor (int i=0; i<argList[3]; i++) {", "-\t\tint index = i + 1;", "-\t\tif (!OS.XmListPosSelected (handle, index)) {", "-\t\t\tOS.XmListSelectPos (handle, index, false);", "-\t\t}", "-\t}", "-\tif (oldPolicy == OS.XmEXTENDED_SELECT) {", "-\t\targList [1] = OS.XmEXTENDED_SELECT;", "-\t\tOS.XtSetValues (handle, argList, argList.length / 2);", "-\t}", "-    */", "-\tint count= fData.size();", "-\tint[] ids= new int[count];", "-\tfor (int i= 0; i < count; i++) {", "-\t\tPair p= (Pair) fData.get(i);", "-\t\tids[i]= p.fId;", "-\t}", "+\tint n= fData.size();", "+\tif (n <= 0) return;", "+\tint[] ids= getIds(0, n-1);"]}], "num": 8153}