{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd3cdcc81b3539009f38079abcbcf4fc", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d592c5848111a045984558474258c600", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 70, "signatureBeforeChange": " public Point stringExtent(String string)", "signatureAfterChange": " public Point stringExtent(String string)", "diff": ["-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage (), string, true);", "-\tint xmString = OS.XmStringCreate(buffer, OS.XmFONTLIST_DEFAULT_TAG);", "-\tint fontList = data.fontList;", "-\tint width = OS.XmStringWidth(fontList, xmString);", "-\tint height = OS.XmStringHeight(fontList, xmString);", "-\tOS.XmStringFree(xmString);", "-\treturn new Point(width, height);", "-}", "+\tsetString(string);", "+\tif (data.stringWidth != -1) return new Point(data.stringWidth, data.stringHeight);", "+\tint width, height;", "+\tif (string.length() == 0) {", "+\t\twidth = 0;", "+\t\theight = getFontHeight();", "+\t} else {", "+\t\tint fontList = data.fontList;", "+\t\tint xmString = data.xmString;", "+\t\twidth = OS.XmStringWidth(fontList, xmString);", "+\t\theight = OS.XmStringHeight(fontList, xmString);", "+\treturn new Point(data.stringWidth = width, data.stringHeight = height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a6dc06ee985f28887b4323365e7d82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "6e156d5fd0e17d8ff3f14d2c03ade29b35d47fa1", "commitAfterChange": "c68836a9ea0b556b899fa81768a1b5a577f9ae15", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public FontMetrics getFontMetrics()", "signatureAfterChange": " public FontMetrics getFontMetrics()", "diff": ["-\tFontMetrics fm = new FontMetrics();", "-\tfm.ascent = info.ascent;", "-\tfm.descent = info.descent;", "-\tfm.leading = info.leading;", "+\tint ascent = info.ascent;", "+\tint descent = info.descent;", "+\tint leading = info.leading;", "-\tfm.averageCharWidth = stringExtent(s).x / s.length();", "-\tfm.height = fm.ascent + fm.descent;", "-\treturn fm;", "+\tint averageCharWidth = stringExtent(s).x / s.length();", "+\treturn FontMetrics.carbon_new(ascent, descent, averageCharWidth, leading, ascent + descent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dc9d02555b9a9a592322236725cb0c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet168.java", "commitBeforeChange": "c63df7f15ff2a3926585f42dd6e86b035077d228", "commitAfterChange": "285cce80136d4e48e3f07aa683212a1d1a5237a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static void main(String[] args)", "signatureAfterChange": "  \tpublic static void main(String[] args)", "diff": ["-\t\tshell.setText(\"PR\");", "-\t\tshell.setBackground(display.getSystemColor(SWT.COLOR_WHITE));", "+\t\t\t\tint x = 20;", "+\t\t\t\tint y = 20;", "+\t\t\t\tint w = 120;", "-\t\t\t\t\tgc.drawLine(10,10 + i * 20, 100, 10 + i * 20);", "+\t\t\t\t\tgc.drawLine(x, y, x + w, y);", "+\t\t\t\t\ty += 20;", "-\t\t\t\t\tgc.drawPolygon(new int[] {10,80 + i * 60, 50, 120 + i * 60, 100, 80 + i * 60});", "+\t\t\t\t\tgc.drawPolygon(new int[] {x, y, x + w/2, y + 60, x + w, y});", "+\t\t\t\t\ty += 80;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7063af3ea93048684bea0a9f93dfd3f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "9d4fa5e6d195494b2a05e72f5fca3f570e2ab98b", "commitAfterChange": "d618deef46e38134028dd2ac06374e7f8eeeb247", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tif (layout==null) return computeNativeSize(handle, wHint, hHint, changed);", "-", "-\tPoint size = layout.computeSize (this, wHint, hHint, changed);", "-\tif (size.x == 0) size.x = DEFAULT_WIDTH;", "-\tif (size.y == 0) size.y = DEFAULT_HEIGHT;", "-\tif (wHint != SWT.DEFAULT) size.x = wHint;", "-\tif (hHint != SWT.DEFAULT) size.y = hHint;", "-\tRectangle trim = computeTrim (0, 0, size.x, size.y);", "+\tPoint defaultSize = computeNativeSize (handle, wHint, hHint, changed);", "+\tPoint size;", "+\tif (layout != null) {", "+\t\tsize = layout.computeSize (this, wHint, hHint, changed);", "+\t} else {", "+\t\tsize = minimumSize ();", "+\t}", "+\tint width = size.x,  height = size.y;", "+\tif (width == 0) width = DEFAULT_WIDTH;", "+\tif (height == 0) height = DEFAULT_HEIGHT;", "+\tif (wHint != SWT.DEFAULT) width = wHint;", "+\tif (hHint != SWT.DEFAULT) height = hHint;", "+\tRectangle trim = computeTrim (0, 0, width, height);", "+\twidth = Math.max (trim.width, defaultSize.x);", "+\theight = trim.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8ce4c731c4825ea599f12997890911", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "378838ead01c4699175e6b4fe6877c8ad4f8113d", "commitAfterChange": "3b81d72682a33b10172bb53703a33aa758018789", "methodNumberBeforeChange": 280, "methodNumberAfterChange": 280, "signatureBeforeChange": " void setBlockSelectionLocation (int x, int y)", "signatureAfterChange": " void setBlockSelectionLocation (int x, int y)", "diff": ["-\tblockXLocation = Math.min(Math.max(x, leftMargin), clientAreaWidth - leftMargin - rightMargin) + horizontalScrollOffset;", "-\tblockYLocation = Math.min(Math.max(y, topMargin), clientAreaHeight - topMargin - bottomMargin) + getVerticalScrollOffset();", "+\tint verticalScrollOffset = getVerticalScrollOffset();", "+\tblockXLocation = x + horizontalScrollOffset;", "+\tblockYLocation = y + verticalScrollOffset;", "+\tcaretOffset = getOffsetAtPoint(blockXLocation - horizontalScrollOffset, blockYLocation - verticalScrollOffset);", "+\t\tselectionAnchor = caretOffset;", "+\t}", "+\tif (caretOffset > selectionAnchor) {", "+\t\tselection.x = selectionAnchor;", "+\t\tselection.y = caretOffset;", "+\t} else {", "+\t\tselection.x = caretOffset;", "+\t\tselection.y = selectionAnchor;", "-\tcaretOffset = getOffsetAtPoint(blockXLocation - horizontalScrollOffset, blockYLocation - getVerticalScrollOffset());", "-\tresetSelection();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d54978b0661cfbba1b39997f0c85874", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "0251663edb6cd971a88f3c318a8897c289f1e79c", "commitAfterChange": "47c20ad20cc671684c9cdd05dad4ddbf2f115013", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "+\t\t\t\t\t\tfloat[] dashes = null;", "+\t\t\t\t\t\tint lineCap = OS.kCGLineCapButt;", "+\t\t\t\t\t\tint lineJoin = OS.kCGLineJoinMiter;", "-\t\t\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, new float[]{1f,3}, 2);", "-\t\t\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapRound);", "+\t\t\t\t\t\t\t\tdashes = new float[]{1f,3};", "+\t\t\t\t\t\t\t\tlineCap = OS.kCGLineCapRound;", "+\t\t\t\t\t\t\t\tlineJoin = OS.kCGLineJoinRound;", "+\t\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "-\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapButt);", "-\t\t\t\t\t\tOS.CGContextSetLineJoin(gc.handle, OS.kCGLineJoinMiter);", "-\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, null, 0);", "+\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, lineCap);", "+\t\t\t\t\t\tOS.CGContextSetLineJoin(gc.handle, lineJoin);", "+\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, dashes, dashes != null ? dashes.length : 0);"]}], "num": 29625}