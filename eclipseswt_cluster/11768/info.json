{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f56d304d2969a3977d04e8e1d7f81d20", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d529bc3cf18cfb40d38baabc5f7cbc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void createText(boolean dropDown)", "signatureAfterChange": "  void createText(boolean dropDown)", "diff": ["+\ttext = new Text(this, SWT.SINGLE);", "+\t/* disable the native drag and drop for the date/time text field */", "+\tOS.gtk_drag_dest_unset(text.handle);", "-\tdateTimeString = getFormattedString(style);", "-\tOS.gtk_widget_realize(handle);", "-\tif ((style & SWT.DATE) != 0 && dropDown) { /* SWT.DROP_DOWN */", "-\t\taddListener(SWT.Resize, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tonResize(event);", "+\ttext.setText(getFormattedString(style));", "+\t", "+\taddListener(SWT.Resize, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonResize(event);", "+\t\t}", "+\t});", "+\tListener listener = new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tswitch(event.type) {", "+\t\t\t\tcase SWT.KeyDown: onTextKeyDown(event); break;", "+\t\t\t\tcase SWT.FocusIn: onTextFocusIn(event); break;", "+\t\t\t\tcase SWT.FocusOut: onTextFocusOut(event); break;", "+\t\t\t\tcase SWT.MouseDown: // Fall through", "+\t\t\t\tcase SWT.MouseUp: onTextMouseClick(event); break;", "+\t\t\t\tcase SWT.MenuDetect: notifyListeners(SWT.MenuDetect, event); break;", "+\t\t\t\tcase SWT.Verify: onTextVerify(event); break;", "-\t\t});", "+\t\t}", "+\t};", "+\tint [] listeners = new int [] {SWT.KeyDown, SWT.FocusIn, SWT.FocusOut, SWT.MouseDown, SWT.MouseUp, SWT.MenuDetect, SWT.Verify};", "+\tfor (int i = 0; i < listeners.length; i++) {", "+\t\ttext.addListener(listeners [i], listener);", "+\t}", "+\t", "+\tif ((style & SWT.DATE) != 0 && dropDown) {", "-\t} ", "-\tif (dateTimeString != null) {", "-\t\tsetText(dateTimeString);", "+\t} else {", "+\t\tup = new Button(this, SWT.ARROW | SWT.UP);", "+\t\tgtk_widget_set_can_focus (up.handle, false);", "+\t\t//up.setToolTipText(SWT.getMessage (\"SWT_Up\")); //$NON-NLS-1$", "+\t\tdown = new Button(this, SWT.ARROW | SWT.DOWN);", "+\t\tgtk_widget_set_can_focus (down.handle, false);", "+\t\t//down.setToolTipText(SWT.getMessage (\"SWT_Down\")); //$NON-NLS-1$", "+\t\tup.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(+1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});", "+\t\tdown.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(-1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a1f53fac3df9fdc44a86d15d366bcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "de1ef9e5dd8e2f657b19ac5e5eaa6cbf2017d8bb", "commitAfterChange": "bcac6ad70ee319247deb043444a858ffd48b487d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void createText(boolean dropDown)", "signatureAfterChange": "  void createText(boolean dropDown)", "diff": ["-\ttext = new Text(this, SWT.SINGLE);", "-\t/* disable the native drag and drop for the date/time text field */", "-\tOS.gtk_drag_dest_unset(text.handle);", "-\ttext.setText(getFormattedString(style));", "-\t", "-\taddListener(SWT.Resize, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tonResize(event);", "-\t\t}", "-\t});", "-\tListener listener = new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tswitch(event.type) {", "-\t\t\t\tcase SWT.KeyDown: onTextKeyDown(event); break;", "-\t\t\t\tcase SWT.FocusIn: onTextFocusIn(event); break;", "-\t\t\t\tcase SWT.FocusOut: onTextFocusOut(event); break;", "-\t\t\t\tcase SWT.MouseDown: // Fall through", "-\t\t\t\tcase SWT.MouseUp: onTextMouseClick(event); break;", "-\t\t\t\tcase SWT.MenuDetect: notifyListeners(SWT.MenuDetect, event); break;", "-\t\t\t\tcase SWT.Verify: onTextVerify(event); break;", "+\tdateTimeString = getFormattedString(style);", "+\tOS.gtk_widget_realize(handle);", "+\tif ((style & SWT.DATE) != 0 && dropDown) { /* SWT.DROP_DOWN */", "+\t\taddListener(SWT.Resize, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tonResize(event);", "-\t\t}", "-\t};", "-\tint [] listeners = new int [] {SWT.KeyDown, SWT.FocusIn, SWT.FocusOut, SWT.MouseDown, SWT.MouseUp, SWT.MenuDetect, SWT.Verify};", "-\tfor (int i = 0; i < listeners.length; i++) {", "-\t\ttext.addListener(listeners [i], listener);", "-\t}", "-\t", "-\tif ((style & SWT.DATE) != 0 && dropDown) {", "+\t\t});", "-\t} else {", "-\t\tup = new Button(this, SWT.ARROW | SWT.UP);", "-\t\tgtk_widget_set_can_focus (up.handle, false);", "-\t\t//up.setToolTipText(SWT.getMessage (\"SWT_Up\")); //$NON-NLS-1$", "-\t\tdown = new Button(this, SWT.ARROW | SWT.DOWN);", "-\t\tgtk_widget_set_can_focus (down.handle, false);", "-\t\t//down.setToolTipText(SWT.getMessage (\"SWT_Down\")); //$NON-NLS-1$", "-\t\tup.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tincrementField(+1);", "-\t\t\t\ttext.setFocus();", "-\t\t\t}", "-\t\t});", "-\t\tdown.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tincrementField(-1);", "-\t\t\t\ttext.setFocus();", "-\t\t\t}", "-\t\t});", "+\t} ", "+\tif (dateTimeString != null) {", "+\t\tsetText(dateTimeString);"]}], "num": 11768}