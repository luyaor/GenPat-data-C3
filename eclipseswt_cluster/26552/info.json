{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cafd38548d8dc4b165fb27ea0824f48", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b5a6151749794888696a4b8bc7bc67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tstatic void registerAccessible (Accessible accessible)", "signatureAfterChange": "  \tstatic void registerAccessible (Accessible accessible)", "diff": ["-\t\t/* If DefaultParentType is 0 then OS accessibility is not active */", "-\t\tif (DefaultParentType == 0) return;", "-\t\tint /*long*/ controlHandle = accessible.getControlHandle ();", "-\t\tint /*long*/ widgetType = OS.G_OBJECT_TYPE (controlHandle);", "-\t\tAccessibleFactory factory = (AccessibleFactory) Factories.get (new LONG (widgetType));", "-\t\tif (factory == null) {", "-\t\t\tfactory = new AccessibleFactory (widgetType);", "-\t\t\tFactories.put (new LONG (widgetType), factory);", "+\t\tint /*long*/ widget = accessible.getControlHandle ();", "+\t\tint /*long*/ widgetType = OS.G_OBJECT_TYPE (widget);", "+\t\tint /*long*/ registry = ATK.atk_get_default_registry ();", "+\t\tint /*long*/ factory = ATK.atk_registry_get_factory (registry, widgetType);", "+\t\t/* If NO_OP factory is registered then OS accessibility is not active */", "+\t\tif (ATK.ATK_IS_NO_OP_OBJECT_FACTORY(factory)) return;", "+\t\tString name = FACTORY_TYPENAME + getTypeName(widgetType);", "+\t\tbyte[] factoryName = Converter.wcsToMbcs(null, name, true);", "+\t\tif (OS.g_type_from_name (factoryName) == 0) {", "+\t\t\tif (AccessibleObject.DEBUG) System.out.println(\"-->New Factory=\" + name); //$NON-NLS-1$", "+\t\t\t/* register the factory */", "+\t\t\tGTypeInfo typeInfo = new GTypeInfo ();", "+\t\t\ttypeInfo.base_init = GTypeInfo_base_init_factory.getAddress ();", "+\t\t\ttypeInfo.class_size = (short)ATK.AtkObjectFactoryClass_sizeof ();", "+\t\t\ttypeInfo.instance_size = (short)ATK.AtkObjectFactory_sizeof ();", "+\t\t\tint /*long*/ info = OS.g_malloc (GTypeInfo.sizeof); ", "+\t\t\tOS.memmove (info, typeInfo, GTypeInfo.sizeof); ", "+\t\t\tint /*long*/ swtFactoryType = OS.g_type_register_static (ATK.ATK_TYPE_OBJECT_FACTORY(), factoryName, info, 0);", "+\t\t\tint /*long*/ parentType = ATK.atk_object_factory_get_accessible_type(factory);", "+\t\t\tATK.atk_registry_set_factory_type (registry, widgetType, swtFactoryType);", "+\t\t\tFactories.put (new LONG (widgetType), new LONG (parentType));", "-\t\tfactory.addAccessible (accessible);", "-\t}", "+\t\tAccessibles.put (new LONG (widget), accessible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fdb93f6fa7e482173c494ae6c549a0e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5544ce1d748561f71c4f1d1997c431f82e5c4c86", "commitAfterChange": "24e0049851c0d0a09cb9f25e5892d112e2936fed", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 180, "signatureBeforeChange": " void setBidiCaretDirection()", "signatureAfterChange": " int getCaretDirection()", "diff": ["+int getCaretDirection() {", "+\tif (!isBidi()) return SWT.DEFAULT;", "+\tint caretLine = getCaretLine();", "+\tint lineOffset = content.getOffsetAtLine(caretLine);", "+\tString line = content.getLine(caretLine);", "+\tint offset = caretOffset - lineOffset;", "+\tint lineLength = line.length();", "+\tif (lineLength == 0) return isMirrored() ? SWT.RIGHT : SWT.LEFT;", "+\tTextLayout layout = renderer.getTextLayout(line, lineOffset, null);", "+\tif (advancing && offset > 0) offset--;", "+\tint level = layout.getLevel(offset);", "+\twhile (offset > 0 && level > 1) level = layout.getLevel(--offset);", "+\trenderer.disposeTextLayout(layout, null);", "+\tif (offset == 0 && level > 1) return isMirrored() ? SWT.RIGHT : SWT.LEFT;", "+\tint direction = SWT.LEFT;", "+\tif ((level & 1) != 0) direction = SWT.RIGHT;", "+\tif (isMirrored()) {", "+\t\tdirection = direction == SWT.LEFT ? SWT.RIGHT : SWT.LEFT;", "+\t}", "+\treturn direction;", "+}", "-void setBidiCaretDirection() {", "-\tint direction = StyledTextBidi.getKeyboardLanguageDirection();", "-\t\tcaret.setImage(null);", "-\t} ", "-\telse ", "-\t\tcaret.setImage(leftCaretBitmap);\t\t\t", "-\t} ", "-\telse ", "-\t\tcaret.setImage(rightCaretBitmap);\t\t\t", "-\t}", "-}"]}], "num": 26552}