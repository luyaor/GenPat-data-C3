{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63df906c91d0b6471a5512f8e4e6564b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082c43257300c97a7468f6c400c6f544", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2se/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "f596be6f2698a524e2eb59fbf7fa4dfc8e6e5e88", "commitAfterChange": "faf8f241b3ea3cf8658bca53e40fd0817730fcad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static void loadLibrary (String name)", "signatureAfterChange": " public static void loadLibrary (String name, boolean mapName)", "diff": ["-\t/*", "-     * Include platform name to support different windowing systems", "-     * on same operating system.", "-\t */", "-\tString platform = Platform.PLATFORM;", "-\t", "-\t/*", "-\t * Get version qualifier.", "-\t */", "-\tString version = System.getProperty (\"swt.version\"); //$NON-NLS-1$", "-\tif (version == null) {", "-\t\tversion = \"\" + MAJOR_VERSION; //$NON-NLS-1$", "-\t\t/* Force 3 digits in minor version number */", "-\t\tif (MINOR_VERSION < 10) {", "-\t\t\tversion += \"00\"; //$NON-NLS-1$", "-\t\t} else {", "-\t\t\tif (MINOR_VERSION < 100) version += \"0\"; //$NON-NLS-1$", "-\t\t}", "-\t\tversion += MINOR_VERSION;\t\t", "-\t\t/* No \"r\" until first revision */", "-\t\tif (REVISION > 0) version += \"r\" + REVISION; //$NON-NLS-1$", "-\t}", "-\tString libName1 = name + \"-\" + platform + \"-\" + version;  //$NON-NLS-1$ //$NON-NLS-2$", "-\tString libName2 = name + \"-\" + platform;  //$NON-NLS-1$", "-\tString mappedName1 = System.mapLibraryName (libName1);", "-\tString mappedName2 = System.mapLibraryName (libName2);", "+ */", "+public static void loadLibrary (String name, boolean mapName) {", "+\t", "+\t/* Compute the library name and mapped name */", "+\tString libName1, libName2, mappedName1, mappedName2;", "+\tif (mapName) {", "+\t\tString version = System.getProperty (\"swt.version\"); //$NON-NLS-1$", "+\t\tif (version == null) {", "+\t\t\tversion = \"\" + MAJOR_VERSION; //$NON-NLS-1$", "+\t\t\t/* Force 3 digits in minor version number */", "+\t\t\tif (MINOR_VERSION < 10) {", "+\t\t\t\tversion += \"00\"; //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tif (MINOR_VERSION < 100) version += \"0\"; //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tversion += MINOR_VERSION;\t\t", "+\t\t\t/* No \"r\" until first revision */", "+\t\t\tif (REVISION > 0) version += \"r\" + REVISION; //$NON-NLS-1$", "+\t\t}", "+\t\tlibName1 = name + \"-\" + Platform.PLATFORM + \"-\" + version;  //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tlibName2 = name + \"-\" + Platform.PLATFORM;  //$NON-NLS-1$", "+\t\tmappedName1 = System.mapLibraryName (libName1);", "+\t\tmappedName2 = System.mapLibraryName (libName2);", "+\t} else {", "+\t\tlibName1 = libName2 = mappedName1 = mappedName2 = name;", "+\t}", "-\t\tif (load (path + SEPARATOR + mappedName2)) return;", "+\t\tif (mapName && load (path + SEPARATOR + mappedName2)) return;", "-\tif (load (libName2)) return;", "+\tif (mapName && load (libName2)) return;", "-\t\tif (load (path + SEPARATOR + mappedName2)) return;", "+\t\tif (mapName && load (path + SEPARATOR + mappedName2)) return;", "-\t\tif (extract (path + SEPARATOR + mappedName2, mappedName2)) return;", "+\t\tif (mapName && extract (path + SEPARATOR + mappedName2, mappedName2)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6f1b5c4a9080a15e275ace4ebb67f6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1de7fc63d1a523fc6f82771c56fef441ef8f53ff", "commitAfterChange": "9436ba8c70990a20c9c536ae28590998077447e8", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public Point map (Control from, Control to, int x, int y)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["+\tint newX, newY;", "-\t\tint newPoint = OS.UIElement_TranslatePoint(from.topHandle (), point, to.topHandle ());", "-\t\tPoint result = new Point ((int)OS.Point_X (newPoint), (int)OS.Point_Y (newPoint));", "+\t\tint newPoint = OS.UIElement_TranslatePoint (from.topHandle (), point, to.topHandle ());", "+\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5);", "+\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5);", "-\t\treturn result;", "-\t\t\tPoint result = new Point ((int)OS.Point_X (newPoint), (int)OS.Point_Y (newPoint));", "+\t\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5);", "+\t\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5);", "-\t\t\treturn result;", "-\t\t\tPoint result = new Point ((int)OS.Point_X (newPoint) + shellLocation.x, (int)OS.Point_Y (newPoint) + shellLocation.y);", "+\t\t\tnewX = (int) (OS.Point_X (newPoint) + 0.5) + shellLocation.x;", "+\t\t\tnewY = (int) (OS.Point_Y (newPoint) + 0.5) + shellLocation.y;", "-\t\t\treturn result;", "+\treturn new Point (newX, newY);"]}], "num": 31722}