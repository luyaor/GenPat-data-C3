{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8aa298d3d4bb9ba3e8bc5c4e7791a1c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c2f9574b4289388c23fb8717a4dfab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "9a86cb42bdfd98d2c08f9f9d4806aa2dcca386d5", "commitAfterChange": "33448e3818c41d50fcb95f5284f4135c600708fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public static Frame new_Frame (final Composite parent)", "signatureAfterChange": "  public static Frame new_Frame (final Composite parent)", "diff": ["-\t\t\tjava.awt.EventQueue.invokeLater(new Runnable () {", "+\t\t\tEventQueue.invokeLater(new Runnable () {", "+\t/*", "+\t* TEMPORARY CODE", "+\t* ", "+\t* For some reason, the graphics configuration of the embedded", "+\t* frame is not initialized properly. This will cause a walkback", "+\t* when the depth of the screen is changed.", "+\t*/", "+\tEventQueue.invokeLater(new Runnable () {", "+\t\tpublic void run () {", "+\t\t\ttry {", "+\t\t\t\tClass clazz = Class.forName(\"sun.awt.windows.WComponentPeer\");", "+\t\t\t\tField field = clazz.getDeclaredField(\"winGraphicsConfig\");", "+\t\t\t\tfield.setAccessible(true);", "+\t\t\t\tfield.set(frame.getPeer(), frame.getGraphicsConfiguration());", "+\t\t\t} catch (Throwable e) {}", "+\t\t}", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc005f1a83c302dcd7562ccd61528a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/GraphicsExample.java", "commitBeforeChange": "08f31d02f7e2cff5fb17d562ef11c37575a8448a", "commitAfterChange": "3bcb07983dc1abc1029bdfa1df5edd83ee807c7c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void createTabList(Composite parent)", "signatureAfterChange": "  void createTabList(Composite parent)", "diff": ["+\tArrays.sort(tabs, new Comparator() {", "+\t\tpublic int compare(Object tab0, Object tab1) {", "+\t\t\treturn ((GraphicsTab)tab0).getText().compareTo(((GraphicsTab)tab1).getText());", "+\t\t}", "+\t});", "-\tfor (Iterator iter = set.iterator(); iter.hasNext();) {", "-\t\tString text = (String) iter.next();", "+\tString[] categories = new String[set.size()];", "+\tset.toArray(categories);", "+\tArrays.sort(categories);", "+\tfor (int i = 0; i < categories.length; i++) {", "+\t\tString text = categories[i];"]}], "num": 41447}