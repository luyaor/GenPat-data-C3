{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb0ed359b707e5915b13e889f0c079ba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8352e2c8097850e40efb3a717e0ae372", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3588f4a941ef3059528cd4a33f42ba2a4a4e4d07", "commitAfterChange": "15e21f2bff63c47ed36ebad70c570e1ba0ab294f", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["+\t\t\t\tint width = OS.GetSystemMetrics (OS.SM_CXSCREEN);", "+\t\t\t\tint height = OS.GetSystemMetrics (OS.SM_CYSCREEN);", "-\t\t\t\tinputs.dx = event.x * 65535 / (OS.GetSystemMetrics (OS.SM_CXSCREEN) - 1);", "-\t\t\t\tinputs.dy = event.y * 65535 / (OS.GetSystemMetrics (OS.SM_CYSCREEN) - 1);", "+\t\t\t\tinputs.dx = (event.x * 65535 + width - 2) / (width - 1);", "+\t\t\t\tinputs.dy = (event.y * 65535 + height - 2) / (height - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f411f788fa41db512d42f68365ccd05d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "5dc5ec23efad672b87f31c80bf2b8725e7e40759", "commitAfterChange": "466e674afedc0bb93dac521211c6fdf414bdbf78", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\tint hDC = gc.handle;", "-\t\tEvent event = new Event ();", "-\t\tevent.gc = gc;", "-\t\tif (isComplex && exposeRegion) {", "-\t\t\tRECT rect = new RECT ();", "-\t\t\tint count = lpRgnData [2];", "-\t\t\tfor (int i=0; i<count; i++) {", "-\t\t\t\tOS.SetRect (rect,", "-\t\t\t\t\tlpRgnData [8 + (i << 2)],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "-\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "-\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "-\t\t\t\t\tdrawBackground (hDC, rect);", "-\t\t\t\t}", "-\t\t\t\tevent.x = rect.left;", "-\t\t\t\tevent.y = rect.top;", "-\t\t\t\tevent.width = rect.right - rect.left;", "-\t\t\t\tevent.height = rect.bottom - rect.top;", "-\t\t\t\tevent.count = count - 1 - i;", "-\t\t\t\t/*", "-\t\t\t\t* It is possible (but unlikely), that application", "-\t\t\t\t* code could have disposed the widget in the paint", "-\t\t\t\t* event.  If this happens, attempt to give back the", "-\t\t\t\t* paint GC anyways because this is a scarce Windows", "-\t\t\t\t* resource.", "-\t\t\t\t*/", "-\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t\tif (isDisposed ()) break;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\tint width = ps.right - ps.left;", "+\t\tint height = ps.bottom - ps.top;", "+\t\tif (width != 0 && height != 0) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.gc = gc;", "+\t\t\tif (isComplex && exposeRegion) {", "-\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "-\t\t\t\tdrawBackground (hDC, rect);", "+\t\t\t\tint count = lpRgnData [2];", "+\t\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\t\tOS.SetRect (rect,", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2)],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "+\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\t\tdrawBackground (gc.handle, rect);", "+\t\t\t\t\t}", "+\t\t\t\t\tevent.x = rect.left;", "+\t\t\t\t\tevent.y = rect.top;", "+\t\t\t\t\tevent.width = rect.right - rect.left;", "+\t\t\t\t\tevent.height = rect.bottom - rect.top;", "+\t\t\t\t\tevent.count = count - 1 - i;", "+\t\t\t\t\t/*", "+\t\t\t\t\t* It is possible (but unlikely), that application", "+\t\t\t\t\t* code could have disposed the widget in the paint", "+\t\t\t\t\t* event.  If this happens, attempt to give back the", "+\t\t\t\t\t* paint GC anyways because this is a scarce Windows", "+\t\t\t\t\t* resource.", "+\t\t\t\t\t*/", "+\t\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t\tif (isDisposed ()) break;", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tOS.SetRect (rect, ps.left, ps.top, ps.right, ps.bottom);", "+\t\t\t\t\tdrawBackground (gc.handle, rect);", "+\t\t\t\t}", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\tevent.x = ps.left;", "-\t\t\tevent.y = ps.top;", "-\t\t\tevent.width = ps.right - ps.left;", "-\t\t\tevent.height = ps.bottom - ps.top;", "-\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t// widget could be disposed at this point", "+\t\t\tevent.gc = null;", "-\t\t// widget could be disposed at this point", "-\t", "+\t\t", "-\t\tevent.gc = null;"]}], "num": 59919}