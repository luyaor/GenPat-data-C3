{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62b5aa2fc3ca9a5c6282b2e8ca2eabcb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1b3733548666fdcef109866cfe6d46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  Rect getControlBounds (int control)", "signatureAfterChange": "  Rectangle getControlBounds (int control)", "diff": ["-Rect getControlBounds (int control) {", "+Rectangle getControlBounds (int control) {", "+\tif (OS.HIVIEW) {", "+\t\tCGRect rect = new CGRect ();", "+\t\tOS.HIViewGetFrame (control, rect);", "+\t\tRect inset = getInset ();", "+\t\trect.x -= inset.left;", "+\t\trect.y -= inset.top;", "+\t\trect.width += inset.right + inset.left;", "+\t\trect.height += inset.bottom + inset.top;", "+\t\treturn new Rectangle ((int) rect.x, (int) rect.y, (int) rect.width, (int) rect.height);", "+\t}", "-\treturn rect;", "+\treturn new Rectangle (rect.left, rect.top, rect.right - rect.left, rect.bottom - rect.top);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8875af8d7e942e90095a853f61d6e5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/texteditor/TextEditor.java", "commitBeforeChange": "dbcf617c3014caea0ed6c0653866bb16c67441cc", "commitAfterChange": "080fcc7d14278c23e2ef99f4e2c4f8e59a0d2f21", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void bold(boolean bold)", "signatureAfterChange": " void setStyle(Widget widget)", "diff": ["-void bold(boolean bold) {", "-\tisBold = bold;", "+void setStyle(Widget widget) {", "-\tif ((sel != null) && (sel.y != 0)) {", "-\t\tStyleRange style;", "-\t\tint fontStyle = SWT.NORMAL;", "-\t\tif (isBold) fontStyle = SWT.BOLD;", "-\t\tstyle = new StyleRange(sel.x, sel.y, null, null, fontStyle);", "+\tif ((sel == null) || (sel.y == 0)) return;", "+\tStyleRange style;", "+\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "+\t\tStyleRange range = text.getStyleRangeAtOffset(i);", "+\t\tif (range != null) {", "+\t\t\tstyle = (StyleRange)range.clone();", "+\t\t\tstyle.start = i;", "+\t\t\tstyle.length = 1;", "+\t\t} else {", "+\t\t\tstyle = new StyleRange(i, 1, null, null, SWT.NORMAL);", "+\t\t}", "+\t\tif (widget == boldButton) {", "+\t\t\tstyle.fontStyle ^= SWT.BOLD;", "+\t\t} else if (widget == italicButton) {", "+\t\t\tstyle.fontStyle ^= SWT.ITALIC;\t\t\t\t\t\t", "+\t\t} else if (widget == underlineButton) {", "+\t\t\tstyle.underline = !style.underline;", "+\t\t} else if (widget == strikeoutButton) {", "+\t\t\tstyle.strikeout = !style.strikeout;", "+\t\t}", "-\ttext.setSelectionRange(sel.x + sel.y, 0);", "+\ttext.setSelectionRange(sel.x + sel.y, 0);\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1599cb5388d082eabe6c2bd0f0e6d70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b36f97e8a58715f907c2ff4f1fa2768aeeedb4d3", "commitAfterChange": "47c737ebfb92a90218e4490fc6b9c7b2ae60d200", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void createItem (TreeColumn column, int index)", "signatureAfterChange": "  void createItem (TreeColumn column, int index)", "diff": ["+\t", "+\t/* Add the tool tip item for the header */", "+\tif (headerToolTipHandle != 0) {", "+\t\tRECT rect = new RECT ();", "+\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, rect) != 0) {", "+\t\t\tTOOLINFO lpti = new TOOLINFO ();", "+\t\t\tlpti.cbSize = TOOLINFO.sizeof;", "+\t\t\tlpti.uFlags = OS.TTF_SUBCLASS;", "+\t\t\tlpti.hwnd = hwndHeader;", "+\t\t\tlpti.uId = column.id = display.nextToolTipId++;", "+\t\t\tlpti.left = rect.left;", "+\t\t\tlpti.top = rect.top;", "+\t\t\tlpti.right = rect.right;", "+\t\t\tlpti.bottom = rect.bottom;", "+\t\t\tlpti.lpszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\tOS.SendMessage (headerToolTipHandle, OS.TTM_ADDTOOL, 0, lpti);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3c3e097fdfaa29c4dc3c8b7e331b21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b36f97e8a58715f907c2ff4f1fa2768aeeedb4d3", "commitAfterChange": "47c737ebfb92a90218e4490fc6b9c7b2ae60d200", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createItem (TableColumn column, int index)", "signatureAfterChange": "  void createItem (TableColumn column, int index)", "diff": ["+\t", "+\t/* Add the tool tip item for the header */", "+\tif (headerToolTipHandle != 0) {", "+\t\tRECT rect = new RECT ();", "+\t\tif (OS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, rect) != 0) {", "+\t\t\tTOOLINFO lpti = new TOOLINFO ();", "+\t\t\tlpti.cbSize = TOOLINFO.sizeof;", "+\t\t\tlpti.uFlags = OS.TTF_SUBCLASS;", "+\t\t\tlpti.hwnd = hwndHeader;", "+\t\t\tlpti.uId = column.id = display.nextToolTipId++;", "+\t\t\tlpti.left = rect.left;", "+\t\t\tlpti.top = rect.top;", "+\t\t\tlpti.right = rect.right;", "+\t\t\tlpti.bottom = rect.bottom;", "+\t\t\tlpti.lpszText = OS.LPSTR_TEXTCALLBACK;", "+\t\t\tOS.SendMessage (headerToolTipHandle, OS.TTM_ADDTOOL, 0, lpti);", "+\t\t}", "+\t}"]}], "num": 51619}