{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01256a4fa4221b0e821c7de352f904ec", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbcc4d287177a954f624b46a3e110b50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "d335e806591ec45d16c23e844387be87be5c3599", "commitAfterChange": "1009acfd94ad5f450e017e503fbbea0156b4813f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Cursor(Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "diff": ["+\t/*", "+\t * Make sure the source is padded properly. Windows requires the cursor's source", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (source.scanlinePad != 1) {", "+\t\tint bytesPerLine = (source.width + 7) / 8;", "+\t\tbyte[] newSourceData = new byte[bytesPerLine * source.height];", "+\t\tImageData newSource = new ImageData(source.width, source.height, 1, source.palette, 1, newSourceData);", "+\t\tint[] sourcePixels = new int[source.width];", "+\t\tfor (int y = 0; y < source.height; y++) {", "+\t\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "+\t\t\tnewSource.setPixels(0, y, newSource.width, sourcePixels, 0);", "+\t\t}", "+\t\tsource = newSource;", "+\t}", "+\t/*", "+\t * Make sure the mask is padded properly. Windows requires the cursor's mask", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (mask.scanlinePad != 1) {", "+\t\tint bytesPerLine = (mask.width + 7) / 8;", "+\t\tbyte[] newMaskData = new byte[bytesPerLine * mask.height];", "+\t\tImageData newMask = new ImageData(mask.width, mask.height, 1, mask.palette, 1, newMaskData);", "+\t\tint[] maskPixels = new int[mask.width];", "+\t\tfor (int y = 0; y < mask.height; y++) {", "+\t\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "+\t\t\tnewMask.setPixels(0, y, newMask.width, maskPixels, 0);", "+\t\t}", "+\t\tmask = newMask;", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ecc24048f9ade5c54db023d056b8941", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "ff179fed7d28c57ef2293c870fa9b20c7c7d1ef0", "commitAfterChange": "1acb35772b09400a66ee7b2ebd612dcaf0602ada", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Cursor(Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "diff": ["+\t/*", "+\t * Make sure the source is padded properly. Unix requires icon sources", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (source.scanlinePad != 1) {", "+\t\tint bytesPerLine = (source.width + 7) / 8;", "+\t\tbyte[] newSourceData = new byte[bytesPerLine * source.height];", "+\t\tImageData newSource = new ImageData(source.width, source.height, 1, source.palette, 1, newSourceData);", "+\t\tint[] sourcePixels = new int[source.width];", "+\t\tfor (int y = 0; y < source.height; y++) {", "+\t\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "+\t\t\tnewSource.setPixels(0, y, newSource.width, sourcePixels, 0);", "+\t\t}", "+\t\tsource = newSource;", "+\t}", "+\t/*", "+\t * Make sure the mask is padded properly. Unix requires icon masks", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (mask.scanlinePad != 1) {", "+\t\tint bytesPerLine = (mask.width + 7) / 8;", "+\t\tbyte[] newMaskData = new byte[bytesPerLine * mask.height];", "+\t\tImageData newMask = new ImageData(mask.width, mask.height, 1, mask.palette, 1, newMaskData);", "+\t\tint[] maskPixels = new int[mask.width];", "+\t\tfor (int y = 0; y < mask.height; y++) {", "+\t\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "+\t\t\tnewMask.setPixels(0, y, newMask.width, maskPixels, 0);", "+\t\t}", "+\t\tmask = newMask;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1aebbe1cbea94223e444cd099c65bba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "a1f7fe288dc846a525592ac175229c9487ae2b7f", "commitAfterChange": "d335e806591ec45d16c23e844387be87be5c3599", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Cursor (Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor (Device device, ImageData source, ImageData mask, int hotspotX, int hotspotY)", "diff": ["+\t/*", "+\t * Make sure the source is padded properly. Unix requires icon sources", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (source.scanlinePad != 1) {", "+\t\tint bytesPerLine = (source.width + 7) / 8;", "+\t\tbyte[] newSourceData = new byte[bytesPerLine * source.height];", "+\t\tImageData newSource = new ImageData(source.width, source.height, 1, source.palette, 1, newSourceData);", "+\t\tint[] sourcePixels = new int[source.width];", "+\t\tfor (int y = 0; y < source.height; y++) {", "+\t\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "+\t\t\tnewSource.setPixels(0, y, newSource.width, sourcePixels, 0);", "+\t\t}", "+\t\tsource = newSource;", "+\t}", "+\t/*", "+\t * Make sure the mask is padded properly. Unix requires icon masks", "+\t * to have a scanline pad of 1.", "+\t */", "+\tif (mask.scanlinePad != 1) {", "+\t\tint bytesPerLine = (mask.width + 7) / 8;", "+\t\tbyte[] newMaskData = new byte[bytesPerLine * mask.height];", "+\t\tImageData newMask = new ImageData(mask.width, mask.height, 1, mask.palette, 1, newMaskData);", "+\t\tint[] maskPixels = new int[mask.width];", "+\t\tfor (int y = 0; y < mask.height; y++) {", "+\t\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "+\t\t\tnewMask.setPixels(0, y, newMask.width, maskPixels, 0);", "+\t\t}", "+\t\tmask = newMask;", "+\t}"]}], "num": 4515}