{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a34a9b6df89fa38264eb6aacddfaed3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6e029ad158578bc2b8ef130094109b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0ec16a191637037ae868aa23c8c55cf2d8a64f40", "commitAfterChange": "d78a1f304fc5886faf978adcf843b66da4334afd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-", "-\t/* Columns:", "-\t * 0 - text", "-\t * 1 - pixmap", "-\t * 2 - foreground", "-\t * 3 - background", "-\t * 4 - id", "-\t * 5 - checked (if needed)", "-\t */", "-\tint COLUMN_NUM = (style&SWT.CHECK)!=0? 6:5;", "-\tint[] types = new int[COLUMN_NUM];", "-\ttypes[0] = OS.G_TYPE_STRING();", "-\ttypes[1] = OS.gdk_pixbuf_get_type();", "-\ttypes[2] = OS.GDK_TYPE_COLOR();", "-\ttypes[3] = OS.GDK_TYPE_COLOR();", "-\ttypes[4] = OS.G_TYPE_INT();", "-\tif ((style&SWT.CHECK) != 0) types[5] = OS.G_TYPE_BOOLEAN();", "-\tmodelHandle = OS.gtk_tree_store_newv(COLUMN_NUM, types);", "+\t/*", "+\t* Columns:", "+\t* 0 - text", "+\t* 1 - pixmap", "+\t* 2 - foreground", "+\t* 3 - background", "+\t* 4 - id", "+\t* 5 - checked (if needed)", "+\t*/", "+\tint [] types = new int [(style & SWT.CHECK) !=0 ? 6 : 5];", "+\ttypes [0] = OS.G_TYPE_STRING ();", "+\ttypes [1] = OS.GDK_TYPE_PIXBUF ();", "+\ttypes [2] = OS.GDK_TYPE_COLOR ();", "+\ttypes [3] = OS.GDK_TYPE_COLOR ();", "+\ttypes [4] = OS.G_TYPE_INT ();", "+\tif ((style & SWT.CHECK) != 0) types [5] = OS.G_TYPE_BOOLEAN ();", "+\tmodelHandle = OS.gtk_tree_store_newv (types.length, types);", "-\thandle = OS.gtk_tree_view_new_with_model(modelHandle);", "+\thandle = OS.gtk_tree_view_new_with_model (modelHandle);", "-\t", "+\tint columnHandle = OS.gtk_tree_view_column_new ();", "+\tif (columnHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tint checkRenderer = OS.gtk_cell_renderer_toggle_new ();", "+\t\tif (checkRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, checkRenderer, false);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", 5);", "+\t\tDisplay display = getDisplay ();", "+\t\tOS.g_signal_connect (checkRenderer, OS.toggled, display.treeToggleProc, handle);", "+\t}", "+\tint pixbufRenderer = OS.gtk_cell_renderer_pixbuf_new ();", "+\tif (pixbufRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, false);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", 1);", "+\tint textRenderer = OS.gtk_cell_renderer_text_new ();", "+\tif (textRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, true);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"text\", 0);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", 2);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", 3);", "+\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "-\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_EXTENDED : OS.GTK_SELECTION_BROWSE;", "-\tint selectionObject = OS.gtk_tree_view_get_selection(handle);", "-\tOS.gtk_tree_selection_set_mode(selectionObject, mode);", "-\tOS.gtk_tree_view_set_headers_visible(handle, false);\t", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (scrolledHandle);", "+\tOS.gtk_widget_show (handle);", "+", "+\tint mode = (style & SWT.MULTI) != 0 ? OS.GTK_SELECTION_MULTIPLE : OS.GTK_SELECTION_BROWSE;", "+\tint selectionHandle = OS.gtk_tree_view_get_selection (handle);", "+\tOS.gtk_tree_selection_set_mode (selectionHandle, mode);", "+\tOS.gtk_tree_view_set_headers_visible (handle, false);\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-\tcolumnHandle = OS.gtk_tree_view_column_new();", "-\tint renderer;", "-\trenderer = OS.gtk_cell_renderer_text_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, true);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"text\", 0);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"foreground-gdk\", 2);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"background-gdk\", 3);", "-\trenderer = OS.gtk_cell_renderer_pixbuf_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"pixbuf\", 1);", "-\tif ((style & SWT.CHECK) != 0) {", "-\t\trenderer = OS.gtk_cell_renderer_toggle_new();", "-\t\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"active\", 5);", "-\t\tOS.g_signal_connect(renderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "-\t}", "-\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "-\tOS.gtk_tree_view_set_headers_visible(handle, false);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26b835caafaf51145e3186af3f5dd576", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "08ed4d34906d3cb004511badd9a3286f04d40b7a", "commitAfterChange": "3587c6fb9068182d41169c6c886f0d5faa0219e6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\thandle = OS.gtk_ctree_new (1, 0);", "-\tif (handle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+", "+\t/* Columns:", "+\t * 0 - text", "+\t * 1 - pixmap", "+\t * 2 - foreground", "+\t * 3 - background", "+\t * 4 - id", "+\t * 5 - checked (if needed)", "+\t */", "+\tint COLUMN_NUM = (style&SWT.CHECK)!=0? 6:5;", "+\tint[] types = new int[COLUMN_NUM];", "+\ttypes[0] = OS.G_TYPE_STRING();", "+\ttypes[1] = OS.gdk_pixbuf_get_type();", "+\ttypes[2] = OS.GDK_TYPE_COLOR();", "+\ttypes[3] = OS.GDK_TYPE_COLOR();", "+\ttypes[4] = OS.G_TYPE_INT();", "+\tif ((style&SWT.CHECK) != 0) types[5] = OS.G_TYPE_BOOLEAN();", "+\tmodelHandle = OS.gtk_tree_store_newv(COLUMN_NUM, types);", "+\tif (modelHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = OS.gtk_tree_view_new_with_model(modelHandle);", "+\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t", "-\tOS.gtk_widget_show (fixedHandle);", "-\tOS.gtk_widget_show (scrolledHandle);", "-\tOS.gtk_widget_show (handle);", "-\t", "-\t/* Force row_height to be computed */", "-\tOS.gtk_clist_set_row_height (handle, 0);", "-\t\t", "-\t/* Single or Multiple Selection */", "-\tOS.gtk_clist_set_selection_mode (handle, mode);", "-\t", "-\t/* Scrolling policy */", "+\tint selectionObject = OS.gtk_tree_view_get_selection(handle);", "+\tOS.gtk_tree_selection_set_mode(selectionObject, mode);", "+\tOS.gtk_tree_view_set_headers_visible(handle, false);\t", "-\t", "+\tif ((style & SWT.BORDER) != 0) OS.gtk_scrolled_window_set_shadow_type (scrolledHandle, OS.GTK_SHADOW_ETCHED_IN);", "+\tOS.gtk_widget_show (fixedHandle);", "+\tOS.gtk_widget_show (scrolledHandle);", "+\tOS.gtk_widget_show (handle);", "+\tcolumnHandle = OS.gtk_tree_view_column_new();", "+\tint renderer;", "+\trenderer = OS.gtk_cell_renderer_text_new();", "+\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, true);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"text\", 0);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"foreground-gdk\", 2);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"background-gdk\", 3);", "+\trenderer = OS.gtk_cell_renderer_pixbuf_new();", "+\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"pixbuf\", 1);", "-\t\tOS.gtk_widget_realize (handle);", "-\t\tuncheck = createCheckPixmap (false);", "-\t\tcheck = createCheckPixmap (true);", "+\t\trenderer = OS.gtk_cell_renderer_toggle_new();", "+\t\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_tree_view_column_pack_end (columnHandle, renderer, false);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, renderer, \"active\", 5);", "+\t\tOS.g_signal_connect(renderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "+\tOS.gtk_tree_view_insert_column (handle, columnHandle, 0);", "+\tOS.gtk_tree_view_set_headers_visible(handle, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbaa866de65901186f1d726cb990be2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5d4a728d78aff9d58950f0a717e0a00ab88bc4c4", "commitAfterChange": "0a6f4926f8d9bffb18e90e03aeb912226e94bd90", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int _createColumnHandle(int index)", "signatureAfterChange": "  int _createColumnHandle(int index, TableColumn column)", "diff": ["-int _createColumnHandle(int index) {", "+int _createColumnHandle(int index, TableColumn column) {", "-\tint renderer;", "-\trenderer = OS.gtk_cell_renderer_text_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end(columnHandle, renderer, true);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"text\", index);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"foreground-gdk\", 2*MAX_COLUMNS+1);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"background-gdk\", 2*MAX_COLUMNS+2);", "-\trenderer = OS.gtk_cell_renderer_pixbuf_new();", "-\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_end(columnHandle, renderer, false);", "-\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"pixbuf\", index+MAX_COLUMNS);", "+\tint textRenderer = OS.gtk_cell_renderer_text_new();", "+\tif (textRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end(columnHandle, textRenderer, true);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"text\", index);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"foreground-gdk\", 2*MAX_COLUMNS+1);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, textRenderer, \"background-gdk\", 2*MAX_COLUMNS+2);", "+\tint pixbufRenderer = OS.gtk_cell_renderer_pixbuf_new();", "+\tif (pixbufRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_tree_view_column_pack_end(columnHandle, pixbufRenderer, false);", "+\tOS.gtk_tree_view_column_add_attribute(columnHandle, pixbufRenderer, \"pixbuf\", index+MAX_COLUMNS);", "-\t\trenderer = OS.gtk_cell_renderer_toggle_new();", "-\t\tif (renderer == 0) error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_tree_view_column_pack_end(columnHandle, renderer, false);", "-\t\tOS.gtk_tree_view_column_add_attribute(columnHandle, renderer, \"active\", 2*MAX_COLUMNS);", "-\t\tOS.g_signal_connect(renderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "+\t\tint checkRenderer = OS.gtk_cell_renderer_toggle_new();", "+\t\tif (checkRenderer == 0) error(SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_tree_view_column_pack_end(columnHandle, checkRenderer, false);", "+\t\tOS.gtk_tree_view_column_add_attribute(columnHandle, checkRenderer, \"active\", 2*MAX_COLUMNS);", "+\t\tOS.g_signal_connect(checkRenderer, OS.toggled, getDisplay().toggleProc, columnHandle);", "+\tif (column!=null) {", "+\t\tcolumn.pixbufRendererHandle = pixbufRenderer;", "+\t} else {", "+\t\tfakePixbufRenderer = pixbufRenderer;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e18f63afabb13393e2f24dedd24460f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c1197d63815159c7e5c24ace1200cf534bfcb22b", "commitAfterChange": "ec53a50dab87701b0c55de08a31a3f33b6914aab", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check)", "signatureAfterChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "diff": ["-void createRenderers (int columnHandle, int modelIndex, boolean check) {", "+void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle) {", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", 0);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", CHECKED_COLUMN);", "+\t\t", "+\t\t/*", "+\t\t* Feature in GTK. The inconsistent property only exists in GTK 2.2.x.", "+\t\t*/", "+\t\tif (OS.gtk_major_version () >= 2 || (OS.gtk_major_version () == 2 && OS.gtk_minor_version () >= 2)) {", "+\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"inconsistent\", GRAYED_COLUMN);", "+\t\t}", "-\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, false);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", modelIndex);", "+\tint textRenderer = OS.gtk_cell_renderer_text_new ();", "+\tif (textRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "+\t", "-\tint textRenderer = OS.gtk_cell_renderer_text_new ();", "-\tif (textRenderer == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, true);", "+", "+\t/* Set alignment */", "+\tif ((columnStyle & SWT.RIGHT) != 0) {", "+\t\tOS.g_object_set (textRenderer, OS.xalign, 1f);", "+\t\tOS.g_object_set (pixbufRenderer, OS.xalign, 1f);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, true);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, false);", "+\t\tOS.gtk_tree_view_column_set_alignment (columnHandle, 1f);", "+\t} else if ((columnStyle & SWT.CENTER) != 0) {", "+\t\tOS.g_object_set (pixbufRenderer, OS.xalign, 1f);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, true);", "+\t\tOS.gtk_tree_view_column_pack_end (columnHandle, textRenderer, true);", "+\t\tOS.gtk_tree_view_column_set_alignment (columnHandle, 0.5f);", "+\t} else {", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, pixbufRenderer, false);", "+\t\tOS.gtk_tree_view_column_pack_start (columnHandle, textRenderer, true);", "+\t\tOS.gtk_tree_view_column_set_alignment (columnHandle, 0f);", "+\t}", "+", "+\t/* Add attributes */", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", modelIndex);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", 1);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", 2);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", FOREGROUND_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", BACKGROUND_COLUMN);"]}], "num": 20974}