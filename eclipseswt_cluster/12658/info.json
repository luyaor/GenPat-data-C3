{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7245e93508154442097b2330703a2d4e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5515a3ffab07ce03b8907f50bd5852c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "d8d3e8f612b1662e51aaeb1aba1b797cad6504c1", "commitAfterChange": "a2a2b61ca97ad1454fa39c9d961ae445a63a1a20", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  int accessibilityAttributeNames(int id, int sel)", "signatureAfterChange": "  int accessibilityAttributeNames(int id, int sel)", "diff": ["-\tint returnValue = super.accessibilityAttributeNames(id, sel);", "-\tNSMutableArray ourAttributes = NSMutableArray.arrayWithCapacity(10);", "-\tNSArray baseArray = new NSArray(returnValue);", "-\tourAttributes.addObjectsFromArray(baseArray);", "+\tif (accessibilityAttributes == null) {", "+\t\tNSMutableArray ourAttributes = NSMutableArray.arrayWithCapacity(10);", "+\t\tourAttributes.addObject(OS.NSAccessibilityRoleAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityRoleDescriptionAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityParentAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityPositionAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilitySizeAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityWindowAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityTopLevelUIElementAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityFocusedAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityValueAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityMaxValueAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityMinValueAttribute);", "+\t\t// The accessibility documentation says that these next two are optional, but the", "+\t\t// Accessibility Verifier says they are required.", "+\t\tourAttributes.addObject(OS.NSAccessibilityNextContentsAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityPreviousContentsAttribute);", "+\t\tourAttributes.addObject(OS.NSAccessibilityOrientationAttribute);", "+\t\taccessibilityAttributes = ourAttributes;", "+\t\taccessibilityAttributes.retain();", "+\t}", "-\t// The accessibility documentation says that these next two are optional, but the", "-\t// Accessibility Verifier says they are required.", "-\tourAttributes.addObject(OS.NSAccessibilityNextContentsAttribute);", "-\tourAttributes.addObject(OS.NSAccessibilityPreviousContentsAttribute);", "-\tourAttributes.addObject(OS.NSAccessibilityOrientationAttribute);", "-\tourAttributes.addObject(OS.NSAccessibilityValueAttribute);", "-\tourAttributes.addObject(OS.NSAccessibilityMaxValueAttribute);", "-\tourAttributes.addObject(OS.NSAccessibilityMinValueAttribute);", "-\t", "-\treturn ourAttributes.id;", "+\treturn accessibilityAttributes.id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19ff3d52b8ef824ba713677f3b725b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "d8955edbe9f5c9464b222d0331748137a5a534b7", "commitAfterChange": "b533c1ac7667bcd66286ef15cde6bafc62a4cf97", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-\t\t\trc = localFile.QueryInterface(nsIFile.NS_IFILE_24_IID, result);", "+\t\t\trc = localFile.QueryInterface (IIDStore.GetIID (nsIFile.class, MozillaVersion.VERSION_XR24, true), result);", "-\t\t\t\tnsISupports.IsXULRunner24 = true;", "+\t\t\t\tMozillaVersion.SetCurrentVersion (MozillaVersion.VERSION_XR24);", "-\t\t\t\trc = localFile.QueryInterface (nsILocalFile.NS_ILOCALFILE_IID, result);", "+\t\t\t\trc = localFile.QueryInterface (IIDStore.GetIID (nsILocalFile.class, MozillaVersion.VERSION_XR10), result);", "+\t\t\t\t\t/* appears to be an unsupported version */", "-\t\t\t\tIsPre_24 = true;", "-\t\t\t\tnsISupports.IsXULRunner10 = true;", "+\t\t\t\tMozillaVersion.SetCurrentVersion (MozillaVersion.VERSION_XR10);", "-\t\t\tIsPre_4 = IsPre_24 = true;", "+\t\t\t/*", "+\t\t\t * For now guess that the version is 1.9.2.x (aka 3.6.x), will determine", "+\t\t\t * this more precisely once a browser instance has been created.", "+\t\t\t */", "+\t\t\tMozillaVersion.SetCurrentVersion (MozillaVersion.VERSION_XR1_9_2);", "-\t\tif (nsISupports.IsXULRunner24) {", "+\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24, true)) {", "-\t\tif (IsPre_4) {", "-\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);", "-\t\t} else {", "+\t\tif (MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR10)) {", "+\t\t} else {", "+\t\t\trc = XPCOM.Call (functionPtr, localFile.getAddress (), localFile.getAddress (), LocationProvider.getAddress (), 0, 0);", "-\t\tIsPre_4 = IsPre_24 = true;", "+\t\t/*", "+\t\t * For now guess that the version is equivalent to Firefox 3.6.x (aka XULRunner 1.9.2.x),", "+\t\t * will determine this more precisely once a browser instance has been created.", "+\t\t */", "+\t\tMozillaVersion.SetCurrentVersion (MozillaVersion.VERSION_XR1_9_2);"]}], "num": 12658}