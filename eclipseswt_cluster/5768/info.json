{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8dced58ccfce99efa7bf70d0f6af6c4a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be48d681be309b6269eba6e612321a5a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r int processShow (int callData)", "signatureAfterChange": "\r int XmNmapCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processShow (int callData) {\r", "-\tif ((style & SWT.POP_UP) != 0) return 0;\r", "-\t/*\r", "-\t* SWT.Selection events are posted to allow stepping\r", "-\t* in the VA/Java debugger.  SWT.Show events are\r", "-\t* sent to ensure that application event handler\r", "-\t* code runs before the menu is displayed.  This\r", "-\t* means that SWT.Show events would normally occur\r", "-\t* before SWT.Selection events.  While this is not \r", "-\t* strictly incorrect, applications often use the \r", "-\t* SWT.Selection event to update the state of menu\r", "-\t* items and would like the ordering of events to \r", "-\t* be the other way around.\r", "-\t*\r", "-\t* The fix is to run the deferred events before\r", "-\t* the menu is shown.  This means that stepping\r", "-\t* through a selection event that was caused by\r", "-\t* a popup menu will fail in VA/Java.\r", "-\t*/\r", "-\tDisplay display = getDisplay ();\r", "-\tdisplay.runDeferredEvents ();\r", "-\tsendEvent (SWT.Show);\r", "-\treturn 0;\r", "+}\r", "+int XmNmapCallback (int w, int client_data, int call_data) {\r", "+\tif ((style & SWT.POP_UP) != 0) return 0;\r", "+\t/*\r", "+\t* SWT.Selection events are posted to allow stepping\r", "+\t* in the VA/Java debugger.  SWT.Show events are\r", "+\t* sent to ensure that application event handler\r", "+\t* code runs before the menu is displayed.  This\r", "+\t* means that SWT.Show events would normally occur\r", "+\t* before SWT.Selection events.  While this is not \r", "+\t* strictly incorrect, applications often use the \r", "+\t* SWT.Selection event to update the state of menu\r", "+\t* items and would like the ordering of events to \r", "+\t* be the other way around.\r", "+\t*\r", "+\t* The fix is to run the deferred events before\r", "+\t* the menu is shown.  This means that stepping\r", "+\t* through a selection event that was caused by\r", "+\t* a popup menu will fail in VA/Java.\r", "+\t*/\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.runDeferredEvents ();\r", "+\tsendEvent (SWT.Show);\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bae4c6d3d9f9c4d0f1fa1226af02ff42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r int processHide (int callData)", "signatureAfterChange": "\r int XmNunmapCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processHide (int callData) {\r", "-\tsendEvent (SWT.Hide);\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XmNunmapCallback (int w, int client_data, int call_data) {\r", "+\tsendEvent (SWT.Hide);\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dd1154f1a2470c23fe18e57d5aab96a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r int processModify (int callData)", "signatureAfterChange": "\r int XmNmapCallback (int w, int client_data, int call_data)", "diff": ["-}\r", "-int processModify (int callData) {\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XmNmapCallback (int w, int client_data, int call_data) {\r", "+\treturn 0;\r", "+}\r"]}], "num": 5768}