{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07767960e797b30410d45ec5561a0461", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0ca2dc90753c34676cdb25044712999", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "diff": ["+\tImageData data = null;", "+\tImageData data1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tImage image = null;", "+\t", "+\ttry {", "+\t\timage = new Image(display, data, data1);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData source == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata1 = null;", "+\ttry {", "+\t\timage = new Image(display, data, data1);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData mask == null\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata1 = new ImageData(1, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\ttry {", "+\t\timage = new Image(display, data, data1);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData source width != ImageData mask width\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\ttry {", "+\t\timage = new Image(display, data, data1);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData source height != ImageData mask height\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\tdata = new ImageData(10, 10, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata1 = new ImageData(10, 10, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\ttry {", "+\t\timage = new Image(display, data, data1);", "+\t\timage.dispose();", "+\t\tfail(\"No exception thrown for ImageData mask color depth != 1\");", "+\t} catch (IllegalArgumentException e) {", "+\t}", "+", "+\t// This test isn't finished yet, don't remove until it is!  Should test mask support."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b39124c6bae97214df5259ca0c873e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "3662db272ba3f22c265ccb33ec1d70dc00da152e", "commitAfterChange": "122ce28aad692005501429b7470da4d056e90df6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  @Test public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "signatureAfterChange": "  @Test public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLorg_eclipse_swt_graphics_ImageDataLorg_eclipse_swt_graphics_ImageData()", "diff": ["-\tImageData data1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tImageData data1 = new ImageData(10, 10, 1, new PaletteData(new RGB(0, 0, 0)));", "-\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB(0, 0, 0)));", "-\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "-\tdata1 = new ImageData(1, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata = new ImageData(10, 10, 1, new PaletteData(new RGB(0, 0, 0)));", "+\tdata1 = new ImageData(1, 10, 1, new PaletteData(new RGB(0, 0, 0)));", "-\tdata = new ImageData(10, 1, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "-\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata = new ImageData(10, 1, 1, new PaletteData(new RGB(0, 0, 0)));", "+\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB(0, 0, 0)));", "-\tdata = new ImageData(10, 10, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "-\tdata1 = new ImageData(10, 10, 8, new PaletteData(new RGB[] {new RGB(0, 0, 0)}));", "+\tdata = new ImageData(10, 10, 8, new PaletteData(new RGB(0, 0, 0)));", "+\tdata1 = new ImageData(10, 10, 8, new PaletteData(new RGB(0, 0, 0)));", "-\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB[] {new RGB(0, 0, 0), new RGB(255, 255, 255)}));", "+\tdata1 = new ImageData(10, 10, 1, new PaletteData(new RGB(0, 0, 0), new RGB(255, 255, 255)));"]}], "num": 10352}