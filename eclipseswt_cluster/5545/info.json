{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ace6357295e264546aa532b9117cff0e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c77684e5ba2935069db1e3508a2798", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "eece41947f36e8e7a0b097c77d77785422abb14b", "commitAfterChange": "6119c05912f91a47c099592d9acc0e2f586f013d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test_copy()", "signatureAfterChange": "  public void test_copy()", "diff": ["-//\ttext.copy();", "-//", "-//\ttext.selectAll();", "-//\ttext.copy();", "-//\tassertEquals(\"\", text.getSelectionText());", "-//", "-//\ttext.setText(\"00000\");", "-//\ttext.selectAll();", "-//\ttext.copy();", "-//\ttext.setSelection(2);", "-//\tassertEquals(\"\", text.getSelectionText());", "-//", "-//\ttext.setText(\"\");", "-//\ttext.paste();", "-//\tassertEquals(\"00000\", text.getText());", "-//\t", "-//\t// tests a SINGLE line text editor", "-//\tmakeCleanEnvironment(true);", "-//\t", "-//\ttext.copy();", "-//", "-//\ttext.selectAll();", "-//\ttext.copy();", "-//\tassertEquals(\"\", text.getSelectionText());", "-//", "-//\ttext.setText(\"00000\");", "-//\ttext.selectAll();", "-//\ttext.copy();", "-//\ttext.setSelection(2);", "-//\tassertEquals(\"\", text.getSelectionText());", "-//", "-//\ttext.setText(\"\");", "-//\ttext.paste();", "-//\tassertEquals(\"00000\", text.getText());", "+\ttext.copy();", "+", "+\ttext.selectAll();", "+\ttext.copy();", "+\tassertEquals(\"\", text.getSelectionText());", "+", "+\ttext.setText(\"00000\");", "+\ttext.selectAll();", "+\ttext.copy();", "+\ttext.setSelection(2);", "+\tassertEquals(\"\", text.getSelectionText());", "+", "+\ttext.setText(\"\");", "+\ttext.paste();", "+\tassertEquals(\"00000\", text.getText());", "+\t", "+\t// tests a SINGLE line text editor", "+\tmakeCleanEnvironment(true);", "+\t", "+\ttext.copy();", "+", "+\ttext.selectAll();", "+\ttext.copy();", "+\tassertEquals(\"\", text.getSelectionText());", "+", "+\ttext.setText(\"00000\");", "+\ttext.selectAll();", "+\ttext.copy();", "+\ttext.setSelection(2);", "+\tassertEquals(\"\", text.getSelectionText());", "+", "+\ttext.setText(\"\");", "+\ttext.paste();", "+\tassertEquals(\"00000\", text.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9373696278792753d5b4b183b1bbbc1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/gtk/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "8ea4c2269ba192f20a562c289e6a9e0ae6d5f977", "commitAfterChange": "513832a7ea6752f6c56e23db9e0e57359b9f3da6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["+\t\t", "+\t\tif (printerData != null) {", "+\t\t\tif (printerData.otherData != null) {", "+\t\t\t\tPrinter.restore(printerData.otherData, settings, page_setup);", "+\t\t\t}", "+\t\t\t/* Set values of settings from PrinterData. */", "+\t\t\tPrinter.setScope(settings, printerData.scope, printerData.startPage, printerData.endPage);", "+\t\t\t//TODO: Should we look at printToFile, or driver/name for \"Print to File\", or both? (see gtk bug 345590)", "+\t\t\tif (printerData.printToFile) {", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, printerData.fileName, true);", "+\t\t\t\tOS.gtk_print_settings_set(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI, buffer);", "+\t\t\t}", "+\t\t\tif (printerData.driver.equals(\"GtkPrintBackendFile\") && printerData.name.equals(\"Print to File\")) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, printerData.fileName, true);", "+\t\t\t\tOS.gtk_print_settings_set(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI, buffer);", "+\t\t\t}", "+\t\t\tOS.gtk_print_settings_set_n_copies(settings, printerData.copyCount);", "+\t\t\tOS.gtk_print_settings_set_collate(settings, printerData.collate);\t", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe56d510b29cdc108e4f87efbdfdd809", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_custom_StyledText.java", "commitBeforeChange": "09cfe393cadcc6af1f04e0253e0a32ffe94fa83a", "commitAfterChange": "2c464df8c4df814b94d6e6626547589fd3236ce4", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  public void test_paste()", "signatureAfterChange": "  public void test_paste()", "diff": ["+\t// test paste with text limit with no selection", "+\tclipboard.setContents(new String[]{\"abcde\"}, new Transfer[]{transfer});", "+\ttext.setTextLimit(3);", "+\ttext.copy();", "+\ttext.paste();", "+\tassertTrue(\":j:\", text.getText() != null && text.getText().equals(\"abc\"));", "+\ttext.setText(\"\");", "+", "+\t// test paste with text limit with full selection", "+\tclipboard.setContents(new String[]{\"abcde\"}, new Transfer[]{transfer});", "+\ttext.setTextLimit(3);", "+\ttext.setText(\"123\");", "+\ttext.setSelection(0, 3);", "+\ttext.paste();", "+\tassertTrue(\":k:\", text.getText() != null && text.getText().equals(\"abc\"));", "+\ttext.setText(\"\");", "+", "+\t// test paste with text limit with partial selection", "+\tclipboard.setContents(new String[]{\"abcde\"}, new Transfer[]{transfer});", "+\ttext.setTextLimit(3);", "+\ttext.setText(\"123\");", "+\ttext.setSelection(0, 1);", "+\ttext.paste();", "+\tassertTrue(\":l:\", text.getText() != null && text.getText().equals(\"a23\"));", "+\ttext.setText(\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff77fee24d97829d353b5e5c23f194e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "8fde8fcbb781a32691eb37121e23a20db53e1ea6", "commitAfterChange": "9780776c5c4d623ed8c4e9ba64b74a19e324a8b3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void test_getSelectionCount()", "signatureAfterChange": "  public void test_getSelectionCount()", "diff": ["-\tmakeCleanEnvironment(true); // use single-selection tree.", "-", "+\tfor (int i = 0; i < number; i++)", "+\t\titems[i] = new TreeItem(tree, 0);", "+", "+\tassertEquals(0, tree.getSelectionCount());", "+", "+\ttree.setSelection(new TreeItem[]{items[2]});", "+\tassertEquals(1, tree.getSelectionCount());", "+\t", "+\ttree.setSelection(new TreeItem[]{items[number-1]});", "+\tassertEquals(1, tree.getSelectionCount());", "+\t", "+\ttree.setSelection(new TreeItem[]{items[10]});", "+\tassertEquals(1, tree.getSelectionCount());", "+\t", "+\ttree.setSelection(new TreeItem[]{items[2], items[number-1], items[10]});", "+\tassertEquals(3, tree.getSelectionCount());", "+\t", "+\ttree.setSelection(items);", "+\tassertEquals(15, tree.getSelectionCount());", "+", "+\ttree.setSelection(new TreeItem[]{});", "+\tassertEquals(0, tree.getSelectionCount());", "+\t", "+\t", "+\tmakeCleanEnvironment(true); // use single-selection tree.", "+\t", "+\titems = new TreeItem[number];", "+\tassertEquals(0, tree.getSelectionCount());", "+", "+\ttree.setSelection(new TreeItem[]{});"]}], "num": 5545}