{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c4d725f93cdbf557136310faee9209e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c69d82077f1bdd9f8167fe365ee4a84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "852f17f3e885ddde267886a8be3483ac6f27465d", "commitAfterChange": "3cdae47da159662ce7eb57e9a6b0f13f94eaec5c", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 137, "signatureBeforeChange": "  void unhookDOMListeners ()", "signatureAfterChange": "  void unhookDOMListeners ()", "diff": ["-", "-\tnsIDOMWindow_1_9 window_1_9 = null;", "-\tnsIDOMWindow window = null;", "-\tif (!IsPre_2) {", "-\t\twindow = new nsIDOMWindow (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = window.QueryInterface (nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\t} else {", "-\t\twindow_1_9 = new nsIDOMWindow_1_9 (result[0]);", "-\t\tresult[0] = 0;", "-\t\trc = window_1_9.QueryInterface (nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "-\t}", "-", "+\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "+\tresult[0] = 0;", "+\trc = window.QueryInterface (!IsPre_4 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_8_IID : nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\trc = !IsPre_2 ? window.GetFrames (result) : window_1_9.GetFrames(result);", "+\trc = window.GetFrames (result);", "-\t\t\trc = frame.QueryInterface (!IsPre_2 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID : nsIDOMEventTarget_1_9.NS_IDOMEVENTTARGET_IID, result);", "+\t\t\trc = frame.QueryInterface (!IsPre_4 ? nsIDOMEventTarget.NS_IDOMEVENTTARGET_8_IID : nsIDOMEventTarget.NS_IDOMEVENTTARGET_IID, result);", "-\tif (!IsPre_2) window.Release ();", "-\telse window_1_9.Release();", "+\twindow.Release ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a0f1f89f1b15c4d4bdac3a1c3c4332", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  long convertRgn(long rgn, double[] matrix)", "signatureAfterChange": "  long convertRgn(long rgn, double[] matrix)", "diff": ["-\tlong /*int*/ newRgn = Region.cairo_region_create ();", "+\tlong /*int*/ newRgn = OS.gdk_region_new();", "-\tRegion.cairo_region_get_rectangles (rgn, rects, nRects);", "+\tRegion.gdk_region_get_rectangles(rgn, rects, nRects);", "-\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\tlong /*int*/ polyRgn = Region.cairoPolygonRgn(pointArray);", "-\t\t\tCairo.cairo_region_union(newRgn, polyRgn);", "-\t\t\tCairo.cairo_region_destroy(polyRgn);", "-\t\t} else {", "-\t\t\tlong /*int*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\t\tOS.gdk_region_union(newRgn, polyRgn);", "-\t\t\tOS.gdk_region_destroy(polyRgn);", "-\t\t}", "+\t\tlong /*int*/ polyRgn = Region.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "+\t\tOS.gdk_region_union(newRgn, polyRgn);", "+\t\tOS.gdk_region_destroy(polyRgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd1f87a39ab404b42e7115ef7f3e3bbf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public Rectangle getBounds ()", "signatureAfterChange": " public Rectangle getBounds()", "diff": ["-}", "-public Rectangle getBounds () {", "-\tint columnCount = parent.getColumnCount ();", "-\tint focusX = getFocusX ();", "-\t", "-\t/*", "-\t * If there are no columns then this is essentially the bounds of the text", "-\t */", "-\tif (columnCount == 0) {", "-\t\treturn new Rectangle (", "-\t\t\tfocusX,", "-\t\t\tparent.getItemY (this),", "-\t\t\tgetTextPaintWidth (0),", "-\t\t\tparent.getItemHeight ());", "-\t}", "-\t", "-\t/*", "-\t * If there are columns then this runs from the beginning of the column 0", "-\t * text to the end of the last column.", "-\t */", "-\tTreeColumn lastColumn = parent.getColumn (columnCount - 1);", "-\treturn new Rectangle (", "-\t\tfocusX,", "-\t\tparent.getItemY (this),", "-\t\tlastColumn.getX () + lastColumn.getWidth () - focusX,", "-\t\tparent.getItemHeight ());", "-}", "+public Rectangle getBounds() {", "+\tcheckWidget();", "+\tTree2 parent = getParent();", "+\tPoint extent = getItemExtent();", "+\tint x = getTextXPos() - TEXT_INDENT;", "+\t", "+\treturn new Rectangle(x, parent.getRedrawY(this), extent.x - (x - getItemStartX()), extent.y);\t"]}], "num": 6491}