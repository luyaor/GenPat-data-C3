{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7cd5005f3148e3db42c7cda37918c5ae", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d142195e31f4c0f4c2c0a5c8c8975675", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "969216653c365b19da222e5f458c6826fc5ce497", "commitAfterChange": "78acf95dd65985072ad0c857bc116c7da7df51d1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int linex, int y, StyleItem[] line, int index, int color, RECT clipRect, int alpha)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int linex, int y, StyleItem[] line, int index, int color, RECT clipRect, int alpha)", "diff": ["-\t\t\t\t\tint[] points = computePolyline(x, squigglyY, x + run.width, squigglyY + squigglyHeight);", "+\t\t\t\t\tint squigglyX = x;", "+\t\t\t\t\tfor (int i = index; i > 0 && style.isAdherentUnderline(line[i - 1].style); i--) {", "+\t\t\t\t\t\tsquigglyX = linex + line[i - 1].x;", "+\t\t\t\t\t}", "+\t\t\t\t\tint gstate = 0;", "+\t\t\t\t\tif (clipRect == null) {", "+\t\t\t\t\t\tgstate = Gdip.Graphics_Save(graphics);", "+\t\t\t\t\t\tRect gdipRect = new Rect();", "+\t\t\t\t\t\tgdipRect.X = x;", "+\t\t\t\t\t\tgdipRect.Y = y;", "+\t\t\t\t\t\tgdipRect.Width = run.width;", "+\t\t\t\t\t\tgdipRect.Height = run.ascent + run.descent;", "+\t\t\t\t\t\tGdip.Graphics_SetClip(graphics, gdipRect, Gdip.CombineModeIntersect);", "+\t\t\t\t\t}", "+\t\t\t\t\tint[] points = computePolyline(squigglyX, squigglyY, x + run.width, squigglyY + squigglyHeight);", "+\t\t\t\t\tif (gstate != 0) Gdip.Graphics_Restore(graphics, gstate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78853c9208cee719490b826a83433d64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "dd0d116adc80fdc9fcb447974dacba1785010c00", "commitAfterChange": "969216653c365b19da222e5f458c6826fc5ce497", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void drawLines(boolean advance, int graphics, int x, int y, StyleItem run, int color, RECT clipRect, int alpha)", "signatureAfterChange": "  void drawLines(boolean advance, int graphics, int linex, int y, StyleItem[] line, int index, int color, RECT clipRect, int alpha)", "diff": ["-void drawLines(boolean advance, int /*long*/ graphics, int x, int y, StyleItem run, int /*long*/ color, RECT clipRect, int alpha) {", "+void drawLines(boolean advance, int /*long*/ graphics, int linex, int y, StyleItem[] line, int index, int /*long*/ color, RECT clipRect, int alpha) {", "+\tStyleItem run = line[index];", "+\tint x = linex + run.x;", "-\t\t\t\t\tint state = 0;", "-\t\t\t\t\tif (clipRect != null) {", "-\t\t\t\t\t\tstate = OS.SaveDC(graphics);", "-\t\t\t\t\t\tOS.IntersectClipRect(graphics, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\tint squigglyX = x;", "+\t\t\t\t\tfor (int i = index; i > 0 && style.isAdherentUnderline(line[i - 1].style); i--) {", "+\t\t\t\t\t\tsquigglyX = linex + line[i - 1].x;", "-\t\t\t\t\tint[] points = computePolyline(x, squigglyY, x + run.width, squigglyY + squigglyHeight);", "+\t\t\t\t\tint state = OS.SaveDC(graphics);", "+\t\t\t\t\tif (clipRect != null) {", "+\t\t\t\t\t\tOS.IntersectClipRect(graphics, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.IntersectClipRect(graphics, x, y, x + run.width, y + run.ascent + run.descent);", "+\t\t\t\t\t}", "+\t\t\t\t\tint[] points = computePolyline(squigglyX, squigglyY, x + run.width, squigglyY + squigglyHeight);", "-\t\t\t\t\tif (state != 0) OS.RestoreDC(graphics, state);", "+\t\t\t\t\tOS.RestoreDC(graphics, state);"]}], "num": 24942}