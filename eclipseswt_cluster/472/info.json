{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b07daba75fde850df84ea932ba41875", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81d5672ffc8b7f40474241a8369c6de8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "907c4dd47a285571bf0d66e34d1a9323e15dd90b", "commitAfterChange": "e4b1a868ce731255239223c8ff6f43351c81a864", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void addCTabFolderCloseListener(CTabFolderCloseListener listener)", "signatureAfterChange": " public void addCTabFolderListener(CTabFolderListener listener)", "diff": ["-public void addCTabFolderCloseListener(CTabFolderCloseListener listener) {", "-\tCTabFolderCloseListener[] newListeners = new CTabFolderCloseListener[closeListeners.length + 1];", "-\tSystem.arraycopy(closeListeners, 0, newListeners, 0, closeListeners.length);", "-\tcloseListeners = newListeners;", "-\tcloseListeners[closeListeners.length - 1] = listener;", "-}", "+\tcheckWidget();", "+\tif (listener == null) SWT.error (SWT.ERROR_NULL_ARGUMENT);", "+\t// add to array", "+\tCTabFolderListener[] newTabListeners = new CTabFolderListener[tabListeners.length + 1];", "+\tSystem.arraycopy(tabListeners, 0, newTabListeners, 0, tabListeners.length);", "+\ttabListeners = newTabListeners;", "+\ttabListeners[tabListeners.length - 1] = listener;", "+\t// display close button to be backwards compatible", "+\tif (!showClose) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989ac63514393af583ea30c72076c913", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "907c4dd47a285571bf0d66e34d1a9323e15dd90b", "commitAfterChange": "e4b1a868ce731255239223c8ff6f43351c81a864", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void removeCTabFolderCloseListener(CTabFolderCloseListener listener)", "signatureAfterChange": " public void removeCTabFolderListener(CTabFolderListener listener)", "diff": ["-public void removeCTabFolderCloseListener(CTabFolderCloseListener listener) {", "-\tif (closeListeners.length == 0) return;", "-\tfor (int i = 0; i < closeListeners.length; i++) {", "-\t\tif (listener == closeListeners[i]){", "-\tif (closeListeners.length == 1) {", "-\t\tcloseListeners = new CTabFolderCloseListener[0];", "-\tCTabFolderCloseListener[] newTabListeners = new CTabFolderCloseListener[closeListeners.length - 1];", "-\tSystem.arraycopy(closeListeners, 0, newTabListeners, 0, index);", "-\tSystem.arraycopy(closeListeners, index + 1, newTabListeners, index, closeListeners.length - index - 1);", "-\tcloseListeners = newTabListeners;", "-}", "+\tif (tabListeners.length == 0) return;", "+\tfor (int i = 0; i < tabListeners.length; i++) {", "+\t\tif (listener == tabListeners[i]){", "+\tif (tabListeners.length == 1) {", "+\t\ttabListeners = new CTabFolderListener[0];", "+\tCTabFolderListener[] newTabListeners = new CTabFolderListener[tabListeners.length - 1];", "+\tSystem.arraycopy(tabListeners, 0, newTabListeners, 0, index);", "+\tSystem.arraycopy(tabListeners, index + 1, newTabListeners, index, tabListeners.length - index - 1);", "+\ttabListeners = newTabListeners;"]}], "num": 472}