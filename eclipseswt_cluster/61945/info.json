{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "213cd336225bbee0419d1545392a5305", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc836e949b1d138082ff2743d7b4774b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2b3120470b46968368044df3f94129d586bc41d5", "commitAfterChange": "30ea0c96d9ff7cdaadcc4282f37da7eaa76961bd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\tif ((style & SWT.VIRTUAL) != 0) {", "+\t\t/*", "+\t\t* Feature in GTK. The fixed_height_mode property only exists in GTK 2.3.2 and greater.", "+\t\t*/", "+\t\tif (OS.gtk_major_version () * 100 + OS.gtk_minor_version () * 10 + OS.gtk_micro_version () >= 232) {", "+\t\t\tOS.g_object_set (handle, OS.fixed_height_mode, true, 0);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1500c77bb9d5760f88ba6b6cc9c261d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "e2c2a7a74542ff409e980bc4b2fbaa161b141be9", "commitAfterChange": "06b0b6bb52d1fd2fb63bfd651ac4ecf3e0f11d0d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\tint newFont, oldFont = 0;", "-\t\tint hDC = OS.GetDC (handle);", "-\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "-\t\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "-\t\tRECT rect = new RECT ();", "-\t\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "-\t\tif ((style & SWT.READ_ONLY) == 0) flags |= OS.DT_EDITCONTROL;", "-\t\tint length = OS.GetWindowTextLength (handle);", "-\t\tint cp = getCodePage ();", "-\t\tTCHAR buffer = new TCHAR (cp, length + 1);", "-\t\tOS.GetWindowText (handle, buffer, length + 1);", "-\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\twidth = Math.max (width, rect.right - rect.left);", "-\t\tfor (int i=0; i<count; i++) {", "-\t\t\tlength = OS.SendMessage (handle, OS.CB_GETLBTEXTLEN, i, 0);", "-\t\t\tif (length != OS.CB_ERR) {", "-\t\t\t\tif (length + 1 > buffer.length ()) buffer = new TCHAR (cp, length + 1);", "-\t\t\t\tint result = OS.SendMessage (handle, OS.CB_GETLBTEXT, i, buffer);", "-\t\t\t\tif (result != OS.CB_ERR) {", "-\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "-\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\tif ((style & SWT.H_SCROLL) != 0) {", "+\t\t\twidth = OS.SendMessage (handle, OS.CB_GETHORIZONTALEXTENT, 0, 0);", "+\t\t} else {", "+\t\t\tint newFont, oldFont = 0;", "+\t\t\tint hDC = OS.GetDC (handle);", "+\t\t\tnewFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\tif (newFont != 0) oldFont = OS.SelectObject (hDC, newFont);", "+\t\t\tint count = OS.SendMessage (handle, OS.CB_GETCOUNT, 0, 0);", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tint flags = OS.DT_CALCRECT | OS.DT_NOPREFIX;", "+\t\t\tif ((style & SWT.READ_ONLY) == 0) flags |= OS.DT_EDITCONTROL;", "+\t\t\tint length = OS.GetWindowTextLength (handle);", "+\t\t\tint cp = getCodePage ();", "+\t\t\tTCHAR buffer = new TCHAR (cp, length + 1);", "+\t\t\tOS.GetWindowText (handle, buffer, length + 1);", "+\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\t\tfor (int i=0; i<count; i++) {", "+\t\t\t\tlength = OS.SendMessage (handle, OS.CB_GETLBTEXTLEN, i, 0);", "+\t\t\t\tif (length != OS.CB_ERR) {", "+\t\t\t\t\tif (length + 1 > buffer.length ()) buffer = new TCHAR (cp, length + 1);", "+\t\t\t\t\tint result = OS.SendMessage (handle, OS.CB_GETLBTEXT, i, buffer);", "+\t\t\t\t\tif (result != OS.CB_ERR) {", "+\t\t\t\t\t\tOS.DrawText (hDC, buffer, length, rect, flags);", "+\t\t\t\t\t\twidth = Math.max (width, rect.right - rect.left);", "+\t\t\t\t\t}", "+\t\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "+\t\t\tOS.ReleaseDC (handle, hDC);", "-\t\tif (newFont != 0) OS.SelectObject (hDC, oldFont);", "-\t\tOS.ReleaseDC (handle, hDC);", "+\tif ((style & SWT.H_SCROLL) != 0) height += OS.GetSystemMetrics (OS.SM_CYHSCROLL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb679168cc91656ef0d25f8b22a06f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "3ad7a3ebece37a67d0e7f3df035759203dd95550", "commitAfterChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": "  void setForeground (float [] color)", "signatureAfterChange": "  void setForeground (float [] color)", "diff": ["+\t\tif ((style & SWT.MULTI) != 0 && !isEnabled()) nsColor = NSColor.disabledControlTextColor();", "-\t\tnsColor = NSColor.colorWithCalibratedRed (color [0], color [1], color [2], 1);", "+\t\tfloat /*double*/ alpha = 1;", "+\t\tif ((style & SWT.MULTI) != 0 && !isEnabled()) alpha = 0.5f;", "+\t\tnsColor = NSColor.colorWithCalibratedRed (color [0], color [1], color [2], alpha);"]}], "num": 61945}