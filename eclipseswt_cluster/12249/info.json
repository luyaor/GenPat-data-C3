{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61e0af1eb067864b50b205ea6b7b24ed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f545e82e7d7b2cb5d26a8336c105fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_TextLayout.java", "commitBeforeChange": "0d507e89e6704c59427d9b6b7f6119a9ac58cf88", "commitAfterChange": "23dcd594fc9be3d0f9e4026ad70fbcc9f45464d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_getLineOffsets()", "signatureAfterChange": "  public void test_getLineOffsets()", "diff": ["-\t", "-\t//Bug 241482 comment 64", "-\tlayout.setText(\"\\nAB\");", "-    layout.setSegments(new int[] {0, 1, 3});", "-    expected = new int[] {0, 1, 3};", "-    offsets = layout.getLineOffsets();", "-    for (int i = 0; i < offsets.length; i++) {", "-        assertEquals(\" i = \" + i, expected[i], offsets[i]);    ", "-    }", "-    ", "-    /* wrong: internal testing */", "-//    text = \"AB\";", "-//    int textLength = text.length();", "-//    layout.setText(text);", "-//    String[] messages = {\"no segments\", \"segments\", \"segments (duplicate at 0)\", \"segments (duplicate at 1)\", \"segments (duplicate at 2)\"};", "-//    int[][] segments = {null, {0, 1, 2}, {0, 0, 1, 2}, {0, 1, 1, 2}, {0, 1, 2, 2}};", "-//    int[][] translatedOffsets = {{0, 1, 2}, {1, 3, 5}, {2, 4, 6}, {1, 4, 6}, {1, 3, 6}};", "-//    int[][] untranslatedOffsets = {{0, 1, 2}, {0, 0, 1, 1, 2, 2}, {0, 0, 0, 1, 1, 2, 2}, {0, 0, 1, 1, 1, 2, 2}, {0, 0, 1, 1, 2, 2, 2}};", "-//    for (int i = 0; i < segments.length; i++) {", "-//        layout.setSegments(segments[i]);", "-//        layout.getBounds();", "-//        for (int j = 0; j <= textLength; j++) { ", "-//            assertEquals(messages[i] + \" j = \" + j, translatedOffsets[i][j], layout.translateOffset(j));", "-//        }", "-//        for (int j = 0, n = layout.getSegments() == null ? 0 : textLength + layout.getSegments().length; j < n; j++) { ", "-//            assertEquals(messages[i] + \" j = \" + j, untranslatedOffsets[i][j], layout.untranslateOffset(j));", "-//        }", "-//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcddbe6de7e82c760d2962139933dd02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "1f6933a1b15056c0d45fcdf5019d55449793c82d", "commitAfterChange": "03b27348c501db581e6b7fd3b2d0cc945cd398ee", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 70, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-\tCTabFolderEvent e = new CTabFolderEvent(this);", "-\te.widget = this;", "-\te.time = event.time;", "-\te.gc = event.gc;", "-\te.doit = true;", "-\tfor (int i = 0; i < folderListeners.length; i++) {", "-\t\tfolderListeners[i].drawTabs(e);", "-\t}", "-\tif (isDisposed()) return;", "-\tif (e.doit) drawTabArea(event);", "+\tdrawTabArea(event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd73e147f640918281ec7bacd3093f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "982cd53e0d78db18706bf0846ac669e298de32e2", "commitAfterChange": "165673b92d78dcd017af081458f5cae6d2eb17c6", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["-\t\t\t\tif (item == anchor) OS.TreeViewItem_IsSelected (item.handle, !selected);", "-\t\t\t\tif (selected) {", "-\t\t\t\t\tint selectedItem = OS.TreeView_SelectedItem (handle);", "-\t\t\t\t\tif (selectedItem != 0) {", "-\t\t\t\t\t\tif (OS.Object_Equals (item.handle, selectedItem)) {", "-\t\t\t\t\t\t\tOS.TreeViewItem_IsSelected (selectedItem, false);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tOS.GCHandle_Free (selectedItem);", "-\t\t\t\t\t}", "+\t\t\t\tif (widget.equals (lastSelection)) {", "+\t\t\t\t\tOS.TreeViewItem_IsSelected (item.handle, !selected);", "+\t\t\t\t} else {", "+\t\t\t\t\tif (selected) unselect = item;", "+\t\t\t\t\tif (lastSelection != null && OS.TreeViewItem_IsSelected (lastSelection.handle)) reselect = lastSelection;", "-\t\t\tif (!shiftDown || anchor == null) anchor = item;", "-\t\t\t\tboolean selected = false;", "-\t    \t\tfor (int i = 0; i < selectedItemCount; i++) {", "-\t    \t\t\tif (selectedItems [i] == item) {", "-\t    \t\t\t\tselected = true;", "-\t    \t\t\t\tbreak;", "-\t    \t\t\t}", "-\t    \t\t}", "+\t\t\t\tboolean selected = OS.TreeViewItem_IsSelected (item.handle);", "-\t   \t\t\tinsertSelectedItem (item, 0);", "+\t\tlastSelection = item;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213489e9bad51c6868bb21a4869bbe2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Region.java", "commitBeforeChange": "1d3e1018278faa18eae1857a4df462d9163f2765", "commitAfterChange": "afd1a95e7721581f00839d502a73cac24f908daf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_add$I()", "signatureAfterChange": "  public void test_add$I()", "diff": ["-\treg = new Region(display);", "-\treg.add(new int[] {10,10, 40,30, 20,60, 5,55});", "-\tbox = reg.getBounds();", "-\treg.dispose();", "-\texpected = new Rectangle (5,10,35,50);", "-\tif (!box.equals(expected)) {", "-\t\tfail(\"add 3 failed - expected: \"+expected+\" actual: \"+box);", "-\t}", "+//\treg = new Region(display);", "+//\treg.add(new int[] {10,10, 40,30, 20,60, 5,55});", "+//\tbox = reg.getBounds();", "+//\treg.dispose();", "+//\texpected = new Rectangle (5,10,35,50);", "+//\tif (!box.equals(expected)) {", "+//\t\tfail(\"add 3 failed - expected: \"+expected+\" actual: \"+box);", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85e9aa1e2e3afefa7020ef0edb8c0601", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 50, "signatureBeforeChange": " boolean isChild(TreeItem item)", "signatureAfterChange": " boolean isLastChild ()", "diff": ["- */", "-boolean isChild(TreeItem item) {", "-\tVector children = getChildren();", "-\tTreeItem child;", "-\t", "-\tif (children.contains(item) == true) {", "-\t\treturn true;", "-\t}", "-\tfor (int i = 0; i < children.size(); i++) {", "-\t\tchild = (TreeItem) children.elementAt(i);", "-\t\tif (child.isChild(item) == true) {", "-\t\t\treturn true;", "-\t\t}", "-\t}", "-\treturn false;", "-}", "+boolean isLastChild () {", "+\t\treturn getIndex () == parentItem.getItemCount () - 1;", "+\treturn getIndex () == parent.getItemCount () - 1;", "+}"]}], "num": 12249}