{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a105284002a843ee859fe6085b3b9b0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0dd2c545d93d84f1f15626d1fe13d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "1cafb9b13b36075eb1d31bd71ad3febbf37de5b5", "commitAfterChange": "4b7ac62e4c7abc2bdb8c97e1ee5fae6064a184d8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ hIMC = OS.ImmGetContext (handle);", "-\t\tif (hIMC != 0) {", "-\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "-\t\t\t\tint length = OS.ImmGetCompositionString (hIMC, OS.GCS_COMPSTR, null, 0);", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.detail = SWT.COMPOSITION_HITTEST;", "-\t\t\t\t\tevent.x = OS.GET_X_LPARAM (lParam); ", "-\t\t\t\t\tevent.y = OS.GET_Y_LPARAM (lParam);", "-\t\t\t\t\tsendEvent (SWT.ImeComposition, event);", "-\t\t\t\t\tif (event.hitTest == SWT.HITTEST_INSIDE_COMPOSITION) {", "-\t\t\t\t\t\tint /*long*/ imeWnd = OS.ImmGetDefaultIMEWnd (handle);", "-\t\t\t\t\t\tint offset = event.index + event.trailing;", "-\t\t\t\t\t\tint trailing = event.trailing > 0 ? 1 : 2;", "-\t\t\t\t\t\tint /*long*/ param = OS.MAKEWPARAM (OS.MAKEWORD (OS.IMEMOUSE_LDOWN, trailing), offset);", "-\t\t\t\t\t\tOS.SendMessage (imeWnd, WM_MSIME_MOUSE, param, hIMC);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tOS.ImmReleaseContext (handle, hIMC);", "-\t\t}", "+\tif (ime != null) {", "+\t\tLRESULT result = ime.WM_LBUTTONDOWN (wParam, lParam);", "+\t\tif (result != null) return result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41786cd4b87ba5962d3c2a4be8b634c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/IME.java", "commitBeforeChange": "87409dd82190b37fa754f5e929cac3f245e2f344", "commitAfterChange": "94be4e401a3fb2f42f015e966ff3c20eef54b12e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["-\tif (isInlineIMEEnabled ()) {", "-\t\tint /*long*/ hwnd = parent.handle;", "-\t\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "-\t\tif (hIMC != 0) {", "-\t\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "-\t\t\t\tif (OS.ImmGetCompositionString (hIMC, OS.GCS_COMPSTR, null, 0) > 0) {", "-\t\t\t\t\tEvent event = new Event ();", "-\t\t\t\t\tevent.detail = SWT.COMPOSITION_OFFSET;", "-\t\t\t\t\tevent.x = OS.GET_X_LPARAM (lParam); ", "-\t\t\t\t\tevent.y = OS.GET_Y_LPARAM (lParam);", "-\t\t\t\t\tsendEvent (SWT.ImeComposition, event);", "-\t\t\t\t\tint offset = event.index;", "-\t\t\t\t\tint length = text.length();", "-\t\t\t\t\tif (offset != -1 && startOffset != -1 && startOffset <= offset && offset < startOffset + length) {", "-\t\t\t\t\t\tint /*long*/ imeWnd = OS.ImmGetDefaultIMEWnd (hwnd);", "-\t\t\t\t\t\toffset = event.index + event.count - startOffset;", "-\t\t\t\t\t\tint trailing = event.count > 0 ? 1 : 2;", "-\t\t\t\t\t\tint /*long*/ param = OS.MAKEWPARAM (OS.MAKEWORD (OS.IMEMOUSE_LDOWN, trailing), offset);", "-\t\t\t\t\t\tOS.SendMessage (imeWnd, WM_MSIME_MOUSE, param, hIMC);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "-\t\t\t\t\t}", "+\tif (!isInlineEnabled ()) return null;", "+\tint /*long*/ hwnd = parent.handle;", "+\tint /*long*/ hIMC = OS.ImmGetContext (hwnd);", "+\tif (hIMC != 0) {", "+\t\tif (OS.ImmGetOpenStatus (hIMC)) {", "+\t\t\tif (OS.ImmGetCompositionString (hIMC, OS.GCS_COMPSTR, null, 0) > 0) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.detail = SWT.COMPOSITION_OFFSET;", "+\t\t\t\tevent.x = OS.GET_X_LPARAM (lParam); ", "+\t\t\t\tevent.y = OS.GET_Y_LPARAM (lParam);", "+\t\t\t\tsendEvent (SWT.ImeComposition, event);", "+\t\t\t\tint offset = event.index;", "+\t\t\t\tint length = text.length();", "+\t\t\t\tif (offset != -1 && startOffset != -1 && startOffset <= offset && offset < startOffset + length) {", "+\t\t\t\t\tint /*long*/ imeWnd = OS.ImmGetDefaultIMEWnd (hwnd);", "+\t\t\t\t\toffset = event.index + event.count - startOffset;", "+\t\t\t\t\tint trailing = event.count > 0 ? 1 : 2;", "+\t\t\t\t\tint /*long*/ param = OS.MAKEWPARAM (OS.MAKEWORD (OS.IMEMOUSE_LDOWN, trailing), offset);", "+\t\t\t\t\tOS.SendMessage (imeWnd, WM_MSIME_MOUSE, param, hIMC);", "+\t\t\t\t} else {", "+\t\t\t\t\tOS.ImmNotifyIME (hIMC, OS.NI_COMPOSITIONSTR, OS.CPS_COMPLETE, 0);", "-\t\t\tOS.ImmReleaseContext (hwnd, hIMC);", "+\t\tOS.ImmReleaseContext (hwnd, hIMC);"]}], "num": 2684}