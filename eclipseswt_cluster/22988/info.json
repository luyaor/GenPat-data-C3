{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b31c13341603311c749c2985167c8f14", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776d857f85cdac833fbf05f313c112ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "e490c124e2459ac874fc7c4f7b8c9a20c5a4a702", "commitAfterChange": "5c4b8231729870597968d83acc7163053ee45227", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void hookEvents()", "signatureAfterChange": "  void setButtonVisibility (byte visibility)", "diff": ["-", "-void hookEvents() {", "-\tsuper.hookEvents ();", "-\tint handler = OS.gcnew_RoutedEventHandler (jniRef, \"HandleLoaded\");", "-\tOS.FrameworkElement_Loaded (handle, handler);", "-\tOS.GCHandle_Free (handler);", "-}", "+void setButtonVisibility (byte visibility) {", "+\tint template = OS.Control_Template (handle);", "+\tint overFlowName = createDotNetString (\"OverflowGrid\", false);", "+\tint overFlowGrid = OS.FrameworkTemplate_FindName (template, overFlowName, handle);", "+\tif (overFlowGrid != 0) {", "+\t\tOS.UIElement_Visibility (overFlowGrid, visibility);", "+\t\tOS.GCHandle_Free (overFlowGrid);", "+\t}", "+\tOS.GCHandle_Free (overFlowName);", "+\tint borderName = createDotNetString (\"MainPanelBorder\", false);", "+\tint border = OS.FrameworkTemplate_FindName (template, borderName, handle);", "+\tif (border != 0) {", "+\t\tint left = visibility == OS.Visibility_Visible ? 11 : 0;", "+\t\tint margin = OS.gcnew_Thickness (0, 0, left, 0);", "+\t\tOS.FrameworkElement_Margin (border, margin);", "+\t\tOS.GCHandle_Free (border);", "+\t\tOS.GCHandle_Free (margin);", "+\t}", "+\tOS.GCHandle_Free (borderName);", "+\tOS.GCHandle_Free (template);\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca30ae269b0ddf98ff7792084019607", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/ClipboardProxy.java", "commitBeforeChange": "a23347b0f61594cc11dfc269d3641f4c34fbdc88", "commitAfterChange": "effac1e46c22741d9e3c8e7bcdf198ca545ece88", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int[] getAvailableTypes(int clipboardType)", "signatureAfterChange": "  int[] getAvailableTypes(int clipboardType)", "diff": ["-\tint target = clipboardType == DND.CLIPBOARD ? atomAtom : targetsAtom;", "+\tint target = targetsAtom;", "+\t}", "+\tif (done && selectionValue == null) {", "+\t\tdone = false;", "+\t\ttarget = motifClipboardAtom;", "+\t\tOS.XtGetSelectionValue(shellHandle, selection, target, XtSelectionCallbackCallback.getAddress(), 0, OS.CurrentTime);", "+\t\tif (!done) {", "+\t\t\tint xtContext = OS.XtDisplayToApplicationContext(xDisplay);", "+\t\t\tint selectionTimeout = OS.XtAppGetSelectionTimeout(xtContext);", "+\t\t\twait(selectionTimeout);", "+\t\t\t", "+\t\t}", "+\t}", "+\tif (done && selectionValue == null) {", "+\t\tdone = false;", "+\t\ttarget = atomAtom;", "+\t\tOS.XtGetSelectionValue(shellHandle, selection, target, XtSelectionCallbackCallback.getAddress(), 0, OS.CurrentTime);", "+\t\tif (!done) {", "+\t\t\tint xtContext = OS.XtDisplayToApplicationContext(xDisplay);", "+\t\t\tint selectionTimeout = OS.XtAppGetSelectionTimeout(xtContext);", "+\t\t\twait(selectionTimeout);", "+\t\t\t", "+\t\t}"]}], "num": 22988}