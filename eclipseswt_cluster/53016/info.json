{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ce1e5932428dd5a177369ba07214a605", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba114c902bb552e3b085ab3cd7e3c2e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  \tstatic int atkValue_get_maximum_value (int atkObject, int value)", "signatureAfterChange": "  \tstatic int atkValue_get_maximum_value (int atkObject, int value)", "diff": ["-\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "-\t\t\tevent.value = getGValue(value);", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getMaximumValue(event);", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "+\t\t\t\tevent.value = getGValue(value);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getMaximumValue(event);", "+\t\t\t\t}", "+\t\t\t\tsetGValue(value, event.value);", "-\t\t\tsetGValue(value, event.value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a4bd22c511d71df5f9f1c51505c5048", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  \tstatic int atkValue_get_minimum_value (int atkObject, int value)", "signatureAfterChange": "  \tstatic int atkValue_get_minimum_value (int atkObject, int value)", "diff": ["-\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "-\t\t\tevent.value = getGValue(value);", "-\t\t\tfor (int i = 0, length = listeners.size(); i < length; i++) {", "-\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "-\t\t\t\tlistener.getMinimumValue(event);", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "+\t\t\t\tevent.value = getGValue(value);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.getMinimumValue(event);", "+\t\t\t\t}", "+\t\t\t\tsetGValue(value, event.value);", "-\t\t\tsetGValue(value, event.value);"]}], "num": 53016}