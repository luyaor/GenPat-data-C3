{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba8b0fa8035145bcacfceb88dc9af1e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b7157114a0a48d2ebfcb550450d97ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java", "commitBeforeChange": "cedfaf3578a4546dfe75cb4989ba1a0435e7be27", "commitAfterChange": "8a33792081b437893a1f46f5418c814e237c555a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": " void showDropTargetEffect(int effect, int x, int y)", "diff": ["+\t\tStyledTextContent content = text.getContent();", "-\t\t\tint maxOffset = text.getCharCount();", "+\t\t\tint maxOffset = content.getCharCount();", "-\t\t\t\tif (pt.x >= maxLocation.x) {", "+\t\t\t\ttry {", "+\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "+\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t} else {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "-\t\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t\t\tnewOffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t\tint line = text.getLineAtOffset(startOffset);", "-\t\t\t\t\tint lineCount = text.getLineCount();", "+\t\t\t\t\tint line = content.getLineAtOffset(startOffset);", "+\t\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t\t\t\tendOffset = content.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t// check if offset is line delimiter", "+\t\t\t// see StyledText.isLineDelimiter()", "+\t\t\tint line = content.getLineAtOffset(newOffset);", "+\t\t\tint lineOffset = content.getOffsetAtLine(line);\t", "+\t\t\tint offsetInLine = newOffset - lineOffset;", "+\t\t\t// offsetInLine will be greater than line length if the line ", "+\t\t\t// delimiter is longer than one character and the offset is set", "+\t\t\t// in between parts of the line delimiter.", "+\t\t\tif (offsetInLine > content.getLine(line).length()) {", "+\t\t\t\tnewOffset = Math.max(0, newOffset - 1);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79cf1e9f6078567e3c7a16454216db6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java", "commitBeforeChange": "70b0d86a43690ab29ef57387b51925304c8a3ae7", "commitAfterChange": "c8f03fe44f19567b38efadfccba773495882885b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": " void showDropTargetEffect(int effect, int x, int y)", "diff": ["+\t\tStyledTextContent content = text.getContent();", "-\t\t\tint maxOffset = text.getCharCount();", "+\t\t\tint maxOffset = content.getCharCount();", "-\t\t\t\tif (pt.x >= maxLocation.x) {", "+\t\t\t\ttry {", "+\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "+\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t} else {", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tnewOffset = text.getOffsetAtLocation(new Point(pt.x, maxLocation.y));", "-\t\t\t\t\t} catch (IllegalArgumentException ex2) {", "-\t\t\t\t\t\tnewOffset = -1;", "-\t\t\t\t\t}", "-\t\t\t\t\tint line = text.getLineAtOffset(startOffset);", "-\t\t\t\t\tint lineCount = text.getLineCount();", "+\t\t\t\t\tint line = content.getLineAtOffset(startOffset);", "+\t\t\t\t\tint lineCount = content.getLineCount();", "-\t\t\t\t\t\tendOffset = text.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t\t\t\tendOffset = content.getOffsetAtLine(line + 1)  - 1;", "+\t\t\t// check if offset is line delimiter", "+\t\t\t// see StyledText.isLineDelimiter()", "+\t\t\tint line = content.getLineAtOffset(newOffset);", "+\t\t\tint lineOffset = content.getOffsetAtLine(line);\t", "+\t\t\tint offsetInLine = newOffset - lineOffset;", "+\t\t\t// offsetInLine will be greater than line length if the line ", "+\t\t\t// delimiter is longer than one character and the offset is set", "+\t\t\t// in between parts of the line delimiter.", "+\t\t\tif (offsetInLine > content.getLine(line).length()) {", "+\t\t\t\tnewOffset = Math.max(0, newOffset - 1);", "+\t\t\t}"]}], "num": 57799}