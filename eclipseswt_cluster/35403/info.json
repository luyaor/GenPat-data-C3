{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8c894b5374f91fb2ae1887398503897", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a24bf3f1fb9a82d399eee648815065", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 89, "signatureBeforeChange": " public void select(int start, int end)", "signatureAfterChange": " public void select (int start, int end)", "diff": ["- */", "-public void select(int start, int end) {", "+public void select (int start, int end) {", "-\tint count = getItemVector().size();", "-\tif (count == 0 || start >= count) return;", "-\tstart = Math.max (0, start);", "-\tend = Math.min (end, count - 1);", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tdeselectAllExcept(getVisibleItem(start));", "+\tif (items.length == 0 || start >= items.length) return;", "+\tstart = Math.max (start, 0);", "+\tend = Math.min (end, items.length - 1);", "+\tfor (int i = start; i <= end; i++) {", "+\t\tselectItem (items [i], (style & SWT.MULTI) != 0);", "-\t// select in the same order as all the other selection and deslection methods.", "-\t// Otherwise setLastSelection repeatedly changes the lastSelectedItem for repeated ", "-\t// selections of the items, causing flash.", "-\tSelectableItem item = null;", "-\tfor (int i = end; i >= start; i--) {", "-\t\titem = getVisibleItem(i);", "-\t\tif (item != null) {", "-\t\t\tselect(item);", "+\tif (hasFocus () || (style & SWT.HIDE_SELECTION) == 0) {", "+\t\tredrawItems (start, end, false);", "+\t}", "+}", "-\tif (item != null) {", "-\t\tsetLastSelection(item, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce105a751e41b825a5b220d9ac40966e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "87f8824f0e3e37963e7db997f51754ad49df1b70", "commitAfterChange": "ad4a0cf5741d6d1ebd3aa7aa442fce51f0f137a4", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void select (int start, int end)", "signatureAfterChange": " public void select (int start, int end)", "diff": ["-\tcheckWidget();", "-\tif (start > end) return;", "+\tcheckWidget ();", "+\tif (end < 0 || start > end || ((style & SWT.SINGLE) != 0 && start != end)) return;", "+\tint [] argList = {OS.XmNitemCount, 0};", "+\tOS.XtGetValues (handle, argList, argList.length / 2);", "+\tint count = argList[1];", "+\tif (count == 0 || start >= count) return;", "+\tstart = Math.max (0, start);", "+\tend = Math.min (end, count - 1);", "-\t\tint [] argList = {OS.XmNitemCount, 0};", "-\t\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\t\tint index = Math.min (argList[1] - 1, end) + 1;", "-\t\tif (index != 0 && index >= start + 1) OS.XmListSelectPos (handle, index, false);", "+\t\tOS.XmListSelectPos (handle, start + 1, false);", "-\tint [] argList = {OS.XmNselectionPolicy, 0};", "+\targList = new int[] {OS.XmNselectionPolicy, 0};", "-\t* Note:  We rely on the fact that XmListSelectPos ()", "-\t* fails silently when the indices are out of range.", "+\t* Note: XmListSelectPos () fails silently when the indices are out of range.", "-\t\tif ((index != 0) && !OS.XmListPosSelected (handle, index)) {", "+\t\tif (!OS.XmListPosSelected (handle, index)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23e2284028ca9b328032bd310f5d263", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void setSelection(int start, int end)", "signatureAfterChange": " public void setSelection (int start, int end)", "diff": ["- */", "-public void setSelection(int start, int end) {", "-\tcheckWidget ();", "-\tif (end < 0 || start > end || ((style & SWT.SINGLE) != 0 && start != end)) {", "-\tint count = getItemVector().size();", "-\tif (count == 0 || start >= count) {", "-\t\tdeselectAll ();", "-\t\treturn;", "-\t}", "-\tstart = Math.max (0, start);", "-\tend = Math.min (end, count - 1);", "-\tif ((style & SWT.MULTI) != 0) {", "-\t\tVector keepSelected = new Vector();", "-\t\tfor (int i = start; i <= end; i++) {", "-\t\t\tSelectableItem item = getVisibleItem(i);", "-\t\t\tif (item != null) {", "-\t\t\t\tkeepSelected.addElement(item);", "-\t\tdeselectAllExcept(keepSelected);", "-\t}", "-\tselect(start, end);", "-\tshowSelection ();", "-}", "+public void setSelection (int start, int end) {", "+\tcheckWidget ();", "+\tdeselectAll ();", "+\tif (end < 0 || start > end || ((style & SWT.SINGLE) != 0 && start != end)) return;", "+\tif (items.length == 0 || start >= items.length) return;", "+\tstart = Math.max (0, start);", "+\tend = Math.min (end, items.length - 1);", "+\tselect (start, end);", "+\tsetFocusItem (items [start], true);", "+\tshowSelection ();", "+}"]}], "num": 35403}