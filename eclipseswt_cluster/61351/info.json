{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "330f1adb6ca6e27aea98e56d9060a97a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79063010878d9d38aafe9593b2321434", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "4628154548002d323ef227c9ddc45dc6839b6bba", "commitAfterChange": "cdfe3af8ffec9d092524bba6cb209b9751b9010b", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  boolean isDrawing (int control)", "signatureAfterChange": "  boolean isDrawing ()", "diff": ["-boolean isDrawing (int control) {", "-\t/*", "-\t* Feature in the Macintosh.  The scroll bars in a DataBrowser are", "-\t* always invisible according to IsControlVisible(), despite the fact", "-\t* that they are drawn.  The fix is to check our visibility flag", "-\t* instead of calling IsControlVisible().", "-\t* ", "-\t* Note: During resize IsControlVisible() returns true allowing the", "-\t* clipping to be properly calculated.", "-\t*/", "-\treturn isVisible () && getDrawCount (control) == 0;", "+boolean isDrawing () {", "+\treturn getDrawing() && parent.isDrawing();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a05ca2399379a4fdbf901d667da78072", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " int processMouseHover (MacMouseEvent mmEvent)", "signatureAfterChange": " int processMouseHover (MacMouseEvent mme)", "diff": ["-int processMouseHover (MacMouseEvent mmEvent) {", "-\t/*", "-\t* Forward the mouse event to the parent.", "-\t* This is necessary so that mouse listeners", "-\t* in the parent will be called, despite the", "-\t* fact that the event did not really occur", "-\t* in X in the parent.  This is done to be", "-\t* compatible with Windows.", "-\t*/", "-\tparent.processMouseHover(mmEvent);", "-\tgetDisplay().showToolTip(handle, toolTipText);", "-\treturn OS.noErr;", "+int processMouseHover (MacMouseEvent mme) {", "+\tDisplay display = getDisplay ();", "+\tdisplay.showToolTip (handle, toolTipText);", "+\treturn 0;"]}], "num": 61351}