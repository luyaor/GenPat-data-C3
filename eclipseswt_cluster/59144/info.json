{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ded8fc61714fde10c2da3b1302e7f53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e4f466138546fe8adc3fd5a93a6539", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "34d8f908103f79ef01befd5c75eb28b372b686b0", "commitAfterChange": "aa14e77e1ea6052ba1798c3e57a027ecd502ef50", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmDrawChild (int wParam, int lParam)", "diff": ["-\t\t/*", "-\t\t* This code intentionally commented.", "-\t\t*/", "-//\t\tGC gc = GC.win32_new (struct.hDC, null);", "-//\t\tgc.drawImage (image, struct.left, struct.top);", "-\t\tint hImage = image.handle;", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP:", "-\t\t\t\tBITMAP bm = new BITMAP ();", "-\t\t\t\tOS.GetObject (hImage, BITMAP.sizeof, bm);", "-\t\t\t\tint hDC = OS.CreateCompatibleDC (struct.hDC);", "-\t\t\t\tint oldBitmap = OS.SelectObject (hDC, hImage);", "-\t\t\t\tOS.BitBlt (struct.hDC, struct.left, struct.top + 2, bm.bmWidth, bm.bmHeight, hDC, 0, 0, OS.SRCCOPY);", "-\t\t\t\tOS.SelectObject (hDC, oldBitmap);", "-\t\t\t\tOS.DeleteDC (hDC);", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.ICON:", "-\t\t\t\tOS.DrawIconEx (struct.hDC, struct.left, struct.top + 2, hImage, 0, 0, 0, 0, OS.DI_NORMAL);", "-\t\t\t\tbreak;", "-\t\t}", "+\t\tGCData data = new GCData();", "+\t\tdata.device = display;", "+\t\tGC gc = GC.win32_new (struct.hDC, data);", "+\t\tgc.drawImage (image, struct.left, struct.top + 2);", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e350006224d6d1c41d2349244b21a3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "a3a1752d4cca52a10819bc086957df9ad04a0a87", "commitAfterChange": "9effcc166dfa61e54b0f9bb76b17f1175f53b69b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  int gtk_motion_notify_event (int widget, int eventPtr)", "signatureAfterChange": "  int gtk_motion_notify_event (int widget, int eventPtr)", "diff": ["-\tint x = 0;", "-\tint y = 0;", "-\tint width = 0;", "-\tint height = 0;", "-\tint parentBorder = 0;", "-\tint parentWidth = 0;", "-\tint parentHeight = 0;", "-\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) {", "-\t\tOS.gtk_widget_get_allocation(handle, allocation);", "-\t\tx = allocation.x;", "-\t\ty = allocation.y;", "-\t\twidth = allocation.width;", "-\t\theight = allocation.height;", "-\t\tOS.gtk_widget_get_allocation(parent.handle, allocation);", "-\t\tparentWidth = allocation.width;", "-\t\tparentHeight = allocation.height;", "-\t} else {", "-\t\tx = OS.GTK_WIDGET_X (handle);", "-\t\ty = OS.GTK_WIDGET_Y (handle);", "-\t\twidth = OS.GTK_WIDGET_WIDTH (handle);", "-\t\theight = OS.GTK_WIDGET_HEIGHT (handle);\t", "-\t\tparentWidth = OS.GTK_WIDGET_WIDTH (parent.handle);", "-\t\tparentHeight = OS.GTK_WIDGET_HEIGHT (parent.handle);", "-\t}", "+\tgtk_widget_get_allocation (handle, allocation);", "+\tint x = allocation.x;", "+\tint y = allocation.y;", "+\tint width = allocation.width;", "+\tint height = allocation.height;", "+\tint parentBorder = 0;", "+\tgtk_widget_get_allocation (parent.handle, allocation);", "+\tint parentWidth = allocation.width;", "+\tint parentHeight = allocation.height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e83d46445ca7f11cadc4481d95c047d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "418189f52bdfb218fb6efa8e48de290592d75479", "commitAfterChange": "8ac319315f02f056087670898446ba12d963ef7a", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \r LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\t* Feature in Windows.  In tables that have the style\r", "-\t* LVS_SINGLESEL, when a table item is reselected, the\r", "-\t* table does not issue a WM_NOTIFY because the item\r", "+\t* Feature in Windows.  When a table item is reselected,\r", "+\t* the table does not issue a WM_NOTIFY when the item\r", "-\tint oldState = 0;\r", "-\tif ((style & SWT.SINGLE) != 0 && pinfo.iItem != -1) {\r", "+\tboolean wasSelected = false;\r", "+\tint count = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOUNT, 0, 0);\r", "+\tif (count == 1 && pinfo.iItem != -1) {\r", "-\t\toldState = lvItem.state;\r", "+\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;\r", "+\t\tif (wasSelected) ignoreSelect = true;\r", "-\tif ((style & SWT.SINGLE) != 0 && pinfo.iItem != -1) {\r", "-\t\tif ((oldState & OS.LVIS_SELECTED) != 0) {\r", "-\t\t\tLVITEM lvItem = new LVITEM ();\r", "-\t\t\tlvItem.mask = OS.LVIF_STATE;\r", "-\t\t\tlvItem.stateMask = OS.LVIS_SELECTED;\r", "-\t\t\tlvItem.iItem = pinfo.iItem;\r", "-\t\t\tOS.SendMessage (handle, OS.LVM_GETITEM, 0, lvItem);\r", "-\t\t\tint newState = lvItem.state;\r", "-\t\t\tif ((newState & OS.LVIS_SELECTED) != 0) {\r", "-\t\t\t\tEvent event = new Event ();\r", "-\t\t\t\tevent.item = items [pinfo.iItem];\r", "-\t\t\t\tpostEvent (SWT.Selection, event);\r", "-\t\t\t}\r", "-\t\t}\r", "+\tif (wasSelected) {\r", "+\t\tignoreSelect = false;\r", "+\t\tEvent event = new Event ();\r", "+\t\tevent.item = items [pinfo.iItem];\r", "+\t\tpostEvent (SWT.Selection, event);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fb950c043339caf75652fb469051468", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/DropTarget.java", "commitBeforeChange": "4b10f2a3a24e7037b13a6b21d0386bf976be739d", "commitAfterChange": "616f5a4d963ffa9e332b664b81207bb1f17d8c21", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  int dragMotion ( int widget, int context, int x, int y, int time)", "signatureAfterChange": "  private int drag_motion ( int widget, int context, int x, int y, int time)", "diff": ["-int dragMotion ( int widget, int context, int x, int y, int time){", "+private int drag_motion ( int widget, int context, int x, int y, int time){", "+\tint oldKeyOperation = keyOperation;", "+\t", "+\t\tkeyOperation = -1;", "+\t", "-\tTransferData[] allowedTypes = event.dataTypes;", "-\t\t", "-\tif (event.detail == DND.DROP_DEFAULT && (getStyle() & DND.DROP_DEFAULT) == 0) {", "-\t\tif ((allowedOperations & DND.DROP_MOVE) != 0) {", "-\t\t\tevent.detail = DND.DROP_MOVE;", "+\tTransferData[] allowedDataTypes = new TransferData[event.dataTypes.length];", "+\tSystem.arraycopy(event.dataTypes, 0, allowedDataTypes, 0, allowedDataTypes.length);", "+", "+\tif (oldKeyOperation == -1) {", "+\t\tselectedDataType = null;", "+\t\tselectedOperation = DND.DROP_NONE;", "+\t\tevent.type = DND.DragEnter;", "+\t} else {", "+\t\tevent.dataType = selectedDataType;", "+\t\tif (keyOperation == oldKeyOperation) {", "+\t\t\tevent.type = DND.DragOver;", "+\t\t\tevent.detail = selectedOperation;", "-\t\t\tevent.detail = DND.DROP_NONE;", "+\t\t\tevent.type = DND.DragOperationChanged;", "-", "-\tif (lastOperation == -1) {", "-\t\t\tevent.type = DND.DragEnter;", "-\t\t\tint atom = OS.gtk_drag_dest_find_target(control.handle, context, 0);", "-\t\t\tif (atom == 0) {", "-\t\t\t\tOS.gdk_drag_status(context, 0, time);", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t\tevent.dataType = new TransferData();", "-\t\t\tevent.dataType.type = atom;", "-\t\t\tlastOperation = event.detail;", "-\t} else {", "-\t\t\tif (lastOperation != event.detail) {", "-\t\t\t\tevent.type = DND.DragOperationChanged;", "-\t\t\t\tlastOperation = event.detail;", "-\t\t\t} else {", "-\t\t\t\tevent.type = DND.DragOver;", "-\t\t\t\tevent.detail = selectedOperation;", "-\t\t\t}", "-\t\t\tevent.dataType = selectedDataType;", "-\t}", "-\tevent.feedback = DND.FEEDBACK_SELECT;", "-\t\tevent.detail = DND.DROP_NONE;", "-\t\tevent.dataType = null;", "+\t\tOS.gdk_drag_status(context, 0, time);", "+\t\treturn 0;", "-\t\tevent.detail = DND.DROP_MOVE;", "+\t\tevent.detail = (allowedOperations & DND.DROP_MOVE) != 0 ? DND.DROP_MOVE : DND.DROP_NONE;", "-\t\tfor (int i = 0; i < allowedTypes.length; i++) {", "-\t\t\tif (allowedTypes[i].type == event.dataType.type) {", "+\t\tfor (int i = 0; i < allowedDataTypes.length; i++) {", "+\t\t\tif (allowedDataTypes[i].type == event.dataType.type) {", "-\tif (selectedDataType != null && (event.detail & allowedOperations) != 0) {", "+\tif (selectedDataType != null && (allowedOperations & event.detail) != 0) {", "+\t"]}], "num": 59144}