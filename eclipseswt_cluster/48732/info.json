{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3dbe5bc4acc6837e53a87e1a1bf931ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d75fd50c4b19b10329dba83a3c7de94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 152, "signatureBeforeChange": "\r int processMouseMove (int callData)", "signatureAfterChange": "\r int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-int processMouseMove (int callData) {\r", "-\tDisplay display = getDisplay ();\r", "-\tdisplay.addMouseHoverTimeOut (handle);\r", "-\tXMotionEvent xEvent = new XMotionEvent ();\r", "-\tOS.memmove (xEvent, callData, XMotionEvent.sizeof);\r", "-\tsendMouseEvent (SWT.MouseMove, 0, xEvent);\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.addMouseHoverTimeOut (handle);\r", "+\tXMotionEvent xEvent = new XMotionEvent ();\r", "+\tOS.memmove (xEvent, call_data, XMotionEvent.sizeof);\r", "+\tsendMouseEvent (SWT.MouseMove, 0, xEvent);\r", "+\treturn 0;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "addcb0010cb9d4643381a9425d4ebe16", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "f42c053356303e47bc6d7d2682ada8c7675ed0fc", "commitAfterChange": "e37c5d247d99282f597655a55a69f15eb55de4d4", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r int processMouseMove (int callData)", "signatureAfterChange": "\r int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-}\r", "-int processMouseMove (int callData) {\r", "-\tDisplay display = getDisplay ();\r", "-\tdisplay.addMouseHoverTimeOut (handle);\r", "-\r", "-\t/*\r", "-\t* Forward the mouse event to the parent.\r", "-\t* This is necessary so that mouse listeners\r", "-\t* in the parent will be called, despite the\r", "-\t* fact that the event did not really occur\r", "-\t* in X in the parent.  This is done to be\r", "-\t* compatible with Windows.\r", "-\t*/\r", "-\tXButtonEvent xEvent = new XButtonEvent ();\r", "-\tOS.memmove (xEvent, callData, XButtonEvent.sizeof);\r", "-\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0};\r", "-\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "-\txEvent.window = OS.XtWindow (parent.handle);\r", "-\txEvent.x += argList [1];  xEvent.y += argList [3];\r", "-\t/*\r", "-\t* This code is intentionally commented.\r", "-\t* Currently, the implementation of the\r", "-\t* mouse move code in the parent interferes\r", "-\t* with tool tips for tool items.\r", "-\t*/\r", "-//\tOS.memmove (callData, xEvent, XButtonEvent.sizeof);\r", "-//\tparent.processMouseMove (callData);\r", "-\tparent.sendMouseEvent (SWT.MouseMove, 0, xEvent);\r", "-\r", "-\treturn 0;\r", "-}\r", "+}\r", "+int XPointerMotion (int w, int client_data, int call_data, int continue_to_dispatch) {\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.addMouseHoverTimeOut (handle);\r", "+\r", "+\t/*\r", "+\t* Forward the mouse event to the parent.\r", "+\t* This is necessary so that mouse listeners\r", "+\t* in the parent will be called, despite the\r", "+\t* fact that the event did not really occur\r", "+\t* in X in the parent.  This is done to be\r", "+\t* compatible with Windows.\r", "+\t*/\r", "+\tXButtonEvent xEvent = new XButtonEvent ();\r", "+\tOS.memmove (xEvent, call_data, XButtonEvent.sizeof);\r", "+\tint [] argList = {OS.XmNx, 0, OS.XmNy, 0};\r", "+\tOS.XtGetValues (handle, argList, argList.length / 2);\r", "+\txEvent.window = OS.XtWindow (parent.handle);\r", "+\txEvent.x += argList [1];  xEvent.y += argList [3];\r", "+\t/*\r", "+\t* This code is intentionally commented.\r", "+\t* Currently, the implementation of the\r", "+\t* mouse move code in the parent interferes\r", "+\t* with tool tips for tool items.\r", "+\t*/\r", "+//\tOS.memmove (callData, xEvent, XButtonEvent.sizeof);\r", "+//\tparent.XPointerMotion (w, client_data, call_data, continue_to_dispatch);\r", "+\tparent.sendMouseEvent (SWT.MouseMove, 0, xEvent);\r", "+\r", "+\treturn 0;\r"]}], "num": 48732}