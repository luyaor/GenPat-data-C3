{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "198a652390458040ef558a58d06178f3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cc390fed33dfb65d4781392911ea791", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 60, "signatureBeforeChange": " void doHome (int stateMask)", "signatureAfterChange": " void onHome (int stateMask)", "diff": ["-}", "-void doHome (int stateMask) {", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\t/* Home with no modifiers */", "-\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "-\t\tTreeItem item = availableItems [0];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (0, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\t/* CTRL+Home, CTRL+Shift+Home */", "-\t\t\tsetTopItem (availableItems [0]);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* Shift+Home */", "-\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "-\t\tTreeItem item = availableItems [0];", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (0, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* CTRL+Shift+Home */", "-\t\t\tsetTopItem (availableItems [0]);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+Home */", "-\t\tif (focusItem.availableIndex == 0) return; /* at top */", "-\t\tTreeItem item = availableItems [0];", "-\t\tsetFocusItem (item, true);", "-\t\tshowItem (item);", "-\t\tredrawItem (item.availableIndex, true);", "-\t\treturn;", "-\t}", "-\t/* Shift+Home */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tTreeItem selectedItem = availableItems [0];", "-\tif (selectedItem == focusItem && selectedItem.isSelected ()) return;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint selectIndex = selectedItem.availableIndex;", "-\tTreeItem[] newSelection = new TreeItem [anchorIndex + 1];", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i >= 0; i--) {", "-\t\tnewSelection [writeIndex++] = availableItems [i];", "-\t}", "-\tsetSelection (newSelection);", "-\tsetFocusItem (selectedItem, true);", "-\tredrawItems (anchorIndex, selectIndex, true);", "-\tshowItem (selectedItem);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+}", "+void onHome (int stateMask) {", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "+\t\t/* Home with no modifiers */", "+\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "+\t\tTreeItem item = availableItems [0];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (0, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+Home, CTRL+Shift+Home */", "+\t\t\tsetTopItem (availableItems [0]);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+Home */", "+\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "+\t\tTreeItem item = availableItems [0];", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (0, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+Home */", "+\t\t\tsetTopItem (availableItems [0]);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+Home */", "+\t\tif (focusItem.availableIndex == 0) return; /* at top */", "+\t\tTreeItem item = availableItems [0];", "+\t\tsetFocusItem (item, true);", "+\t\tshowItem (item);", "+\t\tredrawItem (item.availableIndex, true);", "+\t\treturn;", "+\t}", "+\t/* Shift+Home */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTreeItem selectedItem = availableItems [0];", "+\tif (selectedItem == focusItem && selectedItem.isSelected ()) return;", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex = selectedItem.availableIndex;", "+\tTreeItem[] newSelection = new TreeItem [anchorIndex + 1];", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i >= 0; i--) {", "+\t\tnewSelection [writeIndex++] = availableItems [i];", "+\t}", "+\tsetSelection (newSelection);", "+\tsetFocusItem (selectedItem, true);", "+\tredrawItems (anchorIndex, selectIndex, true);", "+\tshowItem (selectedItem);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5696a2789e1e8f15abfadebd6bc971", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b41f60e899b20029f1cfe5a40036031007ced518", "commitAfterChange": "44f007d08589286b5159b2d9ba31e92bef22239b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 57, "signatureBeforeChange": " void doEnd (int stateMask)", "signatureAfterChange": " void onEnd (int stateMask)", "diff": ["-}", "-void doEnd (int stateMask) {", "-\tint lastAvailableIndex = availableItems.length - 1;", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\t/* End with no modifiers */", "-\t\tif (focusItem.availableIndex == lastAvailableIndex) return; \t/* at bottom */", "-\t\tTreeItem item = availableItems [lastAvailableIndex]; ", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (lastAvailableIndex, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\t/* CTRL+End, CTRL+Shift+End */", "-\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "-\t\t\tsetTopItem (availableItems [availableItems.length - visibleItemCount]);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* Shift+End */", "-\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "-\t\tTreeItem item = availableItems [lastAvailableIndex]; ", "-\t\tselectItem (item, false);", "-\t\tsetFocusItem (item, true);", "-\t\tredrawItem (lastAvailableIndex, true);", "-\t\tshowItem (item);", "-\t\tEvent newEvent = new Event ();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent (SWT.Selection, newEvent);", "-\t\treturn;", "-\t}", "-\t/* SWT.MULTI */", "-\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\tif ((stateMask & SWT.SHIFT) != 0) {", "-\t\t\t/* CTRL+Shift+End */", "-\t\t\tshowItem (availableItems [lastAvailableIndex]);", "-\t\t\treturn;", "-\t\t}", "-\t\t/* CTRL+End */", "-\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "-\t\tTreeItem item = availableItems [lastAvailableIndex];", "-\t\tsetFocusItem (item, true);", "-\t\tshowItem (item);", "-\t\tredrawItem (item.availableIndex, true);", "-\t\treturn;", "-\t}", "-\t/* Shift+End */", "-\tif (anchorItem == null) anchorItem = focusItem;", "-\tTreeItem selectedItem = availableItems [lastAvailableIndex];", "-\tif (selectedItem == focusItem && selectedItem.isSelected ()) return;", "-\tint anchorIndex = anchorItem.availableIndex;", "-\tint selectIndex = selectedItem.availableIndex;", "-\tTreeItem[] newSelection = new TreeItem [selectIndex - anchorIndex + 1];", "-\tint writeIndex = 0;", "-\tfor (int i = anchorIndex; i <= selectIndex; i++) {", "-\t\tnewSelection [writeIndex++] = availableItems [i];", "-\t}", "-\tsetSelection (newSelection);", "-\tsetFocusItem (selectedItem, true);", "-\tredrawItems (anchorIndex, selectIndex, true);", "-\tshowItem (selectedItem);", "-\tEvent newEvent = new Event ();", "-\tnewEvent.item = selectedItem;", "-\tsendEvent (SWT.Selection, newEvent);", "-}", "+}", "+void onEnd (int stateMask) {", "+\tint lastAvailableIndex = availableItems.length - 1;", "+\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "+\t\t/* End with no modifiers */", "+\t\tif (focusItem.availableIndex == lastAvailableIndex) return; \t/* at bottom */", "+\t\tTreeItem item = availableItems [lastAvailableIndex]; ", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (lastAvailableIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\t/* CTRL+End, CTRL+Shift+End */", "+\t\t\tint visibleItemCount = (getClientArea ().height - getHeaderHeight ()) / itemHeight;", "+\t\t\tsetTopItem (availableItems [availableItems.length - visibleItemCount]);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* Shift+End */", "+\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "+\t\tTreeItem item = availableItems [lastAvailableIndex]; ", "+\t\tselectItem (item, false);", "+\t\tsetFocusItem (item, true);", "+\t\tredrawItem (lastAvailableIndex, true);", "+\t\tshowItem (item);", "+\t\tEvent newEvent = new Event ();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent (SWT.Selection, newEvent);", "+\t\treturn;", "+\t}", "+\t/* SWT.MULTI */", "+\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\tif ((stateMask & SWT.SHIFT) != 0) {", "+\t\t\t/* CTRL+Shift+End */", "+\t\t\tshowItem (availableItems [lastAvailableIndex]);", "+\t\t\treturn;", "+\t\t}", "+\t\t/* CTRL+End */", "+\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "+\t\tTreeItem item = availableItems [lastAvailableIndex];", "+\t\tsetFocusItem (item, true);", "+\t\tshowItem (item);", "+\t\tredrawItem (item.availableIndex, true);", "+\t\treturn;", "+\t}", "+\t/* Shift+End */", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTreeItem selectedItem = availableItems [lastAvailableIndex];", "+\tif (selectedItem == focusItem && selectedItem.isSelected ()) return;", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex = selectedItem.availableIndex;", "+\tTreeItem[] newSelection = new TreeItem [selectIndex - anchorIndex + 1];", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i <= selectIndex; i++) {", "+\t\tnewSelection [writeIndex++] = availableItems [i];", "+\t}", "+\tsetSelection (newSelection);", "+\tsetFocusItem (selectedItem, true);", "+\tredrawItems (anchorIndex, selectIndex, true);", "+\tshowItem (selectedItem);", "+\tEvent newEvent = new Event ();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent (SWT.Selection, newEvent);", "+}"]}], "num": 51118}