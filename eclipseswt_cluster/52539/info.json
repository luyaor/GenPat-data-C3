{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fb20feeb7b91dc883bf057b6f67e70e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05ac0f050d32b8fe01b5ea933d50b44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/cocoa/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "680ba5db6dfec388478bf495dd25549c8eb8287a", "commitAfterChange": "43ed6d330387f61fc4ff2b88c2587dd66e9bc535", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  static Browser findBrowser (int handle)", "signatureAfterChange": "  static Browser findBrowser (int handle)", "diff": ["-\tLONG value = (LONG)handles.get (new LONG (handle));", "-\tif (value != null) {", "-\t\tDisplay display = Display.getCurrent ();", "-\t\treturn (Browser)display.findWidget (value.value);", "-\t}", "-\treturn null;", "+\tDisplay display = Display.getCurrent ();", "+\treturn (Browser)display.findWidget (handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b49e47ef6b98c951422fdcccb5db152", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "53bde6dda6297af52f56639222d5c24ba5bd4df0", "commitAfterChange": "0edaa156d7779c77c3eb098c1e4b0c67cdbdcf8d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public int getOffset(Point point, int[] trailing)", "signatureAfterChange": " public int getOffset(Point point, int[] trailing)", "diff": ["-\tNSAutoreleasePool pool = null;", "-\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "-\ttry {", "-\t\tcomputeRuns();", "-\t\tif (point == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "-\t\treturn getOffset(point.x, point.y, trailing);", "-\t} finally {", "-\t\tif (pool != null) pool.release();", "-\t}", "+\tif (point == null) SWT.error(SWT.ERROR_NULL_ARGUMENT);", "+\treturn getOffset(point.x, point.y, trailing);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2722dbfa76d592b70021684d068d56e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "\r int processMouseDown (int callData)", "signatureAfterChange": "\r int processMouseDown (int callData)", "diff": ["-\tgetDisplay ().hideToolTip ();\r", "+\tDisplay display = getDisplay ();\r", "+\tdisplay.hideToolTip ();\r", "-\tint xDisplay = OS.XtDisplay (handle);\r", "-\tif (xDisplay != 0) {\r", "-\t\tDisplay display = getDisplay ();\r", "-\t\tint clickTime = OS.XtGetMultiClickTime (xDisplay);\r", "-\t\tint lastTime = display.lastTime, eventTime = xEvent.time;\r", "-\t\tint lastButton = display.lastButton, eventButton = xEvent.button;\r", "-\t\tif (lastButton == eventButton && lastTime != 0 && Math.abs (lastTime - eventTime) <= clickTime) {\r", "-\t\t\tsendMouseEvent (SWT.MouseDoubleClick, eventButton, xEvent.state, xEvent);\r", "-\t\t}\r", "-\t\tif (eventTime == 0) eventTime = 1;\r", "-\t\tdisplay.lastTime = eventTime;\r", "-\t\tdisplay.lastButton = eventButton;\r", "+\tint clickTime = display.getDoubleClickTime ();\r", "+\tint lastTime = display.lastTime, eventTime = xEvent.time;\r", "+\tint lastButton = display.lastButton, eventButton = xEvent.button;\r", "+\tif (lastButton == eventButton && lastTime != 0 && Math.abs (lastTime - eventTime) <= clickTime) {\r", "+\t\tsendMouseEvent (SWT.MouseDoubleClick, eventButton, xEvent.state, xEvent);\r", "+\tif (eventTime == 0) eventTime = 1;\r", "+\tdisplay.lastTime = eventTime;\r", "+\tdisplay.lastButton = eventButton;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7425b70b235010b64384866f1a4e7135", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "f1a4fe0e11837a1c2d25c1868ab7bc43eb6733b0", "commitAfterChange": "de59e3da8f0723523f868bb7d72b8eb207770acc", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": "  public void setBackgroundImage (Image image)", "signatureAfterChange": "  public void setBackgroundImage (Image image)", "diff": ["-\t\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (paintHandle ());", "-\t\tif (window != 0) {", "-\t\t\tOS.gdk_window_set_back_pixmap (window, backgroundImage.pixmap, false);", "-\t\t}", "+\t\tsetBackgroundPixmap (backgroundImage.pixmap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90918b304fcf1be494efb2952df02b94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b8f9d45a80c733a8f5884af87c95e68f3463aaa7", "commitAfterChange": "e2ae18014fd9c71ab4dc0b52900b77c1d3a0f5b7", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 257, "signatureBeforeChange": "\r int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc, StyledTextBidi bidi)", "signatureAfterChange": "\r int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc)", "diff": ["-int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc, StyledTextBidi bidi) {\r", "+int textWidth(String text, int lineOffset, int startOffset, int length, StyleRange[] lineStyles, int startXOffset, GC gc) {\r", "+\tFontData fontData;\r", "-\tif (startOffset < 0 || startOffset >= textLength || startOffset + length > textLength) {\r", "+\tif (startOffset < 0 || startOffset >= textLength || endOffset > textLength) {\r", "-\tif (bidi != null) {\r", "-\t\t// Use lastCaretDirection in order to get same results as during\r", "-\t\t// caret positioning (setBidiCaretLocation). Fixes 1GKU4C5.\r", "-\t\tpaintX = bidi.getCaretPosition(endOffset, lastCaretDirection) - startXOffset;\r", "-\t}\r", "-\telse {\r", "-\t\tFontData fontData = gc.getFont().getFontData()[0];\r", "-\r", "-\t\tfor (int i = startOffset; i < endOffset; i++) {\r", "-\t\t\tint tabIndex = text.indexOf(TAB, i);\r", "-\t\t\t// is tab not present or past the rendering range?\r", "-\t\t\tif (tabIndex == -1 || tabIndex > endOffset) {\r", "-\t\t\t\ttabIndex = endOffset;\r", "+\tfontData = gc.getFont().getFontData()[0];\r", "+\tfor (int i = startOffset; i < endOffset; i++) {\r", "+\t\tint tabIndex = text.indexOf(TAB, i);\r", "+\t\t// is tab not present or past the rendering range?\r", "+\t\tif (tabIndex == -1 || tabIndex > endOffset) {\r", "+\t\t\ttabIndex = endOffset;\r", "+\t\t}\r", "+\t\tif (tabIndex != i) {\r", "+\t\t\tString tabSegment = text.substring(i, tabIndex);\r", "+\t\t\tif (lineStyles != null) {\r", "+\t\t\t\tpaintX = styledTextWidth(tabSegment, lineOffset + i, lineStyles, paintX, gc, fontData);\r", "-\t\t\tif (tabIndex != i) {\r", "-\t\t\t\tString tabSegment = text.substring(i, tabIndex);\r", "-\t\t\t\tif (lineStyles != null) {\r", "-\t\t\t\t\tpaintX = styledTextWidth(tabSegment, lineOffset + i, lineStyles, paintX, gc, fontData);\r", "-\t\t\t\t}\r", "-\t\t\t\telse {\r", "-\t\t\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);\r", "-\t\t\t\t\tpaintX += gc.stringExtent(tabSegment).x;\r", "-\t\t\t\t}\r", "-\t\t\t\tif (tabIndex != endOffset && tabWidth > 0) {\r", "-\t\t\t\t\tpaintX = getTabStop(startXOffset + paintX) - startXOffset;\r", "-\t\t\t\t}\r", "-\t\t\t\ti = tabIndex;\r", "+\t\t\telse {\r", "+\t\t\t\tsetLineFont(gc, fontData, SWT.NORMAL);\r", "+\t\t\t\tpaintX += gc.stringExtent(tabSegment).x;\r", "-\t\t\telse \t\t\r", "-\t\t\tif (tabWidth > 0) {\r", "+\t\t\tif (tabIndex != endOffset && tabWidth > 0) {\r", "+\t\t\ti = tabIndex;\r", "+\t\t}\r", "+\t\telse \t\t\r", "+\t\tif (tabWidth > 0) {\r", "+\t\t\tpaintX = getTabStop(startXOffset + paintX) - startXOffset;\r"]}], "num": 52539}