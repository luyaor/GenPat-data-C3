{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1eded40fc1de4fbaa1a2b09c20d6ac6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b91490bac86587adb449b3b7a9e0822", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "36e66383037b49f2f525487f3f2f4f6d4165ed25", "commitAfterChange": "8166f2fcef730025a015f208c5ea1ef7b871e1ec", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t/*\r", "+\t* Feature on WinCE.  The SWP_DRAWFRAME flag in SetWindowPos\r", "+\t* causes a WM_SIZE event to be thrown even if SWP_NOSIZE is\r", "+\t* set.  When setBounds is called with the flag SWP_NOSIZE,\r", "+\t* the width and height are ignored.  This case should not throw\r", "+\t* a WM_SIZE event.  The fix is to set the SWP_DRAWFRAME flag only if\r", "+\t* SWP_NOSIZE is not specified.\r", "+\t*/\r", "+\tif (OS.IsWinCE) {\r", "+\t\tif ((flags | OS.SWP_NOSIZE) == 0) flags |= OS.SWP_DRAWFRAME;\r", "+\t\tflags |= OS.SWP_NOZORDER | OS.SWP_NOACTIVATE;\r", "+\t} else {\r", "+\t\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffe8cdfdeb5e7596f39425a87183128", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "afeea3334da867aace13a4de03456ef1cbac68d0", "commitAfterChange": "c9db4e5e716e9252aec6fdf41ef0f4150c0d4f19", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["+\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "-\t* Feature on WinCE.  The SWP_DRAWFRAME flag in SetWindowPos\r", "-\t* causes a WM_SIZE event to be thrown even if SWP_NOSIZE is\r", "-\t* set.  When setBounds is called with the flag SWP_NOSIZE,\r", "-\t* the width and height are ignored.  This case should not throw\r", "-\t* a WM_SIZE event.  The fix is to set the SWP_DRAWFRAME flag only if\r", "-\t* SWP_NOSIZE is not specified.\r", "+\t* Feature on WinCE.  The SWP_DRAWFRAME flag for SetWindowPos()\r", "+\t* causes a WM_SIZE message to be sent even when the SWP_NOSIZE\r", "+\t* flag is specified.  The fix is to clear SWP_DRAWFRAME.\r", "-\t\tif ((flags | OS.SWP_NOSIZE) == 0) flags |= OS.SWP_DRAWFRAME;\r", "-\t\tflags |= OS.SWP_NOZORDER | OS.SWP_NOACTIVATE;\r", "-\t} else {\r", "-\t\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t\tif ((flags & OS.SWP_NOSIZE) != 0) flags &= ~OS.SWP_DRAWFRAME;\r"]}], "num": 31899}