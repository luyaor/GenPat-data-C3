{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01e4ed6a517f3b9babbe219845313a4b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "046c84dff3298823e46c0a121aea3149", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "90989c7104593bfd4e0ff41bf464fbe7b3ab7a39", "commitAfterChange": "8e1fb2474c2f3af253317b3903eca7335c2af569", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["+\tint /*long*/ hAdjustment = OS.gtk_spin_button_get_adjustment (handle);", "+\tGtkAdjustment adjustment = new GtkAdjustment ();", "+\tOS.memmove (adjustment, hAdjustment);", "+\tString string = String.valueOf ((int) adjustment.upper);", "+\tbyte [] buffer1 = Converter.wcsToMbcs (null, string, false);", "+\tint /*long*/ ptr = OS.pango_layout_get_text (layout);", "+\tint length = OS.strlen (ptr);", "+\tbyte [] buffer2 = new byte [length];", "+\tOS.memmove (buffer2, ptr, length);\t", "+\tOS.pango_layout_set_text (layout, buffer1, buffer1.length);", "+\tOS.pango_layout_set_text (layout, buffer2, buffer2.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07eb53ed1b33fc0446a945dedfcf7e70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "3e381f35665a1be1bc3cb002766194b2f4ae5bb9", "commitAfterChange": "666899c116c3a7fadc64ad290f3ccaa7e63e3acb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int[] createGdipImage()", "signatureAfterChange": "  int[] createGdipImage()", "diff": ["-\t\t\t\t\t\t\tcase 16:", "-\t\t\t\t\t\t\t\tblue = (byte)((transparentPixel & 0x1F) << 3);", "-\t\t\t\t\t\t\t\tgreen = (byte)((transparentPixel & 0x3E0) >> 2);", "-\t\t\t\t\t\t\t\tred = (byte)((transparentPixel & 0x7C00) >> 7);", "+\t\t\t\t\t\t\tcase 16:\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tint blueMask = 0x1F;", "+\t\t\t\t\t\t\t\tint blueShift = ImageData.getChannelShift(blueMask);", "+\t\t\t\t\t\t\t\tbyte[] blues = ImageData.ANY_TO_EIGHT[ImageData.getChannelWidth(blueMask, blueShift)];", "+\t\t\t\t\t\t\t\tblue = blues[(transparentPixel & blueMask) >> blueShift];", "+\t\t\t\t\t\t\t\tint greenMask = 0x3E0;", "+\t\t\t\t\t\t\t\tint greenShift = ImageData.getChannelShift(greenMask);", "+\t\t\t\t\t\t\t\tbyte[] greens = ImageData.ANY_TO_EIGHT[ImageData.getChannelWidth(greenMask, greenShift)];", "+\t\t\t\t\t\t\t\tgreen = greens[(transparentPixel & greenMask) >> greenShift];\t\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t\tint redMask = 0x7C00;", "+\t\t\t\t\t\t\t\tint redShift = ImageData.getChannelShift(redMask);", "+\t\t\t\t\t\t\t\tbyte[] reds = ImageData.ANY_TO_EIGHT[ImageData.getChannelWidth(redMask, redShift)];", "+\t\t\t\t\t\t\t\tred = reds[(transparentPixel & redMask) >> redShift];\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd713dedf3898b75eb20ec2d3f5a1056", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "bc634d7232bc02a3b9d3fdc9fc44566487fbc970", "commitAfterChange": "a60d8be544df20ec79b43bb591b7ac60b3452dbc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["+void presetChooserDialog () {", "+\t/* MULTI is only valid if the native dialog's action is Open */   ", "+\tif ((style & (SWT.SAVE | SWT.MULTI)) == SWT.MULTI) {", "+\t\tOS.gtk_file_chooser_set_select_multiple (handle, true);", "+\t}", "+\tif (filterPath == null) filterPath = \"\";", "+\tif (fileName == null) fileName = \"\";", "+\tif (filterPath.length () > 0) {", "+\t\tStringBuffer stringBuffer = new StringBuffer ();", "+\t\t/* filename must be a full path */", "+\t\tif (filterPath.charAt (0) != SEPARATOR) {", "+\t\t\tstringBuffer.append (SEPARATOR);", "+\t\t}", "+\t\tstringBuffer.append (filterPath);", "+\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "+\t\t\tstringBuffer.append (SEPARATOR);", "+\t\t}", "+\t\tif (fileName.length () > 0) {", "+\t\t\tstringBuffer.append (fileName);", "+\t\t} else {", "+\t\t\t/* go into the specified directory */", "+\t\t\tstringBuffer.append ('.');", "+\t\t}", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "+\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "+\t}", "+\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "+\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "+\t}", "+", "+\t/* Set the extension filters */", "+\tif (filterNames == null) filterNames = new String [0];", "+\tif (filterExtensions == null) filterExtensions = new String [0];", "+\tfor (int i = 0; i < filterExtensions.length; i++) {", "+\t\tif (filterExtensions [i] != null) {", "+\t\t\tint /*long*/ filter = OS.gtk_file_filter_new ();", "+\t\t\tif (filterNames.length > i && filterNames [i] != null) {", "+\t\t\t\tbyte [] name = Converter.wcsToMbcs (null, filterNames [i], true);", "+\t\t\t\tOS.gtk_file_filter_set_name (filter, name);", "+\t\t\t} else {", "+\t\t\t\tbyte [] name = Converter.wcsToMbcs (null, filterExtensions [i], true);", "+\t\t\t\tOS.gtk_file_filter_set_name (filter, name);", "+\t\t\t}", "+\t\t\tint start = 0;", "+\t\t\tint index = filterExtensions [i].indexOf (EXTENSION_SEPARATOR);", "+\t\t\twhile (index != -1) {", "+\t\t\t\tString current = filterExtensions [i].substring (start, index);", "+\t\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, current, true);", "+\t\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "+\t\t\t\tstart = index + 1;", "+\t\t\t\tindex = filterExtensions [i].indexOf (EXTENSION_SEPARATOR, start);", "+\t\t\t}", "+\t\t\tString current = filterExtensions [i].substring (start);", "+\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, current, true);", "+\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "+\t\t\tOS.gtk_file_chooser_add_filter (handle, filter);", "+\t\t}", "+\t}", "+\tfullPath = null;", "+\tfileNames = new String [0];", "+}", "-}", "-void presetChooserDialog () {", "-\t/* MULTI is only valid if the native dialog's action is Open */   ", "-\tif ((style & (SWT.SAVE | SWT.MULTI)) == SWT.MULTI) {", "-\t\tOS.gtk_file_chooser_set_select_multiple (handle, true);", "-\t}", "-\tif (filterPath == null) filterPath = \"\";", "-\tif (fileName == null) fileName = \"\";", "-\tif (filterPath.length () > 0) {", "-\t\tStringBuffer stringBuffer = new StringBuffer ();", "-\t\t/* filename must be a full path */", "-\t\tif (filterPath.charAt (0) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tstringBuffer.append (filterPath);", "-\t\tif (filterPath.charAt (filterPath.length () - 1) != SEPARATOR) {", "-\t\t\tstringBuffer.append (SEPARATOR);", "-\t\t}", "-\t\tif (fileName.length () > 0) {", "-\t\t\tstringBuffer.append (fileName);", "-\t\t} else {", "-\t\t\t/* go into the specified directory */", "-\t\t\tstringBuffer.append ('.');", "-\t\t}", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, stringBuffer.toString (), true);", "-\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "-\t}", "-\tif ((style & SWT.SAVE) != 0 && fileName.length () > 0) {", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, fileName, true);", "-\t\tOS.gtk_file_chooser_set_current_name (handle, buffer);", "-\t}", "-", "-\t/* Set the extension filters */", "-\tif (filterNames == null) filterNames = new String [0];", "-\tif (filterExtensions == null) filterExtensions = new String [0];", "-\tfor (int i = 0; i < filterExtensions.length; i++) {", "-\t\tif (filterExtensions [i] != null) {", "-\t\t\tbyte [] filterString = Converter.wcsToMbcs (null, filterExtensions [i], true);", "-\t\t\tint /*long*/ filter = OS.gtk_file_filter_new ();", "-\t\t\tOS.gtk_file_filter_add_pattern (filter, filterString);", "-\t\t\tif (filterNames.length > i && filterNames [i] != null) {", "-\t\t\t\tfilterString = Converter.wcsToMbcs (null, filterNames [i], true);", "-\t\t\t}", "-\t\t\tOS.gtk_file_filter_set_name (filter, filterString);", "-\t\t\tOS.gtk_file_chooser_add_filter (handle, filter);", "-\t\t}", "-\t}", "-\tfullPath = null;", "-\tfileNames = new String [0];", "-}"]}], "num": 6056}