{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48a4c8f3fd277b7b8a8477b9b21245d7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbd4a49967a363f20d56e427e758209", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "f6b0cb79e144a4b1239635be6215fd3b5682cba8", "commitAfterChange": "979617063880fb96af17f2e70d01ef24e3824845", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int fontProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int fontProc (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t\tOS.ATSUFindFontName (fontID [0], OS.kFontFamilyName, OS.kFontNoPlatformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null);", "-\t\t\t\tbyte [] buffer = new byte [actualLength [0]];", "-\t\t\t\tOS.ATSUFindFontName (fontID [0], OS.kFontFamilyName, OS.kFontNoPlatformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, buffer.length, buffer, actualLength, null);", "-\t\t\t\tString name = new String(buffer);", "+\t\t\t\tint platformCode = OS.kFontUnicodePlatform, encoding = OS.kCFStringEncodingUnicode;", "+\t\t\t\tif (OS.ATSUFindFontName (fontID [0], OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null) != OS.noErr) {", "+\t\t\t\t\tplatformCode = OS.kFontNoPlatformCode;", "+\t\t\t\t\tencoding = OS.kCFStringEncodingMacRoman;", "+\t\t\t\t\tOS.ATSUFindFontName (fontID [0], OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null);", "+\t\t\t\t}\t", "+\t\t\t\tbyte[] buffer = new byte[actualLength[0]];", "+\t\t\t\tOS.ATSUFindFontName (fontID [0], OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, buffer.length, buffer, actualLength, null);", "+\t\t\t\tString name = \"\";", "+\t\t\t\tint ptr = OS.CFStringCreateWithBytes (0, buffer, buffer.length, encoding, false);", "+\t\t\t\tif (ptr != 0) {", "+\t\t\t\t\tint length = OS.CFStringGetLength (ptr);", "+\t\t\t\t\tif (length != 0) {", "+\t\t\t\t\t\tchar[] chars = new char [length];", "+\t\t\t\t\t\tCFRange range = new CFRange ();", "+\t\t\t\t\t\trange.length = length;", "+\t\t\t\t\t\tOS.CFStringGetCharacters (ptr, range, chars);", "+\t\t\t\t\t\tname = new String (chars);", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.CFRelease (ptr);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb25e1f5c9c000b0ca4000c523504af7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "f6b0cb79e144a4b1239635be6215fd3b5682cba8", "commitAfterChange": "979617063880fb96af17f2e70d01ef24e3824845", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public FontData[] getFontList (String faceName, boolean scalable)", "signatureAfterChange": " public FontData[] getFontList (String faceName, boolean scalable)", "diff": ["+\tCFRange range = new CFRange();", "-\t\tOS.ATSUFindFontName(fontID, OS.kFontFamilyName, OS.kFontNoPlatformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null);", "+\t\tint platformCode = OS.kFontUnicodePlatform, encoding = OS.kCFStringEncodingUnicode;", "+\t\tif (OS.ATSUFindFontName(fontID, OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null) != OS.noErr) {", "+\t\t\tplatformCode = OS.kFontNoPlatformCode;", "+\t\t\tencoding = OS.kCFStringEncodingMacRoman;", "+\t\t\tif (OS.ATSUFindFontName(fontID, OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, 0, null, actualLength, null) != OS.noErr) {", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t}", "-\t\tOS.ATSUFindFontName(fontID, OS.kFontFamilyName, OS.kFontNoPlatformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, buffer.length, buffer, actualLength, null);", "-\t\tString name = new String(buffer);", "-\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "-\t\t\tOS.FMGetFontFamilyInstanceFromFont(fontID, family, style);", "-\t\t\tint s = SWT.NORMAL;", "-\t\t\tif ((style[0] & OS.italic) != 0) s |= SWT.ITALIC;", "-\t\t\tif ((style[0] & OS.bold) != 0) s |= SWT.BOLD;", "-\t\t\tFontData data = new FontData(name, 0, s);", "-\t\t\tfds[count++] = data;", "+\t\tOS.ATSUFindFontName(fontID, OS.kFontFamilyName, platformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, buffer.length, buffer, actualLength, null);", "+\t\tint ptr = OS.CFStringCreateWithBytes(0, buffer, buffer.length, encoding, false);", "+\t\tif (ptr != 0) {", "+\t\t\tint length = OS.CFStringGetLength(ptr);", "+\t\t\tif (length != 0) {", "+\t\t\t\tchar[] chars = new char[length];", "+\t\t\t\trange.length = length;", "+\t\t\t\tOS.CFStringGetCharacters(ptr, range, chars);", "+\t\t\t\tString name = new String(chars);", "+\t\t\t\tif (!name.startsWith(\".\")) {", "+\t\t\t\t\tif (faceName == null || Compatibility.equalsIgnoreCase(faceName, name)) {", "+\t\t\t\t\t\tOS.FMGetFontFamilyInstanceFromFont(fontID, family, style);", "+\t\t\t\t\t\tint s = SWT.NORMAL;", "+\t\t\t\t\t\tif ((style[0] & OS.italic) != 0) s |= SWT.ITALIC;", "+\t\t\t\t\t\tif ((style[0] & OS.bold) != 0) s |= SWT.BOLD;", "+\t\t\t\t\t\tFontData data = new FontData(name, 0, s);", "+\t\t\t\t\t\tfds[count++] = data;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tOS.CFRelease(ptr);"]}], "num": 33263}