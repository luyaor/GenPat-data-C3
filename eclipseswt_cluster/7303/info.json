{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "162f219478b70fe6a23b1820f191011a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4567f66e7dc1d88b8d95e28896ea2c57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/ImageData.java", "commitBeforeChange": "dd1f8765e9bdfa9311a2b280e22623d88d993fee", "commitAfterChange": "8b5c72da34e9df154b8725093da9366cce83f570", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " static void blit(int op, \tbyte[] srcData, int srcDepth, int srcStride, int srcOrder, \tint srcX, int srcY, int srcWidth, int srcHeight, \tint srcRedMask, int srcGreenMask, int srcBlueMask, \tint alphaMode, byte[] alphaData, int alphaStride, int alphaX, int alphaY, \tbyte[] destData, int destDepth, int destStride, int destOrder, \tint destX, int destY, int destWidth, int destHeight, \tint destRedMask, int destGreenMask, int destBlueMask, \tboolean flipX, boolean flipY)", "signatureAfterChange": " static void blit(int op, \tbyte[] srcData, int srcDepth, int srcStride, int srcOrder, \tint srcX, int srcY, int srcWidth, int srcHeight, \tint srcRedMask, int srcGreenMask, int srcBlueMask, \tint alphaMode, byte[] alphaData, int alphaStride, int alphaX, int alphaY, \tbyte[] destData, int destDepth, int destStride, int destOrder, \tint destX, int destY, int destWidth, int destHeight, \tint destRedMask, int destGreenMask, int destBlueMask, \tboolean flipX, boolean flipY)", "diff": ["+\t/*Fast 32 to 32 blit */", "+\tif (alphaMode == 0x10000 && stype == TYPE_GENERIC_32_MSB && dtype == TYPE_GENERIC_32_MSB) {", "+\t\tif (srcRedMask == 0xFF00 && srcGreenMask == 0xff0000 && srcBlueMask == 0xff000000 && destRedMask == 0xFF0000 && destGreenMask == 0xff00 && destBlueMask == 0xff) {", "+\t\t\tfor (int dy = destHeight, sfy = sfyi; dy > 0; --dy, sp = spr += (sfy >>> 16) * srcStride, sfy = (sfy & 0xffff) + sfyi, dp = dpr += dpryi) {", "+\t\t\t\tfor (int dx = destWidth, sfx = sfxi; dx > 0; --dx, dp += dprxi, sfx = (sfx & 0xffff) + sfxi) {", "+\t\t\t\t\tdestData[dp] = srcData[sp + 3];", "+\t\t\t\t\tdestData[dp + 1] = srcData[sp + 2];", "+\t\t\t\t\tdestData[dp + 2] = srcData[sp + 1];", "+\t\t\t\t\tdestData[dp + 3] = srcData[sp];", "+\t\t\t\t\tsp += (sfx >>> 16) * 4;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}", "+\t/*Fast 24 to 32 blit */", "+\tif (alphaMode == 0x10000 && stype == TYPE_GENERIC_24 && dtype == TYPE_GENERIC_32_MSB) {", "+\t\tif (srcRedMask == 0xFF && srcGreenMask == 0xff00 && srcBlueMask == 0xff0000 && destRedMask == 0xFF0000 && destGreenMask == 0xff00 && destBlueMask == 0xff) {", "+\t\t\tfor (int dy = destHeight, sfy = sfyi; dy > 0; --dy, sp = spr += (sfy >>> 16) * srcStride, sfy = (sfy & 0xffff) + sfyi, dp = dpr += dpryi) {", "+\t\t\t\tfor (int dx = destWidth, sfx = sfxi; dx > 0; --dx, dp += dprxi, sfx = (sfx & 0xffff) + sfxi) {", "+\t\t\t\t\tdestData[dp] = 0;", "+\t\t\t\t\tdestData[dp + 1] = srcData[sp + 2];", "+\t\t\t\t\tdestData[dp + 2] = srcData[sp + 1];", "+\t\t\t\t\tdestData[dp + 3] = srcData[sp];", "+\t\t\t\t\tsp += (sfx >>> 16) * 3;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4664708363ca5e6972172072fd998506", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/graphics/ImageData.java", "commitBeforeChange": "dd1f8765e9bdfa9311a2b280e22623d88d993fee", "commitAfterChange": "8b5c72da34e9df154b8725093da9366cce83f570", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " static void blit(int op, \tbyte[] srcData, int srcDepth, int srcStride, int srcOrder, \tint srcX, int srcY, int srcWidth, int srcHeight, \tbyte[] srcReds, byte[] srcGreens, byte[] srcBlues, \tint alphaMode, byte[] alphaData, int alphaStride, int alphaX, int alphaY, \tbyte[] destData, int destDepth, int destStride, int destOrder, \tint destX, int destY, int destWidth, int destHeight, \tint destRedMask, int destGreenMask, int destBlueMask, \tboolean flipX, boolean flipY)", "signatureAfterChange": " static void blit(int op, \tbyte[] srcData, int srcDepth, int srcStride, int srcOrder, \tint srcX, int srcY, int srcWidth, int srcHeight, \tbyte[] srcReds, byte[] srcGreens, byte[] srcBlues, \tint alphaMode, byte[] alphaData, int alphaStride, int alphaX, int alphaY, \tbyte[] destData, int destDepth, int destStride, int destOrder, \tint destX, int destY, int destWidth, int destHeight, \tint destRedMask, int destGreenMask, int destBlueMask, \tboolean flipX, boolean flipY)", "diff": ["+\t/*** Fast blit (straight copy) ***/", "+\tif (srcX == 0 && srcY == 0 && destX == 0 && destY == 0 && destWidth == srcWidth && destHeight == srcHeight) {", "+\t\tif (destDepth == 24 && srcDepth == 8 && (op & BLIT_ALPHA) == 0 && destRedMask == 0xFF0000 && destGreenMask == 0xFF00 && destBlueMask == 0xFF) {", "+\t\t\tfor (int y = 0, sp = 0, dp = 0, spad = srcStride - srcWidth, dpad = destStride - (destWidth * 3); y < destHeight; y++, sp += spad, dp += dpad) {", "+\t\t\t\tfor (int x = 0; x < destWidth; x++) {", "+\t\t\t\t\tint index = srcData[sp++] & 0xff;", "+\t\t\t\t\tdestData[dp++] = srcReds[index];", "+\t\t\t\t\tdestData[dp++] = srcGreens[index];", "+\t\t\t\t\tdestData[dp++] = srcBlues[index];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t\tif (destDepth == 32 && destOrder == MSB_FIRST && srcDepth == 8 && (op & BLIT_ALPHA) == 0 && destRedMask == 0xFF0000 && destGreenMask == 0xFF00 && destBlueMask == 0xFF) {", "+\t\t\tfor (int y = 0, sp = 0, dp = 0, spad = srcStride - srcWidth, dpad = destStride - (destWidth * 4); y < destHeight; y++, sp += spad, dp += dpad) {", "+\t\t\t\tfor (int x = 0; x < destWidth; x++) {", "+\t\t\t\t\tint index = srcData[sp++] & 0xff;", "+\t\t\t\t\tdp++;", "+\t\t\t\t\tdestData[dp++] = srcReds[index];", "+\t\t\t\t\tdestData[dp++] = srcGreens[index];", "+\t\t\t\t\tdestData[dp++] = srcBlues[index];", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}"]}], "num": 7303}