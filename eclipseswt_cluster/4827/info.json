{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "682dd0e77447a36108eececf18ad9926", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5fd9db5c437ecc4d557cb0e1d80545", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/gtk/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "9227d728eba1d0a4ac6bdb3c2c1622885187e116", "commitAfterChange": "6b8dc741cceb8d64fbda9b111255acad6073227e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static Frame new_Frame (final Composite parent)", "signatureAfterChange": " public static Frame new_Frame (final Composite parent)", "diff": ["-\t\tconstructor = clazz.getConstructor (new Class [] {int.class, boolean.class});", "-\t\tvalue = constructor.newInstance (new Object [] {new Integer ((int)/*64*/handle), Boolean.TRUE});", "+\t\tconstructor = clazz.getConstructor (int.class, boolean.class);", "+\t\tvalue = constructor.newInstance (new Integer ((int)/*64*/handle), Boolean.TRUE);", "-\t\t\tconstructor = clazz.getConstructor (new Class [] {long.class, boolean.class});", "-\t\t\tvalue = constructor.newInstance (new Object [] {new Long (handle), Boolean.TRUE});", "+\t\t\tconstructor = clazz.getConstructor (long.class, boolean.class);", "+\t\t\tvalue = constructor.newInstance (new Long (handle), Boolean.TRUE);", "-\t\tMethod method = clazz.getMethod(\"registerListeners\", (Class[])null);", "-\t\tif (method != null) method.invoke(value, (Object[])null);", "+\t\tMethod method = clazz.getMethod(\"registerListeners\");", "+\t\tif (method != null) method.invoke(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cbec167983718e0deddf6ebc5fcab69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/cocoa/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "30aa0c3826135aac4e58bd6f57548574ac5ba309", "commitAfterChange": "62396e7f197b93c20522ab3007183e0650d01964", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Frame new_Frame(final Composite parent)", "signatureAfterChange": " public static Frame new_Frame(final Composite parent)", "diff": ["-\tfinal Class [] clazz = new Class [1];", "+\tfinal Class<?> [] clazz = new Class [1];", "-\t\t\tConstructor constructor = null;", "+\t\t\tConstructor<?> constructor = null;", "-\t\t\t\tconstructor = clazz[0].getConstructor (new Class [] {long.class});", "-\t\t\t\tresult [0] = (Frame) (constructor.newInstance (new Object [] {new Long(handle)}));", "+\t\t\t\tconstructor = clazz[0].getConstructor (long.class);", "+\t\t\t\tresult [0] = (Frame) (constructor.newInstance (new Long(handle)));", "-\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{Boolean.TRUE});", "+\t\t\t\t\t\t\t\tClass<?> clazz = frame.getClass();", "+\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", boolean.class);", "+\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, Boolean.TRUE);", "-\t\t\t\t\t\t\t\tClass clazz = frame.getClass();", "-\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", new Class[]{boolean.class});", "-\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{Boolean.FALSE});", "+\t\t\t\t\t\t\t\tClass<?> clazz = frame.getClass();", "+\t\t\t\t\t\t\t\tMethod method = clazz.getMethod(\"synthesizeWindowActivation\", boolean.class);", "+\t\t\t\t\t\t\t\tif (method != null) method.invoke(frame, Boolean.FALSE);", "-\t\t\t\t\tMethod method = frame.getClass().getMethod(\"validateWithBounds\", new Class[] {int.class, int.class, int.class, int.class});", "-\t\t\t\t\tif (method != null) method.invoke(frame, new Object[]{new Integer(clientArea.x), new Integer(clientArea.y), new Integer(clientArea.width), new Integer(clientArea.height)});", "+\t\t\t\t\tMethod method = frame.getClass().getMethod(\"validateWithBounds\", int.class, int.class, int.class, int.class);", "+\t\t\t\t\tif (method != null) method.invoke(frame, new Integer(clientArea.x), new Integer(clientArea.y), new Integer(clientArea.width), new Integer(clientArea.height));"]}], "num": 4827}