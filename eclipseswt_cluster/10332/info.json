{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c0f0b1ad9163bc28810cdbe59e4d5ac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7da721cc2fd43d4b37b09d5789b0db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "db5070f4a4104c5e47a8cd2bdd5b5f06b11fcd6f", "commitAfterChange": "ed00985c99474f1ccbc7dee6f3b569d40159cdfc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean full)", "signatureAfterChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC)", "diff": ["+", "+RECT getBounds (int row, int column, boolean getText, boolean getImage, boolean fullText, boolean fullImage, int hDC) {", "-\tint columnCount = Math.max (1, parent.getColumnCount ());", "-\tif (0 > column || column > columnCount - 1) return new RECT ();", "+\tint columnCount = parent.getColumnCount ();", "+\tif (!(0 <= column && column < Math.max (1, columnCount))) {", "+\t\treturn new RECT ();", "+\t}", "-\tif (column == 0 && columnCount == 1) {", "+\tif (column == 0) {", "-\t\t\trect.left = 0;", "+\t\t\treturn new RECT ();", "+\t\t}", "+\t\tif (columnCount != 0 && (fullText || fullImage)) {", "+\t\t\tRECT headerRect = new RECT ();", "+\t\t\tint hwndHeader = OS.SendMessage (hwnd, OS.LVM_GETHEADER, 0, 0);", "+\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, 0, headerRect);", "+\t\t\tif (getText && fullText) rect.right = headerRect.right;", "+\t\t\tif (getImage && fullImage) rect.left = headerRect.left;", "-\t\t* Feature in Windows.  Calling LVM_GETSUBITEMRECT with LVIR_LABEL", "-\t\t* and zero for the column number gives the bounds of the first item", "-\t\t* without including the bounds of the icon.  This is undocumented.", "-\t\t* When called with values greater than zero, the icon bounds are", "-\t\t* included and this behavior is documented.", "+\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns an image width", "+\t\t* even when the subitem does not contain an image.  The fix is to", "+\t\t* test for this case and adjust the rectangle to represent the area", "+\t\t* the table is actually drawing.", "+\t\tboolean hasImage = images != null && images [column] != null;", "-\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "-\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect) != 0) {", "-\t\t\tif (getText && getImage) {", "-\t\t\t\tif (column == 0) {", "+\t\tif (fullText || fullImage || hDC == 0) {", "+\t\t\t/*", "+\t\t\t* Bug in Windows.  Despite the fact that the documenation states", "+\t\t\t* that LVIR_BOUNDS and LVIR_LABEL are identical when used with", "+\t\t\t* LVM_GETSUBITEMRECT, LVIR_BOUNDS can return a zero height.  The", "+\t\t\t* fix is to use LVIR_LABEL.", "+\t\t\t*/", "+\t\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect) == 0) {", "+\t\t\t\treturn new RECT ();", "+\t\t\t}", "+\t\t\tif (hasImage) {", "+\t\t\t\tif (getText && !getImage) {", "+\t\t\t\t\ticonRect.top = column;\t\t", "-\t\t\t\t\ticonRect.top = column;", "-\t\t\t\t\t\trect.left = iconRect.left;", "-\t\t\t\t\t\trect.right = Math.max (rect.right, iconRect.right);", "+\t\t\t\t\t\trect.left = iconRect.right + Table.INSET / 2;", "-\t\t\t\tif (column != 0) {", "-\t\t\t\t\t/*", "-\t\t\t\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns an image width", "-\t\t\t\t\t* even when the subitem does not contain an image.  The fix is to", "-\t\t\t\t\t* adjust the rectangle to represent the area the table is drawing.", "-\t\t\t\t\t*/", "-\t\t\t\t\tif (images != null && images [column] != null) {", "-\t\t\t\t\t\tif (getText) {", "-\t\t\t\t\t\t\tRECT iconRect = new RECT ();", "-\t\t\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "-\t\t\t\t\t\t\ticonRect.top = column;\t\t", "-\t\t\t\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "-\t\t\t\t\t\t\t\trect.left = iconRect.right + Table.INSET / 2;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (getImage && !full) rect.right = rect.left;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\tif (getImage && !getText) rect.right = rect.left;", "-\t\t\trect.left = rect.top = 0;", "+\t\t\trect.left = OS.LVIR_ICON;", "+\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect) == 0) {", "+\t\t\t\treturn new RECT ();", "+\t\t\t}", "+\t\t\tif (!hasImage) rect.right = rect.left;", "+\t\t\tif (getText) {", "+\t\t\t\tString string = column == 0 ? text : strings != null ? strings [column] : null;", "+\t\t\t\tif (string != null) {", "+\t\t\t\t\tRECT textRect = new RECT ();", "+\t\t\t\t\tTCHAR buffer = new TCHAR (parent.getCodePage (), string, false);", "+\t\t\t\t\tint flags = OS.DT_NOPREFIX | OS.DT_SINGLELINE | OS.DT_CALCRECT;", "+\t\t\t\t\tOS.DrawText (hDC, buffer, buffer.length (), textRect, flags);", "+\t\t\t\t\trect.right += textRect.right - textRect.left + Table.INSET * 3 + 1;", "+\t\t\t\t}", "+\t\t\t}", "-\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451ecb9d4d6e6f847d8313ff32eb9321", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "4e541013d096af28302abcbca900276c0e545259", "commitAfterChange": "e126ad021104dbb3243e0172869102689e47d9ea", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage)", "signatureAfterChange": "  RECT getBounds (int row, int column, boolean getText, boolean getImage)", "diff": ["-\tint hwnd = parent.handle;", "-\trect.top = column;", "-\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "-\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect) != 0) {", "+\tint hwnd = parent.handle;", "+\tif (column == 0 && count == 1) {", "-\t\t\t/*", "-\t\t\t* Feature in Windows.  Calling LVM_GETSUBITEMRECT with LVIR_LABEL", "-\t\t\t* and zero for the column number gives the bounds of the first item", "-\t\t\t* without including the bounds of the icon.  This is undocumented.", "-\t\t\t* When called with values greater than zero, the icon bounds are", "-\t\t\t* included and this behavior is documented.", "-\t\t\t*/", "-\t\t\tif (column == 0) {", "-\t\t\t\tRECT iconRect = new RECT ();", "-\t\t\t\ticonRect.left = OS.LVIR_ICON;", "-\t\t\t\ticonRect.top = column;", "-\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "-\t\t\t\t\trect.left = iconRect.left;", "-\t\t\t\t\trect.right = Math.max (rect.right, iconRect.right);", "+\t\t\trect.left = OS.LVIR_SELECTBOUNDS;", "+\t\t} else {", "+\t\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\t}", "+\t\tif (OS.SendMessage (hwnd, OS. LVM_GETITEMRECT, row, rect) == 0) {", "+\t\t\trect.left = 0;", "+\t\t}", "+\t} else {", "+\t\t/*", "+\t\t* Feature in Windows.  Calling LVM_GETSUBITEMRECT with LVIR_LABEL", "+\t\t* and zero for the column number gives the bounds of the first item", "+\t\t* without including the bounds of the icon.  This is undocumented.", "+\t\t* When called with values greater than zero, the icon bounds are", "+\t\t* included and this behavior is documented.", "+\t\t*/", "+\t\trect.top = column;", "+\t\trect.left = getText ? OS.LVIR_LABEL : OS.LVIR_ICON;", "+\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, rect) != 0) {", "+\t\t\tif (getText && getImage) {", "+\t\t\t\tif (column == 0) {", "+\t\t\t\t\tRECT iconRect = new RECT ();", "+\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "+\t\t\t\t\ticonRect.top = column;", "+\t\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "+\t\t\t\t\t\trect.left = iconRect.left;", "+\t\t\t\t\t\trect.right = Math.max (rect.right, iconRect.right);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (column != 0) {", "+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns an image width", "+\t\t\t\t\t* even when the subitem does not contain an image.  The fix is to", "+\t\t\t\t\t* adjust the rectangle to represent the area the table is drawing.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (images != null && images [column] != null) {", "+\t\t\t\t\t\tif (getText) {", "+\t\t\t\t\t\t\tRECT iconRect = new RECT ();", "+\t\t\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "+\t\t\t\t\t\t\ticonRect.top = column;\t\t", "+\t\t\t\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "+\t\t\t\t\t\t\t\trect.left = iconRect.right + Table.INSET / 2;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (getImage) rect.right = rect.left;", "+\t\t\t\t\t}", "-\t\t\tif (column != 0) {", "-\t\t\t\t/*", "-\t\t\t\t* Feature in Windows.  LVM_GETSUBITEMRECT returns an image width", "-\t\t\t\t* even when the subitem does not contain an image.  The fix is to", "-\t\t\t\t* adjust the rectangle to represent the area the table is drawing.", "-\t\t\t\t*/", "-\t\t\t\tif (images != null && images [column] != null) {", "-\t\t\t\t\tif (getText) {", "-\t\t\t\t\t\tRECT iconRect = new RECT ();", "-\t\t\t\t\t\ticonRect.left = OS.LVIR_ICON;", "-\t\t\t\t\t\ticonRect.top = column;\t\t", "-\t\t\t\t\t\tif (OS.SendMessage (hwnd, OS. LVM_GETSUBITEMRECT, row, iconRect) != 0) {", "-\t\t\t\t\t\t\trect.left = iconRect.right + Table.INSET / 2;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (getImage) rect.right = rect.left;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\trect.left = rect.top = 0;"]}], "num": 10332}