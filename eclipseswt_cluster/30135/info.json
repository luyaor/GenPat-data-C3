{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e5ca4aaea7a65e3436ceea50c29a400", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afdce3b2f3ae486691d4cfa3898c9e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "05daf1c64c9cff8a2fe7499bcfca6ae6b5b51fa3", "commitAfterChange": "e56784c60e7280d1239eb05f20911135e9798e9e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\t\tif (!OS.IsWinCE) OS.SetStretchBltMode(tempHdc, OS.COLORONCOLOR);", "-\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCINVERT);", "-\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, maskHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCAND);", "-\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCINVERT);", "+\t\tboolean stretch = !simple && (srcWidth != destWidth || srcHeight != destHeight);", "+\t\tif (!OS.IsWinCE) {", "+\t\t\tif (stretch) OS.SetStretchBltMode(tempHdc, OS.COLORONCOLOR);", "+\t\t}", "+\t\tif (stretch) {", "+\t\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCINVERT);", "+\t\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, maskHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCAND);", "+\t\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, srcWidth, srcHeight, OS.SRCINVERT);", "+\t\t} else {", "+\t\t\tOS.BitBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, OS.SRCINVERT);", "+\t\t\tOS.BitBlt(tempHdc, 0, 0, destWidth, destHeight, maskHdc, srcX, srcY, OS.SRCAND);", "+\t\t\tOS.BitBlt(tempHdc, 0, 0, destWidth, destHeight, srcHdc, srcX, srcY, OS.SRCINVERT);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c780d291a474b7eb8929dec21fded147", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "3c95388a8bf53c04d5226468d72b0027f3440c32", "commitAfterChange": "41f8d7adece06452508f7ef9680fa45b7d048dcb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r void drawBitmapAlpha(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "\r \r void drawBitmapAlpha(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tOS.StretchBlt(memHdc, 0, 0, destWidth, destHeight, memHdc, 0, 0, srcWidth, srcHeight, OS.SRCCOPY);\r", "+\t/* \r", "+\t* Bug in WinCE.  StretchBlt does not correctly stretch when the\r", "+\t* source and destination HDCs are the same.  The workaround is to\r", "+\t* stretch to a temporary HDC and blit back into the original HDC.\r", "+\t* Note that StretchBlt correctly compresses the image when the\r", "+\t* source and destination HDCs are the same.\r", "+\t*/\r", "+\tif (OS.IsWinCE && (destWidth > srcWidth || destHeight > srcHeight)) {\r", "+\t\tint tempHdc = OS.CreateCompatibleDC(handle);\r", "+\t\tint tempDib = createDIB(destWidth, destHeight);\r", "+\t\tint oldTempBitmap = OS.SelectObject(tempHdc, tempDib);\r", "+\t\tOS.StretchBlt(tempHdc, 0, 0, destWidth, destHeight, memHdc, 0, 0, srcWidth, srcHeight, OS.SRCCOPY);\r", "+\t\tOS.BitBlt(memHdc, 0, 0, destWidth, destHeight, tempHdc, 0, 0, OS.SRCCOPY);\r", "+\t\tOS.SelectObject(tempHdc, oldTempBitmap);\r", "+\t\tOS.DeleteObject(tempDib);\r", "+\t\tOS.DeleteDC(tempHdc);\r", "+\t} else {\r", "+\t\tOS.StretchBlt(memHdc, 0, 0, destWidth, destHeight, memHdc, 0, 0, srcWidth, srcHeight, OS.SRCCOPY);\r", "+\t}\r"]}], "num": 30135}