{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04a75ce1ed93d02ca2312faee1a2c16f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee94678422bba8662344ac4f324238f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Caret.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean drawCaret ()", "signatureAfterChange": "  boolean drawCaret ()", "diff": ["+", "-\tint handle = parent.handle;", "-\t", "-\tint clipRgn= OS.NewRgn();", "-\tMacUtil.getVisibleRegion(parent.handle, clipRgn, true);", "-", "-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(parent.handle, bounds.getData());", "-\tbounds= new MacRect(x+bounds.getX(), y+bounds.getY(), nWidth, nHeight);", "-\t", "-\tint caretRgn= OS.NewRgn();", "-\tOS.RectRgn(caretRgn, bounds.getData());", "-\tOS.SectRgn(caretRgn, clipRgn, caretRgn);", "-\t", "-\tif (!OS.EmptyRgn(caretRgn)) {", "-\t\tint port= OS.GetPort();", "-\t\tOS.SetPortWindowPort(OS.GetControlOwner(handle));\t", "-\t\tOS.InvertRgn(caretRgn);", "-\t\tOS.SetPort(port);", "-\t}", "-\t", "-\tOS.DisposeRgn(clipRgn);", "-\tOS.DisposeRgn(caretRgn);", "-", "+\tint parentHandle = parent.handle;", "+\tint window = OS.GetControlOwner (parentHandle);", "+\tint port = OS.GetWindowPort (window);", "+\tint [] currentPort = new int [1];", "+\tOS.GetPort (currentPort);", "+\tOS.SetPort (port);", "+\tint oldClip = OS.NewRgn ();", "+\tint visibleRgn = getVisibleRegion (parentHandle);", "+\tOS.GetClip (oldClip);", "+\tOS.SetClip (visibleRgn);", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (parentHandle, rect);", "+\tint left = rect.left + x;", "+\tint top = rect.top + y;", "+\tOS.SetRect(rect, (short) left, (short) top, (short) (left + nWidth), (short) (top + nHeight));", "+\tRGBColor color = new RGBColor ();", "+\tcolor.red = (short) 0xFFFF;", "+\tcolor.green = (short) 0xFFFF;", "+\tcolor.blue = (short) 0xFFFF;", "+\tOS.RGBBackColor (color);", "+\tOS.InvertRect (rect);\t", "+\tOS.SetClip (oldClip);", "+\tOS.DisposeRgn (visibleRgn);", "+\tOS.DisposeRgn (oldClip);", "+\tOS.SetPort (currentPort [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40174dc9a1101c9417daacc2c35ed60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "a7462f6b30f403b541de53811b1a2d45dd86b987", "commitAfterChange": "37c3fc5edd360862e04e4236fb6d1206ffdadd53", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void oldRelayout()", "signatureAfterChange": " \t \tprivate void oldRelayout()", "diff": ["-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetControlBounds(hndl, bounds.getData());", "+\t\tRect bounds= new Rect();", "+\t\tOS.GetControlBounds(hndl, bounds);", "-\t\tint x= bounds.getX();", "-\t\tint y= bounds.getY();", "-\t\tint w= bounds.getWidth();", "-\t\tint h= bounds.getHeight();", "+\t\tint x= bounds.left;", "+\t\tint y= bounds.top;", "+\t\tint w= bounds.right-bounds.left;", "+\t\tint h= bounds.bottom-bounds.top;", "-\t\tif (hsb != null)", "-\t\t\thsb.internalSetBounds(new MacRect(x, y+h-s, ww, s));", "+\t\tRect rect = new Rect();", "+\t\tif (hsb != null) {", "+\t\t\tOS.SetRect(rect, (short)x, (short)(y+h-s), (short)(x+ww), (short)(y+h));", "+\t\t\thsb.internalSetBounds(rect);", "+\t\t}", "-\t\tif (vsb != null)", "-\t\t\tvsb.internalSetBounds(new MacRect(x+w-s, y, s, hh));", "+\t\tif (vsb != null) {", "+\t\t\tOS.SetRect(rect, (short)(x+w-s), (short)y, (short)(x+w), (short)(y+hh));", "+\t\t\tvsb.internalSetBounds(rect);", "+\t\t}", "-\t\tOS.SetControlBounds(handle, new MacRect(x, y, ww, hh).getData());", "+\t\tOS.SetRect(rect, (short)x, (short)y, (short)(x+ww), (short)(y+hh));", "+\t\tOS.SetControlBounds(handle, rect);", "-\t\tif (ww != w && hh != h)", "-\t\t\tOS.InvalWindowRect(OS.GetControlOwner(handle), new MacRect(x+w-s, y+h-s, s, s).getData());", "+\t\tif (ww != w && hh != h) {", "+\t\t\tOS.SetRect(rect, (short)(x+w-s), (short)(y+h-s), (short)(x+w), (short)(y+h));", "+\t\t\tOS.InvalWindowRect(OS.GetControlOwner(handle), rect);", "+\t\t}"]}], "num": 19348}