{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a1ae67fdcb741e9e35ab091032b8f0e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8acfe377b3ec7fe6a26ce52bf0bde6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "a87a0403ac3b9edf077183bd0f22ecbd0e7e4a59", "commitAfterChange": "ce5bc5ccb4b7e34346accfd668928ba52a6f7a27", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\tbrowser.dispose ();", "-\t\terror (rc);", "+\t\trc = componentManager.CreateInstance (NS_IWEBBROWSER_CID, 0, nsIWebBrowser_1_9.NS_IWEBBROWSER_IID, result);", "+\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\tbrowser.dispose ();", "+\t\t\terror (rc);", "+\t\t}", "-\t\tif (!factoriesRegistered) {", "-\t\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory ();", "-\t\t\tdialogFactory.AddRef ();", "-\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID, true);", "-\t\t\tbyte[] aClassName = MozillaDelegate.wcsToMbcs (null, \"swtHelperAppLauncherDialog\", true); //$NON-NLS-1$", "-\t\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress ());", "-\t\t\tif (rc != XPCOM.NS_OK) {", "-\t\t\t\tbrowser.dispose ();", "-\t\t\t\terror (rc);", "-\t\t\t}", "-\t\t\tdialogFactory.Release ();", "-\t\t}", "-\t\tresult[0] = 0;", "+\t\tIsPre_2 = true;", "+\t\tresult[0] = 0;", "+\t\t\t\tresult[0] = 0;", "+\t\t\t\trc = interfaceRequestor.GetInterface(nsIDocShell_2.NS_IDOCSHELL_IID, result);", "+\t\t\t\tif (rc == XPCOM.NS_OK && result[0] != 0) { /* >=2.0 */", "+\t\t\t\t\tIsPre_2 = false;", "+\t\t\t\t\tnew nsISupports (result[0]).Release();", "+\t\t\t\t}", "+\t\tif (!factoriesRegistered) {", "+\t\t\tHelperAppLauncherDialogFactory dialogFactory = new HelperAppLauncherDialogFactory ();", "+\t\t\tdialogFactory.AddRef ();", "+\t\t\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CONTRACTID, true);", "+\t\t\tbyte[] aClassName = MozillaDelegate.wcsToMbcs (null, \"swtHelperAppLauncherDialog\", true); //$NON-NLS-1$", "+\t\t\trc = componentRegistrar.RegisterFactory (XPCOM.NS_HELPERAPPLAUNCHERDIALOG_CID, aClassName, aContractID, dialogFactory.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\tbrowser.dispose ();", "+\t\t\t\terror (rc);", "+\t\t\t}", "+\t\t\tdialogFactory.Release ();", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062c670cc3924bac598f2bfa98a8bdc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "647136ddf4768614d99658a624528bafb2469eb5", "commitAfterChange": "b42f3deae13793369b19cd7f6ae257616fcd4739", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  int callJava (int functionId, int args, int returnPtr)", "signatureAfterChange": "  int callJava (int functionId, int tokenVariant, int args, int returnPtr)", "diff": ["-int callJava (int functionId, int /*long*/ args, int /*long*/ returnPtr) {", "+int callJava (int functionId, int /*long*/ tokenVariant, int /*long*/ args, int /*long*/ returnPtr) {", "-\t\tshort[] type = new short[1]; /* PRUint16 */", "-\t\tnsIVariant variant = new nsIVariant (args);", "-\t\tint rc = variant.GetDataType (type);", "-\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "-\t\t\tObject temp = (Object[])convertToJava (variant, type[0]);", "-\t\t\tif (temp instanceof Object[]) {", "-\t\t\t\tObject[] arguments = (Object[])temp;", "-\t\t\t\ttry {", "-\t\t\t\t\treturnValue = function.function (arguments);", "-\t\t\t\t} catch (Exception e) {", "-\t\t\t\t\t/* exception during function invocation */", "-\t\t\t\t\treturnValue = WebBrowser.CreateErrorString (e.getLocalizedMessage ());", "+\t\t\tshort[] type = new short[1]; /* PRUint16 */", "+\t\t\tnsIVariant variant = new nsIVariant (tokenVariant);", "+\t\t\tint rc = variant.GetDataType (type);", "+\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\tObject temp = convertToJava (variant, type[0]);", "+\t\t\ttype[0] = 0;", "+\t\t\tif (temp instanceof Number) {", "+\t\t\t\tlong token = ((Number)temp).longValue ();", "+\t\t\t\tif (token == function.token) {", "+\t\t\t\t\tvariant = new nsIVariant (args);", "+\t\t\t\t\trc = variant.GetDataType (type);", "+\t\t\t\t\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\t\t\t\t\ttemp = convertToJava (variant, type[0]);", "+\t\t\t\t\tif (temp instanceof Object[]) {", "+\t\t\t\t\t\tObject[] arguments = (Object[])temp;", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\treturnValue = function.function (arguments);", "+\t\t\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t\t\t/* exception during function invocation */", "+\t\t\t\t\t\t\treturnValue = WebBrowser.CreateErrorString (e.getLocalizedMessage ());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9584cbf61a27d616f4185bc0d7f36bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "c29e3da1101443f614033b985065b638c34419f3", "commitAfterChange": "157722548e682439771f1d4f20d885a665802b74", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "signatureAfterChange": "  void initXPCOM (String mozillaPath, boolean isXULRunner)", "diff": ["-\t\tif (rc == XPCOM.NS_OK) {", "+\t\tif (rc == XPCOM.NS_OK) { /* > 3.x */", "+\t\t\tIsPre_17 = false;", "-\t\t\tnsISupports.IsXULRunner17 = true;", "+\t\t\tresult[0] = 0;", "+\t\t\trc = localFile.QueryInterface(nsIFile.NS_IFILE_17_IID, result);", "+\t\t\tif (rc == XPCOM.NS_OK) { /* = 17.0.1 */", "+\t\t\t\tnsISupports.IsXULRunner17 = true;", "+\t\t\t} else { /* = 10.0 */", "+\t\t\t\tIsPre_17 = true;", "+\t\t\t\trc = localFile.QueryInterface (nsILocalFile.NS_ILOCALFILE_IID, result);", "+\t\t\t\tif (rc != XPCOM.NS_OK) {", "+\t\t\t\t\tbrowser.dispose ();", "+\t\t\t\t\terror (rc);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (result[0] != 0) new nsISupports (result[0]).Release();"]}], "num": 13506}