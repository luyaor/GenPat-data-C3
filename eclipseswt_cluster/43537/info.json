{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54c60d079d61b77c156d4940af60e60c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af017acfd58791ed1884adb2397d2f71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void calculate(int startLine, int lineCount)", "signatureAfterChange": " \tpublic void calculate(int startLine, int lineCount)", "diff": ["-\t\tint caretWidth = parent.getCaretWidth();", "+\t\tint hTrim = parent.leftMargin + parent.rightMargin + parent.getCaretWidth();", "+\t\tStyledTextRenderer2 renderer = parent.renderer;", "+\t\tStyledTextContent content = parent.content;", "+\t\tTextLayout layout;", "+\t\tRectangle rect;", "-\t\t\tif (lineWidth[i] == -1) {", "-\t\t\t\tString line = parent.content.getLine(i);", "-\t\t\t\tint lineOffset = parent.content.getOffsetAtLine(i);", "-\t\t\t\tlineWidth[i] = contentWidth(line, lineOffset) + caretWidth;", "+\t\t\tif (lineWidth[i] == -1 || lineHeight[i] == -1) {", "+\t\t\t\tString line = content.getLine(i);", "+\t\t\t\tint lineOffset = content.getOffsetAtLine(i);", "+\t\t\t\tlayout = renderer.getTextLayout(line, lineOffset);", "+\t\t\t\trect = layout.getBounds();", "+\t\t\t\tlineWidth[i] = rect.width + hTrim;", "+\t\t\t\tlineHeight[i] = rect.height;", "+\t\t\t\trenderer.disposeTextLayout(layout);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa80d1d6a16b256abdba8ebe38ebcb83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "bc224c2a2fcbef7d8e73e3f7b7b518fc99abc8ef", "commitAfterChange": "56d7d44784ad7e2547a3e9a0ea84e65586278aec", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " int doMouseWordSelect(int x, int newCaretOffset, int line)", "signatureAfterChange": " int doMouseWordSelect(int x, int newCaretOffset, int line)", "diff": ["-\t\tint wordOffset;", "-\t\t// find the previous/next word", "+\t\tboolean wordSelect = (clickCount & 1) == 0;", "-\t\t\twordOffset = getWordPrevious(newCaretOffset, SWT.MOVEMENT_WORD_START);", "+\t\t\tif (wordSelect) {", "+\t\t\t\tnewCaretOffset = getWordPrevious(newCaretOffset, SWT.MOVEMENT_WORD_START);", "+\t\t\t} else {", "+\t\t\t\tnewCaretOffset = content.getOffsetAtLine(line);", "+\t\t\t}", "-\t\t\twordOffset = getWordNext(newCaretOffset, SWT.MOVEMENT_WORD_END);", "-\t\t}", "-\t\t// mouse word select only on same line mouse cursor is on", "-\t\tif (content.getLineAtOffset(wordOffset) == line) {", "-\t\t\tnewCaretOffset = wordOffset;", "+\t\t\tif (wordSelect) {", "+\t\t\t\tnewCaretOffset = getWordNext(newCaretOffset, SWT.MOVEMENT_WORD_END);", "+\t\t\t} else {", "+\t\t\t\tint lineEnd = content.getCharCount();", "+\t\t\t\tif (line + 1 < content.getLineCount()) {", "+\t\t\t\t\tlineEnd = content.getOffsetAtLine(line + 1);", "+\t\t\t\t}", "+\t\t\t\tnewCaretOffset = lineEnd; ", "+\t\t\t}"]}], "num": 43537}