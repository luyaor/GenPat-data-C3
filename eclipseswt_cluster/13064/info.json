{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d2f7ddd78345b4edcb4bc24b11653b0d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56bd2da945224cd1ef9eb58fa2d4eb32", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "0a5ce139580f2cfdd7832bcaa6dbbfba4cc58225", "commitAfterChange": "f0d2633c2c6f8c5fb1114f85f4f664ece52dbf75", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\tNSAutoreleasePool pool = checkGC(CLIPPING | TRANSFORM | FONT | FOREGROUND_FILL);", "+\tNSAutoreleasePool pool = checkGC(CLIPPING | TRANSFORM | FONT);", "-\t\tNSAttributedString str = createString(string, flags);", "+\t\tNSAttributedString str = createString(string, flags, true);", "+\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "+\t\t\tNSColor bg = data.bg;", "+\t\t\tif (bg == null) {", "+\t\t\t\tfloat /*double*/ [] color = data.background;", "+\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\t\tbg.retain();", "+\t\t\t}", "+\t\t\tbg.setFill();", "+\t\t\tNSBezierPath.fillRect(rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265224580083d6941a7da1b69a6e10ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9f0158bef8032723965c0f2d6bd242bfefac7d03", "commitAfterChange": "de39ec30a29f6ea7488b95a176a7772391db46ae", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\t\tNSColor bg = data.bg;", "-\t\t\tif (bg == null) {", "-\t\t\t\tfloat /*double*/ [] color = data.background;", "-\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\t\tbg.retain();", "+\t\t\tPattern pattern = data.backgroundPattern;", "+\t\t\tif (pattern != null) setPatternPhase(pattern);", "+\t\t\tif (pattern != null && pattern.gradient != null) {", "+\t\t\t\tNSBezierPath path = NSBezierPath.bezierPathWithRect(rect);", "+\t\t\t\tfillPattern(path, pattern);", "+\t\t\t} else {", "+\t\t\t\tNSColor bg = data.bg;", "+\t\t\t\tif (bg == null) {", "+\t\t\t\t\tfloat /*double*/ [] color = data.background;", "+\t\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "+\t\t\t\t\tbg.retain();", "+\t\t\t\t}", "+\t\t\t\tbg.setFill();", "+\t\t\t\tNSBezierPath.fillRect(rect);", "-\t\t\tbg.setFill();", "-\t\t\tNSBezierPath.fillRect(rect);"]}], "num": 13064}