{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc4c5905a72177567e70dfa5312630ad", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f080a2de8db2cf7bdd086d793350c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "6d670c8714ed179f165f68c4a869f2e55030f028", "commitAfterChange": "79bb0d208f718c61fd26264c88a07616f236eeb8", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_HSCROLL (int wParam, int lParam)", "diff": ["+\t* Bug in Windows.  When a table that is drawing grid lines", "+\t* is slowly scrolled horizontally to the left, the table does", "+\t* not redraw the newly exposed vertical grid lines.  The fix", "+\t* is to save the old scroll position, call the window proc,", "+\t* get the new scroll position and redraw the new area.", "+\t*/", "+\tint oldPos = 0;", "+\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "+\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) {", "+\t\tSCROLLINFO info = new SCROLLINFO ();", "+\t\tinfo.cbSize = SCROLLINFO.sizeof;", "+\t\tinfo.fMask = OS.SIF_POS;", "+\t\tOS.GetScrollInfo (handle, OS.SB_HORZ, info);", "+\t\toldPos = info.nPos;", "+\t}", "+\t", "+\t/*", "-\t* Bug in Windows.  When an empty table is drawing grid lines", "-\t* and the user scrolls horizontally, the table does not redraw", "-\t* the newly exposed vertical grid lines.  The fix is to redraw", "-\t* the table.", "+\t* Bug in Windows.  When a table that is drawing grid lines", "+\t* is slowly scrolled horizontally to the left, the table does", "+\t* not redraw the newly exposed vertical grid lines.  The fix", "+\t* is to save the old scroll position, call the window proc,", "+\t* get the new scroll position and redraw the new area.", "-\tif (OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0) == 0) {", "-\t\tint bits = OS.SendMessage (handle, OS.LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0);", "-\t\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) OS.InvalidateRect (handle, null, true);", "+\tif ((bits & OS.LVS_EX_GRIDLINES) != 0) {", "+\t\tSCROLLINFO info = new SCROLLINFO ();", "+\t\tinfo.cbSize = SCROLLINFO.sizeof;", "+\t\tinfo.fMask = OS.SIF_POS;", "+\t\tOS.GetScrollInfo (handle, OS.SB_HORZ, info);", "+\t\tint newPos = info.nPos;", "+\t\tif (newPos < oldPos) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.GetClientRect (handle, rect);", "+\t\t\trect.right = oldPos - newPos + GRID_WIDTH;", "+\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9adbf429ec4f6d8c311c759b2c6466c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r void resizeBounds (int width, int height)", "signatureAfterChange": "\r \r void resizeBounds (int width, int height)", "diff": ["+\tint menuHeight = 0;\r", "-\t\tint [] args = {OS.Pt_ARG_HEIGHT, 0, 0};\r", "-\t\tOS.PtGetResources (menuBar.handle, args.length / 3, args);\r", "-\t\theight = Math.max (height - args [1], 0);\r", "+\t\tPhDim_t dim = new PhDim_t ();\r", "+\t\tint menuHandle = menuBar.handle;\r", "+\t\tif (!OS.PtWidgetIsRealized (menuHandle)) {\r", "+\t\t\tOS.PtExtentWidgetFamily (menuHandle);\r", "+\t\t}\r", "+\t\tOS.PtWidgetPreferredSize (menuHandle, dim);\r", "+\t\tmenuHeight = dim.h;\r", "+\t\tint [] args = {OS.Pt_ARG_HEIGHT, menuHeight, 0};\r", "+\t\tOS.PtSetResources (menuHandle, args.length / 3, args);\r", "+\t\theight = height - menuHeight;\r", "-\tint [] args = {OS.Pt_ARG_WIDTH, width, 0, OS.Pt_ARG_HEIGHT, height, 0};\r", "+\tPhArea_t area = new PhArea_t ();\r", "+\tarea.pos_y = (short) menuHeight;\r", "+\tarea.size_w = (short) Math.max (width, 0);\r", "+\tarea.size_h = (short) Math.max (height ,0);\r", "+\tint ptr = OS.malloc (PhArea_t.sizeof);\r", "+\tOS.memmove (ptr, area, PhArea_t.sizeof);\r", "+\tint [] args = new int [] {OS.Pt_ARG_AREA, ptr, 0};\r", "+\tOS.free (ptr);\r"]}], "num": 42207}