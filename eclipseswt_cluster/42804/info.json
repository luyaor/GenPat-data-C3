{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9ff54942aff63c0faeda4e84faf6b4e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ac49eb1e0ec3d6f3898b03cbb6a26b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "051f9932db69347a518cacecaed2566aaea2c54c", "commitAfterChange": "dce0d4963f506564c3b3269b3ef505b877c310ae", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r\tvoid createWidgets()", "signatureAfterChange": "\r \r \tvoid createWidgets()", "diff": ["-\r\tvoid createWidgets() {\r", "+\r", "+\tvoid createWidgets() {\r", "-\r\t\t// Separate the menu bar from the rest of the widgets.\r", "+\r", "+\t\t// Separate the menu bar from the rest of the widgets.\r", "-\r\t\t// Check box to request transparent display.\r", "+\r", "+\t\t// Check box to request transparent display.\r", "-\r\t\t// Check box to request mask display.\r", "+\r", "+\t\t// Check box to request mask display.\r", "-\r\t\t// Check box to request background display.\r", "+\r", "+\t\t// Check box to request background display.\r", "-\r\t\t// Group the animation buttons.\r", "+\r", "+\t\t// Group the animation buttons.\r", "-\r\t\t// Push button to display the previous image in a multi-image file.\r", "+\r", "+\t\t// Push button to display the previous image in a multi-image file.\r", "-\r\t\t// Push button to display the next image in a multi-image file.\r", "+\r", "+\t\t// Push button to display the next image in a multi-image file.\r", "-\r\t\t// Push button to toggle animation of a multi-image file.\r", "+\r", "+\t\t// Push button to toggle animation of a multi-image file.\r", "-\r\t\t// Label to show the image file type.\r", "+\r", "+\t\t// Label to show the image file type.\r", "-\r\t\t// Canvas to show the image.\r", "+\r", "+\t\t// Canvas to show the image.\r", "-\r\t\t// Set up the image canvas scroll bars.\r", "+\r", "+\t\t// Set up the image canvas scroll bars.\r", "-\r\t\t// Label to show the image size.\r", "+\r", "+\t\t// Label to show the image size.\r", "-\r\t\t// Label to show the image depth.\r", "+\r", "+\t\t// Label to show the image depth.\r", "-\r\t\t// Label to show the transparent pixel.\r", "+\r", "+\t\t// Label to show the transparent pixel.\r", "-\r\t\t// Label to show the image disposal method.\r", "+\r", "+\t\t// Label to show the image disposal method.\r", "-\r\t\t// Label to show the image delay time.\r", "+\r", "+\t\t// Label to show the image delay time.\r", "-\r\t\t// Label to show the background pixel.\r", "+\r", "+\t\t// Label to show the background pixel.\r", "-\r\t\t// Label to show if the image has a direct or indexed palette.\r", "+\r", "+\t\t// Label to show if the image has a direct or indexed palette.\r", "-\r\t\t// Canvas to show the image's palette.\r", "+\r", "+\t\t// Canvas to show the image's palette.\r", "-\r\t\t// Set up the palette canvas scroll bar.\r", "+\r", "+\t\t// Set up the palette canvas scroll bar.\r", "-\r\t\t// Sash to see more of image or image data.\r", "+\r", "+\t\t// Sash to see more of image or image data.\r", "-\t\tdataText = new Text(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.H_SCROLL);\r", "+\t\tdataText = new StyledText(shell, SWT.BORDER | SWT.MULTI | SWT.READ_ONLY | SWT.V_SCROLL | SWT.H_SCROLL);\r", "+\t\tdataText.setBackground(display.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb1952ddb77ea7183b8adb462ed1ee3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bd469e488bef6f88459d9c0535159f8167416d1f", "commitAfterChange": "0f22a30a5b82bfeb0c093bba732059285a8fbaba", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": " Event dragDetect (Event event)", "signatureAfterChange": " public boolean dragDetect (int button, int stateMask, int x, int y)", "diff": ["-//TODO - Javadoc", "-/*public*/ Event dragDetect (Event event) {", "+public boolean dragDetect (int button, int stateMask, int x, int y) {", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (!dragDetect (handle, event.x, event.y, false, null, null)) return null;", "-\tEvent dragEvent = new Event ();", "-\tdragEvent.button = event.button;", "-\tdragEvent.x = event.x;", "-\tdragEvent.y = event.y;", "-\tdragEvent.stateMask = event.stateMask;", "-\treturn dragEvent;", "+\tif (button != 1) return false;", "+\tif (!dragDetect (handle, x, y, false, null, null)) {", "+\t\t/*", "+\t\t* Feature in Windows.  DragDetect() captures the mouse", "+\t\t* and tracks its movement until the user releases the", "+\t\t* left mouse button, presses the ESC key, or moves the", "+\t\t* mouse outside the drag rectangle.  If the user moves", "+\t\t* the mouse outside of the drag rectangle, DragDetect()", "+\t\t* returns true and a drag and drop operation can be", "+\t\t* started.  When the left mouse button is released or", "+\t\t* the ESC key is pressed, these events are consumed by", "+\t\t* DragDetect() so that application code that matches", "+\t\t* mouse down/up pairs or looks for the ESC key will not", "+\t\t* function properly.  The fix is to send the missing", "+\t\t* events when the drag has not started.", "+\t\t* ", "+\t\t* NOTE: For now, don't send a fake WM_KEYDOWN/WM_KEYUP", "+\t\t* events for the ESC key.  This would require computing", "+\t\t* wParam (the key) and lParam (the repeat count, scan code,", "+\t\t* extended-key flag, context code, previous key-state flag,", "+\t\t* and transition-state flag) which is non-trivial.", "+\t\t*/", "+\t\tif (button == 1 && OS.GetKeyState (OS.VK_ESCAPE) >= 0) {", "+\t\t\tint wParam = 0;", "+\t\t\tif ((stateMask & SWT.CTRL) != 0) wParam |= OS.MK_CONTROL;", "+\t\t\tif ((stateMask & SWT.SHIFT) != 0) wParam |= OS.MK_SHIFT;", "+\t\t\tif ((stateMask & SWT.ALT) != 0) wParam |= OS.MK_ALT;", "+\t\t\tif ((stateMask & SWT.BUTTON1) != 0) wParam |= OS.MK_LBUTTON;", "+\t\t\tif ((stateMask & SWT.BUTTON2) != 0) wParam |= OS.MK_MBUTTON;", "+\t\t\tif ((stateMask & SWT.BUTTON3) != 0) wParam |= OS.MK_RBUTTON;", "+\t\t\tif ((stateMask & SWT.BUTTON4) != 0) wParam |= OS.MK_XBUTTON1;", "+\t\t\tif ((stateMask & SWT.BUTTON5) != 0) wParam |= OS.MK_XBUTTON2;", "+\t\t\tint lParam = (x & 0xFFFF) | ((y << 16) & 0xFFFF0000);", "+\t\t\tOS.SendMessage (handle, OS.WM_LBUTTONUP, wParam, lParam);", "+\t\t}", "+\t\treturn false;", "+\t}", "+\treturn sendDragEvent (button, stateMask, x, y);"]}], "num": 42804}