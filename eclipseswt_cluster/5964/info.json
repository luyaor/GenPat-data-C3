{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ee019bfeefd71190cf3e1fe0d6cd3eb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8959b2e2f0ab00a5119fce3b34e15323", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "02c7e8fbdb10b222f8d1e2635055c3a06dfd6bce", "commitAfterChange": "7ebed4b25c577490446ba68dfccd18feab0eef8f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t", "-\t\t/* Get the damage */", "-\t\tint [] lpRgnData = null;", "-\t\tboolean isComplex = false;", "-\t\tboolean exposeRegion = false;", "-\t\tint rgn = 0;", "-\t\tif ((style & (SWT.NO_MERGE_PAINTS | SWT.DOUBLE_BUFFERED)) != 0) {", "-\t\t\trgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\t\tisComplex = OS.GetUpdateRgn (handle, rgn, false) == OS.COMPLEXREGION;", "-\t\t}", "-", "-\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0) {", "-\t\t\tif (isComplex) {", "-\t\t\t\tint nBytes = OS.GetRegionData (rgn, 0, null);", "-\t\t\t\tlpRgnData = new int [nBytes / 4];", "-\t\t\t\texposeRegion = OS.GetRegionData (rgn, nBytes, lpRgnData) != 0;", "-\t\t\t}", "-\t\t}", "-\t", "+", "+\t\t/* Get the system region for the paint HDC */", "+\t\tint sysRgn = 0;", "+\t\tif ((style & (SWT.NO_MERGE_PAINTS | SWT.DOUBLE_BUFFERED)) != 0) {", "+\t\t\tsysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tif (OS.GetRandomRgn (gc.handle, sysRgn, OS.SYSRGN) == 1) {", "+\t\t\t\tif (OS.IsWinNT) {", "+\t\t\t\t\tPOINT pt = new POINT();", "+\t\t\t\t\tOS.MapWindowPoints (0, handle, pt, 1);", "+\t\t\t\t\tOS.OffsetRgn (sysRgn, pt.x, pt.y);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "-\t\t\t\tOS.OffsetRgn (rgn, -ps.left, -ps.top);", "-\t\t\t\tOS.SelectClipRgn (gc.handle, rgn);", "-\t\t\t\tOS.SetMetaRgn (gc.handle);", "+\t\t\t\tOS.OffsetRgn (sysRgn, -ps.left, -ps.top);", "+\t\t\t\tOS.SelectClipRgn (gc.handle, sysRgn);", "+\t\t\t\tOS.OffsetRgn (sysRgn, ps.left, ps.top);", "+\t\t\t\tOS.SetMetaRgn (gc.handle);\t", "-\t\t\tevent.gc = gc;", "-\t\t\tif (isComplex && exposeRegion) {", "-\t\t\t\tRECT rect = new RECT ();", "+\t\t\tevent.gc = gc;\t\t\t", "+\t\t\tRECT rect = null;", "+\t\t\tif ((style & SWT.NO_MERGE_PAINTS) != 0 && OS.GetRgnBox (sysRgn, rect = new RECT ()) == OS.COMPLEXREGION) {", "+\t\t\t\tint nBytes = OS.GetRegionData (sysRgn, 0, null);", "+\t\t\t\tint [] lpRgnData = new int [nBytes / 4];", "+\t\t\t\tOS.GetRegionData (sysRgn, nBytes, lpRgnData);", "-\t\t\t\t\tOS.SetRect (rect,", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2)],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 1],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 2],", "-\t\t\t\t\t\tlpRgnData [8 + (i << 2) + 3]);", "+\t\t\t\t\tint offset = 8 + (i << 2);", "+\t\t\t\t\tOS.SetRect (rect, lpRgnData [offset], lpRgnData [offset + 1], lpRgnData [offset + 2], lpRgnData [offset + 3]);", "-\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\tif (rect == null) rect = new RECT ();", "-\t\t\t\t\tpaintGC.drawImage(image, ps.left, ps.top);", "+\t\t\t\t\tpaintGC.drawImage (image, ps.left, ps.top);", "-\t\t\t\timage.dispose();", "+\t\t\t\timage.dispose ();", "-\t\tif (rgn != 0) OS.DeleteObject (rgn);", "+\t\tif (sysRgn != 0) OS.DeleteObject (sysRgn);", "-\tif (!OS.IsWinCE) { ", "+\tif (!OS.IsWinCE && !isDisposed ()) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba17caf472fe95ef33d26d1c186e580a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "1f898d2e9733961742e6d789a21fee16deeb7844", "commitAfterChange": "3da6a13dd6d49dcf37373141989f34303810102c", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  LRESULT wmPaint (int hwnd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmPaint (int hwnd, int wParam, int lParam)", "diff": ["-", "-\t/* Get the damage */", "+\t", "+\t/* Issue a paint event */", "-\t\tresult = callWindowProc (hwnd, OS.WM_PAINT, wParam, lParam);", "-\t\tOS.InvalidateRect (hwnd, rect, false);", "-\t} else {", "-\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tOS.GetUpdateRgn (hwnd, rgn, false);", "-\t\tOS.InvalidateRgn (hwnd, rgn, false);", "+\t\tOS.InvalidateRect (hwnd, rect, false);", "-\t\tOS.DeleteObject (rgn);", "-\t}", "-\t", "-\t/* Send the paint event */", "-\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "-\tGCData data = new GCData ();", "-\tdata.ps = ps;", "-\tdata.hwnd = hwnd;", "-\tGC gc = new_GC (data);", "-\tif (gc != null) {", "-\t\tint width = ps.right - ps.left;", "-\t\tint height = ps.bottom - ps.top;", "-\t\tif (width != 0 && height != 0) {", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.gc = gc;", "-\t\t\tevent.x = ps.left;", "-\t\t\tevent.y = ps.top;", "-\t\t\tevent.width = width;", "-\t\t\tevent.height = height;", "-\t\t\tsendEvent (SWT.Paint, event);", "-\t\t\t// widget could be disposed at this point", "-\t\t\tevent.gc = null;", "+\t\tPAINTSTRUCT ps = new PAINTSTRUCT ();", "+\t\tGCData data = new GCData ();", "+\t\tdata.ps = ps;", "+\t\tdata.hwnd = hwnd;", "+\t\tGC gc = new_GC (data);", "+\t\tif (gc != null) {", "+\t\t\tint width = ps.right - ps.left;", "+\t\t\tint height = ps.bottom - ps.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = ps.left;", "+\t\t\t\tevent.y = ps.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t}", "+\t\t\tgc.dispose ();", "-\t\tgc.dispose ();", "+\t} else {", "+\t\tint rgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\tOS.GetUpdateRgn (hwnd, rgn, false);", "+\t\tresult = callWindowProc (hwnd, OS.WM_PAINT, wParam, lParam);", "+\t\tGCData data = new GCData ();", "+\t\tdata.hwnd = hwnd;", "+\t\tGC gc = new_GC (data);", "+\t\tif (gc != null) {", "+\t\t\tOS.HideCaret (hwnd);", "+\t\t\tRECT rect = new RECT();", "+\t\t\tOS.GetRgnBox (rgn, rect);", "+\t\t\tint width = rect.right - rect.left;", "+\t\t\tint height = rect.bottom - rect.top;", "+\t\t\tif (width != 0 && height != 0) {", "+\t\t\t\tint hDC = gc.handle;", "+\t\t\t\tOS.SelectClipRgn (hDC, rgn);", "+\t\t\t\tOS.SetMetaRgn (hDC);", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.gc = gc;", "+\t\t\t\tevent.x = rect.left;", "+\t\t\t\tevent.y = rect.top;", "+\t\t\t\tevent.width = width;", "+\t\t\t\tevent.height = height;", "+\t\t\t\tsendEvent (SWT.Paint, event);", "+\t\t\t\t// widget could be disposed at this point", "+\t\t\t\tevent.gc = null;", "+\t\t\t}", "+\t\t\tgc.dispose ();", "+\t\t\tOS.ShowCaret (hwnd);", "+\t\t}", "+\t\tOS.DeleteObject (rgn);"]}], "num": 5964}