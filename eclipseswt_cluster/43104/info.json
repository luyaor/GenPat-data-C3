{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76f5704cefe164f07c546aafe41b28ff", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533e747f24ab3384c0962e8411259757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "a7df3c99eed40e9713fdc9e934753b3768c04ec0", "commitAfterChange": "c4cb08f062df65ab811cc6b99f38217f78d0c94e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " void onPaint(Event event)", "signatureAfterChange": " void onPaint(Event event)", "diff": ["-", "-\t// draw close", "-\tdrawClose(gc);", "-\t// draw chevron", "-\tdrawChevron(gc);", "-\t// draw expand ", "-\tdrawExpand(gc);", "-\t\t\tint y = onBottom ? size.y-border-tabHeight+SELECTION_BORDER : border;", "-\t\t\tint width = size.x-edge-border;", "-\t\t\tint height = tabHeight-SELECTION_BORDER;", "+\t\t\tint y = onBottom ? size.y-border-tabHeight+SELECTION_BORDER-1 : border;", "+\t\t\tint width = size.x-edge-border+1;", "+\t\t\tint height = tabHeight-SELECTION_BORDER+1;", "-\t// redraw the Border", "-\tdrawBorder(gc);", "-\t", "-\t// Draw selection border across all tabs", "-\tint x1 = border;", "-\tint y1 = onBottom ? size.y - border - tabHeight : border+tabHeight-SELECTION_BORDER+1;", "-\tint width1 = size.x - 2*border;", "-\tint height1 = SELECTION_BORDER-1;", "-\tif (selectedIndex != -1) {", "-\t\tint[] shape = new int[] {x1,y1, x1+width1,y1, x1+width1,y1+height1, x1,y1+height1};", "-\t\tdrawSelectionBackground(gc, y1, shape);", "-\t} else {", "-\t\tgc.setBackground(background);", "-\t\tgc.fillRectangle(x1, y1, width1, height1);", "-\t}", "-\tif (border > 0) {", "-\t\tColor c = new Color(getDisplay(), borderRGB);", "-\t\tgc.setForeground(c);", "-\t\tint[] points = null;", "-\t\tif (onBottom) {", "-\t\t\tpoints = new int[] {border-1, size.y - border - tabHeight + SELECTION_BORDER - 1,", "-\t\t\t                    size.x-border, size.y - border - tabHeight + SELECTION_BORDER - 1,", "-\t\t\t                    size.x-border, border-1,", "-\t\t\t                    border-1, border-1,", "-\t\t\t                    border-1, size.y - border - tabHeight + SELECTION_BORDER - 1,};", "-\t\t} else {", "-\t\t\tpoints = new int[] {border-1,  border+tabHeight-SELECTION_BORDER,", "-\t\t\t                    size.x-border, border+tabHeight-SELECTION_BORDER,", "-\t\t\t                    size.x-border, size.y - border,", "-\t\t\t                    border-1, size.y - border,", "-\t\t\t                    border-1,  border+tabHeight-SELECTION_BORDER,};", "-\t\t}", "-\t\tgc.drawPolyline(points);", "-\t\tc.dispose();", "-\t}", "-\t", "+\t", "+\tdrawClose(gc);", "+\tdrawChevron(gc);", "+\tdrawExpand(gc);", "+\tdrawBorder(gc);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9806c84be3328b4404a3a13dc937fad8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 78, "signatureBeforeChange": " final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all)", "signatureAfterChange": "  void redrawWidget (int control)", "diff": ["+", "+void redrawWidget (int control) {", "+\tif (!OS.IsControlVisible (control)) return;", "+\tRect rect = new Rect ();", "+\tOS.GetControlBounds (control, rect);", "+\tint window = OS.GetControlOwner (control);", "+\tOS.InvalWindowRect (window, rect);", "-}", "-final void redrawHandle (int x, int y, int width, int height, int widgetHandle, boolean all) {", "-    /* AW", "-\tint display = OS.XtDisplay (widgetHandle);", "-\tif (display == 0) return;", "-\tint window = OS.XtWindow (widgetHandle);", "-\tif (window == 0) return;", "-\tint [] argList = {OS.XmNborderWidth, 0, OS.XmNborderColor, 0};", "-\tOS.XtGetValues (widgetHandle, argList, argList.length / 2);", "-\tif (argList [1] != 0) {", "-        */", "-\t\t/* Force the border to repaint by setting the color */", "-\t\t/*", "-\t\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "-\t}", "-\tOS.XClearArea (display, window, x, y, width, height, true);", "-\t*/", "-\t", "-\tif (false) {", "-\t\tint rgn= OS.NewRgn();", "-\t\tOS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t\tOS.HIViewSetNeedsDisplayInRegion(widgetHandle, rgn, true);", "-\t\tOS.DisposeRgn(rgn);", "-\t} else {", "-\t\tMacRect br= new MacRect();", "-\t\tOS.GetControlBounds(widgetHandle, br.getData());", "-\t    if (!br.isEmpty()) {", "-\t        x+= br.getX();", "-\t        y+= br.getY();", "-\t        if (width == 0)", "-\t        \twidth= br.getWidth();", "-\t        else", "-\t\t\t\twidth+= 1; // AW strange workaround for Caret", "-\t        if (height == 0)", "-\t\t\t\theight= br.getHeight();", "-\t                ", "-\t        int rgn= OS.NewRgn();", "-\t        OS.RectRgn(rgn, new MacRect(x, y, width, height).getData());", "-\t                ", "-\t        int region= OS.NewRgn();", "-\t        if (MacUtil.getVisibleRegion(widgetHandle, region, all) == OS.kNoErr) {", "-\t        ", "-\t            OS.SectRgn(region, rgn, region);", "-\t        ", "-\t            OS.InvalWindowRgn(OS.GetControlOwner(widgetHandle), region);", "-\t        }", "-\t        ", "-\t        OS.DisposeRgn(rgn);", "-\t        OS.DisposeRgn(region);", "-\t    }", "-\t}", "-}"]}], "num": 43104}