{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eed920884384bbfa709b17bf0418a2a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9eed81959be1d26a0dc067c339392f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 42, "signatureBeforeChange": " int processMouseHover (MacMouseEvent mme)", "signatureAfterChange": "  int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent)", "diff": ["+", "+int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent) {", "+\tDisplay display = getDisplay ();", "+    switch (inRequest) {", "+\t\tcase OS.kHMSupplyContent: {", "+\t\t\tint [] contentProvided = new int [] {OS.kHMContentNotProvidedDontPropagate};", "+\t\t\tif (toolTipText != null && toolTipText.length () != 0) {", "+\t\t\t\tchar [] buffer = new char [toolTipText.length ()];", "+\t\t\t\ttoolTipText.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\tint i=0, j=0;", "+\t\t\t\twhile (i < buffer.length) {", "+\t\t\t\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\t\t\t\tif (i == buffer.length) {continue;}", "+\t\t\t\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\t\t\t\tj--;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "+\t\t    \tdisplay.helpString = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\t\t\t\tHMHelpContentRec helpContent = new HMHelpContentRec ();", "+\t\t\t\tOS.memcpy (helpContent, ioHelpContent, HMHelpContentRec.sizeof);", "+\t\t        helpContent.version = OS.kMacHelpVersion;", "+\t\t        ", "+\t\t        /*", "+\t\t        * Feature in the Macintosh.  Despite the fact that the Mac", "+\t\t        * provides 23 different types of alignment for the help text,", "+\t\t        * it does not allow the text to be positioned at the current", "+\t\t        * mouse position.  The fix is to center the text in a rectangle", "+\t\t\t\t* that surrounds the original position of the mouse.  As the", "+\t\t\t\t* mouse is moved, this rectangle is grown to include the new", "+\t\t\t\t* location of the mouse.  The help text is then centered by", "+\t\t\t\t* the  Mac in the new rectangle that was carefully constructed", "+\t\t\t\t* such that the help text will stay in the same position.", "+\t\t        */", "+\t\t        int cursorHeight = 16;", "+\t\t        helpContent.tagSide = (short) OS.kHMAbsoluteCenterAligned;", "+\t\t\t\tint x = (short) (inGlobalMouse & 0xFFFF);", "+\t\t\t\tint y = (short) (inGlobalMouse >> 16);", "+\t\t\t\tif (display.helpControl != this) {", "+\t\t\t\t\tdisplay.lastHelpX = x + cursorHeight / 2;", "+\t\t\t\t\tdisplay.lastHelpY = y + cursorHeight + cursorHeight / 2;\t\t\t", "+\t\t\t\t}", "+\t\t\t\tint jitter = 4;", "+\t\t\t\tint deltaX = Math.abs (display.lastHelpX - x) + jitter;", "+\t\t\t\tint deltaY = Math.abs (display.lastHelpY - y) + jitter;", "+\t\t\t\tx = display.lastHelpX - deltaX;", "+\t\t\t\ty = display.lastHelpY - deltaY;", "+\t\t\t\tint width = deltaX * 2;", "+\t\t\t\tint height = deltaY * 2;", "+\t\t\t\tdisplay.helpControl = this;", "+\t\t        helpContent.absHotRect_left = (short) x;", "+\t\t     \thelpContent.absHotRect_top = (short) y;", "+\t\t        helpContent.absHotRect_right = (short) (x + width);", "+\t\t        helpContent.absHotRect_bottom = (short) (y + height);", "+\t\t        ", "+\t\t        helpContent.content0_contentType = OS.kHMCFStringContent;", "+\t\t        helpContent.content0_tagCFString = display.helpString;", "+\t\t        helpContent.content1_contentType = OS.kHMCFStringContent;", "+\t\t        helpContent.content1_tagCFString = display.helpString;", "+\t\t\t\tOS.memcpy (ioHelpContent, helpContent, HMHelpContentRec.sizeof);", "+\t\t\t\tcontentProvided [0] = OS.kHMContentProvided;", "+\t\t\t}", "+\t\t\tOS.memcpy (outContentProvided, contentProvided, 4);", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.kHMDisposeContent: {", "+\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "+\t\t\tdisplay.helpString = 0;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn OS.noErr;", "+}", "-}", "-int processMouseHover (MacMouseEvent mme) {", "-\tDisplay display = getDisplay ();", "-\tEvent event = new Event ();", "-\tPoint local = toControl (display.getCursorLocation ());", "-\tevent.x = local.x; event.y = local.y;", "-\tpostEvent (SWT.MouseHover, event);", "-\tdisplay.showToolTip (handle, toolTipText);", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8571214b253c26d8c38d7cc193d29ff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b76d431a779fdd2091d3d4adbf75cfc8e9615d94", "commitAfterChange": "56ccc8bcfcb43580a57bd9a371e724bac5e06479", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent)", "signatureAfterChange": "  int helpProc (int inControl, int inGlobalMouse, int inRequest, int outContentProvided, int ioHelpContent)", "diff": ["-    switch (inRequest) {", "-\t\tcase OS.kHMSupplyContent: {", "-\t\t\tshort [] contentProvided = { OS.kHMContentNotProvided };", "-\t\t\tif (toolTipText != null && toolTipText.length () != 0) {", "-\t\t\t\tchar [] buffer = new char [toolTipText.length ()];", "-\t\t\t\ttoolTipText.getChars (0, buffer.length, buffer, 0);", "-\t\t\t\tint length = fixMnemonic (buffer);", "-\t\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "-\t\t\t\tdisplay.helpString = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, length);", "-\t\t\t\tHMHelpContentRec helpContent = new HMHelpContentRec ();", "-\t\t\t\tOS.memmove (helpContent, ioHelpContent, HMHelpContentRec.sizeof);", "-\t\t\t\thelpContent.version = OS.kMacHelpVersion;", "-\t\t\t\thelpContent.tagSide = (short) OS.kHMDefaultSide;", "-\t\t\t\tdisplay.helpWidget = null;", "-\t\t\t\thelpContent.absHotRect_left = (short) 0;", "-\t\t\t\thelpContent.absHotRect_top = (short) 0;", "-\t\t\t\thelpContent.absHotRect_right = (short) 0;", "-\t\t\t\thelpContent.absHotRect_bottom = (short) 0;", "-\t\t\t\thelpContent.content0_contentType = OS.kHMCFStringContent;", "-\t\t\t\thelpContent.content0_tagCFString = display.helpString;", "-\t\t\t\thelpContent.content1_contentType = OS.kHMCFStringContent;", "-\t\t\t\thelpContent.content1_tagCFString = display.helpString;", "-\t\t\t\tOS.memmove (ioHelpContent, helpContent, HMHelpContentRec.sizeof);", "-\t\t\t\tcontentProvided [0] = OS.kHMContentProvided;", "+\tif (parent.toolTipText == null) {", "+\t    switch (inRequest) {", "+\t\t\tcase OS.kHMSupplyContent: {", "+\t\t\t\tshort [] contentProvided = { OS.kHMContentNotProvided };", "+\t\t\t\tif (toolTipText != null && toolTipText.length () != 0) {", "+\t\t\t\t\tchar [] buffer = new char [toolTipText.length ()];", "+\t\t\t\t\ttoolTipText.getChars (0, buffer.length, buffer, 0);", "+\t\t\t\t\tint length = fixMnemonic (buffer);", "+\t\t\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "+\t\t\t\t\tdisplay.helpString = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, length);", "+\t\t\t\t\tHMHelpContentRec helpContent = new HMHelpContentRec ();", "+\t\t\t\t\tOS.memmove (helpContent, ioHelpContent, HMHelpContentRec.sizeof);", "+\t\t\t\t\thelpContent.version = OS.kMacHelpVersion;", "+\t\t\t\t\thelpContent.tagSide = (short) OS.kHMDefaultSide;", "+\t\t\t\t\tdisplay.helpWidget = null;", "+\t\t\t\t\thelpContent.absHotRect_left = (short) 0;", "+\t\t\t\t\thelpContent.absHotRect_top = (short) 0;", "+\t\t\t\t\thelpContent.absHotRect_right = (short) 0;", "+\t\t\t\t\thelpContent.absHotRect_bottom = (short) 0;", "+\t\t\t\t\thelpContent.content0_contentType = OS.kHMCFStringContent;", "+\t\t\t\t\thelpContent.content0_tagCFString = display.helpString;", "+\t\t\t\t\thelpContent.content1_contentType = OS.kHMCFStringContent;", "+\t\t\t\t\thelpContent.content1_tagCFString = display.helpString;", "+\t\t\t\t\tOS.memmove (ioHelpContent, helpContent, HMHelpContentRec.sizeof);", "+\t\t\t\t\tcontentProvided [0] = OS.kHMContentProvided;", "+\t\t\t\t}", "+\t\t\t\tOS.memmove (outContentProvided, contentProvided, 2);", "+\t\t\t\tbreak;", "-\t\t\tOS.memmove (outContentProvided, contentProvided, 2);", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase OS.kHMDisposeContent: {", "-\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "-\t\t\tdisplay.helpWidget = null;", "-\t\t\tdisplay.helpString = 0;", "-\t\t\tbreak;", "-\t\t}", "-    }", "-\treturn OS.noErr;", "+\t\t\tcase OS.kHMDisposeContent: {", "+\t\t\t\tif (display.helpString != 0) OS.CFRelease (display.helpString);", "+\t\t\t\tdisplay.helpWidget = null;", "+\t\t\t\tdisplay.helpString = 0;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t    }", "+\t\treturn OS.noErr;", "+\t}", "+\treturn parent.helpProc (inControl, inGlobalMouse, inRequest, outContentProvided, ioHelpContent);"]}], "num": 34786}