{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "943e6bf54b27ab62aa13667d398f6072", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b602518782c521d760e71de958b91dc4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  void computeRuns()", "signatureAfterChange": "  void computeRuns()", "diff": ["-\ttextContainer.setLineFragmentPadding(0);", "-\t", "+\ttextContainer.setLineFragmentPadding(0);\t", "+\t", "+\tint numberOfLines, index, numberOfGlyphs = layoutManager.numberOfGlyphs();", "+\tint rangePtr = OS.malloc(NSRange.sizeof);", "+\tNSRange lineRange = new NSRange();", "+\tfor (numberOfLines = 0, index = 0; index < numberOfGlyphs; numberOfLines++){", "+\t    layoutManager.lineFragmentUsedRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout_(index, rangePtr, true);", "+\t    OS.memmove(lineRange, rangePtr, NSRange.sizeof);", "+\t    index = lineRange.location + lineRange.length;", "+\t}", "+\tint[] offsets = new int[numberOfLines + 1];", "+\tNSRect[] bounds = new NSRect[numberOfLines];", "+\tfor (numberOfLines = 0, index = 0; index < numberOfGlyphs; numberOfLines++){", "+\t\tbounds[numberOfLines] = layoutManager.lineFragmentUsedRectForGlyphAtIndex_effectiveRange_withoutAdditionalLayout_(index, rangePtr, true);", "+\t    OS.memmove(lineRange, rangePtr, NSRange.sizeof);", "+\t    offsets[numberOfLines] = lineRange.location;", "+\t    index = lineRange.location + lineRange.length;", "+\t}\t", "+\tOS.free(rangePtr);", "+\toffsets[numberOfLines] = textStorage.length();", "+\tthis.lineOffsets = offsets;", "+\tthis.lineBounds = bounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce82c3f440fb967d78ca2459f3fd7775", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "c17b6bfe3dc2f2dab791d9333ee2f08e9678e069", "commitAfterChange": "edcb9a708b2db146feb80ecb85928d59ad2a09b4", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setIncrement (int value)", "signatureAfterChange": " public void setIncrement (int value)", "diff": ["-\tincrement = value;", "+\tint hHeap = OS.GetProcessHeap ();", "+\tint count = OS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, 0, (UDACCEL)null);", "+\tint udaccels = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, UDACCEL.sizeof * count);", "+\tOS.SendMessage (hwndUpDown, OS.UDM_GETACCEL, count, udaccels);", "+\tint first = -1;", "+\tUDACCEL udaccel = new UDACCEL ();", "+\tfor (int i = 0; i < count; i++) {", "+\t\tint offset = udaccels + (i * UDACCEL.sizeof);", "+\t\tOS.MoveMemory (udaccel, offset, UDACCEL.sizeof);", "+\t\tif (first == -1) first = udaccel.nInc;", "+\t\tudaccel.nInc  =  udaccel.nInc * value / first;", "+\t\tOS.MoveMemory (offset, udaccel, UDACCEL.sizeof);", "+\t}", "+\tOS.SendMessage (hwndUpDown, OS.UDM_SETACCEL, count, udaccels);", "+\tOS.HeapFree (hHeap, 0, udaccels);"]}], "num": 23487}