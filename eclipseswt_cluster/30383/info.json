{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "215414594c6af779f09adc22ad0635bb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647655f2322e318684dba668e8242585", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "75d3bca9b12da0e734f166ed9776e3c463fe710a", "commitAfterChange": "192960609106955d48292e46d3afc3671c59810e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " void clearAll (boolean recursive, boolean doVisualUpdate)", "signatureAfterChange": " void clearAll (boolean recursive, boolean doVisualUpdate)", "diff": ["-\tif (doVisualUpdate && parent.columns.length == 0) {", "+\tif (doVisualUpdate && availableIndex != -1 && expanded && parent.columns.length == 0) {", "-\t\t\t * i starts at 1 below because item 0 in availableDescendent", "+\t\t\t * i starts at 1 here because item 0 in availableDescendents", "-\t\t\t\tRectangle bounds = availableDescendents [i].getBounds ();", "+\t\t\t\tRectangle bounds = availableDescendents [i].getBounds (false);", "-\t\t\t\tRectangle bounds = items [i].getBounds ();", "+\t\t\t\tRectangle bounds = items [i].getBounds (false);", "-\t\tif (recursive) {", "-\t\t\titems [i].clearAll (true, false);", "-\t\t} else {", "-\t\t\titems [i].clear ();", "-\t\t}", "+\t\titems [i].clear ();", "+\t\tif (recursive) items [i].clearAll (true, false);", "-\tif (!doVisualUpdate) return;", "+\tif (!doVisualUpdate || availableIndex == -1 || !expanded) return;\t/* no visual update needed */", "-\t\tint newWidth = 0;", "+\t\tint newRightX = 0;", "-\t\t\t * i starts at 1 below because item 0 in availableDescendent", "+\t\t\t * i starts at 1 here because item 0 in availableDescendents", "-\t\t\t\tRectangle bounds = availableDescendents [i].getBounds ();", "-\t\t\t\tnewWidth = Math.max (newWidth, bounds.x + bounds.width);", "+\t\t\t\tRectangle bounds = availableDescendents [i].getBounds (false);", "+\t\t\t\tnewRightX = Math.max (newRightX, bounds.x + bounds.width);", "-\t\t\tRectangle bounds = items [0].getBounds ();", "-\t\t\tnewWidth = bounds.x + bounds.width;", "+\t\t\tRectangle bounds = items [0].getBounds (false);", "+\t\t\tnewRightX = bounds.x + bounds.width;", "-\t\tparent.updateHorizontalBar (newWidth, newWidth - oldRightX);", "+\t\tparent.updateHorizontalBar (newRightX, newRightX - oldRightX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ff2821456645732e9c1286a3fcfa49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "75d3bca9b12da0e734f166ed9776e3c463fe710a", "commitAfterChange": "192960609106955d48292e46d3afc3671c59810e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void clear (int index, boolean recursive)", "signatureAfterChange": " void clear (int index, boolean recursive)", "diff": ["-\tif (parent.columns.length == 0) {", "+\tif (item.availableIndex != -1 && parent.columns.length == 0) {", "-\t\t\t\tRectangle bounds = availableDescendents [i].getBounds ();", "+\t\t\t\tRectangle bounds = availableDescendents [i].getBounds (false);", "-\t\t\tRectangle bounds = item.getBounds ();", "+\t\t\tRectangle bounds = item.getBounds (false);", "+\tif (item.availableIndex == -1) return;\t/* no visual update needed */", "-\t\tint newWidth = 0;", "+\t\tint newRightX = 0;", "-\t\t\t\tRectangle bounds = availableDescendents [i].getBounds ();", "-\t\t\t\tnewWidth = Math.max (newWidth, bounds.x + bounds.width);", "+\t\t\t\tRectangle bounds = availableDescendents [i].getBounds (false);", "+\t\t\t\tnewRightX = Math.max (newRightX, bounds.x + bounds.width);", "-\t\t\tRectangle bounds = item.getBounds ();", "-\t\t\tnewWidth = bounds.x + bounds.width;", "+\t\t\tRectangle bounds = item.getBounds (false);", "+\t\t\tnewRightX = bounds.x + bounds.width;", "-\t\tparent.updateHorizontalBar (newWidth, newWidth - oldRightX);", "+\t\tparent.updateHorizontalBar (newRightX, newRightX - oldRightX);"]}], "num": 30383}