{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b07db8e0784bb5dfdd73d5f15ec36226", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92beec507d8e11bb2372667df272c54b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "41448e38b1dc8fdc99a6f71e40f70a4e188a608a", "commitAfterChange": "037c23e775d3cb564de747b11c31195fa628bb3f", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 82, "signatureBeforeChange": "  boolean runEnterExit ()", "signatureAfterChange": "  boolean runEnterExit ()", "diff": ["-\t//OPTIMIZE - get rid of garbage, use hittest from mouse proc", "-\tControl control = null;", "-\tCGPoint inPoint = null;", "-\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "-\tOS.GetGlobalMouse (where);", "-\tint [] theWindow = new int [1];", "-\tif (OS.FindWindow (where, theWindow) == OS.inContent) {", "-\t\tif (theWindow [0] != 0) {", "-\t\t\tRect windowRect = new Rect ();", "-\t\t\tOS.GetWindowBounds (theWindow [0], (short) OS.kWindowContentRgn, windowRect);", "-\t\t\tinPoint = new CGPoint ();", "-\t\t\tinPoint.x = where.h - windowRect.left;", "-\t\t\tinPoint.y = where.v - windowRect.top;", "-\t\t\tint [] theRoot = new int [1];", "-\t\t\tOS.GetRootControl (theWindow [0], theRoot);", "-\t\t\tint [] theControl = new int [1];", "-\t\t\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "-\t\t\tWidget widget = null;", "-\t\t\tif (theControl [0] != 0) {", "-\t\t\t\tdo {", "-\t\t\t\t\twidget = WidgetTable.get (theControl [0]);", "-\t\t\t\t\tif (widget != null && widget instanceof Control) {", "-\t\t\t\t\t\tif (((Control) widget).getEnabled ()) break;", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "-\t\t\t\t} while (theControl [0] != 0);", "-\t\t\t}", "-\t\t\tif (widget == null) widget = WidgetTable.get (theRoot [0]);", "-\t\t\tif (widget != null && widget instanceof Control) {", "-\t\t\t\tcontrol = (Control) widget;", "-\t\t\t}", "-\t\t}", "-\t}", "+\t//OPTIMIZE - use OS calls, no garbage, widget already hit tested in mouse move", "+\tControl control = getCursorControl (false);", "-\t\tint chord = 0, modifiers = 0;", "-\t\t\tchord = OS.GetCurrentEventButtonState ();", "-\t\t\tmodifiers = OS.GetCurrentEventKeyModifiers ();", "-\t\t\tint controlHandle = currentControl.handle;", "-\t\t\tif (inPoint == null) {", "-\t\t\t\tinPoint = new CGPoint ();", "-\t\t\t\tRect windowRect = new Rect ();", "-\t\t\t\tint window = OS.GetControlOwner (controlHandle);", "-\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, windowRect);", "-\t\t\t\tinPoint.x = where.h - windowRect.left;", "-\t\t\t\tinPoint.y = where.v - windowRect.top;", "-\t\t\t}", "-\t\t\tRect controlRect = new Rect ();", "-\t\t\tOS.GetControlBounds (controlHandle, controlRect);", "-\t\t\tint x = (int) inPoint.x - controlRect.left;", "-\t\t\tint y = (int) inPoint.y - controlRect.top;", "-\t\t\tcurrentControl.sendMouseEvent (SWT.MouseExit, (short)0, chord, (short)x, (short)y, modifiers);", "+\t\t\tPoint point = getCursorLocation ();", "+\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\t\tPoint pt = currentControl.toControl (point);", "+\t\t\tcurrentControl.sendMouseEvent (SWT.MouseExit, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "-\t\t\tint controlHandle = currentControl.handle;", "-\t\t\tif (!eventSent) {", "-\t\t\t\teventSent = true;", "-\t\t\t\tchord = OS.GetCurrentEventButtonState ();", "-\t\t\t\tmodifiers = OS.GetCurrentEventKeyModifiers ();", "-\t\t\t\tif (inPoint == null) {", "-\t\t\t\t\tinPoint = new CGPoint ();", "-\t\t\t\t\tRect windowRect = new Rect ();", "-\t\t\t\t\tint window = OS.GetControlOwner (controlHandle);", "-\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, windowRect);", "-\t\t\t\t\tinPoint.x = where.h - windowRect.left;", "-\t\t\t\t\tinPoint.y = where.v - windowRect.top;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tRect controlRect = new Rect ();", "-\t\t\tOS.GetControlBounds (controlHandle, controlRect);", "-\t\t\tint x = (int) inPoint.x - controlRect.left;", "-\t\t\tint y = (int) inPoint.y - controlRect.top;", "-\t\t\tcurrentControl.sendMouseEvent (SWT.MouseEnter, (short)0, chord, (short)x, (short)y, modifiers);", "-\t\t\torg.eclipse.swt.internal.carbon.Point localPoint = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\tOS.SetPt (localPoint, (short) inPoint.x, (short) inPoint.y);", "-\t\t\tboolean [] cursorWasSet = new boolean [1];", "-\t\t\tOS.HandleControlSetCursor (currentControl.handle, localPoint, (short) modifiers, cursorWasSet);", "-\t\t\tif (!cursorWasSet [0]) OS.SetThemeCursor (OS.kThemeArrowCursor);", "+\t\t\teventSent = true;", "+\t\t\tPoint point = getCursorLocation ();", "+\t\t\tint chord = OS.GetCurrentEventButtonState ();", "+\t\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\t\tPoint controlPt = currentControl.toControl (point);", "+\t\t\tcurrentControl.sendMouseEvent (SWT.MouseEnter, (short)0, chord, (short)controlPt.x, (short)controlPt.y, modifiers);", "+\t}", "+\tif (control != null) {", "+\t\tPoint point = getCursorLocation ();", "+\t\tint modifiers = OS.GetCurrentEventKeyModifiers ();", "+\t\tPoint windowPt = control.getShell ().toControl (point);", "+\t\torg.eclipse.swt.internal.carbon.Point localPoint = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tOS.SetPt (localPoint, (short) windowPt.x, (short) windowPt.y);", "+\t\tboolean [] cursorWasSet = new boolean [1];", "+\t\tOS.HandleControlSetCursor (control.handle, localPoint, (short) modifiers, cursorWasSet);", "+\t\tif (!cursorWasSet [0]) OS.SetThemeCursor (OS.kThemeArrowCursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5cf656924ee406ba1569fed25335bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2eda618caa8a3739d0982addf2afc5298cbf130e", "commitAfterChange": "8e85d1ede4a8fceb6018dcc84f174945605fd2a7", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  boolean runEnterExit ()", "signatureAfterChange": "  boolean runEnterExit ()", "diff": ["-\t//OPTIMIZE - use OS calls, no garbage, widget already hit tested in mouse move", "-\tPoint point = null;", "-\tint chord = 0, modifiers = 0;", "-\tControl control = getCursorControl ();", "+\t//OPTIMIZE - get rid of garbage, use hittest from mouse proc", "+\tControl control = null;", "+\tCGPoint inPoint = null;", "+\torg.eclipse.swt.internal.carbon.Point where = new org.eclipse.swt.internal.carbon.Point ();", "+\tOS.GetGlobalMouse (where);", "+\tint [] theWindow = new int [1];", "+\tif (OS.FindWindow (where, theWindow) == OS.inContent) {", "+\t\tif (theWindow [0] != 0) {", "+\t\t\tRect windowRect = new Rect ();", "+\t\t\tOS.GetWindowBounds (theWindow [0], (short) OS.kWindowContentRgn, windowRect);", "+\t\t\tinPoint = new CGPoint ();", "+\t\t\tinPoint.x = where.h - windowRect.left;", "+\t\t\tinPoint.y = where.v - windowRect.top;", "+\t\t\tint [] theRoot = new int [1];", "+\t\t\tOS.GetRootControl (theWindow [0], theRoot);", "+\t\t\tint [] theControl = new int [1];", "+\t\t\tOS.HIViewGetSubviewHit (theRoot [0], inPoint, true, theControl);", "+\t\t\tWidget widget = null;", "+\t\t\tif (theControl [0] != 0) {", "+\t\t\t\tdo {", "+\t\t\t\t\twidget = WidgetTable.get (theControl [0]);", "+\t\t\t\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t\t\t\tif (((Control) widget).getEnabled ()) break;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.GetSuperControl (theControl [0], theControl);", "+\t\t\t\t} while (theControl [0] != 0);", "+\t\t\t}", "+\t\t\tif (widget == null) widget = WidgetTable.get (theRoot [0]);", "+\t\t\tif (widget != null && widget instanceof Control) {", "+\t\t\t\tcontrol = (Control) widget;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tboolean eventSent = false;", "+\t\tint x = 0, y = 0, chord = 0, modifiers = 0;", "-\t\t\tpoint = getCursorLocation ();", "+\t\t\teventSent = true;", "-\t\t\tPoint pt = currentControl.toControl (point);", "-\t\t\tcurrentControl.sendMouseEvent (SWT.MouseExit, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "+\t\t\tint controlHandle = currentControl.handle;", "+\t\t\tif (inPoint == null) {", "+\t\t\t\tinPoint = new CGPoint ();", "+\t\t\t\tRect windowRect = new Rect ();", "+\t\t\t\tint window = OS.GetControlOwner (controlHandle);", "+\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, windowRect);", "+\t\t\t\tinPoint.x = where.h - windowRect.left;", "+\t\t\t\tinPoint.y = where.v - windowRect.top;", "+\t\t\t}", "+\t\t\tRect controlRect = new Rect ();", "+\t\t\tOS.GetControlBounds (controlHandle, controlRect);", "+\t\t\tx = (int) inPoint.x - controlRect.left;", "+\t\t\ty = (int) inPoint.y - controlRect.top;", "+\t\t\tcurrentControl.sendMouseEvent (SWT.MouseExit, (short)0, chord, (short)x, (short)y, modifiers);", "-\t\t\tif (point == null) {", "-\t\t\t\tpoint = getCursorLocation ();", "+\t\t\tif (!eventSent) {", "+\t\t\t\teventSent = true;", "+\t\t\t\tint controlHandle = currentControl.handle;", "+\t\t\t\tif (inPoint == null) {", "+\t\t\t\t\tinPoint = new CGPoint ();", "+\t\t\t\t\tRect windowRect = new Rect ();", "+\t\t\t\t\tint window = OS.GetControlOwner (controlHandle);", "+\t\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, windowRect);", "+\t\t\t\t\tinPoint.x = where.h - windowRect.left;", "+\t\t\t\t\tinPoint.y = where.v - windowRect.top;", "+\t\t\t\t}", "+\t\t\t\tRect controlRect = new Rect ();", "+\t\t\t\tOS.GetControlBounds (controlHandle, controlRect);", "+\t\t\t\tx = (int) inPoint.x - controlRect.left;", "+\t\t\t\ty = (int) inPoint.y - controlRect.top;", "+", "-\t\t\tPoint pt = currentControl.toControl (point);", "-\t\t\tcurrentControl.sendMouseEvent (SWT.MouseEnter, (short)0, chord, (short)pt.x, (short)pt.y, modifiers);", "+\t\t\tcurrentControl.sendMouseEvent (SWT.MouseEnter, (short)0, chord, (short)x, (short)y, modifiers);", "+\t\t\torg.eclipse.swt.internal.carbon.Point localPoint = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\tOS.SetPt (localPoint, (short) inPoint.x, (short) inPoint.y);", "+\t\t\tboolean [] cursorWasSet = new boolean [1];", "+\t\t\tOS.HandleControlSetCursor (currentControl.handle, localPoint, (short) modifiers, cursorWasSet);", "+\t\t\tif (!cursorWasSet [0]) OS.SetThemeCursor (OS.kThemeArrowCursor);", "-\treturn point != null;", "+\treturn eventSent;"]}], "num": 60137}