{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fd99c868798a7f748c3f9a7d25ee181", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64c3d48b5c341441c8ac8894e90b813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "53eaef42c85a19c6c024eb953b35f15c33827e05", "commitAfterChange": "e8c16f7f9f6a3f2c095dfd48e874b4e7a9e7e851", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 105, "signatureBeforeChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "signatureAfterChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "diff": ["-\t\t\t// use the greater of the client area width and the content width\r", "-\t\t\t// fixes 1G8IYRD\r", "-\t\t\tselectionBackgroundWidth = Math.max(getClientArea().width, contentWidth.getWidth());\r", "+\t\t\t// use the greater of the client area width and the content \r", "+\t\t\t// width. fixes 1G8IYRD\r", "+\t\t\tselectionBackgroundWidth = Math.max(getClientArea().width, lineCache.getWidth());\r", "+\t\tboolean isWrappedLine = false;\r", "+\r", "+\t\tif (wordWrap) {\r", "+\t\t\tint lineEnd = lineOffset + lineLength;\r", "+\t\t\tint lineIndex = content.getLineAtOffset(lineEnd);\r", "+\r", "+\t\t\t// is the start offset of the next line the same as the end \r", "+\t\t\t// offset of this line?\t\t\t\r", "+\t\t\tif (lineIndex < content.getLineCount() - 1 &&\r", "+\t\t\t\tcontent.getOffsetAtLine(lineIndex + 1) == lineEnd) {\r", "+\t\t\t\tisWrappedLine = true;\r", "+\t\t\t}\r", "+\t\t}\r", "-\t\tif (selectionEnd > lineLength) {\r", "+\t\tif (selectionEnd > lineLength && isWrappedLine == false) {\r", "-\t\t\t// if the selection extends past this line, render an additional whitespace\r", "-\t\t\t// background at the end of the line to represent the selected line break\r", "+\t\t\t// if the selection extends past this line, render an additional \r", "+\t\t\t// whitespace background at the end of the line to represent the \r", "+\t\t\t// selected line break\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a01ccd1f65d52cc45a283d4bd3686b3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7c8ea008df163fadfac69ebb2c5343e230ee8244", "commitAfterChange": "e0d05fe98042252e11329d0c8fa926456dc25b7f", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  boolean forceFocus (int focusHandle)", "signatureAfterChange": "  boolean forceFocus (int focusHandle)", "diff": ["-\treturn OS.gtk_widget_is_focus (focusHandle);", "+\tShell shell = getShell ();", "+\tint /*long*/ shellHandle = shell.shellHandle;", "+\tint /*long*/ handle = OS.gtk_window_get_focus (shellHandle);", "+\twhile (handle != 0) {", "+\t\tif (handle == focusHandle) return true;", "+\t\tif (display.getWidget (handle) != null) return false;", "+\t\thandle = OS.gtk_widget_get_parent (handle);", "+\t}", "+\treturn false;"]}], "num": 26712}