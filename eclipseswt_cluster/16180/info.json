{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06e0eb0afbcbecfa8450290e6a5a5838", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b1d4cbd012cfeaff62ac3dc7d7706e9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "d23c8a952cfe6b71a80626232712d44600fba4d5", "commitAfterChange": "e2b41c856549753142bad97cd51db6142738c302", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 245, "signatureBeforeChange": " void scrollHorizontal(int pixels)", "signatureAfterChange": " void scroll(int hscroll, int vscroll)", "diff": ["- */", "-void scrollHorizontal(int pixels) {", "-\tif (pixels == 0) {", "-\t\treturn;", "-\t}", "-\tRectangle clientArea = getClientArea();", "-\tif (pixels > 0) {", "-\t\tint sourceX = leftMargin + pixels;", "-\t\tint scrollWidth = clientArea.width - sourceX - rightMargin;", "-\t\tint scrollHeight = clientArea.height - topMargin - bottomMargin;", "-\t\tscroll(", "-\t\t\tleftMargin, topMargin, \t\t\t\t\t\t// destination x, y", "-\t\t\tsourceX, topMargin,\t\t\t\t\t\t\t// source x, y", "-\t\t\tscrollWidth, scrollHeight, true);", "-\t\tif (sourceX > scrollWidth) {", "-\t\t\t// redraw from end of scrolled area to beginning of scroll ", "-\t\t\t// invalidated area", "-\t\t\tsuper.redraw(", "-\t\t\t\tleftMargin + scrollWidth, topMargin, ", "-\t\t\t\tpixels - scrollWidth, scrollHeight, true);", "-\t\t}", "-\t} else {", "-\t\tint destinationX = leftMargin - pixels;", "-\t\tint scrollWidth = clientArea.width - destinationX - rightMargin;", "-\t\tint scrollHeight = clientArea.height - topMargin - bottomMargin;", "-\t\tscroll(", "-\t\t\tdestinationX, topMargin,\t\t\t\t\t// destination x, y", "-\t\t\tleftMargin, topMargin,\t\t\t\t\t\t// source x, y", "-\t\t\tscrollWidth, scrollHeight, true);", "-\t\tif (destinationX > scrollWidth) {", "-\t\t\t// redraw from end of scroll invalidated area to scroll ", "-\t\t\t// destination", "-\t\t\tsuper.redraw(", "-\t\t\t\tleftMargin + scrollWidth, topMargin, ", "-\t\t\t\t-pixels - scrollWidth, scrollHeight, true);\t", "-\t\t}", "-\t}", "-\thorizontalScrollOffset += pixels;", "-\tint oldColumnX = columnX - pixels;", "-\tsetCaretLocation();", "-\t// restore the original horizontal caret index", "-\tcolumnX = oldColumnX;", "-}", "+ */", "+void scroll(int hscroll, int vscroll) {\t", "+\tRectangle clientArea = getClientArea();", "+\tif (hscroll > 0 || vscroll > 0) {", "+\t\tint sourceX = leftMargin + hscroll;", "+\t\tint sourceY = topMargin + vscroll;", "+\t\tint scrollWidth = clientArea.width - sourceX - rightMargin;", "+\t\tint scrollHeight = clientArea.height - sourceY - bottomMargin;", "+\t\tscroll(", "+\t\t\tleftMargin, topMargin, \t\t\t\t\t\t// destination x, y", "+\t\t\tsourceX, sourceY,\t\t\t\t\t\t\t// source x, y", "+\t\t\tscrollWidth, scrollHeight, true);", "+\t\t", "+\t\t// redraw from end of scrolled area to beginning of scroll ", "+\t\t// invalidated area", "+\t\tif (sourceX > scrollWidth) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin + scrollWidth, topMargin, ", "+\t\t\t\thscroll - scrollWidth, scrollHeight, true);", "+\t\t}", "+\t\tif (sourceY > scrollHeight) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin, topMargin + scrollHeight, ", "+\t\t\t\tscrollWidth, vscroll - scrollHeight, true);", "+\t\t}", "+\t} else {", "+\t\tint destinationX = leftMargin - hscroll;", "+\t\tint destinationY = topMargin - vscroll;", "+\t\tint scrollWidth = clientArea.width - destinationX - rightMargin;", "+\t\tint scrollHeight = clientArea.height - destinationY - bottomMargin;", "+\t\tscroll(", "+\t\t\tdestinationX, destinationY,\t\t\t\t\t// destination x, y", "+\t\t\tleftMargin, topMargin,\t\t\t\t\t\t// source x, y", "+\t\t\tscrollWidth, scrollHeight, true);", "+\t\t", "+\t\t// redraw from end of scroll invalidated area to scroll ", "+\t\t// destination", "+\t\tif (destinationX > scrollWidth) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin + scrollWidth, topMargin, ", "+\t\t\t\t-hscroll - scrollWidth, scrollHeight, true);\t", "+\t\t}", "+\t\tif (destinationY > scrollHeight) {", "+\t\t\t// redraw from end of scroll invalidated area to scroll ", "+\t\t\t// destination", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin, topMargin + scrollHeight, ", "+\t\t\t\tscrollWidth, -vscroll - scrollHeight, true);\t", "+\t\t}", "+\t}", "+\thorizontalScrollOffset += hscroll;", "+\tverticalScrollOffset += vscroll;\t", "+\tif (vscroll != 0) calculateTopIndex(vscroll);", "+\tint oldColumnX = columnX;", "+\tsetCaretLocation();", "+\tcolumnX = oldColumnX;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af2978854152e25e8b78a3c563ebb475", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 392, "methodNumberAfterChange": 252, "signatureBeforeChange": " void scrollHorizontal(int pixels)", "signatureAfterChange": " void scroll(int hscroll, int vscroll)", "diff": ["- */", "-void scrollHorizontal(int pixels) {", "-\tRectangle clientArea;", "-\t", "-\tif (pixels == 0) {", "-\t\treturn;", "-\t}", "-\tclientArea = getClientArea();", "-\tif (pixels > 0) {", "-\t\tint sourceX = leftMargin + pixels;", "-\t\tint scrollWidth = clientArea.width - sourceX - rightMargin;", "-\t\tint scrollHeight = clientArea.height - topMargin - bottomMargin;", "-\t\tscroll(", "-\t\t\tleftMargin, topMargin, \t\t\t\t\t\t// destination x, y", "-\t\t\tsourceX, topMargin,\t\t\t\t\t\t\t// source x, y", "-\t\t\tscrollWidth, scrollHeight, true);", "-\t\tif (sourceX > scrollWidth) {", "-\t\t\t// redraw from end of scrolled area to beginning of scroll ", "-\t\t\t// invalidated area", "-\t\t\tsuper.redraw(", "-\t\t\t\tleftMargin + scrollWidth, topMargin, ", "-\t\t\t\tpixels - scrollWidth, scrollHeight, true);", "-\t\t}", "-\t}", "-\telse {", "-\t\tint destinationX = leftMargin - pixels;", "-\t\tint scrollWidth = clientArea.width - destinationX - rightMargin;", "-\t\tint scrollHeight = clientArea.height - topMargin - bottomMargin;", "-\t\tscroll(", "-\t\t\tdestinationX, topMargin,\t\t\t\t\t// destination x, y", "-\t\t\tleftMargin, topMargin,\t\t\t\t\t\t// source x, y", "-\t\t\tscrollWidth, scrollHeight, true);", "-\t\tif (destinationX > scrollWidth) {", "-\t\t\t// redraw from end of scroll invalidated area to scroll ", "-\t\t\t// destination", "-\t\t\tsuper.redraw(", "-\t\t\t\tleftMargin + scrollWidth, topMargin, ", "-\t\t\t\t-pixels - scrollWidth, scrollHeight, true);\t", "-\t\t}", "-\t}", "-\thorizontalScrollOffset += pixels;", "-\tint oldColumnX = columnX - pixels;", "-\tsetCaretLocation();", "-\t// restore the original horizontal caret index", "-\tcolumnX = oldColumnX;", "-}", "+ */", "+void scroll(int hscroll, int vscroll) {\t", "+\tRectangle clientArea = getClientArea();", "+\tif (hscroll > 0 || vscroll > 0) {", "+\t\tint sourceX = leftMargin + hscroll;", "+\t\tint sourceY = topMargin + vscroll;", "+\t\tint scrollWidth = clientArea.width - sourceX - rightMargin;", "+\t\tint scrollHeight = clientArea.height - sourceY - bottomMargin;", "+\t\tscroll(", "+\t\t\tleftMargin, topMargin, \t\t\t\t\t\t// destination x, y", "+\t\t\tsourceX, sourceY,\t\t\t\t\t\t\t// source x, y", "+\t\t\tscrollWidth, scrollHeight, true);", "+\t\t", "+\t\t// redraw from end of scrolled area to beginning of scroll ", "+\t\t// invalidated area", "+\t\tif (sourceX > scrollWidth) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin + scrollWidth, topMargin, ", "+\t\t\t\thscroll - scrollWidth, scrollHeight, true);", "+\t\t}", "+\t\tif (sourceY > scrollHeight) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin, topMargin + scrollHeight, ", "+\t\t\t\tscrollWidth, vscroll - scrollHeight, true);", "+\t\t}", "+\t} else {", "+\t\tint destinationX = leftMargin - hscroll;", "+\t\tint destinationY = topMargin - vscroll;", "+\t\tint scrollWidth = clientArea.width - destinationX - rightMargin;", "+\t\tint scrollHeight = clientArea.height - destinationY - bottomMargin;", "+\t\tscroll(", "+\t\t\tdestinationX, destinationY,\t\t\t\t\t// destination x, y", "+\t\t\tleftMargin, topMargin,\t\t\t\t\t\t// source x, y", "+\t\t\tscrollWidth, scrollHeight, true);", "+\t\t", "+\t\t// redraw from end of scroll invalidated area to scroll ", "+\t\t// destination", "+\t\tif (destinationX > scrollWidth) {", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin + scrollWidth, topMargin, ", "+\t\t\t\t-hscroll - scrollWidth, scrollHeight, true);\t", "+\t\t}", "+\t\tif (destinationY > scrollHeight) {", "+\t\t\t// redraw from end of scroll invalidated area to scroll ", "+\t\t\t// destination", "+\t\t\tsuper.redraw(", "+\t\t\t\tleftMargin, topMargin + scrollHeight, ", "+\t\t\t\tscrollWidth, -vscroll - scrollHeight, true);\t", "+\t\t}", "+\t}", "+\thorizontalScrollOffset += hscroll;", "+\tif (vscroll != 0) {", "+\t\tif (verticalScrollOffset == -1) {", "+\t\t\t// assure verticalScrollOffset is up to date", "+\t\t\tgetVerticalScrollOffset();\t\t", "+\t\t}", "+\t\tverticalScrollOffset += vscroll;\t", "+\t\tcalculateTopIndex(vscroll);", "+\t}", "+\tint oldColumnX = columnX;", "+\tsetCaretLocation();", "+\tcolumnX = oldColumnX;"]}], "num": 16180}