{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f29463f9f09cbf22808bc0195f8a2086", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061ac29544a9e40814f4187c3d8e7005", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9cd26d5223bd03ea08324197722fd8b6203b707d", "commitAfterChange": "4b95c7f69273e725cd95810021784658917b8481", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 72, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\tif (data.renderTable == 0) createRenderTable();", "-\tint renderTable = data.renderTable;", "-", "-\tint tableLength = 0;", "-\tDevice device = data.device;", "-\tint[] parseTable = new int[2];", "-\tchar[] text = new char[string.length()];", "-\tstring.getChars(0, text.length, text, 0);\t", "-\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;", "-\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;", "-\tif ((flags & SWT.DRAW_MNEMONIC) != 0) stripMnemonic(text);\t", "-", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage(), text, true);", "-\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);", "-\tint width = OS.XmStringWidth(renderTable, xmString);", "-\tint height =  OS.XmStringHeight(renderTable, xmString);", "-\tOS.XmStringFree(xmString);", "-\treturn new Point(width, height);", "+\tsetText(string, flags);", "+\tif (data.textWidth != -1) return new Point(data.textWidth, data.textHeight);", "+\tint width, height;", "+\tif (string.length() == 0) {", "+\t\twidth = 0;", "+\t\theight = getFontHeight();", "+\t} else {", "+\t\tint fontList = data.fontList;", "+\t\tint xmText = data.xmText;", "+\t\twidth = OS.XmStringWidth(fontList, xmText);", "+\t\theight = OS.XmStringHeight(fontList, xmText);", "+\t}", "+\treturn new Point(data.textWidth = width, data.textHeight = height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d6d6460d44684d20c99cc71fefad97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 58, "signatureBeforeChange": " public Point textExtent(String string, int flags)", "signatureAfterChange": " public Point textExtent(String string, int flags)", "diff": ["-\tif (string.length () == 0) return new Point(0, getFontHeight());", "-\t", "-\t/* AW", "-\tif (data.renderTable == 0) createRenderTable();", "-\tint renderTable = data.renderTable;", "-", "-\tint tableLength = 0;", "-\tDevice device = data.device;", "-\tint[] parseTable = new int[2];", "-\tchar[] text = new char[string.length()];", "-\tstring.getChars(0, text.length, text, 0);\t", "-\tif ((flags & SWT.DRAW_DELIMITER) != 0) parseTable[tableLength++] = device.crMapping;", "-\tif ((flags & SWT.DRAW_TAB) != 0) parseTable[tableLength++] = device.tabMapping;", "-\tif ((flags & SWT.DRAW_MNEMONIC) != 0) stripMnemonic(text);\t", "-", "-\tbyte[] buffer = Converter.wcsToMbcs(getCodePage(), text, true);", "-\tint xmString = OS.XmStringParseText(buffer, 0, OS.XmFONTLIST_DEFAULT_TAG, OS.XmCHARSET_TEXT, parseTable, tableLength, 0);", "-\tint width = OS.XmStringWidth(renderTable, xmString);", "-\tint height =  OS.XmStringHeight(renderTable, xmString);", "-\tOS.XmStringFree(xmString);", "-\treturn new Point(width, height);", "-\t*/", "-\ttry {", "-\t\tfocus(false, null);", "-\t\tinstallFont();", "-\t\tint width= OS.TextWidth(string, data.font.fID, data.font.fSize, data.font.fFace);", "-\t\tshort[] fontInfo= new short[4];", "-\t\tOS.GetFontInfo(fontInfo);\t// FontInfo", "-\t\treturn new Point(width, fontInfo[0] + fontInfo[1]);", "-\t} finally {", "-\t\tunfocus(false);", "-\t}", "+\t//NOT DONE", "+\treturn stringExtent(string);"]}], "num": 18431}