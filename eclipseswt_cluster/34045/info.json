{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9503003661f69689e9ed8778b8130996", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "901cafc966ef0bf1d1b4792f02f8fc45", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a8ee9ef67e47ca82ee0eceb39251ba541d608aeb", "commitAfterChange": "5aabbb14fa51a603fa8266c061688e67cc447a1a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 33, "signatureBeforeChange": " private TableItem[] getSelection_extended ()", "signatureAfterChange": "  int processMouseUp (int callData, int arg1, int int2)", "diff": ["-}", "-private TableItem[] getSelection_extended () {", "-\tGtkCList clist = new GtkCList(handle);", "-\tif (clist.selection==0) return new TableItem[0];", "-\tint length = OS.g_list_length (clist.selection);", "-\tTableItem [] result = new TableItem [length];", "-\tfor (int i=0; i<length; i++) {", "-\t\tint index = OS.g_list_nth_data (clist.selection, i);", "+", "+int processMouseUp (int callData, int arg1, int int2) {", "+\tint result = super.processMouseUp (callData, arg1, int2);", "+\tif ((style & SWT.MULTI) != 0) {", "+\t\t/*", "+\t\t* Feature in GTK.  When an item is reselected, GTK", "+\t\t* does not issue notification.  The fix is to detect", "+\t\t* that the mouse was released over a selected item when", "+\t\t* no selection signal was set and issue a fake selection", "+\t\t* event.", "+\t\t*/", "+\t\tdouble[] px = new double [1], py = new double [1];", "+\t\tOS.gdk_event_get_coords(callData, px, py);", "+\t\tint x = (int) (px[0]), y = (int) (py[0]);", "+\t\tint [] row = new int [1], column = new int [1];", "+\t\tif (OS.gtk_clist_get_selection_info (handle, x, y, row, column) != 0) {", "+\t\t\tGtkCList clist = new GtkCList (handle);", "+\t\t\tif (selected && clist.selection != 0) {", "+\t\t\t\tint list = clist.selection;", "+\t\t\t\tint length = OS.g_list_length (list);", "+\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\tif (row [0] == OS.g_list_nth_data (list, i)) {", "+\t\t\t\t\t\tpostEvent (SWT.Selection);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tselected = false;", "+\t}", "+\treturn result;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be7d2bee3fae30c2d6529787492315fd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "556485b9b423754e2cf7ef43c3659942e02e8a73", "commitAfterChange": "11d912639acc7f554fd25be9dcf7fad00a7b7665", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public Control getCursorControl ()", "signatureAfterChange": " public Control getCursorControl ()", "diff": ["-\tint /*long*/ window = OS.gdk_window_at_pointer (x,y);", "-\tif (window == 0) return null;", "+\tint /*long*/ handle = 0;", "-\tOS.gdk_window_get_user_data (window, user_data);", "-\tint /*long*/ handle = user_data [0];", "+\tint /*long*/ window = OS.gdk_window_at_pointer (x,y);", "+\tif (window != 0) {", "+\t\tOS.gdk_window_get_user_data (window, user_data);", "+\t\thandle = user_data [0];", "+\t} else {", "+\t\t/*", "+\t\t* Feature in GTK. gdk_window_at_pointer() will not return a window ", "+\t\t* if the pointer is over a foreign embedded window. The fix is to use", "+\t\t* XQueryPointer to find the containing GDK window.", "+\t\t*/", "+\t\tif (!OS.GDK_WINDOWING_X11 ()) return null;", "+\t\tOS.gdk_error_trap_push ();", "+\t\tint [] unused = new int [1], buffer = new int [1];", "+\t\tint xWindow, xParent = OS.XDefaultRootWindow (xDisplay);", "+\t\tdo {", "+\t\t\tif (OS.XQueryPointer (xDisplay, xParent, unused, buffer, unused, unused, unused, unused, unused) == 0) {", "+\t\t\t\tOS.gdk_error_trap_pop ();", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tif ((xWindow = buffer [0]) != 0) {", "+\t\t\t\txParent = xWindow;", "+\t\t\t\tint /*long*/ gdkWindow = OS.gdk_window_lookup (xWindow);", "+\t\t\t\tif (gdkWindow != 0)\t{", "+\t\t\t\t\tOS.gdk_window_get_user_data (gdkWindow, user_data);", "+\t\t\t\t\tif (user_data[0] != 0) handle = user_data[0];\t", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} while (xWindow != 0);", "+\t\tOS.gdk_error_trap_pop ();", "+\t}"]}], "num": 34045}