{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "818ed2d12172007a4fea81fc2cd7f1ad", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a862f494be47aca85993e284439adbc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "7996d8405892a4a58e0083da5d5bc47199c1a1a1", "commitAfterChange": "a70d2e9009f5c248af33f97a37a3226fb19f6ab1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tbyte [] titleBytes = Converter.wcsToMbcs (null, title, true);\r", "-\tint handle = OS.gtk_file_selection_new (titleBytes);\r", "-\tif (parent!=null) {\r", "-\t\tOS.gtk_window_set_modal(handle, true);\r", "-\t\tOS.gtk_window_set_transient_for(handle, parent.topHandle());\r", "-\t}\t\r", "-\t/* Calculate the fully-specified file name and convert to bytes */\r", "-\tStringBuffer stringBuffer = new StringBuffer ();\r", "-\tchar separator = System.getProperty (\"file.separator\").charAt (0);\r", "-\tif (filterPath == null) {\r", "-\t\tfilterPath = \"\";\r", "-\t} else {\r", "-\t\tif (filterPath.length () > 0) {\r", "-\t\t\tstringBuffer.append (filterPath);\r", "-\t\t\tif (filterPath.charAt (filterPath.length () - 1) != separator) {\r", "-\t\t\t\tstringBuffer.append (separator);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\tif (fileName == null) {\r", "-\t\tfileName = \"\";\r", "-\t} else {\r", "-\t\tstringBuffer.append (fileName);\r", "-\t}\r", "-\tfullPath = stringBuffer.toString ();\r", "-\tbyte [] fullPathBytes = Converter.wcsToMbcs (null, fullPath, true);\r", "-\tOS.gtk_file_selection_set_filename (handle, fullPathBytes);\r", "-\t\r", "-\t/* Set the extension */\r", "-\tif (filterNames == null) filterNames = new String [0];\r", "-\tif (filterExtensions == null) filterExtensions = new String [0];\r", "-\tif (filterExtensions.length == 1) {\r", "-\t\tString ext = filterExtensions [0];\r", "-\t\tbyte [] extBytes = Converter.wcsToMbcs (null, ext, true);\r", "-\t\tOS.gtk_file_selection_complete (handle, extBytes);\r", "-\t}\r", "-\t\r", "-\t/* Hook callbacks */\r", "-\tCallback destroyCallback = new Callback (this, \"destroyFunc\", 2);\r", "-\tint destroyFunc = destroyCallback.getAddress ();\r", "-\tbyte [] destroy = Converter.wcsToMbcs (null, \"destroy\", true);\r", "-\tOS.gtk_signal_connect (handle, destroy, destroyFunc, handle);\r", "-\tbyte [] clicked = Converter.wcsToMbcs (null, \"clicked\", true);\r", "-\tCallback okCallback = new Callback (this, \"okFunc\", 2);\r", "-\tint okFunc = okCallback.getAddress ();\r", "-\tCallback cancelCallback = new Callback (this, \"cancelFunc\", 2);\r", "-\tint cancelFunc = cancelCallback.getAddress ();\r", "-\tOS.gtk_signal_connect (OS.GTK_FILE_SELECTION_OK_BUTTON(handle), clicked, okFunc, handle);\r", "-\tOS.gtk_signal_connect (OS.GTK_FILE_SELECTION_CANCEL_BUTTON(handle), clicked, cancelFunc, handle);\r", "-\r", "-\tfileName = null;\r", "-\tfullPath = null;\r", "-\tfilterPath = null;\r", "-\t\t\r", "-\t/* Show the dialog */\r", "-\tcancel = true;\r", "-\tOS.gtk_widget_show_now (handle);\r", "-\tOS.gtk_main ();\r", "-\r", "-\tdestroyCallback.dispose ();\r", "-\tokCallback.dispose ();\r", "-\tcancelCallback.dispose ();\r", "-\t\r", "-\t/* Return the full path or null */\r", "-\tif (cancel) return null;\r", "-\treturn fullPath;\r", "+\t/*\r", "+\t * The only reason this method is not just left out to\r", "+\t * fall through to the superclass, is the JavaDoc comment.\r", "+\t */\r", "+\treturn super.open();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8fbadb50b39ecdd3cdb10dc04837759", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 31, "signatureBeforeChange": " public boolean execute(String fileName)", "signatureAfterChange": " public boolean execute(String fileName)", "diff": ["-\tswitch (getDesktop(display)) {", "-\t\tcase DESKTOP_KDE: {", "-\t\t\tString urlString = \"file://\" + fileName;", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, urlString, true);", "-\t\t\tint qString = KDE.QString_new(buffer);", "-\t\t\tint url = KDE.KURL_new(qString);", "-\t\t\tKDE.QString_delete(qString);", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbuffer = Converter.wcsToMbcs(null, name, true);", "-\t\t\tint mimeTypeName = KDE.QString_new(buffer);", "-\t\t\tint pid = KDE.KRun_runURL(url, mimeTypeName);", "-\t\t\tKDE.KURL_delete(url);", "-\t\t\tKDE.QString_delete(mimeTypeName);", "-\t\t\treturn (pid != 0);", "-\t\t}", "-\t\tcase DESKTOP_GNOME: {", "-\t\t\tif (gnomeExpectUri) {", "-\t\t\t\t/* convert the given path into a URL */", "-\t\t\t\tfileName = \"file://\" + fileName;", "-\t\t\t}", "-", "-\t\t\t/* Parse the command into its individual arguments. */", "-\t\t\tString[] args = parseCommand(command);", "-\t\t\tint fileArg = -1;", "-\t\t\tint index;", "-\t\t\tfor (index = 0; index < args.length; index++) {", "-\t\t\t\tint j = args[ index ].indexOf(\"%f\");", "-\t\t\t\tif (j != -1) {", "-\t\t\t\t\tString value = args[index];", "-\t\t\t\t\tfileArg = index;", "-\t\t\t\t\targs[index] = value.substring(0,j) + fileName + value.substring(j + 2);", "-\t\t\t\t}", "-\t\t\t}", "-\t", "-\t\t\t/* If a file name was given but the command did not have \"%f\" */", "-\t\t\tif ((fileName.length() > 0) && (fileArg < 0)) {", "-\t\t\t\tString[] newArgs = new String[args.length + 1];", "-\t\t\t\tfor (index = 0; index < args.length; index++) newArgs[index] = args[index];", "-\t\t\t\tnewArgs[args.length] = fileName;", "-\t\t\t\targs = newArgs;", "-\t\t\t}", "-\t", "-\t\t\t/* Execute the command. */", "-\t\t\ttry {", "-\t\t\t\tCompatibility.exec(args);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\treturn true;", "-\t\t}", "-\t\tcase DESKTOP_CDE: {", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbyte[] action = Converter.wcsToMbcs(null, command, true);", "-\t\t\tbyte[] fileArg = Converter.wcsToMbcs(null, fileName, true);", "-\t\t\tInteger shell = (Integer) display.getData(CDE_SHELL);", "-\t\t\tint actionID = 0;", "-\t\t\tif (shell != null) {", "-\t\t\t\tint ptr = OS.XtMalloc(fileArg.length);", "-\t\t\t\tOS.memmove(ptr, fileArg, fileArg.length);", "-\t\t\t\tDtActionArg args = new DtActionArg();", "-\t\t\t\targs.argClass = CDE.DtACTION_FILE;", "-\t\t\t\targs.name = ptr;", "-\t\t\t\tactionID = CDE.DtActionInvoke(shell.intValue(), action, args, 1, null, null, null, 1, 0, 0);", "-\t\t\t\tOS.XtFree(ptr);", "-\t\t\t}", "-\t\t\treturn (actionID != 0);", "-\t\t}", "+\tint desktop = getDesktop(display);", "+\tswitch (desktop) {", "+\t\tcase DESKTOP_GNOME: return gnome_execute(fileName);", "+\t\tcase DESKTOP_KDE: return kde_execute(fileName);", "+\t\tcase DESKTOP_CDE: return cde_execute(fileName);"]}], "num": 56631}