{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c57e05b351f7d6af6f4f8e9640e2476", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f76d1af82f8e9f7686bddbbd9b1b2f4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "fb9d25eca2faaefc0b679b2b873bc3c293a708b5", "commitAfterChange": "239af00ad19b62a2febeb66befdd335386d538ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\t/* ", "+\t\t\t\t * FocusIn and Traverse are hooked to handle traversal into", "+\t\t\t\t * and out of the Browser when it has key listeners.", "+\t\t\t\t */", "+\t\t\t\tcase SWT.FocusIn: {", "+\t\t\t\t\tsite.setFocus();", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tcase SWT.Traverse: {", "+\t\t\t\t\tif (browser.isListening(SWT.KeyDown) || browser.isListening(SWT.KeyUp)) {", "+\t\t\t\t\t\tif (e.detail == SWT.TRAVERSE_TAB_PREVIOUS) {", "+\t\t\t\t\t\t\tbrowser.traverse(SWT.TRAVERSE_TAB_PREVIOUS);", "+\t\t\t\t\t\t\te.doit = false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\tbrowser.addListener(SWT.FocusIn, listener);", "-\t", "+\tsite.addListener(SWT.Traverse, listener);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcd88c360cf8ff16f3b2c054213e907", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGeneratorAppUI.java", "commitBeforeChange": "850762e9a08fe53dc75aefc41ff5a385ce367b55", "commitAfterChange": "3828312ee11f08748cd3b9ff351e02975be21bac", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void createParametersPanel(Composite panel)", "signatureAfterChange": "  void createParametersPanel(Composite panel)", "diff": ["+\t\t\tif (e.type == SWT.Traverse) {", "+\t\t\t\tswitch (e.detail) {", "+\t\t\t\t\tcase SWT.TRAVERSE_ESCAPE:", "+\t\t\t\t\t\tparamTextEditor.setItem(null);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "-\tparamEditorTx.addListener(SWT.FocusOut, paramTextListener); ", "+\tparamEditorTx.addListener(SWT.FocusOut, paramTextListener);", "+\tparamEditorTx.addListener(SWT.Traverse, paramTextListener);", "-\t\t\tif (e.type == SWT.KeyDown) {", "-\t\t\t\tif (e.character != SWT.CR) return;", "+\t\t\tif (e.type == SWT.Traverse) {", "+\t\t\t\tswitch (e.detail) {", "+\t\t\t\t\tcase SWT.TRAVERSE_RETURN:", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "-\tparamEditorLt.addListener(SWT.KeyDown, paramListListener);", "+\tparamEditorLt.addListener(SWT.Traverse, paramListListener);"]}], "num": 5125}