{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "459294041deeef0028a51e63e2f6b7ca", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c423e6d4e7be1ceba9a1f07da16e72e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0fa861dfc810fa95fef91d1138bd1d6fa87ebd2c", "commitAfterChange": "0600cb7b16b085c0042ea9cb2d61d7f2d118abff", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " void calculateTopIndex()", "signatureAfterChange": " void calculateTopIndex(int delta)", "diff": ["-void calculateTopIndex() {", "+void calculateTopIndex(int delta) {", "-\t\tRectangle clientArea = getClientArea();", "-\t\ttopIndex = getLineIndex(clientArea.y);", "-\t\tint linePixel = getLinePixel(topIndex);", "-\t\tif (linePixel < 0) {", "-\t\t\tint lineCount = content.getLineCount();", "-\t\t\tif (topIndex < lineCount - 1) {", "-\t\t\t\tint bottom = getLinePixel(topIndex + 1);", "-\t\t\t\tbottom = lineCache.getLineHeight(topIndex + 1);", "-\t\t\t\tif (clientArea.height >= bottom) {", "-\t\t\t\t\ttopIndex++;", "-\t\t\t\t}", "+//\t\tRectangle clientArea = getClientArea();", "+//\t\ttopIndex = getLineIndex(clientArea.y);", "+//\t\tint linePixel = getLinePixel(topIndex);", "+//\t\tif (linePixel < 0) {", "+//\t\t\tint lineCount = content.getLineCount();", "+//\t\t\tif (topIndex < lineCount - 1) {", "+//\t\t\t\tint bottom = getLinePixel(topIndex + 1);", "+//\t\t\t\tbottom = lineCache.getLineHeight(topIndex + 1);", "+//\t\t\t\tif (clientArea.height >= bottom) {", "+//\t\t\t\t\ttopIndex++;", "+//\t\t\t\t}", "+//\t\t\t}", "+//\t\t}", "+\t\tif (delta > 0) {", "+\t\t\tif (partialHeight > delta) {", "+\t\t\t\tpartialHeight -= delta;", "+\t\t\t\treturn;", "-\t\t} ", "-\t}\t", "+\t\t\tdelta -= partialHeight;", "+\t\t\tpartialHeight = 0;", "+\t\t\t", "+\t\t\tint lineCount = content.getLineCount();", "+\t\t\twhile (delta > 0 && topIndex < lineCount -1) {", "+\t\t\t\tint lineHeight = lineCache.getLineHeight(topIndex);", "+\t\t\t\ttopIndex++;", "+\t\t\t\tif (lineHeight > delta) {", "+\t\t\t\t\tpartialHeight = lineHeight - delta;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tdelta -= lineHeight;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (topIndex > 0) {", "+\t\t\t\tint height = lineCache.getLineHeight(topIndex - 1) - partialHeight;", "+\t\t\t\tif (height > -delta) {", "+\t\t\t\t\tpartialHeight -= delta;", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\tdelta += height;", "+\t\t\t\tpartialHeight = 0;", "+\t\t\t\ttopIndex--;", "+\t\t\t}", "+\t\t\t//delta == zero, topIndex--, end", "+\t\t\twhile (-delta > 0 && topIndex > 0) {", "+\t\t\t\tint lineHeight = lineCache.getLineHeight(topIndex - 1);", "+\t\t\t\tif (lineHeight > -delta) {", "+\t\t\t\t\tpartialHeight = -delta;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\ttopIndex--;", "+\t\t\t\tdelta += lineHeight;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb034ffa45e57707af1f1e7ffdb65d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridLayout.java", "commitBeforeChange": "e75492e625dddbd6d127fd15b1010ffeec2f2902", "commitAfterChange": "ee0cb80834cac32edcf0c85c329a5ea5bf7010af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\tif (numColumns < 1) return new Point (marginLeft + marginWidth * 2 + marginRight, marginTop + marginHeight * 2 + marginBottom);", "+\tif (numColumns < 1) {", "+\t\treturn new Point (marginLeft + marginWidth * 2 + marginRight, marginTop + marginHeight * 2 + marginBottom);", "+\t}", "+\tint count = 0;", "+\t\tControl control = children [i];", "+\t\tGridData data = (GridData) control.getLayoutData ();", "+\t\tif (data == null || !data.exclude) {", "+\t\t\tchildren [count++] = children [i];", "+\t\t} ", "+\t}", "+\tfor (int i=0; i<count; i++) {", "-\tfor (int i=0; i<children.length; i++) {\t", "+\tfor (int i=0; i<count; i++) {\t", "-\t\t\tint count = expandCount;", "-\t\t\tint delta = (availableWidth - totalWidth) / count;", "-\t\t\tint remainder = (availableWidth - totalWidth) % count;", "+\t\t\tint c = expandCount;", "+\t\t\tint delta = (availableWidth - totalWidth) / c;", "+\t\t\tint remainder = (availableWidth - totalWidth) % c;", "-\t\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\t\tc--;", "-\t\t\t\tif (count == 0) break;", "+\t\t\t\tif (c == 0) break;", "-\t\t\t\tdelta = (availableWidth - totalWidth) / count;", "-\t\t\t\tremainder = (availableWidth - totalWidth) % count;", "+\t\t\t\tdelta = (availableWidth - totalWidth) / c;", "+\t\t\t\tremainder = (availableWidth - totalWidth) % c;", "-\t\t\t\t\t\t\tif (flush == null) flush = new GridData [children.length];", "+\t\t\t\t\t\t\tif (flush == null) flush = new GridData [count];", "-\t\tint count = expandCount;", "-\t\tint delta = (availableHeight - totalHeight) / count;", "-\t\tint remainder = (availableHeight - totalHeight) % count;", "+\t\tint c = expandCount;", "+\t\tint delta = (availableHeight - totalHeight) / c;", "+\t\tint remainder = (availableHeight - totalHeight) % c;", "-\t\t\t\t\t\tcount--;", "+\t\t\t\t\t\tc--;", "-\t\t\tif (count == 0) break;", "+\t\t\tif (c == 0) break;", "-\t\t\tdelta = (availableHeight - totalHeight) / count;", "-\t\t\tremainder = (availableHeight - totalHeight) % count;", "+\t\t\tdelta = (availableHeight - totalHeight) / c;", "+\t\t\tremainder = (availableHeight - totalHeight) % c;"]}], "num": 50706}