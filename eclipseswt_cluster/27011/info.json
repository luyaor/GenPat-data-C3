{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d044d0d0b7748226928f4ea2e52701e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d113f567d1f898308a74828a8d327ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "9e739426b0ad15edfdbaf78c820613ebdfd33078", "commitAfterChange": "0ffb9e015b5f46c2bbd273664df6f39392b4cfbc", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  int ShowMessage(int hwnd, int lpstrText, int lpstrCaption, int dwType, int lpstrHelpFile, int dwHelpContext, int plResult)", "signatureAfterChange": "  int ShowMessage(int hwnd, int lpstrText, int lpstrCaption, int dwType, int lpstrHelpFile, int dwHelpContext, int plResult)", "diff": ["-\t\t\tint cnt = OS.wcslen(lpstrText) + 1;", "+\t\t\tint cnt = OS.wcslen(lpstrText);", "-\t\t\tOS.MoveMemory(buffer, lpstrText, cnt * TCHAR.sizeof);", "+\t\t\t/* ", "+\t\t\t* Note.  lpstrText is unicode on both unicode and ansi platforms.", "+\t\t\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "+\t\t\t* TCHAR.sizeof returns 1 on ansi platforms.", "+\t\t\t*/", "+\t\t\tOS.MoveMemory(buffer, lpstrText, cnt * 2);", "-\t\t\tTCHAR lpBuffer = new TCHAR(0, cnt);", "-\t\t\tOS.LoadString(hModule, IDS_MESSAGE_BOX_CAPTION, lpBuffer, cnt);", "+\t\t\t/* provide a buffer large enough to hold the string to compare to */", "+\t\t\tint length = OS.IsUnicode ? cnt : OS.WideCharToMultiByte (OS.CP_ACP, 0, buffer, cnt, 0, 0, null, null) + 1;", "+", "+\t\t\tTCHAR lpBuffer = new TCHAR(0, length);", "+\t\t\tint result = OS.LoadString(hModule, IDS_MESSAGE_BOX_CAPTION, lpBuffer, length);", "-\t\t\treturn text.equals(lpBuffer.toString()) ? COM.S_OK : COM.S_FALSE;", "+\t\t\treturn result > 0 && text.equals(lpBuffer.toString(0, result)) ? COM.S_OK : COM.S_FALSE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5f1dc02fa50f63d5b7dce4424d47b4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "d9eb41389caec5f452b5d8d515be40a4c5119018", "commitAfterChange": "6e5a30c16ae549824cbfd9ebe355a04012ff6598", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "signatureAfterChange": "  int MapUrlToZone(int pwszUrl, int pdwZone, int dwFlags)", "diff": ["+\tint cnt = OS.wcslen(pwszUrl);", "+\tchar[] buffer = new char[cnt];", "+\t/* ", "+\t* Note.  pwszUrl is unicode on both unicode and ansi platforms.", "+\t* The nbr of chars is multiplied by the constant 2 and not by TCHAR.sizeof since", "+\t* TCHAR.sizeof returns 1 on ansi platforms.", "+\t*/", "+\tOS.MoveMemory(buffer, pwszUrl, cnt * 2);", "+\tString url = new String(buffer);", "+\t", "-\tCOM.MoveMemory(pdwZone, new int[] {Browser.URLZONE_INTRANET}, 4);", "+\tint zone = Browser.URLZONE_INTRANET;", "+\t", "+\t/*", "+\t* Note.  Some ActiveX plugins crash when executing", "+\t* inside the embedded explorer itself running into", "+\t* a JVM.  The current workaround is to detect when", "+\t* such ActiveX is about to be started and refuse", "+\t* to execute it.", "+\t* ActiveX blocked in an object tag:", "+\t* - Shockwave director plugin (mime: application/x-director)", "+\t* - Java plugin", "+\t*/", "+\tif (url.startsWith(\"http://download.macromedia.com/pub/shockwave/cabs/director/sw.cab\") || //$NON-NLS-1$", "+\t\t(url.startsWith(\"http://java.sun.com/products/plugin/autodl/jinstall\") && url.indexOf(\".cab\") != -1)) { //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tzone = Browser.URLZONE_LOCAL_MACHINE;", "+\t}", "+\tCOM.MoveMemory(pdwZone, new int[] {zone}, 4);"]}], "num": 27011}