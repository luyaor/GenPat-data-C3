{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "375e153ed87ef6ee250f5bb29b3ff371", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88225ff06a6903b779026d0a287535c3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\tint x = outPt.h - rect.left;", "-\t\tint y = outPt.v - rect.top;", "-\t\tOS.GetControlBounds (handle, rect);", "+\t\tint x, y;", "+\t\tif (OS.HIVIEW) {", "+\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\tpt.x = outPt.h;", "+\t\t\tpt.y = outPt.v;", "+\t\t\tOS.HIViewConvertPoint (pt, 0, handle);", "+\t\t\tx = (int) pt.x;", "+\t\t\ty = (int) pt.y;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t} else {", "+\t\t\tOS.GetControlBounds (handle, rect);", "+\t\t\tx = outPt.h - rect.left;", "+\t\t\ty = outPt.v - rect.top;", "+\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "239dfa31d7561a08c26eb36b6b7eb212", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void dragDetect (Control control)", "signatureAfterChange": "  void dragDetect (Control control)", "diff": ["-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t\tint x = dragMouseStart.h - rect.left;", "-\t\t\tint y = dragMouseStart.v - rect.top;", "-\t\t\tOS.GetControlBounds (control.handle, rect);", "+\t\t\tint x, y;", "+\t\t\tif (OS.HIVIEW) {", "+\t\t\t\tCGPoint pt = new CGPoint ();", "+\t\t\t\tpt.x = dragMouseStart.h;", "+\t\t\t\tpt.y = dragMouseStart.v;", "+\t\t\t\tOS.HIViewConvertPoint (pt, 0, control.handle);", "+\t\t\t\tx = (int) pt.x;", "+\t\t\t\ty = (int) pt.y;", "+\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowStructureRgn, rect);", "+\t\t\t} else {", "+\t\t\t\tOS.GetControlBounds (control.handle, rect);", "+\t\t\t\tx = dragMouseStart.h - rect.left;", "+\t\t\t\ty = dragMouseStart.v - rect.top;", "+\t\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\t\t}"]}], "num": 26711}