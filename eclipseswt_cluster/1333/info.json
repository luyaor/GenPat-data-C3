{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3b291ef4afdfbd103d621fec9f1007a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d90cbb6a1caabab6927bc17c1f90984", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "f515cf977205e790f69e546ea06080d6e95f1110", "commitAfterChange": "523afa78b09b03ec06cca70da8a3120493bd6102", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "\r public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tVector row;\r", "-\tint height = 0, width = 0, rowWidth = 0;\r", "-\tfor (int i = 0; i < rows.size(); i++) {\r", "-\t\trow = (Vector)rows.elementAt(i);\r", "-\t\tfor (int j = 0; j < row.size(); j++) {\r", "-\t\t\tPoint size = ((CoolItem) row.elementAt(j)).computeSize(SWT.DEFAULT, SWT.DEFAULT);\r", "-\t\t\trowWidth += size.x;\r", "-\t\t}\r", "-\t\twidth = Math.max(width, rowWidth);\r", "-\t\theight += getRowHeight(i) + ROW_SPACING;\r", "-\t\trowWidth = 0;\t\r", "-\t}\r", "-\tif (wHint != SWT.DEFAULT) width = wHint;\r", "-\tif (hHint != SWT.DEFAULT) height = hHint;\r", "-\tint borders = getBorderWidth() * 2;\r", "-\treturn new Point(width + borders, height + borders);\r", "+\tint width = wHint, height = hHint;\r", "+\tif (wHint == SWT.DEFAULT) width = 0x7FFFFFFF;\r", "+\tif (hHint == SWT.DEFAULT) height = 0x7FFFFFFF;\r", "+\tPoint extent = layout (width, false);\r", "+\tif (wHint != SWT.DEFAULT) extent.x = wHint;\r", "+\tif (hHint != SWT.DEFAULT) extent.y = hHint;\r", "+\treturn extent;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593a2362453fca340958596a1a55423c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 275, "signatureBeforeChange": " void setHorizontalScrollBar()", "signatureAfterChange": " public void setJustify(boolean justify)", "diff": ["-void setHorizontalScrollBar() {", "-\tScrollBar horizontalBar = getHorizontalBar();", "-\t", "-\tif (horizontalBar != null && horizontalBar.getVisible()) {", "-\t\tfinal int INACTIVE = 1;", "-\t\tRectangle clientArea = getClientArea();", "-\t\t// only set the real values if the scroll bar can be used ", "-\t\t// (ie. because the thumb size is less than the scroll maximum)", "-\t\t// avoids flashing on Motif, fixes 1G7RE1J and 1G5SE92", "-\t\tif (clientArea.width < lineCache.getWidth()) {", "-\t\t\thorizontalBar.setValues(", "-\t\t\t\thorizontalBar.getSelection(),", "-\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tlineCache.getWidth(),\t\t\t\t\t\t\t// maximum", "-\t\t\t\tclientArea.width - leftMargin - rightMargin,\t// thumb size", "-\t\t\t\thorizontalBar.getIncrement(),", "-\t\t\t\tclientArea.width - leftMargin - rightMargin);\t// page size", "-\t\t}", "-\t\telse ", "-\t\tif (horizontalBar.getThumb() != INACTIVE || horizontalBar.getMaximum() != INACTIVE) {", "-\t\t\thorizontalBar.setValues(", "-\t\t\t\thorizontalBar.getSelection(),", "-\t\t\t\thorizontalBar.getMinimum(),", "-\t\t\t\tINACTIVE,", "-\t\t\t\tINACTIVE,", "-\t\t\t\thorizontalBar.getIncrement(),", "-\t\t\t\tINACTIVE);", "-\t\t}", "+ */", "+public void setJustify(boolean justify) {", "+\tcheckWidget();", "+\tif (this.justify == justify) return;", "+\tthis.justify = justify;", "+\tresetCache(0, content.getLineCount());", "+\tsetCaretLocation();", "+\tsuper.redraw();\t", "+}"]}], "num": 1333}