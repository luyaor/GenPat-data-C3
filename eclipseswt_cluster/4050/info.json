{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af370e15676e0ccb064dea7380a3c964", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "462c3b2ddf3ae46b0d309041c09cd2bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "846121807a2e67c6346cc340f783d83e0dcf2ab8", "commitAfterChange": "1e991076ca9e6b34673487e9bad2d8f055b18870", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  void updateOrientation ()", "signatureAfterChange": "  void updateOrientation ()", "diff": ["+\tif (imageList != null) {", "+\t\tPoint size = imageList.getImageSize ();", "+\t\tdisplay.releaseImageList (imageList);", "+\t\timageList = display.getImageList (style & SWT.RIGHT_TO_LEFT, size.x, size.y);", "+\t\tint /*long*/ hImageList = imageList.getHandle ();", "+\t\tOS.SendMessage (handle, OS.TCM_SETIMAGELIST, 0, hImageList);", "+\t\tTCITEM tcItem = new TCITEM ();", "+\t\ttcItem.mask = OS.TCIF_IMAGE;", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tTabItem item = items[0];", "+\t\t\tif (item == null) break;", "+\t\t\tImage image = item.image;", "+\t\t\tif (image != null) {", "+\t\t\t\ttcItem.iImage = imageIndex (image);", "+\t\t\t\tOS.SendMessage (handle, OS.TCM_SETITEM, i, tcItem);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399e063fddb5fc1755eef6b8e6c97a26", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "e39c49f38678aa47d174c016fb22355b3bd0192b", "commitAfterChange": "0132d372737340edd48f5f09c9ef09aabb34257f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["-\t\tOS.SendMessage(handle, OS.TB_AUTOSIZE, 0, 0);", "+\t\tOS.SendMessage (handle, OS.TB_AUTOSIZE, 0, 0);", "+\t}", "+\t/*", "+\t*  When the tool bar is vertical, make the width", "+\t*  of each button be the width of the widest.", "+\t*/", "+\tif ((style & SWT.VERTICAL) != 0) {", "+\t\tTBBUTTONINFO info = new TBBUTTONINFO ();", "+\t\tinfo.cbSize = TBBUTTONINFO.sizeof;", "+\t\tinfo.dwMask = OS.TBIF_SIZE;", "+\t\tint size = OS.SendMessage (handle, OS.TB_GETBUTTONSIZE, 0, 0);", "+\t\tint padding = OS.SendMessage (handle, OS.TB_GETPADDING, 0, 0);", "+\t\tinfo.cx = (short) ((size & 0xFFFF) + (padding & 0xFFFF) * 2);", "+\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\tToolItem item = items [i];", "+\t\t\tif (item != null && (item.style & SWT.SEPARATOR) == 0) {", "+\t\t\t\tOS.SendMessage (handle, OS.TB_SETBUTTONINFO, item.id, info);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9653e4ecb690a6cbc44bd10377a73cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "344495d193406fcc18fd9d953e0e7125082dc624", "commitAfterChange": "3e7cd17b0f25301421344ef85e8eac75a5a11cf2", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  void layoutItems ()", "signatureAfterChange": "  void layoutItems ()", "diff": ["+", "+\t/*", "+\t* Feature on Windows. When SWT.WRAP or SWT.VERTICAL are set", "+\t* the separator items with control are implemented using BTNS_BUTTON ", "+\t* instead of BTNS_SEP. When that is the case and TBSTYLE_LIST is ", "+\t* set, the layout of the ToolBar recalculates the width for all ", "+\t* BTNS_BUTTON based on the text and bitmap of the item.", "+\t* This is not strictly wrong, but the user defined width for the", "+\t* separators has to be respected if set.", "+\t* The fix is to detect this case and reset the cx width for the item.  ", "+\t*/", "+\tif ((style & (SWT.WRAP | SWT.VERTICAL)) != 0) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif ((bits & OS.TBSTYLE_LIST) != 0) {", "+\t\t\tTBBUTTONINFO info = new TBBUTTONINFO ();", "+\t\t\tinfo.cbSize = TBBUTTONINFO.sizeof;", "+\t\t\tinfo.dwMask = OS.TBIF_SIZE;", "+\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\tToolItem item = items [i];", "+\t\t\t\tif (item != null && item.cx > 0) {", "+\t\t\t\t\tinfo.cx = item.cx;", "+\t\t\t\t\tOS.SendMessage (handle, OS.TB_SETBUTTONINFO, item.id, info);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\t"]}], "num": 4050}