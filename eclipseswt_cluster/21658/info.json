{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b8c3162b338e8bd4ce820d2dc247dfff", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cf30dd3fd60643dbee4c9130e1b0436", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 55, "signatureBeforeChange": " \t \tid getChildrenAttribute (int childID)", "signatureAfterChange": " \t \tid getChildrenAttribute (int childID)", "diff": ["-\t\tid returnValue = null;", "+\t\tid returnValue = null; ", "-\t\t\tif (event.detail > 0) {", "+\t\t\tint childCount = event.detail;", "+\t\t\tif (childCount > 0) {", "-\t\t\t\tObject [] appChildren = event.children;", "-\t\t\t\tif (appChildren != null && appChildren.length > 0) {", "-\t\t\t\t\t/* return an NSArray of NSAccessible objects. */", "-\t\t\t\t\tNSMutableArray childArray = NSMutableArray.arrayWithCapacity(appChildren.length);", "-", "-\t\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "-\t\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\tObject[] children = event.children;", "+\t\t\t\tNSMutableArray childArray = NSMutableArray.arrayWithCapacity(childCount);", "+\t\t\t\tfor (int i = 0; i < childCount; i++) {", "+\t\t\t\t\tObject child = children[i];", "+\t\t\t\t\tif (child instanceof Accessible) {", "+\t\t\t\t\t\tAccessible accessible = (Accessible)child;", "+\t\t\t\t\t\tif (accessible.delegate != null) {", "+\t\t\t\t\t\t\tchildArray.addObject(accessible.delegate);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tchildArray.addObject(accessibleHandle(accessible));", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tchildArray.addObject(((Accessible)child).control.view);", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t} ", "-", "-\t\t\t\t\treturnValue = new id(OS.NSAccessibilityUnignoredChildren(childArray.id));", "+\t\t\t\treturnValue = new id(OS.NSAccessibilityUnignoredChildren(childArray.id));", "+\t\t\t} else {", "+\t\t\t\treturnValue = NSArray.array();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabc95dbb5233b81726f8b55a80a70ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e38f7ba08e4cd9896dddbc5916c5187c2e1b63eb", "commitAfterChange": "7349d1b65ee9a9edeeac8e2e96a33b2c8d655b80", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getChildrenAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\treturn getAttribute (nextHandler, theEvent, userData);", "+\t\tAccessibleControlEvent event = new AccessibleControlEvent(this);", "+\t\tfor (int i = 0; i < accessibleControlListeners.size(); i++) {", "+\t\t\tAccessibleControlListener listener = (AccessibleControlListener) accessibleControlListeners.elementAt(i);", "+\t\t\tlistener.getChildren(event);", "+\t\t}", "+\t\tObject [] appChildren = event.children;", "+\t\tif (appChildren != null && appChildren.length > 0) {", "+\t\t\t/* return a CFArrayRef of AXUIElementRefs */", "+\t\t\tint children = OS.CFArrayCreateMutable (OS.kCFAllocatorDefault, 0, 0);", "+\t\t\tif (children != 0) {", "+\t\t\t\tfor (int i = 0; i < appChildren.length; i++) {", "+\t\t\t\t\tObject child = appChildren[i];", "+\t\t\t\t\tif (child instanceof Integer) {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, childIDToOs(((Integer)child).intValue()));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tOS.CFArrayAppendValue (children, ((Accessible)child).axuielementref);", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t", "+\t\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeCFMutableArrayRef, 4, new int [] {children});", "+\t\t\t\tOS.CFRelease(children);", "+\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}", "+\t\treturn OS.CallNextEventHandler (nextHandler, theEvent);"]}], "num": 21658}