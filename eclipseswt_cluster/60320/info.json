{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acd2d762fae3bf003e3707f8246b8c62", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db04fe7b19701af8be0ad2f832a3b824", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " void setBounds (int x, int y, int width, int height)", "signatureAfterChange": " void setBounds (int x, int y, int width, int height)", "diff": ["-\tRect bounds= new Rect();", "-\tOS.SetRect(bounds, (short)x, (short)y, (short)(x+width), (short)(y+height));", "-\tOS.SetControlBounds(handle, bounds);", "+\tif (MacUtil.USE_FRAME) {", "+\t\tfloat[] f= new float[4];", "+\t\tOS.HIViewGetFrame(handle, f);", "+\t\tif (f[0] != x || f[1] != y || f[2] != width || f[3] != height)", "+\t\t\tOS.HIViewSetFrame(handle, x, y, width, height);", "+\t} else {", "+\t\tshort[] bounds= new short[4];", "+\t\tshort[] pbounds= new short[4];", "+\t\tOS.GetControlBounds(handle, bounds);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\t\t", "+\t\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "+\t\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "+\t\tif (!sameOrigin || !sameExtent)", "+\t\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t}", "+", "+\tif (parent.fGotSize)", "+\t\tOS.HIViewSetVisible(handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237c2c9bcc260b097e2860736d541ea3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "3e09af06bb3bf4d5d2441cbf974046902af31cd5", "commitAfterChange": "d2db83d4ce1f652f2d28fe4b599254bee6181153", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " void setBounds (int x, int y, int width, int height)", "signatureAfterChange": " void setBounds (int x, int y, int width, int height)", "diff": ["-\tshort[] bounds= new short[4];", "-\tshort[] pbounds= new short[4];", "-\tOS.GetControlBounds(handle, bounds);", "-\tOS.GetControlBounds(parent.handle, pbounds);", "-\t\t", "-\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "-\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "-\tif (!sameOrigin || !sameExtent)", "-\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t", "+\tif (MacUtil.USE_FRAME) {", "+\t\tfloat[] f= new float[4];", "+\t\tOS.HIViewGetFrame(handle, f);", "+\t\tif (f[0] != x || f[1] != y || f[2] != width || f[3] != height)", "+\t\t\tOS.HIViewSetFrame(handle, x, y, width, height);", "+\t} else {", "+\t\tshort[] bounds= new short[4];", "+\t\tshort[] pbounds= new short[4];", "+\t\tOS.GetControlBounds(handle, bounds);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\t\t", "+\t\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "+\t\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "+\t\tif (!sameOrigin || !sameExtent)", "+\t\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t}", "-\t\tOS.ShowControl(handle);", "+\t\tOS.HIViewSetVisible(handle, true);"]}], "num": 60320}