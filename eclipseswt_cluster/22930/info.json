{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f060d191bdafc46d73b230c52a3a2e82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb357f871b16cec49b0022617c9c3e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 69, "signatureBeforeChange": "  void _setBackgroundImage (Image image)", "signatureAfterChange": "  void setBackgroundImage (int hBitmap)", "diff": ["-void _setBackgroundImage (Image image) {", "-\tsuper._setBackgroundImage (image);", "-\tint pixel = OS.SendMessage (handle, OS.LVM_GETBKCOLOR, 0, 0);", "-\tif (image != null) {", "-\t\tif (pixel != OS.CLR_NONE) {", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, OS.CLR_NONE);", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, OS.CLR_NONE);", "-\t\t}", "-\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, 0);", "-\t\t}", "-\t} else {", "-\t\tif (pixel == OS.CLR_NONE) {", "-\t\t\tpixel = background != -1 ? background : defaultBackground ();", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, pixel);", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, pixel);", "-\t\t\tif ((style & SWT.CHECK) != 0) fixCheckboxImageListColor (true);", "-\t\t}", "-\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "-\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, bits);", "-\t\t}", "-\t}", "-\t/*", "-\t* Feature in Windows.  When the background color is", "-\t* changed, the table does not redraw until the next", "-\t* WM_PAINT.  The fix is to force a redraw.", "-\t*/", "-\tOS.InvalidateRect (handle, null, true);", "-}", "+void setBackgroundImage (int hBitmap) {", "+\tif (hBitmap != 0) {", "+\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, OS.CLR_NONE);", "+\t\tOS.SendMessage (handle, OS.LVM_SETTEXTBKCOLOR, 0, OS.CLR_NONE);", "+\t\t/*", "+\t\t* Feature in Windows.  When the background color is changed,", "+\t\t* the table does not redraw until the next WM_PAINT.  The fix", "+\t\t* is to force a redraw.", "+\t\t*/", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, 0);", "+\t\t}", "+\t} else {", "+\t\tControl control = findBackgroundControl ();", "+\t\tif (control == null) control = this;", "+\t\tif (control.backgroundImage == null) {", "+\t\t\tsetBackgroundPixel (control.getBackgroundPixel ());", "+\t\t}", "+\t\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\t\tint bits = OS.LVS_EX_FULLROWSELECT;", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, bits, bits);", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c327d8b387ca473311f66ab84224e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void _setBackgroundImage (Image image)", "signatureAfterChange": "  void setBackgroundImage (int hBitmap)", "diff": ["-void _setBackgroundImage (Image image) {", "-\tsuper._setBackgroundImage (image);", "-", "-\t/*", "-\t* Feature in Windows.  If TVM_SETBKCOLOR is never", "-\t* used to set the background color of a tree, the", "-\t* background color of the lines and the plus/minus", "-\t* will be drawn using the default background color,", "-\t* not the HBRUSH returned from WM_CTLCOLOR.  The fix", "-\t* is to set the background color to the default (when", "-\t* it is already the default) to make Windows use the", "-\t* brush.", "-\t*/", "-\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\tif (OS.SendMessage (handle, OS.TVM_GETBKCOLOR, 0, 0) == -1) {", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "-\t\t}", "-\t}", "-", "-\t//FIXME - images do not draw properly with TVS_FULLROWSELECT", "-\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE), oldBits = newBits;", "-\t\tif (image == null) {", "-\t\t\tnewBits |= OS.TVS_FULLROWSELECT;", "-\t\t} else {", "-\t\t\tnewBits &= ~OS.TVS_FULLROWSELECT;", "-\t\t}", "-\t\tif (newBits != oldBits) {", "-\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "-\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t}", "-\t}", "-}", "+void setBackgroundImage (int hBitmap) {", "+\tif (hBitmap != 0) {", "+\t\t/*", "+\t\t* Feature in Windows.  If TVM_SETBKCOLOR is never", "+\t\t* used to set the background color of a tree, the", "+\t\t* background color of the lines and the plus/minus", "+\t\t* will be drawn using the default background color,", "+\t\t* not the HBRUSH returned from WM_CTLCOLOR.  The fix", "+\t\t* is to set the background color to the default (when", "+\t\t* it is already the default) to make Windows use the", "+\t\t* brush.", "+\t\t*/", "+\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\tif (OS.SendMessage (handle, OS.TVM_GETBKCOLOR, 0, 0) == -1) {", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t\t\t}", "+\t\t}", "+\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t} else {", "+\t\tControl control = findBackgroundControl ();", "+\t\tif (control == null) control = this;", "+\t\tif (control.backgroundImage == null) {", "+\t\t\tsetBackgroundPixel (control.getBackgroundPixel ());", "+\t\t}", "+\t}", "+\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif (hBitmap != 0) {", "+\t\t\tbits &= ~OS.TVS_FULLROWSELECT;", "+\t\t} else {", "+\t\t\tbits |= OS.TVS_FULLROWSELECT;", "+\t\t}", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t}", "+}"]}], "num": 22930}