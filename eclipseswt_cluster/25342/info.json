{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca9967633fba3f94ce320be354f2e2fc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5030b8bf8f881551e68f77f65f0f09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 102, "signatureBeforeChange": " public int windowProc (int handle, int clientData, int callData)", "signatureAfterChange": "  int windowProc (int nextHandler, int theEvent, int userData)", "diff": ["-}", "-public int windowProc (int handle, int clientData, int callData) {", "-\tWidget widget = WidgetTable.get (handle);", "-\tif (widget == null) return 0;", "-\treturn widget.processResize (new Integer(callData));", "-}", "+int windowProc (int nextHandler, int theEvent, int userData) {", "+\tWidget widget = WidgetTable.get (userData);", "+\tif (widget == null) {", "+\t\tint [] theWindow = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamDirectObject, OS.typeWindowRef, null, 4, null, theWindow);", "+\t\tint [] theRoot = new int [1];", "+\t\tOS.GetRootControl (theWindow [0], theRoot);", "+\t\twidget = WidgetTable.get (theRoot [0]);", "+\t}", "+\tif (widget != null)  return widget.windowProc (nextHandler, theEvent, userData); ", "+\treturn OS.eventNotHandledErr;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c56401c312f760448c278de96f3c84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e6f7b585199d6ba44254014a4c1731f439c2cf11", "commitAfterChange": "c422792f476daef88e3a0eb93a50d34c1718ea55", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 99, "signatureBeforeChange": "  boolean sendKeyEvent (int type, int theEvent)", "signatureAfterChange": "  boolean sendKeyEvent (int type, int theEvent)", "diff": ["-\tEvent event = new Event ();", "-\tevent.type = type;", "-\tsetKeyState (event, theEvent);", "-\treturn sendKeyEvent (type, event);", "+\tint [] length = new int [1];", "+\tint status = OS.GetEventParameter (theEvent, OS.kEventParamKeyUnicodes, OS.typeUnicodeText, null, 4, length, (char[])null);", "+\tif (status == OS.noErr && length [0] > 2) {", "+\t\tchar [] chars = new char [length [0] / 2];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyUnicodes, OS.typeUnicodeText, null, chars.length * 2, null, chars);", "+\t\tfor (int i = 0; i < chars.length; i++) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.type = type;", "+\t\t\tevent.character = chars [i];", "+\t\t\tsetInputState(event, theEvent);", "+\t\t\tsendKeyEvent (type, event);", "+\t\t}", "+\t\treturn true;", "+\t} else {", "+\t\tEvent event = new Event ();", "+\t\tevent.type = type;", "+\t\tsetKeyState (event, theEvent);", "+\t\treturn sendKeyEvent (type, event);", "+\t}"]}], "num": 25342}