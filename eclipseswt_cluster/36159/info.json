{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55ccf1f12398c809e1608951be72cd05", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cabf384b0d98f562f68ed3592a685ebd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e7472be62a35d340ded1ff8e0de89ae6506d1723", "commitAfterChange": "c65bd10509fc4e3f55dcb1376fcd8c5e65786199", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\t\tint xDisplay = OS.XtDisplay (handle);\r", "-\t\tif (xDisplay == 0) return;\r", "-\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "-\t\tif (xWindow == 0) return;\r", "-\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "-\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t\tif (!hasLocation) {\r", "+\t\tsendEvent (SWT.Show);\r", "+\t\tif (getItemCount () != 0) {\r", "+\t\t\tint xDisplay = OS.XtDisplay (handle);\r", "+\t\t\tif (xDisplay == 0) return;\r", "+\t\t\tint xWindow = OS.XDefaultRootWindow (xDisplay);\r", "+\t\t\tif (xWindow == 0) return;\r", "+\t\t\tint [] rootX = new int [1], rootY = new int [1], unused = new int [1], mask = new int [1];\r", "+\t\t\tif (OS.XQueryPointer (xDisplay, xWindow, unused, unused, rootX, rootY, unused, unused, mask) == 0) {\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t\tif (!hasLocation) {\r", "+\t\t\t\t/*\r", "+\t\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "+\t\t\t\t* under the mouse, the menu will not highlight until the\r", "+\t\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "+\t\t\t\t* to pop the menu up outside the current mouse position\r", "+\t\t\t\t* causing highlighting to work properly when the user\r", "+\t\t\t\t* waits for the menu to appear.\r", "+\t\t\t\t*/\r", "+\t\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "+\t\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};\r", "+\t\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t\t\t}\r", "+\t\t\tOS.XtManageChild (handle);\r", "-\t\t\t* Bug in Motif.  For some reason, when a menu is popped up\r", "-\t\t\t* under the mouse, the menu will not highlight until the\r", "-\t\t\t* mouse exits and then enters the menu again.  The fix is\r", "-\t\t\t* to pop the menu up outside the current mouse position\r", "-\t\t\t* causing highlighting to work properly when the user\r", "-\t\t\t* waits for the menu to appear.\r", "+\t\t\t* Feature in Motif.  There is no API to force the menu\r", "+\t\t\t* to accept keyboard traversal when popped up using\r", "+\t\t\t* XtManageChild.  The fix is to call undocumented API\r", "+\t\t\t* to do this.\r", "-\t\t\trootX[0] += 1;  rootY[0] += 1;\r", "-\t\t\tint [] argList = {OS.XmNx, rootX [0], OS.XmNy, rootY [0]};\r", "-\t\t\tOS.XtSetValues (handle, argList, argList.length / 2);\r", "+\t\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "+\t\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r", "+\t\t} else {\r", "+\t\t\tsendEvent (SWT.Hide);\r", "-\t\tOS.XtManageChild (handle);\r", "-\t\t/*\r", "-\t\t* Feature in Motif.  There is no API to force the menu\r", "-\t\t* to accept keyboard traversal when popped up using\r", "-\t\t* XtManageChild.  The fix is to call undocumented API\r", "-\t\t* to do this.\r", "-\t\t*/\r", "-\t\tint flags = OS.Button1Mask | OS.Button2Mask | OS.Button3Mask;\r", "-\t\tif ((mask [0] & flags) == 0) OS._XmSetMenuTraversal (handle, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2614b30a814d409a3f4fb85894ea55b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "e7472be62a35d340ded1ff8e0de89ae6506d1723", "commitAfterChange": "c65bd10509fc4e3f55dcb1376fcd8c5e65786199", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r public void setVisible (boolean visible)", "signatureAfterChange": "\r public void setVisible (boolean visible)", "diff": ["-\t\tint address = 0;\r", "-\t\tCallback GtkMenuPositionFunc = null;\r", "-\t\tif (hasLocation) {\r", "-\t\t\tGtkMenuPositionFunc = new Callback (this, \"GtkMenuPositionFunc\", 5);\r", "-\t\t\taddress = GtkMenuPositionFunc.getAddress ();\r", "+\t\tsendEvent (SWT.Show);\r", "+\t\tif (getItemCount () != 0) {\r", "+\t\t\tint address = 0;\r", "+\t\t\tCallback GtkMenuPositionFunc = null;\r", "+\t\t\tif (hasLocation) {\r", "+\t\t\t\tGtkMenuPositionFunc = new Callback (this, \"GtkMenuPositionFunc\", 5);\r", "+\t\t\t\taddress = GtkMenuPositionFunc.getAddress ();\r", "+\t\t\t}\r", "+\t\t\tOS.gtk_menu_popup (handle, 0, 0, address, 0, 0, OS.gtk_get_current_event_time());\r", "+\t\t\tif (GtkMenuPositionFunc != null) GtkMenuPositionFunc.dispose ();\r", "+\t\t} else {\r", "+\t\t\tsendEvent (SWT.Hide);\r", "-\t\tOS.gtk_menu_popup (handle, 0, 0, address, 0, 0, OS.gtk_get_current_event_time());\r", "-\t\tif (GtkMenuPositionFunc != null) GtkMenuPositionFunc.dispose ();\r"]}], "num": 36159}