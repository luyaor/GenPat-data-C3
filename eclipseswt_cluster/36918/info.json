{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf95624283f596cd3de739251b0b99bd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6bf2f6ac05ebadfbd6859adc4d0cdb5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/gtk/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "8ea4c2269ba192f20a562c289e6a9e0ae6d5f977", "commitAfterChange": "513832a7ea6752f6c56e23db9e0e57359b9f3da6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " protected void init()", "signatureAfterChange": " protected void init()", "diff": ["-\t\t/* Retreive stored printer_settings data. */", "-\t\tsettingsData = data.otherData;", "-\t\tstart = end = 0;", "-\t\twhile (end < settingsData.length && settingsData[end] != 0) {", "-\t\t\tstart = end;", "-\t\t\twhile (end < settingsData.length && settingsData[end] != 0) end++;", "-\t\t\tend++;", "-\t\t\tbyte [] keyBuffer = new byte [end - start];", "-\t\t\tSystem.arraycopy (settingsData, start, keyBuffer, 0, keyBuffer.length);", "-\t\t\tstart = end;", "-\t\t\twhile (end < settingsData.length && settingsData[end] != 0) end++;", "-\t\t\tend++;", "-\t\t\tbyte [] valueBuffer = new byte [end - start];", "-\t\t\tSystem.arraycopy (settingsData, start, valueBuffer, 0, valueBuffer.length);", "-\t\t\tOS.gtk_print_settings_set(settings, keyBuffer, valueBuffer);", "-\t\t\tif (DEBUG) System.out.println(new String (Converter.mbcsToWcs (null, keyBuffer))+\": \"+new String (Converter.mbcsToWcs (null, valueBuffer)));", "-\t\t}", "-\t\tend++; // skip extra null terminator", "-\t\t", "-\t\t/* Retreive stored page_setup data.", "-\t\t * Note that page_setup properties must be stored (in PrintDialog) and restored (here) in the same order.", "-\t\t */", "-\t\tOS.gtk_page_setup_set_orientation(pageSetup, restoreInt(\"orientation\")); //$NON-NLS-1$", "-\t\tOS.gtk_page_setup_set_top_margin(pageSetup, restoreDouble(\"top_margin\"), OS.GTK_UNIT_MM); //$NON-NLS-1$", "-\t\tOS.gtk_page_setup_set_bottom_margin(pageSetup, restoreDouble(\"bottom_margin\"), OS.GTK_UNIT_MM); //$NON-NLS-1$", "-\t\tOS.gtk_page_setup_set_left_margin(pageSetup, restoreDouble(\"left_margin\"), OS.GTK_UNIT_MM); //$NON-NLS-1$", "-\t\tOS.gtk_page_setup_set_right_margin(pageSetup, restoreDouble(\"right_margin\"), OS.GTK_UNIT_MM); //$NON-NLS-1$", "-\t\tbyte [] name = restoreBytes(\"paper_size_name\", true); //$NON-NLS-1$", "-\t\tbyte [] display_name = restoreBytes(\"paper_size_display_name\", true); //$NON-NLS-1$", "-\t\tbyte [] ppd_name = restoreBytes(\"paper_size_ppd_name\", true); //$NON-NLS-1$", "-\t\tdouble width = restoreDouble(\"paper_size_width\"); //$NON-NLS-1$", "-\t\tdouble height = restoreDouble(\"paper_size_height\"); //$NON-NLS-1$", "-\t\tboolean custom = restoreBoolean(\"paper_size_is_custom\"); //$NON-NLS-1$", "-\t\tint /*long*/ paper_size = 0;", "-\t\tif (custom) {", "-\t\t\tif (ppd_name.length > 0) {", "-\t\t\t\tpaper_size = OS.gtk_paper_size_new_from_ppd(ppd_name, display_name, width, height);", "-\t\t\t} else {", "-\t\t\t\tpaper_size = OS.gtk_paper_size_new_custom(name, display_name, width, height, OS.GTK_UNIT_MM);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tpaper_size = OS.gtk_paper_size_new(name);", "-\t\t}", "-\t\tOS.gtk_page_setup_set_paper_size(pageSetup, paper_size);", "-\t\tOS.gtk_paper_size_free(paper_size);", "+\t\trestore(data.otherData, settings, pageSetup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ddf3d03a7dceda8cb8cd96795d831f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/gtk/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "ca0a7dfbd72c3695b066c30bf3539bee466202cd", "commitAfterChange": "cb62adfcdcffb4abe98618644df77026ccb818e9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\t\tif (printerData != null) {", "-\t\t\tif (printerData.otherData != null) {", "-\t\t\t\tPrinter.restore(printerData.otherData, settings, page_setup);", "-\t\t\t}", "-\t\t\t/* Set values of settings from PrinterData. */", "-\t\t\tPrinter.setScope(settings, printerData.scope, printerData.startPage, printerData.endPage);", "-\t\t\t//TODO: Should we look at printToFile, or driver/name for \"Print to File\", or both? (see gtk bug 345590)", "-\t\t\tif (printerData.printToFile) {", "-\t\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, printerData.fileName, true);", "-\t\t\t\tOS.gtk_print_settings_set(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI, buffer);", "-\t\t\t}", "+\t\tif (printerData.otherData != null) {", "+\t\t\tPrinter.restore(printerData.otherData, settings, page_setup);", "+\t\t}", "+\t\t/* Set values of settings from PrinterData. */", "+\t\tPrinter.setScope(settings, printerData.scope, printerData.startPage, printerData.endPage);", "+\t\t//TODO: Should we look at printToFile, or driver/name for \"Print to File\", or both? (see gtk bug 345590)", "+\t\tif (printerData.printToFile && printerData.fileName != null) {", "+\t\t\tbyte [] buffer = Converter.wcsToMbcs (null, printerData.fileName, true);", "+\t\t\tOS.gtk_print_settings_set(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI, buffer);", "+\t\t}", "+\t\tif (printerData.driver != null && printerData.name != null && printerData.fileName != null) {", "-\t\t\tOS.gtk_print_settings_set_n_copies(settings, printerData.copyCount);", "-\t\t\tOS.gtk_print_settings_set_collate(settings, printerData.collate);\t", "+\t\tOS.gtk_print_settings_set_n_copies(settings, printerData.copyCount);", "+\t\tOS.gtk_print_settings_set_collate(settings, printerData.collate);", "+\t\tint orientation = printerData.orientation == PrinterData.LANDSCAPE ? OS.GTK_PAGE_ORIENTATION_LANDSCAPE : OS.GTK_PAGE_ORIENTATION_PORTRAIT;", "+\t\tOS.gtk_print_settings_set_orientation(settings, orientation);", "+\t\tOS.gtk_page_setup_set_orientation(page_setup, orientation);", "-\t\tPrinter.setScope(settings, scope, startPage, endPage);", "-\t\tif (printToFile) {", "+\t\tPrinter.setScope(settings, printerData.scope, printerData.startPage, printerData.endPage);", "+\t\tif (printerData.printToFile) {", "-\t\t\t\t\t\tscope = PrinterData.ALL_PAGES;", "+\t\t\t\t\t\tdata.scope = PrinterData.ALL_PAGES;", "-\t\t\t\t\t\tscope = PrinterData.PAGE_RANGE;", "+\t\t\t\t\t\tdata.scope = PrinterData.PAGE_RANGE;", "-\t\t\t\t\t\tstartPage = min == Integer.MAX_VALUE ? 1 : min;", "-\t\t\t\t\t\tendPage = max == 0 ? 1 : max;", "+\t\t\t\t\t\tdata.startPage = min == Integer.MAX_VALUE ? 1 : min;", "+\t\t\t\t\t\tdata.endPage = max == 0 ? 1 : max;", "-\t\t\t\t\t\tscope = PrinterData.SELECTION;", "-\t\t\t\t\t\tstartPage = endPage = OS.gtk_print_unix_dialog_get_current_page(handle);", "+\t\t\t\t\t\tdata.scope = PrinterData.SELECTION;", "+\t\t\t\t\t\tdata.startPage = data.endPage = OS.gtk_print_unix_dialog_get_current_page(handle);", "-\t\t\t\tprintToFile = data.name.equals(\"Print to File\"); //$NON-NLS-1$", "-\t\t\t\tif (printToFile) {", "+\t\t\t\tdata.printToFile = data.name.equals(\"Print to File\"); //$NON-NLS-1$", "+\t\t\t\tif (data.printToFile) {", "-\t\t\t\tdata.scope = scope;", "-\t\t\t\tdata.startPage = startPage;", "-\t\t\t\tdata.endPage = endPage;", "-\t\t\t\tdata.printToFile = printToFile;", "+\t\t\t\tdata.orientation = OS.gtk_page_setup_get_orientation(page_setup) == OS.GTK_PAGE_ORIENTATION_LANDSCAPE ? PrinterData.LANDSCAPE : PrinterData.PORTRAIT;", "+\t\t\t\tprinterData = data;"]}], "num": 36918}