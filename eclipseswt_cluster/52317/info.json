{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcdc8c4db259eed9c25fd5000e16ece6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeda4289c41f398c71dda01d09a7781c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b2018bcfa1c947417d3110658a449d25ac09ad57", "commitAfterChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void getClipping(Region region)", "signatureAfterChange": " public void getClipping(Region region)", "diff": ["-\tcairo_region_subtract (clipping, clipping);", "+\tRegion.cairo_region_subtract (clipping, clipping);", "-\t\t\tcairo_region_union (clipping, rgn);", "-\t\t\tcairo_region_destroy (rgn);", "+\t\t\tRegion.cairo_region_union (clipping, rgn);", "+\t\t\tRegion.cairo_region_destroy (rgn);", "-\t\t\tcairo_region_union (clipping, clipRgn);", "+\t\t\tRegion.cairo_region_union (clipping, clipRgn);", "-\t\tcairo_region_intersect (clipping, data.damageRgn);", "+\t\tRegion.cairo_region_intersect (clipping, data.damageRgn);", "-\t\tcairo_region_subtract(clipping, clipping);", "-\t\tcairo_region_union (clipping, rgn);", "-\t\tcairo_region_destroy (rgn);", "+\t\tRegion.cairo_region_subtract(clipping, clipping);", "+\t\tRegion.cairo_region_union (clipping, rgn);", "+\t\tRegion.cairo_region_destroy (rgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2026342868e8a421bb10e84d08190db5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "5a2233010f7e94fd6c1309096fb18e83dc79b8ce", "commitAfterChange": "6608b0af915e3e359127fb98e6d8ba6099381359", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "  @Override public Object evaluate (String script) throws SWTException", "signatureAfterChange": "  public Object evaluate (String script, boolean trusted) throws SWTException", "diff": ["+public Object evaluate (String script, boolean trusted) throws SWTException {", "+\tif (!MozillaVersion.CheckVersion (MozillaVersion.VERSION_XR24, false)) {", "+\t\treturn super.evaluate(script);", "+\t}", "+\t", "+\tlong /*int*/[] result = new long /*int*/[1];", "+\tint rc = webBrowser.QueryInterface(IIDStore.GetIID (nsIInterfaceRequestor.class), result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+\tnsIInterfaceRequestor interfaceRequestor = new nsIInterfaceRequestor (result[0]);", "+\tresult[0] = 0;", "+\trc = XPCOM.NS_GetServiceManager (result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIServiceManager serviceManager = new nsIServiceManager (result[0]);", "+\tresult[0] = 0;", "+\trc = interfaceRequestor.GetInterface (IIDStore.GetIID (nsIDOMWindow.class), result);", "+\tinterfaceRequestor.Release ();", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tnsIDOMWindow window = new nsIDOMWindow (result[0]);", "+\tresult[0] = 0;", "+\tbyte[] aContractID = MozillaDelegate.wcsToMbcs (null, XPCOM.EXECUTE_CONTRACTID, true);", "+\trc = serviceManager.GetServiceByContractID (aContractID, IIDStore.GetIID (Execute.class), result);", "+\tif (rc != XPCOM.NS_OK) Mozilla.error (rc);", "+\tif (result[0] == 0) Mozilla.error (XPCOM.NS_NOINTERFACE);", "+", "+\tExecute execute = new Execute (result[0]);", "+\tresult[0] = 0;", "+\tnsEmbedString data = new nsEmbedString (\"(function(){\" + script + \"}())\");", "+\texecute.EvalAsChrome(window, data, result);", "+\tdata.dispose ();", "+\texecute.Release ();", "+\tif (result[0] == 0) return null;", "+", "+\tnsIVariant variant = new nsIVariant (result[0]);", "+\tObject retval = External.convertToJava( variant);", "+\tvariant.Release ();", "+\treturn retval;", "+}"]}], "num": 52317}