{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55fd4bc6f216d76112d848e3a31bd175", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "373313e2854602e926d6f044bb299f46", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "3aca5aa105cc29fd2171fa71f9b573ccd1cff2ea", "commitAfterChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tstatic int atkText_get_text_at_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tstatic int atkText_get_text_at_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "diff": ["+\t\t\t\tint /*long*/ charCount = atkText_get_character_count (atkObject);", "+\t\t\t\tint eventStart = event.start;", "+\t\t\t\tint eventEnd = event.end;", "+\t\t\t\t}", "+\t\t\t\tswitch ((int)/*64*/boundary_type) {", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_START:", "+\t\t\t\t\t\tif (event.end < charCount) {", "+\t\t\t\t\t\t\tint start = event.start;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = 1;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\t\t\tevent.start = start;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_END:", "+\t\t\t\t\t\tif (0 < event.start) {", "+\t\t\t\t\t\t\tint end = event.end;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = -1;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.start = event.end;", "+\t\t\t\t\t\t\tevent.end = end;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "274e6c580ad9c2a4adce7fab8751ce52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "3aca5aa105cc29fd2171fa71f9b573ccd1cff2ea", "commitAfterChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tstatic int atkText_get_text_after_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tstatic int atkText_get_text_after_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "diff": ["+\t\t\t\tint /*long*/ charCount = atkText_get_character_count (atkObject);", "+\t\t\t\tint eventStart = event.start;", "+\t\t\t\tint eventEnd = event.end;", "+\t\t\t\t}", "+\t\t\t\tswitch ((int)/*64*/boundary_type) {", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_START:", "+\t\t\t\t\t\tif (event.end < charCount) {", "+\t\t\t\t\t\t\tint start = event.start;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = 2;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\t\t\tevent.start = start;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_END:", "+\t\t\t\t\t\tif (0 < event.start) {", "+\t\t\t\t\t\t\tint end = event.end;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.start = event.end;", "+\t\t\t\t\t\t\tevent.end = end;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c7044531995c6b2266321e1171f1bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "3aca5aa105cc29fd2171fa71f9b573ccd1cff2ea", "commitAfterChange": "fe5fa54e22f97eef927dafab577effaeba080c1d", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tstatic int atkText_get_text_before_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tstatic int atkText_get_text_before_offset (int atkObject, int offset_value, int boundary_type, int start_offset, int end_offset)", "diff": ["+\t\t\t\tint /*long*/ charCount = atkText_get_character_count (atkObject);", "+\t\t\t\tint eventStart = event.start;", "+\t\t\t\tint eventEnd = event.end;", "+\t\t\t\tswitch ((int)/*64*/boundary_type) {", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_START: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_START:", "+\t\t\t\t\t\tif (event.end < charCount) {", "+\t\t\t\t\t\t\tint start = event.start;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.end = event.start;", "+\t\t\t\t\t\t\tevent.start = start;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_END: ", "+\t\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_END:", "+\t\t\t\t\t\tif (0 < event.start) {", "+\t\t\t\t\t\t\tint end = event.end;", "+\t\t\t\t\t\t\tevent.start = eventStart;", "+\t\t\t\t\t\t\tevent.end = eventEnd;", "+\t\t\t\t\t\t\tevent.count = -2;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tevent.start = event.end;", "+\t\t\t\t\t\t\tevent.end = end;", "+\t\t\t\t\t\t\tevent.type = ACC.TEXT_BOUNDARY_ALL;", "+\t\t\t\t\t\t\tevent.count = 0;", "+\t\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\t\tAccessibleTextExtendedListener listener = (AccessibleTextExtendedListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\t\tlistener.getText(event);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}"]}], "num": 21692}