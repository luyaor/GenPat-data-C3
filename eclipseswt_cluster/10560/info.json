{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19c2d9232b723928cdf08aa37ecee1c6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2575350f4cdf792559015e808435b1d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "4a612b2956f61d263eac63e0666a4682bcad134f", "commitAfterChange": "e0cab416a57c67e62a8bf049b1140825d3427f4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void addObjectReferences()", "signatureAfterChange": " protected void addObjectReferences()", "diff": ["-\tobjIOleObject.SetClientSite(iOleClientSite.getAddress());", "+\t/*", "+\t * Although the clientSite was passed in during the creation of OleObject", "+\t * (which is required by WMP11 - see bug 173556), some applications ignore this", "+\t * parameter (see bug 211663) because it is optional during the OleCreate. ", "+\t * To ensure that we don't set the clientSite twice, we will not set the clientSite", "+\t * again if it's already defined.", "+\t */", "+\tint /*long*/[] ppvClientSite = new int /*long*/[1];", "+\tresult = objIOleObject.GetClientSite(ppvClientSite);", "+\tif (ppvClientSite[0] == 0) {", "+\t\tobjIOleObject.SetClientSite(iOleClientSite.getAddress());", "+\t} else {", "+\t\tRelease(); // GetClientSite performs an AddRef so we must release it.", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49f703ce2e7a153a2a77e94bb1bbbf6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "53eaef42c85a19c6c024eb953b35f15c33827e05", "commitAfterChange": "e8c16f7f9f6a3f2c095dfd48e874b4e7a9e7e851", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 202, "signatureBeforeChange": "\r void handleResize(Event event)", "signatureAfterChange": "\r void handleResize(Event event)", "diff": ["+\tint oldWidth = clientAreaWidth;\r", "+\tclientAreaWidth = getClientArea().width;\r", "+\tif (wordWrap) {\r", "+\t    if (oldWidth != clientAreaWidth) {\t\r", "+\t    \twordWrapResize(oldWidth);\r", "+\t    }\r", "+\t}\r", "+\telse\r", "-\t\tcontentWidth.calculate(oldBottomIndex, newItemCount);\r", "+\t\tlineCache.calculate(oldBottomIndex, newItemCount);\r"]}], "num": 10560}