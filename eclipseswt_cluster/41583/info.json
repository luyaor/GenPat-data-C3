{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31afc7d672661b0d606f7abeb235ffd9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a5d3de3de78f8af397a3ba9b8460ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6c571f280411fc445f34e980e8c2976b8fe68f01", "commitAfterChange": "6cf794a3c06bc05a5dd8a9263ec63f5b57d24e35", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void flushExposes ()", "signatureAfterChange": "  void flushExposes (int window, boolean all)", "diff": ["-void flushExposes () {", "+void flushExposes (int /*long*/ window, boolean all) {", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tXExposeEvent exposeEvent = new XExposeEvent ();", "+\t\tthis.flushWindow = window;", "+\t\tthis.flushAll = all;", "-\t\twhile (OS.XCheckMaskEvent (xDisplay, OS.ExposureMask, xEvent)) {", "-\t\t\tOS.memmove (exposeEvent, xEvent, XExposeEvent.sizeof);", "-\t\t\trect.x = exposeEvent.x;", "-\t\t\trect.y = exposeEvent.y;", "-\t\t\trect.width = exposeEvent.width;", "-\t\t\trect.height = exposeEvent.height;", "-\t\t\tint /*long*/ window = OS.gdk_window_lookup (exposeEvent.window);", "-\t\t\tif (window != 0) OS.gdk_window_invalidate_rect (window, rect, true);", "-\t\t}", "+\t\tOS.XCheckIfEvent (xDisplay, xEvent, checkIfEventProc, 0);", "+\t\tthis.flushWindow = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23b31d822d49d2ffee4b2e7588b535e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6f96d56c7cd19d74c17065bbf64753fa69960b72", "commitAfterChange": "bd5b351fe534e402a9d915ddf0f09b599f7de489", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "  void flushExposes ()", "signatureAfterChange": "  void flushExposes (int window, boolean all)", "diff": ["-void flushExposes () {", "+void flushExposes (int /*long*/ window, boolean all) {", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tXExposeEvent exposeEvent = new XExposeEvent ();", "+\t\tthis.flushWindow = window;", "+\t\tthis.flushAll = all;", "-\t\twhile (OS.XCheckMaskEvent (xDisplay, OS.ExposureMask, xEvent)) {", "-\t\t\tOS.memmove (exposeEvent, xEvent, XExposeEvent.sizeof);", "-\t\t\trect.x = exposeEvent.x;", "-\t\t\trect.y = exposeEvent.y;", "-\t\t\trect.width = exposeEvent.width;", "-\t\t\trect.height = exposeEvent.height;", "-\t\t\tint /*long*/ window = OS.gdk_window_lookup (exposeEvent.window);", "-\t\t\tif (window != 0) OS.gdk_window_invalidate_rect (window, rect, true);", "-\t\t}", "+\t\tOS.XCheckIfEvent (xDisplay, xEvent, checkIfEventProc, 0);", "+\t\tthis.flushWindow = 0;"]}], "num": 41583}