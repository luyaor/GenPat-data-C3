{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e99981fba555e4795e5c6161b05b234d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c46e660136a5ef270cf3c9fd280e71", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Color.java", "commitBeforeChange": "d85f5b11f9243f8d45cd2901d872cb6aab624f0c", "commitAfterChange": "ffae1fdb23ec45b36825b4e8feca4489d9a7197f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test_hashCode()", "signatureAfterChange": "  public void test_hashCode()", "diff": ["-\tfinal Color color = new Color(display, 12, 34, 56);", "+\tColor color = new Color(display, 12, 34, 56);", "-\ttry {", "-\t\tif (color.equals(otherColor)) {", "-\t\t\tassertEquals(\"Hash codes of equal objects should be equal\", color.hashCode(), otherColor.hashCode());", "-\t\t}", "-\t\ttestPerformance(new Runnable () {", "-\t\t\tpublic void run() {", "-\t\t\t\tcolor.hashCode();", "-\t\t\t}", "-\t\t});", "-\t} finally {", "-\t\tcolor.dispose();", "-\t\totherColor.dispose();", "+\tif (color.equals(otherColor)) {", "+\t\tassertEquals(\"Hash codes of equal objects should be equal\", color.hashCode(), otherColor.hashCode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1138fceab42e2e9b084ae2c78b47661", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Color.java", "commitBeforeChange": "d85f5b11f9243f8d45cd2901d872cb6aab624f0c", "commitAfterChange": "ffae1fdb23ec45b36825b4e8feca4489d9a7197f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void test_getRGB()", "signatureAfterChange": "  public void test_getRGB()", "diff": ["-\tfinal Color color = new Color(display, 255, 255, 255);", "-\ttry {", "-\t\tassertNotNull(color.getRGB());", "-\t\tassertEquals(new RGB(255, 255, 255), color.getRGB());", "-\t\ttestPerformance(new Runnable () {", "-\t\t\tpublic void run() {", "-\t\t\t\tcolor.getRGB();", "-\t\t\t}", "-\t\t});", "-\t} finally {", "-\t\tcolor.dispose();", "-\t}", "+\tColor color = new Color(display, 255, 255, 255);", "+\tassertNotNull(color.getRGB());", "+\tassertEquals(new RGB(255, 255, 255), color.getRGB());"]}], "num": 32581}