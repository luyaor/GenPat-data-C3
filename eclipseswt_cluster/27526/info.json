{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc897c556c60c81adf54a2481255ae1b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016d8659ceca4ba9a08966746cbd29bb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void hookEvents ()", "signatureAfterChange": "  void hookEvents ()", "diff": ["-void hookEvents () {", "-\tsuper.hookEvents ();", "-\tif ((style & SWT.SEPARATOR) != 0) return;", "-\tDisplay display = getDisplay ();", "-\tint windowProc2 = display.windowProc2;", "-\tint windowProc3 = display.windowProc3;", "-\tOS.g_signal_connect (handle, OS.clicked, windowProc2, SWT.Selection);", "-\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, SWT.MouseEnter);", "-\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, SWT.MouseExit);", "-", "-\t/*", "-\t * Feature in GTK.", "-\t * Usually, GTK widgets propagate all events to their parent when they", "-\t * are done their own processing.  However, in contrast to other widgets,", "-\t * the buttons that make up the tool items, do not propagate the mouse", "-\t * up/down events.", "-\t * (It is interesting to note that they DO propagate mouse motion events.)", "-\t */", "-\tint mask =", "-\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "-\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "-\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "-\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "-\t\tOS.GDK_FOCUS_CHANGE_MASK;", "-\tOS.gtk_widget_add_events (handle, mask);", "-\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, SWT.MouseDown);", "-\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, SWT.MouseUp);", "-}", "+", "+void hookEvents () {", "+\tsuper.hookEvents ();", "+\tif ((style & SWT.SEPARATOR) != 0) return;", "+\tDisplay display = getDisplay ();", "+\tint windowProc2 = display.windowProc2;", "+\tint windowProc3 = display.windowProc3;", "+\tOS.g_signal_connect (handle, OS.clicked, windowProc2, CLICKED);", "+\tOS.g_signal_connect (handle, OS.enter_notify_event, windowProc3, ENTER_NOTIFY_EVENT);", "+\tOS.g_signal_connect (handle, OS.leave_notify_event, windowProc3, LEAVE_NOTIFY_EVENT);", "+", "+\t/*", "+\t * Feature in GTK.", "+\t * Usually, GTK widgets propagate all events to their parent when they", "+\t * are done their own processing.  However, in contrast to other widgets,", "+\t * the buttons that make up the tool items, do not propagate the mouse", "+\t * up/down events.", "+\t * (It is interesting to note that they DO propagate mouse motion events.)", "+\t */", "+\tint mask =", "+\t\tOS.GDK_EXPOSURE_MASK | OS.GDK_POINTER_MOTION_MASK |", "+\t\tOS.GDK_BUTTON_PRESS_MASK | OS.GDK_BUTTON_RELEASE_MASK | ", "+\t\tOS.GDK_ENTER_NOTIFY_MASK | OS.GDK_LEAVE_NOTIFY_MASK | ", "+\t\tOS.GDK_KEY_PRESS_MASK | OS.GDK_KEY_RELEASE_MASK |", "+\t\tOS.GDK_FOCUS_CHANGE_MASK;", "+\tOS.gtk_widget_add_events (handle, mask);", "+\tOS.g_signal_connect (handle, OS.button_press_event, windowProc3, BUTTON_PRESS_EVENT);", "+\tOS.g_signal_connect (handle, OS.button_release_event, windowProc3, BUTTON_RELEASE_EVENT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878a11e5425137b19ce50e2d473a4a7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "048d529d336f06e973e7e8e656f0475e40428db2", "commitAfterChange": "18c50fd92034053fc24485017fc05531d603a01d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CTabFolder2(Composite parent, int style)", "signatureAfterChange": " public CTabFolder2(Composite parent, int style)", "diff": ["-\tselectionForeground = display.getSystemColor(SWT.COLOR_TITLE_FOREGROUND);", "-\tselectionBackground = display.getSystemColor(SWT.COLOR_TITLE_BACKGROUND);", "-\tborderColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);", "-\tsetForeground(display.getSystemColor(SWT.COLOR_TITLE_INACTIVE_FOREGROUND));", "-\tsetBackground(display.getSystemColor(SWT.COLOR_TITLE_INACTIVE_BACKGROUND));", "+\tselectionForeground = display.getSystemColor(SELECTION_FOREGROUND);", "+\tselectionBackground = display.getSystemColor(SELECTION_BACKGROUND);", "+\tborderColor = display.getSystemColor(BORDER_COLOR);", "+\tsetForeground(display.getSystemColor(FOREGROUND));", "+\tsetBackground(display.getSystemColor(BACKGROUND));"]}], "num": 27526}