{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6bba6825da7795cb9c665695802e229", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d011e5b8299ff9ea876c17c9b15f47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Download.java", "commitBeforeChange": "33e28eebdecca667c8eddf0dda11d4395124d824", "commitAfterChange": "b52ca2bdf41a4bba7beb24ac0d20ba09ccb243ce", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public int Init(int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aPersist)", "signatureAfterChange": " public int Init(int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aPersist)", "diff": ["-\tsource.GetHost(aSpec);", "+\tint rc = source.GetHost(aSpec);", "+\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tnsILocalFile target = new nsILocalFile(aTarget);", "-\tint /*long*/ aNativeTarget = XPCOM.nsEmbedCString_new();", "-\ttarget.GetNativeLeafName(aNativeTarget);", "-\tlength = XPCOM.nsEmbedCString_Length(aNativeTarget);", "-\tbuffer = XPCOM.nsEmbedCString_get(aNativeTarget);", "-\tdest = new byte[length];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aNativeTarget);", "-\tString file = new String(dest);", "-\t", "+\t/*", "+\t* As of mozilla 1.7 the second argument of the nsIDownload interface's ", "+\t* Init function changed from nsILocalFile to nsIURI.  Detect which of", "+\t* these interfaces the second argument implements and act accordingly.  ", "+\t*/", "+\tString filename = null;", "+\tnsISupports supports = new nsISupports(aTarget);", "+\tint /*long*/[] result = new int /*long*/[1];", "+\trc = supports.QueryInterface(nsIURI.NS_IURI_IID, result);", "+\tif (rc == 0) {\t/* >= 1.7 */", "+\t\tnsIURI target = new nsIURI(result[0]);", "+\t\tresult[0] = 0;", "+\t\tint /*long*/ aPath = XPCOM.nsEmbedCString_new();", "+\t\trc = target.GetPath(aPath);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tlength = XPCOM.nsEmbedCString_Length(aPath);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aPath);", "+\t\tdest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aPath);", "+\t\tfilename = new String(dest);", "+\t\tint separator = filename.lastIndexOf(System.getProperty(\"file.separator\"));\t//$NON-NLS-1$", "+\t\tfilename = filename.substring(separator + 1);", "+\t\ttarget.Release();", "+\t} else {\t/* < 1.7 */", "+\t\tnsILocalFile target = new nsILocalFile(aTarget);", "+\t\tint /*long*/ aNativeTarget = XPCOM.nsEmbedCString_new();", "+\t\trc = target.GetNativeLeafName(aNativeTarget);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tlength = XPCOM.nsEmbedCString_Length(aNativeTarget);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aNativeTarget);", "+\t\tdest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aNativeTarget);", "+\t\tfilename = new String(dest);", "+\t}", "+", "-\tString msg = Compatibility.getMessage(\"SWT_Download_File\", new Object[] {file});", "+\tString msg = Compatibility.getMessage(\"SWT_Download_File\", new Object[] {filename}); //$NON-NLS-1$", "-\tmsg = Compatibility.getMessage(\"SWT_Download_Location\", new Object[] {file, url});\t", "+\tmsg = Compatibility.getMessage(\"SWT_Download_Location\", new Object[] {filename, url}); //$NON-NLS-1$", "-\tmsg = Compatibility.getMessage(\"SWT_Download_Started\");\t", "+\tmsg = Compatibility.getMessage(\"SWT_Download_Started\"); //$NON-NLS-1$", "-\tcancel.setText(SWT.getMessage(\"SWT_Cancel\"));", "+\tcancel.setText(SWT.getMessage(\"SWT_Cancel\")); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28af7948f2b6341f43a241d501743c61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Download.java", "commitBeforeChange": "fa9e8850e4ffa67d5a9822f39154f193309ae6c5", "commitAfterChange": "dc3b37dd3939bff381ddf74be1db387c65cc7eb3", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public int Init(int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aPersist)", "signatureAfterChange": " public int Init(int aSource, int aTarget, int aDisplayName, int aMIMEInfo, int startTime1, int startTime2, int aPersist)", "diff": ["-\tsource.GetHost(aSpec);", "+\tint rc = source.GetHost(aSpec);", "+\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "-\tnsILocalFile target = new nsILocalFile(aTarget);", "-\tint aNativeTarget = XPCOM.nsEmbedCString_new();", "-\ttarget.GetNativeLeafName(aNativeTarget);", "-\tlength = XPCOM.nsEmbedCString_Length(aSpec);", "-\tbuffer = XPCOM.nsEmbedCString_get(aSpec);", "-\tdest = new byte[length];", "-\tXPCOM.memmove(dest, buffer, length);", "-\tXPCOM.nsEmbedCString_delete(aNativeTarget);", "-\tString file = new String(dest);", "-\t", "+\t/*", "+\t* As of mozilla 1.7 the second argument of the nsIDownload interface's ", "+\t* Init function changed from nsILocalFile to nsIURI.  Detect which of", "+\t* these interfaces the second argument implements and act accordingly.  ", "+\t*/", "+\tString filename = null;", "+\tnsISupports supports = new nsISupports(aTarget);", "+\tint [] result = new int [1];", "+\trc = supports.QueryInterface(nsIURI.NS_IURI_IID, result);", "+\tif (rc == 0) {\t/* >= 1.7 */", "+\t\tnsIURI target = new nsIURI(result[0]);", "+\t\tresult[0] = 0;", "+\t\tint aPath = XPCOM.nsEmbedCString_new();", "+\t\trc = target.GetPath(aPath);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tlength = XPCOM.nsEmbedCString_Length(aPath);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aPath);", "+\t\tdest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aPath);", "+\t\tfilename = new String(dest);", "+\t\tint separator = filename.lastIndexOf(System.getProperty(\"file.separator\"));\t//$NON-NLS-1$", "+\t\tfilename = filename.substring(separator + 1);", "+\t\ttarget.Release();", "+\t} else {\t/* < 1.7 */", "+\t\tnsILocalFile target = new nsILocalFile(aTarget);", "+\t\tint aNativeTarget = XPCOM.nsEmbedCString_new();", "+\t\trc = target.GetNativeLeafName(aNativeTarget);", "+\t\tif (rc != XPCOM.NS_OK) Browser.error(rc);", "+\t\tlength = XPCOM.nsEmbedCString_Length(aNativeTarget);", "+\t\tbuffer = XPCOM.nsEmbedCString_get(aNativeTarget);", "+\t\tdest = new byte[length];", "+\t\tXPCOM.memmove(dest, buffer, length);", "+\t\tXPCOM.nsEmbedCString_delete(aNativeTarget);", "+\t\tfilename = new String(dest);", "+\t}", "+", "-\tString msg = Compatibility.getMessage(\"SWT_Download_File\", new Object[] {file});", "+\tString msg = Compatibility.getMessage(\"SWT_Download_File\", new Object[] {filename}); //$NON-NLS-1$", "-\tmsg = Compatibility.getMessage(\"SWT_Download_Location\", new Object[] {file, url});\t", "+\tmsg = Compatibility.getMessage(\"SWT_Download_Location\", new Object[] {filename, url}); //$NON-NLS-1$", "-\tmsg = Compatibility.getMessage(\"SWT_Download_Started\");\t", "+\tmsg = Compatibility.getMessage(\"SWT_Download_Started\"); //$NON-NLS-1$", "-\tcancel.setText(SWT.getMessage(\"SWT_Cancel\"));", "+\tcancel.setText(SWT.getMessage(\"SWT_Cancel\")); //$NON-NLS-1$"]}], "num": 54156}