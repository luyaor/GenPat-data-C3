{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57ced132af05c3d4ab3805bb6d3b52a6", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fda6aab5dda4f4523adf3329cb70f80", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "f4abd83d57d77245094f225bf96065fc437b4479", "commitAfterChange": "8ab0cb1a59e576205e88d233b12556089108ede1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Rectangle computeTrim(int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle computeTrim(int x, int y, int width, int height)", "diff": ["-//\tPMRect pageRect = new PMRect();", "-//\tPMRect paperRect = new PMRect();", "-//\tOS.PMGetAdjustedPageRect(pageFormat, pageRect);", "-//\tOS.PMGetAdjustedPaperRect(pageFormat, paperRect);", "-//\treturn new Rectangle(x+(int)paperRect.left, y+(int)paperRect.top, width+(int)(paperRect.right-pageRect.right), height+(int)(paperRect.bottom-pageRect.bottom));", "-\treturn null;", "+\tNSSize paperSize = printInfo.paperSize();", "+\tNSRect bounds = printInfo.imageablePageBounds();", "+\tx -= bounds.x;", "+\ty -= bounds.y;", "+\twidth += paperSize.width - bounds.width;", "+\theight += paperSize.height - bounds.height;", "+\treturn new Rectangle(x, y, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "395c39b12cebaa4d97d5b73fa11b50f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "2d17f57ac903f54029532c75b2167d639791a452", "commitAfterChange": "3f40366a943605922c1277c5d17602a9e3318911", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-//\tCGRect oldBounds = new CGRect (), bounds = oldBounds;", "-//\tOS.HIViewGetFrame (handle, oldBounds);", "-//\tint MIN_SIZE = 100;", "-//\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-//\t\tOS.HIViewSetDrawingEnabled (handle, false);", "-//\t\tbounds = new CGRect ();", "-//\t\tbounds.width = bounds.height = 100;", "-//\t\tOS.HIViewSetFrame (handle, bounds);", "-//\t}", "-//\tRect client = new Rect ();", "-//\tOS.GetTabContentRect (handle, client);", "-//\tif (oldBounds.width < MIN_SIZE || oldBounds.height < MIN_SIZE) {", "-//\t\tOS.HIViewSetFrame (handle, oldBounds);", "-//\t\tOS.HIViewSetDrawingEnabled (handle, drawCount == 0);", "-//\t}", "-//\tx -= client.left;", "-//\ty -= client.top;", "-//\twidth += (int) bounds.width - (client.right - client.left);", "-//\theight += (int) bounds.height - (client.bottom - client.top);", "-//\tRect inset = getInset ();", "-//\tx -= inset.left;", "-//\ty -= inset.top;", "-//\twidth += inset.left + inset.right;", "-//\theight += inset.top + inset.bottom;", "-//\treturn new Rectangle (-client.left, -client.top, width, height);", "-\treturn super.computeTrim(x, y, width, height);", "+\tNSTabView widget = (NSTabView)view;", "+\tNSRect rect = widget.contentRect ();", "+\tx -= rect.x; y -= rect.y;", "+\twidth += Math.ceil (rect.x); height += Math.ceil (rect.y);", "+\treturn super.computeTrim (x, y, width, height);"]}], "num": 11765}