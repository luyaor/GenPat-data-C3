{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ed39ee7051c64e8be4c2074f5af0de7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb9e4ca564c79dd1972824bfe77234d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void subtract(int x, int y, int width, int height)", "signatureAfterChange": " public void subtract(int x, int y, int width, int height)", "diff": ["-\tint /*long*/ rectRgn = OS.NewRgn();", "-\tshort[] r = new short[4];", "-\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "-\tOS.RectRgn(rectRgn, r);", "-\tOS.DiffRgn(handle, rectRgn, handle);", "-\tOS.DisposeRgn(rectRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ rectRgn = OS.NewRgn();", "+\t\tshort[] r = new short[4];", "+\t\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "+\t\tOS.RectRgn(rectRgn, r);", "+\t\tOS.DiffRgn(handle, rectRgn, handle);", "+\t\tOS.DisposeRgn(rectRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c628aa347dda63f2772cd7b0719cd5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void add(int x, int y, int width, int height)", "signatureAfterChange": " public void add(int x, int y, int width, int height)", "diff": ["-\tint /*long*/ rectRgn = OS.NewRgn();", "-\tshort[] r = new short[4];", "-\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "-\tOS.RectRgn(rectRgn, r);", "-\tOS.UnionRgn(handle, rectRgn, handle);", "-\tOS.DisposeRgn(rectRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ rectRgn = OS.NewRgn();", "+\t\tshort[] r = new short[4];", "+\t\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "+\t\tOS.RectRgn(rectRgn, r);", "+\t\tOS.UnionRgn(handle, rectRgn, handle);", "+\t\tOS.DisposeRgn(rectRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09220a48d487f90f477574fcb8ac98d9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Region.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void intersect(int x, int y, int width, int height)", "signatureAfterChange": " public void intersect(int x, int y, int width, int height)", "diff": ["-\tint /*long*/ rectRgn = OS.NewRgn();", "-\tshort[] r = new short[4];", "-\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "-\tOS.RectRgn(rectRgn, r);", "-\tOS.SectRgn(handle, rectRgn, handle);", "-\tOS.DisposeRgn(rectRgn);", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tint /*long*/ rectRgn = OS.NewRgn();", "+\t\tshort[] r = new short[4];", "+\t\tOS.SetRect(r, (short)x, (short)y, (short)(x + width),(short)(y + height));", "+\t\tOS.RectRgn(rectRgn, r);", "+\t\tOS.SectRgn(handle, rectRgn, handle);", "+\t\tOS.DisposeRgn(rectRgn);", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e081366c7f6765896ca11dcd8f0c6202", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\tNSBitmapImageRep rep = imageRep;", "-\tif (imageRep.hasAlpha()) {", "-\t\tint bpr = width * 4;", "-\t\trep = (NSBitmapImageRep)new NSBitmapImageRep().alloc();", "-\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "-\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "-\t\tdata.bitmapDataAddress = OS.malloc(C.PTR_SIZEOF);", "-\t\tOS.memmove(data.bitmapDataAddress, new int /*long*/[] {bitmapData}, C.PTR_SIZEOF);", "-\t\trep = rep.initWithBitmapDataPlanes(data.bitmapDataAddress, width, height, 8, 3, false, false, OS.NSDeviceRGBColorSpace, OS.NSAlphaFirstBitmapFormat , bpr, 32);", "-\t\trep.autorelease();", "-\t}", "-\thandle.setCacheMode(OS.NSImageCacheNever);", "-\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(rep);", "-\tNSGraphicsContext.setCurrentContext(context);", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tNSSize size = handle.size();", "-\ttransform.translateXBy(0, size.height);", "-\ttransform.scaleXBy(1, -1);", "-\ttransform.set();", "-\tif (data != null) {", "-\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;", "-\t\tif ((data.style & mask) == 0) {", "-\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSBitmapImageRep rep = imageRep;", "+\t\tif (imageRep.hasAlpha()) {", "+\t\t\tint bpr = width * 4;", "+\t\t\trep = (NSBitmapImageRep)new NSBitmapImageRep().alloc();", "+\t\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "+\t\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "+\t\t\tdata.bitmapDataAddress = OS.malloc(C.PTR_SIZEOF);", "+\t\t\tOS.memmove(data.bitmapDataAddress, new int /*long*/[] {bitmapData}, C.PTR_SIZEOF);", "+\t\t\trep = rep.initWithBitmapDataPlanes(data.bitmapDataAddress, width, height, 8, 3, false, false, OS.NSDeviceRGBColorSpace, OS.NSAlphaFirstBitmapFormat , bpr, 32);", "+\t\t\trep.autorelease();", "-\t\tdata.device = device;", "-\t\tdata.background = device.COLOR_WHITE.handle;", "-\t\tdata.foreground = device.COLOR_BLACK.handle;", "-\t\tdata.font = device.systemFont;", "-\t\tdata.image = this;", "+\t\thandle.setCacheMode(OS.NSImageCacheNever);", "+\t\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(rep);", "+\t\tNSGraphicsContext.setCurrentContext(context);", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tNSSize size = handle.size();", "+\t\ttransform.translateXBy(0, size.height);", "+\t\ttransform.scaleXBy(1, -1);", "+\t\ttransform.set();", "+\t\tif (data != null) {", "+\t\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;", "+\t\t\tif ((data.style & mask) == 0) {", "+\t\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;", "+\t\t\t}", "+\t\t\tdata.device = device;", "+\t\t\tdata.background = device.COLOR_WHITE.handle;", "+\t\t\tdata.foreground = device.COLOR_BLACK.handle;", "+\t\t\tdata.font = device.systemFont;", "+\t\t\tdata.image = this;", "+\t\t}", "+\t\treturn context.id;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\treturn context.id;"]}], "num": 33578}