{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57fd925fc6974ccac94d8dae4b831a20", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0697173a26bf9c2e00acd4c8357935bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "e8895346ff5ef8d6945118b0500a5ea19f74ca22", "commitAfterChange": "b2738a28cb5231d346c6c5441b6e2379f19da0e4", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 91, "signatureBeforeChange": "  void setTXNText (int iStartOffset, int iEndOffset, String string)", "signatureAfterChange": "  void setTXNText (int iStartOffset, int iEndOffset, String string)", "diff": ["-\tint length = string.length ();", "+\tchar [] text = new char [string.length()];", "+\tstring.getChars (0, text.length, text, 0);", "+\tsetTXNText (iStartOffset, iEndOffset, text);", "+}", "-\tchar [] buffer = new char [length];", "-\tstring.getChars (0, buffer.length, buffer, 0);", "-\tOS.TXNSetData (txnObject, OS.kTXNUnicodeTextData, buffer, buffer.length * 2, iStartOffset, iEndOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "188cf71c0265787ad3711cdfec2dc593", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6c4a2c166738e67832efca98869d4a51c06db92b", "commitAfterChange": "84d56fe220646f29848300da6bc168504ddc3a77", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public Rectangle getImageBounds (int index)", "signatureAfterChange": " public Rectangle getImageBounds (int index)", "diff": ["-public Rectangle getImageBounds (int index) {\r", "-\tcheckWidget ();\r", "-\tint CELL_SPACING = 1;\r", "-\tint clist = parent.handle;\r", "-\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);\r", "-\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;\r", "-\tGtkCListColumn column = new GtkCListColumn ();\r", "-\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);\r", "-\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;\r", "-\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);\r", "-\tint row = parent.indexOf (this);\r", "-\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);\r", "-\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;\r", "-\tint width = 0;\r", "-\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {\r", "-\t\tint [] pixmap = new int [1];\r", "-\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);\r", "-\t\tif (pixmap [0] != 0) {\r", "-\t\t\tint [] w = new int [1], h = new int [1];\r", "-\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);\r", "-\t\t\twidth = w [0];\r", "-\t\t}\r", "-\t}\r", "-\treturn new Rectangle (x, y, width, height);\r", "-}\r", "+public Rectangle getImageBounds (int index) {", "+\tcheckWidget ();", "+\t// FIXME - images not implemented yet", "+\treturn new Rectangle(0,0,0,0);", "+/*\tint CELL_SPACING = 1;", "+\tint clist = parent.handle;", "+\tint columnHandle = OS.GTK_CLIST_COLUMN (clist);", "+\tcolumnHandle= columnHandle + index * GtkCListColumn.sizeof;", "+\tGtkCListColumn column = new GtkCListColumn ();", "+\tOS.memmove (column, columnHandle, GtkCListColumn.sizeof);", "+\tint x = column.area_x + OS.GTK_CLIST_HOFFSET (clist) + 1;", "+\tint height = OS.GTK_CLIST_ROW_HEIGHT (clist);", "+\tint row = parent.indexOf (this);", "+\tint headerHeight = OS.GTK_CLIST_COLUMN_TITLE_AREA_HEIGHT (clist);", "+\tint y = headerHeight + OS.GTK_CLIST_VOFFSET (clist) + (height + CELL_SPACING) * row + 3;", "+\tint width = 0;", "+\tif (!(index == 0 && (parent.style & SWT.CHECK) != 0)) {", "+\t\tint [] pixmap = new int [1];", "+\t\tOS.gtk_clist_get_pixtext (clist, row, index, null, null, pixmap, null);", "+\t\tif (pixmap [0] != 0) {", "+\t\t\tint [] w = new int [1], h = new int [1];", "+\t\t\tOS.gdk_drawable_get_size (pixmap [0], w, h);", "+\t\t\twidth = w [0];", "+\t\t}", "+\t}", "+\treturn new Rectangle (x, y, width, height);*/", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84728bb3bfa0e3140edcea7ed6ef789b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d8c7ac1c238569192a4106f29243a448a4e0192d", "commitAfterChange": "1c8d6d064e4a8a70316f776a21806c7dda140423", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void setOrientation (int orientation)", "signatureAfterChange": " public void setOrientation (int orientation)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t\tcheckWidget();", "-\t\tint flags = SWT.RIGHT_TO_LEFT | SWT.LEFT_TO_RIGHT;", "-\t\tif ((orientation & flags) == 0 || (orientation & flags) == flags) return;", "-\t\tstyle &= ~flags;", "-\t\tstyle |= orientation & flags;", "-\t\tint dir = (orientation & SWT.RIGHT_TO_LEFT) != 0 ? OS.GTK_TEXT_DIR_RTL : OS.GTK_TEXT_DIR_LTR;", "-\t\tOS.gtk_widget_set_direction (fixedHandle, dir);", "-\t\tOS.gtk_widget_set_direction (handle, dir);", "-\t\tif (entryHandle != 0) OS.gtk_widget_set_direction (entryHandle, dir);", "-\t\tif (listHandle != 0) {", "-\t\t\tOS.gtk_widget_set_direction (listHandle, dir);", "-\t\t\tint /*long*/ itemsList = OS.gtk_container_get_children (listHandle);", "-\t\t\tif (itemsList != 0) {", "-\t\t\t\tint count = OS.g_list_length (itemsList);", "-\t\t\t\tfor (int i=count - 1; i>=0; i--) {", "-\t\t\t\t\tint /*long*/ widget = OS.gtk_bin_get_child (OS.g_list_nth_data (itemsList, i));", "-\t\t\t\t\tOS.gtk_widget_set_direction (widget, dir);", "-\t\t\t\t}", "-\t\t\t\tOS.g_list_free (itemsList);", "-\t\t\t}", "-\t\t}", "-\t\tif (cellHandle != 0) OS.gtk_widget_set_direction (cellHandle, dir);", "-\t\tif (popupHandle != 0) OS.gtk_container_forall (popupHandle, display.setDirectionProc, dir);", "-\t}", "+\tsuper.setOrientation (orientation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb66785a2af38f5603e0bcada731393", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "e49d876ec140d7ebc28625e48df185a92ae2e105", "commitAfterChange": "f387cedab0a11fb8c290dcad92bd0503c5f0facb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t} else {", "-\t\thandle = OS.gtk_combo_new ();", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_container_add (fixedHandle, handle);", "-\t\tGtkCombo combo = new GtkCombo ();", "-\t\tOS.memmove (combo, handle);", "-\t\tentryHandle = combo.entry;", "-\t\tlistHandle = combo.list;", "-\t\t", "-\t\tif (OS.GTK_VERSION < OS.VERSION (2, 4, 0)) {", "-\t\t\tint /*long*/ parentHandle = 0;", "-\t\t\tint /*long*/ temp = listHandle;", "-\t\t\twhile ((temp = OS.gtk_widget_get_parent(temp)) != 0) {", "-\t\t\t\tparentHandle = temp;", "-\t\t\t}", "-\t\t\tpopupHandle = parentHandle;", "-\t\t\tif (popupHandle != 0) {", "-\t\t\t\tint /*long*/ modalGroup = getShell().modalGroup;", "-\t\t\t\tif (modalGroup != 0) {", "-\t\t\t\t\tOS.gtk_window_group_add_window (modalGroup, popupHandle);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\t/*", "-\t\t* Feature in GTK.  There is no API to query the arrow", "-\t\t* handle from a combo box although it is possible to", "-\t\t* get the list and text field.  The arrow handle is needed", "-\t\t* to hook events.  The fix is to find the first child that is", "-\t\t* not the entry or list and assume this is the arrow handle.", "-\t\t*/", "-\t\tint /*long*/ list = OS.gtk_container_get_children (handle);", "-\t\tif (list != 0) {", "-\t\t\tint i = 0, count = OS.g_list_length (list);", "-\t\t\twhile (i<count) {", "-\t\t\t\tint /*long*/ childHandle = OS.g_list_nth_data (list, i);", "-\t\t\t\tif (childHandle != entryHandle && childHandle != listHandle) {", "-\t\t\t\t\tbuttonHandle = childHandle;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\ti++;", "-\t\t\t}", "-\t\t\tOS.g_list_free (list);", "-\t\t}", "-\t\t", "-\t\tboolean editable = (style & SWT.READ_ONLY) == 0;", "-\t\tOS.gtk_editable_set_editable (entryHandle, editable);", "-\t\tOS.gtk_combo_disable_activate (handle);", "-\t\tOS.gtk_combo_set_case_sensitive (handle, true);", "-\t}"]}], "num": 38024}