{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "420247e2b4b5993d5ed8be482167590a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b377e6325f7b770e84452f1d2f8eacfa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 227, "signatureBeforeChange": " \tStyledTextEvent getLineStyleData(StyledTextEvent event, int lineOffset, String line)", "signatureAfterChange": " void paintObject (GC gc, int x, int y, int ascent, int descent, GlyphMetrics metrics, int start, int length)", "diff": ["-\t */", "-\tStyledTextEvent getLineStyleData(StyledTextEvent event, int lineOffset, String line) {", "-\t\tif (event.styles != null && getWordWrap()) {", "-\t\t\tevent.styles = getVisualLineStyleData(event.styles, lineOffset, line.length());", "-\t\t}", "-\t\tif (event.styles == null) {", "-\t\t\tevent.styles = new StyleRange[0];", "-\t\t}", "-\t\treturn event;", "-\t}", "+}", "+void paintObject (GC gc, int x, int y, int ascent, int descent, GlyphMetrics metrics, int start, int length) {", "+\tif (isListening(PaintObject)) {", "+\t\tStyledTextEvent event = new StyledTextEvent (content) ;", "+\t\tevent.gc = gc;", "+\t\tevent.x = x;", "+\t\tevent.y = y;", "+\t\tevent.ascent = ascent;", "+\t\tevent.descent = descent;", "+\t\tevent.metrics = metrics;", "+//\t\tevent.bullet = bullet;\t\t", "+\t\tevent.start = start;", "+\t\tevent.length = length;", "+\t\tnotifyListeners(PaintObject, event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cab3b6709663c46912018916798ef84", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/DefaultContent.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r public void replaceTextRange(int start, int replaceLength, String newText)", "signatureAfterChange": "\r public void replaceTextRange(int start, int replaceLength, String newText)", "diff": ["-\tStyledTextEvent event = new StyledTextEvent(this);\r", "-\tevent.type = StyledText.TextReplaced;\r", "-\tevent.start = start;\r", "-\tevent.replacedLineCount = lineCount(start, replaceLength);\r", "-\tevent.text = getTextRange(start, replaceLength);\r", "-\r", "-\t// first delete the text to be replaced\r", "-\tdelete(start, replaceLength, event.replacedLineCount + 1);\r", "-\t// then insert the new text\r", "-\tinsert(start, newText);\r", "-\t\t\r", "-\tevent.newLineCount = lineCount(start, newText.length());\r", "-\tevent.replacedCharCount = replaceLength;\r", "+\tStyledTextEvent event = new StyledTextEvent(this);\r", "+\tevent.type = StyledText.TextChanging;\r", "+\tevent.start = start;\r", "+\tevent.replaceLineCount = lineCount(start, replaceLength);\r", "+\tevent.text = newText;\r", "+\tevent.newLineCount = lineCount(newText);\r", "+\tevent.replaceCharCount = replaceLength;\r", "+\r", "+\t// first delete the text to be replaced\r", "+\tdelete(start, replaceLength, event.replaceLineCount + 1);\r", "+\t// then insert the new text\r", "+\tinsert(start, newText);\r", "+\t// inform listeners\r", "+\tevent = new StyledTextEvent(this);\r", "+\tevent.type = StyledText.TextChanged;\r", "+\tsendTextEvent(event);\t\t\r"]}], "num": 10931}