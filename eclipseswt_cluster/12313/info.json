{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be400e4d3b7799bdf1daf5dda1f5ba80", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1a9bb2ef1c8562e09f870a8d4a114af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef785e65c5666e705660b195ef7d2da7b6c1f35c", "commitAfterChange": "1571b21a3b1e60f5ff0c7a9bc19396983f515d5e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  static int[] init(Device device, Image image, ImageData i)", "signatureAfterChange": "  static int[] init(Device device, Image image, ImageData i)", "diff": ["-\t\tint newBpl = i.bytesPerLine + (4 - (i.bytesPerLine % 4));", "-\t\tbyte[] newData = new byte[i.height * newBpl];", "-\t\tint srcPtr = 0;", "-\t\tint destPtr = 0;", "-\t\tfor (int y = 0; y < i.height; y++) {", "-\t\t\tSystem.arraycopy(data, srcPtr, newData, destPtr, i.bytesPerLine);", "-\t\t\tsrcPtr += i.bytesPerLine;", "-\t\t\tdestPtr += newBpl;", "-\t\t}", "-\t\tdata = newData;", "+\t\tdata = ImageData.convertPad(data, i.width, i.height, i.depth, i.scanlinePad, 4);", "-//\t\tint hHeap = OS.GetProcessHeap();", "-//\t\tint bmBits = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, i.maskData.length);", "-//\t\tOS.MoveMemory(bmBits, i.maskData, i.maskData.length);", "-//\t\tBITMAP bm = new BITMAP();", "-//\t\tbm.bmWidth = i.width;", "-//\t\tbm.bmHeight = i.height;", "-//\t\tbm.bmWidthBytes = (((i.width + 7) / 8) + 3) / 4 * 4;", "-//\t\tbm.bmPlanes = 1;", "-//\t\tbm.bmBitsPixel = 1;", "-//\t\tbm.bmBits = bmBits;", "-//\t\tint hMask = OS.CreateBitmapIndirect(bm);", "-//\t\tOS.HeapFree(hHeap, 0, bmBits);", "+\t\tbyte[] maskData = ImageData.convertPad(i.maskData, i.width, i.height, 1, i.maskPad, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c752c193d494f1ae33abf2cc4f6815", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef785e65c5666e705660b195ef7d2da7b6c1f35c", "commitAfterChange": "1571b21a3b1e60f5ff0c7a9bc19396983f515d5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\t\tint desiredScanline = (width + 7) / 8;", "-\t\t\t\tdesiredScanline = desiredScanline + (desiredScanline % 2);", "-\t\t\t\tint realScanline = imageSize / height;", "-\t\t\t\tif (realScanline != desiredScanline) {", "-\t\t\t\t\tbyte[] newData = new byte[desiredScanline * height];", "-\t\t\t\t\tint srcIndex = 0;", "-\t\t\t\t\tint destIndex = 0;", "-\t\t\t\t\tfor (int i = 0; i < height; i++) {", "-\t\t\t\t\t\tSystem.arraycopy(maskData, srcIndex, newData, destIndex, desiredScanline);", "-\t\t\t\t\t\tdestIndex += desiredScanline;", "-\t\t\t\t\t\tsrcIndex += realScanline;", "-\t\t\t\t\t}", "-\t\t\t\t\tmaskData = newData;", "+\t\t\t\tint maskPad;", "+\t\t\t\tint bpl = imageSize / height;", "+\t\t\t\tfor (maskPad = 1; maskPad < 128; maskPad++) {", "+\t\t\t\t\tint calcBpl = (((width + 7) / 8) + (maskPad - 1)) / maskPad * maskPad;", "+\t\t\t\t\tif (calcBpl == bpl) break;", "+\t\t\t\tmaskData = ImageData.convertPad(maskData, width, height, 1, maskPad, 2);", "-//\t\t\timageData.maskPad = 4;"]}], "num": 12313}