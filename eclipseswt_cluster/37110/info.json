{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8d739225dca6afb80fee1946534b4c8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f233f1ab7cab850b3046b7c6551e58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "c4f3dc85f0ccec5c74cb285cf4a25fdd845a37f7", "commitAfterChange": "8226320c2212f07bb2da2ffd0edd37cc6d5d025c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void add (String string, int index)", "signatureAfterChange": " public void add (String string, int index)", "diff": ["-\tsetItems (newItems, true, true);", "+\titems = newItems;", "+\t/*", "+\t* Feature in GTK. When the list is empty and the first item", "+\t* is added, the combo box selects that item replacing the", "+\t* text in the entry field.  The fix is to avoid this by", "+\t* stopping the \"delete\" and \"insert_text\" signal emission. ", "+\t*/", "+\tignoreSelect = lockText = true;", "+\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);", "+\tint /*long*/ item = OS.gtk_list_item_new_with_label (buffer);", "+\tint /*long*/ label = OS.gtk_bin_get_child (item); ", "+\tOS.gtk_widget_modify_fg (label, OS.GTK_STATE_NORMAL, getForegroundColor ());", "+\tOS.gtk_widget_modify_font (label, getFontDescription ());", "+\tOS.gtk_widget_show (item);", "+\tint /*long*/ items = OS.g_list_append (0, item);", "+\tOS.gtk_list_insert_items (listHandle, items, index);", "+\tignoreSelect = lockText = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8aa318fb28865e9682670796ff04ad06", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "17797d5695fc4b4c462782a783009ec18b38e55f", "commitAfterChange": "2a563f0809450c5238b12edee28a6a031cc8566d", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tOS.SendEventToEventTarget (theEvent, OS.GetControlEventTarget (handle));", "-\t\treturn OS.noErr;", "+\t\tControl focusControl = display.getFocusControl ();", "+\t\tint focusHandle = focusHandle ();", "+\t\tint window = OS.GetControlOwner (focusHandle);", "+\t\tdisplay.ignoreFocus = true;", "+\t\tOS.SetKeyboardFocus (window, focusHandle, (short) focusPart ());", "+\t\tdisplay.ignoreFocus = false;", "+\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tfocusHandle = focusControl.focusHandle ();", "+\t\twindow = OS.GetControlOwner (focusHandle);", "+\t\tdisplay.ignoreFocus = true;", "+\t\tOS.SetKeyboardFocus (window, focusHandle, (short) focusControl.focusPart ());", "+\t\tdisplay.ignoreFocus = false;"]}], "num": 37110}