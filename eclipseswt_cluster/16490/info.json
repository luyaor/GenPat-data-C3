{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "181f74e0a6f6c58fff6bdb1eeed3fe78", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1197625fbc33b1bbe19e8f62081b42a8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "eb67f2c6e29498837f2808cbf8605b4ae090f4cd", "commitAfterChange": "c0eab291930878b5b0686e9f1e20996a4f2d6348", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "signatureAfterChange": "  \tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras)", "diff": ["+", "+\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "+\t\tString name = node.getNodeName();", "+\t\tif (name.equals(\"#text\")) return null;", "+\t\tTreeItem parentItem = null;", "+\t\tTreeItem[] items = superItem.getItems();", "+\t\tfor (int i = 0; i < items.length; i++) {", "+\t\t\tif (name.equals(items[i].getData())) {", "+\t\t\t\tparentItem = items[i];", "+\t\t\t\tbreak;", "+\t\tif (parentItem == null) {", "+\t\t\tparentItem = new TreeItem(superItem, SWT.NONE);", "+\t\t\tparentItem.setData(name);", "+\t\t\tparentItem.setText(getPrettyText(name));", "+\t\t}", "+\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\tTreeItem item = new TreeItem(parentItem, SWT.NONE);", "+\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "+\t\titem.setText(text);", "+\t\tNode extra = (Node)extras.get(getKey(node));", "+\t\tif (extra != null) {", "+\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "+\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "+\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "+\t\t\t\titem.setChecked(true);", "+\t\t\t}", "+\t\t}", "+\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "+\t\t\tNode attrib = attributes.item(i);", "+\t\t\ttext = attrib.getNodeName();", "+\t\t\tif (attrib.equals(nameAttrib)) continue;", "+\t\t\tint columnIndex = getColumnFor(text);", "+\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "+\t\t}", "+\t\tNodeList childNodes = node.getChildNodes();", "+\t\tfor (int i = 0; i < childNodes.getLength(); i++) {", "+\t\t\taddChild(childNodes.item(i), item, extras);", "+\t\t}", "+\t\treturn item;", "-\t", "-\tTreeItem addChild (Node node, TreeItem superItem, Hashtable extras) {", "-\t\tString name = node.getNodeName();", "-\t\tif (name.equals(\"#text\")) return null;", "-\t\tTreeItem parentItem = null;", "-\t\tTreeItem[] items = superItem.getItems();", "-\t\tfor (int i = 0; i < items.length; i++) {", "-\t\t\tif (name.equals(items[i].getData())) {", "-\t\t\t\tparentItem = items[i];", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}", "-\t\tif (parentItem == null) {", "-\t\t\tparentItem = new TreeItem(superItem, SWT.NONE);", "-\t\t\tparentItem.setData(name);", "-\t\t\tparentItem.setText(getPrettyText(name));", "-\t\t}", "-\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\tTreeItem item = new TreeItem(parentItem, SWT.NONE);", "-\t\tNode nameAttrib = getNameAttrib(attributes);", "-\t\tString text = nameAttrib != null ? nameAttrib.getNodeValue() : name;", "-\t\titem.setText(text);", "-\t\tNode extra = (Node)extras.get(getKey(node));", "-\t\tif (extra != null) {", "-\t\t\tNamedNodeMap extraAttributes = extra.getAttributes();", "-\t\t\tNode gen = extraAttributes.getNamedItem(\"swt_gen\");", "-\t\t\tif (gen != null && gen.getNodeValue().equals(\"true\")) {", "-\t\t\t\titem.setChecked(true);", "-\t\t\t}", "-\t\t}", "-\t\tfor (int i = 0; i < attributes.getLength(); i++) {", "-\t\t\tNode attrib = attributes.item(i);", "-\t\t\ttext = attrib.getNodeName();", "-\t\t\tif (attrib.equals(nameAttrib)) continue;", "-\t\t\tint columnIndex = getColumnFor(text);", "-\t\t\titem.setText(columnIndex, attrib.getNodeValue());", "-\t\t}", "-\t\tNodeList childNodes = node.getChildNodes();", "-\t\tfor (int i = 0; i < childNodes.getLength(); i++) {", "-\t\t\taddChild(childNodes.item(i), item, extras);", "-\t\t}", "-\t\treturn item;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1ef77617af486e096e02d1924ca863a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "eb67f2c6e29498837f2808cbf8605b4ae090f4cd", "commitAfterChange": "c0eab291930878b5b0686e9f1e20996a4f2d6348", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tString getKey (Node node)", "signatureAfterChange": " \t \tString getKey (Node node)", "diff": ["-\t", "-\tString getKey (Node node) {", "-\t\tStringBuffer buffer = new StringBuffer();", "-\t\twhile (node != null) {", "-\t\t\tif (buffer.length() > 0) buffer.append(\"_\");", "-\t\t\tString name = node.getNodeName();", "-\t\t\tStringBuffer key = new StringBuffer(name);", "-\t\t\tNamedNodeMap attributes = node.getAttributes();", "-\t\t\tNode nameAttrib = getNameAttrib(attributes);", "-\t\t\tif (nameAttrib != null) {", "-\t\t\t\tkey.append(\"-\");", "-\t\t\t\tkey.append(nameAttrib.getNodeValue());", "-\t\t\tbuffer.append(key.reverse());", "-\t\t\tnode = node.getParentNode();", "-\t\tbuffer.reverse();", "-\t\treturn buffer.toString();", "+\tString getKey (Node node) {", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\twhile (node != null) {", "+\t\t\tif (buffer.length() > 0) buffer.append(\"_\");", "+\t\t\tString name = node.getNodeName();", "+\t\t\tStringBuffer key = new StringBuffer(name);", "+\t\t\tNamedNodeMap attributes = node.getAttributes();", "+\t\t\tNode nameAttrib = getNameAttribute(attributes);", "+\t\t\tif (nameAttrib != null) {", "+\t\t\t\tkey.append(\"-\");", "+\t\t\t\tkey.append(nameAttrib.getNodeValue());", "+\t\t\t}", "+\t\t\tbuffer.append(key.reverse());", "+\t\t\tnode = node.getParentNode();", "+\t\t}", "+\t\tbuffer.reverse();", "+\t\treturn buffer.toString();", "+\t}"]}], "num": 16490}