{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcd369488ef81b78fc536865890ffdbf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b9674ecf2d00f059d61b581d539dfb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "977d5e0f203ec4ef6c7d327c6fb00fb7e3a9fea1", "commitAfterChange": "d90c1dac39bb5b1c9da1307d0ac9b1f40b093e4c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void doArrowDown(int stateMask)", "signatureAfterChange": " void doArrowDown(int stateMask)", "diff": ["-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\tint newFocusIndex = focusItem.availableIndex + 1;", "-\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "-\t\tselectItem(availableItems[newFocusIndex], false);", "-\t\tsetFocusItem(availableItems[newFocusIndex], true);", "-\t\tEvent newEvent = new Event();", "-\t\tnewEvent.item = this;", "-\t\tsendEvent(SWT.Selection, newEvent);", "-\t\tshowItem(availableItems[newFocusIndex]);", "-\t\tredrawItem(newFocusIndex);", "-\t\treturn;", "-\t}", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "-\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "-\t\t\ttopIndex++;", "-\t\t\tgetVerticalBar().setSelection(topIndex);", "-\t\t\tredraw();", "-\t\t\treturn;", "-\t\t} else {", "+\tif ((stateMask & SWT.SHIFT) == 0) {", "+\t\tanchorItem = null;", "+\t\tif ((stateMask & SWT.CTRL) == 0) {", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\tint visibleItemCount = (getClientArea().height - getHeaderHeight()) / itemHeight;", "+\t\t\tif (availableItems.length <= topIndex + visibleItemCount) return;\t/* at bottom */", "+\t\t\ttopIndex++;", "+\t\t\tgetVerticalBar().setSelection(topIndex);", "+\t\t\tRectangle clientArea = getClientArea();", "+\t\t\tGC gc = new GC(this);", "+\t\t\tgc.copyArea(", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose();", "+\t\t\treturn;", "+\t\t}", "+\t\tint newFocusIndex = focusItem.availableIndex + 1;", "+\t\tif (newFocusIndex == availableItems.length) return; \t/* at bottom */", "+\t\tselectItem(availableItems[newFocusIndex], false);", "+\t\tsetFocusItem(availableItems[newFocusIndex], true);", "+\t\tEvent newEvent = new Event();", "+\t\tnewEvent.item = this;", "+\t\tsendEvent(SWT.Selection, newEvent);", "+\t\tshowItem(availableItems[newFocusIndex]);", "+\t\tredrawItem(newFocusIndex);", "+\t\treturn;", "+\t}", "-\t\t\tredraw();", "-\t\t\treturn;", "-\t\t} else {", "-\t\t\tint focusIndex = focusItem.availableIndex; ", "-\t\t\tif (focusIndex == availableItems.length - 1) return;\t/* at bottom */", "-\t\t\tTreeItem2 newFocusItem = availableItems[focusIndex + 1];", "-\t\t\tsetFocusItem(newFocusItem, true);", "-\t\t\tshowItem(newFocusItem);", "-\t\t\tredrawItem(newFocusItem.availableIndex);", "+\t\t\tRectangle clientArea = getClientArea();", "+\t\t\tGC gc = new GC(this);", "+\t\t\tgc.copyArea(", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, -itemHeight);", "+\t\t\tgc.dispose();", "-\t} else {", "-\t\t// TODO study Shift behaviour", "+\t\tint focusIndex = focusItem.availableIndex; ", "+\t\tif (focusIndex == availableItems.length - 1) return;\t/* at bottom */", "+\t\tTreeItem2 newFocusItem = availableItems[focusIndex + 1];", "+\t\tsetFocusItem(newFocusItem, true);", "+\t\tshowItem(newFocusItem);", "+\t\tredrawItem(newFocusItem.availableIndex);", "+\t\treturn;", "+\t// TODO implement Shift behaviour"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667f9ccc8f2fbe7a0d6b379d59ed20e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "977d5e0f203ec4ef6c7d327c6fb00fb7e3a9fea1", "commitAfterChange": "d90c1dac39bb5b1c9da1307d0ac9b1f40b093e4c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void doArrowUp(int stateMask)", "signatureAfterChange": " void doArrowUp(int stateMask)", "diff": ["-}", "-void doArrowUp(int stateMask) {", "-\tif ((stateMask & (SWT.CTRL | SWT.SHIFT)) == 0) {", "-\t\tint newFocusIndex = focusItem.availableIndex - 1;", "-\t\tif (newFocusIndex < 0) return; \t\t/* at top */", "-\t\tTreeItem2 item = availableItems[newFocusIndex];", "-\t\tselectItem(item, false);", "-\t\tsetFocusItem(item, true);", "-\t\tEvent newEvent = new Event();", "-\t\tnewEvent.item = item;", "-\t\tsendEvent(SWT.Selection, newEvent);", "-\t\tshowItem(item);", "-\t\tredrawItem(newFocusIndex);", "-\tif ((style & SWT.SINGLE) != 0) {", "-\t\tif ((stateMask & SWT.CTRL) != 0) {", "-\t\t\tif (topIndex == 0) return;\t/* at top */", "-\t\t\ttopIndex--;", "-\t\t\tgetVerticalBar().setSelection(topIndex);", "-\t\t\tredraw();", "-\t\t\treturn;", "-\t\t} else {", "+}", "+void doArrowUp(int stateMask) {", "+\tif ((stateMask & SWT.SHIFT) == 0) {", "+\t\tanchorItem = null;", "+\t\tif ((stateMask & SWT.CTRL) == 0) {", "-\t\t\tif (newFocusIndex < 0) return; \t/* at top */", "+\t\t\tif (newFocusIndex < 0) return; \t\t/* at top */", "+\tif ((style & SWT.SINGLE) != 0) {", "+\t\tif ((stateMask & SWT.CTRL) != 0) {", "+\t\t\tif (topIndex == 0) return;\t/* at top */", "+\t\t\ttopIndex--;", "+\t\t\tgetVerticalBar().setSelection(topIndex);", "+\t\t\tRectangle clientArea = getClientArea();", "+\t\t\tGC gc = new GC(this);", "+\t\t\tgc.copyArea(", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose();", "+\t\t\treturn;", "+\t\t}", "+\t\tint newFocusIndex = focusItem.availableIndex - 1;", "+\t\tif (newFocusIndex < 0) return; \t/* at top */", "+\t\tTreeItem2 item = availableItems[newFocusIndex];", "+\t\tselectItem(item, false);", "+\t\tsetFocusItem(item, true);", "+\t\tEvent newEvent = new Event();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent(SWT.Selection, newEvent);", "+\t\tshowItem(item);", "+\t\tredrawItem(newFocusIndex);", "+\t\treturn;", "+\t}", "-\t\t\tredraw();", "-\t\t\treturn;", "-\t\t} else {", "-\t\t\tint focusIndex = focusItem.availableIndex; ", "-\t\t\tif (focusIndex == 0) return;\t/* at top */", "-\t\t\tTreeItem2 newFocusItem = availableItems[focusIndex - 1];", "-\t\t\tsetFocusItem(newFocusItem, true);", "-\t\t\tshowItem(newFocusItem);", "-\t\t\tredrawItem(newFocusItem.availableIndex);", "+\t\t\tRectangle clientArea = getClientArea();", "+\t\t\tGC gc = new GC(this);", "+\t\t\tgc.copyArea(", "+\t\t\t\t0, 0,", "+\t\t\t\tclientArea.width, clientArea.height,", "+\t\t\t\t0, itemHeight);", "+\t\t\tgc.dispose();", "-\t} else {", "-\t\t// TODO study Shift behaviour", "+\t\tint focusIndex = focusItem.availableIndex; ", "+\t\tif (focusIndex == 0) return;\t/* at top */", "+\t\tTreeItem2 newFocusItem = availableItems[focusIndex - 1];", "+\t\tsetFocusItem(newFocusItem, true);", "+\t\tshowItem(newFocusItem);", "+\t\tredrawItem(newFocusItem.availableIndex);", "+\t\treturn;", "+\t// TODO implement Shift behaviour"]}], "num": 12867}