{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb8d85577ca6d659a895f108fb02049f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "933780c660f2ec7e24ee70b059724eff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  void drawBackground (int control)", "signatureAfterChange": "  void drawBackground (int control, int context)", "diff": ["-void drawBackground (int control) {", "+void drawBackground (int control, int context) {", "-\t\tdrawBackground (control, background);", "+\t\tdrawBackground (control, context, background);", "-\t\tdrawBackground (control, getParentBackground ());", "+\t\tdrawBackground (control, context, getParentBackground ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df2eda81cecbeb8612c763dbdb6249c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void drawBackground (int control)", "signatureAfterChange": "  void drawBackground (int control, int context)", "diff": ["-void drawBackground (int control) {", "+void drawBackground (int control, int context) {", "-\t\t\tdrawFocus (control, hasFocus () && drawFocusRing (), hasBorder (), getParentBackground (), inset ());", "+\t\t\tdrawFocus (control, context, hasFocus () && drawFocusRing (), hasBorder (), getParentBackground (), inset ());", "-\t\t\t\tdrawFocus (control, false, hasBorder (), getParentBackground (), inset ());", "+\t\t\t\tdrawFocus (control, context, false, hasBorder (), getParentBackground (), inset ());", "-\t\t\t\tdrawBackground (control, getParentBackground ());", "+\t\t\t\tdrawBackground (control, context, getParentBackground ());", "-\t\t\t\tdrawBackground (control, background);", "+\t\t\t\tdrawBackground (control, context, background);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e41a90ff46ce2f55bdb0fd009739d0e1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "ec8960d36877aff58d08e83377fabc6a66250574", "commitAfterChange": "4029846f0a5f45522a5aa4494326a707d1f15273", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " boolean translateMnemonic (int key, XKeyEvent xEvent)", "signatureAfterChange": " boolean translateMnemonic (char key, int keysym, XKeyEvent xEvent)", "diff": ["-boolean translateMnemonic (int key, XKeyEvent xEvent) {", "-\treturn parent.translateMnemonic (key, xEvent);", "+boolean translateMnemonic (char key, int keysym, XKeyEvent xEvent) {", "+\treturn parent.translateMnemonic (key, keysym, xEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "014f341c5ed7a7f48e4be9bedeaec56f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/accessibility/gtk/ATK.java", "commitBeforeChange": "7b284503d08592dbddb77a19eb2de58b2bbcf267", "commitAfterChange": "589c806f733b6f17cd797f8efe22263b138d8cd1", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public static final long call (long function, long arg0, long arg1, long arg2, long arg3)", "signatureAfterChange": " public static final long call (long function, long arg0, long arg1, long arg2, long arg3, long arg4)", "diff": ["-public static final native long /*int*/ _call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3);", "-public static final long /*int*/ call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3) {", "-\tlock.lock();", "-\ttry {", "-\t\treturn _call(function, arg0, arg1, arg2, arg3);", "-\t} finally {", "-\t\tlock.unlock();", "-\t}", "-}"]}], "num": 7085}