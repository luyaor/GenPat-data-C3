{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "752c6b4e27d3b38bc189a6310a04c48c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9e37cce347e824cf8dcaf0c56678cb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "7c255c33f088ef04ac6271863f814fd0cde593d4", "commitAfterChange": "31b7e14bceda4eac6e74ea4bd2865b1d0782034c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  boolean sendGestureEvent (GESTUREINFO gi)", "signatureAfterChange": "  boolean sendGestureEvent (GESTUREINFO gi)", "diff": ["-\tPOINT screenLoc = new POINT();", "-\tscreenLoc.x = gi.x;", "-\tscreenLoc.y = gi.y;", "-\tOS.MapWindowPoints (0, gi.hwndTarget, screenLoc, 1);", "-\tevent.x = screenLoc.x;", "-\tevent.y = screenLoc.y;", "-\t", "-\tswitch (gi.dwID){", "+\tPOINT point = new POINT ();", "+\tpoint.x = gi.x;", "+\tpoint.y = gi.y;", "+\tOS.MapWindowPoints (0, gi.hwndTarget, point, 1);", "+\tevent.x = point.x;", "+\tevent.y = point.y;", "+\tswitch (gi.dwID) {", "-\t\t\tint fingerDistance = OS.LODWORD(gi.ullArguments);", "+\t\t\tint fingerDistance = OS.LODWORD (gi.ullArguments);", "-\t\t\t// gi.ullArguments is the distance between the fingers. Scale factor is relative", "-\t\t\t// to that original value.", "+\t\t\t/*", "+\t\t\t* The gi.ullArguments is the distance between the fingers. ", "+\t\t\t* Scale factor is relative to that original value.", "+\t\t\t*/", "-\t\t\t\tdisplay.lastX = screenLoc.x;", "-\t\t\t\tdisplay.lastY = screenLoc.y;", "+\t\t\t\tdisplay.lastX = point.x;", "+\t\t\t\tdisplay.lastY = point.y;", "-", "-\t\t\tif (display.lastX == screenLoc.x && display.lastY == screenLoc.y && event.detail == SWT.GESTURE_PAN) return false;", "-\t\t\t", "-\t\t\tevent.xDirection = screenLoc.x - display.lastX;", "-\t\t\tevent.yDirection = screenLoc.y - display.lastY;", "-", "-\t\t\tdisplay.lastX = screenLoc.x;", "-\t\t\tdisplay.lastY = screenLoc.y;\t\t\t", "+\t\t\tif (display.lastX == point.x && display.lastY == point.y && event.detail == SWT.GESTURE_PAN) return false;", "+\t\t\tevent.xDirection = point.x - display.lastX;", "+\t\t\tevent.yDirection = point.y - display.lastY;", "+\t\t\tdisplay.lastX = point.x;", "+\t\t\tdisplay.lastY = point.y;\t\t\t", "-\t\t\tdouble rotationInRadians = OS.GID_ROTATE_ANGLE_FROM_ARGUMENT(OS.LODWORD(gi.ullArguments));", "+\t\t\tdouble rotationInRadians = OS.GID_ROTATE_ANGLE_FROM_ARGUMENT (OS.LODWORD (gi.ullArguments));", "-\t\t\t// Feature in Win32: Rotation events are sent even when the fingers are at rest.", "-\t\t\t// If the current rotation is the same as the last one received don't send the event.", "+\t\t\t/*", "+\t\t\t* Feature in Win32. Rotation events are sent even when the fingers are at rest.", "+\t\t\t* If the current rotation is the same as the last one received don't send the event.", "+\t\t\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d75554b364985de713ad52012cfd217", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tif (OS.HIVIEW) {", "-\t\t\tCGPoint pt = new CGPoint ();", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "-\t\t\tOS.HIViewConvertPoint (pt, 0, handle);", "-\t\t\tCGRect rect = new CGRect ();", "-\t\t\tOS.HIViewGetBounds (handle, rect);", "-\t\t\tint x = (int) pt.x;", "-\t\t\tint width = (int) rect.width;", "-\t\t\tif (width - x < 12) {", "-\t\t\t\tOS.HIViewConvertPoint (pt, handle, parent.handle);", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.detail = SWT.ARROW;", "-\t\t\t\tevent.x = (int) pt.x;", "-\t\t\t\tevent.y = (int) pt.y;", "-\t\t\t\tpostEvent (SWT.Selection, event);\t\t\t\t", "-\t\t\t}", "-\t\t} else {", "-\t\t\tint sizeof = org.eclipse.swt.internal.carbon.Point.sizeof;", "-\t\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, sizeof, null, pt);", "-\t\t\tRect rect = new Rect ();", "-\t\t\tint window = OS.GetControlOwner (handle);", "-\t\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "-\t\t\tint x = pt.h - rect.left;", "-\t\t\tint y = pt.v - rect.top;", "-\t\t\tOS.GetControlBounds (handle, rect);", "-\t\t\tx -= rect.left;", "-\t\t\ty -= rect.top;", "-\t\t\tint width = rect.right - rect.left;", "-\t\t\tif (width - x < 12) {", "-\t\t\t\tx = rect.left;", "-\t\t\t\ty = rect.bottom;", "-\t\t\t\tOS.GetControlBounds (parent.handle, rect);", "-\t\t\t\tx -= rect.left;", "-\t\t\t\ty -= rect.top;", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.detail = SWT.ARROW;", "-\t\t\t\tevent.x = x;", "-\t\t\t\tevent.y = y;", "-\t\t\t\tpostEvent (SWT.Selection, event);", "-\t\t\t}", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamWindowMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\tOS.HIViewConvertPoint (pt, 0, handle);", "+\t\tCGRect rect = new CGRect ();", "+\t\tOS.HIViewGetBounds (handle, rect);", "+\t\tint x = (int) pt.x;", "+\t\tint width = (int) rect.width;", "+\t\tif (width - x < 12) {", "+\t\t\tOS.HIViewConvertPoint (pt, handle, parent.handle);", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.detail = SWT.ARROW;", "+\t\t\tevent.x = (int) pt.x;", "+\t\t\tevent.y = (int) pt.y;", "+\t\t\tpostEvent (SWT.Selection, event);\t\t\t\t"]}], "num": 20197}