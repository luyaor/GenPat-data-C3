{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ab4e565df83ed43a636c685dee86bf2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f895bd3920c47a25267fd7ec2659b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "6f2458ace0a6f47ce0de64336c1150a04c7a0893", "commitAfterChange": "306bec7607b19121918a808335b7ecf61e93fdf9", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 114, "signatureBeforeChange": " void showToolTip (int x, int y)", "signatureAfterChange": " void showToolTip (int x, int y)", "diff": ["+}", "-\tfinal Shell tip = new Shell (getShell(), SWT.ON_TOP);", "-\tfinal Label label = new Label (tip, SWT.CENTER);", "-\tDisplay display = tip.getDisplay();", "-\tlabel.setForeground (display.getSystemColor (SWT.COLOR_INFO_FOREGROUND));", "-\tlabel.setBackground (display.getSystemColor (SWT.COLOR_INFO_BACKGROUND));", "-\t", "-\tif (!updateToolTip(x, y, label)) {", "-\t\ttip.dispose();", "-\t\treturn;", "-\t}", "-\t", "-\tfinal int [] events = new int[] {SWT.MouseExit, SWT.MouseHover, SWT.MouseMove, SWT.MouseDown, SWT.DragDetect};", "-\tfinal Listener[] listener = new Listener[1];", "-\tlistener[0] = new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tswitch (event.type) {", "-\t\t\t\tcase SWT.MouseHover:", "-\t\t\t\tcase SWT.MouseMove:", "-\t\t\t\t\tif (updateToolTip(event.x, event.y, label)) break;", "-\t\t\t\t\t// FALL THROUGH", "-\t\t\t\tcase SWT.MouseExit:", "-\t\t\t\tcase SWT.MouseDown:", "-\t\t\t\tcase SWT.DragDetect:", "-\t\t\t\t\tfor (int i = 0; i < events.length; i++) {", "-\t\t\t\t\t\tremoveListener(events[i], listener[0]);", "-\t\t\t\t\t}", "-\t\t\t\t\ttip.dispose();", "-\t\t\t\t\ttipShowing = false;", "-\t\t\t\t\tbreak;", "-\t\t\t}", "+\tif (toolTipShell == null) {", "+\t\ttoolTipShell = new Shell (getShell(), SWT.ON_TOP);", "+\t\ttoolTipLabel = new Label (toolTipShell, SWT.CENTER);", "+\t\tDisplay display = toolTipShell.getDisplay();", "+\t\ttoolTipLabel.setForeground (display.getSystemColor (SWT.COLOR_INFO_FOREGROUND));", "+\t\ttoolTipLabel.setBackground (display.getSystemColor (SWT.COLOR_INFO_BACKGROUND));", "+\t\tfor (int i = 0; i < toolTipEvents.length; i++) {", "+\t\t\taddListener(toolTipEvents[i], toolTipListener);", "-\t};", "-\tfor (int i = 0; i < events.length; i++) {", "-\t\taddListener(events[i], listener[0]);", "-\ttipShowing = true;", "-\ttip.setVisible(true);", "+\tif (updateToolTip(x, y)) {", "+\t\ttoolTipShell.setVisible(true);", "+\t} else {", "+\t\thideToolTip();", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32bfe4d7f9b951b1d19df45bc125031", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tid getSelectedAttribute(int childID)", "signatureAfterChange": "  \tid getSelectedAttribute(int childID)", "diff": ["+\t\t\tevent.row = index;", "-\t\t\t\tlistener.getSelectedRows(event);", "-\t\t\t}", "-\t\t\tif (event.accessibles != null) {", "-\t\t\t\tfor (int i = 0; i < event.accessibles.length; i++) {", "-\t\t\t\t\tif (this.equals(event.accessibles[i])) return NSNumber.numberWithBool(true);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < accessibleTableListeners.size(); i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener)accessibleTableListeners.elementAt(i);", "-\t\t\t\tlistener.getSelectedColumns(event);", "-\t\t\t}", "-\t\t\tif (event.accessibles != null) {", "-\t\t\t\tfor (int i = 0; i < event.accessibles.length; i++) {", "-\t\t\t\t\tif (this.equals(event.accessibles[i])) return NSNumber.numberWithBool(true);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (accessibleTableCellListeners.size() > 0) {", "-\t\t\tAccessibleTableCellEvent event = new AccessibleTableCellEvent(this);", "-\t\t\tfor (int i = 0; i < accessibleTableCellListeners.size(); i++) {", "-\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) accessibleTableCellListeners.elementAt(i);", "-\t\t\t\tlistener.isSelected(event);", "+\t\t\t\tif (currentRole == ACC.ROLE_ROW)", "+\t\t\t\t\tlistener.isRowSelected(event);", "+\t\t\t\telse", "+\t\t\t\t\tlistener.isColumnSelected(event);", "+"]}], "num": 55977}