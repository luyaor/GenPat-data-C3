{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11aa527bc10c286f8fcfdd9d8ce45711", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03079c87c61b80b5e4ac4085c982c947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "b8f9d45a80c733a8f5884af87c95e68f3463aaa7", "commitAfterChange": "e2ae18014fd9c71ab4dc0b52900b77c1d3a0f5b7", "methodNumberBeforeChange": 255, "methodNumberAfterChange": 256, "signatureBeforeChange": "\r int textWidth(String line, int lineIndex, int length, GC gc)", "signatureAfterChange": "\r int textWidth(String line, int lineIndex, int length, GC gc)", "diff": ["-\tStyledTextBidi bidi = null;\r", "-\tStyleRange[] styles = null;\r", "+\tint lineLength = line.length();\r", "+\tint width;\r", "+\tif (lineLength == 0 || length > lineLength) {\r", "+\t\treturn 0;\r", "+\t}\t\r", "-\t\tbidi = getStyledTextBidi(line, lineOffset, gc);\r", "+\t\tStyledTextBidi bidi = getStyledTextBidi(line, lineOffset, gc);\r", "+\t\twidth = bidiTextWidth(line, lineOffset, 0, length, 0, bidi);\r", "+\t\tStyleRange[] styles = null;\r", "+\t\twidth = textWidth(line, lineOffset, 0, length, styles, 0, gc);\r", "-\treturn textWidth(line, lineOffset, 0, length, styles, 0, gc, bidi);\r", "+\treturn width;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc55541e244115a29e443e378ecfdb99", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fcb5a81dd8d999d0ab1c8998aa4f1c59bb63fd92", "commitAfterChange": "418c2fc056a5c07b111193576f6beca66bf4b708", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " void realizeChildren ()", "signatureAfterChange": " void realizeChildren ()", "diff": ["-\tif (!isEnabled ()) propagateWidget (false);", "+\tif (isEnabled ()) {", "+\t\tif (cursor == null) return;", "+\t\tint xWindow = OS.XtWindow (handle);", "+\t\tif (xWindow == 0) return;", "+\t\tint xDisplay = OS.XtDisplay (handle);", "+\t\tif (xDisplay == 0) return;", "+\t\tOS.XDefineCursor (xDisplay, xWindow, cursor.handle);", "+\t} else {", "+\t\tpropagateWidget (false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314d092f460ed6731961b706ebf1f0b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "89eb385b1da972fcbe2914fa0139ceb359ab6ba8", "commitAfterChange": "f304fd949d33aeaf7168524a4af52e038b23993e", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": " boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["+\t\tif (redrawWindow != 0) {", "+\t\t\tint xDisplay = OS.XtDisplay (handle);", "+\t\t\tOS.XResizeWindow (xDisplay, redrawWindow, width, height);", "+\t\t}", "+\t\tif (redrawWindow != 0) {", "+\t\t\tint xDisplay = OS.XtDisplay (handle);", "+\t\t\tOS.XResizeWindow (xDisplay, redrawWindow, width, height);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d3142d92dd9f8ecf2e6f79ee40070f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "63e161b10dc0106c16ffca8958694af4bfe6a00c", "commitAfterChange": "f2942169481c1aa7117a54dd81fd6c15d5106057", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  void textDidChange (int id, int sel, int aNotification)", "signatureAfterChange": "  void textDidChange (int id, int sel, int aNotification)", "diff": ["+\tboolean [] parseFail = new boolean [1];", "+\tint value = getSelectionText (parseFail);", "+\tif (!parseFail [0]) {", "+\t\tint pos = (int)buttonView.doubleValue();", "+\t\tif (value != pos) {", "+\t\t\tsetSelection (value, true, false, true);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "551abf6cf96549f9e71fb66eb149596f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "1215228ca28cd877225ea2d6d4c5dd6eb8a8d47a", "commitAfterChange": "437b26428f10a35a326ef6b319e71308ad9cdb90", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void drawBand (int x, int y, int width, int height)", "signatureAfterChange": "  void drawBand (int x, int y, int width, int height)", "diff": ["-\tOS.PgSetRegion (OS.PtWidgetRid (parentHandle));", "+\tint disjoint = OS.PtFindDisjoint( handle );", "+\tif( disjoint != 0 )", "+\t\tOS.PgSetRegion( OS.PtWidgetRid( disjoint ) );", "+\tPhPoint_t pt = new PhPoint_t ();", "+\tPhRect_t tran_rect = new PhRect_t();", "+\tif (parentHandle <= 0) return; ", "+\tOS.PtWidgetOffset(parentHandle, pt);", "+\tOS.PgSetTranslation(pt,0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67b292ee0643aa2fec4929bea07e52f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "89eb385b1da972fcbe2914fa0139ceb359ab6ba8", "commitAfterChange": "f304fd949d33aeaf7168524a4af52e038b23993e", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "  void setZOrder (Control sibling, boolean above, boolean fixChildren)", "signatureAfterChange": "  void setZOrder (Control sibling, boolean above, boolean fixChildren)", "diff": ["-\t\tif (!OS.GDK_WINDOWING_X11 () || siblingWindow == 0) {", "+\t\tint /*long*/ redrawWindow = fixChildren ? parent.redrawWindow : 0;", "+\t\tif (!OS.GDK_WINDOWING_X11 () || (siblingWindow == 0 && redrawWindow == 0)) {", "+\t\t\t\t\tif (redrawWindow != 0) OS.gdk_window_raise (redrawWindow);", "-\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (siblingWindow);", "+\t\t\tchanges.sibling = OS.gdk_x11_drawable_get_xid (siblingWindow != 0 ? siblingWindow : redrawWindow);", "+\t\t\tif (redrawWindow != 0 && siblingWindow == 0) changes.stack_mode = OS.Below;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d30ca42db2ce01a5a2247dc505d0254", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "dcb05b149ce174d4f36debdf4d1b072d0af0778f", "commitAfterChange": "d35c548429be743d3d35a6e8bcce6749d4fb3811", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "  boolean sendKeyEvent (int type, int theEvent)", "signatureAfterChange": "  boolean sendKeyEvent (int type, int theEvent)", "diff": ["+\t\tint count = 0;", "-\t\tfor (int i = 0; i < chars.length; i++) {", "+\t\tfor (int i=0; i<chars.length; i++) {", "-\t\t\tsendKeyEvent (type, event);", "+\t\t\tif (sendKeyEvent (type, event)) chars [count++] = chars [i];", "+\t\t}", "+\t\tif (count == 0) return false;", "+\t\tif (count != chars.length - 1) {", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamKeyUnicodes, OS.typeUnicodeText, count * 2, chars);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "679ef6d90955664f5e4cbc3798f265a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "c01029f869b4bfb2ed8f6ef83d44c2a1a442a495", "commitAfterChange": "c8de18fa16457c62d0f36f3542b8cfbc820a61d2", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " protected void init ()", "signatureAfterChange": " protected void init ()", "diff": ["+", "+\t// Add AWT Runloop mode for SWT/AWT.", "+\tint /*long*/ cls = OS.objc_lookUpClass(\"JNFRunLoop\"); //$NON-NLS-1$", "+\tif (cls != 0) {", "+\t\tint /*long*/ mode = OS.objc_msgSend(cls, OS.sel_javaRunLoopMode);", "+\t\tif (mode != 0) {", "+\t\t\tOS.CFRunLoopAddObserver (OS.CFRunLoopGetCurrent (), runLoopObserver, mode);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d279c840d5ab71cdd0dc3268d3c10021", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "aafb08c90b5af9601ceeb98a1ca3da4cb0f0227d", "commitAfterChange": "0266340b6579da67330071af477922378d6c3365", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void remove (int [] indices)", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["+\tint itemCount = getItemCount() ;", "+\t\tif (index < 0 || index > itemCount -1) {", "+\t\t\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.g_free (iter);\t\t\t", "+\t\t\terror(SWT.ERROR_INVALID_RANGE);", "+\t\t}", "+\t\t\titemCount--;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55fcd7813411fbc2d7580bb38e057e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "1ed6e017318ca3de09b2840c45fb2e4dc1dfd857", "commitAfterChange": "b275691532da102f2915bcf30497b07b907d6359", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  void setClipping(int clipRgn)", "signatureAfterChange": "  void setClipping(int clipRgn)", "diff": ["+\tint gdipGraphics = data.gdipGraphics;", "-\t\tOS.GetWorldTransform(handle, xform);", "+\t\tif (gdipGraphics != 0) {", "+\t\t\tint matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tGdip.Graphics_GetTransform(gdipGraphics, matrix);", "+\t\t\tGdip.Matrix_GetElements(matrix, xform);", "+\t\t\tGdip.Matrix_delete(matrix);", "+\t\t} else {", "+\t\t\tOS.GetWorldTransform(handle, xform);", "+\t\t}", "-\tif (data.gdipGraphics != 0) {", "+\tif (gdipGraphics != 0) {", "-\t\t\tGdip.Graphics_SetClip(data.gdipGraphics, hRgn, Gdip.CombineModeReplace);", "+\t\t\tGdip.Graphics_SetClip(gdipGraphics, hRgn, Gdip.CombineModeReplace);", "-\t\t\tGdip.Graphics_ResetClip(data.gdipGraphics);", "+\t\t\tGdip.Graphics_ResetClip(gdipGraphics);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa4ac05eb6b7adc5c540b9c0504d84d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "3d7bf7c34b3c05d1d779850e440d8064d89a24f4", "commitAfterChange": "9ee9589555c00f9d69994f6d51c270c12db6297d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void set (int index, Image image)", "signatureAfterChange": "  void set (int index, Image image)", "diff": ["+\tint /*long*/ oldPixbuf = pixbufs [index];", "+\tif (oldPixbuf != 0) {", "+\t\tif (images [index] == image) {", "+\t\t\tOS.gdk_pixbuf_copy_area (pixbuf, 0, 0, width, height, oldPixbuf, 0, 0);", "+\t\t\tOS.g_object_unref (pixbuf);", "+\t\t\tpixbuf = oldPixbuf;", "+\t\t} else {", "+\t\t\tOS.g_object_unref (oldPixbuf);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d0fd62077f1d07f0e2d4546248a3b0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "c23adc24b1f4fda91d26a7368a25e81cf6992d24", "commitAfterChange": "e04fe81fc055957f35197cc91e90550b6e495f68", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public PrinterData open()", "signatureAfterChange": "\r public PrinterData open()", "diff": ["+\r", "+\r", "+\t\tint outputOffset = offsets[2];\r", "+\t\ti = 0;\r", "+\t\twhile (outputOffset + i < size) {\r", "+\t\t\tif (buffer.tcharAt(outputOffset + i) == 0) break;\r", "+\t\t\telse i++;\r", "+\t\t}\r", "+\t\tString output = buffer.toString(outputOffset, i);\r", "+\t\tdata.fileName = output;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef17af4380f5d6553e2a74fab26f4b10", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "b2efc2a73138acda642a0eba6be79c6f19695a7b", "commitAfterChange": "ccfb481a6e5aa3d494a91fc1a1e0ae8ad3c8aac4", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  int setDirectionProc (int widget, int direction)", "signatureAfterChange": "  int setDirectionProc (int widget, int direction)", "diff": ["+\tif (OS.GTK_IS_MENU_ITEM (widget)) {", "+\t\tint /*long*/ submenu = OS.gtk_menu_item_get_submenu (widget);", "+\t\tif (submenu != 0) {", "+\t\t\tOS.gtk_widget_set_direction (submenu, (int)/*64*/ direction);", "+\t\t\tOS.gtk_container_forall (submenu, setDirectionProc, direction);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a768a87960a6bea34e37f0e56ababd04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "08e849e9707f0c23d7990a935f94872942b8cdb1", "commitAfterChange": "f6c6f78414d4214f7ecda782b2d203f75e1d4029", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public Button getDefaultButton ()", "signatureAfterChange": "\r public Button getDefaultButton ()", "diff": ["-\treturn defaultButton;\r", "+\tint buttonHandle = OS.gtk_window_get_default(topHandle());\r", "+\tif (buttonHandle==0) return null;\r", "+\tWidget button = WidgetTable.get(buttonHandle);\r", "+\tif (!(button instanceof Button)) return null;\r", "+\treturn (Button)button;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47108720302609e3222d2f67607b4323", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 141, "signatureBeforeChange": " int getOffsetAtX(String line, int lineOffset, int lineXOffset)", "signatureAfterChange": " int getOffsetAtPoint(int x, int y)", "diff": ["- */", "-int getOffsetAtX(String line, int lineOffset, int lineXOffset) {", "-\tint x = lineXOffset - leftMargin + horizontalScrollOffset;", "-\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "-\tint[] trailing = new int[1];", "-\tint offsetInLine = layout.getOffset(x, 0, trailing);", "-\tadvancing = false;", "-\tif (trailing[0] != 0) {", "-\t\tint lineLength = line.length();", "-\t\tif (offsetInLine + trailing[0] >= lineLength) {", "-\t\t\toffsetInLine = lineLength;", "-\t\t\tadvancing = true;", "-\t\t} else {", "-\t\t\tint level;", "-\t\t\tint offset = offsetInLine;", "-\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "-\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "-\t\t\t\tlevel = isMirrored() ? 1 : 0;", "-\t\t\t} else {", "-\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "-\t\t\t}", "-\t\t\toffsetInLine += trailing[0];", "-\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "-\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "-\t\t}", "-\t}", "-\trenderer.disposeTextLayout(layout);", "-\treturn offsetInLine;", "+int getOffsetAtPoint(int x, int y) {", "+\tint lineIndex = getLineIndex(y);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tTextLayout layout = renderer.getTextLayout(lineIndex);", "+\tx += horizontalScrollOffset - leftMargin;", "+\ty -= getLinePixel(lineIndex);", "+\tint[] trailing = new int[1];", "+\tif (wordWrap) {", "+\t\t//TODO", "+\t}", "+\t", "+\tint offsetInLine = layout.getOffset(x, y, trailing);", "+\tadvancing = false;", "+\tif (trailing[0] != 0) {", "+\t\tint lineInParagraph = layout.getLineIndex(offsetInLine);", "+\t\tint lineLength;", "+\t\tif (lineInParagraph + 1 == layout.getLineCount()) {", "+\t\t\tlineLength = layout.getLineOffsets()[lineInParagraph + 1];", "+\t\t} else {", "+\t\t\tlineLength = Math.max(0, layout.getLineOffsets()[lineInParagraph + 1] - 1);", "+\t\t}", "+\t\tif (offsetInLine + trailing[0] >= lineLength) {", "+\t\t\toffsetInLine = lineLength;", "+\t\t\tadvancing = true;", "+\t\t} else {", "+\t\t\tString line = content.getLine(lineIndex);\t\t\t", "+\t\t\tint level;", "+\t\t\tint offset = offsetInLine;", "+\t\t\twhile (offset > 0 && Character.isDigit(line.charAt(offset))) offset--;", "+\t\t\tif (offset == 0 && Character.isDigit(line.charAt(offset))) {", "+\t\t\t\tlevel = isMirrored() ? 1 : 0;", "+\t\t\t} else {", "+\t\t\t\tlevel = layout.getLevel(offset) & 0x1;", "+\t\t\t}", "+\t\t\toffsetInLine += trailing[0];", "+\t\t\tint trailingLevel = layout.getLevel(offsetInLine) & 0x1;", "+\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "+\t\t}", "+\t}", "+\trenderer.disposeTextLayout(layout);", "+\treturn offsetInLine + lineOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4efef18dbe9906f62e983b32dbd34b70", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "b2b12192693c742c27d0ebca5b94020be5a1c6dc", "commitAfterChange": "df450ae9270d48180f00330bf98730967de4312f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["+\tint length = fileName.length ();", "+\tif (length != 0 && fileName.charAt (0) == '\\\"') {", "+\t\tif (fileName.charAt (length - 1) == '\\\"') {", "+\t\t\tfileName = fileName.substring (1, length - 1);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08564ccc68eb419d59749f2e402a6f1a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "d76da07394ecc4d7a9df3ce42f3073c26749ae56", "commitAfterChange": "64effad0f66392d90fe436b2cdfb9750628edbf7", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["+\tint xDisplay = data.display;", "+\tint xDrawable = data.drawable;", "+\tif (data.image != null) OS.XtRegisterDrawable (xDisplay, xDrawable, device.shellHandle);", "-\t\tOS.XmStringDrawUnderline(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);", "+\t\tOS.XmStringDrawUnderline(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null, xmMnemonic);", "-\t\t\tOS.XmStringDraw(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDraw(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "-\t\t\tOS.XmStringDrawImage(data.display, data.drawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\t\t\tOS.XmStringDrawImage(xDisplay, xDrawable, data.renderTable, data.xmText, handle, x, y, 0x7FFFFFFF, OS.XmALIGNMENT_BEGINNING, 0, null);", "+\tif (data.image != null) OS.XtUnregisterDrawable (xDisplay, xDrawable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c2048cdf814fc9ac02d851bcbeacba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 83, "signatureBeforeChange": " \t\t\t \tprivate int handleUserPaneHitTest(int cHandle, int where)", "signatureAfterChange": " \t\t \tprivate int handleUserPaneHitTest(int cHandle, int where)", "diff": ["-\t\t\t", "+\t\t", "+\t\tif (MacUtil.HIVIEW)", "+\t\t\tSystem.out.println(\"handleUserPaneHitTest\");", "+\t\tWidget w= WidgetTable.get(cHandle);", "+\t\tif (w instanceof Text || w instanceof Combo)", "+\t\t\treturn 112;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d672dfe3a88bb3d4b7b676d35a401d9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "8fe2550f663e7ac685b5a08e4a35f93ac4a5a919", "commitAfterChange": "aba7185e69c3de110fa2de3fb89398ad487363ce", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public Image (Device device, String filename)", "signatureAfterChange": " public Image (Device device, String filename)", "diff": ["-\t\tif (bitmap != 0) {", "+\t\tint status = Gdip.Image_GetLastStatus(bitmap);", "+\t\tif (bitmap != 0 && status == 0) {", "+\t\t\tint error = SWT.ERROR_NO_HANDLES;", "-\t\t\t\t\tif (graphics != 0) {\t\t\t\t\t\t", "+\t\t\t\t\tif (graphics != 0) {", "-\t\t\t\t\t\tGdip.Graphics_DrawImage(graphics, bitmap, rect, 0, 0, width, height, Gdip.UnitPixel, 0, 0, 0);", "+\t\t\t\t\t\tstatus = Gdip.Graphics_DrawImage(graphics, bitmap, rect, 0, 0, width, height, Gdip.UnitPixel, 0, 0, 0);", "+\t\t\t\t\t\tif (status != 0) {", "+\t\t\t\t\t\t\terror = SWT.ERROR_INVALID_IMAGE;", "+\t\t\t\t\t\t\tOS.DeleteObject(handle);", "+\t\t\t\t\t\t\thandle = 0;", "+\t\t\t\t\t\t}", "-\t\t\tif (handle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\t\t\tif (handle == 0) SWT.error(error);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fda1f9c58a71896320abebac1a851d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "a6b07b9292b9ee45fd41cd28891aa8c7a1f45a7e", "commitAfterChange": "53ff3be6e0c7a7d9af7f267f10aff73621c8a55b", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public boolean isClipped()", "signatureAfterChange": " public boolean isClipped()", "diff": ["+\tint gdipGraphics = data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\tint rgn = Gdip.Region_new();", "+\t\tGdip.Graphics_GetClip(data.gdipGraphics, rgn);", "+\t\tboolean isInfinite = Gdip.Region_IsInfinite(rgn, gdipGraphics);", "+\t\tGdip.Region_delete(rgn);", "+\t\treturn !isInfinite;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39200c47981aa1595c393169cea1dcc6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "cf5d26d074f8e8c1484be5d54a2445ca37e2341e", "commitAfterChange": "1fa4084ed8dc080dcdc78ba5c226b5ac6e8e6469", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void setFont (Font font)", "signatureAfterChange": " public void setFont (Font font)", "diff": ["+\tint xDisplay = OS.XtDisplay (handle);", "+\tif (xDisplay == 0) return;", "+\tint xWindow = OS.XtWindow (handle);", "+\tif (xWindow == 0) return;", "+\tOS.XClearArea (xDisplay, xWindow, 0, 0, 0, 0, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36902174563b3ae37b2b7ac0bb592436", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "523cfe8f03b47eb57d09eba7390e82723bb777f8", "commitAfterChange": "947d452c5315fc57055c1eb4142da8e6ca27798e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int gtk_create_menu_proxy (int widget)", "signatureAfterChange": "  int gtk_create_menu_proxy (int widget)", "diff": ["-\t\t\t\tint [] showImages = new int [1];", "-\t\t\t\t/*", "-\t\t\t\t * This code is intentionally commented out because it is outputting", "-\t\t\t\t * warnings to the console. If there is no text then the tooltip text", "-\t\t\t\t * will be used for overflow menu items.", "-\t\t\t\t */", "-//\t\t\t\tint /*long*/ settings = OS.gtk_settings_get_default();", "-//\t\t\t\tif (settings != 0) {", "-//\t\t\t\t\tOS.g_object_get (settings, OS.gtk_menu_images, showImages, 0);", "-//\t\t\t\t}", "+\t\t\t\tint [] showImages = new int []{1};", "+\t\t\t\tint /*long*/ settings = OS.gtk_settings_get_default();", "+\t\t\t\tif (settings != 0) {", "+\t\t\t\t\tint /*long*/ property = OS.g_object_class_find_property(OS.G_OBJECT_GET_CLASS(settings), OS.gtk_menu_images);", "+\t\t\t\t\tif (property != 0) OS.g_object_get (settings, OS.gtk_menu_images, showImages, 0);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9740b52e2d29a2e013212291773f87c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "3d1071088ced6ed6e9f01c8d7208fa00cb52a57a", "commitAfterChange": "a9f618df2b93f8cb19629621c0313294fe974299", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \r void redraw ()", "signatureAfterChange": "\r \r void redraw ()", "diff": ["-\t\t* Each time a menu has been modified, we need\r", "-\t\t* to redraw the command bar.\r", "+\t\t* Each time a menu has been modified, the command menu bar\r", "+\t\t* must be redrawn or it won't update properly.  For example,\r", "+\t\t* a submenu will not drop down.\r", "-\t\tOS.CommandBar_DrawMenuBar (parent.hwndCB, 0);\r", "+\t\tMenu menuBar = parent.menuBar;\r", "+\t\tif (menuBar != null) {\r", "+\t\t\tMenu menu = this;\r", "+\t\t\twhile (menu != null && menu != menuBar) {\r", "+\t\t\t\tmenu = menu.getParentMenu ();\r", "+\t\t\t}\r", "+\t\t\tif (menu == menuBar) {\r", "+\t\t\t\tOS.CommandBar_DrawMenuBar (menuBar.hwndCB, 0);\r", "+\t\t\t\tOS.CommandBar_Show (menuBar.hwndCB, true);\r", "+\t\t\t}\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d84bd2dbfbd895f7b6d7cbe5bbc991", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5a1c71b89899ab31c0f87fd0b3cee1b40ad0903c", "commitAfterChange": "980206418530e005b05903ae9f54d0f8445c976f", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": "\r public void redrawRange(int start, int length, boolean clearBackground)", "signatureAfterChange": "\r public void redrawRange(int start, int length, boolean clearBackground)", "diff": ["-\tint firstLine = content.getLineAtOffset(start);\r", "-\tint lastLine = content.getLineAtOffset(start + length);\r", "+\tint end = start + length;\r", "+\tint contentLength = content.getCharCount();\r", "+\tint firstLine;\r", "+\tint lastLine;\r", "+\tif (start > end || start < 0 || end > contentLength) {\r", "+\t\tSWT.error(SWT.ERROR_INVALID_RANGE);\r", "+\t}\t\r", "+\tfirstLine = content.getLineAtOffset(start);\r", "+\tlastLine = content.getLineAtOffset(end);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aaf808fc9ce877e2d98c37de0757867", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "6d9ffc9776ed53230601b1f118f94e4523e13f00", "commitAfterChange": "783a786a00290d26a381f650c88b8e9bbb56724c", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r public void setVisible (boolean visible)", "signatureAfterChange": "\r \r public void setVisible (boolean visible)", "diff": ["+\t\t\tint hwndShell = OS.GetActiveWindow ();\r", "+\t\t\tif (hwndShell == 0) {\r", "+\t\t\t\tif (parent != null) hwndShell = parent.handle;\r", "+\t\t\t}\r", "+\t\t\tif (hwndShell != 0) {\r", "+\t\t\t\tOS.SendMessage (hwndShell, OS.WM_CANCELMODE, 0, 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037acc390f8468e2a9fd8677d7fc04e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "70ad0effe5f094be7c9f0fc126e3f2ba49252b61", "commitAfterChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \t\t\t \tprivate boolean handleContentClick(MacEvent me, int whichWindow)", "signatureAfterChange": " \t\t\t \tprivate boolean handleContentClick(MacEvent me, int whichWindow)", "diff": ["-\t\t\tif (handleContextClick(whichControl, globalPos, me))", "-\t\t\t\treturn false;", "+\t\t\t// process the context menu", "+\t\t\tWidget wc= WidgetTable.get(whichControl);", "+\t\t\tif (wc instanceof Control) {", "+\t\t\t\tMenu cm= ((Control)wc).getMenu();\t// is a context menu installed?", "+\t\t\t\tif (cm != null && OS.IsShowContextualMenuClick(me.getData())) {", "+\t\t\t\t\thandleContextClick(cm, globalPos, me);", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b33ffe5e7e7713e395629516d8b9ae6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "46b2808e803b0a1f72cf9e4d36b0adc76790e712", "commitAfterChange": "da6280e2b5e629d639362bccd19508d81a4efc78", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\tgc.checkGC(GC.FOREGROUND_TEXT);", "+\tRectangle clip = gc.getClipping();", "+\tint foreground = gc.data.foreground;", "+\tint gdipGraphics = gc.data.gdipGraphics;", "+\tif (gdipGraphics != 0) {", "+\t\thdc = Gdip.Graphics_GetHDC(gdipGraphics);", "+\t}", "-\tint foreground = OS.GetTextColor(hdc);", "-\tRectangle clip = gc.getClipping();", "+\tif (gdipGraphics != 0) {", "+\t\tGdip.Graphics_ReleaseHDC(gdipGraphics, hdc);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "378badb334998d6670aa6cf7e0d45344", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/motif/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "00ed21c8f8c77f61853a45cda676574d76d69e41", "commitAfterChange": "8e00f3751d53017bb47fe8df7b2fb0596267f9cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (shellHandle != 0) OS.XtDestroyWidget (shellHandle);", "-\tshellHandle = 0;", "+\tif (shellHandle != 0) {", "+\t\tint xDisplay = OS.XtDisplay(shellHandle);", "+\t\tif (xDisplay != 0) {", "+\t\t\tif (activeClipboard != null) {", "+\t\t\t\tOS.XtDisownSelection(shellHandle, clipboardAtom, OS.CurrentTime);", "+\t\t\t}", "+\t\t\tif (activePrimaryClipboard != null) {", "+\t\t\t\tOS.XtDisownSelection(shellHandle, primaryAtom, OS.CurrentTime);", "+\t\t\t}", "+\t\t}", "+\t\tOS.XtDestroyWidget (shellHandle);", "+\t\tshellHandle = 0;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb285eca455033637ddb44ded7bf1cac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "9deefd18be8de01a672cfca15620a560b1ae5f22", "commitAfterChange": "d67b8caceb3f10df6a8e238427498db262144133", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void setClipping(Rectangle rect)", "signatureAfterChange": " public void setClipping(Rectangle rect)", "diff": ["- */", "-public void setClipping(Rectangle rect) {", "-\tif (rect == null) error(SWT.ERROR_NULL_ARGUMENT);", "-\tsetClipping (rect.x, rect.y, rect.width, rect.height);", "-}", "+ */", "+public void setClipping(Rectangle rect) {", "+\tif (handle == 0) SWT.error(SWT.ERROR_GRAPHIC_DISPOSED);", "+\tint clipRgn = data.clipRgn;", "+\tif (rect == null) {", "+\t\tOS.gdk_gc_set_clip_region(handle, 0);", "+\t\tif (clipRgn != 0) {", "+\t\t\tOS.gdk_region_destroy(clipRgn);", "+\t\t\tdata.clipRgn = clipRgn = 0;", "+\t\t}", "+\t\treturn;", "+\t}", "+\tsetClipping (rect.x, rect.y, rect.width, rect.height);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5832cae7f372f1ecf44809bda70651ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "60a9b0215b046632b51b65b9dcf0569516e0686e", "commitAfterChange": "610b674161bbe6c03029856ff3ee4570430b9973", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": " int getOffsetAtPoint(int x, int y)", "signatureAfterChange": " int getOffsetAtPoint(int x, int y)", "diff": ["-\t\tint lineLength = line.length();", "+\t\tint lineInParagraph = layout.getLineIndex(offsetInLine);", "+\t\tint lineLength;", "+\t\tif (lineInParagraph + 1 == layout.getLineCount()) {", "+\t\t\tlineLength = layout.getLineOffsets()[lineInParagraph + 1];", "+\t\t} else {", "+\t\t\tlineLength = Math.max(0, layout.getLineOffsets()[lineInParagraph + 1] - 1);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "417614dc7f568653ad65febcb99564f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "441698ecc1c76f73e590da9afb5676ceb4571947", "commitAfterChange": "7e69644e833915ee961adff3b1882f037d334978", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void deselectAll ()", "signatureAfterChange": " public void deselectAll ()", "diff": ["-    /* AW", "-\tOS.XmListDeselectAllItems (handle);", "-    */", "-\tSystem.out.println(\"List.deselectAll: nyi\");", "+\tint n= fData.size();", "+\tif (n <= 0) return;", "+\tint[] ids= getIds(0, n-1);", "+\tOS.SetDataBrowserSelectedItems(handle, ids.length, ids, OS.kDataBrowserItemsRemove);"]}], "num": 8486}