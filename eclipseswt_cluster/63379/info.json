{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "80680cf0f4cb62319b13b8853f3b467a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16bec6d099783d100943f83b1887180", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "8954b62f4c2f33c78ff5628d2cfc0549f4c650df", "commitAfterChange": "12b349de8c0864f7b5b4e24d506850638f1d7243", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " public boolean print (GC gc)", "signatureAfterChange": " public boolean print (GC gc)", "diff": ["-//\tint [] outImage = new int [1];", "-//\tCGRect outFrame = new CGRect ();", "-//\tif (OS.HIViewCreateOffscreenImage (handle, 0, outFrame, outImage) == OS.noErr) {", "-//\t\tint width = OS.CGImageGetWidth (outImage [0]);", "-//\t\tint height = OS.CGImageGetHeight (outImage [0]);", "-//\t \tCGRect rect = new CGRect();", "-//\t \trect.width = width;", "-//\t\trect.height = height;", "-//\t\t//TODO - does not draw the browser (cocoa widgets?)", "-//\t\tOS.HIViewDrawCGImage (gc.handle, rect, outImage [0]);", "-//\t\tOS.CGImageRelease (outImage [0]);", "-//\t}", "-//\treturn true;", "-\treturn false;", "+\t", "+\tif (view.isFlipped()) {", "+\t\tgc.handle.saveGraphicsState();", "+\t\tNSAffineTransform transform = NSAffineTransform.transform ();", "+\t\ttransform.scaleXBy (1, -1);", "+\t\ttransform.translateXBy (0, -(view.bounds().height + 2 * view.bounds().y));", "+\t\ttransform.concat ();", "+\t}", "+\t", "+\tview.displayRectIgnoringOpacity(view.bounds(), gc.handle);", "+\t", "+\tif (view.isFlipped()) gc.handle.restoreGraphicsState();", "+\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e523dd432256f7afe560daab26b8fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "57ba14e6c85a310ef7b864ed8adc6fa366dc3d6e", "commitAfterChange": "e983d4a13eb008de83ecbad342d94b6462cebe78", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "signatureAfterChange": "  void drawWidget (int control, int damageRgn, int visibleRgn, int theEvent)", "diff": ["-\t\tRect rect = new Rect();", "-\t\tOS.GetControlBounds (handle, rect);", "-\t\tint width = OS.CGImageGetWidth (image.handle);", "-\t\tint height = OS.CGImageGetHeight (image.handle);", "-\t\tint x = Math.max (0, (rect.right - rect.left - width) / 2);", "-\t\tint y = Math.max (0, (rect.bottom - rect.top - height) / 2);", "+\t\tRect bounds = new Rect(), content = new Rect();", "+\t\tOS.GetControlBounds (handle, bounds);", "+\t\tThemeButtonDrawInfo drawInfo = new ThemeButtonDrawInfo();", "+\t\tdrawInfo.state = OS.IsControlActive (handle) ? OS.kThemeStateActive : OS.kThemeStateInactive;", "+\t\tdrawInfo.adornment = OS.kThemeAdornmentDefault;", "+\t\tOS.GetThemeButtonContentBounds (bounds, OS.kThemePushButton, drawInfo, content);", "+\t\tint width = image == null ? 0 : OS.CGImageGetWidth (image.handle);", "+\t\tint height = image == null ? 0 : OS.CGImageGetHeight (image.handle);", "+\t\tint x = (bounds.right - bounds.left - width) / 2;", "+\t\tint y = (content.bottom - content.top - height) / 2;"]}], "num": 63379}