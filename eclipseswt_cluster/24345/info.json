{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9caa5136635ac6b28658ccbf869e2487", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d22ea89f12c5a9610d1daf14e5c5207", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "4e95e9822f38553154d401b66a8ec9a218291978", "commitAfterChange": "e9024966202f6bd2eaef5f6ebebe83ee37dcb74e", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "  long applicationNextEventMatchingMask (long id, long sel, long mask, long expiration, long mode, long dequeue)", "signatureAfterChange": "  long applicationNextEventMatchingMask (long id, long sel, long mask, long expiration, long mode, long dequeue)", "diff": ["-\t\tif (comboPoppedUp && mozillaRunning && dequeue != 0) {", "-\t\t\tNSEvent event = new NSEvent(result);", "-\t\t\tif (event.type() == OS.NSApplicationDefined) {", "-\t\t\t\treturn 0;", "+\t\tif (dequeue != 0 && currentCombo != null && !currentCombo.isDisposed()) {", "+\t\t\tNSEvent nsEvent = new NSEvent(result);", "+\t\t\tif (mozillaRunning) {", "+\t\t\t\tif (nsEvent.type() == OS.NSApplicationDefined) {", "+\t\t\t\t\treturn 0;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (nsEvent.type() == OS.NSKeyDown) {", "+\t\t\t\tcurrentCombo.sendTrackingKeyEvent(nsEvent, SWT.KeyDown);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee9314c8bf3cd394a3e4bc68ac9caaf6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0698acb5eeb7c1cf9de2a8e37f42e4a87539b248", "commitAfterChange": "bc233e27f8ff8ed5fedea1ac8bc608d4ca2d62c9", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": "  void applicationSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void applicationSendEvent (int id, int sel, int event)", "diff": ["+\t", "+\t/*", "+\t * Feature in Cocoa. The help key triggers context-sensitive help but doesn't get forwarded to the window as a key event.", "+\t * If the event is destined for the key window, is the help key, and is an NSKeyDown, send it directly to the window first.", "+\t */", "+\tif (window != null && window.isKeyWindow() && nsEvent.type() == OS.NSKeyDown && (nsEvent.modifierFlags() & OS.NSHelpKeyMask) != 0)\t{", "+\t\twindow.sendEvent(nsEvent);", "+\t}", "+"]}], "num": 24345}