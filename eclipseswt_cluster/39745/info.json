{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ee3674b29e5e27ce7e0f50852653fc5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c81709cb82df853271bb88ead981e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "f817d34150035d0860329767e1206c1ab75fd9fe", "commitAfterChange": "81aca485ef9d8730e0f9544960edb57a0f6bf82b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void setTabList (Control [] tabList)", "signatureAfterChange": " public void setTabList (Control [] tabList)", "diff": ["+\tcheckWidget ();", "+\tif (tabList != null) {", "+\t\tfor (int i=0; i<tabList.length; i++) {", "+\t\t\tControl control = tabList [i];", "+\t\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented.", "+\t\t\t* Tab lists are currently only supported", "+\t\t\t* for the direct children of a composite.", "+\t\t\t*/", "+//\t\t\tShell shell = control.getShell ();", "+//\t\t\twhile (control != shell && control != this) {", "+//\t\t\t\tcontrol = control.parent;", "+//\t\t\t}", "+//\t\t\tif (control != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t}", "+\t\tControl [] newList = new Control [tabList.length];", "+\t\tSystem.arraycopy (tabList, 0, newList, 0, tabList.length);", "+\t\ttabList = newList;", "+\t} ", "+\tthis.tabList = tabList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db15fb85410bcaa63fbbab4bed8bc449", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "6c3291ae7c76b6eb69c49388ee900ee87d268a46", "commitAfterChange": "4b91593725fcb0e5f9f6c26fc3e08bfb0e901e01", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setTabList (Control [] tabList)", "signatureAfterChange": "\r public void setTabList (Control [] tabList)", "diff": ["- */", "+ */\r", "-\tif (tabList == null) error (SWT.ERROR_NULL_ARGUMENT);\r", "-\tfor (int i=0; i<tabList.length; i++) {\r", "-\t\tControl control = tabList [i];\r", "-\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);\r", "-\t}\r", "+\tif (tabList != null) {\r", "+\t\tfor (int i=0; i<tabList.length; i++) {\r", "+\t\t\tControl control = tabList [i];\r", "+\t\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\r", "+\t\t\t/*\r", "+\t\t\t* This code is intentionally commented.\r", "+\t\t\t* Tab lists are currently only supported\r", "+\t\t\t* for the direct children of a composite.\r", "+\t\t\t*/\r", "+//\t\t\tShell shell = control.getShell ();\r", "+//\t\t\twhile (control != shell && control != this) {\r", "+//\t\t\t\tcontrol = control.parent;\r", "+//\t\t\t}\r", "+//\t\t\tif (control != this) error (SWT.ERROR_INVALID_PARENT);\r", "+\t\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);\r", "+\t\t}\r", "+\t\tControl [] newList = new Control [tabList.length];\r", "+\t\tSystem.arraycopy (tabList, 0, newList, 0, tabList.length);\r", "+\t\ttabList = newList;\r", "+\t} \r"]}], "num": 39745}