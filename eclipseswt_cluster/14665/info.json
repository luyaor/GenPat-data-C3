{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "494deb5c022cd1b3e126545b57237dd0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310a37ce96da0164a470274b7b85a771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5782a7a6c12d443e5d141047bc86f8591d5777b4", "commitAfterChange": "ff95f186106d1d356c813d019de91a816aab9e4e", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["-\t\t//TODO - honor flags", "-\t\tcairo_font_extents_t extents = new cairo_font_extents_t();", "-\t\tCairo.cairo_font_extents(cairo, extents);", "-\t\tdouble baseline = y + extents.ascent;", "-\t\tCairo.cairo_move_to(cairo, x, baseline);", "-\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);", "-\t\tCairo.cairo_show_text(cairo, buffer);", "-\t\tCairo.cairo_new_path(cairo);", "-\t\treturn;", "+\t\tif (OS.GTK_VERSION < OS.VERSION(2, 8, 0)) {", "+\t\t\t//TODO - honor flags", "+\t\t\tcairo_font_extents_t extents = new cairo_font_extents_t();", "+\t\t\tCairo.cairo_font_extents(cairo, extents);", "+\t\t\tdouble baseline = y + extents.ascent;", "+\t\t\tCairo.cairo_move_to(cairo, x, baseline);", "+\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);", "+\t\t\tCairo.cairo_show_text(cairo, buffer);", "+\t\t\tCairo.cairo_new_path(cairo);", "+\t\t\treturn;", "+\t\t}", "+\tif (cairo != 0) {", "+\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "+\t\t\tCairo.cairo_save(cairo);", "+\t\t\tif (data.backgroundPattern != null) {", "+\t\t\t\tCairo.cairo_set_source(cairo, data.backgroundPattern.handle);", "+\t\t\t} else {", "+\t\t\t\tGdkGCValues values = new GdkGCValues();", "+\t\t\t\tOS.gdk_gc_get_values(handle, values);", "+\t\t\t\tGdkColor color = new GdkColor();", "+\t\t\t\tcolor.pixel = values.background_pixel;", "+\t\t\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "+\t\t\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);", "+\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "+\t\t\t}", "+\t\t\tint[] width = new int[1], height = new int[1];", "+\t\t\tOS.pango_layout_get_size(data.layout, width, height);", "+\t\t\tCairo.cairo_rectangle(cairo, x, y, OS.PANGO_PIXELS(width[0]), OS.PANGO_PIXELS(height[0]));", "+\t\t\tCairo.cairo_fill(cairo);", "+\t\t\tCairo.cairo_restore(cairo);", "+\t\t}", "+\t\tCairo.cairo_move_to(cairo, x, y);", "+\t\tOS.pango_cairo_show_layout(cairo, data.layout);", "+\t\treturn;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1da8f87be95d24795644d938b27eddf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "5e05c860c75fb9386e23dd52fa60db7a593598e0", "commitAfterChange": "82a1c09af233bc8cd6f0c7fc54f4d78ed4a74ece", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": " public void drawText (String string, int x, int y, int flags)", "diff": ["+\t\t\tcheckGC(FOREGROUND | FONT);", "-\t\t\tCairo.cairo_save(cairo);", "-\t\t\tif (data.backgroundPattern != null) {", "-\t\t\t\tCairo.cairo_set_source(cairo, data.backgroundPattern.handle);", "-\t\t\t} else {", "-\t\t\t\tGdkGCValues values = new GdkGCValues();", "-\t\t\t\tOS.gdk_gc_get_values(handle, values);", "-\t\t\t\tGdkColor color = new GdkColor();", "-\t\t\t\tcolor.pixel = values.background_pixel;", "-\t\t\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "-\t\t\t\tOS.gdk_colormap_query_color(colormap, color.pixel, color);", "-\t\t\t\tCairo.cairo_set_source_rgba(cairo, (color.red & 0xFFFF) / (float)0xFFFF, (color.green & 0xFFFF) / (float)0xFFFF, (color.blue & 0xFFFF) / (float)0xFFFF, data.alpha / (float)0xFF);", "-\t\t\t}", "+\t\t\tcheckGC(BACKGROUND);", "-\t\t\tCairo.cairo_restore(cairo);", "+\t\tcheckGC(FOREGROUND | FONT);", "+\tcheckGC(FOREGROUND | FONT | BACKGROUND_BG);", "-\tGdkGCValues values = null;", "-\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "-\t\tvalues = new GdkGCValues();", "-\t\tOS.gdk_gc_get_values(handle, values);", "-\t\tbackground = new GdkColor();", "-\t\tbackground.pixel = values.background_pixel;", "-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system();", "-\t\tOS.gdk_colormap_query_color(colormap, background.pixel, background);", "-\t}", "+\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) background = data.background;", "-\t\tGdkColor foreground = new GdkColor();", "-\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);", "+\t\tGdkColor black = new GdkColor();", "+\t\tOS.gdk_gc_set_foreground(gdkGC, black);", "-\t\tif (values == null) {", "-\t\t\tvalues = new GdkGCValues();", "-\t\t\tOS.gdk_gc_get_values(handle, values);", "-\t\t}", "-\t\tforeground.pixel = values.foreground_pixel;", "-\t\tOS.gdk_gc_set_foreground(gdkGC, foreground);", "+\t\tOS.gdk_gc_set_foreground(gdkGC, data.foreground);"]}], "num": 14665}