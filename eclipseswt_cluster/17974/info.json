{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f71f0a4730f15900d6fe5dc2ccd18fa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52874eb6adb3cfed5ba8b01f482ee75a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "e86035e65ddb9883c55bfd1d1805aa43058a91c8", "commitAfterChange": "ee9b40960339cb073a160f4a991908b1b404f3db", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  boolean sendKeyEvent (Event event)", "signatureAfterChange": "  boolean sendKeyEvent (Event event)", "diff": ["-\tboolean all = false;", "+\tboolean traverseDoit = true;", "-\t\t\tall = true;", "-\t\t\tnextTraverseDoit = true;", "+\t\t\ttraverseDoit = true;", "-\t\t\tall = true;", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "-\t\tcase SWT.ARROW_RIGHT:", "+\t\tcase SWT.ARROW_RIGHT: {", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "+\t\t}", "-\t\tcase SWT.ARROW_LEFT:", "+\t\tcase SWT.ARROW_LEFT: {", "-\t\t\tnextTraverseDoit = false;", "+\t\t\ttraverseDoit = false;", "-\t\tcase SWT.TAB:", "+\t\t}", "+\t\tcase SWT.TAB: {", "-\t\t\tnextTraverseDoit = (event.stateMask & SWT.CTRL) != 0;", "+\t\t\ttraverseDoit = (event.stateMask & SWT.CTRL) != 0;", "-\t\tcase SWT.PAGE_DOWN:", "+\t\t}", "+\t\tcase SWT.PAGE_DOWN: {", "-\t\t\t\tall = true;", "-\t\t\t\tnextTraverseDoit = true;", "+\t\t\t\ttraverseDoit = true;", "-\t\tcase SWT.PAGE_UP:", "+\t\t}", "+\t\tcase SWT.PAGE_UP: {", "-\t\t\t\tall = true;", "-\t\t\t\tnextTraverseDoit = true;", "+\t\t\t\ttraverseDoit = true;", "+\t\t}", "+\t\tdefault: {", "+\t\t\tif (translateMnemonics ()) {", "+\t\t\t\tif (event.character != 0 && (event.stateMask & (SWT.ALT | SWT.CTRL)) == SWT.ALT) {", "+\t\t\t\t\ttraversal = SWT.TRAVERSE_MNEMONIC;", "+\t\t\t\t\ttraverseDoit = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+", "-\t\tControl control = browser;", "-\t\tShell shell = control.getShell ();", "-\t\tfinal Event[] traverseEvent = new Event[1];", "-\t\tListener listener = new Listener () {", "-\t\t\tpublic void handleEvent (Event event) {", "-\t\t\t\ttraverseEvent[0] = event;", "-\t\t\t}", "-\t\t};", "-\t\tDisplay display = browser.getDisplay ();", "-\t\tdisplay.addFilter (SWT.Traverse, listener);", "-\t\ttry {", "-\t\t\tdo {", "-\t\t\t\tif (control.traverse (traversal)) {", "-\t\t\t\t\tdoit = false;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tif (!traverseEvent[0].doit && control.isListening (SWT.Traverse)) break;", "-\t\t\t\tif (control == shell) break;", "-\t\t\t\tcontrol = control.getParent ();", "-\t\t\t} while (all && control != null);", "-\t\t} finally {", "-\t\t\tdisplay.removeFilter (SWT.Traverse, listener);", "-\t\t\tnextTraverseDoit = true;", "-\t\t}", "+\t\tboolean oldEventDoit = event.doit;", "+\t\tevent.doit = traverseDoit;\t", "+\t\tdoit = !browser.traverse (traversal, event);", "+\t\tevent.doit = oldEventDoit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "054d796ba4f16d8e8351f88312de1dea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "91d12e7fb40e96dc6324f0e393e3f0f025792ace", "commitAfterChange": "14be55c4cbe46a16b7300921fd246420e99a1bad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\tboolean checkSelection = false, checkFilter = false, checkActivate = false;", "+\t\tcase OS.WM_CHAR:", "+\t\tcase OS.WM_IME_CHAR:", "+\t\tcase OS.WM_KEYUP:", "+\t\tcase OS.WM_SYSCHAR:", "+\t\tcase OS.WM_SYSKEYDOWN:", "+\t\tcase OS.WM_SYSKEYUP:", "+\t\tcase OS.WM_LBUTTONDBLCLK:", "+\t\tcase OS.WM_LBUTTONUP:", "+\t\tcase OS.WM_MBUTTONDBLCLK:", "+\t\tcase OS.WM_MBUTTONUP:", "+\t\tcase OS.WM_MOUSEHOVER:", "+\t\tcase OS.WM_MOUSELEAVE:", "+\t\tcase OS.WM_MOUSEMOVE:", "+//\t\tcase OS.WM_MOUSEWHEEL:", "+\t\tcase OS.WM_RBUTTONDBLCLK:", "+\t\tcase OS.WM_RBUTTONUP:", "+\t\tcase OS.WM_XBUTTONDBLCLK:", "+\t\tcase OS.WM_XBUTTONUP:", "+\t\t\tcheckSelection = true;", "+\t\t\tbreak;", "-\t\tcase OS.WM_XBUTTONDOWN: {", "-\t\t\tDisplay display = this.display;", "-\t\t\tdisplay.ignoreMsgFilter = true;", "-\t\t\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "-\t\t\tdisplay.ignoreMsgFilter = false;", "-\t\t\treturn code;", "-\t\t}", "+\t\tcase OS.WM_XBUTTONDOWN:", "+\t\t\tcheckSelection = checkFilter = true;", "+\t\t\tbreak;", "-\t\tcase OS.WM_KEYDOWN: {", "-\t\t\tignoreActivate = true;", "-\t\t\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "-\t\t\tignoreActivate = false;", "-\t\t\treturn code;", "-\t\t}", "+\t\tcase OS.WM_KEYDOWN:", "+\t\t\tcheckSelection = checkActivate = true;", "+\t\t\tbreak;", "-\treturn OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "+\tboolean oldSelected = wasSelected;", "+\tif (checkSelection) wasSelected = false;", "+\tif (checkActivate) ignoreActivate = true;", "+\tif (checkFilter) display.ignoreMsgFilter = true;", "+\tint code = OS.CallWindowProc (TableProc, hwnd, msg, wParam, lParam);", "+\tif (checkFilter) display.ignoreMsgFilter = false;", "+\tif (checkActivate) ignoreActivate = false;", "+\tif (checkSelection) {", "+\t\tif (wasSelected) {", "+\t\t\tEvent event = new Event ();", "+\t\t\tint index = OS.SendMessage (handle, OS.LVM_GETNEXTITEM, -1, OS.LVNI_FOCUSED);", "+\t\t\tif (index != -1) event.item = _getItem (index);", "+\t\t\tpostEvent (SWT.Selection, event);", "+\t\t}", "+\t\twasSelected = oldSelected;", "+\t}", "+\treturn code;"]}], "num": 17974}