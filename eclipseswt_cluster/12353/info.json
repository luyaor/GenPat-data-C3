{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29af43dea9c2e3a08a3ca03a8b112ad4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c437872fe7fd1c344beb717be2236d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "81a33fbed3eb272c93a82c3f5eae3c1f2166f25e", "commitAfterChange": "1bffcc668dddef37395056cc439e6737b02c5e67", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public ImageData getImageData()", "signatureAfterChange": " public ImageData getImageData()", "diff": ["-\t\t\t\t\tif (!gdiPlus) {", "-\t\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint stride = dib.bmWidthBytes;", "-\t\t\t\t\t\tint offset = 0;", "-\t\t\t\t\t\tbyte[] scanline = new byte[dib.bmWidthBytes];", "-\t\t\t\t\t\tfor (int i = 0; i < dib.biHeight; i++) {", "-\t\t\t\t\t\t\tint cur = dib.bmBits + dib.biHeight * stride - (i + 1) * stride;", "-\t\t\t\t\t\t\tOS.MoveMemory(scanline, cur, dib.bmWidthBytes);", "-\t\t\t\t\t\t\tSystem.arraycopy(scanline, 0, data, offset, dib.bmWidthBytes);", "-\t\t\t\t\t\t\toffset += stride;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tOS.MoveMemory(data, bm.bmBits, imageSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebacff8457f760bb7ae45cd4b96a223d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "2be0f523c12be706f131f18494ce7c53c5d33e35", "commitAfterChange": "12b097f1ff6fdc23e2e6d19434a4af7db1bb871d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void dispose ()", "signatureAfterChange": " public void dispose ()", "diff": ["-\tif (handle == device.systemFont.handle) return;\r", "-\t\r", "-\t/* Free the fonts associated with the font list */\r", "-\tint [] buffer = new int [1];\r", "-\tint xDisplay = device.xDisplay;\r", "-\tif (OS.XmFontListInitFontContext (buffer, handle)) {\r", "-\t\tint context = buffer [0];\r", "-\t\tint fontListEntry;\r", "-\t\twhile ((fontListEntry = OS.XmFontListNextEntry (context)) != 0) {\r", "-\t\t\tint fontPtr = OS.XmFontListEntryGetFont (fontListEntry, buffer);\r", "-\t\t\tif (buffer [0] == OS.XmFONT_IS_FONT) {\r", "-\t\t\t\tOS.XFreeFont(xDisplay, fontPtr);\r", "-\t\t\t} else {\r", "-\t\t\t\tOS.XFreeFontSet(xDisplay, fontPtr);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\tOS.XmFontListFreeFontContext (context);\r", "-\t}\t\r", "-\t\r", "-\t/* Free the font list */", "+\tif (handle == device.systemFont.handle) return;"]}], "num": 12353}