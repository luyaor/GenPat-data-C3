{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a516da5ba22a0a31a278d19667ed191", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b8d1e16d6c9784cceea9f831312d1b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "cac38b1f82722a64690acd56a4088417a8ce9ecd", "commitAfterChange": "853eed5461835d50fb4e8007e139a702a8c33cbf", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  void sendToolTipEvent (boolean enter)", "signatureAfterChange": "  void sendToolTipEvent (boolean enter)", "diff": ["-\tif (tooltipTrackingArea == null && isVisible()) {", "-\t\tNSView contentView = window.contentView();", "-\t\tint /*long*/ tag = contentView.addToolTipRect(new NSRect(), window, 0);", "-\t\tif (tag != 0) tooltipTrackingArea = new NSTrackingArea(tag);", "+\tif (isVisible()) return;", "+\tif (tooltipTag == 0) {", "+\t\tNSView view = window.contentView();", "+\t\ttooltipTag = view.addToolTipRect(new NSRect(), window, 0);", "+\t\tif (tooltipTag != 0) {", "+\t\t\tNSTrackingArea trackingArea = new NSTrackingArea(tooltipTag);", "+\t\t\tid owner = trackingArea.owner();", "+\t\t\tif (owner != null) tooltipOwner = owner.id;", "+\t\t\tid userInfo = trackingArea.userInfo();", "+\t\t\tif (userInfo != null) {", "+\t\t\t\ttooltipUserData = userInfo.id;", "+\t\t\t} else {", "+\t\t\t\tint /*long*/ [] value = new int /*long*/ [1];", "+\t\t\t\tOS.object_getInstanceVariable(tooltipTag, new byte[]{'_','u', 's', 'e', 'r', 'I', 'n', 'f', 'o'}, value);", "+\t\t\t\ttooltipUserData = value[0];", "+\t\t\t}", "+\t\t}", "-\tif (tooltipTrackingArea == null) return;", "-\tNSDictionary userInfo = tooltipTrackingArea.userInfo();", "-\tif (userInfo == null) return;", "+\tif (tooltipTag == 0 || tooltipOwner == 0 || tooltipUserData == 0) return;", "-\tNSEvent event = NSEvent.enterExitEventWithType(enter ? OS.NSMouseEntered : OS.NSMouseExited, pt, 0, 0, window.windowNumber(), null, 0, 0, userInfo.id);", "-\tif (OS.class_NSToolTipManager != 0) {", "-\t\tOS.objc_msgSend(OS.objc_msgSend(OS.class_NSToolTipManager, OS.sel_sharedToolTipManager), enter ? OS.sel_mouseEntered_ : OS.sel_mouseExited_, event.id);", "-\t}", "+\tNSEvent event = NSEvent.enterExitEventWithType(enter ? OS.NSMouseEntered : OS.NSMouseExited, pt, 0, 0, window.windowNumber(), null, 0, tooltipTag, tooltipUserData);", "+\tOS.objc_msgSend(tooltipOwner, enter ? OS.sel_mouseEntered_ : OS.sel_mouseExited_, event.id);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83490764535b6324d987fe83a3290bf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-\tif (window == null) {", "+\tif (window == null && view == null) {", "-//\t\tint /*long*/ cls = OS.objc_lookUpClass (\"SWTWindow\");", "-//\t\tOS.object_setClass(window.id, cls);", "-\t\t//TODO - get the content of the foreign window instead of creating it", "-\t\tsuper.createHandle ();", "+\t\t", "+\t\t// 'view' is set to the NSView we should add the window's content view to as a subview.", "+\t\t// If that is null but 'window' is not we are in the foreign-handle case and shouldn't modify", "+\t\t// the window since we don't own it.", "+\t\tif (window != null) {", "+\t\t\tview = window.contentView();", "+\t\t\t", "+\t\t\tif (view == null) {", "+\t\t\t\tsuper.createHandle();", "+\t\t\t} else {", "+\t\t\t\tview.retain();", "+\t\t\t}", "+\t\t} else {", "+\t\t\tNSView parentView = view;\t\t\t", "+\t\t\tsuper.createHandle();", "+\t\t\tparentView.addSubview(view);", "+\t\t}", "+", "-\tif (parent != null) window.setCollectionBehavior(OS.NSWindowCollectionBehaviorMoveToActiveSpace);", "-\twindow.setAcceptsMouseMovedEvents(true);", "-\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "-\twindow.setDelegate(windowDelegate);", "-\tid id = window.fieldEditor (true, null);", "-\tif (id != null) {", "-\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t", "+\tif (window != null) {", "+\t\tif (parent != null) window.setCollectionBehavior(OS.NSWindowCollectionBehaviorMoveToActiveSpace);", "+\t\twindow.setAcceptsMouseMovedEvents(true);", "+\t\twindowDelegate = (SWTWindowDelegate)new SWTWindowDelegate().alloc().init();", "+\t\twindow.setDelegate(windowDelegate);", "+\t\tid id = window.fieldEditor (true, null);", "+\t\tif (id != null) {", "+\t\t\tOS.object_setClass (id.id, OS.objc_getClass (\"SWTEditorView\"));", "+\t\t}"]}], "num": 5706}