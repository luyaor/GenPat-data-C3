{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8485a81f27d47f63f4c56fd086bd24be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea7e8065360f074375efc03dbc822a5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "735902951b79f1366d274e770285038b46bc0e77", "commitAfterChange": "7e3ad69935bbcacfa72e9acc0631e3fb16f25e03", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\t\tif (rgn == 0) rgn = OS.NewRgn();", "-\t\t\t\t\t\tfloat lineWidth = 0;", "+\t\t\t\t\t\tfloat lineWidth = 1;", "-\t\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR:", "-\t\t\t\t\t\t\t\tunderlineY += 2 * lineAscent [i] + lineWidth;", "+\t\t\t\t\t\t\t\tdashes = new float[]{1, 3};", "+\t\t\t\t\t\t\t\tlineCap = OS.kCGLineCapRound;", "+\t\t\t\t\t\t\t\tlineJoin = OS.kCGLineJoinRound;", "+\t\t\t\t\t\t\t\t//FALLTHROUGH", "+\t\t\t\t\t\t\tcase SWT.UNDERLINE_SQUIGGLE: ", "-\t\t\t\t\t\t\t\tdashes = new float[]{1f,3};", "-\t\t\t\t\t\t\t\tlineCap = OS.kCGLineCapRound;", "-\t\t\t\t\t\t\t\tlineJoin = OS.kCGLineJoinRound;", "+\t\t\t\t\t\t\t\tunderlineY += 2 * lineAscent [i] + lineWidth;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tfloat ux, uy, lx, ly, a, b;", "-\t\t\t\t\t\t\tux = OS.Fix2Long(trapezoid.upperLeft_x);", "-\t\t\t\t\t\t\tuy = OS.Fix2Long(trapezoid.upperLeft_y);", "-\t\t\t\t\t\t\tlx = OS.Fix2Long(trapezoid.lowerLeft_x);", "-\t\t\t\t\t\t\tly = OS.Fix2Long(trapezoid.lowerLeft_y);", "-\t\t\t\t\t\t\ta = (uy - ly) / (ux - lx);", "-\t\t\t\t\t\t\tb = uy - ux * a;", "-\t\t\t\t\t\t\tfloat left = (underlineY - b) / a;", "-\t\t\t\t\t\t\tux = OS.Fix2Long(trapezoid.upperRight_x);", "-\t\t\t\t\t\t\tuy = OS.Fix2Long(trapezoid.upperRight_y);", "-\t\t\t\t\t\t\tlx = OS.Fix2Long(trapezoid.lowerRight_x);", "-\t\t\t\t\t\t\tly = OS.Fix2Long(trapezoid.lowerRight_y);", "-\t\t\t\t\t\t\ta = (uy - ly) / (ux - lx);", "-\t\t\t\t\t\t\tb = uy - ux * a;", "-\t\t\t\t\t\t\tfloat right = (underlineY - b) / a;", "+\t\t\t\t\t\t\tfloat left, right;", "+\t\t\t\t\t\t\tif (trapezoid.upperLeft_x != trapezoid.lowerLeft_x) {", "+\t\t\t\t\t\t\t\tfloat ux = OS.Fix2Long(trapezoid.upperLeft_x);", "+\t\t\t\t\t\t\t\tfloat uy = OS.Fix2Long(trapezoid.upperLeft_y);", "+\t\t\t\t\t\t\t\tfloat lx = OS.Fix2Long(trapezoid.lowerLeft_x);", "+\t\t\t\t\t\t\t\tfloat ly = OS.Fix2Long(trapezoid.lowerLeft_y);", "+\t\t\t\t\t\t\t\tfloat a = (uy - ly) / (ux - lx);", "+\t\t\t\t\t\t\t\tfloat b = uy - ux * a;", "+\t\t\t\t\t\t\t\tleft = (underlineY - b) / a;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tleft = OS.Fix2Long(trapezoid.upperLeft_x);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (trapezoid.upperRight_x != trapezoid.lowerRight_x) {", "+\t\t\t\t\t\t\t\tfloat ux = OS.Fix2Long(trapezoid.upperRight_x);", "+\t\t\t\t\t\t\t\tfloat uy = OS.Fix2Long(trapezoid.upperRight_y);", "+\t\t\t\t\t\t\t\tfloat lx = OS.Fix2Long(trapezoid.lowerRight_x);", "+\t\t\t\t\t\t\t\tfloat ly = OS.Fix2Long(trapezoid.lowerRight_y);", "+\t\t\t\t\t\t\t\tfloat a = (uy - ly) / (ux - lx);", "+\t\t\t\t\t\t\t\tfloat b = uy - ux * a;", "+\t\t\t\t\t\t\t\tright = (underlineY - b) / a;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tright = OS.Fix2Long(trapezoid.upperRight_x);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tOS.CGContextMoveToPoint(gc.handle, left, OS.Fix2Long(trapezoid.upperLeft_y));", "-\t\t\t\t\t\t\tOS.CGContextAddLineToPoint(gc.handle, right, OS.Fix2Long(trapezoid.upperRight_y));", "+\t\t\t\t\t\t\tif (style.underlineStyle == SWT.UNDERLINE_SQUIGGLE) {", "+\t\t\t\t\t\t\t\tint lineBottom = y + lineY + lineHeight[i];", "+\t\t\t\t\t\t\t\tint squigglyThickness = 1;", "+\t\t\t\t\t\t\t\tint squigglyHeight = 2 * squigglyThickness;", "+\t\t\t\t\t\t\t\tfloat squigglyY = Math.min(OS.Fix2Long(trapezoid.upperLeft_y) - squigglyHeight / 2, lineBottom - squigglyHeight - 1);", "+\t\t\t\t\t\t\t\tfloat[] points = computePolyline((int)left, (int)squigglyY, (int)right, (int)(squigglyY + squigglyHeight));", "+\t\t\t\t\t\t\t\tOS.CGContextBeginPath(gc.handle);", "+\t\t\t\t\t\t\t\tOS.CGContextAddLines(gc.handle, points, points.length / 2);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tOS.CGContextMoveToPoint(gc.handle, left, OS.Fix2Long(trapezoid.upperLeft_y));", "+\t\t\t\t\t\t\t\tOS.CGContextAddLineToPoint(gc.handle, right, OS.Fix2Long(trapezoid.upperRight_y));", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd83261dce93c77622d05bf20b8f57cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "b99e0e369a51571b12234356a1c0332a2bed35be", "commitAfterChange": "c4ff87b5b532e9f98adbfa0d94c5d8508add0dd4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tif (rgn != 0) OS.DisposeRgn(rgn);", "+\tcallback = null;", "+", "+\tfor (int j = 0; j < styles.length; j++) {", "+\t\tStyleItem run = styles[j];", "+\t\tTextStyle style = run.style;", "+\t\tif (style == null || !style.underline) continue;", "+\t\tif (style.underlineStyle == SWT.UNDERLINE_SINGLE || style.underlineStyle == SWT.UNDERLINE_DOUBLE) continue;", "+\t\tint start = translateOffset(run.start);", "+\t\tint end = j + 1 < styles.length ? translateOffset(styles[j + 1].start - 1) : length;", "+\t\tfor (int i=0, lineStart=0, lineY = 0; i<breaks.length; i++) {", "+\t\t\tint lineBreak = breaks[i];", "+\t\t\tint lineEnd = lineBreak - 1;", "+\t\t\tif (!(start > lineEnd || end < lineStart)) {", "+\t\t\t\tint highStart = Math.max(lineStart, start);", "+\t\t\t\tint highEnd = Math.min(lineEnd, end);", "+\t\t\t\tint highLen = highEnd - highStart + 1;", "+\t\t\t\tif (highLen > 0) {", "+\t\t\t\t\tif (rgn == 0) rgn = OS.NewRgn();", "+\t\t\t\t\tfloat underlineY = y + lineY;", "+\t\t\t\t\tfloat[] foreground = gc.data.foreground;", "+\t\t\t\t\tfloat lineWidth = 0;", "+\t\t\t\t\tOS.CGContextSaveGState(gc.handle);", "+\t\t\t\t\tswitch (style.underlineStyle) {", "+\t\t\t\t\t\tcase SWT.UNDERLINE_ERROR: {", "+\t\t\t\t\t\t\tlineWidth = 2;", "+\t\t\t\t\t\t\tunderlineY += 2 * lineAscent [i] + lineWidth;", "+\t\t\t\t\t\t\tif (style.underlineColor != null) {", "+\t\t\t\t\t\t\t\tforeground = style.underlineColor.handle;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (style.foreground != null) {", "+\t\t\t\t\t\t\t\t\tforeground = style.foreground.handle;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tOS.CGContextSetLineDash(gc.handle, 0, new float[]{1f,3}, 2);", "+\t\t\t\t\t\t\tOS.CGContextSetLineCap(gc.handle, OS.kCGLineCapRound);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcase SWT.UNDERLINE_IME_INPUT:", "+\t\t\t\t\t\tcase SWT.UNDERLINE_IME_TARGET_CONVERTED:", "+\t\t\t\t\t\tcase SWT.UNDERLINE_IME_CONVERTED:", "+\t\t\t\t\t\t\tlineWidth = 1.5f;", "+\t\t\t\t\t\t\tforeground = style.underlineStyle == SWT.UNDERLINE_IME_CONVERTED ? new float[]{0.5f, 0.5f, 0.5f, 1} : new float[]{0, 0, 0, 1};", "+\t\t\t\t\t\t\tFont font = style.font;", "+\t\t\t\t\t\t\tif (font == null) font = this.font != null ? this.font : device.systemFont;", "+\t\t\t\t\t\t\tATSFontMetrics metrics = new ATSFontMetrics();", "+\t\t\t\t\t\t\tOS.ATSFontGetHorizontalMetrics(font.handle, OS.kATSOptionFlagsDefault, metrics);", "+\t\t\t\t\t\t\tunderlineY += lineAscent [i] + lineHeight [i] + (metrics.descent * font.size);", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.CGContextSetStrokeColorSpace(gc.handle, device.colorspace);", "+\t\t\t\t\tOS.CGContextSetStrokeColor(gc.handle, foreground);", "+\t\t\t\t\tOS.CGContextSetLineWidth(gc.handle, lineWidth);", "+\t\t\t\t\tOS.ATSUGetTextHighlight(layout, OS.Long2Fix(x), OS.X2Fix(underlineY), highStart, highLen, rgn);", "+\t\t\t\t\tif (callback == null) {", "+\t\t\t\t\t\tcallback = new Callback(this, \"drawUnderline\", 4);", "+\t\t\t\t\t\tif (callback.getAddress() == 0) SWT.error(SWT.ERROR_NO_MORE_CALLBACKS);", "+\t\t\t\t\t}", "+\t\t\t\t\tdrawStyle = run;", "+\t\t\t\t\tOS.CGContextTranslateCTM (gc.handle, 0.5f, 0.5f);", "+\t\t\t\t\tOS.QDRegionToRects(rgn, OS.kQDParseRegionFromTopLeft, callback.getAddress(), gc.handle);", "+\t\t\t\t\tOS.CGContextStrokePath(gc.handle);", "+\t\t\t\t\tOS.CGContextRestoreGState(gc.handle);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (lineEnd > end) break;", "+\t\t\tlineY += lineHeight[i];", "+\t\t\tlineStart = lineBreak;", "+\t\t}", "+\t}", "+\tif (callback != null) callback.dispose();", "+\tif (rgn != 0) OS.DisposeRgn(rgn);", "+}"]}], "num": 57190}