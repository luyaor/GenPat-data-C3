{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "806b244f3212513c44cba06e0c0143a9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c15663f56a7fb5ab47c032bde68fcb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/graphics/ImageTransformTab.java", "commitBeforeChange": "70a4261449fb6670dbc6d8d258c800e661e9f17e", "commitAfterChange": "a85d43e1c164ffdfdfb60141be5b248279b0fbd2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void createControlPanel(Composite parent)", "signatureAfterChange": " public void createControlPanel(Composite parent)", "diff": ["+\tGC gc = new GC(rotateSpinner);", "+\tint width = gc.getFontMetrics().getAverageCharWidth() * 5;", "+\tgc.dispose();", "+\trotateSpinner.setLayoutData(new GridData(width, SWT.DEFAULT));", "-\trotateSpinner.setMinimum(0);", "-\trotateSpinner.setMaximum(360);", "-\trotateSpinner.setIncrement(10);", "+\trotateSpinner.setMinimum(-720);", "+\trotateSpinner.setMaximum(720);", "+\trotateSpinner.setIncrement(30);", "-\t// create a slider for scaling along the x axis", "+\t// create a spinner for translating along the x axis", "+\tcomp = new Composite(parent, SWT.NONE);", "+\tcomp.setLayout(gridLayout);", "+\t", "+\tnew Label(comp, SWT.CENTER).setText(GraphicsExample.getResourceString(\"xtranslate\")); //$NON-NLS-1$", "+\ttranslateSpinnerX = new Spinner(comp, SWT.BORDER | SWT.WRAP);", "+\ttranslateSpinnerX.setLayoutData(new GridData(width, SWT.DEFAULT));", "+\ttranslateSpinnerX.setMinimum(-100);", "+\ttranslateSpinnerX.setMaximum(500);", "+\ttranslateSpinnerX.setSelection(0);", "+\ttranslateSpinnerX.setIncrement(10);", "+\ttranslateSpinnerX.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {\t", "+\t\t\t\texample.redraw();", "+\t\t}", "+\t});", "+\t", "+\t// create a spinner for translating along the y axis", "+\tcomp = new Composite(parent, SWT.NONE);", "+\tcomp.setLayout(gridLayout);", "+", "+\tnew Label(comp, SWT.CENTER).setText(GraphicsExample.getResourceString(\"ytranslate\")); //$NON-NLS-1$", "+\ttranslateSpinnerY = new Spinner(comp, SWT.BORDER | SWT.WRAP);", "+\ttranslateSpinnerY.setLayoutData(new GridData(width, SWT.DEFAULT));", "+\ttranslateSpinnerY.setMinimum(-100);", "+\ttranslateSpinnerY.setMaximum(500);", "+\ttranslateSpinnerY.setSelection(0);", "+\ttranslateSpinnerY.setIncrement(10);", "+\ttranslateSpinnerY.addListener(SWT.Selection, new Listener() {", "+\t\tpublic void handleEvent(Event event) {\t", "+\t\t\t\texample.redraw();", "+\t\t}", "+\t});", "+\t", "+\t// create a spinner for scaling along the x axis", "+\tscaleSpinnerX.setLayoutData(new GridData(width, SWT.DEFAULT));", "-\tscaleSpinnerX.setMaximum(500);", "-\tscaleSpinnerX.setSelection(75);", "+\tscaleSpinnerX.setMaximum(400);", "+\tscaleSpinnerX.setSelection(100);", "+\tscaleSpinnerX.setIncrement(10);", "-\t// create a slider for scaling along the y axis", "+\t// create a spinner for scaling along the y axis", "+\tscaleSpinnerY.setLayoutData(new GridData(width, SWT.DEFAULT));", "-\tscaleSpinnerY.setMaximum(500);", "-\tscaleSpinnerY.setSelection(75);", "+\tscaleSpinnerY.setMaximum(400);", "+\tscaleSpinnerY.setSelection(100);", "+\tscaleSpinnerY.setIncrement(10);", "-\t// create a button for \"invert\"", "+\t// create a button for inverting the transform matrix"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb38e061b0a3f4d0fb19631bfce5062", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "e68f6dd7961c12937e9660a6a57b980c17ed895a", "commitAfterChange": "6c6dfbde54f73e110515be4b620f4ab18c1f4c84", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "  @Override public void create (Composite parent, int style)", "signatureAfterChange": "  @Override public void create (Composite parent, int style)", "diff": ["-\t\t\tint major = WebKitGTK.webkit_major_version ();", "-\t\t\tint minor = WebKitGTK.webkit_minor_version ();", "-\t\t\tint micro = WebKitGTK.webkit_micro_version ();", "+\t\t\tint major, minor, micro;", "+\t\t\tif (WEBKIT2){", "+\t\t\t\tmajor = WebKitGTK.webkit_get_major_version ();", "+\t\t\t\tminor = WebKitGTK.webkit_get_minor_version ();", "+\t\t\t\tmicro = WebKitGTK.webkit_get_micro_version ();", "+\t\t\t} else {", "+\t\t\t\tmajor = WebKitGTK.webkit_major_version ();", "+\t\t\t\tminor = WebKitGTK.webkit_minor_version ();", "+\t\t\t\tmicro = WebKitGTK.webkit_micro_version ();", "+\t\t\t}", "-\t\tlong /*int*/ database = WebKitGTK.webkit_get_favicon_database ();", "-\t\tif (database != 0) {", "-\t\t\t/* WebKitGTK version is >= 1.8.x */", "-\t\t\tWebKitGTK.webkit_favicon_database_set_path (database, 0);", "+\t\tif (WEBKIT2){", "+\t\t\tWebKitGTK.webkit_web_context_set_favicon_database_directory(WebKitGTK.webkit_web_context_get_default(), 0);", "+\t\t} else {", "+\t\t\tlong /*int*/ database = WebKitGTK.webkit_get_favicon_database ();", "+\t\t\tif (database != 0) {", "+\t\t\t\t/* WebKitGTK version is >= 1.8.x */", "+\t\t\t\tWebKitGTK.webkit_favicon_database_set_path (database, 0);", "+\t\t\t}", "-\tscrolledWindow = OS.gtk_scrolled_window_new (0, 0);", "-\tOS.gtk_scrolled_window_set_policy (scrolledWindow, OS.GTK_POLICY_AUTOMATIC, OS.GTK_POLICY_AUTOMATIC);", "+\tif (!WEBKIT2){", "+\t\tscrolledWindow = OS.gtk_scrolled_window_new (0, 0);", "+\t\tOS.gtk_scrolled_window_set_policy (scrolledWindow, OS.GTK_POLICY_AUTOMATIC, OS.GTK_POLICY_AUTOMATIC);", "+\t}", "+", "-\tOS.gtk_container_add (scrolledWindow, webView);", "-\tOS.gtk_container_add (browser.handle, scrolledWindow);", "-\tOS.gtk_widget_show (scrolledWindow);", "+", "+\tif (!WEBKIT2){", "+\t\tOS.gtk_container_add (scrolledWindow, webView);", "+\t\tOS.gtk_container_add (browser.handle, scrolledWindow);", "+\t\tOS.gtk_widget_show (scrolledWindow);", "+", "+\t\tOS.g_signal_connect (webView, WebKitGTK.close_web_view, Proc2.getAddress (), CLOSE_WEB_VIEW);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.console_message, Proc5.getAddress (), CONSOLE_MESSAGE);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.create_web_view, Proc3.getAddress (), CREATE_WEB_VIEW);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.notify_load_status, Proc3.getAddress (), NOTIFY_LOAD_STATUS);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.web_view_ready, Proc2.getAddress (), WEB_VIEW_READY);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.navigation_policy_decision_requested, Proc6.getAddress (), NAVIGATION_POLICY_DECISION_REQUESTED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.mime_type_policy_decision_requested, Proc6.getAddress (), MIME_TYPE_POLICY_DECISION_REQUESTED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.resource_request_starting, Proc6.getAddress (), RESOURCE_REQUEST_STARTING);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.download_requested, Proc3.getAddress (), DOWNLOAD_REQUESTED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.hovering_over_link, Proc4.getAddress (), HOVERING_OVER_LINK);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.populate_popup, Proc3.getAddress (), POPULATE_POPUP);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.notify_progress, Proc3.getAddress (), NOTIFY_PROGRESS);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.window_object_cleared, Proc5.getAddress (), WINDOW_OBJECT_CLEARED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.status_bar_text_changed, Proc3.getAddress (), STATUS_BAR_TEXT_CHANGED);", "+\t} else {", "+\t\tOS.gtk_container_add (browser.handle, webView);", "+", "+\t\tOS.g_signal_connect (webView, WebKitGTK.close, Proc2.getAddress (), CLOSE_WEB_VIEW);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.create, Proc3.getAddress (), CREATE_WEB_VIEW);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.load_changed, Proc3.getAddress (), LOAD_CHANGED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.ready_to_show, Proc2.getAddress (), WEB_VIEW_READY);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.decide_policy, Proc4.getAddress (), DECIDE_POLICY);", "+\t\tOS.g_signal_connect (WebKitGTK.webkit_web_context_get_default(), WebKitGTK.download_started, Proc3.getAddress (), DOWNLOAD_REQUESTED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.mouse_target_changed, Proc4.getAddress (), MOUSE_TARGET_CHANGED);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.context_menu, Proc5.getAddress (), CONTEXT_MENU);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.notify_estimated_load_progress, Proc3.getAddress (), NOTIFY_PROGRESS);", "+\t\tOS.g_signal_connect (webView, WebKitGTK.authenticate, Proc3.getAddress (), AUTHENTICATE);", "+\t}", "+", "-\tOS.g_signal_connect (webView, WebKitGTK.close_web_view, Proc2.getAddress (), CLOSE_WEB_VIEW);", "-\tOS.g_signal_connect (webView, WebKitGTK.console_message, Proc5.getAddress (), CONSOLE_MESSAGE);", "-\tOS.g_signal_connect (webView, WebKitGTK.create_web_view, Proc3.getAddress (), CREATE_WEB_VIEW);", "-\tOS.g_signal_connect (webView, WebKitGTK.download_requested, Proc3.getAddress (), DOWNLOAD_REQUESTED);", "-\tOS.g_signal_connect (webView, WebKitGTK.hovering_over_link, Proc4.getAddress (), HOVERING_OVER_LINK);", "-\tOS.g_signal_connect (webView, WebKitGTK.mime_type_policy_decision_requested, Proc6.getAddress (), MIME_TYPE_POLICY_DECISION_REQUESTED);", "-\tOS.g_signal_connect (webView, WebKitGTK.navigation_policy_decision_requested, Proc6.getAddress (), NAVIGATION_POLICY_DECISION_REQUESTED);", "-\tOS.g_signal_connect (webView, WebKitGTK.notify_load_status, Proc3.getAddress (), NOTIFY_LOAD_STATUS);", "-\tOS.g_signal_connect (webView, WebKitGTK.notify_progress, Proc3.getAddress (), NOTIFY_PROGRESS);", "+\tOS.gtk_widget_show (browser.handle);", "+", "-\tOS.g_signal_connect (webView, WebKitGTK.populate_popup, Proc3.getAddress (), POPULATE_POPUP);", "-\tOS.g_signal_connect (webView, WebKitGTK.resource_request_starting, Proc6.getAddress (), RESOURCE_REQUEST_STARTING);", "-\tOS.g_signal_connect (webView, WebKitGTK.status_bar_text_changed, Proc3.getAddress (), STATUS_BAR_TEXT_CHANGED);", "-\tOS.g_signal_connect (webView, WebKitGTK.web_view_ready, Proc2.getAddress (), WEB_VIEW_READY);", "-\tOS.g_signal_connect (webView, WebKitGTK.window_object_cleared, Proc5.getAddress (), WINDOW_OBJECT_CLEARED);", "-\tOS.g_signal_connect (scrolledWindow, OS.button_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.button_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.key_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.key_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.scroll_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "-\tOS.g_signal_connect (scrolledWindow, OS.motion_notify_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\tif (!WEBKIT2){", "+\t\tOS.g_signal_connect (scrolledWindow, OS.button_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t\tOS.g_signal_connect (scrolledWindow, OS.button_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t\tOS.g_signal_connect (scrolledWindow, OS.key_press_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t\tOS.g_signal_connect (scrolledWindow, OS.key_release_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t\tOS.g_signal_connect (scrolledWindow, OS.scroll_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t\tOS.g_signal_connect (scrolledWindow, OS.motion_notify_event, JSDOMEventProc.getAddress (), STOP_PROPOGATE);", "+\t}", "+", "+\tbyte[] bytes = Converter.wcsToMbcs (null, \"UTF-8\", true); // $NON-NLS-1$", "-\tOS.g_object_set (settings, WebKitGTK.enable_universal_access_from_file_uris, 1, 0);", "-\tbyte[] bytes = Converter.wcsToMbcs (null, \"UTF-8\", true); // $NON-NLS-1$", "-\tOS.g_object_set (settings, WebKitGTK.default_encoding, bytes, 0);", "+", "+\tif (WEBKIT2){", "+\t\tOS.g_object_set (settings, WebKitGTK.default_charset, bytes, 0);", "+\t} else {", "+\t\tOS.g_object_set (settings, WebKitGTK.default_encoding, bytes, 0);", "+\t\tOS.g_object_set (settings, WebKitGTK.enable_universal_access_from_file_uris, 1, 0);", "+\t}", "-\t/*", "-\t* Ensure that our Authenticate listener is at the front of the signal", "-\t* queue by removing the default Authenticate listener, adding ours,", "-\t* and then re-adding the default listener.", "-\t*/", "-\tlong /*int*/ session = WebKitGTK.webkit_get_default_session ();", "-\tlong /*int*/ originalAuth = WebKitGTK.soup_session_get_feature (session, WebKitGTK.webkit_soup_auth_dialog_get_type ());", "-\tif (originalAuth != 0) {", "-\t\tWebKitGTK.soup_session_feature_detach (originalAuth, session);", "-\t}", "-\tOS.g_signal_connect (session, WebKitGTK.authenticate, Proc5.getAddress (), webView);", "-\tif (originalAuth != 0) {", "-\t\tWebKitGTK.soup_session_feature_attach (originalAuth, session);", "-\t}", "+\tif (!WEBKIT2){", "+\t\t/*", "+\t\t* Ensure that our Authenticate listener is at the front of the signal", "+\t\t* queue by removing the default Authenticate listener, adding ours,", "+\t\t* and then re-adding the default listener.", "+\t\t*/", "+\t\tlong /*int*/ session = WebKitGTK.webkit_get_default_session ();", "+\t\tlong /*int*/ originalAuth = WebKitGTK.soup_session_get_feature (session, WebKitGTK.webkit_soup_auth_dialog_get_type ());", "+\t\tif (originalAuth != 0) {", "+\t\t\tWebKitGTK.soup_session_feature_detach (originalAuth, session);", "+\t\t}", "+\t\tOS.g_signal_connect (session, WebKitGTK.authenticate, Proc5.getAddress (), webView);", "+\t\tif (originalAuth != 0) {", "+\t\t\tWebKitGTK.soup_session_feature_attach (originalAuth, session);", "+\t\t}", "-\t/*", "-\t* Check for proxy values set as documented java properties and update the", "-\t* session to use these values if needed.", "-\t*/", "-\tString proxyHost = System.getProperty (PROPERTY_PROXYHOST);", "-\tString proxyPortString = System.getProperty (PROPERTY_PROXYPORT);", "-\tint port = -1;", "-\tif (proxyPortString != null) {", "-\t\ttry {", "-\t\t\tint value = Integer.valueOf (proxyPortString).intValue ();", "-\t\t\tif (0 <= value && value <= MAX_PORT) port = value;", "-\t\t} catch (NumberFormatException e) {", "-\t\t\t/* do nothing, java property has non-integer value */", "+\t\t/*", "+\t\t* Check for proxy values set as documented java properties and update the", "+\t\t* session to use these values if needed.", "+\t\t*/", "+\t\tString proxyHost = System.getProperty (PROPERTY_PROXYHOST);", "+\t\tString proxyPortString = System.getProperty (PROPERTY_PROXYPORT);", "+\t\tint port = -1;", "+\t\tif (proxyPortString != null) {", "+\t\t\ttry {", "+\t\t\t\tint value = Integer.valueOf (proxyPortString).intValue ();", "+\t\t\t\tif (0 <= value && value <= MAX_PORT) port = value;", "+\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t/* do nothing, java property has non-integer value */", "+\t\t\t}", "-\t}", "-\tif (proxyHost != null || port != -1) {", "-\t\tif (!proxyHost.startsWith (PROTOCOL_HTTP)) {", "-\t\t\tproxyHost = PROTOCOL_HTTP + proxyHost;", "-\t\t}", "-\t\tproxyHost += \":\" + port; //$NON-NLS-1$", "-\t\tbytes = Converter.wcsToMbcs (null, proxyHost, true);", "-\t\tlong /*int*/ uri = WebKitGTK.soup_uri_new (bytes);", "-\t\tif (uri != 0) {", "-\t\t\tOS.g_object_set (session, WebKitGTK.SOUP_SESSION_PROXY_URI, uri, 0);", "-\t\t\tWebKitGTK.soup_uri_free (uri);", "+\t\tif (proxyHost != null || port != -1) {", "+\t\t\tif (!proxyHost.startsWith (PROTOCOL_HTTP)) {", "+\t\t\t\tproxyHost = PROTOCOL_HTTP + proxyHost;", "+\t\t\t}", "+\t\t\tproxyHost += \":\" + port; //$NON-NLS-1$", "+\t\t\tbytes = Converter.wcsToMbcs (null, proxyHost, true);", "+\t\t\tlong /*int*/ uri = WebKitGTK.soup_uri_new (bytes);", "+\t\t\tif (uri != 0) {", "+\t\t\t\tOS.g_object_set (session, WebKitGTK.SOUP_SESSION_PROXY_URI, uri, 0);", "+\t\t\t\tWebKitGTK.soup_uri_free (uri);", "+\t\t\t}", "-\tint major = WebKitGTK.webkit_major_version ();", "-\tint minor = WebKitGTK.webkit_minor_version ();", "+\tint major, minor;", "+\tif (WEBKIT2){", "+\t\tmajor = WebKitGTK.webkit_get_major_version ();", "+\t\tminor = WebKitGTK.webkit_get_minor_version ();", "+\t} else {", "+\t\tmajor = WebKitGTK.webkit_major_version ();", "+\t\tminor = WebKitGTK.webkit_minor_version ();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf6780d067be7814bd00765e892ad11", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0d6738f372469d9527fdb6984c0f956cbb0c021a", "commitAfterChange": "69155e7bef60580890dcbd61eeae4b1c572aec32", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["-//\tmethodNames.addElement(\"test_ConstructorLorg_eclipse_swt_graphics_DrawableI\");", "-//\tmethodNames.addElement(\"test_copyAreaIIIIII\");", "-//\tmethodNames.addElement(\"test_copyAreaLorg_eclipse_swt_graphics_ImageII\");", "-//\tmethodNames.addElement(\"test_dispose\");", "-//\tmethodNames.addElement(\"test_drawArcIIIIII\");", "-//\tmethodNames.addElement(\"test_drawFocusIIII\");", "-//\tmethodNames.addElement(\"test_drawImageLorg_eclipse_swt_graphics_ImageII\");", "-//\tmethodNames.addElement(\"test_drawImageLorg_eclipse_swt_graphics_ImageIIIIIIII\");", "-//\tmethodNames.addElement(\"test_drawLineIIII\");", "-//\tmethodNames.addElement(\"test_drawOvalIIII\");", "-//\tmethodNames.addElement(\"test_drawPointII\");", "-//\tmethodNames.addElement(\"test_drawPolygon$I\");", "-//\tmethodNames.addElement(\"test_drawPolyline$I\");", "-//\tmethodNames.addElement(\"test_drawRectangleIIII\");", "-//\tmethodNames.addElement(\"test_drawRectangleLorg_eclipse_swt_graphics_Rectangle\");", "-//\tmethodNames.addElement(\"test_drawRoundRectangleIIIIII\");", "-//\tmethodNames.addElement(\"test_drawStringLjava_lang_StringII\");", "-//\tmethodNames.addElement(\"test_drawStringLjava_lang_StringIIZ\");", "-//\tmethodNames.addElement(\"test_drawTextLjava_lang_StringII\");", "-//\tmethodNames.addElement(\"test_drawTextLjava_lang_StringIII\");", "-//\tmethodNames.addElement(\"test_drawTextLjava_lang_StringIIZ\");", "-//\tmethodNames.addElement(\"test_equalsLjava_lang_Object\");", "-//\tmethodNames.addElement(\"test_fillArcIIIIII\");", "-//\tmethodNames.addElement(\"test_fillGradientRectangleIIIIZ\");", "-//\tmethodNames.addElement(\"test_fillOvalIIII\");", "-//\tmethodNames.addElement(\"test_fillPolygon$I\");", "-//\tmethodNames.addElement(\"test_fillRectangleIIII\");", "-//\tmethodNames.addElement(\"test_fillRectangleLorg_eclipse_swt_graphics_Rectangle\");", "-//\tmethodNames.addElement(\"test_fillRoundRectangleIIIIII\");", "-//\tmethodNames.addElement(\"test_getAdvanceWidthC\");", "-//\tmethodNames.addElement(\"test_getBackground\");", "-//\tmethodNames.addElement(\"test_getCharWidthC\");", "-//\tmethodNames.addElement(\"test_getClipping\");", "-//\tmethodNames.addElement(\"test_getClippingLorg_eclipse_swt_graphics_Region\");", "-//\tmethodNames.addElement(\"test_getFont\");", "-//\tmethodNames.addElement(\"test_getFontMetrics\");", "-//\tmethodNames.addElement(\"test_getForeground\");", "-//\tmethodNames.addElement(\"test_getLineStyle\");", "-//\tmethodNames.addElement(\"test_getLineWidth\");", "-//\tmethodNames.addElement(\"test_getStyle\");", "-//\tmethodNames.addElement(\"test_getXORMode\");", "-//\tmethodNames.addElement(\"test_hashCode\");", "-//\tmethodNames.addElement(\"test_isClipped\");", "-//\tmethodNames.addElement(\"test_isDisposed\");", "-//\tmethodNames.addElement(\"test_setBackgroundLorg_eclipse_swt_graphics_Color\");", "-//\tmethodNames.addElement(\"test_setClippingIIII\");", "-//\tmethodNames.addElement(\"test_setClippingLorg_eclipse_swt_graphics_Rectangle\");", "-//\tmethodNames.addElement(\"test_setClippingLorg_eclipse_swt_graphics_Region\");", "-//\tmethodNames.addElement(\"test_setFontLorg_eclipse_swt_graphics_Font\");", "-//\tmethodNames.addElement(\"test_setForegroundLorg_eclipse_swt_graphics_Color\");", "-//\tmethodNames.addElement(\"test_setLineStyleI\");", "-//\tmethodNames.addElement(\"test_setLineWidthI\");", "-//\tmethodNames.addElement(\"test_setXORModeZ\");", "-//\tmethodNames.addElement(\"test_stringExtentLjava_lang_String\");", "-//\tmethodNames.addElement(\"test_textExtentLjava_lang_String\");", "-//\tmethodNames.addElement(\"test_textExtentLjava_lang_StringI\");", "-//\tmethodNames.addElement(\"test_win32_newILorg_eclipse_swt_graphics_GCData\");", "-//\tmethodNames.addElement(\"test_win32_newLorg_eclipse_swt_graphics_DrawableLorg_eclipse_swt_graphics_GCData\");", "+\tmethodNames.addElement(\"test_ConstructorLorg_eclipse_swt_graphics_DrawableI\");", "+\tmethodNames.addElement(\"test_copyAreaIIIIII\");", "+\tmethodNames.addElement(\"test_copyAreaLorg_eclipse_swt_graphics_ImageII\");", "+\tmethodNames.addElement(\"test_dispose\");", "+\tmethodNames.addElement(\"test_drawArcIIIIII\");", "+\tmethodNames.addElement(\"test_drawFocusIIII\");", "+\tmethodNames.addElement(\"test_drawImageLorg_eclipse_swt_graphics_ImageII\");", "+\tmethodNames.addElement(\"test_drawImageLorg_eclipse_swt_graphics_ImageIIIIIIII\");", "+\tmethodNames.addElement(\"test_drawLineIIII\");", "+\tmethodNames.addElement(\"test_drawOvalIIII\");", "+\tmethodNames.addElement(\"test_drawPointII\");", "+\tmethodNames.addElement(\"test_drawPolygon$I\");", "+\tmethodNames.addElement(\"test_drawPolyline$I\");", "+\tmethodNames.addElement(\"test_drawRectangleIIII\");", "+\tmethodNames.addElement(\"test_drawRectangleLorg_eclipse_swt_graphics_Rectangle\");", "+\tmethodNames.addElement(\"test_drawRoundRectangleIIIIII\");", "+\tmethodNames.addElement(\"test_drawStringLjava_lang_StringII\");", "+\tmethodNames.addElement(\"test_drawStringLjava_lang_StringIIZ\");", "+\tmethodNames.addElement(\"test_drawTextLjava_lang_StringII\");", "+\tmethodNames.addElement(\"test_drawTextLjava_lang_StringIII\");", "+\tmethodNames.addElement(\"test_drawTextLjava_lang_StringIIZ\");", "+\tmethodNames.addElement(\"test_equalsLjava_lang_Object\");", "+\tmethodNames.addElement(\"test_fillArcIIIIII\");", "+\tmethodNames.addElement(\"test_fillGradientRectangleIIIIZ\");", "+\tmethodNames.addElement(\"test_fillOvalIIII\");", "+\tmethodNames.addElement(\"test_fillPolygon$I\");", "+\tmethodNames.addElement(\"test_fillRectangleIIII\");", "+\tmethodNames.addElement(\"test_fillRectangleLorg_eclipse_swt_graphics_Rectangle\");", "+\tmethodNames.addElement(\"test_fillRoundRectangleIIIIII\");", "+\tmethodNames.addElement(\"test_getAdvanceWidthC\");", "+\tmethodNames.addElement(\"test_getBackground\");", "+\tmethodNames.addElement(\"test_getCharWidthC\");", "+\tmethodNames.addElement(\"test_getClipping\");", "+\tmethodNames.addElement(\"test_getClippingLorg_eclipse_swt_graphics_Region\");", "+\tmethodNames.addElement(\"test_getFont\");", "+\tmethodNames.addElement(\"test_getFontMetrics\");", "+\tmethodNames.addElement(\"test_getForeground\");", "+\tmethodNames.addElement(\"test_getLineStyle\");", "+\tmethodNames.addElement(\"test_getLineWidth\");", "+\tmethodNames.addElement(\"test_getStyle\");", "+\tmethodNames.addElement(\"test_getXORMode\");", "+\tmethodNames.addElement(\"test_hashCode\");", "+\tmethodNames.addElement(\"test_isClipped\");", "+\tmethodNames.addElement(\"test_isDisposed\");", "+\tmethodNames.addElement(\"test_setBackgroundLorg_eclipse_swt_graphics_Color\");", "+\tmethodNames.addElement(\"test_setClippingIIII\");", "+\tmethodNames.addElement(\"test_setClippingLorg_eclipse_swt_graphics_Rectangle\");", "+\tmethodNames.addElement(\"test_setClippingLorg_eclipse_swt_graphics_Region\");", "+\tmethodNames.addElement(\"test_setFontLorg_eclipse_swt_graphics_Font\");", "+\tmethodNames.addElement(\"test_setForegroundLorg_eclipse_swt_graphics_Color\");", "+\tmethodNames.addElement(\"test_setLineStyleI\");", "+\tmethodNames.addElement(\"test_setLineWidthI\");", "+\tmethodNames.addElement(\"test_setXORModeZ\");", "+\tmethodNames.addElement(\"test_stringExtentLjava_lang_String\");", "+\tmethodNames.addElement(\"test_textExtentLjava_lang_String\");", "+\tmethodNames.addElement(\"test_textExtentLjava_lang_StringI\");", "+\tmethodNames.addElement(\"test_win32_newILorg_eclipse_swt_graphics_GCData\");", "+\tmethodNames.addElement(\"test_win32_newLorg_eclipse_swt_graphics_DrawableLorg_eclipse_swt_graphics_GCData\");"]}], "num": 56008}