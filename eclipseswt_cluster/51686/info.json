{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ab49f984da544df6c193fbad6d2972c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffeb1937fe542bed497f7ffad75d1ca4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "977d5e0f203ec4ef6c7d327c6fb00fb7e3a9fea1", "commitAfterChange": "d90c1dac39bb5b1c9da1307d0ac9b1f40b093e4c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " void doEnd(int stateMask)", "signatureAfterChange": " void doEnd(int stateMask)", "diff": ["+\tint lastAvailableIndex = availableItems.length - 1;", "-\t\tint lastAvailableIndex = availableItems.length - 1;", "-\t\t} else {", "-\t\t\tint lastAvailableIndex = availableItems.length - 1;", "-\t\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "-\t\t\tTreeItem2 item = availableItems[lastAvailableIndex]; ", "-\t\t\tselectItem(item, false);", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tEvent newEvent = new Event();", "-\t\t\tnewEvent.item = item;", "-\t\t\tsendEvent(SWT.Selection, newEvent);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(lastAvailableIndex);", "-\t\t\treturn;", "+\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "+\t\tTreeItem2 item = availableItems[lastAvailableIndex]; ", "+\t\tselectItem(item, false);", "+\t\tsetFocusItem(item, true);", "+\t\tEvent newEvent = new Event();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent(SWT.Selection, newEvent);", "+\t\tshowItem(item);", "+\t\tredrawItem(lastAvailableIndex);", "+\t\treturn;", "-\t\t\t// TODO scroll to bottom, fire selection (?) but don't change it", "-\t\t} else {", "-\t\t\tint lastAvailableIndex = availableItems.length - 1;", "-\t\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "-\t\t\tTreeItem2 item = availableItems[lastAvailableIndex];", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(item.availableIndex);", "+\t\t\tshowItem(availableItems[lastAvailableIndex]);", "-\t} else {", "-\t\t// TODO select anchor -> bottom", "+\t\tif (focusItem.availableIndex == lastAvailableIndex) return; /* at bottom */", "+\t\tTreeItem2 item = availableItems[lastAvailableIndex];", "+\t\tsetFocusItem(item, true);", "+\t\tshowItem(item);", "+\t\tredrawItem(item.availableIndex);", "+\t\treturn;", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTreeItem2 selectedItem = availableItems[lastAvailableIndex];", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex = selectedItem.availableIndex;", "+\tTreeItem2[] newSelection = new TreeItem2 [selectIndex - anchorIndex + 1];", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i <= selectIndex; i++) {", "+\t\tnewSelection[writeIndex++] = availableItems[i];", "+\t}", "+\tsetSelection(newSelection);", "+\tsetFocusItem(selectedItem, true);", "+\tEvent newEvent = new Event();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent(SWT.Selection, newEvent);", "+\tshowItem(selectedItem);", "+\tredrawItems(anchorIndex, selectIndex);", "+\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45f53a641ed93abbd9e9547d6a5421aa", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "977d5e0f203ec4ef6c7d327c6fb00fb7e3a9fea1", "commitAfterChange": "d90c1dac39bb5b1c9da1307d0ac9b1f40b093e4c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void doHome(int stateMask)", "signatureAfterChange": " void doHome(int stateMask)", "diff": ["-\t\t} else {", "-\t\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "-\t\t\tTreeItem2 item = availableItems[0];", "-\t\t\tselectItem(item, false);", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tEvent newEvent = new Event();", "-\t\t\tnewEvent.item = item;", "-\t\t\tsendEvent(SWT.Selection, newEvent);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(0);", "-\t\t\treturn;", "+\t\tif (focusItem.availableIndex == 0) return; \t\t/* at top */", "+\t\tTreeItem2 item = availableItems[0];", "+\t\tselectItem(item, false);", "+\t\tsetFocusItem(item, true);", "+\t\tEvent newEvent = new Event();", "+\t\tnewEvent.item = item;", "+\t\tsendEvent(SWT.Selection, newEvent);", "+\t\tshowItem(item);", "+\t\tredrawItem(0);", "+\t\treturn;", "-\t\t\t// TODO scroll to top, fire selection (?) but don't change it", "-\t\t} else {", "-\t\t\tif (focusItem.availableIndex == 0) return; /* at top */", "-\t\t\tTreeItem2 item = availableItems[0];", "-\t\t\tsetFocusItem(item, true);", "-\t\t\tshowItem(item);", "-\t\t\tredrawItem(item.availableIndex);", "+\t\t\tsetTopItem(availableItems[0]);", "-\t} else {", "-\t\t// TODO select anchor -> top", "+\t\tif (focusItem.availableIndex == 0) return; /* at top */", "+\t\tTreeItem2 item = availableItems[0];", "+\t\tsetFocusItem(item, true);", "+\t\tshowItem(item);", "+\t\tredrawItem(item.availableIndex);", "+\t\treturn;", "+\tif (anchorItem == null) anchorItem = focusItem;", "+\tTreeItem2 selectedItem = availableItems[0];", "+\tint anchorIndex = anchorItem.availableIndex;", "+\tint selectIndex = selectedItem.availableIndex;", "+\tTreeItem2[] newSelection = new TreeItem2 [anchorIndex + 1];", "+\tint writeIndex = 0;", "+\tfor (int i = anchorIndex; i >= 0; i--) {", "+\t\tnewSelection[writeIndex++] = availableItems[i];", "+\t}", "+\tsetSelection(newSelection);", "+\tsetFocusItem(selectedItem, true);", "+\tEvent newEvent = new Event();", "+\tnewEvent.item = selectedItem;", "+\tsendEvent(SWT.Selection, newEvent);", "+\tshowItem(selectedItem);", "+\tredrawItems(anchorIndex, selectIndex);", "+\treturn;"]}], "num": 51686}