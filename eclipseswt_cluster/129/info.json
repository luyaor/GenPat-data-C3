{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48dce5fca5862fde9b8e37e57eea356c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b9ef4d801063ae55ae62a71a1fceafe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "06cfb2472f7282169dadc570fa0ea5af36fdf8fd", "commitAfterChange": "958d022d9eb894b2a4d737dc59c9428f430b1c30", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test_getLineDelimiter()", "signatureAfterChange": "  public void test_getLineDelimiter()", "diff": ["-\twarnUnimpl(\"Test test_getLineDelimiter not written\");", "+\tString platform = SWT.getPlatform();", "+\tString delimiter = text.getLineDelimiter();", "+\tif (platform.equals(\"win32\")) {", "+\t\tassertTrue(\":a:\", delimiter.equals(\"\\r\\n\"));", "+\t} else if (platform.equals(\"motif\")) {", "+\t\tassertTrue(\":a:\", delimiter.equals(\"\\n\"));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93564ab8ef6379b96c5ad709d328e878", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "1e592dcba6ad992459afe378bdb018e1a69dd4e3", "commitAfterChange": "1eb9f54004c0d9607879fe94d8b89257ce78248a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \r public StyledText(Composite parent, int style)", "signatureAfterChange": "\r \r public StyledText(Composite parent, int style)", "diff": ["+\tString codePage = System.getProperty(\"file.encoding\").toUpperCase();\r", "+\tboolean isWindows = System.getProperty(\"os.name\").startsWith(\"Windows\");\r", "+\t\r", "+\t// Running on Windows and with Hebrew or Arabic codepage?\r", "+\tisBidi = isWindows && (\"CP1255\".equals(codePage) || \"CP1256\".equals(codePage));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e171fa253effe44a332817e332ffb7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/WindowCreator2.java", "commitBeforeChange": "56e7d36bc90593daaa357ec9bff3f72bf2773fcc", "commitAfterChange": "80e2cb300d2a1ee580bd9649c2e181cedb302ad2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  int CreateChromeWindow2 (int parent, int chromeFlags, int contextFlags, int uri, int cancel, int _retval)", "signatureAfterChange": "  int CreateChromeWindow2 (int parent, int chromeFlags, int contextFlags, int uri, int cancel, int _retval)", "diff": ["+", "+\t\t/* Ensure that the Browser provided by the client is valid for use */ ", "+\t\tif (doit) {", "+\t\t\tString platform = Platform.PLATFORM;", "+\t\t\tboolean isMozillaNativePlatform = platform.equals (\"gtk\") || platform.equals (\"motif\");", "+\t\t\tdoit = isMozillaNativePlatform || (browser.getStyle () & SWT.MOZILLA) != 0;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84affe1659df0c5ae2241d920b4299ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/hoverhelp/HoverHelp.java", "commitBeforeChange": "df73cd47779691e2e4c9cf3cf905c7ad5689c98d", "commitAfterChange": "3e0a0bf134afb8f4e33653801acb40d3e5239d0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void createPartControl(Composite frame)", "signatureAfterChange": " \tpublic void createPartControl(Composite frame)", "diff": ["+\t\tString platform = SWT.getPlatform();", "+\t\tString helpKey = \"F1\";", "+\t\tif (platform.equals(\"gtk\")) helpKey = \"Ctrl+F1\";", "+\t\tif (platform.equals(\"carbon\") || platform.equals(\"cocoa\")) helpKey = \"Help\";", "+", "-\t\t\t\tnew Object[] { item.getText() }));", "+\t\t\t\tnew Object[] { item.getText(), helpKey }));", "-\t\t\t\tnew Object[] { item.getText() }));", "+\t\t\t\tnew Object[] { item.getText(), helpKey }));", "-\t\t\t\tnew Object[] { item.getText() }));", "+\t\t\t\tnew Object[] { item.getText(), helpKey}));"]}], "num": 129}