{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27197c5dd98ef260a3ff5082902ea7b1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98dc91311c5485b00f60868904f96ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "cffff79d915fb2c4476fba4c1c1103774a10b35e", "commitAfterChange": "3875e3ba1aa64e10bf5a0c495760e14e055a1a52", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\t* Feature in Windows. If the combo box has the CBS_DROPDOWN\r", "+\t* Feature in Windows.  If the combo box has the CBS_DROPDOWN\r", "-\t\tsuper.setBounds (x, y, width, textHeight + 6 + (itemHeight * 5) + 2, flags);\r", "+\t\theight = textHeight + 6 + (itemHeight * 5) + 2;\r", "+\t\t/*\r", "+\t\t* Feature in Windows.  When a drop down combo box is resized,\r", "+\t\t* the combo box resizes height of the text field and uses the\r", "+\t\t* height provided in SetWindowPos () to determine the height\r", "+\t\t* of the drop down list.  For some reason, the combo box redraws\r", "+\t\t* the whole area, not just the text field.  The fix is to clear\r", "+\t\t* the SWP_NOSIZE bits when the height of text field and the drop\r", "+\t\t* down list is the same as the requested height.\r", "+\t\t*/\r", "+\t\tRECT rect = new RECT ();\r", "+\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {\r", "+\t\t\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "+\t\t\tif (oldWidth == width && oldHeight == height) flags |= OS.SWP_NOSIZE;\r", "+\t\t}\r", "+\t\tflags |= OS.SWP_NOZORDER | OS.SWP_DRAWFRAME | OS.SWP_NOACTIVATE;\r", "+\t\tOS.SetWindowPos (handle, 0, x, y, width, height, flags);\r", "-\tif ((rect.right - rect.left) != width || (rect.bottom - rect.top) != height) {\r", "+\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "+\tif (oldWidth != width || oldHeight != height) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea68b76e6dded9fbcdde8b1cb357c82", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "c12884543c2112c189267c0c61d2d4be03d0fb91", "commitAfterChange": "0eaf460ab0fa66de00163de57552f78101413d5e", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "\r \r void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\t\t* the combo box resizes height of the text field and uses the\r", "-\t\t* height provided in SetWindowPos () to determine the height\r", "-\t\t* of the drop down list.  For some reason, the combo box redraws\r", "-\t\t* the whole area, not just the text field.  The fix is to clear\r", "-\t\t* the SWP_NOSIZE bits when the height of text field and the drop\r", "-\t\t* down list is the same as the requested height.\r", "+\t\t* the combo box resizes the height of the text field and uses the height\r", "+\t\t* provided in SetWindowPos () to determine the height of the drop down\r", "+\t\t* list.  For some reason, the combo box redraws the whole area, not just\r", "+\t\t* the text field.  The fix is to set the SWP_NOSIZE bits when the height\r", "+\t\t* of text field and the drop down list is the same as the requested\r", "+\t\t* height.\r", "+\t\t* Note.  Setting the width of a combobox to 0 with SetWindowPos does\r", "+\t\t* not update the width of its drop down state as returned by\r", "+\t\t* CB_GETDROPPEDCONTROLRECT.  Verify that the current width is not 0\r", "+\t\t* prior to relying on the value returned by CB_GETDROPPEDCONTROLRECT.\r", "-\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {\r", "-\t\t\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "-\t\t\tif (oldWidth == width && oldHeight == height) flags |= OS.SWP_NOSIZE;\r", "+\t\tOS.GetWindowRect (handle, rect);\r", "+\t\tif (rect.right != rect.left) {\r", "+\t\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDCONTROLRECT, 0, rect) != 0) {\r", "+\t\t\t\tint oldWidth = rect.right - rect.left, oldHeight = rect.bottom - rect.top;\r", "+\t\t\t\tif (oldWidth == width && oldHeight == height) flags |= OS.SWP_NOSIZE;\r", "+\t\t\t}\r"]}], "num": 24278}