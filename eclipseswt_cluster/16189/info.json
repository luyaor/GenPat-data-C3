{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7eef4b3a30bfd014b80d756da8a8f3eb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d4c4fc811642225a049d9c9fcaf2b6c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cairo/org/eclipse/swt/graphics/Path.java", "commitBeforeChange": "c5319bf89ea1686278d68af93aa053fe8bac4ea5", "commitAfterChange": "82d9762c932708c073b22d5340f37497e7b81612", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void addString(String string, float x, float y, Font font)", "signatureAfterChange": " public void addString(String string, float x, float y, Font font)", "diff": ["-\tbyte[] buffer = Converter.wcsToMbcs(null, string, true);", "-\tif (OS.GTK_VERSION >= OS.VERSION(2, 8, 0)) {", "-\t\tint /*long*/ layout = OS.pango_cairo_create_layout(handle);", "-\t\tif (layout == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.pango_layout_set_text(layout, buffer, -1);", "-\t\tOS.pango_layout_set_font_description(layout, font.handle);", "-\t\tCairo.cairo_move_to(handle, x, y);", "-\t\tOS.pango_cairo_layout_path(handle, layout);", "-\t\tOS.g_object_unref(layout);", "-\t} else {", "-\t\tGC.setCairoFont(handle, font);", "-\t\tcairo_font_extents_t extents = new cairo_font_extents_t();", "-\t\tCairo.cairo_font_extents(handle, extents);", "-\t\tdouble baseline = y + extents.ascent;", "-\t\tCairo.cairo_move_to(handle, x, baseline);", "-\t\tCairo.cairo_text_path(handle, buffer);", "-\t}", "+\tGC.addCairoString(handle, string, x, y, font);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af25ddf19caf44f71da3f9308c489ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Canvas.java", "commitBeforeChange": "cc0fad88555aedea732afabf4f640a307f9e13a1", "commitAfterChange": "6cafe1a53c0f4db15b7c20ac96efa6457f877696", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void drawBackground (GC gc, int x, int y, int width, int height)", "signatureAfterChange": " public void drawBackground (GC gc, int x, int y, int width, int height)", "diff": ["-\tcheckWidget ();", "-\tif (gc == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (gc.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "-\tControl control = findBackgroundControl ();", "-\tif (control != null) {", "-\t\tNSRect rect = new NSRect();", "-\t\trect.x = x;", "-\t\trect.y = y;", "-\t\trect.width = width;", "-\t\trect.height = height;", "-\t\tint imgHeight = -1;", "-\t\tGCData data = gc.getGCData();", "-\t\tif (data.image != null) imgHeight =  data.image.getBounds().height;", "-\t\tNSGraphicsContext context = gc.handle;", "-\t\tif (data.flippedContext != null) {", "-\t\t\tNSGraphicsContext.static_saveGraphicsState();", "-\t\t\tNSGraphicsContext.setCurrentContext(context);", "-\t\t}", "-\t\tcontrol.fillBackground (view, context, rect, imgHeight);", "-\t\tif (data.flippedContext != null) {", "-\t\t\tNSGraphicsContext.static_restoreGraphicsState();", "-\t\t}", "-\t} else {", "-\t\tgc.fillRectangle (x, y, width, height);", "-\t}", "+\tdrawBackground(gc, x, y, width, height, 0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a051346afecef15f6a11b3f45b33304d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "be7a6b56ec36f2937282f99ce8f6d3a09d752bb5", "commitAfterChange": "388089e4bec9dc7b9e91ccd2ec44faabbba9290c", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": "  void redrawWidget (int control, int x, int y, int width, int height, boolean children)", "signatureAfterChange": "  void redrawWidget (int control, int x, int y, int width, int height, boolean children)", "diff": ["-\tif (OS.HIVIEW) {", "-\t\tint rgn = OS.NewRgn ();", "-\t\tRect rect = new Rect ();", "-\t\tOS.SetRect (rect, (short) x, (short) y, (short) (x + width), (short) (y + height));", "-\t\tOS.RectRgn (rgn, rect);", "-\t\tif (display.inPaint) {", "-\t\t\tOS.HIViewConvertRegion (rgn, control, 0);", "-\t\t\tinvalWindowRgn (0, rgn);", "-\t\t} else {", "-\t\t\tOS.HIViewSetNeedsDisplayInRegion (control, rgn, true);", "-\t\t\tif (children) redrawChildren (control, rgn);", "-\t\t}", "-\t\tOS.DisposeRgn (rgn);", "-\t\treturn;", "-\t}", "-\tif (!isDrawing (control)) return;", "+\tint rgn = OS.NewRgn ();", "-\tOS.GetControlBounds (control, rect);", "-\tx += rect.left;", "-\ty += rect.top;", "-\tint rectRgn = OS.NewRgn();", "-\tOS.RectRgn (rectRgn, rect);", "-\tint visibleRgn = getVisibleRegion (control, !children);", "-\tOS.SectRgn (rectRgn, visibleRgn, visibleRgn);", "-\tint window = OS.GetControlOwner (control);", "-\tinvalWindowRgn (window, visibleRgn);", "-\tOS.DisposeRgn (rectRgn);", "-\tOS.DisposeRgn (visibleRgn);", "+\tOS.RectRgn (rgn, rect);", "+\tif (display.inPaint) {", "+\t\tOS.HIViewConvertRegion (rgn, control, 0);", "+\t\tinvalWindowRgn (0, rgn);", "+\t} else {", "+\t\tOS.HIViewSetNeedsDisplayInRegion (control, rgn, true);", "+\t\tif (children) redrawChildren (control, rgn);", "+\t}", "+\tOS.DisposeRgn (rgn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5848ac9850686537d4efc1309d2809a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "4631a5a5553c2a27a1c80b2611f4f0cea8081a20", "commitAfterChange": "21eb151f1a668a710645fe690cf473d0b86ddaf0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "signatureAfterChange": " public void copyArea(int srcX, int srcY, int width, int height, int destX, int destY, boolean paint)", "diff": ["-\t\t\t\tlong /*int*/ visibleRegion = 0;", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 0, 0)) {", "-\t\t\t\t\tvisibleRegion = OS.gdk_window_get_visible_region (drawable);", "-\t\t\t\t\tcairo_rectangle_int_t srcRect = new cairo_rectangle_int_t ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = Cairo.cairo_region_create_rectangle (srcRect);", "-\t\t\t\t\tCairo.cairo_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_translate (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tCairo.cairo_region_destroy (visibleRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (copyRegion);", "-\t\t\t\t\tCairo.cairo_region_destroy (invalidateRegion);", "-\t\t\t\t} else {", "-\t\t\t\t\tvisibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "-\t\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "-\t\t\t\t\tsrcRect.x = srcX;", "-\t\t\t\t\tsrcRect.y = srcY;", "-\t\t\t\t\tsrcRect.width = width;", "-\t\t\t\t\tsrcRect.height = height;", "-\t\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_intersect (copyRegion, visibleRegion);", "-\t\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);", "-\t\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "-\t\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "-\t\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "-\t\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (copyRegion);", "-\t\t\t\t\tOS.gdk_region_destroy (invalidateRegion);", "-\t\t\t\t}", "+\t\t\t\tlong /*int*/ visibleRegion = OS.gdk_drawable_get_visible_region (drawable);", "+\t\t\t\tGdkRectangle srcRect = new GdkRectangle ();", "+\t\t\t\tsrcRect.x = srcX;", "+\t\t\t\tsrcRect.y = srcY;", "+\t\t\t\tsrcRect.width = width;", "+\t\t\t\tsrcRect.height = height;", "+\t\t\t\tlong /*int*/ copyRegion = OS.gdk_region_rectangle (srcRect);", "+\t\t\t\tOS.gdk_region_intersect(copyRegion, visibleRegion);", "+\t\t\t\tlong /*int*/ invalidateRegion = OS.gdk_region_rectangle (srcRect);\t", "+\t\t\t\tOS.gdk_region_subtract (invalidateRegion, visibleRegion);", "+\t\t\t\tOS.gdk_region_offset (invalidateRegion, deltaX, deltaY);", "+\t\t\t\tOS.gdk_window_invalidate_region(drawable, invalidateRegion, false);", "+\t\t\t\tOS.gdk_region_destroy (visibleRegion);", "+\t\t\t\tOS.gdk_region_destroy (copyRegion);", "+\t\t\t\tOS.gdk_region_destroy (invalidateRegion);"]}], "num": 16189}