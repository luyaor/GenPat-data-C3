{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d835a10f35249b02a1b0a874d3fa6f01", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6eaa04f65d518b0cbf0866250c0da4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d45e70aae9b240b33f4f8f69514d8f1f3dcf1e1c", "commitAfterChange": "8716a34c38d725dd2a224535ffcdffc8da22613c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  int gtk_key_press_event (int widget, int event)", "signatureAfterChange": "  int gtk_key_press_event (int widget, int event)", "diff": ["-\t/* Stop menu mnemonics when the shell is disabled */", "-\t\treturn (state & DISABLED) != 0 ? 1 : 0;", "+\t\t/* Stop menu mnemonics when the shell is disabled */", "+\t\tif ((state & DISABLED) != 0) return 1;", "+\t\t", "+\t\tif (menuBar != null && !menuBar.isDisposed ()) {", "+\t\t\tControl focusControl = display.getFocusControl ();", "+\t\t\tif (focusControl != null && (focusControl.hooks (SWT.KeyDown) || focusControl.filters (SWT.KeyDown))) {", "+\t\t\t\tint /*long*/ [] accel = new int /*long*/ [1];", "+\t\t\t\tint /*long*/ setting = OS.gtk_settings_get_default ();", "+\t\t\t\tOS.g_object_get (setting, OS.gtk_menu_bar_accel, accel, 0);", "+\t\t\t\tif (accel [0] != 0) {", "+\t\t\t\t\tint [] keyval = new int [1];", "+\t\t\t\t\tint [] mods = new int [1];", "+\t\t\t\t\tOS.gtk_accelerator_parse (accel [0], keyval, mods);", "+\t\t\t\t\tOS.g_free (accel [0]);", "+\t\t\t\t\tif (keyval [0] != 0) {", "+\t\t\t\t\t\tGdkEventKey keyEvent = new GdkEventKey ();", "+\t\t\t\t\t\tOS.memmove (keyEvent, event, GdkEventKey.sizeof);", "+\t\t\t\t\t\tint mask = OS.gtk_accelerator_get_default_mod_mask ();", "+\t\t\t\t\t\tif (keyEvent.keyval == keyval [0] && (keyEvent.state & mask) == (mods [0] & mask)) {", "+\t\t\t\t\t\t\treturn focusControl.gtk_key_press_event (focusControl.focusHandle (), event);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aaac851cd2b22a5ed5b46624a92a0c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "7f1555a570e0630345de4a3befbd9ab7828e99f7", "commitAfterChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " void paint(GC gc, Point paintPosition, TableColumn column)", "signatureAfterChange": " void paint(GC gc, Point paintPosition, TableColumn column)", "diff": ["-", "+\tTable parent = getParent ();", "+\tint itemHeight = parent.getItemHeight ();", "+\t", "+\t}", "+\tColor background = gc.getBackground();", "+\tif (!isSelected() || ((parent.getStyle() & SWT.HIDE_SELECTION) != 0 && !parent.isFocusControl())) {", "+\t\tint width = column.getBounds().width;", "+\t\tint height = itemHeight;", "+\t\tgc.setBackground(getBackground(columnIndex));", "+\t\tgc.fillRectangle(paintPosition.x, paintPosition.y, width, height);", "+\t} else {", "+\t\tif (columnIndex == TableColumn.FIRST) {", "+\t\t\tint width = getImageIndentPixel();", "+\t\t\tint height = itemHeight;", "+\t\t\tgc.setBackground(getBackground (columnIndex));", "+\t\t\tgc.fillRectangle(paintPosition.x, paintPosition.y, width, height);", "+\t\t} else {", "+\t\t\tif ((parent.getStyle() & SWT.FULL_SELECTION) == 0) {", "+\t\t\t\tint width = column.getBounds ().width;", "+\t\t\t\tint height = itemHeight;", "+\t\t\t\tgc.setBackground(getBackground (columnIndex));", "+\t\t\t\tgc.fillRectangle(paintPosition.x, paintPosition.y, width, height);", "+\t\t\t}", "+\t\t}", "+\tgc.setBackground(background);"]}], "num": 52915}