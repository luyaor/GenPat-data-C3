{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e0bac1d00609bb7a698ec2ad54d86a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46733853ffb68990846ba923e4d50106", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "613386a136aed7f7be85acd46a7cab744bbae94d", "commitAfterChange": "e144c0287be1ac0d08cd8310d65398d20b566a1f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void initStyleCombo(FontExtStyles fontExtStyles)", "signatureAfterChange": "\r void initStyleCombo ()", "diff": ["- */\r", "-void initStyleCombo(FontExtStyles fontExtStyles) {\r", "-\tCombo styleCombo = getStyleCombo();\r", "-\tString previousStyle = styleCombo.getText();\r", "-\tstyleCombo.removeAll();\r", "-\tEnumeration styleEnum = fontExtStyles.getStyles(getExtStyleCombo().getText()).elements();\r", "-\twhile (styleEnum.hasMoreElements())\r", "-\t\tstyleCombo.add((String)styleEnum.nextElement());\r", "-\r", "-\tint selectionIndex = styleCombo.indexOf(previousStyle);\r", "-\tif (selectionIndex == -1)\r", "-\t\tselectionIndex = styleCombo.indexOf(DEFAULT_STYLE);\r", "-\tif (selectionIndex == -1)\t// last resort\r", "-\t\tselectionIndex = 0;\r", "-\r", "-\tstyleCombo.select(selectionIndex);\r", "+ */\r", "+void initStyleCombo () {\r", "+\tString oldSelect = fontStyleCombo.getText ();\r", "+\tfontStyleCombo.removeAll ();\r", "+\t\r", "+\tString characterSet = charSetCombo.getText ();\r", "+\tString faceName = faceNameCombo.getText ();\r", "+\tString extStyle = extStyleCombo.getText ();\r", "+\tint size = DEFAULT_SIZE;\r", "+\ttry {\r", "+\t\tsize = Integer.valueOf (fontSizeCombo.getText ()).intValue ();\r", "+\t} catch (NumberFormatException e) {\r", "+\t\t/*\r", "+\t\t * This block is purposely left empty since a default\r", "+\t\t * value is already specified above.\r", "+\t\t */\r", "+\t}\r", "+\tHashtable styles = getStyles (characterSet, faceName, extStyle, size);\r", "+\tif (styles == null) return;\r", "+\tsetItemsSorted (fontStyleCombo, styles);\r", "+\t\r", "+\tint selectIndex = fontStyleCombo.indexOf (oldSelect);\r", "+\tif (selectIndex == -1) {\r", "+\t\tselectIndex = fontStyleCombo.indexOf (String.valueOf (DEFAULT_STYLE));\r", "+\t}\r", "+\tselectIndex = Math.max (0, selectIndex);\r", "+\tfontStyleCombo.select (selectIndex);\r", "+\tfontStyleCombo.setData (new Integer (selectIndex));\r", "+\tfontStyleCombo.select (Math.max (0, selectIndex));\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d41bebcf699f9712eb520c1b58e9feee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "613386a136aed7f7be85acd46a7cab744bbae94d", "commitAfterChange": "e144c0287be1ac0d08cd8310d65398d20b566a1f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r FontData getSelectionFontData()", "signatureAfterChange": "\r FontData getSelectionFontData ()", "diff": ["-FontData getSelectionFontData() {\r", "-\tString fontSize = getSizeCombo().getText();\r", "-\tString style = getStyleCombo().getText();\r", "-\tString extStyle = getExtStyleCombo().getText();\r", "-\tint styleBits = SWT.NULL;\r", "-\tInteger fontSizeInt = null;\r", "-\tFontData fontData;\r", "-\r", "-\tif (style.indexOf(FontExtStyles.BOLD) != -1) {\r", "-\t\tstyleBits |= SWT.BOLD;\r", "-\t}\r", "-\tif (style.indexOf(FontExtStyles.ITALIC) != -1) {\r", "-\t\tstyleBits |= SWT.ITALIC;\r", "-\t}\r", "+FontData getSelectionFontData () {\r", "+\tString charSetName = charSetCombo.getText ();\r", "+\tString faceName = faceNameCombo.getText ();\r", "+\tString extStyle = extStyleCombo.getText ();\r", "+\tint size = DEFAULT_SIZE;\r", "-\t\tfontSizeInt = Integer.valueOf(fontSize);\r", "+\t\tsize = Integer.valueOf (fontSizeCombo.getText ()).intValue ();\r", "+\t} catch (NumberFormatException e) {\r", "+\t\t/*\r", "+\t\t * This block is purposely left empty since a default\r", "+\t\t * value is already specified above.\r", "+\t\t */\r", "-\tcatch (NumberFormatException exception) {}\r", "-\tif (fontSizeInt != null) {\r", "-\t\tfontData = new FontData(\r", "-\t\t\tgetSelectedFaceName(),\r", "-\t\t\tfontSizeInt.intValue(),\r", "-\t\t\tstyleBits);\r", "+\tString style = fontStyleCombo.getText ();\r", "+\tFontData result = getFontData (charSetName, faceName, extStyle, size, style);\r", "+\r", "+\tif (result == null) {\r", "+\t\t/*\r", "+\t\t* One or more of the dialog's widgets contain custom typed values.\r", "+\t\t* Create a FontData that mirrors these values so that the Font created\r", "+\t\t* below will try to find the best match.\r", "+\t\t*/\r", "+\t\tresult = new FontData ();\r", "+\t\tresult.characterSetRegistry = charSetName;\r", "+\t\tresult.setName(faceName);\r", "+\t\tresult.addStyle = extStyle;\r", "+\t\tresult.weight = style;\r", "-\telse {\r", "-\t\tfontData = new FontData();\r", "-\t\tfontData.setName(getSelectedFaceName());\r", "-\t\tfontData.setStyle(styleBits);\r", "-\t}\r", "-\tif (extStyle.length() > 0) {\r", "-\t\tfontData.addStyle = extStyle;\r", "-\t}\r", "-\tfontData.characterSetRegistry = getSelectedCharSet();\r", "-\tfontData.foundry = getSelectedFoundry();\r", "-\treturn fontData;\r", "+\tresult.setHeight (size);\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb90f0e761944d7479cc6cc5682f15c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "7642901f5e71800ac23df56ff40b8bf6a0b8f982", "commitAfterChange": "11d7e622edab38042f1e9855a2ec52dfb4825a8d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r void initSizeCombo(FontExtStyles fontExtStyles)", "signatureAfterChange": "\r void initSizeCombo(FontExtStyles fontExtStyles)", "diff": ["-\tVector sizes = null;\r", "-\tInteger size;\r", "-\tString sizeStrings[] = {\"8\", \"10\", \"11\", \"12\", \"14\", \"16\", \"18\", \"22\", \"24\", \"26\"};\r", "-\tint selectionIndex = -1;\r", "-\tfinal int SelectionSize = 14;\t\r", "-\r", "+\tString previousSize = sizeCombo.getText();\r", "-\tif (fontExtStyles.isScalable() == true) {\r", "-\t\tsizeCombo.setItems(sizeStrings);\r", "-\t\tselectionIndex = 4;\r", "+\r", "+\tint selectionIndex = -1;\r", "+\r", "+\tif (fontExtStyles.isScalable()) {\r", "+\t\tsizeCombo.setItems(SCALABLE_SIZES);\r", "+\t\tselectionIndex = sizeCombo.indexOf(String.valueOf(SELECTION_SIZE));\r", "-\t\tsizes = fontExtStyles.getSizes(getExtStyleCombo().getText());\r", "+\t\tVector sizes = fontExtStyles.getSizes(getExtStyleCombo().getText());\r", "-\t\t\tsize = (Integer) sizes.elementAt(i);\r", "+\t\t\tInteger size = (Integer) sizes.elementAt(i);\r", "-\t\t\tif (size.intValue() >= SelectionSize && selectionIndex == -1) {\r", "+\t\t\t// select the largest height if there's no font\r", "+\t\t\t// size that is at least as high as SelectionSize\r", "+\t\t\tif (size.intValue() >= SELECTION_SIZE && selectionIndex == -1)\r", "-\t\t\t}\r", "-\t}\t\r", "-\tif (selectionIndex == -1) {\r", "-\t\tselectionIndex = sizes.size() - 1;\t\t\t// select largest height if there's no font \r", "-\t\t\t\t\t\t\t\t\t\t\t\t\t// size that is at least as high as SelectionSize \r", "+\r", "+\tint indexOfPreviousSelection = sizeCombo.indexOf(previousSize);\r", "+\tif (indexOfPreviousSelection != -1)\r", "+\t\tselectionIndex = indexOfPreviousSelection;\r", "+\r", "+\tif (selectionIndex == -1)\t// last resort case, should not happen\r", "+\t\tselectionIndex = sizeCombo.getItemCount() - 1;\t\t\t\r", "+\r"]}], "num": 41913}