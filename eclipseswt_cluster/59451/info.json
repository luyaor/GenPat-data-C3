{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd22076161233afaa212eb8627e2c63d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43e4b79a0b1eee998bed9dd4356dcd97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "9fc99bd2bc8db57e21ddb6c8347edd915b20a986", "commitAfterChange": "1e1ccbf61bda268533d4d88e38bb0e1f77b71b26", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 1, "signatureBeforeChange": " void setBitmap (Image image)", "signatureAfterChange": " void _setImage (Image image)", "diff": ["+void _setImage (Image image) {", "+\tint labelPixmap = OS.XmUNSPECIFIED_PIXMAP;", "+\tint labelInsensitivePixmap = OS.XmUNSPECIFIED_PIXMAP;", "+\tif (bitmap != null) bitmap.dispose ();", "+\tif (disabled != null) disabled.dispose ();", "+\tbitmap = disabled = null;", "+\tif (image != null) {", "+\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "+\t\tswitch (image.type) {", "+\t\t\tcase SWT.BITMAP:", "+\t\t\t\tImageData data;", "+\t\t\t\tif (image.mask == 0\t&& (data = image.getImageData ()).alpha == -1 && data.alphaData == null && data.transparentPixel == -1) {", "+\t\t\t\t\tlabelPixmap = image.pixmap;", "+\t\t\t\t\tdisabled = new Image (display, image, SWT.IMAGE_DISABLE);", "+\t\t\t\t\tlabelInsensitivePixmap = disabled.pixmap;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\t//FALL THROUGH", "+\t\t\tcase SWT.ICON:", "+\t\t\t\tRectangle rect = image.getBounds ();", "+\t\t\t\tbitmap = new Image (display, rect.width, rect.height);", "+\t\t\t\tGC gc = new GC (bitmap);", "+\t\t\t\tgc.setBackground (getBackground ());", "+\t\t\t\tgc.fillRectangle (rect);", "+\t\t\t\tgc.drawImage (image, 0, 0);", "+\t\t\t\tgc.dispose ();", "+\t\t\t\tlabelPixmap = bitmap.pixmap;", "+\t\t\t\tdisabled = new Image (display, bitmap, SWT.IMAGE_DISABLE);", "+\t\t\t\tlabelInsensitivePixmap = disabled.pixmap;", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\terror (SWT.ERROR_NOT_IMPLEMENTED);", "+\t\t}", "+\t}", "+\tint [] argList = {", "+\t\tOS.XmNlabelType, image == null ? OS.XmSTRING : OS.XmPIXMAP,", "+\t\tOS.XmNlabelPixmap, labelPixmap,", "+\t\tOS.XmNlabelInsensitivePixmap, labelInsensitivePixmap,", "+\t};", "+\tOS.XtSetValues (handle, argList, argList.length / 2);", "+}", "-void setBitmap (Image image) {", "-\tint labelPixmap = OS.XmUNSPECIFIED_PIXMAP;", "-\tint labelInsensitivePixmap = OS.XmUNSPECIFIED_PIXMAP;", "-\tif (bitmap != null) bitmap.dispose ();", "-\tif (disabled != null) disabled.dispose ();", "-\tbitmap = disabled = null;", "-\tif (image != null) {", "-\t\tif (image.isDisposed()) error(SWT.ERROR_INVALID_ARGUMENT);", "-\t\tswitch (image.type) {", "-\t\t\tcase SWT.BITMAP:", "-\t\t\t\tImageData data;", "-\t\t\t\tif (image.mask == 0\t&& (data = image.getImageData ()).alpha == -1 && data.alphaData == null && data.transparentPixel == -1) {", "-\t\t\t\t\tlabelPixmap = image.pixmap;", "-\t\t\t\t\tdisabled = new Image (display, image, SWT.IMAGE_DISABLE);", "-\t\t\t\t\tlabelInsensitivePixmap = disabled.pixmap;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\t//FALL THROUGH", "-\t\t\tcase SWT.ICON:", "-\t\t\t\tRectangle rect = image.getBounds ();", "-\t\t\t\tbitmap = new Image (display, rect.width, rect.height);", "-\t\t\t\tGC gc = new GC (bitmap);", "-\t\t\t\tgc.setBackground (getBackground ());", "-\t\t\t\tgc.fillRectangle (rect);", "-\t\t\t\tgc.drawImage (image, 0, 0);", "-\t\t\t\tgc.dispose ();", "-\t\t\t\tlabelPixmap = bitmap.pixmap;", "-\t\t\t\tdisabled = new Image (display, bitmap, SWT.IMAGE_DISABLE);", "-\t\t\t\tlabelInsensitivePixmap = disabled.pixmap;", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\terror (SWT.ERROR_NOT_IMPLEMENTED);", "-\t\t}", "-\t}", "-\tint [] argList = {", "-\t\tOS.XmNlabelType, image == null ? OS.XmSTRING : OS.XmPIXMAP,", "-\t\tOS.XmNlabelPixmap, labelPixmap,", "-\t\tOS.XmNlabelInsensitivePixmap, labelInsensitivePixmap,", "-\t};", "-\tOS.XtSetValues (handle, argList, argList.length / 2);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f93c16498de4412266efc9696418322", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4a41229267d8ec39ffddb937135f7f228c3d90ec", "commitAfterChange": "a3f5ef23bb9a2d806a5c1b1bcf9eba42e3d5e4ca", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \r private void initCloseButtonImages()", "signatureAfterChange": "\r \r private void updateCloseBar()", "diff": ["-private void initCloseButtonImages() {\r", "-\tif (closeImage != null) return;\r", "-\r", "-\ttry {\r", "-\t\tDisplay display = getDisplay();\r", "-\t\tImage image = new Image(display, CTabFolder.class.getResourceAsStream(\"close.gif\"));\r", "-\t\tImageData source = image.getImageData();\r", "-\t\tImageData mask = source.getTransparencyMask();\r", "-\t\timage.dispose();\r", "-\t\tcloseImage = new Image(display, source, mask);\r", "-\t} catch (Error e) {\r", "-\t\tcloseImage = null;\r", "-\t\treturn;\r", "-\t}\r", "+private void updateCloseBar() {\r", "+\tint imageHeight = getTabHeight() - CTabItem.TOP_MARGIN - CTabItem.BOTTOM_MARGIN - 6;\r", "+\tif (imageHeight < 4) return;\r", "-\tcloseItem.setDisabledImage(closeImage);\r", "+\tif (closeImage != null && closeImage.getBounds().height == imageHeight) return;\r", "+\t\r", "+\tif (closeBar != null) closeBar.dispose();\r", "+\tcloseBar = null;\r", "+\tif (inactiveCloseBar != null) inactiveCloseBar.dispose();\r", "+\tinactiveCloseBar = null;\r", "+\tcreateCloseBar();\r", "+\t\r", "+\tToolItem closeItem = closeBar.getItems()[0];\r", "+\tToolItem inactiveCloseItem = inactiveCloseBar.getItems()[0];\r", "+\t\t\r", "+\tif (closeImage != null) closeImage.dispose();\r", "+\t\r", "+\tDisplay display = getDisplay();\r", "+\tColor foreground = getForeground();\r", "+\tColor black = display.getSystemColor(SWT.COLOR_BLACK);\r", "+\tColor background = getBackground();\r", "+\t\r", "+\tPaletteData palette = new PaletteData(new RGB[]{foreground.getRGB(), background.getRGB(), black.getRGB()});\r", "+\tImageData imageData = new ImageData(imageHeight, imageHeight, 4, palette);\r", "+\timageData.transparentPixel = 1;\r", "+\tcloseImage = new Image(display, imageData);\r", "+\tGC gc = new GC(closeImage);\r", "+\tgc.setBackground(background);\r", "+\tgc.fillRectangle(0, 0, imageHeight, imageHeight);\r", "+\tgc.setForeground(black);\r", "+\t\r", "+\tint h = (imageHeight /2 )* 2;\r", "+\tgc.drawLine( 0, 0,     h - 2, h - 2);\r", "+\tgc.drawLine( 1, 0,     h,     h - 1);\r", "+\tgc.drawLine( 0, h - 2, h - 2, 0);\r", "+\tgc.drawLine( 1, h - 2, h - 1, 0);\r", "+\t\r", "+\tgc.dispose();\r", "+\t\r", "-\tinactiveCloseItem.setDisabledImage(closeImage);\r", "-\t\r", "-\tPoint size = closeBar.computeSize(SWT.DEFAULT, SWT.DEFAULT);\r", "-\tcloseBar.setSize(size);\r", "-\tinactiveCloseBar.setSize(size);\r"]}], "num": 59451}