{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "321b1305f36b38da36fa192ca1b19c00", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5feedb3c7d789be013a7f82c02809b8e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "05062011ec006f59f715171365cb00eef8b34fc6", "commitAfterChange": "892049c2f2c67d90c4745629fadad3a2ae18fb2b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url)", "diff": ["-\tStringBuffer buffer = new StringBuffer();", "-\tif (url.indexOf('/') == 0) buffer.append(\"file://\"); //$NON-NLS-1$  //$NON-NLS-2$", "-\telse if (url.indexOf(':') == -1) buffer.append(\"http://\");\t //$NON-NLS-1$", "-\tfor (int i = 0; i < url.length(); i++) {", "-\t\tchar c = url.charAt(i);", "-\t\tif (c == ' ') buffer.append(\"%20\"); //$NON-NLS-1$  //$NON-NLS-2$", "-\t\telse buffer.append(c);", "+\tif (url.startsWith(PROTOCOL_FILE)) {", "+\t\turl = url.substring(PROTOCOL_FILE.length());", "-\t", "-\tint length = buffer.length();", "+\tint selector = Cocoa.S_fileURLWithPath;", "+\tboolean isHttpURL = url.indexOf('/') != 0;", "+\tif (isHttpURL) {", "+\t\tselector = Cocoa.S_URLWithString;", "+\t\tif (url.indexOf(':') == -1) {", "+\t\t\turl = PROTOCOL_HTTP + \"//\" + url; //$NON-NLS-1$", "+\t\t}", "+\t}", "+\tint length = url.length();", "-\tbuffer.getChars(0, length, chars, 0);", "+\turl.getChars(0, length, chars, 0);", "-", "-\t/*", "-\t* Note.  URLWithString uses autorelease.  The resulting URL", "-\t* does not need to be released.", "-\t* inURL = [NSURL URLWithString:(NSString *)sHandle]", "-\t*/\t", "-\tint inURL= Cocoa.objc_msgSend(Cocoa.C_NSURL, Cocoa.S_URLWithString, sHandle);", "+\t/* NSURL.fileURLWithPath and NSURL.URLWithString do autorelease */", "+\tint inURL = Cocoa.objc_msgSend(Cocoa.C_NSURL, selector, sHandle);", "-\t\t", "+\tif (inURL == 0) return false;", "+", "-\t", "+", "-\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959eaa90ff6fb1597a4c92bb935e7008", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "892049c2f2c67d90c4745629fadad3a2ae18fb2b", "commitAfterChange": "303a0ee188e496d183a1557ad329faa13fc44d6a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url)", "diff": ["-\tStringBuffer buffer = new StringBuffer();", "-\tif (url.indexOf('/') == 0) buffer.append(\"file://\"); //$NON-NLS-1$  //$NON-NLS-2$", "-\telse if (url.indexOf(':') == -1) buffer.append(\"http://\");\t //$NON-NLS-1$", "-\tfor (int i = 0; i < url.length(); i++) {", "-\t\tchar c = url.charAt(i);", "-\t\tif (c == ' ') buffer.append(\"%20\"); //$NON-NLS-1$  //$NON-NLS-2$", "-\t\telse buffer.append(c);", "+", "+\tNSURL inURL;", "+\tif (url.startsWith(PROTOCOL_FILE)) {", "+\t\turl = url.substring(PROTOCOL_FILE.length());", "-\tNSURL inURL = NSURL.static_URLWithString_(NSString.stringWith(buffer.toString()));", "+\tboolean isHttpURL = url.indexOf('/') != 0;", "+\tif (isHttpURL) {", "+\t\tif (url.indexOf(':') == -1) {", "+\t\t\turl = PROTOCOL_HTTP + \"//\" + url; //$NON-NLS-1$", "+\t\t}", "+\t\tinURL = NSURL.static_URLWithString_(NSString.stringWith(url.toString()));", "+\t} else {", "+\t\tinURL = NSURL.static_fileURLWithPath_(NSString.stringWith(url.toString()));", "+\t}", "+\tif (inURL == null) return false;", "+"]}], "num": 46276}