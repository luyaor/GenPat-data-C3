{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe5304126c271234d9a6be013d518f2f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d785ae5ac4cc6c91319fc6f7392ec7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebUIDelegate.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  int createWebViewWithRequest (int sender, int request, int webView)", "signatureAfterChange": "  int createWebViewWithRequest (int sender, int request, int webView)", "diff": ["-\tif (openWindowListeners != null) {", "-\t\tfor (int i = 0; i < openWindowListeners.length; i++) {", "-\t\t\topenWindowListeners[i].open (newEvent);", "-\t\t}", "+\tfor (int i = 0; i < openWindowListeners.length; i++) {", "+\t\topenWindowListeners[i].open (newEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ab1085fdee6db6c671cf052c5191d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "95d338add199c785c6787d425bc27251c4bca2d5", "commitAfterChange": "052631f59a9a00719abe7032a2d2b156e640164c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r void mouseHover(Event event)", "signatureAfterChange": "\r void mouseHover(Event event)", "diff": ["-\t\tif (items != null) {\r", "-\t\t\tPoint point = new Point(event.x, event.y);\r", "-\t\t\tfor (int i=0; i<items.length; i++) {\r", "-\t\t\t\tif (items[i].getBounds().contains(point)) {\r", "-\t\t\t\t\tString string = items[i].getToolTipText();\r", "-\t\t\t\t\tif (string != null && !string.equals(current)) {\r", "-\t\t\t\t\t\tsuper.setToolTipText(string);\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\treturn;\r", "+\t\tPoint point = new Point(event.x, event.y);\r", "+\t\tfor (int i=0; i<items.length; i++) {\r", "+\t\t\tif (items[i].getBounds().contains(point)) {\r", "+\t\t\t\tString string = items[i].getToolTipText();\r", "+\t\t\t\tif (string != null && !string.equals(current)) {\r", "+\t\t\t\t\tsuper.setToolTipText(string);\r", "+\t\t\t\treturn;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2282f60d021eb72fc54d0edc4f5f94b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "c89bab5bedb26789fc55835a14938a4fc6d4cc5c", "commitAfterChange": "8b04106dcfac2380b6792586458d07b21132dfcb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void init(Device device, String name, int height, int style)", "signatureAfterChange": "  void init(Device device, String name, int height, int style)", "diff": ["-\tif (USE_ATSUI) {", "-\t\tthis.atsuiStyle = createStyle();", "-\t}", "+\tthis.atsuiStyle = createStyle();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b16226d47e41a6b7824d68d607c50426", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "409208d6d4b1a68eff6380851a4426d1f663d5c1", "commitAfterChange": "c407d3ccf9bd8bcf88b474a11dfc54ec1f4f35c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  double computeWidth (int columnIndex)", "signatureAfterChange": "  double computeWidth (int columnIndex)", "diff": ["-\t\t/*", "-\t\t * Bug in WPF. The DesiredSize property of the content presenter is always 0", "-\t\t * for all columns except the first column. The work around is to Measure the", "-\t\t * content presenter before asking for its DesiredSize. Calling Measure on the ", "-\t\t * first column does not work because it will set DesiredSize to be equal to the ", "-\t\t * available size you pass into the Measure function. ", "-\t\t */", "-\t\tif (columnIndex != 0) { ", "-\t\t\tint availSize = OS.gcnew_Size (0x7FFFFFFF,0x7FFFFFFF);", "-\t\t\tOS.UIElement_Measure (contentPresenter, availSize);", "-\t\t\tOS.GCHandle_Free (availSize);", "-\t\t}", "+\t\tint availSize = OS.gcnew_Size (0x7FFFFFFF,0x7FFFFFFF);", "+\t\tOS.UIElement_Measure (contentPresenter, availSize);", "+\t\tOS.GCHandle_Free (availSize);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bfc1e300260213985834899feb79983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "1e98dbe1530e9e3b1a311cfb51720f74be64f75f", "commitAfterChange": "77d1bc1dfbf7a3037e5eee68eb8d96fd67f55440", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  boolean setScrollWidth (TableItem item, boolean force)", "signatureAfterChange": "  boolean setScrollWidth (TableItem item, boolean force)", "diff": ["-\t\tif (EXPLORER_THEME) {", "-\t\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "-\t\t\t\tnewWidth += EXPLORER_EXTRA;", "-\t\t\t}", "+\t\tif (!OS.IsWinCE && OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t\tnewWidth += VISTA_EXTRA;"]}], "num": 22408}