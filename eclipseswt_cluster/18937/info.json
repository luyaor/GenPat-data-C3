{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1206af8e215de86af50359df0c70ea7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc2e10a5568eb3350c76bf1bcdb408b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "e8a5731799712d4724598a9699f089cf83271c5b", "commitAfterChange": "cd1cc037b1168f84b19a92aa831a5521ef1002b1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "signatureAfterChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "diff": ["-\tString[] oldItems = this.items;", "-\tint selectedIndex = -1;", "-\tif (keepSelection) selectedIndex = getSelectionIndex ();", "+\tString text = keepText ? getText() : \"\";", "+\tint selectedIndex = keepSelection ? getSelectionIndex() : -1;", "+\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "-\t\t/*", "-\t\t* Feature in GTK.  A call to gtk_combo_set_popdown_strings will result in the top item", "-\t\t* being selected and a SELECT_CHILD and CHANGED event will be sent.  In the case", "-\t\t* where there are no entires in the widget and the first item has been added, inform the", "-\t\t* application that a selection has occurred.  However, in all other cases, the previous", "-\t\t* selection is maintained and the application should not be notified of a selection change.", "-\t\t* The fix is to allow the SELECT_CHILD and CHANGED to be sent when the first item", "-\t\t* is added.", "-\t\t*/", "-\t\tboolean block = oldItems != null && oldItems.length > 0;", "-\t\tif (block) {", "-\t\t\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "-\t\t}", "-\t\tif (block) {", "-\t\t\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\t\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "-\t\t}", "-\tif (keepSelection) select (selectedIndex);", "-\tif (!keepText) OS.gtk_editable_delete_text (entryHandle, 0, -1);", "+\tOS.gtk_entry_set_text (entryHandle, Converter.wcsToMbcs (null, selectedIndex != -1 ? items [selectedIndex] : text, true));", "+\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea4fb531f922dceee7d3f3b3844f34b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "06f4740293e90e57bff4533048824d8ea3910bfe", "commitAfterChange": "3ec53a36badea8b67ca02e730657468177200562", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "signatureAfterChange": " \t void setItems (String [] items, boolean keepText, boolean keepSelection)", "diff": ["+\tString[] oldItems = this.items;", "-\t\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t/*", "+\t\t * A call to gtk_combo_set_popdown_strings will result in the top item being selected", "+\t\t * and a SELECT_CHILD and CHANGED event will be sent.  In the case where there", "+\t\t * are no entires in the Combo widget and the first item is added, it is neccessary", "+\t\t * to inform the application that a selection has occurred.  However, in all other cases,", "+\t\t * the previous selection should be maintained and the application should not", "+\t\t * be notified of a selection change.", "+\t\t */", "+\t\tboolean block = oldItems != null && oldItems.length > 0;", "+\t\tif (block) {", "+\t\t\tOS.g_signal_handlers_block_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.g_signal_handlers_block_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t}", "-\t\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "-\t\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\tif (block) {", "+\t\t\tOS.g_signal_handlers_unblock_matched (entryHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.g_signal_handlers_unblock_matched (listHandle, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, SELECT_CHILD);", "+\t\t}"]}], "num": 18937}