{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "962d71db0465441d563a983fcc907342", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32bfe4d7f9b951b1d19df45bc125031", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "18ce373e262126236e66fff74f7d2ddc7fffb312", "commitAfterChange": "41ad2a506242e46d3b0d85d794d3bd6a732e7252", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tid getSelectedAttribute(int childID)", "signatureAfterChange": "  \tid getSelectedAttribute(int childID)", "diff": ["+\t\t\tevent.row = index;", "-\t\t\t\tlistener.getSelectedRows(event);", "-\t\t\t}", "-\t\t\tif (event.accessibles != null) {", "-\t\t\t\tfor (int i = 0; i < event.accessibles.length; i++) {", "-\t\t\t\t\tif (this.equals(event.accessibles[i])) return NSNumber.numberWithBool(true);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < accessibleTableListeners.size(); i++) {", "-\t\t\t\tAccessibleTableListener listener = (AccessibleTableListener)accessibleTableListeners.elementAt(i);", "-\t\t\t\tlistener.getSelectedColumns(event);", "-\t\t\t}", "-\t\t\tif (event.accessibles != null) {", "-\t\t\t\tfor (int i = 0; i < event.accessibles.length; i++) {", "-\t\t\t\t\tif (this.equals(event.accessibles[i])) return NSNumber.numberWithBool(true);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tif (accessibleTableCellListeners.size() > 0) {", "-\t\t\tAccessibleTableCellEvent event = new AccessibleTableCellEvent(this);", "-\t\t\tfor (int i = 0; i < accessibleTableCellListeners.size(); i++) {", "-\t\t\t\tAccessibleTableCellListener listener = (AccessibleTableCellListener) accessibleTableCellListeners.elementAt(i);", "-\t\t\t\tlistener.isSelected(event);", "+\t\t\t\tif (currentRole == ACC.ROLE_ROW)", "+\t\t\t\t\tlistener.isRowSelected(event);", "+\t\t\t\telse", "+\t\t\t\t\tlistener.isColumnSelected(event);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5b1ce7489109153ed6de61f6a78eb9c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "905b3909331e9158540f896976d5079deb353ba1", "commitAfterChange": "49ec03c84e5dd4da3a34a5d736fc9d86bb7e427c", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " void setZOrder (Control control, boolean above)", "signatureAfterChange": " void setZOrder (Control control, boolean above)", "diff": ["-\tif (control != null && control.parent != parent)", "-\t\treturn;", "+\tif (control != null && control.parent != parent) return;", "-\tint pos= 0;", "-\tshort[] cnt= new short[1];", "-\tOS.CountSubControls(destHandle, cnt);", "-\tint count= cnt[0];", "-\tint children[]= new int[count];", "-\tint[] outHandle= new int[1];", "-\tint to= 0;", "-\tfor (int i= 0; i < count; i++) {", "-\t\tif (OS.GetIndexedSubControl(destHandle, (short)(i+1), outHandle) == 0) {", "-\t\t\tint h= outHandle[0];", "-\t\t\tif (h == otherHandle)", "-\t\t\t\tpos= to;", "-\t\t\tif (h != thisHandle)", "-\t\t\t\tchildren[to++]= h;", "-\t\t} else", "-\t\t\terror (SWT.ERROR_CANNOT_GET_ITEM);", "-\t}", "-\t", "-\tif (control == null) {", "-\t\tif (above) pos= to;", "-\t} else {", "-\t\tif (above) pos++;", "-\t}", "-", "-\tfor (int z= children.length-1; z > pos; z--)", "-\t\tchildren[z]= children[z-1];", "-\tchildren[pos]= thisHandle;", "-\t\t", "-\tfor (int i= 0; i < children.length; i++)", "-\t\tMacUtil.OSEmbedControl(children[i], destHandle);", "+\t// AW: doesn't handle reparenting case yet!", "+\tOS.HIViewSetZOrder(thisHandle, above ? OS.kHIViewZOrderAbove : OS.kHIViewZOrderBelow, otherHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cee3c4e1b26dc6ae44679686acb7857", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_Font.java", "commitBeforeChange": "19989c4fec88a024fca05eb48c8712aef47d01b1", "commitAfterChange": "723b9d78269ceb7b4a2397c183dc68eac7b42d6d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLjava_lang_StringII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLjava_lang_StringII()", "diff": ["-\tfinal int COUNT = 10000;\t// 20000 causes No More Handles", "-\t", "-\tFont[] fonts = new Font[COUNT];", "+\tfinal int COUNT = 150000;", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, \"\", 10, SWT.NORMAL);", "+\t\tnew Font(display, \"\", 10, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, \"bad-font\", 10, SWT.NORMAL);", "+\t\tnew Font(display, \"bad-font\", 10, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, SwtJunit.testFontName, 0, SWT.NORMAL);", "+\t\tnew Font(display, SwtJunit.testFontName, 0, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, SwtJunit.testFontName, 10, SWT.NORMAL);", "+\t\tnew Font(display, SwtJunit.testFontName, 10, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, SwtJunit.testFontName, 100, SWT.NORMAL);", "+\t\tnew Font(display, SwtJunit.testFontName, 100, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(display, SwtJunit.testFontName, 10, SWT.BOLD | SWT.ITALIC);", "+\t\tnew Font(display, SwtJunit.testFontName, 10, SWT.BOLD | SWT.ITALIC).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Fonts.  This is done because attempting to pre-create", "+\t\t* more than 20000 Fonts for disposal causes a No More Handles error.", "+\t\t*/ ", "-\t\tfonts[i] = new Font(null, SwtJunit.testFontName, 10, SWT.NORMAL);", "+\t\tnew Font(null, SwtJunit.testFontName, 10, SWT.NORMAL).dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tfonts[i].dispose();", "-\t}"]}], "num": 15564}