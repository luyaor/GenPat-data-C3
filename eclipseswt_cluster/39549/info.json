{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6f84b853e372df5efa85263960a4d9f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9601295bcc63d01e4f6c3d4a7cd30d02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/Clipboard.java", "commitBeforeChange": "e8e496688365659f6f10cecb41db672d7b7c7717", "commitAfterChange": "c5a23ecaba2cdfd1fefa27b27aa4e1ff7bc8c317", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 12, "signatureBeforeChange": " public TransferData[] getAvailableTypes()", "signatureAfterChange": " public TransferData[] getAvailableTypes(int clipboards)", "diff": ["+ */", "+public TransferData[] getAvailableTypes(int clipboards) {", "-\tint[] types = getAvailableClipboardTypes();", "-\tTransferData[] result = new TransferData[types.length];", "-\tfor (int i = 0; i < types.length; i++) {", "-\t\tresult[i] = new TransferData();", "-\t\tresult[i].type = types[i];", "+\tTransferData[] result = null;", "+\tif ((clipboards & DND.CLIPBOARD) != 0) {", "+\t\tint[] types = getAvailableClipboardTypes();", "+\t\tresult = new TransferData[types.length];", "+\t\tfor (int i = 0; i < types.length; i++) {", "+\t\t\tresult[i] = new TransferData();", "+\t\t\tresult[i].type = types[i];", "+\t\t}", "-\treturn result;", "+\tif ((clipboards & DND.SELECTION_CLIPBOARD) != 0) {", "+\t\tint[] types = getAvailablePrimaryTypes();", "+\t\tint offset = 0;", "+\t\tif (result != null) {", "+\t\t\tTransferData[] newResult = new TransferData[result.length + types.length];", "+\t\t\tSystem.arraycopy(result,0, newResult, 0, result.length);", "+\t\t\toffset = result.length;", "+\t\t\tresult = newResult;", "+\t\t} else {", "+\t\t\tresult = new TransferData[types.length];", "+\t\t}", "+\t\tfor (int i = 0; i < types.length; i++) {", "+\t\t\tresult[offset+i] = new TransferData();", "+\t\t\tresult[offset+i].type = types[i];", "+\t\t}", "+\t}", "+\treturn result == null ? new TransferData[0] : result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6629c9982fea6b4a34cdb021c95dcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/carbon/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "8b58c269ee653fc8374b5b45a0e6d529e6a1ef82", "commitAfterChange": "f697c2f3c6cb12d162d7452013f38ec22841b4b0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static PrinterData[] getPrinterList()", "signatureAfterChange": " public static PrinterData[] getPrinterList()", "diff": ["-\tPrinterData printerList[] = new PrinterData[0];", "-\treturn printerList;", "+\tint[] printSession = new int[1];", "+\tOS.PMCreateSession(printSession);", "+\tif (printSession[0] != 0) {", "+\t\tint[] printerList = new int[1], currentIndex = new int[1], currentPrinter = new int[1];", "+\t\tOS.PMSessionCreatePrinterList(printSession[0], printerList, currentIndex, currentPrinter);", "+\t\tint count = OS.CFArrayGetCount(printerList[0]);", "+\t\tPrinterData[] result = new PrinterData[count];", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tString name = getString(OS.CFArrayGetValueAtIndex(printerList[0], i));", "+\t\t\tPrinterData data = result[i] = new PrinterData(DRIVER, name);", "+\t\t}", "+\t\tOS.CFRelease(printerList[0]);", "+\t\tOS.PMRelease(printSession[0]);", "+\t\treturn result;", "+\t}", "+\treturn new PrinterData[0];"]}], "num": 39549}