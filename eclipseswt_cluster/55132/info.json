{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0fa81772de8c8d0312cde25c8b1b6c6a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02edbcd60bf3e4549320ec92e5f557f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "8e5c97c9e89c4e78164a728ed489008ab911e93b", "commitAfterChange": "b2a57ac5aeda1a37b1c7d7c906ff837c3c7313d8", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": "\r \r private void onMouseHover(Event event)", "signatureAfterChange": "\r \r private void onMouseHover(Event event)", "diff": ["-\tPoint pt = new Point (event.x, event.y);\r", "-\tCTabItem item = getItem(pt);\r", "+\tshowToolTip = true;\r", "+\tshowToolTip(event.x, event.y);\r", "+}\r", "-\t\t\tpt.y += 16;\r", "-\t\t\t\t\r", "-\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f665cd92bd8e1cb2ed4e0a320eff9f9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "35e16e89ccce91ccd7ae7405a9aa8da00d9bc86a", "commitAfterChange": "b2c56e66aaad465d12cc59ec2771e5a867d42cbb", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " public Monitor getMonitor ()", "signatureAfterChange": " public Monitor getMonitor ()", "diff": ["-\tcheckWidget();", "-\tMonitor monitor = null;", "+\tcheckWidget ();", "-\t\tGdkRectangle dest = new GdkRectangle ();", "-\t\tOS.gdk_screen_get_monitor_geometry (screen, monitorNumber, dest);", "-\t\tmonitor = new Monitor ();", "-\t\tmonitor.handle = monitorNumber;", "-\t\tmonitor.x = dest.x;", "-\t\tmonitor.y = dest.y;", "-\t\tmonitor.width = dest.width;", "-\t\tmonitor.height = dest.height;", "-\t\tRectangle workArea = null;", "-\t\tif (monitorNumber == 0) workArea = display.getWorkArea ();", "-\t\tif (workArea != null) {", "-\t\t\tmonitor.clientX = workArea.x;", "-\t\t\tmonitor.clientY = workArea.y;", "-\t\t\tmonitor.clientWidth = workArea.width;", "-\t\t\tmonitor.clientHeight = workArea.height;", "-\t\t} else {", "-\t\t\tmonitor.clientX = monitor.x;", "-\t\t\tmonitor.clientY = monitor.y;", "-\t\t\tmonitor.clientWidth = monitor.width;", "-\t\t\tmonitor.clientHeight = monitor.height;", "+\t\tMonitor[] monitors = display.getMonitors (); ", "+\t\t", "+\t\tif (monitorNumber >= 0 && monitorNumber < monitors.length) {", "+\t\t\treturn monitors [monitorNumber];", "-\t} else {", "-\t\tmonitor = display.getPrimaryMonitor ();", "-\treturn monitor;", "+\treturn display.getPrimaryMonitor ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9b71da76624f6b6e4defd9e7a14793", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "57592a1e17d3eea1f81d97941b31a07f97f58b2b", "commitAfterChange": "83b90a54ba3b915ddf5c905bc3c2d9ec47fef8c3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XExposure (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["-\tXRectangle xrect = new XRectangle ();", "-\txrect.x = (short) xEvent.x;", "-\txrect.y = (short) xEvent.y;", "-\txrect.width = (short) xEvent.width;", "-\txrect.height = (short) xEvent.height;", "-\tOS.XUnionRectWithRegion (xrect, damageRgn, damageRgn);", "-\tGCData data = new GCData();", "+\tOS.XtAddExposureToRegion (call_data, damageRgn);", "+\tGCData data = new GCData ();", "-\tGC gc = GC.motif_new(this, data);", "+\tGC gc = GC.motif_new (this, data);", "-\t}\t", "-\tif (hooks (SWT.Paint) || filters (SWT.Paint)) {", "-\t\tEvent event = new Event ();", "-\t\tevent.count = xEvent.count;", "-\t\tevent.x = xEvent.x;", "-\t\tevent.y = xEvent.y;", "-\t\tevent.width = xEvent.width;", "-\t\tevent.height = xEvent.height;", "-\t\tevent.gc = GC.motif_new (this, data);", "-\t\tsendEvent (SWT.Paint, event);", "-\t\tevent.gc = null;\t\t", "-\t}\t", "+\t}", "-\tOS.XDestroyRegion(damageRgn);", "-\treturn 0;", "+\tOS.XDestroyRegion (damageRgn);", "+\treturn super.XExposure (w, client_data, call_data, continue_to_dispatch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb35d1a891aa3bd8036bbc9b7b4853c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "d0069d7ed7376b10efa426e883f2b4851a6c7c22", "commitAfterChange": "a886f16168f44eb14dce55165728859cc8ee3baa", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 5, "signatureBeforeChange": "  long gtk_expose_event (long widget, long eventPtr)", "signatureAfterChange": "  void drawWidget(GC gc)", "diff": ["+void drawWidget(GC gc) {", "+\tint selStart = selection.x;", "+\tint selEnd = selection.y;", "+\tif (selStart > selEnd) {", "+\t\tselStart = selection.y;", "+\t\tselEnd = selection.x;", "+\t}", "+\t// temporary code to disable text selection", "+\tselStart = selEnd = -1;", "+\tif ((state & DISABLED) != 0) gc.setForeground (disabledColor);", "+\tlayout.draw (gc, 0, 0, selStart, selEnd, null, null);", "+\tif (hasFocus () && focusIndex != -1) {", "+\t\tRectangle [] rects = getRectangles (focusIndex);", "+\t\tfor (int i = 0; i < rects.length; i++) {", "+\t\t\tRectangle rect = rects [i];", "+\t\t\tgc.drawFocus (rect.x, rect.y, rect.width, rect.height);\t\t\t\t\t", "+\t\t}", "+\t}", "+}", "-long /*int*/ gtk_expose_event (long /*int*/ widget, long /*int*/ eventPtr) {", "-\tif ((state & OBSCURED) != 0) return 0;", "-\tGdkEventExpose gdkEvent = new GdkEventExpose ();", "-\tOS.memmove (gdkEvent, eventPtr, GdkEventExpose.sizeof);", "-\tGCData data = new GCData ();", "-\tdata.damageRgn = gdkEvent.region;", "-\tGC gc = GC.gtk_new (this, data);", "-\tint selStart = selection.x;", "-\tint selEnd = selection.y;", "-\tif (selStart > selEnd) {", "-\t\tselStart = selection.y;", "-\t\tselEnd = selection.x;", "-\t}", "-\t// temporary code to disable text selection", "-\tselStart = selEnd = -1;", "-\tif ((state & DISABLED) != 0) gc.setForeground (disabledColor);", "-\tlayout.draw (gc, 0, 0, selStart, selEnd, null, null);", "-\tif (hasFocus () && focusIndex != -1) {", "-\t\tRectangle [] rects = getRectangles (focusIndex);", "-\t\tfor (int i = 0; i < rects.length; i++) {", "-\t\t\tRectangle rect = rects [i];", "-\t\t\tgc.drawFocus (rect.x, rect.y, rect.width, rect.height);\t\t\t\t\t", "-\t\t}", "-\t}", "-\tif (hooks (SWT.Paint) || filters (SWT.Paint)) {", "-\t\tEvent event = new Event ();", "-\t\tevent.count = gdkEvent.count;", "-\t\tevent.x = gdkEvent.area_x;", "-\t\tevent.y = gdkEvent.area_y;", "-\t\tevent.width = gdkEvent.area_width;", "-\t\tevent.height = gdkEvent.area_height;", "-\t\tif ((style & SWT.MIRRORED) != 0) event.x = getClientWidth () - event.width - event.x;", "-\t\tevent.gc = gc;", "-\t\tsendEvent (SWT.Paint, event);", "-\t\tevent.gc = null;", "-\t}", "-\tgc.dispose ();", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "705798521fa004c8d3d86c241e8d847d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "dbefe50146adbc679d5bc628d5453b9ca564fc4e", "commitAfterChange": "aedb399d989dae6fd1e97116b55f9e8e774be5cd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  long gtk_key_press_event (long widget, long eventPtr)", "signatureAfterChange": "  long gtk_key_press_event (long widget, long eventPtr)", "diff": ["-\tif (result != 0) return result;", "-\tGdkEventKey gdkEvent = new GdkEventKey ();", "-\tOS.memmove (gdkEvent, eventPtr, GdkEventKey.sizeof);", "-\tswitch (gdkEvent.keyval) {", "-\t\tcase OS.GDK_Down: {", "-\t\t\tif (OS.GTK_VERSION < OS.VERSION (2, 6, 0) && (currentFocusItem != null) && (currentFocusItem.style & SWT.DROP_DOWN) != 0) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.detail = SWT.ARROW;", "-\t\t\t\tlong /*int*/ topHandle = currentFocusItem.topHandle ();", "-\t\t\t\tGtkAllocation allocation = new GtkAllocation ();", "-\t\t\t\tgtk_widget_get_allocation (topHandle, allocation);", "-\t\t\t\tevent.x = allocation.x;", "-\t\t\t\tevent.y = allocation.y + allocation.height;", "-\t\t\t\tif ((style & SWT.MIRRORED) != 0) event.x = getClientWidth() - allocation.width - event.x;", "-\t\t\t\tcurrentFocusItem.sendSelectionEvent  (SWT.Selection, event, false);", "-\t\t\t\t/*", "-\t\t\t\t * Stop GTK from processing the event further as key_down binding", "-\t\t\t\t * will move the focus to the next item.", "-\t\t\t\t */", "-\t\t\t\treturn 1;", "-\t\t\t}", "-\t\t}", "-\t\tdefault: return result;", "-\t}", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1176e84519c4098cb28d716797e225f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 37, "signatureBeforeChange": "  int processPaint (int callData, int int2, int int3)", "signatureAfterChange": "  int processPaint (int callData, int int2, int int3)", "diff": ["-\t//if (!hooks (SWT.Paint)) return 1;", "-\t", "-\tGdkEventExpose gdkEvent = new GdkEventExpose ();", "-\tOS.memmove (gdkEvent, callData, GdkEventExpose.sizeof);", "+/*\tGdkEventExpose gdkEvent = new GdkEventExpose (callData);", "-\tevent.gc = null;", "-\treturn 1;", "-/*}else{", "-\tGdkRectangle gdkEvent = new GdkRectangle ();", "-\tOS.memmove (gdkEvent, callData, GdkRectangle.sizeof);", "-\tEvent event = new Event ();", "-//\tevent.count = gdkEvent.count;", "-\tevent.x = gdkEvent.x;  event.y = gdkEvent.y;", "-\tevent.width = gdkEvent.width;  event.height = gdkEvent.height;", "-\tGC gc = event.gc = new GC (this);", "-\tOS.gdk_gc_set_clip_rectangle (gc.handle, gdkEvent);", "-\tsendEvent (SWT.Paint, event);", "-\tgc.dispose ();", "-\tevent.gc = null;", "-\treturn 1;", "-}\t*/", "+\tevent.gc = null;*/", "+\treturn 0;", "+}"]}], "num": 55132}