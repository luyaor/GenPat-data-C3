{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b735398a663e5434362dc66bd44495a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e1b592ea12515e270775779b6f66f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_PaletteData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void test_getPixelLorg_eclipse_swt_graphics_RGB()", "signatureAfterChange": "  public void test_getPixelLorg_eclipse_swt_graphics_RGB()", "diff": ["-\twarnUnimpl(\"Test test_getPixelLorg_eclipse_swt_graphics_RGB not written\");", "+\t// indexed palette tests\t", "+\tRGB[] rgbs = {new RGB(0, 0, 0), new RGB(255, 255, 255), new RGB(50, 100, 150)};", "+\tPaletteData data = new PaletteData(rgbs);", "+\t", "+\ttry {", "+\t\tdata.getPixel(null);", "+\t\tfail(\"No exception thrown for indexed palette with rgb == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t", "+\ttry {", "+\t\tdata.getPixel(new RGB(0, 0, 1));", "+\t\tfail(\"No exception thrown for rgb not found\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":a:\", rgbs.length-1, data.getPixel(rgbs[rgbs.length-1]));", "+\t", "+\t// direct palette tests\t", "+\tRGB rgb =new RGB(0x32, 0x64, 0x96);", "+\tdata = new PaletteData(0xff0000, 0x00ff00, 0x0000ff);", "+\t", "+\ttry {", "+\t\tdata.getPixel(null);", "+\t\tfail(\"No exception thrown for direct palette with rgb == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":b:\", 0x326496, data.getPixel(rgb));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "527f0f58ff349c9202f515601dd438fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_PaletteData.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test_getRGBI()", "signatureAfterChange": "  public void test_getRGBI()", "diff": ["-\twarnUnimpl(\"Test test_getRGBI not written\");", "+\t// indexed palette tests\t", "+\tRGB[] rgbs = {new RGB(0, 0, 0), new RGB(255, 255, 255), new RGB(50, 100, 150)};", "+\tPaletteData data = new PaletteData(rgbs);", "+", "+\ttry {", "+\t\tdata.getRGB(rgbs.length);", "+\t\tfail(\"No exception thrown for nonexistent pixel\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+", "+\tassertEquals(\":a:\", rgbs[rgbs.length-1], data.getRGB(rgbs.length-1));", "+", "+\t// direct palette tests\t", "+\tRGB rgb =new RGB(0x32, 0x64, 0x96);", "+\tdata = new PaletteData(0xff0000, 0x00ff00, 0x0000ff);", "+\t", "+\tassertEquals(\":b:\", rgb, data.getRGB(0x326496));"]}], "num": 39872}