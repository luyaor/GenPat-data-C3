{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8bac72ef2f75313f090d8b99469b0b81", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2161a80b92cfe28c5ceb29877eb348", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "d3fdff83971f5a7ac01e4b7d0cd1fbe859024d3d", "commitAfterChange": "af11bf81261feb0e8ec9d1d06203b7a989332b40", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(new String(lpWideCharStr));", "+\t\t\tString string = new String(lpWideCharStr);", "-\t\t\tint start = buffer.indexOf(StartFragment) + StartFragment.length();", "+\t\t\tint start = string.indexOf(StartFragment) + StartFragment.length();", "-\t\t\twhile (end < buffer.length()) { ", "-\t\t\t\tString s = buffer.substring(start, end);", "+\t\t\twhile (end < string.length()) { ", "+\t\t\t\tString s = string.substring(start, end);", "-\t\t\tstart = buffer.indexOf(EndFragment) + EndFragment.length();", "+\t\t\tstart = string.indexOf(EndFragment) + EndFragment.length();", "-\t\t\twhile (end < buffer.length()) { ", "-\t\t\t\tString s = buffer.substring(start, end);", "+\t\t\twhile (end < string.length()) { ", "+\t\t\t\tString s = string.substring(start, end);", "-\t\t\tString s = buffer.substring(fragmentStart, fragmentEnd);", "+\t\t\tString s = string.substring(fragmentStart, fragmentEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23d3a993f953b71891651fb0eac7bcb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "1fa4084ed8dc080dcdc78ba5c226b5ac6e8e6469", "commitAfterChange": "4d4c8f126aa79df26892b3bdd7e8dd3fdcaa1ffb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["+\t", "-\t\t\treturn new String(lpWideCharStr);", "+\t\t\tStringBuffer buffer = new StringBuffer(new String(lpWideCharStr));", "+\t\t\tint fragmentStart = 0, fragmentEnd = 0;", "+\t\t\tint start = buffer.indexOf(StartFragment) + StartFragment.length();", "+\t\t\tint end = start + 1;", "+\t\t\twhile (end < buffer.length()) { ", "+\t\t\t\tString s = buffer.substring(start, end);", "+\t\t\t\ttry {", "+\t\t\t\t\tfragmentStart = Integer.parseInt(s);", "+\t\t\t\t\tend++;", "+\t\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tstart = buffer.indexOf(EndFragment) + EndFragment.length();", "+\t\t\tend = start + 1;", "+\t\t\twhile (end < buffer.length()) { ", "+\t\t\t\tString s = buffer.substring(start, end);", "+\t\t\t\ttry {", "+\t\t\t\t\tfragmentEnd = Integer.parseInt(s);", "+\t\t\t\t\tend++;", "+\t\t\t\t} catch (NumberFormatException e) {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (fragmentEnd <= fragmentStart || fragmentEnd > lpWideCharStr.length) return null;", "+\t\t\t/* TO DO:", "+\t\t\t * FragmentStart and FragmentEnd are offsets in original byte stream, not", "+\t\t\t * the wide char version of the byte stream.", "+\t\t\t */", "+\t\t\tString s = buffer.substring(fragmentStart, fragmentEnd);", "+\t\t\t/*", "+\t\t\t * Firefox includes <!--StartFragment --> in the fragment, so remove it.", "+\t\t\t */", "+\t\t\tString foxStart = \"<!--StartFragment -->\\r\\n\"; //$NON-NLS-1$", "+\t\t\tint prefix = s.indexOf(foxStart);", "+\t\t\tif (prefix != -1) {", "+\t\t\t\tprefix += foxStart.length();", "+\t\t\t\ts = s.substring(prefix);", "+\t\t\t}", "+\t\t\treturn s;"]}], "num": 45592}