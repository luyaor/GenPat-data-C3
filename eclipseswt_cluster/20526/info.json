{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18f4a41ef2bcab64b982a70ac3e7c2cc", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1110c5521e171e882a2630c28bbea2e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/Tab.java", "commitBeforeChange": "399156490d22f3d1f71663eed297e579ef25b0fc", "commitAfterChange": "a1f55a007486ea929f61bc360225ffb5df8913db", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tvoid log(Event event)", "signatureAfterChange": " \tvoid log(Event event)", "diff": ["-\t\twhile (i < EVENT_NAMES.length) {", "-\t\t\tif (((Integer)EVENT_NAMES[i][1]).intValue() == event.type) break;", "+\t\twhile (i < EVENT_INFO.length) {", "+\t\t\tif (EVENT_INFO[i].type == event.type) break;", "-\t\tString toString = (String)EVENT_NAMES[i][0] + \" [\"+event.type+\"]: \";", "+\t\tString toString = EVENT_INFO[i].name + \" [\" + event.type + \"]: \";", "-\t\teventConsole.append (toString);", "-\t\teventConsole.append (\"\\n\");", "+\t\tlog (toString);", "+\t\t", "+\t\t/* Return values for event fields. */", "+\t\tint mask = EVENT_INFO[i].setFields;", "+\t\tif (!ignore && mask != 0) {", "+\t\t\tEvent setFieldsEvent = EVENT_INFO[i].event;", "+\t\t\tif ((mask & DOIT) != 0) event.doit = setFieldsEvent.doit;", "+\t\t\tif ((mask & DETAIL) != 0) event.detail = setFieldsEvent.detail;", "+\t\t\tif ((mask & TEXT) != 0) event.text = setFieldsEvent.text;", "+\t\t\tif ((mask & X) != 0) event.x = setFieldsEvent.x;", "+\t\t\tif ((mask & Y) != 0) event.y = setFieldsEvent.y;", "+\t\t\tif ((mask & WIDTH) != 0) event.width = setFieldsEvent.width;", "+\t\t\tif ((mask & HEIGHT) != 0) event.height = setFieldsEvent.height;", "+\t\t\teventConsole.append (ControlExample.getResourceString(\"Returning\"));", "+\t\t\tignore = true;", "+\t\t\tlog (event);", "+\t\t\tignore = false;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccb17d5fdd625cf58558f3cc513a1f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "df63744a83b6c4ccafd10c57535b24dd9458ba96", "commitAfterChange": "49d8ee915a6006746596a7d40978b42b50fa61b3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " void textEvent (Event event)", "signatureAfterChange": " void textEvent (Event event)", "diff": ["+\t\tcase SWT.DragDetect:", "+\t\tcase SWT.MouseDoubleClick:", "+\t\tcase SWT.MouseMove:", "+\t\tcase SWT.MouseEnter:", "+\t\tcase SWT.MouseExit:", "+\t\tcase SWT.MouseHover: {", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (event.type, event);", "+\t\t\tevent.type = SWT.None;", "+\t\t\tbreak;", "+\t\t}", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "+\t\t\tPoint pt = getDisplay ().map (text, this, event.x, event.y);", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tmouseEvent.x = pt.x; mouseEvent.y = pt.y;", "-\t\tcase SWT.MouseDoubleClick: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseDoubleClick, mouseEvent);", "-\t\t\tbreak;", "-\t\t}", "-\t\t\tEvent keyEvent = new Event ();", "-\t\t\tkeyEvent.time = event.time;", "-\t\t\tkeyEvent.keyCode = event.count > 0 ? SWT.ARROW_UP : SWT.ARROW_DOWN;", "-\t\t\tkeyEvent.stateMask = event.stateMask;", "-\t\t\tnotifyListeners (SWT.KeyDown, keyEvent);", "+\t\t\tnotifyListeners (SWT.MouseWheel, event);", "+\t\t\tevent.type = SWT.None;", "-\t\t\tevent.doit = keyEvent.doit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cc136213b4f26d937daf1e704178694", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "df63744a83b6c4ccafd10c57535b24dd9458ba96", "commitAfterChange": "49d8ee915a6006746596a7d40978b42b50fa61b3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void arrowEvent (Event event)", "signatureAfterChange": " void arrowEvent (Event event)", "diff": ["-\t\tcase SWT.MouseDown: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseDown, mouseEvent);", "-\t\t\tevent.doit = mouseEvent.doit;", "+\t\tcase SWT.DragDetect:", "+\t\tcase SWT.MouseDown:", "+\t\tcase SWT.MouseUp:", "+\t\tcase SWT.MouseMove:", "+\t\tcase SWT.MouseEnter:", "+\t\tcase SWT.MouseExit:", "+\t\tcase SWT.MouseHover: {", "+\t\t\tPoint pt = getDisplay ().map (arrow, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (event.type, event);", "+\t\t\tevent.type = SWT.None;", "-\t\tcase SWT.MouseUp: {", "-\t\t\tEvent mouseEvent = new Event ();", "-\t\t\tmouseEvent.button = event.button;", "-\t\t\tmouseEvent.count = event.count;", "-\t\t\tmouseEvent.stateMask = event.stateMask;", "-\t\t\tmouseEvent.time = event.time;", "-\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "-\t\t\tnotifyListeners (SWT.MouseUp, mouseEvent);", "-\t\t\tevent.doit = mouseEvent.doit;", "+\t\tcase SWT.MouseWheel: {", "+\t\t\tPoint pt = getDisplay ().map (arrow, this, event.x, event.y);", "+\t\t\tevent.x = pt.x; event.y = pt.y;", "+\t\t\tnotifyListeners (SWT.MouseWheel, event);", "+\t\t\tevent.type = SWT.None;", "+\t\t\tif (isDisposed ()) break;", "+\t\t\tif (!event.doit) break;", "+\t\t\tif (event.count != 0) {", "+\t\t\t\tevent.doit = false;", "+\t\t\t\tint oldIndex = getSelectionIndex ();", "+\t\t\t\tif (event.count > 0) {", "+\t\t\t\t\tselect (Math.max (oldIndex - 1, 0));", "+\t\t\t\t} else {", "+\t\t\t\t\tselect (Math.min (oldIndex + 1, getItemCount () - 1));", "+\t\t\t\t}", "+\t\t\t\tif (oldIndex != getSelectionIndex ()) {", "+\t\t\t\t\tEvent e = new Event();", "+\t\t\t\t\te.time = event.time;", "+\t\t\t\t\te.stateMask = event.stateMask;", "+\t\t\t\t\tnotifyListeners (SWT.Selection, e);", "+\t\t\t\t}", "+\t\t\t\tif (isDisposed ()) break;", "+\t\t\t}"]}], "num": 20526}