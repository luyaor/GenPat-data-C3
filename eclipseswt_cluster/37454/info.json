{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f629ed0d0d7a945c96ad8429a434514d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e836dd46e68178a2ef7d24a92b6e04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/carbon/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "45b985e539305f70c83f038c9ccc2d3d9385b8b0", "commitAfterChange": "bcbcc699833a11824bf64330c0852c01c0b6b5cf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int getHandle ()", "signatureAfterChange": "  int getHandle ()", "diff": ["+", "-\tif (embedHandle == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tNSRect r = new NSRect();", "+\tif (embedHandle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+\tNSRect r = new NSRect ();", "-\t\trc = Cocoa.HICocoaViewCreate(embedHandle, 0, outControl);", "+\t\trc = Cocoa.HICocoaViewCreate (embedHandle, 0, outControl);", "-\t\t\tSystem.loadLibrary(\"frameembedding\");", "+\t\t\tSystem.loadLibrary (\"frameembedding\"); //$NON-NLS-1$", "-\t\trc = Cocoa.HIJavaViewCreateWithCocoaView(outControl, embedHandle);", "+\t\trc = Cocoa.HIJavaViewCreateWithCocoaView (outControl, embedHandle);", "-\tif (rc != OS.noErr || outControl[0] == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+\tif (rc != OS.noErr || outControl[0] == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tHILayoutInfo newLayoutInfo = new HILayoutInfo();", "+\tHILayoutInfo newLayoutInfo = new HILayoutInfo ();", "-\tOS.HIViewGetLayoutInfo(subHIView, newLayoutInfo);", "+\tOS.HIViewGetLayoutInfo (subHIView, newLayoutInfo);", "-\tOS.HIViewSetLayoutInfo(subHIView, newLayoutInfo);", "-\tOS.HIViewChangeFeatures(subHIView, OS.kHIViewFeatureIsOpaque, 0);", "-\tOS.HIViewSetVisible(subHIView, true);", "+\tOS.HIViewSetLayoutInfo (subHIView, newLayoutInfo);", "+\tOS.HIViewChangeFeatures (subHIView, OS.kHIViewFeatureIsOpaque, 0);", "+\tOS.HIViewSetVisible (subHIView, true);", "-\tOS.HIViewAddSubview(browser.handle, subHIView);", "-\tCGRect rect = new CGRect();", "-\tOS.HIViewGetFrame(parentHandle, rect);", "+\tOS.HIViewAddSubview (browser.handle, subHIView);", "+\tCGRect rect = new CGRect ();", "+\tOS.HIViewGetFrame (parentHandle, rect);", "-\tOS.HIViewSetFrame(subHIView, rect);", "+\tOS.HIViewSetFrame (subHIView, rect);", "+", "+\tcallback3 = new Callback (this, \"eventProc3\", 3); //$NON-NLS-1$", "+\tint [] mask = new int [] {", "+\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "+\t};", "+\tint controlTarget = OS.GetControlEventTarget (subHIView);", "+\tOS.InstallEventHandler (controlTarget, callback3.getAddress (), mask.length / 2, mask, subHIView, null);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce112199caf2be7b52245746cf8dfec7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/cocoa/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int getHandle ()", "signatureAfterChange": "  int getHandle ()", "diff": ["-    int embedHandle = Cocoa.objc_msgSend (Cocoa.C_NSImageView, Cocoa.S_alloc);", "-\tif (embedHandle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tNSRect r = new NSRect ();", "-\tembedHandle = Cocoa.objc_msgSend (embedHandle, Cocoa.S_initWithFrame, r);", "-\tint rc;", "-\tint[] outControl = new int[1];", "-\tif (USE_COCOA_VIEW_CREATE && OS.VERSION >= 0x1050) {", "-\t\trc = Cocoa.HICocoaViewCreate (embedHandle, 0, outControl);", "-\t} else {", "-\t\ttry {", "-\t\t\tSystem.loadLibrary (\"frameembedding\"); //$NON-NLS-1$", "-\t\t} catch (UnsatisfiedLinkError e) {}", "-\t\trc = Cocoa.HIJavaViewCreateWithCocoaView (outControl, embedHandle);", "-\t}", "-\tif (rc != OS.noErr || outControl[0] == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tint subHIView = outControl[0];", "-\tHILayoutInfo newLayoutInfo = new HILayoutInfo ();", "-\tnewLayoutInfo.version = 0;", "-\tOS.HIViewGetLayoutInfo (subHIView, newLayoutInfo);", "-\tHISideBinding biding = newLayoutInfo.binding.top;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMin;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.left;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMin;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.bottom;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMax;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.right;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMax;", "-\tbiding.offset = 0;", "-\tOS.HIViewSetLayoutInfo (subHIView, newLayoutInfo);", "-\tOS.HIViewChangeFeatures (subHIView, OS.kHIViewFeatureIsOpaque, 0);", "-\tOS.HIViewSetVisible (subHIView, true);", "-\tint parentHandle = browser.handle;", "-\tOS.HIViewAddSubview (browser.handle, subHIView);", "-\tCGRect rect = new CGRect ();", "-\tOS.HIViewGetFrame (parentHandle, rect);", "-\trect.x = rect.y = 0;", "-\tOS.HIViewSetFrame (subHIView, rect);", "-\thandles.put (new LONG (embedHandle), new LONG (browser.handle));", "-", "-\tif (Callback3 == null) Callback3 = new Callback (this.getClass (), \"eventProc3\", 3); //$NON-NLS-1$", "-\tint callback3Address = Callback3.getAddress ();", "-\tif (callback3Address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tint [] mask = new int [] {", "-\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "-\t};", "-\tint controlTarget = OS.GetControlEventTarget (subHIView);", "-\tOS.InstallEventHandler (controlTarget, callback3Address, mask.length / 2, mask, browser.handle, null);", "+\tint embedHandle = browser.view.id;", "+//    int embedHandle = Cocoa.objc_msgSend (Cocoa.C_NSImageView, Cocoa.S_alloc);", "+//\tif (embedHandle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+//\tNSRect r = new NSRect ();", "+//\tembedHandle = Cocoa.objc_msgSend (embedHandle, Cocoa.S_initWithFrame, r);", "+//\tint rc;", "+//\tint[] outControl = new int[1];", "+//\tif (USE_COCOA_VIEW_CREATE && OS.VERSION >= 0x1050) {", "+//\t\trc = Cocoa.HICocoaViewCreate (embedHandle, 0, outControl);", "+//\t} else {", "+//\t\ttry {", "+//\t\t\tSystem.loadLibrary (\"frameembedding\"); //$NON-NLS-1$", "+//\t\t} catch (UnsatisfiedLinkError e) {}", "+//\t\trc = Cocoa.HIJavaViewCreateWithCocoaView (outControl, embedHandle);", "+//\t}", "+//\tif (rc != OS.noErr || outControl[0] == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+//\tint subHIView = outControl[0];", "+//\tHILayoutInfo newLayoutInfo = new HILayoutInfo ();", "+//\tnewLayoutInfo.version = 0;", "+//\tOS.HIViewGetLayoutInfo (subHIView, newLayoutInfo);", "+//\tHISideBinding biding = newLayoutInfo.binding.top;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMin;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.left;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMin;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.bottom;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMax;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.right;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMax;", "+//\tbiding.offset = 0;", "+//\tOS.HIViewSetLayoutInfo (subHIView, newLayoutInfo);", "+//\tOS.HIViewChangeFeatures (subHIView, OS.kHIViewFeatureIsOpaque, 0);", "+//\tOS.HIViewSetVisible (subHIView, true);", "+//\tint parentHandle = browser.handle;", "+//\tOS.HIViewAddSubview (browser.handle, subHIView);", "+//\tCGRect rect = new CGRect ();", "+//\tOS.HIViewGetFrame (parentHandle, rect);", "+//\trect.x = rect.y = 0;", "+//\tOS.HIViewSetFrame (subHIView, rect);", "+//\thandles.put (new LONG (embedHandle), new LONG (browser.handle));", "+//", "+//\tif (Callback3 == null) Callback3 = new Callback (this.getClass (), \"eventProc3\", 3); //$NON-NLS-1$", "+//\tint callback3Address = Callback3.getAddress ();", "+//\tif (callback3Address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+//\tint [] mask = new int [] {", "+//\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "+//\t};", "+//\tint controlTarget = OS.GetControlEventTarget (subHIView);", "+//\tOS.InstallEventHandler (controlTarget, callback3Address, mask.length / 2, mask, browser.handle, null);"]}], "num": 37454}