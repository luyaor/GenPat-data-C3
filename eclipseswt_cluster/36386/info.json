{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdd86535d574275636a11c04ea5db444", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb27744dddf5d62b6a31f3cc2eb5a46e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2se/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "67bb76f403d7d314c32aebd85e26d69b1f7802d7", "commitAfterChange": "80cbdf5537b3141c180b026fdf21ef20cbe166d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static int getVersion ()", "signatureAfterChange": "  static int parseVersion(String version)", "diff": ["- */", "-public static int getVersion () {", "-\treturn MAJOR_VERSION * 1000 + MINOR_VERSION;", "-}", "+", "+static int parseVersion(String version) {", "+\tif (version == null) return 0;", "+\tint major = 0, minor = 0, micro = 0;", "+\tint length = version.length(), index = 0, start = 0;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) major = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\tstart = ++index;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) minor = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\tstart = ++index;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) micro = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\treturn JAVA_VERSION(major, minor, micro);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fdbf1c29c87751d284e388b4a6d0213", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2me/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "67bb76f403d7d314c32aebd85e26d69b1f7802d7", "commitAfterChange": "80cbdf5537b3141c180b026fdf21ef20cbe166d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static int getVersion ()", "signatureAfterChange": "  static int parseVersion(String version)", "diff": ["- */", "-public static int getVersion () {", "-\treturn MAJOR_VERSION * 1000 + MINOR_VERSION;", "+", "+static int parseVersion(String version) {", "+\tif (version == null) return 0;", "+\tint major = 0, minor = 0, micro = 0;", "+\tint length = version.length(), index = 0, start = 0;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) major = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\tstart = ++index;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) minor = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\tstart = ++index;", "+\twhile (index < length && Character.isDigit(version.charAt(index))) index++;", "+\ttry {", "+\t\tif (start < length) micro = Integer.parseInt(version.substring(start, index));", "+\t} catch (NumberFormatException e) {}", "+\treturn JAVA_VERSION(major, minor, micro);"]}], "num": 36386}