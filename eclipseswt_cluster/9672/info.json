{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "98c2b3b40f0d9cb0736383eec8568e54", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8889beef1e1448ed4a67bffa9adc4094", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e139d0ab76ea26e5296ceee7a81cdb4cd23f3694", "commitAfterChange": "bbce5172d2d0d10dab8588aa51fcb94c0df57391", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void destroyItem (TreeColumn column)", "signatureAfterChange": "  void destroyItem (TreeColumn column)", "diff": ["+\tRECT itemRect = new RECT ();", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, itemRect);", "-\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\tRECT rect = new RECT ();", "-\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index - 1, itemRect);", "-\t\trect.left = itemRect.right;", "+\t\trect.left = itemRect.left;", "-\tfor (int i=index; i<columnCount; i++) {", "-\t\tcolumns [i].sendEvent (SWT.Move);", "+\tif (columnCount != 0) {", "+\t\tint start = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, index, 0);", "+\t\tTreeColumn [] newColumns = new TreeColumn [columnCount - start];", "+\t\tfor (int i=start; i<columnCount; i++) {", "+\t\t\tint orderIndex = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, i, 0);", "+\t\t\tnewColumns [i - start] = columns [orderIndex];", "+\t\t}", "+\t\tfor (int i=0; i<newColumns.length; i++) {", "+\t\t\tif (!newColumns [i].isDisposed ()) {", "+\t\t\t\tnewColumns [i].sendEvent (SWT.Move);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322547ebe1dccb6375512bd080f15a78", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cc30fbfda7e49db0854cc41b9e69ebc7abafaf7b", "commitAfterChange": "e922fba169e6f21333c6f3f21c2275a53c000ab8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void destroyItem (TreeColumn column)", "signatureAfterChange": "  void destroyItem (TreeColumn column)", "diff": ["+\tint [] oldOrder = new int [columnCount];", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, columnCount, oldOrder);", "+\tint orderIndex = 0;", "+\twhile (orderIndex < columnCount) {", "+\t\tif (oldOrder [orderIndex] == index) break;", "+\t\torderIndex++;", "+\t}", "-\t\tint start = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, index, 0);", "-\t\tTreeColumn [] newColumns = new TreeColumn [columnCount - start];", "-\t\tfor (int i=start; i<columnCount; i++) {", "-\t\t\tint orderIndex = OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, i, 0);", "-\t\t\tnewColumns [i - start] = columns [orderIndex];", "-\t\t}", "+\t\tint [] newOrder = new int [columnCount];", "+\t\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, columnCount, newOrder);", "+\t\tTreeColumn [] newColumns = new TreeColumn [columnCount - orderIndex];", "+\t\tfor (int i=orderIndex; i<newOrder.length; i++) {", "+\t\t\tnewColumns [i - orderIndex] = columns [newOrder [i]];", "+\t\t}\t"]}], "num": 9672}