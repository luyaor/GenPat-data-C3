{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a76a8b97cbd30b6986c3c074f4a4d4de", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a47d239a48cd3a429f64d41ae72c4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "ea7476519b9e21c42e4d4550669901e532bedcab", "commitAfterChange": "76b33e0e494479a9009365afe16385a154f070b7", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " void claimBottomFreeSpace()", "signatureAfterChange": " void claimBottomFreeSpace()", "diff": ["-\t//TODO the function can be very expensive for variable line height", "-\t//     find alternative math for this problem, disable it till there.", "-\tif (true) return;", "-\t", "-\tint newVerticalOffset = Math.max(0, content.getLineCount() * lineHeight - getClientArea().height);", "-\tif (newVerticalOffset < verticalScrollOffset) {", "-\t\t// Scroll up so that empty lines below last text line are used.", "-\t\t// Fixes 1GEYJM0", "-\t\tsetVerticalScrollOffset(newVerticalOffset, true);", "+\tif (isFixedLineHeight()) {", "+\t\tint newVerticalOffset = Math.max(0, content.getLineCount() * lineHeight - getClientArea().height);", "+\t\tif (newVerticalOffset < verticalScrollOffset) {", "+\t\t\t// Scroll up so that empty lines below last text line are used.", "+\t\t\t// Fixes 1GEYJM0", "+\t\t\tsetVerticalScrollOffset(newVerticalOffset, true);", "+\t\t}", "+\t} else {\t", "+\t\tint clientAreaHeight = getClientArea().height;", "+\t\tint bottomIndex = getLineIndex(clientAreaHeight);", "+\t\tint height = getLinePixel(bottomIndex) + lineCache.getLineHeight(bottomIndex);", "+\t\tif (clientAreaHeight > height) {", "+\t\t\theight = clientAreaHeight - height;", "+\t\t\theight = Math.min(verticalScrollOffset, height);", "+\t\t\tsetVerticalScrollOffset(verticalScrollOffset - height, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c11dea0705106fd9fe81a5ede054bc90", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "dc8b70b8b17620c5e26d2b27a9531e3a6acaed33", "commitAfterChange": "7d3ba9344c953b6e6eb5b4547c5c6ab3984aacc7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " void dropDown (boolean drop)", "signatureAfterChange": " void dropDown (boolean drop)", "diff": ["-\tif (y + height > displayRect.y + displayRect.height) y = parentRect.y - height;", "+\tif (y + height > displayRect.y + displayRect.height) {", "+\t\tint popUpwardsHeight = (parentRect.y - height < displayRect.y) ? parentRect.y - displayRect.y : height;", "+\t\tint popDownwardsHeight = displayRect.y + displayRect.height - y;", "+\t\tif (popUpwardsHeight > popDownwardsHeight) {", "+\t\t\theight = popUpwardsHeight;", "+\t\t\ty = parentRect.y - popUpwardsHeight;", "+\t\t} else {", "+\t\t\theight = popDownwardsHeight;", "+\t\t}", "+\t\tlist.setSize (listRect.width, height - 2);", "+\t}"]}], "num": 31546}