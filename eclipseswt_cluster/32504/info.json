{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d698c895ebe6239e786cf98b8a3f8e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cee248551e17ec09d8229bbf3e9c634", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "95c5bd5be9e5e4341c644ca11834dbb39f3c43f7", "commitAfterChange": "f1bdc2e1db5fc4d01de15fdd7244c90e9d3700fb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  synchronized void createDisplay (DeviceData data)", "signatureAfterChange": "  synchronized void createDisplay (DeviceData data)", "diff": ["+", "+\t/* Get the window manager name */", "+\twindowManager = \"\";", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 2, 0)) {", "+\t\tint /*long*/ screen = OS.gdk_screen_get_default ();", "+\t\tif (screen != 0) {", "+\t\t\tint /*long*/ ptr2 = OS.gdk_x11_screen_get_window_manager_name (screen);", "+\t\t\tif (ptr2 != 0) {", "+\t\t\t\tint length = OS.strlen (ptr2);", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tbyte [] buffer2 = new byte [length];", "+\t\t\t\t\tOS.memmove (buffer2, ptr2, length);", "+\t\t\t\t\twindowManager = new String (Converter.mbcsToWcs (null, buffer2));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0dcef27cfa192cfb77e9de93af0643", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee4eb5294eb12827e6341eed83a9dc816c5be2c9", "commitAfterChange": "3f7bc2fc17273d64aad8aaddff6e118b7e387a20", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public Monitor getPrimaryMonitor ()", "signatureAfterChange": " public Monitor getPrimaryMonitor ()", "diff": ["+\t//Developer note, for testing see:", "+\t//org.eclipse.swt.tests.junit.Test_org_eclipse_swt_widgets_Display.test_getPrimaryMonitor()", "+", "-\treturn monitors [0];", "+\tint primaryMonitorIndex = 0;", "+", "+\tif (OS.GTK_VERSION >= OS.VERSION(2, 20, 0)) {", "+\t\t//attempt to find actual primary monitor if one is configured:", "+\t\tlong /*int*/ screen = OS.gdk_screen_get_default ();", "+\t\tif (screen != 0) {", "+\t\t\t//if no primary monitor is configured by the user, this returns 0.", "+\t\t\tprimaryMonitorIndex = OS.gdk_screen_get_primary_monitor (screen);", "+\t\t}", "+\t}", "+\treturn monitors [primaryMonitorIndex];"]}], "num": 32504}