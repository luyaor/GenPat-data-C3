{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a8d27affd18868032d2732aba6ac721", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74f7e6317b1b09efeb8a52794bc8c848", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "3753196e54cacf08b9ba94669052da40a6f74fd7", "commitAfterChange": "991749f7f8d70b27654548d75f2e2ea9b6410c4f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " void updateText ()", "signatureAfterChange": " void updateText ()", "diff": ["-\tint position;", "+\tint position = argList [7];", "-\t\t\t} else {", "-\t\t\t\tposition = argList [3];", "-\t\t\tposition = argList [7];", "-\t\t\tint [] argList2 = {OS.XmNposition, position + 1};", "-\t\t\tOS.XtSetValues (handle, argList2, argList2.length / 2);", "-\t} else {", "-\t\tposition = argList [3];", "-\tint [] argList2 = {OS.XmNposition, position};", "-\tOS.XtSetValues (handle, argList2, argList2.length / 2);\t", "+\tif (position == argList [7]) {", "+\t\tString string = String.valueOf (position);", "+\t\tbyte [] buffer = Converter.wcsToMbcs (getCodePage (), string, true);", "+\t\tboolean warnings = display.getWarnings ();", "+\t\tdisplay.setWarnings (false);", "+\t\tOS.XmTextSetString (argList [1], buffer);", "+\t\tdisplay.setWarnings(warnings);\t", "+\t} else {", "+\t\tint [] argList2 = {OS.XmNposition, position};", "+\t\tOS.XtSetValues (handle, argList2, argList2.length / 2);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e4567860bfecd66dc8a080c577898a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGeneratorUI.java", "commitBeforeChange": "8ed739aeb6bdf363f7b0e5c8d1e2c8f2b47241eb", "commitAfterChange": "37dd049635a9e27d1a8ac8a9fdb6deee1a837896", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tDocument getDocument(String xmlPath)", "signatureAfterChange": " \t \tDocument buildExtrasDocument(TreeItem item)", "diff": ["+\t", "+\tDocument buildExtrasDocument(TreeItem item) {", "+\t\ttry {", "+\t\t\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();", "+\t\t\tDocument document = builder.newDocument();", "+\t\t\tNode node = document.createElement(\"signatures\");", "+\t\t\tdocument.appendChild(node);", "+\t\t\tbuildExtrasNode(document, node, item, 0);", "+\t\t\tif (node.getChildNodes().getLength() == 0) return null;", "+\t\t\treturn document;", "+\t\t} catch (Exception e) {", "+\t\t\te.printStackTrace();", "+\t\t}", "+\t\treturn null;", "+\t}\t\t\t", "-", "-\tDocument getDocument(String xmlPath) {", "-\t\ttry {", "-\t\t\tInputStream is = null;", "-\t\t\tif (xmlPath.indexOf(File.separatorChar) == -1) is = getClass().getResourceAsStream(xmlPath);", "-\t\t\tif (is == null) is = new BufferedInputStream(new FileInputStream(xmlPath));", "-\t\t\tif (is != null) return DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new InputSource(is));", "-\t\t} catch (Exception e) {", "-//\t\t\te.printStackTrace();", "-\t\t}", "-\t\treturn null;", "-\t}"]}], "num": 3221}