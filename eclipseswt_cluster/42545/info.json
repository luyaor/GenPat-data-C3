{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "842332941728f6a3e3d5117087fd1c5b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a827c53a69d6a9d7ee8f4a602ea0bca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c830ba87659f66da0a8654b6fd6e8eaf78f224a3", "commitAfterChange": "4482f07e9114cadcaa151462c4425652dbe37722", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyModifiersChanged (int nextHandler, int theEvent, int userData)", "diff": ["+\tint chord = OS.GetCurrentEventButtonState ();", "-\t\tevent.type = SWT.KeyDown;", "-\t\tsetInputState (event, (short) 0, 0, modifiers [0]);", "+\t\tsetInputState (event, SWT.KeyDown, chord, modifiers [0]);", "-\tevent.type = type;", "-\tsetInputState (event, (short) 0, 0, modifiers [0]);", "+\tsetInputState (event, type, chord, modifiers [0]);", "-\t\tevent.type = SWT.KeyUp;", "-\t\tsetInputState (event, (short) 0, 0, modifiers [0]);", "+\t\tsetInputState (event, SWT.KeyUp, chord, modifiers [0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe3faecff928cdcbfc1d8f0be2f153c5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "c830ba87659f66da0a8654b6fd6e8eaf78f224a3", "commitAfterChange": "4482f07e9114cadcaa151462c4425652dbe37722", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  boolean sendKeyEvent (int type, int theEvent)", "signatureAfterChange": "  boolean sendKeyEvent (int type, int theEvent)", "diff": ["+\t\tint [] chord = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseChord, OS.typeUInt32, null, 4, null, chord);", "+\t\tint [] modifiers = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-\t\t\tevent.type = type;", "-\t\t\tsetInputState(event, theEvent);", "+\t\t\tsetInputState (event, type, chord [0], modifiers [0]);", "-\t\tevent.type = type;", "-\t\tif (!setKeyState (event, theEvent)) return true;", "+\t\tif (!setKeyState (event, type, theEvent)) return true;"]}], "num": 42545}