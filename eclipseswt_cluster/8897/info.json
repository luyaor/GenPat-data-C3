{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15aaf69ab77d2361d9abcc81742e9284", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221061288e6616172156d70ac9fa6195", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "e85528c6b29503dc35d536640be9f81c29fde4e9", "commitAfterChange": "c199270a0428bec6e6c04baec3241183091527db", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void setVisible (boolean visible)", "signatureAfterChange": " public void setVisible (boolean visible)", "diff": ["+\t\t/*", "+\t\t* Feature in Motif.  When the active shell is disposed,", "+\t\t* some window managers place focus in a temporary window.", "+\t\t* The fix is to make the parent be the active top level", "+\t\t* shell when the child shell is disposed.", "+\t\t*/", "+\t\tif (parent != null) {", "+\t\t\tShell activeShell = display.getActiveShell ();", "+\t\t\tif (activeShell == this) {", "+\t\t\t\tShell shell = parent.getShell ();", "+\t\t\t\tshell.bringToTop (false);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb2080bc3730a64869bd74ca10152f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "5303764efd8ba35e172b6219df5fadc1a0d392a8", "commitAfterChange": "f94123ee4e132f6e7e84978d91811f502d0830cb", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  public void dispose ()", "signatureAfterChange": "  public void dispose ()", "diff": ["-", "-\t/*", "-\t* Feature in GTK.  When the active shell is disposed,", "-\t* GTK assigns focus temporarily to the root window", "-\t* unless it has previously been told to do otherwise.", "-\t* The fix is to make the parent be the active top level", "-\t* shell when the child shell is disposed.", "-\t*/", "+\tfixActiveShell ();", "-\tif (parent != null) {", "-\t\tif (display.activeShell == this) {", "-\t\t\tShell shell = parent.getShell ();\t", "-\t\t\tshell.bringToTop (false);", "-\t\t}", "-\t}"]}], "num": 8897}