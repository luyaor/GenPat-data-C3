{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0ecdd194f031e3bb3ca81d7186346de", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "771c39b89a069061b711d7a26ab54378", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "80ca8951224b622855cfac7f663b9b962d66aaed", "commitAfterChange": "bcb8c5d7f663003ad3fc43bf1aa4aaec5bd3bdaf", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t", "+\t/*", "+\t * The items in the databrowser lose their selection when we", "+\t * drag them (when we call OS.TrackDrag() in DragSource.drag()).", "+\t * We get kDataBrowserItemDeselected notification message", "+\t * for each of the items. The workaround is to select the", "+\t * deselected items in this case. DRAG_STARTED is set/unset", "+\t * before/after the call to OS.TrackDrag().", "+\t * ", "+\t * This doesn't happen for Tree with SWT.SINGLE style because", "+\t * we have set the OS.kDataBrowserNeverEmptySelectionSet flag.", "+\t */", "+\tif (message == OS.kDataBrowserItemDeselected && (style & SWT.MULTI) != 0 && getData(DRAG_STARTED) != null) {", "+\t\tignoreSelect = true;", "+\t\tOS.SetDataBrowserSelectedItems (handle, 1, new int[] {id}, OS.kDataBrowserItemsAdd);", "+\t\tignoreSelect = false;", "+\t\treturn OS.noErr;", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e41a7067844f981868422153926e56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "80ca8951224b622855cfac7f663b9b962d66aaed", "commitAfterChange": "bcb8c5d7f663003ad3fc43bf1aa4aaec5bd3bdaf", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "  int itemNotificationProc (int browser, int id, int message)", "signatureAfterChange": "  int itemNotificationProc (int browser, int id, int message)", "diff": ["+\t", "+\t/*", "+\t * The items in the databrowser lose their selection when we", "+\t * drag them (when we call OS.TrackDrag() in DragSource.drag()).", "+\t * We get kDataBrowserItemDeselected notification message", "+\t * for each of the items. The workaround is to select the", "+\t * deselected items in this case. DRAG_STARTED is set/unset", "+\t * before/after the call to OS.TrackDrag().", "+\t * ", "+\t * This doesn't happen for Table with SWT.SINGLE style because", "+\t * we have set the OS.kDataBrowserNeverEmptySelectionSet flag.", "+\t */", "+\tif (message == OS.kDataBrowserItemDeselected && (style & SWT.MULTI) != 0 && getData(DRAG_STARTED) != null) {", "+\t\tignoreSelect = true;", "+\t\tOS.SetDataBrowserSelectedItems (handle, 1, new int[] {id}, OS.kDataBrowserItemsAdd);", "+\t\tignoreSelect = false;", "+\t\treturn OS.noErr;", "+\t}", "+\t"]}], "num": 54434}