{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fc97af43767d4ffd96ddc893a35c2d3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf1acdf981348167605dd5663be85f24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "8252f2fd7938b909d4e37b89f417b935446f6995", "commitAfterChange": "6fdaca3551fc543d044fd9c51cc23898fcd1b3a5", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  boolean setScrollWidth (TableItem items[], boolean callMeasureItem)", "signatureAfterChange": "  boolean setScrollWidth (TableItem items[], boolean callMeasureItem, boolean isAllItems)", "diff": ["-boolean setScrollWidth (TableItem items[], boolean callMeasureItem) {", "+boolean setScrollWidth (TableItem items[], boolean callMeasureItem, boolean isAllItems) {", "-\tfirstColumn.setWidth (newWidth);", "+\t/*", "+\t * update the column width either if it needs to grow, or if all items in the Table", "+\t * were measured (in which case it is safe to shrink the column if appropriate)", "+\t */", "+\tif ((firstColumn.width () < newWidth) || isAllItems) {", "+\t\tfirstColumn.setWidth (newWidth);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffc1ea2a7df2a63c38d43588b701959", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "8252f2fd7938b909d4e37b89f417b935446f6995", "commitAfterChange": "6fdaca3551fc543d044fd9c51cc23898fcd1b3a5", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem)", "signatureAfterChange": "  boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem, boolean isAllItems)", "diff": ["-boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem) {", "+boolean setScrollWidth (TreeItem[] items, boolean recurse, boolean callMeasureItem, boolean isAllItems) {", "-\tfirstColumn.setWidth (newWidth);", "+\t/*", "+\t * update the column width either if it needs to grow, or if all items in the Tree", "+\t * were measured (in which case it is safe to shrink the column if appropriate)", "+\t */", "+\tif ((firstColumn.width () < newWidth) || (isAllItems && recurse)) {", "+\t\tfirstColumn.setWidth (newWidth);", "+\t}"]}], "num": 58908}