{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33bfa08daaf07ca43fcecbde0730e4fe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76b55363ec5964477906b32fb1c6b32", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "14581ca5a7841e362a4bb6a68c76d00675c70760", "commitAfterChange": "2882bbd7423650466596733b7f7109e5d58042c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static Program [] getPrograms ()", "signatureAfterChange": " public static Program [] getPrograms ()", "diff": ["-\treturn new Program [] {", "-\t\tgetProgram(\".html\"),", "-\t};", "+\tHashtable bundles = new Hashtable();", "+\tString[] extensions = getExtensions();", "+\tfor (int i = 0; i < extensions.length; i++) {", "+\t\tString extension = extensions[i];", "+\t\tchar[] chars = new char[extension.length() - 1];", "+\t\textension.getChars(1, extension.length(), chars, 0);", "+\t\tint ext = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\t\tif (ext != 0) {", "+\t\t\tint utis = OS.UTTypeCreateAllIdentifiersForTag(OS.kUTTagClassFilenameExtension(), ext, 0);", "+\t\t\tif (utis != 0) {", "+\t\t\t\tint utiCount = OS.CFArrayGetCount(utis);", "+\t\t\t\tfor (int j = 0; j < utiCount; j++) {", "+\t\t\t\t\tint uti = OS.CFArrayGetValueAtIndex(utis, j);", "+\t\t\t\t\tif (uti != 0) {", "+\t\t\t\t\t\tint apps = OS.LSCopyAllRoleHandlersForContentType(uti, 0xFFFFFFFF);", "+\t\t\t\t\t\tif (apps != 0) {", "+\t\t\t\t\t\t\tint appCount = OS.CFArrayGetCount(apps);", "+\t\t\t\t\t\t\tfor (int k = 0; k < appCount; k++) {", "+\t\t\t\t\t\t\t\tint app = OS.CFArrayGetValueAtIndex(apps, k);", "+\t\t\t\t\t\t\t\tif (app != 0) {", "+\t\t\t\t\t\t\t\t\tint length = OS.CFStringGetLength(app);", "+\t\t\t\t\t\t\t\t\tif (length != 0) {", "+\t\t\t\t\t\t\t\t\t\tchar[] buffer= new char[length];", "+\t\t\t\t\t\t\t\t\t\tCFRange range = new CFRange();", "+\t\t\t\t\t\t\t\t\t\trange.length = length;", "+\t\t\t\t\t\t\t\t\t\tOS.CFStringGetCharacters(app, range, buffer);", "+\t\t\t\t\t\t\t\t\t\tString bundleID = new String(buffer);", "+\t\t\t\t\t\t\t\t\t\tif (bundles.get(bundleID) == null) {", "+\t\t\t\t\t\t\t\t\t\t\tbyte[] fsRef = new byte[80];", "+\t\t\t\t\t\t\t\t\t\t\tif (OS.LSFindApplicationForInfo(OS.kLSUnknownCreator, app,\t0, fsRef, null) == OS.noErr) {", "+\t\t\t\t\t\t\t\t\t\t\t\tProgram program = getProgram(fsRef);", "+\t\t\t\t\t\t\t\t\t\t\t\tbundles.put(bundleID, program);", "+\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tOS.CFRelease(apps);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tOS.CFRelease(utis);", "+\t\t\t}", "+\t\t\tOS.CFRelease(ext);", "+\t\t}", "+\t}", "+\tint count = 0;", "+\tProgram[] programs = new Program[bundles.size()];", "+\tEnumeration values = bundles.elements();", "+\twhile (values.hasMoreElements()) {", "+\t\tprograms[count++] = (Program)values.nextElement();", "+\t}", "+\treturn programs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbebdd3fafdedcb79d84f4964c63d265", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/carbon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "86d77d917541a2d2b84ec236cdf0cb38e78c0ddb", "commitAfterChange": "8c17c0dc0cfa02ca9270578b50ada2ac195f1744", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static Program [] getPrograms ()", "signatureAfterChange": " public static Program [] getPrograms ()", "diff": ["-\tif (OS.VERSION < 0x1040) {", "-\t\tfor (int i = 0; i < extensions.length; i++) {", "-\t\t\tProgram program = findProgram(extensions[i]);", "-\t\t\tif (program != null && bundles.get(program.getName()) == null) {", "-\t\t\t\tbundles.put(program.getName(), program);", "+\tbyte[] fsRef = new byte[80];", "+\tfor (int i = 0; i < extensions.length; i++) {", "+\t\tString extension = extensions[i];", "+\t\tchar[] chars = new char[extension.length() - 1];", "+\t\textension.getChars(1, extension.length(), chars, 0);", "+\t\tint ext = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\t\tif (ext != 0) {", "+\t\t\tif (OS.LSGetApplicationForInfo(OS.kLSUnknownType, OS.kLSUnknownCreator, ext, OS.kLSRolesAll, fsRef, null) == OS.noErr) {", "+\t\t\t\tProgram program = getProgram(fsRef);", "+\t\t\t\tif (program != null && bundles.get(program.getName()) == null) {", "+\t\t\t\t\tbundles.put(program.getName(), program);", "+\t\t\t\t\tfsRef = new byte[80];", "+\t\t\t\t}", "-\t\t}", "-\t} else {", "-\t\tfor (int i = 0; i < extensions.length; i++) {", "-\t\t\tString extension = extensions[i];", "-\t\t\tchar[] chars = new char[extension.length() - 1];", "-\t\t\textension.getChars(1, extension.length(), chars, 0);", "-\t\t\tint ext = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "-\t\t\tif (ext != 0) {", "+\t\t\tif (OS.VERSION >= 0x1040) {", "-\t\t\t\t\t\t\t\t\tif (app != 0) {", "-\t\t\t\t\t\t\t\t\t\tint length = OS.CFStringGetLength(app);", "-\t\t\t\t\t\t\t\t\t\tif (length != 0) {", "-\t\t\t\t\t\t\t\t\t\t\tchar[] buffer= new char[length];", "-\t\t\t\t\t\t\t\t\t\t\tCFRange range = new CFRange();", "-\t\t\t\t\t\t\t\t\t\t\trange.length = length;", "-\t\t\t\t\t\t\t\t\t\t\tOS.CFStringGetCharacters(app, range, buffer);", "-\t\t\t\t\t\t\t\t\t\t\tString bundleID = new String(buffer);", "-\t\t\t\t\t\t\t\t\t\t\tif (bundles.get(bundleID) == null) {", "-\t\t\t\t\t\t\t\t\t\t\t\tbyte[] fsRef = new byte[80];", "-\t\t\t\t\t\t\t\t\t\t\t\tif (OS.LSFindApplicationForInfo(OS.kLSUnknownCreator, app,\t0, fsRef, null) == OS.noErr) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tProgram program = getProgram(fsRef);", "-\t\t\t\t\t\t\t\t\t\t\t\t\tbundles.put(bundleID, program);", "-\t\t\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tif (app != 0) {;", "+\t\t\t\t\t\t\t\t\t\tif (OS.LSFindApplicationForInfo(OS.kLSUnknownCreator, app, 0, fsRef, null) == OS.noErr) {", "+\t\t\t\t\t\t\t\t\t\t\tProgram program = getProgram(fsRef);", "+\t\t\t\t\t\t\t\t\t\t\tif (program != null && bundles.get(program.getName()) == null) {", "+\t\t\t\t\t\t\t\t\t\t\t\tbundles.put(program.getName(), program);", "+\t\t\t\t\t\t\t\t\t\t\t\tfsRef = new byte[80];", "-\t\t\t\tOS.CFRelease(ext);", "+\t\t\tOS.CFRelease(ext);"]}], "num": 23778}