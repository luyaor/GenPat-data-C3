{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6a3c313f69c96d989d9f9670eebbb83", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15a8aa7f2a56da3376013310293f720", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "70070a0630eae4a6a52cda4d5ee443c309eda99d", "commitAfterChange": "9dc226d0b135388db5e3074e5b43f40b5e92a9f9", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": " public void timerExec (int milliseconds, Runnable runnable)", "diff": ["+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (timerIDs == null) timerIDs = new int [4];", "+\tif (timerIds == null) timerIds = new int [4];\t", "-\t\tif (timerList [index] == null) break;", "+\t\tif (timerList [index] == runnable) break;", "-\tif (index == timerList.length) {", "-\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];", "-\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);", "-\t\ttimerList = newTimerList;", "-\t\tint [] newTimerIDs = new int [timerIDs.length + 4];", "-\t\tSystem.arraycopy (timerIDs, 0, newTimerIDs, 0, timerIDs.length);", "-\t\ttimerIDs = newTimerIDs;", "+\tif (index != timerList.length) {", "+\t\tOS.gtk_timeout_remove (timerIds [index]);", "+\t\ttimerList [index] = null;", "+\t\ttimerIds [index] = 0;", "+\t\tif (milliseconds < 0) return;", "+\t} else {", "+\t\tif (milliseconds < 0) return;", "+\t\tindex = 0;", "+\t\twhile (index < timerList.length) {", "+\t\t\tif (timerList [index] == null) break;", "+\t\t\tindex++;", "+\t\t}", "+\t\tif (index == timerList.length) {", "+\t\t\tRunnable [] newTimerList = new Runnable [timerList.length + 4];", "+\t\t\tSystem.arraycopy (timerList, 0, newTimerList, 0, timerList.length);", "+\t\t\ttimerList = newTimerList;", "+\t\t\tint [] newTimerIds = new int [timerIds.length + 4];", "+\t\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);", "+\t\t\ttimerIds = newTimerIds;", "+\t\t}", "-\tint timerID = OS.gtk_timeout_add (milliseconds, timerProc, index);", "-\tif (timerID != 0) {", "-\t\ttimerIDs [index] = timerID;", "+\tint timerId = OS.gtk_timeout_add (milliseconds, timerProc, index);", "+\tif (timerId != 0) {", "+\t\ttimerIds [index] = timerId;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8e18366841923d629b5de0435affee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void timerExec (int milliseconds, Runnable runnable)", "signatureAfterChange": "  public void timerExec (int milliseconds, Runnable runnable)", "diff": ["- */", "+", "+\tif (runnable == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (timerIDs == null) timerIDs = new int [4];", "+\tif (timerIds == null) timerIds = new int [4];", "+\twhile (index < timerList.length) {", "+\t\tif (timerList [index] == runnable) break;", "+\t\tindex++;", "+\t}", "+\tif (index != timerList.length) {", "+\t\tint timerId = timerIds [index];", "+\t\tif (milliseconds < 0) {", "+\t\t\tOS.RemoveEventLoopTimer (timerId);", "+\t\t\ttimerList [index] = null;", "+\t\t\ttimerIds [index] = 0;", "+\t\t} else {", "+\t\t\tOS.SetEventLoopTimerNextFireTime (timerId, milliseconds / 1000.0);", "+\t\t}", "+\t\treturn;", "+\t} ", "+\tif (milliseconds < 0) return;", "+\tindex = 0;", "-\t\tint [] newTimerIDs = new int [timerIDs.length + 4];", "-\t\tSystem.arraycopy (timerIDs, 0, newTimerIDs, 0, timerIDs.length);", "-\t\ttimerIDs = newTimerIDs;", "+\t\tint [] newTimerIds = new int [timerIds.length + 4];", "+\t\tSystem.arraycopy (timerIds, 0, newTimerIds, 0, timerIds.length);", "+\t\ttimerIds = newTimerIds;", "-\tint[] timer= new int[1];", "-\tOS.InstallEventLoopTimer(OS.GetCurrentEventLoop(), milliseconds / 1000.0, 0.0, timerProc, index, timer);", "-\tint timerID = timer[0];", "-\t", "-\tif (timerID != 0) {", "-\t\ttimerIDs [index] = timerID;", "+\tint [] timerId = new int [1];", "+\tint eventLoop = OS.GetCurrentEventLoop ();", "+\tOS.InstallEventLoopTimer (eventLoop, milliseconds / 1000.0, 0.0, timerProc, index, timerId);", "+\tif (timerId [0] != 0) {", "+\t\ttimerIds [index] = timerId [0];"]}], "num": 36611}