{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4d2333925c73ac8b564de14b27da87c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2e5c179554de6be88d79f0e4953dbb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "aeade6eb31892442528f9520cb445ef0b77db96c", "commitAfterChange": "86647f0f44c00d9b84cb21274642971a3a593b2c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void checkGC (int mask)", "signatureAfterChange": "  void checkGC (int mask)", "diff": ["-\tNSGraphicsContext.setCurrentContext(handle);\t\t", "-\tNSView view = data.view;", "-\tif (view != null && data.paintRect == null) {", "-\t\tNSRect rect = view.convertRect_toView_(view.bounds(), null);", "-\t\tNSRect visibleRect = view.visibleRect();", "-\t\tif (data.windowRect == null || rect.x != data.windowRect.x || rect.y != data.windowRect.y ||", "-\t\t\trect.width != data.windowRect.width || rect.height != data.windowRect.height ||", "-\t\t\tvisibleRect.x != data.visibleRect.x || visibleRect.y != data.visibleRect.y ||", "-\t\t\tvisibleRect.width != data.visibleRect.width || visibleRect.height != data.visibleRect.height)", "-\t\t{", "-\t\t\tdata.state &= ~CLIPPING;", "-\t\t\tdata.windowRect = rect;", "-\t\t\tdata.visibleRect = visibleRect;", "-\t\t}", "-\t}", "-\tif ((data.state & CLIPPING) == 0 || (data.state & TRANSFORM) == 0) {", "-\t\thandle.restoreGraphicsState();", "-\t\thandle.saveGraphicsState();", "+\tif ((mask & (CLIPPING | TRANSFORM)) != 0) {", "+\t\tNSGraphicsContext.setCurrentContext(handle);", "+\t\tNSView view = data.view;", "-\t\t\tNSAffineTransform transform = NSAffineTransform.transform();", "-\t\t\tNSRect rect = data.windowRect;", "-\t\t\ttransform.translateXBy(rect.x, rect.y + rect.height);", "-\t\t\ttransform.scaleXBy(1, -1);", "-\t\t\ttransform.concat();", "-\t\t\tNSBezierPath.bezierPathWithRect(data.visibleRect).addClip();", "+\t\t\tNSRect rect = view.convertRect_toView_(view.bounds(), null);", "+\t\t\tNSRect visibleRect = view.visibleRect();", "+\t\t\tif (data.windowRect == null || rect.x != data.windowRect.x || rect.y != data.windowRect.y ||", "+\t\t\t\trect.width != data.windowRect.width || rect.height != data.windowRect.height ||", "+\t\t\t\tvisibleRect.x != data.visibleRect.x || visibleRect.y != data.visibleRect.y ||", "+\t\t\t\tvisibleRect.width != data.visibleRect.width || visibleRect.height != data.visibleRect.height)", "+\t\t\t{", "+\t\t\t\tdata.state &= ~CLIPPING;", "+\t\t\t\tdata.windowRect = rect;", "+\t\t\t\tdata.visibleRect = visibleRect;", "+\t\t\t}", "-\t\tif (data.clipPath != null) data.clipPath.addClip();", "-\t\tif (data.transform != null) data.transform.concat();", "-\t\tmask &= ~(TRANSFORM | CLIPPING);", "-\t\tdata.state |= TRANSFORM | CLIPPING;", "-\t\tdata.state &= ~(BACKGROUND | FOREGROUND);", "+\t\tif ((data.state & CLIPPING) == 0 || (data.state & TRANSFORM) == 0) {", "+\t\t\thandle.restoreGraphicsState();", "+\t\t\thandle.saveGraphicsState();", "+\t\t\tif (view != null && data.paintRect == null) {", "+\t\t\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\t\t\tNSRect rect = data.windowRect;", "+\t\t\t\ttransform.translateXBy(rect.x, rect.y + rect.height);", "+\t\t\t\ttransform.scaleXBy(1, -1);", "+\t\t\t\ttransform.concat();", "+\t\t\t\tNSBezierPath.bezierPathWithRect(data.visibleRect).addClip();", "+\t\t\t}", "+\t\t\tif (data.clipPath != null) data.clipPath.addClip();", "+\t\t\tif (data.transform != null) data.transform.concat();", "+\t\t\tmask &= ~(TRANSFORM | CLIPPING);", "+\t\t\tdata.state |= TRANSFORM | CLIPPING;", "+\t\t\tdata.state &= ~(BACKGROUND | FOREGROUND);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e081366c7f6765896ca11dcd8f0c6202", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "74c0e792b346f85e2b9067f710416658485a9a3b", "commitAfterChange": "e188a1e4ca35b8a449353a5ac187e7a405693faf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int internal_new_GC (GCData data)", "signatureAfterChange": " public int internal_new_GC (GCData data)", "diff": ["-\tNSBitmapImageRep rep = imageRep;", "-\tif (imageRep.hasAlpha()) {", "-\t\tint bpr = width * 4;", "-\t\trep = (NSBitmapImageRep)new NSBitmapImageRep().alloc();", "-\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "-\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "-\t\tdata.bitmapDataAddress = OS.malloc(C.PTR_SIZEOF);", "-\t\tOS.memmove(data.bitmapDataAddress, new int /*long*/[] {bitmapData}, C.PTR_SIZEOF);", "-\t\trep = rep.initWithBitmapDataPlanes(data.bitmapDataAddress, width, height, 8, 3, false, false, OS.NSDeviceRGBColorSpace, OS.NSAlphaFirstBitmapFormat , bpr, 32);", "-\t\trep.autorelease();", "-\t}", "-\thandle.setCacheMode(OS.NSImageCacheNever);", "-\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(rep);", "-\tNSGraphicsContext.setCurrentContext(context);", "-\tNSAffineTransform transform = NSAffineTransform.transform();", "-\tNSSize size = handle.size();", "-\ttransform.translateXBy(0, size.height);", "-\ttransform.scaleXBy(1, -1);", "-\ttransform.set();", "-\tif (data != null) {", "-\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;", "-\t\tif ((data.style & mask) == 0) {", "-\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;", "+\tNSAutoreleasePool pool = null;", "+\tif (!NSThread.isMainThread()) pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tNSBitmapImageRep rep = imageRep;", "+\t\tif (imageRep.hasAlpha()) {", "+\t\t\tint bpr = width * 4;", "+\t\t\trep = (NSBitmapImageRep)new NSBitmapImageRep().alloc();", "+\t\t\tint /*long*/ bitmapData = imageRep.bitmapData();", "+\t\t\tif (data.bitmapDataAddress != 0) OS.free(data.bitmapDataAddress);", "+\t\t\tdata.bitmapDataAddress = OS.malloc(C.PTR_SIZEOF);", "+\t\t\tOS.memmove(data.bitmapDataAddress, new int /*long*/[] {bitmapData}, C.PTR_SIZEOF);", "+\t\t\trep = rep.initWithBitmapDataPlanes(data.bitmapDataAddress, width, height, 8, 3, false, false, OS.NSDeviceRGBColorSpace, OS.NSAlphaFirstBitmapFormat , bpr, 32);", "+\t\t\trep.autorelease();", "-\t\tdata.device = device;", "-\t\tdata.background = device.COLOR_WHITE.handle;", "-\t\tdata.foreground = device.COLOR_BLACK.handle;", "-\t\tdata.font = device.systemFont;", "-\t\tdata.image = this;", "+\t\thandle.setCacheMode(OS.NSImageCacheNever);", "+\t\tNSGraphicsContext context = NSGraphicsContext.graphicsContextWithBitmapImageRep(rep);", "+\t\tNSGraphicsContext.setCurrentContext(context);", "+\t\tNSAffineTransform transform = NSAffineTransform.transform();", "+\t\tNSSize size = handle.size();", "+\t\ttransform.translateXBy(0, size.height);", "+\t\ttransform.scaleXBy(1, -1);", "+\t\ttransform.set();", "+\t\tif (data != null) {", "+\t\t\tint mask = SWT.LEFT_TO_RIGHT | SWT.RIGHT_TO_LEFT;", "+\t\t\tif ((data.style & mask) == 0) {", "+\t\t\t\tdata.style |= SWT.LEFT_TO_RIGHT;", "+\t\t\t}", "+\t\t\tdata.device = device;", "+\t\t\tdata.background = device.COLOR_WHITE.handle;", "+\t\t\tdata.foreground = device.COLOR_BLACK.handle;", "+\t\t\tdata.font = device.systemFont;", "+\t\t\tdata.image = this;", "+\t\t}", "+\t\treturn context.id;", "+\t} finally {", "+\t\tif (pool != null) pool.release();", "-\treturn context.id;"]}], "num": 43899}