{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "986ecb5a28123589954de89d7863c2f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb6fe1e703352aca990b2d6f462a3983", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ea1614638a2d49cacb0be9856960133527b7df52", "commitAfterChange": "52c110b93169ca50cc17336de89321eb76b5f3d3", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " public boolean sleep ()", "signatureAfterChange": " public boolean sleep ()", "diff": ["-\t\tOS.gdk_threads_leave();", "-\t\t\t\t\twake = false;", "-\t\t\t\t\tOS.Call (poll, fds, nfds, timeout [0]);", "+\t\t\t\t\t/* Exit the OS lock to allow other threads to enter GTK */", "+\t\t\t\t\tLock lock = OS.lock;", "+\t\t\t\t\tint count = lock.lock ();", "+\t\t\t\t\tfor (int i = 0; i < count; i++) lock.unlock ();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\twake = false;", "+\t\t\t\t\t\tOS.Call (poll, fds, nfds, timeout [0]);", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tfor (int i = 0; i < count; i++) lock.lock ();", "+\t\t\t\t\t\tlock.unlock ();", "+\t\t\t\t\t}", "-\t\tOS.gdk_threads_enter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ebdc0a07b5441140ab33f8edf676f8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "a1670f52d7c9641448babf7d1299c2e4f0a1bbfb", "commitAfterChange": "4064bd56ae1e255dc144d4b4f0d2d04ddcb4d4d0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test_removeVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener()", "signatureAfterChange": "  public void test_addVisibilityWindowListenerLorg_eclipse_swt_browser_VisibilityWindowListener()", "diff": ["+public void test_addVisibilityWindowListenerLorg_eclipse_swt_browser_VisibilityWindowListener() {", "+\tshell.setText(\"test_addVisibilityWindowListenerLorg_eclipse_swt_browser_VisibilityWindowListener\");", "+\ttry {", "+\t\tbrowser.addVisibilityWindowListener(null);", "+\t\tfail(\"No exception thrown for listener == null\");", "+\t}", "+\tcatch (IllegalArgumentException e) {", "+\t}", "+\t", "+\tVisibilityWindowListener listener = new VisibilityWindowListener() {", "+\t\tpublic void hide(VisibilityWindowEvent event) {", "+\t\t}", "+\t\tpublic void show(VisibilityWindowEvent event) {", "+\t\t}", "+\t};", "+\tfor (int i = 0; i < 100; i++) browser.addVisibilityWindowListener(listener);", "+\tfor (int i = 0; i < 100; i++) browser.removeVisibilityWindowListener(listener);", "-public void test_removeVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener() {", "-\twarnUnimpl(\"Test test_removeVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener not written\");"]}], "num": 490}