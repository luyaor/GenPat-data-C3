{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b21f7fe61a135355c122e760bcef42d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e730654c29b0ba69fda0b11deb7cae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/AbstractItem.java", "commitBeforeChange": "9b82b2741b664d5127129af9913f35aab770ba0e", "commitAfterChange": "016f670aeb8d69c7d1ba8c8de8c50c1b6e647548", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public abstract String flatten();", "signatureAfterChange": "  public String flatten()", "diff": ["-public abstract String flatten();", "+public String flatten() {", "+\tcheckParams();", "+\tStringBuffer buffer = new StringBuffer();", "+\tSet set = params.keySet();", "+\tString[] keys = (String[])set.toArray(new String[set.size()]);", "+\tArrays.sort(keys);", "+\tfor (int j = 0; j < keys.length; j++) {", "+\t\tString key = keys[j];", "+\t\tObject value = params.get(key);", "+\t\tString valueStr = \"\";", "+\t\tif (value instanceof String) {", "+\t\t\tvalueStr = (String)value;", "+\t\t} else if (value instanceof String[]) {", "+\t\t\tString[] values = (String[])value;", "+\t\t\tStringBuffer valueBuffer = new StringBuffer();", "+\t\t\tfor (int i = 0; i < values.length; i++) {", "+\t\t\t\tif (i != 0) valueBuffer.append(\" \");", "+\t\t\t\tvalueBuffer.append(values[i]);", "+\t\t\t}", "+\t\t\tvalueStr = valueBuffer.toString();", "+\t\t} else {", "+\t\t\tvalueStr = value.toString();", "+\t\t}", "+\t\tif (valueStr.length() > 0) {", "+\t\t\tif (buffer.length() != 0) buffer.append(\",\");", "+\t\t\tbuffer.append(key);", "+\t\t\tbuffer.append(\"=\");", "+\t\t\tString quote = \"\";", "+\t\t\tif (valueStr.indexOf(',') != -1) {", "+\t\t\t\tquote = valueStr.indexOf('\"') != -1 ? \"'\" : \"\\\"\"; ", "+\t\t\t}", "+\t\t\tbuffer.append(quote);", "+\t\t\tbuffer.append(valueStr);", "+\t\t\tbuffer.append(quote);", "+\t\t}", "+\t}", "+\treturn buffer.toString();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e964b89cae9c2cd440c4178e72f22d56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/AbstractItem.java", "commitBeforeChange": "cbb184ca258eb2b91e7f6fbc3843c3584814607e", "commitAfterChange": "4c1eda61e98b25db9aad6cc6379ffa1b432de12b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public abstract String flatten();", "signatureAfterChange": "  public String flatten()", "diff": ["-public abstract String flatten();", "+public String flatten() {", "+\tcheckParams();", "+\tStringBuffer buffer = new StringBuffer();", "+\tSet set = params.keySet();", "+\tString[] keys = (String[])set.toArray(new String[set.size()]);", "+\tArrays.sort(keys);", "+\tfor (int j = 0; j < keys.length; j++) {", "+\t\tString key = keys[j];", "+\t\tObject value = params.get(key);", "+\t\tString valueStr = \"\";", "+\t\tif (value instanceof String) {", "+\t\t\tvalueStr = (String)value;", "+\t\t} else if (value instanceof String[]) {", "+\t\t\tString[] values = (String[])value;", "+\t\t\tStringBuffer valueBuffer = new StringBuffer();", "+\t\t\tfor (int i = 0; i < values.length; i++) {", "+\t\t\t\tif (i != 0) valueBuffer.append(\" \");", "+\t\t\t\tvalueBuffer.append(values[i]);", "+\t\t\t}", "+\t\t\tvalueStr = valueBuffer.toString();", "+\t\t} else {", "+\t\t\tvalueStr = value.toString();", "+\t\t}", "+\t\tif (valueStr.length() > 0) {", "+\t\t\tif (buffer.length() != 0) buffer.append(\",\");", "+\t\t\tbuffer.append(key);", "+\t\t\tbuffer.append(\"=\");", "+\t\t\tString quote = \"\";", "+\t\t\tif (valueStr.indexOf(',') != -1) {", "+\t\t\t\tquote = valueStr.indexOf('\"') != -1 ? \"'\" : \"\\\"\"; ", "+\t\t\t}", "+\t\t\tbuffer.append(quote);", "+\t\t\tbuffer.append(valueStr);", "+\t\t\tbuffer.append(quote);", "+\t\t}", "+\t}", "+\treturn buffer.toString();", "+}"]}], "num": 13850}