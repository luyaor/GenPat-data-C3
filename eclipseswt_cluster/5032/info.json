{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aa491beb9b131d050920df1e545bb96", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8470a2acbc2a1a37556c9d77495cd35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "cdc9ecd514e744f682b50ce997c7d32f5f280e94", "commitAfterChange": "e927fde2d8315b027f15ceb030f71a59bae922c2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\t\twidth += columns [i].getWidth ();", "+\t\t\t\twidth += columns [i].getWidth () + CELL_GAP;", "-\t\t\twidth = calculateWidth (items, 0, gc, true);", "+\t\t\twidth = calculateWidth (items, 0, gc, true) + CELL_GAP;", "-\t\theight = (int)/*64*/((NSOutlineView) view).numberOfRows () * getItemHeight () + getHeaderHeight ();", "+\t\tint itemHeight = getItemHeight () + CELL_GAP;", "+\t\theight = (int)/*64*/((NSOutlineView) view).numberOfRows () * itemHeight + getHeaderHeight ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9f13b50743e5846150ea7be890010e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "cdc9ecd514e744f682b50ce997c7d32f5f280e94", "commitAfterChange": "e927fde2d8315b027f15ceb030f71a59bae922c2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t\t\twidth += columns [i].getWidth ();", "+\t\t\t\twidth += columns [i].getWidth () + CELL_GAP;", "-\t\t\twidth += calculateWidth (items, 0, gc);", "+\t\t\twidth += calculateWidth (items, 0, gc) + CELL_GAP;", "-\t\theight = itemCount * getItemHeight () + getHeaderHeight();", "+\t\tint itemHeight = getItemHeight () + CELL_GAP;", "+\t\theight = itemCount * itemHeight + getHeaderHeight();"]}], "num": 5032}