{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01c5ca417e8920e53ac3f36878062ae0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76510df6a979bf72fd690c5dcc10e01c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/TIFFDirectory.java", "commitBeforeChange": "3592e964ac5b7db50141d6962fe69da4f0c9d091", "commitAfterChange": "dd0862c01e9b993d658b395af820f586129ec8a1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void parseEntries(byte[] buffer) throws IOException", "signatureAfterChange": "  void parseEntries(byte[] buffer) throws IOException", "diff": ["+\t\t\tcase TAG_NewSubfileType: {", "+\t\t\t\tsubfileType = getEntryValue(type, buffer, offset);", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_SubfileType: {", "+\t\t\t\tint oldSubfileType = getEntryValue(type, buffer, offset);", "+\t\t\t\tsubfileType = oldSubfileType == OFILETYPE_REDUCEDIMAGE ? FILETYPE_REDUCEDIMAGE : oldSubfileType == OFILETYPE_PAGE ? FILETYPE_PAGE : 0;", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_FillOrder: {", "+\t\t\t\t/* Ignored: baseline only requires default fill order. */", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_ImageDescription: {", "+\t\t\t\t/* Ignored */", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_Orientation: {", "+\t\t\t\t/* Ignored: baseline only requires top left orientation. */", "+\t\t\tcase TAG_PlanarConfiguration: {", "+\t\t\t\t/* Ignored: baseline only requires default planar configuration. */", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_Software: {", "+\t\t\t\t/* Ignored */", "+\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tcase TAG_DateTime: {", "+\t\t\t\t/* Ignored */", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bac5f9bea68d896a3de29c21efeedda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 3, "signatureBeforeChange": "  long gtk_button_press_event (long widget, long event)", "signatureAfterChange": " \t\tpublic void handleEvent(Event event)", "diff": ["+\tListener listener = new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tswitch(event.type) {", "+\t\t\t\tcase SWT.KeyDown: onTextKeyDown(event); break;", "+\t\t\t\tcase SWT.FocusIn: onTextFocusIn(event); break;", "+\t\t\t\tcase SWT.FocusOut: onTextFocusOut(event); break;", "+\t\t\t\tcase SWT.MouseDown: // Fall through", "+\t\t\t\tcase SWT.MouseUp: onTextMouseClick(event); break;", "+\t\t\t\tcase SWT.MenuDetect: notifyListeners(SWT.MenuDetect, event); break;", "+\t\t\t\tcase SWT.Verify: onTextVerify(event); break;", "+\t\t}", "-", "-long /*int*/ gtk_button_press_event (long /*int*/ widget, long /*int*/ event) {", "-\tif ((style & SWT.CALENDAR) == 0 ){", "-\t\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\t\tOS.memmove (gdkEvent, event, GdkEventButton.sizeof);", "-\t\tif (gdkEvent.type == OS.GDK_BUTTON_PRESS && gdkEvent.button == 1) {", "-\t\t\tonTextMouseClick(gdkEvent);", "-\t\t\treturn gtk_button_press_event(widget, event, false);", "-\t\t}", "-\t}", "-\treturn super.gtk_button_press_event (widget, event);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d234acde449a4b1bec421b5cb0402e32", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/datetime/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "a3eb8313e949f9cb4d7d769018cd74a5e335546c", "commitAfterChange": "9557ec5f83857c038e16871230af1bc8baa0d33e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void handleEvent(Event event)", "signatureAfterChange": " \t\t\tpublic void handleEvent(Event event)", "diff": ["+\t\tListener listener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tswitch(event.type) {", "+\t\t\t\t\tcase SWT.Paint:\t\thandlePaint(event); break;", "+\t\t\t\t\tcase SWT.Resize:\thandleResize(event); break;", "+\t\t\t\t\tcase SWT.MouseDown:\thandleMouseDown(event); break;", "+\t\t\t\t\tcase SWT.KeyDown:\thandleKeyDown(event); break;", "+\t\t\t\t\tcase SWT.Traverse:\thandleTraverse(event); break;", "+\t\t\t\t}", "+\t\t\t}", "-void handleEvent(Event event) {", "-\tswitch(event.type) {", "-\t\tcase SWT.Paint:", "-\t\t\thandlePaint(event);", "-\t\t\tbreak;", "-\t\tcase SWT.Resize:", "-\t\t\thandleResize(event);", "-\t\t\tbreak;", "-\t\tcase SWT.MouseDown:", "-\t\t\thandleMouseDown(event);", "-\t\t\tbreak;", "-\t\tcase SWT.KeyDown:", "-\t\t\thandleKeyDown(event);", "-\t\t\tbreak;", "-\t\tcase SWT.Traverse:", "-\t\t\thandleTraverse(event);", "-\t\t\tbreak;", "-\t\tcase SWT.Selection:", "-\t\t\thandleSelection(event);", "-\t\t\tbreak;", "-\t\tcase SWT.Verify:", "-\t\t\thandleVerify(event);", "-\t\t\tbreak;", "-\t}", "-}"]}], "num": 21300}