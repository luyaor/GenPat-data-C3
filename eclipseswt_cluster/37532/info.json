{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "566730a31950dce2a3d8d634d34d2717", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eabffe64ebc6d603e1647e55bdd62bb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "5ee76f68731beca27e439535faff552a72b10741", "commitAfterChange": "f5f68fabf893d045dff7842a39ab757567d0bd9c", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  int windowDelegateProc(int delegate, int sel, int arg0, int arg1, int arg2)", "signatureAfterChange": "  int windowDelegateProc(int delegate, int sel, int arg0, int arg1, int arg2)", "diff": ["+\t} else if (sel == OS.sel_textView_1willChangeSelectionFromCharacterRange_1toCharacterRange_1) {", "+\t\tNSRange range = widget.textView_willChangeSelectionFromCharacterRange_toCharacterRange(arg0, arg1, arg2);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRange.sizeof);", "+\t\tOS.memmove (result, range, NSRange.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d86539ed149ee1e5e470708c43f1cb2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fffca5c8eb3cb5fb81da3cf1a7af0bbf503e395d", "commitAfterChange": "70b3c05a26d1ba0b79fb3867745857a6ef7b0bdd", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0, int arg1, int arg2)", "signatureAfterChange": "  static int windowProc(int id, int sel, int arg0, int arg1, int arg2)", "diff": ["+\t} else if (sel == OS.sel_drawTitle_withFrame_inView_) {", "+\t\tNSRect rect = new NSRect ();", "+\t\tOS.memmove (rect, arg1, NSRect.sizeof);", "+\t\trect = widget.drawTitleWithFrameInView (id, sel, arg0, rect, arg2);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac739978c517f4976d515e8e679fc85e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "322da4fbf4e162c4789aa5a67730d7b6957541bc", "commitAfterChange": "8e2f1f4509dd4929b3816aa28e0f816cce004892", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": "  static int windowDelegateProc(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  static int windowDelegateProc(int id, int sel, int arg0, int arg1)", "diff": ["+\t} else if (sel == OS.sel_expansionFrameWithFrame_inView_) {", "+\t\tNSRect rect = new NSRect();", "+\t\tOS.memmove(rect, arg0, NSRect.sizeof);", "+\t\trect = widget.expansionFrameWithFrame_inView(id, sel, rect, arg1);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11841ff3be1e5d0ee5a1782fd21b59f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a02c3280536dd89ce372d6b78c1a0a40b1acf6af", "commitAfterChange": "5ad7eb0c9c23a6c9f175411dd8c5a24782bff0ee", "methodNumberBeforeChange": 198, "methodNumberAfterChange": 198, "signatureBeforeChange": "  static long windowProc(long id, long sel, long arg0, long arg1)", "signatureAfterChange": "  static long windowProc(long id, long sel, long arg0, long arg1)", "diff": ["+\t} else if (sel == OS.sel_focusRingMaskBoundsForFrame_inView_) {", "+\t\tNSRect rect = new NSRect();", "+\t\tOS.memmove(rect, arg0, NSRect.sizeof);", "+\t\trect = widget.focusRingMaskBoundsForFrame(id, sel, rect, arg1);", "+\t\t/* NOTE that this is freed in C */", "+\t\tlong /*int*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcb72c6f440d63185486cc783f4f010", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "3fcd225fa2e66d3e13758e8a90c5c8fb576c874a", "commitAfterChange": "95f8ac5e2e6850065945e7f7faeea45702471c6f", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_columnAtPoint_) {", "+\t\tNSPoint point = new NSPoint();", "+\t\tOS.memmove(point, arg0, NSPoint.sizeof);", "+\t\treturn widget.columnAtPoint(id, sel, point);", "+\t} else if (sel == OS.sel_headerRectOfColumn_) {", "+\t\tNSRect rect = widget.headerRectOfColumn(id, sel, arg0);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSRect.sizeof);", "+\t\tOS.memmove (result, rect, NSRect.sizeof);", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06979ee787fe1c3978b385c53bdb13ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "fffca5c8eb3cb5fb81da3cf1a7af0bbf503e395d", "commitAfterChange": "70b3c05a26d1ba0b79fb3867745857a6ef7b0bdd", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": "  static int windowProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_cellSizeForBounds_) {", "+\t\tNSRect rect = new NSRect();", "+\t\tOS.memmove(rect, arg0, NSRect.sizeof);", "+\t\tNSSize size = widget.cellSizeForBounds(id, sel, rect);", "+\t\t/* NOTE that this is freed in C */", "+\t\tint /*long*/ result = OS.malloc (NSSize.sizeof);", "+\t\tOS.memmove (result, size, NSSize.sizeof);", "+\t\treturn result;"]}], "num": 37532}