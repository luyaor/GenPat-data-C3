{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f0c19337a27950146c5d20b6770d73b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f961bf94a30362b1d33131c789e5be49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b13cb0959e0afe3c17aa178a3bca80d7d1fd22d7", "commitAfterChange": "e1ddb07c7c0cc45210739f25c19adbd93ffa639d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  void updateImages (boolean enabled)", "signatureAfterChange": "  void updateImages (boolean enabled)", "diff": ["-\t\tint listStyle = parent.style & SWT.RIGHT_TO_LEFT;", "-\t\t\timageList = display.getImageListToolBar (listStyle, bounds.width, bounds.height);", "+\t\t\timageList = display.getImageListToolBar (SWT.NONE, bounds.width, bounds.height);", "-\t\t\tdisabledImageList = display.getImageListToolBarDisabled (listStyle, bounds.width, bounds.height);", "+\t\t\tdisabledImageList = display.getImageListToolBarDisabled (SWT.NONE, bounds.width, bounds.height);", "-\t\t\thotImageList = display.getImageListToolBarHot (listStyle, bounds.width, bounds.height);", "+\t\t\thotImageList = display.getImageListToolBarHot (SWT.NONE, bounds.width, bounds.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64e92169b383845a6cecae5db1b424f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebResourceLoadDelegate.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int identifierForInitialRequest (int webView, int request, int dataSource, int identifier)", "signatureAfterChange": "  int identifierForInitialRequest (int webView, int request, int dataSource, int identifier)", "diff": ["-\t", "+", "+\t/* send progress event iff request is for top-level frame */", "+", "-\t\tint /*long*/ progress = OS.malloc (8);", "-\t\tiWebView.estimatedProgress (progress);", "-\t\tdouble [] estimate = new double[1];", "-\t\tOS.MoveMemory (estimate, progress, 8);", "-\t\tOS.free (progress);", "-\t\tprogress = (int) (estimate[0] * 100);", "-\t\t", "+\t\tint /*long*/ ptr = OS.malloc (8);", "+\t\tiWebView.estimatedProgress (ptr);", "+\t\tdouble[] estimate = new double[1];", "+\t\tOS.MoveMemory (estimate, ptr, 8);", "+\t\tOS.free (ptr);", "+\t\tint progress = (int)(estimate[0] * 100);", "+", "-\t\tprogressEvent.current = (int)(progress);", "-\t\tprogressEvent.total = Math.max ((int)progress, WebKit.MAX_PROGRESS);", "+\t\tprogressEvent.current = progress;", "+\t\tprogressEvent.total = Math.max (progress, WebKit.MAX_PROGRESS);"]}], "num": 31488}