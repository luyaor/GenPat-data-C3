{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "896c683ef361349313ecb017df55fbd8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf9f76e0436e2aa0bc047d977705786", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 321, "methodNumberAfterChange": 322, "signatureBeforeChange": " \tint get_anchorTarget(int index, int pAnchorTarget)", "signatureAfterChange": " \tint get_anchorTarget(int index, int pAnchorTarget)", "diff": ["-\t\t// TODO: pAnchorTarget is a VARIANT that can be either a bstr (event.string) or a dispatch (event.accessible)", "+\t\tAccessible accessible = event.accessible;", "+\t\tif (accessible != null) {", "+\t\t\taccessible.AddRef();", "+\t\t\tsetPtrVARIANT(pAnchorTarget, COM.VT_DISPATCH, accessible.getAddress());", "+\t\t\treturn COM.S_OK;", "+\t\t}", "+\t\tsetStringVARIANT(pAnchorTarget, event.result);", "+\t\tif (event.result == null) return COM.S_FALSE;", "-\t\t// TODO: @retval S_FALSE if there is nothing to return, [out] value is NULL@retval E_INVALIDARG if bad [in] passed, [out] value is NULL"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2eee69767486bd3563b41282da921d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "13c7ba94b389ac7c444b6a0c4c21ecac48b2f8f4", "commitAfterChange": "27c0efa85174869eed1eeedefcfdd6ce7fa3b42e", "methodNumberBeforeChange": 320, "methodNumberAfterChange": 321, "signatureBeforeChange": " \tint get_anchor(int index, int pAnchor)", "signatureAfterChange": " \tint get_anchor(int index, int pAnchor)", "diff": ["-\t\tif (event.result == null || event.result.length() == 0) return COM.S_FALSE; // TODO: is S_FALSE ok here?", "-\t\t// TODO: pAnchor is a VARIANT that can be either a bstr (event.string) or a dispatch (event.accessible)", "+\t\tAccessible accessible = event.accessible;", "+\t\tif (accessible != null) {", "+\t\t\taccessible.AddRef();", "+\t\t\tsetPtrVARIANT(pAnchor, COM.VT_DISPATCH, accessible.getAddress());", "+\t\t\treturn COM.S_OK;", "+\t\t}", "+\t\tsetStringVARIANT(pAnchor, event.result);", "+\t\tif (event.result == null) return COM.S_FALSE;", "-\t\t// TODO: @retval S_FALSE if there is nothing to return, [out] value is NULL@retval E_INVALIDARG if bad [in] passed, [out] value is NULL"]}], "num": 60175}