{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed24001e9840eac1ff3152f0423081eb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c81709cb82df853271bb88ead981e3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "f817d34150035d0860329767e1206c1ab75fd9fe", "commitAfterChange": "81aca485ef9d8730e0f9544960edb57a0f6bf82b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void setTabList (Control [] tabList)", "signatureAfterChange": " public void setTabList (Control [] tabList)", "diff": ["+\tcheckWidget ();", "+\tif (tabList != null) {", "+\t\tfor (int i=0; i<tabList.length; i++) {", "+\t\t\tControl control = tabList [i];", "+\t\t\tif (control == null) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\tif (control.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented.", "+\t\t\t* Tab lists are currently only supported", "+\t\t\t* for the direct children of a composite.", "+\t\t\t*/", "+//\t\t\tShell shell = control.getShell ();", "+//\t\t\twhile (control != shell && control != this) {", "+//\t\t\t\tcontrol = control.parent;", "+//\t\t\t}", "+//\t\t\tif (control != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t\tif (control.parent != this) error (SWT.ERROR_INVALID_PARENT);", "+\t\t}", "+\t\tControl [] newList = new Control [tabList.length];", "+\t\tSystem.arraycopy (tabList, 0, newList, 0, tabList.length);", "+\t\ttabList = newList;", "+\t} ", "+\tthis.tabList = tabList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eec204f9bf2e60c715637d8a9ab59e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "2804af6b30e3fa1385bd4b6a5aaf57ea8ba0df96", "commitAfterChange": "bde4b0504ae7f81c39b8ba97dbf39292617e06b5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void removeStatusTextListener(StatusTextListener listener)", "signatureAfterChange": " public void removeStatusTextListener(StatusTextListener listener)", "diff": ["-\tbrowserSite.removeStatusTextListener(listener);", "+\tif (statusTextListeners.length == 0) return;", "+\tint index = -1;", "+\tfor (int i = 0; i < statusTextListeners.length; i++) {", "+\t\tif (listener == statusTextListeners[i]){", "+\t\t\tindex = i;", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\tif (index == -1) return;", "+\tif (statusTextListeners.length == 1) {", "+\t\tstatusTextListeners = new StatusTextListener[0];", "+\t\treturn;", "+\t}", "+\tStatusTextListener[] newStatusTextListeners = new StatusTextListener[statusTextListeners.length - 1];", "+\tSystem.arraycopy(statusTextListeners, 0, newStatusTextListeners, 0, index);", "+\tSystem.arraycopy(statusTextListeners, index + 1, newStatusTextListeners, index, statusTextListeners.length - index - 1);", "+\tstatusTextListeners = newStatusTextListeners;"]}], "num": 12820}