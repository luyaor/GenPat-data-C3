{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f53d13700091cdc3f122ac0d9e7334ed", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60ea2f5a0afdd1c32ca24c8857ebbca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "ef75fb29204574685795f7fe514650916d64d963", "commitAfterChange": "70193a6dcb048607d3512f456493376d1c1831ec", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void computeRuns (GC gc)", "signatureAfterChange": " void computeRuns (GC gc)", "diff": ["-\t\tif (run.length == 1) {", "-\t\t\tchar ch = segmentsText.charAt(run.start);", "-\t\t\tswitch (ch) {", "-\t\t\t\tcase '\\t': {", "-\t\t\t\t\trun.tab = true;", "-\t\t\t\t\tif (tabs == null) break;", "-\t\t\t\t\tint tabsLength = tabs.length, j;", "-\t\t\t\t\tfor (j = 0; j < tabsLength; j++) {", "-\t\t\t\t\t\tif (tabs[j] > lineWidth) {", "-\t\t\t\t\t\t\trun.width = tabs[j] - lineWidth;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tif (j == tabsLength) {", "-\t\t\t\t\t\tint tabX = tabs[tabsLength-1];", "-\t\t\t\t\t\tint lastTabWidth = tabsLength > 1 ? tabs[tabsLength-1] - tabs[tabsLength-2] : tabs[0];", "-\t\t\t\t\t\tif (lastTabWidth > 0) {", "-\t\t\t\t\t\t\twhile (tabX <= lineWidth) tabX += lastTabWidth;", "-\t\t\t\t\t\t\trun.width = tabX - lineWidth;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\tif (tabs != null && run.tab) {", "+\t\t\tint tabsLength = tabs.length, j;", "+\t\t\tfor (j = 0; j < tabsLength; j++) {", "+\t\t\t\tif (tabs[j] > lineWidth) {", "+\t\t\t\t\trun.width = tabs[j] - lineWidth;", "-\t\t\t\tcase '\\n': {", "-\t\t\t\t\trun.lineBreak = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase '\\r': {", "-\t\t\t\t\trun.lineBreak = true;", "-\t\t\t\t\tStyleItem next = allRuns[i + 1];", "-\t\t\t\t\tif (next.length != 0 && segmentsText.charAt(next.start) == '\\n') {", "-\t\t\t\t\t\trun.length += 1;", "-\t\t\t\t\t\tnext.free();", "-\t\t\t\t\t\tStyleItem[] newAllRuns = new StyleItem[allRuns.length - 1];", "-\t\t\t\t\t\tSystem.arraycopy(allRuns, 0, newAllRuns, 0, i + 1);", "-\t\t\t\t\t\tSystem.arraycopy(allRuns, i + 2, newAllRuns, i + 1, allRuns.length - i - 2);", "-\t\t\t\t\t\tallRuns = newAllRuns;", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "+\t\t\t}", "+\t\t\tif (j == tabsLength) {", "+\t\t\t\tint tabX = tabs[tabsLength-1];", "+\t\t\t\tint lastTabWidth = tabsLength > 1 ? tabs[tabsLength-1] - tabs[tabsLength-2] : tabs[0];", "+\t\t\t\tif (lastTabWidth > 0) {", "+\t\t\t\t\twhile (tabX <= lineWidth) tabX += lastTabWidth;", "+\t\t\t\t\trun.width = tabX - lineWidth;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9711f596bbc4110a0e8f27f9975cf332", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "065f2bc5320f7e3787bb8aa3b1fe53b5a5c29579", "commitAfterChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw(GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\t\tint drawX = x, drawY = y + lineY[line];", "+\t\tint drawX = x + getLineIndent(line);", "+\t\tint drawY = y + lineY[line];", "-\t\tif (wrapWidth != -1) {", "-\t\t\tswitch (alignment) {", "-\t\t\t\tcase SWT.CENTER: drawX += (wrapWidth - lineWidth[line]) / 2; break;", "-\t\t\t\tcase SWT.RIGHT: drawX += wrapWidth - lineWidth[line]; break;", "-\t\t\t}", "-\t\t}", "-\t\t\t\t\t\tif (!run.tab) {", "+\t\t\t\t\t\tif (!run.tab && !(run.style != null && run.style.metrics != null)) {", "-\t\t\t\t\t\t\tgc.drawString(string, drawX, drawRunY, true);", "-\t\t\t\t\t\t\tif (run.style != null && run.style.underline) {", "-\t\t\t\t\t\t\t\tint underlineY = drawRunY + run.baseline + 1;", "-\t\t\t\t\t\t\t\tgc.drawLine (drawX, underlineY, drawX + run.width, underlineY);\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (run.style != null && run.style.strikeout) {", "-\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.height - run.height/2 - 1;", "-\t\t\t\t\t\t\t\tgc.drawLine (drawX, strikeoutY, drawX + run.width, strikeoutY);", "+\t\t\t\t\t\t\tif (!(run.style != null && run.style.metrics != null)) {", "+\t\t\t\t\t\t\t\tgc.drawString(string, drawX, drawRunY, true);", "+\t\t\t\t\t\t\t\tif (run.style != null && run.style.underline) {", "+\t\t\t\t\t\t\t\t\tint underlineY = drawRunY + run.baseline + 1;", "+\t\t\t\t\t\t\t\t\tgc.drawLine (drawX, underlineY, drawX + run.width, underlineY);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (run.style != null && run.style.strikeout) {", "+\t\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + run.height - run.height/2 - 1;", "+\t\t\t\t\t\t\t\t\tgc.drawLine (drawX, strikeoutY, drawX + run.width, strikeoutY);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (fg != selectionForeground) {", "+\t\t\t\t\t\t\t\tif (fg != selectionForeground && !(run.style != null && run.style.metrics != null)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88fe218ad79e85832b4155d55e68c271", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/textlayout/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "8b27ce8989bee24d774f8bcd7584db23e2967779", "commitAfterChange": "1e40480d2ebe5f918e1aa1d7b463a7d51c934488", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground)", "diff": ["-\t\tint drawX = x, drawY = y + lineY[line];", "+\t\tint drawX = x + getLineIndent(line);", "+\t\tint drawY = y + lineY[line];", "-\t\tif (wrapWidth != -1) {", "-\t\t\tswitch (alignment) {", "-\t\t\t\tcase SWT.CENTER: drawX += (wrapWidth - lineWidth[line]) / 2; break;", "-\t\t\t\tcase SWT.RIGHT: drawX += wrapWidth - lineWidth[line]; break;", "-\t\t\t}", "-\t\t}", "-\t\t\t\t\t\tif (!run.tab) {", "+\t\t\t\t\t\tif (!run.tab && !(run.style != null && run.style.metrics != null)) {", "-\t\t\t\t\t\t\tgc.drawString(string, drawX, drawRunY, true);", "-\t\t\t\t\t\t\tif (run.style != null && run.style.underline) {", "-\t\t\t\t\t\t\t\tint underlineY = drawRunY + run.ascent + 1;", "-\t\t\t\t\t\t\t\tgc.drawLine (drawX, underlineY, drawX + run.width, underlineY);\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tif (run.style != null && run.style.strikeout) {", "-\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + (run.ascent + run.descent) - (run.ascent + run.descent)/2 - 1;", "-\t\t\t\t\t\t\t\tgc.drawLine (drawX, strikeoutY, drawX + run.width, strikeoutY);", "+\t\t\t\t\t\t\tif (!(run.style != null && run.style.metrics != null)) {", "+\t\t\t\t\t\t\t\tgc.drawString(string, drawX, drawRunY, true);", "+\t\t\t\t\t\t\t\tif (run.style != null && run.style.underline) {", "+\t\t\t\t\t\t\t\t\tint underlineY = drawRunY + run.ascent + 1;", "+\t\t\t\t\t\t\t\t\tgc.drawLine (drawX, underlineY, drawX + run.width, underlineY);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tif (run.style != null && run.style.strikeout) {", "+\t\t\t\t\t\t\t\t\tint strikeoutY = drawRunY + (run.ascent + run.descent) - (run.ascent + run.descent)/2 - 1;", "+\t\t\t\t\t\t\t\t\tgc.drawLine (drawX, strikeoutY, drawX + run.width, strikeoutY);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tif (fg != selectionForeground) {", "+\t\t\t\t\t\t\t\tif (fg != selectionForeground && !(run.style != null && run.style.metrics != null)) {"]}], "num": 40480}