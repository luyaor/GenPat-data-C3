{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a50baba7aa0e8f27c79d90521b59f4f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0145d348ed44e58e6940b68d9242596d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "267efeba946291455291f7e37b5a9adb5c1006b4", "commitAfterChange": "20492b8023f4da8a65e4db2fb7cb69e8486d81b2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int internal_kEventAccessibleGetFocusedChild (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \tpublic int internal_kEventAccessibleGetFocusedChild (int nextHandler, int theEvent, int userData)", "diff": ["+\t\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t//TODO: check error?", "-\t\t\t\t/* From the Carbon doc for kEventAccessibleGetFocusedChild: \"Only return immediate children;", "-\t\t\t\t * do not return grandchildren of yourself.\"", "+\t\t\t\t/* From the Carbon doc for kEventAccessibleGetFocusedChild:", "+\t\t\t\t * \"Only return immediate children; do not return grandchildren of yourself.\"", "-\t\t\t\treturn OS.noErr;", "+\t\t\t\treturn OS.noErr; //TODO: should this return eventNotHandledErr?", "-\t\t\t/* Invalid childID means the application did not implement getFocus. */", "-\t\t\treturn OS.eventNotHandledErr;", "+\t\t\t/* Invalid childID means the application did not implement getFocus, so just go with the default handler. */", "-\t\treturn OS.noErr;", "+\t\treturn OS.eventNotHandledErr;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc94369c7cf386750825b5d726542d72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "046b2b1ccf3f21ac6303aceb562ded417737fefc", "commitAfterChange": "b00764edfb26d776b9fe9f82005b87f9053f74be", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getFocusedAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t/* Invalid childID at this point means the application did not implement getFocus. */", "-\t\treturn OS.eventNotHandledErr;", "+\t\t/* Invalid childID at this point means the application did not implement getFocus, so return the native focus. */", "+\t\tboolean hasFocus = false;", "+\t\tint focusWindow = OS.GetUserFocusWindow ();", "+\t\tif (focusWindow != 0) {", "+\t\t\tint [] focusControl = new int [1];", "+\t\t\tOS.GetKeyboardFocus (focusWindow, focusControl);", "+\t\t\tif (focusControl [0] == control.handle) hasFocus = true;", "+\t\t}", "+\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {hasFocus});", "+\t\treturn OS.noErr;"]}], "num": 883}