{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96e79a814677beff9d53eafae4da7369", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34be9780b879862cf18e80eed4869fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "80349316611d76a8862f4cbf89d1c06da437f640", "commitAfterChange": "546263402943f988ce82854771902dc882c7230a", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0 );", "-\tif (count == 1 && columns [0] == null) {", "+\tif (columnCount == 0) {", "-\tif (order.length != count) error (SWT.ERROR_INVALID_ARGUMENT);", "-\tint [] oldOrder = new int [count];", "-\tOS.SendMessage (handle, OS.LVM_GETCOLUMNORDERARRAY, count, oldOrder);", "+\tif (order.length != columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint [] oldOrder = new int [columnCount];", "+\tOS.SendMessage (handle, OS.LVM_GETCOLUMNORDERARRAY, columnCount, oldOrder);", "-\tboolean [] seen = new boolean [count];", "+\tboolean [] seen = new boolean [columnCount];", "-\t\tif (index < 0 || index >= count) error (SWT.ERROR_INVALID_RANGE);", "+\t\tif (index < 0 || index >= columnCount) error (SWT.ERROR_INVALID_RANGE);", "-\t\tRECT [] oldRects = new RECT [count];", "-\t\tfor (int i=0; i<count; i++) {", "+\t\tRECT [] oldRects = new RECT [columnCount];", "+\t\tfor (int i=0; i<columnCount; i++) {", "-\t\tTableColumn[] newColumns = new TableColumn [count];", "-\t\tSystem.arraycopy (columns, 0, newColumns, 0, count);", "+\t\tTableColumn[] newColumns = new TableColumn [columnCount];", "+\t\tSystem.arraycopy (columns, 0, newColumns, 0, columnCount);", "-\t\tfor (int i=0; i<count; i++) {", "+\t\tfor (int i=0; i<columnCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0579416a47f549f3436a7af54293154", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "9497af67f76ea5c15589d54504ab01cdd8920ddb", "commitAfterChange": "230505d4ad827a1c4e6bb987a098d96d90c30b1b", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void setColumnOrder (int [] order)", "signatureAfterChange": " public void setColumnOrder (int [] order)", "diff": ["-\tint count = columnCount;", "-\tif (count == 0) {", "+\tif (columnCount == 0) {", "-\tif (order.length != count) error (SWT.ERROR_INVALID_ARGUMENT);", "-\tint [] oldOrder = new int [count];", "-\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, count, oldOrder);", "+\tif (order.length != columnCount) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint [] oldOrder = new int [columnCount];", "+\tOS.SendMessage (hwndHeader, OS.HDM_GETORDERARRAY, columnCount, oldOrder);", "-\tboolean [] seen = new boolean [count];", "+\tboolean [] seen = new boolean [columnCount];", "-\t\tif (index < 0 || index >= count) error (SWT.ERROR_INVALID_RANGE);", "+\t\tif (index < 0 || index >= columnCount) error (SWT.ERROR_INVALID_RANGE);", "-\t\tRECT [] oldRects = new RECT [count];", "-\t\tfor (int i=0; i<count; i++) {", "+\t\tRECT [] oldRects = new RECT [columnCount];", "+\t\tfor (int i=0; i<columnCount; i++) {", "-\t\tTreeColumn [] newColumns = new TreeColumn [count];", "-\t\tSystem.arraycopy (columns, 0, newColumns, 0, count);", "+\t\tTreeColumn [] newColumns = new TreeColumn [columnCount];", "+\t\tSystem.arraycopy (columns, 0, newColumns, 0, columnCount);", "-\t\tfor (int i=0; i<count; i++) {", "+\t\tfor (int i=0; i<columnCount; i++) {"]}], "num": 42275}