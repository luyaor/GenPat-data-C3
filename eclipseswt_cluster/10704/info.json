{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d954e73aeabaf491561dd3d4ea9227c2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "026785331ddc4ca17c977dc584ac9d35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "95548f568ccf2d0cabfc6561e1440be263c0c1e7", "commitAfterChange": "a1c0e494851568d744afe1962017864dee4259f2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  String getText (int start, int end)", "signatureAfterChange": "  char [] getText (int start, int end)", "diff": ["-String getText (int start, int end) {", "+char [] getText (int start, int end) {", "-\t\tif (str == null) return \"\"; //$NON-NLS-1$", "-\tint length = str.length();", "-\tchar[] buffer = new char[length];", "-\tstr.getCharacters_(buffer);", "-\tString string = new String(buffer);", "-\tif (end == -1) end = length;", "-\tstart = Math.max(0, Math.min(start, length));", "-\tend = Math.max(0, Math.min(end, length));", "-\treturn string.substring(start, end);", "+\tif (str == null) return new char[0];", "+\tNSRange range = new NSRange ();", "+\trange.location = start;", "+\tif (end == -1) {", "+\t\tint length = str.length();", "+\t\trange.length = length - start;", "+\t} else {", "+\t\trange.length = end - start;", "+\t}", "+\tchar [] buffer= new char [range.length];", "+\tstr.getCharacters_range_(buffer, range);", "+\treturn buffer;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80bc2b546045c44f6dd0b05ded305b31", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void update ()", "signatureAfterChange": " public void update ()", "diff": ["-\tint[] mask= new int[] {", "-\t\tOS.kEventClassWindow, OS.kEventWindowDrawContent", "-\t};", "-\tint[] evt= new int[1];", "-\twhile (OS.ReceiveNextEvent(mask.length/2, mask, 0.01, true, evt) == OS.noErr) {", "-\t\tint rc= OS.SendEventToEventTarget(evt[0], OS.GetEventDispatcherTarget());", "-        if (rc != OS.noErr)", "-\t\t\tSystem.out.println(\"Display.update: SendEventToEventTarget: \" + rc);", "-\t\tOS.ReleaseEvent(evt[0]);", "+\tint wHandle= 0;", "+\tint[] macEvent= new int[6];", "+\twhile (OS.GetNextEvent(OS.updateMask, macEvent)) {", "+\t\tif (macEvent[0] == OS.updateEvt) {", "+\t\t\twHandle= macEvent[1];", "+\t\t\tupdateWindow(wHandle);", "+\t\t}", "+\t"]}], "num": 10704}