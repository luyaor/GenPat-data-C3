{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97115d3a96d58bf4577f932ecb0e9af5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5bf49a6617b2ccdd1b4e7696a192f09", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem.java", "commitBeforeChange": "0197907d68007347a84613b33a3d149ba32c4fc3", "commitAfterChange": "945c1cc261907e14df240a9f3eb0dc64798447dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": " void drawUnselected(GC gc)", "signatureAfterChange": "  void drawUnselected(GC gc)", "diff": ["+", "-\tint nextVisible = -1;", "-\tfor (int i = parent.indexOf(this)+1; i < parent.items.length; i++) {", "-\t\tif (parent.items[i].showing) {", "-\t\t\tnextVisible = i;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "-\tif (nextVisible == -1 || nextVisible != parent.selectedIndex) {", "-\t\tgc.setForeground(CTabFolder.borderColor);", "-\t\tgc.drawLine(x + width - 1, y, x + width - 1, y + height);", "-\t}", "+\tint index = parent.indexOf(this);", "+", "+\tif (index > 0 && index < parent.selectedIndex)", "+\t\tdrawLeftUnselectedBorder(gc);", "+\t// If it is the last one then draw a line", "+\tif (index > parent.selectedIndex)", "+\t\tdrawRightUnselectedBorder(gc);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4faeda0e2053f80d9aef9fc51ac9d36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "93bc07f639c5a537b4df16bf9a4e402c30fe71f0", "commitAfterChange": "d7380698f2caf3de0f1e7caa319988113a0456a4", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " boolean setItemSize()", "signatureAfterChange": " boolean setItemSize()", "diff": ["-\t\t\tint large = 0;", "-\t\t\t\ttotalWidth += Math.min(widths[i], minWidths[i]);", "-\t\t\t\tif (widths[i] > minWidths[i]) large++;", "+\t\t\t\ttotalWidth += minWidths[i];", "-\t\t\t\tif (showChevron) tabAreaWidth -= 3 *BUTTON_SIZE/2; ", "-\t\t\t\tfor (int i = 0; i < count; i++) {", "-\t\t\t\t\tint minWidth = Math.min(tabAreaWidth, minWidths[i]);", "-\t\t\t\t\twidths[i] = Math.min(widths[i], minWidth);", "+\t\t\t\tif (showChevron) tabAreaWidth -= 3*BUTTON_SIZE/2;", "+\t\t\t\twidths = minWidths;", "+\t\t\t\tint index = selectedIndex != -1 ? selectedIndex : 0;", "+\t\t\t\tif (tabAreaWidth < widths[index]) {", "+\t\t\t\t\twidths[index] = Math.max(0, tabAreaWidth);", "-\t\t\t\tint extra = (tabAreaWidth - totalWidth)/large;", "+\t\t\t\tint extra = (tabAreaWidth - totalWidth) / items.length;", "+\t\t\t\tint large = 0;", "-\t\t\t\t\t\ttotalWidth += Math.min(widths[i], minWidths[i] + extra);", "-\t\t\t\t\t\tif (widths[i] > minWidths[i] + extra) large++;", "+\t\t\t\t\t\tif (widths[i] > minWidths[i] + extra) {", "+ \t\t\t\t\t\t\ttotalWidth += minWidths[i] + extra;", "+\t\t\t\t\t\t\tlarge++;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\ttotalWidth += widths[i];", "+\t\t\t\t\t\t}"]}], "num": 1206}