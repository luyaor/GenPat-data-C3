{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73e5d1a7707e355a61a762a6ce9cd947", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4a4d5c402a5f7602df20a83f702d69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "dcd9f7243ae1ad05751547f983b76748a1e6687b", "commitAfterChange": "1a6a67f9df122e586724d5c54e1a58995ea075df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public int add (Image image)", "signatureAfterChange": "  public int add (Image image)", "diff": ["+\tif (index == images.length) {", "+\t\tImage [] newImages = new Image [images.length + 4];", "+\t\tSystem.arraycopy (images, 0, newImages, 0, images.length);", "+\t\timages = newImages;", "+\t\tint /*long*/ [] newPixbufs = new int /*long*/ [pixbufs.length + 4];", "+\t\tSystem.arraycopy (pixbufs, 0, newPixbufs, 0, pixbufs.length);", "+\t\tpixbufs = newPixbufs;", "+\t}", "+\tset (index, image);", "+\treturn index;", "+}", "-\tif (index == images.length) {", "-\t\tImage [] newImages = new Image [images.length + 4];", "-\t\tSystem.arraycopy (images, 0, newImages, 0, images.length);", "-\t\timages = newImages;", "-\t\tint /*long*/ [] newPixbufs = new int /*long*/ [pixbufs.length + 4];", "-\t\tSystem.arraycopy (pixbufs, 0, newPixbufs, 0, pixbufs.length);", "-\t\tpixbufs = newPixbufs;", "-\t}", "-\timages [index] = image;", "-\treturn index;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a079d9d0e5fea0db6a9b446aa78d4b77", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "fc59b19065f60bbcb485c797c7ff1561e9bb73f6", "commitAfterChange": "6079b58ee7045c020f911594524a48a4bc5cb888", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void _setImages (Image [] images)", "signatureAfterChange": "  void _setImages (Image [] images)", "diff": ["-\t\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "-\t\t\tint [] w = new int [1], h = new int [1];", "-\t\t\tOS.gdk_drawable_get_size (image.pixmap, w, h);", "-\t\t\tint /*long*/ pixbuf;", "-\t\t\tboolean hasMask = image.mask != 0;", "-\t\t\tif (hasMask) {", "-\t\t\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, true, 8, w [0], h [0]);", "-\t\t\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);\t\t\t\t", "-\t\t\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, w [0], h [0]);", "-\t\t\t\tif (gdkMaskImagePtr == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\t\tbyte [] line = new byte [stride];", "-\t\t\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\t\t\tif (OS.gdk_image_get_pixel (gdkMaskImagePtr, x, y) == 0) {", "-\t\t\t\t\t\t\tline[x*4+3] = 0;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t\t}", "-\t\t\t\tOS.g_object_unref (gdkMaskImagePtr);", "-\t\t\t} else {", "-\t\t\t\tImageData data = image.getImageData ();", "-\t\t\t\tboolean hasAlpha = data.getTransparencyType () == SWT.TRANSPARENCY_ALPHA;", "-\t\t\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasAlpha, 8, w [0], h [0]);", "-\t\t\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\t\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\t\t\tif (hasAlpha) {", "-\t\t\t\t\tbyte [] alpha = data.alphaData;", "-\t\t\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\t\t\tbyte [] line = new byte [stride];", "-\t\t\t\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\t\t\t\tline [x*4+3] = alpha [y*w [0]+x];", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t\t", "-\t\t\t}", "+\t\t\tint /*long*/ pixbuf = Display.createPixbuf (image);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78ea7b78ef3a824f3b985bb96494c42", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ImageList.java", "commitBeforeChange": "fc59b19065f60bbcb485c797c7ff1561e9bb73f6", "commitAfterChange": "6079b58ee7045c020f911594524a48a4bc5cb888", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void set (int index, Image image)", "signatureAfterChange": "  void set (int index, Image image)", "diff": ["-\tint /*long*/ colormap = OS.gdk_colormap_get_system ();", "-\tint /*long*/ pixbuf;", "-\tboolean hasMask = image.mask != 0;", "-\tif (hasMask) {", "-\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, true, 8, w [0], h [0]);", "-\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\tint /*long*/ gdkMaskImagePtr = OS.gdk_drawable_get_image (image.mask, 0, 0, w [0], h [0]);", "-\t\tif (gdkMaskImagePtr == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\tbyte [] line = new byte [stride];", "-\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\tOS.memmove (line, offset, stride);", "-\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\tif (OS.gdk_image_get_pixel (gdkMaskImagePtr, x, y) == 0) {", "-\t\t\t\t\tline [x*4+3] = 0;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tOS.memmove (offset, line, stride);", "-\t\t}", "-\t\tOS.g_object_unref (gdkMaskImagePtr);", "-\t} else {", "-\t\tImageData data = image.getImageData ();", "-\t\tboolean hasAlpha = data.getTransparencyType () == SWT.TRANSPARENCY_ALPHA;", "-\t\tpixbuf = OS.gdk_pixbuf_new (OS.GDK_COLORSPACE_RGB, hasAlpha, 8, w [0], h [0]);", "-\t\tif (pixbuf == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gdk_pixbuf_get_from_drawable (pixbuf, image.pixmap, colormap, 0, 0, 0, 0, w [0], h [0]);", "-\t\tif (hasAlpha) {", "-\t\t\tbyte [] alpha = data.alphaData;", "-\t\t\tint stride = OS.gdk_pixbuf_get_rowstride (pixbuf);", "-\t\t\tint /*long*/ pixels = OS.gdk_pixbuf_get_pixels (pixbuf);", "-\t\t\tbyte [] line = new byte [stride];", "-\t\t\tfor (int y = 0; y < h [0]; y++) {", "-\t\t\t\tint /*long*/ offset = pixels + (y * stride);", "-\t\t\t\tOS.memmove (line, offset, stride);", "-\t\t\t\tfor (int x = 0; x < w [0]; x++) {", "-\t\t\t\t\tline [x*4+3] = alpha [y*w [0]+x];", "-\t\t\t\t}", "-\t\t\t\tOS.memmove (offset, line, stride);", "-\t\t\t}", "-\t\t}", "-\t}", "+\tint /*long*/ pixbuf = Display.createPixbuf (image);"]}], "num": 43763}