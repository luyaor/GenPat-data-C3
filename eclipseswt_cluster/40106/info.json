{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55cae855ea1513aa47bedefe25a1c37f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e25655adbabb571ec0b99fa515715f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "962aa06448dfe17025be13278ac9735005635428", "commitAfterChange": "3a30a8e1b094d108c0c78d2525befff85da3e351", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t\toutput(\"\\t\\tstatic int (*fptr)();\");", "+\t\toutput(\"\\t\\tstatic \");", "+\t\toutput(getTypeSignature2(returnType));", "+\t\toutput(\" (*fptr)(\");", "+\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\tif (i != 0) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\tString cast = paramData.getCast();", "+\t\t\tif (cast.length() > 2) {", "+\t\t\t\toutput(cast.substring(1, cast.length() - 1));", "+\t\t\t} else {", "+\t\t\t\toutput(getTypeSignature2(paramType));", "+\t\t\t}", "+\t\t}", "+\t\toutput(\");\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e84067ad30b176c9f41ecdde22b9166", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "152b8ecc4468b8428592c6205680eaeb0e413474", "commitAfterChange": "f66c549c26fb5e54d5fe957977b746561be541c9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t} else if (method.getName().equals(\"VtblCall\")) {", "+\t} else if (method.getName().startsWith(\"VtblCall\")) {", "-\t\toutput(\" (STDMETHODCALLTYPE *)())(*(int **)arg1)[arg0])\");", "+\t\toutput(\" (STDMETHODCALLTYPE *)(\");", "+\t\tfor (int i = 1; i < paramTypes.length; i++) {", "+\t\t\tif (i != 1) output(\", \");", "+\t\t\tClass paramType = paramTypes[i];", "+\t\t\toutput(getTypeSignature4(paramType));", "+\t\t}", "+\t\toutput(\"))(*(int **)arg1)[arg0])\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6428a54ac450a3d82e065747cb6c2789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "298c8aba1d7af29e1fd0b940de7cdcb4e190bc43", "commitAfterChange": "1316b4869e24acc4a43339c0a07752fc216e2600", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\"((\");", "+\t\t\toutput(getTypeSignature2(returnType));", "+\t\t\toutput(\" (*)(\");", "+\t\t\tfor (int i = 0; i < paramTypes.length; i++) {", "+\t\t\t\tif (i != 0) output(\", \");", "+\t\t\t\tClass paramType = paramTypes[i];", "+\t\t\t\tParameterData paramData = getMetaData().getMetaData(method, i);", "+\t\t\t\tString cast = paramData.getCast();", "+\t\t\t\tif (cast != null && cast.length() != 0) {", "+\t\t\t\t\tif (cast.startsWith(\"(\")) cast = cast.substring(1);", "+\t\t\t\t\tif (cast.endsWith(\")\")) cast = cast.substring(0, cast.length() - 1);", "+\t\t\t\t\toutput(cast);", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(getTypeSignature4(paramType, paramData.getFlag(FLAG_STRUCT)));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\toutput(\"))\");", "+\t\t}", "+\t\tif (methodData.getFlag(Flags.FLAG_CAST)) {", "+\t\t\toutput(\")\");", "+\t\t}"]}], "num": 40106}