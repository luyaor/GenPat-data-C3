{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "671066e42347275ff5cab469079ff701", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "986338efb94ff89f05fd39928854c51a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/gtk/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": "  static boolean isWindowManagerCompliant()", "signatureAfterChange": "  static Program kde_getProgram(Display display, String mimeType)", "diff": ["+", "+static Program kde_getProgram(Display display, String mimeType) {", "+\tProgram program = null;", "+\t/* Use the character encoding for the default locale */", "+\tbyte[] buffer = Converter.wcsToMbcs(null, mimeType, true);", "+\tint /*long*/ mimeTypeName = KDE.QString_new(buffer);", "+\tint /*long*/ serviceList = KDE.KMimeType_offers(mimeTypeName);", "+\tif (serviceList != 0) {", "+\t\tKDE.KServiceList_delete(serviceList);", "+\t\tprogram = new Program();", "+\t\tprogram.display = display;", "+\t\tprogram.name = mimeType;", "+\t\tprogram.command = \"KRun::runURL(url,mimeType)\";", "+\t\t//TODO - LEAK??", "+\t\tint /*long*/ kMimeType = KDE.KMimeType_mimeType(mimeTypeName);", "+\t\tif (kMimeType != 0) {", "+\t\t\t//TODO - LEAK??", "+\t\t\tint /*long*/ mimeIcon = KDE.KMimeType_icon(kMimeType, 0, false);", "+\t\t\tint /*long*/ loader = KDE.KGlobal_iconLoader();", "+\t\t\tint /*long*/ path = KDE.KIconLoader_iconPath(loader, mimeIcon, KDE.KICON_SMALL, true);", "+\t\t\tprogram.iconPath = kde_convertQStringAndFree(path);", "+\t\t}", "+\t\t", "+\t}", "+\tKDE.QString_delete(mimeTypeName);", "+\treturn program;", "-", "-static boolean isWindowManagerCompliant() {", "-\tbyte[] name = Converter.wcsToMbcs(null, \"_NET_SUPPORTING_WM_CHECK\", true);", "-\t/*", "-\t* Bug in GDK. The flag only_if_exists is ignored and gdk_atom_intern", "-\t* never returns GDK_NONE. The workaround is to not rely on this function", "-\t* to detect an atom.", "-\t*/", "-\tint /*long*/ atom = OS.gdk_atom_intern(name, true);", "-\tif (atom == OS.GDK_NONE) return false;\t", "-\tint /*long*/[] actualType = new int /*long*/[1];", "-\tint[] actualFormat = new int[1];", "-\tint[] actualLength = new int[1];", "-\tint /*long*/[] data = new int /*long*/[1];", "-\tif (!OS.gdk_property_get(OS.GDK_ROOT_PARENT(), atom, OS.XA_WINDOW,", "-\t\t0, 1, 0, actualType, actualFormat, actualLength, data)) return false;", "-\tif (data[0] != 0) OS.g_free(data[0]);", "-\treturn actualLength[0] > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a06c1ff5b9c9d14e78347b084007051a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  static String kde_getMimeTypeCommand(String mimeType)", "signatureAfterChange": "  static Program kde_getProgram(Display display, String mimeType)", "diff": ["+", "+static Program kde_getProgram(Display display, String mimeType) {", "+\tProgram program = null;", "+\t/* Use the character encoding for the default locale */", "+\tbyte[] buffer = Converter.wcsToMbcs(null, mimeType, true);", "+\tint /*long*/ mimeTypeName = KDE.QString_new(buffer);", "+\tint /*long*/ serviceList = KDE.KMimeType_offers(mimeTypeName);", "+\tif (serviceList != 0) {", "+\t\tKDE.KServiceList_delete(serviceList);", "+\t\tprogram = new Program();", "+\t\tprogram.display = display;", "+\t\tprogram.name = mimeType;", "+\t\tprogram.command = \"KRun::runURL(url,mimeType)\";", "+\t\tint /*long*/ kMimeType = KDE.KMimeType_mimeType(mimeTypeName);", "+\t\tif (kMimeType != 0) {", "+\t\t\tint /*long*/ mimeIcon = KDE.KMimeType_icon(kMimeType, 0, false);", "+\t\t\tint /*long*/ loader = KDE.KGlobal_iconLoader();", "+\t\t\tint /*long*/ path = KDE.KIconLoader_iconPath(loader, mimeIcon, KDE.KICON_SMALL, true);", "+\t\t\tprogram.iconPath = kde_convertQStringAndFree(path);", "+\t\t\tKDE.QString_delete(mimeIcon);", "+\t\t\tKDE.KMimeType_delete(kMimeType);", "+\t\t}", "+\t\t", "+\t}", "+\tKDE.QString_delete(mimeTypeName);", "+\treturn program;", "-", "-static String kde_getMimeTypeCommand(String mimeType) {", "-\t/* Use the character encoding for the default locale */", "-\tbyte[] buffer = Converter.wcsToMbcs(null, mimeType, true);", "-\tint qMimeType = KDE.QString_new(buffer);", "-\tint serviceList = KDE.KMimeType_offers(qMimeType);", "-\tKDE.QString_delete(qMimeType);", "-\tif (serviceList == 0) return null;", "-\tKDE.KServiceList_delete(serviceList);", "-\treturn \"KRun::runURL(url,mimeType)\";"]}], "num": 29303}