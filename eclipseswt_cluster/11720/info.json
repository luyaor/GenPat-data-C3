{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab4d237a23e1c25a2462c7a9eef0b556", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1f863d9a2feda4577e2c05891e8566", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "78dfa0e031c2c0ea7bcb5f5ff85b7133301f7587", "commitAfterChange": "580700daafefc89eb8bb62c8b527450407af0105", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["-//\tReset size of pixbufRenderer if we have an image being set that is larger", "-//\tthan the current size of the pixbufRenderer. Fix for Bug 469277 & 476419.", "-//\tWe only do this if the size of the pixbufRenderer has not yet been set.", "-//\tOtherwise, the pixbufRenderer retains the same size as the first image added.", "-//\tSee comment #4, Bug 478560.", "-\tif (OS.GTK3 && !parent.pixbufSizeSet) {", "+\t/*", "+\t * Reset size of pixbufRenderer if we have an image being set that is larger", "+\t * than the current size of the pixbufRenderer. Fix for Bug 469277 & 476419.", "+\t * We only do this if the size of the pixbufRenderer has not yet been set.", "+\t * Otherwise, the pixbufRenderer retains the same size as the first image added.", "+\t * See comment #4, Bug 478560. Note that all columns need to have their", "+\t * pixbufRenderer set to this size after the initial image is set. ", "+\t */", "+\tif (OS.GTK3) {", "-\t\tlong /*int*/ pixbufRenderer = parent.getPixbufRenderer(column);", "-\t\tif (image != null) {", "-\t\t\tint iWidth = image.getBounds().width;", "-\t\t\tint iHeight = image.getBounds().height;", "-\t\t\tint [] currentWidth = new int [1];", "-\t\t\tint [] currentHeight= new int [1];", "-\t\t\tOS.gtk_cell_renderer_get_fixed_size(pixbufRenderer, currentWidth, currentHeight);", "-\t\t\tif (iWidth > currentWidth[0] || iHeight > currentHeight[0]) {", "-\t\t\t\tOS.gtk_cell_renderer_set_fixed_size(pixbufRenderer, iWidth, iHeight);", "-\t\t\t\tparent.pixbufSizeSet = true;", "+\t\tlong /*int*/ pixbufRenderer = parent.getPixbufRenderer (column);", "+\t\tint [] currentWidth = new int [1];", "+\t\tint [] currentHeight= new int [1];", "+\t\tOS.gtk_cell_renderer_get_fixed_size (pixbufRenderer, currentWidth, currentHeight);", "+\t\tif (!parent.pixbufSizeSet) {", "+\t\t\tif (image != null) {", "+\t\t\t\tint iWidth = image.getBounds ().width;", "+\t\t\t\tint iHeight = image.getBounds ().height;", "+\t\t\t\tif (iWidth > currentWidth [0] || iHeight > currentHeight [0]) {", "+\t\t\t\t\tOS.gtk_cell_renderer_set_fixed_size (pixbufRenderer, iWidth, iHeight);", "+\t\t\t\t\tparent.pixbufSizeSet = true;", "+\t\t\t\t\tcolumnSetHeight = iHeight;", "+\t\t\t\t\tcolumnSetWidth = iWidth;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * We check to see if the cached value is equal to the size of the pixbufRenderer.", "+\t\t\t * If it is, then we change the size of the pixbufRenderer accordingly.", "+\t\t\t */", "+\t\t\tif (columnSetWidth != currentWidth [0] || columnSetHeight != currentHeight [0]) {", "+\t\t\t\tOS.gtk_cell_renderer_set_fixed_size (pixbufRenderer, columnSetWidth, columnSetHeight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a2a103fa8f002363891ed7d6d16ff3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "1e5b980f295e05d56fb156937cfaa276a7bfa3f1", "commitAfterChange": "42939902a7cd0e698c145625d14ef3b7a866cfe3", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void setImage (int index, Image image)", "signatureAfterChange": " public void setImage (int index, Image image)", "diff": ["-//\tReset size of pixbufRenderer if we have an image being set that is larger", "-//\tthan the current size of the pixbufRenderer. Fix for Bug 469277 & 476419.", "-//\tWe only do this if the size of the pixbufRenderer has not yet been set.", "-//\tOtherwise, the pixbufRenderer retains the same size as the first image added.", "-//\tSee comment #4, Bug 478560.", "-\tif (OS.GTK3 && !parent.pixbufSizeSet) {", "+\t/*", "+\t * Reset size of pixbufRenderer if we have an image being set that is larger", "+\t * than the current size of the pixbufRenderer. Fix for Bug 469277 & 476419.", "+\t * We only do this if the size of the pixbufRenderer has not yet been set.", "+\t * Otherwise, the pixbufRenderer retains the same size as the first image added.", "+\t * See comment #4, Bug 478560. Note that all columns need to have their", "+\t * pixbufRenderer set to this size after the initial image is set. ", "+\t */", "+\tif (OS.GTK3) {", "-\t\tlong /*int*/ pixbufRenderer = parent.getPixbufRenderer(column);", "-\t\tif (image != null) {", "-\t\t\tint iWidth = image.getBounds().width;", "-\t\t\tint iHeight = image.getBounds().height;", "-\t\t\tint [] currentWidth = new int [1];", "-\t\t\tint [] currentHeight= new int [1];", "-\t\t\tOS.gtk_cell_renderer_get_fixed_size(pixbufRenderer, currentWidth, currentHeight);", "-\t\t\tif (iWidth > currentWidth[0] || iHeight > currentHeight[0]) {", "-\t\t\t\tOS.gtk_cell_renderer_set_fixed_size(pixbufRenderer, iWidth, iHeight);", "-\t\t\t\tparent.pixbufSizeSet = true;", "+\t\tlong /*int*/ pixbufRenderer = parent.getPixbufRenderer (column);", "+\t\tint [] currentWidth = new int [1];", "+\t\tint [] currentHeight= new int [1];", "+\t\tOS.gtk_cell_renderer_get_fixed_size (pixbufRenderer, currentWidth, currentHeight);", "+\t\tif (!parent.pixbufSizeSet) {", "+\t\t\tif (image != null) {", "+\t\t\t\tint iWidth = image.getBounds ().width;", "+\t\t\t\tint iHeight = image.getBounds ().height;", "+\t\t\t\tif (iWidth > currentWidth [0] || iHeight > currentHeight [0]) {", "+\t\t\t\t\tOS.gtk_cell_renderer_set_fixed_size (pixbufRenderer, iWidth, iHeight);", "+\t\t\t\t\tparent.pixbufSizeSet = true;", "+\t\t\t\t\tcolumnSetHeight = iHeight;", "+\t\t\t\t\tcolumnSetWidth = iWidth;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\t/*", "+\t\t\t * We check to see if the cached value is greater than the size of the pixbufRenderer.", "+\t\t\t * If it is, then we change the size of the pixbufRenderer accordingly.", "+\t\t\t */", "+\t\t\tif (columnSetWidth > currentWidth [0] || columnSetHeight > currentHeight [0]) {", "+\t\t\t\tOS.gtk_cell_renderer_set_fixed_size (pixbufRenderer, columnSetWidth, columnSetHeight);"]}], "num": 11720}