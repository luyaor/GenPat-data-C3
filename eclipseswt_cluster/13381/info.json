{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6fd040be35750dd202d371bf48c2402", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d640916f981acbdf4277c81018d5f69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "9dd8413aaf0e3429247f5a6c6cb6590e20539fb3", "commitAfterChange": "db2444119e1337135e4c17b0a7bca92f3d189494", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 129, "signatureBeforeChange": "\t  int SetFocus()", "signatureAfterChange": "\t  int SetFocus()", "diff": ["-int SetFocus() {", "+int SetFocus() {\t", "+\tint[] result = new int[1];", "+\tint rc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t", "+\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "+\trc = baseWindow.SetFocus();", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tbaseWindow.Release();", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "643b41aaaee68b9e479351c406017b50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "037e5168473a95763f975d71b44c32103e25ab3b", "commitAfterChange": "7ad48db865c653614ff19222e55f3c399d49ba7c", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "\t  int SetFocus()", "signatureAfterChange": "\t  int SetFocus()", "diff": ["-int SetFocus() {", "+int /*long*/ SetFocus() {", "+\tint /*long*/[] result = new int /*long*/[1];", "+\tint rc = webBrowser.QueryInterface(nsIBaseWindow.NS_IBASEWINDOW_IID, result);", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tif (result[0] == 0) error(XPCOM.NS_ERROR_NO_INTERFACE);", "+\t", "+\tnsIBaseWindow baseWindow = new nsIBaseWindow(result[0]);", "+\trc = baseWindow.SetFocus();", "+\tif (rc != XPCOM.NS_OK) error(rc);", "+\tbaseWindow.Release();", "+", "+\t/*", "+\t* Note. Mozilla notifies here that one of the children took", "+\t* focus. This could or should be used to fire an SWT.FOCUS_IN", "+\t* event on Browser focus listeners.", "+\t*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf9bb71df5f5a8a322f558fd4413b090", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "b1a31ab4f172a1a2e228d0d4b5317b0bc24de7aa", "commitAfterChange": "b72bc1d2aeff462f0ad0e8ecfa6bc39ebd385109", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 122, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["+\t\tint /*long*/[] result = new int /*long*/[1];", "+", "+\t\t/*", "+\t\t* When navigating to a site that is known to have a bad certificate, request notification", "+\t\t* callbacks on the channel so that our nsIBadCertListener2 will be invoked.", "+\t\t*/", "+\t\tif (isRetrievingBadCert) {", "+\t\t\tisRetrievingBadCert = false;", "+\t\t\tnsIRequest request = new nsIRequest (aRequest);", "+\t\t\tint rc = request.QueryInterface (nsIChannel.NS_ICHANNEL_IID, result);", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tif (result[0] == 0) error (XPCOM.NS_NOINTERFACE);", "+", "+\t\t\tnsIChannel channel = new nsIChannel (result[0]);", "+\t\t\tresult[0] = 0;", "+\t\t\trc = channel.SetNotificationCallbacks (interfaceRequestor.getAddress ());", "+\t\t\tif (rc != XPCOM.NS_OK) error (rc);", "+\t\t\tchannel.Release ();", "+\t\t\treturn XPCOM.NS_OK;", "+\t\t}", "+", "-\t\tint /*long*/[] result = new int /*long*/[1];"]}], "num": 13381}