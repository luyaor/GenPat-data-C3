{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3266024e825e972b829f8ee6f51bb77", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f056d01090167d3934b21bb314f129", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 31, "signatureBeforeChange": " public boolean getLinesVisible ()", "signatureAfterChange": " int getOffScreenItemCount(TreeItem2 item)", "diff": ["+int getOffScreenItemCount(TreeItem2 item) {", "+\tint itemIndexFromTop = item.getVisibleIndex() - getTopIndex();", "+\tint spaceRemaining = getItemCountWhole()-(itemIndexFromTop+1);", "+\tint expandedItemCount = item.getVisibleItemCount();", "+", "+\treturn expandedItemCount - spaceRemaining;\t", "-public boolean getLinesVisible () {", "-\tcheckWidget();", "-\treturn linesVisible;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa203e9252c7cd50d74c3956389885ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "0db7275306068cc1d18c406ecbe40df861c4e6a1", "commitAfterChange": "ee5b8a84166385f16be3440675e33b228d751f20", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "\r \r public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\treturn new Rectangle(x-2, y-33, width+4, height+35);\r", "+\tint clientHandle = clientHandle ();\r", "+\tint clientX = OS.GTK_WIDGET_X (clientHandle);\r", "+\tint clientY = OS.GTK_WIDGET_Y (clientHandle);\r", "+\tx -= clientX;\r", "+\ty -= clientY;\r", "+\twidth +=  clientX + clientX;\r", "+\theight +=  clientX + clientY;\r", "+\treturn new Rectangle (x, y, width, height);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4fff951ed8621e899f1df7e77fb131b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "af5cc90dfe3ff4aef5885413a614e850fd7dc374", "commitAfterChange": "d5f77a7b9ca0f1cf143fb2365b5ebe0fba4a2200", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t// FIXME", "-\t// If the wHint is set, and the label has a border, then", "-\t// the GtkLabel will believe it has more width at its disposal", "-\t// than it actually does (by a few pixels).", "-\t// It is possible (but unlikely) that this will cause it to", "-\t// answer a smaller height.", "-\tOS.gtk_widget_set_size_request (frameHandle, -1, -1);", "-\tOS.gtk_widget_set_size_request (handle, wHint, hHint);", "+\tint labelWidth = OS.GTK_WIDGET_WIDTH (handle);", "+\tint labelHeight = OS.GTK_WIDGET_HEIGHT (handle);", "-\tOS.gtk_widget_size_request (frameHandle, requisition);", "-\tOS.gtk_widget_set_size_request (frameHandle, width, height);", "-\tOS.gtk_widget_set_size_request (handle, width, height);", "+\tif (frameHandle != 0) {", "+\t\tOS.gtk_widget_set_size_request (frameHandle, -1, -1);", "+\t\tOS.gtk_widget_set_size_request (handle, wHint, hHint);", "+\t\tOS.gtk_widget_size_request (frameHandle, requisition);", "+\t\tOS.gtk_widget_set_size_request (frameHandle, width, height);", "+\t} else {", "+\t\tOS.gtk_widget_set_size_request (handle, wHint, hHint);", "+\t\tOS.gtk_widget_size_request (handle, requisition);", "+\t}", "+\tOS.gtk_widget_set_size_request (handle, labelWidth, labelHeight);"]}], "num": 4974}