{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dbf86ef89b03f08598faabbc2ebe7b3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c5f36fc913b41fa11d71c3b961b114b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " public boolean sleep ()", "signatureAfterChange": " public boolean sleep ()", "diff": ["-\tallowTimers = runAsyncMessages = false;", "-\tNSRunLoop.currentRunLoop().runMode(OS.NSDefaultRunLoopMode, NSDate.distantFuture());", "-\tallowTimers = runAsyncMessages = true;", "+\tNSAutoreleasePool localPool = (NSAutoreleasePool)new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tallowTimers = runAsyncMessages = false;", "+\t\tNSRunLoop.currentRunLoop().runMode(OS.NSDefaultRunLoopMode, NSDate.distantFuture());", "+\t\tallowTimers = runAsyncMessages = true;", "+\t} finally {", "+\t\tlocalPool.release();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88662a128ed1101847ccf136f61a5d91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "1c6884941f157325b4d1ef56000d926c7d98156c", "commitAfterChange": "1fb79dfa9e02cc948683875fbc5b7064a4cd9fb3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t\t/*", "+\t\t* Feature in Cocoa.  NSButtons without borders do not leave any margin", "+\t\t* between their edge and their image.  The workaround is to provide a", "+\t\t* custom cell that displays the image in a better position. ", "+\t\t*/", "+\t\tNSButtonCell cell = (NSButtonCell)new SWTButtonCell ().alloc ().init ();", "+\t\tbutton.setCell (cell);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b744a79de4916c1b59627668ec612f67", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["+\tNSAutoreleasePool localPool = (NSAutoreleasePool)new NSAutoreleasePool().alloc().init();", "-\t\treturn runAsyncMessages (false);", "+\t\tlocalPool.release();", "-\t", "+\treturn runAsyncMessages (false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25752ff3c81abf125244f03492ced59f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "e39fef51875ac6c143e76111e1bffa4a0abcd61f", "commitAfterChange": "6a6df6cffde4492bff18a5288fe746a25d2b63eb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\t\tNSView child = (NSView) new NSView().alloc().init().autorelease();", "+\t\twidget.setContentView(child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "156abddc1fd1fae270fbf1c0035ec732", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " public void syncExec (Runnable runnable)", "signatureAfterChange": " public void syncExec (Runnable runnable)", "diff": ["-\tsynchronizer.syncExec (runnable);", "+\tNSAutoreleasePool localPool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\ttry {", "+\t\tsynchronizer.syncExec (runnable);", "+\t} finally {", "+\t\tlocalPool.release();", "+\t}"]}], "num": 6396}