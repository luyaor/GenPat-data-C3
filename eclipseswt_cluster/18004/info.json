{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ec9ef63a967ecedd6d3ea60e4e9352d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbcce37315aa1d8fb5bd20e56d99235c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "cbd56755c2688600a37e937b0ba225dab59369f2", "commitAfterChange": "97869b7591415775385f4d2ba20446ef53432375", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["+\tint oldColumn = OS.SendMessage (handle, OS.LVM_GETSELECTEDCOLUMN, 0, 0);", "+\tif (oldColumn == index) {", "+\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, -1, 0);", "+\t} else {", "+\t\tif (oldColumn > index) {", "+\t\t\tOS.SendMessage (handle, OS.LVM_SETSELECTEDCOLUMN, oldColumn - 1, 0);", "+\t\t}", "+\t}", "-\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2ccaeb2399036a4fe17872617fca97", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "876ed09a49de9fd074ee75d74aaa5be9ca7961f3", "commitAfterChange": "ddffafae4e896b2e9ec78e332a5997a3daf99c21", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\t\t\t/*", "+\t\t\t\t\t* Feature in Windows.  When the font is set for one cell in a table,", "+\t\t\t\t\t* Windows does not reset the font for the next cell.  As a result,", "+\t\t\t\t\t* all subsequent cells are drawn using the new font.  The fix is to", "+\t\t\t\t\t* reset the font to the default.", "+\t\t\t\t\t* ", "+\t\t\t\t\t* NOTE: This does not happen for foreground and background.", "+\t\t\t\t\t*/", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\t\t\t\tif (count == 1) break;", "-\t\t\t\t\tif (hFont != -1) OS.SelectObject(nmcd.hdc, hFont);", "+\t\t\t\t\tif (hFont == -1) hFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\t\t\tOS.SelectObject(nmcd.hdc, hFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df7ed2ec05df3c1488dd4305762b12ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7c012c2687fd691fec295a315958e329f765741f", "commitAfterChange": "6921db331c609df97c433c3c2c8fc64b1fb0ead4", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["+\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\tif (count == 1 && columns [0] == null) return LRESULT.ONE;", "-\t\t\t\tif (column == null || !column.getResizable ()) {", "+\t\t\t\tif (column != null && !column.getResizable ()) {", "+\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\tif (count == 1 && columns [0] == null) return LRESULT.ONE;", "-\t\t\t\t\tif (column == null || !column.getMoveable ()) {", "+\t\t\t\t\tif (column != null && !column.getMoveable ()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d15f834fc46d2416c62ef8e1600ff17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "190cc26ab16c87ba0d6915399f5991149b73f0d8", "commitAfterChange": "9f1b63d2117e81a67ce4d2e6a151482a712673e3", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  void showItem (int index)", "signatureAfterChange": "  void showItem (int index)", "diff": ["-\tif (OS.SendMessage (handle, OS.LVM_GETCOUNTPERPAGE, 0, 0) <= 0) {", "+\tlong /*int*/ counterPage = OS.SendMessage (handle, OS.LVM_GETCOUNTPERPAGE, 0, 0);", "+\tif (counterPage <= 0) {", "+\t} else if (OS.WIN32_VERSION >= OS.VERSION (6, 0)) {", "+\t\t/*", "+\t\t * Bug in Windows Vista and onwards: For some reason,", "+\t\t * LVM_ENSUREVISIBLE command scrolls the table to the leftmost", "+\t\t * column even if the item is already visible, refer Bug 334234", "+\t\t */", "+\t\tlong /*int*/  topIndex = OS.SendMessage (handle, OS.LVM_GETTOPINDEX, 0, 0);", "+\t\tif (topIndex > index || index >= topIndex + counterPage ) {", "+\t\t\tOS.SendMessage (handle, OS.LVM_ENSUREVISIBLE, index, 0);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d6496a10c7ca9ba22e99fc1ec86d24", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "c50367f5a47e2a6effad63f64029f1b5d0e6e7f1", "commitAfterChange": "8b3cbf3b5eee3deb1dafe90fe80e8c033230f02c", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\t\tif (ignoreResize) {", "+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "+\t\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "+\t\t\t\t* column is expanded to fill the client area.  The fix is to", "+\t\t\t\t* insert and remove a temporary last column for the duration", "+\t\t\t\t* of LVM_SETCOLUMNWIDTH.  As a result, LVN_GETDISPINFO should", "+\t\t\t\t* be ignored for the temporary column.", "+\t\t\t\t*/", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\tif (count == 1 && columns [0] == null) count = 0;", "+\t\t\t\tif (count - 1 >= plvfi.iSubItem) break;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3df8a9c9a000007038f208df91fe012", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5279fb43a214afc43b3c9cdcd1dfd93d23a5a5bd", "commitAfterChange": "d94d01b4d71bbf5e85d7f9e44c609b877ecde200", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t* Feature in Windows.  When the font is set for one cell in a table,", "-\t* Windows does not reset the font for the next cell.  As a result,", "-\t* all subsequent cells are drawn using the new font.  The fix is to", "-\t* reset the font to the default.", "-\t* ", "-\t* NOTE: This does not happen for foreground and background.", "+\t* Bug in Windows.  When the attibutes are for one cell in a table,", "+\t* Windows does not reset them for the next cell.  As a result, all", "+\t* subsequent cells are drawn using the previous font, foreground and", "+\t* background colors.  The fix is to set the all attributes when any", "+\t* attribute could have changed.", "-\t\t\tif (columnCount == 1) hasAttributes = false;", "+\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\tif (count == 1) hasAttributes = false;", "-\t\t\t\tif (control.backgroundImage == null && !hooks (SWT.EraseItem)) {", "-\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "-\t\t\t\t}", "+\t\t\t\tnmcd.clrTextBk  = control.backgroundImage == null ? control.getBackgroundPixel () : OS.CLR_NONE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ada0f6bd788f3ed39609c5d18ffff7ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "5a3eeff6c9e9670f29f1802782a0813f06f46842", "commitAfterChange": "eff86ed07a024783a4dbcd4f95d43d344137ed78", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["+\tint limit = LIMIT;", "+\tint hwndText = OS.GetDlgItem (handle, CBID_EDIT);", "+\tif (hwndText != 0) {", "+\t\tlimit = OS.SendMessage (hwndText, OS.EM_GETLIMITTEXT, 0, 0);", "+\t}", "+\tif (string.length () > limit) string = string.substring (0, limit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2951a446534e79cec121051e87563d6a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "49bb6fbf73d53696e364d9b252a91d217adac0d0", "commitAfterChange": "4e66ded6865e2590a7529562a8f3598bd3c5290f", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  int readImageRef(int path)", "signatureAfterChange": "  int readImageRef(int path)", "diff": ["-\t\t\t\t\t\t\timage = createImageFromFamily(iconFamily[0], OS.kThumbnail32BitData, OS.kThumbnail8BitMask, 128, 128)[0];", "+\t\t\t\t\t\t\tint[] icon = createImageFromFamily(iconFamily[0], OS.kThumbnail32BitData, OS.kThumbnail8BitMask, 128, 128);", "+\t\t\t\t\t\t\tif (icon == null) icon = createImageFromFamily(iconFamily[0], OS.kHuge32BitData, OS.kHuge8BitMask, 64, 64);", "+\t\t\t\t\t\t\tif (icon == null) icon = createImageFromFamily(iconFamily[0], OS.kLarge32BitData, OS.kLarge8BitMask, 32, 32);", "+\t\t\t\t\t\t\tif (icon != null) image = icon[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e53ce5d0c2ca584a4fbd88ecd02c736c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "f38c6e259682997e3ae8e6c34beda9c0c421c9d4", "commitAfterChange": "978a5068b13063ede30b740ed3c44a97b7570e39", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void init(Device device, int width, int height)", "signatureAfterChange": "  void init(Device device, int width, int height)", "diff": ["+\t/*", "+\t* Feature in Windows.  CreateCompatibleBitmap() may fail", "+\t* for large images.  The fix is to create a DIB section", "+\t* in that case.", "+\t*/", "+\tif (handle == 0) {", "+\t\tint bits = OS.GetDeviceCaps(hDC, OS.BITSPIXEL);", "+\t\tint planes = OS.GetDeviceCaps(hDC, OS.PLANES);", "+\t\tint depth = bits * planes;", "+\t\tif (depth < 16) depth = 16;", "+\t\thandle = createDIB(width, height, depth);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca1e88af4eefeadebb155988d821ea8f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "89095343e84c893963c134017d1073ca571e70c2", "commitAfterChange": "c6734199cc3d4996c7b8950e42878de95b4d8f68", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  void setTableEmpty ()", "signatureAfterChange": "  void setTableEmpty ()", "diff": ["+\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\tif (count == 1 && columns [0] == null) {", "+\t\tOS.SendMessage (handle, OS.LVM_SETCOLUMNWIDTH, 0, 0);", "+\t\tsetScrollWidth (null, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8255590704cc41da5c7438b128574c5b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "15c6e77179119b16070ae399020d64e830dd08c5", "commitAfterChange": "c145c09eb181fb318122f93912bb9beaf7f186fc", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "diff": ["+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\tboolean firstColumn = nmcd.iSubItem == OS.SendMessage (hwndHeader, OS.HDM_ORDERTOINDEX, 0, 0);", "+\t\tboolean fullText = (style & SWT.FULL_SELECTION) != 0 || !firstColumn;", "-\t\t\tRECT backgroundRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, true, false, hDC);", "+\t\t\tRECT backgroundRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, fullText, false, hDC);", "-\t\t\tRECT textRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, true, false, hDC);", "+\t\t\tRECT textRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, false, fullText, false, hDC);"]}], "num": 18004}