{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0dc027b834fa4d5654faaa2946db7877", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60d5c5a413622d35b9d4e3397dce07a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "b38b5175e2e229ee431fed7b6e825a0ca1d6d557", "commitAfterChange": "6dd7844e62939b2d1c667e0d7710ef1b6cc160a2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r void resizeControl ()", "signatureAfterChange": "\r \r void resizeControl ()", "diff": ["+\t\t/*\r", "+\t\t* Set the size and location of the control\r", "+\t\t* separately to minimize flashing in the\r", "+\t\t* case where the control does not resize\r", "+\t\t* to the size that was requested.  This\r", "+\t\t* case can occur when the control is a\r", "+\t\t* combo box.\r", "+\t\t*/\r", "-\t\tcontrol.setBounds (itemRect);\r", "+\t\tcontrol.setSize (itemRect.width, itemRect.height);\r", "-\t\tif (!rect.equals (itemRect)) {\r", "-\t\t\trect.x = itemRect.x + (itemRect.width - rect.width) / 2;\r", "-\t\t\trect.y = itemRect.y + (itemRect.height - rect.height) / 2;\r", "-\t\t\tcontrol.setBounds (rect);\r", "-\t\t}\r", "+\t\trect.x = itemRect.x + (itemRect.width - rect.width) / 2;\r", "+\t\trect.y = itemRect.y + (itemRect.height - rect.height) / 2;\r", "+\t\tcontrol.setLocation (rect.x, rect.y);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9916034fd626cf4545084586d076c45d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "81e3fd91144d536f26ddde1b77557f1af249a141", "commitAfterChange": "9d55940214dd65b869b66fbd78328ac944c2a750", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " static int putImage(ImageData image, int screenDepth, int[] transparentPixel, int drawable)", "signatureAfterChange": " static int putImage(ImageData image, int[] transparentPixel, int drawable)", "diff": ["-static int putImage(ImageData image, int screenDepth, int[] transparentPixel, int drawable) {", "+static int putImage(ImageData image, int[] transparentPixel, int drawable) {", "-\tif (screenDepth <= 8) {", "+\tint destDepth= OS.GetPixDepth(drawable);", "+\tif (destDepth <= 8) {", "-\t\tdestRedMask = getRedMask(screenDepth);", "-\t\tdestGreenMask = getGreenMask(screenDepth);", "-\t\tdestBlueMask = getBlueMask(screenDepth);", "+\t\tdestRedMask = getRedMask(destDepth);", "+\t\tdestGreenMask = getGreenMask(destDepth);", "+\t\tdestBlueMask = getBlueMask(destDepth);", "-\t\ttransparentPixel[0] = ImageData.closestMatch(screenDepth, (byte)transRed, (byte)transGreen, (byte)transBlue,", "+\t\ttransparentPixel[0] = ImageData.closestMatch(destDepth, (byte)transRed, (byte)transGreen, (byte)transBlue,", "-\tint destDepth= screenDepth; // Device.getDeviceDepth(OS.GetMainDevice());", "-\tint bufSize = destRowBytes * destHeight;\t", "+\tint bufSize = destRowBytes * destHeight;"]}], "num": 58232}