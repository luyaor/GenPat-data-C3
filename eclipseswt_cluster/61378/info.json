{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4e3a329f1fd965769a10e481f7997a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ffdbfea04b37842482d629d2fbbac7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/ShellTab.java", "commitBeforeChange": "cfdc5999c8ff7912eacaf93e8848507b62557875", "commitAfterChange": "dea462a22e466bff9801d90f25263320cd097237", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void createButtonSelected(SelectionEvent event)", "signatureAfterChange": "\r \tpublic void createButtonSelected(SelectionEvent event)", "diff": ["-\t\tButton button = new Button(shells [shellCount], SWT.PUSH);\r", "-\t\tbutton.setBounds(20, 20, 100, 30);\r", "+\t\tfinal Shell currentShell = shells [shellCount];\r", "+\t\tButton button = new Button(currentShell, SWT.PUSH);\r", "+\t\tbutton.setBounds(20, 20, 120, 30);\r", "+\t\tButton closeButton = new Button(currentShell, SWT.PUSH);\r", "+\t\tcloseButton.setBounds(160, 20, 120, 30);\r", "+\t\tcloseButton.setText(ControlExample.getResourceString(\"Close\"));\r", "+\t\tcloseButton.addListener(SWT.Selection, new Listener() {\r", "+\t\t\tpublic void handleEvent(Event event) {\r", "+\t\t\t\tcurrentShell.dispose();\r", "+\t\t\t}\r", "+\t\t});\r", "-\t\tshells [shellCount].setSize (300, 100);\r", "-\t\tshells [shellCount].setText (ControlExample.getResourceString(\"Title\") + shellCount);\r", "-\t\tshells [shellCount++].open ();\r", "+\t\tcurrentShell.setSize (300, 100);\r", "+\t\tcurrentShell.setText (ControlExample.getResourceString(\"Title\") + shellCount);\r", "+\t\tcurrentShell.open ();\r", "+\t\tshellCount++;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d80f3ad460c968e9215093e26cb419", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TableTab.java", "commitBeforeChange": "0ace12d39b8177d48c54eb81ff58f663f957e145", "commitAfterChange": "dc92378f396b7e8cdf4772d7501e0edaa92342ab", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createOtherGroup ()", "signatureAfterChange": " \tvoid createOtherGroup ()", "diff": ["+\t\theaderVisibleButton = new Button (otherGroup, SWT.CHECK);", "+\t\theaderVisibleButton.setText (ControlExample.getResourceString(\"Header_Visible\"));", "-\t\theaderVisibleButton = new Button (otherGroup, SWT.CHECK);", "-\t\theaderVisibleButton.setText (ControlExample.getResourceString(\"Header_Visible\"));", "+\t\tmoveableColumns = new Button (otherGroup, SWT.CHECK);", "+\t\tmoveableColumns.setText (ControlExample.getResourceString(\"Moveable_Columns\"));", "+\t\tmoveableColumns.setSelection(false);", "+\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetWidgetHeaderVisible ();", "+\t\t\t}", "+\t\t});", "-\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {", "+\t\tmoveableColumns.addSelectionListener (new SelectionAdapter () {", "-\t\t\t\tsetWidgetHeaderVisible ();", "+\t\t\t\tsetColumnsMoveable ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e34a7be9c4c4eeb4b7579b7a8e1deb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/layoutexample/Tab.java", "commitBeforeChange": "ca8346412189df48223ba59c33b21708729a1c0e", "commitAfterChange": "22512739049dee89503073d8dc9722a048feb5eb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid createChildWidgets()", "signatureAfterChange": " \tvoid createChildWidgets()", "diff": ["-\t\ttable = new Table(childGroup, SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.HIDE_SELECTION);", "-\t\ttable.setLinesVisible(true);", "-\t\ttable.setHeaderVisible(true);", "+\t\ttable = new Table (childGroup, SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.FULL_SELECTION | SWT.HIDE_SELECTION);", "+\t\ttable.setLinesVisible (true);", "+\t\ttable.setHeaderVisible (true);", "-\t\ttable.setLayoutData(gridData);", "+\t\ttable.setLayoutData (gridData);", "+\t\ttable.addTraverseListener (traverseListener);", "-\t\tString[] columnHeaders = getLayoutDataFieldNames();", "+\t\tString [] columnHeaders = getLayoutDataFieldNames ();", "-\t\t\tcolumn.setText(columnHeaders [i]);", "-\t\t\tif(i == 0) column.setWidth(100);", "-\t\t\telse if(i == 1) column.setWidth(90);", "-\t\t\telse column.pack();", "+\t\t\tcolumn.setText (columnHeaders [i]);", "+\t\t\tif (i == 0) column.setWidth (100);", "+\t\t\telse if (i == 1) column.setWidth (90);", "+\t\t\telse column.pack ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb89123dbc9fa3bcbdaca208256f710e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples.browser.demos/src/org/eclipse/swt/examples/browser/demos/views/BrowserDemoView.java", "commitBeforeChange": "58c2fb2b22d141bbf3208dff6b7308f6bedbd875", "commitAfterChange": "609eb57c451ed589ffceab0d54b7c56c247c01c1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void createPartControl(Composite parent)", "signatureAfterChange": " \tpublic void createPartControl(Composite parent)", "diff": ["-\t\ttry {", "-\t\t\tbrowser = new Browser(parent, SWT.NONE);", "-\t\t} catch (SWTError e) {", "-\t\t\te.printStackTrace();", "-\t\t\treturn;", "-\t\t}", "+\t\tthis.parent = parent;", "+\t\tparent.setLayout(new FillLayout());", "+\t\tTabFolder folder = new TabFolder(parent, SWT.NONE);", "+\t\tTabItem item = new TabItem(folder, SWT.NONE);", "+\t\tPawnTab pawnTab = new PawnTab(item);", "-\t\tmenu = new Menu(parent.getShell(), SWT.POP_UP);", "-\t\tMenuItem item = new MenuItem(menu, SWT.PUSH);", "-\t\titem.setText(\"End Game\");", "-\t\titem.addListener(SWT.Selection, new Listener() {", "-\t\t\tpublic void handleEvent(Event e) {", "-\t\t\t\tgame = null;", "-\t\t\t\tisWhite = true;", "-\t\t\t\tcntWhite = 0; cntBlack = 0;", "-\t\t\t\tttr = null;", "-\t\t\t\tbrowser.setUrl(URL_WELCOME);", "-\t\t\t}", "-\t\t});", "-\t\tbrowser.setMenu(menu);", "-\t\t", "-\t\treversiListener = new ReversiListener();", "-\t\tbrowser.addLocationListener(reversiListener);", "-\t\tbrowser.setUrl(URL_WELCOME);", "-\t\t", "-", "+\t\titem = new TabItem(folder, SWT.NONE);", "+\t\tEditorTab editorTab = new EditorTab(item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a8f6d304f34e82633946e953d1fb69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TextTab.java", "commitBeforeChange": "1586f33e5beb8cd45f751a6d27e5884df47de19b", "commitAfterChange": "2dc917cd9291c9cde6e3d2c6119936e1cfb49ff0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tvoid createStyleGroup()", "signatureAfterChange": " \tvoid createStyleGroup()", "diff": ["+", "+\t\tComposite alignmentGroup = new Composite (styleGroup, SWT.NONE);", "+\t\tGridLayout layout = new GridLayout ();", "+\t\tlayout.marginWidth = layout.marginHeight = 0;", "+\t\talignmentGroup.setLayout (layout);", "+\t\talignmentGroup.setLayoutData (new GridData (GridData.FILL_BOTH));", "+\t\tleftButton = new Button (alignmentGroup, SWT.RADIO);", "+\t\tleftButton.setText (\"SWT.LEFT\");", "+\t\tcenterButton = new Button (alignmentGroup, SWT.RADIO);", "+\t\tcenterButton.setText (\"SWT.CENTER\");", "+\t\trightButton = new Button (alignmentGroup, SWT.RADIO);", "+\t\trightButton.setText (\"SWT.RIGHT\");", "+\t\t", "+\t\tSelectionListener selectionListener = new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tif (!((Button) event.widget).getSelection ()) return;", "+\t\t\t\trecreateExampleWidgets ();", "+\t\t\t}", "+\t\t};", "+\t\tleftButton.addSelectionListener (selectionListener);", "+\t\tcenterButton.addSelectionListener (selectionListener);", "+\t\trightButton.addSelectionListener (selectionListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5a5c3b6486d9ef64a175bcd8f97847b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/TreeTab.java", "commitBeforeChange": "70f0345575a32aee6b3cbdbd57475893b2700425", "commitAfterChange": "616c823c8dafb50831635ff99ea86354ff9b4aef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createOtherGroup ()", "signatureAfterChange": " \tvoid createOtherGroup ()", "diff": ["-\t\tmultipleColumns = new Button (otherGroup, SWT.CHECK);", "-\t\tmultipleColumns.setText (ControlExample.getResourceString(\"Multiple_Columns\"));", "+\t\tmultipleColumns = new Button (otherGroup, SWT.CHECK);", "+\t\tmultipleColumns.setText (ControlExample.getResourceString(\"Multiple_Columns\"));", "+\t\tmoveableColumns = new Button (otherGroup, SWT.CHECK);", "+\t\tmoveableColumns.setText (ControlExample.getResourceString(\"Moveable_Columns\"));", "+\t\tmoveableColumns.setSelection(false);", "+\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetWidgetHeaderVisible ();", "+\t\t\t}", "+\t\t});", "-\t\theaderVisibleButton.addSelectionListener (new SelectionAdapter () {", "+\t\tmoveableColumns.addSelectionListener (new SelectionAdapter () {", "-\t\t\t\tsetWidgetHeaderVisible ();", "+\t\t\t\tsetColumnsMoveable ();"]}], "num": 61378}