{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d50d4ec8e6f93c6686e4de77c88f65c3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9588856b479702ca386470e50f9696bc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "6c708983cb19b500544bffcc8a94c4a1ec516eab", "commitAfterChange": "a8b74e75ae0bc2282703c2c3690d1eb9e1e969ec", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 8, "signatureBeforeChange": " void recomputeTextWidths (GC gc)", "signatureAfterChange": " void computeTextWidths (GC gc)", "diff": ["+ */", "+void computeTextWidths (GC gc) {", "+\tif ((parent.style & SWT.VIRTUAL) != 0 && !cached) return;\t/* nothing to do */", "+", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\ttextWidths = new int [validColumnCount];", "+\tfor (int i = 0; i < textWidths.length; i++) {", "+\t\tString value = getDisplayText (i);", "+\t\tif (value != null) {", "+\t\t\tgc.setFont (getFont (i, false));", "+\t\t\ttextWidths [i] = gc.stringExtent (value).x;", "+\t\t}", "- */", "-void recomputeTextWidths (GC gc) {", "-\tint validColumnCount = Math.max (1, parent.columns.length);", "-\ttextWidths = new int [validColumnCount];", "-\tfor (int i = 0; i < textWidths.length; i++) {", "-\t\tString value = getDisplayText (i);", "-\t\tif (value != null) {", "-\t\t\tgc.setFont (getFont (i, false));", "-\t\t\ttextWidths [i] = gc.stringExtent (value).x;", "-\t\t}", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b091fd0cd59d24ccb855343d7cd4d07e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "75d3bca9b12da0e734f166ed9776e3c463fe710a", "commitAfterChange": "192960609106955d48292e46d3afc3671c59810e", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 19, "signatureBeforeChange": " void recomputeTextWidths (GC gc)", "signatureAfterChange": " void computeTextWidths (GC gc)", "diff": ["+ */", "+void computeTextWidths (GC gc) {", "+\tif ((parent.style & SWT.VIRTUAL) != 0 && !cached) return;\t/* nothing to do */", "+", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\ttextWidths = new int [validColumnCount];", "+\tfor (int i = 0; i < textWidths.length; i++) {", "+\t\tString value = getDisplayText (i);", "+\t\tif (value != null) {", "+\t\t\tgc.setFont (getFont (i, false));", "+\t\t\ttextWidths [i] = gc.stringExtent (value).x;", "+\t\t}", "- */", "-void recomputeTextWidths (GC gc) {", "-\tint validColumnCount = Math.max (1, parent.columns.length);", "-\ttextWidths = new int [validColumnCount];", "-\tfor (int i = 0; i < textWidths.length; i++) {", "-\t\tString value = getDisplayText (i);", "-\t\tif (value != null) {", "-\t\t\tgc.setFont (getFont (i));", "-\t\t\ttextWidths [i] = gc.stringExtent (value).x;", "-\t\t}"]}], "num": 41798}