{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2cd520d0401da2925d6aa93b9248de34", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19dbbd75620d982184fa874b0f936375", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "3cca36152c7f506de49197234b7c9eacb065058e", "commitAfterChange": "8c0cc24c5e97d9cc0088733f1c5b7157ec23ab05", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void drawTabArea(Event event)", "signatureAfterChange": " void drawTabArea(Event event)", "diff": ["-\t\t", "-\t\tif (single) {", "-\t\t\tint x1 = borderLeft;", "-\t\t\tint y1 = (onBottom) ? size.y - borderBottom - tabHeight - 1 : borderTop + tabHeight;", "-\t\t\tint x2 = size.x - borderRight;", "-\t\t\tgc.setForeground(borderColor);", "-\t\t\tgc.drawLine(x1, y1, x2, y1);", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbdf120ee4638a169abfa879dc27d59a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "1f6933a1b15056c0d45fcdf5019d55449793c82d", "commitAfterChange": "03b27348c501db581e6b7fd3b2d0cc945cd398ee", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 87, "signatureBeforeChange": " boolean setItemLocation()", "signatureAfterChange": " boolean setItemLocation()", "diff": ["-\t\t\tif (rightAnchor != SWT.DEFAULT) {", "-\t\t\t\tint indentWithAnchor = rightAnchor - item.width;", "-\t\t\t\tindent = Math.max(indent, indentWithAnchor - borderLeft);", "-\t\t\t}", "-\t\t\titem.closeRect.x = item.x + item.width - BUTTON_SIZE - item.marginRight(i == selectedIndex);", "-\t\t\tif (!simple && i == selectedIndex) item.closeRect.x -= CURVE_INDENT;", "-\t\t\titem.closeRect.y = onBottom ? size.y - borderBottom - tabHeight + (tabHeight - BUTTON_SIZE)/2: borderTop + (tabHeight - BUTTON_SIZE)/2;", "+\t\t\titem.closeRect.x = item.x + item.width - BUTTON_SIZE - item.marginRight(false);", "+\t\t\titem.closeRect.y = onBottom ? size.y - borderBottom - tabHeight + (tabHeight - BUTTON_SIZE)/2 : borderTop + (tabHeight - BUTTON_SIZE)/2;", "-\t\t\t\tint extra = simple ? 0 : CURVE_INDENT;", "-\t\t\t\tint rightEdge = Math.min(item.x + item.width - extra, getRightItemEdge() - extra);", "-\t\t\t\titem.closeRect.x = rightEdge - BUTTON_SIZE - item.marginRight(true);", "+\t\t\t\tint deadSpace = simple ? 0 : curveWidth - curveIndent;", "+\t\t\t\tint rightEdge = Math.min(item.x + item.width - deadSpace, getRightItemEdge() - deadSpace);", "+\t\t\t\titem.closeRect.x = rightEdge - item.marginRight(true) - BUTTON_SIZE;", "-\t\t\t\titem.closeRect.x = item.x + item.width - BUTTON_SIZE - item.marginRight(false);", "+\t\t\t\titem.closeRect.x = item.x + item.width - item.marginRight(false) - BUTTON_SIZE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9ed65214acb641a986ce5a751411585", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "0f19f7facaa6f5437461d810cf683d633c76ff87", "commitAfterChange": "bd05df9dcb7d1652d6e5b72fffe12747a100cab4", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": " \t LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["-\t\t\tif (ignoreResize) {", "-\t\t\t\t/*", "-\t\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "-\t\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "-\t\t\t\t* column is expanded to fill the client area.  The fix is to", "-\t\t\t\t* insert and remove a temporary last column for the duration", "-\t\t\t\t* of LVM_SETCOLUMNWIDTH.  As a result, LVN_GETDISPINFO should", "-\t\t\t\t* be ignored for the temporary column.", "-\t\t\t\t*/", "-\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\t\tif (count == 1 && columns [0] == null) count = 0;", "-\t\t\t\tif (count - 1 >= plvfi.iSubItem) break;", "-\t\t\t}", "+\t\t\t/*", "+\t\t\t* Feature in Windows.  When LVSCW_AUTOSIZE_USEHEADER is used", "+\t\t\t* with LVM_SETCOLUMNWIDTH to resize the last column, the last", "+\t\t\t* column is expanded to fill the client area.  The fix is to", "+\t\t\t* insert and remove a temporary last column for the duration", "+\t\t\t* of LVM_SETCOLUMNWIDTH.  As a result, LVN_GETDISPINFO should", "+\t\t\t* be ignored for the temporary column.", "+\t\t\t*/", "+\t\t\tif (ignoreResize && (plvfi.iSubItem >= columns.length || columns [plvfi.iSubItem] == null)) break;", "+"]}], "num": 33814}