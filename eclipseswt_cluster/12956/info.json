{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4b4b70ea90c114ac2a0684ecb975e89", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbee17fafe6df67028c31410d0d68bf0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "f08ba928393ae11e2b54ef7eac4741a87a2ca56a", "commitAfterChange": "bc7f8339619528151102bb0d9962270d28e28aed", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " int[] getRanges(int start, int length)", "signatureAfterChange": " int[] getRanges(int start, int length)", "diff": ["+\t\tif (ranges[rangeEnd] > end) rangeEnd = Math.max(rangeStart, rangeEnd - 2);", "-\t\t}\t\t", "+\t\t}", "-\t\tif (end < newRanges[newRanges.length - 2]) {", "-\t\t\tint[] tmp = new int[newRanges.length - 2];", "-\t\t\tSystem.arraycopy(newRanges, 0, tmp, 0, newRanges.length - 2);", "-\t\t\tnewRanges = tmp;", "-\t\t} else {", "-\t\t\tnewRanges[newRanges.length - 1] = end - newRanges[newRanges.length - 2] + 1;", "-\t\t}", "+\t\tnewRanges[newRanges.length - 1] = end - newRanges[newRanges.length - 2] + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86ff7245d4094c16501da5410eec8a3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "03426465967ab625791b0cc8855656bc5c0903a0", "commitAfterChange": "18b6bce236bf79177b36199d3c4f79f786405e0c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " int[] getRanges(int start, int length)", "signatureAfterChange": " int[] getRanges(int start, int length)", "diff": ["-\t\tnewRanges[newRanges.length - 1] = end - newRanges[newRanges.length - 2] + 1;", "+\t\tif (end < newRanges[newRanges.length - 2]) {", "+\t\t\tint[] tmp = new int[newRanges.length - 2];", "+\t\t\tSystem.arraycopy(newRanges, 0, tmp, 0, newRanges.length - 2);", "+\t\t\tnewRanges = tmp;", "+\t\t} else {", "+\t\t\tnewRanges[newRanges.length - 1] = end - newRanges[newRanges.length - 2] + 1;", "+\t\t}"]}], "num": 12956}