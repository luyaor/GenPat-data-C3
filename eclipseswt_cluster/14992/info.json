{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "544d4f31498e72548223a11e108fe21b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ccf0655fdd160559c700d8223f0da94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ba077cb7aacc6bcd2aa9f3728fe1bd42bc6a2e96", "commitAfterChange": "bd0b03092f25642c418a6dd3c5f788a4e9e950c7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "diff": ["-\tint [] buffer = new int [1];", "-\tOS.memmove (buffer, OS.gtk_tree_path_get_indices (path), 4);", "-\tint index = buffer [0];", "-\tTableItem item = _getItem (index);", "+\tint [] index = new int [1];", "+\tOS.memmove (index, OS.gtk_tree_path_get_indices (path), 4);", "+\tTableItem item = _getItem (index[0]);", "-\t\t\tlastIndexOf = index;", "+\t\t\tlastIndexOf = index[0];", "+\tint /*long*/ [] ptr = new int /*long*/ [1];", "-\t\tbuffer [0] = 0;", "+\t\tptr [0] = 0;", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_PIXBUF, buffer, -1);", "-\t\t\tOS.g_object_set (cell, OS.pixbuf, buffer [0], 0);", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_PIXBUF, ptr, -1);", "+\t\t\tOS.g_object_set (cell, OS.pixbuf, ptr [0], 0);", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_TEXT, buffer, -1); ", "-\t\t\tif (buffer [0] != 0) {", "-\t\t\t\tOS.g_object_set (cell, OS.text, buffer [0], 0);", "-\t\t\t\tOS.g_free (buffer [0]);", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_TEXT, ptr, -1); ", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set (cell, OS.text, ptr [0], 0);", "+\t\t\t\tOS.g_free (ptr [0]);", "-\t\t\tbuffer [0] = 0;", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_BACKGROUND, buffer, -1);", "-\t\t\tif (buffer [0] != 0) {", "-\t\t\t\tOS.g_object_set (cell, OS.cell_background_gdk, buffer [0], 0);", "+\t\t\tptr [0] = 0;", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_BACKGROUND, ptr, -1);", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set (cell, OS.cell_background_gdk, ptr [0], 0);", "-\t\t\tbuffer [0] = 0;", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FOREGROUND, buffer, -1);", "-\t\t\tif (buffer [0] != 0) {", "-\t\t\t\tOS.g_object_set (cell, OS.foreground_gdk, buffer [0], 0);", "+\t\t\tptr [0] = 0;", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FOREGROUND, ptr, -1);", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set (cell, OS.foreground_gdk, ptr [0], 0);", "-\t\t\tbuffer [0] = 0;", "-\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FONT, buffer, -1);", "-\t\t\tif (buffer [0] != 0) {", "-\t\t\t\tOS.g_object_set (cell, OS.font_desc, buffer [0], 0);", "+\t\t\tptr [0] = 0;", "+\t\t\tOS.gtk_tree_model_get (tree_model, iter, modelIndex + CELL_FONT, ptr, -1);", "+\t\t\tif (ptr [0] != 0) {", "+\t\t\t\tOS.g_object_set (cell, OS.font_desc, ptr [0], 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23658f7eb2cb2214b8cbf095b3a59bbb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "dfd4650fd75100a5a002cab81ff3277b16862845", "commitAfterChange": "d01fac9d213e0fa304edfed85d0f0844e9d59792", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": "  void drawRoundRectangleGdip (int gdipGraphics, int brush, int x, int y, int width, int height, int arcWidth, int arcHeight)", "signatureAfterChange": "  void drawRoundRectangleGdip (int gdipGraphics, int pen, int x, int y, int width, int height, int arcWidth, int arcHeight)", "diff": ["-void drawRoundRectangleGdip (int gdipGraphics, int brush, int x, int y, int width, int height, int arcWidth, int arcHeight) {", "+void drawRoundRectangleGdip (int gdipGraphics, int pen, int x, int y, int width, int height, int arcWidth, int arcHeight) {", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny, naw, nah, -90, -90);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + naw2, ny, nx + nw - naw2, ny);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx + nw - naw, ny, naw, nah, 0, -90);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx + nw - naw, ny + nh - nah, naw, nah, -270, -90);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny + nh - nah, naw, nah, -180, -90);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx, ny + nah2, nx, ny + nh - nah2);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny, naw, nah, -90, -90);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + naw2, ny, nx + nw - naw2, ny);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx + nw - naw, ny, naw, nah, 0, -90);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx + nw - naw, ny + nh - nah, naw, nah, -270, -90);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny + nh - nah, naw, nah, -180, -90);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx, ny + nah2, nx, ny + nh - nah2);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny, naw, nh, -90, -180);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + naw2, ny, nx + nw - naw2, ny);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx + nw - naw, ny, naw, nh, -270, -180);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny, naw, nh, -90, -180);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + naw2, ny, nx + nw - naw2, ny);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx + nw - naw, ny, naw, nh, -270, -180);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + naw2, ny + nh, nx + nw - naw2, ny + nh);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny, nw, nah, 0, -180);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny + nh - nah, nw, nah, -180, -180);", "-\t\t\tGdip.Graphics_DrawLine(gdipGraphics, brush, nx, ny + nah2, nx, ny + nh - nah2);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny, nw, nah, 0, -180);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx + nw, ny + nah2, nx + nw, ny + nh - nah2);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny + nh - nah, nw, nah, -180, -180);", "+\t\t\tGdip.Graphics_DrawLine(gdipGraphics, pen, nx, ny + nah2, nx, ny + nh - nah2);", "-\t\t\tGdip.Graphics_DrawArc(gdipGraphics, brush, nx, ny, nw, nh, 0, 360);", "+\t\t\tGdip.Graphics_DrawArc(gdipGraphics, pen, nx, ny, nw, nh, 0, 360);"]}], "num": 14992}