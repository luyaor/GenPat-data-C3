{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07a92cb34de8e2b566065756c6d00a6a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ea7e1636901d5196e4ac6b471f5092", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "991749f7f8d70b27654548d75f2e2ea9b6410c4f", "commitAfterChange": "228eb4049daca5bb2e99b6953c43092e18d962b8", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  boolean sendKeyEvent (int type, Event event)", "signatureAfterChange": "  boolean sendKeyEvent (int type, Event event)", "diff": ["+//\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return true;", "-\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-\t\tint [] actualSize = new int [1];", "-\t\tint [] ptr = new int [1];", "-\t\tint charCount = 0;", "-\t\tif (OS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, actualSize) == OS.noErr) {", "-\t\t\tcharCount = OS.CFStringGetLength (ptr [0]);", "-\t\t\tOS.CFRelease (ptr [0]);", "-\t\t} ", "-\t\tshort [] selection = new short [2];", "-\t\tOS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection, null);", "-\t\tint start = selection [0], end = selection [1];", "-\t\tswitch (event.character) {", "-\t\t\tcase SWT.BS:", "-\t\t\t\tif (start == end) {", "-\t\t\t\t\tif (start == 0) return true;", "-\t\t\t\t\tstart = Math.max (0, start - 1);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.DEL:", "-\t\t\t\tif (start == end) {", "-\t\t\t\t\tif (start == charCount) return true;", "-\t\t\t\t\tend = Math.min (end + 1, charCount);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.CR:", "-\t\t\t\treturn true;", "-\t\t\tdefault:", "-\t\t\t\tif (event.character != '\\t' && event.character < 0x20) return true;", "-\t\t\t\toldText = new String (new char [] {event.character});", "-\t\t}", "-\t\tnewText = verifyText (oldText, start, end, event);", "-\t\tif (newText == null) return false;", "-\t\tif (newText != oldText) {", "-\t\t\tsetText (newText, start, end, false);", "-\t\t\tstart += newText.length ();", "-\t\t\tselection = new short [] {(short)start, (short)start };", "-\t\t\tOS.SetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection);", "-\t\t}", "+\tint [] actualSize = new int [1];", "+\tint [] ptr = new int [1];", "+\tint charCount = 0;", "+\tif (OS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextCFStringTag, 4, ptr, actualSize) == OS.noErr) {", "+\t\tcharCount = OS.CFStringGetLength (ptr [0]);", "+\t\tOS.CFRelease (ptr [0]);", "+\t} ", "+\tshort [] selection = new short [2];", "+\tOS.GetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection, null);", "+\tint start = selection [0], end = selection [1];", "+\tswitch (event.character) {", "+\t\tcase SWT.BS:", "+\t\t\tif (start == end) {", "+\t\t\t\tif (start == 0) return true;", "+\t\t\t\tstart = Math.max (0, start - 1);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase SWT.DEL:", "+\t\t\tif (start == end) {", "+\t\t\t\tif (start == charCount) return true;", "+\t\t\t\tend = Math.min (end + 1, charCount);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\tcase SWT.CR:", "+\t\t\treturn true;", "+\t\tdefault:", "+\t\t\tif (event.character != '\\t' && event.character < 0x20) return true;", "+\t\t\toldText = new String (new char [] {event.character});", "+\t}", "+\tnewText = verifyText (oldText, start, end, event);", "+\tif (newText == null) return false;", "+\tif (newText != oldText) {", "+\t\tsetText (newText, start, end, false);", "+\t\tstart += newText.length ();", "+\t\tselection = new short [] {(short)start, (short)start };", "+\t\tOS.SetControlData (textHandle, (short)OS.kControlEntireControl, OS.kControlEditTextSelectionTag, 4, selection);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cdd6c81138994e69e54c4b81586f1dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "716060d843dd536e0c661cacea0269ffaa4e7d72", "commitAfterChange": "3753196e54cacf08b9ba94669052da40a6f74fd7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "signatureAfterChange": "  int gtk_insert_text (int widget, int new_text, int new_text_length, int position)", "diff": ["-\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return 0;", "+//\tif (!hooks (SWT.Verify) && !filters (SWT.Verify)) return 0;"]}], "num": 2867}