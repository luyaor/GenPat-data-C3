{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f426e448488f4fe71653b828d8e2ea01", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c0b87cff2aec080fccadebe4ec96f14", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2se/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "f596be6f2698a524e2eb59fbf7fa4dfc8e6e5e88", "commitAfterChange": "faf8f241b3ea3cf8658bca53e40fd0817730fcad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static void loadLibrary (String name)", "signatureAfterChange": " public static void loadLibrary (String name)", "diff": ["-\t/*", "-     * Include platform name to support different windowing systems", "-     * on same operating system.", "-\t */", "-\tString platform = Platform.PLATFORM;", "-\t", "-\t/*", "-\t * Get version qualifier.", "-\t */", "-\tString version = System.getProperty (\"swt.version\"); //$NON-NLS-1$", "-\tif (version == null) {", "-\t\tversion = \"\" + MAJOR_VERSION; //$NON-NLS-1$", "-\t\t/* Force 3 digits in minor version number */", "-\t\tif (MINOR_VERSION < 10) {", "-\t\t\tversion += \"00\"; //$NON-NLS-1$", "-\t\t} else {", "-\t\t\tif (MINOR_VERSION < 100) version += \"0\"; //$NON-NLS-1$", "-\t\t}", "-\t\tversion += MINOR_VERSION;\t\t", "-\t\t/* No \"r\" until first revision */", "-\t\tif (REVISION > 0) version += \"r\" + REVISION; //$NON-NLS-1$", "-\t}", "+\tloadLibrary (name, true);", "+}", "-\tString libName1 = name + \"-\" + platform + \"-\" + version;  //$NON-NLS-1$ //$NON-NLS-2$", "-\tString libName2 = name + \"-\" + platform;  //$NON-NLS-1$", "-\tString mappedName1 = System.mapLibraryName (libName1);", "-\tString mappedName2 = System.mapLibraryName (libName2);", "-\t\tif (load (path + SEPARATOR + mappedName2)) return;", "-\tif (load (libName2)) return;", "-\t\tif (load (path + SEPARATOR + mappedName2)) return;", "-\t\tif (extract (path + SEPARATOR + mappedName2, mappedName2)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a86b7e6da49f86a0d601d77756cfed0d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2se/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "ae0169d9f40be4353e4998ab730fe823da3229c8", "commitAfterChange": "0b2bc498e19b2d02f5cbe818335597e8c7628a23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public static void loadLibrary (String name)", "signatureAfterChange": "\r public static void loadLibrary (String name)", "diff": ["-     * Include OS name to support same window system\r", "-     * on different operating systems.\r", "+     * Include platform name to support different windowing systems\r", "+     * on same operating system.\r", "-\tString newName = name + \"-\" + getOS () + \"-\" + MAJOR_VERSION;\r", "-\r", "-\t/* Force 3 digits in minor version number */\r", "-\tif (MINOR_VERSION < 10) {\r", "-\t\tnewName += \"00\";\r", "-\t} else {\r", "-\t\tif (MINOR_VERSION < 100) newName += \"0\";\r", "-\t}\r", "-\tnewName += MINOR_VERSION;\r", "+\tString platform = getPlatform ();\r", "-\t/* No \"r\" until first revision */\r", "-\tif (REVISION > 0) newName += \"r\" + REVISION;\r", "+\t/*\r", "+\t * Get version qualifier.\r", "+\t */\r", "+\tString version = System.getProperty (\"swt.version\");\r", "+\tif (version == null) {\r", "+\t\tversion = \"\" + MAJOR_VERSION;\r", "+\t\t/* Force 3 digits in minor version number */\r", "+\t\tif (MINOR_VERSION < 10) {\r", "+\t\t\tversion += \"00\";\r", "+\t\t} else {\r", "+\t\t\tif (MINOR_VERSION < 100) version += \"0\";\r", "+\t\t}\r", "+\t\tversion += MINOR_VERSION;\t\t\r", "+\t\t/* No \"r\" until first revision */\r", "+\t\tif (REVISION > 0) version += \"r\" + REVISION;\r", "+\t}\r", "+\r", "+\t\tString newName = name + \"-\" + platform + \"-\" + version;\t\t\r", "-\t} catch (UnsatisfiedLinkError e) {\r", "+\t\treturn;\r", "+\t} catch (UnsatisfiedLinkError e1) {\t\t\r", "-\t\t\tSystem.loadLibrary (name);\r", "+\t\t\tString newName = name + \"-\" + platform;\r", "+\t\t\tSystem.loadLibrary (newName);\r", "+\t\t\treturn;\r", "-\t\t\tthrow e;\r", "+\t\t\tthrow e1;\r"]}], "num": 18901}