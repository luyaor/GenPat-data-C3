{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "501c7a8a9c49f8bb8fcb1f4f7f5380b4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fa579705e193abe1a8bc5598faec225", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "df18f6c76e1c63f3858dc94fb10d9c5c530eb389", "commitAfterChange": "bf6713c8185938d0615b2b3128066f9c7a79e05c", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 42, "signatureBeforeChange": "  boolean sendFocusEvent (int type)", "signatureAfterChange": "  Control getControl ()", "diff": ["+Control getControl () {", "+\treturn this;", "+}", "-", "-boolean sendFocusEvent (int type) {", "-\tShell shell = getShell ();", "-\t", "-\t/*", "-\t* Feature in Windows.  During the processing of WM_KILLFOCUS,", "-\t* when the focus window is queried using GetFocus(), it has", "-\t* already been assigned to the new window.  The fix is to", "-\t* remember the control that is losing or gaining focus and", "-\t* answer it during WM_KILLFOCUS.  If a WM_SETFOCUS occurs", "-\t* during WM_KILLFOCUS, the focus control needs to be updated", "-\t* to the current control.  At any other time, the focus", "-\t* control matches Windows.", "-\t*/", "-\tDisplay display = this.display;", "-\tdisplay.focusEvent = type;", "-\tdisplay.focusControl = this;", "-\tsendEvent (type);", "-\t// widget could be disposed at this point", "-\tdisplay.focusEvent = SWT.None;", "-\tdisplay.focusControl = null;", "-", "-\t/*", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tswitch (type) {", "-\t\t\tcase SWT.FocusIn:", "-\t\t\t\tshell.setActiveControl (this);", "-\t\t\t\tbreak;", "-\t\t\tcase SWT.FocusOut:", "-\t\t\t\tif (shell != display.getActiveShell ()) {", "-\t\t\t\t\tshell.setActiveControl (null);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t}", "-\t}", "-\treturn true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "915fbd949116b25c9bc38258c48eedd4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "fe1f90bb71a54192e176dca2c0b018c380ace5dc", "commitAfterChange": "989e736512e6158f042289ac897031dd8db4b674", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 96, "signatureBeforeChange": "  Control getControl ()", "signatureAfterChange": "  boolean sendFocusEvent (int type)", "diff": ["-Control getControl () {", "-\treturn this;", "-}", "+boolean sendFocusEvent (int type) {", "+\tShell shell = getShell ();", "+\t", "+\t/*", "+\t* Feature in Windows.  During the processing of WM_KILLFOCUS,", "+\t* when the focus window is queried using GetFocus(), it has", "+\t* already been assigned to the new window.  The fix is to", "+\t* remember the control that is losing or gaining focus and", "+\t* answer it during WM_KILLFOCUS.  If a WM_SETFOCUS occurs", "+\t* during WM_KILLFOCUS, the focus control needs to be updated", "+\t* to the current control.  At any other time, the focus", "+\t* control matches Windows.", "+\t*/", "+\tDisplay display = this.display;", "+\tdisplay.focusEvent = type;", "+\tdisplay.focusControl = this;", "+\tsendEvent (type);", "+\t// widget could be disposed at this point", "+\tdisplay.focusEvent = SWT.None;", "+\tdisplay.focusControl = null;", "+", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tif (!shell.isDisposed ()) {", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn:", "+\t\t\t\tshell.setActiveControl (this);", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "+\t\t\t\tif (shell != display.getActiveShell ()) {", "+\t\t\t\t\tshell.setActiveControl (null);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn true;", "+}"]}], "num": 18604}