{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05e9d78531fec6a8d4d65209bd578db8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49867465166a322807ffaadfae55fb0d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "d4eb14ad4f7b1074d4935c2b9211f94b2750616d", "commitAfterChange": "7d562ae8941ad5655a314eac8dd19e3b2aaef50c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public static boolean launch (String fileName)", "signatureAfterChange": "\r public static boolean launch (String fileName)", "diff": ["+\t\r", "-\tbyte [] OPEN = Converter.wcsToMbcs (0, \"open\", true);\r", "-\tbyte [] lpFile = Converter.wcsToMbcs (0, fileName, true);\r", "-\treturn OS.ShellExecute (0, OPEN, lpFile, null, null, OS.SW_SHOW) > 32;\r", "+\tint hHeap = OS.GetProcessHeap ();\r", "+\tTCHAR buffer1 = new TCHAR (0, \"open\", true);\r", "+\tint byteCount1 = buffer1.length () * TCHAR.sizeof;\r", "+\tint lpVerb = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount1);\r", "+\tOS.MoveMemory (lpVerb, buffer1, byteCount1);\r", "+\tTCHAR buffer2 = new TCHAR (0, fileName, true);\r", "+\tint byteCount2 = buffer2.length () * TCHAR.sizeof;\r", "+\tint lpFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount2);\r", "+\tOS.MoveMemory (lpFile, buffer2, byteCount2);\r", "+\t\r", "+\tSHELLEXECUTEINFO info = new SHELLEXECUTEINFO ();\r", "+\tinfo.cbSize = SHELLEXECUTEINFO.sizeof;\r", "+\tinfo.lpVerb = lpVerb;\r", "+\tinfo.lpFile = lpFile;\r", "+\tinfo.nShow = OS.SW_SHOW;\r", "+\t\r", "+\tboolean result = OS.ShellExecuteEx (info);\r", "+\t\t\r", "+\tif (lpVerb != 0) OS.HeapFree (hHeap, 0, lpVerb);\t\r", "+\tif (lpFile != 0) OS.HeapFree (hHeap, 0, lpFile);\r", "+\t\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8babafe87a8356bcf3f72abfc862004", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/win32/org/eclipse/swt/program/Program.java", "commitBeforeChange": "99e437fa580702168e537f4a5d7239ece222d7cb", "commitAfterChange": "9a60b6b1565fd42d06cf1fac650c2f6dd44612e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean execute (String fileName)", "signatureAfterChange": " public boolean execute (String fileName)", "diff": ["-\tboolean quote = true;", "+\tint index = 0;", "-\tint index = command.indexOf (\"%1\"); //$NON-NLS-1$", "-\tif (index != -1) {", "-\t\tint count=0;", "-\t\tint i=index + 2, length = command.length ();", "-\t\twhile (i < length) {", "-\t\t\tif (command.charAt (i) == '\"') count++;", "-\t\t\ti++;", "+\twhile (index < ARGUMENTS.length) {", "+\t\tint i = command.indexOf (ARGUMENTS [index]);", "+\t\tif (i != -1) {", "+\t\t\tprefix = command.substring (0, i);", "+\t\t\tsuffix = command.substring (i + ARGUMENTS [index].length (), command.length ());", "+\t\t\tbreak;", "-\t\tquote = count % 2 == 0;", "-\t\tprefix = command.substring (0, index);", "-\t\tsuffix = command.substring (index + 2, length);", "+\t\tindex++;", "-\tif (quote) fileName = \" \\\"\" + fileName + \"\\\"\"; //$NON-NLS-1$ //$NON-NLS-2$", "-\ttry {", "-\t\tCompatibility.exec(prefix + fileName + suffix);", "-\t} catch (IOException e) {", "-\t\treturn false;", "-\t}", "-\treturn true;", "+\tString commandLine = prefix + fileName + suffix;", "+\tint hHeap = OS.GetProcessHeap ();", "+\t/* Use the character encoding for the default locale */", "+\tTCHAR buffer = new TCHAR (0, commandLine, true);", "+\tint byteCount = buffer.length () * TCHAR.sizeof;", "+\tint lpCommandLine = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tOS.MoveMemory (lpCommandLine, buffer, byteCount);", "+\tSTARTUPINFO lpStartupInfo = new STARTUPINFO ();", "+\tlpStartupInfo.cb = STARTUPINFO.sizeof;", "+\tPROCESS_INFORMATION lpProcessInformation = new PROCESS_INFORMATION ();", "+\tboolean success = OS.CreateProcess (0, lpCommandLine, 0, 0, false, 0, 0, 0, lpStartupInfo, lpProcessInformation);", "+\tif (lpCommandLine != 0) OS.HeapFree (hHeap, 0, lpCommandLine);", "+\tif (lpProcessInformation.hProcess != 0) OS.CloseHandle (lpProcessInformation.hProcess);", "+\tif (lpProcessInformation.hThread != 0) OS.CloseHandle (lpProcessInformation.hThread);", "+\treturn success;"]}], "num": 55469}