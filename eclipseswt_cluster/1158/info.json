{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe431b3e3c5596b4463f1477359f8c2c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffcd31dfabd6f874dfc59b6e00d5e1a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "991d280d2304d0549a595744e02de232accbd597", "commitAfterChange": "f257807ba6f1354372198ecdfbf3c83912836358", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " void initializeAccessible()", "signatureAfterChange": " void initializeAccessible()", "diff": ["+\taccessible.addAccessibleTextListener(new AccessibleTextAdapter() {", "+\t\tpublic void getCaretOffset(AccessibleTextEvent e) {", "+\t\t\te.offset = StyledText.this.getCaretOffset();", "+\t\t}", "+\t\tpublic void getSelectionRange(AccessibleTextEvent e) {", "+\t\t\tPoint selection = StyledText.this.getSelectionRange();", "+\t\t\te.offset = selection.x;", "+\t\t\te.length = selection.y;", "+\t\t}", "+\t});", "-\t\t\te.result = getText();", "+\t\t\te.result = StyledText.this.getText();", "+\t\t}", "+\t});", "+\taddListener(SWT.Modify, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tif (event.text.length() == 0) {", "+\t\t\t\taccessible.textChanged(ACC.TEXT_DELETE, event.start, event.end - event.start);", "+\t\t\t} else {", "+\t\t\t\tif (event.start == event.end) {", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_INSERT, event.start, event.text.length());", "+\t\t\t\t} else {", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_DELETE, event.start, event.end - event.start);", "+\t\t\t\t\taccessible.textChanged(ACC.TEXT_INSERT, event.start, event.text.length());\t", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t});", "+\taddListener(SWT.Selection, new Listener () {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\taccessible.textSelectionChanged();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ef9bb65bb6168340929c9ffca49795", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "795bdda1eaa240541c5110030e3b756080c028c2", "commitAfterChange": "b8915f8c97b0cf960a43802745499f1e70e0513e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \r private void initAccessible()", "signatureAfterChange": "\r \r private void initAccessible()", "diff": ["-\tAccessible accessible = getAccessible();\r", "+\tfinal Accessible accessible = getAccessible();\r", "+\t\tpublic void getFocus(AccessibleControlEvent e) {\r", "+\t\t\tint childID = ACC.CHILDID_NONE;\r", "+\t\t\tif (isFocusControl()) {\r", "+\t\t\t\tif (selectedIndex == -1) {\r", "+\t\t\t\t\tchildID = ACC.CHILDID_SELF;\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tchildID = selectedIndex;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\te.childID = childID;\r", "+\t\t}\r", "+\r", "+\t\r", "+\taddListener(SWT.Selection, new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tif (isFocusControl()) {\r", "+\t\t\t\tif (selectedIndex == -1) {\r", "+\t\t\t\t\taccessible.setFocus(ACC.CHILDID_SELF);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\taccessible.setFocus(selectedIndex);\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t}\r", "+\t});\r", "+\r", "+\taddListener(SWT.FocusIn, new Listener() {\r", "+\t\tpublic void handleEvent(Event event) {\r", "+\t\t\tif (selectedIndex == -1) {\r", "+\t\t\t\taccessible.setFocus(ACC.CHILDID_SELF);\r", "+\t\t\t} else {\r", "+\t\t\t\taccessible.setFocus(selectedIndex);\r", "+\t\t\t}\r", "+\t\t}\r", "+\t});\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d3dd151fb8dfb136d10f9ebc1c0ade", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "64349bf9cd19222d7f7bef44cb4d0e244ca7ed8f", "commitAfterChange": "a1c32779a77806d83e43b58429ae7b645a07df78", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": " void initializeAccessible()", "signatureAfterChange": " void initializeAccessible()", "diff": ["+\taccessible.addAccessibleEditableTextListener(new AccessibleEditableTextListener() {", "+\t\tpublic void setTextAttributes(AccessibleTextAttributeEvent e) {", "+\t\t\t// This method must be implemented by the application", "+\t\t\te.result = ACC.OK;", "+\t\t}", "+\t\tpublic void replaceText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.replaceTextRange(e.start, e.end - e.start, e.string);", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void pasteText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start);", "+            st.paste();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void cutText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.cut();", "+            e.result = ACC.OK;", "+\t\t}", "+\t\tpublic void copyText(AccessibleEditableTextEvent e) {", "+\t\t\tStyledText st = StyledText.this;", "+\t\t\tst.setSelection(e.start, e.end);", "+            st.copy();", "+            e.result = ACC.OK;", "+\t\t}", "+\t});"]}], "num": 1158}