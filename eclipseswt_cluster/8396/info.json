{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55434243360f983bde88ff8616e221a8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a7760bb7b2122c04bfab768c80a648", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "3b2dd0f57a4f597ff1b48b6c5a40c5fccca65d5a", "commitAfterChange": "a7620c5f39416d8b72609f3b614f910de97228a1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void initAccessible()", "signatureAfterChange": "  void initAccessible()", "diff": ["+\tarrow.getAccessible().addAccessibleListener(new AccessibleAdapter() {", "+\t\tpublic void getName(AccessibleEvent e) {", "+\t\t\te.result = isDropped () ? \"Close\" : \"Open\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}", "+\t\tpublic void getKeyboardShortcut(AccessibleEvent e) {", "+\t\t\te.result = \"Alt+Down Arrow\"; //$NON-NLS-1$", "+\t\t}", "+\t\tpublic void getHelp(AccessibleEvent e) {", "+\t\t\te.result = getToolTipText();", "+\t\t}", "+\t});", "+", "+", "+\ttext.getAccessible().addAccessibleControlListener(new AccessibleControlAdapter() {", "+\t\tpublic void getRole(AccessibleControlEvent e) {", "+\t\t\te.detail = text.getEditable() ? ACC.ROLE_TEXT : ACC.ROLE_LABEL;", "+\t\t}", "+\t});", "+", "+\tarrow.getAccessible().addAccessibleControlListener(new AccessibleControlAdapter() {", "+\t\tpublic void getDefaultAction(AccessibleControlEvent e) {", "+\t\t\te.result = isDropped () ? \"Close\" : \"Open\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t}", "+\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7532fc1fcb5c64f61ccf9cca4716c761", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "2fc1f354460a9a2ef884760f620de832af7d79ad", "commitAfterChange": "3b2dd0f57a4f597ff1b48b6c5a40c5fccca65d5a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void initAccessible()", "signatureAfterChange": "  void initAccessible()", "diff": ["-\tgetAccessible().addAccessibleListener(new AccessibleAdapter() {", "+\tAccessibleAdapter accessibleAdapter = new AccessibleAdapter() {", "+\t\tpublic void getName(AccessibleEvent e) {", "+\t\t\tString name = null;", "+\t\t\tLabel label = getAssociatedLabel ();", "+\t\t\tif (label != null) {", "+\t\t\t\tname = stripMnemonic(label.getText());", "+\t\t\t}", "+\t\t\te.result = name;", "+\t\t}", "+\t\tpublic void getKeyboardShortcut(AccessibleEvent e) {", "+\t\t\tString shortcut = null;", "+\t\t\tLabel label = getAssociatedLabel ();", "+\t\t\tif (label != null) {", "+\t\t\t\tString text = label.getText();", "+\t\t\t\tif (text != null) {", "+\t\t\t\t\tchar mnemonic = getMnemonic(text);", "+\t\t\t\t\tif (mnemonic != '\\0') {", "+\t\t\t\t\t\tshortcut = \"Alt+\"+mnemonic; //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\te.result = shortcut;", "+\t\t}", "-\t});", "+\t};", "+\tgetAccessible().addAccessibleListener(accessibleAdapter);", "+\ttext.getAccessible().addAccessibleListener(accessibleAdapter);", "+\tlist.getAccessible().addAccessibleListener(accessibleAdapter);"]}], "num": 8396}