{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33292eee4f81a7c33b78bf2d6e4e9186", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb42f9b324dbc1f371d7fa3294d2970", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public Point getLocation ()", "signatureAfterChange": "  public Point getLocation ()", "diff": ["-\t// TODO: frame is relative to superview. What does getLocation mean in the embedded case?", "-\tNSRect frame = (window != null ? window.frame() : view.frame());", "-\tfloat /*double*/ y = display.getPrimaryFrame().height - (int)(frame.y + frame.height);", "-\treturn new Point ((int)frame.x, (int)y);", "+\t", "+\tif (window != null) {", "+\t\tNSRect frame = window.frame();", "+\t\tfloat /*double*/ y = display.getPrimaryFrame().height - (int)(frame.y + frame.height);", "+\t\treturn new Point ((int)frame.x, (int)y);", "+\t} else {", "+\t\t// Start from view's origin, (0, 0)", "+\t\tNSPoint pt = new NSPoint();", "+\t\tNSRect primaryFrame = display.getPrimaryFrame();", "+\t\tif (!view.isFlipped ()) {", "+\t\t\tpt.y = view.bounds().height - pt.y;", "+\t\t}", "+\t\tpt = view.convertPoint_toView_(pt, null);", "+\t\tpt = view.window().convertBaseToScreen(pt);", "+\t\tpt.y = primaryFrame.height - pt.y;", "+\t\tfloat /*double*/ scaleFactor = view.window().userSpaceScaleFactor();", "+\t\tpt.x /= scaleFactor;", "+\t\tpt.y /= scaleFactor;", "+\t\treturn new Point((int)pt.x, (int)pt.y);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197f58302d6488fc82c66a3307f330db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "c8a676e3087ddbe22a668753e1001fa28d6ae9be", "commitAfterChange": "1eb6b519b5ad13a3dc93006b9f6a39921ded9354", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public Rectangle getBounds ()", "signatureAfterChange": "  public Rectangle getBounds ()", "diff": ["-\tNSRect frame = (window == null ? view.frame() : window.frame());", "-\tfloat /*double*/ y = display.getPrimaryFrame().height - (int)(frame.y + frame.height);", "-\tRectangle rectangle = new Rectangle ((int)frame.x, (int)y, (int)frame.width, (int)frame.height);", "-\t\tfloat /*double*/ scaleFactor = window.userSpaceScaleFactor();", "-\t\trectangle.x /= scaleFactor;", "-\t\trectangle.y /= scaleFactor;", "-\t\trectangle.width /= scaleFactor;", "-\t\trectangle.height /= scaleFactor;", "+\t\tNSRect frame = window.frame();", "+\t\tfloat /*double*/ y = display.getPrimaryFrame().height - (int)(frame.y + frame.height);", "+\t\treturn new Rectangle ((int)frame.x, (int)y, (int)frame.width, (int)frame.height);", "+\t} else {", "+\t\tNSRect frame = view.frame();", "+\t\t// Start from view's origin, (0, 0)", "+\t\tNSPoint pt = new NSPoint();", "+\t\tNSRect primaryFrame = display.getPrimaryFrame();", "+\t\tif (!view.isFlipped ()) {", "+\t\t\tpt.y = view.bounds().height - pt.y;", "+\t\t}", "+\t\tpt = view.convertPoint_toView_(pt, null);", "+\t\tpt = view.window().convertBaseToScreen(pt);", "+\t\tpt.y = primaryFrame.height - pt.y;", "+\t\tfloat /*double*/ scaleFactor = view.window().userSpaceScaleFactor();", "+\t\tpt.x /= scaleFactor;", "+\t\tpt.y /= scaleFactor;", "+\t\treturn new Rectangle((int)pt.x, (int)pt.y, (int)frame.width, (int)frame.height);", "-\t", "-\treturn rectangle;"]}], "num": 45546}