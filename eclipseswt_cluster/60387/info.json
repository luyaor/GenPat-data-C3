{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dad2d734f365f32c4be030ed61401d76", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16db4f4205b567d5087ea830a370f757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "336c640f21f6098f84d6d6682ff7635ddf66f650", "commitAfterChange": "20f32f00170b2b5fe44ce0d2c73eb51efa55207e", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-", "-\t/*", "-\t* Use VkKeyScan () to tell us if the character is a control", "-\t* or a numeric key pad character with Num Lock down.  On", "-\t* international keyboards, the control key may be down when", "-\t* the character is not a control character.  In this case", "-\t* use the last key (computed in WM_KEYDOWN) instead of wParam", "-\t* as the keycode because there is not enough information to", "-\t* compute the keycode in WPARAM.", "-\t*/", "-\tdisplay.lastNull = false;", "-\tif (display.lastKey == 0) {", "-\t\tdisplay.lastKey = wParam;", "-\t\tdisplay.lastVirtual = display.isVirtualKey (wParam);", "-\t} else {", "-\t\tint result = OS.IsWinCE ? 0 : OS.VkKeyScan ((short) wParam);", "-\t\tif (!OS.IsWinCE && (result == -1 || (result >> 8) <= 2)) {", "-\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "-\t\t\t\tdisplay.lastVirtual = display.isVirtualKey (display.lastKey);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tdisplay.lastKey = wParam;", "-\t\t\tdisplay.lastVirtual = false;", "-\t\t}", "-\t}", "+\tdisplay.lastNull = wParam == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93713054708be38098eb39550c45afa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "eda2a2418c4450b2d104d71f5bf6f8ca33cebc34", "commitAfterChange": "531850a3e0806300795ef7d038564fab44c70aee", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " boolean translateAccelerator (char key, int keysym, XKeyEvent xEvent, boolean doit)", "signatureAfterChange": " boolean translateAccelerator (char key, int keysym, XKeyEvent xEvent, boolean doit)", "diff": ["-\t", "-\t/* Ignore modifiers. */", "-\tswitch (keysym) {", "-\t\tcase OS.XK_Control_L:", "-\t\tcase OS.XK_Control_R:", "-\t\tcase OS.XK_Alt_L:", "-\t\tcase OS.XK_Alt_R:", "-\t\tcase OS.XK_Shift_L:", "-\t\tcase OS.XK_Shift_R:", "-\t\t\treturn false;\t\t\t\t\t", "-\t}", "-\t", "-\t/*", "-\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not", "-\t* translated correctly by XLookupString().  They are mapped", "-\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to", "-\t* look for these values explicitly and correct them.", "-\t*/", "-\tif (OS.IsSunOS && keysym != 0) {", "-\t\tswitch (keysym) {", "-\t\t\tcase 0x1005FF10: ", "-\t\t\t\tkeysym = OS.XK_F11;", "-\t\t\t\tkey = 0;", "-\t\t\t\tbreak;", "-\t\t\tcase 0x1005FF11:", "-\t\t\t\tkeysym = OS.XK_F12;", "-\t\t\t\tkey = 0;", "-\t\t\t\tbreak;", "-\t\t}", "-\t\t/*", "-\t\t* Bug in MOTIF.  On Solaris only, there is garbage in the", "-\t\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms", "-\t\t* must be 16-bits to fit into a Character, mask away the", "-\t\t* high 16-bits on all platforms.", "-\t\t*/", "-\t\tkeysym &= 0xFFFF;", "-\t}", "-\t", "-\t/*", "-\t* Bug in Motif.  There are some keycodes for which ", "-\t* XLookupString() does not translate the character.", "-\t* Some examples are Shift+Tab and Ctrl+Space.", "-\t*/", "-\tswitch (keysym) {", "-\t\tcase OS.XK_ISO_Left_Tab: key = '\\t'; break;", "-\t\tcase OS.XK_space: key = ' '; break;", "-\t}", "-\t\t"]}], "num": 60387}