{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a5471ce70a2ef2598e6f0b28c0ac40f1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d6b97e81226fab523f971a512898822", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "fe9cf8b69b05605c0699efe7aea722d3e2396198", "commitAfterChange": "a76fbcdb2bea80d2aa22d622558bd4081d9e971a", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tbyte [] buffer = Converter.wcsToMbcs (null, string, true);", "-\tint ptr = OS.malloc (buffer.length);", "-\tOS.memmove (ptr, buffer, buffer.length);", "+\tchar [] text = new char [string.length ()];", "+\tstring.getChars (0, text.length, text, 0);", "+\tchar mnemonic = fixMnemonic (text);", "+\tbyte [] buffer = Converter.wcsToMbcs (null, text, true);", "+\tint ptr1 = OS.malloc (buffer.length);", "+\tOS.memmove (ptr1, buffer, buffer.length);", "+\tint ptr2 = 0;", "+\tif (mnemonic != 0) {", "+\t\tbyte [] buffer2 = Converter.wcsToMbcs (null, new char []{mnemonic}, true);", "+\t\tptr2 = OS.malloc (buffer2.length);", "+\t\tOS.memmove (ptr2, buffer2, buffer2.length);", "+\t}", "+\treplaceMnemonic (mnemonic, true, true);", "-\t\tOS.Pt_ARG_TEXT_STRING, ptr, 0,", "+\t\tOS.Pt_ARG_TEXT_STRING, ptr1, 0,", "+\t\tOS.Pt_ARG_ACCEL_KEY, ptr2, 0,", "-\tif (ptr != 0) OS.free (ptr);", "+\tOS.free (ptr1);", "+\tOS.free (ptr2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8632cc054954772bd26e8a5ac2ff481b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0fc225484e34e60481435b9a30ca929fcc229bc5", "commitAfterChange": "12b7359f9fe249b36672bf747669f5296fc9af7a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r void createDisplay (DeviceData data)", "signatureAfterChange": "\r void createDisplay (DeviceData data)", "diff": ["+\t/* \r", "+\t* On some DB Linux platforms, the default font list may not be properly\r", "+\t* initialized to contain a FontSet. This causes the input method to\r", "+\t* fail. The fix is to set the fallback resource with an appropriated\r", "+\t* font.\r\t*/\r", "+\tint ptr1 = 0, ptr2 = 0; \r", "+\tif (OS.IsLinux && OS.IsDBLocale) {\r", "+\t\tString resource = \"*fontList: -*-fixed-medium-r-*-*-12-*-*-*-*-*-*-*:\";\r", "+\t\tbyte [] buffer = Converter.wcsToMbcs (null, resource, true);\r", "+\t\tptr1 = OS.XtMalloc (buffer.length);\r", "+\t\tif (ptr1 != 0) OS.memmove (ptr1, buffer, buffer.length);\r", "+\t\tint [] spec = new int[]{ptr1, 0};\r", "+\t\tptr2 = OS.XtMalloc (spec.length * 4);\r", "+\t\tif (ptr2 != 0)OS.memmove (ptr2, spec, spec.length * 4);\r", "+\t\tOS.XtAppSetFallbackResources(xtContext, ptr2); \r", "+\t}\r", "+\t\r", "+\t\r", "+\tif (ptr2 != 0) {\r", "+\t\tOS.XtAppSetFallbackResources (xtContext, 0);\r", "+\t\tOS.XtFree (ptr2);\r", "+\t}\r", "+\tif (ptr1 != 0) OS.XtFree (ptr1);\r"]}], "num": 16048}