{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "875e77ea95935cfd585f984ec1403ecd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945d7cf08e1a3fd17635f68e7082b024", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "95548f568ccf2d0cabfc6561e1440be263c0c1e7", "commitAfterChange": "a1c0e494851568d744afe1962017864dee4259f2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void cut ()", "signatureAfterChange": " public void cut ()", "diff": ["-//\tPoint selection = getSelection ();", "-//\tif (selection.x == selection.y) return;", "-//\tint start = selection.x, end = selection.y;", "-//\tString text = getText ();", "-//\tString leftText = text.substring (0, start);", "-//\tString rightText = text.substring (end, text.length ());", "-//\tString oldText = text.substring (start, end);", "-//\tString newText = \"\";", "-//\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-//\t\tnewText = verifyText (newText, start, end, null);", "-//\t\tif (newText == null) return;", "-//\t}", "-//\tchar [] buffer = new char [oldText.length ()];", "-//\toldText.getChars (0, buffer.length, buffer, 0);", "-//\tcopyToClipboard (buffer);", "-//\tsetText (leftText + newText + rightText, false);", "-//\tstart += newText.length ();", "-//\tsetSelection (new Point (start, start));", "-//\tsendEvent (SWT.Modify);", "+\tPoint selection = getSelection ();", "+\tif (selection.x == selection.y) return;", "+\tint start = selection.x, end = selection.y;", "+\tString text = getText ();", "+\tString leftText = text.substring (0, start);", "+\tString rightText = text.substring (end, text.length ());", "+\tString oldText = text.substring (start, end);", "+\tString newText = \"\";", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tnewText = verifyText (newText, start, end, null);", "+\t\tif (newText == null) return;", "+\t}", "+\tchar [] buffer = new char [oldText.length ()];", "+\toldText.getChars (0, buffer.length, buffer, 0);", "+\tcopyToClipboard (buffer);", "+\tsetText (leftText + newText + rightText, false);", "+\tstart += newText.length ();", "+\tsetSelection (new Point (start, start));", "+\tsendEvent (SWT.Modify);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ab1b8714a8d13244caa56e5d62138c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "95548f568ccf2d0cabfc6561e1440be263c0c1e7", "commitAfterChange": "a1c0e494851568d744afe1962017864dee4259f2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-//\tPoint selection = getSelection ();", "-//\tint start = selection.x, end = selection.y;", "-//\tString text = getText ();", "-//\tString leftText = text.substring (0, start);", "-//\tString rightText = text.substring (end, text.length ());", "-//\tString newText = getClipboardText ();", "-//\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-//\t\tnewText = verifyText (newText, start, end, null);", "-//\t\tif (newText == null) return;", "-//\t}", "-//\tif (textLimit != LIMIT) {", "-//\t\tint charCount = text.length ();", "-//\t\tif (charCount - (end - start) + newText.length() > textLimit) {", "-//\t\t\tnewText = newText.substring(0, textLimit - charCount + (end - start));", "-//\t\t}", "-//\t}", "-//\tsetText (leftText + newText + rightText, false);", "-//\tstart += newText.length ();", "-//\tsetSelection (new Point (start, start));", "-//\tsendEvent (SWT.Modify);", "+\tPoint selection = getSelection ();", "+\tint start = selection.x, end = selection.y;", "+\tString text = getText ();", "+\tString leftText = text.substring (0, start);", "+\tString rightText = text.substring (end, text.length ());", "+\tString newText = getClipboardText ();", "+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tnewText = verifyText (newText, start, end, null);", "+\t\tif (newText == null) return;", "+\t}", "+\tif (textLimit != LIMIT) {", "+\t\tint charCount = text.length ();", "+\t\tif (charCount - (end - start) + newText.length() > textLimit) {", "+\t\t\tnewText = newText.substring(0, textLimit - charCount + (end - start));", "+\t\t}", "+\t}", "+\tsetText (leftText + newText + rightText, false);", "+\tstart += newText.length ();", "+\tsetSelection (new Point (start, start));", "+\tsendEvent (SWT.Modify);"]}], "num": 30790}