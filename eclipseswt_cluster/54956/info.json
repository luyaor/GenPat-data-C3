{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b2598a9ae65b2354e7d53c5ac3ade8c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17d2886882a74e85a07b75f52c2afb41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "572da1013dae45cb84a0f00ece08d879664a7f62", "commitAfterChange": "6da659a75a41e17f0f4632fbd4e9a4a71dad4a1d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["+\t", "+\t/* Initialize PRINTDLG fields, including DEVMODE. */", "+\tpd.Flags = OS.PD_RETURNDEFAULT;", "+\tOS.PrintDlg(pd);", "+", "+\t/*", "+\t * If user setup info from a previous print dialog was specified,", "+\t * then restore the previous DEVMODE struct.", "+\t */", "-\tif (printerData != null) {", "-\t\tbyte buffer [] = printerData.otherData;", "-\t\tif (buffer != null && buffer.length != 0) {", "-\t\t\t/* If user setup info from a previous print dialog was specified, restore the DEVMODE struct. */", "-\t\t\tlpInitData = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, buffer.length);", "-\t\t\tOS.MoveMemory(lpInitData, buffer, buffer.length);", "-\t\t\tpd.hDevMode = lpInitData;", "-\t\t}", "+\tbyte devmodeData [] = printerData.otherData;", "+\tif (devmodeData != null && devmodeData.length != 0) {", "+\t\tlpInitData = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, devmodeData.length);", "+\t\tOS.MoveMemory(lpInitData, devmodeData, devmodeData.length);", "+\t\tpd.hDevMode = lpInitData;", "+\t", "+\t/* Initialize the DEVMODE struct's orientation field from the printerData. */", "+\tint /*long*/ hMem = pd.hDevMode;", "+\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\tDEVMODE devmode = OS.IsUnicode ? (DEVMODE)new DEVMODEW () : new DEVMODEA ();", "+\tOS.MoveMemory(devmode, ptr, OS.IsUnicode ? OS.DEVMODEW_sizeof() : OS.DEVMODEA_sizeof());", "+\tdevmode.dmFields |= OS.DM_ORIENTATION;", "+\tdevmode.dmOrientation = printerData.orientation == PrinterData.PORTRAIT ?", "+\t\t\tOS.DMORIENT_PORTRAIT : OS.DMORIENT_LANDSCAPE;", "+\tOS.MoveMemory(ptr, devmode, OS.IsUnicode ? OS.DEVMODEW_sizeof() : OS.DEVMODEA_sizeof());", "+\tOS.GlobalUnlock(hMem);", "+", "-\tif (printToFile) pd.Flags |= OS.PD_PRINTTOFILE;", "-\tswitch (scope) {", "+\tif (printerData.printToFile) pd.Flags |= OS.PD_PRINTTOFILE;", "+\tswitch (printerData.scope) {", "-\tpd.nFromPage = (short) Math.min (0xFFFF, Math.max (1, startPage));", "-\tpd.nToPage = (short) Math.min (0xFFFF, Math.max (1, endPage));", "+\tpd.nFromPage = (short) Math.min (0xFFFF, Math.max (1, printerData.startPage));", "+\tpd.nToPage = (short) Math.min (0xFFFF, Math.max (1, printerData.endPage));", "-\t\tint /*long*/ hMem = pd.hDevNames;", "+\t\thMem = pd.hDevNames;", "-\t\tint /*long*/ ptr = OS.GlobalLock(hMem);", "+\t\tptr = OS.GlobalLock(hMem);", "+\t\tdevmode = OS.IsUnicode ? (DEVMODE)new DEVMODEW () : new DEVMODEA ();", "+\t\tOS.MoveMemory(devmode, ptr, OS.IsUnicode ? OS.DEVMODEW_sizeof() : OS.DEVMODEA_sizeof());", "+\t\tif ((devmode.dmFields & OS.DM_ORIENTATION) != 0) {", "+\t\t\tint dmOrientation = devmode.dmOrientation;", "+\t\t\tdata.orientation = dmOrientation == OS.DMORIENT_LANDSCAPE ? PrinterData.LANDSCAPE : PrinterData.PORTRAIT;", "+\t\t}", "-", "-\t\tendPage = data.endPage;", "-\t\tprintToFile = data.printToFile;", "-\t\tscope = data.scope;", "-\t\tstartPage = data.startPage;", "+\t\tprinterData = data;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d9a1cfe06ebae8ad94655c7a2770db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "956064920164af846897dbf9e7041081754b9dbf", "commitAfterChange": "0af6a7dcf02fe44885063157294405c3130cd181", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["-\t\t/* Initialize DEVMODE for the default printer. */", "-\t\tPRINTDLG pd = new PRINTDLG();", "-\t\tpd.lStructSize = PRINTDLG.sizeof;", "-\t\tpd.Flags = OS.PD_RETURNDEFAULT;", "-\t\tif (!OS.PrintDlg(pd)) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tif (pd.hDevMode != 0) {", "-\t\t\tint /*long*/ hGlobal = pd.hDevMode;", "-\t\t\tint /*long*/ ptr = OS.GlobalLock(hGlobal);", "-\t\t\tint size = OS.GlobalSize(hGlobal);", "-\t\t\tlpInitData = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, size);", "-\t\t\tOS.MoveMemory(lpInitData, ptr, size);", "-\t\t\tOS.GlobalUnlock(hGlobal);", "-\t\t\tOS.GlobalFree(pd.hDevMode);", "+\t\tif (!OS.IsWinCE) {", "+\t\t\tint /*long*/ [] hPrinter = new int /*long*/ [1];", "+\t\t\tOS.OpenPrinter(device, hPrinter, 0);", "+\t\t\tif (hPrinter[0] != 0) {", "+\t\t\t\tint dwNeeded = OS.DocumentProperties(0, hPrinter[0], device, 0, 0, 0);", "+\t\t\t\tif (dwNeeded >= 0) {", "+\t\t\t\t\tlpInitData = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, dwNeeded);", "+\t\t\t\t\tint rc = OS.DocumentProperties(0, hPrinter[0], device, lpInitData, 0, OS.DM_OUT_BUFFER);", "+\t\t\t\t\tif (rc != OS.IDOK) {", "+\t\t\t\t\t\tOS.HeapFree(hHeap, 0, lpInitData);", "+\t\t\t\t\t\tlpInitData = 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tOS.ClosePrinter(hPrinter[0]);", "+\t\t\t}", "-\t\tif (pd.hDevNames != 0) OS.GlobalFree(pd.hDevNames);", "-\tDEVMODE devmode = OS.IsUnicode ? (DEVMODE)new DEVMODEW () : new DEVMODEA ();", "-\tOS.MoveMemory(devmode, lpInitData, DEVMODE.sizeof);", "-\tdevmode.dmFields |= OS.DM_ORIENTATION;", "-\tdevmode.dmOrientation = data.orientation == PrinterData.LANDSCAPE ? OS.DMORIENT_LANDSCAPE : OS.DMORIENT_PORTRAIT;", "-\tif (data.copyCount != 1) {", "-\t\tdevmode.dmFields |= OS.DM_COPIES;", "-\t\tdevmode.dmCopies = (short)data.copyCount;", "-\t}", "-\tif (data.collate != false) {", "-\t\tdevmode.dmFields |= OS.DM_COLLATE;", "-\t\tdevmode.dmCollate = OS.DMCOLLATE_TRUE;", "-\t}", "-\tif (data.duplex != SWT.DEFAULT) {", "-\t\tdevmode.dmFields |= OS.DM_DUPLEX;", "-\t\tswitch (data.duplex) {", "-\t\t\tcase PrinterData.DUPLEX_SHORT_EDGE: devmode.dmDuplex = OS.DMDUP_HORIZONTAL; break;", "-\t\t\tcase PrinterData.DUPLEX_LONG_EDGE: devmode.dmDuplex = OS.DMDUP_VERTICAL; break;", "-\t\t\tdefault: devmode.dmDuplex = OS.DMDUP_SIMPLEX;", "+\tif (lpInitData != 0) {", "+\t\tDEVMODE devmode = OS.IsUnicode ? (DEVMODE)new DEVMODEW () : new DEVMODEA ();", "+\t\tOS.MoveMemory(devmode, lpInitData, DEVMODE.sizeof);", "+\t\tdevmode.dmFields |= OS.DM_ORIENTATION;", "+\t\tdevmode.dmOrientation = data.orientation == PrinterData.LANDSCAPE ? OS.DMORIENT_LANDSCAPE : OS.DMORIENT_PORTRAIT;", "+\t\tif (data.copyCount != 1) {", "+\t\t\tdevmode.dmFields |= OS.DM_COPIES;", "+\t\t\tdevmode.dmCopies = (short)data.copyCount;", "+\t\tif (data.collate != false) {", "+\t\t\tdevmode.dmFields |= OS.DM_COLLATE;", "+\t\t\tdevmode.dmCollate = OS.DMCOLLATE_TRUE;", "+\t\t}", "+\t\tif (data.duplex != SWT.DEFAULT) {", "+\t\t\tdevmode.dmFields |= OS.DM_DUPLEX;", "+\t\t\tswitch (data.duplex) {", "+\t\t\t\tcase PrinterData.DUPLEX_SHORT_EDGE: devmode.dmDuplex = OS.DMDUP_HORIZONTAL; break;", "+\t\t\t\tcase PrinterData.DUPLEX_LONG_EDGE: devmode.dmDuplex = OS.DMDUP_VERTICAL; break;", "+\t\t\t\tdefault: devmode.dmDuplex = OS.DMDUP_SIMPLEX;", "+\t\t\t}", "+\t\t}", "+\t\tOS.MoveMemory(lpInitData, devmode, DEVMODE.sizeof);", "-\tOS.MoveMemory(lpInitData, devmode, DEVMODE.sizeof);", "-"]}], "num": 54956}