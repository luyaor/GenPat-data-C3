{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4df33d298e79e022dd8c6027456ddb8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d74a92fc2870ca096c379e2d38132e94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "dc8419ad609087e1d696f25909aa2fbe9dc3ac30", "commitAfterChange": "eba5e3267357744c83a02289bba7c0c45fa3900d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  int dragSendDataProc(int theType, int dragSendRefCon, int theItemRef, int theDrag)", "signatureAfterChange": "  int dragSendDataProc(int theType, int dragSendRefCon, int theItemRef, int theDrag)", "diff": ["-\t// Except for FileTransfer (see #drag), only one item can be transferred", "-\t// in a Drag operation", "-\treturn OS.SetDragItemFlavorData(theDrag, theItemRef, theType, datum, datum.length, 0);", "+\tint rc = OS.SetDragItemFlavorData(theDrag, theItemRef, theType, datum, datum.length, 0);", "+\tif (rc == OS.noErr && transfer instanceof FileTransfer) {", "+\t\tfor (int i = 1; i < transferData.data.length; i++) {", "+\t\t\tdatum = transferData.data[i];", "+\t\t\tif (datum == null) return OS.cantGetFlavorErr;", "+\t\t\trc = OS.AddDragItemFlavor(theDrag, 1 + i, theType, datum, datum.length, 0);", "+\t\t\tif (rc != OS.noErr) break;", "+\t\t}", "+\t}", "+\treturn rc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fb65b1f5e4acb34c80e82cc8116aeb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/photon/org/eclipse/swt/program/Program.java", "commitBeforeChange": "8d68e19f4bda6e001e1363ed67c9cd15d0532283", "commitAfterChange": "1a364da4bc56e39627bed4944a7f24a0f474b234", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public boolean execute (String fileName)", "signatureAfterChange": "\r public boolean execute (String fileName)", "diff": ["-\tint index = command.indexOf (\"%f\");\r", "-\tif (index == -1) return false;\r", "-\tString prefix = command.substring (0, index);\r", "-\tString suffix = command.substring (index + 2, command.length ());\r", "+\tint index = -1;\r", "+\tString prefix = command, suffix = \"\", location = \"\";\r", "+\tString[] locations = {\"file://$PWD/@\", \"$PWD/@\", \"@\"};\r", "+\tfor (int i = 0; i < locations.length; i++) {", "+\t\tlocation = locations[i];", "+\t\tindex = command.indexOf (location);\r", "+\t\tif (index != -1) break;", "+\t}\r", "+\tif (index != -1) {\r", "+\t\tint start = 0;\r", "+\t\tprefix = command.substring (start, index);\r", "+\t\tstart = index + location.length() + 1;\r", "+\t\tif (start < command.length ()) {\r", "+\t\t\tsuffix = command.substring (start, command.length ());\r", "+\t\t}\r", "+\t}\r", "-\t\tCompatibility.exec(prefix + '\"' + fileName + '\"' + suffix);\r", "+\t\tCompatibility.exec(prefix + \" \"  + fileName + \" \" +  suffix);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c3670119342e65a8bc9d3f067b47fa8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "1eae529eff4ba86d52ae55af2111372fa464de5a", "commitAfterChange": "f89590887b1b1b7fcc7638e9efe42317778a7bfc", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": "  void releaseChild ()", "signatureAfterChange": "  void releaseChildren (boolean destroy)", "diff": ["-void releaseChild () {", "+void releaseChildren (boolean destroy) {", "+\t\tif (shell != null && !shell.isDisposed ()) {", "+\t\t\t\tshell.releaseChildren (false);", "+\tsuper.releaseChildren (destroy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d4aa8972a8e298fea151176a036990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "780deeed6b8d04c7f8256f57ee4b8ba670998a62", "commitAfterChange": "f6545bdd05853b79e0ef79ea07a3cd61ab49eba2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r int imageIndex (Image image)", "signatureAfterChange": "\r \r void releaseItems (TreeItem2 [] nodes)", "diff": ["-\t/* AW\r", "-\t*/\r", "-\treturn 0;\r", "+void releaseItems (TreeItem2 [] nodes /*, TVITEM tvItem */) {\r", "+\t\t\treleaseItems (sons /*, tvItem */);\r", "+\t\t/* AW\r", "+\t\t*/\r", "+\t\t\t/* AW\r", "+\t\t\t*/\r", "+\t\t\titems [hItem - FIRST_ROW_ID] = null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "273e3f08cefa7572482c7192db260e91", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void setItems (String [] items)", "signatureAfterChange": " public void setItems (String [] items)", "diff": ["-\tfor (int i= 0; i < items.length; i++) {", "-\t\tString string= items[i];", "-\t\tif (string == null)", "-\t\t\tbreak;", "-\t\tint sHandle= 0;", "-\t\ttry {", "-\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "-\t\t\tif (OS.AppendMenuItemTextWithCFString(fMenuHandle, sHandle, 0, fgCommandID++, null) != OS.kNoErr)", "-\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "-\t\t} finally {", "-\t\t\tif (sHandle != 0)", "-\t\t\t\tOS.CFRelease(sHandle);", "+\tif (fMenuHandle != 0) {", "+\t\tfor (int i= 0; i < items.length; i++) {", "+\t\t\tString string= items[i];", "+\t\t\tif (string == null)", "+\t\t\t\tbreak;", "+\t\t\tint sHandle= 0;", "+\t\t\ttry {", "+\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "+\t\t\t\tif (OS.AppendMenuItemTextWithCFString(fMenuHandle, sHandle, 0, fgCommandID++, null) != OS.kNoErr)", "+\t\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\t} finally {", "+\t\t\t\tif (sHandle != 0)", "+\t\t\t\t\tOS.CFRelease(sHandle);", "+\t\t\t}", "+\t\t}", "+\t\tOS.SetControl32BitMaximum(handle, items.length);", "+\t} else {", "+\t\tremoveAll();", "+\t\tfor (int i= 0; i < items.length; i++) {", "+\t\t\tString string= items[i];", "+\t\t\tif (string == null)", "+\t\t\t\tbreak;", "+\t\t\tint sHandle= 0;", "+\t\t\ttry {", "+\t\t\t\tsHandle= OS.CFStringCreateWithCharacters(string);", "+\t\t\t\tif (OS.HIComboBoxAppendTextItem(handle, sHandle) != OS.kNoErr)", "+\t\t\t\t\terror (SWT.ERROR_ITEM_NOT_ADDED);", "+\t\t\t} finally {", "+\t\t\t\tif (sHandle != 0)", "+\t\t\t\t\tOS.CFRelease(sHandle);", "+\t\t\t}", "-\tOS.SetControl32BitMaximum(fPopupButton, items.length);"]}], "num": 47502}