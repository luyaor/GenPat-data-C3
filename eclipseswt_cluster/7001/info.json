{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4722fad6b9679ab3e6f022368d657096", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3aacc3b90016e750d9d3d3e75145b52", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "d77633988a48aa27742145945d84b4e53aa213bf", "commitAfterChange": "09569eb868998ecded48e7c53c1561f87aed417c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "\r void doColumnLeft()", "signatureAfterChange": "\r void doColumnLeft()", "diff": ["+\t\t\t\t\tif (bidi.getCaretPosition(caretOffset - lineOffset) < horizontalScrollOffset) {\r", "+\t\t\t\t\t\t// make beginning of R2L segment visible before going left, to L2R segment\r", "+\t\t\t\t\t\t// important if R2L segment ends at visual left in order to scroll all the \r", "+\t\t\t\t\t\t/// way to the left. Fixes 1GKM3XS\r", "+\t\t\t\t\t\tshowCaret();\r", "+\t\t\t\t\t}\r", "-\t\t\t\t\twhile (caretOffset - lineOffset > 1 && bidi.isRightToLeft(caretOffset - lineOffset - 2)) {\r", "+\t\t\t\t\twhile (caretOffset - lineOffset > 0 && bidi.isRightToLeft(caretOffset - lineOffset - 1)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a9a70a904d2ffd1901ea1100e934a00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CLabel.java", "commitBeforeChange": "2ef812bdb838c83f8c956d27e5a51fc1fd6f51b2", "commitAfterChange": "c287288b6b27ae417e7c5f8816c2ca06c8020d9d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private static int checkStyle (int style)", "signatureAfterChange": "\r private static int checkStyle (int style)", "diff": ["-\tstyle |= SWT.NO_FOCUS | SWT.NO_BACKGROUND;\r", "+\tstyle |= SWT.NO_FOCUS;\r", "+\t// The default background on carbon is not a solid color but a texture.\r", "+\t// To show the correct default background on carbon, we must\r", "+\t// allow the OS to draw it and therefore, we can not use the \r", "+\t// NO_BACKGROUND style.  This is not an issue because\r", "+\t// carbon has double buffering which makes the NO_BACKGROUND style\r", "+\t// unneccessary.\r", "+\tif (!\"carbon\".equals(SWT.getPlatform()))\r", "+\t\tstyle |= SWT.NO_BACKGROUND;\r"]}], "num": 7001}