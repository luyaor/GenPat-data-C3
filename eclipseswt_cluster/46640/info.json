{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c04ce05f421d7a9dd94cd1b968cf6ec5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3bc031a9e38f571e3cb4613d44fbb1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "25e0b9cefcf6aad913e775e22fb19b1e3de2a216", "commitAfterChange": "abdb7df6c5ef7f31dd770f626e22ad0d039e1629", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t\t} else {", "-\t\t\tint length = text.length (); ", "-\t\t\tif (length != 0) {", "-\t\t\t\tint [] ptr = new int [1];", "-\t\t\t\tOS.GetControlData (handle, (short) 0 , OS.kControlStaticTextCFStringTag, 4, ptr, null);", "-\t\t\t\tif (ptr [0] != 0) {", "-\t\t\t\t\torg.eclipse.swt.internal.carbon.Point ioBounds = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\t\t\tif ((style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT) ioBounds.h = (short) wHint;\t\t\t\t\t", "-\t\t\t\t\tif (font == null) {", "-\t\t\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) defaultThemeFont (), OS.kThemeStateActive, ioBounds.h != 0, ioBounds, null);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tint [] currentPort = new int [1];", "-\t\t\t\t\t\tOS.GetPort (currentPort);", "-\t\t\t\t\t\tOS.SetPortWindowPort (OS.GetControlOwner (handle));", "-\t\t\t\t\t\tOS.TextFont (font.id);", "-\t\t\t\t\t\tOS.TextFace (font.style);", "-\t\t\t\t\t\tOS.TextSize (font.size);", "-\t\t\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) OS.kThemeCurrentPortFont, OS.kThemeStateActive, ioBounds.h != 0, ioBounds, null);", "-\t\t\t\t\t\tOS.SetPort (currentPort [0]);", "-\t\t\t\t\t}", "-\t\t\t\t\twidth = ioBounds.h;", "-\t\t\t\t\theight = ioBounds.v;", "-\t\t\t\t}", "-\t\t\t\tOS.CFRelease (ptr [0]);", "-\t\t\t} else {", "-\t\t\t\tFont font = getFont ();", "-\t\t\t\tFontInfo info = new FontInfo ();", "-\t\t\t\tOS.FetchFontInfo(font.id, font.size, font.style, info);", "-\t\t\t\tint fontHeight = info.ascent + info.descent + info.leading;", "-\t\t\t\theight = fontHeight;", "-\t\t\t}", "+\t\t} else {\t\t\t", "+\t\t\tint [] ptr = new int [1];", "+\t\t\tOS.GetControlData (handle, (short) 0 , OS.kControlStaticTextCFStringTag, 4, ptr, null);", "+\t\t\tPoint size = textExtent (ptr [0], (style & SWT.WRAP) != 0 && wHint != SWT.DEFAULT ? wHint : 0);", "+\t\t\tif (ptr [0] != 0) OS.CFRelease (ptr [0]);", "+\t\t\twidth = size.x;", "+\t\t\theight = size.y;\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b68252f962e00cc6064aa64202f846c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "d29b0deb91882d8f4986967d4206e0487a1c2d91", "commitAfterChange": "06c0901221fc96298c7fd5f4b864fb1cc7a31d9c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\t} else {", "-\t\tint [] ptr = new int [1];", "-\t\tOS.CopyControlTitleAsCFString (handle, ptr);", "-\t\tif (ptr [0] != 0) {", "-\t\t\torg.eclipse.swt.internal.carbon.Point ioBounds = new org.eclipse.swt.internal.carbon.Point ();", "-\t\t\tif (font == null) {", "-\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) defaultThemeFont (), OS.kThemeStateActive, false, ioBounds, null);", "-\t\t\t} else {", "-\t\t\t\tint [] currentPort = new int [1];", "-\t\t\t\tOS.GetPort (currentPort);", "-\t\t\t\tOS.SetPortWindowPort (OS.GetControlOwner (handle));", "-\t\t\t\tOS.TextFont (font.id);", "-\t\t\t\tOS.TextFace (font.style);", "-\t\t\t\tOS.TextSize (font.size);", "-\t\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) OS.kThemeCurrentPortFont, OS.kThemeStateActive, false, ioBounds, null);", "-\t\t\t\tOS.SetPort (currentPort [0]);", "-\t\t\t}", "-\t\t\twidth = ioBounds.h;", "-\t\t\theight = ioBounds.v;", "-\t\t\tOS.CFRelease (ptr [0]);", "+\t}", "+\tint [] ptr = new int [1];", "+\tOS.CopyControlTitleAsCFString (handle, ptr);", "+\tif (ptr [0] != 0) {", "+\t\torg.eclipse.swt.internal.carbon.Point ioBounds = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tif (font == null) {", "+\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) defaultThemeFont (), OS.kThemeStateActive, false, ioBounds, null);", "+\t\t\tint [] currentPort = new int [1];", "+\t\t\tOS.GetPort (currentPort);", "+\t\t\tOS.SetPortWindowPort (OS.GetControlOwner (handle));", "+\t\t\tOS.TextFont (font.id);", "+\t\t\tOS.TextFace (font.style);", "+\t\t\tOS.TextSize (font.size);", "+\t\t\tOS.GetThemeTextDimensions (ptr [0], (short) OS.kThemeCurrentPortFont, OS.kThemeStateActive, false, ioBounds, null);", "+\t\t\tOS.SetPort (currentPort [0]);", "+\t\t}", "+\t\twidth += ioBounds.h;", "+\t\theight = Math.max (height, ioBounds.v);", "+\t\tOS.CFRelease (ptr [0]);", "+\t\tif (image != null && isImage) width += 3;", "+\t} else {", "+\t\tif (image == null) {", "-\t\t\twidth += 10;", "-\t\t\theight += 10;", "+\t\t\twidth += 8;", "+\t\t\theight += 8;"]}], "num": 46640}