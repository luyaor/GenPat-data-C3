{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85f44167f7886d3482d9c016ac6ee387", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abad9e1e44ad12b11e5b7176e63da579", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "commitAfterChange": "1a876750782f037ea9cd2cbd6b3dfc67d39d1b46", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "  \tstatic int atkValue_set_current_value (int atkObject, int value)", "signatureAfterChange": "  \tstatic int atkValue_set_current_value (int atkObject, int value)", "diff": ["-\t\t\tif (accessible != null) {", "-\t\t\t\tVector listeners = accessible.accessibleValueListeners;", "-\t\t\t\tint length = listeners.size();", "-\t\t\t\tif (length > 0) {", "-\t\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "-\t\t\t\t\tevent.value = getGValue(value);", "-\t\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "-\t\t\t\t\t\tlistener.setCurrentValue(event);", "-\t\t\t\t\t}", "-\t\t\t\t\treturn 0;", "+\t\t\tVector listeners = accessible.accessibleValueListeners;", "+\t\t\tint length = listeners.size();", "+\t\t\tif (length > 0) {", "+\t\t\t\tAccessibleValueEvent event = new AccessibleValueEvent(accessible);", "+\t\t\t\tevent.value = getGValue(value);", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tAccessibleValueListener listener = (AccessibleValueListener) listeners.elementAt(i);", "+\t\t\t\t\tlistener.setCurrentValue(event);", "+\t\t\t\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e6c028c1a5af1c4e69db9aab8f8333", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "9e4aa4f79d8d08d57d797296be9d3269723e755b", "commitAfterChange": "c7a37ce473beb9045c99b97900ef561257b98af2", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 54, "signatureBeforeChange": " \t \tid getParentAttribute (int childID)", "signatureAfterChange": " \t \tid getParentAttribute (int childID)", "diff": ["-\t\t// Returning null here means 'let Cocoa figure it out.'", "-\t\tif (childID == ACC.CHILDID_SELF)", "-\t\t\treturn null;", "-\t\telse", "-\t\t\treturn new id(OS.NSAccessibilityUnignoredAncestor(control.view.id));", "+\t\tid returnValue = null;", "+\t\tif (childID == ACC.CHILDID_SELF) {", "+\t\t\tif (parent != null) {", "+\t\t\t\tif (parent.delegate != null) {", "+\t\t\t\t\treturnValue = parent.delegate;", "+\t\t\t\t} else {", "+\t\t\t\t\treturnValue = new id(OS.NSAccessibilityUnignoredAncestor(accessibleHandle(parent).id));", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t// Returning null here means 'let Cocoa figure it out.'", "+\t\t\t\treturnValue = null;", "+\t\t\t}", "+\t\t} else {", "+\t\t\treturnValue = new id(OS.NSAccessibilityUnignoredAncestor(accessibleHandle(this).id));", "+\t\t}", "+\t\treturn returnValue;"]}], "num": 6233}