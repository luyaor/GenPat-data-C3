{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f652f6d3be8de8f87554b4010fda7b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41f7ae7415d8a7627ba10ebfabc5c9b2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "40cdf2a9aca64c3d5be03c7e511afd690ece84ea", "commitAfterChange": "a4b7aa3a6538ae186e20f13ca84baaf05474bec5", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " int getOffsetAtPoint(int x, int y)", "signatureAfterChange": " int getOffsetAtPoint(int x, int y)", "diff": ["+int getOffsetAtPoint(int x, int y) {", "+\tint lineIndex = getLineIndex(y);", "+\ty -= getLinePixel(lineIndex);", "+\treturn getOffsetAtPoint(x, y, lineIndex);", "+}", "-int getOffsetAtPoint(int x, int y) {", "-\tint lineIndex = getLineIndex(y);", "-\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\ty -= getLinePixel(lineIndex);", "-\tint[] trailing = new int[1];", "-\tif (wordWrap) {", "-\t\t//TODO", "-\t}", "-\t", "-\tadvancing = false;", "-\t\tint lineInParagraph = layout.getLineIndex(offsetInLine);", "-\t\tint lineLength;", "-\t\tif (lineInParagraph + 1 == layout.getLineCount()) {", "-\t\t\tlineLength = layout.getLineOffsets()[lineInParagraph + 1];", "-\t\t} else {", "-\t\t\tlineLength = Math.max(0, layout.getLineOffsets()[lineInParagraph + 1] - 1);", "-\t\t}", "-\t\tif (offsetInLine + trailing[0] >= lineLength) {", "-\t\t\toffsetInLine = lineLength;", "-\t\t\tadvancing = true;", "-\t\t\tadvancing  = (level ^ trailingLevel) != 0;", "-\treturn offsetInLine + lineOffset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a07ff8fa8f386bd5d5ecc8593af2ccd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 178, "signatureBeforeChange": " int getXAtOffset(String line, int lineIndex, int offsetInLine)", "signatureAfterChange": " Point getPointAtOffset(int offset)", "diff": ["-int getXAtOffset(String line, int lineIndex, int offsetInLine) {", "-\tint x = 0;", "+Point getPointAtOffset(int offset) {", "+\tint lineIndex = content.getLineAtOffset(offset);", "+\tString line = content.getLine(lineIndex);", "+\tint lineOffset = content.getOffsetAtLine(lineIndex);", "+\tint offsetInLine = offset - lineOffset;", "+\tPoint point;", "-\t\tint lineOffset = content.getOffsetAtLine(lineIndex);", "-\t\tTextLayout layout = renderer.getTextLayout(line, lineOffset);", "+\t\tTextLayout layout = renderer.getTextLayout(lineIndex);", "-\t\t\tx = layout.getLocation(offsetInLine, false).x;", "+\t\t\tpoint = layout.getLocation(offsetInLine, false);", "-\t\t\tx = layout.getLocation(offsetInLine - 1, true).x;", "+\t\t\tpoint = layout.getLocation(offsetInLine - 1, true);", "+\t} else {", "+\t\tpoint = new Point(0, 0);", "-\treturn x + leftMargin - horizontalScrollOffset;", "+\tpoint.x += leftMargin - horizontalScrollOffset;", "+\tpoint.y += getLinePixel(lineIndex);", "+\treturn point;"]}], "num": 32558}