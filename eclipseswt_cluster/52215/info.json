{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fde3c76fe37c64588dc3aa9c7c18152f", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33c662a0b58902363935d679edf81083", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/External.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  int callJava (int functionId, int args, int returnPtr)", "signatureAfterChange": "  int callJava (int functionId, int args, int returnPtr)", "diff": ["-\t\tObject temp = (Object[])convertToJava (variant, type[0]);", "-\t\tif (temp instanceof Object[]) {", "-\t\t\tObject[] arguments = (Object[])temp;", "-\t\t\ttry {", "-\t\t\t\treturnValue = function.function (arguments);", "-\t\t\t} catch (Exception e) {", "-\t\t\t\treturnValue = Mozilla.ERROR_ID + ':' + e.getLocalizedMessage();", "+\t\ttry {", "+\t\t\tObject temp = (Object[])convertToJava (variant, type[0]);", "+\t\t\tif (temp instanceof Object[]) {", "+\t\t\t\tObject[] arguments = (Object[])temp;", "+\t\t\t\ttry {", "+\t\t\t\t\treturnValue = function.function (arguments);", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t/* exception during function invocation */", "+\t\t\t\t\treturnValue = Mozilla.ERROR_ID + ':' + e.getLocalizedMessage ();", "+\t\t\t\t}", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\t/* invalid argument value type */", "+\t\t\tif (function.isEvaluate) {", "+\t\t\t\t/* notify the evaluate function so that a java error can be thrown */", "+\t\t\t\tfunction.function (new String[] {IE.ERROR_ID + ':' + new SWTException (SWT.ERROR_INVALID_RETURNVALUE).getLocalizedMessage ()});", "+\t\t\t}", "+\t\t\treturnValue = Mozilla.ERROR_ID + ':' + e.getLocalizedMessage ();", "-\tnsIVariant variant = convertToJS (returnValue, componentManager);", "+\tnsIVariant variant;", "+\ttry {", "+\t\tvariant = convertToJS (returnValue, componentManager);", "+\t} catch (SWTException e) {", "+\t\t/* invalid return value type */", "+\t\tvariant = convertToJS (Mozilla.ERROR_ID + ':' + e.getLocalizedMessage (), componentManager);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5edca1d898cfd8b8d10ca457a8eaa38d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  int Invoke (int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "signatureAfterChange": "  int Invoke (int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "diff": ["-\tObject temp = convertToJava (variant);", "-\tvariant.dispose ();", "+\tIE ie = (IE)((Browser)getParent ().getParent ()).webBrowser;", "+\tObject key = new Integer (index);", "+\tBrowserFunction function = (BrowserFunction)ie.functions.get (key);", "-\tif (temp instanceof Object[]) {", "-\t\tObject[] args = (Object[])temp;", "-\t\tIE ie = (IE)((Browser)getParent ().getParent ()).webBrowser;", "-\t\tObject key = new Integer (index);", "-\t\tBrowserFunction function = (BrowserFunction)ie.functions.get (key);", "-\t\tif (function != null) {", "-\t\t\ttry {", "-\t\t\t\treturnValue = function.function (args);", "-\t\t\t} catch (Exception e) {", "-\t\t\t\treturnValue = IE.ERROR_ID + ':' + e.getLocalizedMessage ();", "+\tif (function != null) {", "+\t\ttry {", "+\t\t\tObject temp = convertToJava (variant);", "+\t\t\tif (temp instanceof Object[]) {", "+\t\t\t\tObject[] args = (Object[])temp;", "+\t\t\t\ttry {", "+\t\t\t\t\treturnValue = function.function (args);", "+\t\t\t\t} catch (Exception e) {", "+\t\t\t\t\t/* exception during function invocation */", "+\t\t\t\t\treturnValue = IE.ERROR_ID + ':' + e.getLocalizedMessage ();", "+\t\t\t\t}", "+\t\t} catch (IllegalArgumentException e) {", "+\t\t\t/* invalid argument value type */", "+\t\t\tif (function.isEvaluate) {", "+\t\t\t\t/* notify the function so that a java error can be thrown */", "+\t\t\t\tfunction.function (new String[] {IE.ERROR_ID + ':' + new SWTException (SWT.ERROR_INVALID_RETURNVALUE).getLocalizedMessage ()});", "+\t\t\t}", "+\t\t\treturnValue = IE.ERROR_ID + ':' + e.getLocalizedMessage ();", "+\tvariant.dispose ();", "-\t\t\tvariant = convertToJS (returnValue);", "+\t\t\ttry {", "+\t\t\t\tvariant = convertToJS (returnValue);", "+\t\t\t} catch (SWTException e) {", "+\t\t\t\t/* invalid return value type */", "+\t\t\t\tvariant = convertToJS (IE.ERROR_ID + ':' + e.getLocalizedMessage ());", "+\t\t\t}"]}], "num": 52215}