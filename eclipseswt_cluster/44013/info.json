{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "764278d1307c4826ef00710d2af7ba82", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2427fc19500c8dff50e2ef39083ed6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "8541d666faa16632c6d0a6e1bdf5d08e945f9942", "commitAfterChange": "3b96b6ce94a7eb22d7c0dac94263ef2546a9824c", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (int wParam, int lParam)", "diff": ["+\t\tcase OS.TBN_HOTITEMCHANGE:", "+\t\t\tif (!OS.IsWinCE) {", "+\t\t\t\tNMTBHOTITEM lpnmhi = new NMTBHOTITEM ();", "+\t\t\t\tOS.MoveMemory (lpnmhi, lParam, NMTBHOTITEM.sizeof);", "+\t\t\t\tswitch (lpnmhi.dwFlags) {", "+\t\t\t\t\tcase OS.HICF_ARROWKEYS:", "+\t\t\t        \tRECT client = new RECT ();", "+\t\t\t        \tOS.GetClientRect (handle, client);", "+\t\t\t        \tint index = OS.SendMessage (handle, OS.TB_COMMANDTOINDEX, lpnmhi.idNew, 0);", "+\t\t\t        \tRECT rect = new RECT ();", "+\t\t\t        \tOS.SendMessage (handle, OS.TB_GETITEMRECT, index, rect);", "+\t\t\t            if (rect.left >= client.right || rect.top >= client.bottom) {", "+\t\t                \treturn LRESULT.ONE;", "+\t\t                }", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c706abbe26c7d089221bccf9359e5c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "6c60a1c454119ad6b472aeb4263a0a445c965587", "commitAfterChange": "1d50514fe095156d3ff099c9fc9895bec81d60ae", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "diff": ["+\t\t\t/*", "+\t\t\t* Bug in Windows.  When a tree item that has an image", "+\t\t\t* with alpha is expanded or collapsed, the area where", "+\t\t\t* the image is drawn is not erased before it is drawn.", "+\t\t\t* This means that the image gets darker each time.", "+\t\t\t* The fix is to redraw the item.", "+\t\t\t*/", "+\t\t\tif (!OS.IsWinCE && OS.COMCTL32_MAJOR >= 6) {", "+\t\t\t\tif (imageList != null) {", "+\t\t\t\t\tTVITEM tvItem = new TVITEM ();", "+\t\t\t\t\tint offset = NMHDR.sizeof + 4 + TVITEM.sizeof;", "+\t\t\t\t\tOS.MoveMemory (tvItem, lParam + offset, TVITEM.sizeof);", "+\t\t\t\t\tif (tvItem.hItem != 0) {", "+\t\t\t\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\t\t\t\t\tif ((bits & OS.TVS_FULLROWSELECT) == 0) {", "+\t\t\t\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\t\t\t\trect.left = tvItem.hItem;", "+\t\t\t\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect);", "+\t\t\t\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f1b90a18aba227fb28f72ce6995251", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 54, "signatureBeforeChange": " void manageChildren ()", "signatureAfterChange": "  int kEventControlContextualMenuClick (int nextHandler, int theEvent, int userData)", "diff": ["-void manageChildren () {", "-/* AW", "-\tOS.XtSetMappedWhenManaged (handle, false);", "-\tOS.XtManageChild (handle);", "-\tint [] argList = {OS.XmNborderWidth, 0};", "-\tOS.XtGetValues (handle, argList, argList.length / 2);", "-\tOS.XtResizeWidget (handle, 1, 1, argList [1]);", "-\tOS.XtSetMappedWhenManaged (handle, true);", "-*/", "-}", "+int kEventControlContextualMenuClick (int nextHandler, int theEvent, int userData) {", "+\tif (menu != null && !menu.isDisposed ()) {", "+\t\torg.eclipse.swt.internal.carbon.Point pt = new org.eclipse.swt.internal.carbon.Point ();", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeQDPoint, null, pt.sizeof, null, pt);", "+\t\tRect rect = new Rect ();", "+\t\tint window = OS.GetControlOwner (handle);", "+\t\tOS.GetWindowBounds (window, (short) OS.kWindowContentRgn, rect);", "+\t\tmenu.setLocation (pt.h + rect.left, pt.v + rect.top);", "+\t\tmenu.setVisible (true);", "+\t\treturn OS.noErr;", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}"]}], "num": 44013}