{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72e268225aa1760b8a3e2fa8b25f92f7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac185dd3bacf487699b2a9fb195c3fb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/NSBitmapImageRep.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(int planes, int width, int height, int bps, int spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int rBytes, int pBits)", "signatureAfterChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(long planes, long width, long height, long bps, long spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long rBytes, long pBits)", "diff": ["-public NSBitmapImageRep initWithBitmapDataPlanes(int /*long*/ planes, int /*long*/ width, int /*long*/ height, int /*long*/ bps, int /*long*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int /*long*/ rBytes, int /*long*/ pBits) {", "-\tint /*long*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, rBytes, pBits);", "+public NSBitmapImageRep initWithBitmapDataPlanes(long /*int*/ planes, long /*int*/ width, long /*int*/ height, long /*int*/ bps, long /*int*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long /*int*/ rBytes, long /*int*/ pBits) {", "+\tlong /*int*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, rBytes, pBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ad948709941ae63914b20163c012b76", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "signatureAfterChange": "  long callWindowProc (long hwnd, int msg, long wParam, long lParam, boolean forceSelect)", "diff": ["-int /*long*/ callWindowProc (int /*long*/ hwnd, int msg, int /*long*/ wParam, int /*long*/ lParam, boolean forceSelect) {", "+long /*int*/ callWindowProc (long /*int*/ hwnd, int msg, long /*int*/ wParam, long /*int*/ lParam, boolean forceSelect) {", "-\t\t\tint /*long*/ hwndParent = OS.GetParent (handle), hwndOwner = 0;", "+\t\t\tlong /*int*/ hwndParent = OS.GetParent (handle), hwndOwner = 0;", "-\tint /*long*/ code = 0;", "+\tlong /*int*/ code = 0;", "-\t\tint /*long*/ hDC = OS.BeginPaint (hwnd, ps);", "+\t\tlong /*int*/ hDC = OS.BeginPaint (hwnd, ps);", "-\t\t\t\tint /*long*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t", "+\t\t\t\tlong /*int*/ hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3bd5010daa592844806fbf0254b4820", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/HelperAppLauncherDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  int PromptForSaveToFile (int arg0, int arg1, int arg2, int arg3, int arg4)", "signatureAfterChange": "  int PromptForSaveToFile (long arg0, long arg1, long arg2, long arg3, long arg4)", "diff": ["-int PromptForSaveToFile (int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4) {", "-\tint /*long*/ aDefaultFile, aSuggestedFileExtension, _retval;", "+int PromptForSaveToFile (long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4) {", "+\tlong /*int*/ aDefaultFile, aSuggestedFileExtension, _retval;", "-\tint /*long*/[] result = new int /*long*/[1];", "+\tlong /*int*/[] result = new long /*int*/[1];"]}], "num": 46341}