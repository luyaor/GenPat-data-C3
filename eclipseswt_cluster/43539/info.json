{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94aaca6576e260a65d564bb56a562cd0", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9349618a9c39b63c3974a0cc1abe1bb6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "c83efdce66683ce71701c76019258bb35c80359f", "commitAfterChange": "285bcb19a810f0b50adfb9ecd453fd68b45ebe38", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["-\t\t\t1, null, 0, null, null, -1, -1, source.type,", "-\t\t\tsource.x, source.y, source.disposalMethod, source.delayTime);", "+\t\t\t1, null, 0, null, null, -1, -1, 0, 0, 0, 0, 0);", "+", "+\t\tbyte[] newReds = new byte[]{0, (byte)255}, newGreens = newReds, newBlues = newReds;", "-\t\tif (palette.isDirect) ImageData.blit(ImageData.BLIT_SRC,", "-\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, 0, 0, 0,", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "-\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, 0, 0, 0,", "-\t\t\tfalse, false);", "-\t\telse ImageData.blit(ImageData.BLIT_SRC,", "-\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, null, null, null,", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "-\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, null, null, null,", "-\t\t\tfalse, false);", "+\t\tif (palette.isDirect) {", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,", "+\t\t\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, palette.redMask, palette.greenMask, palette.blueMask,", "+\t\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "+\t\t\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, newReds, newGreens, newBlues,", "+\t\t\t\t\tfalse, false);", "+\t\t} else {", "+\t\t\tRGB[] rgbs = palette.getRGBs();", "+\t\t\tint length = rgbs.length;", "+\t\t\tbyte[] srcReds = new byte[length];", "+\t\t\tbyte[] srcGreens = new byte[length];", "+\t\t\tbyte[] srcBlues = new byte[length];", "+\t\t\tfor (int i = 0; i < rgbs.length; i++) {", "+\t\t\t\tRGB rgb = rgbs[i];", "+\t\t\t\tif (rgb == null) continue;", "+\t\t\t\tsrcReds[i] = (byte)rgb.red;", "+\t\t\t\tsrcGreens[i] = (byte)rgb.green;", "+\t\t\t\tsrcBlues[i] = (byte)rgb.blue;", "+\t\t\t}", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,", "+\t\t\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, srcReds, srcGreens, srcBlues,", "+\t\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "+\t\t\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, newReds, newGreens, newBlues,", "+\t\t\t\t\tfalse, false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b177e674bd2ce719fba3308767e5c58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "feef6c887286a93c710a3a2caa3f5b5c57129f11", "commitAfterChange": "c83efdce66683ce71701c76019258bb35c80359f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["-\t\t\t1, null, 0, null, null, -1, -1, source.type,", "-\t\t\tsource.x, source.y, source.disposalMethod, source.delayTime);", "+\t\t\t1, null, 0, null, null, -1, -1, 0, 0, 0, 0, 0);", "+", "+\t\tbyte[] newReds = new byte[]{0, (byte)255}, newGreens = newReds, newBlues = newReds;", "-\t\tif (palette.isDirect) ImageData.blit(ImageData.BLIT_SRC,", "-\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, 0, 0, 0,", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "-\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, 0, 0, 0,", "-\t\t\tfalse, false);", "-\t\telse ImageData.blit(ImageData.BLIT_SRC,", "-\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, null, null, null,", "-\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "-\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, null, null, null,", "-\t\t\tfalse, false);", "+\t\tif (palette.isDirect) {", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,", "+\t\t\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, palette.redMask, palette.greenMask, palette.blueMask,", "+\t\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "+\t\t\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, newReds, newGreens, newBlues,", "+\t\t\t\t\tfalse, false);", "+\t\t} else {", "+\t\t\tRGB[] rgbs = palette.getRGBs();", "+\t\t\tint length = rgbs.length;", "+\t\t\tbyte[] srcReds = new byte[length];", "+\t\t\tbyte[] srcGreens = new byte[length];", "+\t\t\tbyte[] srcBlues = new byte[length];", "+\t\t\tfor (int i = 0; i < rgbs.length; i++) {", "+\t\t\t\tRGB rgb = rgbs[i];", "+\t\t\t\tif (rgb == null) continue;", "+\t\t\t\tsrcReds[i] = (byte)rgb.red;", "+\t\t\t\tsrcGreens[i] = (byte)rgb.green;", "+\t\t\t\tsrcBlues[i] = (byte)rgb.blue;", "+\t\t\t}", "+\t\t\tImageData.blit(ImageData.BLIT_SRC,", "+\t\t\t\t\tsource.data, source.depth, source.bytesPerLine, source.getByteOrder(), 0, 0, source.width, source.height, srcReds, srcGreens, srcBlues,", "+\t\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,", "+\t\t\t\t\tnewSource.data, newSource.depth, newSource.bytesPerLine, newSource.getByteOrder(), 0, 0, newSource.width, newSource.height, newReds, newGreens, newBlues,", "+\t\t\t\t\tfalse, false);", "+\t\t}"]}], "num": 43539}