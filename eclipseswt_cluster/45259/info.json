{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15f73ac888c7048d3bcbc5db09a8bbca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab12f49e69d44f84779e3d9d0c2a1857", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "47bba97cf3bb9b9bd3dfcc41607a556b634ddd8a", "commitAfterChange": "ef2bef8e69e9295ff8d1ac77fce48fb93126d77b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void _setImage (Image image)", "signatureAfterChange": "  void _setImage (Image image)", "diff": ["+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Bug in Windows.  For some reason in Windows XP only, indexed palette", "+\t\t\t\t\t\t* bitmaps are not drawn properly even though the screen depth can", "+\t\t\t\t\t\t* handle all colors in the palette.  The fix is to use a higher depth", "+\t\t\t\t\t\t* bitmap instead.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tif (data.depth <= 8 && display.getDepth () > 8) {", "+\t\t\t\t\t\t\timage2 = new Image (display, data.width, data.height);", "+\t\t\t\t\t\t\tGC gc = new GC (image2);", "+\t\t\t\t\t\t\tgc.drawImage (image, 0, 0);", "+\t\t\t\t\t\t\tgc.dispose ();", "+\t\t\t\t\t\t\thImage = image2.handle;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be618d1b25bd19353bfe72b5ff38d61", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "c46db4ee1b83354582b863c1f47d48bf7bad60a5", "commitAfterChange": "43367748419b4046dd62769833e2f754a5a84bbf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void resizeHandle (int width, int height)", "signatureAfterChange": "  void resizeHandle (int width, int height)", "diff": ["+\tOS.gtk_widget_set_size_request(handle, -1,-1);", "+\tGtkAllocation alloc = new GtkAllocation();", "+\talloc.width = width;", "+\talloc.height = height;", "+\tOS.gtk_widget_size_allocate(frameHandle, alloc);", "+\tint w = OS.GTK_WIDGET_WIDTH(handle), h = OS.GTK_WIDGET_HEIGHT(handle);", "-\t//TEMPORARY CODE", "-\tOS.gtk_widget_set_size_request (handle, width, height);", "+\tOS.gtk_widget_set_size_request (handle, w, h);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ae92e604cdd3e915054b4ea7e2c669", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "76097374ea0b9824b33cdc5c544b526a4229ae52", "commitAfterChange": "840c9b408c4fe6d2f60a8e9bf400ff8d5d6bea23", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_LBUTTONDOWN (int wParam, int lParam)", "diff": ["+\t\t/*", "+\t\t* Bug in Windows.  When a tree item that has an image", "+\t\t* with alpha is expanded or collapsed, the area where", "+\t\t* the image is drawn is not erased before it is drawn.", "+\t\t* This means that the image gets darker each time.", "+\t\t* The fix is to redraw the item.", "+\t\t*/", "+\t\tif (!OS.IsWinCE && OS.COMCTL32_MAJOR >= 6) {", "+\t\t\tif (lpht.hItem != 0) {", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\trect.left = lpht.hItem;", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_GETITEMRECT, 0, rect);", "+\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f0438b9d5485552e75a06795b10ba0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "e06c7cee06cde407869bbcac7ab1fc8f1e44f50c", "commitAfterChange": "bf8ff308bbd619429fdfe0609e1738dfe9acc5ea", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " void removeColumn (TreeColumn column, int index)", "signatureAfterChange": " void removeColumn (TreeColumn column, int index)", "diff": ["+", "-\tif (columnCount < 2) {", "-\t\ttexts = null;", "-\t} else {", "-\t\tString[] newTexts = new String [columnCount];", "-\t\tSystem.arraycopy (texts, 0, newTexts, 0, index);", "-\t\tSystem.arraycopy (texts, index + 1, newTexts, index, columnCount - index);", "-\t\ttexts = newTexts;", "-\t}", "+\tString[] newTexts = new String [columnCount];", "+\tSystem.arraycopy (texts, 0, newTexts, 0, index);", "+\tSystem.arraycopy (texts, index + 1, newTexts, index, columnCount - index);", "+\ttexts = newTexts;", "+\t}", "+", "+\tif (index == 0) {", "+\t\ttext = texts [0] != null ? texts [0] : \"\";", "+\t\ttexts [0] = null;", "+\t\timage = images [0];", "+\t\timages [0] = null;", "+\t\t/* ", "+\t\t * The new first column will not have as much width available to it as it did when it was", "+\t\t * the second column since it now has to show hierarchy decorations as well, so recompute", "+\t\t * its displayText. ", "+\t\t */", "+\t\tGC gc = new GC (parent);", "+\t\tgc.setFont (getFont (0));", "+\t\tcomputeDisplayText (0, gc);", "+\t\tgc.dispose ();", "+\t}", "+\tif (columnCount < 2) {", "+\t\ttexts = null;", "+\t\timages = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a4bb32fd05351f515b8629cbfe36f1d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 70, "signatureBeforeChange": " void removedItem(SelectableItem item)", "signatureAfterChange": " void removeSelectedItem(int index)", "diff": ["+void removeSelectedItem(int index) {", "+\tTreeItem[] newSelectedItems = new TreeItem[selectedItems.length - 1];", "+\tSystem.arraycopy(selectedItems, 0, newSelectedItems, 0, index);", "+\tSystem.arraycopy(selectedItems, index + 1, newSelectedItems, index, newSelectedItems.length - index);", "+\tselectedItems = newSelectedItems;", "+}", "- */", "-void removedItem(SelectableItem item) {", "-\tif (isExpandingItem(item) == false) {", "-\t\tsuper.removedItem(item);\t\t\t\t", "-\t}\t", "-\tcalculateWidestShowingItem();", "-\tclaimRightFreeSpace();", "-}"]}], "num": 45259}