{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19d878dc0ab703bb58b14eb75935eeb7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "578a6de9576155c838c5107fee72266b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "5b8426d48aea52442b303d5e7db2451d282ca37d", "commitAfterChange": "5bf9738f4282d1fa277bff29d9b079257ef678fc", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": "\r void modifyContent(Event event, boolean updateCaret)", "signatureAfterChange": "\r void modifyContent(Event event, boolean updateCaret)", "diff": ["+\t\tboolean isBackspace = event.start < caretOffset;\r", "+\t\tboolean isDirectionBoundary = false;\r", "+\r", "+\t\tif (isBidi() && updateCaret) {\r", "+\t\t\tGC gc = new GC(this);\t\t\r", "+\t\t\tint line = content.getLineAtOffset(caretOffset);\r", "+\t\t\tint lineStartOffset = content.getOffsetAtLine(line);\t\t\r", "+\t\t\tint offsetInLine = caretOffset - lineStartOffset;\r", "+\t\t\tString lineText = content.getLine(line);\r", "+\t\t\tStyledTextBidi bidi = new StyledTextBidi(gc, tabWidth, lineText, null, null, getStyleOffsets(lineText, lineStartOffset));\r", "+\t\t\t\r", "+\t\t\tisDirectionBoundary = (offsetInLine > 0 && bidi.isRightToLeft(offsetInLine) != bidi.isRightToLeft(offsetInLine - 1));\r", "+\t\t\tgc.dispose();\t\t\t\r", "+\t\t}\t\t\t\t\t\t\r", "-\t\tif (updateCaret) {\r", "+\t\tif (updateCaret) {\t\t\r", "+\t\t\t// always update the caret location. fixes 1G8FODP\r", "-\t\t\t// always update the caret location. fixes 1G8FODP\t\r", "-\t\t\t\tlastCaretDirection = SWT.NULL;\r", "+\t\t\t\t// Update the caret direction so that the caret moves to the \r", "+\t\t\t\t// typed/deleted character. Fixes 1GJLQ16.\r", "+\t\t\t\tif (replacedLength == 1 && event.text.length() == 0) {\r", "+\t\t\t\t\tupdateBidiDirection(isBackspace, isDirectionBoundary);\r", "+\t\t\t\t}\r", "+\t\t\t\telse {\r", "+\t\t\t\t\tlastCaretDirection = ST.COLUMN_NEXT;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcf14ca5a6406b5c1170dfc9f1042435", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "eca9561f00e8f6869c3f064d2cc210213e7961a5", "commitAfterChange": "7b035d7945e49f32511c350507eda7aad65fec22", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 210, "signatureBeforeChange": "\r void setBidiCaret(boolean setKeyboard)", "signatureAfterChange": "\r void setBidiKeyboardLanguage()", "diff": ["-void setBidiCaret(boolean setKeyboard) {\r", "-\tif (setKeyboard) {\r", "-\t\tif (offsetInLine > 0 && bidi.isRightToLeft(offsetInLine - 1) != bidi.isRightToLeft(offsetInLine)) {\r", "-\t\t\t// continue with previous character type\r", "-\t\t\tbidi.setKeyboardLanguage(offsetInLine - 1);\r", "-\t\t} \r", "-\t\telse  {\r", "-\t\t\tbidi.setKeyboardLanguage(offsetInLine);\r", "-\t\t}\t\r", "-\t}\r", "+void setBidiKeyboardLanguage() {\r", "+\tint line = content.getLineAtOffset(caretOffset);\r", "+\tint lineStartOffset = content.getOffsetAtLine(line);\r", "+\tint offsetInLine = caretOffset - lineStartOffset;\r", "+\tString lineText = content.getLine(line);\r", "+\tGC gc = new GC(this);\r", "+\tStyledTextBidi bidi;\r", "+\tint lineLength = lineText.length();\r", "+\r", "+\t// Don't supply the bold styles/font since we don't want to measure anything\r", "+\tbidi = new StyledTextBidi(gc, tabWidth, lineText, null, null, getStyleOffsets(lineText, lineStartOffset));\r", "+\tif (offsetInLine == 0) {\r", "+\t\tbidi.setKeyboardLanguage(offsetInLine);\r", "+\t}\r", "+\telse\r", "+\tif (offsetInLine >= lineLength) {\r", "+\t\toffsetInLine = Math.min(offsetInLine, lineLength - 1);\r", "+\t\tbidi.setKeyboardLanguage(offsetInLine);\r", "+\t}\r", "+\telse\r", "+\tif (lastCaretDirection == ST.COLUMN_NEXT) {\r", "+\t\t// continue with previous character type\r", "+\t\tbidi.setKeyboardLanguage(offsetInLine - 1);\r", "+\t} \r", "+\telse {\r", "+\t\tbidi.setKeyboardLanguage(offsetInLine);\r", "+\t}\t\r", "+\tgc.dispose();\r"]}], "num": 20127}