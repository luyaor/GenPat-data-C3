{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "002c6ed442794a56c142b76df6fb89f8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33e8e37325c37d421f89047869fc99fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "d9938ffe936060d86e28a5c1d8df54b2cab1524f", "commitAfterChange": "ba10b79729c334b3dc074584ec00ab4e6176674e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void setText (String string)", "signatureAfterChange": " public void setText (String string)", "diff": ["-\tint xmString2 = 0;", "+\tbyte [] buffer2;", "-\t\tbyte [] buffer2 = Converter.wcsToMbcs (null, accelText, true);", "-\t\txmString2 = OS.XmStringParseText (", "-\t\t\tbuffer2,", "-\t\t\t0,", "-\t\t\tOS.XmFONTLIST_DEFAULT_TAG, ", "-\t\t\tOS.XmCHARSET_TEXT, ", "-\t\t\tnull,", "-\t\t\t0,", "-\t\t\t0);", "-\t\tif (xmString2 == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-\t} ", "+\t\tbuffer2 = Converter.wcsToMbcs (null, accelText, true);", "+\t} else {", "+\t\tbuffer2 = new byte [1];", "+\t}", "+\tint xmString2 = OS.XmStringParseText (", "+\t\tbuffer2,", "+\t\t0,", "+\t\tOS.XmFONTLIST_DEFAULT_TAG, ", "+\t\tOS.XmCHARSET_TEXT, ", "+\t\tnull,", "+\t\t0,", "+\t\t0);", "+\tif (xmString2 == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "-\tint [] argList;", "-\t/*", "-\t * Bug in Solaris 9 x86.  Setting a MenuItem's accelerator", "-\t * text to an empty string causes the item's full text to", "-\t * appear empty.  The fix is to only set the XmNacceleratorText", "-\t * resource if it has a non-empty value. ", "-\t */", "-\tif (xmString2 != 0) {\t", "-\t\targList = new int [] {", "-\t\t\tOS.XmNlabelType, OS.XmSTRING,", "-\t\t\tOS.XmNlabelString, xmString1,", "-\t\t\tOS.XmNmnemonic, mnemonic,", "-\t\t\tOS.XmNacceleratorText, xmString2,", "-\t\t};", "-\t} else {", "-\t\targList = new int [] {", "-\t\t\tOS.XmNlabelType, OS.XmSTRING,", "-\t\t\tOS.XmNlabelString, xmString1,", "-\t\t\tOS.XmNmnemonic, mnemonic,", "-\t\t};", "-\t}", "+\tint [] argList = {", "+\t\tOS.XmNlabelType, OS.XmSTRING,", "+\t\tOS.XmNlabelString, xmString1,", "+\t\tOS.XmNmnemonic, mnemonic,", "+\t\tOS.XmNacceleratorText, xmString2,", "+\t};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "811336200c0ce260744fa5a967bcc024", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "92f2f36ca30268f7e191390157797dd9f476f280", "commitAfterChange": "72dd8e1020121602ed6e389617e182e5d9bb5489", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "\r void initializeLabel ()", "signatureAfterChange": "\r void initializeLabel ()", "diff": ["-\t* Bug in Motif. When running on UTF-8, Motif becomes unstable \r", "-\t* and GP's some time later when a label widget is created with\r", "-\t* empty text and no XmNlabelType.  The fix is to create the\r", "-\t* label with a non-empty XmString and set the XmNlabelType.\r", "+\t* Bug in Motif. When running on UTF-8, Motif becomes unstable and\r", "+\t* GP's some time later  when a label widget is created with empty\r", "+\t* text. The fix is to create the label with a non-empty string.\r", "-\tint xmString = OS.XmStringCreateLocalized(buffer);\r", "-\tint [] argList1 = {OS.XmNlabelType, OS.XmSTRING, OS.XmNlabelString, xmString};\r", "-\twidgetHandle = OS.XmCreateLabel (shellHandle, null, argList1, argList1.length / 2);\r", "+\twidgetHandle = OS.XmCreateLabel (shellHandle, buffer, null, 0);\r", "-\tOS.XmStringFree (xmString);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c848e0ed00254c53e35306138e22a1f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "72f29d8f090bd295d99664a732349d3c71ab0b88", "commitAfterChange": "f4ffaefd052b1406c0db38619db5dfbf1efaa44a", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "  void HandleKeyDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewKeyDown (int sender, int e)", "diff": ["-void HandleKeyDown (int sender, int e) {", "+void HandlePreviewKeyDown (int sender, int e) {", "-\t}\t", "-\tsendKeyEvent (SWT.KeyDown, e, false);", "-", "-\t//FIXME hack code", "-\t/*", "-\t* In WPF arrows key move the focus around, this", "-\t* behavior is not expected in SWT.  ", "-\t*/", "-\tint key = OS.KeyEventArgs_Key(e);", "-\tswitch (key) {", "-\t\tcase OS.Key_Up:", "-\t\tcase OS.Key_Left: ", "-\t\tcase OS.Key_Down:", "-\t\tcase OS.Key_Right: {", "-\t\t\tOS.RoutedEventArgs_Handled (e, true);", "-\t\t}", "+\tsendKeyEvent (SWT.KeyDown, e, false);"]}], "num": 8312}