{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "141fb7b2f174e27d0219e139bafc2f40", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "253f5d16fa68130e89a7d7163d8c8c04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2c188166c8edeeffa96cf155df849af797217517", "commitAfterChange": "1600566572476d9a59d55b12b53edda457f44a52", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  int Ph_EV_BOUNDARY (int widget, int info)", "signatureAfterChange": "  int Ph_EV_BOUNDARY (int widget, int info)", "diff": ["-\tEvent event = new Event ();", "-\tevent.time = ev.timestamp;", "-\tsetMouseState (event, pe, ev);", "-\t\tcase OS.Ph_EV_PTR_ENTER_FROM_CHILD:", "+\t\tcase OS.Ph_EV_PTR_ENTER_FROM_CHILD:{", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.time = ev.timestamp;", "+\t\t\tsetMouseState (event, SWT.MouseEnter, pe, ev);", "+\t\t}", "-\t\tcase OS.Ph_EV_PTR_LEAVE_TO_CHILD:", "+\t\tcase OS.Ph_EV_PTR_LEAVE_TO_CHILD: {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.time = ev.timestamp;", "+\t\t\tsetMouseState (event, SWT.MouseExit, pe, ev);", "-\t\tcase OS.Ph_EV_PTR_STEADY:", "+\t\t}", "+\t\tcase OS.Ph_EV_PTR_STEADY: {", "+\t\t\tEvent event = new Event ();", "+\t\t\tevent.time = ev.timestamp;", "+\t\t\tsetMouseState (event, SWT.MouseHover, pe, ev);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659233b89d8dad80a53968d94cd1a230", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CCombo.java", "commitBeforeChange": "f43e57890fc6f476815884f9c2bf682f2c3f532c", "commitAfterChange": "e43d95e19139605b33300fc4ad84d20c5a9dadf6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void arrowEvent (Event event)", "signatureAfterChange": " void arrowEvent (Event event)", "diff": ["+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseDown: {", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseDown, mouseEvent);", "+\t\t\tevent.doit = mouseEvent.doit;", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase SWT.MouseUp: {", "+\t\t\tEvent mouseEvent = new Event ();", "+\t\t\tmouseEvent.button = event.button;", "+\t\t\tmouseEvent.count = event.count;", "+\t\t\tmouseEvent.stateMask = event.stateMask;", "+\t\t\tmouseEvent.time = event.time;", "+\t\t\tmouseEvent.x = event.x; mouseEvent.y = event.y;", "+\t\t\tnotifyListeners (SWT.MouseUp, mouseEvent);", "+\t\t\tevent.doit = mouseEvent.doit;"]}], "num": 17453}