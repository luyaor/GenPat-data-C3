{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31cf76c0f65034d34586209ce5c2e0c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "675b36ac1e42dd56e55d7bd5777ab337", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "37dd5b45c717603ed638fff2257cc13bcbb77f6a", "commitAfterChange": "8eba6ff70d96340be32539fddaffb1fea3259678", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 114, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight, boolean force)", "signatureAfterChange": " boolean updateTabHeight(int oldHeight, boolean force)", "diff": ["-\tif (onBottom) {", "-\t\tcurve = bezier(0, tabHeight + 2,", "-\t\t               CURVE_LEFT, tabHeight + 2,", "-\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "-\t\t               CURVE_WIDTH, 1,", "-\t\t               CURVE_WIDTH);", "-\t\t// workaround to get rid of blip at end of bezier", "-\t\tint index = -1;", "-\t\tfor (int i = 0; i < curve.length/2; i++) {", "-\t\t\tif (curve[2*i+1] > tabHeight) {", "-\t\t\t\tindex = i;", "-\t\t\t} else {", "-\t\t\t\tbreak;", "+\tif (!simple) {", "+\t\tif (onBottom) {", "+\t\t\tcurve = bezier(0, tabHeight + 2,", "+\t\t\t               CURVE_LEFT, tabHeight + 2,", "+\t\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "+\t\t\t               CURVE_WIDTH, 1,", "+\t\t\t               CURVE_WIDTH);", "+\t\t\t// workaround to get rid of blip at end of bezier", "+\t\t\tint index = -1;", "+\t\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\t\tif (curve[2*i+1] > tabHeight) {", "+\t\t\t\t\tindex = i;", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\tif (index > 0) {", "+\t\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "+\t\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "+\t\t\t\tcurve = newCurve;", "+\t\t\t}\t", "+\t\t} else {", "+\t\t\tcurve = bezier(0, 0,", "+\t\t\t               CURVE_LEFT, 0, ", "+\t\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "+\t\t\t               CURVE_WIDTH, tabHeight + 1,", "+\t\t\t               CURVE_WIDTH);", "-\t\tif (index > 0) {", "-\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "-\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "-\t\t\tcurve = newCurve;", "-\t\t}\t", "-\t} else {", "-\t\tcurve = bezier(0, 0,", "-\t\t               CURVE_LEFT, 0, ", "-\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "-\t\t               CURVE_WIDTH, tabHeight + 1,", "-\t\t               CURVE_WIDTH);", "-\t\t// workaround to get rid of blip at end of bezier", "-//\t\tint index = -1;", "-//\t\tfor (int i = 0; i < curve.length/2; i++) {", "-//\t\t\tif (curve[2*i+1] > tabHeight+1) {", "-//\t\t\t\tindex = i;", "-//\t\t\t\tbreak;", "-//\t\t\t}", "-//\t\t}", "-//\t\tif (index > 0) {", "-//\t\t\tint[] newCurve = new int[2*(index-1)];", "-//\t\t\tSystem.arraycopy(curve, 0, newCurve, 0, newCurve.length);", "-//\t\t\tcurve = newCurve;", "-//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4bf507019d47690776909d62fcdae04", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "a0b17ddcd82034f148c4a13380770610bd7a9c5a", "commitAfterChange": "95e3cb8908d279494afb41e5472d5319ecdee12e", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " boolean updateTabHeight(int oldHeight, boolean force)", "signatureAfterChange": " boolean updateTabHeight(int oldHeight, boolean force)", "diff": ["-\tif (!simple) {", "-\t\tif (onBottom) {", "-\t\t\tcurve = bezier(0, tabHeight + 2,", "-\t\t\t               CURVE_LEFT, tabHeight + 2,", "-\t\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "-\t\t\t               CURVE_WIDTH, 1,", "-\t\t\t               CURVE_WIDTH);", "-\t\t\t// workaround to get rid of blip at end of bezier", "-\t\t\tint index = -1;", "-\t\t\tfor (int i = 0; i < curve.length/2; i++) {", "-\t\t\t\tif (curve[2*i+1] > tabHeight) {", "-\t\t\t\t\tindex = i;", "-\t\t\t\t} else {", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "+\tif (onBottom) {", "+\t\tcurve = bezier(0, tabHeight + 2,", "+\t\t               CURVE_LEFT, tabHeight + 2,", "+\t\t\t\t       CURVE_WIDTH - CURVE_RIGHT, 1,", "+\t\t               CURVE_WIDTH, 1,", "+\t\t               CURVE_WIDTH);", "+\t\t// workaround to get rid of blip at end of bezier", "+\t\tint index = -1;", "+\t\tfor (int i = 0; i < curve.length/2; i++) {", "+\t\t\tif (curve[2*i+1] > tabHeight) {", "+\t\t\t\tindex = i;", "+\t\t\t} else {", "+\t\t\t\tbreak;", "-\t\t\tif (index > 0) {", "-\t\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "-\t\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "-\t\t\t\tcurve = newCurve;", "-\t\t\t}\t", "-\t\t} else {", "-\t\t\tcurve = bezier(0, 0,", "-\t\t\t               CURVE_LEFT, 0, ", "-\t\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "-\t\t\t               CURVE_WIDTH, tabHeight + 1,", "-\t\t\t               CURVE_WIDTH);", "+\t\tif (index > 0) {", "+\t\t\tint[] newCurve = new int[curve.length - 2*(index-1)];", "+\t\t\tSystem.arraycopy(curve, 2*(index-1), newCurve, 0, newCurve.length);", "+\t\t\tcurve = newCurve;", "+\t\t}\t", "+\t} else {", "+\t\tcurve = bezier(0, 0,", "+\t\t               CURVE_LEFT, 0, ", "+\t\t               CURVE_WIDTH - CURVE_RIGHT, tabHeight + 1,", "+\t\t               CURVE_WIDTH, tabHeight + 1,", "+\t\t               CURVE_WIDTH);"]}], "num": 43897}