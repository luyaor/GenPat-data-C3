{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5d3b4fa15ad595d29949b7d0890c527", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3292e9c8bc251bf06816ca626d346226", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "aa903ad0abe7ac2343ec135719d929ff23dede0d", "commitAfterChange": "9db59a080b088ba69bf84dec74537f5f0bce5b03", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tsynchronized (Device.class) {", "-\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\t\tif (!OS.GDK_WINDOWING_X11()) return false;", "-\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\t\tint type = event.type;", "-\t\tswitch (type) {", "-\t\t\tcase SWT.KeyDown:", "-\t\t\tcase SWT.KeyUp: {", "-\t\t\t\tint keyCode = 0;", "-\t\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "-\t\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\t\tif (keyCode == 0) {", "-\t\t\t\t\tchar key = event.character;", "-\t\t\t\t\tswitch (key) {", "-\t\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "-\t\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "-\t\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "-\t\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "-\t\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "-\t\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tkeysym = key;", "+\t/*", "+\t* Get the operating system lock before synchronizing on the device", "+\t* lock so that the device lock will not be held should another", "+\t* thread already be in the operating system.  This avoids deadlock", "+\t* should the other thread need the device lock.", "+\t*/", "+\tLock lock = OS.lock;", "+\tlock.lock();", "+\ttry {", "+\t\tsynchronized (Device.class) {", "+\t\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\t\tif (!OS.GDK_WINDOWING_X11()) return false;", "+\t\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\t\tint type = event.type;", "+\t\t\tswitch (type) {", "+\t\t\t\tcase SWT.KeyDown:", "+\t\t\t\tcase SWT.KeyUp: {", "+\t\t\t\t\tint keyCode = 0;", "+\t\t\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "+\t\t\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\t\tif (keyCode == 0) {", "+\t\t\t\t\t\tchar key = event.character;", "+\t\t\t\t\t\tswitch (key) {", "+\t\t\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "+\t\t\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "+\t\t\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "+\t\t\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "+\t\t\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "+\t\t\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "+\t\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\t\tkeysym = key;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\t\t\tif (keyCode == 0) return false;", "-\t\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\t\t\tif (keyCode == 0) return false;", "+\t\t\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "+\t\t\t\t\treturn true;", "-\t\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\tcase SWT.MouseDown:", "-\t\t\tcase SWT.MouseMove: ", "-\t\t\tcase SWT.MouseUp: {", "-\t\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "-\t\t\t\t} else {", "-\t\t\t\t\tint button = event.button;", "-\t\t\t\t\tswitch (button) {", "-\t\t\t\t\t\tcase 1:", "-\t\t\t\t\t\tcase 2:", "-\t\t\t\t\t\tcase 3:\tbreak;", "-\t\t\t\t\t\tcase 4: button = 6;\tbreak;", "-\t\t\t\t\t\tcase 5: button = 7;\tbreak;", "-\t\t\t\t\t\tdefault: return false;", "+\t\t\t\tcase SWT.MouseDown:", "+\t\t\t\tcase SWT.MouseMove: ", "+\t\t\t\tcase SWT.MouseUp: {", "+\t\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tint button = event.button;", "+\t\t\t\t\t\tswitch (button) {", "+\t\t\t\t\t\t\tcase 1:", "+\t\t\t\t\t\t\tcase 2:", "+\t\t\t\t\t\t\tcase 3:\tbreak;", "+\t\t\t\t\t\t\tcase 4: button = 6;\tbreak;", "+\t\t\t\t\t\t\tcase 5: button = 7;\tbreak;", "+\t\t\t\t\t\t\tdefault: return false;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "-\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "+\t\t\t\t\treturn true;", "-\t\t\t\treturn true;", "+\t\t\t\t/*", "+\t\t\t\t* This code is intentionally commented. After posting a", "+\t\t\t\t* mouse wheel event the system may respond unpredictably", "+\t\t\t\t* to subsequent mouse actions.", "+\t\t\t\t*/", "+//\t\t\t\tcase SWT.MouseWheel: {", "+//\t\t\t\t\tif (event.count == 0) return false;", "+//\t\t\t\t\tint button = event.count < 0 ? 5 : 4;", "+//\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "+//\t\t\t\t}", "-\t\t\t/*", "-\t\t\t* This code is intentionally commented. After posting a", "-\t\t\t* mouse wheel event the system may respond unpredictably", "-\t\t\t* to subsequent mouse actions.", "-\t\t\t*/", "-//\t\t\tcase SWT.MouseWheel: {", "-//\t\t\t\tif (event.count == 0) return false;", "-//\t\t\t\tint button = event.count < 0 ? 5 : 4;", "-//\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "-//\t\t\t}", "+\t\t\treturn false;", "-\t\treturn false;", "+\t} finally {", "+\t\tlock.unlock();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6f3cf5cc581be8b3e73157aa968654", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "9be50f235bbc31557960b17275b7cebd73643650", "commitAfterChange": "10db8dbc96013208bcbf8d30efcda65b3990ef39", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public boolean post (Event event)", "signatureAfterChange": " public boolean post (Event event)", "diff": ["-\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "-\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "-\tif (!OS.GDK_WINDOWING_X11()) return false;", "-\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\tint type = event.type;", "-\tswitch (type) {", "-\t\tcase SWT.KeyDown:", "-\t\tcase SWT.KeyUp: {", "-\t\t\tint keyCode = 0;", "-\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "-\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\tif (keyCode == 0) {", "-\t\t\t\tchar key = event.character;", "-\t\t\t\tswitch (key) {", "-\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "-\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "-\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "-\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "-\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "-\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "-\t\t\t\t\tdefault:", "-\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\tsynchronized (Device.class) {", "+\t\tif (isDisposed ()) error (SWT.ERROR_DEVICE_DISPOSED);", "+\t\tif (event == null) error (SWT.ERROR_NULL_ARGUMENT);", "+\t\tif (!OS.GDK_WINDOWING_X11()) return false;", "+\t\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "+\t\tint type = event.type;", "+\t\tswitch (type) {", "+\t\t\tcase SWT.KeyDown:", "+\t\t\tcase SWT.KeyUp: {", "+\t\t\t\tint keyCode = 0;", "+\t\t\t\tint /*long*/ keysym = untranslateKey (event.keyCode);", "+\t\t\t\tif (keysym != 0) keyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\tif (keyCode == 0) {", "+\t\t\t\t\tchar key = event.character;", "+\t\t\t\t\tswitch (key) {", "+\t\t\t\t\t\tcase SWT.BS: keysym = OS.GDK_BackSpace; break;", "+\t\t\t\t\t\tcase SWT.CR: keysym = OS.GDK_Return; break;", "+\t\t\t\t\t\tcase SWT.DEL: keysym = OS.GDK_Delete; break;", "+\t\t\t\t\t\tcase SWT.ESC: keysym = OS.GDK_Escape; break;", "+\t\t\t\t\t\tcase SWT.TAB: keysym = OS.GDK_Tab; break;", "+\t\t\t\t\t\tcase SWT.LF: keysym = OS.GDK_Linefeed; break;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tkeysym = wcsToMbcs (key);", "+\t\t\t\t\t}", "+\t\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "+\t\t\t\t\tif (keyCode == 0) return false;", "-\t\t\t\tkeyCode = OS.XKeysymToKeycode (xDisplay, keysym);", "-\t\t\t\tif (keyCode == 0) return false;", "+\t\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "+\t\t\t\treturn true;", "-\t\t\tOS.XTestFakeKeyEvent (xDisplay, keyCode, type == SWT.KeyDown, 0);", "-\t\t\treturn true;", "-\t\t}", "-\t\tcase SWT.MouseDown:", "-\t\tcase SWT.MouseMove: ", "-\t\tcase SWT.MouseUp: {", "-\t\t\tif (type == SWT.MouseMove) {", "-\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "-\t\t\t} else {", "-\t\t\t\tint button = event.button;", "-\t\t\t\tswitch (button) {", "-\t\t\t\t\tcase 1:", "-\t\t\t\t\tcase 2:", "-\t\t\t\t\tcase 3:\tbreak;", "-\t\t\t\t\tcase 4: button = 6;\tbreak;", "-\t\t\t\t\tcase 5: button = 7;\tbreak;", "-\t\t\t\t\tdefault: return false;", "+\t\t\tcase SWT.MouseDown:", "+\t\t\tcase SWT.MouseMove: ", "+\t\t\tcase SWT.MouseUp: {", "+\t\t\t\tif (type == SWT.MouseMove) {", "+\t\t\t\t\tOS.XTestFakeMotionEvent (xDisplay, -1, event.x, event.y, 0);", "+\t\t\t\t} else {", "+\t\t\t\t\tint button = event.button;", "+\t\t\t\t\tswitch (button) {", "+\t\t\t\t\t\tcase 1:", "+\t\t\t\t\t\tcase 2:", "+\t\t\t\t\t\tcase 3:\tbreak;", "+\t\t\t\t\t\tcase 4: button = 6;\tbreak;", "+\t\t\t\t\t\tcase 5: button = 7;\tbreak;", "+\t\t\t\t\t\tdefault: return false;", "+\t\t\t\t\t}", "+\t\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "-\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseDown, 0);", "+\t\t\t\treturn true;", "-\t\t\treturn true;", "+\t\t\t/*", "+\t\t\t* This code is intentionally commented. After posting a", "+\t\t\t* mouse wheel event the system may respond unpredictably", "+\t\t\t* to subsequent mouse actions.", "+\t\t\t*/", "+//\t\t\tcase SWT.MouseWheel: {", "+//\t\t\t\tif (event.count == 0) return false;", "+//\t\t\t\tint button = event.count < 0 ? 5 : 4;", "+//\t\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "+//\t\t\t}", "-\t\t/*", "-\t\t* This code is intentionally commented. After posting a", "-\t\t* mouse wheel event the system may respond unpredictably", "-\t\t* to subsequent mouse actions.", "-\t\t*/", "-//\t\tcase SWT.MouseWheel: {", "-//\t\t\tif (event.count == 0) return false;", "-//\t\t\tint button = event.count < 0 ? 5 : 4;", "-//\t\t\tOS.XTestFakeButtonEvent (xDisplay, button, type == SWT.MouseWheel, 0);\t\t\t", "-//\t\t}", "+\t\treturn false;", "-\treturn false;"]}], "num": 38884}