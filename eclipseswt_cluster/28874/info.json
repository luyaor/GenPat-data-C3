{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d0ab391eae031083c381733f46490ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d64947f5e44c0f3598e695a30b15714", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "a7ab4775a0dd1ecf25babb8566d45be8e41ff574", "commitAfterChange": "0db7275306068cc1d18c406ecbe40df861c4e6a1", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "signatureAfterChange": "  public Point computeSize (int wHint, int hHint, boolean changed)", "diff": ["-\tint width = OS.GTK_WIDGET_WIDTH (fixedHandle);", "-\tint height = OS.GTK_WIDGET_HEIGHT (fixedHandle);", "-\tint labelWidth = OS.GTK_WIDGET_WIDTH (handle);", "-\tint labelHeight = OS.GTK_WIDGET_HEIGHT (handle);", "+\tint width = OS.GTK_WIDGET_WIDTH (handle);", "+\tint height = OS.GTK_WIDGET_HEIGHT (handle);", "+\tint labelWidth = 0, labelHeight = 0;", "+\tif (labelHandle != 0) {", "+\t\tlabelWidth = OS.GTK_WIDGET_WIDTH (labelHandle);", "+\t\tlabelHeight = OS.GTK_WIDGET_HEIGHT (labelHandle);", "+\t\tOS.gtk_widget_set_size_request (labelHandle, -1, -1);", "+\t}", "+\t\tint frameWidth = OS.GTK_WIDGET_WIDTH (frameHandle);", "+\t\tint frameHeight = OS.GTK_WIDGET_HEIGHT (frameHandle);", "-\t\tOS.gtk_widget_set_size_request (frameHandle, width, height);", "+\t\tOS.gtk_widget_set_size_request (frameHandle, frameWidth, frameHeight);", "-\tOS.gtk_widget_set_size_request (handle, labelWidth, labelHeight);", "+\tif (labelHandle != 0) {", "+\t\tOS.gtk_widget_set_size_request (labelHandle, labelWidth, labelHeight);", "+\t}", "+\tOS.gtk_widget_set_size_request (handle, width, height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c327d8b387ca473311f66ab84224e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ce92898e77608bf804c80f5b62e889fe568db6fc", "commitAfterChange": "bc4d3581c33a4dad038becb29f77136e2bbc5f2e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void _setBackgroundImage (Image image)", "signatureAfterChange": "  void setBackgroundImage (int hBitmap)", "diff": ["-void _setBackgroundImage (Image image) {", "-\tsuper._setBackgroundImage (image);", "-", "-\t/*", "-\t* Feature in Windows.  If TVM_SETBKCOLOR is never", "-\t* used to set the background color of a tree, the", "-\t* background color of the lines and the plus/minus", "-\t* will be drawn using the default background color,", "-\t* not the HBRUSH returned from WM_CTLCOLOR.  The fix", "-\t* is to set the background color to the default (when", "-\t* it is already the default) to make Windows use the", "-\t* brush.", "-\t*/", "-\tif (OS.COMCTL32_MAJOR < 6) {", "-\t\tif (OS.SendMessage (handle, OS.TVM_GETBKCOLOR, 0, 0) == -1) {", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "-\t\t}", "-\t}", "-", "-\t//FIXME - images do not draw properly with TVS_FULLROWSELECT", "-\tif ((style & SWT.FULL_SELECTION) != 0) {", "-\t\tint newBits = OS.GetWindowLong (handle, OS.GWL_STYLE), oldBits = newBits;", "-\t\tif (image == null) {", "-\t\t\tnewBits |= OS.TVS_FULLROWSELECT;", "-\t\t} else {", "-\t\t\tnewBits &= ~OS.TVS_FULLROWSELECT;", "-\t\t}", "-\t\tif (newBits != oldBits) {", "-\t\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, newBits);", "-\t\t\tOS.InvalidateRect (handle, null, true);", "-\t\t}", "-\t}", "-}", "+void setBackgroundImage (int hBitmap) {", "+\tif (hBitmap != 0) {", "+\t\t/*", "+\t\t* Feature in Windows.  If TVM_SETBKCOLOR is never", "+\t\t* used to set the background color of a tree, the", "+\t\t* background color of the lines and the plus/minus", "+\t\t* will be drawn using the default background color,", "+\t\t* not the HBRUSH returned from WM_CTLCOLOR.  The fix", "+\t\t* is to set the background color to the default (when", "+\t\t* it is already the default) to make Windows use the", "+\t\t* brush.", "+\t\t*/", "+\t\tif (OS.COMCTL32_MAJOR < 6) {", "+\t\t\tif (OS.SendMessage (handle, OS.TVM_GETBKCOLOR, 0, 0) == -1) {", "+\t\t\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t\t\t}", "+\t\t}", "+\t\tOS.SendMessage (handle, OS.TVM_SETBKCOLOR, 0, -1);", "+\t} else {", "+\t\tControl control = findBackgroundControl ();", "+\t\tif (control == null) control = this;", "+\t\tif (control.backgroundImage == null) {", "+\t\t\tsetBackgroundPixel (control.getBackgroundPixel ());", "+\t\t}", "+\t}", "+\tif ((style & SWT.FULL_SELECTION) != 0) {", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tif (hBitmap != 0) {", "+\t\t\tbits &= ~OS.TVS_FULLROWSELECT;", "+\t\t} else {", "+\t\t\tbits |= OS.TVS_FULLROWSELECT;", "+\t\t}", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);", "+\t\tOS.InvalidateRect (handle, null, true);", "+\t}", "+}"]}], "num": 28874}