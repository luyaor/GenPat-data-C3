{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac07337c2025a77ebc2fa45573083c6f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e631093b90dd216e55b908805e00b5e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "856bec56110ce2de9051506cbc1855b2230b262f", "commitAfterChange": "d591115018ac1c3832516a212e7f29553fb725e8", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void sendFocusEvent (int event, boolean post)", "signatureAfterChange": "  void sendFocusEvent (int type, boolean post)", "diff": ["-void sendFocusEvent (int event, boolean post) {", "+void sendFocusEvent (int type, boolean post) {", "-\t\tpostEvent (event);", "+\t\tpostEvent (type);", "-\t\tsendEvent (event);", "+\t\t/*", "+\t\t* Feature in the Macintosh.  GetKeyboardFocus() returns NULL during", "+\t\t* kEventControlSetFocusPart if the focus part is not kControlFocusNoPart.", "+\t\t* The fix is to remember the focus control and return it during", "+\t\t* kEventControlSetFocusPart.", "+\t\t*/", "+\t\tDisplay display = this.display;", "+\t\tdisplay.focusControl = this;", "+\t\tdisplay.focusEvent = type;", "+\t\tsendEvent (type);", "+\t\tdisplay.focusEvent = SWT.None;", "+\t\tdisplay.focusControl = null;", "-\t\tif (event == SWT.FocusIn) {", "+\t\tif (type == SWT.FocusIn) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e72cd31ab2f434d63ff8d6256c62117", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2fb5f6e3b3f2f7ab0537171a566db826047d6882", "commitAfterChange": "4562a05272d28938e471c9f6521d8792e3c49b8a", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void sendFocusEvent (int type, boolean post)", "signatureAfterChange": "  void sendFocusEvent (int type, boolean post)", "diff": ["+\tDisplay display = this.display;", "+\t/*", "+\t* Feature in the Macintosh.  GetKeyboardFocus() returns NULL during", "+\t* kEventControlSetFocusPart if the focus part is not kControlFocusNoPart.", "+\t* The fix is to remember the focus control and return it during", "+\t* kEventControlSetFocusPart.", "+\t*/", "+\tdisplay.focusControl = this;", "+\tdisplay.focusEvent = type;", "-\t\t/*", "-\t\t* Feature in the Macintosh.  GetKeyboardFocus() returns NULL during", "-\t\t* kEventControlSetFocusPart if the focus part is not kControlFocusNoPart.", "-\t\t* The fix is to remember the focus control and return it during", "-\t\t* kEventControlSetFocusPart.", "-\t\t*/", "-\t\tDisplay display = this.display;", "-\t\tdisplay.focusControl = this;", "-\t\tdisplay.focusEvent = type;", "-\t\tdisplay.focusEvent = SWT.None;", "-\t\tdisplay.focusControl = null;", "-\t\t\t\tDisplay display = shell.display;", "-\t\t\t\tControl control = display.getFocusControl ();", "-\t\t\t\tif (control == null || shell != control.getShell () ) {", "+\t\t\t\tif (shell != display.getActiveShell ()) {", "+\tdisplay.focusEvent = SWT.None;", "+\tdisplay.focusControl = null;"]}], "num": 19704}