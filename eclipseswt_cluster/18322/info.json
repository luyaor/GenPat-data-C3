{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa45062a0aec4b0df9216857457917b3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d256ad6cad8e2474fd6482cb5ec5d48", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "51184c358fa84082ceb1bdb0bbfd184932e9f47d", "commitAfterChange": "f2d755cf92df522fc8825ec5987ac85761a9f8f3", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": "  boolean translateTraversal (int gdkEvent)", "signatureAfterChange": "  boolean translateTraversal (GdkEventKey keyEvent)", "diff": ["-boolean translateTraversal (int gdkEvent) {", "+boolean translateTraversal (GdkEventKey keyEvent) {", "-\tGdkEventKey keyEvent = new GdkEventKey ();", "-\tOS.memmove (keyEvent, gdkEvent, GdkEventKey.sizeof);", "-\tint code = traversalCode (key, gdkEvent);", "-\tint [] state = new int [1];", "-\tOS.gdk_event_get_state (gdkEvent, state);", "+\tint code = traversalCode (key, keyEvent);", "-\t\t\tboolean next = (state [0] & OS.GDK_SHIFT_MASK) == 0;", "+\t\t\tboolean next = (keyEvent.state & OS.GDK_SHIFT_MASK) == 0;", "-\t\t\tswitch (state [0]) {", "+\t\t\tswitch (keyEvent.state) {", "-\t\t\tif ((state [0] & OS.GDK_CONTROL_MASK) == 0) return false;", "+\t\t\tif ((keyEvent.state & OS.GDK_CONTROL_MASK) == 0) return false;", "-\tsetInputState (event, gdkEvent);", "+\tsetKeyState (event, keyEvent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9321fdf6e9bc235d85637f9a31a3489e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "6f47264247ab02c81a01ddfe0b8d000a8daea07f", "commitAfterChange": "33a75618afb3130e0b85c6636582400a9caf1eba", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " boolean translateTraversal (int event)", "signatureAfterChange": " boolean translateTraversal (int gdkEvent)", "diff": ["-boolean translateTraversal (int event) {", "+boolean translateTraversal (int gdkEvent) {", "-\tOS.memmove (keyEvent, event, GdkEventKey.sizeof);", "+\tOS.memmove (keyEvent, gdkEvent, GdkEventKey.sizeof);", "-\tint code = traversalCode (key, event);", "+\tint code = traversalCode (key, gdkEvent);", "-\tOS.gdk_event_get_state (event, state);", "+\tOS.gdk_event_get_state (gdkEvent, state);", "-\tEvent swtEvent = new Event ();", "-\tswtEvent.doit = (code & detail) != 0;", "-\tswtEvent.detail = detail;", "-\tswtEvent.time = OS.gdk_event_get_time (event);", "-\tsetInputState (swtEvent, event);", "+\tEvent event = new Event ();", "+\tevent.doit = (code & detail) != 0;", "+\tevent.detail = detail;", "+\tevent.time = OS.gdk_event_get_time (gdkEvent);", "+\tsetInputState (event, gdkEvent);", "-\t\tif (control.traverse (swtEvent)) return true;", "+\t\tif (control.traverse (event)) return true;", "+\t\tif (!event.doit && control.hooks (SWT.Traverse)) {", "+\t\t\treturn false;", "+\t\t}"]}], "num": 18322}