{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d64c839f9a44c1018cbe204eccdc3e0b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d4173b4a39a5b03241378049e2adca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/WinBMPFileFormat.java", "commitBeforeChange": "d6be5d0098628a79ec6151c6c44753356bc81a37", "commitAfterChange": "c0a3d8afca03ba4a7fab48f55d3147b11c11b8d6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void unloadIntoByteStream(ImageData image)", "signatureAfterChange": " void unloadIntoByteStream(ImageData image)", "diff": ["-\tint headersSize = 54;", "+\tint headersSize = BMPFileHeaderSize + BMPHeaderFixedSize;", "-\tbyte[] compressedData = out.toByteArray();", "+\tbyte[] data = out.toByteArray();", "-\tfileHeader[1] = fileHeader[4] + compressedData.length;", "+\tfileHeader[1] = fileHeader[4] + data.length;", "-\t\toutputStream.writeInt(WinBMPFileFormat.BMPHeaderFixedSize);", "+\t\toutputStream.writeInt(BMPHeaderFixedSize);", "-\t\toutputStream.writeInt(compressedData.length);", "+\t\toutputStream.writeInt(data.length);", "-\t\toutputStream.write(compressedData);", "+\t\toutputStream.write(data);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01421df9c6712ec21c740fdad52dc718", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/EmbedMetaData.java", "commitBeforeChange": "3418cfa63d3b83d0b2d185baa847e100d68881e8", "commitAfterChange": "d45fca5fe38816ea0e49d88992f8a36f2c79c3af", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  @Override public void generate(JNIClass clazz)", "signatureAfterChange": "  @Override public void generate(JNIClass clazz)", "diff": ["-\tinserts = new TreeMap();", "+\tinserts = new TreeMap<Integer, String>();", "-\tSet set = inserts.keySet();", "-\tArrayList keys = new ArrayList();", "+\tSet<Integer> set = inserts.keySet();", "+\tArrayList<Integer> keys = new ArrayList<Integer>();", "-\tfor (Iterator iterator = keys.iterator(); iterator.hasNext();) {", "-\t\tInteger index = (Integer) iterator.next();", "-\t\tString doc = (String)inserts.get(index);", "+\tfor (Iterator<Integer> iterator = keys.iterator(); iterator.hasNext();) {", "+\t\tInteger index = iterator.next();", "+\t\tString doc = inserts.get(index);"]}], "num": 1559}