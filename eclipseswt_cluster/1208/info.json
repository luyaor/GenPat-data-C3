{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c38ce6e192dab60ff1ced2770cf76b5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60376a70ae500021686a69291219ad29", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "66f37a62f80211ba6be4fe58c7cdabe2c0c2c927", "commitAfterChange": "051d7a54dd6b0b92c6083668fb6cb3eccf6777c1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  void destroyItem (TableColumn column)", "signatureAfterChange": "  void destroyItem (TableColumn column)", "diff": ["-\tif (columnCount > 1) {", "+\tif (columnCount >= 1) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tImage [] images = item.images;", "-\t\t\tif (images != null) {", "-\t\t\t\tImage [] temp = new Image [columnCount - 1];", "-\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - 1 - index);", "-\t\t\t\titems [i].images = temp;", "-\t\t\t}", "-\t\t\tString [] strings = item.strings;", "+\t\t\tString [] strings = items [i].strings;", "-\t\t\t\tString [] temp = new String [columnCount - 1];", "-\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - 1 - index);", "-\t\t\t\titems [i].strings = temp;", "+\t\t\t\tif (columnCount == 1) {", "+\t\t\t\t\titems [i].strings = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (index == 0) items [i].text = strings [1];", "+\t\t\t\t\tString [] temp = new String [columnCount - 1];", "+\t\t\t\t\tSystem.arraycopy (strings, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (strings, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\t\titems [i].strings = temp;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tImage [] images = items [i].images;", "+\t\t\tif (images != null) {", "+\t\t\t\tif (columnCount == 1) {", "+\t\t\t\t\titems [i].images = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (index == 0) items [i].image = images [1];", "+\t\t\t\t\tImage [] temp = new Image [columnCount - 1];", "+\t\t\t\t\tSystem.arraycopy (images, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (images, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\t\titems [i].images = temp;", "+\t\t\t\t}", "-\t\t\tif (cellBackground != null) {\t", "-\t\t\t\tColor [] temp = new Color [columnCount - 1];", "-\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - 1 - index);", "-\t\t\t\titems [i].cellBackground = temp;", "+\t\t\tif (cellBackground != null) {", "+\t\t\t\tif (columnCount == 1) {", "+\t\t\t\t\titems [i].cellBackground = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tColor [] temp = new Color [columnCount - 1];", "+\t\t\t\t\tSystem.arraycopy (cellBackground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellBackground, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\t\titems [i].cellBackground = temp;", "+\t\t\t\t}", "-\t\t\t\tColor [] temp = new Color [columnCount - 1];", "-\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - 1 - index);", "-\t\t\t\titems [i].cellForeground = temp;", "+\t\t\t\tif (columnCount == 1) {", "+\t\t\t\t\titems [i].cellForeground = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tColor [] temp = new Color [columnCount - 1];", "+\t\t\t\t\tSystem.arraycopy (cellForeground, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellForeground, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\t\titems [i].cellForeground = temp;", "+\t\t\t\t}", "-\t\t\t\tFont [] temp = new Font [columnCount - 1];", "-\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "-\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, columnCount - 1 - index);", "-\t\t\t\titems [i].cellFont = temp;", "+\t\t\t\tif (columnCount == 1) {", "+\t\t\t\t\titems [i].cellFont = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tFont [] temp = new Font [columnCount - 1];", "+\t\t\t\t\tSystem.arraycopy (cellFont, 0, temp, 0, index);", "+\t\t\t\t\tSystem.arraycopy (cellFont, index + 1, temp, index, columnCount - 1 - index);", "+\t\t\t\t\titems [i].cellFont = temp;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45933e60dd42c3395aeb815157858fa2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "89102aa2d6e9cfc0a42012e6646d8908d7966cf0", "commitAfterChange": "1eba5435ca5b0a22d0140d199176b31c7cdba8c2", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " void onMouse(Event event)", "signatureAfterChange": " void onMouse(Event event)", "diff": ["-\t\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\t\tCTabItem item = items[i];", "-\t\t\t\tRectangle bounds = item.getBounds();", "+\t\t\tCTabItem item = null;", "+\t\t\tif (single) {", "+\t\t\t\tif (selectedIndex != -1) {", "+\t\t\t\t\tRectangle bounds = items[selectedIndex].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)){", "+\t\t\t\t\t\titem = items[selectedIndex];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\t\tRectangle bounds = items[i].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)){", "+\t\t\t\t\t\titem = items[i];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (item != null) {", "-\t\t\t\tif (bounds.contains(x, y)) {", "-\t\t\t\t\tif (event.button == 1 && i == selectedIndex && items.length > 1) {", "-\t\t\t\t\t\tshowList = true;", "-\t\t\t\t\t}", "-\t\t\t\t\tif (item.isShowing()){", "-\t\t\t\t\t\tsetSelection(i, true);", "-\t\t\t\t\t\tsetFocus();", "-\t\t\t\t\t}", "-\t\t\t\t\treturn;", "+\t\t\t\tint index = indexOf(item);", "+\t\t\t\tif (event.button == 1 && index == selectedIndex && items.length > 1) {", "+\t\t\t\t\tshowList = true;", "+\t\t\t\tif (item.isShowing()){", "+\t\t\t\t\tsetSelection(index, true);", "+\t\t\t\t\tsetFocus();", "+\t\t\t\t}", "+\t\t\t\treturn;", "-\t\t\tfor (int i=0; i<items.length; i++) {", "-\t\t\t\tCTabItem item = items[i];", "+\t\t\tCTabItem item = null;", "+\t\t\tif (single) {", "+\t\t\t\tif (selectedIndex != -1) {", "+\t\t\t\t\tRectangle bounds = items[selectedIndex].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)){", "+\t\t\t\t\t\titem = items[selectedIndex];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfor (int i=0; i<items.length; i++) {", "+\t\t\t\t\tRectangle bounds = items[i].getBounds();", "+\t\t\t\t\tif (bounds.contains(x, y)){", "+\t\t\t\t\t\titem = items[i];", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (item != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a551971cc04099e7b29acdecb0d7c19b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/tabfolder/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "8441f12d6ada4d27017e3804c96d1ed14997228b", "commitAfterChange": "2cf3ee8a90a61023aabe141092758df6194fb47f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r void setSelectionNotify(int index)", "signatureAfterChange": "\r void setSelection(int index, boolean notify)", "diff": ["-void setSelectionNotify(int index) {\r", "-\tint oldSelectedIndex = selectedIndex;\r", "+void setSelection(int index, boolean notify) {\r", "-\tsetSelection(index);\r", "-\tif (selectedIndex != oldSelectedIndex && selectedIndex != -1) {\r", "-\t\tEvent event = new Event();\r", "-\t\tevent.item = getSelection()[0];\r", "-\t\tnotifyListeners(SWT.Selection, event);\r", "+\tint oldIndex = selectedIndex;\r", "+\t\r", "+\tif (selectedIndex == index || index >= getItemCount()) return;\r", "+\tif (selectedIndex != -1) {\r", "+\t\tControl control = items[selectedIndex].control;\r", "+\t\tif (control != null && !control.isDisposed()) {\r", "+\t\t\tcontrol.setVisible(false);\r", "+\t\t}\t\t\r", "+\tif (index < 0) {\r", "+\t\tindex = -1; // make sure the index is always -1 if it's negative\r", "+\t}\r", "+\tselectedIndex = index;\r", "+\tlayoutItems();\r", "+\tensureVisible(index);\t\r", "+\tredrawSelectionChange(oldIndex, index);\r", "+\tif (index >= 0) {\r", "+\t\tControl control = items[index].control;\r", "+\t\tif (control != null && !control.isDisposed()) {\r", "+\t\t\tcontrol.setBounds(getClientArea());\r", "+\t\t\tcontrol.setVisible(true);\r", "+\t\t}\r", "+\t}\r", "+\t\r", "+\tif (notify) {\r", "+\t\tif (selectedIndex != oldIndex && selectedIndex != -1) {\r", "+\t\t\tEvent event = new Event();\r", "+\t\t\tevent.item = getSelection()[0];\r", "+\t\t\tnotifyListeners(SWT.Selection, event);\r", "+\t\t}\r", "+\t}\r", "+}\r"]}], "num": 1208}