{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1c926bf14c0cd0c9020e09697b102db6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d565bd9e54f56656b18cbecbef7c1f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/dnd/DNDExample.java", "commitBeforeChange": "ae31f3bcc3737cd7f5b9bf587ae292bd9b082874", "commitAfterChange": "36e56391cd23da7679ad472475543734665f47fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void open()", "signatureAfterChange": " private void open()", "diff": ["+\tMenu menu = new Menu (shell, SWT.POP_UP);", "+\tMenuItem item = new MenuItem (menu, SWT.PUSH);", "+\titem.setText (\"Clear\");", "+\titem.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tdragConsole.setText(\"\");", "+\t\t}", "+\t});", "+\titem = new MenuItem (menu, SWT.CHECK);", "+\titem.setText (\"Show Event detail\");", "+\titem.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tMenuItem item = (MenuItem)e.widget;", "+\t\t\tdragEventDetail = item.getSelection();", "+\t\t}", "+\t});", "+\tdragConsole.setMenu(menu);", "+\t", "-", "+\tmenu = new Menu (shell, SWT.POP_UP);", "+\titem = new MenuItem (menu, SWT.PUSH);", "+\titem.setText (\"Clear\");", "+\titem.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tdropConsole.setText(\"\");", "+\t\t}", "+\t});", "+\titem = new MenuItem (menu, SWT.CHECK);", "+\titem.setText (\"Show Event detail\");", "+\titem.addSelectionListener(new SelectionAdapter() {", "+\t\tpublic void widgetSelected(SelectionEvent e) {", "+\t\t\tMenuItem item = (MenuItem)e.widget;", "+\t\t\tdropEventDetail = item.getSelection();", "+\t\t}", "+\t});", "+\tdropConsole.setMenu(menu);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ff751ca0e10301ed50d7197ff8b14c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet84.java", "commitBeforeChange": "d463ee32446c7c76e02712aeffd1c345daac76c4", "commitAfterChange": "eb5f47a40049d5bc2a7de317051a8f635536c429", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public static void main(String[] args)", "signatureAfterChange": " \t public static void main(String[] args)", "diff": ["+\t", "+\tfinal Label label = new Label(shell, SWT.BORDER);", "+\tlabel.setText(\"Drag Source\");", "+\tDragSource source = new DragSource(label, DND.DROP_COPY | DND.DROP_MOVE | DND.DROP_LINK);", "+\tsource.setTransfer(new Transfer[] {TextTransfer.getInstance()});", "+\tsource.addDragListener(new DragSourceAdapter() {", "+\t\tpublic void dragSetData(DragSourceEvent event) {", "+\t\t\tevent.data = \"Text Transferred\";", "+\t\t}", "+\t\tpublic void dragFinished(DragSourceEvent event) {", "+\t\t\tif (event.doit) {", "+\t\t\t\tString operation = null;", "+\t\t\t\tswitch (event.detail) {", "+\t\t\t\tcase DND.DROP_MOVE:", "+\t\t\t\t\toperation = \"moved\"; break;", "+\t\t\t\tcase DND.DROP_COPY:", "+\t\t\t\t\toperation = \"copied\"; break;", "+\t\t\t\tcase DND.DROP_LINK:", "+\t\t\t\t\toperation = \"linked\"; break;", "+\t\t\t\tcase DND.DROP_NONE:", "+\t\t\t\t\toperation = \"disallowed\"; break;", "+\t\t\t\tdefault:", "+\t\t\t\t\toperation = \"unknown\"; break;", "+\t\t\t\t}", "+\t\t\t\tlabel.setText(\"Drag Source (data \"+operation+\")\");", "+\t\t\t} else {", "+\t\t\t\tlabel.setText(\"Drag Source (drag cancelled)\");", "+\t\t\t}", "+\t\t}", "+\t});", "+", "-\tDropTarget target = new DropTarget(text, DND.DROP_DEFAULT | DND.DROP_COPY);", "+\ttext.setText(\"Drop Target\");", "+\tDropTarget target = new DropTarget(text, DND.DROP_DEFAULT | DND.DROP_COPY | DND.DROP_MOVE | DND.DROP_LINK);", "-\t\t\ttext.setText((String)event.data);", "+\t\t\tString operation = null;", "+\t\t\tswitch (event.detail) {", "+\t\t\tcase DND.DROP_MOVE:", "+\t\t\t\toperation = \"moved\"; break;", "+\t\t\tcase DND.DROP_COPY:", "+\t\t\t\toperation = \"copied\"; break;", "+\t\t\tcase DND.DROP_LINK:", "+\t\t\t\toperation = \"linked\"; break;", "+\t\t\tcase DND.DROP_NONE:", "+\t\t\t\toperation = \"disallowed\"; break;", "+\t\t\tdefault:", "+\t\t\t\toperation = \"unknown\"; break;", "+\t\t\t}", "+\t\t\ttext.append(\"\\n\"+operation+(String)event.data);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "497d4cc802e4bd09d892c33d46ba6477", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/StyledTextTab.java", "commitBeforeChange": "c4f32bf69c6a0ce8ee58309208e5da44bb3fb885", "commitAfterChange": "75db647896117977768e2f1c7925d404f61d65fd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid createStyledTextStyleGroup ()", "signatureAfterChange": " \tvoid createStyledTextStyleGroup ()", "diff": ["-\t\tstyledTextStyleGroup.setLayout (new GridLayout(2, false));", "-\t\tstyledTextStyleGroup.setLayoutData (new GridData (GridData.HORIZONTAL_ALIGN_FILL));", "+\t\tstyledTextStyleGroup.setLayout (new GridLayout(5, false));", "+\t\tGridData data = new GridData (GridData.HORIZONTAL_ALIGN_FILL);", "+\t\tdata.horizontalSpan = 2;", "+\t\tstyledTextStyleGroup.setLayoutData (data);", "+\t\titalicImage = createBitmapImage (display, \"italic\");", "-\t\tGridData data = new GridData(GridData.FILL_HORIZONTAL);", "-\t\tdata.horizontalSpan = 2;", "+\t\tdata = new GridData(GridData.FILL_HORIZONTAL);", "+\t\tdata.horizontalSpan = 5;", "-\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, SWT.BOLD);};", "+\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.BOLD);};", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setText (ControlExample.getResourceString (\"Italic\"));", "+\t\titalicButton = new Button (styledTextStyleGroup, SWT.PUSH);", "+\t\titalicButton.setImage (italicImage);", "+\t\titalicButton.addSelectionListener(new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent e) {", "+\t\t\t\tPoint sel = styledText.getSelectionRange();", "+\t\t\t\tif ((sel == null) || (sel.y == 0)) return;", "+\t\t\t\tStyleRange style;", "+\t\t\t\tfor (int i = sel.x; i<sel.x+sel.y; i++) {", "+\t\t\t\t\tStyleRange range = styledText.getStyleRangeAtOffset(i);", "+\t\t\t\t\tif (range == null) {style = new StyleRange(i, 1, null, null, SWT.ITALIC);}", "+\t\t\t\t\telse {style = new StyleRange(i, 1, range.foreground, range.background, range.fontStyle | SWT.ITALIC);};", "+\t\t\t\t\tstyledText.setStyleRange(style);", "+\t\t\t\t}", "+\t\t\t\tstyledText.setSelectionRange(sel.x + sel.y, 0);", "+\t\t\t}", "+\t\t});", "+\t\tnew Label (styledTextStyleGroup, SWT.NONE).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));", "+\t\t\t\titalicImage.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8b69db84237e020a2b841c9d67f9e0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/CTabFolderTab.java", "commitBeforeChange": "646c14c459db780d16f386a9a63437d50caf1876", "commitAfterChange": "740ffee05c104bcff57a8c6063262c192e8e3207", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid createOtherGroup ()", "signatureAfterChange": " \tvoid createOtherGroup ()", "diff": ["-\t\tsetSimpleTabButton = new Button (otherGroup, SWT.CHECK);", "-\t\tsetSimpleTabButton.setText (ControlExample.getResourceString(\"Set_Simple_Tabs\"));", "-\t\tsetSimpleTabButton.setSelection(true);", "-\t\tsetImageButton = new Button (otherGroup, SWT.CHECK);", "-\t\tsetImageButton.setText (ControlExample.getResourceString(\"Set_Image\"));", "-\t", "-\t\t/* Add the listeners */", "-\t\tsetSimpleTabButton.addSelectionListener (new SelectionAdapter () {", "+\t\tsimpleTabButton = new Button (otherGroup, SWT.CHECK);", "+\t\tsimpleTabButton.setText (ControlExample.getResourceString(\"Set_Simple_Tabs\"));", "+\t\tsimpleTabButton.setSelection(true);", "+\t\tsimpleTabButton.addSelectionListener (new SelectionAdapter () {", "-\t\tsetImageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\t\t", "+\t\tsingleTabButton = new Button (otherGroup, SWT.CHECK);", "+\t\tsingleTabButton.setText (ControlExample.getResourceString(\"Set_Single_Tabs\"));", "+\t\tsingleTabButton.setSelection(false);", "+\t\tsingleTabButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetSingleTabs();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tshowMinButton = new Button (otherGroup, SWT.CHECK);", "+\t\tshowMinButton.setText (ControlExample.getResourceString(\"Set_Min_Visible\"));", "+\t\tshowMinButton.setSelection(false);", "+\t\tshowMinButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetMinimizeVisible();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tshowMaxButton = new Button (otherGroup, SWT.CHECK);", "+\t\tshowMaxButton.setText (ControlExample.getResourceString(\"Set_Max_Visible\"));", "+\t\tshowMaxButton.setSelection(false);", "+\t\tshowMaxButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetMaximizeVisible();", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\timageButton = new Button (otherGroup, SWT.CHECK);", "+\t\timageButton.setText (ControlExample.getResourceString(\"Set_Image\"));", "+\t\timageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\t}", "+\t\t});", "+\t\t", "+\t\tunselectedImageButton = new Button (otherGroup, SWT.CHECK);", "+\t\tunselectedImageButton.setText (ControlExample.getResourceString(\"Set_Unselected_Image_Visible\"));", "+\t\tunselectedImageButton.setSelection(true);", "+\t\tunselectedImageButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetUnselectedImageVisible();", "+\t\t\t}", "+\t\t});", "+\t\tunselectedCloseButton = new Button (otherGroup, SWT.CHECK);", "+\t\tunselectedCloseButton.setText (ControlExample.getResourceString(\"Set_Unselected_Close_Visible\"));", "+\t\tunselectedCloseButton.setSelection(true);", "+\t\tunselectedCloseButton.addSelectionListener (new SelectionAdapter () {", "+\t\t\tpublic void widgetSelected (SelectionEvent event) {", "+\t\t\t\tsetUnselectedCloseVisible();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44729522a69700e6da2fe2abd2ce78d8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java", "commitBeforeChange": "0639d376e6af23b7354d20e16d943aaacda85ccc", "commitAfterChange": "fe636687784f556c665ed413f676ebbc6834bc15", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public BrowserExample(Composite parent)", "signatureAfterChange": " public BrowserExample(Composite parent)", "diff": ["-\t//initResources();", "+\tinitResources();", "+\tfinal Display display = parent.getDisplay();", "-\t", "+\t\t", "-\tdata.horizontalSpan = 3;", "+\tdata.horizontalSpan = 2;", "+\tfinal Canvas canvas = new Canvas(parent, SWT.NO_BACKGROUND);", "+\tdata = new GridData();", "+\tdata.horizontalAlignment = GridData.END;", "+\tRectangle rect = images[0].getBounds();", "+\tdata.widthHint = rect.width;", "+\tdata.heightHint = rect.height;", "+\tdata.verticalSpan = 2;", "+\tcanvas.setLayoutData(data);", "+\tcanvas.addListener(SWT.Paint, new Listener() {", "+\t\tpublic void handleEvent(Event e) {", "+\t\t\te.gc.drawImage(images[index], 0, 0);", "+\t\t}", "+\t});", "+\tcanvas.addListener(SWT.MouseDown, new Listener() {", "+\t\tpublic void handleEvent(Event e) {", "+\t\t\tbrowser.setUrl(getResourceString(\"Startup\"));", "+\t\t}", "+\t});", "+\t", "+\tdisplay.asyncExec(new Runnable() {", "+\t\tpublic void run() {", "+\t\t\tif (canvas.isDisposed()) return;", "+\t\t\tif (busy) {", "+\t\t\t\tindex++;", "+\t\t\t\tif (index == images.length) index = 0;", "+\t\t\t\tcanvas.redraw();", "+\t\t\t}", "+\t\t\tdisplay.timerExec(150, this);", "+\t\t}", "+\t});", "+\t", "-\tdata.horizontalSpan = 2;", "+\tdata.horizontalSpan = 1;", "+\t\t\t\tbusy = event.current != event.total;", "+\t\t\t\tif (!busy) {", "+\t\t\t\t\tindex = 0;", "+\t\t\t\t\tcanvas.redraw();", "+\t\t\t\t}", "+\t\t\t\tbusy = false;", "+\t\t\t\tindex = 0;", "+\t\t\t\tcanvas.redraw();", "+\t\t\t\tbusy = true;"]}], "num": 24118}