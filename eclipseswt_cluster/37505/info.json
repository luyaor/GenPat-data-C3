{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d830f7de313db03b52d80ffbf8d98d65", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a00a84b7de47ff8b1a82cc94baaae551", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "a51a5c56cd66a0306adaaed3bd6b70f9e1c1a47f", "commitAfterChange": "a4935bc66ce08e7d2fe2bd7381ba534ed932f1ac", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  void copyToClipboard (char [] buffer)", "signatureAfterChange": "  void copyToClipboard (char [] chars)", "diff": ["-void copyToClipboard (char [] buffer) {", "-\tif (buffer.length == 0) return;", "+void copyToClipboard (char [] chars) {", "+\tif (chars.length == 0) return;", "-\tOS.PutScrapFlavor (scrap [0], OS.kScrapFlavorTypeUTF16External, 0, buffer.length * 2, buffer);", "+\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tif (cfstring == 0) return;", "+\tbyte[] buffer = null;", "+\ttry {", "+\t\tCFRange range = new CFRange();", "+\t\trange.length = chars.length;", "+\t\tint[] size = new int[1];", "+\t\tint numChars = OS.CFStringGetBytes(cfstring, range, OS.kCFStringEncodingUnicode, (byte)'?', true, null, 0, size);", "+\t\tif (numChars == 0) return;", "+\t\tbuffer = new byte[size[0]];", "+\t\tnumChars = OS.CFStringGetBytes(cfstring, range, OS.kCFStringEncodingUnicode, (byte)'?', true, buffer, size [0], size);", "+\t\tif (numChars == 0) return;", "+\t} finally {", "+\t\tOS.CFRelease(cfstring);", "+\t}", "+\tOS.PutScrapFlavor (scrap [0], OS.kScrapFlavorTypeUTF16External, 0, buffer.length, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5a33a5f5c72e81255e1d7d6c583e69", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TextTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tString string = (String)object;", "-\tchar[] chars = new char[string.length()];", "-\tstring.getChars (0, chars.length, chars, 0);", "-\ttransferData.result = -1;", "-\tswitch (transferData.type) {", "-\t\tcase TEXTID: {", "-\t\t\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "-\t\t\tif (cfstring == 0) return;", "-\t\t\tbyte[] buffer = null;", "-\t\t\ttry {", "-\t\t\t\tCFRange range = new CFRange();", "-\t\t\t\trange.length = chars.length;", "-\t\t\t\tint encoding = OS.CFStringGetSystemEncoding();", "-\t\t\t\tint[] size = new int[1];", "-\t\t\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);", "-\t\t\t\tif (numChars == 0) return;", "-\t\t\t\tbuffer = new byte[size[0]];", "-\t\t\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\t\t\t\tif (numChars == 0) return;", "-\t\t\t} finally {", "-\t\t\t\tOS.CFRelease(cfstring);", "-\t\t\t}", "-\t\t\ttransferData.data = new byte[1][];", "-\t\t\ttransferData.data[0] = buffer;", "-\t\t\ttransferData.result = OS.noErr;", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase UTEXTID: {", "-\t\t\tbyte[] buffer = new byte[chars.length * 2];", "-\t\t\tOS.memmove(buffer, chars, buffer.length);", "-\t\t\ttransferData.data = new byte[1][];", "-\t\t\ttransferData.data[0] = buffer;", "-\t\t\ttransferData.result = OS.noErr;", "-\t\t\tbreak;", "-\t\t}", "-\t}", "+\ttransferData.data = NSString.stringWith((String) object);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4615aa6ed8595daf7baff00cdfc57c1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/URLTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\rpublic void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": "\rpublic void javaToNative (Object object, TransferData transferData)", "diff": ["- */\rpublic void javaToNative (Object object, TransferData transferData){\r\tif (!checkURL(object) || !isSupportedType(transferData)) {\r\t\tDND.error(DND.ERROR_INVALID_DATA);\r\t}\r\ttransferData.result = -1;\r\tString url = (String)object;\r\tint count = url.length();\r\tchar[] chars = new char[count];\r\turl.getChars(0, count, chars, 0);\r\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, count);\r\tif (cfstring == 0) return;\r\ttry {\r\t\tCFRange range = new CFRange();\r\t\trange.length = chars.length;\r\t\tint encoding = OS.CFStringGetSystemEncoding();\r\t\tint[] size = new int[1];\r\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);\r\t\tif (numChars == 0 || size[0] == 0) return;\r\t\tbyte[] buffer = new byte[size[0]];\r\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);\r\t\tif (numChars == 0) return;\r\t\ttransferData.data = new byte[][] {buffer};\r\t\ttransferData.result = 0;\r\t} finally {\r\t\tOS.CFRelease(cfstring);\r\t}\r}\r\r/**", "+ */\rpublic void javaToNative (Object object, TransferData transferData){\r\tif (!checkURL(object) || !isSupportedType(transferData)) {\r\t\tDND.error(DND.ERROR_INVALID_DATA);\r\t}\r\tString url = (String)object;\r\tNSString nsString = NSString.stringWith(url);\r\ttransferData.data = NSURL.static_URLWithString_(nsString);\r}\r\r/**"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaa7e36563093477b1d21b747e63bb72", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "5c3ad82fdba22d2ac42c5302029d9be57da18ceb", "commitAfterChange": "1d84e951c31eea40f181c2d82c615630805955fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\tint count = string.length();", "-\tchar[] chars = new char[count];", "-\tstring.getChars(0, count, chars, 0);", "-\tbyte[] buffer = new byte[chars.length * 2];", "-\tOS.memmove(buffer, chars, buffer.length);", "+\tchar[] chars = new char[string.length()];", "+\tstring.getChars (0, chars.length, chars, 0);", "+\ttransferData.result = -1;", "+", "+\tint encoding = OS.CFStringGetSystemEncoding();", "+\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, chars.length);", "+\tif (cfstring == 0) return;", "+\tbyte[] buffer = null;", "+\ttry {", "+\t\tCFRange range = new CFRange();", "+\t\trange.length = chars.length;", "+\t\tint[] size = new int[1];", "+\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', false, null, 0, size);", "+\t\tif (numChars == 0) return;", "+\t\tbuffer = new byte[size[0]];", "+\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', false, buffer, size [0], size);", "+\t\tif (numChars == 0) return;", "+\t} finally {", "+\t\tOS.CFRelease(cfstring);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3912b678773e70c8b7c40cd4cb7d7799", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/RTFTransfer.java", "commitBeforeChange": "6b0a245288556e7224d3c56682401ca81ba95245", "commitAfterChange": "4dbd09dcd54c5e8b8416ccbe2fdfacc6901be61f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative (Object object, TransferData transferData)", "signatureAfterChange": " public void javaToNative (Object object, TransferData transferData)", "diff": ["-\ttransferData.result = -1;", "-\tString string = (String)object;", "-\tint count = string.length();", "-\tchar[] chars = new char[count];", "-\tstring.getChars(0, count, chars, 0);", "-\tint cfstring = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, chars, count);", "-\tif (cfstring == 0) return;", "-\ttry {", "-\t\tCFRange range = new CFRange();", "-\t\trange.length = chars.length;", "-\t\tint encoding = OS.CFStringGetSystemEncoding();", "-\t\tint[] size = new int[1];", "-\t\tint numChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, null, 0, size);", "-\t\tif (numChars == 0 || size[0] == 0) return;", "-\t\tbyte[] buffer = new byte[size[0]];", "-\t\tnumChars = OS.CFStringGetBytes(cfstring, range, encoding, (byte)'?', true, buffer, size [0], size);", "-\t\tif (numChars == 0) return;", "-\t\ttransferData.data = new byte[1][];", "-\t\ttransferData.data[0] = buffer;", "-\t\ttransferData.result = 0;", "-\t} finally {", "-\t\tOS.CFRelease(cfstring);", "-\t}", "+\ttransferData.data = NSString.stringWith((String) object);"]}], "num": 37505}