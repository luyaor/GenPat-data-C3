{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a71b9c2b8dc59b59835ef905ad7df220", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a99a6ffa95a26f802eb8272f50e37a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 72, "signatureBeforeChange": " void propagateHandle (boolean enabled, int widgetHandle)", "signatureAfterChange": "  int keyboardProc (int nextHandler, int theEvent, int userData)", "diff": ["+", "+int keyboardProc (int nextHandler, int theEvent, int userData) {", "+\tint eventKind = OS.GetEventKind (theEvent);", "+\tswitch (eventKind) {", "+\t\tcase OS.kEventRawKeyDown:\t\t\t\treturn kEventRawKeyDown (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyModifiersChanged:\treturn kEventRawKeyModifiersChanged (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyRepeat:\t\t\treturn kEventRawKeyRepeat (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventRawKeyUp:\t\t\t\treturn kEventRawKeyUp (nextHandler, theEvent, userData);", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}", "-}", "-void propagateHandle (boolean enabled, int widgetHandle) {", "-\t/* AW", "-\tint xDisplay = OS.XtDisplay (widgetHandle);", "-\tif (xDisplay == 0) return;", "-\tint xWindow = OS.XtWindow (widgetHandle);", "-\tif (xWindow == 0) return;", "-\t*/", "-\t/*", "-\t* Get the event mask from the widget.  The event mask", "-\t* returned by XtBuildEventMask () includes the masks", "-\t* associated with all callbacks and event handlers", "-\t* that have been hooked on the widget.", "-\t*/", "-        /* AW", "-\tint event_mask = OS.XtBuildEventMask (widgetHandle);", "-\tint do_not_propagate_mask =", "-\t\tOS.KeyPressMask | OS.KeyReleaseMask | OS.ButtonPressMask |", "-\t\tOS.ButtonReleaseMask | OS.PointerMotionMask;", "-\tif (!enabled) {", "-        */", "-\t\t/*", "-\t\t* Attempting to propogate EnterWindowMask and LeaveWindowMask", "-\t\t* causes an X error so these must be specially cleared out from", "-\t\t* the event mask, not included in the propogate mask.", "-\t\t*/", "-                /* AW", "-\t\tevent_mask &= ~(do_not_propagate_mask | OS.EnterWindowMask | OS.LeaveWindowMask);", "-\t\tdo_not_propagate_mask = 0;", "-\t}", "-\tXSetWindowAttributes attributes = new XSetWindowAttributes ();", "-\tattributes.event_mask = event_mask;", "-\tattributes.do_not_propagate_mask = do_not_propagate_mask;", "-\tOS.XChangeWindowAttributes (xDisplay, xWindow, OS.CWDontPropagate | OS.CWEventMask, attributes);", "-\tint [] argList = {OS.XmNtraversalOn, enabled ? 1 : 0};", "-\tOS.XtSetValues (widgetHandle, argList, argList.length / 2);", "-    */", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b64d9a07ae72e872506f461d1a6605", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 99, "signatureBeforeChange": " int topHandle ()", "signatureAfterChange": "  int windowProc (int nextHandler, int theEvent, int userData)", "diff": ["-int topHandle () {", "-\treturn handle;", "+", "+int windowProc (int nextHandler, int theEvent, int userData) {", "+\tint eventKind = OS.GetEventKind (theEvent);", "+\tswitch (eventKind) {", "+\t\tcase OS.kEventWindowActivated:\t\t\treturn kEventWindowActivated (nextHandler, theEvent, userData);\t", "+\t\tcase OS.kEventWindowBoundsChanged:\t\treturn kEventWindowBoundsChanged (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowClose:\t\t\t\treturn kEventWindowClose (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowCollapsed:\t\t\treturn kEventWindowCollapsed (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowDeactivated:\t\treturn kEventWindowDeactivated (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowExpanded:\t\t\treturn kEventWindowExpanded (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowHidden:\t\t\treturn kEventWindowHidden (nextHandler, theEvent, userData);", "+\t\tcase OS.kEventWindowShown:\t\t\t\treturn kEventWindowShown (nextHandler, theEvent, userData);", "+\t}", "+\treturn OS.eventNotHandledErr;", "+}"]}], "num": 24404}