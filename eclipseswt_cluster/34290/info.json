{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23cf222e8e0f97503590ecd4975fa52e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9b1ea9d00a51eab6588decd52888d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "a754695634bbf4177c903eb76191590677bc9067", "commitAfterChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  void mouseDownSuper(int id, int sel, int theEvent)", "signatureAfterChange": "  void mouseDownSuper(int id, int sel, int theEvent)", "diff": ["-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = _getItem ((int)/*64*/row);", "-\t\t\t\tsendSelectionEvent (SWT.Selection, event, false);", "-\t\t\t\t", "-\t\t\t\t// Feature in Cocoa: This code path handles the case of an unmodified click on an already-selected row.", "-\t\t\t\t// If other rows are selected they will de-select and fire a tableViewSelectionDidChange message.", "-\t\t\t\t// To keep the order of events correct, send the selection event here and ignore the next", "-\t\t\t\t// tableViewSelectionDidChange message.  We'll reset the flag when the message is received.", "-\t\t\t\tif (widget.selectedRowIndexes().count() > 1) {", "-\t\t\t\t\tignoreSelect = true;", "-\t\t\t\t}", "+\t\t\t\tselectedRowIndex = row;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598194fefe8db9aeb863679ca83d9016", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 68, "signatureBeforeChange": " void doScrollVertical(Event event)", "signatureAfterChange": " void scrollVertical(int scrollIndexCount)", "diff": ["-void doScrollVertical(Event event) {", "-\tupdate();", "-\tint newSelection = getVerticalBar().getSelection();", "-\tRectangle clientArea = getClientArea();", "-\tGC gc = new GC(this);", "-\tgc.copyArea(", "-\t\t0, 0,", "-\t\tclientArea.width, clientArea.height,", "-\t\t0, (topIndex - newSelection) * itemHeight);", "-\tgc.dispose();", "-\ttopIndex = newSelection;", "+ */", "+void scrollVertical(int scrollIndexCount) {", "+\tRectangle clientArea = getClientArea();", "+", "+\tscroll(", "+\t\t0, 0, \t\t\t\t\t\t\t\t\t\t// destination x, y", "+\t\t0, scrollIndexCount * getItemHeight(),\t\t// source x, y", "+\t\tclientArea.width, clientArea.height, true);", "+}"]}], "num": 34290}