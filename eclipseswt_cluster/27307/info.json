{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c32e27e89039ffeb58a6dc54de79f7f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8252854a626432ea551d70001a2ac0bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Group.java", "commitBeforeChange": "0ba35982e6e70ed3b4226c3af33d90d539b17bed", "commitAfterChange": "65c87a607b760458761f1e972f7bac14bae5d4cc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "signatureAfterChange": "  public Rectangle computeTrim (int x, int y, int width, int height)", "diff": ["-\tint border = (int)Math.ceil (widget.borderWidth ());", "-\tNSSize margins = widget.contentViewMargins();", "-\tNSRect frame = contentView.frame();", "-\twidth += (margins.width + border) * 2;", "-\theight += (margins.height + border) * 2 + frame.y;", "+\tNSRect newRect = new NSRect();", "+\tnewRect.width = width;", "+\tnewRect.height = height;", "+\tNSRect oldRect = widget.frame();", "+\tignoreResize = true;", "+\twidget.setFrameFromContentFrame(newRect);", "+\tnewRect = widget.frame();", "+\twidget.setFrame(oldRect);", "+\tignoreResize = false;", "+\tx = (int) Math.ceil(newRect.x);", "+\ty = (int) Math.ceil(newRect.y);", "+\twidth = (int) Math.ceil(newRect.width);", "+\theight = (int) Math.ceil(newRect.height);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb5d1a65e06ae1ccfa7a621c2484c4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "c7d423d54875e4824736321e3b8e9a2db43f8d04", "commitAfterChange": "f4c4f787380e64fe4dcd8d3f3c4993563b2e5306", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " int getPreferredWidth (int columnIndex)", "signatureAfterChange": " int getPreferredWidth (int columnIndex)", "diff": ["+\tint width = 2 * parent.getCellPadding ();", "+\tif (columnIndex == 0 && (parent.style & SWT.CHECK) != 0) {", "+\t\twidth += parent.checkboxBounds.width;", "+\t\twidth += Table.MARGIN_IMAGE;", "+\t}", "-\tint textPaintWidth = gc.stringExtent (getText (columnIndex)).x + 2 * MARGIN_TEXT;", "+\twidth += gc.stringExtent (getText (columnIndex)).x + 2 * MARGIN_TEXT;", "-\tint result = getTextX (columnIndex) + textPaintWidth + parent.getCellPadding ();\t/* right side cell pad */", "-\tresult -= parent.columns [columnIndex].getX ();", "-\treturn result;", "+\tif (columnIndex == 0) {", "+\t\twidth += parent.col0ImageWidth;", "+\t\twidth += 2 * Table.MARGIN_IMAGE;", "+\t} else {", "+\t\tImage image = getImage (columnIndex);", "+\t\tif (image != null) {", "+\t\t\twidth += image.getBounds ().width;", "+\t\t\twidth += 2 * Table.MARGIN_IMAGE;", "+\t\t}", "+\t}", "+\t", "+\treturn width;"]}], "num": 27307}