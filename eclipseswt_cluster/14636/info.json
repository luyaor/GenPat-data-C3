{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "531c3e83eb62275e6d34a93272c0c52b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18818db9be5626cbc02aebf968d2eaac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "17560d4d5cadc9f7dda18f76d894349b04457512", "commitAfterChange": "756dfb278278393881bced22965f82d6d91df8e8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void flushExposes ()", "signatureAfterChange": "  void flushExposes ()", "diff": ["-\tint pendingCount = 0;", "-\tint /*long*/ eventPtr = 0;", "-\tint /*long*/ [] pendingEvents = new int /*long*/ [4];", "-\twhile ((eventPtr = OS.gdk_event_get ()) != 0) {", "-\t\tif (pendingCount == pendingEvents.length) {", "-\t\t\tint /*long*/ [] newEvents = new int /*long*/ [pendingCount + 4];", "-\t\t\tSystem.arraycopy (pendingEvents, 0, newEvents, 0, pendingCount);", "-\t\t\tpendingEvents = newEvents;", "+\t/*", "+\t* Feature in GTK.  Calling gdk_event_get() accumulates", "+\t* the outstanding damage for pending GTK expose events.", "+\t* In order to flush all paint events, get all of the", "+\t* events from the queue and then put them back.", "+\t*/", "+\tint count = 0;", "+\tint /*long*/ event = 0;", "+\tint /*long*/ [] events = new int /*long*/ [4];", "+\twhile ((event = OS.gdk_event_get ()) != 0) {", "+\t\tif (count == events.length) {", "+\t\t\tint /*long*/ [] newEvents = new int /*long*/ [count + 4];", "+\t\t\tSystem.arraycopy (events, 0, newEvents, 0, count);", "+\t\t\tevents = newEvents;", "-\t\tpendingEvents [pendingCount++] = eventPtr;", "+\t\tevents [count++] = event;", "-\tfor (int i=pendingCount - 1; i>=0; i--) {", "-\t\teventPtr = pendingEvents [i];", "-\t\tOS.gdk_event_put (eventPtr);", "-\t\tOS.gdk_event_free (eventPtr);", "+\tfor (int i=count - 1; i>=0; i--) {", "+\t\tevent = events [i];", "+\t\tOS.gdk_event_put (event);", "+\t\tOS.gdk_event_free (event);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a4d13af624f9109ba5d816c3b836b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "ce512451fd6a70d98bc781598a9496ff97819faf", "commitAfterChange": "dfbd799ae6d5478c0ca83038148e03913c6c7c2f", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " boolean setButtonBounds()", "signatureAfterChange": " boolean setButtonBounds()", "diff": ["-\tint decoratorWidth = 16;", "-\tif (showClose && selectedIndex != -1) {", "-\t\tcloseRect.x = size.x - borderRight - decoratorWidth;", "+\tif (showClose && single && selectedIndex != -1) {", "+\t\tcloseRect.x = size.x - borderRight - BUTTON_SIZE;", "-\t\tcloseRect.width = decoratorWidth;", "+\t\tcloseRect.width = BUTTON_SIZE;", "-\t\texpandRect.x = size.x - borderRight - closeRect.width - decoratorWidth;", "+\t\texpandRect.x = size.x - borderRight - closeRect.width - BUTTON_SIZE;", "-\t\texpandRect.width = decoratorWidth;", "+\t\texpandRect.width = BUTTON_SIZE;", "-\t\t\ttopRightRect.x = Math.min(item.x +item.width + decoratorWidth, size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x - 3);", "+\t\t\ttopRightRect.x = Math.min(item.x +item.width + BUTTON_SIZE, size.x - borderRight - closeRect.width - expandRect.width - topRightSize.x - 3);", "-\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - decoratorWidth - 3);", "+\t\t\tchevronRect.x = Math.min(item.x +item.width - 3, size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE - 3);", "-\t\t\tchevronRect.width = decoratorWidth;", "+\t\t\tchevronRect.width = BUTTON_SIZE;", "-\t\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - decoratorWidth;", "+\t\t\t\tchevronRect.x = size.x - borderRight - closeRect.width - expandRect.width - topRightRect.width - BUTTON_SIZE;", "-\t\t\t\tchevronRect.width = decoratorWidth;", "+\t\t\t\tchevronRect.width = BUTTON_SIZE;"]}], "num": 14636}