{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7053b80b86ab445e3ec8611cb1d93b3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ef22d46e5edb47d3b869e8d9b0a1e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "91d12e7fb40e96dc6324f0e393e3f0f025792ace", "commitAfterChange": "14be55c4cbe46a16b7300921fd246420e99a1bad", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "signatureAfterChange": "  LRESULT sendMouseDownEvent (int type, int button, int msg, int wParam, int lParam)", "diff": ["-\t* for the item will be set.  These bits are used when", "-\t* the table is multi-select to issue the selection", "-\t* event.  If the user did not click on an item, then", "-\t* set focus to the table so that it will come to the", "-\t* front and take focus in the work around below.", "+\t* for the item will be set.  If the user did not click on", "+\t* an item, then set focus to the table so that it will", "+\t* come to the front and take focus in the work around", "+\t* below.", "-\t* to detect the case when an item is reselected and issue", "-\t* the notification.", "-\t* ", "-\t* NOTE: This code runs for multi-select as well, ignoring", "-\t* the selection that is issed from WM_NOTIFY.", "+\t* to detect the case when an item is mark it as selected.", "-\tboolean wasSelected = false;", "-\t\twasSelected = (lvItem.state & OS.LVIS_SELECTED) != 0;", "-\t\tif (wasSelected) ignoreSelect = true;", "+\t\tif ((lvItem.state & OS.LVIS_SELECTED) != 0) wasSelected = true;", "-\tif (wasSelected) {", "-\t\tignoreSelect = false;", "-\t\tEvent event = new Event ();", "-\t\tevent.item = _getItem (pinfo.iItem);", "-\t\tpostEvent (SWT.Selection, event);", "-\t}", "-\t\t\tmouseDown = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d46c4ef5a06119fac6d4bda062ba8f53", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857431fb0346569b270d2d64d87a0d49ee554249", "commitAfterChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["-\tboolean dragging = false;", "-\t\t\tdragging = dragDetect (x, y);", "+\t\t\tdisplay.dragMouseDown = OS.GCHandle_Alloc (e);", "+\t\t\tdragDetect (x, y, true);", "+\t", "-\t", "-\tif (dragging) {", "-\t\tsendDragEvent (e);", "-\t}", "-\t", "-\tif (display.dragMouseUp != 0) {", "-\t\tsendMouseEvent (SWT.MouseUp, display.dragMouseUp, false);\t", "-\t\tOS.GCHandle_Free (display.dragMouseUp);", "-\t\tdisplay.dragMouseUp = 0;", "-\t}"]}], "num": 14891}