{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fcc156567a401d9f7d09f6afaea78d5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4aa707dcdbc1544f85440ceb0cb198c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1f0268d817d4d6da6a35f97f46ada77b8aa2e671", "commitAfterChange": "f99fa3a1cda272de1e13f169bf4c1cf723f1dd66", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 104, "signatureBeforeChange": "  int kEventControlHitTest (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventControlHitTest (int nextHandler, int theEvent, int userData)", "diff": ["+", "+\t}", "+\tif (region != null && this != getShell ()) {", "+\t\tint code = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\tCGPoint pt = new CGPoint ();", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseLocation, OS.typeHIPoint, null, CGPoint.sizeof, null, pt);", "+\t\tif (!region.contains ((int) pt.x, (int) pt.y)) {", "+\t\t\tOS.SetEventParameter (theEvent, OS.kEventParamControlPart, OS.typeControlPartCode, 2, new short [1]);", "+\t\t}", "+\t\treturn code;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "103a8935d2565ca0143b82a7773d88c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "c830ba87659f66da0a8654b6fd6e8eaf78f224a3", "commitAfterChange": "4482f07e9114cadcaa151462c4425652dbe37722", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 115, "signatureBeforeChange": "  boolean setKeyState (Event event, int theEvent)", "signatureAfterChange": "  boolean setKeyState (Event event, int type, int theEvent)", "diff": ["-boolean setKeyState (Event event, int theEvent) {", "+boolean setKeyState (Event event, int type, int theEvent) {", "-\treturn setInputState (event, theEvent);", "+\tint [] chord = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamMouseChord, OS.typeUInt32, null, 4, null, chord);", "+\tint [] modifiers = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "+\treturn setInputState (event, type, chord [0], modifiers [0]);"]}], "num": 15951}