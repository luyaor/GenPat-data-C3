{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfb674c486eddfca3875aad60e55d78a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea6003a200745d8e15461ae00c1abd3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "c62f1bd2a534c82fe49707e3aab2fa508782a68e", "commitAfterChange": "f25ddda61f232f0142319f523d52aa9a7a312133", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public int getLevel (int offset)", "signatureAfterChange": " public int getLevel (int offset)", "diff": ["-\tlength = segmentsText.length();", "-\toffset = translateOffset(offset);\t", "-\tint line;", "-\tfor (line=0; line<runs.length; line++) {", "-\t\tif (lineOffset[line + 1] > offset) break;", "-\t}", "-\tline = Math.min(line, runs.length - 1);", "-\tStyleItem[] lineRuns = runs[line];", "-\tfor (int i=0; i<lineRuns.length; i++) {", "-\t\tStyleItem run = lineRuns[i];", "-\t\tint end = run.start + run.length;", "-\t\tif (end == length) end++;", "-\t\tif (run.start <= offset && offset < end) {", "-\t\t\treturn run.analysis.s.uBidiLevel;", "+\toffset = translateOffset(offset);", "+\tfor (int i=1; i<allRuns.length; i++) {", "+\t\tif (allRuns[i].start > offset) {", "+\t\t\treturn allRuns[i - 1].analysis.s.uBidiLevel;", "-\treturn 0;", "+\treturn (orientation & SWT.RIGHT_TO_LEFT) != 0 ? 1 : 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97aae2de55f892753f60ef3ff025691a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "09ffd39885e9fefd9e005f5708df6fb05c84a722", "commitAfterChange": "01234cea8bf0b04b381a8eb47a28ba41d0fd4c3e", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "signatureAfterChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "diff": ["-\t\t\t\tGC gc;", "-\t\t\t\tif (OS.GTK3){", "-\t\t\t\t\tGCData gcData = new GCData();", "-\t\t\t\t\tgcData.cairo = cr;", "-\t\t\t\t\tgc = GC.gtk_new(this, gcData );", "-\t\t\t\t} else {", "-\t\t\t\t\tgc = new GC (this);", "-\t\t\t\t}", "+\t\t\t\tGC gc = getGC(cr);", "-\t\t\t\t// A temporary fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=427480", "-\t\t\t\t// Force native painting", "-\t\t\t\tif (OS.GTK3) {", "+\t\t\t\tif (OS.GTK_VERSION <= OS.VERSION(3, 14, 8)) {", "-\t\tGC gc;", "-\t\tif (OS.GTK3){", "-\t\t\tGCData gcData = new GCData();", "-\t\t\tgcData.cairo = cr;", "-\t\t\tgc = GC.gtk_new(this, gcData );", "-\t\t} else {", "-\t\t\tgc = new GC (this);", "-\t\t}", "+\t\tGC gc = getGC(cr);", "-\t\t\t\tGC gc;", "-\t\t\t\tif (OS.GTK3){", "-\t\t\t\t\tGCData gcData = new GCData();", "-\t\t\t\t\tgcData.cairo = cr;", "-\t\t\t\t\tgc = GC.gtk_new(this, gcData );", "-\t\t\t\t} else {", "-\t\t\t\t\tgc = new GC(this);", "-\t\t\t\t}", "+\t\t\t\tGC gc = getGC(cr);", "-\t\t\t\t// Temporary fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=427480", "-\t\t\t\t// Force native paint", "-\t\t\t\tif (!OS.GTK3) {", "+\t\t\t\tif (OS.GTK_VERSION > OS.VERSION(3, 14, 8)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cdf302bc88ef2c08f7bacc362b6b92e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet249.java", "commitBeforeChange": "e1a7947227444f425d40a5289d60d876a63d33dd", "commitAfterChange": "c22459984b634ac2fa9062cf3800f00b6f368d23", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void main (String [] args)", "signatureAfterChange": "  public static void main (String [] args)", "diff": ["+", "-\tfinal Composite page1 = new Composite (contentPanel, SWT.NONE);", "-\tpage1.setLayout (new RowLayout ());", "-\tLabel label = new Label (page1, SWT.NONE);", "+\tfinal Composite page0 = new Composite (contentPanel, SWT.NONE);", "+\tpage0.setLayout (new RowLayout ());", "+\tLabel label = new Label (page0, SWT.NONE);", "-\tfinal Composite page2 = new Composite (contentPanel, SWT.NONE);", "-\tpage2.setLayout (new RowLayout ());", "-\tButton button = new Button (page2, SWT.NONE);", "+\tfinal Composite page1 = new Composite (contentPanel, SWT.NONE);", "+\tpage1.setLayout (new RowLayout ());", "+\tButton button = new Button (page1, SWT.NONE);", "-\t// create the buttons that will switch between the pages", "-\tButton page1button = new Button (shell, SWT.PUSH);", "-\tpage1button.setText (\"Page 1\");", "-\tpage1button.setBounds (10, 10, 80, 25);", "-\tpage1button.addListener (SWT.Selection, new Listener () {", "+\t// create the button that will switch between the pages", "+\tButton pageButton = new Button (shell, SWT.PUSH);", "+\tpageButton.setText (\"Push\");", "+\tpageButton.setBounds (10, 10, 80, 25);", "+\tpageButton.addListener (SWT.Selection, new Listener () {", "-\t\t\tlayout.topControl = page1;", "+\t\t\tpageNum = ++pageNum % 2;", "+\t\t\tlayout.topControl = pageNum == 0 ? page0 : page1;", "-\t\t}", "-\t});", "-\tButton page2button = new Button (shell, SWT.PUSH);", "-\tpage2button.setText (\"Page 2\");", "-\tpage2button.setBounds (10, 40, 80, 25);", "-\tpage2button.addListener(SWT.Selection, new Listener() {", "-\t\tpublic void handleEvent(Event event) {", "-\t\t\tlayout.topControl = page2;", "-\t\t\tcontentPanel.layout();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c770f45e675b6a4e79b22be805568236", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "3c3560a8a0694cddb84d310c44e8be981d7200ba", "commitAfterChange": "6a109d46b1134102ab2fd951d1b2441f44e33ab3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test_getStyle()", "signatureAfterChange": "  public void test_getStyle()", "diff": ["-\tCanvas canvas = new Canvas(shell, SWT.NULL);", "-\tGC testGC = new GC(canvas, SWT.LEFT_TO_RIGHT);", "-\tint style = testGC.getStyle();", "-\tassertTrue((style & SWT.LEFT_TO_RIGHT) != 0);", "-\ttestGC.dispose();", "-\ttestGC = new GC(canvas);", "-\tstyle = testGC.getStyle();", "-\tassertTrue((style & SWT.LEFT_TO_RIGHT) != 0);", "-\ttestGC.dispose();", "-\ttestGC = new GC(canvas, SWT.RIGHT_TO_LEFT);", "-\tstyle = testGC.getStyle();", "-\tassertTrue((style &  SWT.RIGHT_TO_LEFT) != 0);", "-\ttestGC.dispose();", "+\tPerformanceMeter meter = createMeter();", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.getStyle();", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);"]}], "num": 17317}