{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db27a72ae755abdec3cbe961a6cc519c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97ab1d17741be33573d225f1d3acae21", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "7eaa8b1f3e97984db0a3bf0d94e0fa0a5a6bc0ed", "commitAfterChange": "70603350d0b41ac58ac0595d055f0d67cd509d31", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["+\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "+\t\tint [] modifiers = new int [1];", "+\t\tOS.GetEventParameter (keyboardEvent [0], OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "+\t\tif (modifiers [0] == OS.cmdKey) {", "+\t\t\tswitch (keyCode [0]) {", "+\t\t\t\tcase 7: /* X */", "+\t\t\t\t\tcut ();", "+\t\t\t\t\treturn OS.noErr;", "+\t\t\t\tcase 9: /* V */", "+\t\t\t\t\tpaste ();", "+\t\t\t\t\treturn OS.noErr;", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47b2b252d95f27b8aa309e2f65b2514e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "d54f89ff989006d607d53b534afb484bf72112b0", "commitAfterChange": "4f8c243743556b45a5a75c94872fcbe031996683", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["+\t* ", "+\t* NOTE:  This was fixed in OS X 10.4.", "-\tint [] keyCode = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "-\tswitch (keyCode [0]) {", "-\t\tcase 126: /* Up arrow */", "-\t\tcase 125: /* Down arrow */", "-\t\t\tif (!sendKeyEvent (SWT.KeyDown, theEvent)) return OS.noErr;", "-\t\t\tbreak;", "+\tif (OS.VERSION < 0x1040) {", "+\t\tint [] keyCode = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 126: /* Up arrow */", "+\t\t\tcase 125: /* Down arrow */", "+\t\t\t\tif (!sendKeyEvent (SWT.KeyDown, theEvent)) return OS.noErr;", "+\t\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142b607a50cb0b0a53a7bb3afb046603", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "c878e19e1d71776f11d9ab1e76e433925b403c28", "commitAfterChange": "88bea82899fc1c73ee08f9a73be0ffb1e5544aa2", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["+\tint [] modifiers = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "+\tif (modifiers [0] == OS.cmdKey) {", "+\t\tint [] keyCode = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 7: /* X */", "+\t\t\t\tcut ();", "+\t\t\t\treturn OS.noErr;", "+\t\t\tcase 8: /* C */", "+\t\t\t\tcopy ();", "+\t\t\t\treturn OS.noErr;", "+\t\t\tcase 9: /* V */", "+\t\t\t\tpaste ();", "+\t\t\t\treturn OS.noErr;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c7833fee9d7078994dc5ab3d953bbe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "07eff1b74b49b8400fef10ab67f94111fd65d9d4", "commitAfterChange": "d0747d3dabdb1fd1c574f88ba055d17eeb8cb4e0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventTextInputUnicodeForKeyEvent (int nextHandler, int theEvent, int userData)", "diff": ["+\tint [] keyboardEvent = new int [1];", "+\tOS.GetEventParameter (theEvent, OS.kEventParamTextInputSendKeyboardEvent, OS.typeEventRef, null, keyboardEvent.length * 4, null, keyboardEvent);", "+\tint [] keyCode = new int [1];", "+\tOS.GetEventParameter (keyboardEvent [0], OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\tswitch (keyCode [0]) {", "+\t\tcase 36: { /* Return */", "+\t\t\tpostEvent (SWT.DefaultSelection);", "+\t\t\tbreak;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a7fdc6335d2be1b6a91f4e494d795c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "965eaac6a7106d9e7a95dc443b5e485e99434569", "commitAfterChange": "c3725acb1dcb31dfc3cdf09d7f0b8ec5b826ac4f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["-//\tif (hooks (SWT.Verify) || filters (SWT.Verify)) {", "-//\t\tint [] modifiers = new int [1];", "-//\t\tOS.GetEventParameter (keyboardEvent [0], OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "-//\t\tif (modifiers [0] == OS.cmdKey) {", "-//\t\t\tswitch (keyCode [0]) {", "-//\t\t\t\tcase 7: /* X */", "-//\t\t\t\t\tcut ();", "-//\t\t\t\t\treturn OS.noErr;", "-//\t\t\t\tcase 9: /* V */", "-//\t\t\t\t\tpaste ();", "-//\t\t\t\t\treturn OS.noErr;", "-//\t\t\t}", "-//\t\t}", "-//\t}", "+\tint [] modifiers = new int [1];", "+\tOS.GetEventParameter (keyboardEvent [0], OS.kEventParamKeyModifiers, OS.typeUInt32, null, 4, null, modifiers);", "+\tif (modifiers [0] == OS.cmdKey) {", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 7: /* X */", "+\t\t\t\tcut ();", "+\t\t\t\treturn OS.noErr;", "+\t\t\tcase 8: /* C */", "+\t\t\t\tcopy ();", "+\t\t\t\treturn OS.noErr;", "+\t\t\tcase 9: /* V */", "+\t\t\t\tpaste ();", "+\t\t\t\treturn OS.noErr;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3cefe7e3804459163112eb940824846", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "27723b1e4b2ae87a193517c00ef751923d7f193b", "commitAfterChange": "5e467403f09c889574f829fcf948e58433761966", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " int kEventRawKeyDown (int nextHandler, int theEvent, int userData)", "diff": ["-\tint [] keyCode = new int [1];", "-\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "-\tswitch (keyCode [0]) {", "-\t\tcase 36: /* Return */", "-\t\t\t/*", "-\t\t\t* Feature in the Macintosh.  The default behaviour when the return key is pressed is", "-\t\t\t* to select the default button.  This is not the expected behaviour for Composite and", "-\t\t\t* its subclasses.  The fix is to avoid calling the default handler.", "-\t\t\t*/", "-\t\t\treturn OS.noErr;", "+\tif ((state & CANVAS) != 0) {", "+\t\tint [] keyCode = new int [1];", "+\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyCode, OS.typeUInt32, null, keyCode.length * 4, null, keyCode);", "+\t\tswitch (keyCode [0]) {", "+\t\t\tcase 36: /* Return */", "+\t\t\t\t/*", "+\t\t\t\t* Feature in the Macintosh.  The default behaviour when the return key is pressed is", "+\t\t\t\t* to select the default button.  This is not the expected behaviour for Composite and", "+\t\t\t\t* its subclasses.  The fix is to avoid calling the default handler.", "+\t\t\t\t*/", "+\t\t\t\treturn OS.noErr;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da10e8b741e8fbc77fbcaf205b9c65e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "087391432c358a97aa293253d3f96865b2753451", "commitAfterChange": "3f92c6f0fc3dca30dca82dabb4b8ec80f538abd5", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int mouseProc (int nextHandler, int theEvent, int userData)", "diff": ["+\t\tcase OS.kEventMouseDown:", "+\t\t\tshort [] buttonData = new short [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamMouseButton, OS.typeMouseButton, null, 2, null, buttonData);", "+\t\t\tint [] clickCountData = new int [1];", "+\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamClickCount, OS.typeUInt32, null, 4, null, clickCountData);", "+\t\t\tclickCount = clickCountButton == buttonData [0] ? clickCountData [0] : 1;", "+\t\t\tclickCountButton = buttonData [0];", "+\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b628c108c9635c59c48579c3443d201", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "93b1e60e9a27fc0760da291466fadf01e1685f72", "commitAfterChange": "2bcbf773f9ab1109dfb5249cf2aa7033c799d88b", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  int kEventMenuTargetItem (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMenuTargetItem (int nextHandler, int theEvent, int userData)", "diff": ["-\tint [] commandID = new int [1];", "-\tif (OS.GetEventParameter (theEvent, OS.kEventParamMenuCommand, OS.typeMenuCommand, null, 4, null, commandID) == OS.noErr) {", "-\t\tDisplay display = getDisplay ();", "-\t\tlastTarget = display.findMenuItem (commandID [0]);", "+\tshort [] index = new short [1];", "+\tif (OS.GetEventParameter (theEvent, OS.kEventParamMenuItemIndex, OS.typeMenuItemIndex, null, 2, null, index) == OS.noErr) {", "+\t\tif (index [0] != 0) lastTarget = getItem (index [0] - 1);"]}], "num": 4760}