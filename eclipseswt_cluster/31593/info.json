{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d992af36809fc11d7e533cb767d02455", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c728d71cdfd07604f2b3f54e0a8dbfc8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "7c5eb4113314d6c1a87d115a7953c7559fd3cd30", "commitAfterChange": "1053da296d789d494cf12f99e5a4c362d76c075b", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 91, "signatureBeforeChange": "  int processFocusIn(int int0, int int1, int int2)", "signatureAfterChange": "  int processFocusIn (int int0, int int1, int int2)", "diff": ["+int processFocusIn (int int0, int int1, int int2) {", "+\tsendEvent (SWT.FocusIn);", "+\t// widget could be disposed at this point", "+\tif (handle == 0) return 0;", "+\tprocessIMEFocusIn ();", "+", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tShell shell = _getShell ();", "+\tif (!shell.isDisposed ()) {", "+\t\tshell.setActiveControl (this);", "+\t}", "+\treturn 0;", "+}", "-", "-int processFocusIn(int int0, int int1, int int2) {", "-\tShell shell = _getShell ();", "-\tsendEvent (SWT.FocusIn);", "-", "-\t/*", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0430848207351c6cef3ebc7c32928edc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1d28c230c8521595a193c506a7bcba33dc702ce0", "commitAfterChange": "924f2b3baababf87e9078e95ca545c0457405129", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMouseDown (int nextHandler, int theEvent, int userData)", "diff": ["-\tsendMouseEvent (SWT.MouseDown, button [0], 0, 0, false, theEvent);", "-\tif (clickCount [0] == 2) sendMouseEvent (SWT.MouseDoubleClick, button [0], 0, 0, false, theEvent);", "-\tif ((state & GRAB) != 0) display.grabControl = this;", "-\t/*", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "+\tint result = sendMouseEvent (SWT.MouseDown, button [0], 0, 0, true, theEvent) ? OS.eventNotHandledErr : OS.noErr;", "+\tif (isDisposed ()) return OS.noErr;", "+\tif (clickCount [0] == 2) {", "+\t\tresult = sendMouseEvent (SWT.MouseDoubleClick, button [0], 0, 0, true, theEvent) ? OS.eventNotHandledErr : OS.noErr;", "+\t\tif (isDisposed ()) return OS.noErr;", "-\treturn OS.eventNotHandledErr;", "+\tif ((state & GRAB) != 0) display.grabControl = this;", "+\tif (!shell.isDisposed ()) shell.setActiveControl (this);", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc13fed9413220a5cb869021118ab120", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "4def951fc85e643080de398e85c25cb30ec79f91", "commitAfterChange": "ea10febb5ae3b0d1b19a13c89b6c7b27ab367f3a", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 86, "signatureBeforeChange": "  int processFocusIn (int int0, int int1, int int2)", "signatureAfterChange": "  int gtk_focus_in_event (int widget, int event)", "diff": ["+", "+int gtk_focus_in_event (int widget, int event) {", "+\tsendEvent (SWT.FocusIn);", "+\t// widget could be disposed at this point", "+\tif (handle == 0) return 0;", "+\tif (hooks (SWT.KeyDown) || hooks (SWT.KeyUp)) {", "+\t\tint imHandle = imHandle ();", "+\t\tif (imHandle != 0) OS.gtk_im_context_focus_in (imHandle);", "+\t}", "+", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/\t", "+\tShell shell = _getShell ();", "+\tif (!shell.isDisposed ()) {", "+\t\tshell.setActiveControl (this);", "+\t}", "+\treturn 0;", "+}", "-", "-int processFocusIn (int int0, int int1, int int2) {", "-\tsendEvent (SWT.FocusIn);", "-\t// widget could be disposed at this point", "-\tif (handle == 0) return 0;", "-\tprocessIMEFocusIn ();", "-", "-\t/*", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tShell shell = _getShell ();", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "-\t}", "-\treturn 0;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45fa2e3dc2ab8bf4287dd7e6ffae2338", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "985580b851b6889e225f6394fc5db0c3f7391879", "commitAfterChange": "3785a48b5eb31a89fd727edd8fea32a7122ede6e", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  void sendFocusEvent (int type)", "signatureAfterChange": "  void sendFocusEvent (int type)", "diff": ["+\tDisplay display = this.display;", "+\tdisplay.focusControl = this;", "+\tdisplay.focusEvent = type;", "-\tswitch (type) {", "-\t\tcase SWT.FocusIn: {", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "+\tdisplay.focusControl = null;", "+\tdisplay.focusEvent = SWT.None;", "+\t/*", "+\t* It is possible that the shell may be", "+\t* disposed at this point.  If this happens", "+\t* don't send the activate and deactivate", "+\t* events.", "+\t*/", "+\tif (!shell.isDisposed ()) {", "+\t\tswitch (type) {", "+\t\t\tcase SWT.FocusIn: ", "-\t\t\t}\t\t\t", "-\t\t\tbreak;", "-\t\t}", "-\t\tcase SWT.FocusOut: {", "-\t\t\t/*", "-\t\t\t* It is possible that the shell may be", "-\t\t\t* disposed at this point.  If this happens", "-\t\t\t* don't send the activate and deactivate", "-\t\t\t* events.", "-\t\t\t*/", "-\t\t\tif (!shell.isDisposed ()) {", "-\t\t\t\tDisplay display = shell.display;", "+\t\t\t\tbreak;", "+\t\t\tcase SWT.FocusOut:", "-\t\t\t}", "-\t\t\tbreak;", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf5ee5b9c008e15d9842bc591e47272", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1d28c230c8521595a193c506a7bcba33dc702ce0", "commitAfterChange": "924f2b3baababf87e9078e95ca545c0457405129", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 156, "signatureBeforeChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XButtonPress (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["+\tDisplay display = this.display;", "+\tdisplay.hideToolTip ();", "-\tdisplay.hideToolTip ();", "-\tif (!sendMouseEvent (SWT.MouseDown, xEvent)) {", "-\t\tOS.memmove (continue_to_dispatch, new int [1], 4);", "-\t\treturn 1;", "-\t}", "+\tboolean dispatch = sendMouseEvent (SWT.MouseDown, xEvent);", "+\tif (isDisposed ()) return 1;", "-\t\tEvent event = new Event ();", "-\t\tevent.x = xEvent.x;", "-\t\tevent.y = xEvent.y;", "-\t\tpostEvent (SWT.DragDetect, event);", "+\t\tsendDragEvent (xEvent.x, xEvent.y);", "+\t\tif (isDisposed ()) return 1;", "+\t\tif (isDisposed ()) return 1;", "-\t\tsendMouseEvent (SWT.MouseDoubleClick, xEvent);", "+\t\tdispatch = sendMouseEvent (SWT.MouseDoubleClick, xEvent);", "+\t\t// widget could be disposed at this point", "-\t", "-\t/* ", "-\t* It is possible that the shell may be", "-\t* disposed at this point.  If this happens", "-\t* don't send the activate and deactivate", "-\t* events.", "-\t*/\t", "-\tif (!shell.isDisposed ()) {", "-\t\tshell.setActiveControl (this);", "+\tif (!shell.isDisposed ()) shell.setActiveControl (this);", "+\tif (!dispatch) {", "+\t\tOS.memmove (continue_to_dispatch, new int [1], 4);", "+\t\treturn 1;"]}], "num": 31593}