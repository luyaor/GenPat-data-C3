{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ba20c96f07d8b07ba5851e3fbcf520b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f352dcdc22d65a46b413b3ba5e40e47b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/cocoa/org/eclipse/swt/printing/Printer.java", "commitBeforeChange": "0a50d92817a0ec852579e15a962a04552ba58310", "commitAfterChange": "5f8c70f9663ba812b07371317d526ce083d22a28", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void create(DeviceData deviceData)", "signatureAfterChange": " protected void create(DeviceData deviceData)", "diff": ["-\tint[] buffer = new int[1];", "-\tif (OS.PMCreateSession(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tprintSession = buffer[0];", "-\tif (printSession == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\t", "-\tif (data.otherData != null) {", "-\t\t/* Deserialize settings */", "-\t\tint offset = 0;", "-\t\tbyte[] otherData = data.otherData;", "-\t\toffset = unpackData(buffer, otherData, offset);", "-\t\tint flatSettings = buffer[0];", "-\t\toffset = unpackData(buffer, otherData, offset);", "-\t\tint flatFormat = buffer[0];", "-\t\tif (OS.PMUnflattenPrintSettings(flatSettings, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tprintSettings = buffer[0];", "-\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tif (OS.PMUnflattenPageFormat(flatFormat, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tpageFormat = buffer[0];", "-\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.DisposeHandle(flatSettings);", "-\t\tOS.DisposeHandle(flatFormat);", "-\t} else {", "-\t\t/* Create default settings */", "-\t\tif (OS.PMCreatePrintSettings(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tprintSettings = buffer[0];", "-\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.PMSessionDefaultPrintSettings(printSession, printSettings);", "-\t\tif (OS.PMCreatePageFormat(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tpageFormat = buffer[0];", "-\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tOS.PMSessionDefaultPageFormat(printSession, pageFormat);", "-\t}", "+\tprinter = NSPrinter.static_printerWithName_(NSString.stringWith(data.name));", "+\tprinter.retain();", "-\tif (PREVIEW_DRIVER.equals(data.driver)) {", "-\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "-\t}", "-\tString name = data.name;", "-\tchar[] buffer1 = new char[name.length ()];", "-\tname.getChars(0, buffer1.length, buffer1, 0);", "-\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer1, buffer1.length);", "-\tif (ptr != 0) {", "-\t\tOS.PMSessionSetCurrentPrinter(printSession, ptr); ", "-\t\tOS.CFRelease(ptr);", "-\t}", "-\t", "-\tOS.PMSessionValidatePrintSettings(printSession, printSettings, null);", "-\tOS.PMSessionValidatePageFormat(printSession, pageFormat, null);\t", "-\t", "-\tint graphicsContextsArray = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "-\tif (graphicsContextsArray != 0) {", "-\t\tOS.CFArrayAppendValue(graphicsContextsArray, OS.kPMGraphicsContextCoreGraphics());", "-\t\tOS.PMSessionSetDocumentFormatGeneration(printSession, OS.kPMDocumentFormatPDF(), graphicsContextsArray, 0);", "-\t\tOS.CFRelease(graphicsContextsArray);", "-\t}", "+//\tint[] buffer = new int[1];", "+//\tif (OS.PMCreateSession(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\tprintSession = buffer[0];", "+//\tif (printSession == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\t", "+//\tif (data.otherData != null) {", "+//\t\t/* Deserialize settings */", "+//\t\tint offset = 0;", "+//\t\tbyte[] otherData = data.otherData;", "+//\t\toffset = unpackData(buffer, otherData, offset);", "+//\t\tint flatSettings = buffer[0];", "+//\t\toffset = unpackData(buffer, otherData, offset);", "+//\t\tint flatFormat = buffer[0];", "+//\t\tif (OS.PMUnflattenPrintSettings(flatSettings, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tprintSettings = buffer[0];", "+//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tif (OS.PMUnflattenPageFormat(flatFormat, buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tpageFormat = buffer[0];", "+//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.DisposeHandle(flatSettings);", "+//\t\tOS.DisposeHandle(flatFormat);", "+//\t} else {", "+//\t\t/* Create default settings */", "+//\t\tif (OS.PMCreatePrintSettings(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tprintSettings = buffer[0];", "+//\t\tif (printSettings == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.PMSessionDefaultPrintSettings(printSession, printSettings);", "+//\t\tif (OS.PMCreatePageFormat(buffer) != OS.noErr) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tpageFormat = buffer[0];", "+//\t\tif (pageFormat == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "+//\t\tOS.PMSessionDefaultPageFormat(printSession, pageFormat);", "+//\t}", "+//\t", "+//\tif (PREVIEW_DRIVER.equals(data.driver)) {", "+//\t\tOS.PMSessionSetDestination(printSession, printSettings, (short) OS.kPMDestinationPreview, 0, 0);", "+//\t}", "+//\tString name = data.name;", "+//\tchar[] buffer1 = new char[name.length ()];", "+//\tname.getChars(0, buffer1.length, buffer1, 0);", "+//\tint ptr = OS.CFStringCreateWithCharacters(OS.kCFAllocatorDefault, buffer1, buffer1.length);", "+//\tif (ptr != 0) {", "+//\t\tOS.PMSessionSetCurrentPrinter(printSession, ptr); ", "+//\t\tOS.CFRelease(ptr);", "+//\t}", "+//\t", "+//\tOS.PMSessionValidatePrintSettings(printSession, printSettings, null);", "+//\tOS.PMSessionValidatePageFormat(printSession, pageFormat, null);\t", "+//\t", "+//\tint graphicsContextsArray = OS.CFArrayCreateMutable(OS.kCFAllocatorDefault, 1, 0);", "+//\tif (graphicsContextsArray != 0) {", "+//\t\tOS.CFArrayAppendValue(graphicsContextsArray, OS.kPMGraphicsContextCoreGraphics());", "+//\t\tOS.PMSessionSetDocumentFormatGeneration(printSession, OS.kPMDocumentFormatPDF(), graphicsContextsArray, 0);", "+//\t\tOS.CFRelease(graphicsContextsArray);", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce112199caf2be7b52245746cf8dfec7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/cocoa/org/eclipse/swt/browser/MozillaDelegate.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int getHandle ()", "signatureAfterChange": "  int getHandle ()", "diff": ["-    int embedHandle = Cocoa.objc_msgSend (Cocoa.C_NSImageView, Cocoa.S_alloc);", "-\tif (embedHandle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tNSRect r = new NSRect ();", "-\tembedHandle = Cocoa.objc_msgSend (embedHandle, Cocoa.S_initWithFrame, r);", "-\tint rc;", "-\tint[] outControl = new int[1];", "-\tif (USE_COCOA_VIEW_CREATE && OS.VERSION >= 0x1050) {", "-\t\trc = Cocoa.HICocoaViewCreate (embedHandle, 0, outControl);", "-\t} else {", "-\t\ttry {", "-\t\t\tSystem.loadLibrary (\"frameembedding\"); //$NON-NLS-1$", "-\t\t} catch (UnsatisfiedLinkError e) {}", "-\t\trc = Cocoa.HIJavaViewCreateWithCocoaView (outControl, embedHandle);", "-\t}", "-\tif (rc != OS.noErr || outControl[0] == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "-\tint subHIView = outControl[0];", "-\tHILayoutInfo newLayoutInfo = new HILayoutInfo ();", "-\tnewLayoutInfo.version = 0;", "-\tOS.HIViewGetLayoutInfo (subHIView, newLayoutInfo);", "-\tHISideBinding biding = newLayoutInfo.binding.top;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMin;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.left;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMin;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.bottom;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMax;", "-\tbiding.offset = 0;", "-\tbiding = newLayoutInfo.binding.right;", "-\tbiding.toView = 0;", "-\tbiding.kind = OS.kHILayoutBindMax;", "-\tbiding.offset = 0;", "-\tOS.HIViewSetLayoutInfo (subHIView, newLayoutInfo);", "-\tOS.HIViewChangeFeatures (subHIView, OS.kHIViewFeatureIsOpaque, 0);", "-\tOS.HIViewSetVisible (subHIView, true);", "-\tint parentHandle = browser.handle;", "-\tOS.HIViewAddSubview (browser.handle, subHIView);", "-\tCGRect rect = new CGRect ();", "-\tOS.HIViewGetFrame (parentHandle, rect);", "-\trect.x = rect.y = 0;", "-\tOS.HIViewSetFrame (subHIView, rect);", "-\thandles.put (new LONG (embedHandle), new LONG (browser.handle));", "-", "-\tif (Callback3 == null) Callback3 = new Callback (this.getClass (), \"eventProc3\", 3); //$NON-NLS-1$", "-\tint callback3Address = Callback3.getAddress ();", "-\tif (callback3Address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tint [] mask = new int [] {", "-\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "-\t};", "-\tint controlTarget = OS.GetControlEventTarget (subHIView);", "-\tOS.InstallEventHandler (controlTarget, callback3Address, mask.length / 2, mask, browser.handle, null);", "+\tint embedHandle = browser.view.id;", "+//    int embedHandle = Cocoa.objc_msgSend (Cocoa.C_NSImageView, Cocoa.S_alloc);", "+//\tif (embedHandle == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+//\tNSRect r = new NSRect ();", "+//\tembedHandle = Cocoa.objc_msgSend (embedHandle, Cocoa.S_initWithFrame, r);", "+//\tint rc;", "+//\tint[] outControl = new int[1];", "+//\tif (USE_COCOA_VIEW_CREATE && OS.VERSION >= 0x1050) {", "+//\t\trc = Cocoa.HICocoaViewCreate (embedHandle, 0, outControl);", "+//\t} else {", "+//\t\ttry {", "+//\t\t\tSystem.loadLibrary (\"frameembedding\"); //$NON-NLS-1$", "+//\t\t} catch (UnsatisfiedLinkError e) {}", "+//\t\trc = Cocoa.HIJavaViewCreateWithCocoaView (outControl, embedHandle);", "+//\t}", "+//\tif (rc != OS.noErr || outControl[0] == 0) SWT.error (SWT.ERROR_NO_HANDLES);", "+//\tint subHIView = outControl[0];", "+//\tHILayoutInfo newLayoutInfo = new HILayoutInfo ();", "+//\tnewLayoutInfo.version = 0;", "+//\tOS.HIViewGetLayoutInfo (subHIView, newLayoutInfo);", "+//\tHISideBinding biding = newLayoutInfo.binding.top;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMin;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.left;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMin;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.bottom;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMax;", "+//\tbiding.offset = 0;", "+//\tbiding = newLayoutInfo.binding.right;", "+//\tbiding.toView = 0;", "+//\tbiding.kind = OS.kHILayoutBindMax;", "+//\tbiding.offset = 0;", "+//\tOS.HIViewSetLayoutInfo (subHIView, newLayoutInfo);", "+//\tOS.HIViewChangeFeatures (subHIView, OS.kHIViewFeatureIsOpaque, 0);", "+//\tOS.HIViewSetVisible (subHIView, true);", "+//\tint parentHandle = browser.handle;", "+//\tOS.HIViewAddSubview (browser.handle, subHIView);", "+//\tCGRect rect = new CGRect ();", "+//\tOS.HIViewGetFrame (parentHandle, rect);", "+//\trect.x = rect.y = 0;", "+//\tOS.HIViewSetFrame (subHIView, rect);", "+//\thandles.put (new LONG (embedHandle), new LONG (browser.handle));", "+//", "+//\tif (Callback3 == null) Callback3 = new Callback (this.getClass (), \"eventProc3\", 3); //$NON-NLS-1$", "+//\tint callback3Address = Callback3.getAddress ();", "+//\tif (callback3Address == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "+//\tint [] mask = new int [] {", "+//\t\tOS.kEventClassMouse, OS.kEventMouseDown,", "+//\t};", "+//\tint controlTarget = OS.GetControlEventTarget (subHIView);", "+//\tOS.InstallEventHandler (controlTarget, callback3Address, mask.length / 2, mask, browser.handle, null);"]}], "num": 25254}