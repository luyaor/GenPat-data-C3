{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "07f44fae05e2df96edd5c7ced6a2cffb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9ab19fdd75728010927b744954406d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "691e78a925a852ef45174d46cf569261ad5a3971", "commitAfterChange": "6adb57c9cc37b021facfdd674b19914ca9c4d2cb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\r \t\r \tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole)", "signatureAfterChange": "\r \t\r \tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole)", "diff": ["-\t\tif (accessibleControlListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accRole(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pvarRole);\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\r", "+\t\t/* Get the default role from the OS. */\r", "+\t\tint osRole = COM.ROLE_SYSTEM_CLIENT;\r", "+\t\tint code = iaccessible.get_accRole(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pvarRole);\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tshort[] pvt = new short[1];\r", "+\t\t\tCOM.MoveMemory(pvt, pvarRole, 2);\r", "+\t\t\tif (pvt[0] == COM.VT_I4) {\r", "+\t\t\t\tint[] pRole = new int[1];\r", "+\t\t\t\tCOM.MoveMemory(pRole, pvarRole + 8, 4);\r", "+\t\t\t\tosRole = pRole[0];\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.detail = osToRole(osRole);\r", "+\t\tif (varChild_lVal == COM.CHILDID_SELF) {\r", "+\t\t\tevent.childID = ACC.CHILDID_SELF;\r", "+\t\t} else {\r", "+\t\t\tif (control instanceof Tree) {\r", "+\t\t\t\t/* Tree item childIDs are pointers (not 1-based indices). */\r", "+\t\t\t\tevent.childID = varChild_lVal;\r", "+\t\t\t\t\r", "+\t\t\t\t/* Currently our checkbox tree is emulated using state mask images,\r", "+\t\t\t\t * so we need to specify 'checkbox' role for the items here. */\r", "+\t\t\t\tTree tree = (Tree) control;\r", "+\t\t\t\tif ((tree.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r", "+\t\t\t} else if (control instanceof Table) {\r", "+\t\t\t\tevent.childID = varChild_lVal - 1;\r", "+\t\t\t\t\r", "+\t\t\t\t/* Currently our checkbox table is emulated using state mask images,\r", "+\t\t\t\t * so we need to specify 'checkbox' role for the items here. */\r", "+\t\t\t\tTable table = (Table) control;\r", "+\t\t\t\tif ((table.getStyle() & SWT.CHECK) != 0) event.detail = ACC.ROLE_CHECKBUTTON;\r", "+\t\t\t} else {\r", "+\t\t\t\tevent.childID = varChild_lVal - 1;\r", "+\t\t\t}\r", "+\t\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895d97cdc5e3ed38c3acd9e3f626d4a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "691e78a925a852ef45174d46cf569261ad5a3971", "commitAfterChange": "6adb57c9cc37b021facfdd674b19914ca9c4d2cb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r \t\r \tint get_accState(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarState)", "signatureAfterChange": "\r \t\r \tint get_accState(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarState)", "diff": ["-\t\tif (accessibleControlListeners.size() == 0) {\r", "-\t\t\treturn iaccessible.get_accState(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pvarState);\r", "+\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "+\r", "+\t\t/* Get the default state from the OS. */\r", "+\t\tint osState = 0;\r", "+\t\tint code = iaccessible.get_accState(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pvarState);\r", "+\t\tif (code == COM.S_OK) {\r", "+\t\t\tshort[] pvt = new short[1];\r", "+\t\t\tCOM.MoveMemory(pvt, pvarState, 2);\r", "+\t\t\tif (pvt[0] == COM.VT_I4) {\r", "+\t\t\t\tint[] pState = new int[1];\r", "+\t\t\t\tCOM.MoveMemory(pState, pvarState + 8, 4);\r", "+\t\t\t\tosState = pState[0];\r", "+\t\t\t}\r", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;\r", "-\t\tevent.childID = varChild_lVal - 1;\r", "+\t\tevent.detail = osToState(osState);\r", "+\t\tif (varChild_lVal == COM.CHILDID_SELF) {\r", "+\t\t\tevent.childID = ACC.CHILDID_SELF;\r", "+\t\t} else {\r", "+\t\t\tif (control instanceof Tree) {\r", "+\t\t\t\t/* Tree item childIDs are pointers (not 1-based indices). */\r", "+\t\t\t\tevent.childID = varChild_lVal;\r", "+\t\t\t\t\r", "+\t\t\t\t/* Currently our checkbox tree is emulated using state mask images,\r", "+\t\t\t\t * so we need to determine if the item is 'checked' here. */\r", "+\t\t\t\tint hwnd = control.handle;\r", "+\t\t\t\tTVITEM tvItem = new TVITEM ();\r", "+\t\t\t\ttvItem.mask = OS.TVIF_HANDLE | OS.TVIF_STATE;\r", "+\t\t\t\ttvItem.hItem = varChild_lVal;\r", "+\t\t\t\ttvItem.stateMask = OS.TVIS_STATEIMAGEMASK;\r", "+\t\t\t\tint result = OS.SendMessage (hwnd, OS.TVM_GETITEM, 0, tvItem);\r", "+\t\t\t\tboolean checked = (result != 0) && (((tvItem.state >> 12) & 1) == 0);\r", "+\t\t\t\tif (checked) event.detail |= ACC.STATE_CHECKED;\r", "+\t\t\t} else if (control instanceof Table) {\r", "+\t\t\t\tevent.childID = varChild_lVal - 1;\r", "+\r", "+\t\t\t\t/* Currently our checkbox table is emulated using state mask images,\r", "+\t\t\t\t * so we need to determine if the item is 'checked' here. */\r", "+\t\t\t\tTable table = (Table) control;\r", "+\t\t\t\tTableItem item = table.getItem(event.childID);\r", "+\t\t\t\tif (item != null) {\r", "+\t\t\t\t\tif (item.getChecked()) event.detail |= ACC.STATE_CHECKED;\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tevent.childID = varChild_lVal - 1;\r", "+\t\t\t}\r", "+\t\t}\r", "+\r"]}], "num": 17398}