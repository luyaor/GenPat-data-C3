{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46f853a25b490d980c60377ec6cbc596", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50d1001bfa569ba60332498d1d75b35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "68864ed7c9ad64ce59d0a80b5122e67a238d21ef", "commitAfterChange": "14d8d0d3e1117aced9ac9d0460bf8e1bf18b9d70", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r int getCaretPosition(int logicalOffset, int direction)", "signatureAfterChange": "\r int getCaretPosition(int logicalOffset, int direction)", "diff": ["-\t// consider local numbers as R2L in determining direction boundaries.\r", "-\t// fixes 1GK9API.\r", "+\t// always consider local numbers as a direction boundary \r", "+\t// because they represent a discontiguous text segment coming from \r", "+\t// a R2L segment.\r", "-\t\t(isRightToLeftInput(logicalOffset) != isRightToLeftInput(logicalOffset - 1) ||\r", "+\t\t(isRightToLeft(logicalOffset) != isRightToLeft(logicalOffset - 1) ||\r", "+\t\t isLocalNumber(logicalOffset) != isLocalNumber(logicalOffset - 1) ||\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5cde5d253bd6bf647551eb687028649", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextBidi.java", "commitBeforeChange": "8f49d4a8201f325fab6add743b89ff69adf390c8", "commitAfterChange": "62bddab409cbde39108242395bbf3f0e791a1929", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r private void prepareBoldText(String textline, int logicalStart, int length)", "signatureAfterChange": "\r private void prepareBoldText(String textline, int logicalStart, int length)", "diff": ["-\t// figure out what is before and after the substring\r", "-\t// so that the proper character shaping will occur\r", "+\t// Figure out what is before and after the substring so that the proper character \r", "+\t// shaping will occur.  Character shaping will not occur across bidi segments, so\r", "+\t// if the bold text starts or ends on a bidi segment, do not process the text\r", "+\t// for character shaping.\r", "+\t\t&& !isStartOfBidiSegment(logicalStart)\r", "+\t\t&& !isStartOfBidiSegment(logicalStart + length)\r"]}], "num": 27189}