{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d85202890e50f01cd855cba423307f0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "462794ae2bb1bd6e1f0205a2f654a889", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "2353899a24ebfcb319f8565185c51f1eb7d4d7d0", "commitAfterChange": "9de15cee635b8b62090b1701f3da6136926121d9", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public String getText (int start, int end)", "signatureAfterChange": " public String getText (int start, int end)", "diff": ["-\tint numChars = end - start + 1;", "-\tif (numChars < 0 || start < 0) return \"\";", "+\tif (!(0 <= start && start <= end)) error (SWT.ERROR_INVALID_RANGE);", "-\t\treturn hiddenText.substring (start, Math.min (hiddenText.length (), end));", "+\t\tif (hiddenText.length () <= end) error (SWT.ERROR_INVALID_RANGE);", "+\t\treturn hiddenText.substring (start, end);", "-\tint length = (numChars * 4 /* MB_CUR_MAX */) + 1;", "+\tint ptr = OS.XmTextGetString (handle);", "+\tif (ptr == 0) return \"\";", "+\tint length = OS.strlen (ptr);", "-\tint code = OS.XmTextGetSubstring (handle, start, numChars, length, buffer);", "-\tif (code == OS.XmCOPY_FAILED) return \"\";", "-\tchar [] unicode = Converter.mbcsToWcs (getCodePage (), buffer);", "-\tif (code == OS.XmCOPY_TRUNCATED) {", "-\t\tnumChars = OS.XmTextGetLastPosition (handle) - start;", "-\t}", "-\treturn new String (unicode, 0, numChars);", "+\tOS.memmove (buffer, ptr, length);", "+\tOS.XtFree (ptr);", "+\tif (length <= end) error (SWT.ERROR_INVALID_RANGE);", "+\treturn new String (Converter.mbcsToWcs (getCodePage (), buffer));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37abf748e98964a86af424c81e776a33", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "02071a926437c5043a62d4c014c04a93364c6e23", "commitAfterChange": "304e1d633c64bc4e0e787e704a5454a54c754512", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "\r boolean translateMnemonic (int aKey, XKeyEvent xEvent)", "signatureAfterChange": "\r boolean translateMnemonic (char key, XKeyEvent xEvent)", "diff": ["-boolean translateMnemonic (int aKey, XKeyEvent xEvent) {\r", "+boolean translateMnemonic (char key, XKeyEvent xEvent) {\r", "+\tif (!isVisible () || !isEnabled ()) return false;\r", "+\tboolean doit = mnemonicMatch (key);\r", "+\tif (hooks (SWT.Traverse)) {\r", "+\t\tEvent event = new Event();\r", "+\t\tevent.doit = doit;\r", "+\t\tevent.detail = SWT.TRAVERSE_MNEMONIC;\r", "+\t\tevent.time = xEvent.time;\r", "+\t\tsetKeyState (event, xEvent);\r", "+\t\tsendEvent (SWT.Traverse, event);\r", "+\t\tdoit = event.doit;\r", "+\t}\r", "+\tif (doit) return mnemonicHit (key);\r", "+\treturn false;\r", "+}\r", "-\tif (!shell.isVisible () || !shell.isEnabled ()) return false;\r", "-\tchar ch = mbcsToWcs ((char) aKey);\r", "-\treturn ch != 0 && shell.traverseMnemonic (ch);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f2de963f2387f4d1d46effccdafe8a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "5c812e1875423c70eb06fe83223ed77171c7c77d", "commitAfterChange": "35b5529a5d7d4dd6537d0fb3ab92f23837526141", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void remove (int start, int end)", "signatureAfterChange": "  void remove (int index, boolean fixScroll)", "diff": ["+", "+void remove (int index, boolean fixScroll) {", "+\tif (fixScroll) setScrollWidth();", "-\tfor (int i=0; i<length; i++) remove (start);"]}], "num": 24411}