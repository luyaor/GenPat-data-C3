{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe58039e796b65f5a82d50f4c6ffe765", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b92fccd2d3ab3b6db87ff0db03bb8f3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "c796b4db53e072130275c2f620c0d9b0db0c1b3b", "commitAfterChange": "49a344a9debef650e6a2b50d4e5f55cb0b04806d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public Point getSize ()", "signatureAfterChange": " public Point getSize ()", "diff": ["-\t\tOS.GetMenuBarInfo (hwndParent, OS.OBJID_MENU, 0, info);", "-\t\tint width = info.right - info.left;", "-\t\tint height = info.bottom - info.top;", "-\t\treturn new Point (width, height);", "+\t\tif (OS.GetMenuBarInfo (hwndParent, OS.OBJID_MENU, 0, info)) {", "+\t\t\tint width = info.right - info.left;", "+\t\t\tint height = info.bottom - info.top;", "+\t\t\treturn new Point (width, height);", "+\t\t}", "+\t} else {", "+\t\tint count = GetMenuItemCount (handle);", "+\t\tif (count == 0) return new Point (0, 0);", "+\t\tRECT rect = new RECT ();", "+\t\tint hwndParent = parent.handle;", "+\t\tif (OS.GetMenuItemRect (hwndParent, handle, count - 1, rect)) {", "+\t\t\tint width = rect.right + 4;", "+\t\t\tint height = rect.bottom + 4;", "+\t\t\treturn new Point (width, height);", "+\t\t}", "-\tint count = GetMenuItemCount (handle);", "-\tif (count == 0) return new Point (0, 0);", "-\tRECT rect = new RECT ();", "-\tint hwndParent = parent.handle;", "-\tif (!OS.GetMenuItemRect (hwndParent, handle, count - 1, rect)) {", "-\t\treturn new Point (0, 0);", "-\t}", "-\tint width = rect.right + 4;", "-\tint height = rect.bottom + 4;", "-\treturn new Point (width, height);", "+\treturn new Point (0, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f44857364b2f0b54335bb7efd704bd0f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d9a401c1467de3c60e82082fb9582487dbeb27cc", "commitAfterChange": "3172b30bf1c6ff0d5e001b36bd7fac99461f15aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_SUBITEMPREPAINT (int wParam, int lParam)", "diff": ["-\t\tif (!ignoreDraw && !ignoreDrawSelected && (style & SWT.FULL_SELECTION) != 0) {", "+\t\tif (!ignoreDrawSelected && (style & SWT.FULL_SELECTION) != 0) {", "-\t/*", "-\t* Bug in Windows.  When the attibutes are for one cell in a table,", "-\t* Windows does not reset them for the next cell.  As a result, all", "-\t* subsequent cells are drawn using the previous font, foreground and", "-\t* background colors.  The fix is to set the all attributes when any", "-\t* attribute could have changed.", "-\t*/", "-\tboolean hasAttributes = true;", "-\tif (hFont == -1 && clrText == -1 && clrTextBk == -1) {", "-\t\tif (item.cellForeground == null && item.cellBackground == null && item.cellFont == null) {", "-\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\t\t\tif (count == 1) hasAttributes = false;", "-\t\t}", "-\t}", "-\tif (hasAttributes) {", "-\t\tif (hFont == -1) hFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "-\t\tOS.SelectObject (hDC, hFont);", "-\t\tif (OS.IsWindowEnabled (handle)) {", "-\t\t\tnmcd.clrText = clrText == -1 ? getForegroundPixel () : clrText;", "-\t\t\tif (clrTextBk == -1) {", "-\t\t\t\tnmcd.clrTextBk = OS.CLR_NONE;", "-\t\t\t\tif (textColor == -1) {", "-\t\t\t\t\tControl control = findBackgroundControl ();", "-\t\t\t\t\tif (control == null) control = this;", "-\t\t\t\t\tif (control.backgroundImage == null) {", "-\t\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tnmcd.clrTextBk = textColor != -1 ? OS.CLR_NONE : clrTextBk;", "+\tif (!ignoreDraw) {", "+\t\t/*", "+\t\t* Bug in Windows.  When the attibutes are for one cell in a table,", "+\t\t* Windows does not reset them for the next cell.  As a result, all", "+\t\t* subsequent cells are drawn using the previous font, foreground and", "+\t\t* background colors.  The fix is to set the all attributes when any", "+\t\t* attribute could have changed.", "+\t\t*/", "+\t\tboolean hasAttributes = true;", "+\t\tif (hFont == -1 && clrText == -1 && clrTextBk == -1) {", "+\t\t\tif (item.cellForeground == null && item.cellBackground == null && item.cellFont == null) {", "+\t\t\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "+\t\t\t\tint count = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "+\t\t\t\tif (count == 1) hasAttributes = false;", "-\t\t\tOS.MoveMemory (lParam, nmcd, NMLVCUSTOMDRAW.sizeof);", "-\t\tcode |= OS.CDRF_NEWFONT;", "+\t\tif (hasAttributes) {", "+\t\t\tif (hFont == -1) hFont = OS.SendMessage (handle, OS.WM_GETFONT, 0, 0);", "+\t\t\tOS.SelectObject (hDC, hFont);", "+\t\t\tif (OS.IsWindowEnabled (handle)) {", "+\t\t\t\tnmcd.clrText = clrText == -1 ? getForegroundPixel () : clrText;", "+\t\t\t\tif (clrTextBk == -1) {", "+\t\t\t\t\tnmcd.clrTextBk = OS.CLR_NONE;", "+\t\t\t\t\tif (textColor == -1) {", "+\t\t\t\t\t\tControl control = findBackgroundControl ();", "+\t\t\t\t\t\tif (control == null) control = this;", "+\t\t\t\t\t\tif (control.backgroundImage == null) {", "+\t\t\t\t\t\t\tnmcd.clrTextBk = control.getBackgroundPixel ();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tnmcd.clrTextBk = textColor != -1 ? OS.CLR_NONE : clrTextBk;", "+\t\t\t\t}", "+\t\t\t\tOS.MoveMemory (lParam, nmcd, NMLVCUSTOMDRAW.sizeof);", "+\t\t\t}", "+\t\t\tcode |= OS.CDRF_NEWFONT;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffb5a61a8827c47178e101a655461c7e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "037643338ac7a4f64fc48b34469c86632a359ffe", "commitAfterChange": "07e2a59a9f95423dd94e93f17c1d85884434abf2", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags, boolean defer)", "diff": ["-\tif (defer && parent != null && parent.lpwp != null) {", "+\tif (defer && parent != null) {", "-\t\tint index = 0;", "-\t\tWINDOWPOS [] lpwp = parent.lpwp;", "-\t\twhile (index < lpwp.length) {", "-\t\t\tif (lpwp [index] == null) break;", "-\t\t\tindex ++;", "+\t\tif (parent.lpwp != null) {", "+\t\t\tint index = 0;", "+\t\t\tWINDOWPOS [] lpwp = parent.lpwp;", "+\t\t\twhile (index < lpwp.length) {", "+\t\t\t\tif (lpwp [index] == null) break;", "+\t\t\t\tindex ++;", "+\t\t\t}", "+\t\t\tif (index == lpwp.length) {", "+\t\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "+\t\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "+\t\t\t\tparent.lpwp = lpwp = newLpwp;", "+\t\t\t}", "+\t\t\tWINDOWPOS wp = new WINDOWPOS ();", "+\t\t\twp.hwnd = topHandle;", "+\t\t\twp.x = x;", "+\t\t\twp.y = y;", "+\t\t\twp.cx = width;", "+\t\t\twp.cy = height;", "+\t\t\twp.flags = flags;", "+\t\t\tlpwp [index] = wp;", "+\t\t\treturn;", "-\t\tif (index == lpwp.length) {", "-\t\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\t\tparent.lpwp = lpwp = newLpwp;", "-\t\t}", "-\t\tWINDOWPOS wp = new WINDOWPOS ();", "-\t\twp.hwnd = topHandle;", "-\t\twp.x = x;", "-\t\twp.y = y;", "-\t\twp.cx = width;", "-\t\twp.cy = height;", "-\t\twp.flags = flags;", "-\t\tlpwp [index] = wp;", "-\t\treturn;"]}], "num": 27864}