{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86fd4f512db06108ab9170ff109b9689", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704a985a9266e969d09a19885a3d2453", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "9b18e6f49c4ecc8605a2c46b390ca14ded2c91a9", "commitAfterChange": "d6ab989997c9a5b82c86dd3c4c6c1b7073af4459", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  int processVerify (int int0, int int1, int int2)", "signatureAfterChange": "  int processVerify (int int0, int int1, int int2)", "diff": ["-\t/*if (!hooks (SWT.Verify)) return 0;", "+\tif (!hooks (SWT.Verify)) return 0;", "-\t}*/", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8fbadb50b39ecdd3cdb10dc04837759", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "dbb652fe193019d96be9d6af80af3f6e1918e181", "commitAfterChange": "a9865ce41544b9634fe7b5cf08a114ae91a2faeb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 31, "signatureBeforeChange": " public boolean execute(String fileName)", "signatureAfterChange": " public boolean execute(String fileName)", "diff": ["-\tswitch (getDesktop(display)) {", "-\t\tcase DESKTOP_KDE: {", "-\t\t\tString urlString = \"file://\" + fileName;", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbyte[] buffer = Converter.wcsToMbcs(null, urlString, true);", "-\t\t\tint qString = KDE.QString_new(buffer);", "-\t\t\tint url = KDE.KURL_new(qString);", "-\t\t\tKDE.QString_delete(qString);", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbuffer = Converter.wcsToMbcs(null, name, true);", "-\t\t\tint mimeTypeName = KDE.QString_new(buffer);", "-\t\t\tint pid = KDE.KRun_runURL(url, mimeTypeName);", "-\t\t\tKDE.KURL_delete(url);", "-\t\t\tKDE.QString_delete(mimeTypeName);", "-\t\t\treturn (pid != 0);", "-\t\t}", "-\t\tcase DESKTOP_GNOME: {", "-\t\t\tif (gnomeExpectUri) {", "-\t\t\t\t/* convert the given path into a URL */", "-\t\t\t\tfileName = \"file://\" + fileName;", "-\t\t\t}", "-", "-\t\t\t/* Parse the command into its individual arguments. */", "-\t\t\tString[] args = parseCommand(command);", "-\t\t\tint fileArg = -1;", "-\t\t\tint index;", "-\t\t\tfor (index = 0; index < args.length; index++) {", "-\t\t\t\tint j = args[ index ].indexOf(\"%f\");", "-\t\t\t\tif (j != -1) {", "-\t\t\t\t\tString value = args[index];", "-\t\t\t\t\tfileArg = index;", "-\t\t\t\t\targs[index] = value.substring(0,j) + fileName + value.substring(j + 2);", "-\t\t\t\t}", "-\t\t\t}", "-\t", "-\t\t\t/* If a file name was given but the command did not have \"%f\" */", "-\t\t\tif ((fileName.length() > 0) && (fileArg < 0)) {", "-\t\t\t\tString[] newArgs = new String[args.length + 1];", "-\t\t\t\tfor (index = 0; index < args.length; index++) newArgs[index] = args[index];", "-\t\t\t\tnewArgs[args.length] = fileName;", "-\t\t\t\targs = newArgs;", "-\t\t\t}", "-\t", "-\t\t\t/* Execute the command. */", "-\t\t\ttry {", "-\t\t\t\tCompatibility.exec(args);", "-\t\t\t} catch (IOException e) {", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\treturn true;", "-\t\t}", "-\t\tcase DESKTOP_CDE: {", "-\t\t\t/* Use the character encoding for the default locale */", "-\t\t\tbyte[] action = Converter.wcsToMbcs(null, command, true);", "-\t\t\tbyte[] fileArg = Converter.wcsToMbcs(null, fileName, true);", "-\t\t\tInteger shell = (Integer) display.getData(CDE_SHELL);", "-\t\t\tint actionID = 0;", "-\t\t\tif (shell != null) {", "-\t\t\t\tint ptr = OS.XtMalloc(fileArg.length);", "-\t\t\t\tOS.memmove(ptr, fileArg, fileArg.length);", "-\t\t\t\tDtActionArg args = new DtActionArg();", "-\t\t\t\targs.argClass = CDE.DtACTION_FILE;", "-\t\t\t\targs.name = ptr;", "-\t\t\t\tactionID = CDE.DtActionInvoke(shell.intValue(), action, args, 1, null, null, null, 1, 0, 0);", "-\t\t\t\tOS.XtFree(ptr);", "-\t\t\t}", "-\t\t\treturn (actionID != 0);", "-\t\t}", "+\tint desktop = getDesktop(display);", "+\tswitch (desktop) {", "+\t\tcase DESKTOP_GNOME: return gnome_execute(fileName);", "+\t\tcase DESKTOP_KDE: return kde_execute(fileName);", "+\t\tcase DESKTOP_CDE: return cde_execute(fileName);"]}], "num": 23533}