{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a789558bb50c28428f78a4fdb3055e7a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b40e7170d21aa64a4fe1d2782fde3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Color.java", "commitBeforeChange": "1f2d6d7e03d28796f88f1cd0a8579f8dd597bf43", "commitAfterChange": "f240d6dd2b74543a9c7254cca3bd363a117d0a68", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test_hashCode()", "signatureAfterChange": "  public void test_hashCode()", "diff": ["-\tColor color = new Color(display, 12, 34, 56);", "+\tfinal Color color = new Color(display, 12, 34, 56);", "-\tif (color.equals(otherColor)) {", "-\t\tassertEquals(\"Hash codes of equal objects should be equal\", color.hashCode(), otherColor.hashCode());", "+\ttry {", "+\t\tif (color.equals(otherColor)) {", "+\t\t\tassertEquals(\"Hash codes of equal objects should be equal\", color.hashCode(), otherColor.hashCode());", "+\t\t}", "+\t\ttestPerformance(new Runnable () {", "+\t\t\tpublic void run() {", "+\t\t\t\tcolor.hashCode();", "+\t\t\t}", "+\t\t});", "+\t} finally {", "+\t\tcolor.dispose();", "+\t\totherColor.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "717200ea3386699331524c8ff3b30ecf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Color.java", "commitBeforeChange": "1f2d6d7e03d28796f88f1cd0a8579f8dd597bf43", "commitAfterChange": "f240d6dd2b74543a9c7254cca3bd363a117d0a68", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test_getRGB()", "signatureAfterChange": "  public void test_getRGB()", "diff": ["-\tColor color = new Color(display, 255, 255, 255);", "-\tassertNotNull(color.getRGB());", "-\tassertEquals(new RGB(255, 255, 255), color.getRGB());", "+\tfinal Color color = new Color(display, 255, 255, 255);", "+\ttry {", "+\t\tassertNotNull(color.getRGB());", "+\t\tassertEquals(new RGB(255, 255, 255), color.getRGB());", "+\t\ttestPerformance(new Runnable () {", "+\t\t\tpublic void run() {", "+\t\t\t\tcolor.getRGB();", "+\t\t\t}", "+\t\t});", "+\t} finally {", "+\t\tcolor.dispose();", "+\t}"]}], "num": 28867}