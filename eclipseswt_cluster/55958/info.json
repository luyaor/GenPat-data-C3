{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "993771d9773ef8ac23bef1cc558e5fbb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "372d83ea3236e989a2bfe021372f49ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RGB open ()", "signatureAfterChange": " public RGB open ()", "diff": ["-\tint /*long*/ handle = OS.gtk_color_selection_dialog_new (buffer);", "+\tlong /*int*/ handle = OS.gtk_color_selection_dialog_new (buffer);", "-\t\tint /*long*/ shellHandle = parent.topHandle ();", "+\t\tlong /*int*/ shellHandle = parent.topHandle ();", "-\t\tint /*long*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "+\t\tlong /*int*/ pixbufs = OS.gtk_window_get_icon_list (shellHandle);", "-\t\tint /*long*/ group = OS.gtk_window_get_group(0);", "+\t\tlong /*int*/ group = OS.gtk_window_get_group(0);", "-\t\tint /*long*/ colors = OS.g_malloc(GdkColor.sizeof * rgbs.length);", "+\t\tlong /*int*/ colors = OS.g_malloc(GdkColor.sizeof * rgbs.length);", "-\t\tint /*long*/ strPtr = OS.gtk_color_selection_palette_to_string(colors, rgbs.length);", "+\t\tlong /*int*/ strPtr = OS.gtk_color_selection_palette_to_string(colors, rgbs.length);", "-\t\tint /*long*/ settings = OS.gtk_settings_get_default ();", "+\t\tlong /*int*/ settings = OS.gtk_settings_get_default ();", "-\tint /*long*/ hookId = 0;", "+\tlong /*int*/ hookId = 0;", "-\tint /*long*/ settings = OS.gtk_settings_get_default ();", "+\tlong /*int*/ settings = OS.gtk_settings_get_default ();", "-\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\tlong /*int*/ [] ptr = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c2ef438c7c02adb01bb4279e6138ba6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/gtk/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["-\t\tint /*long*/ topHandle = getParent().handle;", "+\t\tlong /*int*/ topHandle = getParent().handle;", "-\t\tint /*long*/ settings = OS.gtk_print_settings_new();", "-\t\tint /*long*/ page_setup = OS.gtk_page_setup_new();", "+\t\tlong /*int*/ settings = OS.gtk_print_settings_new();", "+\t\tlong /*int*/ page_setup = OS.gtk_page_setup_new();", "-\t\t\tint /*long*/ printer = Printer.gtkPrinterFromPrinterData(printerData);", "+\t\t\tlong /*int*/ printer = Printer.gtkPrinterFromPrinterData(printerData);", "-\t\tint /*long*/ group = OS.gtk_window_get_group(0);", "+\t\tlong /*int*/ group = OS.gtk_window_get_group(0);", "-\t\tint /*long*/ hookId = 0;", "+\t\tlong /*int*/ hookId = 0;", "-\t\t\tint /*long*/ printer = OS.gtk_print_unix_dialog_get_selected_printer(handle);", "+\t\t\tlong /*int*/ printer = OS.gtk_print_unix_dialog_get_selected_printer(handle);", "-\t\t\t\t\t\tint /*long*/ page_ranges = OS.gtk_print_settings_get_page_ranges(settings, num_ranges);", "+\t\t\t\t\t\tlong /*int*/ page_ranges = OS.gtk_print_settings_get_page_ranges(settings, num_ranges);", "-\t\t\t\t\tint /*long*/ address = OS.gtk_print_settings_get(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI);", "+\t\t\t\t\tlong /*int*/ address = OS.gtk_print_settings_get(settings, OS.GTK_PRINT_SETTINGS_OUTPUT_URI);", "-\t\t\t\tint /*long*/ GtkPrintSettingsFunc = printSettingsCallback.getAddress();", "+\t\t\t\tlong /*int*/ GtkPrintSettingsFunc = printSettingsCallback.getAddress();", "-\t\t\t\tint /*long*/ paper_size = OS.gtk_page_setup_get_paper_size(page_setup); //$NON-NLS-1$", "+\t\t\t\tlong /*int*/ paper_size = OS.gtk_page_setup_get_paper_size(page_setup); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ea44a515862e0eeb0be286b26b32f5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Device.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public FontData[] getFontList (String faceName, boolean scalable)", "signatureAfterChange": " public FontData[] getFontList (String faceName, boolean scalable)", "diff": ["-\tint /*long*/[] family = new int /*long*/[1];", "-\tint /*long*/[] face = new int /*long*/[1];", "-\tint /*long*/[] families = new int /*long*/[1];", "+\tlong /*int*/[] family = new long /*int*/[1];", "+\tlong /*int*/[] face = new long /*int*/[1];", "+\tlong /*int*/[] families = new long /*int*/[1];", "-\tint /*long*/[] faces = new int /*long*/[1];", "+\tlong /*int*/[] faces = new long /*int*/[1];", "-\tint /*long*/ context = OS.gdk_pango_context_get();", "+\tlong /*int*/ context = OS.gdk_pango_context_get();", "-\t\t\tint /*long*/ familyName = OS.pango_font_family_get_name(family[0]);", "+\t\t\tlong /*int*/ familyName = OS.pango_font_family_get_name(family[0]);", "-\t\t        int /*long*/ fontDesc = OS.pango_font_face_describe(face[0]);", "+\t\t        long /*int*/ fontDesc = OS.pango_font_face_describe(face[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e9546cfd1fd653364d99c96f661d5d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tstatic int atkObject_get_attributes (int atkObject)", "signatureAfterChange": "  \tstatic long atkObject_get_attributes (long atkObject)", "diff": ["-\tstatic int /*long*/ atkObject_get_attributes (int /*long*/ atkObject) {", "+\tstatic long /*int*/ atkObject_get_attributes (long /*int*/ atkObject) {", "-\t\tint /*long*/ parentResult = 0;", "+\t\tlong /*int*/ parentResult = 0;", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "-\t\t\t\t\t\tint /*long*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);", "+\t\t\t\t\t\tlong /*int*/ attrPtr = OS.g_malloc(AtkAttribute.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe0d9922d19a740d224babd1692dd464", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void initNative(String filename)", "signatureAfterChange": "  void initNative(String filename)", "diff": ["-\t\tint /*long*/ bitmap = Gdip.Bitmap_new(chars, false);", "+\t\tlong /*int*/ bitmap = Gdip.Bitmap_new(chars, false);", "-\t\t\t\t\tint /*long*/[] hicon = new int /*long*/[1];", "+\t\t\t\t\tlong /*int*/[] hicon = new long /*int*/[1];", "-\t\t\t\t\t\tint /*long*/ hDC = device.internal_new_GC(null);", "-\t\t\t\t\t\tint /*long*/ srcHDC = OS.CreateCompatibleDC(hDC);", "-\t\t\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHDC, this.handle);", "-\t\t\t\t\t\tint /*long*/ graphics = Gdip.Graphics_new(srcHDC);", "+\t\t\t\t\t\tlong /*int*/ hDC = device.internal_new_GC(null);", "+\t\t\t\t\t\tlong /*int*/ srcHDC = OS.CreateCompatibleDC(hDC);", "+\t\t\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHDC, this.handle);", "+\t\t\t\t\t\tlong /*int*/ graphics = Gdip.Graphics_new(srcHDC);", "-\t\t\t\t\t\tint /*long*/ lockedBitmapData = Gdip.BitmapData_new();", "+\t\t\t\t\t\tlong /*int*/ lockedBitmapData = Gdip.BitmapData_new();", "-\t\t\t\t\t\t\t\tint /*long*/ pixels = bitmapData.Scan0;", "+\t\t\t\t\t\t\t\tlong /*int*/ pixels = bitmapData.Scan0;", "-\t\t\t\t\t\t\t\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap();", "-\t\t\t\t\t\t\t\t\t\t\tint /*long*/ palette = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, paletteSize);", "+\t\t\t\t\t\t\t\t\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap();", "+\t\t\t\t\t\t\t\t\t\t\tlong /*int*/ palette = OS.HeapAlloc(hHeap, OS.HEAP_ZERO_MEMORY, paletteSize);"]}], "num": 55958}