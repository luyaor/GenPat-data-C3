{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f5c67365efe06c33ba95fcbe1cd7ec5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a14959f7f69afb65831a58b3de07bff7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "97620fe3667502da9f174b22a0db4534a8d8f70b", "commitAfterChange": "a3c8e8904451b6db108629003e63438cb42170e1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createFromPixbuf(int type, int pixbuf)", "signatureAfterChange": "  void createFromPixbuf(int type, int pixbuf)", "diff": ["-\t\tint cairoStride = Cairo.cairo_format_stride_for_width(format, width);", "-\t\tint /*long*/ data = surfaceData = OS.g_malloc(cairoStride * height);", "-\t\tif (surfaceData == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\t\tsurface = Cairo.cairo_image_surface_create_for_data(surfaceData, format, width, height, cairoStride);", "+\t\tsurface = Cairo.cairo_image_surface_create(format, width, height);", "-\t\tbyte[] line = new byte[stride];", "+\t\tint /*long*/ data = Cairo.cairo_image_surface_get_data(surface);", "+\t\tint cairoStride = Cairo.cairo_image_surface_get_stride(surface);", "+\t\tbyte[] line = new byte[stride];", "-\t\t\tbyte[] cairoLine = new byte[cairoStride];", "-\t\t\t\t\tcairoLine[offset + oa] = (byte)a;", "-\t\t\t\t\tcairoLine[offset + or] = (byte)r;", "-\t\t\t\t\tcairoLine[offset + og] = (byte)g;", "-\t\t\t\t\tcairoLine[offset + ob] = (byte)b;", "+\t\t\t\t\tline[offset + oa] = (byte)a;", "+\t\t\t\t\tline[offset + or] = (byte)r;", "+\t\t\t\t\tline[offset + og] = (byte)g;", "+\t\t\t\t\tline[offset + ob] = (byte)b;", "-\t\t\t\tOS.memmove(data + (y * cairoStride), cairoLine, cairoStride);", "+\t\t\t\tOS.memmove(data + (y * stride), line, stride);", "-\t\t\t\t\tcairoLine[cairoOffset + oa] = (byte)0xFF;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d7fb663cb70670562c035bd098bb7d7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/mozilla/org/eclipse/swt/browser/PromptService.java", "commitBeforeChange": "a98ddf79911348283ecc3b396080b8c75370a73e", "commitAfterChange": "18b6fa0c4432a4d72d435dbe80d6da131c0191ad", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public int PromptUsernameAndPassword(int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "signatureAfterChange": "  public int PromptUsernameAndPassword(int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "diff": ["-\t\t\t\tbyte[] tmp = XPCOM.NS_MEMORY_CONTRACTID.getBytes();", "-\t\t\t\tbyte[] aContractID = new byte[tmp.length + 1];", "-\t\t\t\tSystem.arraycopy(tmp, 0, aContractID, 0, tmp.length);", "+\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\t\tbyte[] tmp = XPCOM.NS_MEMORY_CONTRACTID.getBytes();", "-\t\t\t\tbyte[] aContractID = new byte[tmp.length + 1];", "-\t\t\t\tSystem.arraycopy(tmp, 0, aContractID, 0, tmp.length);", "+\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14eb439f8d77925baf87896dc36f33c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/photon/org/eclipse/swt/dnd/FileTransfer.java", "commitBeforeChange": "1c11fbfcf03cb194b949ee2f545cb614e4dccbc5", "commitAfterChange": "96800434b1856a3053cd6adb63cc4f40bb90cd9d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void javaToNative(Object object, TransferData transferData)", "signatureAfterChange": "\r public void javaToNative(Object object, TransferData transferData)", "diff": ["- */", "+ */\r", "-\tbyte [] data = new byte[0];\r", "-\tString[] filenames = (String[])object;\r", "-\tfor (int i = 0; i < filenames.length; i++) {\r", "-\t\tbyte [] buffer = Converter.wcsToMbcs (null, filenames[i], true);\t\t\r", "-\t\tbyte [] temp = data;\r", "-\t\tdata = new byte[ data.length + buffer.length];\r", "-\t\tSystem.arraycopy(temp, 0, data, 0, temp.length);\r", "-\t\tSystem.arraycopy(buffer, 0, data, data.length - buffer.length, buffer.length);\r", "+\t// build a byte array from data\r", "+\tString[] files = (String[])object;\r", "+\t\r", "+\t// create a string separated by \"new lines\" to represent list of files\r", "+\tString nativeFormat = \"\";\r", "+\tfor (int i = 0, length = files.length; i < length; i++){\r", "+\t\tnativeFormat += \"file:\"+files[i]+\"\\r\";\r", "-\tsuper.javaToNative(data, transferData);\r", "+\tbyte[] buffer = Converter.wcsToMbcs(null, nativeFormat, true);\r", "+\t// pass byte array on to super to convert to native\r", "+\tsuper.javaToNative(buffer, transferData);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8a3d3ea4eee5903d862b291cce63c2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/PromptService.java", "commitBeforeChange": "d87aa72bc0c46b605438e02828d6de28ca8169b6", "commitAfterChange": "dcf5e9859cd3a4f7d7e7f45c042c8c7f6599747a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public int PromptUsernameAndPassword(int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "signatureAfterChange": "  public int PromptUsernameAndPassword(int parent, int dialogTitle, int text, int username, int password, int checkMsg, int checkValue, int _retval)", "diff": ["-\t\t\t\tbyte[] tmp = XPCOM.NS_MEMORY_CONTRACTID.getBytes();", "-\t\t\t\tbyte[] aContractID = new byte[tmp.length + 1];", "-\t\t\t\tSystem.arraycopy(tmp, 0, aContractID, 0, tmp.length);", "+\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);", "-\t\t\t\tbyte[] tmp = XPCOM.NS_MEMORY_CONTRACTID.getBytes();", "-\t\t\t\tbyte[] aContractID = new byte[tmp.length + 1];", "-\t\t\t\tSystem.arraycopy(tmp, 0, aContractID, 0, tmp.length);", "+\t\t\t\tbyte[] aContractID = Converter.wcsToMbcs(null, XPCOM.NS_MEMORY_CONTRACTID, true);"]}], "num": 34943}