{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "44abedac8d91986f1d68a22b1b29b606", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a2a5edb394e392c5b4665626ec1e53b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/internal/image/JPEGDecoder.java", "commitBeforeChange": "55e3eb70655b5f0f01b24eadacf20a9e1167ef52", "commitAfterChange": "6a714c0fa388c6b03ac7663475ff4fa71064f562", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  static int decompress_smooth_data (jpeg_decompress_struct cinfo, byte[][][] output_buf, int[] output_buf_offset)", "signatureAfterChange": "  static int decompress_smooth_data (jpeg_decompress_struct cinfo, byte[][][] output_buf, int[] output_buf_offset)", "diff": ["-\tshort[] workspace;", "+\tshort[] workspace = coef.workspace;", "+\tif (workspace == null) workspace = coef.workspace = new short[DCTSIZE2];", "-\t\tint output_ptr_offset = 0;", "+\t\tint output_ptr_offset = output_buf_offset[ci];", "-\t\t\t\tworkspace = buffer_ptr[buffer_ptr_offset];", "+\t\t\t\tSystem.arraycopy(buffer_ptr[buffer_ptr_offset], 0, workspace, 0, workspace.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f00990e64f37bf26ff307352a3da8333", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "4b1109db58ecb9bb9b1b51bb55e420f663b89727", "commitAfterChange": "a38cdec12de35954521831ad0e8e78895c25ed1c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": " int untranslateOffset (int offset)", "signatureAfterChange": " int untranslateOffset (int offset)", "diff": ["-\treturn offset;", "+\tint length = text.length();", "+\tif (length == 0) return offset;", "+\tif (invalidOffsets == null) return offset;", "+\tfor (int i = 0; i < invalidOffsets.length; i++) {", "+\t\tif (offset == invalidOffsets[i]) {", "+\t\t\toffset++;", "+\t\t\tcontinue;", "+\t\t}", "+\t\tif (offset < invalidOffsets[i]) {", "+\t\t\treturn offset - i;", "+\t\t}", "+\t}", "+\treturn offset - invalidOffsets.length;"]}], "num": 50678}