{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be304d356c14ac4e666c634f52e14449", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8362ddafa054780e7e738b8ac032f70a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridLayout.java", "commitBeforeChange": "e20967617af3717759ff20eede347aa1cc9b832d", "commitAfterChange": "e6ff1db5126806ddfb223a9a1239d9143ed9a050", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\t\t\t\t\t\t\tchildX = gridX + Math.max (0, (cellWidth - childWidth) / 2);", "+\t\t\t\t\t\t\tchildX += Math.max (0, (cellWidth - data.horizontalIndent - childWidth) / 2);", "-\t\t\t\t\t\t\tchildX = gridX + Math.max (0, cellWidth - childWidth);", "+\t\t\t\t\t\t\tchildX += Math.max (0, cellWidth - data.horizontalIndent - childWidth);", "-\t\t\t\t\t\t\tchildY = gridY + Math.max (0, (cellHeight - childHeight) / 2);", "+\t\t\t\t\t\t\tchildY += Math.max (0, (cellHeight - data.verticalIndent - childHeight) / 2);", "-\t\t\t\t\t\t\tchildY = gridY + Math.max (0, cellHeight - childHeight);", "+\t\t\t\t\t\t\tchildY += Math.max (0, cellHeight - data.verticalIndent - childHeight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc58d34161befc41d628d14a25ade57d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "edd7c30135964c436bb1e619768243487d0bbbf3", "commitAfterChange": "6627de68702415d22f2d564abe9bce292b0df0ee", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  void setPlacement (int x, int y, int width, int height, int flags)", "signatureAfterChange": "  void setPlacement (int x, int y, int width, int height, int flags)", "diff": ["+\t\tlpwndpl.right = x + (lpwndpl.right - lpwndpl.left);", "+\t\tlpwndpl.bottom = y + (lpwndpl.bottom - lpwndpl.top);", "-\t\tlpwndpl.right = x + width;", "-\t\tlpwndpl.bottom = y + height;", "+\t\tlpwndpl.right = lpwndpl.left + width;", "+\t\tlpwndpl.bottom = lpwndpl.top + height;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eecee0eb79d52083bcad2f852155935f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/events/KeyEvent.java", "commitBeforeChange": "276fef9746789814e21bd8e3a8e36c8ecc1732db", "commitAfterChange": "88318078b5ca53da5f23d800b3a84760481b2a7b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\t\t+ \" character='\" + ((character == 0) ? \"\\\\0\" : \"\" + character) + \"'\"", "-\t\t+ \" keyCode=\" + keyCode", "-\t\t+ \" keyLocation=\" + keyLocation", "-\t\t+ \" stateMask=\" + stateMask", "+\t\t+ \" character='\" + ((character == 0) ? \"\\\\0\" : String.valueOf(character)) + \"'=0x\" + Integer.toHexString(character)", "+\t\t+ \" keyCode=0x\" + Integer.toHexString(keyCode)", "+\t\t+ \" keyLocation=0x\" + Integer.toHexString(keyLocation)", "+\t\t+ \" stateMask=0x\" + Integer.toHexString(stateMask)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5309d2a47b1a1e2ffd6aa25f0b5cf85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/common/org/eclipse/swt/layout/GridLayout.java", "commitBeforeChange": "65919b6cd706bbbd92f968a23144cff20fe8001b", "commitAfterChange": "273a9a7e95b3c3476e2005e1438fbc99c7c47ae3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "signatureAfterChange": "  Point layout (Composite composite, boolean move, int x, int y, int width, int height, boolean flushCache)", "diff": ["-\t\t\t\t\tint h = data.cacheHeight; // + data.verticalIndent;", "+\t\t\t\t\tint h = data.cacheHeight + data.verticalIndent;", "-\t\t\t\t\tint h = data.cacheHeight - spanHeight - (vSpan - 1) * verticalSpacing; // + data.verticalalIndent", "+\t\t\t\t\tint h = data.cacheHeight + data.verticalIndent - spanHeight - (vSpan - 1) * verticalSpacing;", "-\t\t\t\t\t\th = data.cacheHeight - spanMinHeight - (vSpan - 1) * verticalSpacing; // + data.verticalIndent", "+\t\t\t\t\t\th = data.cacheHeight + data.verticalIndent - spanMinHeight - (vSpan - 1) * verticalSpacing;", "-\t\t\t\t\t\t\t\tint h = data.cacheHeight - spanHeight - (vSpan - 1) * verticalSpacing; // + data.verticalIndent", "+\t\t\t\t\t\t\t\tint h = data.cacheHeight + data.verticalIndent - spanHeight - (vSpan - 1) * verticalSpacing;", "-\t\t\t\t\tint childY = gridY; // + data.verticalIndent;", "+\t\t\t\t\tint childY = gridY + data.verticalIndent;", "-\t\t\t\t\t\t\tchildHeight = cellHeight; // - data.verticalIndent;", "+\t\t\t\t\t\t\tchildHeight = cellHeight - data.verticalIndent;"]}], "num": 1195}