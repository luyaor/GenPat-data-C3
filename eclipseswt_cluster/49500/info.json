{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c7097cadc714185c0021f543a9991ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d919c5f05d2988ff1b3cc0c5dc770640", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "c9baca597732eba93412edfdda729834c82bd64e", "commitAfterChange": "c121bfa57942c896c00e3ff4112c06d496bc4869", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void generateGetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "signatureAfterChange": "  void generateGetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "diff": ["-\toutput(\"\\tif (arg\" + i);", "-\toutput(\") lparg\" + i);", "+\tString iStr = String.valueOf(i);", "+\toutput(\"\\tif (arg\");", "+\toutput(iStr);", "+\toutput(\") lparg\");", "+\toutput(iStr);", "-\t\t\t\toutput(\"(*env)->GetPrimitiveArrayCritical(env, arg\" + i);", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"env->GetPrimitiveArrayCritical(arg\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"(*env)->GetPrimitiveArrayCritical(env, arg\");", "+\t\t\t\t}", "+\t\t\t\toutput(iStr);", "-\t\t\t\toutput(\"(*env)->Get\");", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"env->Get\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"(*env)->Get\");", "+\t\t\t\t}", "-\t\t\t\toutput(\"ArrayElements(env, arg\" + i);", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"ArrayElements(arg\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"ArrayElements(env, arg\");", "+\t\t\t\t}", "+\t\t\t\toutput(iStr);", "-\t\t\toutput(\"(*env)->GetStringChars(env, arg\" + i);", "+\t\t\tif (isCPP) {", "+\t\t\t\toutput(\"env->GetStringChars(arg\");", "+\t\t\t} else {", "+\t\t\t\toutput(\"(*env)->GetStringChars(env, arg\");", "+\t\t\t}", "+\t\t\toutput(iStr);", "-\t\t\toutput(\"(*env)->GetStringUTFChars(env, arg\" + i);", "+\t\t\tif (isCPP) {", "+\t\t\t\toutput(\"env->GetStringUTFChars(arg\");", "+\t\t\t} else {", "+\t\t\t\toutput(\"(*env)->GetStringUTFChars(env, arg\");", "+\t\t\t}", "+\t\t\toutput(iStr);", "-\t\t\toutput(\"&_arg\" + i);", "+\t\t\toutput(\"&_arg\");", "+\t\t\toutput(iStr);", "-\t\t\toutput(\"Fields(env, arg\" + i);", "-\t\t\toutput(\", &_arg\" + i);", "+\t\t\toutput(\"Fields(env, arg\");", "+\t\t\toutput(iStr);", "+\t\t\toutput(\", &_arg\");", "+\t\t\toutput(iStr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee893516ac6f0b7aede429fc22e9725f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "c9baca597732eba93412edfdda729834c82bd64e", "commitAfterChange": "c121bfa57942c896c00e3ff4112c06d496bc4869", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "signatureAfterChange": "  void generateSetParameter(int i, Class paramType, ParameterData paramData, boolean critical)", "diff": ["+\tString iStr = String.valueOf(i);", "-\t\toutput(\"\\tif (arg\" + i);", "+\t\toutput(\"\\tif (arg\");", "+\t\toutput(iStr);", "-\t\t\t\toutput(\"(*env)->ReleasePrimitiveArrayCritical(env, arg\" + i);", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"env->ReleasePrimitiveArrayCritical(arg\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"(*env)->ReleasePrimitiveArrayCritical(env, arg\");", "+\t\t\t\t}", "+\t\t\t\toutput(iStr);", "-\t\t\t\toutput(\"(*env)->Release\");", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"env->Release\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"(*env)->Release\");", "+\t\t\t\t}", "-\t\t\t\toutput(\"ArrayElements(env, arg\" + i);", "+\t\t\t\tif (isCPP) {", "+\t\t\t\t\toutput(\"ArrayElements(arg\");", "+\t\t\t\t} else {", "+\t\t\t\t\toutput(\"ArrayElements(env, arg\");", "+\t\t\t\t}", "+\t\t\t\toutput(iStr);", "-\t\t\toutput(\", lparg\" + i);", "+\t\t\toutput(\", lparg\");", "+\t\t\toutput(iStr);", "-\t\toutput(\"\\tif (arg\" + i);", "+\t\toutput(\"\\tif (arg\");", "+\t\toutput(iStr);", "-\t\t\toutput(\"(*env)->ReleaseStringChars(env, arg\" + i);", "+\t\t\tif (isCPP) {", "+\t\t\t\toutput(\"env->ReleaseStringChars(arg\");", "+\t\t\t} else {", "+\t\t\t\toutput(\"(*env)->ReleaseStringChars(env, arg\");", "+\t\t\t}", "-\t\t\toutput(\"(*env)->ReleaseStringUTFChars(env, arg\" + i);", "+\t\t\tif (isCPP) {", "+\t\t\t\toutput(\"env->ReleaseStringUTFChars(arg\");", "+\t\t\t} else {", "+\t\t\t\toutput(\"(*env)->ReleaseStringUTFChars(env, arg\");", "+\t\t\t}", "-\t\toutput(\", lparg\" + i);", "+\t\toutput(iStr);", "+\t\toutput(\", lparg\");", "+\t\toutput(iStr);", "-\t\t\toutput(\"\\tif (arg\" + i);", "+\t\t\toutput(\"\\tif (arg\");", "+\t\t\toutput(iStr);", "-\t\t\toutput(\"Fields(env, arg\" + i);", "-\t\t\toutput(\", lparg\" + i);", "+\t\t\toutput(\"Fields(env, arg\");", "+\t\t\toutput(iStr);", "+\t\t\toutput(\", lparg\");", "+\t\t\toutput(iStr);"]}], "num": 49500}