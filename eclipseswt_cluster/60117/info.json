{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fab9653968c5d38a57fbeaa78bd7cfce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb0859e8dac720c8de0eaf6753eb587", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "f7cff71f7fbf0f8ed898a81649c722d13f5b15ec", "commitAfterChange": "834db6fd10425983332404c0ab040afec6914cb4", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "  void handleEvent(int evt)", "signatureAfterChange": "  void handleEvent(int evt)", "diff": ["-\tint clientX = Cocoa.objc_msgSend(evt, Cocoa.S_clientX);", "-\tint clientY = Cocoa.objc_msgSend(evt, Cocoa.S_clientY);", "-\tint detail = Cocoa.objc_msgSend(evt, Cocoa.S_detail);", "+\t/*", "+\t * The position of mouse events is received in screen-relative coordinates", "+\t * in order to handle pages with frames, since frames express their event", "+\t * coordinates relative to themselves rather than relative to their top-", "+\t * level page.  Convert screen-relative coordinates to be browser-relative.", "+\t */", "+\tint screenX = Cocoa.objc_msgSend(evt, Cocoa.S_screenX);", "+\tint screenY = Cocoa.objc_msgSend(evt, Cocoa.S_screenY);", "+\tPoint position = new Point(screenX, screenY);", "+\tposition = browser.getDisplay().map(null, browser, position);", "-\tEvent mouseEvent = new Event ();", "+\tint detail = Cocoa.objc_msgSend(evt, Cocoa.S_detail);", "+\tEvent mouseEvent = new Event();", "-\tmouseEvent.x = clientX; mouseEvent.y = clientY;", "+\tmouseEvent.x = position.x; mouseEvent.y = position.y;", "-\t\tmouseEvent.x = clientX; mouseEvent.y = clientY;", "+\t\tmouseEvent.x = position.x; mouseEvent.y = position.y;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8319e141f9b75506e33d74cf367a1879", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "834db6fd10425983332404c0ab040afec6914cb4", "commitAfterChange": "e884189d4943c50ba31f7293d992cfb41e268c9e", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "  int HandleEvent (int event)", "signatureAfterChange": "  int HandleEvent (int event)", "diff": ["-\tint[] aClientX = new int[1], aClientY = new int[1], aDetail = new int[1]; /* PRInt32 */", "-\trc = domMouseEvent.GetClientX (aClientX);", "+\tint[] aScreenX = new int[1], aScreenY = new int[1]; /* PRInt32 */", "+", "+\t/*", "+\t * The position of mouse events is received in screen-relative coordinates", "+\t * in order to handle pages with frames, since frames express their event", "+\t * coordinates relative to themselves rather than relative to their top-", "+\t * level page.  Convert screen-relative coordinates to be browser-relative.", "+\t */", "+\trc = domMouseEvent.GetScreenX (aScreenX);", "-\trc = domMouseEvent.GetClientY (aClientY);", "+\trc = domMouseEvent.GetScreenY (aScreenY);", "+\tPoint position = new Point (aScreenX[0], aScreenY[0]);", "+\tposition = browser.getDisplay ().map (null, browser, position);", "+", "+\tint[] aDetail = new int[1]; /* PRInt32 */", "-\tmouseEvent.x = aClientX[0]; mouseEvent.y = aClientY[0];", "+\tmouseEvent.x = position.x; mouseEvent.y = position.y;", "-\t\tmouseEvent.x = aClientX[0]; mouseEvent.y = aClientY[0];", "+\t\tmouseEvent.x = position.x; mouseEvent.y = position.y;"]}], "num": 60117}