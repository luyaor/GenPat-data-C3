{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff2fe286ff58547383ae303374cd23e8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2101f94dd3eb74b3abdbd85e221423", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/coolbar/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "20b0eb441aada9604976583a80e3bdef4aa3362d", "commitAfterChange": "7a19591ebf7fe6141ff36a49f3e5c931d7f1c3df", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public int[] getWrapIndices ()", "signatureAfterChange": " public int[] getWrapIndices ()", "diff": ["-\tint[] data = new int[items.length - 1];", "+\tint[] wrapIndices = new int[items.length - 1];", "-\t\tdata[i++] = nextWrap;", "+\t\tif (items[row][0].wrap) wrapIndices[i++] = nextWrap;", "-\treturn data;", "+\tif (i != wrapIndices.length) {", "+\t\tint[] tmp = new int[i];", "+\t\tSystem.arraycopy(wrapIndices, 0, tmp, 0, i);", "+\t\treturn tmp;", "+\t}", "+\treturn wrapIndices;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9996c880c9e8e95884108a35cd8c0be0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "6bf174092d88d6ca6b0a2492d7221ddcd462d20e", "commitAfterChange": "b4926c8034e240482671225a41d12582ff222311", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-//\t\t\t\t\texecute(\"window.location.href='about:blank';\");", "+\t\t\t\t\t/* invoke onbeforeunload handlers */", "+\t\t\t\t\tif (!browser.isClosing) {", "+\t\t\t\t\t\tLocationListener[] oldLocationListeners = locationListeners;", "+\t\t\t\t\t\tlocationListeners = new LocationListener[0];", "+\t\t\t\t\t\tsite.ignoreAllMessages = true;", "+\t\t\t\t\t\texecute (\"window.location.href='about:blank'\"); //$NON-NLS-1$", "+\t\t\t\t\t\tsite.ignoreAllMessages = false;", "+\t\t\t\t\t\tlocationListeners = oldLocationListeners;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "213bf507eb0c2abf0814019c52b8941b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tvoid expandLines(int numLines)", "signatureAfterChange": " \tvoid expandLines(int numLines)", "diff": ["-\t\tint[] newLines = new int[Math.max(size * 2, size + numLines)];", "-\t\tSystem.arraycopy(lineWidth, 0, newLines, 0, size);", "-\t\tlineWidth = newLines;", "-\t\treset(size, lineWidth.length - size, false);", "+\t\tint newSize = Math.max(size * 2, size + numLines);", "+\t\tint[] newLineWidth = new int[newSize];", "+\t\tSystem.arraycopy(lineWidth, 0, newLineWidth, 0, size);", "+\t\tlineWidth = newLineWidth;", "+\t\tint[] newLineHeight = new int[newSize];", "+\t\tSystem.arraycopy(lineHeight, 0, newLineHeight, 0, size);", "+\t\tlineHeight = newLineHeight;", "+\t\treset(size, newSize - size, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba196ecf43beb783125f648116c193c9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledTextRenderer.java", "commitBeforeChange": "52f62f0116fc8dc2ebd3116acf2120716011d4de", "commitAfterChange": "0849f4ec55ff8fab28f355eb7020cd60f4a5a369", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " StyleRange[] getStyleRanges(int start, int length, boolean includeRanges)", "signatureAfterChange": " StyleRange[] getStyleRanges(int start, int length, boolean includeRanges)", "diff": ["-\t\tif (!includeRanges || ranges == null) newStyles[newStyles.length - 1] = style = (StyleRange)style.clone();", "-\t\tstyle.length = end - style.start + 1;", "+\t\tif (end < style.start) {", "+\t\t\tStyleRange[] tmp = new StyleRange[newStyles.length - 1];", "+\t\t\tSystem.arraycopy(newStyles, 0, tmp, 0, newStyles.length - 1);", "+\t\t\tnewStyles = tmp;", "+\t\t} else {", "+\t\t\tif (!includeRanges || ranges == null) newStyles[newStyles.length - 1] = style = (StyleRange)style.clone();", "+\t\t\tstyle.length = end - style.start + 1;", "+\t\t}"]}], "num": 13284}