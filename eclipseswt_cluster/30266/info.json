{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48c24baf0d39a4bea02ca0ea74cd0bbc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2464859d078ac53db63b210c91a9093", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "aa5a69fe81e993c5bb9fcff4c9a425715ad470cd", "commitAfterChange": "bf9b442200602eaa6f44a276dfab033f09afe62d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void setBackground (int index, Color color)", "signatureAfterChange": " public void setBackground (int index, Color color)", "diff": ["-\tGdkColor gdkColor = color != null ? color.handle : null;", "-\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex + 3, gdkColor, -1);", "+\tGdkColor gdkColor = color != null ? color.handle : null;", "+\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex + Table.CELL_BACKGROUND, gdkColor, -1);", "-\t\t\tint /*long*/ list = OS.gtk_tree_view_column_get_cell_renderers (column);", "-\t\t\tint length = OS.g_list_length (list);", "-\t\t\tint /*long*/ textRenderer = OS.g_list_nth_data (list, length - 1);", "-\t\t\tint /*long*/ pixbufRenderer = OS.g_list_nth_data (list, length - 2);", "-\t\t\tOS.g_list_free (list);", "+\t\t\t\tint /*long*/ textRenderer = parent.getTextRenderer (column);", "+\t\t\t\tint /*long*/ imageRenderer = parent.getPixbufRenderer (column);", "-\t\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, pixbufRenderer, display.pixbufCellDataProc, parent.handle, 0);", "+\t\t\t\tOS.gtk_tree_view_column_set_cell_data_func (column, imageRenderer, display.pixbufCellDataProc, parent.handle, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3b215e9375e9c1918003a65839f8b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "aa5a69fe81e993c5bb9fcff4c9a425715ad470cd", "commitAfterChange": "bf9b442200602eaa6f44a276dfab033f09afe62d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void setForeground (int index, Color color)", "signatureAfterChange": " public void setForeground (int index, Color color)", "diff": ["-\tGdkColor gdkColor = color != null ? color.handle : null;", "-\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex + 2, gdkColor, -1);", "+\tGdkColor gdkColor = color != null ? color.handle : null;", "+\tOS.gtk_list_store_set (parent.modelHandle, handle, modelIndex + Table.CELL_FOREGROUND, gdkColor, -1);", "-\t\t\tint /*long*/ list = OS.gtk_tree_view_column_get_cell_renderers (column);", "-\t\t\tint length = OS.g_list_length (list);", "-\t\t\tint /*long*/ textRenderer = OS.g_list_nth_data (list, length - 1);", "-\t\t\tint /*long*/ imageRenderer = OS.g_list_nth_data (list, length - 2);", "-\t\t\tOS.g_list_free (list);", "+\t\t\t\tint /*long*/ textRenderer = parent.getTextRenderer (column);", "+\t\t\t\tint /*long*/ imageRenderer = parent.getPixbufRenderer (column);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d0d3171a36895b57abc15810e5548a6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "e5e6d743f236a5ce8619815d62557f81021cefe5", "commitAfterChange": "18524e287623485d6a951d783509b678cf848514", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": " void setStyleRanges(int start, int length, int[] ranges, StyleRange[] styles, boolean reset)", "signatureAfterChange": " void setStyleRanges(int start, int length, int[] ranges, StyleRange[] styles, boolean reset)", "diff": ["-\tint lastLineBottom = 0;", "+\tint expectedBottom = 0;", "-\t\t\tlastLineBottom = getLinePixel(lineEnd + 1);", "+\t\t\texpectedBottom = getLinePixel(lineEnd + 1);", "-\t\t\tint y = 0;", "-\t\t\tint height = clientAreaHeight;", "+\t\t\tint top = 0;", "+\t\t\tint bottom = clientAreaHeight;", "-\t\t\t\tint lineTop = Math.max(y, getLinePixel(lineStart));", "-\t\t\t\ty = lineTop;", "-\t\t\t\theight -= lineTop;", "+\t\t\t\ttop = Math.max(0, getLinePixel(lineStart));", "-\t\t\t\tint newLastLineBottom = getLinePixel(lineEnd + 1);", "-\t\t\t\tif (!isFixedLineHeight()) {", "-\t\t\t\t\tscrollText(lastLineBottom, newLastLineBottom);", "-\t\t\t\t}", "-\t\t\t\theight = newLastLineBottom - y;", "+\t\t\t\tbottom = getLinePixel(lineEnd + 1);", "-\t\t\tsuper.redraw(0, y, clientAreaWidth, height, false);\t\t", "+\t\t\tif (!isFixedLineHeight() && bottom != expectedBottom) {", "+\t\t\t\tbottom = clientAreaHeight;", "+\t\t\t}", "+\t\t\tsuper.redraw(0, top, clientAreaWidth, bottom - top, false);\t\t"]}], "num": 30266}