{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6449cc2b09cc380c4f4378ad8c1d4088", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37cc08d99e8cc8b4b8189ffcb41f9b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e619d691d044497570fcf3be984cbfd11be66986", "commitAfterChange": "40b5d7f957fe454dda3cc72cef817e7a64eea1d9", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int cell, int tableColumn, int rowIndex)", "signatureAfterChange": "  void tableView_willDisplayCell_forTableColumn_row (int id, int sel, int aTableView, int cell, int tableColumn, int rowIndex)", "diff": ["+\tNSTableView widget = (NSTableView)view;", "-\tNSTableView widget = (NSTableView)view;", "+\tNSColor color;", "-\t\ttextCell.setTextColor(NSColor.selectedControlTextColor());", "+\t\tcolor = NSColor.selectedControlTextColor();", "-\t\tNSColor color = NSColor.colorWithDeviceRed (foreground.handle [0], foreground.handle [1], foreground.handle [2], 1);", "-\t\ttextCell.setTextColor(color);", "+\t\tcolor = NSColor.colorWithDeviceRed (foreground.handle [0], foreground.handle [1], foreground.handle [2], 1);", "+\t}", "+\tint alignment = OS.NSLeftTextAlignment;", "+\tif (columnCount > 0) {", "+\t\tint style = columns [index].style;", "+\t\tif ((style & SWT.CENTER) != 0) {", "+\t\t\talignment = OS.NSCenterTextAlignment;", "+\t\t} else if ((style & SWT.RIGHT) != 0) {", "+\t\t\talignment = OS.NSRightTextAlignment;", "+\t\t}", "-\ttextCell.setFont(font.handle);", "-\ttextCell.setAlignment (OS.NSLeftTextAlignment);", "-\tif (columnCount > 0) {", "-\t\tint style = columns [index].style;", "-\t\tif ((style & SWT.CENTER) != 0) {", "-\t\t\ttextCell.setAlignment (OS.NSCenterTextAlignment);", "-\t\t} else if ((style & SWT.RIGHT) != 0) {", "-\t\t\ttextCell.setAlignment (OS.NSRightTextAlignment);", "-\t\t}", "+\tif (font.extraTraits != 0) {", "+\t\tNSMutableDictionary dict = ((NSMutableDictionary)new NSMutableDictionary().alloc()).initWithCapacity(5);", "+\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\t\tdict.setObject (font.handle, OS.NSFontAttributeName);", "+\t\taddTraits(dict, font);", "+\t\tNSMutableParagraphStyle paragraphStyle = (NSMutableParagraphStyle)new NSMutableParagraphStyle ().alloc ().init ();", "+\t\tparagraphStyle.setLineBreakMode (OS.NSLineBreakByClipping);", "+\t\tparagraphStyle.setAlignment (alignment);", "+\t\tdict.setObject (paragraphStyle, OS.NSParagraphStyleAttributeName);", "+\t\tparagraphStyle.release ();", "+\t\tNSAttributedString attribStr = ((NSAttributedString) new NSAttributedString ().alloc ()).initWithString (textCell.title(), dict);", "+\t\ttextCell.setAttributedStringValue(attribStr);", "+\t\tattribStr.release();", "+\t\tdict.release();", "+\t} else {", "+\t\ttextCell.setFont(font.handle);", "+\t\ttextCell.setTextColor(color);", "+\t\ttextCell.setAlignment (alignment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee79f9d38b6e3ec9c5992483c5a2dd93", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e619d691d044497570fcf3be984cbfd11be66986", "commitAfterChange": "40b5d7f957fe454dda3cc72cef817e7a64eea1d9", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "signatureAfterChange": "  void outlineView_willDisplayCell_forTableColumn_item (int id, int sel, int outlineView, int cell, int tableColumn, int itemID)", "diff": ["+\tNSOutlineView widget = (NSOutlineView)view;", "+\tint /*long*/ rowIndex = widget.rowForItem (item.handle);", "-\tNSOutlineView widget = (NSOutlineView)view;", "-\tint /*long*/ row = widget.rowForItem (item.handle);", "-\tif (widget.isRowSelected (row)) {", "-\t\ttextCell.setTextColor(NSColor.selectedControlTextColor());", "+\tNSColor color;", "+\tif (widget.isRowSelected (rowIndex)) {", "+\t\tcolor = NSColor.selectedControlTextColor();", "-\t\tNSColor color = NSColor.colorWithDeviceRed (foreground.handle [0], foreground.handle [1], foreground.handle [2], 1);", "-\t\ttextCell.setTextColor(color);", "+\t\tcolor = NSColor.colorWithDeviceRed (foreground.handle [0], foreground.handle [1], foreground.handle [2], 1);", "+\t}", "+\tint alignment = OS.NSLeftTextAlignment;", "+\tif (columnCount > 0) {", "+\t\tint style = columns [index].style;", "+\t\tif ((style & SWT.CENTER) != 0) {", "+\t\t\talignment = OS.NSCenterTextAlignment;", "+\t\t} else if ((style & SWT.RIGHT) != 0) {", "+\t\t\talignment = OS.NSRightTextAlignment;", "+\t\t}", "-\ttextCell.setFont(font.handle);", "-\ttextCell.setAlignment (OS.NSLeftTextAlignment);", "-\tif (columnCount > 0) {", "-\t\tint style = columns [index].style;", "-\t\tif ((style & SWT.CENTER) != 0) {", "-\t\t\ttextCell.setAlignment (OS.NSCenterTextAlignment);", "-\t\t} else if ((style & SWT.RIGHT) != 0) {", "-\t\t\ttextCell.setAlignment (OS.NSRightTextAlignment);", "-\t\t}", "+\tif (font.extraTraits != 0) {", "+\t\tNSMutableDictionary dict = ((NSMutableDictionary)new NSMutableDictionary().alloc()).initWithCapacity(5);", "+\t\tdict.setObject (color, OS.NSForegroundColorAttributeName);", "+\t\tdict.setObject (font.handle, OS.NSFontAttributeName);", "+\t\taddTraits(dict, font);", "+\t\tNSMutableParagraphStyle paragraphStyle = (NSMutableParagraphStyle)new NSMutableParagraphStyle ().alloc ().init ();", "+\t\tparagraphStyle.setLineBreakMode (OS.NSLineBreakByClipping);", "+\t\tparagraphStyle.setAlignment (alignment);", "+\t\tdict.setObject (paragraphStyle, OS.NSParagraphStyleAttributeName);", "+\t\tparagraphStyle.release ();", "+\t\tNSAttributedString attribStr = ((NSAttributedString) new NSAttributedString ().alloc ()).initWithString (textCell.title(), dict);", "+\t\ttextCell.setAttributedStringValue(attribStr);", "+\t\tattribStr.release();", "+\t\tdict.release();", "+\t} else {", "+\t\ttextCell.setFont(font.handle);", "+\t\ttextCell.setTextColor(color);", "+\t\ttextCell.setAlignment (alignment);"]}], "num": 61106}