{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec0af4c7300f5be40871e8fa3388b9f7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc85ba8714e539b0ff15f3abf422d473", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "2703b6b4917ee70e34e69f6beabdf6e17c0e648e", "commitAfterChange": "0e0eae7504b067875076ee5d9af4693ac4a9b250", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public Image(Device device, Image srcImage, int flag)", "signatureAfterChange": " public Image(Device device, Image srcImage, int flag)", "diff": ["+\t\t", "+\t\tint /*long*/ srcData = srcRep.bitmapData();", "+\t\tint /*long*/ format = srcRep.bitmapFormat();", "+\t\tint /*long*/ bpp = srcRep.bitsPerPixel();", "-\t\trep = rep.initWithBitmapDataPlanes(0, width, height, srcRep.bitsPerSample(), srcRep.samplesPerPixel(), srcRep.samplesPerPixel() == 4, srcRep.isPlanar(), OS.NSDeviceRGBColorSpace, OS.NSAlphaFirstBitmapFormat | OS.NSAlphaNonpremultipliedBitmapFormat, srcRep.bytesPerRow(), srcRep.bitsPerPixel());", "+\t\trep = rep.initWithBitmapDataPlanes(0, width, height, srcRep.bitsPerSample(), srcRep.samplesPerPixel(), srcRep.hasAlpha(), srcRep.isPlanar(), OS.NSDeviceRGBColorSpace, format, srcRep.bytesPerRow(), bpp);", "-\t\tOS.memmove(data, srcRep.bitmapData(), width * height * 4);", "+\t\tOS.memmove(data, srcData, width * height * 4);", "-", "+\t\t\tfinal int redOffset, greenOffset, blueOffset;", "+\t\t\tif (bpp == 32 && (format & OS.NSAlphaFirstBitmapFormat) == 0) {", "+\t\t\t\tredOffset = 0;", "+\t\t\t\tgreenOffset = 1;", "+\t\t\t\tblueOffset = 2;", "+\t\t\t} else {", "+\t\t\t\tredOffset = 1;", "+\t\t\t\tgreenOffset = 2;", "+\t\t\t\tblueOffset = 3;", "+\t\t\t}", "-\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tint red = line[offset+redOffset] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+greenOffset] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+blueOffset] & 0xFF;", "-\t\t\t\t\t\t\tline[offset+1] = zeroRed;", "-\t\t\t\t\t\t\tline[offset+2] = zeroGreen;", "-\t\t\t\t\t\t\tline[offset+3] = zeroBlue;", "+\t\t\t\t\t\t\tline[offset+redOffset] = zeroRed;", "+\t\t\t\t\t\t\tline[offset+greenOffset] = zeroGreen;", "+\t\t\t\t\t\t\tline[offset+blueOffset] = zeroBlue;", "-\t\t\t\t\t\t\tline[offset+1] = oneRed;", "-\t\t\t\t\t\t\tline[offset+2] = oneGreen;", "-\t\t\t\t\t\t\tline[offset+3] = oneBlue;", "+\t\t\t\t\t\t\tline[offset+redOffset] = oneRed;", "+\t\t\t\t\t\t\tline[offset+greenOffset] = oneGreen;", "+\t\t\t\t\t\t\tline[offset+blueOffset] = oneBlue;", "-\t\t\t\t\t\tint red = line[offset+1] & 0xFF;", "-\t\t\t\t\t\tint green = line[offset+2] & 0xFF;", "-\t\t\t\t\t\tint blue = line[offset+3] & 0xFF;", "+\t\t\t\t\t\tint red = line[offset+redOffset] & 0xFF;", "+\t\t\t\t\t\tint green = line[offset+greenOffset] & 0xFF;", "+\t\t\t\t\t\tint blue = line[offset+blueOffset] & 0xFF;", "-\t\t\t\t\t\tline[offset+1] = line[offset+2] = line[offset+3] = intensity;", "+\t\t\t\t\t\tline[offset+redOffset] = line[offset+greenOffset] = line[offset+blueOffset] = intensity;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d78bef0e39824e0395f8d5b92a9d1d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "ef11844874311ee4ecc49a149832fc6341fb9f05", "commitAfterChange": "075e8297089b20919b74fd7779c5cc8a288671fa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  void createSurface()", "signatureAfterChange": "  void createSurface()", "diff": ["+\t\tint /*long*/ ptr = OS.malloc(4);", "+\t\tOS.memmove(ptr, new int[]{1}, 4);", "+\t\tOS.memmove(line, ptr, 1);", "+\t\tOS.free(ptr);", "+\t\tint oa, or, og, ob;", "+\t\tboolean bigendian = line[0] == 0;", "+\t\tif (bigendian) {", "+\t\t\toa = 0; or = 1; og = 2; ob = 3;", "+\t\t} else {", "+\t\t\toa = 3; or = 2; og = 1; ob = 0;", "+\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbyte r = line[offset1 + 0];", "+\t\t\t\t\t\tbyte g = line[offset1 + 1];", "+\t\t\t\t\t\tbyte b = line[offset1 + 2];", "+\t\t\t\t\t\tline[offset1 + oa] = (byte)0xFF;", "+\t\t\t\t\t\tline[offset1 + or] = r;", "+\t\t\t\t\t\tline[offset1 + og] = g;", "+\t\t\t\t\t\tline[offset1 + ob] = b;", "-\t\t\t\t\tbyte temp = line[offset1];", "-\t\t\t\t\tline[offset1] = line[offset1 + 2];", "-\t\t\t\t\tline[offset1 + 2] = temp;", "-\t\t\t\t\tline[offset1+3] = (byte)alpha;", "-\t\t\t\t\tline[offset1 + 0] = (byte)b;", "-\t\t\t\t\tline[offset1 + 1] = (byte)g;", "-\t\t\t\t\tline[offset1 + 2] = (byte)r;", "+\t\t\t\t\tline[offset1 + oa] = (byte)alpha;", "+\t\t\t\t\tline[offset1 + or] = (byte)r;", "+\t\t\t\t\tline[offset1 + og] = (byte)g;", "+\t\t\t\t\tline[offset1 + ob] = (byte)b;", "-\t\t\t\t\tline[offset1+3] = (byte)alpha;", "-\t\t\t\t\tline[offset1 + 0] = (byte)b;", "-\t\t\t\t\tline[offset1 + 1] = (byte)g;", "-\t\t\t\t\tline[offset1 + 2] = (byte)r;", "+\t\t\t\t\tline[offset1 + oa] = (byte)alpha;", "+\t\t\t\t\tline[offset1 + or] = (byte)r;", "+\t\t\t\t\tline[offset1 + og] = (byte)g;", "+\t\t\t\t\tline[offset1 + ob] = (byte)b;", "-\t\t\t\t\tline[offset1+3] = (byte)0xFF;", "-\t\t\t\t\tbyte temp = line[offset1];", "-\t\t\t\t\tline[offset1] = line[offset1 + 2];", "-\t\t\t\t\tline[offset1 + 2] = temp;", "+\t\t\t\t\tbyte r = line[offset1 + 0];", "+\t\t\t\t\tbyte g = line[offset1 + 1];", "+\t\t\t\t\tbyte b = line[offset1 + 2];", "+\t\t\t\t\tline[offset1 + oa] = (byte)0xFF;", "+\t\t\t\t\tline[offset1 + or] = r;", "+\t\t\t\t\tline[offset1 + og] = g;", "+\t\t\t\t\tline[offset1 + ob] = b;"]}], "num": 26276}