{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "34ecf1231f431e11c949100b6c51ff19", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fca249d4e58b30685ddf2e144120b00d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "761d4c67b620dd7a9276cb5e97a48f876548dd5b", "commitAfterChange": "a2a25b887ac737c108dd8bcffec5e11a0093e092", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["-\t\tOS.Window_Show (shellHandle);", "+\t\tif ((style & SWT.ON_TOP) != 0) {", "+\t\t\tOS.Popup_IsOpen (shellHandle, visible);", "+\t\t} else {", "+\t\t\tOS.Window_Show (shellHandle);", "+\t\t}", "-\t\tif (!closing) OS.Window_Hide (shellHandle);", "+\t\tif (!closing) {", "+\t\t\tif ((style & SWT.ON_TOP) != 0) {", "+\t\t\t\tOS.Popup_IsOpen (shellHandle, visible);", "+\t\t\t} else {\t\t\t\t", "+\t\t\t\tOS.Window_Hide (shellHandle);", "+\t\t\t}", "+\t\t}", "+//\tif (drawCount != 0) {", "+//\t\tif (((state & HIDDEN) == 0) == visible) return;", "+//\t} else {", "+//\t\tif (visible == OS.IsWindowVisible (handle)) return;", "+//\t}", "+//\t", "+//\t/*", "+//\t* Feature in Windows.  When ShowWindow() is called used to hide", "+//\t* a window, Windows attempts to give focus to the parent. If the", "+//\t* parent is disabled by EnableWindow(), focus is assigned to", "+//\t* another windows on the desktop.  This means that if you hide", "+//\t* a modal window before the parent is enabled, the parent will", "+//\t* not come to the front.  The fix is to change the modal state", "+//\t* before hiding or showing a window so that this does not occur.", "+//\t*/", "+//\tint mask = SWT.PRIMARY_MODAL | SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL;", "+//\tif ((style & mask) != 0) {", "+//\t\tif (visible) {", "+//\t\t\tdisplay.setModalShell (this);", "+//\t\t\tControl control = display._getFocusControl ();", "+//\t\t\tif (control != null && !control.isActive ()) {", "+//\t\t\t\tbringToTop ();", "+//\t\t\t\tif (isDisposed ()) return;", "+//\t\t\t}", "+//\t\t\tint hwndShell = OS.GetActiveWindow ();", "+//\t\t\tif (hwndShell == 0) {", "+//\t\t\t\tif (parent != null) hwndShell = parent.handle;", "+//\t\t\t}", "+//\t\t\tif (hwndShell != 0) {", "+//\t\t\t\tOS.SendMessage (hwndShell, OS.WM_CANCELMODE, 0, 0);", "+//\t\t\t}", "+//\t\t\tOS.ReleaseCapture ();", "+//\t\t} else {", "+//\t\t\tdisplay.clearModal (this);", "+//\t\t}", "+//\t} else {", "+//\t\tupdateModal ();", "+//\t}", "+//\t", "+//\t/*", "+//\t* Bug in Windows.  Calling ShowOwnedPopups() to hide the", "+//\t* child windows of a hidden window causes the application", "+//\t* to be deactivated.  The fix is to call ShowOwnedPopups()", "+//\t* to hide children before hiding the parent.", "+//\t*/", "+//\tif (showWithParent && !visible) {", "+//\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, false);", "+//\t}", "+//\tsuper.setVisible (visible);", "+//\tif (isDisposed ()) return;", "+//\tif (showWithParent == visible) return;", "+//\tshowWithParent = visible;", "+//\tif (visible) {", "+//\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, true);", "+//\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc05f6bb22cb8f263a6e840cfa44e92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "56c7a92fe2088acddd85814ba40944ab59fb0bb5", "commitAfterChange": "cbd8ba8781c1af58a68903f288a20df89e685d0c", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["-\tif (visible) {", "+\tif ((OS.UIElement_Visibility (topHandle ()) == OS.Visibility_Visible) == visible) return;", "+\t", "+\tint mask = SWT.PRIMARY_MODAL | SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL;", "+\tif ((style & mask) != 0) {", "+\t\tif (visible) {", "+\t\t\tdisplay.setModalShell (this);", "+//\t\t\t\tControl control = display._getFocusControl ();", "+//\t\t\t\tif (control != null && !control.isActive ()) {", "+//\t\t\t\t\tbringToTop ();", "+//\t\t\t\t\tif (isDisposed ()) return;", "+//\t\t\t\t}", "+//\t\t\t\tint hwndShell = OS.GetActiveWindow ();", "+//\t\t\t\tif (hwndShell == 0) {", "+//\t\t\t\t\tif (parent != null) hwndShell = parent.handle;", "+//\t\t\t\t}", "+//\t\t\t\tif (hwndShell != 0) {", "+//\t\t\t\t\tOS.SendMessage (hwndShell, OS.WM_CANCELMODE, 0, 0);", "+//\t\t\t\t}", "+//\t\t\t\tOS.ReleaseCapture ();", "+\t\t} else {", "+\t\t\tdisplay.clearModal (this);", "+\t\t}", "+\t} else {", "+\t\tupdateModal ();", "+\t}", "+", "+\tif (visible) {\t\t", "-//\tif (drawCount != 0) {", "-//\t\tif (((state & HIDDEN) == 0) == visible) return;", "-//\t} else {", "-//\t\tif (visible == OS.IsWindowVisible (handle)) return;", "-//\t}", "-//\t", "-//\t/*", "-//\t* Feature in Windows.  When ShowWindow() is called used to hide", "-//\t* a window, Windows attempts to give focus to the parent. If the", "-//\t* parent is disabled by EnableWindow(), focus is assigned to", "-//\t* another windows on the desktop.  This means that if you hide", "-//\t* a modal window before the parent is enabled, the parent will", "-//\t* not come to the front.  The fix is to change the modal state", "-//\t* before hiding or showing a window so that this does not occur.", "-//\t*/", "-//\tint mask = SWT.PRIMARY_MODAL | SWT.APPLICATION_MODAL | SWT.SYSTEM_MODAL;", "-//\tif ((style & mask) != 0) {", "-//\t\tif (visible) {", "-//\t\t\tdisplay.setModalShell (this);", "-//\t\t\tControl control = display._getFocusControl ();", "-//\t\t\tif (control != null && !control.isActive ()) {", "-//\t\t\t\tbringToTop ();", "-//\t\t\t\tif (isDisposed ()) return;", "-//\t\t\t}", "-//\t\t\tint hwndShell = OS.GetActiveWindow ();", "-//\t\t\tif (hwndShell == 0) {", "-//\t\t\t\tif (parent != null) hwndShell = parent.handle;", "-//\t\t\t}", "-//\t\t\tif (hwndShell != 0) {", "-//\t\t\t\tOS.SendMessage (hwndShell, OS.WM_CANCELMODE, 0, 0);", "-//\t\t\t}", "-//\t\t\tOS.ReleaseCapture ();", "-//\t\t} else {", "-//\t\t\tdisplay.clearModal (this);", "-//\t\t}", "-//\t} else {", "-//\t\tupdateModal ();", "-//\t}", "-//\t", "-//\t/*", "-//\t* Bug in Windows.  Calling ShowOwnedPopups() to hide the", "-//\t* child windows of a hidden window causes the application", "-//\t* to be deactivated.  The fix is to call ShowOwnedPopups()", "-//\t* to hide children before hiding the parent.", "-//\t*/", "-//\tif (showWithParent && !visible) {", "-//\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, false);", "-//\t}", "-//\tsuper.setVisible (visible);", "-//\tif (isDisposed ()) return;", "-//\tif (showWithParent == visible) return;", "-//\tshowWithParent = visible;", "-//\tif (visible) {", "-//\t\tif (!OS.IsWinCE) OS.ShowOwnedPopups (handle, true);", "-//\t}"]}], "num": 17128}