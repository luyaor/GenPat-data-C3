{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d9c52bfa2bb128dbf468648e4d86466", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5bea7a4216435db884b0bdb78f18e4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "0d71afce2a0eb0fb54fdaaad4248273e806482c5", "commitAfterChange": "6f1328f9571f55f1e4b8672dcde929e3ba698fe0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void pack ()", "signatureAfterChange": " public void pack ()", "diff": ["+\t//TEMPORARY CODE", "+\tif (!parent.isVisible()) {", "+\t\tOS.gtk_tree_view_column_set_sizing (handle, OS.GTK_TREE_VIEW_COLUMN_AUTOSIZE);", "+\t\treturn;", "+\t} else {", "+\t\tOS.gtk_tree_view_column_set_sizing (handle, OS.GTK_TREE_VIEW_COLUMN_FIXED);", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f704895d5b248905561b123f12dcd9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/TabFolder.java", "commitBeforeChange": "3b1662982081ff5c011263c21107a9ba88a49137", "commitAfterChange": "fa0684f848e1d16bf9f5e376572341decc3cc7f4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " void handleResize(int hndl, Rect bounds)", "signatureAfterChange": " void handleResize(int hndl, Rect bounds)", "diff": ["-", "-\tbounds.left+= MARGIN;", "-\tbounds.right-= MARGIN;", "-\tbounds.top+= TOP_MARGIN;", "-\tbounds.bottom-= MARGIN;", "-\tsuper.handleResize(hndl, bounds);", "+\tbounds.left += MARGIN;", "+\tbounds.top += TOP_MARGIN;", "+\tbounds.right -= MARGIN;", "+\tbounds.bottom -= MARGIN;", "+\tOS.SetControlBounds(handle, bounds);", "+", "-\t\tredraw();", "+\t\t// redraw(); \t// only required if the workaround from below is not in place", "+\t", "+\t/*", "+\t * There seems to be a layout/clipping bug with Tab control in compositing", "+\t * mode (HIViews): on resize if the old size is more than a few pixel", "+\t * different from the new size, a rectangular area to the right or left of", "+\t * the tabs isn't repaired. The fix is to make the tab control temporarily", "+\t * one pixel larger.", "+\t */", "+\tbounds.right--;", "+\tOS.SetControlBounds(handle, bounds);", "+\tbounds.right++;", "+\tOS.SetControlBounds(handle, bounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22cc597243dfbd8e221bcd8599b460c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "3a4151df7f890efbc61e9a01d33c3ead4c2645d9", "commitAfterChange": "c762252cf769015e8f116caa1f2d177bbf731286", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createHandle ()", "signatureAfterChange": "\r \r void createHandle ()", "diff": ["+\t\r", "+\t/*\r", "+\t* Feature in Windows.  When TBSTYLE_FLAT is used to create\r", "+\t* a flat toolbar, for some reason TBSTYLE_TRANSPARENT is\r", "+\t* also set.  This causes the toolbar to flicker when it is\r", "+\t* moved or resized.  The fix is to clear TBSTYLE_TRANSPARENT.\r", "+\t*/\r", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\tbits &= ~OS.TBSTYLE_TRANSPARENT;\r", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "-\tint bits = OS.TBSTYLE_EX_DRAWDDARROWS;\r", "-\tOS.SendMessage (handle, OS.TB_SETEXTENDEDSTYLE, 0, bits);\r", "+\tOS.SendMessage (handle, OS.TB_SETEXTENDEDSTYLE, 0, OS.TBSTYLE_EX_DRAWDDARROWS);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c743152f566f65823cbb56518370f25", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "commitAfterChange": "a13356820ae2ed0967a42c9fc54b34db1c3b2a38", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void HandlePreviewKeyDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewKeyDown (int sender, int e)", "diff": ["+\tif (display.dragDetectFrame != 0) {", "+\t\tif (OS.KeyEventArgs_Key (e) == OS.Key_Escape) {", "+\t\t\tOS.DispatcherFrame_Continue (display.dragDetectFrame, false);", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204c87dfd965efa3b2181c9ad9ffe1e5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857431fb0346569b270d2d64d87a0d49ee554249", "commitAfterChange": "655553f843c3b05818fb9e7f567f216acb7aa6cb", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": "  void HandlePreviewMouseMove (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseMove (int sender, int e)", "diff": ["+\t\t\tif (display.dragMouseDown != 0) {", "+\t\t\t\tsendDragEvent (display.dragMouseDown);", "+\t\t\t\tOS.GCHandle_Free (display.dragMouseDown);", "+\t\t\t\tdisplay.dragMouseDown = 0;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301faef9aa13fa3961bf97c3ce88ea47", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "ee2f579d39aac1495e26936c185f2d3fdde43458", "commitAfterChange": "849737990e1e8297b762c3b6d5d7471e3b1737be", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void setWindowVisible (boolean visible, boolean key)", "signatureAfterChange": "  void setWindowVisible (boolean visible, boolean key)", "diff": ["+\t\tif (display.loopCounter == 0) {", "+\t\t\tdisplay.pool.release();", "+\t\t\tdisplay.pool = (NSAutoreleasePool) new NSAutoreleasePool().alloc().init();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e192788d24ff907f750a797d32b1db", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e19b8929298db4194771a475b4b9ef56a8238374", "commitAfterChange": "ca0c5209be7fe694c5578ad160491b05c77a1894", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 69, "signatureBeforeChange": "  void HandlePreviewMouseUp (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseUp (int sender, int e)", "diff": ["+\t}", "+\tif (display.dragDetectFrame != 0) {", "+\t\tOS.DispatcherFrame_Continue (display.dragDetectFrame, false);", "+\t\tdisplay.dragMouseUp = OS.GCHandle_Alloc (e);", "+\t\treturn;"]}], "num": 42521}