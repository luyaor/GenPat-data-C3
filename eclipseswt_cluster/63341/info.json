{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61b15aa7819ec140e045f0ddfa20f2b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64c3d48b5c341441c8ac8894e90b813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "53eaef42c85a19c6c024eb953b35f15c33827e05", "commitAfterChange": "e8c16f7f9f6a3f2c095dfd48e874b4e7a9e7e851", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 105, "signatureBeforeChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "signatureAfterChange": "\r void drawLineSelectionBackground(String line, int lineOffset, StyleRange[] styles, int paintY, GC gc, FontData currentFont, StyledTextBidi bidi)", "diff": ["-\t\t\t// use the greater of the client area width and the content width\r", "-\t\t\t// fixes 1G8IYRD\r", "-\t\t\tselectionBackgroundWidth = Math.max(getClientArea().width, contentWidth.getWidth());\r", "+\t\t\t// use the greater of the client area width and the content \r", "+\t\t\t// width. fixes 1G8IYRD\r", "+\t\t\tselectionBackgroundWidth = Math.max(getClientArea().width, lineCache.getWidth());\r", "+\t\tboolean isWrappedLine = false;\r", "+\r", "+\t\tif (wordWrap) {\r", "+\t\t\tint lineEnd = lineOffset + lineLength;\r", "+\t\t\tint lineIndex = content.getLineAtOffset(lineEnd);\r", "+\r", "+\t\t\t// is the start offset of the next line the same as the end \r", "+\t\t\t// offset of this line?\t\t\t\r", "+\t\t\tif (lineIndex < content.getLineCount() - 1 &&\r", "+\t\t\t\tcontent.getOffsetAtLine(lineIndex + 1) == lineEnd) {\r", "+\t\t\t\tisWrappedLine = true;\r", "+\t\t\t}\r", "+\t\t}\r", "-\t\tif (selectionEnd > lineLength) {\r", "+\t\tif (selectionEnd > lineLength && isWrappedLine == false) {\r", "-\t\t\t// if the selection extends past this line, render an additional whitespace\r", "-\t\t\t// background at the end of the line to represent the selected line break\r", "+\t\t\t// if the selection extends past this line, render an additional \r", "+\t\t\t// whitespace background at the end of the line to represent the \r", "+\t\t\t// selected line break\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710b64939fbb28fb0b1649a9fe5244a0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "476b88e18102db1fbb9ef3a7784dd7270d0ecf3b", "commitAfterChange": "41bdd68738c0b4aa849e6a0d483da956ec49ea3d", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "   @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "signatureAfterChange": "   @Override void setBackgroundColor (long context, long handle, GdkRGBA rgba)", "diff": ["+\t//Note, in Gtk3's CSS, we can't access all of the sub-widgets inside GtkComboBox.", "+\t//Some have to be themed by the global system theme.", "+", "-\t\tsuper.setBackgroundColor (context, handle, rgba);", "+\t\tlong /*int*/ buttonHandle = findButtonHandle (); //get's the GtkEntry handle.", "+\t\t//TODO Refactor this and Button#setBackground, they have similar CSS construction code.", "+\t\tString css = \"* {\\n\";", "+\t\tif (rgba != null) {", "+\t\t\tString color = gtk_rgba_to_css_string (rgba);", "+\t\t\tcss += \"background: \" + color + \";\\n\";", "+\t\t}", "+\t\tcss += \"}\\n\";", "+\t\tgtk_css_provider_load_from_css (OS.gtk_widget_get_style_context(buttonHandle), css); //Apply to Entry", "+\t\t//Note, we can't get to the GtkToggleButton inside GtkComboBoxText, as it's in a private stuct.", "+\t\t//We thus rely on global theme to style it via: GtkToggleButton { background: red}", "+", "+\t//Set the background color of the text of the drop down menu.", "+\tOS.g_object_set (textRenderer, OS.background_rgba, rgba, 0);", "+\t//NOTE: We can't get to the actual menu background, beacuse it is in a private struct in GtkComboBoxText.", "+\t//Thus we rely for the underlying theme to theme the menu via : GtkComboBoxText * { background: xzy }"]}], "num": 63341}