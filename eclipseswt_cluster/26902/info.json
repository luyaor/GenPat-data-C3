{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f1c2c12e8b56fce2e59e8afa055231f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d552965bc09761df30df61dfb54ef17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayItem.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tint /*long*/ id = OS.gtk_plug_get_id (handle);", "+\t\tlong /*int*/ id = OS.gtk_plug_get_id (handle);", "-\t\tint /*long*/ screen = OS.gdk_screen_get_default ();", "+\t\tlong /*int*/ screen = OS.gdk_screen_get_default ();", "-\t\tint /*long*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "-\t\tint /*long*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "-\t\tint /*long*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "-\t\tint /*long*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "+\t\tlong /*int*/ trayAtom = OS.gdk_atom_intern (trayBuffer, true);", "+\t\tlong /*int*/ xTrayAtom = OS.gdk_x11_atom_to_xatom (trayAtom);", "+\t\tlong /*int*/ xDisplay = OS.gdk_x11_display_get_xdisplay(OS.gdk_display_get_default());", "+\t\tlong /*int*/ trayWindow = OS.XGetSelectionOwner (xDisplay, xTrayAtom);", "-\t\tint /*long*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "-\t\tint /*long*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "+\t\tlong /*int*/ messageAtom = OS.gdk_atom_intern (messageBuffer, true);", "+\t\tlong /*int*/ xMessageAtom = OS.gdk_x11_atom_to_xatom (messageAtom);", "-\t\tint /*long*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);", "+\t\tlong /*int*/ clientEvent = OS.g_malloc (XClientMessageEvent.sizeof);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1031db69627ffd499f85f49d9c6fb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public String open ()", "signatureAfterChange": " public String open ()", "diff": ["-\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\tint /*long*/ hwndOwner = parent.handle;", "-\tint /*long*/ hwndParent = parent.handle;", "+\tlong /*int*/ hwndOwner = parent.handle;", "+\tlong /*int*/ hwndParent = parent.handle;", "-\tint /*long*/ lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount3);", "+\tlong /*int*/ lpstrTitle = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount3);", "-\tint /*long*/ lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount4);", "+\tlong /*int*/ lpstrFilter = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount4);", "-\tint /*long*/ lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "+\tlong /*int*/ lpstrFile = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount);", "-\tint /*long*/ lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount5);", "+\tlong /*int*/ lpstrInitialDir = OS.HeapAlloc (hHeap, OS.HEAP_ZERO_MEMORY, byteCount5);", "-\t\t\tint /*long*/ lpfnHook = callback.getAddress ();", "+\t\t\tlong /*int*/ lpfnHook = callback.getAddress ();", "-\tint /*long*/ lpstrDefExt = 0;", "+\tlong /*int*/ lpstrDefExt = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c683878932834e25a2a9a6bd7aad3efe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  void moveBelow (int child, int sibling)", "signatureAfterChange": "  void moveBelow (long child, long sibling)", "diff": ["-void moveBelow (int /*long*/ child, int /*long*/ sibling) {", "+void moveBelow (long /*int*/ child, long /*int*/ sibling) {", "-\tint /*long*/ parentHandle = parentingHandle ();", "+\tlong /*int*/ parentHandle = parentingHandle ();", "-\tint /*long*/ children = fixed.children;", "+\tlong /*int*/ children = fixed.children;", "-\tint /*long*/ [] data = new int /*long*/ [1];", "-\tint /*long*/ [] widget = new int /*long*/ [1];", "-\tint /*long*/ childData = 0, childLink = 0, siblingLink = 0, temp = children;", "+\tlong /*int*/ [] data = new long /*int*/ [1];", "+\tlong /*int*/ [] widget = new long /*int*/ [1];", "+\tlong /*int*/ childData = 0, childLink = 0, siblingLink = 0, temp = children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a7e6a696f3a5f1fee06cd65515dfd2b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void getClipping (Region region)", "signatureAfterChange": " public void getClipping (Region region)", "diff": ["-\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tlong /*int*/ gdipGraphics = data.gdipGraphics;", "-\t\tint /*long*/ rgn = Gdip.Region_new();", "+\t\tlong /*int*/ rgn = Gdip.Region_new();", "-\t\t\tint /*long*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\t\tint /*long*/ identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tlong /*int*/ matrix = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "+\t\t\tlong /*int*/ identity = Gdip.Matrix_new(1, 0, 0, 1, 0, 0);", "-\t\t\tint /*long*/ hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "+\t\t\tlong /*int*/ hRgn = Gdip.Region_GetHRGN(rgn, data.gdipGraphics);", "-\t\tint /*long*/ metaRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\tlong /*int*/ metaRgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\tint /*long*/ hwnd = data.hwnd;", "+\t\tlong /*int*/ hwnd = data.hwnd;", "-\t\t\tint /*long*/ sysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "+\t\t\tlong /*int*/ sysRgn = OS.CreateRectRgn (0, 0, 0, 0);", "-\t\t\t\t\t\tint /*long*/ newSysRgn = OS.ExtCreateRegion(new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);", "+\t\t\t\t\t\tlong /*int*/ newSysRgn = OS.ExtCreateRegion(new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa88b6eaebb581ac1f623f933c26a42e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (long wParam, long lParam)", "diff": ["-LRESULT WM_PAINT (int /*long*/ wParam, int /*long*/ lParam) {", "+LRESULT WM_PAINT (long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\tint /*long*/ hDC = OS.BeginPaint (handle, ps);", "+\t\t\tlong /*int*/ hDC = OS.BeginPaint (handle, ps);", "-\t\t\t\tint /*long*/ [] phdc = new int /*long*/ [1];", "+\t\t\t\tlong /*int*/ [] phdc = new long /*int*/ [1];", "-\t\t\t\tint /*long*/ hBufferedPaint = OS.BeginBufferedPaint (hDC, prcTarget, flags, null, phdc);", "+\t\t\t\tlong /*int*/ hBufferedPaint = OS.BeginBufferedPaint (hDC, prcTarget, flags, null, phdc);", "-\t\t\tint /*long*/ sysRgn = 0;", "+\t\t\tlong /*int*/ sysRgn = 0;", "-\t\t\t\t\t\t\tint /*long*/ newSysRgn = OS.ExtCreateRegion (new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);", "+\t\t\t\t\t\t\tlong /*int*/ newSysRgn = OS.ExtCreateRegion (new float [] {-1, 0, 0, 1, 0, 0}, nBytes, lpRgnData);", "-\t\tint /*long*/ hDC = OS.BeginPaint (handle, ps);", "+\t\tlong /*int*/ hDC = OS.BeginPaint (handle, ps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6baac7e552341afb45f74e1579c2af4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebResourceLoadDelegate.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  int identifierForInitialRequest (int webView, int request, int dataSource, int identifier)", "signatureAfterChange": "  int identifierForInitialRequest (long webView, long request, long dataSource, long identifier)", "diff": ["-int identifierForInitialRequest (int /*long*/ webView, int /*long*/ request, int /*long*/ dataSource, int /*long*/ identifier) {", "+int identifierForInitialRequest (long /*int*/ webView, long /*int*/ request, long /*int*/ dataSource, long /*int*/ identifier) {", "-\tint /*long*/[] frame = new int /*long*/[1];", "+\tlong /*int*/[] frame = new long /*int*/[1];", "-\tint /*long*/[] mainFrame = new int /*long*/[1];", "+\tlong /*int*/[] mainFrame = new long /*int*/[1];", "-\t\tint /*long*/ ptr = OS.malloc (8);", "+\t\tlong /*int*/ ptr = OS.malloc (8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62223d626d7337303e0879ac0e685199", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  int webkit_populate_popup (int web_view, int webkit_menu)", "signatureAfterChange": "  long webkit_populate_popup (long web_view, long webkit_menu)", "diff": ["-int /*long*/ webkit_populate_popup (int /*long*/ web_view, int /*long*/ webkit_menu) {", "+long /*int*/ webkit_populate_popup (long /*int*/ web_view, long /*int*/ webkit_menu) {", "-\t\tint /*long*/ children = OS.gtk_container_get_children (webkit_menu);", "-\t\tint /*long*/ current = children;", "+\t\tlong /*int*/ children = OS.gtk_container_get_children (webkit_menu);", "+\t\tlong /*int*/ current = children;", "-\t\t\tint /*long*/ item = OS.g_list_data (current);", "+\t\t\tlong /*int*/ item = OS.g_list_data (current);", "-\t\tint /*long*/ children = OS.gtk_container_get_children (webkit_menu);", "-\t\tint /*long*/ current = children;", "+\t\tlong /*int*/ children = OS.gtk_container_get_children (webkit_menu);", "+\t\tlong /*int*/ current = children;", "-\t\t\tint /*long*/ item = OS.g_list_data (current);", "+\t\t\tlong /*int*/ item = OS.g_list_data (current);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f4a28bd0e773e10205b5e3621bb72a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void _setImage (Image image)", "signatureAfterChange": "  void _setImage (Image image)", "diff": ["-\t\tint /*long*/ hImage = 0;", "+\t\tlong /*int*/ hImage = 0;", "-\t\t\t\t\tint /*long*/ hDC = OS.GetDC (handle);", "-\t\t\t\t\tint /*long*/ dstHdc = OS.CreateCompatibleDC (hDC);", "-\t\t\t\t\tint /*long*/ hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "-\t\t\t\t\tint /*long*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "+\t\t\t\t\tlong /*int*/ hDC = OS.GetDC (handle);", "+\t\t\t\t\tlong /*int*/ dstHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\tlong /*int*/ hBitmap = OS.CreateCompatibleBitmap (hDC, rect.width, rect.height);", "+\t\t\t\t\tlong /*int*/ oldBitmap = OS.SelectObject (dstHdc, hBitmap);", "-\t\t\t\t\t\tint /*long*/ srcHdc = OS.CreateCompatibleDC (hDC);", "-\t\t\t\t\t\tint /*long*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "+\t\t\t\t\t\tlong /*int*/ srcHdc = OS.CreateCompatibleDC (hDC);", "+\t\t\t\t\t\tlong /*int*/ oldSrcBitmap = OS.SelectObject (srcHdc, hImage);", "-\t\t\t\t\t\tint /*long*/ newBrush = OS.CreateSolidBrush (control.getBackgroundPixel ());", "-\t\t\t\t\t\tint /*long*/ oldBrush = OS.SelectObject (dstHdc, newBrush);", "+\t\t\t\t\t\tlong /*int*/ newBrush = OS.CreateSolidBrush (control.getBackgroundPixel ());", "+\t\t\t\t\t\tlong /*int*/ oldBrush = OS.SelectObject (dstHdc, newBrush);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b524dec90b8160e2d9c9d9b1ff1f525e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": " \tint QueryService(int guidService, int riid, int ppvObject)", "signatureAfterChange": " \tint QueryService(long guidService, long riid, long ppvObject)", "diff": ["-\tint QueryService(int /*long*/ guidService, int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\tint QueryService(long /*int*/ guidService, long /*int*/ riid, long /*int*/ ppvObject) {", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tint /*long*/ [] ppv = new int /*long*/ [1];", "+\t\t\tlong /*int*/ [] ppv = new long /*int*/ [1];", "-\t\t\t\tint /*long*/ [] ppvx = new int /*long*/ [1];", "+\t\t\t\tlong /*int*/ [] ppvx = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c63672a3fc9c62a15d819af71a0871", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 259, "signatureBeforeChange": " \tint QueryInterface(int iid, int ppvObject)", "signatureAfterChange": " \tint QueryInterface(long iid, long ppvObject)", "diff": ["-\tint QueryInterface(int /*long*/ iid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { 0 }, OS.PTR_SIZEOF);", "+\tint QueryInterface(long /*int*/ iid, long /*int*/ ppvObject) {", "+\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { 0 }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIEnumVARIANT.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIEnumVARIANT.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIServiceProvider.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\t\tCOM.MoveMemory(ppvObject, new long /*int*/[] { objIServiceProvider.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tint /*long*/[] ppv = new int /*long*/[1];", "+\t\t\tlong /*int*/[] ppv = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4702e0218697ea0d1f7caf28a4a61ca8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  void moveAbove (int child, int sibling)", "signatureAfterChange": "  void moveAbove (long child, long sibling)", "diff": ["-void moveAbove (int /*long*/ child, int /*long*/ sibling) {", "+void moveAbove (long /*int*/ child, long /*int*/ sibling) {", "-\tint /*long*/ parentHandle = parentingHandle ();", "+\tlong /*int*/ parentHandle = parentingHandle ();", "-\tint /*long*/ children = fixed.children;", "+\tlong /*int*/ children = fixed.children;", "-\tint /*long*/ [] data = new int /*long*/ [1];", "-\tint /*long*/ [] widget = new int /*long*/ [1];", "-\tint /*long*/ childData = 0, childLink = 0, siblingLink = 0, temp = children;", "+\tlong /*int*/ [] data = new long /*int*/ [1];", "+\tlong /*int*/ [] widget = new long /*int*/ [1];", "+\tlong /*int*/ childData = 0, childLink = 0, siblingLink = 0, temp = children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd597cfd75a66fd249f33974640050f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "  int callJava (int ctx, int func, int thisObject, int argumentCount, int arguments, int exception)", "signatureAfterChange": "  long callJava (long ctx, long func, long thisObject, long argumentCount, long arguments, long exception)", "diff": ["-int /*long*/ callJava (int /*long*/ ctx, int /*long*/ func, int /*long*/ thisObject, int /*long*/ argumentCount, int /*long*/ arguments, int /*long*/ exception) {", "+long /*int*/ callJava (long /*int*/ ctx, long /*int*/ func, long /*int*/ thisObject, long /*int*/ argumentCount, long /*int*/ arguments, long /*int*/ exception) {", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b35d91a8e59f9cc971cde94030ac142", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tstatic int atkEditableText_set_run_attributes (int atkObject, int attrib_set, int start_offset, int end_offset)", "signatureAfterChange": " \tstatic long atkEditableText_set_run_attributes (long atkObject, long attrib_set, long start_offset, long end_offset)", "diff": ["-\tstatic int /*long*/ atkEditableText_set_run_attributes (int /*long*/ atkObject, int /*long*/ attrib_set, int /*long*/ start_offset, int /*long*/ end_offset) {", "+\tstatic long /*int*/ atkEditableText_set_run_attributes (long /*int*/ atkObject, long /*int*/ attrib_set, long /*int*/ start_offset, long /*int*/ end_offset) {", "-\t\t\t\tint /*long*/ fontDesc = OS.pango_font_description_new ();", "+\t\t\t\tlong /*int*/ fontDesc = OS.pango_font_description_new ();", "-\t\t\t\tint /*long*/ current = attrib_set;", "+\t\t\t\tlong /*int*/ current = attrib_set;", "-\t\t\t\t\tint /*long*/ attrPtr = OS.g_slist_data (current);", "+\t\t\t\t\tlong /*int*/ attrPtr = OS.g_slist_data (current);", "-\t\tint /*long*/ parentResult = 0;", "+\t\tlong /*int*/ parentResult = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d7f49198deb58af17ab306efad22e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  int cellDataProc (int tree_column, int cell, int tree_model, int iter, int data)", "signatureAfterChange": "  long cellDataProc (long tree_column, long cell, long tree_model, long iter, long data)", "diff": ["-int /*long*/ cellDataProc (int /*long*/ tree_column, int /*long*/ cell, int /*long*/ tree_model, int /*long*/ iter, int /*long*/ data) {", "+long /*int*/ cellDataProc (long /*int*/ tree_column, long /*int*/ cell, long /*int*/ tree_model, long /*int*/ iter, long /*int*/ data) {", "-\tint /*long*/ path = OS.gtk_tree_model_get_path (tree_model, iter);", "+\tlong /*int*/ path = OS.gtk_tree_model_get_path (tree_model, iter);", "-\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\tlong /*int*/ [] ptr = new long /*int*/ [1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac4d77f24048256b98018d6b105b24e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  long messageProc (long hwnd, long msg, long wParam, long lParam)", "diff": ["-int /*long*/ messageProc (int /*long*/ hwnd, int /*long*/ msg, int /*long*/ wParam, int /*long*/ lParam) {", "+long /*int*/ messageProc (long /*int*/ hwnd, long /*int*/ msg, long /*int*/ wParam, long /*int*/ lParam) {", "-\t\t\t\tint /*long*/ hHeap = OS.GetProcessHeap ();", "+\t\t\t\tlong /*int*/ hHeap = OS.GetProcessHeap ();", "-\t\t\t\t\tint /*long*/ hwndActive = OS.GetActiveWindow ();", "+\t\t\t\t\tlong /*int*/ hwndActive = OS.GetActiveWindow ();", "-\t\t\t\t\t\tint /*long*/ hwndModal = modal.handle;", "+\t\t\t\t\t\tlong /*int*/ hwndModal = modal.handle;", "-\t\t\t\t\t\tint /*long*/ hwndPopup = OS.GetLastActivePopup (hwndModal);", "+\t\t\t\t\t\tlong /*int*/ hwndPopup = OS.GetLastActivePopup (hwndModal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e39254e9532514ab62fde61b936f2683", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 422, "methodNumberAfterChange": 422, "signatureBeforeChange": " public static final native int CGImageCreate(int width, int height, int bitsPerComponent, int bitsPerPixel, int bytesPerRow, int colorspace, int bitmapInfo, int provider, int decode, boolean shouldInterpolate, int intent);", "signatureAfterChange": " public static final native long CGImageCreate(long width, long height, long bitsPerComponent, long bitsPerPixel, long bytesPerRow, long colorspace, int bitmapInfo, long provider, long decode, boolean shouldInterpolate, int intent);", "diff": ["-public static final native int /*long*/ CGImageCreate(int /*long*/ width, int /*long*/ height, int /*long*/ bitsPerComponent, int /*long*/ bitsPerPixel, int /*long*/ bytesPerRow, int /*long*/ colorspace, int bitmapInfo, int /*long*/ provider, int /*long*/ decode, boolean shouldInterpolate, int intent);", "+public static final native long /*int*/ CGImageCreate(long /*int*/ width, long /*int*/ height, long /*int*/ bitsPerComponent, long /*int*/ bitsPerPixel, long /*int*/ bytesPerRow, long /*int*/ colorspace, int bitmapInfo, long /*int*/ provider, long /*int*/ decode, boolean shouldInterpolate, int intent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be699072b4b015772a9d341b2bb6e3f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Theme/gtk/org/eclipse/swt/internal/theme/ButtonDrawData.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   void draw(Theme theme, GC gc, Rectangle bounds)", "signatureAfterChange": "   void draw(Theme theme, GC gc, Rectangle bounds)", "diff": ["-\tint /*long*/ drawable = gc.getGCData().drawable;", "+\tlong /*int*/ drawable = gc.getGCData().drawable;", "-\t\tint /*long*/ radioButtonHandle = theme.radioButtonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (radioButtonHandle);", "+\t\tlong /*int*/ radioButtonHandle = theme.radioButtonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (radioButtonHandle);", "-\t\tint /*long*/ checkButtonHandle = theme.checkButtonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (checkButtonHandle);", "+\t\tlong /*int*/ checkButtonHandle = theme.checkButtonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (checkButtonHandle);", "-\t\tint /*long*/ buttonHandle = theme.buttonHandle;", "-\t\tint /*long*/ gtkStyle = OS.gtk_widget_get_style (buttonHandle);", "+\t\tlong /*int*/ buttonHandle = theme.buttonHandle;", "+\t\tlong /*int*/ gtkStyle = OS.gtk_widget_get_style (buttonHandle);", "-\t\tint /*long*/ default_border_ptr = theme.getBorderProperty(buttonHandle, \"default-border\");", "+\t\tlong /*int*/ default_border_ptr = theme.getBorderProperty(buttonHandle, \"default-border\");", "-\t\tint /*long*/ default_outside_border_ptr = theme.getBorderProperty(buttonHandle, \"default-outside-border\");", "+\t\tlong /*int*/ default_outside_border_ptr = theme.getBorderProperty(buttonHandle, \"default-outside-border\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad2891d9a395e9daa50447942b4e480", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " public static final native int _call (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6);", "signatureAfterChange": " public static final native long _call (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5, long arg6);", "diff": ["-public static final native int /*long*/ _call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6);", "+public static final native long /*int*/ _call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3faaa8dca7a1cac245db3daca23f19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "signatureAfterChange": "  void drawBitmapTransparent(Image srcImage, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean simple, BITMAP bm, int imgWidth, int imgHeight)", "diff": ["-\tint /*long*/ hBitmap = srcImage.handle;", "-\tint /*long*/ srcHdc = OS.CreateCompatibleDC(handle);", "-\tint /*long*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "+\tlong /*int*/ hBitmap = srcImage.handle;", "+\tlong /*int*/ srcHdc = OS.CreateCompatibleDC(handle);", "+\tlong /*int*/ oldSrcBitmap = OS.SelectObject(srcHdc, hBitmap);", "-\t\tint /*long*/ maskHdc = OS.CreateCompatibleDC(handle);", "-\t\tint /*long*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "-\t\tint /*long*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "+\t\tlong /*int*/ maskHdc = OS.CreateCompatibleDC(handle);", "+\t\tlong /*int*/ maskBitmap = OS.CreateBitmap(imgWidth, imgHeight, 1, 1, null);", "+\t\tlong /*int*/ oldMaskBitmap = OS.SelectObject(maskHdc, maskBitmap);", "-\t\t\tint /*long*/ tempHdc = OS.CreateCompatibleDC(handle);", "-\t\t\tint /*long*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "-\t\t\tint /*long*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);", "+\t\t\tlong /*int*/ tempHdc = OS.CreateCompatibleDC(handle);", "+\t\t\tlong /*int*/ tempBitmap = OS.CreateCompatibleBitmap(handle, destWidth, destHeight);\t", "+\t\t\tlong /*int*/ oldTempBitmap = OS.SelectObject(tempHdc, tempBitmap);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b420fb3ed0e49e84a667de1b1a2f74eb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  int createWindowSubclass(int baseClass, String newClass, boolean isDynamic)", "signatureAfterChange": "  long createWindowSubclass(long baseClass, String newClass, boolean isDynamic)", "diff": ["-int /*long*/ createWindowSubclass(int /*long*/ baseClass, String newClass, boolean isDynamic) {", "-\tint /*long*/ cls = OS.objc_lookUpClass(newClass);", "+long /*int*/ createWindowSubclass(long /*int*/ baseClass, String newClass, boolean isDynamic) {", "+\tlong /*int*/ cls = OS.objc_lookUpClass(newClass);", "-\tint /*long*/ proc3 = windowCallback3.getAddress();", "-\tint /*long*/ proc2 = windowCallback2.getAddress();", "-\tint /*long*/ proc4 = windowCallback4.getAddress();", "-\tint /*long*/ proc6 = windowCallback6.getAddress();", "-\tint /*long*/ view_stringForToolTip_point_userDataProc = OS.CALLBACK_view_stringForToolTip_point_userData_(proc6);", "-\tint /*long*/ accessibilityHitTestProc = OS.CALLBACK_accessibilityHitTest_(proc3);", "+\tlong /*int*/ proc3 = windowCallback3.getAddress();", "+\tlong /*int*/ proc2 = windowCallback2.getAddress();", "+\tlong /*int*/ proc4 = windowCallback4.getAddress();", "+\tlong /*int*/ proc6 = windowCallback6.getAddress();", "+\tlong /*int*/ view_stringForToolTip_point_userDataProc = OS.CALLBACK_view_stringForToolTip_point_userData_(proc6);", "+\tlong /*int*/ accessibilityHitTestProc = OS.CALLBACK_accessibilityHitTest_(proc3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b57abc82514cf421d42fe108da792e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  int webkit_window_object_cleared (int web_view, int frame, int context, int window_object)", "signatureAfterChange": "  long webkit_window_object_cleared (long web_view, long frame, long context, long window_object)", "diff": ["-int /*long*/ webkit_window_object_cleared (int /*long*/ web_view, int /*long*/ frame, int /*long*/ context, int /*long*/ window_object) {", "-\tint /*long*/ globalObject = WebKitGTK.JSContextGetGlobalObject (context);", "-\tint /*long*/ externalObject = WebKitGTK.JSObjectMake (context, ExternalClass, webViewData);", "+long /*int*/ webkit_window_object_cleared (long /*int*/ web_view, long /*int*/ frame, long /*int*/ context, long /*int*/ window_object) {", "+\tlong /*int*/ globalObject = WebKitGTK.JSContextGetGlobalObject (context);", "+\tlong /*int*/ externalObject = WebKitGTK.JSObjectMake (context, ExternalClass, webViewData);", "-\tint /*long*/ name = WebKitGTK.JSStringCreateWithUTF8CString (bytes);", "+\tlong /*int*/ name = WebKitGTK.JSStringCreateWithUTF8CString (bytes);", "-\tint /*long*/ mainFrame = WebKitGTK.webkit_web_view_get_main_frame (webView);", "+\tlong /*int*/ mainFrame = WebKitGTK.webkit_web_view_get_main_frame (webView);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f149d7fd775f2a4284db5b98c086d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/NSBitmapImageRep.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(int planes, int width, int height, int bps, int spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int bitmapFormat, int rBytes, int pBits)", "signatureAfterChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(long planes, long width, long height, long bps, long spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long bitmapFormat, long rBytes, long pBits)", "diff": ["-public NSBitmapImageRep initWithBitmapDataPlanes(int /*long*/ planes, int /*long*/ width, int /*long*/ height, int /*long*/ bps, int /*long*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int /*long*/ bitmapFormat, int /*long*/ rBytes, int /*long*/ pBits) {", "-\tint /*long*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bitmapFormat_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, bitmapFormat, rBytes, pBits);", "+public NSBitmapImageRep initWithBitmapDataPlanes(long /*int*/ planes, long /*int*/ width, long /*int*/ height, long /*int*/ bps, long /*int*/ spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, long /*int*/ bitmapFormat, long /*int*/ rBytes, long /*int*/ pBits) {", "+\tlong /*int*/ result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bitmapFormat_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, bitmapFormat, rBytes, pBits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38c7c0ebd801565249c63bc8b9d20e85", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/PromptService2.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int ConfirmEx (int aParent, int aDialogTitle, int aText, int aButtonFlags, int aButton0Title, int aButton1Title, int aButton2Title, int aCheckMsg, int aCheckState, int _retval)", "signatureAfterChange": "  int ConfirmEx (long aParent, long aDialogTitle, long aText, int aButtonFlags, long aButton0Title, long aButton1Title, long aButton2Title, long aCheckMsg, long aCheckState, long _retval)", "diff": ["-int ConfirmEx (int /*long*/ aParent, int /*long*/ aDialogTitle, int /*long*/ aText, int aButtonFlags, int /*long*/ aButton0Title, int /*long*/ aButton1Title, int /*long*/ aButton2Title, int /*long*/ aCheckMsg, int /*long*/ aCheckState, int /*long*/ _retval) {", "+int ConfirmEx (long /*int*/ aParent, long /*int*/ aDialogTitle, long /*int*/ aText, int aButtonFlags, long /*int*/ aButton0Title, long /*int*/ aButton1Title, long /*int*/ aButton2Title, long /*int*/ aCheckMsg, long /*int*/ aCheckState, long /*int*/ _retval) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f698a0fb2986e7042e95bf65cf96b020", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void copyArea (Image image, int x, int y, int srcImage)", "signatureAfterChange": "  void copyArea (Image image, int x, int y, long srcImage)", "diff": ["-void copyArea (Image image, int x, int y, int /*long*/ srcImage) {", "+void copyArea (Image image, int x, int y, long /*int*/ srcImage) {", "-\tint /*long*/ bpc = rep.bitsPerSample();", "-\tint /*long*/ width = rep.pixelsWide();", "-\tint /*long*/ height = rep.pixelsHigh();", "-\tint /*long*/ bpr = rep.bytesPerRow();", "-\tint /*long*/ data = rep.bitmapData();", "-\tint /*long*/ format = rep.bitmapFormat();", "+\tlong /*int*/ bpc = rep.bitsPerSample();", "+\tlong /*int*/ width = rep.pixelsWide();", "+\tlong /*int*/ height = rep.pixelsHigh();", "+\tlong /*int*/ bpr = rep.bytesPerRow();", "+\tlong /*int*/ data = rep.bitmapData();", "+\tlong /*int*/ format = rep.bitmapFormat();", "-\tint /*long*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "-\tint /*long*/ context = OS.CGBitmapContextCreate(data, width, height, bpc, bpr, colorspace, alphaInfo);", "+\tlong /*int*/ colorspace = OS.CGColorSpaceCreateDeviceRGB();", "+\tlong /*int*/ context = OS.CGBitmapContextCreate(data, width, height, bpc, bpr, colorspace, alphaInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beb977e865a5ffe608c45a25ce8665af", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  int webkit_navigation_policy_decision_requested (int web_view, int frame, int request, int navigation_action, int policy_decision)", "signatureAfterChange": "  long webkit_navigation_policy_decision_requested (long web_view, long frame, long request, long navigation_action, long policy_decision)", "diff": ["-int /*long*/ webkit_navigation_policy_decision_requested (int /*long*/ web_view, int /*long*/ frame, int /*long*/ request, int /*long*/ navigation_action, int /*long*/ policy_decision) {", "+long /*int*/ webkit_navigation_policy_decision_requested (long /*int*/ web_view, long /*int*/ frame, long /*int*/ request, long /*int*/ navigation_action, long /*int*/ policy_decision) {", "-\tint /*long*/ uri = WebKitGTK.webkit_network_request_get_uri (request);", "+\tlong /*int*/ uri = WebKitGTK.webkit_network_request_get_uri (request);", "-\t\t\tint /*long*/ settings = WebKitGTK.webkit_web_view_get_settings (webView);", "+\t\t\tlong /*int*/ settings = WebKitGTK.webkit_web_view_get_settings (webView);", "-\t\tint /*long*/ mainFrame = WebKitGTK.webkit_web_view_get_main_frame (webView);", "+\t\tlong /*int*/ mainFrame = WebKitGTK.webkit_web_view_get_main_frame (webView);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c63188c26617263ed838b314a99f359d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 252, "signatureBeforeChange": "  int windowProc (int handle, int arg0, int user_data)", "signatureAfterChange": "  long windowProc (long handle, long arg0, long user_data)", "diff": ["-int /*long*/ windowProc (int /*long*/ handle, int /*long*/ arg0, int /*long*/ user_data) {", "+long /*int*/ windowProc (long /*int*/ handle, long /*int*/ arg0, long /*int*/ user_data) {", "-\t\t\t\t\tint /*long*/ paintWindow = paintWindow();", "-\t\t\t\t\tint /*long*/ window = gdkEvent.window;", "+\t\t\t\t\tlong /*int*/ paintWindow = paintWindow();", "+\t\t\t\t\tlong /*int*/ window = gdkEvent.window;", "-\t\t\t\t\tint /*long*/ paintWindow = paintWindow();", "-\t\t\t\t\tint /*long*/ window = gdkEvent.window;", "+\t\t\t\t\tlong /*int*/ paintWindow = paintWindow();", "+\t\t\t\t\tlong /*int*/ window = gdkEvent.window;", "-\t\t\t\t\tint /*long*/ gdkGC = OS.gdk_gc_new (window);", "+\t\t\t\t\tlong /*int*/ gdkGC = OS.gdk_gc_new (window);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7198c8c4cd0a7979814375eed2ec06c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  int callJava (int ctx, int func, int thisObject, int argumentCount, int arguments, int exception)", "signatureAfterChange": "  long callJava (long ctx, long func, long thisObject, long argumentCount, long arguments, long exception)", "diff": ["-int /*long*/ callJava (int /*long*/ ctx, int /*long*/ func, int /*long*/ thisObject, int /*long*/ argumentCount, int /*long*/ arguments, int /*long*/ exception) {", "+long /*int*/ callJava (long /*int*/ ctx, long /*int*/ func, long /*int*/ thisObject, long /*int*/ argumentCount, long /*int*/ arguments, long /*int*/ exception) {", "-\t\tint /*long*/[] result = new int /*long*/[1];", "+\t\tlong /*int*/[] result = new long /*int*/[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "316eb17197f3e9462608a1bf982f250f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/gtk/org/eclipse/swt/internal/gtk/OS.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public static final int call (int function, int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6)", "signatureAfterChange": " public static final long call (long function, long arg0, long arg1, long arg2, long arg3, long arg4, long arg5, long arg6)", "diff": ["-public static final native int /*long*/ _call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6);", "-public static final int /*long*/ call (int /*long*/ function, int /*long*/ arg0, int /*long*/ arg1, int /*long*/ arg2, int /*long*/ arg3, int /*long*/ arg4, int /*long*/ arg5, int /*long*/ arg6) {", "+public static final native long /*int*/ _call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6);", "+public static final long /*int*/ call (long /*int*/ function, long /*int*/ arg0, long /*int*/ arg1, long /*int*/ arg2, long /*int*/ arg3, long /*int*/ arg4, long /*int*/ arg5, long /*int*/ arg6) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baca1b8448ff5c4efc1472220cfde990", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "signatureAfterChange": " public void draw (GC gc, int x, int y, int selectionStart, int selectionEnd, Color selectionForeground, Color selectionBackground, int flags)", "diff": ["-\tint /*long*/ hdc = gc.handle;", "+\tlong /*int*/ hdc = gc.handle;", "-\tint /*long*/ gdipGraphics = data.gdipGraphics;", "+\tlong /*int*/ gdipGraphics = data.gdipGraphics;", "-\tint /*long*/ gdipForeground = 0;", "-\tint /*long*/ gdipLinkColor = 0;", "+\tlong /*int*/ gdipForeground = 0;", "+\tlong /*int*/ gdipLinkColor = 0;", "-\tint /*long*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "-\tint /*long*/ selBackground = 0;", "+\tlong /*int*/ gdipSelBackground = 0, gdipSelForeground = 0, gdipFont = 0, lastHFont = 0;", "+\tlong /*int*/ selBackground = 0;", "-\t\t\t\t\t\tint /*long*/ hFont = getItemFont(run);", "+\t\t\t\t\t\tlong /*int*/ hFont = getItemFont(run);", "-\t\t\t\t\t\t\tint /*long*/ oldFont = OS.SelectObject(hdc, hFont);", "+\t\t\t\t\t\t\tlong /*int*/ oldFont = OS.SelectObject(hdc, hFont);", "-\t\t\t\t\t\tint /*long*/ gdipFg = gdipForeground;", "+\t\t\t\t\t\tlong /*int*/ gdipFg = gdipForeground;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e9d37a1af87faebcff64ebf4257441", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "bc8036435837353efa5da8c19b6a3003dbb86045", "commitAfterChange": "5721cfd149c1026b4c21848f64c2b57027ac8c7e", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  int Authenticate (int hwnd, int szUsername, int szPassword)", "signatureAfterChange": "  int Authenticate (long hwnd, long szUsername, long szPassword)", "diff": ["-int Authenticate (int /*long*/ hwnd, int /*long*/ szUsername, int /*long*/ szPassword) {", "+int Authenticate (long /*int*/ hwnd, long /*int*/ szUsername, long /*int*/ szPassword) {", "-\t\t\tint /*long*/ userPtr = COM.CoTaskMemAlloc (size);", "+\t\t\tlong /*int*/ userPtr = COM.CoTaskMemAlloc (size);", "-\t\t\tint /*long*/ passwordPtr = COM.CoTaskMemAlloc (size);", "+\t\t\tlong /*int*/ passwordPtr = COM.CoTaskMemAlloc (size);", "-\t\t\tC.memmove (hwnd, new int /*long*/[] {0}, C.PTR_SIZEOF);", "-\t\t\tC.memmove (szUsername, new int /*long*/[] {userPtr}, C.PTR_SIZEOF);", "-\t\t\tC.memmove (szPassword, new int /*long*/[] {passwordPtr}, C.PTR_SIZEOF);", "+\t\t\tC.memmove (hwnd, new long /*int*/[] {0}, C.PTR_SIZEOF);", "+\t\t\tC.memmove (szUsername, new long /*int*/[] {userPtr}, C.PTR_SIZEOF);", "+\t\t\tC.memmove (szPassword, new long /*int*/[] {passwordPtr}, C.PTR_SIZEOF);", "-\tC.memmove (hwnd, new int /*long*/[] {getShell().handle}, C.PTR_SIZEOF);", "+\tC.memmove (hwnd, new long /*int*/[] {getShell().handle}, C.PTR_SIZEOF);"]}], "num": 26902}