{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94f955d57c9a642fdb5c0551004c378a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52fecbd0dcbeb56de5eba0d7e48162b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9bd03104d009c82145f5c8f56f22061b9cfa52e5", "commitAfterChange": "6d7b00971b6d8f6daef5e4ed7641a103a3009522", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "signatureAfterChange": "\r \r static int[] init(Device device, Image image, ImageData i)", "diff": ["-\t * (0xFF000000, 0xFF0000, 0xFF00).  Make sure the image is\r", "+\t * (0x00FF0000, 0x0000FF00, 0x000000FF) as documented in \r", "+\t * MSDN BITMAPINFOHEADER.  Make sure the image is \r", "+\t/*\r", "+\t* Note on WinCE.  CreateDIBSection requires the biCompression\r", "+\t* field of the BITMAPINFOHEADER to be set to BI_BITFIELDS for\r", "+\t* 16 and 32 bit direct images (see MSDN for CreateDIBSection).\r", "+\t* In this case, the color mask can be set to any value.  For\r", "+\t* consistency, it is set to the same mask used by non WinCE\r", "+\t* platforms in BI_RGB mode.\r", "+\t*/\r", "-\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "-\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "-\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "-\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t/*\r", "+\t\t\t * The color masks must be written based on the\r", "+\t\t\t * endianness of the ImageData.\r\t\t\t */\r", "+\t\t\tif (i.getByteOrder() == ImageData.LSB_FIRST) {\r", "+\t\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t} else {\r", "+\t\t\t\tbmi[40] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[41] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[42] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[43] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF) >> 0);\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c5e40b465a82ba642886dd42a69417", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Image.java", "commitBeforeChange": "9bd03104d009c82145f5c8f56f22061b9cfa52e5", "commitAfterChange": "6d7b00971b6d8f6daef5e4ed7641a103a3009522", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r int createDIBFromDDB(int hDC, int hBitmap, int width, int height)", "signatureAfterChange": "\r int createDIBFromDDB(int hDC, int hBitmap, int width, int height)", "diff": ["-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase 24: \r", "-\t\t\t\t\tredMask = 0xFF;\r", "-\t\t\t\t\tgreenMask = 0xFF00;\r", "-\t\t\t\t\tblueMask = 0xFF0000;\r", "+\t\t\t\t\t/* little endian */\r", "+\t\t\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "+\t\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\t/* big endian */\r", "+\t\t\t\t\tbmi[40] = (byte)((redMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\tbmi[41] = (byte)((redMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[42] = (byte)((redMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[43] = (byte)((redMask & 0xFF) >> 0);\r", "+\t\t\t\t\tbmi[44] = (byte)((greenMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\tbmi[45] = (byte)((greenMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[46] = (byte)((greenMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[47] = (byte)((greenMask & 0xFF) >> 0);\r", "+\t\t\t\t\tbmi[48] = (byte)((blueMask & 0xFF000000) >> 24);\r", "+\t\t\t\t\tbmi[49] = (byte)((blueMask & 0xFF0000) >> 16);\r", "+\t\t\t\t\tbmi[50] = (byte)((blueMask & 0xFF00) >> 8);\r", "+\t\t\t\t\tbmi[51] = (byte)((blueMask & 0xFF) >> 0);\r", "-\t\t\tbmi[40] = (byte)((redMask & 0xFF) >> 0);\r", "-\t\t\tbmi[41] = (byte)((redMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[42] = (byte)((redMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[43] = (byte)((redMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[44] = (byte)((greenMask & 0xFF) >> 0);\r", "-\t\t\tbmi[45] = (byte)((greenMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[46] = (byte)((greenMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[47] = (byte)((greenMask & 0xFF000000) >> 24);\r", "-\t\t\tbmi[48] = (byte)((blueMask & 0xFF) >> 0);\r", "-\t\t\tbmi[49] = (byte)((blueMask & 0xFF00) >> 8);\r", "-\t\t\tbmi[50] = (byte)((blueMask & 0xFF0000) >> 16);\r", "-\t\t\tbmi[51] = (byte)((blueMask & 0xFF000000) >> 24);\r"]}], "num": 32426}