{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3879163c8f998b731d48ca6cdd3680fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e240d68e328feaed2aa788fd3a88dec7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 281, "signatureBeforeChange": " \tvoid setLineJustify(int startLine, int count, boolean justify)", "signatureAfterChange": " public void setLineJustify(int startLine, int lineCount, boolean justify)", "diff": ["-\t}", "-\tvoid setLineJustify(int startLine, int count, boolean justify) {", "-\t\tfor (int i = startLine; i < startLine + count; i++) {", "-\t\t\tif (lines[i] == null) {", "-\t\t\t\tlines[i] = new LineInfo();", "-\t\t\t}", "-\t\t\tlines[i].flags |= JUSTIFY;", "-\t\t\tlines[i].justify = justify;", "-\t\t}", "-\t}", "+ */", "+public void setLineJustify(int startLine, int lineCount, boolean justify) {", "+\tcheckWidget();", "+\tif (isListening(LineGetStyle)) return;", "+\tif (startLine < 0 || startLine + lineCount > content.getLineCount()) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+", "+\trenderer.setLineJustify(startLine, lineCount, justify);", "+\tresetCache(startLine, lineCount);", "+\tredrawLines(startLine, lineCount);", "+\tint caretLine = getCaretLine();", "+\tif (startLine <= caretLine && caretLine < startLine + lineCount) {", "+\t\tsetCaretLocation();", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a8c75765f2a4721a4a5ff59c92b18b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "635a9e5d0a5f495ec272194dbb750eddc745876f", "commitAfterChange": "e83d77b7ddccf5500d06ea30a64ce0d090ac4b10", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 280, "signatureBeforeChange": " \tvoid setLineIndent(int startLine, int count, int indent)", "signatureAfterChange": " public void setLineIndent(int startLine, int lineCount, int indent)", "diff": ["-\t}", "-\tvoid setLineIndent(int startLine, int count, int indent) {", "-\t\tfor (int i = startLine; i < startLine + count; i++) {", "-\t\t\tif (lines[i] == null) {", "-\t\t\t\tlines[i] = new LineInfo();", "-\t\t\t}", "-\t\t\tlines[i].flags |= INDENT;", "-\t\t\tlines[i].indent = indent;", "-\t\t}", "-\t}", "+ */", "+public void setLineIndent(int startLine, int lineCount, int indent) {", "+\tcheckWidget();", "+\tif (isListening(LineGetStyle)) return;", "+\tif (startLine < 0 || startLine + lineCount > content.getLineCount()) {", "+\t\tSWT.error(SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+", "+\trenderer.setLineIndent(startLine, lineCount, indent);", "+\tresetCache(startLine, lineCount);", "+\tredrawLines(startLine, lineCount);", "+\tint caretLine = getCaretLine();", "+\tif (startLine <= caretLine && caretLine < startLine + lineCount) {", "+\t\tsetCaretLocation();", "+\t}", "+}"]}], "num": 31820}