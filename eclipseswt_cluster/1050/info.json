{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa19e1fe1984a53f38cc371a04f3de6c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d39b5b72b5650b80b50e9f9f85b19e2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "5ee66b4e4aa7e3b16413042c7ed830ba82d7da9c", "commitAfterChange": "1f6f99323ca5cf329c2b1438d938ca1097ff180b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tint createFactory (byte[] name)", "signatureAfterChange": "  \tint createFactory (byte[] name)", "diff": ["-\t\tint parent = OS.g_type_from_name (Converter.wcsToMbcs (null, FACTORY_PARENTTYPE, true));", "+\t\tint parent = ATK.g_type_from_name (Converter.wcsToMbcs (null, FACTORY_PARENTTYPE, true));", "-\t\tOS.memmove (handle, typeInfo, GTypeInfo.sizeof); ", "-\t\treturn OS.g_type_register_static (parent, name, handle, 0);", "+\t\tATK.memmove (handle, typeInfo, GTypeInfo.sizeof); ", "+\t\treturn ATK.g_type_register_static (parent, name, handle, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "751b153b317825a3c82d6da25bd13144", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleFactory.java", "commitBeforeChange": "1600566572476d9a59d55b12b53edda457f44a52", "commitAfterChange": "9b8efc09a689dca8137a73eb726757d83f71f8ea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tstatic AccessibleType getChildType ()", "signatureAfterChange": " \t \tstatic int getDefaultChildType ()", "diff": ["-", "-\tstatic AccessibleType getChildType () {", "-\t\tif (childType == null) {", "-\t\t\tbyte[] typeName = Converter.wcsToMbcs (null, CHILD_TYPE, true);", "-\t\t\tint parentType = ATK.g_type_from_name (Converter.wcsToMbcs (null, DEFAULT_PARENTTYPE, true));", "-\t\t\tchildType = new AccessibleType (typeName, parentType);", "+\t", "+\tstatic int getDefaultChildType () {", "+\t\tif (DefaultChildType == 0) {", "+\t\t\tDefaultChildType = defineType (DEFAULT_CHILDTYPENAME, DefaultParentType);", "-\t\treturn childType;", "+\t\treturn DefaultChildType;"]}], "num": 1050}