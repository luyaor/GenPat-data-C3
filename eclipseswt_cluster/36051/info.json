{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94d5e8bcfc0dbda0fccfaa012d050cca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edd8f8f14b55a00b81b49ada9845042", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "571955f4102d14c176ced98c881bff2c253650d2", "commitAfterChange": "f1a5ab498a02ea2b6c3775c919b87767d3133145", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " int processPaint (Object callData)", "signatureAfterChange": " int processPaint (Object callData)", "diff": ["+\t/*", "-\t", "-\t// AW", "-\t// calculate damage rect for this Control", "-\tMacControlEvent me= (MacControlEvent) callData;", "-\tint updateRegion= me.getDamageRegionHandle();", "-", "-\tMacRect bounds= new MacRect();", "-\tOS.GetControlBounds(me.getControlHandle(), bounds.getData());", "-\tint x= bounds.getX();", "-\tint y= bounds.getY();", "-\tint contentRgn= OS.NewRgn();", "-\tOS.RectRgn(contentRgn, bounds.getData());", "-\tif (updateRegion != 0)", "-\t\tOS.SectRgn(contentRgn, updateRegion, contentRgn);", "-\tOS.GetRegionBounds(contentRgn, bounds.getData());", "-\tRectangle r= bounds.toRectangle();", "-\tOS.DisposeRgn(contentRgn);\t\t", "-\tr.x-= x;", "-\tr.y-= y;", "-\t// AW", "-\t", "-\tEvent event = new Event ();", "+\t*/", "-\tevent.x = xEvent.x;  event.y = xEvent.y;", "-\tevent.width = xEvent.width;  event.height = xEvent.height;", "-\tevent.x = r.x;  event.y = r.y;", "-\tevent.width = r.width;  event.height = r.height;", "-\tGC gc = event.gc = new GC (this);", "-    /* AW", "-\tXRectangle rect = new XRectangle ();", "-\trect.x = (short) xEvent.x;  rect.y = (short) xEvent.y;", "-\trect.width = (short) xEvent.width;  rect.height = (short) xEvent.height;", "-\tOS.XSetClipRectangles (xDisplay, gc.handle, 0, 0, rect, 1, OS.Unsorted);", "-    */", "-\tgc.carbon_focus();", "-\t", "-\t// erase background", "-\tif ((state & CANVAS) != 0) {", "-\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "-\t\t\tgc.fillRectangle(r);", "+    ", "+\tGC gc= new GC (this);", "+\tMacControlEvent me= (MacControlEvent) callData;", "+\tRectangle r= gc.carbon_focus(me.getDamageRegionHandle());", "+\tif (r == null || !r.isEmpty()) {", "+\t\tEvent event = new Event ();", "+\t\tevent.gc = gc;", "+\t\tevent.x = r.x;  event.y = r.y;", "+\t\tevent.width = r.width;  event.height = r.height;", "+\t\t\t\t", "+\t\t// erase background", "+\t\tif ((state & CANVAS) != 0) {", "+\t\t\tif ((style & SWT.NO_BACKGROUND) == 0) {", "+\t\t\t\tgc.fillRectangle(r);", "+\t\t\t}", "+\t\t", "+\t\tsendEvent (SWT.Paint, event);", "+\t\tevent.gc = null;", "-\tsendEvent (SWT.Paint, event);", "+\tgc.carbon_unfocus ();", "-\tif (!gc.isDisposed ()) {", "-\t\tgc.carbon_unfocus ();", "+\tif (!gc.isDisposed ())", "-\t}", "-\tevent.gc = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9ba4c69d52b34739eb4343f33d67777", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "ff2fb9f01a196c14560d822c32e5adc6eee40368", "commitAfterChange": "e15381d72c440181a26a8b1a5c9d9efb3d5969f9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-", "-\t/*", "-\t* Feature in Motif.  When items are added or removed", "-\t* from a combo, it may request and be granted, a new", "-\t* preferred size.  This behavior is unwanted.  The fix", "-\t* is to create a parent for the list that will disallow", "-\t* geometry requests.", "-\t*/", "-\tint parentHandle = parent.handle;", "-    /* AW", "-\tint [] argList1 = {OS.XmNancestorSensitive, 1};", "-\tformHandle = OS.XmCreateForm (parentHandle, null, argList1, argList1.length / 2);", "-\tif (formHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tint comboBoxType = OS.XmDROP_DOWN_COMBO_BOX;", "-\tif ((style & SWT.SIMPLE) != 0) {", "-\t\tcomboBoxType = OS.XmCOMBO_BOX;", "-\t} else if ((style & SWT.READ_ONLY) != 0) {", "-\t\tcomboBoxType = OS.XmDROP_DOWN_LIST;", "-\t}", "-    */", "-", "-\thandle= MacUtil.createDrawingArea(parentHandle, 0, 0, 0);\t\t", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-", "-\tfPopupButton= MacUtil.newControl(handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "-\tif (fPopupButton == 0) error (SWT.ERROR_NO_HANDLES);", "-\t", "-\tint[] menuRef= new int[1];", "-\tOS.CreateNewMenu(20000, 0, menuRef);", "-\tfMenuHandle= menuRef[0];", "-\tif (fMenuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.SetControlPopupMenuHandle(fPopupButton, fMenuHandle);", "-", "-\tif ((style & SWT.READ_ONLY) == 0) {", "-\t\tint frameOptions= OS.kTXNDontDrawCaretWhenInactiveMask;", "-\t\tframeOptions |= OS.kTXNSingleLineOnlyMask;", "-\t\t", "-\t\tint wHandle= OS.GetControlOwner(handle);", "-\t\tMacRect bounds= new MacRect();", "-\t\tOS.GetControlBounds(handle, bounds.getData());", "-\t\tint frameType= OS.kTXNTextEditStyleFrameType;", "-\t\tint iFileType= OS.kTXNUnicodeTextFile;", "-\t\tint iPermanentEncoding= OS.kTXNSystemDefaultEncoding;", "-\t\tint[] tnxObject= new int[1];", "-\t\tint[] frameID= new int[1];", "-\t\t\t\t", "-\t\tint status= OS.TXNNewObject(0, wHandle, bounds.getData(), frameOptions, frameType, iFileType, iPermanentEncoding,", "-\t\t\t\t\t\t\ttnxObject, frameID, 0);", "-\t\tif (status == 0) {\t\t ", "-\t\t\tfTX= tnxObject[0];", "-\t\t\tfFrameID= frameID[0];", "-\t\t\tOS.TXNActivate(fTX, fFrameID, OS.kScrollBarsSyncWithFocus);", "-\t\t}", "+\tif ((style & SWT.READ_ONLY) != 0) {", "+\t\thandle= MacUtil.newControl(parent.handle, (short)0, (short)-12345, (short)-1, (short)(OS.kControlPopupButtonProc+1));", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tint[] menuRef= new int[1];", "+\t\tOS.CreateNewMenu(20000, 0, menuRef);", "+\t\tfMenuHandle= menuRef[0];", "+\t\tif (fMenuHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.SetControlPopupMenuHandle(handle, fMenuHandle);", "+\t} else {", "+\t    int[] outComboBox= new int[1];", "+\t\tOS.HIComboBoxCreate(outComboBox, OS.kHIComboBoxAutoSizeListAttribute);", "+\t\thandle= outComboBox[0];", "+\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tMacUtil.addControl(handle, parent.handle);", "+\t\tOS.HIViewSetVisible(handle, true);"]}], "num": 36051}