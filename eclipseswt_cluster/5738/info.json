{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e392eae306b09c16144007ac9422829", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f103fdfa8f42c2c2764a431b05ad7129", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "dd11d932221c358c44e83cdb9ee36bc7594323b4", "commitAfterChange": "8b896c8f1d8f2340e6910ed5d99ab3f39a66e8c2", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \t \tprivate int handleTooltipWindowCallback(int nextHandler, int eRefHandle, int whichWindow)", "signatureAfterChange": " \t \tprivate int handleTooltipWindowCallback(int nextHandler, int eRefHandle, int whichWindow)", "diff": ["-\t\tif (OS.GetEventClass(eRefHandle) != OS.kEventClassWindow", "-\t\t\t\t\t\t|| OS.GetEventKind(eRefHandle) != OS.kEventWindowDrawContent)", "-\t\t\treturn OS.eventNotHandledErr;", "-\t\tprocessPaintToolTip(whichWindow);", "-\t\treturn OS.noErr;", "+\t\t", "+\t\tint eventClass= OS.GetEventClass(eRefHandle);", "+\t\tint eventKind= OS.GetEventKind(eRefHandle);", "+", "+\t\tif (eventClass == OS.kEventClassWindow && eventKind == OS.kEventWindowDrawContent) {", "+\t\t\tRect bounds= new Rect();", "+\t\t\tOS.GetWindowBounds(whichWindow, (short)OS.kWindowContentRgn, bounds);", "+\t\t\tint width= bounds.right - bounds.left;", "+\t\t\tint height= bounds.bottom - bounds.top;", "+\t\t\tOS.SetRect(bounds, (short)0, (short)0, (short)width, (short)height);", "+\t\t\tMacUtil.RGBBackColor(COLOR_INFO_BACKGROUND.handle);", "+\t\t\tMacUtil.RGBForeColor(COLOR_INFO_FOREGROUND.handle);", "+\t\t\tOS.EraseRect(bounds);", "+\t\t\tif (fToolTipText != null) {", "+\t\t\t\tOS.SetRect(bounds, (short)TOOLTIP_MARGIN, (short)TOOLTIP_MARGIN, (short)(width-TOOLTIP_MARGIN), (short)(height-TOOLTIP_MARGIN));", "+\t\t\t\tint sHandle= OS.CFStringCreateWithCharacters(fToolTipText);", "+\t\t\t\tOS.DrawThemeTextBox(sHandle, fHoverThemeFont, OS.kThemeStateActive, true, bounds, (short)0, 0);", "+\t\t\t\tOS.CFRelease(sHandle);", "+\t\t\t}", "+\t\t\treturn OS.noErr;", "+\t\t}", "+\t\treturn OS.eventNotHandledErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da74152533b304c8359af96269b9312b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "b4e13940b738ca380f99e9bdd9e55dadba13486b", "commitAfterChange": "87d79b28b78da8b56644c5ffdf26400d97e4e059", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 29, "signatureBeforeChange": " boolean isMyHandle(int h)", "signatureAfterChange": "  boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-int parentingHandle() {\treturn fixedHandle; }", "-boolean isMyHandle(int h) {", "-\tif (h == shellHandle)    return true;", "-\tif (h == vboxHandle)     return true;", "-\treturn super.isMyHandle(h);", "+boolean setBounds (int x, int y, int width, int height, boolean move, boolean resize) {", "+\tif (move) {", "+\t\tint [] x_pos = new int [1], y_pos = new int [1];", "+\t\tOS.gtk_window_get_position (shellHandle, x_pos, y_pos);", "+\t\toldX = x_pos [0];  oldY = y_pos [0];", "+\t\tOS.gtk_window_move (shellHandle, x, y);", "+\t}", "+\tif (resize) {", "+\t\tint [] w = new int [1], h = new int [1];", "+\t\tOS.gtk_window_get_size (shellHandle, w, h);", "+\t\toldWidth = w [0];  oldHeight = h [0];", "+\t\twidth -= trimWidth ();  height -= trimHeight ();", "+\t\tOS.gtk_widget_set_size_request (vboxHandle, width, height);", "+\t\tOS.gtk_window_resize (shellHandle, width, height);", "+\t\tDisplay display = getDisplay ();", "+\t\tboolean warnings = display.getWarnings ();", "+\t\tdisplay.setWarnings (false);", "+\t\tOS.gtk_container_resize_children (shellHandle);", "+\t\tdisplay.setWarnings (warnings);", "+\t}", "+\treturn move || resize;", "+}"]}], "num": 5738}