{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "234c1d2d190705fee1dda7c22b51dc2a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9895969715cf6011919ab2a53c4767f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "d4ce2fe3631bc060a94000536e7454e9ee602a3d", "commitAfterChange": "be954920b3bf51c2767d57c5bc9db3ba96994f28", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "signatureAfterChange": "  static int applicationProc(int id, int sel, int arg0, int arg1)", "diff": ["-\tif (display != null) {", "-\t\tif (sel == OS.sel_application_openFile_) {", "-\t\t\tString file = new NSString(arg1).getString();", "+", "+\tif (display == null && id != applicationDelegate.id) {", "+\t\tobjc_super super_struct = new objc_super ();", "+\t\tsuper_struct.receiver = id;", "+\t\tsuper_struct.super_class = OS.objc_msgSend (id, OS.sel_superclass);", "+\t\treturn OS.objc_msgSendSuper (super_struct, sel, arg0, arg1);", "+\t}", "+", "+\t// Forward to the AWT, if necessary.", "+\tif (currAppDelegate != null) {", "+\t\tif (currAppDelegate.respondsToSelector(sel)) OS.objc_msgSend(currAppDelegate.id, sel, arg0, arg1);", "+\t} ", "+", "+\tif (sel == OS.sel_application_openFile_) {", "+\t\tString file = new NSString(arg1).getString();", "+\t\tEvent event = new Event();", "+\t\tevent.text = file;", "+\t\tdisplay.sendEvent(SWT.OpenDocument, event);", "+\t\treturn 1;", "+\t} else if (sel == OS.sel_application_openFiles_) {", "+\t\tNSArray files = new NSArray(arg1);", "+\t\tint /*long*/ count = files.count();", "+\t\tfor (int i=0; i<count; i++) {", "+\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "-\t\t\treturn 1;", "-\t\t} else if (sel == OS.sel_application_openFiles_) {", "-\t\t\tNSArray files = new NSArray(arg1);", "-\t\t\tint /*long*/ count = files.count();", "-\t\t\tfor (int i=0; i<count; i++) {", "-\t\t\t\tString file = new NSString(files.objectAtIndex(i)).getString();", "-\t\t\t\tEvent event = new Event();", "-\t\t\t\tevent.text = file;", "-\t\t\t\tdisplay.sendEvent(SWT.OpenDocument, event);", "-\t\t\t}", "-\t\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "-\t\t} ", "-\t\telse if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "-\t\t\treturn 1;", "-\t\telse if (sel == OS.sel_applicationShouldTerminate_) {", "-\t\t\tif (!display.disposing) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tdisplay.sendEvent (SWT.Close, event);", "-\t\t\t\tif (event.doit) {", "-\t\t\t\t\tdisplay.dispose();", "-\t\t\t\t\treturn OS.NSTerminateNow;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn OS.NSTerminateCancel;", "-\t\t}", "+\t\tnew NSApplication(arg0).replyToOpenOrPrint(OS.NSApplicationDelegateReplySuccess);", "+\t}  else if (sel == OS.sel_applicationShouldHandleReopen_hasVisibleWindows_) {", "+\t\treturn 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c50e7e0eca99532c2cb8dbdce5bba5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ScrollBar.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": "  void createHandle ()", "diff": ["-void createHandle (int index) {", "-\tstate |= HANDLE;", "-\thandle= 0;", "-\tif ((style & SWT.H_SCROLL) != 0) {", "-\t\thandle= parent.hScrollBar;", "-\t} else if ((style & SWT.V_SCROLL) != 0) {", "-\t\thandle= parent.vScrollBar;", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+", "+void createHandle () {", "+\tDisplay display = getDisplay ();", "+\tint actionProc = display.actionProc;", "+\tint [] outControl = new int [1];", "+\tint window = OS.GetControlOwner (parent.scrolledHandle);", "+\tOS.CreateScrollBarControl (window, null, 0, 0, 90, 10, true, actionProc, outControl);", "+\tif (outControl [0] == 0) error (SWT.ERROR_NO_HANDLES);", "+\thandle = outControl [0];", "+}"]}], "num": 19632}