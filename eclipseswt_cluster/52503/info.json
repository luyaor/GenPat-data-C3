{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46c9dbe7025e6519ce204b4733b1ebc7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c328fd2c7a6bbfaee5a00fcdbf9ef74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "80413969c76bb81e4c9325125446456624eddbae", "commitAfterChange": "05b465a405dddfea72f05c981497448f62e6d19c", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void setTransform(Transform transform)", "signatureAfterChange": " public void setTransform(Transform transform)", "diff": ["-\t}", "-\t//TODO - round off problems", "-\tint /*long*/ clipRgn = data.clipRgn;", "-\tif (clipRgn != 0) {", "-\t\tdouble[] matrix = new double[]{1, 0, 0, 1, 0, 0};", "-\t\tCairo.cairo_get_matrix(cairo, matrix);", "-\t\tCairo.cairo_matrix_invert(matrix);", "-\t\tint /*long*/ newRgn = OS.gdk_region_new();", "-\t\tint[] nRects = new int[1];", "-\t\tint /*long*/[] rects = new int /*long*/[1];", "-\t\tOS.gdk_region_get_rectangles(clipRgn, rects, nRects);", "-\t\tGdkRectangle rect = new GdkRectangle();", "-\t\tint[] pointArray = new int[8];", "-\t\tdouble[] x = new double[1], y = new double[1];", "-\t\tfor (int i=0; i<nRects[0]; i++) {", "-\t\t\tOS.memmove(rect, rects[0] + (i * GdkRectangle.sizeof), GdkRectangle.sizeof);", "-\t\t\tx[0] = rect.x;", "-\t\t\ty[0] = rect.y;", "-\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\t\tpointArray[0] = (int)Math.round(x[0]);", "-\t\t\tpointArray[1] = (int)Math.round(y[0]);", "-\t\t\tx[0] = rect.x + rect.width;", "-\t\t\ty[0] = rect.y;", "-\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\t\tpointArray[2] = (int)Math.round(x[0]);", "-\t\t\tpointArray[3] = (int)Math.round(y[0]);", "-\t\t\tx[0] = rect.x + rect.width;", "-\t\t\ty[0] = rect.y + rect.height;", "-\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\t\tpointArray[4] = (int)Math.round(x[0]);", "-\t\t\tpointArray[5] = (int)Math.round(y[0]);", "-\t\t\tx[0] = rect.x;", "-\t\t\ty[0] = rect.y + rect.height;", "-\t\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\t\tpointArray[6] = (int)Math.round(x[0]);", "-\t\t\tpointArray[7] = (int)Math.round(y[0]);", "-\t\t\tint /*long*/ polyRgn = OS.gdk_region_polygon(pointArray, pointArray.length / 2, OS.GDK_EVEN_ODD_RULE);", "-\t\t\tOS.gdk_region_union(newRgn, polyRgn);", "-\t\t\tOS.gdk_region_destroy(polyRgn);", "-\t\t}", "-\t\tif (rects[0] != 0) OS.g_free(rects[0]);", "-\t\tOS.gdk_region_destroy(clipRgn);", "-\t\tdata.clipRgn = newRgn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08cba7984858bfeb9214c1d88bac262d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "05b465a405dddfea72f05c981497448f62e6d19c", "commitAfterChange": "424cc37cc779575a1b43d2c64f6530c100e3a7e7", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void setTransform(Transform transform)", "signatureAfterChange": " public void setTransform(Transform transform)", "diff": ["-\t}", "-\t//TODO - round off problems", "-\tint /*long*/ clipRgn = data.clipRgn;", "-\tif (clipRgn != 0) {", "-\t\tdouble[] matrix = new double[]{1, 0, 0, 1, 0, 0};", "-\t\tCairo.cairo_get_matrix(cairo, matrix);", "-\t\tCairo.cairo_matrix_invert(matrix);", "-\t\tint /*long*/ newRgn = OS.XCreateRegion();", "-\t\t//TODO - get rectangles from region instead of clip box", "-\t\tXRectangle rect = new XRectangle();", "-\t\tOS.XClipBox(clipRgn, rect);", "-\t\tshort[] pointArray = new short[8];", "-\t\tdouble[] x = new double[1], y = new double[1];", "-\t\tx[0] = rect.x;", "-\t\ty[0] = rect.y;", "-\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\tpointArray[0] = (short)Math.round(x[0]);", "-\t\tpointArray[1] = (short)Math.round(y[0]);", "-\t\tx[0] = rect.x + rect.width;", "-\t\ty[0] = rect.y;", "-\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\tpointArray[2] = (short)Math.round(x[0]);", "-\t\tpointArray[3] = (short)Math.round(y[0]);", "-\t\tx[0] = rect.x + rect.width;", "-\t\ty[0] = rect.y + rect.height;", "-\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\tpointArray[4] = (short)Math.round(x[0]);", "-\t\tpointArray[5] = (short)Math.round(y[0]);", "-\t\tx[0] = rect.x;", "-\t\ty[0] = rect.y + rect.height;", "-\t\tCairo.cairo_matrix_transform_point(matrix, x, y);", "-\t\tpointArray[6] = (short)Math.round(x[0]);", "-\t\tpointArray[7] = (short)Math.round(y[0]);", "-\t\tint /*long*/ polyRgn = OS.XPolygonRegion(pointArray, pointArray.length / 2, OS.EvenOddRule);", "-\t\tOS.XUnionRegion(handle, polyRgn, handle);", "-\t\tOS.XDestroyRegion(polyRgn);", "-\t\tOS.XDestroyRegion(clipRgn);", "-\t\tdata.clipRgn = newRgn;"]}], "num": 52503}