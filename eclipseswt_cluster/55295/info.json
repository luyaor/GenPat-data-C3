{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f1e0d2044a4b6b67309176e95581bbd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d529bc3cf18cfb40d38baabc5f7cbc5", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  void createText(boolean dropDown)", "signatureAfterChange": "  void createText(boolean dropDown)", "diff": ["+\ttext = new Text(this, SWT.SINGLE);", "+\t/* disable the native drag and drop for the date/time text field */", "+\tOS.gtk_drag_dest_unset(text.handle);", "-\tdateTimeString = getFormattedString(style);", "-\tOS.gtk_widget_realize(handle);", "-\tif ((style & SWT.DATE) != 0 && dropDown) { /* SWT.DROP_DOWN */", "-\t\taddListener(SWT.Resize, new Listener() {", "-\t\t\tpublic void handleEvent(Event event) {", "-\t\t\t\tonResize(event);", "+\ttext.setText(getFormattedString(style));", "+\t", "+\taddListener(SWT.Resize, new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tonResize(event);", "+\t\t}", "+\t});", "+\tListener listener = new Listener() {", "+\t\tpublic void handleEvent(Event event) {", "+\t\t\tswitch(event.type) {", "+\t\t\t\tcase SWT.KeyDown: onTextKeyDown(event); break;", "+\t\t\t\tcase SWT.FocusIn: onTextFocusIn(event); break;", "+\t\t\t\tcase SWT.FocusOut: onTextFocusOut(event); break;", "+\t\t\t\tcase SWT.MouseDown: // Fall through", "+\t\t\t\tcase SWT.MouseUp: onTextMouseClick(event); break;", "+\t\t\t\tcase SWT.MenuDetect: notifyListeners(SWT.MenuDetect, event); break;", "+\t\t\t\tcase SWT.Verify: onTextVerify(event); break;", "-\t\t});", "+\t\t}", "+\t};", "+\tint [] listeners = new int [] {SWT.KeyDown, SWT.FocusIn, SWT.FocusOut, SWT.MouseDown, SWT.MouseUp, SWT.MenuDetect, SWT.Verify};", "+\tfor (int i = 0; i < listeners.length; i++) {", "+\t\ttext.addListener(listeners [i], listener);", "+\t}", "+\t", "+\tif ((style & SWT.DATE) != 0 && dropDown) {", "-\t} ", "-\tif (dateTimeString != null) {", "-\t\tsetText(dateTimeString);", "+\t} else {", "+\t\tup = new Button(this, SWT.ARROW | SWT.UP);", "+\t\tgtk_widget_set_can_focus (up.handle, false);", "+\t\t//up.setToolTipText(SWT.getMessage (\"SWT_Up\")); //$NON-NLS-1$", "+\t\tdown = new Button(this, SWT.ARROW | SWT.DOWN);", "+\t\tgtk_widget_set_can_focus (down.handle, false);", "+\t\t//down.setToolTipText(SWT.getMessage (\"SWT_Down\")); //$NON-NLS-1$", "+\t\tup.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(+1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});", "+\t\tdown.addListener(SWT.Selection, new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tincrementField(-1);", "+\t\t\t\ttext.setFocus();", "+\t\t\t}", "+\t\t});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "167eab2e01f62f1716ff09c29cc85479", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "beca6310b5a08f08f4d4efeb88b832d208de8eb6", "commitAfterChange": "d568380273663f2b870a5b1ce8bc091ac7243403", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public DateTime (Composite parent, int style)", "signatureAfterChange": "  public DateTime (Composite parent, int style)", "diff": ["-\tsuper (parent, checkStyle (style));", "+\tsuper (parent, checkStyle (style) | ((style & SWT.CALENDAR) != 0 ? SWT.NO_REDRAW_RESIZE : 0));", "+\tif ((this.style & SWT.CALENDAR) != 0) {", "+\t\tcalendar = Calendar.getInstance();", "+\t\tformatSymbols = new DateFormatSymbols();", "+", "+\t\tListener listener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\tswitch(event.type) {", "+\t\t\t\t\tcase SWT.Paint:\t\thandlePaint(event); break;", "+\t\t\t\t\tcase SWT.Resize:\thandleResize(event); break;", "+\t\t\t\t\tcase SWT.MouseDown:\thandleMouseDown(event); break;", "+\t\t\t\t\tcase SWT.KeyDown:\thandleKeyDown(event); break;", "+\t\t\t\t\tcase SWT.Traverse:\thandleTraverse(event); break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t};", "+\t\taddListener(SWT.Paint, listener);", "+\t\taddListener(SWT.Resize, listener);", "+\t\taddListener(SWT.MouseDown, listener);", "+\t\taddListener(SWT.KeyDown, listener);", "+\t\taddListener(SWT.Traverse, listener);", "+\t\tyearDown = new Button(this, SWT.ARROW | SWT.LEFT);", "+\t\t//yearDown.setToolTipText(SWT.getMessage (\"SWT_Last_Year\")); //$NON-NLS-1$", "+\t\tmonthDown = new Button(this, SWT.ARROW | SWT.LEFT);", "+\t\t//monthDown.setToolTipText(SWT.getMessage (\"SWT_Last_Month\")); //$NON-NLS-1$", "+\t\tmonthUp = new Button(this, SWT.ARROW | SWT.RIGHT);", "+\t\t//monthUp.setToolTipText(SWT.getMessage (\"SWT_Next_Month\")); //$NON-NLS-1$", "+\t\tyearUp = new Button(this, SWT.ARROW | SWT.RIGHT);", "+\t\t//yearUp.setToolTipText(SWT.getMessage (\"SWT_Next_Year\")); //$NON-NLS-1$", "+\t\tlistener = new Listener() {", "+\t\t\tpublic void handleEvent(Event event) {", "+\t\t\t\thandleSelection(event);", "+\t\t\t}", "+\t\t};", "+\t\tyearDown.addListener(SWT.Selection, listener);", "+\t\tmonthDown.addListener(SWT.Selection, listener);", "+\t\tmonthUp.addListener(SWT.Selection, listener);", "+\t\tyearUp.addListener(SWT.Selection, listener);", "+\t", "+\t}"]}], "num": 55295}