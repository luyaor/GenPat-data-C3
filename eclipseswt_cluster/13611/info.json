{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04e9f494b5523df1ef860856ab36901d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3413560812076dbd9c52047a62a1d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ff0cef7612e84457c6befd63ba1f11f2bb3a809e", "commitAfterChange": "0870332ae1d4f046f57059d8eb6710dfe338d2bd", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void setText (int index, String string)", "signatureAfterChange": " public void setText (int index, String string)", "diff": ["-\tif (!(0 <= index && index <= parent.columnCount )) return;", "+\tint count = Math.max (1, parent.getColumnCount ());", "+\tif (0 > index || index > count - 1) return;", "-\tint /*long*/ column = OS.gtk_tree_view_get_column (parentHandle, index);", "-\tif (column == 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2f8ea461f0a05362628f6cfad43848", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ec7edbaede68f4fd7608786e759e23fd6dbe2200", "commitAfterChange": "b206c3d5f3a448a2b6dfbc2c13ed7e271cef1597", "methodNumberBeforeChange": 201, "methodNumberAfterChange": 207, "signatureBeforeChange": "\r void handlePaint(Event event)", "signatureAfterChange": "\r void handlePaint(Event event)", "diff": ["-\tint startLine = (event.y - topMargin + verticalScrollOffset) / lineHeight;\r", "+\tint startLine = Math.max(0, (event.y - topMargin + verticalScrollOffset) / lineHeight);\r", "-\tint paintY = 0;\r", "+\tint paintY = topMargin;\r", "-\tif (clientArea.width > (leftMargin + rightMargin)) {\r", "-\t\tlineBuffer = new Image(getDisplay(), clientArea.width - leftMargin - rightMargin, renderHeight);\r", "-\t\tlineGC = new GC(lineBuffer);\t\r", "-\t\tlineGC.setFont(font);\r", "-\t\tlineGC.setForeground(foreground);\r", "-\t\tlineGC.setBackground(background);\r", "-\t\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "-\t\t\tString line = content.getLine(i);\r", "-\t\t\tdrawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "-\t\t}\r", "-\t\tif (paintY < renderHeight) {\r", "-\t\t\tlineGC.setBackground(background);\r", "-\t\t\tlineGC.setForeground(background);\r", "-\t\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "-\t\t}\r", "-\t\tevent.gc.drawImage(lineBuffer, leftMargin, topMargin + startY);\r", "-\t\tlineGC.dispose();\r", "-\t\tlineBuffer.dispose();\r", "+\tlineBuffer = new Image(getDisplay(), clientArea.width, renderHeight);\r", "+\tlineGC = new GC(lineBuffer);\t\r", "+\tlineGC.setFont(font);\r", "+\tlineGC.setForeground(foreground);\r", "+\tlineGC.setBackground(background);\r", "+\tfor (int i = startLine; paintY < renderHeight && i < lineCount; i++, paintY += lineHeight) {\r", "+\t\tString line = content.getLine(i);\r", "+\t\trenderer.drawLine(line, i, paintY, lineGC, background, foreground, fontData, true);\r", "+\tif (paintY < renderHeight) {\r", "+\t\tlineGC.setBackground(background);\r", "+\t\tlineGC.setForeground(background);\r", "+\t\tlineGC.fillRectangle(0, paintY, clientArea.width, renderHeight - paintY);\r", "+\t}\r", "+\tevent.gc.drawImage(lineBuffer, 0, startY);\r", "+\tlineGC.dispose();\r", "+\tlineBuffer.dispose();\r"]}], "num": 13611}