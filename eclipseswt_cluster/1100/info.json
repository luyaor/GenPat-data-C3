{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ac67e1b73d18803a7063b017e29c700", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b79540d2ee0db15cb88893fc279b97d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/addressbook/AddressBook.java", "commitBeforeChange": "acddacf7da7550accfa2b2e69a28b70a3eb61e9c", "commitAfterChange": "615a9e44c1b1ef15ac246dcd713945b6c0812293", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r private String[][] mergeSort(String[][] items, int column)", "signatureAfterChange": "\r \tpublic RowComparator(int col)", "diff": ["- */\r", "-private String[][] mergeSort(String[][] items, int column) {\r", "-\tint numItems = items.length;\r", "-\r", "-\tif(numItems <= 1)\treturn items;\r", "-\t\r", "-\tint split = numItems / 2;\r", "-\tString[][] firstHalf = new String[split][items[0].length];\r", "-\tString[][] secondHalf = new String[numItems - split][items[0].length];\r", "-\tfor(int i = 0; i < firstHalf.length; i++) {\r", "-\t\tfirstHalf[i] = items[i];\r", "-\t}\r", "-\tfor(int i = 0; i < secondHalf.length; i++) {\r", "-\t\tsecondHalf[i] = items[split + i];\r", "-\t}\r", "-\t\r", "-\tString[][] firstHalfSorted = mergeSort(firstHalf, column);\r", "-\tString[][] secondHalfSorted = mergeSort(secondHalf, column);\r", "-\tString[][] sortedItems = merge(firstHalfSorted, secondHalfSorted, column);\r", "-\t\t\r", "-\treturn sortedItems;\r", "-}\r", "+\t */\r", "+\tpublic RowComparator(int col) {\r", "+\t\tcolumn = col;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893935eb2d7acb8eab3b88435c1198cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "e7318a270105763efbdeaf20581d0994240aea71", "commitAfterChange": "fa3600a9c743a563ec19d20d35a39460744fbc95", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_PAINT (int wParam, int lParam)", "diff": ["-\t\t\tdrawBackground (gc.handle, rect);", "-\t\t\tint selStart = selection.x;", "-\t\t\tint selEnd = selection.y;", "-\t\t\tif (selStart > selEnd) {", "-\t\t\t\tselStart = selection.y;", "-\t\t\t\tselEnd = selection.x;", "-\t\t\t}", "-\t\t\t// temporary code to disable text selection", "-\t\t\tselStart = selEnd = -1;", "-\t\t\tlayout.draw (gc, 0, 0, selStart, selEnd, null, null);", "-\t\t\tif (hasFocus () && focusIndex != -1) {", "-\t\t\t\tRectangle [] rects = getRectangles (focusIndex);", "-\t\t\t\tfor (int i = 0; i < rects.length; i++) {", "-\t\t\t\t\tRectangle rectangle = rects [i];", "-\t\t\t\t\tgc.drawFocus (rectangle.x, rectangle.y, rectangle.width, rectangle.height);\t\t\t\t\t", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tonPaint (gc, rect);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b1e0dc5fa27829571a651db9b267f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "6da599920e67795a58ab123a3644c1109f41427e", "commitAfterChange": "8c48c24c8eb08499bf533a7c74e9f77d5f1f9509", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public Browser(Composite parent, int style)", "signatureAfterChange": " public Browser(Composite parent, int style)", "diff": ["-\t\t\t\t\tVariant cancel = event.arguments[1];", "-\t\t\t\t\tint pCancel = cancel.getByRef();", "-\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{doit ? COM.VARIANT_FALSE : COM.VARIANT_TRUE}, 2);", "-\t\t\t\tcase WindowClosing : {", "-\t\t\t\t\tCloseWindowEvent newEvent = new CloseWindowEvent(Browser.this);", "-\t\t\t\t\tnewEvent.data = getDisplay();", "-\t\t\t\t\tnewEvent.widget = Browser.this;", "-\t\t\t\t\tfor (int i = 0; i < closeWindowListeners.length; i++)", "-\t\t\t\t\t\tcloseWindowListeners[i].close(newEvent);", "-\t\t\t\t\tVariant cancel = event.arguments[1];", "-\t\t\t\t\tint pCancel = cancel.getByRef();", "-\t\t\t\t\tCOM.MoveMemory(pCancel, new short[]{COM.VARIANT_TRUE}, 2);", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\tsite.addEventListener(WindowClosing, listener);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b56ad2ab079b52e6cc761b234ca7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/graphics/Cursor.java", "commitBeforeChange": "965aecf4cb4bb3fe4dee75052118eb5b4063e4f5", "commitAfterChange": "3eef16495f54d2582a2f00d444f7f01291b26d62", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "signatureAfterChange": " public Cursor(Device device, ImageData source, int hotspotX, int hotspotY)", "diff": ["-\t/* Modify the source image to contain black wherever the mask is 0 */", "-\tint[] sourcePixels = new int[source.width];", "-\tint[] maskPixels = new int[mask.width];", "-\tfor (int y = 0; y < source.height; y++) {", "-\t\tsource.getPixels(0, y, source.width, sourcePixels, 0);", "-\t\tmask.getPixels(0, y, mask.width, maskPixels, 0);", "-\t\tfor (int i = 0; i < sourcePixels.length; i++) {", "-\t\t\tif (maskPixels[i] == 0) sourcePixels[i] = 0;", "-\t\t}", "-\t\tsource.setPixels(0, y, source.width, sourcePixels, 0);", "-\t}", "-\tboolean hasTransparencyPixel = source.getTransparencyType() == SWT.TRANSPARENCY_PIXEL;", "-\tif (hasTransparencyPixel) {", "-\t\tsource.maskData = mask.data;", "-\t\tsource.maskPad = mask.scanlinePad;", "-\t}", "-\tint[] result = Image.init(device, null, source);", "+\tint[] result = Image.init(device, null, source, mask);", "-\tif (hasTransparencyPixel) {", "-\t\tsource.maskData = null;", "-\t\tsource.maskPad = -1;", "-\t}"]}], "num": 1100}