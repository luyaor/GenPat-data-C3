{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7e162cee47ca0239d949fd5d32d23a4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef88155c9c6efed5f676e223d65e0f23", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/gtk/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "8fa7f7faacb842324a4b31775936f9e83dd5a81b", "commitAfterChange": "9ab14bbc386609b0008cce66eda40fcd56285bea", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  boolean handleEvent (Object[] arguments)", "signatureAfterChange": "  boolean handleEvent (Object[] arguments)", "diff": ["-\tif (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "-\t}", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//if (type.equals (DOMEVENT_MOUSEOVER) || type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tif (((Boolean)arguments[9]).booleanValue ()) return true;", "+\t//}", "-\t} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "-\t\tmouseEvent.type = SWT.MouseEnter;", "-\t} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "-\t\tmouseEvent.type = SWT.MouseExit;", "+", "+\t/*", "+\t* The following is intentionally commented because MouseOver and MouseOut events", "+\t* are not being hooked until https://bugs.webkit.org/show_bug.cgi?id=35246 is fixed.", "+\t*/ ", "+\t//} else if (type.equals (DOMEVENT_MOUSEOVER)) {", "+\t//\tmouseEvent.type = SWT.MouseEnter;", "+\t//} else if (type.equals (DOMEVENT_MOUSEOUT)) {", "+\t//\tmouseEvent.type = SWT.MouseExit;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc19ab7a646cb38628ab10de023df2e3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e5504ca1a8a80d4ea240a80f80e667e7b05edb6f", "commitAfterChange": "af4cb5d1e0004d3c1f36ed8362af23f7cd388dfd", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " void headerOnMouseDown (Event event)", "signatureAfterChange": " void headerOnMouseDown (Event event)", "diff": ["+}", "+\tint x = -horizontalOffset;", "-\t\tint x = column.getX () + column.width;", "-\t\t/* if close to a column separator line then begin column resize */", "-\t\tif (Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {", "-\t\t\tif (!column.resizable) return;", "+\t\tx += column.width;", "+\t\t/* if close to a resizable column separator line then begin column resize */", "+\t\tif (column.resizable && Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {", "-\t\t/* if within column but not near separator line then fire column Selection */", "+\t\t/* if within column but not near resizable separator line then fire column Selection */"]}], "num": 52156}