{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "732b70fccbe8f522787a4587e6d08a28", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8320ec6d1223c89073d8893a16e5d214", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d2b2731da124108eb5bccfe6363ec342d70dfbc1", "commitAfterChange": "6fa64c0ca137224ae52d6423153f9854a4e2c074", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 54, "signatureBeforeChange": "  void releaseWidget ()", "signatureAfterChange": " \t void releaseWidget ()", "diff": ["-void releaseWidget () {", "-\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tint columnCount = OS.SendMessage (hwndHeader, OS.HDM_GETITEMCOUNT, 0, 0);", "-\tif (columnCount == 1 && columns [0] == null) columnCount = 0;", "-\tint itemCount = OS.SendMessage (handle, OS.LVM_GETITEMCOUNT, 0, 0);", "-\t/*", "-\t* Feature in Windows 98.  When there are a large number", "-\t* of columns and items in a table (>1000) where each", "-\t* of the subitems in the table has a string, it is much", "-\t* faster to delete each item with LVM_DELETEITEM rather", "-\t* than using LVM_DELETEALLITEMS.  The fix is to detect", "-\t* this case and delete the items, one by one.  The fact", "-\t* that the fix is only necessary on Windows 98 was", "-\t* confirmed using version 5.81 of COMCTL32.DLL on both", "-\t* Windows 98 and NT.", "-\t*", "-\t* NOTE: LVM_DELETEALLITEMS is also sent by the table", "-\t* when the table is destroyed.", "-\t*/\t", "-\tif (OS.IsWin95 && columnCount > 1) {", "-\t\t/* Turn off redraw and leave it off */", "-\t\tOS.SendMessage (handle, OS.WM_SETREDRAW, 0, 0);", "-\t\tfor (int i=itemCount-1; i>=0; --i) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tignoreSelect = ignoreShrink = true;", "-\t\t\tOS.SendMessage (handle, OS.LVM_DELETEITEM, i, 0);", "-\t\t\tignoreSelect = ignoreShrink = false;", "-\t\t\tif (item != null && !item.isDisposed ()) item.releaseResources ();", "-\t} else {\t", "-\t\tfor (int i=0; i<itemCount; i++) {", "-\t\t\tTableItem item = items [i];", "-\t\t\tif (item != null && !item.isDisposed ()) item.releaseResources ();", "-\t\t}", "+\t", "+void releaseWidget () {", "+\tsuper.releaseWidget ();", "-\titems = null;", "-\tfor (int i=0; i<columnCount; i++) {", "-\t\tTableColumn column = columns [i];", "-\t\tif (!column.isDisposed ()) column.releaseResources ();", "-\t}", "-\tcolumns = null;", "+\t\tint hwndHeader = OS.SendMessage (handle, OS.LVM_GETHEADER, 0, 0);", "-\tsuper.releaseWidget ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e390575c0cd6289d525c233e6e6cb1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "4edc576de20a88abac088ae701d29ce3e54ede4f", "commitAfterChange": "c2ec875b36ecf39df432358c14d183b7d7f45fe0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public ImageData getImageData ()", "signatureAfterChange": " public ImageData getImageData ()", "diff": ["-\tint[] iconRef = new int[1];", "-\tOS.GetIconRefFromFileInfo(fsRef, 0, null, 0, 0, 0, iconRef, null);", "-\tint[] family = new int[1];", "-\tint rc = OS.IconRefToIconFamily(iconRef[0], OS.kSelectorAlLAvailableData, family);", "-\tOS.ReleaseIconRef(iconRef[0]);", "-\tif (rc != OS.noErr) return null;", "-//\tImageData result = createImageFromFamily(family[0], OS.kLarge32BitData, OS.kLarge8BitMask, 32, 32);", "-\tImageData result = createImageFromFamily(family[0], OS.kSmall32BitData, OS.kSmall8BitMask, 16, 16);", "-\tOS.DisposeHandle(family[0]);", "-\tif (result == null) {", "-\t\tRGB[] rgbs = new RGB[] {", "-\t\t\tnew RGB(0xff, 0xff, 0xff), ", "-\t\t\tnew RGB(0x5f, 0x5f, 0x5f),", "-\t\t\tnew RGB(0x80, 0x80, 0x80),", "-\t\t\tnew RGB(0xC0, 0xC0, 0xC0),", "-\t\t\tnew RGB(0xDF, 0xDF, 0xBF),", "-\t\t\tnew RGB(0xFF, 0xDF, 0x9F),", "-\t\t\tnew RGB(0x00, 0x00, 0x00),", "-\t\t};  ", "-\t\tresult = new ImageData(16, 16, 4, new PaletteData(rgbs)\t);", "-\t\tresult.transparentPixel = 6; // use black for transparency", "-\t\tString[] p= {", "-\t\t\t\"CCCCCCCCGGG\",", "-\t\t\t\"CFAAAAACBGG\",", "-\t\t\t\"CAAAAAACFBG\",", "-\t\t\t\"CAAAAAACBBB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CAAAAAAAAEB\",", "-\t\t\t\"CDDDDDDDDDB\",", "-\t\t\t\"CBBBBBBBBBB\",", "-\t\t};", "-\t\tfor (int y= 0; y < p.length; y++) {", "-\t\t\tfor (int x= 0; x < 11; x++) {", "-\t\t\t\tresult.setPixel(x+3, y+1, p[y].charAt(x)-'A');", "-\t\t\t}", "-\t\t}", "-\t}", "-\treturn result;", "+//\tint[] iconRef = new int[1];", "+//\tOS.GetIconRefFromFileInfo(fsRef, 0, null, 0, 0, 0, iconRef, null);", "+//\tint[] family = new int[1];", "+//\tint rc = OS.IconRefToIconFamily(iconRef[0], OS.kSelectorAlLAvailableData, family);", "+//\tOS.ReleaseIconRef(iconRef[0]);", "+//\tif (rc != OS.noErr) return null;", "+////\tImageData result = createImageFromFamily(family[0], OS.kLarge32BitData, OS.kLarge8BitMask, 32, 32);", "+//\tImageData result = createImageFromFamily(family[0], OS.kSmall32BitData, OS.kSmall8BitMask, 16, 16);", "+//\tOS.DisposeHandle(family[0]);", "+//\tif (result == null) {", "+//\t\tRGB[] rgbs = new RGB[] {", "+//\t\t\tnew RGB(0xff, 0xff, 0xff), ", "+//\t\t\tnew RGB(0x5f, 0x5f, 0x5f),", "+//\t\t\tnew RGB(0x80, 0x80, 0x80),", "+//\t\t\tnew RGB(0xC0, 0xC0, 0xC0),", "+//\t\t\tnew RGB(0xDF, 0xDF, 0xBF),", "+//\t\t\tnew RGB(0xFF, 0xDF, 0x9F),", "+//\t\t\tnew RGB(0x00, 0x00, 0x00),", "+//\t\t};  ", "+//\t\tresult = new ImageData(16, 16, 4, new PaletteData(rgbs)\t);", "+//\t\tresult.transparentPixel = 6; // use black for transparency", "+//\t\tString[] p= {", "+//\t\t\t\"CCCCCCCCGGG\",", "+//\t\t\t\"CFAAAAACBGG\",", "+//\t\t\t\"CAAAAAACFBG\",", "+//\t\t\t\"CAAAAAACBBB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CAAAAAAAAEB\",", "+//\t\t\t\"CDDDDDDDDDB\",", "+//\t\t\t\"CBBBBBBBBBB\",", "+//\t\t};", "+//\t\tfor (int y= 0; y < p.length; y++) {", "+//\t\t\tfor (int x= 0; x < 11; x++) {", "+//\t\t\t\tresult.setPixel(x+3, y+1, p[y].charAt(x)-'A');", "+//\t\t\t}", "+//\t\t}", "+//\t}", "+//\treturn result;", "+\treturn null;"]}], "num": 39942}