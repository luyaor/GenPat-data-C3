{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6c213731bb229283d76bd67c400fc5d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e514d5ed55e8169a452e710e5f670f43", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "469d78836b6c75ac7b00ce6846ace38bef436b99", "commitAfterChange": "96f3c5b1981fb5e1bb0f4b9846e8ec6a83907a4f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void fixShellFocus ()", "signatureAfterChange": "  int filterProc (int xEvent, int gdkEvent, int data)", "diff": ["-void fixShellFocus () {", "-\t/*", "-\t* Bug in GTK.  When a shell that has no window manager trimmings", "-\t* is given focus, GTK gets stuck in \"focus follows pointer\" mode when", "-\t* the pointer is within the shell and its parent when the shell is disposed.", "-\t* The fix is to send a fake XFocusChangeEvent with FocusOut to the", "-\t* parent shell to clear the mode. ", "-\t*/", "-\tif (!OS.GDK_WINDOWING_X11 ()) return;", "-\tint /*long*/ xDisplay = OS.GDK_DISPLAY ();", "-\tif (xDisplay == 0) return;", "-\tint /*long*/ xWindow = OS.gdk_x11_drawable_get_xid (OS.GTK_WIDGET_WINDOW (shellHandle));", "-\tif (xWindow == 0) return;", "-\tint /*long*/ [] root = new int /*long*/ [1];", "-\tint /*long*/ [] parent = new int /*long*/ [1];", "-\tOS.XQueryTree (xDisplay, xWindow, root, parent, new int /*long*/ [1], new int[1]);", "-\tif (parent [0] == root [0]) return;", "-\tXFocusChangeEvent focusEvent = new XFocusChangeEvent ();", "-\tfocusEvent.type = OS.FocusOut;", "-\tfocusEvent.display = xDisplay;", "-\tfocusEvent.window = xWindow;", "-\tfocusEvent.detail = OS.NotifyPointer;", "-\tint /*long*/ xEvent = OS.g_malloc (XEvent.sizeof);", "-\tif (xEvent != 0) {", "-\t\tOS.memmove (xEvent, focusEvent, XFocusChangeEvent.sizeof);", "-\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.gtk_get_current_event_time ());", "-\t\tOS.gdk_flush ();", "-\t\tOS.XSendEvent (xDisplay, xWindow, false, 0, xEvent);", "-\t\tOS.gdk_flush ();\t", "-\t\tOS.g_free (xEvent);", "-\t}", "-}", "+", "+int /*long*/ filterProc (int /*long*/ xEvent, int /*long*/ gdkEvent, int /*long*/ data) {", "+\t/*", "+\t* Bug in GTK.  When a shell that has no window manager trimmings", "+\t* is given focus, GTK gets stuck in \"focus follows pointer\" mode when", "+\t* the pointer is within the shell and its parent when the shell is disposed.", "+\t* The fix is to modify the X events that cause this to happen.", "+\t*/", "+\tXFocusChangeEvent focusEvent = new XFocusChangeEvent ();", "+\tOS.memmove (focusEvent, xEvent, 4);", "+\tswitch (focusEvent.type) {", "+\t\tcase OS.FocusIn: {", "+\t\t\tOS.memmove (focusEvent, xEvent, XFocusChangeEvent.sizeof);", "+\t\t\tif (focusEvent.detail == OS.NotifyPointer) {", "+\t\t\t\tfocusEvent.detail = OS.NotifyNonlinear;", "+\t\t\t\tOS.memmove (xEvent, focusEvent, XFocusChangeEvent.sizeof);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t\tcase OS.EnterNotify: {", "+\t\t\tXCrossingEvent crossingEvent = new XCrossingEvent ();", "+\t\t\tOS.memmove (crossingEvent, xEvent, XCrossingEvent.sizeof);", "+\t\t\tif (crossingEvent.focus) {", "+\t\t\t\tcrossingEvent.focus = false;", "+\t\t\t\tOS.memmove (xEvent, crossingEvent, XCrossingEvent.sizeof);", "+\t\t\t}", "+\t\t\tbreak;", "+\t\t}", "+\t}", "+\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca1af3fbfc4c1a820bdf11312c87d2a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "5303764efd8ba35e172b6219df5fadc1a0d392a8", "commitAfterChange": "f94123ee4e132f6e7e84978d91811f502d0830cb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int filterProc (int xEvent, int gdkEvent, int data)", "signatureAfterChange": "  void fixActiveShell ()", "diff": ["-int /*long*/ filterProc (int /*long*/ xEvent, int /*long*/ gdkEvent, int /*long*/ data) {", "-\t/*", "-\t* Bug in GTK.  When a shell that has no window manager trimmings", "-\t* is given focus, GTK gets stuck in \"focus follows pointer\" mode when", "-\t* the pointer is within the shell and its parent when the shell is disposed.", "-\t* The fix is to modify the X events that cause this to happen.", "-\t*/", "-\tXFocusChangeEvent focusEvent = new XFocusChangeEvent ();", "-\tOS.memmove (focusEvent, xEvent, 4);", "-\tswitch (focusEvent.type) {", "-\t\tcase OS.FocusIn: {", "-\t\t\tOS.memmove (focusEvent, xEvent, XFocusChangeEvent.sizeof);", "-\t\t\tif (focusEvent.detail == OS.NotifyPointer) {", "-\t\t\t\tfocusEvent.detail = OS.NotifyNonlinear;", "-\t\t\t\tOS.memmove (xEvent, focusEvent, XFocusChangeEvent.sizeof);", "+void fixActiveShell () {", "+\tif (display.activeShell == this) {", "+\t\tShell shell = null;", "+\t\tif (parent != null && parent.isVisible ()) shell = parent.getShell ();", "+\t\tif (shell == null && (style & SWT.ON_TOP) != 0) {", "+\t\t\tShell [] shells = display.getShells ();", "+\t\t\tfor (int i = 0; i < shells.length; i++) {", "+\t\t\t\tif (shells [i] != null && shells [i].isVisible ()) {", "+\t\t\t\t\tshell = shells [i];", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "-\t\t\tbreak;", "-\t\tcase OS.EnterNotify: {", "-\t\t\tXCrossingEvent crossingEvent = new XCrossingEvent ();", "-\t\t\tOS.memmove (crossingEvent, xEvent, XCrossingEvent.sizeof);", "-\t\t\tif (crossingEvent.focus) {", "-\t\t\t\tcrossingEvent.focus = false;", "-\t\t\t\tOS.memmove (xEvent, crossingEvent, XCrossingEvent.sizeof);", "-\t\t\t}", "-\t\t\tbreak;", "-\t\t}", "+\t\tif (shell != null) shell.bringToTop (false);", "-\treturn 0;"]}], "num": 48935}