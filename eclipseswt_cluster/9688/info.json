{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "821cedf4539be6a82d747e0aac9779e3", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b51c9a2d7022108326db12e884aa79f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1fe35fc97a96bb681fc8e1538ccb42b41e2391ac", "commitAfterChange": "479daafcf8fd589f7842f28b15e853de0f1dfefd", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \t \tprivate int handleDataBrowserItemNotificationCallback(int cHandle, int item, int message)", "signatureAfterChange": " \t \tprivate int handleDataBrowserItemNotificationCallback(int cHandle, int item, int message)", "diff": ["-//\t\tSystem.out.println(\"handleDataBrowserItemNotificationCallback: \" + message);", "+\t\tWidget widget= WidgetTable.get(cHandle);", "+\t\tif (widget instanceof List) {", "+\t\t\tList list= (List) widget;", "+\t\t\treturn list.handleItemNotificationCallback(item, message);", "+\t\t}", "+\t\tif (widget instanceof Tree2) {", "+\t\t\tTree2 tree= (Tree2) widget;", "+\t\t\treturn tree.handleItemNotificationCallback(item, message);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34e2ca618b98efc995ab28451149a716", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/SwtTestCase.java", "commitBeforeChange": "17c14c86aa375bf8f4bbc8830efa09a99b30fe67", "commitAfterChange": "f84adb86ff2ce7b96080589609cee34a4414ec51", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " static public void assertEquals(String message, int expectedCode, Throwable actualThrowable)", "signatureAfterChange": " static public void assertEquals(String message, int expectedCode, Throwable actualThrowable)", "diff": ["-\ttry {", "-\t\tSWT.error(expectedCode);", "-\t} catch (Throwable expectedThrowable) {", "-\t\tassertEquals(message, expectedThrowable.getMessage(), actualThrowable.getMessage());", "+\tif (actualThrowable instanceof SWTError) {", "+\t\tSWTError error = (SWTError) actualThrowable;", "+\t\tassertEquals(message, expectedCode, error.code);", "+\t} else if (actualThrowable instanceof SWTException) {", "+\t\tSWTException exception = (SWTException) actualThrowable;", "+\t\tassertEquals(message, expectedCode, exception.code);", "+\t} else {", "+\t\ttry {", "+\t\t\tSWT.error(expectedCode);", "+\t\t} catch (Throwable expectedThrowable) {", "+\t\t\tassertEquals(message, expectedThrowable.getMessage(), actualThrowable.getMessage());", "+\t\t}"]}], "num": 9688}