{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfbf296355a35693383e019eb62aa51e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cad974c71a9d6758783e985ce54915a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "11fb5ee98008bfc54d8ec3b150166d2290700e35", "commitAfterChange": "b775687e595c4350d5b88a3030424e809a900726", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public boolean readAndDispatch ()", "signatureAfterChange": " public boolean readAndDispatch ()", "diff": ["-\t\tNSEvent event = NSEvent.otherEventWithType(OS.NSApplicationDefined, new NSPoint(), 0, 0, 0, null, SWT_IDLE_TYPE, 0, 0);", "-\t\tapplication.postEvent(event, false);", "-\t\tidle = true;", "-\t\tapplication.run();", "-\t\tevents |= !idle;", "+\t\tNSEvent event = application.nextEventMatchingMask(0, null, OS.NSDefaultRunLoopMode, true);", "+\t\tif (event != null) {", "+\t\t\tevents = true;", "+\t\t\tapplication.sendEvent(event);", "+\t\t}", "+//\t\tNSEvent event = NSEvent.otherEventWithType(OS.NSApplicationDefined, new NSPoint(), 0, 0, 0, null, SWT_IDLE_TYPE, 0, 0);", "+//\t\tapplication.postEvent(event, false);", "+//\t\tidle = true;", "+//\t\tapplication.run();", "+//\t\tevents |= !idle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3cba62559547af056f7964efebd7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "c63ca636edfbea4cd55ccc07da414186be375ce0", "commitAfterChange": "e38d4aec3f79c42ea6666a7a37c026187a8aa6ea", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 121, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\t\t\t\t\t\tHDITEM oldItem = new HDITEM ();", "-\t\t\t\t\t\toldItem.mask = OS.HDI_WIDTH;", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, phdn.iItem, oldItem);", "-\t\t\t\t\t\tint deltaX = newItem.cxy - oldItem.cxy;", "-\t\t\t\t\t\tRECT rect = new RECT (), itemRect = new RECT ();", "+\t\t\t\t\t\tRECT rect = new RECT ();", "-\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);", "-\t\t\t\t\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "-\t\t\t\t\t\trect.left = itemRect.right - gridWidth;", "+\t\t\t\t\t\tRECT itemRect = new RECT ();", "-\t\t\t\t\t\tint flags = OS.SW_INVALIDATE | OS.SW_ERASE;", "-\t\t\t\t\t\tOS.ScrollWindowEx (handle, deltaX, 0, rect, null, 0, null, flags);", "-\t\t\t\t\t\t//TODO - column flashes when resized", "+\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);", "+\t\t\t\t\t\tint gridWidth = getLinesVisible () ? GRID_WIDTH : 0;", "+\t\t\t\t\t\trect.left = itemRect.right - gridWidth;", "+\t\t\t\t\t\tif (backgroundImage != null) {", "+\t\t\t\t\t\t\tOS.InvalidateRect (handle, rect, true);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tHDITEM oldItem = new HDITEM ();", "+\t\t\t\t\t\t\toldItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, phdn.iItem, oldItem);", "+\t\t\t\t\t\t\tint deltaX = newItem.cxy - oldItem.cxy;", "+\t\t\t\t\t\t\tint flags = OS.SW_INVALIDATE | OS.SW_ERASE;", "+\t\t\t\t\t\t\tOS.ScrollWindowEx (handle, deltaX, 0, rect, null, 0, null, flags);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t//TODO - column flashes when resized and not double buffered", "-\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, phdn.iItem, itemRect);"]}], "num": 1496}