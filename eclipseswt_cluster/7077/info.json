{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32b2a90158e088cc0e6b6131d810e808", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db7567b34b5123138cfa43f5adbca8c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 46, "signatureBeforeChange": " void calculateSelectionExtent()", "signatureAfterChange": " public void setFont (Font value)", "diff": ["- */", "-void calculateSelectionExtent() {", "-\tTable parent = getParent();", "-\tTableColumn column = parent.internalGetColumn(TableColumn.FIRST);", "-\tGC gc = new GC(parent);", "-\tgc.setFont(getFont());", "-\tString trimmedText = getText(gc, column);", "-\tint gridLineWidth = parent.getGridLineWidth();", "-\t", "-\tif (trimmedText != null) {", "-\t\tselectionExtent = new Point(gc.stringExtent(trimmedText).x, parent.getItemHeight());", "-\t\tselectionExtent.x += getTextIndent(TableColumn.FIRST) + SELECTION_PADDING;", "-\t\tselectionExtent.x = Math.min(", "-\t\t\tselectionExtent.x, column.getWidth() - getImageStopX(column.getIndex()) - gridLineWidth);", "-\t\tif (parent.getLinesVisible() == true) {", "-\t\t\tselectionExtent.y -= gridLineWidth;", "-\tgc.dispose();", "+}", "+public void setFont (Font value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+\tif (font == value) return;", "+\tif (value != null && value.equals (font)) return;", "+\t", "+\tRectangle bounds = getBounds ();", "+\tint oldRightX = bounds.x + bounds.width;", "+\tfont = value;", "+\t", "+\t/* recompute cached values for string measurements */", "+\tGC gc = new GC (parent);", "+\tgc.setFont (getFont ());", "+\tcomputeDisplayTexts (gc);", "+\trecomputeTextWidths (gc);", "+\tfontHeight = gc.getFontMetrics ().getHeight ();", "+\tgc.dispose ();", "+\t", "+\t/* horizontal bar could be affected if table has no columns */", "+\tif (parent.columns.length == 0) {", "+\t\tbounds = getBounds ();", "+\t\tint newRightX = bounds.x + bounds.width;", "+\t\tparent.updateHorizontalBar (newRightX, newRightX - oldRightX);", "+\t}", "+\tredrawItem ();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3587f89fc36edab79ea9ea209645486f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void setFont (int index, Font font)", "signatureAfterChange": " public void setFont (int columnIndex, Font value)", "diff": ["- */", "-public void setFont (int index, Font font) {", "-\tcheckWidget ();", "-\tif (font != null && font.isDisposed ()) {", "-\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tTable parent = getParent ();", "-\tint count = Math.max (1, parent.getColumnCount ());", "-\tif (0 > index || index > count - 1) return;", "-\tif (cellFont == null) {", "-\t\tcellFont = new Font [count];", "-\t}", "-\tif (cellFont [index] == font) return;", "-\tif (cellFont [index] != null && cellFont [index].equals (font)) return;", "-\tcellFont [index] = font;", "-\tclearTextWidths (index);", "-\tredraw ();", "-}", "+}", "+public void setFont (int columnIndex, Font value) {", "+\tcheckWidget ();", "+\tif (value != null && value.isDisposed ()) {", "+\t\tSWT.error (SWT.ERROR_INVALID_ARGUMENT);", "+\t}", "+", "+\tint validColumnCount = Math.max (1, parent.columns.length);", "+\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "+\tif (cellFonts == null) cellFonts = new Font [validColumnCount];", "+\tif (cellFonts [columnIndex] == value) return;", "+\tif (cellFonts [columnIndex] != null && cellFonts [columnIndex].equals (value)) return;", "+\tcellFonts [columnIndex] = value;", "+\t", "+\t/* recompute cached values for string measurements */", "+\tGC gc = new GC (parent);", "+\tgc.setFont (getFont (columnIndex));", "+\tif (fontHeights == null) fontHeights = new int [validColumnCount];", "+\tfontHeights [columnIndex] = gc.getFontMetrics ().getHeight ();", "+\tcomputeDisplayText (columnIndex, gc);", "+\ttextWidths [columnIndex] = gc.textExtent (getDisplayText (columnIndex)).x;", "+\tgc.dispose ();", "+", "+\tRectangle bounds = getCellBounds (columnIndex);", "+\tparent.redraw (bounds.x, bounds.y, bounds.width, bounds.height, false);", "+}"]}], "num": 7077}