{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b80812fc5688fe79a1b46168d41b056", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f42d7b55fa277e6b455c2b641b72cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "3539392530d589ce910e4278acc811f43b907fc4", "commitAfterChange": "b4b61aff0cb1c1ac045f8af3c9d9b60914e3dc14", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void setItems (String [] items)", "signatureAfterChange": " public void setItems (String [] items)", "diff": ["-\tfor (int i= 0; i < items.length; i++)", "-\t\tfData.add(items[i]);", "-\tint ensureSize= fData.size();", "-\tensureSize(ensureSize);", "-\tinvalidateRange(0, ensureSize);", "+\tint count= items.length;", "+\tint[] ids= new int[count];", "+\tfor (int i= 0; i < count; i++) {", "+\t\tPair p= new Pair(items[i]);", "+\t\tfData.add(p);", "+\t\tids[i]= p.fId;", "+\t}", "+\tOS.AddDataBrowserItems(handle, OS.kDataBrowserNoItem, ids.length, ids, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22b3beed9912d492407d9c35b56201fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "780deeed6b8d04c7f8256f57ee4b8ba670998a62", "commitAfterChange": "f6545bdd05853b79e0ef79ea07a3cd61ab49eba2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void setSelection (TreeItem2 [] items)", "signatureAfterChange": "\r public void setSelection (TreeItem2 [] items)", "diff": ["-\t\t\r", "-\t/* Select/deselect the first item */\r", "-\t/* AW\r", "-\tint hOldItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);\r", "-\tif (items.length == 0) {\r", "-\t\tif (hOldItem != 0) {\r", "-\t\t\tTVITEM tvItem = new TVITEM ();\r", "-\t\t\ttvItem.mask = OS.TVIF_STATE;\r", "-\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;\r", "-\t\t\ttvItem.hItem = hOldItem;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\r", "-\t\t}\r", "-\t} else {\r", "-\t\tint hNewItem = 0;\r", "-\t\tTreeItem2 item = items [0];\r", "-\t\tif (item != null) {\r", "-\t\t\tif (item.isDisposed ()) error (SWT.ERROR_INVALID_ARGUMENT);\r", "-\t\t\thAnchor = hNewItem = item.handle;\r", "-\t\t}\r", "-\t\tignoreSelect = true;\r", "-\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hNewItem);\r", "-\t\tignoreSelect = false;\r", "-\t\t*/\r", "-\t\t/*\r", "-\t\t* Feature in Windows.  When the old and new focused item\r", "-\t\t* are the same, Windows does not check to make sure that\r", "-\t\t* the item is actually selected, not just focused.  The\r", "-\t\t* fix is to force the item to draw selected by setting\r", "-\t\t* the state mask.\r", "-\t\t*/\r", "-\t\t/* AW\r", "-\t\tif (hOldItem == hNewItem) {\r", "-\t\t\tTVITEM tvItem = new TVITEM ();\r", "-\t\t\ttvItem.mask = OS.TVIF_STATE;\r", "-\t\t\ttvItem.state = OS.TVIS_SELECTED;\r", "-\t\t\ttvItem.stateMask = OS.TVIS_SELECTED;\r", "-\t\t\ttvItem.hItem = hNewItem;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\r", "-\t\t}\r", "-\t}\r", "-\tif ((style & SWT.SINGLE) != 0) return;\r", "-\t*/\r", "-\t\r", "-\t/* Select/deselect the rest of the items */\r", "-\t/* AW\r", "-\tTVITEM tvItem = new TVITEM ();\r", "-\ttvItem.mask = OS.TVIF_STATE;\r", "-\ttvItem.stateMask = OS.TVIS_SELECTED;\r", "-\tint oldProc = OS.GetWindowLong (handle, OS.GWL_WNDPROC);\r", "-\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, TreeProc);\r", "-\tfor (int i=0; i<this.items.length; i++) {\r", "-\t\tTreeItem2 item = this.items [i];\r", "-\t\tif (item != null) {\r", "-\t\t\tint index = 0;\r", "-\t\t\twhile (index < items.length) {\r", "-\t\t\t\tif (items [index] == item) break;\r", "-\t\t\t\tindex++;\r", "-\t\t\t}\r", "-\t\t\ttvItem.hItem = item.handle;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_GETITEM, 0, tvItem);\r", "-\t\t\tif ((tvItem.state & OS.TVIS_SELECTED) != 0) {\r", "-\t\t\t\tif (index == items.length) {\r", "-\t\t\t\t\ttvItem.state = 0;\r", "-\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\tif (index != items.length) {\r", "-\t\t\t\t\ttvItem.state = OS.TVIS_SELECTED;\r", "-\t\t\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r", "-\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldProc);\r", "-\t*/\r", "+\tint[] ids= new int[items.length];\r", "+\tfor (int i= 0; i < items.length; i++)\r", "+\t\tids[i]= items[i].handle;\r", "+\tOS.SetDataBrowserSelectedItems(handle, ids.length, ids, OS.kDataBrowserItemsAssign);\r"]}], "num": 52926}