{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ecbdb65695054de57850d7409409264", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13ad38ff3efcd756faa375cfa93785d2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "36baafc7a41a98ef31c891816d25888f38e0c4ac", "commitAfterChange": "35b3e5ac684cde54119d58ece02c16504e7a077c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " boolean translateAccelerator (int key, int keysym, XKeyEvent xEvent)", "signatureAfterChange": " boolean translateAccelerator (int key, int keysym, XKeyEvent xEvent, boolean doit)", "diff": ["-boolean translateAccelerator (int key, int keysym, XKeyEvent xEvent) {", "-\t/*", "-\t* Bug in Solaris.  When accelerators are set more", "-\t* than once in the same menu bar, the time it takes", "-\t* to set the accelerator increases exponentially.", "-\t* The fix is to implement our own accelerator table", "-\t* on Solaris.", "-\t*/", "-\tif (OS.IsSunOS) {", "-\t\tif (menuBar != null && menuBar.getEnabled ()) {", "-\t\t\t/* Ignore modifiers. */", "-\t\t\tswitch (keysym) {", "-\t\t\t\tcase OS.XK_Control_L:", "-\t\t\t\tcase OS.XK_Control_R:", "-\t\t\t\tcase OS.XK_Alt_L:", "-\t\t\t\tcase OS.XK_Alt_R:", "-\t\t\t\tcase OS.XK_Shift_L:", "-\t\t\t\tcase OS.XK_Shift_R:", "-\t\t\t\t\treturn false;\t\t\t\t\t", "-\t\t\t}", "-\t\t\t", "-\t\t\t/*", "-\t\t\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not", "-\t\t\t* translated correctly by XLookupString().  They are mapped", "-\t\t\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to", "-\t\t\t* look for these values explicitly and correct them.", "-\t\t\t*/", "-\t\t\tif (keysym != 0) {", "-\t\t\t\tswitch (keysym) {", "-\t\t\t\t\tcase 0x1005FF10: ", "-\t\t\t\t\t\tkeysym = OS.XK_F11;", "-\t\t\t\t\t\tkey = 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\tcase 0x1005FF11:", "-\t\t\t\t\t\tkeysym = OS.XK_F12;", "-\t\t\t\t\t\tkey = 0;", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\t/*", "-\t\t\t\t* Bug in MOTIF.  On Solaris only, there is garbage in the", "-\t\t\t\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms", "-\t\t\t\t* must be 16-bits to fit into a Character, mask away the", "-\t\t\t\t* high 16-bits on all platforms.", "-\t\t\t\t*/", "-\t\t\t\tkeysym &= 0xFFFF;", "-\t\t\t}", "-\t\t\t", "-\t\t\t/*", "-\t\t\t* Bug in Motif.  There are some keycodes for which ", "-\t\t\t* XLookupString() does not translate the character.", "-\t\t\t* Some of examples are Shift+Tab and Ctrl+Space.", "-\t\t\t*/", "-\t\t\tswitch (keysym) {", "-\t\t\t\tcase OS.XK_ISO_Left_Tab: key = '\\t'; break;", "-\t\t\t\tcase OS.XK_space: key = ' '; break;", "-\t\t\t}", "-\t\t\t\t", "-\t\t\tint accelerator = Display.translateKey (keysym);", "-\t\t\tif (accelerator == 0) accelerator = key;", "-\t\t\tif (accelerator == 0) return false;", "-\t\t\tif ((xEvent.state & OS.Mod1Mask) != 0) accelerator |= SWT.ALT;", "-\t\t\tif ((xEvent.state & OS.ShiftMask) != 0) accelerator |= SWT.SHIFT;", "-\t\t\tif ((xEvent.state & OS.ControlMask) != 0) accelerator |= SWT.CONTROL;", "-\t\t\treturn menuBar.translateAccelerator (accelerator);", "-\t\t}", "+boolean translateAccelerator (int key, int keysym, XKeyEvent xEvent, boolean doit) {", "+\tif (menuBar == null || !menuBar.getEnabled ()) return false;", "+\t", "+\t/* Ignore modifiers. */", "+\tswitch (keysym) {", "+\t\tcase OS.XK_Control_L:", "+\t\tcase OS.XK_Control_R:", "+\t\tcase OS.XK_Alt_L:", "+\t\tcase OS.XK_Alt_R:", "+\t\tcase OS.XK_Shift_L:", "+\t\tcase OS.XK_Shift_R:", "+\t\t\treturn false;\t\t\t\t\t", "-\treturn false;", "+\t", "+\t/*", "+\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not", "+\t* translated correctly by XLookupString().  They are mapped", "+\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to", "+\t* look for these values explicitly and correct them.", "+\t*/", "+\tif (OS.IsSunOS && keysym != 0) {", "+\t\tswitch (keysym) {", "+\t\t\tcase 0x1005FF10: ", "+\t\t\t\tkeysym = OS.XK_F11;", "+\t\t\t\tkey = 0;", "+\t\t\t\tbreak;", "+\t\t\tcase 0x1005FF11:", "+\t\t\t\tkeysym = OS.XK_F12;", "+\t\t\t\tkey = 0;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\t/*", "+\t\t* Bug in MOTIF.  On Solaris only, there is garbage in the", "+\t\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms", "+\t\t* must be 16-bits to fit into a Character, mask away the", "+\t\t* high 16-bits on all platforms.", "+\t\t*/", "+\t\tkeysym &= 0xFFFF;", "+\t}", "+\t", "+\t/*", "+\t* Bug in Motif.  There are some keycodes for which ", "+\t* XLookupString() does not translate the character.", "+\t* Some examples are Shift+Tab and Ctrl+Space.", "+\t*/", "+\tswitch (keysym) {", "+\t\tcase OS.XK_ISO_Left_Tab: key = '\\t'; break;", "+\t\tcase OS.XK_space: key = ' '; break;", "+\t}", "+\t\t", "+\tint accelerator = Display.translateKey (keysym);", "+\tif (accelerator == 0) accelerator = key;", "+\tif (accelerator == 0) return false;", "+\tif ((xEvent.state & OS.Mod1Mask) != 0) accelerator |= SWT.ALT;", "+\tif ((xEvent.state & OS.ShiftMask) != 0) accelerator |= SWT.SHIFT;", "+\tif ((xEvent.state & OS.ControlMask) != 0) accelerator |= SWT.CONTROL;", "+\treturn menuBar.translateAccelerator (accelerator, doit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93713054708be38098eb39550c45afa6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "eda2a2418c4450b2d104d71f5bf6f8ca33cebc34", "commitAfterChange": "531850a3e0806300795ef7d038564fab44c70aee", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " boolean translateAccelerator (char key, int keysym, XKeyEvent xEvent, boolean doit)", "signatureAfterChange": " boolean translateAccelerator (char key, int keysym, XKeyEvent xEvent, boolean doit)", "diff": ["-\t", "-\t/* Ignore modifiers. */", "-\tswitch (keysym) {", "-\t\tcase OS.XK_Control_L:", "-\t\tcase OS.XK_Control_R:", "-\t\tcase OS.XK_Alt_L:", "-\t\tcase OS.XK_Alt_R:", "-\t\tcase OS.XK_Shift_L:", "-\t\tcase OS.XK_Shift_R:", "-\t\t\treturn false;\t\t\t\t\t", "-\t}", "-\t", "-\t/*", "-\t* Bug in MOTIF.  On Solaris only, XK_F11 and XK_F12 are not", "-\t* translated correctly by XLookupString().  They are mapped", "-\t* to 0x1005FF10 and 0x1005FF11 respectively.  The fix is to", "-\t* look for these values explicitly and correct them.", "-\t*/", "-\tif (OS.IsSunOS && keysym != 0) {", "-\t\tswitch (keysym) {", "-\t\t\tcase 0x1005FF10: ", "-\t\t\t\tkeysym = OS.XK_F11;", "-\t\t\t\tkey = 0;", "-\t\t\t\tbreak;", "-\t\t\tcase 0x1005FF11:", "-\t\t\t\tkeysym = OS.XK_F12;", "-\t\t\t\tkey = 0;", "-\t\t\t\tbreak;", "-\t\t}", "-\t\t/*", "-\t\t* Bug in MOTIF.  On Solaris only, there is garbage in the", "-\t\t* high 16-bits for Keysyms such as XK_Down.  Since Keysyms", "-\t\t* must be 16-bits to fit into a Character, mask away the", "-\t\t* high 16-bits on all platforms.", "-\t\t*/", "-\t\tkeysym &= 0xFFFF;", "-\t}", "-\t", "-\t/*", "-\t* Bug in Motif.  There are some keycodes for which ", "-\t* XLookupString() does not translate the character.", "-\t* Some examples are Shift+Tab and Ctrl+Space.", "-\t*/", "-\tswitch (keysym) {", "-\t\tcase OS.XK_ISO_Left_Tab: key = '\\t'; break;", "-\t\tcase OS.XK_space: key = ' '; break;", "-\t}", "-\t\t"]}], "num": 16259}