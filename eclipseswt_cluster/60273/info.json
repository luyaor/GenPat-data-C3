{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9de6beab22ec3938b4dbc0159e6cabf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d04050ebb8f380f162823266673f9e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/gtk/org/eclipse/swt/dnd/HTMLTransfer.java", "commitBeforeChange": "a9bcfea463127dd8a6c52ce4af29eac7df4a241d", "commitAfterChange": "c5308d73c1e46a1db4edf39db94dfada1b6e65dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Object nativeToJava(TransferData transferData)", "signatureAfterChange": " public Object nativeToJava(TransferData transferData)", "diff": ["-\tif (size <= 0) return null;\t\t\t", "-\tchar[] chars = new char [size/2];", "-\tOS.memmove (chars, transferData.pValue, size);", "-\tString string = new String (chars);", "+\tif (size <= 0) return null;", "+\tchar[] bom = new char[1]; // look for a Byte Order Mark", "+\tif (size > 1) OS.memmove (bom, transferData.pValue, 2);", "+\tString string;", "+\tif (bom[0] == '\\ufeff' || bom[0] == '\\ufffe') {", "+\t\t// utf16", "+\t\tchar[] chars = new char [size/2];", "+\t\tOS.memmove (chars, transferData.pValue, size);", "+\t\tstring = new String (chars);", "+\t} else {", "+\t\tbyte[] utf8 = new byte[size];", "+\t\tOS.memmove(utf8, transferData.pValue, size);", "+\t\t// convert utf8 byte array to a unicode string", "+\t\tchar [] unicode = org.eclipse.swt.internal.Converter.mbcsToWcs (null, utf8);", "+\t\tstring = new String (unicode);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd025150f3978bcb807f7dfef31360cf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ee155d593cfda428fc88139d1e8da486bb5a73cf", "commitAfterChange": "59b2491032a801ab7176764808e4a778061c6b28", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void addColumn (TreeColumn column)", "signatureAfterChange": " void addColumn (TreeColumn column)", "diff": ["+\t}", "+\t/*", "+\t * The length of displayTexts always matches the parent's column count, unless this", "+\t * count is zero, in which case displayTexts is null.  ", "+\t */", "+\tString[] newDisplayTexts = new String [columnCount];", "+\tif (columnCount > 1) {", "+\t\tSystem.arraycopy (displayTexts, 0, newDisplayTexts, 0, index);", "+\t\tSystem.arraycopy (displayTexts, index, newDisplayTexts, index + 1, columnCount - index - 1);", "+\t}", "+\tdisplayTexts = newDisplayTexts;", "+\tif (columnCount == 1) {", "+\t\tGC gc = new GC (parent);", "+\t\tcomputeDisplayText (0, gc);", "+\t\ttextWidths [0] = gc.textExtent (getDisplayText (0)).x;", "+\t\tgc.dispose ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272430dc245b45b5dd0f9f2d71456283", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "e6f7b585199d6ba44254014a4c1731f439c2cf11", "commitAfterChange": "c422792f476daef88e3a0eb93a50d34c1718ea55", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 113, "signatureBeforeChange": "  void setKeyState (Event event, int theEvent)", "signatureAfterChange": "  void setKeyState (Event event, int theEvent)", "diff": ["-\t\t\tbyte [] charCode = new byte [1];", "-\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyMacCharCodes, OS.typeChar, null, charCode.length, null, charCode);", "-\t\t\tevent.character = (char) charCode [0];", "+\t\t\tint [] length = new int [1];", "+\t\t\tint status = OS.GetEventParameter (theEvent, OS.kEventParamKeyUnicodes, OS.typeUnicodeText, null, 4, length, (char[])null);", "+\t\t\tif (status == OS.noErr && length [0] > 0) {", "+\t\t\t\tchar [] chars = new char [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyUnicodes, OS.typeUnicodeText, null, 2, null, chars);", "+\t\t\t\tevent.character = chars [0];", "+\t\t\t} else {", "+\t\t\t\tbyte [] charCode = new byte [1];", "+\t\t\t\tOS.GetEventParameter (theEvent, OS.kEventParamKeyMacCharCodes, OS.typeChar, null, charCode.length, null, charCode);", "+\t\t\t\tevent.character = (char) charCode [0];", "+\t\t\t}"]}], "num": 60273}