{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea28f4331d771adacee77a7692dce474", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee7dbe0885a6688461297a5f8ae7e36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0d6738f372469d9527fdb6984c0f956cbb0c021a", "commitAfterChange": "69155e7bef60580890dcbd61eeae4b1c572aec32", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  public void test_textExtentLjava_lang_StringI()", "signatureAfterChange": "  public void test_textExtentLjava_lang_StringI()", "diff": ["-\tPoint pt = gc.textExtent(\"abc\", 0);", "-\tassertTrue(pt.x > 0);", "-\tassertTrue(pt.y > 0);", "+\tPerformanceMeter meter = createMeter(\"transparent\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_TRANSPARENT);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"delimiter\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_DELIMITER);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"mnemonic\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_MNEMONIC);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+", "+\tmeter = createMeter(\"tab\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.DRAW_TAB);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);", "+\t", "+\tmeter = createMeter(\"no flags\");", "+\tmeter.start();", "+\tfor (int i = 0; i < COUNT; i++) {", "+\t\tgc.textExtent(\"\\t\\r\\na&bc&\", SWT.NONE);\t\t\t\t", "+\t}", "+\tmeter.stop();", "+\t", "+\tdisposeMeter(meter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69dea93727912fb286c6f4b989210fff", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_Font.java", "commitBeforeChange": "851bcd033cd276980fb8346e37d463f101f050e0", "commitAfterChange": "8af96b2b47c5e6fbdb727b0e6f06b43d477a095c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLjava_lang_StringII()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceLjava_lang_StringII()", "diff": ["-\tstartMeasuring();", "+\tPerformanceMeter meter = createMeter(\"no name\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"unknown name\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"0 height\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"10 pt\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"100 pt\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"bold italic\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);", "-\tstartMeasuring();", "+\tmeter = createMeter(\"null device\");", "+\tmeter.start();", "-\tstopMeasuring();", "+\tmeter.stop();", "-\tcommitMeasurements();", "-\tassertPerformance();", "+\tdisposeMeter(meter);"]}], "num": 2431}