{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b040bf042d3b59bd6a1e139a2783234", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db5d14f6aa60de34703e2c5b65b4d4d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void remove(int indices[])", "signatureAfterChange": " public void remove (int [] indices)", "diff": ["- */", "-public void remove(int indices[]) {", "-\tcheckWidget();", "+public void remove (int [] indices) {", "+\tcheckWidget ();", "-\tint count = getItemCount();", "-\tif (!(0 <= start && start <= end && end < count)) {", "+\tif (!(0 <= start && start <= end && end < items.length)) {", "-\tint last = -1;", "-\tfor (int i = 0; i < newIndices.length; i++) {", "-\t\tint index = newIndices[i];", "-\t\tif (index != last) {", "-\t\t\tSelectableItem item = getVisibleItem(index);", "-\t\t\tif (item != null) {", "-\t\t\t\titem.dispose();", "-\t\t\t} else {", "-\t\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);\t\t\t\t          ", "-\t\t\t}", "-\t\t\tlast = index;", "+\tint lastRemovedIndex = -1;", "+\tfor (int i = newIndices.length - 1; i >= 0; i--) {", "+\t\tif (newIndices [i] != lastRemovedIndex) {", "+\t\t\titems [newIndices [i]].dispose ();", "+\t\t\tlastRemovedIndex = newIndices [i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cc5884cb47f8aadddd2e725b4dc6ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void remove(int start, int end)", "signatureAfterChange": " public void remove (int start, int end)", "diff": ["+}", "+public void remove (int start, int end) {", "+\tcheckWidget ();", "+\tif (start > end) return;", "+\tif (!(0 <= start && start <= end && end < items.length)) {", "+\t\terror (SWT.ERROR_INVALID_RANGE);", "+\t}", "+\tif (start == 0 && end == items.length - 1) {", "+\t\tremoveAll ();", "+\t} else {", "+\t\tfor (int i = end; i >= start; i--) {", "+\t\t\titems [i].dispose ();", "- */", "-public void remove(int start, int end) {", "-\tcheckWidget();", "-\tif (start > end) return;", "-\tif (!(0 <= start && start <= end && end < getItemCount())) {", "-\t\terror (SWT.ERROR_INVALID_RANGE);", "-\t}", "-\tfor (int i = end; i >= start; i--) {", "-\t\tSelectableItem item = getVisibleItem(i);", "-\t\tif (item != null) {", "-\t\t\titem.dispose();", "-\t\t} else {", "-\t\t\terror(SWT.ERROR_ITEM_NOT_REMOVED);", "-\t\t}", "-\t}", "-}"]}], "num": 17071}