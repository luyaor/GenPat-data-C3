{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d062df6e4438aefc1aea386c1d02e6bf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "110fb419471585549f7c17b44f9fc367", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "f234a135829d52ec2f9610fac66b6f2480cb8cd9", "commitAfterChange": "d283b0d204e723dc8605596e9a858d0559fcb33d", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \r LRESULT WM_MOUSEACTIVATE (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_MOUSEACTIVATE (int wParam, int lParam)", "diff": ["+\t/*\r", "+\t* Get the current location of the cursor,\r", "+\t* not the location of the cursor when the\r", "+\t* WM_MOUSEACTIVATE was generated.  This is\r", "+\t* strictly incorrect but is necessary in\r", "+\t* order to support Activate and Deactivate\r", "+\t* events for embedded widgets that have\r", "+\t* their own event loop.  In that case, the\r", "+\t* cursor location reported by GetMessagePos\r", "+\t* is the one for our event loop, not the\r", "+\t* embedded widget's event loop.\r", "+\t*/\r", "-\tint pos = OS.GetMessagePos ();\r", "-\tpt.x = (short) (pos & 0xFFFF);\r", "-\tpt.y = (short) (pos >> 16);\r", "+\tif (!OS.GetCursorPos (pt)) {\r", "+\t\tint pos = OS.GetMessagePos ();\r", "+\t\tpt.x = (short) (pos & 0xFFFF);\r", "+\t\tpt.y = (short) (pos >> 16);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "198aaee8a62355d6ce2340280f9370f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "267c533e816cb2810b67cfcbeb132088034f52fd", "commitAfterChange": "0b01cef709770cee06399410b45cb5a2079c746f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r void createItem (CoolItem item, int index)", "signatureAfterChange": "\r \r void createItem (CoolItem item, int index)", "diff": ["-\t* eventually, Windows will begin to place the item on the right\r", "-\t* side of the cool bar.  The fix is to resize the next to last\r", "-\t* item to the ideal size and resize the new items to the maximum\r", "-\t* size.\r", "+\t* sometimes, Windows will begin to place the item on the right\r", "+\t* side of the cool bar.  The fix is to resize the new items to\r", "+\t* the maximum size and then resize the next to last item to the\r", "+\t* ideal size.\r", "-\tif (index == lastIndex + 1) {  \t\r", "-\t\tresizeToPreferredWidth (lastIndex);\r", "+\tboolean fixLast = index == lastIndex + 1;\r", "+\tif (fixLast) {  \t\r", "+\t\r", "+\t/* Resize the next to last item to the ideal size */\r", "+\tif (fixLast) {  \t\r", "+\t\tresizeToPreferredWidth (lastIndex);\r", "+\t}\r", "+\t\r"]}], "num": 12077}