{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9fde85f887b91673c5d9c31a9c16770", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f9626a4862eac75d1e194f26b0a7174", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "638b340c24f3820651d3b131e77ef48a7246edeb", "commitAfterChange": "bf120806d70c740fcac12da31a6ae7634221259f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  Variant convertToJS (Object value)", "signatureAfterChange": "  Variant convertToJS (Object value)", "diff": ["+\tif (value == null) {", "+\t\treturn new Variant ();", "+\t}", "-\t\t\t\t\tVariant variant = convertToJS (currentObject);", "-\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "-\t\t\t\t\tvariant.dispose ();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tVariant variant = convertToJS (currentObject);", "+\t\t\t\t\t\tauto.invoke (rgdispids[0], new Variant[] {variant});", "+\t\t\t\t\t\tvariant.dispose ();", "+\t\t\t\t\t} catch (SWTException e) {", "+\t\t\t\t\t\t/* invalid return value type */", "+\t\t\t\t\t\tauto.dispose ();", "+\t\t\t\t\t\tarray.dispose ();", "+\t\t\t\t\t\tthrow e;", "+\t\t\t\t\t}", "+\t\t\tauto.dispose ();", "-\t\t}\t\t", "+\t\t}", "-\treturn new Variant ();", "+\tSWT.error (SWT.ERROR_INVALID_RETURNVALUE);", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d9581a2776b6e86e77a7d7a6556947", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "b590d64b3ccd7a0955639f7b5d741d1165df644c", "commitAfterChange": "07b4e1467fff65b3050b4b9c50f9a916d8642440", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  int Invoke (int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "signatureAfterChange": "  int Invoke (int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "diff": ["-\t\tif (returnValue == null) {", "-\t\t\tCOM.MoveMemory (pVarResult, new int /*long*/[] {0}, C.PTR_SIZEOF);", "-\t\t} else {", "-\t\t\ttry {", "-\t\t\t\tvariant = convertToJS (returnValue);", "-\t\t\t} catch (SWTException e) {", "-\t\t\t\t/* invalid return value type */", "-\t\t\t\tvariant = convertToJS (WebBrowser.CreateErrorString (e.getLocalizedMessage ()));", "-\t\t\t}", "-\t\t\tVariant.win32_copy (pVarResult, variant);", "-\t\t\tvariant.dispose ();", "+\t\ttry {", "+\t\t\tvariant = convertToJS (returnValue);", "+\t\t} catch (SWTException e) {", "+\t\t\t/* invalid return value type */", "+\t\t\tvariant = convertToJS (WebBrowser.CreateErrorString (e.getLocalizedMessage ()));", "+\t\tVariant.win32_copy (pVarResult, variant);", "+\t\tvariant.dispose ();"]}], "num": 27910}