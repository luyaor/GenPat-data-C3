{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96934bf6ad2ee720b2686aa79e224ad1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f707d6e1308662b65089c74c5093c81", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolTip.java", "commitBeforeChange": "d4ba4ba3092d3f6e9ac539271bf860a2604431a5", "commitAfterChange": "9a938e7c0ee004be1af0d3f4d48489427e1ed2b7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["+\t\tint hwnd = parent.handle;", "-\t\tlpti.hwnd = parent.handle;", "+\t\tlpti.hwnd = hwnd;", "+\t\tint maxWidth = 0;", "+\t\tif (OS.WIN32_VERSION < OS.VERSION (4, 10)) {", "+\t\t\tRECT rect = new RECT ();", "+\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "+\t\t\tmaxWidth = (rect.right - rect.left) / 4;", "+\t\t} else {", "+\t\t\tint hmonitor = OS.MonitorFromWindow (hwnd, OS.MONITOR_DEFAULTTONEAREST);", "+\t\t\tMONITORINFO lpmi = new MONITORINFO ();", "+\t\t\tlpmi.cbSize = MONITORINFO.sizeof;", "+\t\t\tOS.GetMonitorInfo (hmonitor, lpmi);", "+\t\t\tmaxWidth = (lpmi.rcWork_right - lpmi.rcWork_left) / 4;", "+\t\t}", "+\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, maxWidth);", "-\t\t\tint hwnd = parent.handle;", "+\t\t\tOS.SendMessage (hwndToolTip, OS.TTM_SETMAXTIPWIDTH, 0, 0x7FFF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e67f2249278437ca0c20c54fb32429f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "e62297ac5a7f8d29257bdbebfb13504b94d2369c", "commitAfterChange": "a1f41c8c77edf2c888ea58b590ee59a91cb857e1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createWidget()", "signatureAfterChange": "  void createWidget()", "diff": ["-\tvisibleCount = (style & SWT.SIMPLE) != 0 ? SIMPLE_VISIBLE_COUNT : VISIBLE_COUNT;", "+\tvisibleCount = VISIBLE_COUNT;", "+\tif ((style & SWT.SIMPLE) == 0) {", "+\t\tint itemHeight = (int)/*64*/OS.SendMessage (handle, OS.CB_GETITEMHEIGHT, 0, 0);", "+\t\tif (itemHeight != OS.CB_ERR && itemHeight != 0) {", "+\t\t\tint maxHeight = 0;", "+\t\t\tif (OS.IsWinCE || OS.WIN32_VERSION < OS.VERSION (4, 10)) {", "+\t\t\t\tRECT rect = new RECT ();", "+\t\t\t\tOS.SystemParametersInfo (OS.SPI_GETWORKAREA, 0, rect, 0);", "+\t\t\t\tmaxHeight = (rect.bottom - rect.top) / 3;", "+\t\t\t} else {", "+\t\t\t\tint /*long*/ hmonitor = OS.MonitorFromWindow (handle, OS.MONITOR_DEFAULTTONEAREST);", "+\t\t\t\tMONITORINFO lpmi = new MONITORINFO ();", "+\t\t\t\tlpmi.cbSize = MONITORINFO.sizeof;", "+\t\t\t\tOS.GetMonitorInfo (hmonitor, lpmi);", "+\t\t\t\tmaxHeight = (lpmi.rcWork_bottom - lpmi.rcWork_top) / 3;", "+\t\t\t}", "+\t\t\tvisibleCount = Math.max(visibleCount, maxHeight / itemHeight);", "+\t\t}", "+\t}"]}], "num": 2579}