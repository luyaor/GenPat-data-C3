{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc41428ca649e6014a1a0b5295c029a5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16db4f4205b567d5087ea830a370f757", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "336c640f21f6098f84d6d6682ff7635ddf66f650", "commitAfterChange": "20f32f00170b2b5fe44ce0d2c73eb51efa55207e", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_CHAR (int wParam, int lParam)", "diff": ["-", "-\t/*", "-\t* Use VkKeyScan () to tell us if the character is a control", "-\t* or a numeric key pad character with Num Lock down.  On", "-\t* international keyboards, the control key may be down when", "-\t* the character is not a control character.  In this case", "-\t* use the last key (computed in WM_KEYDOWN) instead of wParam", "-\t* as the keycode because there is not enough information to", "-\t* compute the keycode in WPARAM.", "-\t*/", "-\tdisplay.lastNull = false;", "-\tif (display.lastKey == 0) {", "-\t\tdisplay.lastKey = wParam;", "-\t\tdisplay.lastVirtual = display.isVirtualKey (wParam);", "-\t} else {", "-\t\tint result = OS.IsWinCE ? 0 : OS.VkKeyScan ((short) wParam);", "-\t\tif (!OS.IsWinCE && (result == -1 || (result >> 8) <= 2)) {", "-\t\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0) {", "-\t\t\t\tdisplay.lastVirtual = display.isVirtualKey (display.lastKey);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tdisplay.lastKey = wParam;", "-\t\t\tdisplay.lastVirtual = false;", "-\t\t}", "-\t}", "+\tdisplay.lastNull = wParam == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf910a96eff7a096c2942e832f8f7034", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e5acbe6c16a694c7f3c29cf4f69a551bf55b4776", "commitAfterChange": "0a7e0762eb6a91569487ff333d468559f2ea1861", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 162, "signatureBeforeChange": "\r \r LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["+\t\r", "-\t* NOTE: This code is avoiding a call to ToAscii ().\r", "+\t* NOTE: This code is used to avoid a call to ToAscii ().\r", "-\t* NOTE: This code is avoiding a call to ToAscii ().\r", "+\t* NOTE: This code is used to avoid a call to ToAscii ().\r", "+\t\t\tdisplay.lastAscii = display.numpadKey (display.lastKey);\r", "-\t\tint newKey = display.asciiKey (wParam);\r", "-\t\tif (newKey != 0) {\r", "+\t\tint asciiKey = display.asciiKey (wParam);\r", "+\t\tif (asciiKey != 0) {\r", "-\t\t\t* To avoid the extra OSxKeyDown, look for VK_SPACE and\r", "+\t\t\t* To avoid the extra SWT.KeyDown, look for VK_SPACE and\r", "-\t\t\tif (newKey == OS.VK_SPACE) {\r", "+\t\t\tif (asciiKey == OS.VK_SPACE) {\r", "-\t\t\tif (newKey != wParam) return null;\r", "+\t\t\tif (asciiKey != wParam) return null;\r", "-\t\tdisplay.lastVirtual = display.isVirtualKey (display.lastKey);\r", "+\t\tdisplay.lastVirtual = display.isVirtualKey (wParam);\r"]}], "num": 27099}