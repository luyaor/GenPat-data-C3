{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b52c6a7fc6b8caac20665708e17fb640", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f657df1530f7cfecbb5021c62ead2d44", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Image.java", "commitBeforeChange": "c8c3b0d56ac96eed1deeae3cbebb069fecdd4ef9", "commitAfterChange": "db54bb9c515ce97cb7d05101b9fa91b631d7bee5", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test_isDisposed()", "signatureAfterChange": "  public void test_isDisposed()", "diff": ["-\twarnUnimpl(\"Test test_isDisposed not written\");", "+\tImage image = new Image(display, 10, 10);", "+\tassertFalse(\":a:\", image.isDisposed());", "+\timage.dispose();", "+\tassertTrue(\":b:\", image.isDisposed());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73dcdf64f25abf6812f6200363ee3713", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree2.java", "commitBeforeChange": "780deeed6b8d04c7f8256f57ee4b8ba670998a62", "commitAfterChange": "f6545bdd05853b79e0ef79ea07a3cd61ab49eba2", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r public void selectAll ()", "signatureAfterChange": "\r public void selectAll ()", "diff": ["-\t/* AW\r", "-\tint hItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_CARET, 0);\r", "-\tif (hItem == 0) {\r", "-\t\thItem = OS.SendMessage (handle, OS.TVM_GETNEXTITEM, OS.TVGN_ROOT, 0);\r", "-\t\tif (hItem != 0) {\r", "-\t\t\tignoreSelect = true;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_SELECTITEM, OS.TVGN_CARET, hItem);\r", "-\t\t\tignoreSelect = false;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_ENSUREVISIBLE, 0, hItem);\r", "-\t\t}\r", "-\t}\r", "-\tTVITEM tvItem = new TVITEM ();\r", "-\ttvItem.mask = OS.TVIF_STATE;\r", "-\ttvItem.state = OS.TVIS_SELECTED;\r", "-\ttvItem.stateMask = OS.TVIS_SELECTED;\r", "-\tint oldProc = OS.GetWindowLong (handle, OS.GWL_WNDPROC);\r", "-\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, TreeProc);\t\r", "-\tfor (int i=0; i<items.length; i++) {\r", "-\t\tTreeItem2 item = items [i];\r", "-\t\tif (item != null) {\r", "-\t\t\ttvItem.hItem = item.handle;\r", "-\t\t\tOS.SendMessage (handle, OS.TVM_SETITEM, 0, tvItem);\r", "-\t\t}\r", "-\t}\r", "-\tOS.SetWindowLong (handle, OS.GWL_WNDPROC, oldProc);\r", "-\t*/\r", "+\tint[] ids= MacUtil.getDataBrowserItems(handle, OS.kDataBrowserNoItem, 0, true);\r", "+\tOS.SetDataBrowserSelectedItems(handle, ids.length, ids, OS.kDataBrowserItemsAssign);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa58ff1115fc121360e3eb9088065681", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "56b9af0b93d689326d79badcde08eeb51e5222c1", "commitAfterChange": "1a5db4d0ac13c4a375470f5649e534ab44f499f8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public static java.util.Vector methodNames()", "signatureAfterChange": "  public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_addTitleListenerLorg_eclipse_swt_browser_TitleListener\");", "+\tmethodNames.addElement(\"test_isBackEnabled\");", "+\tmethodNames.addElement(\"test_isForwardEnabled\");", "+\tmethodNames.addElement(\"test_removeTitleListenerLorg_eclipse_swt_browser_TitleListener\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d219a1176542588d676469ddf3a85561", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "ae99f0b4bc8d3c1329d40c7de3f61daf766f77eb", "commitAfterChange": "6345f266ee0b482d8dbd14748c964c27cfbe5432", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "  public boolean execute (String script)", "signatureAfterChange": "  public boolean execute (String script)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, !isXULRunner190x ? result : null) != 0;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tboolean success;", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (isXULRunner190x) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess = XPCOM.JS_EvaluateUCScriptForPrincipals (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, result) != 0;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tsuccess = XPCOM.JS_EvaluateUCScriptForPrincipals191 (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, 0) != 0;", "+\t\t\t\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals24 (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, result) != 0;", "+\t\t\t\t\t\t\t\t\t\t\tboolean success = XPCOM.JS_EvaluateUCScriptForPrincipals24 (jsLibPath, jsContext, globalJSObject, principals, scriptChars, length, urlbytes, 0, 0) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a55818d03082ed0ea07ed55bae7b28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "55410ab794f2d88c386d97f69b0ab7514aca1475", "commitAfterChange": "3ffd5b1260c5eff1c39525f685edb67ac6d0bbf3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "signatureAfterChange": "  void createRenderers (int columnHandle, int modelIndex, boolean check, int columnStyle)", "diff": ["-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", CHECKED_COLUMN);", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"cell-background-gdk\", BACKGROUND_COLUMN);", "-\t\t", "-\t\t/*", "-\t\t* Feature in GTK. The inconsistent property only exists in GTK 2.2.x.", "-\t\t*/", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.active, CHECKED_COLUMN);", "-\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"inconsistent\", GRAYED_COLUMN);", "+\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.cell_background_gdk, BACKGROUND_COLUMN);", "+\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.inconsistent, GRAYED_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", modelIndex);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"cell-background-gdk\", BACKGROUND_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"text\", modelIndex + 1);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", FOREGROUND_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", BACKGROUND_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"font-desc\", FONT_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, OS.pixbuf, modelIndex);", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 2, 0)) {", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, OS.cell_background_gdk, BACKGROUND_COLUMN);", "+\t}", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.text, modelIndex + 1);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.foreground_gdk, FOREGROUND_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.background_gdk, BACKGROUND_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.font_desc, FONT_COLUMN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de5c490a013a937d9af9b0926ebb67d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "862ee59082724aa4be992e73725c716ef1af3ada", "commitAfterChange": "32dee67340c78bb56a81cc5712fbee188555b83d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  private void drag()", "signatureAfterChange": "  private void drag()", "diff": ["+\tDisplay display = control.getDisplay();", "+\tString key = \"org.eclipse.swt.internal.win32.runMessagesInIdle\"; //$NON-NLS-1$", "+\tObject oldValue = display.getData(key);", "+\tdisplay.setData(key, new Boolean(true));", "+\tdisplay.setData(key, oldValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842e5d2e06ba8bd6af0e20d56345e168", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet217.java", "commitBeforeChange": "db3c279ff984d43542683f55cadcfbb74cb0fc56", "commitAfterChange": "0a2378e11a5bb2cec04699b0bdfbb6c850d99b2f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static void main(String [] args)", "signatureAfterChange": " \t \tpublic static void main(String [] args)", "diff": ["-\t\tFont font = new Font(display, \"Tahoma\", 32, SWT.NORMAL);", "+\t\tFont font = new Font(display, \"Tahoma\", 16, SWT.NORMAL);", "+\t\tbutton.setLocation(styledText.getLocationAtOffset(offset));", "+\t\tcombo.setLocation(styledText.getLocationAtOffset(offset));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bb31a55ac90feda9f856368bad8401", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText.java", "commitBeforeChange": "ce2f35c3f6b1d0b5778f68f011b1d8668d3c5c72", "commitAfterChange": "00bee382096a1807d86474fed7c933116a37eeb8", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 143, "signatureBeforeChange": "\r int getXAtOffset(String line, int lineIndex, int lineOffset)", "signatureAfterChange": "\r int getXAtOffset(String line, int lineIndex, int lineOffset)", "diff": ["-\r", "-\tif (lineOffset == 0) {\r", "+\r\r", "+\tif (lineOffset == 0 && isBidi() == false) {\r", "+\t\tx = textWidth(line, lineIndex, Math.min(line.length(), lineOffset), gc);\r", "+\t\tgc.dispose();\r", "-\t\t\tline += \" \";\r", "-\t\t\tlineOffset = line.length();\r", "+\t\t\tx += lineEndSpaceWidth;\r", "-\t\tx = textWidth(line, lineIndex, lineOffset, gc);\r", "-\t\tgc.dispose();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a16e0e177909b4e79b49cb9facb351b1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Spinner.java", "commitBeforeChange": "48e52aa22d171fa426dd2029dfc554b40adc5e47", "commitAfterChange": "ab395137a9ad910580d0b3cefc99184f207fe751", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void setSelection (int value)", "signatureAfterChange": " public void setSelection (int value)", "diff": ["-\tthis.value = value;", "-\tupdateText();", "+\tvalue = Math.min (Math.max (min, value), max);", "+\tsetSelection (value, true, true, false);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee9996843f6775f46fe4211a684d2c73", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TableItem.java", "commitBeforeChange": "d3e1247b915043f8df04fd5a8211072412a71bab", "commitAfterChange": "35b4cbb3b7bb44a742ea63d0ccddf753c64fd69a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["-\tmethodNames.addElement(\"test_checkSubclass\");", "+\tmethodNames.addElement(\"test_getBackground\");", "+\tmethodNames.addElement(\"test_getBackgroundI\");", "-\tmethodNames.addElement(\"test_getDisplay\");", "+\tmethodNames.addElement(\"test_getForeground\");", "+\tmethodNames.addElement(\"test_getForegroundI\");", "-\tmethodNames.addElement(\"test_getImageI\");", "+\tmethodNames.addElement(\"test_getImageI\");", "+\tmethodNames.addElement(\"test_setBackgroundILorg_eclipse_swt_graphics_Color\");", "+\tmethodNames.addElement(\"test_setBackgroundLorg_eclipse_swt_graphics_Color\");", "+\tmethodNames.addElement(\"test_setForegroundILorg_eclipse_swt_graphics_Color\");", "+\tmethodNames.addElement(\"test_setForegroundLorg_eclipse_swt_graphics_Color\");", "-\tmethodNames.addElement(\"test_setBackgroundLorg_eclipse_swt_graphics_Color\");\t", "-\tmethodNames.addElement(\"test_setForegroundLorg_eclipse_swt_graphics_Color\");\t\t", "-\tmethodNames.addElement(\"test_setImageLorg_eclipse_swt_graphics_Image\");", "+\tmethodNames.addElement(\"test_setImageLorg_eclipse_swt_graphics_Image\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c2fa0d99f1b5274bbe96a6d49f4632", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "19c0222eaad94683f1cf6389644b40fecfc90bf6", "commitAfterChange": "bf219895eeed085ac7691759faac06580d81d416", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 116, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["+", "+\t\t\t\t/* re-install registered functions */", "+\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff7820d89249efa6e282392e15f2ffe8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/carbon/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "93ca003ad15b64a61f119b0100048bf5317e060a", "commitAfterChange": "3f5d62f6e02c5a6154719875b54e87e3186b134e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tint getEnabledAttribute (int nextHandler, int theEvent, int userData)", "signatureAfterChange": " \t \tint getEnabledAttribute (int nextHandler, int theEvent, int userData)", "diff": ["-\t\treturn getAttribute (nextHandler, theEvent, userData);", "+\t\tOS.SetEventParameter (theEvent, OS.kEventParamAccessibleAttributeValue, OS.typeBoolean, 4, new boolean [] {control.isEnabled()});", "+\t\treturn OS.noErr;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062c5e441f290093cab8ba3008bbfae0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "a09068c4a3fafb021dfd710418d4836bad00258d", "commitAfterChange": "f9f9e11aa4eac46a27d734f0803bab92e76b9407", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public void setSelection (boolean selected)", "signatureAfterChange": "\r public void setSelection (boolean selected)", "diff": ["-\tint bits = selected ? OS.BST_CHECKED : OS.BST_UNCHECKED;\r", "-\tOS.SendMessage (handle, OS.BM_SETCHECK, bits, 0);\r", "+\tint flags = selected ? OS.BST_CHECKED : OS.BST_UNCHECKED;\r", "+\t\r", "+\t/*\r", "+\t* Feature in Windows. When BM_SETCHECK is used\r", "+\t* to set the checked state of a radio or check\r", "+\t* button, it sets the WM_TABSTOP style.  This\r", "+\t* is undocumented and unwanted.  The fix is\r", "+\t* to save and restore the window style bits.\r", "+\t*/\r", "+\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);\r", "+\tOS.SendMessage (handle, OS.BM_SETCHECK, flags, 0);\r", "+\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits);\r", "+\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9113bfd2a3a3f3a87827f0badb63396b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "55410ab794f2d88c386d97f69b0ab7514aca1475", "commitAfterChange": "3ffd5b1260c5eff1c39525f685edb67ac6d0bbf3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"active\", CHECKED_COLUMN);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.active, CHECKED_COLUMN);", "-\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, \"inconsistent\", GRAYED_COLUMN);", "+\t\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, checkRenderer, OS.inconsistent, GRAYED_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, \"pixbuf\", PIXBUF_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, pixbufRenderer, OS.pixbuf, PIXBUF_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"text\", TEXT_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"foreground-gdk\", FOREGROUND_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.text, TEXT_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.foreground_gdk, FOREGROUND_COLUMN);", "-\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"background-gdk\", BACKGROUND_COLUMN);", "+\t\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.background_gdk, BACKGROUND_COLUMN);", "-\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, \"font-desc\", FONT_COLUMN);", "+\tOS.gtk_tree_view_column_add_attribute (columnHandle, textRenderer, OS.font_desc, FONT_COLUMN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56cdf50e637fde984b10233dac0b9d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "8e78716f8c1d4debd68c5524c6e6e931e7b5a20b", "commitAfterChange": "ffac98a277fc705bac1c5c2b21da7190c1ffeb0d", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "signatureAfterChange": "  int messageProc (int hwnd, int msg, int wParam, int lParam)", "diff": ["+\t\tcase SWT_SETTINGCHANGED:", "+\t\t\tsettingsChanged = false;", "+\t\t\tupdateFonts ();", "+\t\t\tupdateImages ();", "+\t\t\tsendEvent (SWT.Settings, null);", "+\t\t\tbreak;", "-\t\t\tupdateFonts ();", "-\t\t\tupdateImages ();", "+\t\t\tif (settingsChanged) break;", "+\t\t\tsettingsChanged = true;", "+\t\t\tOS.PostMessage (hwnd, SWT_SETTINGCHANGED, 0 ,0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72651661269d0472a551af94f45ca35f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Button.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");", "+\tmethodNames.addElement(\"test_consistency_EnterSelection\");", "+\tmethodNames.addElement(\"test_consistency_SpaceSelection\");", "+\tmethodNames.addElement(\"test_consistency_MouseSelection\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc3b9afd3a31840aa04229ece90ce49", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/browserexample/BrowserExample.java", "commitBeforeChange": "edf027712ace4f631e81510ba4e7e48e4002a613", "commitAfterChange": "bdc9af7bd4005559e3307c5378c2a7e2de7dbf67", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public static void main(String [] args)", "signatureAfterChange": "  public static void main(String [] args)", "diff": ["+\tshell.setSize(800, 600);", "+\tImage icon = new Image(display, BrowserExample.class.getResourceAsStream(iconLocation));", "+\tshell.setImage(icon);", "+\ticon.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aa5c7b7b41b53669cf094528d610400", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT WebKit/win32/org/eclipse/swt/browser/WebKit.java", "commitBeforeChange": "73bece2a93a84ede732dede8b40b2d8c17119094", "commitAfterChange": "3684f6f68db473f62f594c1867c30510d320282b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  void onDispose ()", "signatureAfterChange": "  void onDispose ()", "diff": ["-\t", "-\tC.free (webViewData);", "-\twebViewWindowHandle = 0;", "-\twebFrameLoadDelegate.html = null;", "-\twebUIDelegate.lastHoveredLinkURL = lastNavigateURL = null;", "-\t", "-\twebView.close ();", "-\twebView.Release ();", "-\twebView = null;", "+", "+\tC.free (webViewData);", "+\twebView.setHostWindow(0);", "+\twebView.setFrameLoadDelegate(0);", "+\twebView.setResourceLoadDelegate(0);", "+\twebView.setUIDelegate(0);", "+\twebView.setPolicyDelegate(0);", "+\twebView.setDownloadDelegate(0);", "+\twebView.Release();", "+\twebView = null;", "+\twebViewWindowHandle = 0;", "+\twebFrameLoadDelegate.html = null;", "+\twebUIDelegate.lastHoveredLinkURL = lastNavigateURL = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaf9de50aca08ac9a183293434b1e14e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_browser_Browser.java", "commitBeforeChange": "6a4b4d184893d93ba51435edb126aa14e72da424", "commitAfterChange": "2c35de82ae65c7619247302d81332aa442fdb466", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public static java.util.Vector methodNames()", "signatureAfterChange": "  public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_addNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener\");", "+\tmethodNames.addElement(\"test_addVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener\");", "+\tmethodNames.addElement(\"test_removeNewWindowListenerLorg_eclipse_swt_browser_NewWindowListener\");", "+\tmethodNames.addElement(\"test_removeVisibilityListenerLorg_eclipse_swt_browser_VisibilityListener\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ae98dd5708c68c50c4fe28f1cdf3eda", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_custom_CCombo.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  public static java.util.Vector methodNames()", "signatureAfterChange": "  public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_MouseSelection\");", "+\tmethodNames.addElement(\"test_consistency_KeySelection\");", "+\tmethodNames.addElement(\"test_consistency_EnterSelection\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd86900d6ae83fa2447e8b3435fb870", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f0b8e44d1987e66ed609b9c00a459c5895a4c2e2", "commitAfterChange": "00ba99318656528b8edd4763d72b06af3b7807bd", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  void setDeferResize (boolean defer)", "signatureAfterChange": "  void setDeferResize (boolean defer)", "diff": ["+\t\t\t/*", "+\t\t\t* Feature in Windows.  When LVM_SETBKCOLOR is used with CLR_NONE", "+\t\t\t* to make the background of the table transparent, drawing becomes", "+\t\t\t* slow.  The fix is to temporarily clear CLR_NONE when redraw is", "+\t\t\t* turned off.", "+\t\t\t*/", "+\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, 0xFFFFFF);", "+\t\t\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, OS.CLR_NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b86569b2a22b562ad323d85020b8f0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Label.java", "commitBeforeChange": "ca1dc097c11cb3dc61bde47fc188deb8bbf21bc1", "commitAfterChange": "9ce3caf7099b0ff9960462568879f32784494b1f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["+\t\tOS.gtk_box_set_child_packing(handle, labelHandle, true, true, 0, OS.GTK_PACK_START);", "+\t\tOS.gtk_box_set_child_packing(handle, imageHandle, true, true, 0, OS.GTK_PACK_START);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44eb522f712c623497dcc9b556791ec9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/WebSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  protected int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "  protected int QueryInterface(int riid, int ppvObject)", "diff": ["-protected int QueryInterface(int riid, int ppvObject) {", "+protected int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iDocHostUIHandler.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDocHostUIHandler.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iDocHostShowUI.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iDocHostShowUI.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iServiceProvider.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iServiceProvider.getAddress()}, OS.PTR_SIZEOF);", "-        COM.MoveMemory(ppvObject, new int[] {iInternetSecurityManager.getAddress()}, 4);", "+        COM.MoveMemory(ppvObject, new int /*long*/[] {iInternetSecurityManager.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iOleCommandTarget.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleCommandTarget.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264d3b2ae45f1ba69b2b03e1467ad7ca", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/motif/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "037e5168473a95763f975d71b44c32103e25ab3b", "commitAfterChange": "7ad48db865c653614ff19222e55f3c399d49ba7c", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "  int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "  int QueryInterface(int riid, int ppvObject)", "diff": ["-int QueryInterface(int riid, int ppvObject) {", "+int /*long*/ QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tXPCOM.memmove(ppvObject, new int[] {supports.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supports.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {weakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {weakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webProgressListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webProgressListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChrome.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChrome.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChromeFocus.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChromeFocus.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {embeddingSiteWindow.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {embeddingSiteWindow.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {interfaceRequestor.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {interfaceRequestor.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {supportsWeakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supportsWeakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {contextMenuListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {contextMenuListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {uriContentListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {uriContentListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {tooltipListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {tooltipListener.getAddress()}, OS.PTR_SIZEOF);", "-\tXPCOM.memmove(ppvObject, new int[] {0}, 4);", "+\tXPCOM.memmove(ppvObject, new int /*long*/[] {0}, 4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39a8b1419685e13692ee375526e038b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet194.java", "commitBeforeChange": "f38bcfed381b5fa0c86787f43104ef12c914c2eb", "commitAfterChange": "19dd2f24a3df5fc3525eeabefcd5483bd920d605", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void run()", "signatureAfterChange": " \t \tpublic void run()", "diff": ["-\t\tfont.dispose();", "+", "+\t\twhite.dispose();", "+\t\tred.dispose();", "+\t\tgreen.dispose();", "+\t\tblue.dispose();", "+\t\tfont.dispose();", "+\t\tdisplay.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da68773f3bf91760842a05d6f443ce2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Tree.java", "commitBeforeChange": "e9cb28cdd789082d90216aefbf144869f8874451", "commitAfterChange": "9950661a32a2c0708a5c63da008a62f5d1fbb428", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test_setTopItemLorg_eclipse_swt_widgets_TreeItem()", "signatureAfterChange": "  public void test_setTopItemLorg_eclipse_swt_widgets_TreeItem()", "diff": ["+\ttree.setSize(50,50);", "+\tshell.open();", "+\tshell.setVisible(false);", "+\t\tshell.setVisible(true);", "+\t} catch (IllegalArgumentException e) {", "+\t} finally {", "+\t\tshell.setVisible (false);", "-\tcatch (IllegalArgumentException e) {", "-\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ef6e3f88a19521cb985233171d83a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "4e64580ba3040d30ac205fe496a0b9154e6fedb9", "commitAfterChange": "e4c265183429e4958328f8b47df3fa656f77f0a1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  private Hashtable loadExtraAttributes(String xmlPath)", "signatureAfterChange": "  private Hashtable loadExtraAttributes(String xmlPath)", "diff": ["-\tDocument doc = getDocument(getFileName(xmlPath) + \".extras\");", "+\tString path = getFileName(xmlPath) + \".extras\";", "+\tFile file = new File(getExtraAttributesDir());", "+\tif (file.exists()) path = new File(file, path).getAbsolutePath();", "+\tDocument doc = getDocument(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d9bd4d5b3e5f34ff4b6055659de6e00", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_ToolBar.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_MouseSelection\");", "+\tmethodNames.addElement(\"test_consistency_SpaceSelection\");", "+\tmethodNames.addElement(\"test_consistency_EnterSelection\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4ed23a639b1da24b3661ebe8e33499f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r void createHandle (int index)", "signatureAfterChange": "\r \r void createHandle (int index)", "diff": ["+\tstate |= HANDLE;\r", "+\t\tOS.Pt_ARG_FLAGS, hasBorder () ? OS.Pt_HIGHLIGHTED : 0, OS.Pt_HIGHLIGHTED,\r", "+\t\tOS.Pt_ARG_TOOLBAR_FLAGS, 0, OS.Pt_TOOLBAR_DRAGGABLE | OS.Pt_TOOLBAR_END_SEPARATOR,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf35a93dca7d855a35aec3186500606", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Combo.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_MouseSelection\");", "+\tmethodNames.addElement(\"test_consistency_KeySelection\");", "+\tmethodNames.addElement(\"test_consistency_EnterSelection\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f04d72f734fdd6e89106a1b3980e758e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "69155e7bef60580890dcbd61eeae4b1c572aec32", "commitAfterChange": "c8944c5553003bda621f5879a7d25b5cde237fbc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  int gtk_button_press_event (int widget, int eventPtr)", "signatureAfterChange": "  int gtk_button_press_event (int widget, int eventPtr)", "diff": ["+\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) return 0;", "+\tif (gdkEvent.type == OS.GDK_3BUTTON_PRESS) return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7f02d00296368ede22262139bcd96a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Display.java", "commitBeforeChange": "3ace99cc2cbeca175428eabbe777b2fc353f5d7d", "commitAfterChange": "38b0d2b8f58957af87b01bf2967bf37e853d55b0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceData()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DeviceData()", "diff": ["-\twarnUnimpl(\"Test test_ConstructorLorg_eclipse_swt_graphics_DeviceData not written\");", "+\tDisplay disp;", "+\tdisp = new Display(null);", "+\tdisp.dispose();", "+\t", "+\tdisp = new Display(new DeviceData());", "+\tdisp.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dcadbd77be4bdf34accac23c5196355", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/common_j2se/org/eclipse/swt/internal/Library.java", "commitBeforeChange": "e2caade797e3c332c08376a34ac5240d4cf3718c", "commitAfterChange": "27c48cfa8f728776395b7eb5b9da8fff0054f4e8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static void loadLibrary (String name, boolean mapName)", "signatureAfterChange": " public static void loadLibrary (String name, boolean mapName)", "diff": ["-\t", "+", "-\tString fileName1 = IS_64 ? System.mapLibraryName (libName1 + SUFFIX_64) : mappedName1;", "-\tString fileName2 = IS_64 ? System.mapLibraryName (libName2 + SUFFIX_64) : mappedName2;", "+\tString fileName1 = mappedName1;", "+\tString fileName2 = mappedName2;", "-\t\tpath = new File (path).getAbsolutePath ();", "+\t\tFile dir = new File (path, IS_64 ? SWTDIR_64 : SWTDIR_32);", "+\t\tif ((dir.exists () && dir.isDirectory ()) || dir.mkdir ()) {", "+\t\t\tpath = dir.getAbsolutePath ();", "+\t\t} else {", "+\t\t\t/* fall back to using the tmp directory */", "+\t\t\tif (IS_64) {", "+\t\t\t\tfileName1 = System.mapLibraryName (libName1 + SUFFIX_64);", "+\t\t\t\tfileName2 = System.mapLibraryName (libName2 + SUFFIX_64);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45759048146768b648aa4c289b0ae57e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Text.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_EnterSelection\");", "+\tmethodNames.addElement(\"test_consistency_Modify\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e14609bbb5df1f408f47723a862f295", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "4cc5ca7de1624c8b539a57f5d1339651e93d2a21", "commitAfterChange": "6c47784c5a7b45e769c078aad8b37a11143d5176", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "  int QueryInterface(int riid, int ppvObject)", "diff": ["-int QueryInterface(int riid, int ppvObject) {", "+int /*long*/ QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tXPCOM.memmove(ppvObject, new int[] {supports.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supports.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {weakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {weakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webProgressListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webProgressListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChrome.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChrome.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChromeFocus.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChromeFocus.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {embeddingSiteWindow.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {embeddingSiteWindow.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {interfaceRequestor.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {interfaceRequestor.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {supportsWeakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supportsWeakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {contextMenuListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {contextMenuListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {uriContentListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {uriContentListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {tooltipListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {tooltipListener.getAddress()}, OS.PTR_SIZEOF);", "-\tXPCOM.memmove(ppvObject, new int[] {0}, 4);", "+\tXPCOM.memmove(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c9fe511c4bbd8694f55f4c4170afa4e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleClientSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " protected int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": " protected int QueryInterface(int riid, int ppvObject)", "diff": ["-protected int QueryInterface(int riid, int ppvObject) {", "+protected int QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iUnknown.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iUnknown.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iAdviseSink.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iAdviseSink.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iOleClientSite.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleClientSite.getAddress()}, OS.PTR_SIZEOF);", "-\t\tCOM.MoveMemory(ppvObject, new int[] {iOleInPlaceSite.getAddress()}, 4);", "+\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleInPlaceSite.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int[] {iOleDocumentSite.getAddress()}, 4);", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] {iOleDocumentSite.getAddress()}, OS.PTR_SIZEOF);", "-\tCOM.MoveMemory(ppvObject, new int[] {0}, 4);", "+\tCOM.MoveMemory(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bcdae5b62ef16338d49c93c17c9e62c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "f52276b47a13eb8fcec76bcefb04024ab452dd6a", "commitAfterChange": "9a0da4bad8e292e85348c13429cac82ce40c2510", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic int internal_addRelationAttributes(int defaultAttributes)", "signatureAfterChange": " \tpublic int internal_addRelationAttributes(int defaultAttributes)", "diff": ["+\t\tif (getTitleAttribute(ACC.CHILDID_SELF) != null) {", "+\t\t\tif (!returnArray.containsObject(OS.NSAccessibilityTitleAttribute)) returnArray.addObject(OS.NSAccessibilityTitleAttribute);", "+\t\t}", "+\t\t", "+\t\tif (getDescriptionAttribute(ACC.CHILDID_SELF) != null) {", "+\t\t\tif (!returnArray.containsObject(OS.NSAccessibilityDescriptionAttribute)) returnArray.addObject(OS.NSAccessibilityDescriptionAttribute);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c039ac6d8705d85cb928f4ec93ec6037", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8e70a2fd959c494ba8bd65fbe0be155b1733c20f", "commitAfterChange": "f735e96c5f274596870c6e7656dfa81cdc99b43a", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t// Embedded Shells are not resizable.", "-\tif (window == null) return;", "+\tif (window == null) {", "+\t\t// Embedded shells aren't movable.", "+\t\tif (move) return;", "+\t\tif (resize) {", "+\t\t\tNSSize frameSize = new NSSize();", "+\t\t\tframeSize.width = width;", "+\t\t\tframeSize.height = height;", "+\t\t\tview.setFrameSize(frameSize);", "+\t\t\treturn;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0209a94cefe8500de1e89bfc5782623a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Scale.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_KeySelection\");", "+\tmethodNames.addElement(\"test_consistency_TroughSelection\");", "+\tmethodNames.addElement(\"test_consistency_ThumbSelection\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a327410ea9954212611402876950f1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_CoolBar.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_consistency_ChevronDragDetect\");", "+\tmethodNames.addElement(\"test_consistency_ChevronMenuDetect\");", "+\tmethodNames.addElement(\"test_consistency_ChevronMouseSelection\");", "+\tmethodNames.addElement(\"test_consistency_DragDetect\");", "+\tmethodNames.addElement(\"test_consistency_MenuDetect\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b498940bd0292e32bcbb8238a64173ba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0068e41ed62132e76c6af5624e9acb501c2ce103", "commitAfterChange": "a92b7d83f56c5c0b9be5674e600ed472d90d401b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DrawableI()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_DrawableI()", "diff": ["-\twarnUnimpl(\"Test test_ConstructorLorg_eclipse_swt_graphics_DrawableI not written\");", "+\tGC testGC = new GC(shell, SWT.LEFT_TO_RIGHT);", "+\ttestGC.dispose();", "+\ttestGC = new GC(shell, SWT.RIGHT_TO_LEFT);", "+\ttestGC.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d825acd5c3a01ee51ef127319f14103", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "5a4ec706c1fb816c9cff4c4e7493b85db9b7b5b8", "commitAfterChange": "30b3672ceb3d2c5d7c5e65c4765952fcea275186", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 152, "signatureBeforeChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotifyChild (NMHDR hdr, int wParam, int lParam)", "diff": ["+\t\t\tif (fullRowSelect) {", "+\t\t\t\tfullRowSelect = false;", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 1, 0);", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETEXTENDEDLISTVIEWSTYLE, OS.LVS_EX_FULLROWSELECT, 0);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d237a1dcf3b7b24eb0b5ff15d9d235", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "181ef5aafcb27f7f61fe43bf6c1fa1706fc883c1", "commitAfterChange": "2eae0716bf6c9ddeb7bded94a67536ce2415398f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void fixShellFocus ()", "signatureAfterChange": "  void fixShellFocus ()", "diff": ["-\t\tOS.XSendEvent (xDisplay, xWindow, false, OS.FocusChangeMask, xEvent);", "+\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.gtk_get_current_event_time ());", "+\t\tOS.gdk_flush ();", "+\t\tOS.XSendEvent (xDisplay, xWindow, false, 0, xEvent);", "+\t\tOS.gdk_flush ();\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e631a9b6144c308f2df9d3fc9eebb9b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d9a401c1467de3c60e82082fb9582487dbeb27cc", "commitAfterChange": "3172b30bf1c6ff0d5e001b36bd7fac99461f15aa", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void sendPaintItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd)", "signatureAfterChange": "  void sendPaintItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd)", "diff": ["-\t\tdata.hPen = OS.CreatePen (OS.PS_SOLID, 0, data.foreground);", "-\t\tdata.hBrush = OS.CreateSolidBrush (data.background);", "+\t} else {", "+\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\tdata.background = OS.GetSysColor (OS.COLOR_3DFACE);", "+\tdata.hPen = OS.CreatePen (OS.PS_SOLID, 0, data.foreground);", "+\tdata.hBrush = OS.CreateSolidBrush (data.background);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddc9ce9ff5f55ed23fbd6ddec568a36", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/win32/org/eclipse/swt/dnd/StyledTextDragAndDropEffect.java", "commitBeforeChange": "a3f5ca78a9a757f67007e90931f528488156c2d8", "commitAfterChange": "d375f5e748c4a26264157578d1a40f1fbb8edb71", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void showDropTargetEffect(int effect, int x, int y)", "signatureAfterChange": " void showDropTargetEffect(int effect, int x, int y)", "diff": ["+\t\t\t\tOS.ImageList_DragShowNolock(false);", "+\t\t\t\tOS.ImageList_DragShowNolock(true);", "+\t\t\t\tOS.ImageList_DragShowNolock(false);", "+\t\t\t\tOS.ImageList_DragShowNolock(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a48c56f6189a466a6e46ecf5a89e64", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " private int Invoke(int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "signatureAfterChange": " private int Invoke(int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr)", "diff": ["-private int Invoke(int dispIdMember, int riid, int lcid, int dwFlags, int pDispParams, int pVarResult, int pExcepInfo, int pArgErr) {", "+private int Invoke(int dispIdMember, int /*long*/ riid, int lcid, int dwFlags, int /*long*/ pDispParams, int /*long*/ pVarResult, int /*long*/ pExcepInfo, int /*long*/ pArgErr) {", "-\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int[] {0}, 4);", "+\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "-\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int[] {0}, 4);", "-\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int[] {0}, 4);", "+\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "+\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "-\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int[] {0}, 4);", "-\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int[] {0}, 4);", "+\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "+\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "-\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int[] {0}, 4);", "-\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo, new int[] {0}, 4);", "+\t\t\tif (pVarResult != 0) COM.MoveMemory(pVarResult, new int /*long*/ [] {0}, OS.PTR_SIZEOF);", "+\t\t\tif (pExcepInfo != 0) COM.MoveMemory(pExcepInfo,new int /*long*/ [] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd1b6ffb4296c6369408c5e06c9e3ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "c121c2748a4de49a1fc5fc5f0f00dd407433664d", "commitAfterChange": "9a1083faceb78eeb5276f04ce023278b2eeef876", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  static String getFunctionName(Method method, Class[] paramTypes)", "signatureAfterChange": "  static String getFunctionName(Method method, Class[] paramTypes)", "diff": ["-\t\tfunction += \"__\";", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tbuffer.append(function);", "+\t\tbuffer.append(\"__\");", "-\t\t\t\tfunction += toC(getTypeSignature(paramType));", "+\t\t\t\tbuffer.append(toC(getTypeSignature(paramType)));", "+\t\treturn buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91f5ccb073e254d88d3aafa71d77ef74", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "d9a401c1467de3c60e82082fb9582487dbeb27cc", "commitAfterChange": "3172b30bf1c6ff0d5e001b36bd7fac99461f15aa", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "signatureAfterChange": "  void sendEraseItemEvent (TableItem item, NMLVCUSTOMDRAW nmcd, int lParam)", "diff": ["-\t\tdata.hPen = OS.CreatePen (OS.PS_SOLID, 0, data.foreground);", "-\t\tdata.hBrush = OS.CreateSolidBrush (data.background);", "+\t} else {", "+\t\tdata.foreground = OS.GetTextColor (hDC);", "+\t\tdata.background = clrSelectionBk = OS.GetSysColor (OS.COLOR_3DFACE);", "+\tdata.hPen = OS.CreatePen (OS.PS_SOLID, 0, data.foreground);", "+\tdata.hBrush = OS.CreateSolidBrush (data.background);", "-\tdrawBackground (hDC, cellRect);", "-\t\tRECT selectionRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, true, fullText, false, hDC);", "-\t\tif (!ignoreDrawSelected && clrSelectionBk != -1) fillBackground (hDC, clrSelectionBk, selectionRect);", "+\t\tRECT clipRect = item.getBounds (nmcd.dwItemSpec, nmcd.iSubItem, true, true, fullText, false, hDC);", "+\t\tif (!ignoreDrawSelected && clrSelectionBk != -1) fillBackground (hDC, clrSelectionBk, clipRect);", "-\t\tOS.ExcludeClipRect (hDC, selectionRect.left, selectionRect.top, selectionRect.right, selectionRect.bottom);", "+\t\tOS.ExcludeClipRect (hDC, clipRect.left, clipRect.top, clipRect.right, clipRect.bottom);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02eff7a50c5be99ecdf8ef16f8fa9df7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/views/MacGeneratorView.java", "commitBeforeChange": "29dd58c05177e1f5fe67319cdfe7adc9b360d9a4", "commitAfterChange": "6d5f70c90f40cfc89a53b384a4ebaab3999aff14", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tprotected IStatus run(IProgressMonitor monitor)", "signatureAfterChange": " \t\tprotected IStatus run(IProgressMonitor monitor)", "diff": ["+\t\t\tmonitor.beginTask(\"Generate\", 2);", "+\t\t\t\tmonitor.worked(1);", "+\t\t\t\tmonitor.worked(1);", "+\t\t\t\tmonitor.done();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d757a2244be7d0cc65be655c8feb492f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6eef1897321cfe779aa47a489d4f424d7e92a291", "commitAfterChange": "51323e01859c51baa6301398c6c3f54347b47cb4", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  void initializeCallbacks ()", "signatureAfterChange": "  void initializeCallbacks ()", "diff": ["+\tsignalIds [Widget.EXPOSE_EVENT_INVERSE] = OS.g_signal_lookup (OS.GTK3 ? OS.draw : OS.expose_event, OS.GTK_TYPE_WIDGET ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2461c87238b47bf2d7addf112658128e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "89324c31b711bdc4a98d00798f7676e50d6a3fcc", "commitAfterChange": "fb64ccb0dae8d040403919d42be4cbef5618d132", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  void drawChevron(GC gc)", "signatureAfterChange": "  void drawChevron(GC gc)", "diff": ["-\t\t\tfd.height -= 1;", "+\t\t\tfd.setHeight(fd.getHeight() - 1);", "-\t\t\tfd.height -= 1;", "+\t\t\tfd.setHeight(fd.getHeight() - 1);", "-\t\t\tfd.height -= 1;", "+\t\t\tfd.setHeight(fd.getHeight() - 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3c2134c75d75901707407718db8c18", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "3d76437e9be9ca8a536ed794ffc0967ce5bb9920", "commitAfterChange": "0b913a59e399c16554e58b7a500e5a396ebf8265", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "  void onDispose (Display display)", "signatureAfterChange": "  void onDispose (Display display)", "diff": ["+\tEnumeration elements = unhookedDOMWindows.elements ();", "+\twhile (elements.hasMoreElements ()) {", "+\t\tLONG ptrObject = (LONG)elements.nextElement ();", "+\t\tnew nsISupports (ptrObject.value).Release ();", "+\t}", "+\tunhookedDOMWindows = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e451710c88dd2eaa08654b70ef55e813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/src/org/eclipse/swt/tools/builders/JNIBuilder.java", "commitBeforeChange": "02bdb0ea64fefd280e52c0f398c34d5310446238", "commitAfterChange": "ae7e62eb27c2f4c5b01081f7bc967f41bdbc16a2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic JNIBuilder()", "signatureAfterChange": " \t \tpublic JNIBuilder()", "diff": ["+\t\t\t\tclazz.sourceDir = clazz.outputDir.substring(0, clazz.outputDir.length() - \"library/\".length());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3323c9159feda527d2a1f4bb2836cd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "fb1da3f03b1857a16fe11c426e420376a5d20e97", "commitAfterChange": "aef76dfd13cf214c26f3af2061d0fb9194e9264a", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 291, "signatureBeforeChange": " \tint doAction(int actionIndex)", "signatureAfterChange": " \tint doAction(int actionIndex)", "diff": ["+\t\tif (event.result == null || !event.result.equals(ACC.OK)) return COM.E_INVALIDARG;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6cb0efbef902bd6782a95792524865d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "ca45fe430ed44fea42c49b26ae3ce2c4c2ad8354", "commitAfterChange": "e8c8fc165f050f47ac2b161e31aa754f630d6915", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "  int widgetStyle ()", "signatureAfterChange": "  int widgetStyle ()", "diff": ["-\tif ((style & SWT.RIGHT) != 0) bits |= OS.TBSTYLE_LIST;", "+\t/*", "+\t* Feature in Windows.  When a tool bar has the style", "+\t* TBSTYLE_LIST and has a drop down item, Window leaves", "+\t* too much padding around the button.  This affects", "+\t* every button in the tool bar and makes the preferred", "+\t* height too big.  The fix is to set the TBSTYLE_LIST", "+\t* when the tool bar contains both text and images.", "+\t* ", "+\t* NOTE: Tool bars with CCS_VERT must have TBSTYLE_LIST", "+\t* set before any item is added or the tool bar does", "+\t* not lay out properly.  The work around does not run", "+\t* in this case.", "+\t*/", "+\tif (OS.COMCTL32_MAJOR < 6 || !OS.IsAppThemed ()) {", "+\t\tif ((style & SWT.RIGHT) != 0) bits |= OS.TBSTYLE_LIST;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5bdac29b8f5405786e32914902d2e28", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleAutomation.java", "commitBeforeChange": "ef390566d4164ae7a1f970e53f45de12a5265cf6", "commitAfterChange": "ee543bcb83fee603dbf808a397bfdb1dd9d1075a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public OleFunctionDescription getFunctionDescription(int index)", "signatureAfterChange": " public OleFunctionDescription getFunctionDescription(int index)", "diff": ["-\tint[] ppFuncDesc = new int[1];", "+\tint /*long*/[] ppFuncDesc = new int /*long*/[1];", "+\t\t//TODO 0- use structures", "-\t\tCOM.MoveMemory(vt, funcdesc.lprgelemdescParam + i * 16 + 4, 2);\t\t\t\t", "+\t\tCOM.MoveMemory(vt, funcdesc.lprgelemdescParam + i * COM.ELEMDESC_sizeof() + OS.PTR_SIZEOF, 2);\t\t\t\t", "-\t\t\tint[] pTypedesc = new int[1];", "-\t\t\tCOM.MoveMemory(pTypedesc, funcdesc.lprgelemdescParam + i * 16, 4);", "+\t\t\tint /*long*/ [] pTypedesc = new int /*long*/ [1];", "+\t\t\tCOM.MoveMemory(pTypedesc, funcdesc.lprgelemdescParam + i * COM.ELEMDESC_sizeof(), OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(vt2, pTypedesc[0] + 4, 2);", "+\t\t\tCOM.MoveMemory(vt2, pTypedesc[0] + OS.PTR_SIZEOF, 2);", "-\t\tCOM.MoveMemory(wParamFlags, funcdesc.lprgelemdescParam + i * 16 + 12, 2);", "+\t\tCOM.MoveMemory(wParamFlags, funcdesc.lprgelemdescParam + i * COM.ELEMDESC_sizeof() + COM.TYPEDESC_sizeof () + OS.PTR_SIZEOF, 2);", "-\t\tCOM.MoveMemory(vt, funcdesc.elemdescFunc_tdesc_union + 4, 2);", "+\t\tCOM.MoveMemory(vt, funcdesc.elemdescFunc_tdesc_union + OS.PTR_SIZEOF, 2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "798f03c94504e1c3e33a8debe5328dba", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Printing/win32/org/eclipse/swt/printing/PrintDialog.java", "commitBeforeChange": "24f13c0536225e19a27c339210b5be3328b9274d", "commitAfterChange": "473d1261e018752ed24da75267f412dbe9b97b9d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public PrinterData open()", "signatureAfterChange": " public PrinterData open()", "diff": ["+\tString key = \"org.eclipse.swt.internal.win32.runMessagesInIdle\"; //$NON-NLS-1$", "+\tObject oldValue = display.getData(key);", "+\tdisplay.setData(key, new Boolean(true));", "+\tdisplay.setData(key, oldValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c9ce77bb3ac95605661279bf0b732b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "6a5289e12cc5f3cfb65b7d7ada5e0a13c5dce2cb", "commitAfterChange": "148a6e167cc83bf5eb877911514b7218031b3950", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void webView_didCommitLoadForFrame(int sender, int frameID)", "signatureAfterChange": "  void webView_didCommitLoadForFrame(int sender, int frameID)", "diff": ["+\t\t/* re-install registered functions */", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5670af68f799aedd9bbf0d2b73a9009c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "c13b22837b30fd90fa15a29afe63a567bc3f87e5", "commitAfterChange": "3a5ece72c305410ded2cd14b2fb9617ac7003ab1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public MacGenerator(String[] xmls)", "signatureAfterChange": " \t public MacGenerator(String[] xmls)", "diff": ["-//\t\tlong start = System.currentTimeMillis();", "-\t\tDocument document = documents[i] = getDocument(xmls[i]);", "+\t\tString xmlPath = xmls[i];", "+\t\tDocument document = documents[i] = getDocument(xmlPath);", "-\t\tHashMap extras = loadExtraAttributes(xmls[i]);", "-\t\tmerge(document, document, extras);", "-//\t\tfor (Iterator iterator = extras.values().iterator(); iterator.hasNext();) {", "-//\t\t\tNode node = (Node) iterator.next();", "-//\t\t\tif (getGen(node)) {", "-//\t\t\t\tNode attribName = getIDAttribute(node);", "-//\t\t\t\tSystem.out.println(node.getNodeName() + \" \" + attribName.getNodeValue());", "-//\t\t\t}", "-//\t\t}", "-//\t\tlong end = System.currentTimeMillis();", "-//\t\tSystem.out.println(\"load=\" + (end - start));", "+\t\tString extrasPath = getFileName(xmlPath) + \".extras\";", "+\t\tFile file = new File(getExtraAttributesDir());", "+\t\tif (file.exists()) extrasPath = new File(file, extrasPath).getAbsolutePath();", "+\t\tmerge(document, getDocument(extrasPath));", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "459eb33ae30424c3b58df5cf42f0c0b4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "6a5289e12cc5f3cfb65b7d7ada5e0a13c5dce2cb", "commitAfterChange": "148a6e167cc83bf5eb877911514b7218031b3950", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "signatureAfterChange": "  int OnStateChange (int aWebProgress, int aRequest, int aStateFlags, int aStatus)", "diff": ["+\tif (registerFunctionsOnState != 0 && ((aStateFlags & registerFunctionsOnState) == registerFunctionsOnState)) {", "+\t\tregisterFunctionsOnState = 0;", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+\t}", "+", "+\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_IS_REQUEST | nsIWebProgressListener.STATE_START;", "+\t\tregisterFunctionsOnState = nsIWebProgressListener.STATE_TRANSFERRING;", "+", "+\t\t\t\t/*", "+\t\t\t\t* When content is being streamed to Mozilla this is the only place", "+\t\t\t\t* where registered functions can be re-installed such that they will", "+\t\t\t\t* be invokable at load time by JS contained in the stream.", "+\t\t\t\t*/", "+\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t}", "+", "-\t\t\t/* re-install registered functions */", "-\t\t\tEnumeration elements = functions.elements ();", "-\t\t\twhile (elements.hasMoreElements ()) {", "-\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "-\t\t\t\texecute (function.functionString);", "-\t\t\t}", "-", "+", "+\t\tregisterFunctionsOnState = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c344126139d9dfedfc7cfbf1a67397a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TableItem.java", "commitBeforeChange": "703a044b1a5b80a00941f0459d87876928e4ea09", "commitAfterChange": "1ca579e43607dd5f2e469494bf1fdfd408ebdbc6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 36, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_getFont\");", "+\tmethodNames.addElement(\"test_getFontI\");", "+\tmethodNames.addElement(\"test_setFontILorg_eclipse_swt_graphics_Font\");", "+\tmethodNames.addElement(\"test_setFontLorg_eclipse_swt_graphics_Font\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f2f2c25571c47ac7b89b1a2f2f9753", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "6e9c8ca44cece95e36d0afd675d022053f6a0595", "commitAfterChange": "9dcb597e3cede8bb6f5ff089b18c040fc9ceb86b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r \r boolean translateAccelerator (MSG msg)", "signatureAfterChange": "\r \r boolean translateAccelerator (MSG msg)", "diff": ["+\tif (super.translateAccelerator (msg)) return true;\r", "+\t\r", "-\t* in the normal fashion.\r", "+\t* in the normal fashion.  Note that we must call TranslateMessage\r", "+\t* in order to process accented keys properly.\r", "+\t\tOS.TranslateMessage (msg);\r", "+\t\t\tcase OS.WM_IME_CHAR:\tWM_IME_CHAR (msg.wParam, msg.lParam); break;\r", "+\t\tOS.DispatchMessage (msg);\r", "+\t\treturn true;\r", "-\treturn super.translateAccelerator (msg);\r", "+\treturn false;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e877cdf673aa45eb4018afb3f06064f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "7fa3888fb438e85889330953c3d73c3162f47bb0", "commitAfterChange": "20158bd82a3197f62dbbad87bfa8ec3631613ea7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  int gtk_focus_out_event (int widget, int event)", "signatureAfterChange": "  int gtk_focus_out_event (int widget, int event)", "diff": ["+\tif (display.lastFocusChangeEvent.mode == OS.NotifyGrab || display.lastFocusChangeEvent.mode == OS.NotifyWhileGrabbed) return 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1cb94ebe51ab4ac17d75dd4162bf2c6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Shell.java", "commitBeforeChange": "816386e64aeae693060e609a899b5acfcdee6dfa", "commitAfterChange": "21635e16e1b07b1cd492538d9ea1c3c844a41ddf", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\t//these must be run before the shell tests because of pr 79504", "+\tmethodNames.addElement(\"test_consistency_Iconify\");", "+\tmethodNames.addElement(\"test_consistency_Close\");", "+\tmethodNames.addElement(\"test_consistency_Dispose\");", "+\tmethodNames.addElement(\"test_consistency_Open\");", "+\tmethodNames.addAll(Test_org_eclipse_swt_widgets_Decorations.methodNames()); // add superclass method names", "+\t", "-\tmethodNames.addAll(Test_org_eclipse_swt_widgets_Decorations.methodNames()); // add superclass method names"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab2bfe4771c11229481c7c2227fdc813", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "bbd6898a6185aaf7dd7433ecd7166fa8b9a5a9c7", "commitAfterChange": "e2070efb6eb5bd592e5b9c328e5498a0339ef790", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void setAlignment (int alignment)", "signatureAfterChange": " public void setAlignment (int alignment)", "diff": ["+\tint hwnd = parent.handle;", "+\tLVCOLUMN lvColumn = new LVCOLUMN ();", "+\tlvColumn.mask = OS.LVCF_FMT | OS.LVCF_IMAGE;", "+\tOS.SendMessage (hwnd, OS.LVM_GETCOLUMN, index, lvColumn);", "+\tlvColumn.fmt &= ~OS.LVCFMT_JUSTIFYMASK;", "-\tint hwnd = parent.handle;", "-\tLVCOLUMN lvColumn = new LVCOLUMN ();", "-\tlvColumn.mask = OS.LVCF_FMT;", "-\tlvColumn.fmt = fmt;", "+\tlvColumn.fmt |= fmt;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62567c69a9f7c9d5e726e85be7e6786f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "10f7a2f5f11f39d774c23c29e49d1ae155e89648", "commitAfterChange": "9cf5aeadb5a89893a32b1a67c49fa9d65dc5c460", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void setAllowedFileType (String fileType)", "signatureAfterChange": "  void setAllowedFileType (String fileTypes)", "diff": ["-void setAllowedFileType (String fileType) {", "-\tif (fileType == null) return;", "-\tif (fileType.equals(\"*\") || fileType.equals(\"*.*\")) {", "-\t\tpanel.setAllowedFileTypes(null);", "-\t\treturn;", "-\t}", "-\tif (fileType.startsWith(\"*.\")) {", "-\t\tfileType = fileType.substring(2);", "-\t} else if (fileType.startsWith(\".\")) {", "-\t\tfileType = fileType.substring(1);", "-\t}", "+void setAllowedFileType (String fileTypes) {", "+\tif (fileTypes == null) return;", "+\t", "+\tStringTokenizer fileTypesToken = new StringTokenizer(fileTypes, String.valueOf(EXTENSION_SEPARATOR));", "-\tallowedFileTypes.addObject(NSString.stringWith(fileType));", "+", "+\twhile(fileTypesToken.hasMoreTokens()) {", "+\t\tString fileType = fileTypesToken.nextToken();", "+\t\t", "+\t\tif (fileType.equals(\"*\") || fileType.equals(\"*.*\")) {", "+\t\t\tpanel.setAllowedFileTypes(null);", "+\t\t\treturn;", "+\t\t}", "+\t\tif (fileType.startsWith(\"*.\")) {", "+\t\t\tfileType = fileType.substring(2);", "+\t\t} else if (fileType.startsWith(\".\")) {", "+\t\t\tfileType = fileType.substring(1);", "+\t\t}", "+\t\tallowedFileTypes.addObject(NSString.stringWith(fileType));", "+\t}", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e04639cfb5ed5ff28fb5c7361d152240", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "d8d3e8f612b1662e51aaeb1aba1b797cad6504c1", "commitAfterChange": "a2a2b61ca97ad1454fa39c9d961ae445a63a1a20", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  int accessibilityAttributeValue (int id, int sel, int arg0)", "signatureAfterChange": "  int accessibilityAttributeValue (int id, int sel, int arg0)", "diff": ["+\t} else if (nsAttributeName.isEqualToString(OS.NSAccessibilityEnabledAttribute)) {", "+\t\treturn NSNumber.numberWithBool(isEnabled()).id;", "+\t} else if (nsAttributeName.isEqualToString(OS.NSAccessibilityFocusedAttribute)) {", "+\t\tboolean focused = (view.id == view.window().firstResponder().id);", "+\t\treturn NSNumber.numberWithBool(focused).id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38bf0cd2d4702e43abefbaa6f82d7d3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "1dbfbf139723ccff851bd373086d24a81d3b6a39", "commitAfterChange": "73f19fb22f36296b2b1d319322bf8eada9b8a2c1", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void setSize (Point size)", "signatureAfterChange": " public void setSize (Point size)", "diff": ["-\tsetSize (size.x, size.y);", "+\tsetBounds (0, 0, Math.max (0, size.x), Math.max (0, size.y), false, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f003b2a5120ee0e10bea4aca67c5146", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "19c0222eaad94683f1cf6389644b40fecfc90bf6", "commitAfterChange": "bf219895eeed085ac7691759faac06580d81d416", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  void didFinishLoadForFrame(int frame)", "signatureAfterChange": "  void didFinishLoadForFrame(int frame)", "diff": ["+", "+\t\t/* re-install registered functions */", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f522e5902402e7b72ffcecf1eb8557dc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "673aebf832432071bd55ea719a547581e206f776", "commitAfterChange": "680ba5db6dfec388478bf495dd25549c8eb8287a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected int getLicenseInfo(GUID clsid)", "signatureAfterChange": " protected int getLicenseInfo(GUID clsid)", "diff": ["-\ttry {", "-\t\tif (unknown.QueryInterface(COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "-\t\t\treturn 0;", "-\t\t}", "-\t\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "-\t\ttry {", "-\t\t\tLICINFO licinfo = new LICINFO();", "-\t\t\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "-\t\t\t\treturn 0;", "-\t\t\t}", "-\t\t\tint /*long*/[] pBstrKey = new int /*long*/[1];", "-\t\t\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "-\t\t\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "-\t\t\t\t\treturn pBstrKey[0];", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn 0;", "-\t\t} finally {", "-\t\t\tclassFactory.Release();", "-\t\t}", "-\t} finally {", "+\tif (unknown.QueryInterface(COM.IIDIClassFactory2, ppvObject) != COM.S_OK) {", "+\t\treturn 0;", "+\tIClassFactory2 classFactory = new IClassFactory2(ppvObject[0]);", "+\tLICINFO licinfo = new LICINFO();", "+\tif (classFactory.GetLicInfo(licinfo) != COM.S_OK) {", "+\t\tunknown.Release();\t", "+\t\tclassFactory.Release();", "+\t\treturn 0;", "+\t}", "+\tint /*long*/[] pBstrKey = new int /*long*/[1];", "+\tif (licinfo != null && licinfo.fRuntimeKeyAvail) {", "+\t\tif (classFactory.RequestLicKey(0, pBstrKey) == COM.S_OK) {", "+\t\t\tunknown.Release();\t", "+\t\t\tclassFactory.Release();", "+\t\t\treturn pBstrKey[0];", "+\t\t}", "+\t}", "+\tunknown.Release();\t", "+\tclassFactory.Release();", "+\treturn 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa0425209a8c5cd63e842c2184d3e41", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "2eb0d57b46ef2fa0c4a9cfafa527354a559190cd", "commitAfterChange": "4953e90353cf03b7e9778bd8ad03e777e563314d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void copyArea(Image image, int x, int y)", "signatureAfterChange": " public void copyArea(Image image, int x, int y)", "diff": ["+\t\tCairo.cairo_push_group(cairo);", "+\t\t\tCairo.cairo_destroy(cairo);", "+\t\tCairo.cairo_pop_group_to_source(cairo);", "+\t\tCairo.cairo_paint(cairo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e8da352010aa21a99d320c54a7ad8a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "16073c4e564c7366d752dbde22c03f39ce35df1d", "commitAfterChange": "670eaa5d02be2ac2a196992c0c95d450bf3c80ff", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "signatureAfterChange": " int XFocusChange (int w, int client_data, int call_data, int continue_to_dispatch)", "diff": ["+\tif (xEvent.type == OS.FocusIn && xEvent.detail == OS.NotifyInferior) {", "+\t\tif (focusProxy != 0) {", "+\t\t\tint xWindow = OS.XtWindow (focusProxy);", "+\t\t\tint xDisplay = OS.XtDisplay (focusProxy);", "+\t\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "+\t\t}", "+\t}", "-\t\t\t\t\tif (focusProxy != 0) {", "-\t\t\t\t\t\tint xWindow = OS.XtWindow (focusProxy);", "-\t\t\t\t\t\tint xDisplay = OS.XtDisplay (focusProxy);", "-\t\t\t\t\t\tOS.XSetInputFocus (xDisplay, xWindow, OS.RevertToParent, OS.CurrentTime);", "-\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172c981a86e6dc1239a8994f5884ed4a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "251573b429c7dd5879fb4172e3933c43addd3b8a", "commitAfterChange": "f4fbaa8951a60c9cd930352a1efdcfde298e9db9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public ToolBar (Composite parent, int style)", "signatureAfterChange": " public ToolBar (Composite parent, int style)", "diff": ["+\t* ", "+\t* NOTE: The CCS_VERT style cannot be applied when the", "+\t* widget is created because of this conflict.", "+\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "+\t\tOS.SetWindowLong (handle, OS.GWL_STYLE, bits | OS.CCS_VERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04de1b0a4e743af40e70f1bbced6d6bd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/common/org/eclipse/swt/browser/WebBrowser.java", "commitBeforeChange": "e4444cb36d5834d0313618b3b122a9e4d7333be3", "commitAfterChange": "350f976a03a5b2d274f09a2fee2918329c57e200", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void destroyFunction (BrowserFunction function)", "signatureAfterChange": "  public void destroyFunction (BrowserFunction function)", "diff": ["-\texecute (getDeleteFunctionString (function.name));", "+\tString deleteString = getDeleteFunctionString (function.name); ", "+\tStringBuffer buffer = new StringBuffer (\"for (var i = 0; i < frames.length; i++) {try {frames[i].eval(\\\"\"); //$NON-NLS-1$", "+\tbuffer.append (deleteString);", "+\tbuffer.append (\"\\\");} catch (e) {}}\"); //$NON-NLS-1$", "+\texecute (buffer.toString ());", "+\texecute (deleteString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3bf76218854aa836771088be09f191", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "1fe35fc97a96bb681fc8e1538ccb42b41e2391ac", "commitAfterChange": "479daafcf8fd589f7842f28b15e853de0f1dfefd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " void destroyDisplay ()", "signatureAfterChange": " void destroyDisplay ()", "diff": ["+\t// dispose Callbacks", "+\tIterator iter= fCallbacks.iterator();", "+\twhile (iter.hasNext()) {", "+\t\tCallback cb= (Callback) iter.next();", "+\t\tcb.dispose();", "+\t}", "+\tfCallbacks= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd24e5303422dcfcf95b27d73087bf8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["-\tOS.GetControlBounds (handle, controlRect);", "+\tif (!OS.HIVIEW) OS.GetControlBounds (handle, controlRect);", "+\tOS.CGContextSaveGState (gc.handle);", "+\tOS.CGContextRestoreGState (gc.handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad2c4cda5b6f6550afeb82930fb2d675", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "eb69d8ee300770e6dab41b174fcbe32bc6ff3664", "commitAfterChange": "6acf1851f3c6b366f64d9299cba476715a98fb74", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  int processActivate (int int0, int int1, int int2)", "signatureAfterChange": "  int processActivate (int int0, int int1, int int2)", "diff": ["-\tif (OS.GDK_EVENT_TYPE (int0) == OS.GDK_FOCUS_CHANGE) {", "-\t\thasFocus = OS.gdk_event_focus_get_in (int0);", "+\tGdkEvent gdkEvent = new GdkEvent ();", "+\tOS.memmove (gdkEvent, int0, GdkEvent.sizeof);", "+\tif (gdkEvent.type == OS.GDK_FOCUS_CHANGE) {", "+\t\tGdkEventFocus focusEvent = new GdkEventFocus ();", "+\t\tOS.memmove (focusEvent, int0, GdkEventFocus.sizeof);", "+\t\thasFocus = focusEvent.in != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc4612f865b5e55cf8306124e24780f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "45ef21343f042c253c486e154386fddf347c970a", "commitAfterChange": "11ef00f2778c1377822b96c4e76dc2ae3ad98f53", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+\t\t\t\t\t\t\t\t/* re-install registered functions iff needed */", "+\t\t\t\t\t\t\t\tIE ie = (IE)browser.webBrowser;", "+\t\t\t\t\t\t\t\tif (ie.installFunctionsOnDocumentComplete) {", "+\t\t\t\t\t\t\t\t\tie.installFunctionsOnDocumentComplete = false;", "+\t\t\t\t\t\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\t\t\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\t\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\t\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+", "+\t\t\t\t\t\t\t/*", "+\t\t\t\t\t\t\t* When a Browser is opened in a new window, BrowserFunctions that are", "+\t\t\t\t\t\t\t* installed in it in the NavigateComplete2 callback are not retained", "+\t\t\t\t\t\t\t* through the loading of the page.  The workaround is to re-install", "+\t\t\t\t\t\t\t* the functions when DocumentComplete is received. ", "+\t\t\t\t\t\t\t*/", "+\t\t\t\t\t\t\tbrowser.installFunctionsOnDocumentComplete = true;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765a1b92f26ae14320a6306de8ff5b92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "477aa9eda338f67199b48e89b29378f8afcddb73", "commitAfterChange": "a187354d39a8bd0bfd0b035b8db41e0943d6b46f", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": " public boolean setParent (Composite parent)", "signatureAfterChange": " public boolean setParent (Composite parent)", "diff": ["-\tOS.gtk_widget_reparent (topHandle, newParent);", "+\t", "+\t/*", "+\t* Bug in GTK.  GTK will segment fault if gtk_widget_reparent() is called", "+\t* on a toolbar or on a widget hierarchy containing a toolbar.  The fix is", "+\t* to reparent by removing the widget from its current parent and adding it", "+\t* to the new parent.", "+\t*/", "+//\tOS.gtk_widget_reparent(topHandle, newParent);", "+\tOS.g_object_ref (topHandle);", "+\tOS.gtk_container_remove (OS.gtk_widget_get_parent (topHandle), topHandle);", "+\tOS.gtk_container_add (newParent, topHandle);", "+\tOS.g_object_unref (topHandle);", "+\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ca8db01fe68a1daddc874f3a72e151", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0068e41ed62132e76c6af5624e9acb501c2ce103", "commitAfterChange": "a92b7d83f56c5c0b9be5674e600ed472d90d401b", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test_isDisposed()", "signatureAfterChange": "  public void test_isDisposed()", "diff": ["-\twarnUnimpl(\"Test test_isDisposed not written\");", "+\tGC testGC = new GC(shell);", "+\tassertFalse(testGC.isDisposed());", "+\ttestGC.dispose();", "+\tassertTrue(testGC.isDisposed());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e704ce3f42a869f1c965cda0a1305f20", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "2a454fe804b800bda7308985ff1c504f23c6c2df", "commitAfterChange": "73435a29b3d514274292dbf94b7cddcffcdcd978", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "signatureAfterChange": "  int drawItemProc (int browser, int id, int property, int itemState, int theRect, int gdDepth, int colorDevice)", "diff": ["-\tOS.GetControlBounds (handle, controlRect);", "+\tif (!OS.HIVIEW) OS.GetControlBounds (handle, controlRect);", "+\tOS.CGContextSaveGState (gc.handle);", "+\tOS.CGContextRestoreGState (gc.handle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58ede0740160231858e89230cf2ab08c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "3fb799dcaa7d449679ed92f9829fbed85aa6fd1d", "commitAfterChange": "6c0e3d76ce668620fd159ac504e2b5d9a48852be", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 73, "signatureBeforeChange": "\r \r void sendPaintEvent (int damage)", "signatureAfterChange": "\r \r void sendPaintEvent (int damage)", "diff": ["-\tEvent event = new Event ();\r", "-\tevent.x = tile.rect_ul_x;\r", "-\tevent.y = tile.rect_ul_y;\r", "-\tevent.width = tile.rect_lr_x - tile.rect_ul_x + 1;\r", "-\tevent.height = tile.rect_lr_y - tile.rect_ul_y + 1;\r", "-\tRegion region = Region.photon_new (tile.next);\r", "-\tGC gc = event.gc = new GC (this);\r", "-\tgc.setClipping (region);\r", "-\tsendEvent (SWT.Paint, event);\r", "-\tgc.dispose ();\r", "+\tif (tile.rect_ul_x != tile.rect_lr_x || tile.rect_ul_y != tile.rect_lr_y) {\r", "+\t\tEvent event = new Event ();\r", "+\t\tevent.x = tile.rect_ul_x;\r", "+\t\tevent.y = tile.rect_ul_y;\r", "+\t\tevent.width = tile.rect_lr_x - tile.rect_ul_x + 1;\r", "+\t\tevent.height = tile.rect_lr_y - tile.rect_ul_y + 1;\r", "+\t\tRegion region = Region.photon_new (tile.next);\r", "+\t\tGC gc = event.gc = new GC (this);\r", "+\t\tgc.setClipping (region);\r", "+\t\tsendEvent (SWT.Paint, event);\r", "+\t\tgc.dispose ();\r", "+\t\tevent.gc = null;\r", "+\t}\r", "-\tevent.gc = null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a760491104115116c76e3886cf53d4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "b2738a28cb5231d346c6c5441b6e2379f19da0e4", "commitAfterChange": "7757f31e4a8851faa85deefdaf3e3c6340230705", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "signatureAfterChange": " int XmNmodifyVerifyCallback (int w, int client_data, int call_data)", "diff": ["-\t\t\tString prefix = hiddenText.substring (0, textVerify.startPos);", "-\t\t\tString suffix = hiddenText.substring (textVerify.endPos, hiddenText.length ());", "-\t\t\thiddenText = prefix + newText + suffix;", "+\t\t\tString string = new String (hiddenText);", "+\t\t\tString prefix = string.substring (0, textVerify.startPos);", "+\t\t\tString suffix = string.substring (textVerify.endPos, string.length ());", "+\t\t\tstring = prefix + newText + suffix;", "+\t\t\thiddenText = new char [string.length()];", "+\t\t\tstring.getChars(0, hiddenText.length, hiddenText, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f82efde995283ac3f7422da65b774f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TrayIcon.java", "commitBeforeChange": "014ccfab9299e9121a0900d3e425e363ac424186", "commitAfterChange": "fdeb343dae86600576d32a3292d86eb8a0d49e6c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r int gtk_button_press_event (int widget, int eventPtr)", "signatureAfterChange": "\r \r int gtk_button_press_event (int widget, int eventPtr)", "diff": ["-\tif (gdkEvent.button == 3) {\r", "+\tif (gdkEvent.type == OS.GDK_3BUTTON_PRESS) return 0;\r", "+\tif (gdkEvent.button == 3 && gdkEvent.type == OS.GDK_BUTTON_PRESS) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a0e3916e1627f44622aec06209319ee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "d3d652140ae5af0f278d4f42c7e1523fbb5c7e80", "commitAfterChange": "2ee6b2a679071063d3004657ab5b4f376f59e669", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 64, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["-\tmethodNames.addElement(\"test_copyAreaLorg_eclipse_swt_graphics_ImageII\");", "+\tmethodNames.addElement(\"test_ConstructorLorg_eclipse_swt_graphics_DrawableI\");", "+\tmethodNames.addElement(\"test_copyAreaLorg_eclipse_swt_graphics_ImageII\");", "+\tmethodNames.addElement(\"test_drawTextLjava_lang_StringIII\");", "+\tmethodNames.addElement(\"test_getStyle\");", "+\tmethodNames.addElement(\"test_textExtentLjava_lang_StringI\");", "+\tmethodNames.addElement(\"test_win32_newILorg_eclipse_swt_graphics_GCData\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24cc29634aca60364e8c2dc273d2e1e6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "60e063015eacaca5ba9f8deaaccd2b8b25d0abbd", "commitAfterChange": "07d315235a57459b111693c1febc7ddd4ed1d440", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void setSelection (Point selection)", "signatureAfterChange": " public void setSelection (Point selection)", "diff": ["-\t/*OS.gtk_editable_set_position (handle, selection.x);", "-\tOS.gtk_editable_select_region (handle, selection.x, selection.y);*/", "+\tOS.gtk_editable_set_position (handle, selection.x);", "+\tOS.gtk_editable_select_region (handle, selection.x, selection.y);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d5465d8b7a058942f0e854a9764ad0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Link.java", "commitBeforeChange": "111f07e445c6fbc435cd4eff0e9eb3a65f3082dc", "commitAfterChange": "c01029f869b4bfb2ed8f6ef83d44c2a1a442a495", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["+\tscrollWidget.setAutoresizesSubviews (true);", "+\tNSSize size = new NSSize ();", "+\tsize.width = size.height = Float.MAX_VALUE;", "+\twidget.setMaxSize (size);", "-\twidget.textContainer().setLineFragmentPadding(0);", "+\twidget.textContainer().setLineFragmentPadding(2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1dd1052bed1402e1d377f8eb448584", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/TreeColumn.java", "commitBeforeChange": "1a635cd453498e0bde182d23d234c150cf7c3b49", "commitAfterChange": "667736f9e031edca5f82dab923bf555505ef670d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  void setSortDirection (int direction)", "signatureAfterChange": "  void setSortDirection (int direction)", "diff": ["-\t\t\tint hwnd = parent.handle;", "-\t\t\tparent.forceResize ();", "-\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "-\t\t\tOS.GetClientRect (hwnd, rect);", "-\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "-\t\t\trect.left = headerRect.left;", "-\t\t\trect.right = headerRect.right;", "-\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\tif (OS.COMCTL32_MAJOR >= 6 && OS.IsAppThemed ()) {", "+\t\t\t\tint hwnd = parent.handle;", "+\t\t\t\tparent.forceResize ();", "+\t\t\t\tRECT rect = new RECT (), headerRect = new RECT ();", "+\t\t\t\tOS.GetClientRect (hwnd, rect);", "+\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEMRECT, index, headerRect);", "+\t\t\t\trect.left = headerRect.left;", "+\t\t\t\trect.right = headerRect.right;", "+\t\t\t\tOS.InvalidateRect (hwnd, rect, true);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0189de9f289e7e0f421098cc83f7b57", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "f0b8e44d1987e66ed609b9c00a459c5895a4c2e2", "commitAfterChange": "00ba99318656528b8edd4763d72b06af3b7807bd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "signatureAfterChange": "  int callWindowProc (int hwnd, int msg, int wParam, int lParam, boolean forceSelect)", "diff": ["-\t\t\tif (redraw) OS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t\tif (redraw) {", "+\t\t\t\t/*", "+\t\t\t\t* Feature in Windows.  When LVM_SETBKCOLOR is used with CLR_NONE", "+\t\t\t\t* to make the background of the table transparent, drawing becomes", "+\t\t\t\t* slow.  The fix is to temporarily clear CLR_NONE when redraw is", "+\t\t\t\t* turned off.", "+\t\t\t\t*/", "+\t\t\t\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, 0, 0);", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, 0xFFFFFF);", "+\t\t\t}", "+\t\t\t\tOS.SendMessage (handle, OS.LVM_SETBKCOLOR, 0, OS.CLR_NONE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00deb4d4b9ec2b10565061668ac17e8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "ea7476519b9e21c42e4d4550669901e532bedcab", "commitAfterChange": "76b33e0e494479a9009365afe16385a154f070b7", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 202, "signatureBeforeChange": " void handleResize(Event event)", "signatureAfterChange": " void handleResize(Event event)", "diff": ["-\t", "-\t\tif (oldWidth != clientAreaWidth) {\t", "-\t\t\twordWrapResize(oldWidth);", "+\t\tif (oldWidth != clientAreaWidth) {", "+\t\t\tlineCache.reset(0, content.getLineCount(), false);", "+\t\t\tlineCache.calculateClientArea();", "+\t\t\tsuper.redraw();", "-//\t\tint lineCount = content.getLineCount();", "-//\t\tint oldBottomIndex = topIndex + oldHeight / lineHeight;", "-//\t\tint newItemCount = Compatibility.ceil(clientAreaHeight - oldHeight, lineHeight);", "-//\t\toldBottomIndex = Math.min(oldBottomIndex, lineCount);", "-//\t\tnewItemCount = Math.min(newItemCount, lineCount - oldBottomIndex);", "-//\t\tlineCache.calculate(oldBottomIndex, newItemCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55457cf71dc21d1f742200f8f543483", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "786e888f975fa4609ddb0fdf0fa984397ac5a645", "commitAfterChange": "0a2e257ea686dca1a8bbf6ee0808aa1674462044", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tvoid createButtonSelected(SelectionEvent event)", "signatureAfterChange": " \tvoid createButtonSelected(SelectionEvent event)", "diff": ["+\t\t\ttextWidget.append (\"getFilterPath() =\" + dialog.getFilterPath() + Text.DELIMITER);", "+\t\t\ttextWidget.append (\"getFileName() =\" + dialog.getFileName() + Text.DELIMITER);", "-\t\t\tif ((dialog.getStyle () & SWT.MULTI) != 0) {", "-\t\t\t\tString [] files = dialog.getFileNames ();", "-\t\t\t\tfor (int i=0; i<files.length; i++) {", "-\t\t\t\t\ttextWidget.append (\"\\t\" + files [i] + Text.DELIMITER);", "-\t\t\t\t}", "+\t\t\tString [] files = dialog.getFileNames ();", "+\t\t\tfor (int i=0; i<files.length; i++) {", "+\t\t\t\ttextWidget.append (\"\\t\" + files [i] + Text.DELIMITER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f892e1627de3f7dfb9ec001c4ed131", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/common/org/eclipse/swt/browser/Mozilla.java", "commitBeforeChange": "ecb69c08b9235bc129576d3977f3a0bd046ee24f", "commitAfterChange": "b6d6821dbf6549d38822925640020a0364b710ae", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  void onDispose (Display display)", "signatureAfterChange": "  void onDispose (Display display)", "diff": ["+\telements = functions.elements ();", "+\twhile (elements.hasMoreElements ()) {", "+\t\tBrowserFunction function = ((BrowserFunction)elements.nextElement ());", "+\t\tAllFunctions.remove (new Integer (function.index));", "+\t\tfunction.dispose (false);", "+\t}", "+\tfunctions = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017663a2ca999fa3de70bdd9d346095e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "6098d8fe89a4e89a038cacb6e75bf5bb8c188a13", "commitAfterChange": "77759d3ca4f6dce1af6dfc45d9d6664c9ae312fc", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void setExpanded (boolean value)", "signatureAfterChange": " public void setExpanded (boolean value)", "diff": ["-\t\tparent.update ();", "-\t\tGC gc = new GC (parent);", "-\t\tgc.copyArea (0, startY, clientArea.width, clientArea.height - startY, 0, y);", "-\t\tgc.dispose ();", "-\t\tint redrawY = clientArea.height - startY + y;", "-\t\tparent.redraw (0, redrawY, clientArea.width, clientArea.height - redrawY, false);", "+\t\tif (y < clientArea.height && 0 < startY) {\t/* determine whether any some visual update is actually needed */", "+\t\t\tparent.update ();", "+\t\t\tGC gc = new GC (parent);", "+\t\t\tgc.copyArea (0, startY, clientArea.width, clientArea.height - startY, 0, y);", "+\t\t\tgc.dispose ();", "+\t\t\tint redrawY = clientArea.height - startY + y;", "+\t\t\tparent.redraw (0, redrawY, clientArea.width, clientArea.height - redrawY, false);", "+\t\t}", "+\t\t/* ", "+\t\t * If all collapsed items are above the viewport then adjust topIndex and", "+\t\t * the vertical scrollbar so that the current viewport items will not change.", "+\t\t */", "+\t\tint bottomIndex = availableIndex + descendents.length - 1;", "+\t\tif (bottomIndex < parent.topIndex) {", "+\t\t\tparent.topIndex = parent.topIndex - descendents.length + 1;", "+\t\t\tparent.getVerticalBar ().setSelection (parent.topIndex);", "+\t\t}", "+\t\t", "-\t\tint oldTopIndex = parent.topIndex;", "-\t\t} else {", "-\t\t\t/* ", "-\t\t\t * If all collapsed items are above the viewport then adjust topIndex and", "-\t\t\t * the vertical scrollbar so that the current viewport items will not change.", "-\t\t\t */", "-\t\t\tint bottomIndex = availableIndex + descendents.length - 1;", "-\t\t\tif (bottomIndex < parent.topIndex) {", "-\t\t\t\tparent.topIndex = oldTopIndex - descendents.length + 1;", "-\t\t\t\tparent.getVerticalBar ().setSelection (parent.topIndex);", "-\t\t\t\treturn;", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef9eb03814089011bd1e0a4373ed55c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "415d12bde8b7c96b5aaa070f422c40374024b1cf", "commitAfterChange": "9c2d8eacbf826b8337d794c1104e7d0a00923c56", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  static boolean isNativeUnique(Method method)", "signatureAfterChange": " static boolean isNativeUnique(Method method)", "diff": ["+static Hashtable uniqueCache = new Hashtable();", "+\tObject unique = uniqueCache.get(method);", "+\tif (unique != null) return ((Boolean)unique).booleanValue();", "+\tboolean result = true;", "-\t\tif (method.getName().equals(mth.getName())) return false;", "+\t\tif (method.getName().equals(mth.getName())) {", "+\t\t\tresult = false;", "+\t\t\tbreak;", "+\t\t}", "-\treturn true;", "+\tuniqueCache.put(method, new Boolean(result));", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39060621d9c41e8e9da586f2b35abb9a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "19c0222eaad94683f1cf6389644b40fecfc90bf6", "commitAfterChange": "bf219895eeed085ac7691759faac06580d81d416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+", "+\t\t\t\t\t\t\t\t/* re-install registered functions */", "+\t\t\t\t\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\t\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\t\t\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\t\t\t\t\t\t\texecute (function.functionString);", "+\t\t\t\t\t\t\t\t}", "+", "-\t\t\t\t\t\t\t\tif (pVarResult != null && pVarResult.getType() == OLE.VT_BOOL) addressBar = pVarResult.getBoolean();", "+\t\t\t\t\t\t\t\tif (pVarResult != null) {", "+\t\t\t\t\t\t\t\t\tif (pVarResult.getType () == OLE.VT_BOOL) {", "+\t\t\t\t\t\t\t\t\t\taddressBar = pVarResult.getBoolean ();", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\tpVarResult.dispose ();", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2114f1e876b4ae37d94d54c82c70665d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_Region.java", "commitBeforeChange": "d3d652140ae5af0f278d4f42c7e1523fbb5c7e80", "commitAfterChange": "2ee6b2a679071063d3004657ab5b4f376f59e669", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 25, "signatureBeforeChange": " public static java.util.Vector methodNames()", "signatureAfterChange": " public static java.util.Vector methodNames()", "diff": ["+\tmethodNames.addElement(\"test_ConstructorLorg_eclipse_swt_graphics_Device\");", "+\tmethodNames.addElement(\"test_intersectLorg_eclipse_swt_graphics_Rectangle\");", "+\tmethodNames.addElement(\"test_intersectLorg_eclipse_swt_graphics_Region\");", "-\tmethodNames.addElement(\"test_win32_newI\");", "+\tmethodNames.addElement(\"test_subtractLorg_eclipse_swt_graphics_Rectangle\");", "+\tmethodNames.addElement(\"test_subtractLorg_eclipse_swt_graphics_Region\");", "+\tmethodNames.addElement(\"test_win32_newLorg_eclipse_swt_graphics_DeviceI\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5492ea5aa76f3d77de515bf24964d54", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "74f280ada3e3619247ef19609a3dcc759276ba1e", "commitAfterChange": "0f9350cf2fb1787c4b758b9256624909715628fb", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r \r int processMouse (int info)", "signatureAfterChange": "\r \r int processMouse (int info)", "diff": ["-\tswitch (pe.buttons) {\r", "-\t\tcase OS.Ph_BUTTON_SELECT:\tevent.button = 1; break;\r", "-\t\tcase OS.Ph_BUTTON_ADJUST:\tevent.button = 2; break;\r", "-\t\tcase OS.Ph_BUTTON_MENU:\t\tevent.button = 3; break;\r", "+\tif (ev.type == OS.Ph_EV_BUT_PRESS || ev.type == OS.Ph_EV_BUT_RELEASE) {\r", "+\t\tswitch (pe.buttons) {\r", "+\t\t\tcase OS.Ph_BUTTON_SELECT:\tevent.button = 1; break;\r", "+\t\t\tcase OS.Ph_BUTTON_ADJUST:\tevent.button = 2; break;\r", "+\t\t\tcase OS.Ph_BUTTON_MENU:\t\tevent.button = 3; break;\r", "+\t\t}\r", "-\tsetMouseState (event, pe);\r", "+\tsetMouseState (ev.type, event, pe);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94d605ca8bc39bfcdd38f1fd488548b8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "ecb69c08b9235bc129576d3977f3a0bd046ee24f", "commitAfterChange": "b6d6821dbf6549d38822925640020a0364b710ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["+", "+\t\t\t\t\tEnumeration elements = functions.elements ();", "+\t\t\t\t\twhile (elements.hasMoreElements ()) {", "+\t\t\t\t\t\t((BrowserFunction)elements.nextElement ()).dispose (false);", "+\t\t\t\t\t}", "+\t\t\t\t\tfunctions = null;", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e21c41ab9dbf1db0c8aac9a5cae734b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/carbon/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a3eda06a7a4c290420b73156206fa1800c9178ee", "commitAfterChange": "9837bb695405327b535c2924659cef1a3a71f994", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void didCommitLoadForFrame(int frame)", "signatureAfterChange": "  void didCommitLoadForFrame(int frame)", "diff": ["-\t\t", "+", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77754272d253322c981b33ab1011e8d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "0af6a7dcf02fe44885063157294405c3130cd181", "commitAfterChange": "fa54b4f605142844dcd8f13c6b822dad91c3adfd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void attachObserversToWindow(NSWindow newWindow)", "signatureAfterChange": "  void attachObserversToWindow(NSWindow newWindow)", "diff": ["+\tint /*long*/ newHostWindowClass = OS.object_getClass(newWindow.id);", "+\tint /*long*/ sendEventImpl = OS.class_getMethodImplementation(newHostWindowClass, OS.sel_sendEvent_);", "+\tif (sendEventImpl == Display.windowCallback3.getAddress()) return;", "-\tint /*long*/ newHostWindowClass = OS.object_getClass(newWindow.id);", "-\tif (newHostWindowClass != embeddedSubclass) {", "-\t\tOS.object_setClass(hostWindow.id, embeddedSubclass);", "-\t\thostWindowClass = newHostWindowClass;", "-\t}", "+\tOS.object_setClass(hostWindow.id, embeddedSubclass);", "+\tdisplay.addWidget (hostWindow, this);", "+\thostWindowClass = newHostWindowClass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff3732208dc25d27b3994b5c95aaaa2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/cocoa/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "e14cbb58498cee19f17ae6c93d69bdd0e702a2fd", "commitAfterChange": "a21b70180b6d659096f68c12e40b6360e3518379", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic NSArray internal_accessibilityAttributeNames(int childID)", "signatureAfterChange": " \tpublic NSArray internal_accessibilityAttributeNames(int childID)", "diff": ["+\t\t\t\treturnValue.addObject(OS.NSAccessibilityEnabledAttribute);", "+\t\t\t\treturnValue.addObject(OS.NSAccessibilityTitleAttribute);", "+\t\t\t\treturnValue.addObject(OS.NSAccessibilityDescriptionAttribute);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1275ec896479e0ebab1e2e3efb1da118", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "0bdde811530233a98417bfd51a03e863bcbbc1b6", "commitAfterChange": "6fe853b29d6dcedf69f8209e4b19fa3cf0a85a8b", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " void recomputeTextWidths (GC gc)", "signatureAfterChange": " void recomputeTextWidths (GC gc)", "diff": ["-\ttextWidths = new int[texts.length];", "-\tif (font != null) gc.setFont (font);", "+\ttextWidths = new int [texts.length];", "+\tFont oldFont = gc.getFont ();", "-\t\tString value = texts[i];", "+\t\tString value = texts [i];", "+\t\t\tboolean fontChanged = false;", "+\t\t\tFont font = getFont (i);", "+\t\t\tif (!font.equals (oldFont)) {", "+\t\t\t\tgc.setFont (font);", "+\t\t\t\tfontChanged = true;", "+\t\t\t}", "+\t\t\tif (fontChanged) gc.setFont (oldFont);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4322e467cc69d402693778dba6733999", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_graphics_GC.java", "commitBeforeChange": "0068e41ed62132e76c6af5624e9acb501c2ce103", "commitAfterChange": "a92b7d83f56c5c0b9be5674e600ed472d90d401b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void test_equalsLjava_lang_Object()", "signatureAfterChange": "  public void test_equalsLjava_lang_Object()", "diff": ["-\twarnUnimpl(\"Test test_equalsLjava_lang_Object not written\");", "+\tGC testGC = new GC(shell);", "+\tassertFalse(testGC.equals(gc));", "+\tassertTrue(testGC.equals(testGC));", "+\ttestGC.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f929262da6871849ca89ceb8419a2f83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "6e46ef86a8becce881b4f42060c4e7bd5f99e7c7", "commitAfterChange": "d3ebe1ef4cbf26bc36bdf9d29c5038e322dbd4e5", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  int kEventMenuDrawItemContent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMenuDrawItemContent (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t\trect.left = (short) (rect.right - info.widMax - metric [0]);", "+\t\t\t\torg.eclipse.swt.internal.carbon.Point size1 = new org.eclipse.swt.internal.carbon.Point ();", "+\t\t\t\tOS.GetThemeTextDimensions (str, (short) font, 0, false, size1, null);", "+\t\t\t\trect.left = (short) (rect.right - Math.max (info.widMax, size1.h) - metric [0]);", "-\t\t\t\t\torg.eclipse.swt.internal.carbon.Point size1 = new org.eclipse.swt.internal.carbon.Point ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af14aa088fa479d07d9b9690deefc623", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "73f19fb22f36296b2b1d319322bf8eada9b8a2c1", "commitAfterChange": "d81596223a29b268489342ef9686d89dc3ec9930", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " public void setSize (Point size)", "signatureAfterChange": " public void setSize (Point size)", "diff": ["+\tcheckWidget ();", "-\tsetSize (size.x, size.y);", "+\tsetBounds (0, 0, Math.max (0, size.x), Math.max (0, size.y), false, true, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79feb64efca85d68c358076b87e73b94", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "dcd6e970127f7e9675c54092ae9763bf9320a1e6", "commitAfterChange": "4ce7925a86fe89375303d3ae22e64d3377f63c74", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tvoid createButtonSelected(SelectionEvent event)", "signatureAfterChange": " \tvoid createButtonSelected(SelectionEvent event)", "diff": ["+\t\t\tdialog.setEffectsVisible(effectsVisibleButton.getSelection());", "+\t\t\ttextWidget.append (\"getEffectsVisible() = \" + dialog.getEffectsVisible() + Text.DELIMITER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8560cd83f20ebcb03770ca8c760243ef", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.snippets/src/org/eclipse/swt/snippets/Snippet126.java", "commitBeforeChange": "913880ca94704a7218708ccfc2ac54630b55b168", "commitAfterChange": "4c8a38e3fc7911c8ad3634b6e45bae0325def898", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static void main(String[] args)", "signatureAfterChange": " public static void main(String[] args)", "diff": ["+\t\tcombo.setText(\"CCombo\");", "+\t\tcombo.add(\"item 1\");", "+\t\tcombo.add(\"item 2\");", "+\t\ttext.setText(\"Text\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2923e025bd05f065e0bd19406bc1124d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "a75e038ae6bef39441344ae6b25322ac518d2eea", "commitAfterChange": "b5bb1a8c8abcef7b207f3eb7ed36fde14b3c3d7b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "signatureAfterChange": "  void webView_didFinishLoadForFrame(int sender, int frameID)", "diff": ["+", "+\t\t/* re-install registered functions */", "+\t\tEnumeration elements = functions.elements ();", "+\t\twhile (elements.hasMoreElements ()) {", "+\t\t\tBrowserFunction function = (BrowserFunction)elements.nextElement ();", "+\t\t\texecute (function.functionString);", "+\t\t}", "+"]}], "num": 11758}