{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82f64c9b1c958b16aeeec7114fb2ff1b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "041a82607a04e808fc7248afc7030568", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/Mac Generation/org/eclipse/swt/tools/internal/MacGenerator.java", "commitBeforeChange": "136f2358951f4d58d8c923aa1bafaa7930ed17ce", "commitAfterChange": "7abe1684a602cab346dcaed97fe33b2111882020", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void generateClasses()", "signatureAfterChange": "  void generateClasses()", "diff": ["-\t\t\t\t\t\t//static overloading instance method", "-\t\t\t\t\t\tif (methods.get(selector) == null) {", "+\t\t\t\t\t\tNode other = (Node)methods.get(selector);", "+\t\t\t\t\t\tif (other == null) {", "-\t\t\t\t\t\t} ", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tboolean isStatic = mthAttributes.getNamedItem(\"class_method\") != null;", "+\t\t\t\t\t\t\tboolean otherIsStatic = other.getAttributes().getNamedItem(\"class_method\") != null;", "+\t\t\t\t\t\t\tif (isStatic != otherIsStatic) {", "+\t\t\t\t\t\t\t\tif (isStatic) {", "+\t\t\t\t\t\t\t\t\tmethods.put(\"static_\" + selector, method);", "+\t\t\t\t\t\t\t\t\tmethods.put(selector, other);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tmethods.put(\"static_\" + selector, other);", "+\t\t\t\t\t\t\t\t\tmethods.put(selector, method);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\tout(\"(int id) {\");", "+\t\tout(\"(int /*long*/ id) {\");", "+\t\tout(\"public \");", "+\t\tout(className);", "+\t\tout(\"(id id) {\");", "+\t\toutln();", "+\t\tout(\"\\tsuper(id);\");", "+\t\toutln();", "+\t\tout(\"}\");", "+\t\toutln();", "+\t\tif (className.equals(\"NSString\")) {", "+\t\t\tout(\"public String getString() {\");", "+\t\t\toutln();", "+\t\t\tout(\"\\treturn null;\");", "+\t\t\toutln();", "+\t\t\tout(\"}\");", "+\t\t\toutln();", "+\t\t\tout(\"public static NSString stringWith(String str) {\");", "+\t\t\toutln();", "+\t\t\tout(\"\\treturn null;\");", "+\t\t\toutln();", "+\t\t\tout(\"}\");", "+\t\t\toutln();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79ab7002ff5684e748ec1bfe2e42771", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/NativesGenerator.java", "commitBeforeChange": "af64dc0cb00680852a28d24c43b228552f8b7b28", "commitAfterChange": "5f337fe3ac34ee9a44ecfc3b3eed6c9c5e733012", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "signatureAfterChange": "  void generateDynamicFunctionCall(Method method, MethodData methodData, Class[] paramTypes, Class returnType, boolean needsReturn)", "diff": ["-\t", "-\toutput(\"\\tvoid *handle = NULL;\");", "-\toutputDelimiter();", "-\toutput(\"\\tint (*fptr)();\");", "-\toutputDelimiter();", "-\tif (returnType != Void.TYPE) {", "-\t\tif (needsReturn) {", "-\t\t\toutput(\"\\trc = 0;\");", "-\t\t\toutputDelimiter();", "+\t", "+\tif (Platform.PLATFORM.equals(\"win32\")) {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic HMODULE hm = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic FARPROC fp = NULL;\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!(hm = GetModuleHandle(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB))) hm = LoadLibrary(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (hm) fp = GetProcAddress(hm, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fp) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"fp\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t} else {", "+\t\toutput(\"\\t\\tstatic int initialied = 0;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic void *handle = NULL;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tstatic int (*fptr)();\");", "+\t\toutputDelimiter();", "+\t\tif (returnType != Void.TYPE) {", "+\t\t\tif (needsReturn) {", "+\t\t\t\toutput(\"\\t\\trc = 0;\");", "+\t\t\t\toutputDelimiter();", "+\t\t\t}", "+\t\t}", "+\t\toutput(\"\\t\\tif (!initialized) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (!handle) handle = dlopen(\");", "+\t\toutput(method.getName());", "+\t\toutput(\"_LIB, RTLD_LAZY);\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tif (handle) fptr = dlsym(handle, \\\"\");", "+\t\toutput(method.getName());", "+\t\toutput(\"\\\");\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\\tinitialized = 1;\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\tif (fptr) {\");", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t\");", "+\t\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "+\t\toutput(\"(*fptr)\");", "+\t\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "+\t\toutputDelimiter();", "+\t\toutput(\"\\t\\t}\");", "+\t\toutputDelimiter();", "-\toutput(\"\\tif ((handle = dlopen(\");", "-\toutput(method.getName());", "-\toutput(\"_LIB, RTLD_LAZY)) != NULL && (fptr = dlsym(handle, \\\"\");", "-\toutput(method.getName());", "-\toutput(\"\\\")) != NULL) {\");", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\tgenerateFunctionCallLeftSide(method, methodData, returnType, needsReturn);", "-\toutput(\"(*fptr)\");", "-\tgenerateFunctionCallRightSide(method, methodData, paramTypes);", "-\toutputDelimiter();", "-\toutput(\"\\t\");", "-\toutput(\"}\");", "-\toutputDelimiter();", "+"]}], "num": 6061}