{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5074e47cae628a890e844d2e1a8eb150", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843e854f0ebf1b1829982b40901a5a75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/Font.java", "commitBeforeChange": "dd8992109fa30bb57d880152a45ce27990ec959b", "commitAfterChange": "56124a7d872e77705ed209a0fbc3fb11ebde70aa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  void init (Device device, FontData[] fds)", "signatureAfterChange": "  void init (Device device, FontData[] fds)", "diff": ["+\tint fontType = OS.XmFONT_IS_FONTSET;", "+\t/*", "+\t* Bug in HPUX.  If the locale is \"C\" then FontSets do not work", "+\t* properly.  The fix is to detect this case and use a Font struct", "+\t* instead.", "+\t*/", "+\tif (OS.IsHPUX) {", "+\t\tint localePtr = OS.setlocale(OS.LC_CTYPE, null);", "+\t\tint length = OS.strlen(localePtr);", "+\t\tbyte[] buffer = new byte[length];", "+\t\tOS.memmove(buffer, localePtr, length);", "+\t\tif (\"C\".equals(new String(Converter.mbcsToWcs(null, buffer)))) {", "+\t\t\tfontType = OS.XmFONT_IS_FONT;", "+\t\t}", "+\t}", "+\t", "-\t\tstringBuffer.append(',');", "-\tif (OS.IsAIX && OS.IsDBLocale) {", "-\t\tstringBuffer.append(newFd.getXlfd());", "-\t} else {", "-\t\tnewFd.weight = firstFd.weight;", "-\t\tnewFd.slant = firstFd.slant;", "-\t\tstringBuffer.append(newFd.getXlfd());", "-\t\tnewFd.weight = null;", "-\t\tnewFd.slant = null;\t\t", "-\t\tstringBuffer.append(',');", "-\t\tstringBuffer.append(newFd.getXlfd());", "+\tif (fontType == OS.XmFONT_IS_FONTSET) {", "+\t\tif (OS.IsAIX && OS.IsDBLocale) {", "+\t\t\tstringBuffer.append(',');", "+\t\t\tstringBuffer.append(newFd.getXlfd());", "+\t\t} else {", "+\t\t\tnewFd.weight = firstFd.weight;", "+\t\t\tnewFd.slant = firstFd.slant;", "+\t\t\tstringBuffer.append(',');", "+\t\t\tstringBuffer.append(newFd.getXlfd());", "+\t\t\tnewFd.weight = null;", "+\t\t\tnewFd.slant = null;\t\t", "+\t\t\tstringBuffer.append(',');", "+\t\t\tstringBuffer.append(newFd.getXlfd());", "+\t\t}", "-\tint fontListEntry = OS.XmFontListEntryLoad(device.xDisplay, buffer, OS.XmFONT_IS_FONTSET, OS.XmFONTLIST_DEFAULT_TAG);", "+\tint fontListEntry = OS.XmFontListEntryLoad(device.xDisplay, buffer, fontType, OS.XmFONTLIST_DEFAULT_TAG);", "-\t\tbyte[] codeset = new byte[length];", "-\t\tOS.memmove(codeset, codesetPtr, length);", "-\t\tcodePage = new String(Converter.mbcsToWcs(null, codeset));", "+\t\tbuffer = new byte[length];", "+\t\tOS.memmove(buffer, codesetPtr, length);", "+\t\tcodePage = new String(Converter.mbcsToWcs(null, buffer));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08adca1e44009809f386adbfb81c5cd8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "25e0b9cefcf6aad913e775e22fb19b1e3de2a216", "commitAfterChange": "abdb7df6c5ef7f31dd770f626e22ad0d039e1629", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  int kEventMenuDrawItemContent (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventMenuDrawItemContent (int nextHandler, int theEvent, int userData)", "diff": ["-\t\t\t\tint font = OS.kThemeMenuItemFont;", "-\t\t\t\tif (buffer.length > 1) font = OS.kThemeMenuItemCmdKeyFont;", "+\t\t\t\tint themeFont = OS.kThemeMenuItemFont;", "+\t\t\t\tif (buffer.length > 1) themeFont = OS.kThemeMenuItemCmdKeyFont;", "-\t\t\t\tOS.GetThemeFont ((short) font, (short) OS.smSystemScript, family, size, style);", "-\t\t\t\tFontInfo info = new FontInfo ();", "-\t\t\t\tOS.FetchFontInfo (family[0], size[0], style[0], info);", "+\t\t\t\tOS.GetThemeFont ((short) themeFont, (short) OS.smSystemScript, family, size, style);", "+\t\t\t\tshort id = OS.FMGetFontFamilyFromName (family);", "+\t\t\t\tint [] font = new int [1]; ", "+\t\t\t\tOS.FMGetFontFromFontFamilyInstance (id, style [0], font, null);", "+\t\t\t\tint atsFont = OS.FMGetATSFontRefFromFont (font [0]);", "+\t\t\t\tATSFontMetrics fontMetrics = new ATSFontMetrics ();", "+\t\t\t\tOS.ATSFontGetVerticalMetrics (atsFont, OS.kATSOptionFlagsDefault, fontMetrics);", "+\t\t\t\tOS.ATSFontGetHorizontalMetrics (atsFont, OS.kATSOptionFlagsDefault, fontMetrics);", "-\t\t\t\tOS.GetThemeTextDimensions (str, (short) font, 0, false, size1, null);", "-\t\t\t\trect.left = (short) (rect.right - Math.max (info.widMax, size1.h) - metric [0]);", "-\t\t\t\tOS.DrawThemeTextBox (str, (short) font, OS.kThemeStateActive, false, rect, (short) OS.teFlushLeft, context [0]);", "+\t\t\t\tOS.GetThemeTextDimensions (str, (short) themeFont, 0, false, size1, null);", "+\t\t\t\trect.left = (short) (rect.right - Math.max ((int)(fontMetrics.maxAdvanceWidth * size[0]), size1.h) - metric [0]);", "+\t\t\t\tOS.DrawThemeTextBox (str, (short) themeFont, OS.kThemeStateActive, false, rect, (short) OS.teFlushLeft, context [0]);"]}], "num": 3834}