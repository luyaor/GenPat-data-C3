{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4530a8928cc988354e60980caa970cbc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d2e35580ef8b0810f4b18c7ff3c48a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "signatureAfterChange": "  public void test_setSelection$Lorg_eclipse_swt_widgets_TableItem()", "diff": ["-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t", "-\tassertEquals(new TableItem[]{items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[]{items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[0]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[0]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[3]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[3]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[4]}, table.getSelection());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getSelection());", "-\tassertEquals(new TableItem[] {items[2]}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[] {items[2]}, table.getSelection());\t", "-\tassertEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "+\tassertArrayEquals(new TableItem[] {items[1]}, table.getSelection());\t\t\t", "-\tassertEquals(new TableItem[]{}, table.getSelection());\t", "+\tassertArrayEquals(new TableItem[]{}, table.getSelection());\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fcf7db89b31a7c6cdc6ed0d9fb71dee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_TabFolder.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test_setSelectionI()", "signatureAfterChange": "  public void test_setSelectionI()", "diff": ["-\t\tassertEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "+\t\tassertArrayEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "-\t\tassertEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "+\t\tassertArrayEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[]{items[4]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[]{items[4]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[]{items[2]}, tabFolder.getSelection());\t", "+\tassertArrayEquals(new TabItem[]{items[2]}, tabFolder.getSelection());\t", "-\tassertEquals(new TabItem[]{items[1]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[]{items[1]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[]{items[1]}, tabFolder.getSelection());\t", "+\tassertArrayEquals(new TabItem[]{items[1]}, tabFolder.getSelection());\t", "-\tassertEquals(new TabItem[]{items[3]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[]{items[3]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[] {items[0]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[] {items[0]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[] {items[3]}, tabFolder.getSelection());\t", "+\tassertArrayEquals(new TabItem[] {items[3]}, tabFolder.getSelection());\t", "-\tassertEquals(new TabItem[] {items[4]}, tabFolder.getSelection());", "+\tassertArrayEquals(new TabItem[] {items[4]}, tabFolder.getSelection());", "-\tassertEquals(new TabItem[] {items[2]}, tabFolder.getSelection());\t", "+\tassertArrayEquals(new TabItem[] {items[2]}, tabFolder.getSelection());\t", "-\tassertEquals(new TabItem[] {items[1]}, tabFolder.getSelection());\t", "+\tassertArrayEquals(new TabItem[] {items[1]}, tabFolder.getSelection());\t", "-\t\tassertEquals(new TabItem[]{items[0]}, tabFolder.getSelection());", "+\t\tassertArrayEquals(new TabItem[]{items[0]}, tabFolder.getSelection());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f033fcad34e01214101288df098e683f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "d3553c533461a8253fca0af1fda8bb9189ab1260", "commitAfterChange": "6d1773a3a9771263ff81f0263e12eee082bb7a2f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test_select$I()", "signatureAfterChange": "  public void test_select$I()", "diff": ["-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, number-1}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, number-1}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {4}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {4}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {10}, table.getSelectionIndices());", "-\tassertSame(new int[] {2}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2}, table.getSelectionIndices());", "-\tassertSame(new int[] {14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0963a4afe3abc507da807a2ffdc66fea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "34b48a1450d691429218250a2c0b9f1d585dff6c", "commitAfterChange": "6c48129efab113803ef6d6a35457b5eb7eea82a5", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test_removeII()", "signatureAfterChange": "  public void test_removeII()", "diff": ["-\tassertEquals(new TableItem[]{items[0], items[1], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[4]}, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(new TableItem[] {items[0], items[1]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[0], items[1]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[4]}, table.getItems());", "-\tassertEquals(new TableItem[] {}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {}, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(items, table.getItems());", "+\tassertArrayEquals(items, table.getItems());", "-\tassertEquals(new TableItem[]{items[0], items[1], items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[]{items[1], items[2], items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[1], items[2], items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[]{items[0], items[1], items[2], items[3]}, table.getItems());", "+\tassertArrayEquals(new TableItem[]{items[0], items[1], items[2], items[3]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "-\tassertEquals(new TableItem[] {items[3], items[4]}, table.getItems());", "+\tassertArrayEquals(new TableItem[] {items[3], items[4]}, table.getItems());"]}], "num": 27708}