{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96cd4b22371c8b84a5fab0aee2a90062", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "929bd3e3bf206d021bfac4b9e8004b5f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 46, "signatureBeforeChange": " void headerMouseDown(Event event)", "signatureAfterChange": " void headerOnMouseDown (Event event)", "diff": ["+void headerOnMouseDown (Event event) {", "+\tif (event.button != 1) return;", "+\tfor (int i = 0; i < columns.length; i++) {", "+\t\tTableColumn column = columns [i]; ", "+\t\tint x = column.getX () + column.width;", "+\t\t/* if close to a column separator line then begin column resize */", "+\t\tif (Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {", "+\t\t\tif (!column.resizable) return;", "+\t\t\tresizeColumn = column;", "+\t\t\tresizeColumnX = x;", "+\t\t\treturn;", "+\t\t}", "+\t\t/* if within column but not near separator line then fire column Selection */", "+\t\tif (event.x < x) {", "+\t\t\tEvent newEvent = new Event ();", "+\t\t\tnewEvent.widget = column;", "+\t\t\tcolumn.postEvent (SWT.Selection, newEvent);", "+\t\t\treturn;", "+\t\t}", "+\t}", "- */", "-void headerMouseDown(Event event) {", "-\tTableColumn column = getColumnAtX(event.x);", "-", "-\t// only react to button one clicks. fixes bug 6770", "-\tif (event.button != 1) {", "-\tif (isColumnResize(event) == true) {", "-\t\tstartColumnResize(event);", "-\telse", "-\tif (column != null) {", "-\t\tcolumn.notifyListeners(SWT.Selection, new Event());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299c5f3d3a1fe916fa48f889f8eba2f7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 52, "signatureBeforeChange": " void initialize()", "signatureAfterChange": " void headerDoMouseDown(Event event)", "diff": ["- */", "-void initialize() {", "-\tresetRoot();\t\t\t\t\t// has to be at very top because super class uses ", "-\t\t\t\t\t\t\t\t\t// functionality that relies on the TreeRoots object", "-\tsuper.initialize();", "-}", "+void headerDoMouseDown(Event event) {", "+\tif (event.button != 1) return;", "+\tfor (int i = 0; i < columns.length; i++) {", "+\t\tTreeColumn column = columns[i]; ", "+\t\tint x = column.getX() + column.width;", "+\t\t/* if close to a column separator line then prepare for column resize */", "+\t\tif (Math.abs (x - event.x) <= TOLLERANCE_COLUMNRESIZE) {", "+\t\t\tif (!column.getResizable()) return;", "+\t\t\tresizeColumn = column;", "+\t\t\tresizeColumnX = x;", "+\t\t\treturn;", "+\t\t}", "+\t\t/* if within column but not near separator line then fire column Selection */", "+\t\tif (event.x < x) {", "+\t\t\tEvent newEvent = new Event();", "+\t\t\tnewEvent.widget = column;", "+\t\t\tsendEvent(SWT.Selection, newEvent);", "+\t\t\treturn;"]}], "num": 11090}