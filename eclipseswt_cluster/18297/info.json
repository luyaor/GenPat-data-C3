{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d1a74999606549ea5d5543fa5872ef6", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043d0989c08f70fab6701877c931552e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "1153aefee4c3f23880dc32e587d886b736949179", "commitAfterChange": "6e57650b3eb55f53e750439a749aebd1ce89c5f0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " public FontData open ()", "diff": ["-\tpanel = NSFontPanel.sharedFontPanel();", "-", "-\t// Install a callback so editing keys work.", "-\tint /*long*/ panelClass = 0;", "-\tint /*long*/ swtPanelClass = 0;", "-\tCallback performKeyEquivalentCallback = null;", "+\tNSFontPanel panel = NSFontPanel.sharedFontPanel();", "-\tperformKeyEquivalentCallback = new Callback(this, \"performKeyEquivalent\", 3);", "-\tint /*long*/ proc = performKeyEquivalentCallback.getAddress();", "-\tif (proc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tswtPanelClass = OS.objc_allocateClassPair(OS.object_getClass(panel.id), className, 0);", "-\tOS.class_addMethod(swtPanelClass, OS.sel_performKeyEquivalent_, proc, \"@:@\");", "-\tOS.objc_registerClassPair(swtPanelClass);", "-\tpanelClass = OS.object_setClass(panel.id, swtPanelClass);", "-\t", "+\tdisplay.subclassPanel(panel, className);", "-\tOS.object_setClass(panel.id, panelClass);", "-\tOS.objc_disposeClassPair(swtPanelClass);", "-\tif (performKeyEquivalentCallback != null) performKeyEquivalentCallback.dispose();", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8224fd0baeb7f9db7b80794240475251", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/ColorDialog.java", "commitBeforeChange": "1153aefee4c3f23880dc32e587d886b736949179", "commitAfterChange": "6e57650b3eb55f53e750439a749aebd1ce89c5f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RGB open()", "signatureAfterChange": " public RGB open()", "diff": ["-\tpanel = NSColorPanel.sharedColorPanel();", "-\t// Install a callback so editing keys work.", "-\tint /*long*/ panelClass = 0;", "-\tint /*long*/ swtPanelClass = 0;", "-\tCallback performKeyEquivalentCallback = null;", "-\tString className = \"SWTFileDialogPanel\";", "-\tperformKeyEquivalentCallback = new Callback(this, \"performKeyEquivalent\", 3);", "-\tint /*long*/ proc = performKeyEquivalentCallback.getAddress();", "-\tif (proc == 0) error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\tswtPanelClass = OS.objc_allocateClassPair(OS.object_getClass(panel.id), className, 0);", "-\tOS.class_addMethod(swtPanelClass, OS.sel_performKeyEquivalent_, proc, \"@:@\");", "-\tOS.objc_registerClassPair(swtPanelClass);", "-\tpanelClass = OS.object_setClass(panel.id, swtPanelClass);", "-\t", "+\tNSColorPanel panel = NSColorPanel.sharedColorPanel();", "+\tString className = \"SWTColorDialogPanel\";", "+\tDisplay display = parent != null ? parent.getDisplay() : Display.getCurrent();", "+\tdisplay.subclassPanel(panel, className);", "-\tDisplay display = parent != null ? parent.getDisplay() : Display.getCurrent();", "-\tOS.object_setClass(panel.id, panelClass);", "-\tOS.objc_disposeClassPair(swtPanelClass);", "-\tif (performKeyEquivalentCallback != null) performKeyEquivalentCallback.dispose();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cf9662a8bfdbe6b0a9042e4f1e3be75", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "32519857d7ad2eb01dc0315f618d4bd0cd96d2c6", "commitAfterChange": "6687475724d9098125bacb1518a341736c8eafd3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["-\t\tCallback2 = new Callback(safaryClass, \"browserProc\", 2);", "-\t\tint proc2 = Callback2.getAddress();", "-\t\tif (proc2 == 0) SWT.error (SWT.ERROR_NO_MORE_CALLBACKS);", "-\t\tOS.class_addIvar(cls, \"tag\", OS.PTR_SIZEOF, (byte)(Math.log(OS.PTR_SIZEOF) / Math.log(2)), \"i\");", "-\t\tOS.class_addMethod(cls, OS.sel_tag, proc2, \"@:\");", "-\t\tOS.class_addMethod(cls, OS.sel_setTag_1, proc3, \"@:i\");", "+\t\tOS.class_addIvar(cls, SWT_OBJECT, OS.PTR_SIZEOF, (byte)(Math.log(OS.PTR_SIZEOF) / Math.log(2)), \"i\");", "-\tjniRef = OS.NewGlobalRef(this);", "-\tif (jniRef == 0) SWT.error(SWT.ERROR_NO_HANDLES);", "-\tdelegate.setTag(jniRef);", "+\tDisplay display = browser.getDisplay();", "+\tdisplay.setData(ADD_WIDGET_KEY, new Object[] {delegate, browser});", "+\t\t\t\t\t", "+\t\t\t\t\te.display.setData(ADD_WIDGET_KEY, new Object[] {delegate, null});", "-\t\t\t\t\tOS.DeleteGlobalRef(jniRef);", "-\t\t\t\t\tjniRef = 0;"]}], "num": 18297}