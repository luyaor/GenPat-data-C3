{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fda95d09cb91cdd991edaa4e2c73c70b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f413b10d51f952c8eead16c5fb74c6e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/StyledText2.java", "commitBeforeChange": "0eca40a26667c3712617b5dd23e67af76bcbab4d", "commitAfterChange": "c345d69dc06c2a69d5f698a12d1c7890b32841ad", "methodNumberBeforeChange": 291, "methodNumberAfterChange": 295, "signatureBeforeChange": " public void showSelection()", "signatureAfterChange": " public void showSelection()", "diff": ["-\tint startX = getXAtOffset(content.getLine(startLine), startLine, offsetInLine);\t", "+\tPoint startPos = getPointAtOffset(content.getLine(startLine), startLine, offsetInLine);\t", "-\tint endX = getXAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "+\tPoint endPos = getPointAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "-\tboolean selectionFits = rightToLeft ? startX - endX <= w : endX - startX <= w;", "+\tboolean selectionFits = rightToLeft ? startPos.x - endPos.x <= w : endPos.x - startPos.x <= w;", "-\t\tshowLocation(startX, startLine);", "+\t\tshowLocation(startPos);", "-\t\tendX = getXAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "-\t\tshowLocation(endX, endLine);", "+\t\tendPos = getPointAtOffset(content.getLine(endLine), endLine, offsetInLine);\t", "+\t\tshowLocation(endPos);", "-\t\tshowLocation(endX, endLine);", "+\t\tshowLocation(endPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad3c10a975ddcf1c61f2bc1fda8aed79", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "ba37366be2ce4b81c2ea0b47314627621478b774", "commitAfterChange": "2c04ec257a967dc9b71448cc82c356c64107e558", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole)", "signatureAfterChange": " \t \tint get_accRole(int variant, int pvarRole)", "diff": ["-\tint get_accRole(int varChild_vt, int varChild_reserved1, int varChild_lVal, int varChild_reserved2, int pvarRole) {", "+\tint get_accRole(int /*long*/ variant, int /*long*/ pvarRole) {", "-\t\tif ((varChild_vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;", "+\t\tVARIANT v = new VARIANT();", "+\t\tCOM.MoveMemory(v, variant, VARIANT.sizeof);", "+\t\tif ((v.vt & 0xFFFF) != COM.VT_I4) return COM.E_INVALIDARG;", "-\t\tint code = iaccessible.get_accRole(varChild_vt, varChild_reserved1, varChild_lVal, varChild_reserved2, pvarRole);", "+\t\tint code = iaccessible.get_accRole(variant, pvarRole);", "-\t\tevent.childID = osToChildID(varChild_lVal);", "+\t\tevent.childID = osToChildID((int)/*64*/v.lVal);", "-\t\tif (varChild_lVal != COM.CHILDID_SELF) {", "+\t\tif (v.lVal != COM.CHILDID_SELF) {"]}], "num": 16576}