{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91392a4f41dda3c2fb4bdb2c867a5863", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c937b6bc2a3dd616d007c24c60b56860", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a18923fed6848268322e6c4f1776a20d3baed078", "commitAfterChange": "08cc809f893bf867625839a1200cfbf5504c4f66", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 129, "signatureBeforeChange": "  int systemFont ()", "signatureAfterChange": "  int systemFont ()", "diff": ["-\tint hFont = 0;", "-\tif (systemFonts != null) {", "-\t\tint length = systemFonts.length;", "-\t\tif (length != 0) hFont = systemFonts [length - 1];", "-\t}", "-\tif (hFont == 0) hFont = OS.GetStockObject (OS.DEFAULT_GUI_FONT);", "-\tif (hFont == 0) hFont = OS.GetStockObject (OS.SYSTEM_FONT);", "-\treturn hFont;", "+\treturn getSystemFont ().handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b301470f8cdd1dff74e3274581ab075", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "92840bf1dc9c70e7ea3cb593123b2ec10d732093", "commitAfterChange": "d95369a732c4ebf503133f7a906e0bf5a4f4d541", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void setImage (Image image)", "signatureAfterChange": " public void setImage (Image image)", "diff": ["-\tcheckWidget();", "+\tcheckWidget ();", "-\tint pixmap = 0, mask = 0;", "+\tsetImages (image, images);", "+}", "-\t\tpixmap = image.pixmap;", "-\t\tmask = image.mask;", "-\tint window = OS.GTK_WIDGET_WINDOW(topHandle());", "-\tOS.gdk_window_set_icon (window, 0, pixmap, mask);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f65ca44401e053a9464cbf2c5990c8c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "08ed4d34906d3cb004511badd9a3286f04d40b7a", "commitAfterChange": "3587c6fb9068182d41169c6c886f0d5faa0219e6", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void showSelection ()", "signatureAfterChange": " public void showSelection ()", "diff": ["-\tint selection = OS.GTK_CLIST_SELECTION (handle);", "-\tif (selection == 0) return;", "-\tif (OS.g_list_length (selection) == 0) return;", "-\tint node = OS.g_list_nth_data (selection, 0);", "-\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "-\tshowItem (items [index]);", "+\t// FIXME - not implemented"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d01e8c90450adc6c531d37e8392db9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder.java", "commitBeforeChange": "4cc6b7ee5715512a60107d3b4dc66c3f5263bd86", "commitAfterChange": "3f045436dfae17e04760943fc9254f1e9b8e32d8", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " boolean setItemLocation()", "signatureAfterChange": " boolean setItemLocation()", "diff": ["-\t\t\tint tabWidth = size.x - borderLeft - borderRight - minRect.width - maxRect.width - chevronRect.width;", "-\t\t\t\tint rightEdge = Math.min(item.x + item.width, getRightItemEdge());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9afaba9a1c494668a939f662b2c76679", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Sash.java", "commitBeforeChange": "3067534b6e68696307514fc033b4ad0b365d4b7f", "commitAfterChange": "d29a9ac78b9ed6462de983f003a794010dc4bd5d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tint /*long*/ parentHandle = parent.parentingHandle ();", "-\tOS.gtk_container_add (parentHandle, handle);", "-\tOS.gtk_widget_show (handle);", "-\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (handle);", "-\tif (window != 0) OS.gdk_window_set_cursor (window, defaultCursor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e7e77f0998a9549682b101256b93a05", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "857230dde8be1397ae2557844c139695d4aaa4a3", "commitAfterChange": "12d130cb4332a4845bcf0cce6120014733136f99", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": "  void setZOrder (Control sibling, boolean above, boolean fixChildren)", "signatureAfterChange": "  void setZOrder (Control sibling, boolean above, boolean fixChildren)", "diff": ["-\t/*", "-\t* Make sure that the parent handle is on the bottom of the stack", "-\t* when the parent children are siblings of the parent handle.", "-\t*/", "-\tif (!above && fixChildren && parent.parentingHandle () == parent.fixedHandle) {", "-\t\tint /*long*/ parentHandle = parent.handle;", "-\t\tif ((OS.GTK_WIDGET_FLAGS(parentHandle) & OS.GTK_NO_WINDOW) == 0) {", "-\t\t\twindow = OS.GTK_WIDGET_WINDOW (parentHandle);", "-\t\t\tif (window != 0) OS.gdk_window_lower (window);", "-\t\t}", "-\t}", "+\t/*  Make sure that the parent internal windows are on the bottom of the stack\t*/", "+\tif (!above && fixChildren) \tparent.fixZOrder ();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "074a2ca9a2f05fcd8ed5004aea062ad7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/FileDialog.java", "commitBeforeChange": "e0600fb1abcb2cf38d0f6ba6cbf9786e300f666e", "commitAfterChange": "24fdfd9c26f6e2472ad6e0a091d30c9851d291d5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void presetChooserDialog ()", "signatureAfterChange": " void presetChooserDialog ()", "diff": ["-\t\t\t\t", "-\t\t\t\t/*", "-\t\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t\t* The fix is to use the canonical path.", "-\t\t\t\t*/", "-\t\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "-\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);", "-\t\t\t\tOS.g_free (ptr);", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);", "-\t\t\t/*", "-\t\t\t* Bug in GTK. GtkFileChooser may crash on GTK versions 2.4.10 to 2.6", "-\t\t\t* when setting a file name that is not a true canonical path. ", "-\t\t\t* The fix is to use the canonical path.", "-\t\t\t*/", "-\t\t\tlong /*int*/ ptr = OS.realpath (buffer, null);", "-\t\t\tif (ptr != 0) {", "-\t\t\t\tif (fileName.length() > 0) {", "-\t\t\t\t\tOS.gtk_file_chooser_set_filename (handle, ptr);", "-\t\t\t\t} else { ", "-\t\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, ptr);\t", "-\t\t\t\t}", "-\t\t\t\tOS.g_free (ptr);", "+\t\t\tif (fileName.length() > 0) {", "+\t\t\t\tOS.gtk_file_chooser_set_filename (handle, buffer);", "+\t\t\t} else {", "+\t\t\t\tOS.gtk_file_chooser_set_current_folder (handle, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e36be255eae0c43ef06aa48271f9d464", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "ef268e78a3d831b5e3b64e5654d3911465a0f0eb", "commitAfterChange": "3f7682b6cb6c6e3127b760817a29f9fa2a42650d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void createDisplay (DeviceData data)", "signatureAfterChange": " void createDisplay (DeviceData data)", "diff": ["-\t\t\t//OS.InitCursor();", "+\t\t\t/* AW todo: not yet ready for primetime (see ContextualMenuSelect in handleMouseCallback)", "+\t\t\t*/", "-\t\t\t\t", "-\t\t\t// workaround for Register problem", "-\t\t\tRect bounds= new Rect();", "-\t\t\tint[] ctl = new int[1];", "-\t\t\tOS.CreatePushButtonControl(0, bounds, 0, ctl);", "-\t\t\tOS.DisposeControl(ctl[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d99d08f16a49ae065b32d27cec24e6b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "49b4e9047bdb1940bcccbef7a800960d8e82f12a", "commitAfterChange": "b4cec40ac150ef014bf48495a1bbbebf5f3b5f39", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  void releaseHandle ()", "signatureAfterChange": "  void releaseHandle ()", "diff": ["-\t* to the left.  This is avoided by clearing the text.  ", "+\t* to the left.  This is avoided by setting to combo size to zero.  ", "-\t\t\tint ptr = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, new char[1], 1);", "-\t\t\tOS.SetControlData (handle, OS.kHIComboBoxEditTextPart, OS.kControlEditTextCFStringTag, 4, new int[] {ptr});", "-\t\t\tOS.CFRelease (ptr);", "+\t\t\tOS.HIViewSetFrame (handle, new CGRect ());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da97a6045d60cc5d9c752582346a55bf", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "58e1c287b4b42563981f98f741141ebadd31c5c4", "commitAfterChange": "c9c643d21e61ec4cb3acaed072c41b89534da8c5", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r public void setImage (Image image)", "signatureAfterChange": "\r \r public void setImage (Image image)", "diff": ["-\tif ((style & SWT.SEPARATOR) != 0) {\r", "-\t\tcheckWidget();\r", "-\t\treturn;\r", "-\t}\r", "+\tcheckWidget();\r", "+\tif ((style & SWT.SEPARATOR) != 0) return;\r", "-\t\tint oldPixmap = OS.gtk_image_menu_item_get_image(handle);\r", "-\t\tOS.gtk_image_menu_item_set_image(handle, pixmap);\r", "-\t\tOS.gtk_widget_show(pixmap);\r", "-\t\tif (oldPixmap != 0) OS.gtk_widget_destroy(oldPixmap);\r", "-\t} else {  // null image\r", "-\t\tint oldPixmap = OS.gtk_image_menu_item_get_image(handle);\r", "-\t\tif (oldPixmap != 0) {\r", "-\t\t\tOS.gtk_image_menu_item_set_image(handle, 0);\r", "-\t\t\tOS.gtk_widget_destroy(oldPixmap);\r", "-\t\t}\r", "+\t\tOS.gtk_image_menu_item_set_image (handle, pixmap);\r", "+\t\tOS.gtk_widget_show (pixmap);\r", "+\t} else {\r", "+\t\tOS.gtk_image_menu_item_set_image (handle, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc612258391672df842380e7a6f0ecb8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Widget.java", "commitBeforeChange": "b7a00bf87c6bba490035767725a315da54b8693f", "commitAfterChange": "27a42a02f1d3398db6d0fbf73906bf95e2b7693c", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  void redrawWidget (int control, boolean children)", "signatureAfterChange": "  void redrawWidget (int control, boolean children)", "diff": ["+void redrawWidget (int control, boolean children) {", "+\tif (!isDrawing (control)) return;", "+\tint window = OS.GetControlOwner (control);", "+\tint visibleRgn = getVisibleRegion (control, !children);", "+\tOS.InvalWindowRgn (window, visibleRgn);", "+\tOS.DisposeRgn (visibleRgn);", "-void redrawWidget (int control, boolean children) {", "-\tif (getDrawCount () > 0) return;", "-\tif (!OS.IsControlVisible (control)) return;", "-\tif (children) {", "-\t\tRect rect = new Rect ();", "-\t\tOS.GetControlBounds (control, rect);", "-\t\tOS.InvalWindowRect (window, rect);", "-\t} else {", "-\t\tint visibleRgn = getVisibleRegion (control);", "-\t\tOS.InvalWindowRgn (window, visibleRgn);", "-\t\tOS.DisposeRgn (visibleRgn);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd2a8876cba29b26e50796902883245", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "222c99bbebba9ab406a0910e7665c9a35629b288", "commitAfterChange": "a44223adfcd4e06bb8c8891ca5fa698e5d0b0ad8", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 79, "signatureBeforeChange": "  void setItemCount (TreeItem parentItem, int count)", "signatureAfterChange": "  void setItemCount (TreeItem parentItem, int count)", "diff": ["-\t\t\t\tint row = OS.gcnew_SWTRow (jniRef, item);", "-\t\t\t\tOS.GridViewRowPresenter_Content (headerHandle, row);", "-\t\t\t\tOS.GCHandle_Free (row);", "-\t\t\t\tint row = OS.gcnew_SWTRow (jniRef, item);", "-\t\t\t\tOS.HeaderedItemsControl_Header (item, row);", "-\t\t\t\tOS.GCHandle_Free (row);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d63d67bb9532c8221cecd64f3810507", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/ToolBar.java", "commitBeforeChange": "e490c124e2459ac874fc7c4f7b8c9a20c5a4a702", "commitAfterChange": "5c4b8231729870597968d83acc7163053ee45227", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 31, "signatureBeforeChange": "  void HandleLoaded (int sender, int e)", "signatureAfterChange": "  void setThumbVisibility (byte visibility)", "diff": ["-void HandleLoaded (int sender, int e) {", "-\tif (!checkEvent (e)) return;", "-\tint template = OS.Control_Template (handle);", "-\tint buttonName = createDotNetString (\"OverflowButton\", false);", "-\tint button = OS.FrameworkTemplate_FindName (template, buttonName, handle);", "-\tif (button != 0) {", "-\t\tOS.UIElement_Visibility (button, OS.Visibility_Collapsed);", "-\t\tOS.GCHandle_Free (button);", "-\t}", "-\tOS.GCHandle_Free (buttonName);", "-\tint thumbName = createDotNetString (\"ToolBarThumb\", false);", "-\tint thumb = OS.FrameworkTemplate_FindName (template, thumbName, handle);", "-\tif (thumb != 0) {", "-\t\tOS.UIElement_Visibility (thumb, OS.Visibility_Collapsed);", "-\t\tOS.GCHandle_Free (thumb);", "-\t}", "-\tOS.GCHandle_Free (thumbName);", "-\tOS.GCHandle_Free (template);", "-}", "+void setThumbVisibility (byte visibility) {", "+\tint template = OS.Control_Template (handle);", "+\tint thumbName = createDotNetString (\"ToolBarThumb\", false);", "+\tint thumb = OS.FrameworkTemplate_FindName (template, thumbName, handle);", "+\tif (thumb != 0) {", "+\t\tOS.UIElement_Visibility (thumb, visibility);", "+\t\tOS.GCHandle_Free (thumb);", "+\t}", "+\tOS.GCHandle_Free (thumbName);", "+\tOS.GCHandle_Free (template);\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc59af67d8d6149722a36429853cb935", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "a5aa19b74e4a92c24cdac1109fcadf73365d8fe2", "commitAfterChange": "9e03c17a82cd721f4edc09d79d09bb55f8613d1e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r public Rectangle getClientArea ()", "signatureAfterChange": "\r \r public Rectangle getClientArea ()", "diff": ["-\t/* \r", "-\t* Note: The CommandBar is part of the client area,\r", "-\t* not the trim.  Applications don't expect this so\r", "-\t* subtract the height of the CommandBar.\r", "-\t*/\r", "-\tif (OS.IsWinCE) {\r", "-\t\tRectangle rect = super.getClientArea ();\r", "-\t\tif (hwndCB != 0) {\r", "-\t\t\tint height = OS.CommandBar_Height (hwndCB);\r", "-\t\t\trect.y += height;\r", "-\t\t\trect.height -= height;\r", "+\tif (!OS.IsWinCE) {\r", "+\t\tif (OS.IsIconic (handle)) {\r", "+\t\t\tRECT rect = new RECT ();\r", "+\t\t\tWINDOWPLACEMENT lpwndpl = new WINDOWPLACEMENT ();\r", "+\t\t\tlpwndpl.length = WINDOWPLACEMENT.sizeof;\r", "+\t\t\tOS.GetWindowPlacement (handle, lpwndpl);\r", "+\t\t\tint width = lpwndpl.right - lpwndpl.left;\r", "+\t\t\tint height = lpwndpl.bottom - lpwndpl.top;\r", "+\t\t\tOS.SetRect (rect, 0, 0, width, height);\r", "+\t\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, rect);\r", "+\t\t\treturn new Rectangle (0, 0, rect.right, rect.bottom);\r", "-\t\treturn rect;\r", "-\t}\r", "-\tif (OS.IsIconic (handle)) {\r", "-\t\tRECT rect = new RECT ();\r", "-\t\tWINDOWPLACEMENT lpwndpl = new WINDOWPLACEMENT ();\r", "-\t\tlpwndpl.length = WINDOWPLACEMENT.sizeof;\r", "-\t\tOS.GetWindowPlacement (handle, lpwndpl);\r", "-\t\tint width = lpwndpl.right - lpwndpl.left;\r", "-\t\tint height = lpwndpl.bottom - lpwndpl.top;\r", "-\t\tOS.SetRect (rect, 0, 0, width, height);\r", "-\t\tOS.SendMessage (handle, OS.WM_NCCALCSIZE, 0, rect);\r", "-\t\treturn new Rectangle (0, 0, rect.right, rect.bottom);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "221893531b8b15ac63078db74c465562", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Text.java", "commitBeforeChange": "48512dc20e32e369917d3e1ccfb92109c9724e7e", "commitAfterChange": "1942f64e0b774317e0a8e6ec44902bb736bb7790", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void paste ()", "signatureAfterChange": " public void paste ()", "diff": ["-\tbyte [] clipboard = Converter.wcsToMbcs (null, \"CLIPBOARD\", true);", "+\t/*byte [] clipboard = Converter.wcsToMbcs (null, \"CLIPBOARD\", true);", "-\tOS.gtk_selection_convert(handle, clipboard_atom, compound_atom, 0);", "+\tOS.gtk_selection_convert(handle, clipboard_atom, compound_atom, 0);*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d9d7dfb821a478daee7d29ab6a7903", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "424029c229a07a058f442f30581c33c063abd691", "commitAfterChange": "e226dc44fc1e0a1771cdbe4ba10bbae85f7b098b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public Point getLocation(int offset, boolean trailing)", "signatureAfterChange": " public Point getLocation(int offset, boolean trailing)", "diff": ["-\t\tint /*long*/ pBidiLevels = OS.malloc(1);", "-\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, pBidiLevels);", "+\t\tbyte[] bidiLevels = new byte[1];", "+\t\tint /*long*/ result = layoutManager.getGlyphsInRange(range, 0, 0, 0, 0, bidiLevels);", "-\t\t\tbyte[] bidiLevels = new byte[1];", "-\t\t\tOS.memmove(bidiLevels, pBidiLevels, 1);", "-\t\tOS.free(pBidiLevels);", "-\t\t\tint /*long*/ pRectCount = OS.malloc(C.PTR_SIZEOF);", "-\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, pRectCount);", "-\t\t\tOS.memmove(rectCount, pRectCount, C.PTR_SIZEOF);", "-\t\t\tOS.free(pRectCount);", "+\t\t\tint /*long*/ pArray = layoutManager.rectArrayForGlyphRange(range, range, textContainer, rectCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43b7f46c6fdc90fb56583dd55aeabc92", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean getEnabled ()", "signatureAfterChange": "  public boolean getEnabled ()", "diff": ["- */", "+", "-\tint h= topHandle();", "-\tif (OS.IsValidControlHandle(h))", "-\t\treturn OS.IsControlEnabled(h);", "-\tSystem.out.println(\"Control.getEnabled: fixme for \" + getClass().getName());", "-\treturn true;", "+\treturn (state & DISABLED) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5740bf3e7d5dae1ed0a0121ded65a0ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "f705f1e76286c6f3660ecf53b6864bbd63d66494", "commitAfterChange": "0197907d68007347a84613b33a3d149ba32c4fc3", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 58, "signatureBeforeChange": "  void HandleLoaded (int sender, int e)", "signatureAfterChange": "  void HandleLoaded (int sender, int e)", "diff": ["-\tint template = OS.Control_Template (handle);", "-\tint nameString = createDotNetString (HEADER_PART_NAME, false);", "-\tint header = OS.FrameworkTemplate_FindName (template, nameString, handle);", "-\tif (header != 0) {", "-\t\tOS.UIElement_Visibility (header, headerVisibility);", "-\t\tOS.GCHandle_Free (header);", "-\t}", "-\tOS.GCHandle_Free (nameString);", "-\tOS.GCHandle_Free (template);", "+\tupdateHeaderVisibility();"]}], "num": 3700}