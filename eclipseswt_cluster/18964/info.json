{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92e7f8953bb55e5f641fdb7d8e56db66", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e67b5328e5a38d94a3942d771e04401", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "6752d439d76030429e87bce5575ca5fc06a4993b", "commitAfterChange": "44db0957d87cb491a85384855623a3380a72614e", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 105, "signatureBeforeChange": "  int windowDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  int windowDelegateProc(int id, int sel, int arg0)", "diff": ["-\tint jniRef = OS.objc_msgSend(id, OS.sel_tag);", "-\tif (jniRef == 0 || jniRef == -1) return 0;", "-\tWidget widget = (Widget)OS.JNIGetObject(jniRef);", "+\tWidget widget = getWidget(id);", "-\t\twidget.mouseDown(arg0);", "-\t} else if (sel == OS.sel_rightMouseDown_1) {", "-\t\twidget.rightMouseDown(arg0);", "-\t} else if (sel == OS.sel_mouseDragged_1) {", "-\t\twidget.mouseDragged(arg0);", "+\t\twidget.mouseDown(id, sel, arg0);", "-\t\twidget.mouseUp(arg0);", "+\t\twidget.mouseUp(id, sel, arg0);", "+\t} else if (sel == OS.sel_rightMouseDown_1) {", "+\t\twidget.rightMouseDown(id, sel, arg0);", "+\t} else if (sel == OS.sel_rightMouseUp_1) {", "+\t\twidget.rightMouseUp(id, sel, arg0);", "+\t} else if (sel == OS.sel_otherMouseDown_1) {", "+\t\twidget.otherMouseDown(id, sel, arg0);", "+\t} else if (sel == OS.sel_otherMouseUp_1) {", "+\t\twidget.otherMouseUp(id, sel, arg0);", "+\t} else if (sel == OS.sel_mouseMoved_1) {", "+\t\twidget.mouseMoved(id, sel, arg0);", "+\t} else if (sel == OS.sel_mouseDragged_1) {", "+\t\twidget.mouseDragged(id, sel, arg0);", "-\t\twidget.mouseEntered(arg0);", "+\t\twidget.mouseEntered(id, sel, arg0);", "+\t} else if (sel == OS.sel_mouseExited_1) {", "+\t\twidget.mouseExited(id, sel, arg0);", "+\t} else if (sel == OS.sel_menuForEvent_1) {", "+\t\treturn widget.menuForEvent(id, sel, arg0);", "-\t} else if (sel == OS.sel_menuForEvent_1) {", "-\t\treturn widget.menuForEvent(arg0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563dcafb1aa62767c647563a777695c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "b753a9548c84031bef7784f1f1d45228882c7e66", "commitAfterChange": "96ce10f2647f63ec45fa772ec7064c3f640fbe12", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 134, "signatureBeforeChange": "  static int windowDelegateProc(int id, int sel, int arg0)", "signatureAfterChange": "  static int windowDelegateProc(int id, int sel, int arg0)", "diff": ["+\t} else if (sel == OS.sel_accessibilityHitTest_) {", "+\t\tNSPoint point = new NSPoint();", "+\t\tOS.memmove(point, arg0, NSPoint.sizeof);", "+\t\treturn widget.accessibilityHitTest(id, sel, point);", "+\t} else if (sel == OS.sel_accessibilityAttributeValue_) {", "+\t\treturn widget.accessibilityAttributeValue(id, sel, arg0);", "+\t} else if (sel == OS.sel_accessibilityIsAttributeSettable_) {", "+\t\treturn (widget.accessibilityIsAttributeSettable(id, sel, arg0) ? 1 : 0);", "+\t} else if (sel == OS.sel_accessibilityPerformAction_) {", "+\t\twidget.accessibilityPerformAction(id, sel, arg0);", "+\t} else if (sel == OS.sel_accessibilityActionDescription_) {", "+\t\twidget.accessibilityActionDescription(id, sel, arg0);"]}], "num": 18964}