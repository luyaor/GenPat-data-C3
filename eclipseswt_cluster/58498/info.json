{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c778bc2c00baea8d12cf30a6e86a2ff", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81f24701286e23f64b7da76202100117", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/BusyIndicator.java", "commitBeforeChange": "800f37e4ba6af1142a8f20dd9d1fe1dd5f3a77b9", "commitAfterChange": "bae8b23adf7bc3b1466643065f2bbf62746953bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public static void showWhile(Display display, Runnable runnable)", "signatureAfterChange": "  public static void showWhile(Display display, Runnable runnable)", "diff": ["-\tCursor cursor = new Cursor(display, SWT.CURSOR_WAIT);", "+\tCursor cursor = (Cursor)display.getData(BUSY_CURSOR);", "+\tif (cursor == null || cursor.isDisposed()) {", "+\t\tcursor = new Cursor(display, SWT.CURSOR_WAIT);", "+\t\tdisplay.setData(BUSY_CURSOR, cursor);", "+\t\tdisplay.addListener(SWT.Dispose, new Listener() {", "+\t\t\tpublic void handleEvent(Event e) {", "+\t\t\t\tDisplay display = e.display;", "+\t\t\t\tCursor cursor =  (Cursor)display.getData(BUSY_CURSOR);", "+\t\t\t\tif (cursor != null) {", "+\t\t\t\t\tif (!cursor.isDisposed()) cursor.dispose();", "+\t\t\t\t\tdisplay.setData(BUSY_CURSOR, null);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t});", "+\t}", "-\t\tif (cursor != null && !cursor.isDisposed()) {", "-\t\t\tcursor.dispose();", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a9500df02ef8351a9d119dc29cfee7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "f4bb8ef7d86d4b06d34d232ac624ae216be4183a", "commitAfterChange": "358e077459326bfde3a675b949aa20349d21bc3d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DateTime (Composite parent, int style)", "signatureAfterChange": " public DateTime (Composite parent, int style)", "diff": ["-\tif ((this.style & SWT.CALENDAR) == 0) {", "-\t\t/* SWT.DATE and SWT.TIME */", "-\t\tcreateText((this.style & SWT.DROP_DOWN) != 0);", "-\t} else {", "-\t\t/* Highlight the current(today) date */", "-\t\tOS.gtk_calendar_mark_day(handle, Calendar.getInstance().get(Calendar.DAY_OF_MONTH));", "+\tif (isDate () || isTime ()) {", "+\t\tcreateText ();", "+\t}", "+", "+\tif (isCalendar ()) {", "+\t\tOS.gtk_calendar_mark_day (calendarHandle, Calendar.getInstance ().get (Calendar.DAY_OF_MONTH));", "+\t}", "+", "+\tif (isDateWithDropDownButton ()) {", "+\t\tcreateDropDownButton ();", "+\t\tcreatePopupShell (-1, -1, -1);", "+\t\taddListener (SWT.Resize, new Listener () {", "+\t\t\tpublic void handleEvent (Event event) {", "+\t\t\t\tsetDropDownButtonSize ();", "+\t\t\t}", "+\t\t});", "-}", "+\tif (isDateWithDropDownButton ()) {", "+\t\t//Date w/ drop down button is in containers.", "+\t\t//first time round we set the bounds manually for correct Right_to_left behaviour", "+\t\tPoint size = computeSize (SWT.DEFAULT, SWT.DEFAULT);", "+\t\tsetBounds (0, 0, size.x, size.y);"]}], "num": 58498}