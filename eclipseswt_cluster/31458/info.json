{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a36727e4a11bccff47ed60613c0ffa11", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82286403a1409c57f4d7f890082e45ec", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "cae993e2073bd0db413f6b60bb430fd15dd96931", "commitAfterChange": "aede859f1cb2db6f8a7689cea65521c68c4028b1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " static boolean isNativeUnique(Method method)", "signatureAfterChange": " static synchronized boolean isNativeUnique(Method method)", "diff": ["-static boolean isNativeUnique(Method method) {", "+static Method[] uniqueMethodsCache;", "+static synchronized boolean isNativeUnique(Method method) {", "+\tMethod[] methods;", "+\tString name = method.getName();", "-\tMethod[] methods = clazz.getDeclaredMethods();", "+\tif (uniqueClassCache == clazz) {", "+\t\tmethods = uniqueMethodsCache;", "+\t} else {", "+\t\tuniqueClassCache = clazz;", "+\t\tuniqueMethodsCache = methods = clazz.getDeclaredMethods();", "+\t}", "-\t\tif ((method.getModifiers() & Modifier.NATIVE) == 0) continue;", "-\t\tif (method == mth || method.equals(mth)) continue;", "-\t\tif (method.getName().equals(mth.getName())) {", "-\t\t\tresult = false;", "-\t\t\tbreak;", "-\t\t}", "+\t\tif ((mth.getModifiers() & Modifier.NATIVE) != 0 &&", "+\t\t\tmethod != mth && !method.equals(mth) &&", "+\t\t\tname.equals(mth.getName()))", "+\t\t\t{", "+\t\t\t\tresult = false;", "+\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86fbf652f105ef6de8ff1a2413902289", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/JNIGenerator.java", "commitBeforeChange": "dc99d9bb9843280e22befd705fd4e0f15ba22ec9", "commitAfterChange": "da66ed50e7f2fec0e5faf4b617a73367a0acde7d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " static synchronized boolean isNativeUnique(Method method)", "signatureAfterChange": "  static String[] split(String str, String separator)", "diff": ["-static Method[] uniqueMethodsCache;", "-static synchronized boolean isNativeUnique(Method method) {", "-\tif ((method.getModifiers() & Modifier.NATIVE) == 0) return false;", "-\tObject unique = uniqueCache.get(method);", "-\tif (unique != null) return ((Boolean)unique).booleanValue();", "-\tboolean result = true;", "-\tMethod[] methods;", "-\tString name = method.getName();", "-\tClass clazz = method.getDeclaringClass();", "-\tif (clazz.equals(uniqueClassCache)) {", "-\t\tmethods = uniqueMethodsCache;", "-\t} else {", "-\t\tmethods = clazz.getDeclaredMethods();", "-\t\tuniqueClassCache = clazz;", "-\t\tuniqueMethodsCache = methods;", "-\t}", "-\tfor (int i = 0; i < methods.length; i++) {", "-\t\tMethod mth = methods[i];", "-\t\tif ((mth.getModifiers() & Modifier.NATIVE) != 0 &&", "-\t\t\tmethod != mth && !method.equals(mth) &&", "-\t\t\tname.equals(mth.getName()))", "-\t\t\t{", "-\t\t\t\tresult = false;", "-\t\t\t\tbreak;", "-\t\t\t}", "-\t}", "-\tuniqueCache.put(method, new Boolean(result));", "-\treturn result;", "-}", "+", "+static String[] split(String str, String separator) {", "+\tStringTokenizer tk = new StringTokenizer(str, separator);", "+\tArrayList result = new ArrayList();", "+\twhile (tk.hasMoreElements()) {", "+\t\tresult.add(tk.nextElement());", "+\t}", "+\treturn (String[])result.toArray(new String[result.size()]);"]}], "num": 31458}