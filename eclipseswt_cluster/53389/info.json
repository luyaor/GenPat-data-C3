{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68e7ecc88e95833b3882eeca14d4c84f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f08493118fec8145bb160149ad384109", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "8b437fb3842f95560dedea9ef4177462cda26613", "commitAfterChange": "548b08f4bee4c72ec1917d36850a817afc8e2973", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void drawSelected(GC gc )", "signatureAfterChange": " void drawSelected(GC gc )", "diff": ["+\tPoint size = parent.getSize();", "+\t// Draw selection border across all tabs", "+\tint parentX = parent.borderLeft;", "+\tint parentY = parent.onBottom ? size.y - parent.borderBottom - parent.tabHeight - CTabFolder2.HIGHLIGHT_HEADER : parent.borderTop + parent.tabHeight + 1;", "+\tint parentWidth = size.x - parent.borderLeft - parent.borderRight;", "+\tint parentHeight = CTabFolder2.HIGHLIGHT_HEADER - 1;", "+\tint[] shape = new int[] {parentX,parentY, parentX+parentWidth,parentY, parentX+parentWidth,parentY+parentHeight, parentX,parentY+parentHeight};", "+\tparent.drawSelectionBackground(gc, shape);", "+", "+\t// if selected tab scrolled out of view or partially out of view", "+\t// draw line and clean up partial tab area", "-\tif (x >= rightTabEdge) return;", "-\t// Do not draw partial items", "-\tif (!parent.single && parent.items[parent.topTabIndex] != this && x + width >= rightTabEdge){", "+\tif (!parent.single && parent.selectedIndex != parent.topTabIndex && x + width >= rightTabEdge){", "+\t\tif (parent.onBottom) {", "+\t\t\tshape = new int[4];", "+\t\t\tint index = 0;", "+\t\t\tshape[index++] = Math.max(0, parent.borderLeft - 1);", "+\t\t\tshape[index++] = y - 1;", "+\t\t\tshape[index++] = size.x - parent.borderRight;", "+\t\t\tshape[index++] = y - 1;", "+\t\t} else {", "+\t\t\tshape = new int[4];", "+\t\t\tint index = 0;", "+\t\t\tshape[index++] = Math.max(0, parent.borderLeft - 1);", "+\t\t\tshape[index++] = y + height;", "+\t\t\tshape[index++] = size.x - parent.borderRight;", "+\t\t\tshape[index++] = y + height;", "+\t\t}", "+\t\t// draw line\t", "+\t\tgc.setForeground(CTabFolder2.borderColor1);", "+\t\tgc.drawPolyline(shape);", "+\t\t// if tab partially visible, fill in background for tab", "-\t\tgc.fillRectangle(x, y - 1, parent.getSize().x - x, height + 1);", "+\t\tgc.fillRectangle(x, y - 1, size.x - x, height + 1);", "+\t", "+\t// draw selected tab background and outline", "-\t// draw background", "-\tint[] shape = null;", "+\tshape = null;", "-\t\tshape = new int[left.length+right.length+6];", "+\t\tshape = new int[left.length+right.length+8];", "+\t\tshape[index++] = x; // first point repeated here because below we reuse shape to draw outline", "+\t\tshape[index++] = y - 1;", "-\t\t\tshape[index++] = y + right[2*i+1] - 1;", "+\t\t\tshape[index++] = y + right[2*i+1] - 2;", "-\t\tshape = new int[left.length+right.length+6];", "+\t\tshape = new int[left.length+right.length+8];", "+\t\tshape[index++] = x; // first point repeated here because below we reuse shape to draw outline", "+\t\tshape[index++] = y + height;", "+\t", "+\t// draw outline", "+\tshape[0] = Math.max(0, parent.borderLeft - 1);", "+\tshape[shape.length - 2] = size.x - parent.borderRight;", "+\tif (parent.onBottom) {", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (shape[2*i + 1] == y + height + 1) shape[2*i + 1] -= 1;", "+\t\t}", "+\t} else {", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (shape[2*i + 1] == y + height + 1) shape[2*i + 1] -= 1;", "+\t\t}", "+\t}", "+\tRGB inside = parent.selectionBackground.getRGB();", "+\tif (parent.backgroundImage != null || (parent.gradientColors != null && parent.gradientColors.length > 1)) inside = null;", "+\tRGB outside = parent.single ? parent.getBackground().getRGB() : parent.getParent().getBackground().getRGB();\t\t", "+\tparent.antialias(shape, CTabFolder2.borderColor1.getRGB(), inside, outside, gc);", "+\tgc.setForeground(CTabFolder2.borderColor1);", "+\tgc.drawPolyline(shape);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1d2543caa9007ea58e3836761255a7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "1acb35772b09400a66ee7b2ebd612dcaf0602ada", "commitAfterChange": "c02d04ea941290a731ddc5316687e4ae51aa9475", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void draw3DBorder(GC gc)", "signatureAfterChange": " void draw3DBorder(GC gc)", "diff": ["-\t\t\tgc.drawLine(x2, y1, x2, y2); // right 1", "-\t\t\tgc.setForeground(parentBackground);", "-\t\t\tgc.drawPoint(0, y2); // bottom left", "-\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "+\t\t\tif (single) {", "+\t\t\t\tint x = borderLeft - HIGHLIGHT_MARGIN;", "+\t\t\t\tint y = borderTop;", "+\t\t\t\tint width = size.x - borderLeft - borderRight + 1 + 2*HIGHLIGHT_MARGIN;", "+\t\t\t\tint[] shape = new int[TOP_RIGHT_OUTSIDE_CORNER.length - 2];", "+\t\t\t\tint index = 0;", "+\t\t\t\tfor (int i = 2; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshape[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshape[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshape[index++] = x2;", "+\t\t\t\tshape[index++] = y2;", "+\t\t\t\tgc.drawPolyline(shape); // right 1", "+\t\t\t\tgc.setForeground(parentBackground);", "+\t\t\t\tgc.drawPoint(0, y2); // bottom left", "+\t\t\t} else {", "+\t\t\t\tgc.drawLine(x2, y1, x2, y2); // right 1", "+\t\t\t\tgc.setForeground(parentBackground);", "+\t\t\t\tgc.drawPoint(0, y2); // bottom left", "+\t\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "+\t\t\t}", "-\t\t\tgc.drawLine(x2, y1, x2, y2); // right 2", "-\t\t\tgc.setForeground(parentBackground);", "-\t\t\tgc.drawLine(0, y2, 1, y2); // bottom left", "-\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "+\t\t\tif (single) {", "+\t\t\t\tint x = borderLeft - HIGHLIGHT_MARGIN + 1;", "+\t\t\t\tint y = borderTop;", "+\t\t\t\tint width = size.x - borderLeft - borderRight + 1 + 2*HIGHLIGHT_MARGIN;", "+\t\t\t\tint[] shape = new int[TOP_RIGHT_OUTSIDE_CORNER.length - 4];", "+\t\t\t\tint index = 0;", "+\t\t\t\tfor (int i = 3; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\t\tshape[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\t\tshape[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t\t}", "+\t\t\t\tshape[index++] = x2;", "+\t\t\t\tshape[index++] = y2;", "+\t\t\t\tgc.drawPolyline(shape); // right 2", "+\t\t\t\tgc.setForeground(parentBackground);", "+\t\t\t\tgc.drawLine(0, y2, 1, y2); // bottom left", "+\t\t\t} else {", "+\t\t\t\tgc.drawLine(x2, y1, x2, y2); // right 2", "+\t\t\t\tgc.setForeground(parentBackground);", "+\t\t\t\tgc.drawLine(0, y2, 1, y2); // bottom left", "+\t\t\t\tgc.drawLine(x2, 0, x2, y1-1); // top right", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b619e77871ac31662ff85d57e8ca15a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabFolder2.java", "commitBeforeChange": "5ce55e0b266c6dfa30b6d24a0d38a175d0443651", "commitAfterChange": "a4dcc8f822e014b7bd06aaea12e9214493dea500", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void drawBorder(GC gc)", "signatureAfterChange": " void drawBorder(GC gc)", "diff": ["-\t\t\tshape[index++] = borderLeft;", "+\t\t\tshape[index++] = Math.max(0, borderLeft - 1);", "-\t\t\tshape[index++] = borderLeft;", "+\t\t\tshape[index++] = Math.max(0, borderLeft - 1);", "+\t\tif (single) {", "+\t\t\tint x = 0;", "+\t\t\tint y = size.y - borderBottom - tabHeight + SELECTION_BORDER;", "+\t\t\tint width = size.x - borderLeft - borderRight + 1;", "+\t\t\tint height = tabHeight - SELECTION_BORDER - 1;", "+\t\t\tint[] shape = new int[BOTTOM_LEFT_OUTSIDE_CORNER.length + BOTTOM_RIGHT_OUTSIDE_CORNER.length + 4];", "+\t\t\tint index = 0;", "+\t\t\tshape[index++] = x;", "+\t\t\tshape[index++] = y;", "+\t\t\tfor (int i = 0; i < BOTTOM_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\tshape[index++] = x+BOTTOM_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\tshape[index++] = y+height+BOTTOM_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < BOTTOM_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\tshape[index++] = x+width+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\tshape[index++] = y+height+BOTTOM_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t}", "+\t\t\tshape[index++] = x+width;", "+\t\t\tshape[index++] = y-1;", "+\t\t\t", "+\t\t\tgc.setForeground(border1Color);", "+\t\t\tgc.drawPolyline(shape);", "+\t\t}", "+\t\tif (single) {", "+\t\t\tint x = 0;", "+\t\t\tint y = borderTop;", "+\t\t\tint width = size.x - borderLeft - borderRight + 1;", "+\t\t\tint height = tabHeight - SELECTION_BORDER - 1;", "+\t\t\tint[] shape = new int[TOP_LEFT_OUTSIDE_CORNER.length + TOP_RIGHT_OUTSIDE_CORNER.length + 4];", "+\t\t\tint index = 0;", "+\t\t\tshape[index++] = x;", "+\t\t\tshape[index++] = y+height;", "+\t\t\tfor (int i = 0; i < TOP_LEFT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\tshape[index++] = x+TOP_LEFT_OUTSIDE_CORNER[2*i];", "+\t\t\t\tshape[index++] = y+TOP_LEFT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t}", "+\t\t\tfor (int i = 0; i < TOP_RIGHT_OUTSIDE_CORNER.length/2; i++) {", "+\t\t\t\tshape[index++] = x+width+TOP_RIGHT_OUTSIDE_CORNER[2*i];", "+\t\t\t\tshape[index++] = y+TOP_RIGHT_OUTSIDE_CORNER[2*i+1];", "+\t\t\t}", "+\t\t\tshape[index++] = x+width;", "+\t\t\tshape[index++] = y+height+1;", "+\t\t\t", "+\t\t\tgc.setForeground(border1Color);", "+\t\t\tgc.drawPolyline(shape);", "+\t\t}", "+\t"]}], "num": 53389}