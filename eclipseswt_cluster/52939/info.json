{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50fa97d4bec100a4dff5c0541918c5ea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7028c9f2afac544260570df39b98eef7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "acc0030d5a78af91c994cf7e186a8e8f3868c704", "commitAfterChange": "5955df716087c7c49a4980fa592ba6d6fd1a35b4", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 54, "signatureBeforeChange": " void paint(GC gc, TreeColumn column, boolean paintCellContent)", "signatureAfterChange": " void paint(GC gc, TreeColumn column, boolean paintCellContent)", "diff": ["-\tRectangle cellBounds = getCellBounds(columnIndex);", "+\tRectangle cellBounds = getBounds(columnIndex);", "+", "+\tImage image = internalGetImage(columnIndex);", "+\tString text = internalGetText(columnIndex);", "+\tRectangle imageArea = getImageBounds(columnIndex);", "+\tint startX = imageArea.x;", "-\tint startX = getContentX(columnIndex);", "-\t", "-\tImage image = internalGetImage(columnIndex);", "-\tString text = internalGetText(columnIndex);", "-", "-\tif (columnIndex > 0) {\t\t/* column 0 can only be left-aligned */", "-\t\tint contentWidth = internalGetTextWidth(columnIndex);", "-\t\tif (image != null) {", "-\t\t\tcontentWidth += image.getBounds().width + Tree2.MARGIN_IMAGE;", "-\t\t}", "-\t\tif ((column.style & SWT.RIGHT) != 0) {", "-\t\t\tstartX = Math.max(startX, x + column.getWidth() - padding - contentWidth);\t", "-\t\t} else {\t/* SWT.CENTER */", "-\t\t\tstartX = Math.max(startX, x + (column.getWidth() - contentWidth) / 2);\t", "-\t\t}", "-\t}", "-\t\t/* ", "-\t\t * For column 0 all images have the same width, which may be larger or smaller", "-\t\t * than the image to be drawn here.  Therefore the image bounds to draw must be", "-\t\t * specified.", "-\t\t */", "-\t\tint drawWidth;", "-\t\tif (columnIndex == 0) {", "-\t\t\tint imageSpaceX = parent.col0ImageWidth;", "-\t\t\tdrawWidth = Math.min (imageSpaceX, imageBounds.width);", "-\t\t} else {", "-\t\t\tdrawWidth = imageBounds.width;", "-\t\t}", "-\t\tint imageSpaceY = itemHeight - (2 * padding);", "-\t\tint drawHeight = Math.min (imageSpaceY, imageBounds.height);", "-\t\t\tstartX, y + (itemHeight - drawHeight) / 2,\t/* dest x, y */", "-\t\t\tdrawWidth, drawHeight);\t\t\t\t\t/* dest width, height */", "+\t\t\timageArea.x, imageArea.y,\t/* dest x, y */", "+\t\t\timageArea.width, imageArea.height);\t\t\t\t\t/* dest width, height */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ed1763539298d0a79bae6370c04b544", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableColumn.java", "commitBeforeChange": "ed6471c0ec0d0ee0c1436d2bdeadc8ba513ab4fd", "commitAfterChange": "034d8fba7f4ca7576ddaeee539a2fb56ee664327", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean isDefaultWidth()", "signatureAfterChange": " void paint (GC gc)", "diff": ["- */", "-boolean isDefaultWidth() {", "-\treturn isDefaultWidth;", "-}", "+void paint (GC gc) {", "+\tint padding = parent.getHeaderPadding ();", "+\t", "+\tint x = getX ();", "+\tint startX = x + padding;", "+\tif ((style & SWT.LEFT) == 0) {", "+\t\tint contentWidth = getContentWidth (gc, true);", "+\t\tif ((style & SWT.RIGHT) != 0) {", "+\t\t\tstartX = Math.max (startX, x + width - padding - contentWidth);\t", "+\t\t} else {\t/* SWT.CENTER */", "+\t\t\tstartX = Math.max (startX, x + (width - contentWidth) / 2);\t", "+\t\t}", "+\t}", "+\tint headerHeight = parent.getHeaderHeight ();", "+\t/* restrict the clipping region to the header cell */", "+\tgc.setClipping (", "+\t\tx + padding,", "+\t\tpadding,", "+\t\twidth - 2 * padding,", "+\t\theaderHeight - 2 * padding);", "+\t", "+\tif (image != null) {", "+\t\tRectangle imageBounds = image.getBounds ();", "+\t\tint drawHeight = Math.min (imageBounds.height, headerHeight - 2 * padding);", "+\t\tgc.drawImage (", "+\t\t\timage,", "+\t\t\t0, 0,", "+\t\t\timageBounds.width, imageBounds.height,", "+\t\t\tstartX, (headerHeight - drawHeight) / 2,", "+\t\t\timageBounds.width, drawHeight); ", "+\t\tstartX += imageBounds.width;", "+\t\tif (displayText.length () > 0) startX += Table.MARGIN_IMAGE; ", "+\t}", "+\tif (displayText.length () > 0) {", "+\t\tint fontHeight = parent.fontHeight;", "+\t\tgc.drawText (displayText, startX, (headerHeight - fontHeight) / 2, SWT.DRAW_MNEMONIC);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0672b3c4da222795f48607bd14cca83", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 29, "signatureBeforeChange": " int getContentX (int columnIndex)", "signatureAfterChange": " int getPaintStartX()", "diff": ["-int getContentX (int columnIndex) {", "-\tif (columnIndex > 0) {", "-\t\tTreeColumn column = parent.getColumn (columnIndex);", "-\t\tint contentX = column.getX () + MARGIN_TEXT;", "-\t\tif ((column.style & SWT.LEFT) != 0) return contentX;", "-\t\t", "-\t\tint contentWidth = internalGetTextWidth (columnIndex);", "-\t\tImage image = internalGetImage (columnIndex);", "-\t\tif (image != null) {", "-\t\t\tcontentWidth += Tree2.MARGIN_IMAGE + image.getBounds ().width;", "-\t\t}", "-\t\tif ((column.style & SWT.RIGHT) != 0) {", "-\t\t\tint padding = parent.getCellPadding ();", "-\t\t\tcontentX = Math.max (contentX, column.getX () + column.getWidth () - padding - contentWidth);\t", "-\t\t} else {\t/* SWT.CENTER */", "-\t\t\tcontentX = Math.max (contentX, column.getX () + (column.getWidth () - contentWidth) / 2);", "-\t\t}", "-\t\treturn contentX;", "-\t}", "-\t/* column 0 */", "-\tif ((parent.style & SWT.CHECK) != 0) {", "-\t\tRectangle checkBounds = getCheckboxBounds ();", "-\t\treturn checkBounds.x + checkBounds.width + Tree2.MARGIN_IMAGE;", "-\t}", "-\treturn getHconnectorEndpoints ()[1].x + Tree2.MARGIN_IMAGE;", "+ */", "+int getPaintStartX() {", "+\tTree2 parent = getParent();", "+\tPoint imageExtent;", "+\tTreeItem2 parentItem;", "+", "+\tif (paintStartX == -1) {", "+\t\tif (isRoot() == true) {", "+\t\t\tpaintStartX = ROOT_INDENT;", "+\t\t}", "+\t\telse {", "+\t\t\tparentItem = getParentItem();", "+\t\t\t// subtract parent.getHorizontalOffset() to calculate the cached start ", "+\t\t\t// position independent of the horizontal scroll offset. Fixes 1G1L7EU.", "+\t\t\tpaintStartX = parentItem.getPaintStartX() ", "+\t\t\t\t- parent.getHorizontalOffset()\t", "+\t\t\t\t+ parentItem.getDecorationsWidth()", "+\t\t\t\t- parent.getHierarchyIndicatorRect().width / 2;", "+\t\t\timageExtent = parent.getImageExtent();", "+\t\t\tif (imageExtent != null) {", "+\t\t\t\tpaintStartX += imageExtent.x / 2;", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tpaintStartX += ITEM_NOIMAGE_OFFSET;", "+\t\t\t}", "+\t\t}", "+\t}", "+\treturn paintStartX + parent.getHorizontalOffset();", "+}"]}], "num": 52939}