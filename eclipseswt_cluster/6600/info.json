{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d49f7875b1a4f77898b9e835e403b970", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78983c4e4f087d5278e7ff93e8e84320", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "2c8a13d0df1694740c0af6220e23682b3ddd10de", "commitAfterChange": "056762a1d7c74e75bfac132d1e756819b6f3b39e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean setUrl(String url)", "signatureAfterChange": "  public boolean setUrl(String url, String postData, String[] headers)", "diff": ["-public boolean setUrl(String url) {", "+public boolean setUrl(String url, String postData, String[] headers) {", "-\tNSURLRequest request = NSURLRequest.requestWithURL(inURL);", "+\tNSMutableURLRequest request = (NSMutableURLRequest)NSMutableURLRequest.requestWithURL(inURL);", "+\tif (postData != null) {", "+\t\trequest.setHTTPMethod(NSString.stringWith(POST));", "+\t\tbyte[] bytes = postData.getBytes();", "+\t\tNSData data = NSData.dataWithBytes(bytes, bytes.length);", "+\t\trequest.setHTTPBody(data);", "+\t}", "+\tif (headers != null) {", "+\t\tfor (int i = 0; i < headers.length; i++) {", "+\t\t\tString current = headers[i];", "+\t\t\tint index = current.indexOf(':');", "+\t\t\tif (index != -1) {", "+\t\t\t\tString key = current.substring(0, index).trim();", "+\t\t\t\tString value = current.substring(index + 1).trim();", "+\t\t\t\tif (key.length() > 0 && value.length() > 0) {", "+\t\t\t\t\tif (key.equals(USER_AGENT)) {", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t* Feature of Safari.  The user-agent header value cannot be overridden", "+\t\t\t\t\t\t* here.  The workaround is to temporarily set the value on the WebView", "+\t\t\t\t\t\t* and then remove it after the loading of the request has begun.", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\twebView.setCustomUserAgent(NSString.stringWith(value));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\trequest.setValue(NSString.stringWith(value), NSString.stringWith(key));\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\twebView.setCustomUserAgent(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3552c2ee99b0166c21e90b56ad90f6d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "7e632feed9e029d710fd3c7c625039dfd91ea9ad", "commitAfterChange": "f248d27eba65ed41c9146d5bdd2fea733e2f0658", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+\t\t\t\t\t\tif (performingInitialNavigate) break;", "-\t\t\t\t\t\tif (url.startsWith(PROTOCOL_FILE) && getUrl().startsWith(ABOUT_BLANK) && untrustedText) {", "+\t\t\t\t\t\tif (url.startsWith(PROTOCOL_FILE) && _getUrl().startsWith(ABOUT_BLANK) && untrustedText) {", "-\t\t\t\t\t\tif (!initialNavigateComplete) {", "+\t\t\t\t\t\tif (performingInitialNavigate) {", "-\t\t\t\t\t\t\tinitialNavigateComplete = true;", "+\t\t\t\t\t\t\tperformingInitialNavigate = false;", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tif (pendingUrl != null) {", "-\t\t\t\t\t\t\t\t\tsetUrl((String)pendingUrl[0], (String)pendingUrl[1], (String[])pendingUrl[2]);", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else if (pendingUrl != null) {", "+\t\t\t\t\t\t\t\tsetUrl((String)pendingUrl[0], (String)pendingUrl[1], (String[])pendingUrl[2]);", "-\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+\t\t\t\t\t\tif (performingInitialNavigate) break;", "-\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+\t\t\t\t\t\tif (performingInitialNavigate) break;", "-\t\t\t\t\t\tif (!initialNavigateComplete) break;", "+\t\t\t\t\t\tif (performingInitialNavigate) break;", "-", "-\t/*", "-\t* Navigate initially to about:blank, in order to be consistent with", "-\t* the other browser implementations which auto-navigate there on startup,", "-\t* and to work around IE bug http://support.microsoft.com/kb/320153.  Any", "-\t* content that is set via setUrl() or setText() will be held as pending", "-\t* until the first DocumentComplete callback is received, indicating the", "-\t* completion of this initial navigate to about:blank.", "-\t*/", "-\tnavigate(ABOUT_BLANK, null, null, true);"]}], "num": 6600}