{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5b89da755949f4da300dc94d3f465f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92339735b98b1004ea5d5652667b5c4f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/cocoa/org/eclipse/swt/program/Program.java", "commitBeforeChange": "b9cbee7b913728a6d3d4cef0fbbe2148825051f0", "commitAfterChange": "20371ac7bc24ef2dc90368b442c30700f28226f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Program [] getPrograms ()", "signatureAfterChange": " public static Program [] getPrograms ()", "diff": ["-\t\t\t\t\t\tif (bundle != null) vector.addElement(getProgram(bundle));", "+\t\t\t\t\t\tif (bundle != null) {", "+\t\t\t\t\t\t\tProgram program = getProgram(bundle);", "+\t\t\t\t\t\t\tif (program != null) vector.addElement(program);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b54ba6630e0d2b6dcb8a034aa69063", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT OLE Win32/win32/org/eclipse/swt/ole/win32/OleControlSite.java", "commitBeforeChange": "b6627f48ba1a8864fa9727b1507730370fdc2264", "commitAfterChange": "660361f6360025eaab8c8341ff1721884b7bfefc", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " void onFocusOut(Event e)", "signatureAfterChange": " void onFocusOut(Event e)", "diff": ["-\tif (objIOleInPlaceObject != null && getProgramID().startsWith(SHELL_PROG_ID)) {", "-\t\t/*", "-\t\t* Bug in Windows.  When IE7 loses focus and UIDeactivate()", "-\t\t* is called, IE destroys the caret even though it is", "-\t\t* no longer owned by IE.  If focus has moved to a control", "-\t\t* that shows a caret then the caret disappears.  The fix ", "-\t\t* is to detect this case and restore the caret.", "-\t\t*/", "-\t\tint threadId = OS.GetCurrentThreadId();", "-\t\tGUITHREADINFO lpgui1 = new GUITHREADINFO();", "-\t\tlpgui1.cbSize = GUITHREADINFO.sizeof;", "-\t\tOS.GetGUIThreadInfo(threadId, lpgui1);", "-\t\tobjIOleInPlaceObject.UIDeactivate();", "-\t\tif (lpgui1.hwndCaret != 0) {", "-\t\t\tGUITHREADINFO lpgui2 = new GUITHREADINFO();", "-\t\t\tlpgui2.cbSize = GUITHREADINFO.sizeof;", "-\t\t\tOS.GetGUIThreadInfo(threadId, lpgui2);", "-\t\t\tif (lpgui2.hwndCaret == 0 && lpgui1.hwndCaret == OS.GetFocus()) {", "-\t\t\t\tif (SWT_RESTORECARET == 0) {", "-\t\t\t\t\tSWT_RESTORECARET = OS.RegisterWindowMessage (new TCHAR (0, \"SWT_RESTORECARET\", true));", "-\t\t\t\t}", "-\t\t\t\t/*", "-\t\t\t\t* If the caret was not restored by SWT, put it back using", "-\t\t\t\t* the information from GUITHREADINFO.  Note that this will", "-\t\t\t\t* not be correct when the caret has a bitmap.  There is no", "-\t\t\t\t* API to query the bitmap that the caret is using.", "-\t\t\t\t*/", "-\t\t\t\tif (OS.SendMessage (lpgui1.hwndCaret, SWT_RESTORECARET, 0, 0) == 0) {", "-\t\t\t\t\tint width = lpgui1.right - lpgui1.left;", "-\t\t\t\t\tint height = lpgui1.bottom - lpgui1.top;", "-\t\t\t\t\tOS.CreateCaret (lpgui1.hwndCaret, 0, width, height);", "-\t\t\t\t\tOS.SetCaretPos (lpgui1.left, lpgui1.top);", "-\t\t\t\t\tOS.ShowCaret (lpgui1.hwndCaret);", "+\tif (objIOleInPlaceObject != null) {", "+\t\tString progID = getProgramID();", "+\t\tif (progID != null && progID.startsWith(SHELL_PROG_ID)) {", "+\t\t\t/*", "+\t\t\t* Bug in Windows.  When IE7 loses focus and UIDeactivate()", "+\t\t\t* is called, IE destroys the caret even though it is", "+\t\t\t* no longer owned by IE.  If focus has moved to a control", "+\t\t\t* that shows a caret then the caret disappears.  The fix ", "+\t\t\t* is to detect this case and restore the caret.", "+\t\t\t*/", "+\t\t\tint threadId = OS.GetCurrentThreadId();", "+\t\t\tGUITHREADINFO lpgui1 = new GUITHREADINFO();", "+\t\t\tlpgui1.cbSize = GUITHREADINFO.sizeof;", "+\t\t\tOS.GetGUIThreadInfo(threadId, lpgui1);", "+\t\t\tobjIOleInPlaceObject.UIDeactivate();", "+\t\t\tif (lpgui1.hwndCaret != 0) {", "+\t\t\t\tGUITHREADINFO lpgui2 = new GUITHREADINFO();", "+\t\t\t\tlpgui2.cbSize = GUITHREADINFO.sizeof;", "+\t\t\t\tOS.GetGUIThreadInfo(threadId, lpgui2);", "+\t\t\t\tif (lpgui2.hwndCaret == 0 && lpgui1.hwndCaret == OS.GetFocus()) {", "+\t\t\t\t\tif (SWT_RESTORECARET == 0) {", "+\t\t\t\t\t\tSWT_RESTORECARET = OS.RegisterWindowMessage (new TCHAR (0, \"SWT_RESTORECARET\", true));", "+\t\t\t\t\t}", "+\t\t\t\t\t/*", "+\t\t\t\t\t* If the caret was not restored by SWT, put it back using", "+\t\t\t\t\t* the information from GUITHREADINFO.  Note that this will", "+\t\t\t\t\t* not be correct when the caret has a bitmap.  There is no", "+\t\t\t\t\t* API to query the bitmap that the caret is using.", "+\t\t\t\t\t*/", "+\t\t\t\t\tif (OS.SendMessage (lpgui1.hwndCaret, SWT_RESTORECARET, 0, 0) == 0) {", "+\t\t\t\t\t\tint width = lpgui1.right - lpgui1.left;", "+\t\t\t\t\t\tint height = lpgui1.bottom - lpgui1.top;", "+\t\t\t\t\t\tOS.CreateCaret (lpgui1.hwndCaret, 0, width, height);", "+\t\t\t\t\t\tOS.SetCaretPos (lpgui1.left, lpgui1.top);", "+\t\t\t\t\t\tOS.ShowCaret (lpgui1.hwndCaret);", "+\t\t\t\t\t}"]}], "num": 46393}