{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cdafcfde497c093fb8a37709d294b733", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b56fbd9078cd37ad0b2fa0897f45cb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "b51df8c5d2a1f1ef29aaa06e71ea019f83afe7b0", "commitAfterChange": "ca9274a88ad2bbd34f29d272a5b3805367bb073d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \r LRESULT wmScroll (int msg, int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT wmScroll (ScrollBar bar, int msg, int wParam, int lParam)", "diff": ["-LRESULT wmScroll (int msg, int wParam, int lParam) {\r", "-\tint type = OS.SB_HORZ;\r", "-\tScrollBar bar = horizontalBar;\r", "-\tif (msg == OS.WM_VSCROLL) {\r", "-\t\ttype = OS.SB_VERT;\r", "-\t\tbar = verticalBar;\r", "+LRESULT wmScroll (ScrollBar bar, int msg, int wParam, int lParam) {\r", "+\tLRESULT result = null;\r", "+\tif ((state & CANVAS) != 0) {\r", "+\t\tint type = msg == OS.WM_HSCROLL ? OS.SB_HORZ : OS.SB_VERT;\r", "+\t\tSCROLLINFO info = new SCROLLINFO ();\r", "+\t\tinfo.cbSize = SCROLLINFO.sizeof;\r", "+\t\tinfo.fMask = OS.SIF_TRACKPOS | OS.SIF_POS | OS.SIF_RANGE;\r", "+\t\tOS.GetScrollInfo (handle, type, info);\r", "+\t\tinfo.fMask = OS.SIF_POS;\r", "+\t\tint code = wParam & 0xFFFF;\r", "+\t\tswitch (code) {\r", "+\t\t\tcase OS.SB_ENDSCROLL:  return null;\r", "+\t\t\tcase OS.SB_THUMBTRACK:\r", "+\t\t\tcase OS.SB_THUMBPOSITION:\r", "+\t\t\t\t/* \r", "+\t\t\t\t* Note: On WinCE, the value in SB_THUMBPOSITION is relative to nMin.\r", "+\t\t\t\t* Same for SB_THUMBPOSITION 'except' for the very first thumb track\r", "+\t\t\t\t* message which has the actual value of nMin. This is a problem when\r", "+\t\t\t\t* nMin is not zero.\r", "+\t\t\t\t*/\r", "+\t\t\t\tinfo.nPos = info.nTrackPos;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_TOP:\r", "+\t\t\t\tinfo.nPos = info.nMin;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_BOTTOM:\r", "+\t\t\t\tinfo.nPos = info.nMax;\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_LINEDOWN:\r", "+\t\t\t\tinfo.nPos += bar.getIncrement ();\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_LINEUP:\r", "+\t\t\t\tint increment = bar.getIncrement ();\r", "+\t\t\t\tinfo.nPos = Math.max (info.nMin, info.nPos - increment);\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_PAGEDOWN:\r", "+\t\t\t\tinfo.nPos += bar.getPageIncrement ();\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase OS.SB_PAGEUP:\r", "+\t\t\t\tint pageIncrement = bar.getPageIncrement ();\r", "+\t\t\t\tinfo.nPos = Math.max (info.nMin, info.nPos - pageIncrement);\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t\tOS.SetScrollInfo (handle, type, info, true);\r", "+\t} else {\r", "+\t\tint code = callWindowProc (msg, wParam, lParam);\r", "+\t\tresult = code == 0 ? LRESULT.ZERO : new LRESULT (code);\r", "-\tif (bar == null) return null;\r", "-\tSCROLLINFO info = new SCROLLINFO ();\r", "-\tinfo.cbSize = SCROLLINFO.sizeof;\r", "-\tinfo.fMask = OS.SIF_TRACKPOS | OS.SIF_POS | OS.SIF_RANGE;\r", "-\tOS.GetScrollInfo (handle, type, info);\r", "-\tinfo.fMask = OS.SIF_POS;\r", "-\tint code = wParam & 0xFFFF;\r", "-\tswitch (code) {\r", "-\t\tcase OS.SB_ENDSCROLL:  return null;\r", "-\t\tcase OS.SB_THUMBTRACK:\r", "-\t\tcase OS.SB_THUMBPOSITION:\r", "-\t\t\t/* \r", "-\t\t\t* Note: On WinCE, the value in SB_THUMBPOSITION is relative to nMin.\r", "-\t\t\t* Same for SB_THUMBPOSITION 'except' for the very first thumb track\r", "-\t\t\t* message which has the actual value of nMin. This is a problem when\r", "-\t\t\t* nMin is not zero.\r", "-\t\t\t*/\r", "-\t\t\tinfo.nPos = info.nTrackPos;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_TOP:\r", "-\t\t\tinfo.nPos = info.nMin;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_BOTTOM:\r", "-\t\t\tinfo.nPos = info.nMax;\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_LINEDOWN:\r", "-\t\t\tinfo.nPos += bar.getIncrement ();\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_LINEUP:\r", "-\t\t\tint increment = bar.getIncrement ();\r", "-\t\t\tinfo.nPos = Math.max (info.nMin, info.nPos - increment);\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_PAGEDOWN:\r", "-\t\t\tinfo.nPos += bar.getPageIncrement ();\r", "-\t\t\tbreak;\r", "-\t\tcase OS.SB_PAGEUP:\r", "-\t\t\tint pageIncrement = bar.getPageIncrement ();\r", "-\t\t\tinfo.nPos = Math.max (info.nMin, info.nPos - pageIncrement);\r", "-\t\t\tbreak;\r", "-\t}\r", "-\tOS.SetScrollInfo (handle, type, info, true);\r", "-\treturn null;\r", "+\tbar.wmScrollChild (wParam, lParam);\r", "+\treturn result;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd66885d3911deede0b1e0641481e75d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "49fc28ae0c8bfa3da9d3d275f3bbf728a83c6667", "commitAfterChange": "9487a39aeb38c9e1f08625283efa9e6451dbc931", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "signatureAfterChange": "  int setBounds (int x, int y, int width, int height, boolean move, boolean resize)", "diff": ["-\t\tint oldWidth = 0, oldHeight = 0;", "-\t\tif ((state & ZERO_SIZED) == 0) {", "-\t\t\toldWidth = OS.GTK_WIDGET_WIDTH (topHandle);", "-\t\t\toldHeight = OS.GTK_WIDGET_HEIGHT (topHandle);", "-\t\t}", "+\t\tint oldWidth = (state & ZERO_WIDTH) != 0 ? 0 : OS.GTK_WIDGET_WIDTH (topHandle);", "+\t\tint oldHeight = (state & ZERO_HEIGHT) != 0 ? 0 : OS.GTK_WIDGET_HEIGHT (topHandle);", "-\t\tif (width == 0 && height == 0) {", "-\t\t\tstate |= ZERO_SIZED;", "+\t\tstate = (width == 0) ? state | ZERO_WIDTH : state & ~ZERO_WIDTH;", "+\t\tstate = (height == 0) ? state | ZERO_HEIGHT : state & ~ZERO_HEIGHT;", "+\t\tif ((state & (ZERO_WIDTH | ZERO_HEIGHT)) != 0) {", "-\t\t\tstate &= ~ZERO_SIZED;"]}], "num": 12542}