{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b09e9323686774483be5978b41eace0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ea8c5165b921b166ac29a546e50f17", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "ec0f35229704d59e8a0e8d08c5de254e59e57d5b", "commitAfterChange": "520d1ed0b907299aeb948cdb51785c50502c0827", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 92, "signatureBeforeChange": " void updateColumnWidth (TreeColumn column, GC gc)", "signatureAfterChange": " void updateColumnWidth (TreeColumn column, GC gc)", "diff": ["+ */", "+\tString oldDisplayText = displayTexts [columnIndex];", "+", "+\t/* the cell must be damaged if there is custom drawing being done or if the alignment is not LEFT */", "+\tif (availableIndex != -1) {", "+\t\tboolean columnIsLeft = (column.style & SWT.LEFT) != 0;", "+\t\tif (!columnIsLeft || parent.hooks (SWT.EraseItem) || parent.hooks (SWT.PaintItem)) {", "+\t\t\tRectangle cellBounds = getCellBounds (columnIndex);", "+\t\t\tparent.redraw (cellBounds.x, cellBounds.y, cellBounds.width, cellBounds.height, false);", "+\t\t} else {", "+\t\t\t/* if the display text has changed then the cell text must be damaged in order to repaint */\t", "+\t\t\tif (!oldDisplayText.equals (displayTexts [columnIndex])) {", "+\t\t\t\tRectangle cellBounds = getCellBounds (columnIndex);", "+\t\t\t\tint textX = getTextX (columnIndex);", "+\t\t\t\tparent.redraw (textX, cellBounds.y, cellBounds.x + cellBounds.width - textX, cellBounds.height, false);", "+\t\t\t}", "+\t\t}", "+\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "355a9c2cd811fa285d615ad94bd25e50", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TableItem.java", "commitBeforeChange": "d94d01b4d71bbf5e85d7f9e44c609b877ecde200", "commitAfterChange": "1e2f57c9785147e1803e8ec92587cb100b302b0b", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " void updateColumnWidth (TableColumn column, GC gc)", "signatureAfterChange": " void updateColumnWidth (TableColumn column, GC gc)", "diff": ["+ */", "+\tString oldDisplayText = displayTexts [columnIndex];", "+", "+\t/* the cell must be damaged if there is custom drawing being done or if the alignment is not LEFT */", "+\tboolean columnIsLeft = (column.style & SWT.LEFT) != 0;", "+\tif (!columnIsLeft || parent.hooks (SWT.EraseItem) || parent.hooks (SWT.PaintItem)) {", "+\t\tRectangle cellBounds = getCellBounds (columnIndex);", "+\t\tparent.redraw (cellBounds.x, cellBounds.y, cellBounds.width, cellBounds.height, false);", "+\t\treturn;", "+\t}", "+\t/* if the display text has changed then the cell text must be damaged in order to repaint */\t", "+\tif (!oldDisplayText.equals (displayTexts [columnIndex])) {", "+\t\tRectangle cellBounds = getCellBounds (columnIndex);", "+\t\tint textX = getTextX (columnIndex);", "+\t\tparent.redraw (textX, cellBounds.y, cellBounds.x + cellBounds.width - textX, cellBounds.height, false);", "+\t}"]}], "num": 9981}