{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "265b155a7e51fd8bcc89f662c14a1922", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac29f4fd85f76b52c0c4b2ccb5fa66a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3f40366a943605922c1277c5d17602a9e3318911", "commitAfterChange": "c8d5e49d5a2c0817d6316dd3dfcd4087e493d9a8", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tcase 126: /* Up*/", "+\t\tcase 126: /* Up*/ {", "+\t\t\tint [] itemCount = new int [1];", "+\t\t\tif (OS.GetDataBrowserItemCount (handle, OS.kDataBrowserNoItem, false, OS.kDataBrowserItemAnyState, itemCount) == OS.noErr) {", "+\t\t\t\tif (itemCount [0] == 0) break;", "+\t\t\t}", "-\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tint [] itemId = null;", "+\t\t\tint [] selectionCount = new int [1];", "+\t\t\tif (OS.GetDataBrowserItemCount (handle, OS.kDataBrowserNoItem, true, OS.kDataBrowserItemIsSelected, selectionCount) == OS.noErr) {", "+\t\t\t\tif (savedAnchor != 0 && selectionCount [0] == 0) {", "+\t\t\t\t\tint [] index = new int [1];", "+\t\t\t\t\tif (OS.GetDataBrowserTableViewItemRow (handle, savedAnchor, index) == OS.noErr) {", "+\t\t\t\t    \tindex [0] = index [0] + (keyCode [0] == 125 ? 1 : -1);", "+\t\t\t\t    \titemId = new int [1];", "+\t\t\t\t    \tif (OS.GetDataBrowserTableViewItemID (handle, index [0], itemId) != OS.noErr) {", "+\t\t\t\t    \t\titemId [0] = savedAnchor;", "+\t\t\t\t    \t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (itemId != null) {", "+\t\t\t\tOS.SetDataBrowserSelectedItems (handle, 1, itemId, OS.kDataBrowserItemsAssign);", "+\t\t\t\tresult = OS.noErr;", "+\t\t\t} else {", "+\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t}", "-\t\t\t", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a676d64b9ebbcb30e5a0ea195e5ff7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "3f40366a943605922c1277c5d17602a9e3318911", "commitAfterChange": "c8d5e49d5a2c0817d6316dd3dfcd4087e493d9a8", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "signatureAfterChange": "  int kEventUnicodeKeyPressed (int nextHandler, int theEvent, int userData)", "diff": ["-\t\tcase 126: /* Up*/", "+\t\tcase 126: /* Up*/ {", "+\t\t\tif (itemCount == 0) break;", "-\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\tboolean selectItem = false;", "+\t\t\tint [] selectionCount = new int [1];", "+\t\t\tif (OS.GetDataBrowserItemCount (handle, OS.kDataBrowserNoItem, true, OS.kDataBrowserItemIsSelected, selectionCount) == OS.noErr) {", "+\t\t\t\tselectItem = savedAnchor != 0 && selectionCount [0] == 0;", "+\t\t\t}", "+\t\t\tif (selectItem) {", "+\t\t\t    int index = getIndex (savedAnchor) + (keyCode [0] == 125 ? 1 : -1);", "+\t\t\t    index = Math.max (0, Math.min (itemCount - 1, index));", "+\t\t\t    int [] itemId = new int [] {getId (index)};", "+\t\t\t\tOS.SetDataBrowserSelectedItems (handle, 1, itemId, OS.kDataBrowserItemsAssign);", "+\t\t\t\tresult = OS.noErr;", "+\t\t\t} else {", "+\t\t\t\tresult = OS.CallNextEventHandler (nextHandler, theEvent);", "+\t\t\t}", "-", "+\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "545d3f1148f4df8e00adfc3792f80b3d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/win32/org/eclipse/swt/browser/IE.java", "commitBeforeChange": "b6a1355efd8751a47f74a551d4a27ebea55b33b3", "commitAfterChange": "3b7e04304effe884e33175739d7c3054dcac5e13", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void create(Composite parent, int style)", "signatureAfterChange": "  public void create(Composite parent, int style)", "diff": ["-\t\t\t\t\t\t* field contains a string representing the file path in a non-URL format.", "+\t\t\t\t\t\t* field contains a string representation of the file path in a non-URL format.", "-\t\t\t\t\t\t\turl = PROTOCOL_FILE + url.replace('\\\\', '/');", "+\t\t\t\t\t\t\tTCHAR filePath = new TCHAR(0, url, true);", "+\t\t\t\t\t\t\tTCHAR urlResult = new TCHAR(0, OS.INTERNET_MAX_URL_LENGTH);", "+\t\t\t\t\t\t\tint[] size = new int[] {urlResult.length()};", "+\t\t\t\t\t\t\tif (!OS.IsWinCE && OS.UrlCreateFromPath(filePath, urlResult, size, 0) == COM.S_OK) {", "+\t\t\t\t\t\t\t\turl = urlResult.toString(0, size[0]);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\turl = PROTOCOL_FILE + url.replace('\\\\', '/');", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t* Bug in IE.  For navigations on the local machine, DocumentComplete's URL", "-\t\t\t\t\t\t* field contains a string representing the file path in a non-URL format.", "+\t\t\t\t\t\t* Feature in IE.  For navigations on the local machine, DocumentComplete's url", "+\t\t\t\t\t\t* field contains a string representation of the file path in a non-URL format.", "-\t\t\t\t\t\t\turl = PROTOCOL_FILE + url.replace('\\\\', '/');", "+\t\t\t\t\t\t\tTCHAR filePath = new TCHAR(0, url, true);", "+\t\t\t\t\t\t\tTCHAR urlResult = new TCHAR(0, OS.INTERNET_MAX_URL_LENGTH);", "+\t\t\t\t\t\t\tint[] size = new int[] {urlResult.length()};", "+\t\t\t\t\t\t\tif (!OS.IsWinCE && OS.UrlCreateFromPath(filePath, urlResult, size, 0) == COM.S_OK) {", "+\t\t\t\t\t\t\t\turl = urlResult.toString(0, size[0]);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\turl = PROTOCOL_FILE + url.replace('\\\\', '/');", "+\t\t\t\t\t\t\t}"]}], "num": 54371}