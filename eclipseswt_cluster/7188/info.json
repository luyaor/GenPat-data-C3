{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfc6abaf8fd77419e1c08eafa3965380", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d47ec25f84b444d03952a4477a8db266", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a8f238df882329c9d6f40cafabcea0043c35b1a1", "commitAfterChange": "ab71f26fec1a45ce0657bac58c38b33a315f0b0e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["+ */", "+public Point map (Control from, Control to, int x, int y) {", "+\tcheckDevice ();", "+\tif (from != null && from.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tif (to != null && to.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tint hwndFrom = from != null ? from.handle : 0;", "+\tint hwndTo = to != null ? to.handle : 0;", "+\tPOINT point = new POINT ();", "+\tpoint.x = x;", "+\tpoint.y = y;", "+\tOS.MapWindowPoints (hwndFrom, hwndTo, point, 1);", "+\treturn new Point (point.x, point.y);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715f6ea21adf2ede48dc652b957f1a2a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/photon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "a8f238df882329c9d6f40cafabcea0043c35b1a1", "commitAfterChange": "ab71f26fec1a45ce0657bac58c38b33a315f0b0e", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "signatureAfterChange": "  public Point map (Control from, Control to, int x, int y)", "diff": ["+", "+public Point map (Control from, Control to, int x, int y) {", "+\tcheckDevice ();", "+\tif (from != null && from.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tif (to != null && to.isDisposed()) error (SWT.ERROR_INVALID_ARGUMENT);", "+\tPoint point = new Point (x, y);", "+\tif (from != null) {", "+\t\tshort [] position_x = new short [1], position_y = new short [1];", "+\t\tOS.PtGetAbsPosition (from.handle, position_x, position_y);", "+\t\tpoint.x += position_x [0];", "+\t\tpoint.y += position_y [0];", "+\t}", "+\tif (to != null) {", "+\t\tshort [] position_x = new short [1], position_y = new short [1];", "+\t\tOS.PtGetAbsPosition (to.handle, position_x, position_y);", "+\t\tpoint.x -= position_x [0];", "+\t\tpoint.y -= position_y [0];", "+\t}", "+\treturn point;", "+}"]}], "num": 7188}