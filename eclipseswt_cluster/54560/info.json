{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ca8dc67389b8ad72ae70a98ead0e9174", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97ec928f5919d3ccf7080b9a94a143b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5e356c18b07e7f5af1a6b17c096783ad43ee7650", "commitAfterChange": "bec9de216652a0f1829bdec4dfa5d60c81e5e090", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 11, "signatureBeforeChange": " private static String[] getExtensions( Display display )", "signatureAfterChange": " static String[] getExtensions(Display display)", "diff": ["-private static String[] getExtensions( Display display ) {", "-\tint desktop = getDesktop( display );", "+static String[] getExtensions(Display display) {", "+\tint desktop = getDesktop(display);", "-\tif (desktop == DESKTOP_KDE)   mimeInfo = kde_getMimeInfo();", "+\tif (desktop == DESKTOP_KDE) mimeInfo = kde_getMimeInfo();", "-\tif (desktop == DESKTOP_CDE)   mimeInfo = cde_getDataTypeInfo();", "+\tif (desktop == DESKTOP_CDE) mimeInfo = cde_getDataTypeInfo();", "-\t\t\t", "-\t// Create a unique set of the file extensions.", "+\t/* Create a unique set of the file extensions. */", "-\t\tString mimeType = (String) keys.next();", "-\t\tVector mimeExts = (Vector) mimeInfo.get( mimeType );", "+\t\tString mimeType = (String)keys.next();", "+\t\tVector mimeExts = (Vector)mimeInfo.get(mimeType);", "-\t\t\tif (!extensions.contains( mimeExts.elementAt( index ) )) {", "-\t\t\t\textensions.addElement( mimeExts.elementAt( index ) );", "+\t\t\tif (!extensions.contains(mimeExts.elementAt(index))) {", "+\t\t\t\textensions.addElement(mimeExts.elementAt(index));", "-\t// Return the list of extensions.", "-\tString[] extStrings = new String[ extensions.size() ];", "+\t/* Return the list of extensions. */", "+\tString[] extStrings = new String[extensions.size()];", "-\t\textStrings[ index ] = (String) extensions.elementAt( index );", "+\t\textStrings[index] = (String)extensions.elementAt(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce52dbed47e1cccd6feeb91b360bcbb", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Program/motif/org/eclipse/swt/program/Program.java", "commitBeforeChange": "5e356c18b07e7f5af1a6b17c096783ad43ee7650", "commitAfterChange": "bec9de216652a0f1829bdec4dfa5d60c81e5e090", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private static boolean isGnomeDesktop(Display display)", "signatureAfterChange": "  static boolean isGnomeDesktop(Display display)", "diff": ["-", "-private static boolean isGnomeDesktop(Display display) {", "-\tint xDisplay = display.xDisplay;", "-\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "-\tint atom_set = OS.XInternAtom(xDisplay, name, true);", "-\treturn atom_set != OS.None ? gnome_init() : false;", "-}", "+static boolean isGnomeDesktop(Display display) {", "+\tint xDisplay = display.xDisplay;", "+\tbyte[] name = Converter.wcsToMbcs(null, \"_WIN_SUPPORTING_WM_CHECK\", true);", "+\tint atom_set = OS.XInternAtom(xDisplay, name, true);", "+\treturn atom_set != OS.None ? gnome_init() : false;", "+}"]}], "num": 54560}