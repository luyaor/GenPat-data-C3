{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a46c75f2c8b8d6093c1111fb9972b70", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0504afd1da8f703b4a38e26c9889397", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e3eec3bfdc5bc6b5484456b9bf280bdbc1d66f00", "commitAfterChange": "1fc9d817da3861f5e67eed2d83e4edc3fcb7625f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 34, "signatureBeforeChange": " int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int callData, int arg1, int int2)", "diff": ["+", "+int processMouseDown (int callData, int arg1, int int2) {", "+\tdoubleSelected = false;", "+\tint result = super.processMouseDown (callData, arg1, int2);", "+\tif ((style & SWT.MULTI) != 0) selected = true;", "+\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "+\tint x = (int) gdkEvent.x, y = (int) gdkEvent.y;\t", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tif (!OS.gtk_ctree_is_hot_spot (handle, x, y)) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tint code = OS.gtk_clist_get_selection_info (handle, x, y, row, column);", "+\t\t\tif (code != 0) {", "+\t\t\t\tint node = OS.gtk_ctree_node_nth (handle, row [0]);", "+\t\t\t\tint crow = OS.g_list_nth_data (node, 0);", "+\t\t\t\tGtkCTreeRow row_data = new GtkCTreeRow ();", "+\t\t\t\tOS.memmove (row_data, crow, GtkCTreeRow.sizeof);", "+\t\t\t\tGtkCTree ctree = new GtkCTree();", "+\t\t\t\tOS.memmove (ctree, handle, GtkCTree.sizeof);", "+\t\t\t\tint nX = ctree.hoffset + ctree.tree_indent * row_data.level - 2;", "+\t\t\t\tint nY = ctree.voffset + (ctree.row_height + 1) * row [0] + 2;", "+\t\t\t\tif (nX <= x && x <= nX + CHECK_WIDTH) {", "+\t\t\t\t\tif (nY <= y && y <= nY + CHECK_HEIGHT) {", "+\t\t\t\t\t\tbyte [] spacing = new byte [1];", "+\t\t\t\t\t\tboolean [] is_leaf = new boolean [1], expanded = new boolean [1];", "+\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "+\t\t\t\t\t\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "+\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, items [index].getText (), true);", "+\t\t\t\t\t\tOS.gtk_ctree_get_node_info (handle, node, null, spacing, pixmap, mask, pixmap, mask, is_leaf, expanded);", "+\t\t\t\t\t\tpixmap [0] = pixmap [0] == check.pixmap ? uncheck.pixmap : check.pixmap;", "+\t\t\t\t\t\tOS.gtk_ctree_set_node_info (handle, node, text, spacing [0], pixmap [0], mask [0], pixmap [0], mask [0], is_leaf [0], expanded [0]);", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.detail = SWT.CHECK;", "+\t\t\t\t\t\tevent.item = items [index];", "+\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) {", "+\t\tif (!OS.gtk_ctree_is_hot_spot (handle, x, y)) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tint code = OS.gtk_clist_get_selection_info (handle, x, y, row, column);", "+\t\t\tif (code != 0) doubleSelected = true;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-}", "-int processMouseDown (int callData, int arg1, int int2) {", "-\tOS.gtk_widget_grab_focus(handle);", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "-\tint eventType = SWT.MouseDown;", "-\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) {", "-\t\tGtkCTree tree = new GtkCTree();", "-\t\tOS.memmove(tree, handle, GtkCTree.sizeof);", "-\t\tint row=((int)gdkEvent.y-tree.voffset)/(tree.row_height+1);", "-\t\tint count = OS.g_list_length (tree.row_list);", "-\t\tif (row >= count) return 1;", "-\t\tint node = OS.g_list_nth(tree.row_list, row);", "-\t\tint data = OS.g_list_nth_data(node, 0);", "-\t\tGtkCTreeRow treerow = new GtkCTreeRow();", "-\t\tOS.memmove (treerow, data, GtkCTreeRow.sizeof);", "-\t\tif (OS.gtk_ctree_is_hot_spot(handle, (int)gdkEvent.x, (int)gdkEvent.y)){", "-\t\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (treerow.children != 0) {", "-\t\t\teventType = SWT.MouseDoubleClick;", "-\t\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t\t\treturn 1;", "-\t\t}\t ", "-\t\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "-\t\tselectedItem = items [index];", "-\t\tEvent event = new Event ();", "-\t\tevent.item=selectedItem;", "-\t\tif (selectedItem != null) ", "-\t\t\tsendEvent (SWT.DefaultSelection, event);", "-\t}else{", "-\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t}", "-\tif (gdkEvent.button == 3 && menu != null) {", "-\t\tmenu.setVisible (true);", "-\t}", "-\treturn 1;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a57d96b2ded0f5df1a179139528f7d27", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk1x/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "e3eec3bfdc5bc6b5484456b9bf280bdbc1d66f00", "commitAfterChange": "1fc9d817da3861f5e67eed2d83e4edc3fcb7625f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 34, "signatureBeforeChange": " int processMouseDown (int callData, int arg1, int int2)", "signatureAfterChange": "  int processMouseDown (int callData, int arg1, int int2)", "diff": ["+", "+int processMouseDown (int callData, int arg1, int int2) {", "+\tdoubleSelected = false;", "+\tint result = super.processMouseDown (callData, arg1, int2);", "+\tif ((style & SWT.MULTI) != 0) selected = true;", "+\tGdkEventButton gdkEvent = new GdkEventButton ();", "+\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "+\tint x = (int) gdkEvent.x, y = (int) gdkEvent.y;\t", "+\tif ((style & SWT.CHECK) != 0) {", "+\t\tif (!OS.gtk_ctree_is_hot_spot (handle, x, y)) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tint code = OS.gtk_clist_get_selection_info (handle, x, y, row, column);", "+\t\t\tif (code != 0) {", "+\t\t\t\tint node = OS.gtk_ctree_node_nth (handle, row [0]);", "+\t\t\t\tint crow = OS.g_list_nth_data (node, 0);", "+\t\t\t\tGtkCTreeRow row_data = new GtkCTreeRow ();", "+\t\t\t\tOS.memmove (row_data, crow, GtkCTreeRow.sizeof);", "+\t\t\t\tGtkCTree ctree = new GtkCTree();", "+\t\t\t\tOS.memmove (ctree, handle, GtkCTree.sizeof);", "+\t\t\t\tint nX = ctree.hoffset + ctree.tree_indent * row_data.level - 2;", "+\t\t\t\tint nY = ctree.voffset + (ctree.row_height + 1) * row [0] + 2;", "+\t\t\t\tif (nX <= x && x <= nX + CHECK_WIDTH) {", "+\t\t\t\t\tif (nY <= y && y <= nY + CHECK_HEIGHT) {", "+\t\t\t\t\t\tbyte [] spacing = new byte [1];", "+\t\t\t\t\t\tboolean [] is_leaf = new boolean [1], expanded = new boolean [1];", "+\t\t\t\t\t\tint [] pixmap = new int [1], mask = new int [1];", "+\t\t\t\t\t\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "+\t\t\t\t\t\tbyte [] text = Converter.wcsToMbcs (null, items [index].getText (), true);", "+\t\t\t\t\t\tOS.gtk_ctree_get_node_info (handle, node, null, spacing, pixmap, mask, pixmap, mask, is_leaf, expanded);", "+\t\t\t\t\t\tpixmap [0] = pixmap [0] == check.pixmap ? uncheck.pixmap : check.pixmap;", "+\t\t\t\t\t\tOS.gtk_ctree_set_node_info (handle, node, text, spacing [0], pixmap [0], mask [0], pixmap [0], mask [0], is_leaf [0], expanded [0]);", "+\t\t\t\t\t\tEvent event = new Event ();", "+\t\t\t\t\t\tevent.detail = SWT.CHECK;", "+\t\t\t\t\t\tevent.item = items [index];", "+\t\t\t\t\t\tpostEvent (SWT.Selection, event);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "+\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) {", "+\t\tif (!OS.gtk_ctree_is_hot_spot (handle, x, y)) {", "+\t\t\tint [] row = new int [1], column = new int [1];", "+\t\t\tint code = OS.gtk_clist_get_selection_info (handle, x, y, row, column);", "+\t\t\tif (code != 0) doubleSelected = true;", "+\t\t}", "+\t}", "+\treturn result;", "+}", "-}", "-int processMouseDown (int callData, int arg1, int int2) {", "-\tOS.gtk_widget_grab_focus(handle);", "-\tGdkEventButton gdkEvent = new GdkEventButton ();", "-\tOS.memmove (gdkEvent, callData, GdkEventButton.sizeof);", "-\tint eventType = SWT.MouseDown;", "-\tif (gdkEvent.type == OS.GDK_2BUTTON_PRESS) {", "-\t\tGtkCTree tree = new GtkCTree();", "-\t\tOS.memmove(tree, handle, GtkCTree.sizeof);", "-\t\tint row=((int)gdkEvent.y-tree.voffset)/(tree.row_height+1);", "-\t\tint count = OS.g_list_length (tree.row_list);", "-\t\tif (row >= count) return 1;", "-\t\tint node = OS.g_list_nth(tree.row_list, row);", "-\t\tint data = OS.g_list_nth_data(node, 0);", "-\t\tGtkCTreeRow treerow = new GtkCTreeRow();", "-\t\tOS.memmove (treerow, data, GtkCTreeRow.sizeof);", "-\t\tif (OS.gtk_ctree_is_hot_spot(handle, (int)gdkEvent.x, (int)gdkEvent.y)){", "-\t\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t\t\treturn 1;", "-\t\t}", "-\t\tif (treerow.children != 0) {", "-\t\t\teventType = SWT.MouseDoubleClick;", "-\t\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t\t\treturn 1;", "-\t\t}\t ", "-\t\tint index = OS.gtk_ctree_node_get_row_data (handle, node) - 1;", "-\t\tselectedItem = items [index];", "-\t\tEvent event = new Event ();", "-\t\tevent.item=selectedItem;", "-\t\tif (selectedItem != null) ", "-\t\t\tsendEvent (SWT.DefaultSelection, event);", "-\t}else{", "-\t\tsendMouseEvent (eventType, gdkEvent.button, gdkEvent.state, gdkEvent.time, (int)gdkEvent.x, (int)gdkEvent.y);", "-\t}", "-\tif (gdkEvent.button == 3 && menu != null) {", "-\t\tmenu.setVisible (true);", "-\t}", "-\treturn 1;", "-}"]}], "num": 47678}