{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00091e5ebad9f1a2651624edc32ad91c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c35269c1a30781728a28b80cf492621", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "70ad0effe5f094be7c9f0fc126e3f2ba49252b61", "commitAfterChange": "d04fb3f614d054ed3cf2600f4c59c394b9406469", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  \tprivate int handleApplicationCallback(int nextHandler, int eRefHandle, int userData)", "signatureAfterChange": "  \tprivate int handleApplicationCallback(int nextHandler, int eRefHandle, int userData)", "diff": ["-\t\tMacEvent mEvent= new MacEvent();", "+\t\tMacEvent mEvent= new MacEvent(eRefHandle);", "-\t\t//System.out.println(\"handleApplicationCallback: \" + MacUtil.toString(eventClass));", "-", "+\t\t\t", "+\t\tcase OS.kEventClassCommand:", "+\t\t", "+\t\t\tif (eventKind == 1) {", "+\t\t\t\tint[] rc= new int[4];", "+\t\t\t\tOS.GetEventHICommand(eRefHandle, rc);", "+\t\t\t\t", "+\t\t\t\t//System.out.println(\"kEventClassCommand: \" + rc[3]);", "+\t\t\t\t\t\t", "+\t\t\t\t// try to map the MenuRef to a SWT Menu", "+\t\t\t\tWidget w= findWidget (rc[2]);", "+\t\t\t\tif (w instanceof Menu) {", "+\t\t\t\t\tMenu menu= (Menu) w;", "+\t\t\t\t\tmenu.handleMenu(rc[3]);", "+\t\t\t\t\tOS.HiliteMenu((short)0);\t// unhighlight what MenuSelect (or MenuKey) hilited", "+\t\t\t\t\treturn OS.kNoErr;", "+\t\t\t\t}", "+\t\t\t\tOS.HiliteMenu((short)0);\t// unhighlight what MenuSelect (or MenuKey) hilited", "+\t\t\t\t// we do not return kNoErr here so that the default handler", "+\t\t\t\t// takes care of special menus like the Combo menu.", "+\t\t\t}", "+\t\t\tbreak;", "-\t\t\tif (OS.ConvertEventRefToEventRecord(eRefHandle, mEvent.getData())) {", "-\t\t\t\tswitch (eventKind) {", "-\t\t\t\tcase OS.kEventRawKeyDown:", "-\t\t\t\tcase OS.kEventRawKeyRepeat:", "-\t\t\t\t\tint cmd= OS.MenuEvent(mEvent.getData());", "-\t\t\t\t\tif (OS.HiWord(cmd) != 0) {", "-\t\t\t\t\t\t//System.out.println(\"doMenuCommand: \" + cmd);", "-\t\t\t\t\t\tdoMenuCommand(cmd);", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "-\t\t\t\t\thandleKeyEvent(SWT.KeyDown, mEvent);", "-\t\t\t\t\tbreak;", "-\t\t\t\t\t", "-\t\t\t\tcase OS.kEventRawKeyUp:", "-\t\t\t\t\tint code= mEvent.getKeyCode();", "-\t\t\t\t\tif (code == 48)\t// AW Hack for getting the Tab to work", "-\t\t\t\t\t\thandleKeyEvent(SWT.KeyDown, mEvent);", "-\t\t\t\t\telse\t", "-\t\t\t\t\t\thandleKeyEvent(SWT.KeyUp, mEvent);", "-\t\t\t\t\tbreak;", "-\t\t\t\t\t", "-\t\t\t\tcase OS.kEventHotKeyPressed:", "-\t\t\t\t\t//System.out.println(\"HOT KEY PRESSED\");", "-\t\t\t\t\tbreak;", "+\t\t\tSystem.out.println(\"  handleApplicationCallback: kEventClassKeyboard\");\t", "+\t\t\tswitch (eventKind) {", "+\t\t\tcase OS.kEventRawKeyDown:", "+\t\t\tcase OS.kEventRawKeyRepeat:", "+\t\t\t\tSystem.out.println(\"    kEventRawKeyDown | kEventRawKeyRepeat\");", "+\t\t\t\tint cmd= OS.MenuEvent(mEvent.getData());", "+\t\t\t\tif (OS.HiWord(cmd) != 0) {", "+\t\t\t\t\tSystem.out.println(\"    doMenuCommand: \" + cmd);", "+\t\t\t\t\t//doMenuCommand(cmd);", "+\t\t\t\t\treturn OS.kNoErr;", "+\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t", "+\t\t\tcase OS.kEventHotKeyPressed:", "+\t\t\t\tSystem.out.println(\"    kEventHotKeyPressed\");", "+\t\t\t\tbreak;", "+\t\t\tSystem.out.println(\"    end handleApplicationCallback: kEventClassKeyboard\");\t", "-\t\t\t\tOS.ConvertEventRefToEventRecord(eRefHandle, mEvent.getData());", "-\t\t\t\t\tdoMenuCommand(OS.MenuSelect(mEvent.getWhere().getData()));", "+\t\t\t\t\tint id= OS.MenuSelect(mEvent.getWhere().getData());", "+\t\t\t\t\t//doMenuCommand(OS.MenuSelect(mEvent.getWhere().getData()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac65f4885781485c15a80d32e0670789", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "af9f857dda29d2ee1989cc89928edc6e0958ebc8", "commitAfterChange": "4b24af5ef710affbf05bf5fb1df78e69400546d5", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "  \tprivate int handleApplicationCallback(int nextHandler, int eRefHandle, int userData)", "signatureAfterChange": "  \tprivate int handleApplicationCallback(int nextHandler, int eRefHandle, int userData)", "diff": ["+\t\t//System.out.println(\"handleApplicationCallback: \" + MacUtil.toString(eventClass));", "+", "-\t\t\t\tSystem.out.println(\"kEventMenuBeginTracking\");", "+\t\t\t\t//System.out.println(\"kEventMenuBeginTracking\");", "-\t\t\t\tSystem.out.println(\"kEventMenuEndTracking\");", "+\t\t\t\t//System.out.println(\"kEventMenuEndTracking\");", "-\t\t\treturn handleMouseCallback(nextHandler, eRefHandle);", "+\t\t\tif (eventKind == OS.kEventMouseDown) {", "+\t\t\t\t\t", "+\t\t\t\thideToolTip ();", "+\t", "+\t\t\t\tOS.ConvertEventRefToEventRecord(eRefHandle, mEvent.getData());", "+\t\t\t\t", "+\t\t\t\tMacPoint where= mEvent.getWhere();", "+\t\t\t\tint[] w= new int[1];", "+\t\t\t\tshort part= OS.FindWindow(where.getData(), w);", "+\t\t\t\t\t\t\t\t", "+\t\t\t\tint oldPort= OS.GetPort();", "+\t\t\t\tOS.SetPortWindowPort(w[0]);", "+\t\t\t\tOS.GlobalToLocal(where.getData());", "+\t\t\t\tOS.SetPort(oldPort);", "+\t\t\t\t", "+\t\t\t\tif (part == OS.inMenuBar) {", "+\t\t\t\t\tdoMenuCommand(OS.MenuSelect(mEvent.getWhere().getData()));", "+\t\t\t\t\treturn OS.kNoErr;", "+\t\t\t\t}", "+\t\t\t}\t\t", "+\t\t\treturn OS.eventNotHandledErr;"]}], "num": 61875}