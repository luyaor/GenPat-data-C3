{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b99ba0d8aa03d71786b4d807a81b0bb8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381e044fb1dfd2f1ef9f5aaddf8cceb7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "1cdb6ac60d808b5abe4b3260c8c5ac8c7e554559", "commitAfterChange": "79dc2e0426425c125758f7e958dd88564888758f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": "  private static int parseShortcut(String text)", "signatureAfterChange": "  void updateText ()", "diff": ["+", "+void updateText () {", "+\tif ((style & SWT.SEPARATOR) != 0) return;", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (parent.handle, id, 1, null, outIndex) != OS.noErr) {", "-", "-private static int parseShortcut(String text) {", "-\tint accelerator= 0;", "-\t", "-\tint pos= text.indexOf('\\t');", "-\tif (pos >= 0) {", "-\t\ttext= text.substring(pos+1);", "-\t\t", "-\t\t/*", "-\t\t * This parsing code is wrong because it works only for the english version of eclipse", "-\t\t */", "-\t\tStringTokenizer st= new StringTokenizer(text, \"+\");", "-\t\twhile (st.hasMoreTokens()) {", "-\t\t\tString t= st.nextToken().toUpperCase();", "-\t\t\tif (\"SHIFT\".equals(t))", "-\t\t\t\taccelerator |= SWT.SHIFT;", "-\t\t\telse if (\"CTRL\".equals(t))", "-\t\t\t\taccelerator |= SWT.CONTROL;", "-\t\t\telse if (\"ALT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ALT;", "-\t\t\telse if (\"F1\".equals(t))", "-\t\t\t\taccelerator |= SWT.F1;", "-\t\t\telse if (\"F2\".equals(t))", "-\t\t\t\taccelerator |= SWT.F2;", "-\t\t\telse if (\"F3\".equals(t))", "-\t\t\t\taccelerator |= SWT.F3;", "-\t\t\telse if (\"F4\".equals(t))", "-\t\t\t\taccelerator |= SWT.F4;", "-\t\t\telse if (\"F5\".equals(t))", "-\t\t\t\taccelerator |= SWT.F5;", "-\t\t\telse if (\"F6\".equals(t))", "-\t\t\t\taccelerator |= SWT.F6;", "-\t\t\telse if (\"F7\".equals(t))", "-\t\t\t\taccelerator |= SWT.F7;", "-\t\t\telse if (\"F8\".equals(t))", "-\t\t\t\taccelerator |= SWT.F8;", "-\t\t\telse if (\"F9\".equals(t))", "-\t\t\t\taccelerator |= SWT.F9;", "-\t\t\telse if (\"F10\".equals(t))", "-\t\t\t\taccelerator |= SWT.F10;", "-\t\t\telse if (\"F11\".equals(t))", "-\t\t\t\taccelerator |= SWT.F11;", "-\t\t\telse if (\"F12\".equals(t))", "-\t\t\t\taccelerator |= SWT.F12;", "-\t\t\telse if (\"DELETE\".equals(t))", "-\t\t\t\taccelerator |= SWT.DEL;", "-\t\t\telse if (\"ENTER\".equals(t))", "-\t\t\t\taccelerator |= SWT.CR;", "-\t\t\telse if (\"ARROW UP\".equals(t) || \"ARROW_UP\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_UP;", "-\t\t\telse if (\"ARROW DOWN\".equals(t) || \"ARROW_DOWN\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_DOWN;", "-\t\t\telse if (\"ARROW LEFT\".equals(t) || \"ARROW_LEFT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_LEFT;", "-\t\t\telse if (\"ARROW RIGHT\".equals(t) || \"ARROW_RIGHT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_RIGHT;", "-\t\t\telse if (\"SPACE\".equals(t))", "-\t\t\t\taccelerator |= ' ';", "-\t\t\telse if (\"TAB\".equals(t))", "-\t\t\t\taccelerator |= '\\t';", "-\t\t\telse {", "-\t\t\t\tif (t.length() > 1)", "-\t\t\t\t\tSystem.err.println(\"MenuItem.parseShortcut: unknown: <\" + t + \">\");", "-\t\t\t\telse {", "-\t\t\t\t\taccelerator |= t.charAt(0);", "-\t\t\t\t\tbreak;\t// must be last", "-\t\t\t\t}", "-\t\t\t}", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif (accelerator != 0 && buffer [i] == '\\t') break;", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "-\treturn accelerator;", "+\tint str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tif (str == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetMenuItemTextWithCFString (parent.handle, outIndex [0], str);", "+\tOS.CFRelease (str);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38fb5ca25a271da2deae3031ec74ea8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "13163ffb801b68fe75798ba09db22dc411fc60ae", "commitAfterChange": "e9cef2704b8fbeb607e5cdb6bad1b13dc87829dd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 30, "signatureBeforeChange": "  private static int parseShortcut(String text)", "signatureAfterChange": "  void updateText ()", "diff": ["+", "+void updateText () {", "+\tif ((style & SWT.SEPARATOR) != 0) return;", "+\tshort [] outIndex = new short [1];", "+\tif (OS.GetIndMenuItemWithCommandID (parent.handle, id, 1, null, outIndex) != OS.kNoErr) {", "-", "-private static int parseShortcut(String text) {", "-\tint accelerator= 0;", "-\t", "-\tint pos= text.indexOf('\\t');", "-\tif (pos >= 0) {", "-\t\ttext= text.substring(pos+1);", "-\t\t", "-\t\t/*", "-\t\t * This parsing code is wrong because it works only for the english version of eclipse", "-\t\t */", "-\t\tStringTokenizer st= new StringTokenizer(text, \"+\");", "-\t\twhile (st.hasMoreTokens()) {", "-\t\t\tString t= st.nextToken().toUpperCase();", "-\t\t\tif (\"SHIFT\".equals(t))", "-\t\t\t\taccelerator |= SWT.SHIFT;", "-\t\t\telse if (\"CTRL\".equals(t))", "-\t\t\t\taccelerator |= SWT.CONTROL;", "-\t\t\telse if (\"ALT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ALT;", "-\t\t\telse if (\"F1\".equals(t))", "-\t\t\t\taccelerator |= SWT.F1;", "-\t\t\telse if (\"F2\".equals(t))", "-\t\t\t\taccelerator |= SWT.F2;", "-\t\t\telse if (\"F3\".equals(t))", "-\t\t\t\taccelerator |= SWT.F3;", "-\t\t\telse if (\"F4\".equals(t))", "-\t\t\t\taccelerator |= SWT.F4;", "-\t\t\telse if (\"F5\".equals(t))", "-\t\t\t\taccelerator |= SWT.F5;", "-\t\t\telse if (\"F6\".equals(t))", "-\t\t\t\taccelerator |= SWT.F6;", "-\t\t\telse if (\"F7\".equals(t))", "-\t\t\t\taccelerator |= SWT.F7;", "-\t\t\telse if (\"F8\".equals(t))", "-\t\t\t\taccelerator |= SWT.F8;", "-\t\t\telse if (\"F9\".equals(t))", "-\t\t\t\taccelerator |= SWT.F9;", "-\t\t\telse if (\"F10\".equals(t))", "-\t\t\t\taccelerator |= SWT.F10;", "-\t\t\telse if (\"F11\".equals(t))", "-\t\t\t\taccelerator |= SWT.F11;", "-\t\t\telse if (\"F12\".equals(t))", "-\t\t\t\taccelerator |= SWT.F12;", "-\t\t\telse if (\"DELETE\".equals(t))", "-\t\t\t\taccelerator |= SWT.DEL;", "-\t\t\telse if (\"ENTER\".equals(t))", "-\t\t\t\taccelerator |= SWT.CR;", "-\t\t\telse if (\"ARROW UP\".equals(t) || \"ARROW_UP\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_UP;", "-\t\t\telse if (\"ARROW DOWN\".equals(t) || \"ARROW_DOWN\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_DOWN;", "-\t\t\telse if (\"ARROW LEFT\".equals(t) || \"ARROW_LEFT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_LEFT;", "-\t\t\telse if (\"ARROW RIGHT\".equals(t) || \"ARROW_RIGHT\".equals(t))", "-\t\t\t\taccelerator |= SWT.ARROW_RIGHT;", "-\t\t\telse if (\"SPACE\".equals(t))", "-\t\t\t\taccelerator |= ' ';", "-\t\t\telse if (\"TAB\".equals(t))", "-\t\t\t\taccelerator |= '\\t';", "-\t\t\telse {", "-\t\t\t\tif (t.length() > 1)", "-\t\t\t\t\tSystem.err.println(\"MenuItem.parseShortcut: unknown: <\" + t + \">\");", "-\t\t\t\telse {", "-\t\t\t\t\taccelerator |= t.charAt(0);", "-\t\t\t\t\tbreak;\t// must be last", "-\t\t\t\t}", "-\t\t\t}", "+\tchar [] buffer = new char [text.length ()];", "+\ttext.getChars (0, buffer.length, buffer, 0);", "+\tint i=0, j=0;", "+\twhile (i < buffer.length) {", "+\t\tif (accelerator != 0 && buffer [i] == '\\t') break;", "+\t\tif ((buffer [j++] = buffer [i++]) == Mnemonic) {", "+\t\t\tif (i == buffer.length) {continue;}", "+\t\t\tif (buffer [i] == Mnemonic) {i++; continue;}", "+\t\t\tj--;", "-\treturn accelerator;", "+\t//int str = OS.CFStringCreateWithCharacters (OS.kCFAllocatorDefault, buffer, j);", "+\tint str = OS.CFStringCreateWithCharacters (new String(buffer, 0, j));", "+\tif (str == 0) error (SWT.ERROR_CANNOT_SET_TEXT);", "+\tOS.SetMenuItemTextWithCFString (parent.handle, outIndex [0], str);", "+\tint [] outHierMenu = new int [1];", "+\tOS.GetMenuItemHierarchicalMenu (parent.handle, outIndex [0], outHierMenu);", "+\tif (outHierMenu [0] != 0) OS.SetMenuTitleWithCFString (outHierMenu [0], str);", "+\tOS.CFRelease (str);"]}], "num": 53053}