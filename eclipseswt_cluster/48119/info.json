{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22e59da4f1d70fbf21471b84d181affa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "681a500ad804bdd3c9ad77e58702dd3a", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b0693a12063ab35c44f34d89fd60d2e89368a94f", "commitAfterChange": "e9fff9da841962ff350a910fb52f584e5996a4f4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r void destroyItem (MenuItem item)", "signatureAfterChange": "\r \r void destroyItem (MenuItem item)", "diff": ["-\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "-\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\tif (OS.IsWinCE) {\r", "+\t\tint index = 0;\r", "+\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\twhile (OS.GetMenuItemInfo (handle, index, true, info)) {\r", "+\t\t\tif (info.dwItemData == item.id) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (info.dwItemData != item.id) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\t\r", "+\t\tif (!OS.RemoveMenu (handle, index, OS.MF_BYPOSITION)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r", "+\t} else {\r", "+\t\tif (!OS.RemoveMenu (handle, item.id, OS.MF_BYCOMMAND)) {\r", "+\t\t\terror (SWT.ERROR_ITEM_NOT_REMOVED);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4e42dd2cbd2433784602d69c332a4b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "b0693a12063ab35c44f34d89fd60d2e89368a94f", "commitAfterChange": "e9fff9da841962ff350a910fb52f584e5996a4f4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r void createItem (MenuItem item, int index)", "signatureAfterChange": "\r \r void createItem (MenuItem item, int index)", "diff": ["-\t\tint flags = OS.MF_BYPOSITION;\r", "-\t\tif ((style & SWT.SEPARATOR) != 0) flags |= OS.MF_SEPARATOR;\r", "-\t\tsuccess = OS.InsertMenu (handle, index, flags, item.id, null); \r", "+\t\tint uFlags = OS.MF_BYPOSITION;\r", "+\t\tTCHAR lpNewItem = null;\r", "+\t\tif ((item.style & SWT.SEPARATOR) != 0) {\r", "+\t\t\tuFlags |= OS.MF_SEPARATOR;\r", "+\t\t} else {\r", "+\t\t\tlpNewItem = new TCHAR (0, \"\", true);\r", "+\t\t}\r", "+\t\tsuccess = OS.InsertMenu (handle, index, uFlags, item.id, lpNewItem);\r", "+\t\tif (success) {\r", "+\t\t\tMENUITEMINFO info = new MENUITEMINFO ();\r", "+\t\t\tinfo.cbSize = MENUITEMINFO.sizeof;\r", "+\t\t\tinfo.fMask = OS.MIIM_DATA;\r", "+\t\t\tinfo.dwItemData = item.id;\r", "+\t\t\tsuccess = OS.SetMenuItemInfo (handle, index, true, info);\r", "+\t\t}\r", "-\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE;\r", "-\t\tinfo.wID = item.id;\r", "+\t\tinfo.fMask = OS.MIIM_ID | OS.MIIM_TYPE | OS.MIIM_DATA;\r", "+\t\tinfo.wID = info.dwItemData = item.id;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a7ec3957eed34cbd7b2907ad6a6d19", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "33c33a3bdd089f30da56054b30ca1637d9ac777a", "commitAfterChange": "f1c4df27b1140c8819632e25c9c738e0a24ed741", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public int [] getItemOrder ()", "signatureAfterChange": "\r public int [] getItemOrder ()", "diff": ["-\tint [] indices = new int [originalItems.length];\r", "-\tfor (int i=0; i<originalItems.length; i++) {\r", "-\t\tint index = OS.SendMessage (handle, OS.RB_IDTOINDEX, originalItems [i].id, 0);\r", "-\t\tif (index < 0 || index >= indices.length) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "-\t\tindices [index] = i;\r", "+\tint count = OS.SendMessage (handle, OS.RB_GETBANDCOUNT, 0, 0);\r", "+\tint [] indices = new int [count];\r", "+\tREBARBANDINFO rbBand = new REBARBANDINFO ();\r", "+\trbBand.cbSize = REBARBANDINFO.sizeof;\r", "+\trbBand.fMask = OS.RBBIM_ID;\r", "+\tfor (int i=0; i<count; i++) {\r", "+\t\tOS.SendMessage (handle, OS.RB_GETBANDINFO, i, rbBand);\r", "+\t\tCoolItem item = items [rbBand.wID];\r", "+\t\tint index = 0;\r", "+\t\twhile (index<originalItems.length) {\r", "+\t\t\tif (originalItems [j] == item) break;\r", "+\t\t\tindex++;\r", "+\t\t}\r", "+\t\tif (index == originalItems.length) error (SWT.ERROR_CANNOT_GET_ITEM);\r", "+\t\tindices [i] = index;\r"]}], "num": 48119}