{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5a9c175810c25d66dc319cb1abd18f4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97e39111a2d69f9c2362caec4a22e8a1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "62774f63d87d39b5f158f82c51ca18d06b16d091", "commitAfterChange": "b0f874d83eb098a385358c18e70d4582e44f7cd2", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \r void redraw ()", "signatureAfterChange": "\r \r void redraw ()", "diff": ["-\tif (OS.IsPPC || OS.IsSP) return;\r", "-\tif (OS.IsHPC) {\r", "-\t\t/*\r", "-\t\t* Each time a menu has been modified, the command menu bar\r", "-\t\t* must be redrawn or it won't update properly.  For example,\r", "-\t\t* a submenu will not drop down.\r", "-\t\t*/\r", "-\t\tMenu menuBar = parent.menuBar;\r", "-\t\tif (menuBar != null) {\r", "-\t\t\tMenu menu = this;\r", "-\t\t\twhile (menu != null && menu != menuBar) {\r", "-\t\t\t\tmenu = menu.getParentMenu ();\r", "-\t\t\t}\r", "-\t\t\tif (menu == menuBar) {\r", "-\t\t\t\tOS.CommandBar_DrawMenuBar (menuBar.hwndCB, 0);\r", "-\t\t\t\tOS.CommandBar_Show (menuBar.hwndCB, true);\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn;\r", "-\t}\r", "-\t\tOS.DrawMenuBar (parent.handle);\r", "-\t\treturn;\r", "-\t}\r", "-\tif ((OS.WIN32_MAJOR << 16 | OS.WIN32_MINOR) < (4 << 16 | 10)) {\r", "-\t\treturn;\r", "-\t}\r", "-\tboolean hasCheck = false, hasImage = false;\r", "-\tMenuItem [] items = getItems ();\r", "-\tfor (int i=0; i<items.length; i++) {\r", "-\t\tMenuItem item = items [i];\r", "-\t\tif (item.getImage () != null) {\r", "-\t\t\tif ((hasImage = true) && hasCheck) break;\r", "-\t\t}\r", "-\t\tif ((item.getStyle () & (SWT.CHECK | SWT.RADIO)) != 0) {\r", "-\t\t\tif ((hasCheck = true) && hasImage) break;\r", "-\t\t}\r", "-\t}\r", "-\tMENUINFO lpcmi = new MENUINFO ();\r", "-\tlpcmi.cbSize = MENUINFO.sizeof;\r", "-\tlpcmi.fMask = OS.MIM_STYLE;\r", "-\tOS.GetMenuInfo (handle, lpcmi);\r", "-\tif (hasImage && !hasCheck) {\r", "-\t\tlpcmi.dwStyle |= OS.MNS_CHECKORBMP;\r", "+\t\tDisplay display = getDisplay ();\r", "+\t\tdisplay.addBar (this);\r", "-\t\tlpcmi.dwStyle &= ~OS.MNS_CHECKORBMP;\r", "+\t\tupdate ();\r", "-\tOS.SetMenuInfo (handle, lpcmi);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff9e2c0e8bb26101a90c815f0398efe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/TreeItem2.java", "commitBeforeChange": "ed568a606dfba062e77bacc7c7f799741b60cbf4", "commitAfterChange": "3e04f21595fe557524d009b946647c76885ec76f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void setImage (int columnIndex, Image value)", "signatureAfterChange": " void setImageExtent(Point imageExtent)", "diff": ["+ */", "+void setImageExtent(Point imageExtent) {", "+\tthis.imageExtent = imageExtent;", "+}", "-}", "-public void setImage (int columnIndex, Image value) {", "-\tcheckWidget ();", "-\tif (value != null && value.isDisposed ()) {", "-\t\terror(SWT.ERROR_INVALID_ARGUMENT);", "-\t}", "-\tint validColumnCount = Math.max (1, parent.getColumnCount());", "-\tif (!(0 <= columnIndex && columnIndex < validColumnCount)) return;", "-\tif (images.length < columnIndex + 1) {", "-\t\tImage[] newImages = new Image[columnIndex + 1];", "-\t\tSystem.arraycopy (images, 0, newImages, 0, images.length);", "-\t\timages = newImages;", "-\t} else {", "-\t\tImage current = internalGetImage (columnIndex);", "-\t\tif (current == value) return;\t\t\t\t/* same value */", "-\t\tif (current != null && current.equals (value)) return;", "-\t}", "-\timages[columnIndex] = value;", "-", "-\t/*", "-\t * If this is the first image being put into the table then its item height", "-\t * may be adjusted, in which case a full redraw is needed.", "-\t */", "-\tif (parent.imageHeight == 0) {", "-\t\tint oldItemHeight = parent.getItemHeight ();", "-\t\tparent.setImageHeight (value.getBounds().height);", "-\t\tif (oldItemHeight != parent.getItemHeight ()) {", "-\t\t\tif (columnIndex == 0) {", "-\t\t\t\tparent.col0ImageWidth = value.getBounds ().width;", "-\t\t\t}", "-\t\t\tparent.redraw ();", "-\t\t\treturn;", "-\t\t}", "-\t}", "-", "-\t/* ", "-\t * If this is the first image being put into column 0 then all cells", "-\t * in the column should also indent accordingly. ", "-\t */", "-\tif (columnIndex == 0 && parent.col0ImageWidth == 0) {", "-\t\tparent.col0ImageWidth = value.getBounds ().width;", "-\t\t/* redraw the column */", "-\t\tif (parent.getColumnCount () == 0) {", "-\t\t\tparent.redraw ();", "-\t\t} else {", "-\t\t\tparent.redraw (", "-\t\t\t\t0, 0,", "-\t\t\t\tparent.getColumn (0).getWidth (),", "-\t\t\t\tparent.getClientArea ().height,", "-\t\t\t\ttrue);", "-\t\t}", "-\t}", "-\tredrawItem ();", "-}"]}], "num": 32286}