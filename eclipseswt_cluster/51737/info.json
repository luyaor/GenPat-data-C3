{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50a67fa1a03887baff47c637c502bdba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6276d134d51d65a34c6abfdb8d2d63d1", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "413c8a539b0cc8dc9533184e03603ed58f62f9a9", "commitAfterChange": "1946f53da43fe63bcaa044f1e6b67fe7f1fdae23", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "signatureAfterChange": "\r static int scalePixmap(int display, int pixmap, int srcX, int srcY, int srcWidth, int srcHeight, int destX, int destY, int destWidth, int destHeight, boolean flipX, boolean flipY)", "diff": ["-\t\tcase 1: {\r", "-\t\t\tint bitOrder = xSrcImage.bitmap_bit_order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "-\t\t\tint bplX = ((destWidth + 7) / 8 + 3) & 0xFFFC;\r", "-\t\t\tint bufSize = bplX * destHeight;\r", "-\t\t\tbyte[] buf = new byte[bufSize];\r", "-\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\t\tsrcData, 1, xSrcImage.bytes_per_line, bitOrder, 0, 0, srcWidth, srcHeight, null, null, null,\r", "-\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,\r", "-\t\t\t\tbuf, 1, bplX, bitOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "-\t\t\t\tflipX, flipY);\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\tOS.memmove(bufPtr, buf, bufSize);\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 1, OS.XYBitmap, 0, bufPtr, destWidth, destHeight, 32, bplX);\r", "+\t\tcase 1:\r", "+\t\tcase 4:\r", "+\t\tcase 8: {\r", "+\t\t\tint format = xSrcImage.bits_per_pixel == 1 ? OS.XYBitmap : OS.ZPixmap;\r", "+\t\t\txImagePtr = OS.XCreateImage(display, visual, xSrcImage.depth, format, 0, 0, destWidth, destHeight, xSrcImage.bitmap_pad, 0);\r", "-\t\t\txImage.byte_order = OS.MSBFirst;\r", "-\t\t\txImage.bitmap_unit = 8;\r", "-\t\t\txImage.bitmap_bit_order = xSrcImage.bitmap_bit_order;\r", "+\t\t\tint bufSize = xImage.bytes_per_line * xImage.height;\r", "+\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "+\t\t\txImage.data = bufPtr;\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t\tcase 4: {\r", "-\t\t\t/* Untested */\r", "-\t\t\tint bplX = (destWidth + 3) & 0xFFFC;\r", "-\t\t\tint bufSize = bplX * destHeight;\r", "+\t\t\tint order = xSrcImage.bits_per_pixel == 1 ? xSrcImage.bitmap_bit_order : xSrcImage.byte_order;\r", "+\t\t\tint srcOrder = order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "+\t\t\torder = xImage.bits_per_pixel == 1 ? xImage.bitmap_bit_order : xImage.byte_order;\r", "+\t\t\tint destOrder = order == OS.MSBFirst ? ImageData.MSB_FIRST : ImageData.LSB_FIRST;\r", "-\t\t\t\tsrcData, 4, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, null, null, null,\r", "+\t\t\t\tsrcData, xSrcImage.bits_per_pixel, xSrcImage.bytes_per_line, srcOrder, 0, 0, srcWidth, srcHeight, null, null, null,\r", "-\t\t\t\tbuf, 4, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, null, null, null,\r", "+\t\t\t\tbuf, xImage.bits_per_pixel, xImage.bytes_per_line, destOrder, 0, 0, destWidth, destHeight, null, null, null,\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 4, OS.ZPixmap, 0, bufPtr, destWidth, destHeight, 32, bplX);\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t\tcase 8: {\r", "-\t\t\tint bplX = (destWidth + 3) & 0xFFFC;\r", "-\t\t\tint bufSize = bplX * destHeight;\r", "-\t\t\tbyte[] buf = new byte[bufSize];\r", "-\t\t\tImageData.blit(ImageData.BLIT_SRC,\r", "-\t\t\t\tsrcData, 8, xSrcImage.bytes_per_line, ImageData.MSB_FIRST, 0, 0, srcWidth, srcHeight, null, null, null,\r", "-\t\t\t\tImageData.ALPHA_OPAQUE, null, 0, 0, 0,\r", "-\t\t\t\tbuf, 8, bplX, ImageData.MSB_FIRST, 0, 0, destWidth, destHeight, null, null, null,\r", "-\t\t\t\tflipX, flipY);\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\tOS.memmove(bufPtr, buf, bufSize);\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, 8, OS.ZPixmap, 0, bufPtr, destWidth, destHeight, 32, bplX);\r", "-\t\t\txImagePtr = OS.XCreateImage(display, visual, xSrcImage.depth, OS.ZPixmap, 0, 0, destWidth, destHeight, 32, 0);\r", "+\t\t\txImagePtr = OS.XCreateImage(display, visual, xSrcImage.depth, OS.ZPixmap, 0, 0, destWidth, destHeight, xSrcImage.bitmap_pad, 0);\r", "-\t\t\tint bufSize = xImage.bytes_per_line * destHeight;\r", "+\t\t\tint bufSize = xImage.bytes_per_line * xImage.height;\r", "+\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "+\t\t\txImage.data = bufPtr;\r", "+\t\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r", "-\t\t\tint bufPtr = OS.XtMalloc(bufSize);\r", "-\t\t\txImage.data = bufPtr;\r", "-\t\t\tOS.memmove(xImagePtr, xImage, XImage.sizeof);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72415cc909b6489bc1f85b1b330666ac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/graphics/GC.java", "commitBeforeChange": "b72bc1d2aeff462f0ad0e8ecfa6bc39ebd385109", "commitAfterChange": "976e43084e6451bfa01e2552d9934253d1c13468", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void drawText (String string, int x, int y, int flags)", "signatureAfterChange": "  void drawText (int context, int flags, float x, float y, int line, float [] ascent, float [] descent, float [] leading, float fontAscent)", "diff": ["-\t\thandle.saveGraphicsState();", "-\t\thandle.setShouldAntialias(mode);", "-\t\tNSAttributedString str = createString(string, flags, true);", "-\t\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "-\t\t\tNSSize size = str.size();", "-\t\t\tNSRect rect = new NSRect();", "-\t\t\trect.x = x;", "-\t\t\trect.y = y;", "-\t\t\trect.width = size.width;", "-\t\t\trect.height = size.height;", "-\t\t\tNSColor bg = data.bg;", "-\t\t\tif (bg == null) {", "-\t\t\t\tfloat /*double*/ [] color = data.background;", "-\t\t\t\tbg = data.bg = NSColor.colorWithDeviceRed(color[0], color[1], color[2], data.alpha / 255f);", "-\t\t\t\tbg.retain();", "-\t\t\t}", "-\t\t\tbg.setFill();", "-\t\t\tNSBezierPath.fillRect(rect);", "-\t\t\tstr.drawInRect(rect);", "-\t\t} else {", "-\t\t\tNSPoint pt = new NSPoint();", "-\t\t\tpt.x = x;", "-\t\t\tpt.y = y;", "-\t\t\tstr.drawAtPoint(pt);", "-\t\tstr.release();", "-\t\thandle.restoreGraphicsState();", "+", "+void drawText (int /*long*/ context, int flags, float /*double*/ x, float /*double*/ y, int /*long*/ line, float /*double*/ [] ascent, float /*double*/ [] descent, float /*double*/ [] leading, float /*double*/ fontAscent) {", "+\tdouble width = 0;", "+\tif ((flags & SWT.DRAW_DELIMITER) != 0 || (flags & SWT.DRAW_TRANSPARENT) == 0) {", "+\t\twidth = OS.CTLineGetTypographicBounds(line, ascent, descent, leading);", "+\t}", "+\tif ((flags & SWT.DRAW_TRANSPARENT) == 0) {", "+\t\tCGRect rect = new CGRect();", "+\t\trect.origin.x = x;", "+\t\trect.origin.y = y;", "+\t\trect.size.width = (float)Math.ceil(width);", "+\t\trect.size.height = (float)Math.ceil(ascent[0] + descent[0] + leading[0]);", "+\t\tOS.CGContextSaveGState(context);", "+\t\tfloat /*double*/ oldAlpha = data.background[3];", "+\t\tdata.background[3] = data.alpha / 255f;", "+\t\tOS.CGContextSetFillColor(context, data.background);", "+\t\tdata.background[3] = oldAlpha;", "+\t\tOS.CGContextFillRect(context, rect);", "+\t\tOS.CGContextRestoreGState(context);", "+\t}", "+\tOS.CGContextSetTextPosition(context, x, y + fontAscent);", "+\tOS.CTLineDraw(line, context);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8c6730581d68ffeba2c91356c598abd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/controlexample/DialogTab.java", "commitBeforeChange": "550b98b63744e76ac12ca41464bcbd2ad99d725d", "commitAfterChange": "31415c61511b701f5416b91abbb66653d774c57a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid buttonStyleSelected(SelectionEvent event)", "signatureAfterChange": " \tvoid buttonStyleSelected(SelectionEvent event)", "diff": ["-\t\tokButton.setEnabled (", "-\t\t\t!(yesButton.getSelection () || noButton.getSelection () || ", "-\t\t\t\tretryButton.getSelection () || abortButton.getSelection () ||", "-\t\t\t\t\tignoreButton.getSelection ()));", "-\t\tcancelButton.setEnabled (", "-\t\t\t!(abortButton.getSelection () || ignoreButton.getSelection () ||", "-\t\t\t\t(yesButton.getSelection () != noButton.getSelection ())));", "-\t\tyesButton.setEnabled (", "-\t\t\t!(okButton.getSelection () || retryButton.getSelection () ||", "-\t\t\t\tabortButton.getSelection () || ignoreButton.getSelection () ||", "-\t\t\t\t\t(cancelButton.getSelection () && !yesButton.getSelection () && !noButton.getSelection ())));", "-\t\tnoButton.setEnabled (", "-\t\t\t!(okButton.getSelection () || retryButton.getSelection () ||", "-\t\t\t\tabortButton.getSelection () || ignoreButton.getSelection () ||", "-\t\t\t\t\t(cancelButton.getSelection () && !yesButton.getSelection () && !noButton.getSelection ())));", "-\t\tretryButton.setEnabled (", "-\t\t\t!(okButton.getSelection() || yesButton.getSelection() || noButton.getSelection ()));", "-\t\tabortButton.setEnabled (", "-\t\t\t!(okButton.getSelection () || cancelButton.getSelection () ||", "-\t\t\t\tyesButton.getSelection () || noButton.getSelection ()));", "-\t\tignoreButton.setEnabled (", "-\t\t\t!(okButton.getSelection () || cancelButton.getSelection () |", "-\t\t\t\tyesButton.getSelection () || noButton.getSelection ()));", "+\t\tboolean ok = okButton.getSelection ();", "+\t\tboolean cancel = cancelButton.getSelection ();", "+\t\tboolean yes = yesButton.getSelection ();", "+\t\tboolean no = noButton.getSelection ();", "+\t\tboolean abort = abortButton.getSelection ();", "+\t\tboolean retry = retryButton.getSelection ();", "+\t\tboolean ignore = ignoreButton.getSelection ();", "+\t\t", "+\t\tokButton.setEnabled (!(yes || no || retry || abort || ignore));", "+\t\tcancelButton.setEnabled (!(abort || ignore || (yes != no)));", "+\t\tyesButton.setEnabled (!(ok || retry || abort || ignore || (cancel && !yes && !no)));", "+\t\tnoButton.setEnabled (!(ok || retry || abort || ignore || (cancel && !yes && !no)));", "+\t\tretryButton.setEnabled (!(ok || yes || no));", "+\t\tabortButton.setEnabled (!(ok || cancel || yes || no));", "+\t\tignoreButton.setEnabled (!(ok || cancel || yes || no));", "+\t\t", "+\t\tcreateButton.setEnabled (", "+\t\t\t\t!(ok || cancel || yes || no || retry || abort || ignore) ||", "+\t\t\t\tok ||", "+\t\t\t\t(ok && cancel) ||", "+\t\t\t\t(yes && no) ||", "+\t\t\t\t(yes && no && cancel) ||", "+\t\t\t\t(retry && cancel) ||", "+\t\t\t\t(abort && retry && ignore));", "+\t\t", "+"]}], "num": 51737}