{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46ff5dd25397fb844f6896a2b2be5fc7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e88c1850727dc3368529ffe100bc1591", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Decorations.java", "commitBeforeChange": "4987194d8bce616de61408593d5536fbd929aa51", "commitAfterChange": "9e31c4848da674b924950acb4bf386a247c0b202", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void setVisible (boolean visible)", "signatureAfterChange": "  public void setVisible (boolean visible)", "diff": ["-\tif (visible == OS.IsWindowVisible (handle)) return;", "+\tif (drawCount != 0) {", "+\t\tif (((state & HIDDEN) == 0) == visible) return;", "+\t} else {", "+\t\tif (visible == OS.IsWindowVisible (handle)) return;", "+\t}", "-\t\tif (OS.IsWinCE) {", "-\t\t\tOS.ShowWindow (handle, OS.SW_SHOW);", "+\t\tif (drawCount != 0) {", "+\t\t\tstate &= ~HIDDEN;", "-\t\t\tif (menuBar != null) {", "-\t\t\t\tdisplay.removeBar (menuBar);", "-\t\t\t\tOS.DrawMenuBar (handle);", "+\t\t\tif (OS.IsWinCE) {", "+\t\t\t\tOS.ShowWindow (handle, OS.SW_SHOW);", "+\t\t\t} else {", "+\t\t\t\tif (menuBar != null) {", "+\t\t\t\t\tdisplay.removeBar (menuBar);", "+\t\t\t\t\tOS.DrawMenuBar (handle);", "+\t\t\t\t}", "+\t\t\t\tOS.ShowWindow (handle, swFlags);", "-\t\t\tOS.ShowWindow (handle, swFlags);", "+\t\t\tOS.UpdateWindow (handle);", "-\t\tOS.UpdateWindow (handle);", "-\t\tOS.ShowWindow (handle, OS.SW_HIDE);", "+\t\tif (drawCount != 0) {", "+\t\t\tstate |= HIDDEN;", "+\t\t} else {", "+\t\t\tOS.ShowWindow (handle, OS.SW_HIDE);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f10beefc7acd2ff2091e2b33243c8aee", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 59, "signatureBeforeChange": " int topHandle ()", "signatureAfterChange": "  void setWindowVisible (boolean visible)", "diff": ["+", "+void setWindowVisible (boolean visible) {", "+\tif (OS.IsWindowVisible (shellHandle) == visible) return;\t", "+\tif (visible) {", "+\t\tif (!resized) {", "+\t\t\tsendEvent (SWT.Resize);", "+\t\t\tif (layout != null) layout.layout (this, false);", "+\t\t}", "+\t\tint inModalKind = OS.kWindowModalityNone;", "+\t\tif ((style & SWT.PRIMARY_MODAL) != 0) inModalKind = OS.kWindowModalityWindowModal;", "+\t\tif ((style & SWT.APPLICATION_MODAL) != 0) inModalKind = OS.kWindowModalityAppModal;", "+\t\tif ((style & SWT.SYSTEM_MODAL) != 0) inModalKind = OS.kWindowModalitySystemModal;", "+\t\tif (inModalKind != OS.kWindowModalityNone) {", "+\t\t\tint inUnavailableWindow = 0;", "+\t\t\tif (parent != null) inUnavailableWindow = OS.GetControlOwner (parent.handle);", "+\t\t\tOS.SetWindowModality (shellHandle, inModalKind, inUnavailableWindow);", "+\t\tOS.ShowWindow (shellHandle);", "+    \tOS.HideWindow (shellHandle);", "+\t\tsendEvent (SWT.Hide);", "+}", "-int topHandle () {", "-\treturn shellHandle;", "-}"]}], "num": 32927}