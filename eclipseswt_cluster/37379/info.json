{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d0cb36685f12197d023c20caafdc5dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e6f6bd9ebd31681b8c13c03da8de211", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/AbstractItem.java", "commitBeforeChange": "9b82b2741b664d5127129af9913f35aab770ba0e", "commitAfterChange": "016f670aeb8d69c7d1ba8c8de8c50c1b6e647548", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public abstract void parse(String str);", "signatureAfterChange": "  public void parse(String str)", "diff": ["-public abstract void parse(String str);", "+public void parse(String str) {", "+\tthis.params = new HashMap();", "+\tint length = str.length();", "+\tif (length == 0) return;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tint equals = str.indexOf('=', index);", "+\t\tif (equals ==  -1) {", "+\t\t\tSystem.out.println(\"Error: \" + str + \" index=\" + index + \" length=\" + length);", "+\t\t\tbreak;", "+\t\t}", "+\t\tString key = str.substring(index, equals).trim();", "+\t\tequals++;", "+\t\twhile (equals < length && Character.isWhitespace(str.charAt(equals))) equals++;", "+\t\tchar c = str.charAt(equals), ending = ',';", "+\t\tswitch (c) {", "+\t\t\tcase '\"':", "+\t\t\tcase '\\'':", "+\t\t\t\tequals++;", "+\t\t\t\tending = c;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tint end = equals;", "+\t\twhile (end < length && str.charAt(end) != ending) end++;", "+\t\tString value = str.substring(equals, end).trim();", "+\t\tsetParam(key, value);", "+\t\tif (ending != ',') {", "+\t\t\twhile (end < length && str.charAt(end) != ',') end++;", "+\t\t}", "+\t\tindex = end + 1;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376bce9a4583fc6e14402acb49b52ebd", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt.tools/JNI Generation/org/eclipse/swt/tools/internal/AbstractItem.java", "commitBeforeChange": "cbb184ca258eb2b91e7f6fbc3843c3584814607e", "commitAfterChange": "4c1eda61e98b25db9aad6cc6379ffa1b432de12b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public abstract void parse(String str);", "signatureAfterChange": "  public void parse(String str)", "diff": ["-public abstract void parse(String str);", "+public void parse(String str) {", "+\tthis.params = new HashMap();", "+\tint length = str.length();", "+\tif (length == 0) return;", "+\tint index = 0;", "+\twhile (index < length) {", "+\t\tint equals = str.indexOf('=', index);", "+\t\tif (equals ==  -1) {", "+\t\t\tSystem.out.println(\"Error: \" + str + \" index=\" + index + \" length=\" + length);", "+\t\t\tbreak;", "+\t\t}", "+\t\tString key = str.substring(index, equals).trim();", "+\t\tequals++;", "+\t\twhile (equals < length && Character.isWhitespace(str.charAt(equals))) equals++;", "+\t\tchar c = str.charAt(equals), ending = ',';", "+\t\tswitch (c) {", "+\t\t\tcase '\"':", "+\t\t\tcase '\\'':", "+\t\t\t\tequals++;", "+\t\t\t\tending = c;", "+\t\t\t\tbreak;", "+\t\t}", "+\t\tint end = equals;", "+\t\twhile (end < length && str.charAt(end) != ending) end++;", "+\t\tString value = str.substring(equals, end).trim();", "+\t\tsetParam(key, value);", "+\t\tif (ending != ',') {", "+\t\t\twhile (end < length && str.charAt(end) != ',') end++;", "+\t\t}", "+\t\tindex = end + 1;", "+\t}", "+}"]}], "num": 37379}