{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5decee0065effab8d19baca3713c39d4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f052d6e6284ba6a9e6c6ea5337bc711c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT AWT/win32/org/eclipse/swt/awt/SWT_AWT.java", "commitBeforeChange": "999226f6bfe889d48d5a85f5b6b8da5198f84a27", "commitAfterChange": "a8f04475c0499c2ac96d1f6f8ba7a24b67698134", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static Frame new_Frame (final Composite parent)", "signatureAfterChange": " public static Frame new_Frame (final Composite parent)", "diff": ["+\t\t\t\tcase SWT.FocusIn:", "+\t\t\t\t\t\t\t\tif (frame.isActive()) return;", "-\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "+\t\t\t\t\t\t\t\tif (!frame.isActive()) return;", "-\t\t\t\t\t\t\t\t\t/* Initialize the default focus traversal policy */", "-\tparent.addListener (SWT.Activate, listener);", "+\tif (Library.JAVA_VERSION < Library.JAVA_VERSION(1, 5, 0)) {", "+\t\tparent.addListener (SWT.Activate, listener);", "+\t} else {", "+\t\tparent.addListener (SWT.FocusIn, listener);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c969e169b4dfddd27bb12d53255c1542", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "signatureAfterChange": " public Rectangle map (Control from, Control to, int x, int y, int width, int height)", "diff": ["+\tboolean fromRTL = false, toRTL = false;", "+\t\tif (fromRTL = (from.style & SWT.MIRRORED) != 0) rect.x = from.getClientWidth() - rect.x;", "+\t\tif (toRTL = (to.style & SWT.MIRRORED) != 0) rect.x = to.getClientWidth () - rect.x;", "+\tif (fromRTL != toRTL) rect.x -= rect.width;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8967a79a5a58d0b0ebb633342c166d4c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/carbon/org/eclipse/swt/dnd/DragSource.java", "commitBeforeChange": "464b48b79bb98793588d5a3579cfc5c8822ad33f", "commitAfterChange": "5b97b0673b65b971f49b2410e2bbba4d17b184fb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DragSource(Control control, int style)", "signatureAfterChange": " public DragSource(Control control, int style)", "diff": ["-\tsuper (control, style);", "+\tsuper (control, checkStyle(style));", "-\t\t", "+\tcontrol.setData(DRAGSOURCEID, this);", "+", "-\t\t\tif (event.type == SWT.Dispose){", "-\t\t\t\tDragSource.this.dispose();", "+\t\t\tif (event.type == SWT.Dispose) {", "+\t\t\t\tif (!DragSource.this.isDisposed()) {", "+\t\t\t\t\tDragSource.this.dispose();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (event.type == SWT.DragDetect) {", "+\t\t\t\tif (!DragSource.this.isDisposed()) {", "+\t\t\t\t\t//DragSource.this.drag(event);", "+\t\t\t\t}", "+\tcontrol.addListener (SWT.DragDetect, controlListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "007f0b944c2827f0aeec8afc5ecf84ed", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "5d5d6c8770a1d46c82c940b44d6a2e4884862a10", "commitAfterChange": "28aa455ae3ab9d2b8c756bcae7568a88b06cc8eb", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": " public Point map (Control from, Control to, int x, int y)", "signatureAfterChange": " public Point map (Control from, Control to, int x, int y)", "diff": ["+\t\tif ((from.style & SWT.MIRRORED) != 0) point.x = from.getClientWidth () - point.x;", "+\t\tif ((to.style & SWT.MIRRORED) != 0) point.x = to.getClientWidth () - point.x;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b122df0e275dc899616a570436c9d408", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "2d0d1fe9d220400e0b4957016ec81f97281b8e3b", "commitAfterChange": "c6e846c2a1f2f65f82baf98b5937ac087d800678", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  int fixedMapProc (int widget)", "signatureAfterChange": "  int fixedMapProc (int widget)", "diff": ["-\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !OS.GTK_WIDGET_MAPPED (child)) {", "-\t\t\t\tOS.gtk_widget_map (child);", "+\t\t\tif (OS.GTK_VERSION >= OS.VERSION (2, 20, 0)) {", "+\t\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !OS.gtk_widget_get_mapped (child)) {", "+\t\t\t\t\tOS.gtk_widget_map (child);", "+\t\t\t\t}", "+\t\t\t}else{", "+\t\t\t\tif (OS.GTK_WIDGET_VISIBLE (child) && OS.gtk_widget_get_child_visible (child) && !OS.GTK_WIDGET_MAPPED (child)) {", "+\t\t\t\t\tOS.gtk_widget_map (child);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a428601fd4f594b9023ef6f21eb7c7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "examples/org.eclipse.swt.examples/src/org/eclipse/swt/examples/imageanalyzer/ImageAnalyzer.java", "commitBeforeChange": "4ddc80fac7dd7587f52e196fb30aea2e09d434af", "commitAfterChange": "afd2596f7d0b684f40a6cde49ffd8b1e1885b748", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": " \t \tvoid menuSave()", "signatureAfterChange": " \t \tvoid menuSave()", "diff": ["+\t\t\tif (imageData.type == SWT.IMAGE_JPEG) loader.compression = compressionCombo.indexOf(compressionCombo.getText()) + 1;", "+\t\t\tif (imageData.type == SWT.IMAGE_PNG) loader.compression = compressionCombo.indexOf(compressionCombo.getText());", "-\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f6462b4d7e0b415adb5ae472663b2c", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "8f61130db11e0e29cac6e4d869197be218d87a02", "commitAfterChange": "ff15b9e112d73a820bc263ebd85826ed5c4300c1", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "  LRESULT wmNotify (NMHDR hdr, int wParam, int lParam)", "signatureAfterChange": "  LRESULT wmNotify (NMHDR hdr, int wParam, int lParam)", "diff": ["+\t\t\t\tcase OS.TTN_POP: {", "+\t\t\t\t\tif (display.isXMouseActive ()) {", "+\t\t\t\t\t\tShell shell = getShell ();", "+\t\t\t\t\t\tshell.lockToolTipControl = null;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\t\tif (display.isXMouseActive ()) {", "+\t\t\t\t\t\tShell shell = getShell ();", "+\t\t\t\t\t\tshell.lockToolTipControl = this;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0b70ea5b427febb206ceefeec0512a2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Button.java", "commitBeforeChange": "3025d237f680a2e072fde4f6a213f48f2a5248fa", "commitAfterChange": "2054549f26c019ff25e04cae93704a55f48e14ee", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  int gtk_focus_in_event (int widget, int event)", "signatureAfterChange": "  int gtk_focus_in_event (int widget, int event)", "diff": ["-\tif ((style & SWT.PUSH) != 0 && OS.GTK_WIDGET_HAS_DEFAULT (handle)) {", "-\t\tDecorations menuShell = menuShell ();", "-\t\tmenuShell.defaultButton = this;", "-\t}", "+\tif (OS.GTK_VERSION >= OS.VERSION (2, 18, 0)) { ", "+\t\tif ((style & SWT.PUSH) != 0 && OS.gtk_widget_has_default(handle)) {", "+\t\t\tDecorations menuShell = menuShell ();", "+\t\t\tmenuShell.defaultButton = this;", "+\t\t}", "+\t}else{", "+\t\tif ((style & SWT.PUSH) != 0 && OS.GTK_WIDGET_HAS_DEFAULT (handle)) {", "+\t\t\tDecorations menuShell = menuShell ();", "+\t\t\tmenuShell.defaultButton = this;", "+\t\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807bf33014ef368803f07ddef7ed4b7b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Browser/cocoa/org/eclipse/swt/browser/Safari.java", "commitBeforeChange": "55199872c96aa56ff07e6d273ea7894436f9d14f", "commitAfterChange": "0dcf255a56cc55fc50f17561bb1f355e61dfa7e8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void create (Composite parent, int style)", "signatureAfterChange": "  public void create (Composite parent, int style)", "diff": ["+\t\t\t\tcase SWT.FocusIn:", "+\t\t\t\t\tSafari.this.webView.window().makeFirstResponder(Safari.this.webView);", "+\t\t\t\t\tbreak;", "+\t/* Needed to be able to tab into the browser */", "+\tbrowser.addListener(SWT.KeyDown, listener);", "+\tbrowser.addListener(SWT.FocusIn, listener);"]}], "num": 60755}