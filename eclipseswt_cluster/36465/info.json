{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c998c8b77d0de23604bb91e4993d1c8b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb77c0b9baed7e08b92194a37bc8b2d0", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/List.java", "commitBeforeChange": "7a26d49f7fcf65bf8625393f1af4a67b482a7c35", "commitAfterChange": "c204154909a9d6903f66ea2c97f8cb0cb5eaa814", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 25, "signatureBeforeChange": "  void setHandleStyle()", "signatureAfterChange": "  int paintWindow ()", "diff": ["-", "-void setHandleStyle() {", "-\tint selectionMode = ((style & SWT.MULTI) != 0)?", "-\t\tOS.GTK_SELECTION_EXTENDED :", "-\t\tOS.GTK_SELECTION_BROWSE;", "-\tOS.gtk_clist_set_selection_mode (handle, selectionMode);", "-\t", "-\tint border = OS.GTK_SHADOW_NONE;", "-\tif ((style&SWT.BORDER)!=0) {", "-\t\tborder = OS.GTK_SHADOW_ETCHED_IN;", "-\t\tif ((style&SWT.SHADOW_IN)!=0) border = OS.GTK_SHADOW_IN;", "-\t\tif ((style&SWT.SHADOW_OUT)!=0) border = OS.GTK_SHADOW_OUT;", "-\t\tif ((style&SWT.SHADOW_ETCHED_IN)!=0) border = OS.GTK_SHADOW_ETCHED_IN;", "-\t\tif ((style&SWT.SHADOW_ETCHED_OUT)!=0) border = OS.GTK_SHADOW_ETCHED_OUT;", "-\t}", "-\tOS.gtk_clist_set_shadow_type(handle, border);", "-\tsetScrollingPolicy();", "-}", "+int paintWindow () {", "+\tOS.gtk_widget_realize (handle);", "+\tGtkCList clist = new GtkCList (handle);", "+\treturn clist.clist_window;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6226ee79ac4a8acdedea22ee852ede3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/motif/org/eclipse/swt/widgets/Composite.java", "commitBeforeChange": "2ef6e4fc0f94a18262893aedff96a27b9f89d5fa", "commitAfterChange": "d0b3b06b87cdacfce998efd05f4c64a2bcf1116c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void createHandle (int index)", "signatureAfterChange": " void createHandle (int index)", "diff": ["-\tint parentHandle = parent.handle;", "-\tif ((style & (SWT.H_SCROLL | SWT.V_SCROLL)) == 0) {", "-\t\tint border = (style & SWT.BORDER) != 0 ? 1 : 0;", "-\t\tint [] argList = {", "-\t\t\tOS.XmNancestorSensitive, 1,", "-\t\t\tOS.XmNborderWidth, border,", "-\t\t\tOS.XmNmarginWidth, 0,", "-\t\t\tOS.XmNmarginHeight, 0,", "-\t\t\tOS.XmNresizePolicy, OS.XmRESIZE_NONE,", "-\t\t\tOS.XmNtraversalOn, (style & SWT.NO_FOCUS) != 0 ? 0 : 1,", "-\t\t};", "-\t\thandle = OS.XmCreateDrawingArea (parentHandle, null, argList, argList.length / 2);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t} else {", "-\t\tcreateScrolledHandle (parentHandle);", "-\t}", "-\tif ((style & SWT.NO_FOCUS) == 0) {", "-\t\tint [] argList = {OS.XmNtraversalOn, 0};", "-\t\tfocusHandle = OS.XmCreateDrawingArea (handle, null, argList, argList.length / 2);", "-\t\tif (focusHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t}", "+\tboolean scroll = (style & (SWT.H_SCROLL | SWT.V_SCROLL)) != 0;", "+\tcreateHandle (index, parent.handle, scroll);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b50310d79e3935fcafd725af828b065e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/DateTime.java", "commitBeforeChange": "aa3c6d8a75ecd3aa62e9b9ee7768d59f601718ad", "commitAfterChange": "45241a274b1b6b5d05ce82d64b05685046285bb0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\t\tfixedHandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "-\t\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tgtk_widget_set_has_window (fixedHandle, true);", "-\t\tif ((style & SWT.DROP_DOWN) != 0 && (style & SWT.DATE) != 0) {", "-\t\t\thandle = OS.gtk_entry_new();", "-\t\t\tOS.gtk_container_add(fixedHandle, handle);", "-\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t} else {", "-\t\t\tlong /*int*/ adjusment = OS.gtk_adjustment_new(0, -9999, 9999, 1, 0, 0);", "-\t\t\thandle = OS.gtk_spin_button_new(adjusment, 1, 0);", "-\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_spin_button_set_numeric (handle, false);", "-\t\t\tOS.gtk_container_add(fixedHandle, handle);", "-\t\t\tOS.gtk_spin_button_set_wrap (handle, (style & SWT.WRAP) != 0);", "-\t\t}", "-\t\tOS.gtk_editable_set_editable (handle, (style & SWT.READ_ONLY) == 0);", "-\t\tOS.gtk_entry_set_has_frame (handle, (style & SWT.BORDER) != 0);", "-\t\t", "+\t\tsuper.createHandle(index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ccc6ce733666224ab0830b6a2c80492", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Shell.java", "commitBeforeChange": "8038ca7b432f0c35c2ee4f8c3164760226ff5589", "commitAfterChange": "b027826b9a9ad1469ec7d3868d9ca9a70ee0a016", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tOS.gtk_widget_realize (shellHandle);", "-\tint /*long*/ window = OS.GTK_WIDGET_WINDOW (shellHandle);", "-\tint decorations = 0;", "-\tif ((style & SWT.NO_TRIM) == 0) {", "-\t\tif ((style & SWT.MIN) != 0) decorations |= OS.GDK_DECOR_MINIMIZE;", "-\t\tif ((style & SWT.MAX) != 0) decorations |= OS.GDK_DECOR_MAXIMIZE;", "-\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_RESIZEH;", "-\t\tif ((style & SWT.BORDER) != 0) decorations |= OS.GDK_DECOR_BORDER;", "-\t\tif ((style & SWT.MENU) != 0) decorations |= OS.GDK_DECOR_MENU;", "-\t\tif ((style & SWT.TITLE) != 0) decorations |= OS.GDK_DECOR_TITLE;", "-\t\t/*", "-\t\t* Feature in GTK.  Under some Window Managers (Sawmill), in order", "-\t\t* to get any border at all from the window manager it is necessary to", "-\t\t* set GDK_DECOR_BORDER.  The fix is to force these bits when any", "-\t\t* kind of border is requested.", "-\t\t*/", "-\t\tif ((style & SWT.RESIZE) != 0) decorations |= OS.GDK_DECOR_BORDER;", "-\t}", "-\tOS.gdk_window_set_decorations (window, decorations);", "-\tif ((style & SWT.ON_TOP) != 0) {", "-\t\tOS.gdk_window_set_override_redirect (window, true);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e857d16385a5d55a75dcde54f095be9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 89, "signatureBeforeChange": " \t \tprivate int handleTextCallback(int nextHandler, int eRefHandle, int userData)", "signatureAfterChange": " \t \tprivate int handleTextCallback(int nextHandler, int eRefHandle, int userData)", "diff": ["-\t\t\t\tif (MacEvent.getKeyCode(eRefHandle) == 114) {\t// help key", "+\t\t\t\tif (MacEvent.getKeyCode(eRefHandle) == 122) {\t// help key f1", "-\t\t\t\t\treturn OS.noErr;", "+\t\t\t\t\treturn OS.kNoErr;", "-\t\t\tcase OS.kEventRawKeyModifiersChanged:", "-\t\t\t\tMacEvent macEvent = new MacEvent(eRefHandle, nextHandler);", "-\t\t\t\tint modifiers = macEvent.getModifiers();", "-\t\t\t\tint eventType = SWT.KeyUp;", "-\t\t\t\tif ((modifiers & OS.shiftKey) != 0 && (fLastModifiers & OS.shiftKey) == 0) eventType = SWT.KeyDown;", "-\t\t\t\tif ((modifiers & OS.controlKey) != 0 && (fLastModifiers & OS.controlKey) == 0) eventType = SWT.KeyDown;", "-\t\t\t\tif ((modifiers & OS.cmdKey) != 0 && (fLastModifiers & OS.cmdKey) == 0) eventType = SWT.KeyDown;", "-\t\t\t\tif ((modifiers & OS.optionKey) != 0 && (fLastModifiers & OS.optionKey) == 0) eventType = SWT.KeyDown;", "-\t\t\t\tint result = focus.processEvent(eventType, macEvent);", "-\t\t\t\tfLastModifiers = modifiers;", "-\t\t\t\treturn result;\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1df01e66912c2f9fb2af7a50f93d0b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/ExpandBar.java", "commitBeforeChange": "a07db21f2dc02d806d74ab0e60154800444f5429", "commitAfterChange": "704f9377fdfbc3f0c12e11665b0fc2e8c6f9b051", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createHandle (int index)", "signatureAfterChange": "  void createHandle (int index)", "diff": ["-\tif (OS.GTK_VERSION >= OS.VERSION (2, 4, 0)) {", "-\t\tfixedHandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "-\t\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_fixed_set_has_window (fixedHandle, true);", "-\t\thandle = OS.gtk_vbox_new (false, 0);", "-\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tif ((style & SWT.V_SCROLL) != 0) {", "-\t\t\tscrolledHandle = OS.gtk_scrolled_window_new (0, 0);", "-\t\t\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_scrolled_window_set_policy (scrolledHandle, OS.GTK_POLICY_NEVER, OS.GTK_POLICY_AUTOMATIC);", "-\t\t\tOS.gtk_container_add (fixedHandle, scrolledHandle);", "-\t\t\tOS.gtk_scrolled_window_add_with_viewport (scrolledHandle, handle);", "-\t\t\tint /*long*/ viewport = OS.gtk_bin_get_child (scrolledHandle);", "-\t\t\tOS.gtk_viewport_set_shadow_type (viewport, OS.GTK_SHADOW_NONE);", "-\t\t} else {", "-\t\t\tOS.gtk_container_add (fixedHandle, handle);", "-\t\t}", "-\t\tOS.gtk_container_set_border_width (handle, 0);", "+\tfixedHandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "+\tif (fixedHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tOS.gtk_fixed_set_has_window (fixedHandle, true);", "+\thandle = OS.gtk_vbox_new (false, 0);", "+\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif ((style & SWT.V_SCROLL) != 0) {", "+\t\tscrolledHandle = OS.gtk_scrolled_window_new (0, 0);", "+\t\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "+\t\tOS.gtk_scrolled_window_set_policy (scrolledHandle, OS.GTK_POLICY_NEVER, OS.GTK_POLICY_AUTOMATIC);", "+\t\tOS.gtk_container_add (fixedHandle, scrolledHandle);", "+\t\tOS.gtk_scrolled_window_add_with_viewport (scrolledHandle, handle);", "+\t\tint /*long*/ viewport = OS.gtk_bin_get_child (scrolledHandle);", "+\t\tOS.gtk_viewport_set_shadow_type (viewport, OS.GTK_SHADOW_NONE);", "-\t\tint /*long*/ topHandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "-\t\tif (topHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\tOS.gtk_fixed_set_has_window (topHandle, true);", "-\t\tif ((style & SWT.V_SCROLL) != 0) {", "-\t\t\tfixedHandle = topHandle;", "-\t\t\tscrolledHandle = OS.gtk_scrolled_window_new (0, 0);", "-\t\t\tif (scrolledHandle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\thandle = OS.g_object_new (display.gtk_fixed_get_type (), 0);", "-\t\t\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\t\t\tOS.gtk_fixed_set_has_window (handle, true);", "-\t\t\tOS.gtk_container_add (fixedHandle, scrolledHandle);", "-\t\t\t\t", "-\t\t\t/*", "-\t\t\t* Force the scrolledWindow to have a single child that is", "-\t\t\t* not scrolled automatically.  Calling gtk_container_add()", "-\t\t\t* seems to add the child correctly but cause a warning.", "-\t\t\t*/", "-\t\t\tboolean warnings = display.getWarnings ();", "-\t\t\tdisplay.setWarnings (false);", "-\t\t\tOS.gtk_container_add (scrolledHandle, handle);", "-\t\t\tdisplay.setWarnings (warnings);", "-\t\t} else {", "-\t\t\thandle = topHandle;", "-\t\t}", "-\t\tOS.GTK_WIDGET_SET_FLAGS (handle, OS.GTK_CAN_FOCUS);", "+\t\tOS.gtk_container_add (fixedHandle, handle);", "+\tOS.gtk_container_set_border_width (handle, 0);"]}], "num": 36465}