{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9766e75265f03fcb98b7f90b49172d0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db291f33acecc69b9b431accfb858ae", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/BusyIndicator.java", "commitBeforeChange": "e1a1a9a2764b9fd42d3fd4db27d8d960a32582f7", "commitAfterChange": "a020b04c78c712c2647316a79dbc9b6470db6a25", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r public static void showWhile(Display display, Runnable runnable)", "signatureAfterChange": "\r \r public static void showWhile(Display display, Runnable runnable)", "diff": ["-\tint index = 0;\r", "-\twhile (index < displays.length) {\r", "-\t\tif (displays[index] == display) break;\r", "-\t\tindex++;\r", "-\t}\r", "-\tif (index == displays.length) {\r", "-\t\tDisplay[] newDisplays = new Display[displays.length + 1];\r", "-\t\tSystem.arraycopy(displays, 0, newDisplays, 0, displays.length);\r", "-\t\tdisplays = newDisplays;\r", "-\t\tdisplays[index] = display;\r", "-\t\tfinal Display d = display;\r", "-\t\tdisplay.disposeExec( new Runnable() {\r", "-\t\t\tpublic void run() {\r", "-\t\t\t\tclear (d);\r", "-\t\t\t}\r", "-\t\t});\r", "-\t\t\r", "-\t\tCursor[] newCursors = new Cursor[cursors.length + 1];\r", "-\t\tSystem.arraycopy(cursors, 0, newCursors, 0, cursors.length);\r", "-\t\tcursors = newCursors;\r", "-\t}\r", "-\t\r", "-\tif (cursors[index] == null) {\r", "-\t\tcursors[index] = new Cursor(display, SWT.CURSOR_WAIT);\r", "-\t}\r", "-\t\r", "-\tnextBusyId = (++nextBusyId) % 65536;\r", "+\tnextBusyId++;\r", "+\tCursor cursor = new Cursor(display, SWT.CURSOR_WAIT);\r", "-\t\t\tshells[i].setCursor(cursors[index]);\r", "+\t\t\tshells[i].setCursor(cursor);\r", "+\t\tif (cursor != null && !cursor.isDisposed()) {\r", "+\t\t\tcursor.dispose();\r", "+\t\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e9934dea53245dcc79e42868adba60", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "ced6309d83136191307f59b1d7ca67538883169e", "commitAfterChange": "ec4463e5809457fec0c4e8fa95d96c7900df01c5", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  void setBounds (int x, int y, int width, int height, int flags)", "signatureAfterChange": "  void setBounds (int x, int y, int width, int height, int flags)", "diff": ["-\tif (parent == null) {", "+\tsetBounds (x, y, width, height, flags, true);", "+}", "-\t\treturn;", "-\tforceResize ();", "-\tWINDOWPOS [] lpwp = parent.lpwp;", "-\tif (lpwp == null) {", "-\t\t/*", "-\t\t* This code is intentionally commented.  All widgets that", "-\t\t* are created by SWT have WS_CLIPSIBLINGS to ensure that", "-\t\t* application code does not draw outside of the control.", "-\t\t*/", "-//\t\tint count = parent.getChildrenCount ();", "-//\t\tif (count > 1) {", "-//\t\t\tint bits = OS.GetWindowLong (handle, OS.GWL_STYLE);", "-//\t\t\tif ((bits & OS.WS_CLIPSIBLINGS) == 0) flags |= OS.SWP_NOCOPYBITS;", "-//\t\t}", "-\t\tSetWindowPos (handle, 0, x, y, width, height, flags);", "-\t\treturn;", "-\t}", "-\tint index = 0;", "-\twhile (index < lpwp.length) {", "-\t\tif (lpwp [index] == null) break;", "-\t\tindex ++;", "-\t}", "-\tif (index == lpwp.length) {", "-\t\tWINDOWPOS [] newLpwp = new WINDOWPOS [lpwp.length + 4];", "-\t\tSystem.arraycopy (lpwp, 0, newLpwp, 0, lpwp.length);", "-\t\tparent.lpwp = lpwp = newLpwp;", "-\t}", "-\tWINDOWPOS wp = new WINDOWPOS ();", "-\twp.hwnd = handle;", "-\twp.x = x;", "-\twp.y = y;", "-\twp.cx = width;", "-\twp.cy = height;", "-\twp.flags = flags;", "-\tlpwp [index] = wp;"]}], "num": 3900}