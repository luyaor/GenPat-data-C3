{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b3b2952f7f6150bae198d1e1b7081f8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d7cecbc4167ec54bdacaff7ff07719", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Scrollable.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tvoid handleResize(int handle, MacRect bounds)", "signatureAfterChange": "  int setBounds (int control, int x, int y, int width, int height, boolean move, boolean resize, boolean events)", "diff": ["+", "+int setBounds (int control, int x, int y, int width, int height, boolean move, boolean resize, boolean events) {", "+\tint result = super.setBounds(control, x, y, width, height, move, resize, false);", "+\tif ((result & MOVED) != 0) {", "+\t\tif (events) sendEvent (SWT.Move);", "+\tif ((result & RESIZED) != 0) {", "+\t\tif (control == scrolledHandle) layoutControl ();", "+\t\tif (events) sendEvent (SWT.Resize);", "+\t}", "+\treturn result;", "-\t */", "-\tvoid handleResize(int handle, MacRect bounds) {", "-\t\tsuper.handleResize(handle, bounds);", "-\t\trelayout123();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d2cbd6fe72b267ad711f6860c44db7", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/cocoa/org/eclipse/swt/internal/cocoa/NSBitmapImageRep.java", "commitBeforeChange": "00d9a929233cc0e4c7aa22a7ff5b7562dd581371", "commitAfterChange": "82a169db2ad1731cac41b8c9102e1999ac7a1ef7", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void getBitmapDataPlanes(int data)", "signatureAfterChange": "  public NSBitmapImageRep initWithBitmapDataPlanes(int planes, int width, int height, int bps, int spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int rBytes, int pBits)", "diff": ["-", "-public void getBitmapDataPlanes(int data) {", "-\tOS.objc_msgSend(this.id, OS.sel_getBitmapDataPlanes_1, data);", "-}", "+public NSBitmapImageRep initWithBitmapDataPlanes(int planes, int width, int height, int bps, int spp, boolean alpha, boolean isPlanar, NSString colorSpaceName, int rBytes, int pBits) {", "+\tint result = OS.objc_msgSend(this.id, OS.sel_initWithBitmapDataPlanes_pixelsWide_pixelsHigh_bitsPerSample_samplesPerPixel_hasAlpha_isPlanar_colorSpaceName_bytesPerRow_bitsPerPixel_, planes, width, height, bps, spp, alpha, isPlanar, colorSpaceName != null ? colorSpaceName.id : 0, rBytes, pBits);", "+\treturn result == this.id ? this : (result != 0 ? new NSBitmapImageRep(result) : null);"]}], "num": 57279}