{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81a9627efa25ba51a440a283f041533a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2f31a4792023249a3244c1eb99cd58", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/Menu.java", "commitBeforeChange": "f6e418ce08de208f524d556323de8e3b12653f8f", "commitAfterChange": "df118cfee649740c3cfc2ab13c4b8610502d4d4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  void createHandle ()", "signatureAfterChange": "  void createHandle ()", "diff": ["-", "-\tDisplay display= getDisplay();", "-\tint menuHandle[]= new int[1];", "-\tif (OS.CreateNewMenu(display.nextMenuId(), 0, menuHandle) == OS.noErr)", "-\t\thandle= menuHandle[0];", "-\tif (handle == 0) error (SWT.ERROR_NO_HANDLES);", "-\tOS.RetainMenu(handle);", "-\tint[] mask = new int[] {", "+\tDisplay display = getDisplay ();", "+\tshort menuID = display.nextMenuId ();", "+\tint outMenuRef [] = new int [1];", "+\tif (OS.CreateNewMenu (menuID, 0, outMenuRef) != OS.noErr) {", "+\t\terror (SWT.ERROR_NO_HANDLES);", "+\t}", "+\thandle = outMenuRef [0];", "+\tint [] mask = new int [] {", "-\t\tOS.kEventClassMenu, OS.kEventMenuClosed", "+\t\tOS.kEventClassMenu, OS.kEventMenuClosed,", "-\tOS.InstallEventHandler(OS.GetMenuEventTarget(handle), display.fMenuProc, mask.length / 2, mask, handle, null);", "+\tOS.InstallEventHandler (OS.GetMenuEventTarget (handle), display.fMenuProc, mask.length / 2, mask, handle, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f16f52e5bd7ada7d219e377c4ea280e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "c774114cec262ad39f0b126986a913c266685217", "commitAfterChange": "d26d3b0e6590420c31062e2d65cb92b8da477deb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic static Point toDisplay(int cHandle, Point point)", "signatureAfterChange": " \t \tpublic static Point toDisplay(int cHandle, Point point)", "diff": ["-\t\tint port= OS.GetPort();", "-\t\ttry {", "-\t\t\tOS.SetPortWindowPort(OS.GetControlOwner(cHandle));", "-\t\t\tOS.LocalToGlobal(mp.getData());", "-\t\t} finally {", "-\t\t\tOS.SetPort(port);", "-\t\t}", "+\t\t", "+\t\tint wHandle= OS.GetControlOwner(cHandle);", "+\t\tint port= OS.GetWindowPort(wHandle);", "+\t\tOS.QDLocalToGlobalPoint(port, mp.getData());", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcb2358b8046097519e2e86a246f3df", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT PI/carbon/org/eclipse/swt/internal/carbon/MacUtil.java", "commitBeforeChange": "c774114cec262ad39f0b126986a913c266685217", "commitAfterChange": "d26d3b0e6590420c31062e2d65cb92b8da477deb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic static Point toControl(int cHandle, Point point)", "signatureAfterChange": " \t \tpublic static Point toControl(int cHandle, Point point)", "diff": ["-\t\tint savedPort= OS.GetPort();", "-\t\ttry {", "-\t\t\tOS.SetPortWindowPort(OS.GetControlOwner(cHandle));", "-\t\t\tOS.GlobalToLocal(mp.getData());", "-\t\t} finally {", "-\t\t\tOS.SetPort(savedPort);", "-\t\t}", "+\t\tint wHandle= OS.GetControlOwner(cHandle);", "+\t\tint port= OS.GetWindowPort(wHandle);", "+\t\tOS.QDGlobalToLocalPoint(port, mp.getData());", "+\t\t", "+\t\t/*", "+\t\tfloat[] p2= new float[2];", "+\t\tp2[0]= mp.getX();", "+\t\tp2[1]= mp.getY();", "+\t\tOS.HIViewConvertPoint(p2, 0, cHandle);", "+\t\tSystem.out.println(\"MacUtil.toControl: \" + p + \"  \" + p2[0] + \" \" + p2[1]);", "+\t\t*/", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faed402565588fd8b81c4f0dc9984474", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/graphics/TextLayout.java", "commitBeforeChange": "70b00f9fd9ccac15426ee88b1dc6a2b6b783b7fa", "commitAfterChange": "11bc4a368151700b23786d7f7d417c288754443c", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  int _getOffset (int offset, int movement, boolean forward)", "signatureAfterChange": "  int _getOffset (int offset, int movement, boolean forward)", "diff": ["-\toffset = translateOffset(offset);", "+\toffset += step;", "+\tint internalOffset = translateOffset(offset);", "-\toffset = validateOffset(offset, step);", "-\twhile (0 < offset && offset < length) {", "-\t\tOS.memmove(logAttr, attrs[0] + offset * PangoLogAttr.sizeof, PangoLogAttr.sizeof);", "+\twhile (0 < internalOffset && internalOffset < length) {", "+\t\tOS.memmove(logAttr, attrs[0] + internalOffset * PangoLogAttr.sizeof, PangoLogAttr.sizeof);", "-\t\toffset = validateOffset(offset, step);", "+\t\toffset += step;", "+\t\tinternalOffset = translateOffset(offset);", "-\treturn Math.min(Math.max(0, untranslateOffset(offset)), text.length());", "+\treturn Math.min(Math.max(0, offset), text.length());"]}], "num": 47328}