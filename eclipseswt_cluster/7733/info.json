{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62120c679bed74fe1f0e80ec8710200d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db04fe7b19701af8be0ad2f832a3b824", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/ToolItem.java", "commitBeforeChange": "374a9aef6d3cdbe23142c7622f439f5425ecaa80", "commitAfterChange": "ed307d3f65dabf3aa5aefbc1cbd79da8679af838", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " void setBounds (int x, int y, int width, int height)", "signatureAfterChange": " void setBounds (int x, int y, int width, int height)", "diff": ["-\tRect bounds= new Rect();", "-\tOS.SetRect(bounds, (short)x, (short)y, (short)(x+width), (short)(y+height));", "-\tOS.SetControlBounds(handle, bounds);", "+\tif (MacUtil.USE_FRAME) {", "+\t\tfloat[] f= new float[4];", "+\t\tOS.HIViewGetFrame(handle, f);", "+\t\tif (f[0] != x || f[1] != y || f[2] != width || f[3] != height)", "+\t\t\tOS.HIViewSetFrame(handle, x, y, width, height);", "+\t} else {", "+\t\tshort[] bounds= new short[4];", "+\t\tshort[] pbounds= new short[4];", "+\t\tOS.GetControlBounds(handle, bounds);", "+\t\tOS.GetControlBounds(parent.handle, pbounds);", "+\t\t\t", "+\t\tboolean sameOrigin = (bounds[1]-pbounds[1]) == x && (bounds[0]-pbounds[0]) == y;", "+\t\tboolean sameExtent = (bounds[3]-bounds[1]) == width && (bounds[2]-bounds[0]) == height;", "+\t\tif (!sameOrigin || !sameExtent)", "+\t\t\tOS.SetControlBounds(handle, new MacRect(pbounds[1]+x, pbounds[0]+y, width, height).getData());", "+\t}", "+", "+\tif (parent.fGotSize)", "+\t\tOS.HIViewSetVisible(handle, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479ff1e236728b8f5eb9d2f2bc421adc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Combo.java", "commitBeforeChange": "e4a5b4039e34eaefc26de1944535bb7eeddf7be0", "commitAfterChange": "d05349824e51056345d3e4d57c688edd41637c64", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 107, "signatureBeforeChange": "  LRESULT wmKeyDown (long hwnd, long wParam, long lParam)", "signatureAfterChange": "  LRESULT wmKeyDown (long hwnd, long wParam, long lParam)", "diff": ["-\tif (wParam == OS.VK_RETURN) {", "-\t\tif ((style & SWT.DROP_DOWN) != 0) {", "-\t\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) != 0) {", "-\t\t\t\tignoreDefaultSelection = true;", "+\tswitch ((int)/*64*/wParam) {", "+\t\tcase OS.VK_LEFT:", "+\t\tcase OS.VK_UP:", "+\t\tcase OS.VK_RIGHT:", "+\t\tcase OS.VK_DOWN:", "+\t\t\tif (segments != null) {", "+\t\t\t\tlong /*int*/ code = 0;", "+\t\t\t\tint [] start = new int [1], end = new int [1], newStart = new int [1], newEnd = new int [1];", "+\t\t\t\tOS.SendMessage (handle, OS.CB_GETEDITSEL, start, end);", "+\t\t\t\twhile (true) {", "+\t\t\t\t\tcode = callWindowProc (hwnd, OS.WM_KEYDOWN, wParam, lParam);", "+\t\t\t\t\tOS.SendMessage (handle, OS.CB_GETEDITSEL, newStart, newEnd);", "+\t\t\t\t\tif (newStart [0] != start [0]) {", "+\t\t\t\t\t\tif (untranslateOffset (newStart [0]) != untranslateOffset (start [0])) break;", "+\t\t\t\t\t} else if (newEnd [0] != end [0]) {", "+\t\t\t\t\t\tif (untranslateOffset (newEnd [0]) != untranslateOffset (end [0]))  break;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t\tstart [0] = newStart [0];", "+\t\t\t\t\tend [0] = newEnd [0]; ", "+\t\t\t\t}", "+\t\t\t\tresult = code == 0 ? LRESULT.ZERO : new LRESULT (code);", "-\t\t}", "+\t\t\tbreak;", "+\t\tcase OS.VK_RETURN:", "+\t\t\tif ((style & SWT.DROP_DOWN) != 0) {", "+\t\t\t\tif (OS.SendMessage (handle, OS.CB_GETDROPPEDSTATE, 0, 0) != 0) {", "+\t\t\t\t\tignoreDefaultSelection = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;"]}], "num": 7733}