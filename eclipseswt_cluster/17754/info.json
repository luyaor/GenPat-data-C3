{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e67bcafa765c296d2373e79aa62ef411", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a70de20e960a72f0cd5304dacec779ea", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "\t  \tint atkObject_get_description ()", "signatureAfterChange": "\t  \tint atkObject_get_description ()", "diff": ["-\t\tif (accessible.getAccessibleListeners ().length != 0) {", "-\t\t\tAccessibleListener[] listeners = accessible.getAccessibleListeners ();", "-\t\t\tAccessibleEvent event = new AccessibleEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getDescription (event);\t\t\t\t", "-\t\t\t} ", "-\t\t\tif (event.result != null) {", "-\t\t\t\tif (descriptionPtr != -1) OS.g_free (descriptionPtr);", "-\t\t\t\tbyte[] name = Converter.wcsToMbcs (null, event.result, true);", "-\t\t\t\tdescriptionPtr = OS.g_malloc (name.length);", "-\t\t\t\tOS.memmove (descriptionPtr, name, name.length);", "-\t\t\t\treturn descriptionPtr; ", "-\t\t\t}", "-\t\t} ", "+\t\tint parentResult = 0;", "-\t\tif (objectClass.get_description == 0) return 0;", "-\t\treturn OS.call (objectClass.get_description, handle);", "+\t\tif (objectClass.get_description != 0) {", "+\t\t\tparentResult = OS.call (objectClass.get_description, handle);", "+\t\t}", "+\t\tAccessibleListener[] listeners = accessible.getAccessibleListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t\t", "+\t\tAccessibleEvent event = new AccessibleEvent (this);", "+\t\tevent.childID = id;", "+\t\tif (parentResult != 0) {", "+\t\t\tint length = OS.strlen (parentResult);", "+\t\t\tbyte [] buffer = new byte [length];", "+\t\t\tOS.memmove (buffer, parentResult, length);", "+\t\t\tevent.result = new String (Converter.mbcsToWcs (null, buffer));", "+\t\t}", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getDescription (event);\t\t\t\t", "+\t\t} ", "+\t\tif (event.result == null) return parentResult;", "+\t\tif (descriptionPtr != -1) OS.g_free (descriptionPtr);", "+\t\tbyte[] name = Converter.wcsToMbcs (null, event.result, true);", "+\t\tdescriptionPtr = OS.g_malloc (name.length);", "+\t\tOS.memmove (descriptionPtr, name, name.length);", "+\t\treturn descriptionPtr; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2b9a2045bf78259830a1df9ae39f1ab", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "a397adb9835229656215e95243704829dfcbbeb5", "commitAfterChange": "def775014633899bdd73c908cbbdd1bf2fa7d5be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tint atkObject_get_name ()", "signatureAfterChange": "  \tint atkObject_get_name ()", "diff": ["-\t\tif (accessible.getAccessibleListeners ().length != 0) {", "-\t\t\tAccessibleListener[] listeners = accessible.getAccessibleListeners ();", "-\t\t\tAccessibleEvent event = new AccessibleEvent (this);", "-\t\t\tevent.childID = id;", "-\t\t\tfor (int i = 0; i < listeners.length; i++) {", "-\t\t\t\tlisteners [i].getName (event);\t\t\t\t", "-\t\t\t} ", "-\t\t\tif (event.result != null) {", "-\t\t\t\tif (namePtr != -1) OS.g_free (namePtr);", "-\t\t\t\tbyte[] name = Converter.wcsToMbcs (null, event.result, true);", "-\t\t\t\tnamePtr = OS.g_malloc (name.length);", "-\t\t\t\tOS.memmove (namePtr, name, name.length);", "-\t\t\t\treturn namePtr; ", "-\t\t\t}", "-\t\t} ", "+\t\tint parentResult = 0;", "-\t\tif (objectClass.get_name == 0) return 0;", "-\t\treturn OS.call (objectClass.get_name, handle);", "+\t\tif (objectClass.get_name != 0) {", "+\t\t\tparentResult = OS.call (objectClass.get_name, handle);", "+\t\t}", "+\t\tAccessibleListener[] listeners = accessible.getAccessibleListeners ();", "+\t\tif (listeners.length == 0) return parentResult;", "+\t\t", "+\t\tAccessibleEvent event = new AccessibleEvent (this);", "+\t\tevent.childID = id;", "+\t\tif (parentResult != 0) {", "+\t\t\tint length = OS.strlen (parentResult);", "+\t\t\tbyte [] buffer = new byte [length];", "+\t\t\tOS.memmove (buffer, parentResult, length);", "+\t\t\tevent.result = new String (Converter.mbcsToWcs (null, buffer));", "+\t\t}", "+\t\tfor (int i = 0; i < listeners.length; i++) {", "+\t\t\tlisteners [i].getName (event);\t\t\t\t", "+\t\t} ", "+\t\tif (event.result == null) return parentResult;", "+\t\tif (namePtr != -1) OS.g_free (namePtr);", "+\t\tbyte[] name = Converter.wcsToMbcs (null, event.result, true);", "+\t\tnamePtr = OS.g_malloc (name.length);", "+\t\tOS.memmove (namePtr, name, name.length);", "+\t\treturn namePtr; "]}], "num": 17754}