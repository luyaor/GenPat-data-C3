{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f6d264928ce56ded0670d5a8450ecc51", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4163370e15405f520d3fdb51eecb234b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/MenuItem.java", "commitBeforeChange": "1b5f49ae18fea90ea2d8664d941d4f41a88b5c62", "commitAfterChange": "898de4a7407267625b3a2b663ef53ac2b325fb6c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  void updateText (short menuIndex)", "signatureAfterChange": "  void updateText (short menuIndex)", "diff": ["+\t", "+\tacceleratorSet = accelerator != 0;", "+\tif (!acceleratorSet) {", "+\t\t/* Parse accelerator text following \\t in the item text. */", "+\t\tif (i + 1 < buffer.length && buffer [i] == '\\t') {", "+\t\t\tboolean inSetVirtualKey = false;", "+\t\t\tint inModifiers = OS.kMenuNoCommandModifier, inGlyph = OS.kMenuNullGlyph, inKey = 0, swtKey = 0;", "+\t\t\tfor (j = i + 1; j < buffer.length; j++) {", "+\t\t\t\tchar c = buffer [j];", "+\t\t\t\tswitch (c) {", "+\t\t\t\t\tcase '\\u2303': inModifiers |= OS.kMenuControlModifier; i++; break;", "+\t\t\t\t\tcase '\\u2325': inModifiers |= OS.kMenuOptionModifier; i++; break;", "+\t\t\t\t\tcase '\\u21E7': inModifiers |= OS.kMenuShiftModifier; i++; break;", "+\t\t\t\t\tcase '\\u2318': inModifiers &= ~OS.kMenuNoCommandModifier; i++; break;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tint length = buffer.length - i - 1;", "+\t\t\tif (length > 0) {", "+\t\t\t\tif (length > 1) {", "+\t\t\t\t\tif (buffer [i + 1] == 'F') {", "+\t\t\t\t\t\tswitch (buffer [i + 2]) {", "+\t\t\t\t\t\t\tcase '1':", "+\t\t\t\t\t\t\t\tif (length == 2) {", "+\t\t\t\t\t\t\t\t\tswtKey = SWT.F1;", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tswitch (buffer [i + 2]) {", "+\t\t\t\t\t\t\t\t\t\tcase '0': swtKey = SWT.F10; break;", "+\t\t\t\t\t\t\t\t\t\tcase '1': swtKey = SWT.F11; break;", "+\t\t\t\t\t\t\t\t\t\tcase '2': swtKey = SWT.F12; break;", "+\t\t\t\t\t\t\t\t\t\tcase '3': swtKey = SWT.F13; break;", "+\t\t\t\t\t\t\t\t\t\tcase '4': swtKey = SWT.F14; break;", "+\t\t\t\t\t\t\t\t\t\tcase '5': swtKey = SWT.F15; break;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase '2': swtKey = SWT.F2; break;", "+\t\t\t\t\t\t\tcase '3': swtKey = SWT.F3; break;", "+\t\t\t\t\t\t\tcase '4': swtKey = SWT.F4; break;", "+\t\t\t\t\t\t\tcase '5': swtKey = SWT.F5; break;", "+\t\t\t\t\t\t\tcase '6': swtKey = SWT.F6; break;", "+\t\t\t\t\t\t\tcase '7': swtKey = SWT.F7; break;", "+\t\t\t\t\t\t\tcase '8': swtKey = SWT.F8; break;", "+\t\t\t\t\t\t\tcase '9': swtKey = SWT.F9; break;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tinKey = buffer [i + 1];", "+\t\t\t\t\tswitch (inKey) {", "+\t\t\t\t\t\tcase '\\u232B': swtKey = SWT.BS; break;", "+\t\t\t\t\t\tcase '\\u21A9': swtKey = SWT.CR; break;", "+\t\t\t\t\t\tcase '\\u2326': swtKey = SWT.DEL; break;", "+\t\t\t\t\t\tcase '\\u238B': swtKey = SWT.ESC; break;", "+\t\t\t\t\t\tcase '\\u21E5': swtKey = SWT.TAB; break;", "+\t\t\t\t\t\tcase ' ': swtKey = ' '; break;", "+\t//\t\t\t\t\tcase '\\u2423': swtKey = ' '; break;", "+\t\t\t\t\t\tcase '\\u2191': swtKey = SWT.ARROW_UP; break;", "+\t\t\t\t\t\tcase '\\u2193': swtKey = SWT.ARROW_DOWN; break;", "+\t\t\t\t\t\tcase '\\u2190': swtKey = SWT.ARROW_LEFT; break;", "+\t\t\t\t\t\tcase '\\u2192': swtKey = SWT.ARROW_RIGHT; break;", "+\t\t\t\t\t\tcase '\\u21DE': swtKey = SWT.PAGE_UP; break;", "+\t\t\t\t\t\tcase '\\u21DF': swtKey = SWT.PAGE_DOWN; break;", "+\t\t\t\t\t\tcase '\\u2305': swtKey = SWT.KEYPAD_CR; break;", "+\t\t\t\t\t\tcase '\\u211C': swtKey = SWT.HELP; break;", "+\t//\t\t\t\t\tcase '\\u21EA': swtKey = SWT.CAPS_LOCK; break;", "+\t//\t\t\t\t\tcase '??': swtKey = SWT.HOME; break;", "+\t//\t\t\t\t\tcase '??': swtKey = SWT.END; break;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tinGlyph = keyGlyph (swtKey);", "+\t\t\t\tint virtualKey = Display.untranslateKey (swtKey);", "+\t\t\t\tif (inKey == ' ') virtualKey = 49;", "+\t\t\t\tif (virtualKey != 0) {", "+\t\t\t\t\tinSetVirtualKey = true;", "+\t\t\t\t\tinKey = virtualKey;", "+\t\t\t\t} else {", "+\t\t\t\t\tinKey = Character.toUpperCase ((char)inKey);", "+\t\t\t\t}", "+\t\t\t\tif (inKey != 0 || inGlyph != OS.kMenuNullGlyph) {", "+\t\t\t\t\tOS.SetMenuItemModifiers (parent.handle, menuIndex, (byte)inModifiers);", "+\t\t\t\t\tOS.SetMenuItemCommandKey (parent.handle, menuIndex, inSetVirtualKey, (char)inKey);", "+\t\t\t\t\tOS.SetMenuItemKeyGlyph (parent.handle, menuIndex, (short)inGlyph);", "+\t\t\t\t\tacceleratorSet = true;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e4fa1db89bd90262004ff208acc5d6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "8876e6d492a2f5404dad013c1e9b990deabd9d1f", "commitAfterChange": "e035b05d2d4596f4d188bcb320a38d62c37de2e2", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \t \tvoid sendEvent(int event, Object eventData)", "signatureAfterChange": " \t \tvoid sendEvent(int event, Object eventData)", "diff": ["-\t\t\tcase ACC.EVENT_STATE_CHANGED:", "-\t\t\t\t//TODO needs the state that changed", "-//\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.state_change, );", "+\t\t\tcase ACC.EVENT_STATE_CHANGED: {", "+\t\t\t\tif (!(eventData instanceof int[])) break;", "+\t\t\t\tint[] array = (int[])eventData;", "+\t\t\t\tint state =  array[0];", "+\t\t\t\tint value = array[1];", "+\t\t\t\tint atkState = -1;", "+\t\t\t\tswitch (state) {", "+\t\t\t\t\tcase ACC.STATE_SELECTED: atkState = ATK.ATK_STATE_SELECTED; break;", "+\t\t\t\t\tcase ACC.STATE_SELECTABLE: atkState = ATK.ATK_STATE_SELECTABLE; break;", "+\t\t\t\t\tcase ACC.STATE_MULTISELECTABLE: atkState = ATK.ATK_STATE_MULTISELECTABLE; break;", "+\t\t\t\t\tcase ACC.STATE_FOCUSED: atkState = ATK.ATK_STATE_FOCUSED; break;", "+\t\t\t\t\tcase ACC.STATE_FOCUSABLE: atkState = ATK.ATK_STATE_FOCUSABLE; break;", "+\t\t\t\t\tcase ACC.STATE_PRESSED: atkState = ATK.ATK_STATE_PRESSED; break;", "+\t\t\t\t\tcase ACC.STATE_CHECKED: atkState = ATK.ATK_STATE_CHECKED; break;", "+\t\t\t\t\tcase ACC.STATE_EXPANDED: atkState = ATK.ATK_STATE_EXPANDED; break;", "+\t\t\t\t\tcase ACC.STATE_COLLAPSED: atkState = ATK.ATK_STATE_EXPANDED; break;", "+\t\t\t\t\tcase ACC.STATE_HOTTRACKED: atkState = ATK.ATK_STATE_ARMED; break;", "+\t\t\t\t\tcase ACC.STATE_BUSY: atkState = ATK.ATK_STATE_BUSY; break;", "+\t\t\t\t\tcase ACC.STATE_READONLY: atkState = ATK.ATK_STATE_EDITABLE; break;", "+\t\t\t\t\tcase ACC.STATE_INVISIBLE: atkState = ATK.ATK_STATE_VISIBLE; break;", "+\t\t\t\t\tcase ACC.STATE_OFFSCREEN: atkState = ATK.ATK_STATE_SHOWING; break;", "+\t\t\t\t\tcase ACC.STATE_SIZEABLE: atkState = ATK.ATK_STATE_RESIZABLE; break;", "+\t\t\t\t\tcase ACC.STATE_LINKED: break;", "+\t\t\t\t\tcase ACC.STATE_DISABLED: atkState = ATK.ATK_STATE_ENABLED; break;", "+\t\t\t\t\tcase ACC.STATE_ACTIVE: atkState = ATK.ATK_STATE_ACTIVE; break;", "+\t\t\t\t\tcase ACC.STATE_SINGLELINE: atkState = ATK.ATK_STATE_SINGLE_LINE; break;", "+\t\t\t\t\tcase ACC.STATE_MULTILINE: atkState = ATK.ATK_STATE_MULTI_LINE; break;", "+\t\t\t\t\tcase ACC.STATE_REQUIRED: atkState = ATK.ATK_STATE_REQUIRED; break;", "+\t\t\t\t\tcase ACC.STATE_INVALID_ENTRY: atkState = ATK.ATK_STATE_INVALID_ENTRY; break;", "+\t\t\t\t\tcase ACC.STATE_SUPPORTS_AUTOCOMPLETION: atkState = ATK.ATK_STATE_SUPPORTS_AUTOCOMPLETION; break;", "+\t\t\t\t}", "+\t\t\t\tif (atkState == -1) break;", "+\t\t\t\tATK.atk_object_notify_state_change(handle, atkState, value != 0);", "-\t\t\tcase ACC.EVENT_LOCATION_CHANGED:", "-\t\t\t\t//TODO needs the new bounds", "-//\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.bounds_changed);", "+\t\t\t}", "+\t\t\tcase ACC.EVENT_LOCATION_CHANGED: {", "+\t\t\t\tVector listeners = accessible.accessibleControlListeners;", "+\t\t\t\tint length = listeners.size();", "+\t\t\t\tGdkRectangle rect = new GdkRectangle();", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tAccessibleControlEvent e = new AccessibleControlEvent (accessible);", "+\t\t\t\t\te.childID = id;", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tAccessibleControlListener listener = (AccessibleControlListener)listeners.elementAt (i);", "+\t\t\t\t\t\tlistener.getLocation (e);", "+\t\t\t\t\t}", "+\t\t\t\t\trect.x = e.x;", "+\t\t\t\t\trect.y = e.y;", "+\t\t\t\t\trect.width = e.width;", "+\t\t\t\t\trect.height = e.height;", "+\t\t\t\t}", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.bounds_changed, rect);", "+\t\t\t}", "-\t\t\tcase ACC.EVENT_TEXT_COLUMN_CHANGED:", "-\t\t\t\t//TODO needs the new position of the caret", "-\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_caret_moved);", "+\t\t\tcase ACC.EVENT_TEXT_COLUMN_CHANGED: {", "+\t\t\t\tint offset = 0;", "+\t\t\t\tVector listeners = accessible.accessibleTextExtendedListeners;", "+\t\t\t\tint length = listeners.size();", "+\t\t\t\tAccessibleTextEvent e = new AccessibleTextEvent (accessible);", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) listeners.elementAt(i);", "+\t\t\t\t\t\tlistener.getCaretOffset (e);", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tlisteners = accessible.accessibleTextListeners;", "+\t\t\t\t\tlength = listeners.size();", "+\t\t\t\t\tif (length > 0) {", "+\t\t\t\t\t\te.childID = id;", "+\t\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\t\tAccessibleTextListener listener = (AccessibleTextListener) listeners.elementAt(i);", "+\t\t\t\t\t\t\tlistener.getCaretOffset (e);\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\toffset = e.offset;", "+\t\t\t\tOS.g_signal_emit_by_name (handle, ATK.text_caret_moved, offset);", "+\t\t\t}"]}], "num": 926}