{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbcaf0c884ca984073d2f60dc55527a3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396c1c9bc3e5d078fc31ba9cc764b915", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "0ecbb298a8c56b0f669106bc6c06b6c0d56c8e74", "commitAfterChange": "248e15351952f7cde8809fbcef225c10f9c9d3ba", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": "  void applicationSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void applicationSendEvent (int id, int sel, int event)", "diff": ["+\tNSWindow window = nsEvent.window ();", "-\t\t\tNSWindow window = nsEvent.window ();", "-\tobjc_super super_struct = new objc_super ();", "-\tsuper_struct.receiver = id;", "-\tsuper_struct.super_class = OS.objc_msgSend (id, OS.sel_superclass);", "-\tOS.objc_msgSendSuper (super_struct, sel, event);", "+\t/*", "+\t * Feature in Cocoa. NSKeyUp events are not delivered to the window if the command key is down.", "+\t * If the event is destined for the key window, and it's a key up and the command key is down, send it directly to the window.", "+\t */", "+\tif (window != null && window.isKeyWindow() && nsEvent.type() == OS.NSKeyUp && (nsEvent.modifierFlags() & OS.NSCommandKeyMask) != 0)\t{", "+\t\twindow.sendEvent(nsEvent);", "+\t} else {", "+\t\tobjc_super super_struct = new objc_super ();", "+\t\tsuper_struct.receiver = id;", "+\t\tsuper_struct.super_class = OS.objc_msgSend (id, OS.sel_superclass);", "+\t\tOS.objc_msgSendSuper (super_struct, sel, event);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "783e41adebd2ada34b4d9f8a8115720d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Display.java", "commitBeforeChange": "b0b378d92f5f208a21c9df50a17e264d7d363b27", "commitAfterChange": "44874e55f9305454372149b1719cdbce9433a232", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "  void applicationSendEvent (int id, int sel, int event)", "signatureAfterChange": "  void applicationSendEvent (int id, int sel, int event)", "diff": ["-\tapplicationSendMouseEvent(nsEvent, false);", "-\tobjc_super super_struct = new objc_super();", "+\tint type = nsEvent.type ();", "+\tboolean beep = false;", "+\tswitch (type) {", "+\t\tcase OS.NSLeftMouseDown:", "+\t\tcase OS.NSRightMouseDown:", "+\t\tcase OS.NSOtherMouseDown:", "+\t\t\tbeep = true;", "+\t\tcase OS.NSLeftMouseUp:", "+\t\tcase OS.NSRightMouseUp:", "+\t\tcase OS.NSMouseMoved:", "+\t\tcase OS.NSLeftMouseDragged:", "+\t\tcase OS.NSRightMouseDragged:", "+\t\tcase OS.NSMouseEntered:", "+\t\tcase OS.NSMouseExited:", "+\t\tcase OS.NSKeyDown:", "+\t\tcase OS.NSKeyUp:", "+\t\tcase OS.NSOtherMouseUp:", "+\t\tcase OS.NSOtherMouseDragged:", "+\t\t\tNSWindow window = nsEvent.window ();", "+\t\t\tif (window != null) {", "+\t\t\t\tShell shell = (Shell) getWidget (window.id);", "+\t\t\t\tif (shell != null && shell.getModalShell () != null) {", "+\t\t\t\t\tif (beep) beep ();\t", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbreak;", "+\t}", "+\tapplicationSendMouseEvent (nsEvent, false);", "+\tobjc_super super_struct = new objc_super ();", "-\tsuper_struct.super_class = OS.objc_msgSend(id, OS.sel_superclass);", "-\tOS.objc_msgSendSuper(super_struct, sel, event);", "+\tsuper_struct.super_class = OS.objc_msgSend (id, OS.sel_superclass);", "+\tOS.objc_msgSendSuper (super_struct, sel, event);"]}], "num": 16629}