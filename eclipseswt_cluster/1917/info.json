{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "949ff77cbf81afb079ce958c4e095a0d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e14609bbb5df1f408f47723a862f295", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Mozilla/gtk/org/eclipse/swt/browser/Browser.java", "commitBeforeChange": "4cc5ca7de1624c8b539a57f5d1339651e93d2a21", "commitAfterChange": "6c47784c5a7b45e769c078aad8b37a11143d5176", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  int QueryInterface(int riid, int ppvObject)", "signatureAfterChange": "  int QueryInterface(int riid, int ppvObject)", "diff": ["-int QueryInterface(int riid, int ppvObject) {", "+int /*long*/ QueryInterface(int /*long*/ riid, int /*long*/ ppvObject) {", "-\t\tXPCOM.memmove(ppvObject, new int[] {supports.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supports.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {weakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {weakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webProgressListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webProgressListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChrome.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChrome.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {webBrowserChromeFocus.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {webBrowserChromeFocus.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {embeddingSiteWindow.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {embeddingSiteWindow.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {interfaceRequestor.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {interfaceRequestor.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {supportsWeakReference.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {supportsWeakReference.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {contextMenuListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {contextMenuListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {uriContentListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {uriContentListener.getAddress()}, OS.PTR_SIZEOF);", "-\t\tXPCOM.memmove(ppvObject, new int[] {tooltipListener.getAddress()}, 4);", "+\t\tXPCOM.memmove(ppvObject, new int /*long*/[] {tooltipListener.getAddress()}, OS.PTR_SIZEOF);", "-\tXPCOM.memmove(ppvObject, new int[] {0}, 4);", "+\tXPCOM.memmove(ppvObject, new int /*long*/[] {0}, OS.PTR_SIZEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eedbf5f371931c25a05628dbbc959257", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/win32/org/eclipse/swt/accessibility/Accessible.java", "commitBeforeChange": "30eaec187a22ddf0998c34e45a71b135fb6c6509", "commitAfterChange": "4e3ace7441083b52059381fc7315ed0ffaa59c75", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 249, "signatureBeforeChange": " \tint QueryInterface(int iid, int ppvObject)", "signatureAfterChange": " \tint QueryInterface(COMObject comObject, int iid, int ppvObject)", "diff": ["-\tint QueryInterface(int /*long*/ iid, int /*long*/ ppvObject) {", "-\t\tif (iaccessible == null) return COM.CO_E_OBJNOTCONNECTED;", "+\tint QueryInterface(COMObject comObject, int /*long*/ iid, int /*long*/ ppvObject) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress()}, OS.PTR_SIZEOF);", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { comObject.getAddress() }, OS.PTR_SIZEOF);", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIDispatch)) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress()}, OS.PTR_SIZEOF);", "-\t\t\tAddRef();", "-\t\t\treturn COM.S_OK;", "-\t\t}", "-", "-\t\tif (COM.IsEqualGUID(guid, COM.IIDIAccessible)) {", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress()}, OS.PTR_SIZEOF);", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIDispatch) || COM.IsEqualGUID(guid, COM.IIDIAccessible)) {", "+\t\t\tif (objIAccessible == null) createIAccessible();", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIAccessible.getAddress() }, OS.PTR_SIZEOF);", "-\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIEnumVARIANT.getAddress()}, OS.PTR_SIZEOF);", "+\t\t\tif (objIEnumVARIANT == null) createIEnumVARIANT();", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIEnumVARIANT.getAddress() }, OS.PTR_SIZEOF);", "+\t\t", "+\t\tif (COM.IsEqualGUID(guid, COM.IIDIServiceProvider)) {", "+\t\t\tif (objIServiceProvider == null) createIServiceProvider();", "+\t\t\tCOM.MoveMemory(ppvObject, new int /*long*/[] { objIServiceProvider.getAddress() }, OS.PTR_SIZEOF);", "+\t\t\tAddRef();", "+\t\t\treturn COM.S_OK;", "+\t\t}", "-\t\tint /*long*/[] ppv = new int /*long*/[1];", "-\t\tint result = iaccessible.QueryInterface(guid, ppv);", "-\t\tCOM.MoveMemory(ppvObject, ppv, OS.PTR_SIZEOF);", "-\t\treturn result;", "+\t\tint code = queryAccessible2Interfaces(guid, ppvObject);", "+\t\tif (code == COM.S_OK) {", "+\t\t\treturn COM.S_OK;", "+\t\t}", "+", "+\t\tif (iaccessible != null) {", "+\t\t\t/* Forward any other GUIDs to the OS proxy. */", "+\t\t\tint /*long*/[] ppv = new int /*long*/[1];", "+\t\t\tcode = iaccessible.QueryInterface(guid, ppv);", "+\t\t\tCOM.MoveMemory(ppvObject, ppv, OS.PTR_SIZEOF);", "+\t\t\treturn code;", "+\t\t}", "+\t\t", "+\t\treturn COM.E_NOINTERFACE;"]}], "num": 1917}