{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5768a0a2139d927d0894793854bc27a0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a661b68ee548c3869f2b0d64cd9fc35", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "7f67eb669b60899d5d864f36db7609da8aaa74f8", "commitAfterChange": "943e636872bc8a03295d2687608e23eaccf0ef31", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": "  boolean setCellData(int tree_model, int iter)", "signatureAfterChange": "  boolean setCellData(int tree_model, int iter)", "diff": ["-\t\t\tif (!item.cached) {", "-\t\t\t\tEvent event = new Event ();", "-\t\t\t\tevent.item = item;", "-\t\t\t\tint mask = OS.G_SIGNAL_MATCH_DATA | OS.G_SIGNAL_MATCH_ID;", "-\t\t\t\tint signal_id = OS.g_signal_lookup (OS.row_changed, OS.gtk_tree_model_get_type ());", "-\t\t\t\tOS.g_signal_handlers_block_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "-\t\t\t\tsendEvent (SWT.SetData, event);", "-\t\t\t\tif (isDisposed()) return false;", "-\t\t\t\t//widget could be disposed at this point", "-\t\t\t\tOS.g_signal_handlers_unblock_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "-\t\t\t\titem.cached = true;", "-\t\t\t\treturn true;", "-\t\t\t}", "+\t\t\tif (!item.cached) return checkData (item);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f3013035f09eec1a6cf8f470a49b56", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "72bf62bb2408b7b3c79f280c8a42c7bee34d0d68", "commitAfterChange": "0d346e36b53adb218e44b09cfed0a91a6a412e91", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 75, "signatureBeforeChange": "  boolean setCellData(int tree_model, int iter)", "signatureAfterChange": "  boolean setCellData(int tree_model, int iter)", "diff": ["-\t\t\tTableItem item = items [index [0]];\t", "-\t\t\tEvent event = new Event ();", "-\t\t\tevent.item = item;", "-\t\t\tint mask = OS.G_SIGNAL_MATCH_DATA | OS.G_SIGNAL_MATCH_ID;", "-\t\t\tint signal_id = OS.g_signal_lookup (OS.row_changed, OS.gtk_tree_model_get_type ());", "-\t\t\tOS.g_signal_handlers_block_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "-\t\t\tsendEvent (SWT.SetData, event);", "-\t\t\tif (isDisposed()) return false;", "-\t\t\t//widget could be disposed at this point", "-\t\t\tOS.g_signal_handlers_unblock_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "-\t\t\treturn true;", "+\t\t\tTableItem item = items [index [0]];", "+\t\t\tif (!item.cached) {", "+\t\t\t\tEvent event = new Event ();", "+\t\t\t\tevent.item = item;", "+\t\t\t\tint mask = OS.G_SIGNAL_MATCH_DATA | OS.G_SIGNAL_MATCH_ID;", "+\t\t\t\tint signal_id = OS.g_signal_lookup (OS.row_changed, OS.gtk_tree_model_get_type ());", "+\t\t\t\tOS.g_signal_handlers_block_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "+\t\t\t\tsendEvent (SWT.SetData, event);", "+\t\t\t\tif (isDisposed()) return false;", "+\t\t\t\t//widget could be disposed at this point", "+\t\t\t\tOS.g_signal_handlers_unblock_matched (tree_model, mask, signal_id, 0, 0, 0, handle);", "+\t\t\t\titem.cached = true;", "+\t\t\t\treturn true;", "+\t\t\t}"]}], "num": 31591}