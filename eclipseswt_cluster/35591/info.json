{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76e3d882d8f2c3551c044d2a3d71d404", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ca72c5e0a450714fe0e3e5e8e0e92e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_List.java", "commitBeforeChange": "d3553c533461a8253fca0af1fda8bb9189ab1260", "commitAfterChange": "6d1773a3a9771263ff81f0263e12eee082bb7a2f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test_getSelectionIndices()", "signatureAfterChange": "  public void test_getSelectionIndices()", "diff": ["-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(new int[] {}, list.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, list.getSelectionIndices());", "-\tassertSame(new int[] { 0, 1, 2 }, list.getSelectionIndices());", "+\tassertArrayEquals(new int[] { 0, 1, 2 }, list.getSelectionIndices());", "-\tassertSame(new int[] { 1, 2 }, list.getSelectionIndices());", "+\tassertArrayEquals(new int[] { 1, 2 }, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(sel, list.getSelectionIndices());", "+\tassertArrayEquals(sel, list.getSelectionIndices());", "-\tassertSame(new int[] {}, list.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, list.getSelectionIndices());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f033fcad34e01214101288df098e683f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/Test_org_eclipse_swt_widgets_Table.java", "commitBeforeChange": "d3553c533461a8253fca0af1fda8bb9189ab1260", "commitAfterChange": "6d1773a3a9771263ff81f0263e12eee082bb7a2f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test_select$I()", "signatureAfterChange": "  public void test_select$I()", "diff": ["-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, number-1}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, number-1}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10}, table.getSelectionIndices());", "-\tassertSame(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0, 2, 10, 14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {4}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {4}, table.getSelectionIndices());", "-\tassertSame(new int[] {0}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {0}, table.getSelectionIndices());", "-\tassertSame(new int[] {10}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {10}, table.getSelectionIndices());", "-\tassertSame(new int[] {2}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {2}, table.getSelectionIndices());", "-\tassertSame(new int[] {14}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {14}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());", "-\tassertSame(new int[] {}, table.getSelectionIndices());", "+\tassertArrayEquals(new int[] {}, table.getSelectionIndices());"]}], "num": 35591}