{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "596705bc50e1651735d70bccf4d45d94", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bab7c70d9b823c51a1362cac07a48f7f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void createItem (TreeItem item, int index)", "signatureAfterChange": " void createItem (TreeItem item, int index)", "diff": ["-\t\tstartIndex = availableItems.length;\t\t/* last item */", "+\t\tstartIndex = availableItemsCount;\t\t/* last item */", "-\t", "-\t/* root items are always available so insert into available items collection */", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + 1];", "-\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, startIndex);", "-\tnewAvailableItems [startIndex] = item;", "-\tSystem.arraycopy (availableItems, startIndex, newAvailableItems, startIndex + 1, newAvailableItems.length - startIndex - 1);", "-\tavailableItems = newAvailableItems;", "-\t", "+", "+\tif (availableItemsCount == availableItems.length) {", "+\t\tint grow = redraw ? 4 : Math.max (4, availableItems.length * 3 / 2);", "+\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + grow];", "+\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableItems.length);", "+\t\tavailableItems = newAvailableItems;", "+\t}", "+\tif (startIndex != availableItemsCount) {", "+\t\t/* new item is not at end of list, so shift other items right to create space for it */", "+\t\tSystem.arraycopy (", "+\t\t\tavailableItems,", "+\t\t\tstartIndex,", "+\t\t\tavailableItems,", "+\t\t\tstartIndex + 1,", "+\t\t\tavailableItemsCount - startIndex);", "+\t}", "+\tavailableItems [startIndex] = item;", "+\tavailableItemsCount++;", "+", "-\tfor (int i = startIndex; i < availableItems.length; i++) {", "+\tfor (int i = startIndex; i < availableItemsCount; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a15fc8b4aac741e22d28aaf44e7f0c6f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/emulated/treetable/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "3cb6ea1399cac6199170e3be2b276a9ae2fae6a0", "commitAfterChange": "4245ebe8c8c3435f45a4a5b0014a1583f07e0494", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " void makeAvailable (TreeItem item)", "signatureAfterChange": " void makeAvailable (TreeItem item)", "diff": ["-\t", "-\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + 1];", "-\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, index);", "-\tnewAvailableItems [index] = item;", "-\tSystem.arraycopy (availableItems, index, newAvailableItems, index + 1, availableItems.length - index);", "-\tavailableItems = newAvailableItems;", "-\t", "+", "+\tif (availableItemsCount == availableItems.length) {", "+\t\tint grow = redraw ? 4 : Math.max (4, availableItems.length * 3 / 2);", "+\t\tTreeItem[] newAvailableItems = new TreeItem [availableItems.length + grow];", "+\t\tSystem.arraycopy (availableItems, 0, newAvailableItems, 0, availableItems.length);", "+\t\tavailableItems = newAvailableItems;", "+\t}", "+\tif (index != availableItemsCount) {", "+\t\t/* new item is not at end of list, so shift other items right to create space for it */", "+\t\tSystem.arraycopy (availableItems, index, availableItems, index + 1, availableItemsCount - index);", "+\t}", "+\tavailableItems [index] = item;", "+\tavailableItemsCount++;", "+", "-\tfor (int i = index; i < availableItems.length; i++) {", "+\tfor (int i = index; i < availableItemsCount; i++) {"]}], "num": 13138}