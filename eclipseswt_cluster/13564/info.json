{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8db63a3d69eedfefb49e3a362a4274ac", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca18f9108f0cdc3d0483a73dc03739c8", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "eafe7a2cc73415a0fd3851a678b6b599cb8aa11c", "commitAfterChange": "3d65a10f1ade0a8ee589db24cd4b9975c2411813", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\tdisplay.lastVirtual = display.lastNull = false;", "-", "+\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "+\t", "-\t* accented key.  On Windows 95 and NT, a call to ToAscii (), clears the", "-\t* accented state such that the next WM_CHAR loses the accent.  The fix", "-\t* is to detect the accent key stroke (called a dead key) by testing the", "-\t* high bit of the value returned by MapVirtualKey ().  A further problem", "-\t* is that the high bit on Windows NT is bit 32 while the high bit on", "-\t* Windows 95 is bit 16.  They should both be bit 32.", "+\t* accented key.  The fix is to detect the accent key stroke (called", "+\t* a dead key) by testing the high bit of the value returned by", "+\t* MapVirtualKey().  A further problem is that the high bit on", "+\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "+\t* They should both be bit 32.", "+\t*", "+\t* When the user types an accent key that does not correspond to a", "+\t* virtual key, MapVirtualKey() won't set the high bit to indicate", "+\t* a dead key.  This happens when an accent key, such as '^' is the", "+\t* result of a modifier such as Shift key and MapVirtualKey() always", "+\t* returns the unshifted key.  The fix is to peek for a WM_DEADCHAR", "+\t* and avoid issuing the event. ", "-\t* NOTE: This code is used to avoid a call to ToAscii ().", "+\t* NOTE: On Windows 95 and NT, a call to ToAscii(), clears the", "+\t* accented state such that the next WM_CHAR loses the accent.", "+\t* This makes is critical that the accent key is detected.", "-\t", "-\t/*", "-\t* Bug in Windows.  When the accent key is generated on an international", "-\t* keyboard using Ctrl+Alt or the special key, MapVirtualKey () does not", "-\t* have the high bit set indicating that this is an accent key stroke.", "-\t* The fix is to iterate through all known accent, mapping them back to", "-\t* their corresponding virtual key and key state.  If the virtual key", "-\t* and key state match the current key, then this is an accent that has", "-\t* been generated using an international keyboard and calling ToAscii ()", "-\t* will clear the accent state.", "-\t* ", "-\t* NOTE: This code is used to avoid a call to ToAscii ().", "-\t*/", "-\tif (!OS.IsWinCE) {", "-\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0 && OS.GetKeyState (OS.VK_MENU) < 0) {", "-\t\t\tfor (int i=0; i<ACCENTS.length; i++) {", "-\t\t\t\tint value = OS.VkKeyScan (ACCENTS [i]);", "-\t\t\t\tif ((value & 0xFF) == wParam && (value & 0x600) == 0x600) {", "-\t\t\t\t\tdisplay.lastVirtual = mapKey == 0;", "-\t\t\t\t\tdisplay.lastKey = display.lastVirtual ? wParam : mapKey;", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\tMSG msg = new MSG ();", "+\tif (OS.PeekMessage (msg, handle, OS.WM_DEADCHAR, OS.WM_DEADCHAR, OS.PM_NOREMOVE)) {", "+\t\tdisplay.lastDead = true;", "+\t\tdisplay.lastVirtual = mapKey == 0;", "+\t\tdisplay.lastKey = display.lastVirtual ? wParam : mapKey;", "+\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "619a748f9f61c5f69d5b51f82c6b804b", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "eafe7a2cc73415a0fd3851a678b6b599cb8aa11c", "commitAfterChange": "3d65a10f1ade0a8ee589db24cd4b9975c2411813", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYUP (int wParam, int lParam)", "diff": ["-\t\t\tdisplay.lastVirtual = display.lastNull = false;", "+\t\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t\tdisplay.lastVirtual = display.lastNull = false;", "+\t\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;", "-\t* accented key.  On Windows 95 and NT, a call to ToAscii (), clears the", "-\t* accented state such that the next WM_CHAR loses the accent.  The fix", "-\t* is to detect the accent key stroke (called a dead key) by testing the", "-\t* high bit of the value returned by MapVirtualKey ().  A further problem", "-\t* is that the high bit on Windows NT is bit 32 while the high bit on", "-\t* Windows 95 is bit 16.  They should both be bit 32.", "-\t* ", "-\t* NOTE: This code is used to avoid a call to ToAscii ().", "-\t* ", "+\t* accented key. The fix is to detect the accent key stroke (called", "+\t* a dead key) by testing the high bit of the value returned by", "+\t* MapVirtualKey ().  A further problem is that the high bit on", "+\t* Windows NT is bit 32 while the high bit on Windows 95 is bit 16.", "+\t* They should both be bit 32.", "-\t", "-\t/*", "-\t* Bug in Windows.  When the accent key is generated on an international", "-\t* keyboard using Ctrl+Alt or the special key, MapVirtualKey () does not", "-\t* have the high bit set indicating that this is an accent key stroke.", "-\t* The fix is to iterate through all known accent, mapping them back to", "-\t* their corresponding virtual key and key state.  If the virtual key", "-\t* and key state match the current key, then this is an accent that has", "-\t* been generated using an international keyboard.", "-\t* ", "-\t* NOTE: This code is used to avoid a call to ToAscii ().", "-\t*/", "-\tif (!OS.IsWinCE) {", "-\t\tif (OS.GetKeyState (OS.VK_CONTROL) < 0 && OS.GetKeyState (OS.VK_MENU) < 0) {", "-\t\t\tfor (int i=0; i<ACCENTS.length; i++) {", "-\t\t\t\tint value = OS.VkKeyScan (ACCENTS [i]);", "-\t\t\t\tif ((value & 0xFF) == wParam && (value & 0x600) == 0x600) {", "-\t\t\t\t\tdisplay.lastKey = display.lastAscii = 0;", "-\t\t\t\t\tdisplay.lastVirtual = display.lastNull = false;", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t}", "-\t", "+\tif (display.lastDead) return null;", "+", "-\t\t\tdisplay.lastNull = false;", "+\t\t\tdisplay.lastNull = display.lastDead = false;", "-\tdisplay.lastVirtual = display.lastNull = false;", "+\tdisplay.lastVirtual = display.lastNull = display.lastDead = false;"]}], "num": 13564}