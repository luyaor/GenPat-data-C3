{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b97502e8689d0443408046e25f77800c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32cbf7af2ea82bbac628bf9a04b086e4", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "59b2491032a801ab7176764808e4a778061c6b28", "commitAfterChange": "dd05f312473477c63077f519775dd1f377f4a002", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_NOTIFY (int wParam, int lParam)", "diff": ["-\treturn super.WM_NOTIFY (wParam, lParam);", "+\tLRESULT result = super.WM_NOTIFY (wParam, lParam);", "+\tif (result != null) return result;", "+\tswitch (hdr.code) {", "+\t\tcase OS.TTN_GETDISPINFOA:", "+\t\tcase OS.TTN_GETDISPINFOW: {", "+\t\t\ttipRequested = true;", "+\t\t\tint code = callWindowProc (handle, OS.WM_NOTIFY, wParam, lParam);", "+\t\t\ttipRequested = false;", "+\t\t\treturn new LRESULT (code);", "+\t\t}", "+\t}", "+\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d221da532af8dbb16b2cf304860deb3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "e8da4c0941ed12af4482c8acb5c96a9b3eb2fae2", "commitAfterChange": "e9d005b220541e31164b56d234bb100369d5ec55", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "signatureAfterChange": "  LRESULT WM_KEYDOWN (int wParam, int lParam)", "diff": ["-\t\tcase OS.VK_UP:", "-\t\tcase OS.VK_DOWN:", "+\t\t\t/*", "+\t\t\t* When there are many columns in a table, scrolling performance", "+\t\t\t* can be improved by temporarily unsubclassing the window proc", "+\t\t\t* so that internal messages are dispatched directly to the table.", "+\t\t\t* If the application expects to see a paint event, the window", "+\t\t\t* proc cannot be unsubclassed or the event will not be seen.", "+\t\t\t*/", "+\t\t\tif (!hooks (SWT.Paint) && !filters (SWT.Paint)) {", "+\t\t\t\tunsubclass ();", "+\t\t\t}", "+\t\t\tint code = callWindowProc (handle, OS.WM_KEYDOWN, wParam, lParam);", "+\t\t\tresult = code == 0 ? LRESULT.ZERO : new LRESULT (code);", "+\t\t\tsubclass ();", "+\t\t\t//FALL THROUGH", "+\t\tcase OS.VK_UP:", "+\t\tcase OS.VK_DOWN:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "382159cc44dc08ac4876acc2c636bbac", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/CoolBar.java", "commitBeforeChange": "cd0ca0631b90c962a2787b997b2aec4dcd48b7f6", "commitAfterChange": "e293cd5ca9ec202629c2ce24590166a853a347b7", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \r LRESULT WM_ERASEBKGND (int wParam, int lParam)", "signatureAfterChange": "\r \r LRESULT WM_SETREDRAW (int wParam, int lParam)", "diff": ["-LRESULT WM_ERASEBKGND (int wParam, int lParam) {\r", "-\t/*\r", "-\t* Feature in Windows.  For some reason, Windows\r", "-\t* does not fully erase the area that the cool bar\r", "-\t* occupies when the size of the cool bar grows.\r", "-\t* The fix is to erase the cool bar background.\r", "-\t*/\r", "-\tdrawBackground (wParam);\r", "-\treturn null;\r", "-}\r", "+LRESULT WM_SETREDRAW (int wParam, int lParam) {\r", "+\tLRESULT result = super.WM_SETREDRAW (wParam, lParam);\r", "+\tif (result != null) return result;\r", "+\t/*\r", "+\t* Feature in Windows.  When redraw is turned off, the rebar\r", "+\t* control does not call the default window proc.  This means\r", "+\t* that the rebar will redraw and children of the rebar will\r", "+\t* also redraw.  The fix is to call both the rebar window proc\r", "+\t* and the default window proc.\r", "+\t*/\r", "+\tint code = callWindowProc (OS.WM_SETREDRAW, wParam, lParam);\r", "+\tOS.DefWindowProc (handle, OS.WM_SETREDRAW, wParam, lParam);\r", "+\treturn new LRESULT (code);\r", "+}\r"]}], "num": 32898}