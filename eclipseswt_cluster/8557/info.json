{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa8f1f40c5aba1740a46ab98c9de77d2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40d3b66f876c1caa22beb64d46752da2", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "a5c20d80e0285a26a2e9e8c9976c541b30282fab", "commitAfterChange": "b76d431a779fdd2091d3d4adbf75cfc8e9615d94", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPOSTPAINT (NMTVCUSTOMDRAW nmcd, int wParam, int lParam)", "diff": ["-\t\t\t\t\t\t\titemRect.right += EXPLORER_EXTRA;", "+\t\t\t\t\t\t\titemRect.right += EXPLORER_EXTRA + 1;", "-\t\t\t\t\t\t\tpClipRect.right = itemRect.right + 1;", "+\t\t\t\t\t\t\tpClipRect.right = itemRect.right;", "+\t\t\t\t\t\t\tif (count > 0 && hwndHeader != 0) {", "+\t\t\t\t\t\t\t\tHDITEM hdItem = new HDITEM ();", "+\t\t\t\t\t\t\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\t\t\t\t\t\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "+\t\t\t\t\t\t\t\tpClipRect.right = Math.min (pClipRect.right, nmcd.left + hdItem.cxy);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cfd102a0850f617d4eaf0fe06cce75e", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/cocoa/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "b4a2320440164ae72ce51dd2342d464a54f498b9", "commitAfterChange": "84656a6e6ceb9594f856cbee82c381105c177330", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 86, "signatureBeforeChange": "  int tableViewobjectValueForTableColumnrow(int aTableView, int aTableColumn, int rowIndex)", "signatureAfterChange": "  int tableView_objectValueForTableColumn_row(int aTableView, int aTableColumn, int rowIndex)", "diff": ["+int tableView_objectValueForTableColumn_row(int aTableView, int aTableColumn, int rowIndex) {", "+\tTableItem item = items [rowIndex];", "+\tif (checkColumn != null && aTableColumn == checkColumn.id) {", "+\t\tNSNumber value;", "+\t\tif (item.checked && item.grayed) {", "+\t\t\tvalue = NSNumber.numberWithInt(OS.NSMixedState);", "+\t\t} else {", "+\t\t\tvalue = NSNumber.numberWithInt(item.checked ? OS.NSOnState : OS.NSOffState);", "+\t\t}", "+\t\treturn value.id;", "+\t}", "+\tfor (int i=0; i<columnCount; i++) {", "+\t\tif (columns [i].nsColumn.id == aTableColumn) {", "+\t\t\treturn NSString.stringWith(item.getText(i)).id;", "+\t\t}", "+\t}", "+\treturn NSString.stringWith(item.text).id;", "+}", "-", "-int tableViewobjectValueForTableColumnrow(int aTableView, int aTableColumn, int rowIndex) {", "-\tTableItem item = items [rowIndex];", "-\tfor (int i=0; i<columnCount; i++) {", "-\t\tif (columns [i].nsColumn.id == aTableColumn) {", "-\t\t\treturn NSString.stringWith(item.getText(i)).id;", "-\t\t}", "-\t}", "-\treturn NSString.stringWith(item.text).id;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9161f9275b5b1414eb7e45f46ff56091", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/win32/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "14bb166a3d9b9c0f4b3cc0f7c70730e09595d89a", "commitAfterChange": "65934e9078512ef399dc1e432592b04f62521287", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "signatureAfterChange": "  LRESULT CDDS_ITEMPREPAINT (int wParam, int lParam)", "diff": ["+\t}", "+\t/*", "+\t* Feature in Windows.  When the tree is disabled, it draws", "+\t* with a gray background over the sort column.  The fix is", "+\t* to fill the background with the sort column color.", "+\t*/", "+\tif (!OS.IsWindowEnabled (handle) && clrSortBk != -1) {", "+\t\tRECT rect = new RECT ();", "+\t\tHDITEM hdItem = new HDITEM ();", "+\t\thdItem.mask = OS.HDI_WIDTH;", "+\t\tOS.SendMessage (hwndHeader, OS.HDM_GETITEM, index, hdItem);", "+\t\tOS.SetRect (rect, nmcd.left, nmcd.top, nmcd.left + hdItem.cxy, nmcd.bottom);", "+\t\tfillBackground (hDC, clrSortBk, rect);"]}], "num": 8557}