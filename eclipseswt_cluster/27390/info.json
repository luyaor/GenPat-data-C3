{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0e69b2e95fa011539af9ec725ed15a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "712eb4697b58544c2c54d51734e8a7fe", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "527998c9e4be5c58a908b0f0d6081466df8efc7f", "commitAfterChange": "642c99978dc17bd02e442edba68d88ae6a941ded", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": "  int rendererRenderProc (int cell, int window, int widget, int background_area, int cell_area, int expose_area, int flags)", "signatureAfterChange": "  int rendererRenderProc (int cell, int window, int widget, int background_area, int cell_area, int expose_area, int flags)", "diff": ["-\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "-//\tif (checkRenderer != 0) {", "-//\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) {", "-//\t\t\tOS.gtk_tree_view_column_focus_cell (columnHandle, checkRenderer);", "-//\t\t}", "-//\t}", "+\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "-\tboolean draw = !ignoreDraw;", "-\tif (item != null) {", "-\t\tif (columnCount > 0) {", "-\t\t\tfor (int i = 0; i < columnCount; i++) {", "-\t\t\t\tif (columns [i].handle == columnHandle) {", "-\t\t\t\t\tcolumnIndex = i;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}\t\t\t\t", "-\t\t\t}", "+\tif (columnCount > 0) {", "+\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\tif (columns [i].handle == columnHandle) {", "+\t\t\t\tcolumnIndex = i;", "+\t\t\t\tbreak;", "+\t\t\t}\t\t\t\t", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "-\t\tOS.gtk_tree_view_get_background_area (handle, path, columnHandle, rect);", "-\t\tOS.gtk_tree_path_free (path);", "+\t}", "+\tif (item != null) {", "-\t\t\tdraw = true;", "-\t\t\tignoreDraw = !draw;", "-\t\t\tdrawFlags = flags;", "+\t\t\tdrawFlags = (int)/*64*/flags;", "+\t\t\tdrawState = SWT.FOREGROUND;", "+\t\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\t\tOS.gtk_tree_model_get (modelHandle, item.handle, Tree.BACKGROUND_COLUMN, ptr, -1);", "+\t\t\tif (ptr [0] == 0) {", "+\t\t\t\tint modelIndex = columnCount == 0 ? Tree.FIRST_COLUMN : columns [columnIndex].modelIndex;", "+\t\t\t\tOS.gtk_tree_model_get (modelHandle, item.handle, modelIndex + Tree.CELL_BACKGROUND, ptr, -1);", "+\t\t\t}", "+\t\t\tif (ptr [0] != 0) drawState |= SWT.BACKGROUND;", "+\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) drawState |= SWT.SELECTED;", "+\t\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) drawState |= SWT.FOCUSED;\t\t\t", "-\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) == 0) {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "+\t\t\tOS.gtk_tree_view_get_background_area (handle, path, columnHandle, rect);", "+\t\t\tOS.gtk_tree_path_free (path);", "+\t\t\t", "+\t\t\tif ((drawState & SWT.SELECTED) == 0) {", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\t}\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "+\t\t\t\t\tgc.setBackground (display.getSystemColor (SWT.COLOR_LIST_SELECTION));", "+\t\t\t\t\tgc.setForeground (display.getSystemColor (SWT.COLOR_LIST_SELECTION_TEXT));", "+\t\t\t\t} else {", "+\t\t\t\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\t\t\t\tgc.setForeground (item.getForeground (columnIndex));", "+\t\t\t\t}", "+\t\t\t\tgc.setFont (item.getFont (columnIndex));", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) event.detail |= SWT.SELECTED;", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) event.detail |= SWT.FOCUSED;", "+\t\t\t\tevent.detail = drawState;", "-\t\t\t\tflags &= ~(OS.GTK_CELL_RENDERER_SELECTED | OS.GTK_CELL_RENDERER_FOCUSED);", "-\t\t\t\tif ((event.detail & SWT.SELECTED) != 0) flags |= OS.GTK_CELL_RENDERER_SELECTED;", "-\t\t\t\tif ((event.detail & SWT.FOCUSED) != 0) flags |= OS.GTK_CELL_RENDERER_FOCUSED;", "-\t\t\t\tdrawFlags = flags;", "-\t\t\t\tdraw = event.doit;", "-\t\t\t\tignoreDraw = !draw;\t", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tdrawState = event.detail;", "+\t\t\t\tdrawFlags &= ~(OS.GTK_CELL_RENDERER_FOCUSED | OS.GTK_CELL_RENDERER_SELECTED);", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) drawFlags |= OS.GTK_CELL_RENDERER_SELECTED;", "+\t\t\t\tif ((drawState & SWT.FOCUSED) != 0) drawFlags |= OS.GTK_CELL_RENDERER_FOCUSED;", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\t\tOS.gtk_paint_flat_box (style, window, OS.GTK_STATE_SELECTED, OS.GTK_SHADOW_NONE, rect, widget, null, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t//TODO - parity and sorted", "+\t\t\t\t\tbyte[] detail = Converter.wcsToMbcs (null, \"cell_odd\", true);", "+\t\t\t\t\tOS.gtk_paint_flat_box (style, window, OS.GTK_STATE_SELECTED, OS.GTK_SHADOW_NONE, rect, widget, detail, rect.x, rect.y, rect.width, rect.height);", "-\tif (draw || OS.GTK_IS_CELL_RENDERER_TOGGLE (cell)) {", "+\tif ((drawState & SWT.BACKGROUND) != 0 && (drawState & SWT.SELECTED) == 0) {", "+\t\tGC gc = new GC (this);", "+\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tOS.memmove (rect, background_area, GdkRectangle.sizeof);", "+\t\tgc.fillRectangle (rect.x, rect.y, rect.width, rect.height);", "+\t\tgc.dispose ();", "+\t}", "+\tif ((drawState & SWT.FOREGROUND) != 0 || OS.GTK_IS_CELL_RENDERER_TOGGLE (cell)) {", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_SELECTED) != 0) event.detail |= SWT.SELECTED;", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) event.detail |= SWT.FOCUSED;", "+\t\t\t\tevent.detail = drawState;", "-\t\t\tdraw = true;", "-\t\t\tignoreDraw = !draw;", "-\t\t\tdrawFlags = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c06fdfa583fd88b3b4b34ae2d4010652", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Table.java", "commitBeforeChange": "527998c9e4be5c58a908b0f0d6081466df8efc7f", "commitAfterChange": "642c99978dc17bd02e442edba68d88ae6a941ded", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "  int rendererRenderProc (int cell, int window, int widget, int background_area, int cell_area, int expose_area, int flags)", "signatureAfterChange": "  int rendererRenderProc (int cell, int window, int widget, int background_area, int cell_area, int expose_area, int flags)", "diff": ["-\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "-//\tif (checkRenderer != 0) {", "-//\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) {", "-//\t\t\tOS.gtk_tree_view_column_focus_cell (columnHandle, checkRenderer);", "-//\t\t}", "-//\t}", "+\tint /*long*/ columnHandle = OS.g_object_get_qdata (cell, Display.SWT_OBJECT_INDEX1);", "-\tboolean draw = !ignoreDraw;", "-\tif (item != null) {", "-\t\tif (columnCount > 0) {", "-\t\t\tfor (int i = 0; i < columnCount; i++) {", "-\t\t\t\tif (columns [i].handle == columnHandle) {", "-\t\t\t\t\tcolumnIndex = i;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}\t\t\t\t", "-\t\t\t}", "+\tif (columnCount > 0) {", "+\t\tfor (int i = 0; i < columnCount; i++) {", "+\t\t\tif (columns [i].handle == columnHandle) {", "+\t\t\t\tcolumnIndex = i;", "+\t\t\t\tbreak;", "+\t\t\t}\t\t\t\t", "-\t\tGdkRectangle rect = new GdkRectangle ();", "-\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "-\t\tOS.gtk_tree_view_get_background_area (handle, path, columnHandle, rect);", "-\t\tOS.gtk_tree_path_free (path);", "+\t}", "+\tif (item != null) {", "-\t\t\tdraw = true;", "-\t\t\tignoreDraw = !draw;", "-\t\t\tdrawFlags = flags;", "+\t\t\tdrawFlags = (int)/*64*/flags;", "+\t\t\tdrawState = SWT.FOREGROUND;", "+\t\t\tint /*long*/ [] ptr = new int /*long*/ [1];", "+\t\t\tOS.gtk_tree_model_get (modelHandle, item.handle, Table.BACKGROUND_COLUMN, ptr, -1);", "+\t\t\tif (ptr [0] == 0) {", "+\t\t\t\tint modelIndex = columnCount == 0 ? Table.FIRST_COLUMN : columns [columnIndex].modelIndex;", "+\t\t\t\tOS.gtk_tree_model_get (modelHandle, item.handle, modelIndex + Table.CELL_BACKGROUND, ptr, -1);", "+\t\t\t}", "+\t\t\tif (ptr [0] != 0) drawState |= SWT.BACKGROUND;", "+\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) drawState |= SWT.SELECTED;", "+\t\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) drawState |= SWT.FOCUSED;\t\t\t", "-\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) == 0) {", "+\t\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\t\tint /*long*/ path = OS.gtk_tree_model_get_path (modelHandle, iter);", "+\t\t\tOS.gtk_tree_view_get_background_area (handle, path, columnHandle, rect);", "+\t\t\tOS.gtk_tree_path_free (path);", "+\t\t\t", "+\t\t\tif ((drawState & SWT.SELECTED) == 0) {", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\t}\t\t\t\t", "+\t\t\t\t}", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "+\t\t\t\t\tgc.setBackground (display.getSystemColor (SWT.COLOR_LIST_SELECTION));", "+\t\t\t\t\tgc.setForeground (display.getSystemColor (SWT.COLOR_LIST_SELECTION_TEXT));", "+\t\t\t\t} else {", "+\t\t\t\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\t\t\t\tgc.setForeground (item.getForeground (columnIndex));", "+\t\t\t\t}", "+\t\t\t\tgc.setFont (item.getFont (columnIndex));", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) event.detail |= SWT.SELECTED;", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) event.detail |= SWT.FOCUSED;", "+\t\t\t\tevent.detail = drawState;", "-\t\t\t\tflags &= ~(OS.GTK_CELL_RENDERER_SELECTED | OS.GTK_CELL_RENDERER_FOCUSED);", "-\t\t\t\tif ((event.detail & SWT.SELECTED) != 0) flags |= OS.GTK_CELL_RENDERER_SELECTED;", "-\t\t\t\tif ((event.detail & SWT.FOCUSED) != 0) flags |= OS.GTK_CELL_RENDERER_FOCUSED;", "-\t\t\t\tdrawFlags = flags;", "-\t\t\t\tdraw = event.doit;", "-\t\t\t\tignoreDraw = !draw;\t", "-\t\t\t\tif ((flags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tdrawState = event.detail;", "+\t\t\t\tdrawFlags &= ~(OS.GTK_CELL_RENDERER_FOCUSED | OS.GTK_CELL_RENDERER_SELECTED);", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) drawFlags |= OS.GTK_CELL_RENDERER_SELECTED;", "+\t\t\t\tif ((drawState & SWT.FOCUSED) != 0) drawFlags |= OS.GTK_CELL_RENDERER_FOCUSED;", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\t\tOS.gtk_paint_flat_box (style, window, OS.GTK_STATE_SELECTED, OS.GTK_SHADOW_NONE, rect, widget, null, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t//TODO - parity and sorted", "+\t\t\t\t\tbyte[] detail = Converter.wcsToMbcs (null, \"cell_odd\", true);", "+\t\t\t\t\tOS.gtk_paint_flat_box (style, window, OS.GTK_STATE_SELECTED, OS.GTK_SHADOW_NONE, rect, widget, detail, rect.x, rect.y, rect.width, rect.height);", "-\tif (draw || OS.GTK_IS_CELL_RENDERER_TOGGLE (cell)) {", "+\tif ((drawState & SWT.BACKGROUND) != 0 && (drawState & SWT.SELECTED) == 0) {", "+\t\tGC gc = new GC (this);", "+\t\tgc.setBackground (item.getBackground (columnIndex));", "+\t\tGdkRectangle rect = new GdkRectangle ();", "+\t\tOS.memmove (rect, background_area, GdkRectangle.sizeof);", "+\t\tgc.fillRectangle (rect.x, rect.y, rect.width, rect.height);", "+\t\tgc.dispose ();", "+\t}", "+\tif ((drawState & SWT.FOREGROUND) != 0 || OS.GTK_IS_CELL_RENDERER_TOGGLE (cell)) {", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_SELECTED) != 0) {", "+\t\t\t\tif ((drawState & SWT.SELECTED) != 0) {", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_SELECTED) != 0) event.detail |= SWT.SELECTED;", "-\t\t\t\tif ((drawFlags & OS.GTK_CELL_RENDERER_FOCUSED) != 0) event.detail |= SWT.FOCUSED;", "+\t\t\t\tevent.detail = drawState;", "-\t\t\tdraw = true;", "-\t\t\tignoreDraw = !draw;", "-\t\t\tdrawFlags = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c24b093d5f231d1559dabdd930cfd8fc", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Custom Widgets/common/org/eclipse/swt/custom/CTabItem2.java", "commitBeforeChange": "03f23aa773469b8a3f3e0a770076508526525b40", "commitAfterChange": "1051f4ce684a4239d50c42e8ac0e4ce13591cb56", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void drawSelected(GC gc )", "signatureAfterChange": "  void drawSelected(GC gc )", "diff": ["-\tDisplay display = getDisplay();", "-\tint[] shape = null;", "+\tint rightTabEdge = parent.getSize().x - parent.borderRight - parent.chevronRect.width - parent.expandRect.width - parent.closeRect.width - 1;", "+\tif (rightTabEdge <= x) return;", "+\t// draw background", "+\tint[] shape = null;", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length+right.length+6];", "-\t\tshape[index++] = y + CTabFolder2.SELECTION_BORDER - 1;", "+\t\tshape[index++] = y - 1;", "-\t\t\tshape[index++]=x+left[2*i];", "-\t\t\tshape[index++]=y+height+left[2*i+1]-1;", "+\t\t\tshape[index++] = x + left[2*i];", "+\t\t\tshape[index++] = y + height + left[2*i+1] - 1;", "-\t\t\tshape[index++]=x+width-extra+right[2*i];", "-\t\t\tshape[index++]=y+right[2*i+1]-2;", "+\t\t\tshape[index++] = x + width - extra + right[2*i];", "+\t\t\tshape[index++] = y + right[2*i+1] - 1;", "+\t\tint temp = 0;", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t} else {", "+\t\t\t\t\ttemp = y - 1;", "+\t\t\t\t}", "+\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t}", "+\t\t}", "+\t\tshape[index++] = rightTabEdge;", "+\t\tshape[index++] = y - 1;", "-\t\tshape[index++] = y + CTabFolder2.SELECTION_BORDER - 1;", "+\t\tshape[index++] = y - 1;", "-\t\tshape = new int[left.length+right.length+4];", "+\t\tshape = new int[left.length+right.length+6];", "-\t\tshape[index++] = y + height - CTabFolder2.SELECTION_BORDER;", "+\t\tshape[index++] = y + height;", "-\t\t\tshape[index++]=x+left[2*i];", "-\t\t\tshape[index++]=y+left[2*i+1];", "+\t\t\tshape[index++] = x + left[2*i];", "+\t\t\tshape[index++] = y + left[2*i+1];", "-\t\t\tshape[index++]=x+width-extra+right[2*i];", "-\t\t\tshape[index++]=y+right[2*i+1];", "+\t\t\tshape[index++] = x + width - extra + right[2*i];", "+\t\t\tshape[index++] = y + right[2*i+1];", "+\t\tint temp = 0;", "+\t\tfor (int i = 0; i < shape.length/2; i++) {", "+\t\t\tif (shape[2*i] > rightTabEdge) {", "+\t\t\t\tif (temp == 0 && i > 0) {", "+\t\t\t\t\ttemp = shape[2*i-1];", "+\t\t\t\t} else {", "+\t\t\t\t\ttemp = y + height + 1;", "+\t\t\t\t}", "+\t\t\t\tshape[2*i] = rightTabEdge;", "+\t\t\t\tshape[2*i+1] = temp;", "+\t\t\t}", "+\t\t}", "+\t\tshape[index++] = rightTabEdge;", "+\t\tshape[index++] = y + height + 1;", "-\t\tshape[index++] = y + height - CTabFolder2.SELECTION_BORDER+1;", "+\t\tshape[index++] = y + height + 1;", "-\tparent.drawSelectionBackground(gc, y, shape);", "+\tparent.drawSelectionBackground(gc, shape);", "-\tif (parent.onBottom) {", "-\t\tr.add(new Rectangle(x, y + CTabFolder2.SELECTION_BORDER, width, height - CTabFolder2.SELECTION_BORDER));", "-\t} else {", "-\t\tr.add(new Rectangle(x, y, width, height - CTabFolder2.SELECTION_BORDER));", "-\t}", "+\tr.add(new Rectangle(x, y, width, height));", "-\tr.dispose();", "-\t", "+", "+\t// Limit drawing area of tab\t", "+\tRegion clipping = new Region();", "+\tgc.getClipping(clipping);", "+\tr.subtract(r); //clear", "+\tr.add(clipping);", "+\tr.intersect(new Rectangle(x, y, Math.min(width, rightTabEdge-x), height));", "+\tgc.setClipping(r);", "+", "-\t\tint imageY = y;", "-\t\tif (parent.onBottom) {", "-\t\t\timageY+= BOTTOM_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - imageHeight) / 2;", "-\t\t} else {", "-\t\t\timageY+= TOP_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - imageHeight) / 2;", "-\t\t}", "+\t\tint imageY = y + (height - imageHeight) / 2;", "+\t\timageY += parent.onBottom ? -1 : 1;", "-\tint textY = y;", "-\tif (parent.onBottom) {", "-\t\ttextY+= BOTTOM_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "-\t} else {", "-\t\ttextY+= TOP_MARGIN + (height - TOP_MARGIN - BOTTOM_MARGIN - extent.y) / 2;", "-\t}", "+\tint textY = y + (height - extent.y) / 2;", "+\ttextY += parent.onBottom ? -1 : 1;", "+\t\tDisplay display = getDisplay();", "+\t", "+\tgc.setClipping(clipping);", "+\tr.dispose();", "+\tclipping.dispose();"]}], "num": 27390}