{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7fa9498ca2b2a4369f25511a12c24956", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6af8d72b57888fefdf173d76fe1d1b6", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Accessibility/gtk/org/eclipse/swt/accessibility/AccessibleObject.java", "commitBeforeChange": "ec0fd72dfafa3580c8b3685a082cc525b5e48635", "commitAfterChange": "800f37e4ba6af1142a8f20dd9d1fe1dd5f3a77b9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tint atkText_get_text_before_offset (int offset, int boundary_type, int start_offset, int end_offset)", "signatureAfterChange": "  \tint atkText_get_text_before_offset (int offset, int boundary_type, int start_offset, int end_offset)", "diff": ["-\t\t//\tTODO according to new gnome doc this determined text wrong", "-\t\tString text = getText ();", "-\t\tif (text != null) {", "-\t\t\tint startBounds = offset;", "-\t\t\tString beforeText = text.substring (0, offset);", "-\t\t\tswitch (boundary_type) {", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_CHAR: {", "-\t\t\t\t\tif (beforeText.length () > 0) startBounds--;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_START:", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_LINE_END: {", "-\t\t\t\t\tstartBounds = beforeText.lastIndexOf ('\\n') + 1; // TODO use platform line delimiter?", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_START:", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_SENTENCE_END: {", "-\t\t\t\t\t// TODO ask the client for eligible separators?", "-\t\t\t\t\tint separatorIndex = 0;", "-\t\t\t\t\tseparatorIndex = Math.max (separatorIndex, beforeText.lastIndexOf ('.') + 1);", "-\t\t\t\t\tseparatorIndex = Math.max (separatorIndex, beforeText.lastIndexOf ('?') + 1);", "-\t\t\t\t\tseparatorIndex = Math.max (separatorIndex, beforeText.lastIndexOf ('!') + 1);", "-\t\t\t\t\tstartBounds = separatorIndex;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_START:", "-\t\t\t\tcase ATK.ATK_TEXT_BOUNDARY_WORD_END: {", "-\t\t\t\t\t// TODO ask the client for eligible separators?", "-\t\t\t\t\tint separatorIndex = 0;", "-\t\t\t\t\tseparatorIndex = Math.max (separatorIndex, beforeText.lastIndexOf (' ') + 1);", "-\t\t\t\t\tseparatorIndex = Math.max (separatorIndex, beforeText.lastIndexOf ('\\n') + 1);", "-\t\t\t\t\tstartBounds = separatorIndex;", "-\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tOS.memmove (start_offset, new int[] {startBounds}, 4);", "-\t\t\tOS.memmove (end_offset, new int[] {offset}, 4);", "-//\t\t\ttext = text.substring (start_offset, end_offset);", "-\t\t\tbyte[] bytes = Converter.wcsToMbcs (null, text, true);", "-//\t\t\tTODO gnopernicus bug? freeing previous string can cause gp", "-//\t\t\tif (textPtr != -1) OS.g_free (textPtr);", "-\t\t\ttextPtr = OS.g_malloc (bytes.length);", "-\t\t\tOS.memmove (textPtr, bytes, bytes.length);", "-\t\t\treturn textPtr;", "-\t\t} ", "+\t\t// TODO"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5647fb5f2009eecb837a902c827e9d", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT Drag and Drop/cocoa/org/eclipse/swt/dnd/TableDropTargetEffect.java", "commitBeforeChange": "8200799fd4fc9f26a937f37e60a9ef54396d4890", "commitAfterChange": "ce281cb196b10adcbca7d0a8e66ab94ce171eb76", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void dragOver(DropTargetEvent event)", "signatureAfterChange": " \tpublic void dragOver(DropTargetEvent event)", "diff": ["-\t\tTable table = (Table) control;", "-", "-\t\tTableItem item = (TableItem)getItem(table, event.x, event.y);", "-", "-\t\tif ((effect & DND.FEEDBACK_SCROLL) == 0) {", "-\t\t\tscrollBeginTime = 0;", "-\t\t\tscrollItem = null;", "-\t\t} else {", "-\t\t\tif (item != null && item.equals(scrollItem)  && scrollBeginTime != 0) {", "-\t\t\t\tif (System.currentTimeMillis() >= scrollBeginTime) {", "-\t\t\t\t\tRectangle area = table.getClientArea();", "-\t\t\t\t\tint headerHeight = table.getHeaderHeight();", "-\t\t\t\t\tint itemHeight= table.getItemHeight();", "-\t\t\t\t\tPoint pt = new Point(event.x, event.y);", "-\t\t\t\t\tpt = table.getDisplay().map(null, table, pt);", "-\t\t\t\t\tTableItem nextItem = null;", "-\t\t\t\t\tif (pt.y < area.y + headerHeight + 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.max(0, table.indexOf(item)-1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (pt.y > area.y + area.height - 2 * itemHeight) {", "-\t\t\t\t\t\tint index = Math.min(table.getItemCount()-1, table.indexOf(item)+1);", "-\t\t\t\t\t\tnextItem = table.getItem(index);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (nextItem != null) table.showItem(nextItem);", "-\t\t\t\t\tscrollBeginTime = 0;", "-\t\t\t\t\tscrollItem = null;", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tscrollBeginTime = System.currentTimeMillis() + SCROLL_HYSTERESIS;", "-\t\t\t\tscrollItem = item;", "-\t\t\t}", "-\t\t}", "-\t\t", "-\t\t// store current effect for selection feedback"]}], "num": 3440}