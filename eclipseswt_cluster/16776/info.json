{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7447d851f165c00e66f6ed76c372a1ef", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad085264dd07d1d4c3a186259c3a82ce", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_Region.java", "commitBeforeChange": "f96a08824309f410a2ad72d1c8d4c3602e7d7b80", "commitAfterChange": "a0435f6f76ed9cee36c44c9344ae544a477c7cda", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_Device()", "signatureAfterChange": "  public void test_ConstructorLorg_eclipse_swt_graphics_Device()", "diff": ["-\tRegion[] regions = new Region [COUNT];", "-\t", "-\t\tregions[i] = new Region (display);", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Regions.  This is necessary because attempting to defer", "+\t\t* the region disposal until the timer has been stopped causes a No More", "+\t\t* Handles error.", "+\t\t*/", "+\t\tnew Region(display).dispose();", "-\t", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tregions[i].dispose();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16220fad338e1490901a325b646f32f9", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "tests/org.eclipse.swt.tests/JUnit Tests/org/eclipse/swt/tests/junit/performance/Test_org_eclipse_swt_graphics_Region.java", "commitBeforeChange": "f96a08824309f410a2ad72d1c8d4c3602e7d7b80", "commitAfterChange": "a0435f6f76ed9cee36c44c9344ae544a477c7cda", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void test_Constructor()", "signatureAfterChange": "  public void test_Constructor()", "diff": ["-\tRegion[] regions = new Region [COUNT];", "-\t\tregions[i] = new Region ();", "+\t\t/*", "+\t\t* This test is not really valid since it's measuring both creation and", "+\t\t* disposal of the Regions.  This is necessary because attempting to defer", "+\t\t* the region disposal until the timer has been stopped causes a No More", "+\t\t* Handles error.", "+\t\t*/", "+\t\tnew Region().dispose();", "-", "-\tfor (int i = 0; i < COUNT; i++) {", "-\t\tregions[i].dispose();", "-\t}"]}], "num": 16776}