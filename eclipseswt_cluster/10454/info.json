{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8244a38ea86102998e69f7401b3477c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "333dff05d42f2175b76c7e1e530549a3", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "25e0b9cefcf6aad913e775e22fb19b1e3de2a216", "commitAfterChange": "abdb7df6c5ef7f31dd770f626e22ad0d039e1629", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " public FontData open ()", "diff": ["-\tFontSelectionQDStyle qdStyle = new FontSelectionQDStyle();", "-\tqdStyle.version = OS.kFontSelectionQDStyleVersionZero;", "-\t// NEEDS WORK - color not supported in native dialog for Carbon", "-\tif (rgb != null) {", "-\t\tqdStyle.hasColor = true;", "-\t\tqdStyle.color_red = (short)(rgb.red * 257);", "-\t\tqdStyle.color_green = (short)(rgb.green * 257);", "-\t\tqdStyle.color_blue = (short)(rgb.blue * 257);", "-\t}", "+\tDisplay display = parent != null ? parent.display : Display.getCurrent ();", "-\t\tString familyName = fontData.name;", "-\t\tint[] font = new int[1];", "-\t\tbyte[] buffer = familyName.getBytes();", "-\t\tif (OS.ATSUFindFontFromName(buffer, buffer.length, OS.kFontFamilyName, OS.kFontNoPlatformCode, OS.kFontNoScriptCode, OS.kFontNoLanguageCode, font) == OS.noErr) {", "-\t\t\tshort[] family = new short[1];", "-\t\t\tOS.FMGetFontFamilyInstanceFromFont(font[0], family, new short[1]);\t\t", "-\t\t\tqdStyle.instance_fontFamily = family[0];", "-\t\t}", "-\t\tint style = fontData.style;", "-\t\tint fontStyle = OS.normal;", "-\t\tif ((style & SWT.BOLD) != 0) fontStyle |= OS.bold;", "-\t\tif ((style & SWT.ITALIC) != 0) fontStyle |= OS.italic;", "-\t\tqdStyle.instance_fontStyle = (short)fontStyle;", "-\t\tqdStyle.size = (short)fontData.height;", "+\t\tFont font = new Font (display, fontData);", "+\t\tint ptr = OS.NewPtr (4);", "+\t\tOS.memcpy (ptr, new int []{font.atsuiStyle}, 4);", "+\t\t//TODO - not sure how to set initial color in font panel", "+//\t\tif (rgb != null) {", "+//\t\t\tRGBColor color = new RGBColor ();", "+//\t\t\trgb.red = (short) (rgb.red * 0xffff);", "+//\t\t\trgb.green = (short) (rgb.green * 0xffff);", "+//\t\t\trgb.blue = (short) (rgb.blue * 0xffff);", "+//\t\t\tint ptr1 = OS.NewPtr (RGBColor.sizeof);", "+//\t\t\tOS.memcpy(ptr, color, RGBColor.sizeof); ", "+//\t\t\tint [] tags = new int []{OS.kATSUColorTag};", "+//\t\t\tint [] sizes = new int []{RGBColor.sizeof};", "+//\t\t\tint [] values = new int []{ptr1};", "+//\t\t\tOS.ATSUSetAttributes (font.atsuiStyle, tags.length, tags, sizes, values);", "+//\t\t\tOS.DisposePtr(ptr1);", "+//\t\t}\t\t", "+\t\tOS.SetFontInfoForSelection (OS.kFontSelectionATSUIType, 1, ptr, 0);", "+\t\tOS.DisposePtr (ptr);", "+\t\tfont.dispose ();", "-\tint ptr = OS.NewPtr(FontSelectionQDStyle.sizeof);", "-\tOS.memcpy (ptr, qdStyle, FontSelectionQDStyle.sizeof);", "-\tOS.SetFontInfoForSelection(OS.kFontSelectionQDType, 1, ptr, 0);", "-\tOS.DisposePtr (ptr);", "+\tfontSize = fontID = 0;", "-\tDisplay display = parent.display;", "+\tif (fontID != 0 && fontSize != 0) {", "+\t\tint atsFont = OS.FMGetATSFontRefFromFont (fontID);", "+\t\tFont font = Font.carbon_new (display, atsFont, (short) 0, (float) OS.Fix2X (fontSize));", "+\t\tfontData = font.getFontData ()[0];", "+\t\tfont.dispose();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2773a45d25ea70641c82cbc709971964", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/carbon/org/eclipse/swt/widgets/FontDialog.java", "commitBeforeChange": "d063aea08192e0213a4b6532b27dc31f9dce6e1b", "commitAfterChange": "48ef0056097e65cbe2f990bf125c93e76b95da33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 5, "signatureBeforeChange": " public FontData open ()", "signatureAfterChange": " \t public FontData open ()", "diff": ["- */", "-\tshell = new Shell (getParent (), getStyle () | SWT.TITLE | SWT.BORDER | SWT.APPLICATION_MODAL);", "-\tcreateChildren ();", "-\tinstallListeners ();\t", "-\t", "-\tinitializeWidgets ();", "-\tsetFontData (null);", "-\topenDialog ();", "-\tDisplay display = shell.getDisplay ();", "-\twhile (!shell.isDisposed ()) {", "+\tFontSelectionQDStyle qdStyle = new FontSelectionQDStyle();", "+\tqdStyle.version = OS.kFontSelectionQDStyleVersionZero;", "+\t// NEEDS WORK - color not supported in native dialog for Carbon", "+\tif (rgb != null) {", "+\t\tqdStyle.hasColor = true;", "+\t\tqdStyle.color_red = (short)(rgb.red * 257);", "+\t\tqdStyle.color_green = (short)(rgb.green * 257);", "+\t\tqdStyle.color_blue = (short)(rgb.blue * 257);", "+\t}", "+\tif (fontData != null) {", "+\t\tString familyName = fontData.name;", "+\t\tbyte [] buffer = new byte [256];", "+\t\tint length = familyName.length();", "+\t\tif (length > 255) length = 255;", "+\t\tbuffer [0] = (byte)length;", "+\t\tfor (int i=0; i<length; i++) {", "+\t\t\tbuffer [i+1] = (byte) familyName.charAt(i);", "+\t\t}", "+\t\tint id = OS.FMGetFontFamilyFromName (buffer);", "+\t\tif (id == OS.kInvalidFontFamily) id = OS.GetAppFont();", "+\t\tqdStyle.instance_fontFamily = (short)id;", "+\t\tint style = fontData.style;", "+\t\tint fontStyle = OS.normal;", "+\t\tif ((style & SWT.BOLD) != 0) fontStyle |= OS.bold;", "+\t\tif ((style & SWT.ITALIC) != 0) fontStyle |= OS.italic;", "+\t\tqdStyle.instance_fontStyle = (short)fontStyle;", "+\t\tqdStyle.size = (short)fontData.height;", "+\t}", "+\tint ptr = OS.NewPtr(FontSelectionQDStyle.sizeof);", "+\tOS.memcpy (ptr, qdStyle, FontSelectionQDStyle.sizeof);", "+\tOS.SetFontInfoForSelection(OS.kFontSelectionQDType, 1, ptr, 0);", "+\tOS.DisposePtr (ptr);", "+\tint[] mask = new int[] {", "+\t\tOS.kEventClassFont, OS.kEventFontSelection,", "+\t\tOS.kEventClassFont, OS.kEventFontPanelClosed,", "+\t};", "+\tCallback fontPanelCallback = new Callback (this, \"fontProc\", 3);", "+\tint appTarget = OS.GetApplicationEventTarget ();", "+\tint [] outRef = new int [1];", "+\tOS.InstallEventHandler (appTarget, fontPanelCallback.getAddress(), mask.length / 2, mask, 0, outRef);", "+\tfontData = null;", "+\trgb = null;", "+\topen = true;", "+\tOS.FPShowHideFontPanel ();\t", "+\tDisplay display = parent.getDisplay ();", "+\twhile (!parent.isDisposed() && open) {", "-\t}", "-\t", "-\tFontData result = null;", "-\tif (okSelected) result = getFontData ();", "-\tif (sampleFont != null) sampleFont.dispose ();", "-\treturn result;", "+\t};", "+\tOS.RemoveEventHandler (outRef [0]);", "+\tfontPanelCallback.dispose ();", "+\treturn fontData;"]}], "num": 10454}