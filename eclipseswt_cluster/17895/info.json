{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5df3fd56c450f739704e54e321cf377", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70250f22640098c8b484c1021984e1ad", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/TreeItem.java", "commitBeforeChange": "904df56644c9070d336843631d767da03676b792", "commitAfterChange": "87a1ac5b2a06bd283b0c41b00b1c4487449dea98", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void removeAll ()", "signatureAfterChange": " public void removeAll ()", "diff": ["-\tint length = OS.gtk_tree_model_iter_n_children (parent.modelHandle, handle);", "+\tint /*long*/ modelHandle = parent.modelHandle;", "+\tint length = OS.gtk_tree_model_iter_n_children (modelHandle, handle);", "-\tint [] index = new int [1];", "-\twhile (OS.gtk_tree_model_iter_children (parent.modelHandle, iter, handle)) {", "-\t\tOS.gtk_tree_model_get (parent.modelHandle, iter, Tree.ID_COLUMN, index, -1);", "-\t\tif (index [0] != -1) {", "-\t\t\tTreeItem item = parent.items [index [0]];", "-\t\t\tif (item != null && !item.isDisposed ()) {", "-\t\t\t\titem.dispose ();", "-\t\t\t}", "+\tif (iter == 0) error (SWT.ERROR_NO_HANDLES);", "+\tif (parent.fixAccessibility ()) {", "+\t\tparent.ignoreAccessibility = true;", "+\t}", "+\tint /*long*/ selection = OS.gtk_tree_view_get_selection (parent.handle);", "+\tint [] value = new int [1];", "+\twhile (OS.gtk_tree_model_iter_children (modelHandle, iter, handle)) {", "+\t\tOS.gtk_tree_model_get (modelHandle, iter, Tree.ID_COLUMN, value, -1);", "+\t\tTreeItem item = value [0] != -1 ? parent.items [value [0]] : null;", "+\t\tif (item != null && !item.isDisposed ()) {", "+\t\t\titem.dispose ();", "+\t\t} else {", "+\t\t\tOS.g_signal_handlers_block_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\t\t\tOS.gtk_tree_store_remove (modelHandle, iter);", "+\t\t\tOS.g_signal_handlers_unblock_matched (selection, OS.G_SIGNAL_MATCH_DATA, 0, 0, 0, 0, CHANGED);", "+\tif (parent.fixAccessibility ()) {", "+\t\tparent.ignoreAccessibility = false;", "+\t\tOS.g_object_notify (parent.handle, OS.model);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73e332dea54ff5066229a36d16448922", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/wpf/org/eclipse/swt/widgets/Control.java", "commitBeforeChange": "e19b8929298db4194771a475b4b9ef56a8238374", "commitAfterChange": "ca0c5209be7fe694c5578ad160491b05c77a1894", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 68, "signatureBeforeChange": "  void HandlePreviewMouseDown (int sender, int e)", "signatureAfterChange": "  void HandlePreviewMouseDown (int sender, int e)", "diff": ["+\t", "+\tboolean dragging = false;", "+\tif (OS.MouseButtonEventArgs_ChangedButton (e) == 0) {", "+\t\tif ((state & DRAG_DETECT) != 0 && hooks (SWT.DragDetect)) {", "+\t\t\tint point = OS.MouseEventArgs_GetPosition (e, handle);", "+\t\t\tdouble x = OS.Point_X (point);", "+\t\t\tdouble y = OS.Point_Y (point);", "+\t\t\tOS.GCHandle_Free (point);", "+\t\t\tdragging = dragDetect (x, y);", "+\t\t}", "+\t}", "+\t", "+\tif (dragging) {", "+\t\tsendDragEvent (e);", "+\t}", "+\t", "+\tif (display.dragMouseUp != 0) {", "+\t\tsendMouseEvent (SWT.MouseUp, display.dragMouseUp, false);\t", "+\t\tOS.GCHandle_Free (display.dragMouseUp);", "+\t\tdisplay.dragMouseUp = 0;", "+\t}"]}], "num": 17895}