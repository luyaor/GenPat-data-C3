{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55f1490b3520e4bfc299cd5f117c0be5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900e8bf5bd146ccf0d280553a2398d02", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "b8ad17c3d19acc6d7f92ed55bd627bbaa4689df8", "commitAfterChange": "77d858e5c6ed3ebe8fa843c1bb721ed789ee186a", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "signatureAfterChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "diff": ["-\t\t\t\t\t\t\tCairo.cairo_reset_clip (cr);", "+\t\t\t\t\t\t\tif (!OS.GTK3) {", "+\t\t\t\t\t\t\t\tCairo.cairo_reset_clip (cr);", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t// GTK >= 3.10 sends a cairo for the window of the tree widget, but not for for the bin window.", "-\t\t\t\t\t// Besides, GTK 3.10 >= uses the same cairo for all the tree's children. SWT invalidates the cairo.", "-\t\t\t\t\t// The fix is to create a new cairo.", "-\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "-\t\t\t\t\t\t// A temporary fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=427480", "-\t\t\t\t\t\t// Force native painting", "-//\t\t\t\t\t\tif (window == 0) {", "-//\t\t\t\t\t\t\twindow = OS.gtk_widget_get_window(handle);", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tif (window != 0) {", "-//\t\t\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "-//\t\t\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "-//\t\t\t\t\t\t\tdrawBackground (control, window, 0, 0, rect.x, r.y, r.width, r.height);", "-//\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "+\t\t\t\t\tif (!OS.GTK3) {", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\tif (OS.GTK3){", "-\t\t\t\t\tgcData.cairo = OS.gdk_cairo_create(OS.gtk_widget_get_window(handle));", "+\t\t\t\t\tgcData.cairo = cr;", "-\t\t\t\t// Since we create a new cairo, we have to clip it", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0) && cr != 0) {", "-\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "-\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "-\t\t\t\t\tgc.setClipping(rect.x, r.y, r.width, r.height);", "-\t\t\t\t} else {", "+", "+\t\t\t\tif (!OS.GTK3) {", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\tif (OS.GTK3) {", "-\t\t\t\t\tif (OS.GTK3) {", "-\t\t\t\t\t if (OS.GTK_VERSION < OS.VERSION(3, 9, 0)) {", "-\t\t\t\t\t\t// GTK >= 3.10 creates a different background if we use this code", "-\t\t\t\t\t\tCairo.cairo_save (cr);", "-\t\t\t\t\t\tCairo.cairo_reset_clip (cr);", "-\t\t\t\t\t\tlong /*int*/ context = OS.gtk_widget_get_style_context (widget);", "-\t\t\t\t\t\tOS.gtk_style_context_save (context);", "-\t\t\t\t\t\tOS.gtk_style_context_add_class (context, OS.GTK_STYLE_CLASS_CELL);", "-\t\t\t\t\t\tOS.gtk_style_context_set_state (context, OS.GTK_STATE_FLAG_SELECTED);", "-\t\t\t\t\t\tOS.gtk_render_background(context, cr, rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\t\t\tOS.gtk_style_context_restore (context);", "-\t\t\t\t\t\tCairo.cairo_restore (cr);", "-\t\t\t\t\t }", "-\t\t\t\t\t} else {", "+\t\t\t\t\tif (!OS.GTK3) {", "-\t\tGC gc = new GC (this);", "+", "+\t\tGC gc;", "+\t\tif (OS.GTK3){", "+\t\t\tGCData gcData = new GCData();", "+\t\t\tgcData.cairo = cr;", "+\t\t\tgc = GC.gtk_new(this, gcData );", "+\t\t} else {", "+\t\t\tgc = new GC (this);", "+\t\t}", "-\t\t\t\t// GTK >= 3.10 sends a cairo for the window of the tree widget, but not for for the bin window.", "-\t\t\t\t// Besides, GTK >= 3.10 uses the same cairo for all the tree's children. SWT invalidates the cairo.", "-\t\t\t\t// The fix is to create a new cairo.", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\tif (OS.GTK3){", "-\t\t\t\t\tgcData.cairo = OS.gdk_cairo_create(OS.gtk_widget_get_window(handle));", "+\t\t\t\t\tgcData.cairo = cr;", "-\t\t\t\t// Since we create a new cairo, we have to clip it", "-\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0) && (cr != 0)) {", "-\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "-\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "-\t\t\t\t\tgc.setClipping(clipRect.x, r.y, r.width, r.height);", "-\t\t\t\t} else {", "+", "+\t\t\t\tif (!OS.GTK3){", "+", "-\t\t\t\tif (OS.GTK_VERSION < OS.VERSION(3, 9, 0)) {", "+\t\t\t\tif (!OS.GTK3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee3298bf6b895dbc74968214b97c31f", "repository": "http://git.eclipse.org/gitroot/platform/eclipse.platform.swt.git", "fileName": "bundles/org.eclipse.swt/Eclipse SWT/gtk/org/eclipse/swt/widgets/Tree.java", "commitBeforeChange": "0b40dc8adaa1fa3feafc9b7a1c5e53734db7ca70", "commitAfterChange": "090e8dfef891d537ee91a695bdd9547272135b17", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "signatureAfterChange": "  void rendererRender (long cell, long cr, long window, long widget, long background_area, long cell_area, long expose_area, long flags)", "diff": ["-\t\t\t\t\tif (cr != 0) {", "-\t\t\t\t\t\tCairo.cairo_save (cr);", "-\t\t\t\t\t\tCairo.cairo_reset_clip (cr);", "-\t\t\t\t\t}", "-\t\t\t\t\tdrawBackground (control, window, cr, 0, rect.x, rect.y, rect.width, rect.height);", "-\t\t\t\t\tif (cr != 0) {", "-\t\t\t\t\t\tCairo.cairo_restore (cr);", "+\t\t\t\t\t// GTK >= 3.10 sends a cairo for the window of the tree widget, but not for for the bin window.", "+\t\t\t\t\t// Besides, GTK 3.10 >= uses the same cairo for all the tree's children. SWT invalidates the cairo.", "+\t\t\t\t\t// The fix is to create a new cairo.", "+\t\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\t\t\tif (window == 0) {", "+\t\t\t\t\t\t\twindow = OS.gtk_widget_get_window(handle);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (window != 0) {", "+\t\t\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "+\t\t\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "+\t\t\t\t\t\t\tdrawBackground (control, window, 0, 0, rect.x, r.y, r.width, r.height);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (cr != 0) {", "+\t\t\t\t\t\t\tCairo.cairo_save (cr);", "+\t\t\t\t\t\t\tCairo.cairo_reset_clip (cr);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tdrawBackground (control, window, cr, 0, rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t\t\tif (cr != 0) {", "+\t\t\t\t\t\t\tCairo.cairo_restore (cr);", "+\t\t\t\t\t\t}", "-\t\t\t\tGC gc = new GC (this);", "+\t\t\t\tGC gc;", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\t\tGCData gcData = new GCData();", "+\t\t\t\t\tgcData.cairo = OS.gdk_cairo_create(OS.gtk_widget_get_window(handle));", "+\t\t\t\t\tgc = GC.gtk_new(this, gcData );", "+\t\t\t\t} else {", "+\t\t\t\t\tgc = new GC (this);", "+\t\t\t\t}", "-\t\t\t\tgc.setClipping (rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t// Since we create a new cairo, we have to clip it", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0) && cr != 0) {", "+\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "+\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "+\t\t\t\t\tgc.setClipping(rect.x, r.y, r.width, r.height);", "+\t\t\t\t} else {", "+\t\t\t\t\tgc.setClipping (rect.x, rect.y, rect.width, rect.height);", "+\t\t\t\t}", "+\t\t\t\t\t if (OS.GTK_VERSION < OS.VERSION(3, 9, 0)) {", "+\t\t\t\t\t\t// GTK >= 3.10 creates a different background if we use this code", "+\t\t\t\t\t }", "-\t\t\t\tGC gc = new GC (this);", "+\t\t\t\tGC gc;", "+\t\t\t\t// GTK >= 3.10 sends a cairo for the window of the tree widget, but not for for the bin window.", "+\t\t\t\t// Besides, GTK >= 3.10 uses the same cairo for all the tree's children. SWT invalidates the cairo.", "+\t\t\t\t// The fix is to create a new cairo.", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0)) {", "+\t\t\t\t\tGCData gcData = new GCData();", "+\t\t\t\t\tgcData.cairo = OS.gdk_cairo_create(OS.gtk_widget_get_window(handle));", "+\t\t\t\t\tgc = GC.gtk_new(this, gcData );", "+\t\t\t\t} else {", "+\t\t\t\t\tgc = new GC(this);", "+\t\t\t\t}", "-\t\t\t\tgc.setClipping (clipRect.x, clipRect.y, clipRect.width, clipRect.height);", "+\t\t\t\t// Since we create a new cairo, we have to clip it", "+\t\t\t\tif (OS.GTK_VERSION >= OS.VERSION(3, 9, 0) && (cr != 0)) {", "+\t\t\t\t\tGdkRectangle r = new GdkRectangle();", "+\t\t\t\t\tOS.gdk_cairo_get_clip_rectangle(cr, r);", "+\t\t\t\t\tgc.setClipping(clipRect.x, r.y, r.width, r.height);", "+\t\t\t\t} else {", "+\t\t\t\t\tgc.setClipping (clipRect.x, clipRect.y, clipRect.width, clipRect.height);", "+\t\t\t\t}", "-\t\t\t\tsendEvent (SWT.PaintItem, event);\t", "+\t\t\t\tsendEvent (SWT.PaintItem, event);"]}], "num": 28215}